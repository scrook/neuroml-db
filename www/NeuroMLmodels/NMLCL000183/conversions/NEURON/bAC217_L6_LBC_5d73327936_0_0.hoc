// Cell: bAC217_L6_LBC_5d73327936_0_0
/*
{
  "id" : "bAC217_L6_LBC_5d73327936_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.38674, -8.58166, 0.0, 3.0615", "1.23261, -7.73621, 0.0, 5.13448", "1.07848, -6.89077, 0.0, 6.50208", "0.924343, -6.04533, 0.0, 7.8079", "0.770211, -5.19988, 0.0, 9.46525", "0.616078, -4.35444, 0.0, 10.7445", "0.461945, -3.509, 0.0, 11.53", "0.307812, -2.66355, 0.0, 11.964", "0.15368, -1.81811, 0.0, 12.1762", "-4.52973E-4, -0.972666, 0.0, 12.4031", "-0.154586, -0.127223, 0.0, 13.0722", "-0.308718, 0.71822, 0.0, 13.1077", "-0.462851, 1.56366, 0.0, 12.7375", "-0.616984, 2.40911, 0.0, 12.4776", "-0.771117, 3.25455, 0.0, 12.0451", "-0.925249, 4.09999, 0.0, 11.2537", "-1.07938, 4.94544, 0.0, 9.96214", "-1.23351, 5.79088, 0.0, 7.85651", "-1.38765, 6.63632, 0.0, 6.70863", "-1.54178, 7.48177, 0.0, 5.30209", "-1.69591, 8.32721, 0.0, 3.29069" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-2.29925, 7.84783, -7.17, 0.86", "-5.03196, 9.48485, -6.84226, 0.86", "-6.56365, 10.2655, -6.46031, 0.86", "-7.93298, 10.923, -5.83883, 0.86", "-9.41444, 11.6734, -4.86278, 0.86", "-11.4772, 12.7575, -3.38952, 0.86", "-12.0741, 13.0751, -2.94629, 0.86", "-14.4052, 14.2334, -1.02762, 0.86", "-16.7429, 15.5003, 1.0758, 0.86", "-19.1621, 16.9638, 3.46356, 0.86", "-20.5387, 17.9104, 5.00437, 0.86", "-22.1732, 19.1481, 6.99447, 0.86", "-23.2905, 20.0088, 8.41179, 0.86", "-24.2985, 20.7757, 9.62673, 0.86", "-24.8743, 21.1848, 10.2374, 0.86", "-26.1694, 22.0186, 11.4776, 0.86", "-27.2127, 22.6302, 12.382, 0.86", "-28.5572, 23.3053, 13.2791, 0.86", "-30.5038, 24.0606, 14.0789, 0.86", "-32.9645, 24.8874, 14.8666, 0.86", "-33.9143, 25.1792, 15.0839, 0.86", "-35.1846, 25.5584, 15.2184, 0.86", "-36.6391, 26.0153, 15.2254, 0.86", "-39.0152, 26.7511, 14.9801, 0.86" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.18075, 7.22383, -7.84, 0.98", "2.698, 8.29828, -5.44665, 0.98", "3.45317, 10.2386, -1.2563, 1.35", "4.30882, 12.6311, 3.73353, 1.1", "4.7958, 14.0064, 6.56677, 0.86", "5.51773, 15.9963, 10.639, 0.73", "5.66644, 16.3824, 11.4343, 0.73", "5.74711, 16.6364, 11.9999, 0.73", "5.7945, 16.9493, 12.6024, 0.73", "5.77898, 17.1626, 13.2706, 0.73", "5.82895, 17.2239, 13.6213, 0.73", "6.14001, 17.2117, 14.5199, 0.73", "6.41872, 17.1459, 15.6112, 0.73", "6.53489, 17.1268, 16.4356, 0.73", "6.5374, 17.1695, 16.9724, 0.73", "6.4602, 17.3126, 17.4785, 0.73", "6.32795, 17.5395, 17.8931, 0.73", "6.0651, 17.9544, 18.5807, 0.73", "5.80568, 18.326, 19.1789, 0.73", "5.57954, 18.6104, 19.6121, 0.73", "5.22198, 19.0145, 20.21, 0.73", "4.59753, 19.6989, 21.1536, 0.73", "3.10535, 21.3841, 23.2088, 0.73", "2.54189, 22.0161, 23.9467, 0.73", "1.67748, 22.9821, 25.0296, 0.73", "1.30091, 23.4315, 25.4955, 0.73", "0.855596, 24.053, 26.0634, 0.73", "0.250547, 25.1512, 26.8318, 0.73", "0.0536738, 26.8249, 27.8817, 0.73", "0.201973, 27.0753, 28.2057, 0.73", "0.548814, 27.4252, 28.9192, 0.73", "0.883239, 27.7353, 29.656, 0.73", "1.78834, 28.561, 31.8128, 0.61", "3.35487, 30.0737, 35.8849, 0.86", "4.97918, 31.7446, 40.183, 0.86", "6.48208, 33.4036, 44.2984, 0.86", "6.84541, 33.8618, 45.3692, 0.86", "7.33236, 34.6108, 46.9918, 0.86", "8.07853, 36.0377, 49.889, 0.86", "8.417, 36.8121, 51.2603, 0.86", "8.58283, 37.2255, 51.9184, 0.86", "8.92639, 38.0571, 53.1848, 0.86", "9.23983, 38.8539, 54.4374, 0.86", "9.73055, 40.4327, 57.0669, 0.86", "9.91619, 41.4836, 58.9839, 0.86", "9.92409, 42.259, 60.4951, 0.86", "9.81467, 43.0887, 62.1019, 0.86", "9.53308, 44.1299, 63.9857, 0.86", "9.10178, 45.1894, 65.6557, 0.86", "8.58254, 46.2213, 66.9771, 0.86", "7.83684, 47.5477, 68.4802, 0.86", "7.19179, 48.5566, 69.5598, 0.86", "6.46914, 49.5852, 70.6063, 0.86", "6.07043, 50.1627, 71.1125, 0.86", "5.66945, 50.768, 71.5946, 0.86", "4.91506, 51.9478, 72.5616, 0.86", "4.40318, 52.7327, 73.2944, 0.86", "4.15833, 53.1295, 73.7195, 0.86", "3.66241, 54.1164, 74.8311, 0.86", "3.34147, 55.2945, 76.0167, 0.86", "3.17835, 56.7943, 77.4751, 0.86", "3.14987, 57.6398, 78.2519, 0.86", "3.17862, 58.3752, 78.9128, 0.86", "3.33771, 60.021, 80.3748, 0.86", "3.77078, 62.4528, 82.5001, 0.86", "4.16701, 63.8882, 83.5907, 0.86" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-7.01925, 2.39758, -4.51, 1.59", "-10.699, 3.36351, -4.51, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "6.22075, 4.79608, -12.12, 1.22", "6.22075, 4.79608, -12.12, 1.22", "11.5163, 7.57241, -13.2632, 1.22", "21.3526, 12.7294, -15.3868, 1.47", "28.4617, 16.4565, -16.9216, 1.71", "37.0914, 20.9809, -18.7847, 1.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.85075, -9.20492, -0.0100002, 2.32", "1.98766, -9.46179, -0.0160835, 2.32", "5.84094, -16.6912, -0.187295, 2.32", "6.4077, -17.7545, -0.212478, 2.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.56925, 5.81008, 0.0, 1.47", "-7.22655, 8.60428, -0.733848, 1.47", "-8.98627, 11.0566, -1.51435, 1.47", "-10.5317, 12.842, -2.23408, 1.59", "-11.468, 13.8009, -2.67169, 1.71", "-13.0664, 15.2308, -3.36967, 1.71", "-14.5644, 16.4455, -3.90351, 1.59", "-16.0801, 17.3558, -4.49005, 1.47", "-17.9208, 18.2026, -5.16713, 1.47", "-19.0137, 18.6203, -5.49221, 1.47", "-20.6889, 19.2107, -5.91297, 1.47", "-22.9733, 20.0143, -6.26584, 1.35", "-26.4937, 21.3647, -6.68103, 1.1", "-28.764, 22.3297, -6.8484, 1.1", "-31.2698, 23.5108, -6.94362, 1.1", "-33.1254, 24.7856, -6.99025, 1.1", "-35.2423, 26.6642, -6.9779, 1.1", "-36.3773, 27.7959, -6.9362, 0.98", "-37.0993, 28.5571, -6.88058, 0.98", "-38.1692, 29.6884, -6.87999, 0.86", "-44.078, 35.5816, -7.17213, 1.1", "-45.9954, 37.4531, -7.34312, 0.86", "-50.0506, 41.4807, -8.15576, 1.35", "-53.5081, 44.9392, -8.97873, 1.22", "-57.2123, 48.5369, -9.95864, 1.22", "-59.9346, 51.1059, -10.7568, 0.98", "-63.4012, 54.507, -11.973, 1.35", "-68.0659, 59.5084, -13.7739, 1.35", "-70.8548, 62.7503, -14.8963, 0.86", "-73.8673, 66.396, -16.0451, 0.98", "-74.9293, 67.6956, -16.3891, 0.49", "-80.2806, 74.1412, -17.9161, 0.24", "-82.1107, 76.1028, -18.278, 0.24", "-83.4895, 77.4384, -18.3896, 0.61", "-84.5749, 78.4669, -18.481, 0.61", "-86.0643, 79.7978, -18.5476, 0.61", "-87.4149, 80.9037, -18.4224, 0.61", "-90.5, 83.4192, -17.8639, 1.22", "-94.5815, 87.2807, -16.8023, 0.86", "-96.3163, 89.2106, -16.2534, 1.35", "-98.2676, 91.3365, -15.3744, 1.35", "-102.505, 95.7444, -13.2877, 0.73", "-105.458, 98.4649, -11.8468, 1.1", "-108.358, 100.791, -10.3868, 0.73", "-111.616, 102.962, -8.95673, 1.47", "-120.1, 107.919, -5.94111, 0.73", "-123.474, 109.642, -4.96187, 0.24", "-128.565, 111.763, -3.93551, 1.22", "-132.607, 113.205, -3.36823, 0.37", "-138.655, 115.212, -2.9542, 1.1", "-141.232, 116.067, -2.97241, 0.49", "-146.202, 117.909, -3.56391, 1.47", "-151.17, 119.819, -4.29632, 0.37", "-155.387, 121.475, -5.26541, 1.1", "-157.742, 122.441, -5.93841, 0.12", "-163.477, 124.912, -7.71382, 1.1", "-166.46, 126.27, -8.70888, 0.61", "-169.208, 127.674, -9.74598, 1.1", "-172.7, 129.779, -11.0827, 0.61", "-175.619, 131.992, -12.2593, 0.24", "-176.129, 132.456, -12.4813, 0.73", "-177.903, 134.492, -13.2232, 0.24", "-179.444, 136.438, -13.8802, 0.86", "-181.676, 139.616, -14.8596, 0.12", "-184.811, 144.301, -16.1253, 0.86", "-186.634, 147.093, -17.0691, 0.24", "-189.856, 152.158, -18.9156, 1.22", "-191.534, 154.834, -19.962, 0.61", "-194.937, 160.201, -22.1222, 0.49", "-196.897, 163.274, -23.311, 1.84", "-200.07, 168.373, -25.2122, 0.61", "-200.997, 170.018, -25.7874, 0.98", "-202.063, 172.063, -26.4428, 0.12", "-203.185, 174.42, -27.102, 0.49", "-205.037, 178.661, -28.2119, 0.12", "-205.894, 180.93, -28.6783, 0.37", "-206.66, 183.193, -28.9387, 0.12", "-207.532, 186.043, -29.2578, 1.1", "-208.343, 189.134, -29.6381, 0.24", "-208.58, 190.129, -29.7848, 0.49", "-209.078, 192.249, -30.1523, 0.49", "-209.684, 195.007, -30.6713, 0.12", "-209.86, 196.003, -30.8659, 0.24", "-210.254, 198.516, -31.3164, 0.24", "-210.519, 200.315, -31.566, 0.24", "-210.822, 202.39, -31.8744, 0.24", "-211.013, 204.08, -32.1561, 0.24", "-211.157, 206.328, -32.5802, 0.24", "-218.854, 217.282, -31.5785, 0.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009,
    "numberInternalDivisions" : 17
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.69591, 8.32721, 0.0, 0.638794", "-4.38621, 23.084, 0.0, 0.638794", "-7.07651, 37.8408, 0.0, 0.638794" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.16701, 63.8882, 83.5907, 0.73", "4.35734, 65.0539, 84.292, 0.73", "4.53899, 67.0205, 85.488, 0.73", "4.74648, 70.3562, 87.588, 0.73", "4.8827, 73.5062, 89.5688, 0.73", "4.93133, 75.1912, 90.6215, 0.73", "4.93172, 79.8609, 93.4955, 0.37", "4.77857, 82.7306, 95.3538, 0.49", "4.54606, 84.8419, 96.7879, 0.49", "4.25099, 86.4198, 97.8816, 0.49", "3.9526, 87.8593, 98.7807, 0.49", "3.51944, 89.8932, 99.9299, 0.49", "2.91453, 92.7667, 101.3, 0.49", "2.51365, 94.6018, 102.078, 0.49", "1.8393, 97.5395, 103.034, 0.12", "1.13691, 100.691, 103.82, 0.12", "0.857483, 102.029, 104.092, 0.12", "0.159011, 105.365, 104.783, 0.24", "-0.274401, 107.435, 105.258, 0.24", "-0.899435, 110.44, 106.144, 0.49", "-1.22446, 112.398, 106.938, 0.49", "-1.38962, 113.812, 107.742, 0.49", "-1.42139, 117.296, 110.403, 0.49", "-1.26794, 119.193, 112.24, 0.49", "-1.05642, 120.355, 113.631, 0.49", "-0.653441, 121.614, 115.533, 0.49", "-0.234779, 122.5, 117.084, 0.49", "0.259796, 123.159, 118.275, 0.49" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "4.16701, 63.8882, 83.5907, 0.73", "5.07255, 66.3476, 85.3942, 0.73", "5.42984, 67.4876, 86.2393, 0.73", "6.18235, 70.1432, 88.2486, 0.73", "6.54808, 71.4338, 89.2252, 0.73", "7.43368, 74.559, 91.5898, 0.73", "7.95959, 76.4149, 92.9941, 0.73", "8.19072, 77.5872, 93.8941, 0.73", "8.29095, 78.2369, 94.4439, 0.73" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-10.699, 3.36351, -4.51, 1.22", "-13.2536, 3.33785, -4.36495, 1.22", "-15.1921, 3.29758, -4.1754, 0.98", "-17.0504, 3.29639, -3.90022, 0.98", "-18.6611, 3.35799, -3.58158, 0.98", "-21.3533, 3.57829, -2.801, 0.98", "-23.6264, 3.86231, -1.91165, 0.98", "-24.8982, 4.06699, -1.18019, 0.98", "-25.909, 4.25963, -0.500707, 0.98", "-26.8497, 4.58064, 0.299108, 0.98", "-28.3178, 5.3623, 1.98966, 0.98", "-28.8985, 5.85607, 3.02574, 1.35", "-29.9907, 7.23012, 5.78756, 1.35" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-10.699, 3.36351, -4.51, 1.35", "-13.409, 0.678678, -4.33886, 1.35", "-15.6018, -1.5104, -4.3627, 1.1", "-18.6985, -5.0115, -4.13098, 1.1", "-21.6262, -8.20263, -3.57352, 1.1", "-23.2382, -9.94007, -3.19068, 1.1", "-25.6197, -12.5613, -2.53642, 1.1", "-26.3623, -13.4222, -2.28277, 1.1", "-30.417, -18.376, -0.46077, 1.1", "-33.6831, -22.3944, 1.76545, 1.1", "-35.273, -24.5531, 3.14238, 1.1", "-36.9177, -27.056, 4.85077, 1.1", "-37.8055, -28.3631, 5.92182, 1.1", "-39.8374, -31.2471, 8.52151, 0.98", "-44.2712, -37.3753, 14.3368, 0.98", "-46.1734, -40.0147, 17.0145, 0.98", "-49.408, -44.2347, 21.5619, 0.86", "-53.795, -49.5007, 27.4386, 0.86", "-54.4271, -50.1917, 28.212, 0.86", "-56.4802, -52.2696, 30.4498, 0.86", "-58.7165, -54.473, 32.6813, 0.86", "-60.4886, -55.9992, 34.2849, 0.86", "-63.251, -58.2794, 36.4762, 0.86", "-65.2241, -60.1167, 37.9895, 0.86", "-68.4221, -63.3455, 40.5882, 0.86", "-69.9794, -65.0375, 41.9747, 0.86", "-71.6889, -66.9979, 43.5729, 0.86", "-72.8551, -68.3935, 44.809, 0.86", "-75.1543, -71.2232, 47.749, 0.86", "-76.274, -72.6038, 49.371, 0.86", "-77.8357, -74.4835, 52.0099, 0.86", "-79.1462, -75.9801, 54.2511, 0.86", "-80.294, -77.2779, 56.1941, 0.86", "-82.9798, -80.1079, 60.4215, 0.86", "-83.6259, -80.7409, 61.4002, 0.86", "-87.218, -84.0437, 66.6378, 0.86", "-89.0865, -85.7613, 69.2655, 0.86", "-90.8472, -87.4067, 71.6207, 0.86", "-93.1045, -89.3663, 74.3364, 0.86", "-96.9063, -92.4476, 78.4609, 0.86", "-98.3315, -93.5358, 79.9539, 0.86", "-101.563, -95.7247, 83.1046, 0.86", "-104.153, -97.3784, 85.7256, 0.86", "-108.346, -99.8414, 89.9257, 0.86", "-110.131, -100.865, 91.6684, 0.86", "-111.598, -101.675, 93.0241, 0.86", "-115.005, -103.381, 96.2091, 0.86", "-117.824, -104.571, 98.7488, 0.86", "-119.608, -105.268, 100.341, 0.86", "-122.84, -106.407, 103.241, 0.86", "-125.186, -107.238, 105.213, 0.86", "-128.969, -108.666, 108.157, 0.86", "-131.217, -109.578, 109.804, 0.86", "-133.884, -110.711, 111.645, 0.86", "-139.077, -113.195, 115.161, 0.86", "-142.619, -115.205, 117.565, 0.86", "-145.27, -116.981, 119.3, 0.86", "-148.652, -119.63, 121.385, 0.86", "-151.534, -122.093, 123.123, 0.86", "-153.21, -123.567, 124.093, 0.86", "-156.198, -126.295, 125.884, 0.86", "-159.185, -129.026, 127.648, 0.86", "-161.695, -131.419, 129.028, 0.86", "-165.467, -135.143, 130.977, 0.86", "-167.587, -137.234, 132.046, 0.86", "-170.519, -140.01, 133.508, 0.86", "-174.091, -143.291, 135.236, 0.86", "-176.691, -145.78, 136.571, 0.86", "-178.809, -147.854, 137.59, 0.86" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "37.0914, 20.9809, -18.7847, 0.73", "38.3486, 26.4799, -19.6197, 0.73", "39.1457, 30.2863, -20.0728, 0.86", "39.7492, 33.6878, -20.0135, 0.86", "40.1289, 36.1593, -19.8589, 0.86", "40.6925, 40.1908, -19.6037, 0.73", "41.5019, 44.8911, -19.3783, 0.73", "41.9293, 46.6476, -19.3058, 0.73", "44.5794, 52.2801, -21.6256, 0.73", "46.3418, 54.7667, -23.7461, 0.73", "47.9848, 56.6869, -26.0803, 0.73", "49.8182, 58.6068, -28.8096, 0.73", "53.2998, 61.9581, -33.9416, 0.73", "60.2998, 68.4359, -44.2127, 0.73", "61.077, 69.0896, -45.3047, 0.73", "64.7382, 71.9288, -50.0359, 0.73", "66.3748, 73.1767, -52.0296, 0.73", "68.0127, 74.5477, -53.9265, 0.73", "70.1958, 76.5358, -56.0464, 0.73", "73.4846, 79.6575, -58.6506, 0.73", "76.5613, 82.8786, -61.0728, 0.73", "78.4424, 85.0609, -62.4575, 0.73", "80.4703, 87.7028, -63.9776, 0.73", "82.7502, 91.3518, -65.7755, 0.73", "83.4934, 92.9298, -66.3939, 0.73", "85.0312, 97.0525, -67.7759, 0.73", "85.976, 99.9844, -68.6074, 0.73", "86.7083, 102.452, -69.2641, 0.73", "87.5097, 105.334, -70.0271, 0.49", "88.7632, 110.826, -71.4545, 0.61", "96.7751, 119.68, -80.3739, 0.61", "108.222, 126.496, -87.1597, 0.61", "119.841, 130.082, -95.9604, 0.61", "130.874, 131.712, -106.034, 0.61", "142.356, 135.918, -114.726, 0.61" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "37.0914, 20.9809, -18.7847, 1.35", "40.5277, 22.0894, -18.8765, 1.35" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.4077, -17.7545, -0.212478, 1.1", "5.75588, -29.2956, 1.22922, 1.1", "5.68954, -32.899, 1.71704, 1.1", "5.90751, -39.2439, 2.79731, 1.1", "6.89096, -46.1308, 3.46281, 1.1", "7.09701, -47.2411, 3.5241, 1.1", "7.57951, -49.581, 3.58748, 1.1", "8.32082, -52.2149, 3.49117, 1.1", "9.9857, -57.1536, 3.36118, 1.1", "13.7773, -66.7849, 3.21733, 1.1", "17.3603, -74.9182, 3.19675, 1.1", "19.2499, -78.9886, 3.19831, 1.1", "22.6532, -86.2025, 3.20131, 0.86", "26.0975, -93.8174, 3.21588, 0.86", "28.1795, -98.6814, 3.34068, 0.86", "30.9963, -105.957, 3.85974, 0.86", "33.123, -111.313, 4.1621, 0.86", "33.9067, -113.486, 4.2889, 0.86", "36.1065, -120.221, 4.57149, 0.86", "38.0389, -126.87, 4.77058, 0.61", "39.4538, -132.271, 4.85835, 0.61", "40.4284, -136.015, 4.99098, 0.61", "42.0127, -141.574, 5.33382, 0.61", "43.3501, -145.444, 5.62818, 0.61", "44.3209, -147.784, 5.82877, 0.61", "45.8791, -151.295, 6.11113, 0.24", "49.8408, -160.013, 6.85371, 0.37", "51.2003, -163.054, 7.12598, 0.37", "52.7452, -166.632, 7.44602, 0.37", "53.661, -168.932, 7.60923, 0.37", "54.9, -172.269, 7.71315, 0.37", "55.8079, -174.583, 7.71893, 0.37", "57.0269, -177.587, 7.57492, 0.37", "58.657, -181.728, 7.34082, 0.12", "60.2447, -185.983, 7.07012, 0.37", "61.1893, -188.478, 6.85033, 0.37", "63.1296, -193.602, 6.58657, 0.61", "64.5141, -197.001, 6.52848, 0.61", "66.4743, -201.973, 6.54264, 0.61", "67.6835, -204.929, 6.73748, 0.61", "69.509, -209.324, 7.25854, 0.12", "73.7554, -219.356, 8.87822, 0.61", "75.9326, -224.535, 9.95219, 0.61", "78.6939, -230.584, 11.4767, 1.22", "82.9689, -239.964, 14.2938, 0.49", "84.4684, -243.411, 15.4115, 0.49", "86.9534, -249.627, 17.5483, 0.61", "88.9278, -254.812, 19.4374, 0.12", "90.5924, -259.817, 21.4181, 0.49", "92.8195, -267.241, 24.6489, 0.49", "93.9335, -272.795, 27.2485, 0.49", "94.7333, -277.419, 29.4647, 0.37", "95.1846, -281.062, 31.2619, 0.24", "95.5996, -286.687, 34.1756, 0.49", "95.6462, -292.358, 37.44, 0.49", "95.5782, -299.472, 42.1332, 0.49" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.4077, -17.7545, -0.212478, 1.71", "6.62078, -21.9382, -2.49635, 1.71", "6.77225, -24.9123, -4.11993, 1.47", "6.92948, -27.9993, -5.80515, 1.71" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.07651, 37.8408, 0.0, 0.49", "-9.76681, 52.5975, 0.0, 0.49", "-12.4571, 67.3543, 0.0, 0.49" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-29.9907, 7.23012, 5.78756, 0.49", "-33.8734, 4.13626, 7.65547, 0.49", "-38.6385, 0.767239, 10.1146, 0.37", "-42.3021, -1.55857, 12.0898, 0.37", "-44.0244, -2.61659, 13.0264, 0.37", "-47.2984, -4.44303, 14.9823, 0.37", "-49.8512, -5.74275, 16.6492, 0.37", "-52.3158, -6.72418, 18.4131, 0.37", "-54.822, -7.51703, 20.3375, 0.37", "-57.867, -8.3232, 22.6937, 0.37", "-64.1838, -9.82484, 27.5676, 0.37", "-68.3447, -10.714, 30.7408, 0.37", "-71.0675, -11.2105, 32.7269, 0.37", "-76.7756, -12.0772, 36.5952, 0.37", "-79.9274, -12.4818, 38.6003, 0.37", "-83.6491, -12.886, 40.71, 0.37", "-87.1593, -13.3013, 42.39, 0.37", "-93.2128, -14.1305, 44.9978, 0.37", "-96.7522, -14.7084, 46.4431, 0.37", "-99.9115, -15.2988, 47.6731, 0.37", "-105.635, -16.5548, 49.9977, 0.37", "-109.966, -17.63, 51.8133, 0.37", "-112.833, -18.4137, 53.0592, 0.37", "-116.518, -19.4571, 54.6786, 0.37", "-120.009, -20.4005, 56.1149, 0.37", "-126.047, -21.9554, 58.3291, 0.37", "-129.407, -22.7957, 59.4951, 0.37", "-133.513, -23.7711, 60.8905, 0.37", "-138.45, -24.8628, 62.4623, 0.37", "-142.402, -25.7357, 63.764, 0.37", "-148.302, -27.1527, 65.671, 0.37", "-157.201, -29.6423, 68.341, 0.37", "-163.065, -31.6731, 70.0345, 0.37", "-168.158, -33.9222, 71.423, 0.37", "-173.064, -36.6815, 72.8379, 0.37", "-177.376, -39.6392, 74.121, 0.37", "-180.699, -42.4741, 75.1327, 0.37", "-183.831, -45.6274, 76.1566, 0.37", "-187.174, -49.3258, 77.689, 0.37", "-193.485, -56.2637, 80.9166, 0.37", "-196.575, -59.4039, 82.4584, 0.37", "-199.696, -62.2365, 84.0441, 0.37", "-202.997, -64.8977, 85.738, 0.37", "-209.694, -69.9093, 89.3001, 0.37", "-216.38, -74.7462, 92.8446, 0.37", "-220.665, -77.8262, 94.8838, 0.37", "-226.184, -81.6943, 97.3227, 0.37", "-231.042, -84.9983, 99.2265, 0.37", "-238.228, -89.8264, 101.636, 0.37" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-29.9907, 7.23012, 5.78756, 1.1", "-31.251, 11.4423, 3.90612, 1.1", "-33.3673, 18.5156, 0.746751, 0.86", "-34.2282, 21.3932, -0.538573, 0.61", "-36.0942, 27.6298, -3.32422, 1.35", "-36.4555, 28.8373, -3.86354, 1.35" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "142.356, 135.918, -114.726, 0.61", "148.04, 142.032, -120.025, 0.61" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "142.356, 135.918, -114.726, 0.61", "147.286, 141.317, -119.261, 0.61", "153.227, 145.551, -123.887, 0.61", "158.222, 151.124, -128.12, 0.61", "163.151, 156.146, -133.092, 0.61", "168.51, 162.113, -136.155, 0.61" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "40.5277, 22.0894, -18.8765, 0.98", "47.1437, 22.8343, -9.66617, 0.98", "48.3297, 23.0753, -7.85643, 0.98", "50.7278, 23.8374, -3.84911, 0.98", "51.8868, 24.3776, -1.78008, 0.98", "53.6908, 25.4219, 1.50493, 0.98", "55.962, 26.8642, 5.69012, 0.98", "56.543, 27.4122, 6.83582, 0.98", "57.3891, 28.3167, 8.60037, 0.98", "58.4617, 29.666, 10.9158, 0.98", "59.8899, 31.2977, 13.7372, 0.98", "61.3753, 32.6939, 16.1326, 0.98", "62.1039, 33.279, 17.1303, 0.98", "63.4306, 34.2695, 19.0055, 0.98", "65.1846, 35.5052, 21.6593, 0.98", "66.2618, 36.271, 23.3128, 0.98", "67.6813, 37.4469, 25.5276, 0.98", "69.7598, 39.4097, 28.7569, 0.98", "71.5229, 41.2402, 31.5766, 0.98", "73.8834, 43.8378, 35.3912, 0.98", "75.286, 45.4757, 37.6795, 0.61", "77.1566, 47.8794, 40.8708, 0.37", "78.4979, 49.768, 43.4318, 0.61", "79.8478, 51.8403, 46.239, 0.73", "79.9699, 52.0484, 46.529, 0.73", "80.6904, 53.4049, 48.7322, 0.73", "81.4115, 54.9191, 51.5779, 0.73", "82.4868, 57.3237, 56.3346, 0.73", "82.8031, 58.0024, 57.63, 0.73", "83.4576, 59.2746, 59.8955, 0.73", "84.4455, 61.0794, 62.8787, 0.73", "85.7726, 63.3544, 66.0717, 0.73", "87.1344, 65.4342, 68.5922, 0.73", "88.9417, 67.8849, 71.1752, 0.73", "90.7922, 70.1893, 73.4914, 0.73", "91.9325, 71.4918, 74.7624, 0.73", "94.6002, 74.438, 77.4865, 0.73", "96.4547, 76.3176, 79.2431, 0.73", "98.356, 78.1444, 80.9431, 0.73", "100.51, 80.0627, 82.8931, 0.73", "102.605, 81.752, 85.0435, 0.73", "104.183, 82.9641, 86.9376, 0.73", "105.79, 84.1739, 89.2033, 0.73", "107.576, 85.5743, 92.1997, 0.73", "110.081, 87.7488, 97.3328, 0.73", "112.204, 89.809, 102.817, 0.73", "112.952, 90.641, 105.2, 0.73", "113.424, 91.1999, 106.871, 0.73", "114.727, 92.8619, 111.635, 0.73", "116.005, 94.5521, 115.789, 0.73", "117.549, 96.6536, 119.949, 0.73", "118.148, 97.4136, 121.197, 0.73", "119.751, 99.2397, 123.815, 0.73", "121.69, 101.309, 126.344, 0.73", "124.923, 104.617, 129.674, 0.73", "126.872, 106.493, 131.339, 0.73", "129.318, 108.762, 133.151, 0.73", "132.487, 111.563, 135.266, 0.73", "134.989, 113.782, 136.885, 0.73", "137.235, 115.724, 138.257, 0.73", "140.236, 118.189, 139.899, 0.73", "143.152, 120.409, 141.382, 0.73", "145.797, 122.266, 142.664, 0.73" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "40.5277, 22.0894, -18.8765, 0.98", "40.9337, 23.9857, -18.6378, 0.98", "41.6965, 26.8692, -18.5364, 0.86", "42.7658, 31.1978, -18.5008, 0.86", "43.4166, 33.8653, -18.5608, 0.73", "43.9716, 36.1951, -18.627, 0.73", "44.5804, 38.6759, -18.7072, 0.98", "45.4176, 41.9604, -18.871, 0.86", "45.9529, 43.9638, -19.0684, 0.61", "47.205, 48.1868, -19.7654, 0.49", "48.2351, 51.1663, -20.3748, 0.49", "48.7831, 52.6528, -20.6657, 0.49", "49.0274, 53.3522, -20.8016, 0.49", "49.9069, 55.6793, -21.2558, 0.49", "51.1004, 58.5348, -21.9221, 0.49", "51.6856, 59.8032, -22.2691, 0.49", "52.157, 60.8507, -22.5592, 0.49", "53.2219, 63.1799, -23.2348, 0.86", "54.0963, 65.1245, -23.7272, 0.73", "55.05, 67.2102, -24.0971, 0.73", "56.7125, 70.4397, -24.5767, 0.73", "58.3457, 73.1862, -24.996, 0.61", "60.025, 75.8617, -25.4032, 0.73", "61.6238, 78.1198, -25.7008, 0.73", "64.6601, 82.0736, -26.1966, 1.22", "66.8743, 84.7733, -26.4411, 0.98", "68.4285, 86.5251, -26.4365, 0.98", "72.3148, 92.9702, -28.1834, 0.98", "75.1048, 100.083, -29.0961, 0.98", "78.572, 106.951, -29.3668, 0.98" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "40.5277, 22.0894, -18.8765, 1.22", "43.071, 21.311, -19.4752, 1.22", "50.3183, 19.3062, -21.3631, 1.1", "54.3787, 18.34, -22.5375, 0.86", "61.2483, 16.9875, -24.4831, 1.1", "65.7161, 16.2509, -25.7818, 1.1", "74.9163, 15.007, -28.4202, 1.22", "79.5631, 14.5954, -29.7327, 1.1", "83.6939, 14.3863, -30.8011, 0.73", "88.6442, 14.3261, -32.0318, 0.98", "93.2655, 14.4, -33.2146, 0.98", "97.5348, 14.5379, -34.1764, 1.22", "101.093, 14.5655, -34.9851, 0.98", "107.105, 14.6432, -36.4041, 1.22", "111.103, 14.6364, -37.4199, 0.86", "118.295, 14.5738, -39.3441, 0.86", "129.727, 14.4402, -42.4412, 1.1", "137.221, 14.3355, -44.6156, 1.1", "143.028, 14.2919, -46.4097, 0.98", "147.549, 14.3512, -47.8855, 0.86", "158.188, 15.6297, -49.9846, 0.86", "168.203, 17.1336, -54.0628, 0.86" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.92948, -27.9993, -5.80515, 0.61", "10.7081, -28.6204, -4.83926, 0.61", "17.5844, -29.8712, -3.1929, 0.98", "24.6717, -31.3877, -1.69237, 0.98", "31.8788, -33.0588, -0.315758, 0.98", "35.6917, -33.9459, 0.360204, 0.86", "36.4792, -34.1211, 0.473357, 0.86", "38.7995, -34.5755, 0.6604, 0.86", "41.5882, -34.9772, 0.692738, 0.86", "44.1173, -35.2606, 0.60483, 1.1", "48.6553, -35.5957, 0.303445, 1.1", "52.5896, -35.4662, 0.248549, 0.86", "54.5327, -35.1394, 0.32008, 0.86", "56.492, -34.3608, 0.547639, 0.86", "57.4988, -33.4645, 0.894964, 0.61", "57.4547, -29.8211, 2.6991, 0.49", "56.9107, -27.6723, 3.86013, 0.24", "56.5778, -26.7044, 4.46955, 0.24", "56.1038, -25.3528, 5.29614, 0.24", "55.5534, -23.9701, 6.17664, 0.24", "54.3955, -20.8308, 8.15144, 0.24", "54.1727, -19.9389, 8.63794, 0.24", "53.8489, -18.6828, 9.47575, 1.22", "53.3052, -16.1085, 11.4589, 1.35", "62.6026, -15.104, 12.7932, 1.35", "71.24, -12.3756, 15.3932, 1.35", "80.0808, -10.8748, 18.3429, 1.35", "88.6705, -9.60113, 22.048, 1.35", "96.6156, -8.3112, 26.9781, 1.35", "104.22, -8.08092, 32.5784, 1.35", "112.365, -6.94786, 37.2164, 1.35", "120.585, -4.84075, 41.3292, 1.35", "128.641, -3.72359, 46.1233, 1.35", "135.856, -2.30902, 52.0378, 1.35" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.92948, -27.9993, -5.80515, 1.35", "6.62539, -34.6226, -7.17348, 1.35", "6.32398, -41.1877, -8.52979, 1.35" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-36.4555, 28.8373, -3.86354, 0.73", "-38.208, 33.2012, -2.19829, 0.73", "-39.6126, 36.1307, -0.837452, 0.73", "-40.8574, 38.5854, 0.330457, 0.73", "-41.7137, 40.3579, 1.13115, 0.73", "-43.1641, 43.4604, 2.50871, 0.73", "-45.4608, 48.3323, 4.63894, 0.73", "-47.2883, 52.3801, 6.15947, 0.73", "-49.3014, 57.1978, 7.98305, 0.73", "-50.6979, 60.7445, 9.31778, 0.73", "-51.7252, 63.5959, 10.3541, 0.73", "-52.27, 65.1143, 10.8975, 0.73", "-54.0605, 70.631, 12.6463, 0.73", "-55.2841, 74.8081, 14.0448, 0.73", "-56.1058, 77.7398, 15.1218, 0.73", "-56.9335, 80.8977, 16.3571, 0.73", "-58.0625, 85.8378, 18.281, 0.73", "-58.6746, 88.7581, 19.3985, 0.73", "-59.6391, 93.7738, 21.2729, 0.73", "-60.246, 96.941, 22.4448, 0.73", "-61.0941, 101.305, 24.0471, 0.73", "-62.0009, 105.525, 25.7301, 0.73", "-63.1437, 110.875, 28.0203, 0.73", "-64.0088, 114.586, 29.5243, 0.73", "-65.3187, 119.447, 31.7132, 0.73", "-66.3605, 122.865, 33.4743, 0.73", "-68.4216, 129.011, 37.0162, 0.73", "-69.6953, 132.183, 39.2917, 0.73", "-72.0959, 137.445, 43.6114, 0.73", "-75.6173, 144.125, 49.6018, 0.73", "-77.5181, 147.453, 52.6519, 0.73", "-78.6225, 149.293, 54.4067, 0.73", "-83.123, 156.398, 61.2174, 0.73", "-84.7121, 158.716, 63.6196, 0.73", "-88.295, 163.839, 69.01, 0.73", "-89.9152, 166.221, 71.2521, 0.73", "-92.7261, 170.412, 75.1265, 0.73", "-93.9486, 172.328, 76.9056, 0.73", "-96.6981, 177.168, 81.1334, 0.73", "-98.5027, 180.49, 84.0808, 0.73", "-99.623, 182.781, 86.1343, 0.73", "-101.242, 186.475, 89.4532, 0.73", "-102.641, 189.731, 92.3322, 0.73", "-103.811, 192.654, 94.9139, 0.37", "-105.124, 196.289, 98.0062, 0.37", "-106.336, 199.724, 101.227, 0.37", "-106.927, 201.639, 102.855, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-36.4555, 28.8373, -3.86354, 0.86", "-37.9971, 29.1231, -3.57193, 0.86", "-40.1784, 29.2707, -3.11463, 0.86", "-42.2803, 29.1691, -2.66947, 0.86", "-43.6625, 28.9099, -2.2398, 0.86", "-45.4846, 28.446, -1.59345, 0.86", "-46.5806, 28.1532, -1.17117, 0.86", "-48.2557, 27.6463, -0.341064, 0.86", "-49.5433, 27.2341, 0.349511, 0.86", "-52.6812, 26.3125, 1.99866, 0.86", "-53.8248, 26.0673, 2.55922, 0.86", "-55.2933, 25.8459, 3.25591, 0.86", "-57.5495, 25.7024, 4.3336, 0.86", "-58.8318, 25.8093, 4.97113, 0.86", "-60.5399, 26.2459, 5.74061, 0.86", "-61.7184, 26.8689, 6.0207, 0.86" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "78.572, 106.951, -29.3668, 0.61", "81.707, 113.855, -30.1996, 0.61", "84.9559, 120.463, -32.2824, 0.61", "86.8009, 127.464, -34.7486, 0.61", "87.2007, 134.577, -37.5509, 0.61", "86.5424, 141.852, -39.8238, 0.61" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "78.572, 106.951, -29.3668, 0.61", "81.9626, 114.237, -30.0979, 0.61", "84.6048, 121.813, -30.8916, 0.61", "88.3186, 128.553, -33.4479, 0.61", "92.7448, 135.29, -34.0793, 0.61", "96.5371, 142.379, -34.8391, 0.61" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "168.203, 17.1336, -54.0628, 0.61", "177.829, 16.6634, -57.7037, 0.61" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "168.203, 17.1336, -54.0628, 0.61", "177.749, 16.6385, -57.2652, 0.61" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "135.856, -2.30902, 52.0378, 1.1", "142.583, -1.01457, 55.2368, 1.1" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "135.856, -2.30902, 52.0378, 1.35", "148.66, 0.15067, 55.7861, 1.1" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "6.32398, -41.1877, -8.52979, 1.1", "2.29243, -44.1611, -10.0341, 1.1", "-1.43028, -46.9786, -11.546, 0.86", "-5.79002, -50.4411, -13.4171, 0.86", "-11.6287, -55.3246, -16.0359, 0.86", "-15.2087, -58.4864, -17.692, 0.86", "-15.9837, -59.1959, -18.0406, 0.86", "-17.4313, -60.6229, -18.7503, 0.86", "-18.4974, -61.8191, -19.2712, 0.86", "-19.2679, -62.8928, -19.6955, 0.86", "-19.8867, -63.9492, -19.9783, 0.86", "-21.5896, -66.4707, -20.3701, 0.86", "-22.2765, -67.2292, -20.5087, 0.86", "-23.9903, -68.6416, -20.8589, 0.86", "-25.298, -69.4441, -21.1283, 0.86", "-29.1323, -71.2038, -21.8228, 0.86", "-30.7876, -71.8723, -22.2344, 0.86", "-32.3258, -72.4653, -22.7426, 0.86", "-33.4076, -72.8923, -23.1486, 0.86", "-35.7129, -73.931, -24.1606, 0.86", "-38.0774, -75.2402, -25.279, 0.86", "-40.987, -77.5133, -26.9115, 0.86", "-42.0899, -78.5076, -27.4591, 0.86", "-43.086, -79.4817, -27.8987, 0.86", "-44.2096, -80.6293, -28.3708, 0.86", "-46.6421, -83.1452, -29.3555, 0.86", "-47.6763, -84.121, -29.6997, 0.86", "-49.1941, -85.3341, -30.0291, 0.86", "-50.2862, -86.0957, -30.2358, 0.86", "-51.9834, -87.1962, -30.6548, 0.86", "-53.1134, -87.8945, -31.1015, 0.86", "-54.5485, -88.7787, -31.888, 0.86", "-55.7389, -89.4854, -32.6161, 0.86", "-57.4462, -90.5758, -33.667, 0.86", "-59.3126, -91.8741, -34.9504, 0.86", "-62.0208, -94.032, -37.0289, 1.35", "-63.3505, -95.1347, -38.0773, 1.1", "-63.8322, -95.5861, -38.4795, 1.1", "-67.0786, -99.0543, -41.2901, 0.73", "-70.1783, -102.736, -44.0395, 0.98", "-72.2791, -105.254, -45.8114, 1.1", "-74.6372, -108.277, -47.8213, 1.22", "-76.9391, -111.269, -49.8658, 0.73", "-79.4631, -114.382, -52.0231, 0.98", "-81.088, -116.236, -53.292, 0.61", "-84.704, -119.761, -55.4234, 0.98", "-86.638, -121.42, -56.3856, 0.61", "-88.4277, -122.757, -57.1305, 0.37", "-92.1917, -125.057, -58.44, 0.49", "-96.134, -127.226, -59.697, 0.86", "-100.466, -129.527, -61.0011, 0.86", "-103.795, -131.196, -61.9014, 0.86", "-107.007, -132.777, -62.784, 0.37", "-109.611, -134.111, -63.5139, 0.61", "-111.051, -134.875, -63.9818, 0.37", "-116.194, -137.854, -65.9893, 0.86", "-120.813, -140.738, -68.0458, 0.49", "-123.4, -142.472, -69.3321, 0.24", "-125.467, -143.964, -70.3656, 0.49", "-127.354, -145.42, -71.2781, 0.49", "-130.688, -148.108, -72.8609, 0.86", "-132.916, -150.2, -73.9749, 0.12", "-135.267, -152.753, -75.1467, 0.61", "-139.246, -157.275, -76.8565, 0.61", "-140.308, -158.553, -77.2764, 0.61", "-143.013, -161.896, -78.2353, 0.61", "-145.63, -165.236, -79.0973, 0.61", "-148.602, -169.224, -80.1146, 0.86", "-152.669, -174.697, -81.5416, 0.12", "-153.702, -176.143, -81.9789, 0.12", "-154.024, -176.565, -82.113, 0.37", "-154.877, -177.645, -82.4674, 0.37", "-155.737, -178.647, -82.909, 0.37", "-157.018, -180.102, -83.772, 0.37", "-158.546, -181.884, -85.0613, 0.37", "-159.773, -183.315, -86.1456, 0.37", "-160.973, -184.719, -87.2374, 0.37", "-162.88, -186.959, -89.0659, 0.37", "-164.086, -188.463, -90.3508, 0.37", "-164.867, -189.573, -91.3738, 0.37", "-166.594, -192.415, -94.1713, 0.49" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "6.32398, -41.1877, -8.52979, 1.35", "6.85119, -43.6082, -9.17792, 1.35", "8.25557, -50.056, -10.9044, 1.35" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-61.7184, 26.8689, 6.0207, 0.61", "-62.1317, 27.0446, 6.29756, 0.61", "-63.2953, 27.5986, 7.04453, 0.61", "-66.2215, 29.0505, 9.00318, 0.61", "-67.394, 29.6523, 9.75765, 0.61", "-68.4799, 30.195, 10.4091, 0.61", "-69.372, 30.6212, 10.9418, 0.61", "-70.9735, 31.376, 11.8513, 0.61", "-72.085, 31.9319, 12.4253, 0.61", "-73.3952, 32.632, 13.0627, 0.61", "-74.7075, 33.317, 13.7111, 0.61", "-77.6885, 34.7982, 15.1467, 0.61", "-79.4557, 35.668, 15.9503, 0.61", "-81.6991, 36.7513, 16.9279, 0.61", "-84.3932, 38.0823, 18.0469, 0.61", "-86.2564, 39.0546, 18.7519, 0.61", "-86.9335, 39.431, 18.9669, 0.37", "-88.6187, 40.4063, 19.3141, 0.37", "-90.4014, 41.4274, 19.679, 0.37", "-92.384, 42.489, 20.0823, 0.37", "-94.3117, 43.5139, 20.5221, 0.12", "-95.5341, 44.1459, 20.9981, 0.12", "-96.6619, 44.6712, 21.5814, 0.49", "-99.6429, 45.8168, 23.6364, 0.49", "-101.347, 46.393, 25.0181, 0.49", "-102.484, 46.7591, 26.0127, 0.49", "-104.582, 47.4395, 27.8854, 0.49", "-105.589, 47.7996, 28.7197, 0.49", "-108.048, 48.7605, 30.4275, 0.49", "-109.251, 49.2897, 31.0121, 0.49", "-111.339, 50.2888, 31.7008, 0.49", "-112.398, 50.7786, 31.8983, 0.49", "-114.668, 51.7755, 32.0541, 0.49", "-117.29, 52.9025, 32.1074, 0.49", "-119.081, 53.6316, 32.0481, 0.49", "-121.32, 54.4571, 31.9817, 0.49", "-122.934, 54.9839, 31.9704, 0.49", "-124.445, 55.4634, 32.0031, 0.49", "-125.899, 55.9242, 32.097, 0.49", "-128.312, 56.7941, 32.3704, 0.49", "-130.002, 57.4993, 32.648, 0.49", "-133.605, 59.2238, 33.3253, 0.49", "-135.005, 59.9624, 33.6079, 0.49", "-136.652, 60.8678, 33.9531, 0.49", "-139.386, 62.4185, 34.5486, 0.49", "-142.004, 64.009, 35.1763, 0.49", "-143.718, 65.1363, 35.6223, 0.49", "-145.786, 66.6203, 36.2151, 0.49", "-147.369, 67.8051, 36.6827, 0.49", "-148.744, 68.8786, 37.0791, 0.49", "-150.412, 70.2114, 37.6301, 0.49", "-151.741, 71.2906, 38.1191, 0.49", "-153.384, 72.6069, 38.7404, 0.49", "-156.638, 75.2077, 39.9974, 0.49", "-158.814, 76.9276, 40.8268, 0.49", "-162.63, 79.9328, 42.0279, 0.49", "-164.609, 81.4417, 42.4852, 0.49", "-167.127, 83.2539, 42.8176, 0.49", "-168.839, 84.4298, 42.7849, 0.37", "-171.459, 86.1527, 42.5047, 0.12", "-174.723, 88.3241, 41.7547, 0.12", "-177.08, 89.9961, 40.8016, 0.12", "-179.25, 91.8338, 39.4328, 0.12", "-181.54, 94.4984, 37.0067, 0.12", "-182.992, 96.9322, 34.4628, 0.37", "-183.749, 99.1682, 31.8774, 0.37", "-183.998, 100.87, 29.8414, 0.37", "-184.046, 104.222, 25.6409, 0.86", "-183.902, 106.42, 22.6923, 0.73", "-183.869, 107.103, 21.7259, 0.73", "-183.963, 108.713, 19.3172, 0.73", "-184.278, 109.807, 17.6987, 0.73", "-184.723, 110.607, 16.5444, 0.73", "-185.909, 112.059, 14.5245, 0.73", "-187.107, 113.386, 12.7029, 0.73", "-187.912, 114.332, 11.371, 0.73", "-188.807, 115.423, 9.85661, 0.73", "-189.547, 116.374, 8.56561, 0.73", "-190.572, 117.76, 6.72657, 0.73", "-191.544, 119.052, 5.09029, 0.73", "-192.724, 120.677, 2.96174, 0.73" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-61.7184, 26.8689, 6.0207, 0.61", "-63.1158, 26.779, 5.14432, 0.61", "-64.9108, 26.6815, 4.21568, 0.61", "-68.0065, 26.476, 2.93287, 0.61", "-72.6916, 26.0351, 1.39741, 0.61", "-76.6304, 25.5709, 0.354768, 0.61", "-78.8839, 25.2927, -0.293148, 0.61", "-82.2457, 24.8934, -1.2745, 0.61", "-85.42, 24.497, -2.16681, 0.61", "-88.6127, 24.0198, -2.92231, 0.61", "-90.5659, 23.6392, -3.21377, 0.61", "-94.68, 22.7335, -3.77161, 0.61", "-97.6553, 21.9853, -4.34665, 0.61", "-99.8585, 21.4274, -4.92572, 0.61", "-102.49, 20.751, -5.68058, 0.61", "-104.824, 20.129, -6.35669, 0.61", "-107.429, 19.3829, -7.07059, 0.61", "-109.719, 18.6972, -7.6821, 0.61", "-112.947, 17.7316, -8.74086, 0.61", "-115.675, 16.9131, -9.784, 0.61", "-117.414, 16.4, -10.5038, 0.61", "-119.854, 15.7342, -11.5111, 0.61", "-122.049, 15.1341, -12.3905, 0.61", "-124.541, 14.498, -13.4275, 0.61", "-126.923, 13.879, -14.4847, 0.61", "-128.863, 13.4122, -15.3717, 0.61", "-130.7, 13.0124, -16.2087, 0.61", "-139.962, 10.4911, -18.4713, 0.61", "-149.243, 7.36219, -19.5911, 0.61", "-158.506, 4.05315, -20.2203, 0.61" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "8.25557, -50.056, -10.9044, 0.61", "9.57997, -55.5714, -10.2791, 0.61", "10.4105, -58.2032, -9.94599, 0.61", "12.0653, -62.7223, -9.39286, 0.98", "12.8785, -64.955, -9.13327, 0.12", "13.932, -67.4006, -8.87126, 0.49", "16.5156, -73.1283, -8.1851, 1.1", "18.324, -76.6472, -7.78814, 0.49", "21.2313, -82.0117, -7.14844, 0.12", "22.5039, -84.2534, -6.88117, 0.12", "25.7909, -89.8311, -6.17359, 1.1", "27.977, -93.491, -5.73139, 0.61", "31.9811, -103.245, -4.12682, 0.61", "36.3747, -112.949, -4.26746, 0.61", "37.8443, -123.46, -4.08364, 0.61", "39.262, -133.949, -3.17077, 0.61", "41.1244, -144.336, -1.86926, 0.61" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "8.25557, -50.056, -10.9044, 1.22", "9.7156, -60.591, -14.409, 1.22", "10.9307, -68.6505, -17.2096, 1.22", "12.6501, -78.16, -20.7959, 1.22", "15.1121, -89.6924, -25.2349, 1.22", "17.5248, -99.9479, -29.1731, 0.86", "17.7742, -100.956, -29.5573, 0.86", "19.2598, -105.907, -31.5393, 0.86", "21.006, -112.058, -33.9873, 0.86", "22.4482, -116.863, -35.7595, 0.86", "23.1391, -119.233, -36.594, 0.86", "23.6998, -120.876, -37.1916, 0.86", "24.2494, -123.001, -37.8521, 0.86", "24.5796, -125.511, -38.3961, 0.86", "24.6307, -126.998, -38.7015, 0.86", "24.6262, -129.509, -39.4055, 0.86", "24.7133, -131.825, -40.2442, 0.86", "24.726, -132.429, -40.4679, 0.86", "24.7128, -134.885, -41.4265, 0.86", "24.6513, -137.901, -42.662, 0.86", "24.5233, -139.732, -43.4274, 1.22", "24.2049, -142.823, -44.6964, 1.22", "23.4758, -148.261, -46.6282, 1.35", "22.4108, -154.967, -48.7141, 1.35", "22.0085, -157.286, -49.3202, 1.59", "21.1574, -163.478, -50.6551, 1.1", "20.5669, -167.941, -51.5517, 1.1", "19.8487, -173.871, -52.5929, 0.86", "19.5761, -177.099, -53.0983, 1.47", "19.3095, -181.078, -53.463, 0.86", "19.0754, -186.817, -53.7388, 1.1", "19.893, -198.118, -58.9527, 1.1", "21.6998, -210.27, -60.9562, 1.1", "21.2864, -222.581, -62.7216, 1.1" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-158.506, 4.05315, -20.2203, 0.61", "-168.253, 1.50638, -22.1238, 0.61" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-158.506, 4.05315, -20.2203, 0.61", "-163.312, 2.90133, -21.5077, 0.61" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "41.1244, -144.336, -1.86926, 0.61", "45.7298, -152.498, -1.74395, 0.61" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "41.1244, -144.336, -1.86926, 0.61", "41.7995, -152.44, -0.219004, 0.61" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_37", "dend_26", "dend_14", "dend_1", "dend_0", "dend_39", "dend_38", "dend_28", "dend_27", "dend_23", "dend_15", "dend_13", "dend_2", "dend_36", "dend_29", "dend_25", "dend_24", "dend_22", "dend_19", "dend_16", "dend_10", "dend_3", "dend_35", "dend_30", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_4", "dend_34", "dend_31", "dend_6", "dend_5", "dend_33", "dend_32", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_37", "dend_26", "dend_14", "dend_1", "dend_0", "dend_39", "dend_38", "dend_28", "dend_27", "dend_23", "dend_15", "dend_13", "dend_2", "dend_36", "dend_29", "dend_25", "dend_24", "dend_22", "dend_19", "dend_16", "dend_10", "dend_3", "dend_35", "dend_30", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_4", "dend_34", "dend_31", "dend_6", "dend_5", "dend_33", "dend_32", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_33", "dend_32", "dend_8", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_LBC_5d73327936_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_14
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_28
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_15
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_35, id: dend_35, parent: dend_29
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_26, dend_14, dend_1, dend_0, dend_39, dend_38, dend_28, dend_27, dend_23, dend_15, dend_13, dend_2, dend_36, dend_29, dend_25, dend_24, dend_22, dend_19, dend_16, dend_10, dend_3, dend_35, dend_30, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_4, dend_34, dend_31, dend_6, dend_5, dend_33, dend_32, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_26, dend_14, dend_1, dend_0, dend_39, dend_38, dend_28, dend_27, dend_23, dend_15, dend_13, dend_2, dend_36, dend_29, dend_25, dend_24, dend_22, dend_19, dend_16, dend_10, dend_3, dend_35, dend_30, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_4, dend_34, dend_31, dend_6, dend_5, dend_33, dend_32, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_20
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_33, dend_32, dend_8, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.4500001480306009)
    connect dend_37(0), soma_0(0.4500001480306009)
    connect dend_26(0), soma_0(0.4500001480306009)
    connect dend_14(0), soma_0(0.4500001480306009)
    connect dend_1(0), soma_0(0.4500001480306009)
    connect dend_0(0), soma_0(0.4500001480306009)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_15(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_35(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.38674, -8.58166, 0.0, 3.0615 ) }
    soma_0 { pt3dadd( 1.23261, -7.73621, 0.0, 5.13448 ) }
    soma_0 { pt3dadd( 1.07848, -6.89077, 0.0, 6.50208 ) }
    soma_0 { pt3dadd( 0.924343, -6.04533, 0.0, 7.8079 ) }
    soma_0 { pt3dadd( 0.770211, -5.19988, 0.0, 9.46525 ) }
    soma_0 { pt3dadd( 0.616078, -4.35444, 0.0, 10.7445 ) }
    soma_0 { pt3dadd( 0.461945, -3.509, 0.0, 11.53 ) }
    soma_0 { pt3dadd( 0.307812, -2.66355, 0.0, 11.964 ) }
    soma_0 { pt3dadd( 0.15368, -1.81811, 0.0, 12.1762 ) }
    soma_0 { pt3dadd( -4.52973E-4, -0.972666, 0.0, 12.4031 ) }
    soma_0 { pt3dadd( -0.154586, -0.127223, 0.0, 13.0722 ) }
    soma_0 { pt3dadd( -0.308718, 0.71822, 0.0, 13.1077 ) }
    soma_0 { pt3dadd( -0.462851, 1.56366, 0.0, 12.7375 ) }
    soma_0 { pt3dadd( -0.616984, 2.40911, 0.0, 12.4776 ) }
    soma_0 { pt3dadd( -0.771117, 3.25455, 0.0, 12.0451 ) }
    soma_0 { pt3dadd( -0.925249, 4.09999, 0.0, 11.2537 ) }
    soma_0 { pt3dadd( -1.07938, 4.94544, 0.0, 9.96214 ) }
    soma_0 { pt3dadd( -1.23351, 5.79088, 0.0, 7.85651 ) }
    soma_0 { pt3dadd( -1.38765, 6.63632, 0.0, 6.70863 ) }
    soma_0 { pt3dadd( -1.54178, 7.48177, 0.0, 5.30209 ) }
    soma_0 { pt3dadd( -1.69591, 8.32721, 0.0, 3.29069 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -2.29925, 7.84783, -7.17, 0.86 ) }
    dend_40 { pt3dadd( -5.03196, 9.48485, -6.84226, 0.86 ) }
    dend_40 { pt3dadd( -6.56365, 10.2655, -6.46031, 0.86 ) }
    dend_40 { pt3dadd( -7.93298, 10.923, -5.83883, 0.86 ) }
    dend_40 { pt3dadd( -9.41444, 11.6734, -4.86278, 0.86 ) }
    dend_40 { pt3dadd( -11.4772, 12.7575, -3.38952, 0.86 ) }
    dend_40 { pt3dadd( -12.0741, 13.0751, -2.94629, 0.86 ) }
    dend_40 { pt3dadd( -14.4052, 14.2334, -1.02762, 0.86 ) }
    dend_40 { pt3dadd( -16.7429, 15.5003, 1.0758, 0.86 ) }
    dend_40 { pt3dadd( -19.1621, 16.9638, 3.46356, 0.86 ) }
    dend_40 { pt3dadd( -20.5387, 17.9104, 5.00437, 0.86 ) }
    dend_40 { pt3dadd( -22.1732, 19.1481, 6.99447, 0.86 ) }
    dend_40 { pt3dadd( -23.2905, 20.0088, 8.41179, 0.86 ) }
    dend_40 { pt3dadd( -24.2985, 20.7757, 9.62673, 0.86 ) }
    dend_40 { pt3dadd( -24.8743, 21.1848, 10.2374, 0.86 ) }
    dend_40 { pt3dadd( -26.1694, 22.0186, 11.4776, 0.86 ) }
    dend_40 { pt3dadd( -27.2127, 22.6302, 12.382, 0.86 ) }
    dend_40 { pt3dadd( -28.5572, 23.3053, 13.2791, 0.86 ) }
    dend_40 { pt3dadd( -30.5038, 24.0606, 14.0789, 0.86 ) }
    dend_40 { pt3dadd( -32.9645, 24.8874, 14.8666, 0.86 ) }
    dend_40 { pt3dadd( -33.9143, 25.1792, 15.0839, 0.86 ) }
    dend_40 { pt3dadd( -35.1846, 25.5584, 15.2184, 0.86 ) }
    dend_40 { pt3dadd( -36.6391, 26.0153, 15.2254, 0.86 ) }
    dend_40 { pt3dadd( -39.0152, 26.7511, 14.9801, 0.86 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 45/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.18075, 7.22383, -7.84, 0.98 ) }
    dend_37 { pt3dadd( 2.698, 8.29828, -5.44665, 0.98 ) }
    dend_37 { pt3dadd( 3.45317, 10.2386, -1.2563, 1.35 ) }
    dend_37 { pt3dadd( 4.30882, 12.6311, 3.73353, 1.1 ) }
    dend_37 { pt3dadd( 4.7958, 14.0064, 6.56677, 0.86 ) }
    dend_37 { pt3dadd( 5.51773, 15.9963, 10.639, 0.73 ) }
    dend_37 { pt3dadd( 5.66644, 16.3824, 11.4343, 0.73 ) }
    dend_37 { pt3dadd( 5.74711, 16.6364, 11.9999, 0.73 ) }
    dend_37 { pt3dadd( 5.7945, 16.9493, 12.6024, 0.73 ) }
    dend_37 { pt3dadd( 5.77898, 17.1626, 13.2706, 0.73 ) }
    dend_37 { pt3dadd( 5.82895, 17.2239, 13.6213, 0.73 ) }
    dend_37 { pt3dadd( 6.14001, 17.2117, 14.5199, 0.73 ) }
    dend_37 { pt3dadd( 6.41872, 17.1459, 15.6112, 0.73 ) }
    dend_37 { pt3dadd( 6.53489, 17.1268, 16.4356, 0.73 ) }
    dend_37 { pt3dadd( 6.5374, 17.1695, 16.9724, 0.73 ) }
    dend_37 { pt3dadd( 6.4602, 17.3126, 17.4785, 0.73 ) }
    dend_37 { pt3dadd( 6.32795, 17.5395, 17.8931, 0.73 ) }
    dend_37 { pt3dadd( 6.0651, 17.9544, 18.5807, 0.73 ) }
    dend_37 { pt3dadd( 5.80568, 18.326, 19.1789, 0.73 ) }
    dend_37 { pt3dadd( 5.57954, 18.6104, 19.6121, 0.73 ) }
    dend_37 { pt3dadd( 5.22198, 19.0145, 20.21, 0.73 ) }
    dend_37 { pt3dadd( 4.59753, 19.6989, 21.1536, 0.73 ) }
    dend_37 { pt3dadd( 3.10535, 21.3841, 23.2088, 0.73 ) }
    dend_37 { pt3dadd( 2.54189, 22.0161, 23.9467, 0.73 ) }
    dend_37 { pt3dadd( 1.67748, 22.9821, 25.0296, 0.73 ) }
    dend_37 { pt3dadd( 1.30091, 23.4315, 25.4955, 0.73 ) }
    dend_37 { pt3dadd( 0.855596, 24.053, 26.0634, 0.73 ) }
    dend_37 { pt3dadd( 0.250547, 25.1512, 26.8318, 0.73 ) }
    dend_37 { pt3dadd( 0.0536738, 26.8249, 27.8817, 0.73 ) }
    dend_37 { pt3dadd( 0.201973, 27.0753, 28.2057, 0.73 ) }
    dend_37 { pt3dadd( 0.548814, 27.4252, 28.9192, 0.73 ) }
    dend_37 { pt3dadd( 0.883239, 27.7353, 29.656, 0.73 ) }
    dend_37 { pt3dadd( 1.78834, 28.561, 31.8128, 0.61 ) }
    dend_37 { pt3dadd( 3.35487, 30.0737, 35.8849, 0.86 ) }
    dend_37 { pt3dadd( 4.97918, 31.7446, 40.183, 0.86 ) }
    dend_37 { pt3dadd( 6.48208, 33.4036, 44.2984, 0.86 ) }
    dend_37 { pt3dadd( 6.84541, 33.8618, 45.3692, 0.86 ) }
    dend_37 { pt3dadd( 7.33236, 34.6108, 46.9918, 0.86 ) }
    dend_37 { pt3dadd( 8.07853, 36.0377, 49.889, 0.86 ) }
    dend_37 { pt3dadd( 8.417, 36.8121, 51.2603, 0.86 ) }
    dend_37 { pt3dadd( 8.58283, 37.2255, 51.9184, 0.86 ) }
    dend_37 { pt3dadd( 8.92639, 38.0571, 53.1848, 0.86 ) }
    dend_37 { pt3dadd( 9.23983, 38.8539, 54.4374, 0.86 ) }
    dend_37 { pt3dadd( 9.73055, 40.4327, 57.0669, 0.86 ) }
    dend_37 { pt3dadd( 9.91619, 41.4836, 58.9839, 0.86 ) }
    dend_37 { pt3dadd( 9.92409, 42.259, 60.4951, 0.86 ) }
    dend_37 { pt3dadd( 9.81467, 43.0887, 62.1019, 0.86 ) }
    dend_37 { pt3dadd( 9.53308, 44.1299, 63.9857, 0.86 ) }
    dend_37 { pt3dadd( 9.10178, 45.1894, 65.6557, 0.86 ) }
    dend_37 { pt3dadd( 8.58254, 46.2213, 66.9771, 0.86 ) }
    dend_37 { pt3dadd( 7.83684, 47.5477, 68.4802, 0.86 ) }
    dend_37 { pt3dadd( 7.19179, 48.5566, 69.5598, 0.86 ) }
    dend_37 { pt3dadd( 6.46914, 49.5852, 70.6063, 0.86 ) }
    dend_37 { pt3dadd( 6.07043, 50.1627, 71.1125, 0.86 ) }
    dend_37 { pt3dadd( 5.66945, 50.768, 71.5946, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_37 { pt3dadd( 4.91506, 51.9478, 72.5616, 0.86 ) }
    dend_37 { pt3dadd( 4.40318, 52.7327, 73.2944, 0.86 ) }
    dend_37 { pt3dadd( 4.15833, 53.1295, 73.7195, 0.86 ) }
    dend_37 { pt3dadd( 3.66241, 54.1164, 74.8311, 0.86 ) }
    dend_37 { pt3dadd( 3.34147, 55.2945, 76.0167, 0.86 ) }
    dend_37 { pt3dadd( 3.17835, 56.7943, 77.4751, 0.86 ) }
    dend_37 { pt3dadd( 3.14987, 57.6398, 78.2519, 0.86 ) }
    dend_37 { pt3dadd( 3.17862, 58.3752, 78.9128, 0.86 ) }
    dend_37 { pt3dadd( 3.33771, 60.021, 80.3748, 0.86 ) }
    dend_37 { pt3dadd( 3.77078, 62.4528, 82.5001, 0.86 ) }
    dend_37 { pt3dadd( 4.16701, 63.8882, 83.5907, 0.86 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 11/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -7.01925, 2.39758, -4.51, 1.59 ) }
    dend_26 { pt3dadd( -10.699, 3.36351, -4.51, 1.59 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 6.22075, 4.79608, -12.12, 1.22 ) }
    dend_14 { pt3dadd( 6.22075, 4.79608, -12.12, 1.22 ) }
    dend_14 { pt3dadd( 11.5163, 7.57241, -13.2632, 1.22 ) }
    dend_14 { pt3dadd( 21.3526, 12.7294, -15.3868, 1.47 ) }
    dend_14 { pt3dadd( 28.4617, 16.4565, -16.9216, 1.71 ) }
    dend_14 { pt3dadd( 37.0914, 20.9809, -18.7847, 1.35 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.85075, -9.20492, -0.0100002, 2.32 ) }
    dend_1 { pt3dadd( 1.98766, -9.46179, -0.0160835, 2.32 ) }
    dend_1 { pt3dadd( 5.84094, -16.6912, -0.187295, 2.32 ) }
    dend_1 { pt3dadd( 6.4077, -17.7545, -0.212478, 2.08 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 23/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.56925, 5.81008, 0.0, 1.47 ) }
    dend_0 { pt3dadd( -7.22655, 8.60428, -0.733848, 1.47 ) }
    dend_0 { pt3dadd( -8.98627, 11.0566, -1.51435, 1.47 ) }
    dend_0 { pt3dadd( -10.5317, 12.842, -2.23408, 1.59 ) }
    dend_0 { pt3dadd( -11.468, 13.8009, -2.67169, 1.71 ) }
    dend_0 { pt3dadd( -13.0664, 15.2308, -3.36967, 1.71 ) }
    dend_0 { pt3dadd( -14.5644, 16.4455, -3.90351, 1.59 ) }
    dend_0 { pt3dadd( -16.0801, 17.3558, -4.49005, 1.47 ) }
    dend_0 { pt3dadd( -17.9208, 18.2026, -5.16713, 1.47 ) }
    dend_0 { pt3dadd( -19.0137, 18.6203, -5.49221, 1.47 ) }
    dend_0 { pt3dadd( -20.6889, 19.2107, -5.91297, 1.47 ) }
    dend_0 { pt3dadd( -22.9733, 20.0143, -6.26584, 1.35 ) }
    dend_0 { pt3dadd( -26.4937, 21.3647, -6.68103, 1.1 ) }
    dend_0 { pt3dadd( -28.764, 22.3297, -6.8484, 1.1 ) }
    dend_0 { pt3dadd( -31.2698, 23.5108, -6.94362, 1.1 ) }
    dend_0 { pt3dadd( -33.1254, 24.7856, -6.99025, 1.1 ) }
    dend_0 { pt3dadd( -35.2423, 26.6642, -6.9779, 1.1 ) }
    dend_0 { pt3dadd( -36.3773, 27.7959, -6.9362, 0.98 ) }
    dend_0 { pt3dadd( -37.0993, 28.5571, -6.88058, 0.98 ) }
    dend_0 { pt3dadd( -38.1692, 29.6884, -6.87999, 0.86 ) }
    dend_0 { pt3dadd( -44.078, 35.5816, -7.17213, 1.1 ) }
    dend_0 { pt3dadd( -45.9954, 37.4531, -7.34312, 0.86 ) }
    dend_0 { pt3dadd( -50.0506, 41.4807, -8.15576, 1.35 ) }
    dend_0 { pt3dadd( -53.5081, 44.9392, -8.97873, 1.22 ) }
    dend_0 { pt3dadd( -57.2123, 48.5369, -9.95864, 1.22 ) }
    dend_0 { pt3dadd( -59.9346, 51.1059, -10.7568, 0.98 ) }
    dend_0 { pt3dadd( -63.4012, 54.507, -11.973, 1.35 ) }
    dend_0 { pt3dadd( -68.0659, 59.5084, -13.7739, 1.35 ) }
    dend_0 { pt3dadd( -70.8548, 62.7503, -14.8963, 0.86 ) }
    dend_0 { pt3dadd( -73.8673, 66.396, -16.0451, 0.98 ) }
    dend_0 { pt3dadd( -74.9293, 67.6956, -16.3891, 0.49 ) }
    dend_0 { pt3dadd( -80.2806, 74.1412, -17.9161, 0.24 ) }
    dend_0 { pt3dadd( -82.1107, 76.1028, -18.278, 0.24 ) }
    dend_0 { pt3dadd( -83.4895, 77.4384, -18.3896, 0.61 ) }
    dend_0 { pt3dadd( -84.5749, 78.4669, -18.481, 0.61 ) }
    dend_0 { pt3dadd( -86.0643, 79.7978, -18.5476, 0.61 ) }
    dend_0 { pt3dadd( -87.4149, 80.9037, -18.4224, 0.61 ) }
    dend_0 { pt3dadd( -90.5, 83.4192, -17.8639, 1.22 ) }
    dend_0 { pt3dadd( -94.5815, 87.2807, -16.8023, 0.86 ) }
    dend_0 { pt3dadd( -96.3163, 89.2106, -16.2534, 1.35 ) }
    dend_0 { pt3dadd( -98.2676, 91.3365, -15.3744, 1.35 ) }
    dend_0 { pt3dadd( -102.505, 95.7444, -13.2877, 0.73 ) }
    dend_0 { pt3dadd( -105.458, 98.4649, -11.8468, 1.1 ) }
    dend_0 { pt3dadd( -108.358, 100.791, -10.3868, 0.73 ) }
    dend_0 { pt3dadd( -111.616, 102.962, -8.95673, 1.47 ) }
    dend_0 { pt3dadd( -120.1, 107.919, -5.94111, 0.73 ) }
    dend_0 { pt3dadd( -123.474, 109.642, -4.96187, 0.24 ) }
    dend_0 { pt3dadd( -128.565, 111.763, -3.93551, 1.22 ) }
    dend_0 { pt3dadd( -132.607, 113.205, -3.36823, 0.37 ) }
    dend_0 { pt3dadd( -138.655, 115.212, -2.9542, 1.1 ) }
    dend_0 { pt3dadd( -141.232, 116.067, -2.97241, 0.49 ) }
    dend_0 { pt3dadd( -146.202, 117.909, -3.56391, 1.47 ) }
    dend_0 { pt3dadd( -151.17, 119.819, -4.29632, 0.37 ) }
    dend_0 { pt3dadd( -155.387, 121.475, -5.26541, 1.1 ) }
    dend_0 { pt3dadd( -157.742, 122.441, -5.93841, 0.12 ) }
    dend_0 { pt3dadd( -163.477, 124.912, -7.71382, 1.1 ) }
    dend_0 { pt3dadd( -166.46, 126.27, -8.70888, 0.61 ) }
    dend_0 { pt3dadd( -169.208, 127.674, -9.74598, 1.1 ) }
    dend_0 { pt3dadd( -172.7, 129.779, -11.0827, 0.61 ) }
    dend_0 { pt3dadd( -175.619, 131.992, -12.2593, 0.24 ) }
    dend_0 { pt3dadd( -176.129, 132.456, -12.4813, 0.73 ) }
    dend_0 { pt3dadd( -177.903, 134.492, -13.2232, 0.24 ) }
    dend_0 { pt3dadd( -179.444, 136.438, -13.8802, 0.86 ) }
    dend_0 { pt3dadd( -181.676, 139.616, -14.8596, 0.12 ) }
    dend_0 { pt3dadd( -184.811, 144.301, -16.1253, 0.86 ) }
    dend_0 { pt3dadd( -186.634, 147.093, -17.0691, 0.24 ) }
    dend_0 { pt3dadd( -189.856, 152.158, -18.9156, 1.22 ) }
    dend_0 { pt3dadd( -191.534, 154.834, -19.962, 0.61 ) }
    dend_0 { pt3dadd( -194.937, 160.201, -22.1222, 0.49 ) }
    dend_0 { pt3dadd( -196.897, 163.274, -23.311, 1.84 ) }
    dend_0 { pt3dadd( -200.07, 168.373, -25.2122, 0.61 ) }
    dend_0 { pt3dadd( -200.997, 170.018, -25.7874, 0.98 ) }
    dend_0 { pt3dadd( -202.063, 172.063, -26.4428, 0.12 ) }
    dend_0 { pt3dadd( -203.185, 174.42, -27.102, 0.49 ) }
    dend_0 { pt3dadd( -205.037, 178.661, -28.2119, 0.12 ) }
    dend_0 { pt3dadd( -205.894, 180.93, -28.6783, 0.37 ) }
    dend_0 { pt3dadd( -206.66, 183.193, -28.9387, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -207.532, 186.043, -29.2578, 1.1 ) }
    dend_0 { pt3dadd( -208.343, 189.134, -29.6381, 0.24 ) }
    dend_0 { pt3dadd( -208.58, 190.129, -29.7848, 0.49 ) }
    dend_0 { pt3dadd( -209.078, 192.249, -30.1523, 0.49 ) }
    dend_0 { pt3dadd( -209.684, 195.007, -30.6713, 0.12 ) }
    dend_0 { pt3dadd( -209.86, 196.003, -30.8659, 0.24 ) }
    dend_0 { pt3dadd( -210.254, 198.516, -31.3164, 0.24 ) }
    dend_0 { pt3dadd( -210.519, 200.315, -31.566, 0.24 ) }
    dend_0 { pt3dadd( -210.822, 202.39, -31.8744, 0.24 ) }
    dend_0 { pt3dadd( -211.013, 204.08, -32.1561, 0.24 ) }
    dend_0 { pt3dadd( -211.157, 206.328, -32.5802, 0.24 ) }
    dend_0 { pt3dadd( -218.854, 217.282, -31.5785, 0.24 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.69591, 8.32721, 0.0, 0.638794 ) }
    axon_0 { pt3dadd( -4.38621, 23.084, 0.0, 0.638794 ) }
    axon_0 { pt3dadd( -7.07651, 37.8408, 0.0, 0.638794 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 15/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.16701, 63.8882, 83.5907, 0.73 ) }
    dend_39 { pt3dadd( 4.35734, 65.0539, 84.292, 0.73 ) }
    dend_39 { pt3dadd( 4.53899, 67.0205, 85.488, 0.73 ) }
    dend_39 { pt3dadd( 4.74648, 70.3562, 87.588, 0.73 ) }
    dend_39 { pt3dadd( 4.8827, 73.5062, 89.5688, 0.73 ) }
    dend_39 { pt3dadd( 4.93133, 75.1912, 90.6215, 0.73 ) }
    dend_39 { pt3dadd( 4.93172, 79.8609, 93.4955, 0.37 ) }
    dend_39 { pt3dadd( 4.77857, 82.7306, 95.3538, 0.49 ) }
    dend_39 { pt3dadd( 4.54606, 84.8419, 96.7879, 0.49 ) }
    dend_39 { pt3dadd( 4.25099, 86.4198, 97.8816, 0.49 ) }
    dend_39 { pt3dadd( 3.9526, 87.8593, 98.7807, 0.49 ) }
    dend_39 { pt3dadd( 3.51944, 89.8932, 99.9299, 0.49 ) }
    dend_39 { pt3dadd( 2.91453, 92.7667, 101.3, 0.49 ) }
    dend_39 { pt3dadd( 2.51365, 94.6018, 102.078, 0.49 ) }
    dend_39 { pt3dadd( 1.8393, 97.5395, 103.034, 0.12 ) }
    dend_39 { pt3dadd( 1.13691, 100.691, 103.82, 0.12 ) }
    dend_39 { pt3dadd( 0.857483, 102.029, 104.092, 0.12 ) }
    dend_39 { pt3dadd( 0.159011, 105.365, 104.783, 0.24 ) }
    dend_39 { pt3dadd( -0.274401, 107.435, 105.258, 0.24 ) }
    dend_39 { pt3dadd( -0.899435, 110.44, 106.144, 0.49 ) }
    dend_39 { pt3dadd( -1.22446, 112.398, 106.938, 0.49 ) }
    dend_39 { pt3dadd( -1.38962, 113.812, 107.742, 0.49 ) }
    dend_39 { pt3dadd( -1.42139, 117.296, 110.403, 0.49 ) }
    dend_39 { pt3dadd( -1.26794, 119.193, 112.24, 0.49 ) }
    dend_39 { pt3dadd( -1.05642, 120.355, 113.631, 0.49 ) }
    dend_39 { pt3dadd( -0.653441, 121.614, 115.533, 0.49 ) }
    dend_39 { pt3dadd( -0.234779, 122.5, 117.084, 0.49 ) }
    dend_39 { pt3dadd( 0.259796, 123.159, 118.275, 0.49 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 43/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 4.16701, 63.8882, 83.5907, 0.73 ) }
    dend_38 { pt3dadd( 5.07255, 66.3476, 85.3942, 0.73 ) }
    dend_38 { pt3dadd( 5.42984, 67.4876, 86.2393, 0.73 ) }
    dend_38 { pt3dadd( 6.18235, 70.1432, 88.2486, 0.73 ) }
    dend_38 { pt3dadd( 6.54808, 71.4338, 89.2252, 0.73 ) }
    dend_38 { pt3dadd( 7.43368, 74.559, 91.5898, 0.73 ) }
    dend_38 { pt3dadd( 7.95959, 76.4149, 92.9941, 0.73 ) }
    dend_38 { pt3dadd( 8.19072, 77.5872, 93.8941, 0.73 ) }
    dend_38 { pt3dadd( 8.29095, 78.2369, 94.4439, 0.73 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 52/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -10.699, 3.36351, -4.51, 1.22 ) }
    dend_28 { pt3dadd( -13.2536, 3.33785, -4.36495, 1.22 ) }
    dend_28 { pt3dadd( -15.1921, 3.29758, -4.1754, 0.98 ) }
    dend_28 { pt3dadd( -17.0504, 3.29639, -3.90022, 0.98 ) }
    dend_28 { pt3dadd( -18.6611, 3.35799, -3.58158, 0.98 ) }
    dend_28 { pt3dadd( -21.3533, 3.57829, -2.801, 0.98 ) }
    dend_28 { pt3dadd( -23.6264, 3.86231, -1.91165, 0.98 ) }
    dend_28 { pt3dadd( -24.8982, 4.06699, -1.18019, 0.98 ) }
    dend_28 { pt3dadd( -25.909, 4.25963, -0.500707, 0.98 ) }
    dend_28 { pt3dadd( -26.8497, 4.58064, 0.299108, 0.98 ) }
    dend_28 { pt3dadd( -28.3178, 5.3623, 1.98966, 0.98 ) }
    dend_28 { pt3dadd( -28.8985, 5.85607, 3.02574, 1.35 ) }
    dend_28 { pt3dadd( -29.9907, 7.23012, 5.78756, 1.35 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 65/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -10.699, 3.36351, -4.51, 1.35 ) }
    dend_27 { pt3dadd( -13.409, 0.678678, -4.33886, 1.35 ) }
    dend_27 { pt3dadd( -15.6018, -1.5104, -4.3627, 1.1 ) }
    dend_27 { pt3dadd( -18.6985, -5.0115, -4.13098, 1.1 ) }
    dend_27 { pt3dadd( -21.6262, -8.20263, -3.57352, 1.1 ) }
    dend_27 { pt3dadd( -23.2382, -9.94007, -3.19068, 1.1 ) }
    dend_27 { pt3dadd( -25.6197, -12.5613, -2.53642, 1.1 ) }
    dend_27 { pt3dadd( -26.3623, -13.4222, -2.28277, 1.1 ) }
    dend_27 { pt3dadd( -30.417, -18.376, -0.46077, 1.1 ) }
    dend_27 { pt3dadd( -33.6831, -22.3944, 1.76545, 1.1 ) }
    dend_27 { pt3dadd( -35.273, -24.5531, 3.14238, 1.1 ) }
    dend_27 { pt3dadd( -36.9177, -27.056, 4.85077, 1.1 ) }
    dend_27 { pt3dadd( -37.8055, -28.3631, 5.92182, 1.1 ) }
    dend_27 { pt3dadd( -39.8374, -31.2471, 8.52151, 0.98 ) }
    dend_27 { pt3dadd( -44.2712, -37.3753, 14.3368, 0.98 ) }
    dend_27 { pt3dadd( -46.1734, -40.0147, 17.0145, 0.98 ) }
    dend_27 { pt3dadd( -49.408, -44.2347, 21.5619, 0.86 ) }
    dend_27 { pt3dadd( -53.795, -49.5007, 27.4386, 0.86 ) }
    dend_27 { pt3dadd( -54.4271, -50.1917, 28.212, 0.86 ) }
    dend_27 { pt3dadd( -56.4802, -52.2696, 30.4498, 0.86 ) }
    dend_27 { pt3dadd( -58.7165, -54.473, 32.6813, 0.86 ) }
    dend_27 { pt3dadd( -60.4886, -55.9992, 34.2849, 0.86 ) }
    dend_27 { pt3dadd( -63.251, -58.2794, 36.4762, 0.86 ) }
    dend_27 { pt3dadd( -65.2241, -60.1167, 37.9895, 0.86 ) }
    dend_27 { pt3dadd( -68.4221, -63.3455, 40.5882, 0.86 ) }
    dend_27 { pt3dadd( -69.9794, -65.0375, 41.9747, 0.86 ) }
    dend_27 { pt3dadd( -71.6889, -66.9979, 43.5729, 0.86 ) }
    dend_27 { pt3dadd( -72.8551, -68.3935, 44.809, 0.86 ) }
    dend_27 { pt3dadd( -75.1543, -71.2232, 47.749, 0.86 ) }
    dend_27 { pt3dadd( -76.274, -72.6038, 49.371, 0.86 ) }
    dend_27 { pt3dadd( -77.8357, -74.4835, 52.0099, 0.86 ) }
    dend_27 { pt3dadd( -79.1462, -75.9801, 54.2511, 0.86 ) }
    dend_27 { pt3dadd( -80.294, -77.2779, 56.1941, 0.86 ) }
    dend_27 { pt3dadd( -82.9798, -80.1079, 60.4215, 0.86 ) }
    dend_27 { pt3dadd( -83.6259, -80.7409, 61.4002, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_27 { pt3dadd( -87.218, -84.0437, 66.6378, 0.86 ) }
    dend_27 { pt3dadd( -89.0865, -85.7613, 69.2655, 0.86 ) }
    dend_27 { pt3dadd( -90.8472, -87.4067, 71.6207, 0.86 ) }
    dend_27 { pt3dadd( -93.1045, -89.3663, 74.3364, 0.86 ) }
    dend_27 { pt3dadd( -96.9063, -92.4476, 78.4609, 0.86 ) }
    dend_27 { pt3dadd( -98.3315, -93.5358, 79.9539, 0.86 ) }
    dend_27 { pt3dadd( -101.563, -95.7247, 83.1046, 0.86 ) }
    dend_27 { pt3dadd( -104.153, -97.3784, 85.7256, 0.86 ) }
    dend_27 { pt3dadd( -108.346, -99.8414, 89.9257, 0.86 ) }
    dend_27 { pt3dadd( -110.131, -100.865, 91.6684, 0.86 ) }
    dend_27 { pt3dadd( -111.598, -101.675, 93.0241, 0.86 ) }
    dend_27 { pt3dadd( -115.005, -103.381, 96.2091, 0.86 ) }
    dend_27 { pt3dadd( -117.824, -104.571, 98.7488, 0.86 ) }
    dend_27 { pt3dadd( -119.608, -105.268, 100.341, 0.86 ) }
    dend_27 { pt3dadd( -122.84, -106.407, 103.241, 0.86 ) }
    dend_27 { pt3dadd( -125.186, -107.238, 105.213, 0.86 ) }
    dend_27 { pt3dadd( -128.969, -108.666, 108.157, 0.86 ) }
    dend_27 { pt3dadd( -131.217, -109.578, 109.804, 0.86 ) }
    dend_27 { pt3dadd( -133.884, -110.711, 111.645, 0.86 ) }
    dend_27 { pt3dadd( -139.077, -113.195, 115.161, 0.86 ) }
    dend_27 { pt3dadd( -142.619, -115.205, 117.565, 0.86 ) }
    dend_27 { pt3dadd( -145.27, -116.981, 119.3, 0.86 ) }
    dend_27 { pt3dadd( -148.652, -119.63, 121.385, 0.86 ) }
    dend_27 { pt3dadd( -151.534, -122.093, 123.123, 0.86 ) }
    dend_27 { pt3dadd( -153.21, -123.567, 124.093, 0.86 ) }
    dend_27 { pt3dadd( -156.198, -126.295, 125.884, 0.86 ) }
    dend_27 { pt3dadd( -159.185, -129.026, 127.648, 0.86 ) }
    dend_27 { pt3dadd( -161.695, -131.419, 129.028, 0.86 ) }
    dend_27 { pt3dadd( -165.467, -135.143, 130.977, 0.86 ) }
    dend_27 { pt3dadd( -167.587, -137.234, 132.046, 0.86 ) }
    dend_27 { pt3dadd( -170.519, -140.01, 133.508, 0.86 ) }
    dend_27 { pt3dadd( -174.091, -143.291, 135.236, 0.86 ) }
    dend_27 { pt3dadd( -176.691, -145.78, 136.571, 0.86 ) }
    dend_27 { pt3dadd( -178.809, -147.854, 137.59, 0.86 ) }
    // Section: dend_23, id: dend_23, parent: dend_14 (entry count 34/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 37.0914, 20.9809, -18.7847, 0.73 ) }
    dend_23 { pt3dadd( 38.3486, 26.4799, -19.6197, 0.73 ) }
    dend_23 { pt3dadd( 39.1457, 30.2863, -20.0728, 0.86 ) }
    dend_23 { pt3dadd( 39.7492, 33.6878, -20.0135, 0.86 ) }
    dend_23 { pt3dadd( 40.1289, 36.1593, -19.8589, 0.86 ) }
    dend_23 { pt3dadd( 40.6925, 40.1908, -19.6037, 0.73 ) }
    dend_23 { pt3dadd( 41.5019, 44.8911, -19.3783, 0.73 ) }
    dend_23 { pt3dadd( 41.9293, 46.6476, -19.3058, 0.73 ) }
    dend_23 { pt3dadd( 44.5794, 52.2801, -21.6256, 0.73 ) }
    dend_23 { pt3dadd( 46.3418, 54.7667, -23.7461, 0.73 ) }
    dend_23 { pt3dadd( 47.9848, 56.6869, -26.0803, 0.73 ) }
    dend_23 { pt3dadd( 49.8182, 58.6068, -28.8096, 0.73 ) }
    dend_23 { pt3dadd( 53.2998, 61.9581, -33.9416, 0.73 ) }
    dend_23 { pt3dadd( 60.2998, 68.4359, -44.2127, 0.73 ) }
    dend_23 { pt3dadd( 61.077, 69.0896, -45.3047, 0.73 ) }
    dend_23 { pt3dadd( 64.7382, 71.9288, -50.0359, 0.73 ) }
    dend_23 { pt3dadd( 66.3748, 73.1767, -52.0296, 0.73 ) }
    dend_23 { pt3dadd( 68.0127, 74.5477, -53.9265, 0.73 ) }
    dend_23 { pt3dadd( 70.1958, 76.5358, -56.0464, 0.73 ) }
    dend_23 { pt3dadd( 73.4846, 79.6575, -58.6506, 0.73 ) }
    dend_23 { pt3dadd( 76.5613, 82.8786, -61.0728, 0.73 ) }
    dend_23 { pt3dadd( 78.4424, 85.0609, -62.4575, 0.73 ) }
    dend_23 { pt3dadd( 80.4703, 87.7028, -63.9776, 0.73 ) }
    dend_23 { pt3dadd( 82.7502, 91.3518, -65.7755, 0.73 ) }
    dend_23 { pt3dadd( 83.4934, 92.9298, -66.3939, 0.73 ) }
    dend_23 { pt3dadd( 85.0312, 97.0525, -67.7759, 0.73 ) }
    dend_23 { pt3dadd( 85.976, 99.9844, -68.6074, 0.73 ) }
    dend_23 { pt3dadd( 86.7083, 102.452, -69.2641, 0.73 ) }
    dend_23 { pt3dadd( 87.5097, 105.334, -70.0271, 0.49 ) }
    dend_23 { pt3dadd( 88.7632, 110.826, -71.4545, 0.61 ) }
    dend_23 { pt3dadd( 96.7751, 119.68, -80.3739, 0.61 ) }
    dend_23 { pt3dadd( 108.222, 126.496, -87.1597, 0.61 ) }
    dend_23 { pt3dadd( 119.841, 130.082, -95.9604, 0.61 ) }
    dend_23 { pt3dadd( 130.874, 131.712, -106.034, 0.61 ) }
    dend_23 { pt3dadd( 142.356, 135.918, -114.726, 0.61 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 69/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 37.0914, 20.9809, -18.7847, 1.35 ) }
    dend_15 { pt3dadd( 40.5277, 22.0894, -18.8765, 1.35 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 71/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.4077, -17.7545, -0.212478, 1.1 ) }
    dend_13 { pt3dadd( 5.75588, -29.2956, 1.22922, 1.1 ) }
    dend_13 { pt3dadd( 5.68954, -32.899, 1.71704, 1.1 ) }
    dend_13 { pt3dadd( 5.90751, -39.2439, 2.79731, 1.1 ) }
    dend_13 { pt3dadd( 6.89096, -46.1308, 3.46281, 1.1 ) }
    dend_13 { pt3dadd( 7.09701, -47.2411, 3.5241, 1.1 ) }
    dend_13 { pt3dadd( 7.57951, -49.581, 3.58748, 1.1 ) }
    dend_13 { pt3dadd( 8.32082, -52.2149, 3.49117, 1.1 ) }
    dend_13 { pt3dadd( 9.9857, -57.1536, 3.36118, 1.1 ) }
    dend_13 { pt3dadd( 13.7773, -66.7849, 3.21733, 1.1 ) }
    dend_13 { pt3dadd( 17.3603, -74.9182, 3.19675, 1.1 ) }
    dend_13 { pt3dadd( 19.2499, -78.9886, 3.19831, 1.1 ) }
    dend_13 { pt3dadd( 22.6532, -86.2025, 3.20131, 0.86 ) }
    dend_13 { pt3dadd( 26.0975, -93.8174, 3.21588, 0.86 ) }
    dend_13 { pt3dadd( 28.1795, -98.6814, 3.34068, 0.86 ) }
    dend_13 { pt3dadd( 30.9963, -105.957, 3.85974, 0.86 ) }
    dend_13 { pt3dadd( 33.123, -111.313, 4.1621, 0.86 ) }
    dend_13 { pt3dadd( 33.9067, -113.486, 4.2889, 0.86 ) }
    dend_13 { pt3dadd( 36.1065, -120.221, 4.57149, 0.86 ) }
    dend_13 { pt3dadd( 38.0389, -126.87, 4.77058, 0.61 ) }
    dend_13 { pt3dadd( 39.4538, -132.271, 4.85835, 0.61 ) }
    dend_13 { pt3dadd( 40.4284, -136.015, 4.99098, 0.61 ) }
    dend_13 { pt3dadd( 42.0127, -141.574, 5.33382, 0.61 ) }
    dend_13 { pt3dadd( 43.3501, -145.444, 5.62818, 0.61 ) }
    dend_13 { pt3dadd( 44.3209, -147.784, 5.82877, 0.61 ) }
    dend_13 { pt3dadd( 45.8791, -151.295, 6.11113, 0.24 ) }
    dend_13 { pt3dadd( 49.8408, -160.013, 6.85371, 0.37 ) }
    dend_13 { pt3dadd( 51.2003, -163.054, 7.12598, 0.37 ) }
    dend_13 { pt3dadd( 52.7452, -166.632, 7.44602, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_13 { pt3dadd( 53.661, -168.932, 7.60923, 0.37 ) }
    dend_13 { pt3dadd( 54.9, -172.269, 7.71315, 0.37 ) }
    dend_13 { pt3dadd( 55.8079, -174.583, 7.71893, 0.37 ) }
    dend_13 { pt3dadd( 57.0269, -177.587, 7.57492, 0.37 ) }
    dend_13 { pt3dadd( 58.657, -181.728, 7.34082, 0.12 ) }
    dend_13 { pt3dadd( 60.2447, -185.983, 7.07012, 0.37 ) }
    dend_13 { pt3dadd( 61.1893, -188.478, 6.85033, 0.37 ) }
    dend_13 { pt3dadd( 63.1296, -193.602, 6.58657, 0.61 ) }
    dend_13 { pt3dadd( 64.5141, -197.001, 6.52848, 0.61 ) }
    dend_13 { pt3dadd( 66.4743, -201.973, 6.54264, 0.61 ) }
    dend_13 { pt3dadd( 67.6835, -204.929, 6.73748, 0.61 ) }
    dend_13 { pt3dadd( 69.509, -209.324, 7.25854, 0.12 ) }
    dend_13 { pt3dadd( 73.7554, -219.356, 8.87822, 0.61 ) }
    dend_13 { pt3dadd( 75.9326, -224.535, 9.95219, 0.61 ) }
    dend_13 { pt3dadd( 78.6939, -230.584, 11.4767, 1.22 ) }
    dend_13 { pt3dadd( 82.9689, -239.964, 14.2938, 0.49 ) }
    dend_13 { pt3dadd( 84.4684, -243.411, 15.4115, 0.49 ) }
    dend_13 { pt3dadd( 86.9534, -249.627, 17.5483, 0.61 ) }
    dend_13 { pt3dadd( 88.9278, -254.812, 19.4374, 0.12 ) }
    dend_13 { pt3dadd( 90.5924, -259.817, 21.4181, 0.49 ) }
    dend_13 { pt3dadd( 92.8195, -267.241, 24.6489, 0.49 ) }
    dend_13 { pt3dadd( 93.9335, -272.795, 27.2485, 0.49 ) }
    dend_13 { pt3dadd( 94.7333, -277.419, 29.4647, 0.37 ) }
    dend_13 { pt3dadd( 95.1846, -281.062, 31.2619, 0.24 ) }
    dend_13 { pt3dadd( 95.5996, -286.687, 34.1756, 0.49 ) }
    dend_13 { pt3dadd( 95.6462, -292.358, 37.44, 0.49 ) }
    dend_13 { pt3dadd( 95.5782, -299.472, 42.1332, 0.49 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 27/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.4077, -17.7545, -0.212478, 1.71 ) }
    dend_2 { pt3dadd( 6.62078, -21.9382, -2.49635, 1.71 ) }
    dend_2 { pt3dadd( 6.77225, -24.9123, -4.11993, 1.47 ) }
    dend_2 { pt3dadd( 6.92948, -27.9993, -5.80515, 1.71 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 31/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.07651, 37.8408, 0.0, 0.49 ) }
    axon_1 { pt3dadd( -9.76681, 52.5975, 0.0, 0.49 ) }
    axon_1 { pt3dadd( -12.4571, 67.3543, 0.0, 0.49 ) }
    // Section: dend_36, id: dend_36, parent: dend_28 (entry count 34/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -29.9907, 7.23012, 5.78756, 0.49 ) }
    dend_36 { pt3dadd( -33.8734, 4.13626, 7.65547, 0.49 ) }
    dend_36 { pt3dadd( -38.6385, 0.767239, 10.1146, 0.37 ) }
    dend_36 { pt3dadd( -42.3021, -1.55857, 12.0898, 0.37 ) }
    dend_36 { pt3dadd( -44.0244, -2.61659, 13.0264, 0.37 ) }
    dend_36 { pt3dadd( -47.2984, -4.44303, 14.9823, 0.37 ) }
    dend_36 { pt3dadd( -49.8512, -5.74275, 16.6492, 0.37 ) }
    dend_36 { pt3dadd( -52.3158, -6.72418, 18.4131, 0.37 ) }
    dend_36 { pt3dadd( -54.822, -7.51703, 20.3375, 0.37 ) }
    dend_36 { pt3dadd( -57.867, -8.3232, 22.6937, 0.37 ) }
    dend_36 { pt3dadd( -64.1838, -9.82484, 27.5676, 0.37 ) }
    dend_36 { pt3dadd( -68.3447, -10.714, 30.7408, 0.37 ) }
    dend_36 { pt3dadd( -71.0675, -11.2105, 32.7269, 0.37 ) }
    dend_36 { pt3dadd( -76.7756, -12.0772, 36.5952, 0.37 ) }
    dend_36 { pt3dadd( -79.9274, -12.4818, 38.6003, 0.37 ) }
    dend_36 { pt3dadd( -83.6491, -12.886, 40.71, 0.37 ) }
    dend_36 { pt3dadd( -87.1593, -13.3013, 42.39, 0.37 ) }
    dend_36 { pt3dadd( -93.2128, -14.1305, 44.9978, 0.37 ) }
    dend_36 { pt3dadd( -96.7522, -14.7084, 46.4431, 0.37 ) }
    dend_36 { pt3dadd( -99.9115, -15.2988, 47.6731, 0.37 ) }
    dend_36 { pt3dadd( -105.635, -16.5548, 49.9977, 0.37 ) }
    dend_36 { pt3dadd( -109.966, -17.63, 51.8133, 0.37 ) }
    dend_36 { pt3dadd( -112.833, -18.4137, 53.0592, 0.37 ) }
    dend_36 { pt3dadd( -116.518, -19.4571, 54.6786, 0.37 ) }
    dend_36 { pt3dadd( -120.009, -20.4005, 56.1149, 0.37 ) }
    dend_36 { pt3dadd( -126.047, -21.9554, 58.3291, 0.37 ) }
    dend_36 { pt3dadd( -129.407, -22.7957, 59.4951, 0.37 ) }
    dend_36 { pt3dadd( -133.513, -23.7711, 60.8905, 0.37 ) }
    dend_36 { pt3dadd( -138.45, -24.8628, 62.4623, 0.37 ) }
    dend_36 { pt3dadd( -142.402, -25.7357, 63.764, 0.37 ) }
    dend_36 { pt3dadd( -148.302, -27.1527, 65.671, 0.37 ) }
    dend_36 { pt3dadd( -157.201, -29.6423, 68.341, 0.37 ) }
    dend_36 { pt3dadd( -163.065, -31.6731, 70.0345, 0.37 ) }
    dend_36 { pt3dadd( -168.158, -33.9222, 71.423, 0.37 ) }
    dend_36 { pt3dadd( -173.064, -36.6815, 72.8379, 0.37 ) }
    dend_36 { pt3dadd( -177.376, -39.6392, 74.121, 0.37 ) }
    dend_36 { pt3dadd( -180.699, -42.4741, 75.1327, 0.37 ) }
    dend_36 { pt3dadd( -183.831, -45.6274, 76.1566, 0.37 ) }
    dend_36 { pt3dadd( -187.174, -49.3258, 77.689, 0.37 ) }
    dend_36 { pt3dadd( -193.485, -56.2637, 80.9166, 0.37 ) }
    dend_36 { pt3dadd( -196.575, -59.4039, 82.4584, 0.37 ) }
    dend_36 { pt3dadd( -199.696, -62.2365, 84.0441, 0.37 ) }
    dend_36 { pt3dadd( -202.997, -64.8977, 85.738, 0.37 ) }
    dend_36 { pt3dadd( -209.694, -69.9093, 89.3001, 0.37 ) }
    dend_36 { pt3dadd( -216.38, -74.7462, 92.8446, 0.37 ) }
    dend_36 { pt3dadd( -220.665, -77.8262, 94.8838, 0.37 ) }
    dend_36 { pt3dadd( -226.184, -81.6943, 97.3227, 0.37 ) }
    dend_36 { pt3dadd( -231.042, -84.9983, 99.2265, 0.37 ) }
    dend_36 { pt3dadd( -238.228, -89.8264, 101.636, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 83/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -29.9907, 7.23012, 5.78756, 1.1 ) }
    dend_29 { pt3dadd( -31.251, 11.4423, 3.90612, 1.1 ) }
    dend_29 { pt3dadd( -33.3673, 18.5156, 0.746751, 0.86 ) }
    dend_29 { pt3dadd( -34.2282, 21.3932, -0.538573, 0.61 ) }
    dend_29 { pt3dadd( -36.0942, 27.6298, -3.32422, 1.35 ) }
    dend_29 { pt3dadd( -36.4555, 28.8373, -3.86354, 1.35 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 89/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 142.356, 135.918, -114.726, 0.61 ) }
    dend_25 { pt3dadd( 148.04, 142.032, -120.025, 0.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 91/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 142.356, 135.918, -114.726, 0.61 ) }
    dend_24 { pt3dadd( 147.286, 141.317, -119.261, 0.61 ) }
    dend_24 { pt3dadd( 153.227, 145.551, -123.887, 0.61 ) }
    dend_24 { pt3dadd( 158.222, 151.124, -128.12, 0.61 ) }
    dend_24 { pt3dadd( 163.151, 156.146, -133.092, 0.61 ) }
    dend_24 { pt3dadd( 168.51, 162.113, -136.155, 0.61 ) }
    // Section: dend_22, id: dend_22, parent: dend_15 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 40.5277, 22.0894, -18.8765, 0.98 ) }
    dend_22 { pt3dadd( 47.1437, 22.8343, -9.66617, 0.98 ) }
    dend_22 { pt3dadd( 48.3297, 23.0753, -7.85643, 0.98 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 50.7278, 23.8374, -3.84911, 0.98 ) }
    dend_22 { pt3dadd( 51.8868, 24.3776, -1.78008, 0.98 ) }
    dend_22 { pt3dadd( 53.6908, 25.4219, 1.50493, 0.98 ) }
    dend_22 { pt3dadd( 55.962, 26.8642, 5.69012, 0.98 ) }
    dend_22 { pt3dadd( 56.543, 27.4122, 6.83582, 0.98 ) }
    dend_22 { pt3dadd( 57.3891, 28.3167, 8.60037, 0.98 ) }
    dend_22 { pt3dadd( 58.4617, 29.666, 10.9158, 0.98 ) }
    dend_22 { pt3dadd( 59.8899, 31.2977, 13.7372, 0.98 ) }
    dend_22 { pt3dadd( 61.3753, 32.6939, 16.1326, 0.98 ) }
    dend_22 { pt3dadd( 62.1039, 33.279, 17.1303, 0.98 ) }
    dend_22 { pt3dadd( 63.4306, 34.2695, 19.0055, 0.98 ) }
    dend_22 { pt3dadd( 65.1846, 35.5052, 21.6593, 0.98 ) }
    dend_22 { pt3dadd( 66.2618, 36.271, 23.3128, 0.98 ) }
    dend_22 { pt3dadd( 67.6813, 37.4469, 25.5276, 0.98 ) }
    dend_22 { pt3dadd( 69.7598, 39.4097, 28.7569, 0.98 ) }
    dend_22 { pt3dadd( 71.5229, 41.2402, 31.5766, 0.98 ) }
    dend_22 { pt3dadd( 73.8834, 43.8378, 35.3912, 0.98 ) }
    dend_22 { pt3dadd( 75.286, 45.4757, 37.6795, 0.61 ) }
    dend_22 { pt3dadd( 77.1566, 47.8794, 40.8708, 0.37 ) }
    dend_22 { pt3dadd( 78.4979, 49.768, 43.4318, 0.61 ) }
    dend_22 { pt3dadd( 79.8478, 51.8403, 46.239, 0.73 ) }
    dend_22 { pt3dadd( 79.9699, 52.0484, 46.529, 0.73 ) }
    dend_22 { pt3dadd( 80.6904, 53.4049, 48.7322, 0.73 ) }
    dend_22 { pt3dadd( 81.4115, 54.9191, 51.5779, 0.73 ) }
    dend_22 { pt3dadd( 82.4868, 57.3237, 56.3346, 0.73 ) }
    dend_22 { pt3dadd( 82.8031, 58.0024, 57.63, 0.73 ) }
    dend_22 { pt3dadd( 83.4576, 59.2746, 59.8955, 0.73 ) }
    dend_22 { pt3dadd( 84.4455, 61.0794, 62.8787, 0.73 ) }
    dend_22 { pt3dadd( 85.7726, 63.3544, 66.0717, 0.73 ) }
    dend_22 { pt3dadd( 87.1344, 65.4342, 68.5922, 0.73 ) }
    dend_22 { pt3dadd( 88.9417, 67.8849, 71.1752, 0.73 ) }
    dend_22 { pt3dadd( 90.7922, 70.1893, 73.4914, 0.73 ) }
    dend_22 { pt3dadd( 91.9325, 71.4918, 74.7624, 0.73 ) }
    dend_22 { pt3dadd( 94.6002, 74.438, 77.4865, 0.73 ) }
    dend_22 { pt3dadd( 96.4547, 76.3176, 79.2431, 0.73 ) }
    dend_22 { pt3dadd( 98.356, 78.1444, 80.9431, 0.73 ) }
    dend_22 { pt3dadd( 100.51, 80.0627, 82.8931, 0.73 ) }
    dend_22 { pt3dadd( 102.605, 81.752, 85.0435, 0.73 ) }
    dend_22 { pt3dadd( 104.183, 82.9641, 86.9376, 0.73 ) }
    dend_22 { pt3dadd( 105.79, 84.1739, 89.2033, 0.73 ) }
    dend_22 { pt3dadd( 107.576, 85.5743, 92.1997, 0.73 ) }
    dend_22 { pt3dadd( 110.081, 87.7488, 97.3328, 0.73 ) }
    dend_22 { pt3dadd( 112.204, 89.809, 102.817, 0.73 ) }
    dend_22 { pt3dadd( 112.952, 90.641, 105.2, 0.73 ) }
    dend_22 { pt3dadd( 113.424, 91.1999, 106.871, 0.73 ) }
    dend_22 { pt3dadd( 114.727, 92.8619, 111.635, 0.73 ) }
    dend_22 { pt3dadd( 116.005, 94.5521, 115.789, 0.73 ) }
    dend_22 { pt3dadd( 117.549, 96.6536, 119.949, 0.73 ) }
    dend_22 { pt3dadd( 118.148, 97.4136, 121.197, 0.73 ) }
    dend_22 { pt3dadd( 119.751, 99.2397, 123.815, 0.73 ) }
    dend_22 { pt3dadd( 121.69, 101.309, 126.344, 0.73 ) }
    dend_22 { pt3dadd( 124.923, 104.617, 129.674, 0.73 ) }
    dend_22 { pt3dadd( 126.872, 106.493, 131.339, 0.73 ) }
    dend_22 { pt3dadd( 129.318, 108.762, 133.151, 0.73 ) }
    dend_22 { pt3dadd( 132.487, 111.563, 135.266, 0.73 ) }
    dend_22 { pt3dadd( 134.989, 113.782, 136.885, 0.73 ) }
    dend_22 { pt3dadd( 137.235, 115.724, 138.257, 0.73 ) }
    dend_22 { pt3dadd( 140.236, 118.189, 139.899, 0.73 ) }
    dend_22 { pt3dadd( 143.152, 120.409, 141.382, 0.73 ) }
    dend_22 { pt3dadd( 145.797, 122.266, 142.664, 0.73 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 60/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 40.5277, 22.0894, -18.8765, 0.98 ) }
    dend_19 { pt3dadd( 40.9337, 23.9857, -18.6378, 0.98 ) }
    dend_19 { pt3dadd( 41.6965, 26.8692, -18.5364, 0.86 ) }
    dend_19 { pt3dadd( 42.7658, 31.1978, -18.5008, 0.86 ) }
    dend_19 { pt3dadd( 43.4166, 33.8653, -18.5608, 0.73 ) }
    dend_19 { pt3dadd( 43.9716, 36.1951, -18.627, 0.73 ) }
    dend_19 { pt3dadd( 44.5804, 38.6759, -18.7072, 0.98 ) }
    dend_19 { pt3dadd( 45.4176, 41.9604, -18.871, 0.86 ) }
    dend_19 { pt3dadd( 45.9529, 43.9638, -19.0684, 0.61 ) }
    dend_19 { pt3dadd( 47.205, 48.1868, -19.7654, 0.49 ) }
    dend_19 { pt3dadd( 48.2351, 51.1663, -20.3748, 0.49 ) }
    dend_19 { pt3dadd( 48.7831, 52.6528, -20.6657, 0.49 ) }
    dend_19 { pt3dadd( 49.0274, 53.3522, -20.8016, 0.49 ) }
    dend_19 { pt3dadd( 49.9069, 55.6793, -21.2558, 0.49 ) }
    dend_19 { pt3dadd( 51.1004, 58.5348, -21.9221, 0.49 ) }
    dend_19 { pt3dadd( 51.6856, 59.8032, -22.2691, 0.49 ) }
    dend_19 { pt3dadd( 52.157, 60.8507, -22.5592, 0.49 ) }
    dend_19 { pt3dadd( 53.2219, 63.1799, -23.2348, 0.86 ) }
    dend_19 { pt3dadd( 54.0963, 65.1245, -23.7272, 0.73 ) }
    dend_19 { pt3dadd( 55.05, 67.2102, -24.0971, 0.73 ) }
    dend_19 { pt3dadd( 56.7125, 70.4397, -24.5767, 0.73 ) }
    dend_19 { pt3dadd( 58.3457, 73.1862, -24.996, 0.61 ) }
    dend_19 { pt3dadd( 60.025, 75.8617, -25.4032, 0.73 ) }
    dend_19 { pt3dadd( 61.6238, 78.1198, -25.7008, 0.73 ) }
    dend_19 { pt3dadd( 64.6601, 82.0736, -26.1966, 1.22 ) }
    dend_19 { pt3dadd( 66.8743, 84.7733, -26.4411, 0.98 ) }
    dend_19 { pt3dadd( 68.4285, 86.5251, -26.4365, 0.98 ) }
    dend_19 { pt3dadd( 72.3148, 92.9702, -28.1834, 0.98 ) }
    dend_19 { pt3dadd( 75.1048, 100.083, -29.0961, 0.98 ) }
    dend_19 { pt3dadd( 78.572, 106.951, -29.3668, 0.98 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 90/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 40.5277, 22.0894, -18.8765, 1.22 ) }
    dend_16 { pt3dadd( 43.071, 21.311, -19.4752, 1.22 ) }
    dend_16 { pt3dadd( 50.3183, 19.3062, -21.3631, 1.1 ) }
    dend_16 { pt3dadd( 54.3787, 18.34, -22.5375, 0.86 ) }
    dend_16 { pt3dadd( 61.2483, 16.9875, -24.4831, 1.1 ) }
    dend_16 { pt3dadd( 65.7161, 16.2509, -25.7818, 1.1 ) }
    dend_16 { pt3dadd( 74.9163, 15.007, -28.4202, 1.22 ) }
    dend_16 { pt3dadd( 79.5631, 14.5954, -29.7327, 1.1 ) }
    dend_16 { pt3dadd( 83.6939, 14.3863, -30.8011, 0.73 ) }
    dend_16 { pt3dadd( 88.6442, 14.3261, -32.0318, 0.98 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_16 { pt3dadd( 93.2655, 14.4, -33.2146, 0.98 ) }
    dend_16 { pt3dadd( 97.5348, 14.5379, -34.1764, 1.22 ) }
    dend_16 { pt3dadd( 101.093, 14.5655, -34.9851, 0.98 ) }
    dend_16 { pt3dadd( 107.105, 14.6432, -36.4041, 1.22 ) }
    dend_16 { pt3dadd( 111.103, 14.6364, -37.4199, 0.86 ) }
    dend_16 { pt3dadd( 118.295, 14.5738, -39.3441, 0.86 ) }
    dend_16 { pt3dadd( 129.727, 14.4402, -42.4412, 1.1 ) }
    dend_16 { pt3dadd( 137.221, 14.3355, -44.6156, 1.1 ) }
    dend_16 { pt3dadd( 143.028, 14.2919, -46.4097, 0.98 ) }
    dend_16 { pt3dadd( 147.549, 14.3512, -47.8855, 0.86 ) }
    dend_16 { pt3dadd( 158.188, 15.6297, -49.9846, 0.86 ) }
    dend_16 { pt3dadd( 168.203, 17.1336, -54.0628, 0.86 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 12/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.92948, -27.9993, -5.80515, 0.61 ) }
    dend_10 { pt3dadd( 10.7081, -28.6204, -4.83926, 0.61 ) }
    dend_10 { pt3dadd( 17.5844, -29.8712, -3.1929, 0.98 ) }
    dend_10 { pt3dadd( 24.6717, -31.3877, -1.69237, 0.98 ) }
    dend_10 { pt3dadd( 31.8788, -33.0588, -0.315758, 0.98 ) }
    dend_10 { pt3dadd( 35.6917, -33.9459, 0.360204, 0.86 ) }
    dend_10 { pt3dadd( 36.4792, -34.1211, 0.473357, 0.86 ) }
    dend_10 { pt3dadd( 38.7995, -34.5755, 0.6604, 0.86 ) }
    dend_10 { pt3dadd( 41.5882, -34.9772, 0.692738, 0.86 ) }
    dend_10 { pt3dadd( 44.1173, -35.2606, 0.60483, 1.1 ) }
    dend_10 { pt3dadd( 48.6553, -35.5957, 0.303445, 1.1 ) }
    dend_10 { pt3dadd( 52.5896, -35.4662, 0.248549, 0.86 ) }
    dend_10 { pt3dadd( 54.5327, -35.1394, 0.32008, 0.86 ) }
    dend_10 { pt3dadd( 56.492, -34.3608, 0.547639, 0.86 ) }
    dend_10 { pt3dadd( 57.4988, -33.4645, 0.894964, 0.61 ) }
    dend_10 { pt3dadd( 57.4547, -29.8211, 2.6991, 0.49 ) }
    dend_10 { pt3dadd( 56.9107, -27.6723, 3.86013, 0.24 ) }
    dend_10 { pt3dadd( 56.5778, -26.7044, 4.46955, 0.24 ) }
    dend_10 { pt3dadd( 56.1038, -25.3528, 5.29614, 0.24 ) }
    dend_10 { pt3dadd( 55.5534, -23.9701, 6.17664, 0.24 ) }
    dend_10 { pt3dadd( 54.3955, -20.8308, 8.15144, 0.24 ) }
    dend_10 { pt3dadd( 54.1727, -19.9389, 8.63794, 0.24 ) }
    dend_10 { pt3dadd( 53.8489, -18.6828, 9.47575, 1.22 ) }
    dend_10 { pt3dadd( 53.3052, -16.1085, 11.4589, 1.35 ) }
    dend_10 { pt3dadd( 62.6026, -15.104, 12.7932, 1.35 ) }
    dend_10 { pt3dadd( 71.24, -12.3756, 15.3932, 1.35 ) }
    dend_10 { pt3dadd( 80.0808, -10.8748, 18.3429, 1.35 ) }
    dend_10 { pt3dadd( 88.6705, -9.60113, 22.048, 1.35 ) }
    dend_10 { pt3dadd( 96.6156, -8.3112, 26.9781, 1.35 ) }
    dend_10 { pt3dadd( 104.22, -8.08092, 32.5784, 1.35 ) }
    dend_10 { pt3dadd( 112.365, -6.94786, 37.2164, 1.35 ) }
    dend_10 { pt3dadd( 120.585, -4.84075, 41.3292, 1.35 ) }
    dend_10 { pt3dadd( 128.641, -3.72359, 46.1233, 1.35 ) }
    dend_10 { pt3dadd( 135.856, -2.30902, 52.0378, 1.35 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 46/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.92948, -27.9993, -5.80515, 1.35 ) }
    dend_3 { pt3dadd( 6.62539, -34.6226, -7.17348, 1.35 ) }
    dend_3 { pt3dadd( 6.32398, -41.1877, -8.52979, 1.35 ) }
    // Section: dend_35, id: dend_35, parent: dend_29 (entry count 49/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -36.4555, 28.8373, -3.86354, 0.73 ) }
    dend_35 { pt3dadd( -38.208, 33.2012, -2.19829, 0.73 ) }
    dend_35 { pt3dadd( -39.6126, 36.1307, -0.837452, 0.73 ) }
    dend_35 { pt3dadd( -40.8574, 38.5854, 0.330457, 0.73 ) }
    dend_35 { pt3dadd( -41.7137, 40.3579, 1.13115, 0.73 ) }
    dend_35 { pt3dadd( -43.1641, 43.4604, 2.50871, 0.73 ) }
    dend_35 { pt3dadd( -45.4608, 48.3323, 4.63894, 0.73 ) }
    dend_35 { pt3dadd( -47.2883, 52.3801, 6.15947, 0.73 ) }
    dend_35 { pt3dadd( -49.3014, 57.1978, 7.98305, 0.73 ) }
    dend_35 { pt3dadd( -50.6979, 60.7445, 9.31778, 0.73 ) }
    dend_35 { pt3dadd( -51.7252, 63.5959, 10.3541, 0.73 ) }
    dend_35 { pt3dadd( -52.27, 65.1143, 10.8975, 0.73 ) }
    dend_35 { pt3dadd( -54.0605, 70.631, 12.6463, 0.73 ) }
    dend_35 { pt3dadd( -55.2841, 74.8081, 14.0448, 0.73 ) }
    dend_35 { pt3dadd( -56.1058, 77.7398, 15.1218, 0.73 ) }
    dend_35 { pt3dadd( -56.9335, 80.8977, 16.3571, 0.73 ) }
    dend_35 { pt3dadd( -58.0625, 85.8378, 18.281, 0.73 ) }
    dend_35 { pt3dadd( -58.6746, 88.7581, 19.3985, 0.73 ) }
    dend_35 { pt3dadd( -59.6391, 93.7738, 21.2729, 0.73 ) }
    dend_35 { pt3dadd( -60.246, 96.941, 22.4448, 0.73 ) }
    dend_35 { pt3dadd( -61.0941, 101.305, 24.0471, 0.73 ) }
    dend_35 { pt3dadd( -62.0009, 105.525, 25.7301, 0.73 ) }
    dend_35 { pt3dadd( -63.1437, 110.875, 28.0203, 0.73 ) }
    dend_35 { pt3dadd( -64.0088, 114.586, 29.5243, 0.73 ) }
    dend_35 { pt3dadd( -65.3187, 119.447, 31.7132, 0.73 ) }
    dend_35 { pt3dadd( -66.3605, 122.865, 33.4743, 0.73 ) }
    dend_35 { pt3dadd( -68.4216, 129.011, 37.0162, 0.73 ) }
    dend_35 { pt3dadd( -69.6953, 132.183, 39.2917, 0.73 ) }
    dend_35 { pt3dadd( -72.0959, 137.445, 43.6114, 0.73 ) }
    dend_35 { pt3dadd( -75.6173, 144.125, 49.6018, 0.73 ) }
    dend_35 { pt3dadd( -77.5181, 147.453, 52.6519, 0.73 ) }
    dend_35 { pt3dadd( -78.6225, 149.293, 54.4067, 0.73 ) }
    dend_35 { pt3dadd( -83.123, 156.398, 61.2174, 0.73 ) }
    dend_35 { pt3dadd( -84.7121, 158.716, 63.6196, 0.73 ) }
    dend_35 { pt3dadd( -88.295, 163.839, 69.01, 0.73 ) }
    dend_35 { pt3dadd( -89.9152, 166.221, 71.2521, 0.73 ) }
    dend_35 { pt3dadd( -92.7261, 170.412, 75.1265, 0.73 ) }
    dend_35 { pt3dadd( -93.9486, 172.328, 76.9056, 0.73 ) }
    dend_35 { pt3dadd( -96.6981, 177.168, 81.1334, 0.73 ) }
    dend_35 { pt3dadd( -98.5027, 180.49, 84.0808, 0.73 ) }
    dend_35 { pt3dadd( -99.623, 182.781, 86.1343, 0.73 ) }
    dend_35 { pt3dadd( -101.242, 186.475, 89.4532, 0.73 ) }
    dend_35 { pt3dadd( -102.641, 189.731, 92.3322, 0.73 ) }
    dend_35 { pt3dadd( -103.811, 192.654, 94.9139, 0.37 ) }
    dend_35 { pt3dadd( -105.124, 196.289, 98.0062, 0.37 ) }
    dend_35 { pt3dadd( -106.336, 199.724, 101.227, 0.37 ) }
    dend_35 { pt3dadd( -106.927, 201.639, 102.855, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 96/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -36.4555, 28.8373, -3.86354, 0.86 ) }
    dend_30 { pt3dadd( -37.9971, 29.1231, -3.57193, 0.86 ) }
    dend_30 { pt3dadd( -40.1784, 29.2707, -3.11463, 0.86 ) }
    dend_30 { pt3dadd( -42.2803, 29.1691, -2.66947, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_30 { pt3dadd( -43.6625, 28.9099, -2.2398, 0.86 ) }
    dend_30 { pt3dadd( -45.4846, 28.446, -1.59345, 0.86 ) }
    dend_30 { pt3dadd( -46.5806, 28.1532, -1.17117, 0.86 ) }
    dend_30 { pt3dadd( -48.2557, 27.6463, -0.341064, 0.86 ) }
    dend_30 { pt3dadd( -49.5433, 27.2341, 0.349511, 0.86 ) }
    dend_30 { pt3dadd( -52.6812, 26.3125, 1.99866, 0.86 ) }
    dend_30 { pt3dadd( -53.8248, 26.0673, 2.55922, 0.86 ) }
    dend_30 { pt3dadd( -55.2933, 25.8459, 3.25591, 0.86 ) }
    dend_30 { pt3dadd( -57.5495, 25.7024, 4.3336, 0.86 ) }
    dend_30 { pt3dadd( -58.8318, 25.8093, 4.97113, 0.86 ) }
    dend_30 { pt3dadd( -60.5399, 26.2459, 5.74061, 0.86 ) }
    dend_30 { pt3dadd( -61.7184, 26.8689, 6.0207, 0.86 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 12/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 78.572, 106.951, -29.3668, 0.61 ) }
    dend_21 { pt3dadd( 81.707, 113.855, -30.1996, 0.61 ) }
    dend_21 { pt3dadd( 84.9559, 120.463, -32.2824, 0.61 ) }
    dend_21 { pt3dadd( 86.8009, 127.464, -34.7486, 0.61 ) }
    dend_21 { pt3dadd( 87.2007, 134.577, -37.5509, 0.61 ) }
    dend_21 { pt3dadd( 86.5424, 141.852, -39.8238, 0.61 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 78.572, 106.951, -29.3668, 0.61 ) }
    dend_20 { pt3dadd( 81.9626, 114.237, -30.0979, 0.61 ) }
    dend_20 { pt3dadd( 84.6048, 121.813, -30.8916, 0.61 ) }
    dend_20 { pt3dadd( 88.3186, 128.553, -33.4479, 0.61 ) }
    dend_20 { pt3dadd( 92.7448, 135.29, -34.0793, 0.61 ) }
    dend_20 { pt3dadd( 96.5371, 142.379, -34.8391, 0.61 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 24/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 168.203, 17.1336, -54.0628, 0.61 ) }
    dend_18 { pt3dadd( 177.829, 16.6634, -57.7037, 0.61 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 26/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 168.203, 17.1336, -54.0628, 0.61 ) }
    dend_17 { pt3dadd( 177.749, 16.6385, -57.2652, 0.61 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 28/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 135.856, -2.30902, 52.0378, 1.1 ) }
    dend_12 { pt3dadd( 142.583, -1.01457, 55.2368, 1.1 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 30/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 135.856, -2.30902, 52.0378, 1.35 ) }
    dend_11 { pt3dadd( 148.66, 0.15067, 55.7861, 1.1 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 32/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 6.32398, -41.1877, -8.52979, 1.1 ) }
    dend_9 { pt3dadd( 2.29243, -44.1611, -10.0341, 1.1 ) }
    dend_9 { pt3dadd( -1.43028, -46.9786, -11.546, 0.86 ) }
    dend_9 { pt3dadd( -5.79002, -50.4411, -13.4171, 0.86 ) }
    dend_9 { pt3dadd( -11.6287, -55.3246, -16.0359, 0.86 ) }
    dend_9 { pt3dadd( -15.2087, -58.4864, -17.692, 0.86 ) }
    dend_9 { pt3dadd( -15.9837, -59.1959, -18.0406, 0.86 ) }
    dend_9 { pt3dadd( -17.4313, -60.6229, -18.7503, 0.86 ) }
    dend_9 { pt3dadd( -18.4974, -61.8191, -19.2712, 0.86 ) }
    dend_9 { pt3dadd( -19.2679, -62.8928, -19.6955, 0.86 ) }
    dend_9 { pt3dadd( -19.8867, -63.9492, -19.9783, 0.86 ) }
    dend_9 { pt3dadd( -21.5896, -66.4707, -20.3701, 0.86 ) }
    dend_9 { pt3dadd( -22.2765, -67.2292, -20.5087, 0.86 ) }
    dend_9 { pt3dadd( -23.9903, -68.6416, -20.8589, 0.86 ) }
    dend_9 { pt3dadd( -25.298, -69.4441, -21.1283, 0.86 ) }
    dend_9 { pt3dadd( -29.1323, -71.2038, -21.8228, 0.86 ) }
    dend_9 { pt3dadd( -30.7876, -71.8723, -22.2344, 0.86 ) }
    dend_9 { pt3dadd( -32.3258, -72.4653, -22.7426, 0.86 ) }
    dend_9 { pt3dadd( -33.4076, -72.8923, -23.1486, 0.86 ) }
    dend_9 { pt3dadd( -35.7129, -73.931, -24.1606, 0.86 ) }
    dend_9 { pt3dadd( -38.0774, -75.2402, -25.279, 0.86 ) }
    dend_9 { pt3dadd( -40.987, -77.5133, -26.9115, 0.86 ) }
    dend_9 { pt3dadd( -42.0899, -78.5076, -27.4591, 0.86 ) }
    dend_9 { pt3dadd( -43.086, -79.4817, -27.8987, 0.86 ) }
    dend_9 { pt3dadd( -44.2096, -80.6293, -28.3708, 0.86 ) }
    dend_9 { pt3dadd( -46.6421, -83.1452, -29.3555, 0.86 ) }
    dend_9 { pt3dadd( -47.6763, -84.121, -29.6997, 0.86 ) }
    dend_9 { pt3dadd( -49.1941, -85.3341, -30.0291, 0.86 ) }
    dend_9 { pt3dadd( -50.2862, -86.0957, -30.2358, 0.86 ) }
    dend_9 { pt3dadd( -51.9834, -87.1962, -30.6548, 0.86 ) }
    dend_9 { pt3dadd( -53.1134, -87.8945, -31.1015, 0.86 ) }
    dend_9 { pt3dadd( -54.5485, -88.7787, -31.888, 0.86 ) }
    dend_9 { pt3dadd( -55.7389, -89.4854, -32.6161, 0.86 ) }
    dend_9 { pt3dadd( -57.4462, -90.5758, -33.667, 0.86 ) }
    dend_9 { pt3dadd( -59.3126, -91.8741, -34.9504, 0.86 ) }
    dend_9 { pt3dadd( -62.0208, -94.032, -37.0289, 1.35 ) }
    dend_9 { pt3dadd( -63.3505, -95.1347, -38.0773, 1.1 ) }
    dend_9 { pt3dadd( -63.8322, -95.5861, -38.4795, 1.1 ) }
    dend_9 { pt3dadd( -67.0786, -99.0543, -41.2901, 0.73 ) }
    dend_9 { pt3dadd( -70.1783, -102.736, -44.0395, 0.98 ) }
    dend_9 { pt3dadd( -72.2791, -105.254, -45.8114, 1.1 ) }
    dend_9 { pt3dadd( -74.6372, -108.277, -47.8213, 1.22 ) }
    dend_9 { pt3dadd( -76.9391, -111.269, -49.8658, 0.73 ) }
    dend_9 { pt3dadd( -79.4631, -114.382, -52.0231, 0.98 ) }
    dend_9 { pt3dadd( -81.088, -116.236, -53.292, 0.61 ) }
    dend_9 { pt3dadd( -84.704, -119.761, -55.4234, 0.98 ) }
    dend_9 { pt3dadd( -86.638, -121.42, -56.3856, 0.61 ) }
    dend_9 { pt3dadd( -88.4277, -122.757, -57.1305, 0.37 ) }
    dend_9 { pt3dadd( -92.1917, -125.057, -58.44, 0.49 ) }
    dend_9 { pt3dadd( -96.134, -127.226, -59.697, 0.86 ) }
    dend_9 { pt3dadd( -100.466, -129.527, -61.0011, 0.86 ) }
    dend_9 { pt3dadd( -103.795, -131.196, -61.9014, 0.86 ) }
    dend_9 { pt3dadd( -107.007, -132.777, -62.784, 0.37 ) }
    dend_9 { pt3dadd( -109.611, -134.111, -63.5139, 0.61 ) }
    dend_9 { pt3dadd( -111.051, -134.875, -63.9818, 0.37 ) }
    dend_9 { pt3dadd( -116.194, -137.854, -65.9893, 0.86 ) }
    dend_9 { pt3dadd( -120.813, -140.738, -68.0458, 0.49 ) }
    dend_9 { pt3dadd( -123.4, -142.472, -69.3321, 0.24 ) }
    dend_9 { pt3dadd( -125.467, -143.964, -70.3656, 0.49 ) }
    dend_9 { pt3dadd( -127.354, -145.42, -71.2781, 0.49 ) }
    dend_9 { pt3dadd( -130.688, -148.108, -72.8609, 0.86 ) }
    dend_9 { pt3dadd( -132.916, -150.2, -73.9749, 0.12 ) }
    dend_9 { pt3dadd( -135.267, -152.753, -75.1467, 0.61 ) }
    dend_9 { pt3dadd( -139.246, -157.275, -76.8565, 0.61 ) }
    dend_9 { pt3dadd( -140.308, -158.553, -77.2764, 0.61 ) }
    dend_9 { pt3dadd( -143.013, -161.896, -78.2353, 0.61 ) }
    dend_9 { pt3dadd( -145.63, -165.236, -79.0973, 0.61 ) }
    dend_9 { pt3dadd( -148.602, -169.224, -80.1146, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_9 { pt3dadd( -152.669, -174.697, -81.5416, 0.12 ) }
    dend_9 { pt3dadd( -153.702, -176.143, -81.9789, 0.12 ) }
    dend_9 { pt3dadd( -154.024, -176.565, -82.113, 0.37 ) }
    dend_9 { pt3dadd( -154.877, -177.645, -82.4674, 0.37 ) }
    dend_9 { pt3dadd( -155.737, -178.647, -82.909, 0.37 ) }
    dend_9 { pt3dadd( -157.018, -180.102, -83.772, 0.37 ) }
    dend_9 { pt3dadd( -158.546, -181.884, -85.0613, 0.37 ) }
    dend_9 { pt3dadd( -159.773, -183.315, -86.1456, 0.37 ) }
    dend_9 { pt3dadd( -160.973, -184.719, -87.2374, 0.37 ) }
    dend_9 { pt3dadd( -162.88, -186.959, -89.0659, 0.37 ) }
    dend_9 { pt3dadd( -164.086, -188.463, -90.3508, 0.37 ) }
    dend_9 { pt3dadd( -164.867, -189.573, -91.3738, 0.37 ) }
    dend_9 { pt3dadd( -166.594, -192.415, -94.1713, 0.49 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 13/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 6.32398, -41.1877, -8.52979, 1.35 ) }
    dend_4 { pt3dadd( 6.85119, -43.6082, -9.17792, 1.35 ) }
    dend_4 { pt3dadd( 8.25557, -50.056, -10.9044, 1.35 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 16/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -61.7184, 26.8689, 6.0207, 0.61 ) }
    dend_34 { pt3dadd( -62.1317, 27.0446, 6.29756, 0.61 ) }
    dend_34 { pt3dadd( -63.2953, 27.5986, 7.04453, 0.61 ) }
    dend_34 { pt3dadd( -66.2215, 29.0505, 9.00318, 0.61 ) }
    dend_34 { pt3dadd( -67.394, 29.6523, 9.75765, 0.61 ) }
    dend_34 { pt3dadd( -68.4799, 30.195, 10.4091, 0.61 ) }
    dend_34 { pt3dadd( -69.372, 30.6212, 10.9418, 0.61 ) }
    dend_34 { pt3dadd( -70.9735, 31.376, 11.8513, 0.61 ) }
    dend_34 { pt3dadd( -72.085, 31.9319, 12.4253, 0.61 ) }
    dend_34 { pt3dadd( -73.3952, 32.632, 13.0627, 0.61 ) }
    dend_34 { pt3dadd( -74.7075, 33.317, 13.7111, 0.61 ) }
    dend_34 { pt3dadd( -77.6885, 34.7982, 15.1467, 0.61 ) }
    dend_34 { pt3dadd( -79.4557, 35.668, 15.9503, 0.61 ) }
    dend_34 { pt3dadd( -81.6991, 36.7513, 16.9279, 0.61 ) }
    dend_34 { pt3dadd( -84.3932, 38.0823, 18.0469, 0.61 ) }
    dend_34 { pt3dadd( -86.2564, 39.0546, 18.7519, 0.61 ) }
    dend_34 { pt3dadd( -86.9335, 39.431, 18.9669, 0.37 ) }
    dend_34 { pt3dadd( -88.6187, 40.4063, 19.3141, 0.37 ) }
    dend_34 { pt3dadd( -90.4014, 41.4274, 19.679, 0.37 ) }
    dend_34 { pt3dadd( -92.384, 42.489, 20.0823, 0.37 ) }
    dend_34 { pt3dadd( -94.3117, 43.5139, 20.5221, 0.12 ) }
    dend_34 { pt3dadd( -95.5341, 44.1459, 20.9981, 0.12 ) }
    dend_34 { pt3dadd( -96.6619, 44.6712, 21.5814, 0.49 ) }
    dend_34 { pt3dadd( -99.6429, 45.8168, 23.6364, 0.49 ) }
    dend_34 { pt3dadd( -101.347, 46.393, 25.0181, 0.49 ) }
    dend_34 { pt3dadd( -102.484, 46.7591, 26.0127, 0.49 ) }
    dend_34 { pt3dadd( -104.582, 47.4395, 27.8854, 0.49 ) }
    dend_34 { pt3dadd( -105.589, 47.7996, 28.7197, 0.49 ) }
    dend_34 { pt3dadd( -108.048, 48.7605, 30.4275, 0.49 ) }
    dend_34 { pt3dadd( -109.251, 49.2897, 31.0121, 0.49 ) }
    dend_34 { pt3dadd( -111.339, 50.2888, 31.7008, 0.49 ) }
    dend_34 { pt3dadd( -112.398, 50.7786, 31.8983, 0.49 ) }
    dend_34 { pt3dadd( -114.668, 51.7755, 32.0541, 0.49 ) }
    dend_34 { pt3dadd( -117.29, 52.9025, 32.1074, 0.49 ) }
    dend_34 { pt3dadd( -119.081, 53.6316, 32.0481, 0.49 ) }
    dend_34 { pt3dadd( -121.32, 54.4571, 31.9817, 0.49 ) }
    dend_34 { pt3dadd( -122.934, 54.9839, 31.9704, 0.49 ) }
    dend_34 { pt3dadd( -124.445, 55.4634, 32.0031, 0.49 ) }
    dend_34 { pt3dadd( -125.899, 55.9242, 32.097, 0.49 ) }
    dend_34 { pt3dadd( -128.312, 56.7941, 32.3704, 0.49 ) }
    dend_34 { pt3dadd( -130.002, 57.4993, 32.648, 0.49 ) }
    dend_34 { pt3dadd( -133.605, 59.2238, 33.3253, 0.49 ) }
    dend_34 { pt3dadd( -135.005, 59.9624, 33.6079, 0.49 ) }
    dend_34 { pt3dadd( -136.652, 60.8678, 33.9531, 0.49 ) }
    dend_34 { pt3dadd( -139.386, 62.4185, 34.5486, 0.49 ) }
    dend_34 { pt3dadd( -142.004, 64.009, 35.1763, 0.49 ) }
    dend_34 { pt3dadd( -143.718, 65.1363, 35.6223, 0.49 ) }
    dend_34 { pt3dadd( -145.786, 66.6203, 36.2151, 0.49 ) }
    dend_34 { pt3dadd( -147.369, 67.8051, 36.6827, 0.49 ) }
    dend_34 { pt3dadd( -148.744, 68.8786, 37.0791, 0.49 ) }
    dend_34 { pt3dadd( -150.412, 70.2114, 37.6301, 0.49 ) }
    dend_34 { pt3dadd( -151.741, 71.2906, 38.1191, 0.49 ) }
    dend_34 { pt3dadd( -153.384, 72.6069, 38.7404, 0.49 ) }
    dend_34 { pt3dadd( -156.638, 75.2077, 39.9974, 0.49 ) }
    dend_34 { pt3dadd( -158.814, 76.9276, 40.8268, 0.49 ) }
    dend_34 { pt3dadd( -162.63, 79.9328, 42.0279, 0.49 ) }
    dend_34 { pt3dadd( -164.609, 81.4417, 42.4852, 0.49 ) }
    dend_34 { pt3dadd( -167.127, 83.2539, 42.8176, 0.49 ) }
    dend_34 { pt3dadd( -168.839, 84.4298, 42.7849, 0.37 ) }
    dend_34 { pt3dadd( -171.459, 86.1527, 42.5047, 0.12 ) }
    dend_34 { pt3dadd( -174.723, 88.3241, 41.7547, 0.12 ) }
    dend_34 { pt3dadd( -177.08, 89.9961, 40.8016, 0.12 ) }
    dend_34 { pt3dadd( -179.25, 91.8338, 39.4328, 0.12 ) }
    dend_34 { pt3dadd( -181.54, 94.4984, 37.0067, 0.12 ) }
    dend_34 { pt3dadd( -182.992, 96.9322, 34.4628, 0.37 ) }
    dend_34 { pt3dadd( -183.749, 99.1682, 31.8774, 0.37 ) }
    dend_34 { pt3dadd( -183.998, 100.87, 29.8414, 0.37 ) }
    dend_34 { pt3dadd( -184.046, 104.222, 25.6409, 0.86 ) }
    dend_34 { pt3dadd( -183.902, 106.42, 22.6923, 0.73 ) }
    dend_34 { pt3dadd( -183.869, 107.103, 21.7259, 0.73 ) }
    dend_34 { pt3dadd( -183.963, 108.713, 19.3172, 0.73 ) }
    dend_34 { pt3dadd( -184.278, 109.807, 17.6987, 0.73 ) }
    dend_34 { pt3dadd( -184.723, 110.607, 16.5444, 0.73 ) }
    dend_34 { pt3dadd( -185.909, 112.059, 14.5245, 0.73 ) }
    dend_34 { pt3dadd( -187.107, 113.386, 12.7029, 0.73 ) }
    dend_34 { pt3dadd( -187.912, 114.332, 11.371, 0.73 ) }
    dend_34 { pt3dadd( -188.807, 115.423, 9.85661, 0.73 ) }
    dend_34 { pt3dadd( -189.547, 116.374, 8.56561, 0.73 ) }
    dend_34 { pt3dadd( -190.572, 117.76, 6.72657, 0.73 ) }
    dend_34 { pt3dadd( -191.544, 119.052, 5.09029, 0.73 ) }
    dend_34 { pt3dadd( -192.724, 120.677, 2.96174, 0.73 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 97/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -61.7184, 26.8689, 6.0207, 0.61 ) }
    dend_31 { pt3dadd( -63.1158, 26.779, 5.14432, 0.61 ) }
    dend_31 { pt3dadd( -64.9108, 26.6815, 4.21568, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_31 { pt3dadd( -68.0065, 26.476, 2.93287, 0.61 ) }
    dend_31 { pt3dadd( -72.6916, 26.0351, 1.39741, 0.61 ) }
    dend_31 { pt3dadd( -76.6304, 25.5709, 0.354768, 0.61 ) }
    dend_31 { pt3dadd( -78.8839, 25.2927, -0.293148, 0.61 ) }
    dend_31 { pt3dadd( -82.2457, 24.8934, -1.2745, 0.61 ) }
    dend_31 { pt3dadd( -85.42, 24.497, -2.16681, 0.61 ) }
    dend_31 { pt3dadd( -88.6127, 24.0198, -2.92231, 0.61 ) }
    dend_31 { pt3dadd( -90.5659, 23.6392, -3.21377, 0.61 ) }
    dend_31 { pt3dadd( -94.68, 22.7335, -3.77161, 0.61 ) }
    dend_31 { pt3dadd( -97.6553, 21.9853, -4.34665, 0.61 ) }
    dend_31 { pt3dadd( -99.8585, 21.4274, -4.92572, 0.61 ) }
    dend_31 { pt3dadd( -102.49, 20.751, -5.68058, 0.61 ) }
    dend_31 { pt3dadd( -104.824, 20.129, -6.35669, 0.61 ) }
    dend_31 { pt3dadd( -107.429, 19.3829, -7.07059, 0.61 ) }
    dend_31 { pt3dadd( -109.719, 18.6972, -7.6821, 0.61 ) }
    dend_31 { pt3dadd( -112.947, 17.7316, -8.74086, 0.61 ) }
    dend_31 { pt3dadd( -115.675, 16.9131, -9.784, 0.61 ) }
    dend_31 { pt3dadd( -117.414, 16.4, -10.5038, 0.61 ) }
    dend_31 { pt3dadd( -119.854, 15.7342, -11.5111, 0.61 ) }
    dend_31 { pt3dadd( -122.049, 15.1341, -12.3905, 0.61 ) }
    dend_31 { pt3dadd( -124.541, 14.498, -13.4275, 0.61 ) }
    dend_31 { pt3dadd( -126.923, 13.879, -14.4847, 0.61 ) }
    dend_31 { pt3dadd( -128.863, 13.4122, -15.3717, 0.61 ) }
    dend_31 { pt3dadd( -130.7, 13.0124, -16.2087, 0.61 ) }
    dend_31 { pt3dadd( -139.962, 10.4911, -18.4713, 0.61 ) }
    dend_31 { pt3dadd( -149.243, 7.36219, -19.5911, 0.61 ) }
    dend_31 { pt3dadd( -158.506, 4.05315, -20.2203, 0.61 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 27/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 8.25557, -50.056, -10.9044, 0.61 ) }
    dend_6 { pt3dadd( 9.57997, -55.5714, -10.2791, 0.61 ) }
    dend_6 { pt3dadd( 10.4105, -58.2032, -9.94599, 0.61 ) }
    dend_6 { pt3dadd( 12.0653, -62.7223, -9.39286, 0.98 ) }
    dend_6 { pt3dadd( 12.8785, -64.955, -9.13327, 0.12 ) }
    dend_6 { pt3dadd( 13.932, -67.4006, -8.87126, 0.49 ) }
    dend_6 { pt3dadd( 16.5156, -73.1283, -8.1851, 1.1 ) }
    dend_6 { pt3dadd( 18.324, -76.6472, -7.78814, 0.49 ) }
    dend_6 { pt3dadd( 21.2313, -82.0117, -7.14844, 0.12 ) }
    dend_6 { pt3dadd( 22.5039, -84.2534, -6.88117, 0.12 ) }
    dend_6 { pt3dadd( 25.7909, -89.8311, -6.17359, 1.1 ) }
    dend_6 { pt3dadd( 27.977, -93.491, -5.73139, 0.61 ) }
    dend_6 { pt3dadd( 31.9811, -103.245, -4.12682, 0.61 ) }
    dend_6 { pt3dadd( 36.3747, -112.949, -4.26746, 0.61 ) }
    dend_6 { pt3dadd( 37.8443, -123.46, -4.08364, 0.61 ) }
    dend_6 { pt3dadd( 39.262, -133.949, -3.17077, 0.61 ) }
    dend_6 { pt3dadd( 41.1244, -144.336, -1.86926, 0.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 8.25557, -50.056, -10.9044, 1.22 ) }
    dend_5 { pt3dadd( 9.7156, -60.591, -14.409, 1.22 ) }
    dend_5 { pt3dadd( 10.9307, -68.6505, -17.2096, 1.22 ) }
    dend_5 { pt3dadd( 12.6501, -78.16, -20.7959, 1.22 ) }
    dend_5 { pt3dadd( 15.1121, -89.6924, -25.2349, 1.22 ) }
    dend_5 { pt3dadd( 17.5248, -99.9479, -29.1731, 0.86 ) }
    dend_5 { pt3dadd( 17.7742, -100.956, -29.5573, 0.86 ) }
    dend_5 { pt3dadd( 19.2598, -105.907, -31.5393, 0.86 ) }
    dend_5 { pt3dadd( 21.006, -112.058, -33.9873, 0.86 ) }
    dend_5 { pt3dadd( 22.4482, -116.863, -35.7595, 0.86 ) }
    dend_5 { pt3dadd( 23.1391, -119.233, -36.594, 0.86 ) }
    dend_5 { pt3dadd( 23.6998, -120.876, -37.1916, 0.86 ) }
    dend_5 { pt3dadd( 24.2494, -123.001, -37.8521, 0.86 ) }
    dend_5 { pt3dadd( 24.5796, -125.511, -38.3961, 0.86 ) }
    dend_5 { pt3dadd( 24.6307, -126.998, -38.7015, 0.86 ) }
    dend_5 { pt3dadd( 24.6262, -129.509, -39.4055, 0.86 ) }
    dend_5 { pt3dadd( 24.7133, -131.825, -40.2442, 0.86 ) }
    dend_5 { pt3dadd( 24.726, -132.429, -40.4679, 0.86 ) }
    dend_5 { pt3dadd( 24.7128, -134.885, -41.4265, 0.86 ) }
    dend_5 { pt3dadd( 24.6513, -137.901, -42.662, 0.86 ) }
    dend_5 { pt3dadd( 24.5233, -139.732, -43.4274, 1.22 ) }
    dend_5 { pt3dadd( 24.2049, -142.823, -44.6964, 1.22 ) }
    dend_5 { pt3dadd( 23.4758, -148.261, -46.6282, 1.35 ) }
    dend_5 { pt3dadd( 22.4108, -154.967, -48.7141, 1.35 ) }
    dend_5 { pt3dadd( 22.0085, -157.286, -49.3202, 1.59 ) }
    dend_5 { pt3dadd( 21.1574, -163.478, -50.6551, 1.1 ) }
    dend_5 { pt3dadd( 20.5669, -167.941, -51.5517, 1.1 ) }
    dend_5 { pt3dadd( 19.8487, -173.871, -52.5929, 0.86 ) }
    dend_5 { pt3dadd( 19.5761, -177.099, -53.0983, 1.47 ) }
    dend_5 { pt3dadd( 19.3095, -181.078, -53.463, 0.86 ) }
    dend_5 { pt3dadd( 19.0754, -186.817, -53.7388, 1.1 ) }
    dend_5 { pt3dadd( 19.893, -198.118, -58.9527, 1.1 ) }
    dend_5 { pt3dadd( 21.6998, -210.27, -60.9562, 1.1 ) }
    dend_5 { pt3dadd( 21.2864, -222.581, -62.7216, 1.1 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 78/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -158.506, 4.05315, -20.2203, 0.61 ) }
    dend_33 { pt3dadd( -168.253, 1.50638, -22.1238, 0.61 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 80/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -158.506, 4.05315, -20.2203, 0.61 ) }
    dend_32 { pt3dadd( -163.312, 2.90133, -21.5077, 0.61 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 82/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 41.1244, -144.336, -1.86926, 0.61 ) }
    dend_8 { pt3dadd( 45.7298, -152.498, -1.74395, 0.61 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 84/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 41.1244, -144.336, -1.86926, 0.61 ) }
    dend_7 { pt3dadd( 41.7995, -152.44, -0.219004, 0.61 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_26, dend_14, dend_1, dend_0, dend_39, dend_38, dend_28, dend_27, dend_23, dend_15, dend_13, dend_2, dend_36, dend_29, dend_25, dend_24, dend_22, dend_19, dend_16, dend_10, dend_3, dend_35, dend_30, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_4, dend_34, dend_31, dend_6, dend_5, dend_33, dend_32, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_26, dend_14, dend_1, dend_0, dend_39, dend_38, dend_28, dend_27, dend_23, dend_15, dend_13, dend_2, dend_36, dend_29, dend_25, dend_24, dend_22, dend_19, dend_16, dend_10, dend_3, dend_35, dend_30, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_4, dend_34, dend_31, dend_6, dend_5, dend_33, dend_32, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_39 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_27 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_36 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_22 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_19 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_10 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_35 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_20 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_9 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_34 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_31 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_1 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_28 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_14 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_4 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_29 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_30 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_38 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_21 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_17 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_32 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_33 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_12 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_11 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_25 OneSecGrp_SectionRef_20.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_33, dend_32, dend_8, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_8 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 3
    dend_37 nseg = 5
    dend_0 nseg = 17
    dend_39 nseg = 3
    dend_27 nseg = 13
    dend_23 nseg = 11
    dend_13 nseg = 15
    dend_36 nseg = 13
    dend_24 nseg = 3
    dend_22 nseg = 11
    dend_19 nseg = 5
    dend_16 nseg = 7
    dend_10 nseg = 9
    dend_35 nseg = 11
    dend_20 nseg = 3
    dend_9 nseg = 13
    dend_34 nseg = 9
    dend_31 nseg = 5
    dend_6 nseg = 5
    dend_5 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_LBC_5d73327936_0_0


