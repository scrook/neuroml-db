// Cell: dNAC222_L4_NBC_aa36da75a3_0_0
/*
{
  "id" : "dNAC222_L4_NBC_aa36da75a3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.0394349, -10.0153, -0.17743, 2.95112", "-0.0532529, -8.94556, -0.157727, 3.04845", "-0.067071, -7.87582, -0.138025, 3.53426", "-0.0808891, -6.80608, -0.118322, 4.26608", "-0.0947072, -5.73635, -0.0986193, 5.29686", "-0.108525, -4.66661, -0.0789167, 6.86463", "-0.122343, -3.59687, -0.0592141, 8.27645", "-0.136161, -2.52713, -0.0395115, 8.22963", "-0.14998, -1.45739, -0.0198089, 8.18256", "-0.163798, -0.387654, -1.06305E-4, 8.13086", "-0.177616, 0.682084, 0.0195963, 8.16843", "-0.191434, 1.75182, 0.0392989, 8.48334", "-0.205252, 2.82156, 0.0590015, 9.11876", "-0.21907, 3.8913, 0.0787041, 9.87", "-0.232888, 4.96104, 0.0984067, 10.1451", "-0.246706, 6.03077, 0.118109, 9.46254", "-0.260524, 7.10051, 0.137812, 8.70667", "-0.274342, 8.17025, 0.157515, 7.77276", "-0.28816, 9.23999, 0.177217, 6.5331", "-0.301978, 10.3097, 0.19692, 4.93174", "-0.315796, 11.3795, 0.216622, 2.75051" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-2.11174, 6.42098, -10.8018, 1.11", "-3.41175, 10.2943, -14.1885, 1.11", "-3.86051, 11.5169, -15.3788, 0.28", "-4.45685, 13.1202, -16.8545, 1.11", "-6.39349, 17.8546, -21.3689, 0.55", "-7.43436, 20.1013, -23.5439, 0.28", "-8.08677, 21.4147, -24.9225, 0.83", "-9.1221, 23.2332, -27.0581, 0.28", "-10.1595, 24.929, -29.1362, 1.66", "-12.4259, 28.4095, -33.3778, 0.28", "-13.056, 29.3564, -34.4214, 0.83", "-15.2409, 32.8758, -38.1967, 0.28", "-16.4914, 34.8863, -40.3591, 0.55", "-17.9249, 36.9172, -42.5732, 0.28", "-18.8871, 38.0888, -44.0069, 1.66", "-20.8449, 40.2135, -46.7064, 0.28", "-21.1498, 40.5125, -47.1597, 0.55", "-22.5675, 41.7367, -49.2824, 0.28", "-23.8788, 42.765, -51.3869, 0.55", "-26.2317, 44.3712, -55.5873, 0.28", "-27.9673, 45.2965, -58.8259, 0.83", "-30.745, 46.3726, -64.3961, 0.55", "-31.4707, 46.5976, -65.9078, 0.28", "-32.0745, 46.688, -67.2594, 0.55", "-34.6178, 46.6871, -73.0273, 0.28", "-35.4868, 46.4525, -74.8266, 0.83", "-37.6516, 45.4299, -78.6315, 0.28", "-37.9916, 45.239, -79.1343, 0.55", "-40.8576, 43.6097, -82.8908, 0.28", "-42.4024, 42.7726, -84.6807, 0.83", "-44.0465, 41.9592, -86.295, 0.28", "-46.3989, 40.8906, -88.7042, 0.83", "-49.9221, 39.4071, -92.1585, 0.28", "-51.2216, 38.9516, -93.5061, 0.83", "-52.1248, 38.7127, -94.4522, 0.28", "-53.6182, 38.5831, -96.1141, 0.83", "-57.8216, 38.8811, -100.864, 0.28", "-58.8872, 39.0836, -102.05, 0.55", "-62.7847, 40.1764, -106.206, 0.28", "-63.4664, 40.4017, -106.899, 1.11", "-69.2158, 42.5445, -112.361, 0.28", "-70.6489, 43.1604, -113.597, 0.83", "-72.819, 44.1946, -115.151, 0.28", "-73.2002, 44.3836, -115.396, 0.55", "-75.3133, 45.3488, -116.467, 0.28", "-75.8332, 45.5521, -116.687, 0.55", "-77.7788, 46.1293, -117.262, 0.28", "-78.81, 46.4922, -117.485, 0.55", "-82.049, 47.8474, -117.958, 0.28", "-84.0847, 48.7226, -118.232, 0.55", "-87.0025, 50.0515, -118.579, 0.28", "-87.9063, 50.4684, -118.645, 0.55", "-91.9142, 52.3342, -118.673, 0.28", "-92.534, 52.6412, -118.651, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.67826, -0.179771, -8.93177, 0.55", "4.47666, -2.2521, -8.92316, 0.55", "5.51357, -5.2344, -8.92434, 0.55", "6.12805, -7.2585, -8.92356, 0.28", "6.7439, -9.53522, -8.93085, 1.11", "7.46248, -12.1917, -8.93936, 0.55", "7.99309, -14.1533, -8.94565, 0.28", "8.2245, -15.2148, -8.95167, 0.83", "8.54356, -17.4151, -8.97441, 0.28", "8.75005, -19.3652, -9.01036, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.18174, 6.10898, 19.5482, 0.83", "-3.28919, 6.74447, 19.5482, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "4.73826, 3.88598, -9.36177, 1.38", "6.32787, 3.94185, -10.218, 1.38", "8.47179, 4.18889, -11.1564, 1.66", "10.391, 4.41003, -11.9964, 1.66", "13.5984, 4.77962, -13.4003, 1.66", "17.3325, 5.20989, -15.0347, 0.83", "18.4226, 5.3355, -15.5118, 0.28", "22.0418, 5.63536, -17.441, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-3.93174, -6.54652, -2.10177, 1.11", "-4.66948, -7.75809, -4.58315, 1.11", "-6.05353, -9.69045, -8.43932, 0.83", "-6.94536, -10.8113, -10.5909, 1.66", "-10.446, -14.6251, -17.5854, 1.94", "-12.9006, -17.2318, -21.989, 0.83", "-13.6795, -18.0762, -23.303, 0.83", "-14.9751, -19.3147, -25.2117, 0.55", "-15.8981, -20.0603, -26.1917, 0.83", "-18.1667, -21.6302, -27.7532, 0.55", "-19.8774, -22.7696, -28.3541, 0.55", "-21.6423, -23.9837, -28.7821, 0.28", "-23.9095, -25.5536, -29.3874, 0.55", "-25.7255, -26.8539, -29.9578, 0.55", "-28.4789, -28.8005, -30.8795, 0.55", "-32.4051, -31.5052, -32.3246, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.23174, -11.168, -1.27177, 3.6", "-1.24953, -12.8902, -1.20762, 3.6", "-1.27979, -15.8195, -1.09852, 4.16" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.315796, 11.3795, 0.216622, 0.83", "-0.509538, 26.3783, 0.216622, 0.83", "-0.70328, 41.377, 0.216622, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "8.75005, -19.3652, -9.01036, 0.28", "9.18512, -21.4759, -10.9991, 0.28", "9.24625, -22.0316, -11.6593, 0.28", "9.34222, -23.7068, -13.6064, 0.83", "9.42382, -24.9411, -15.6445, 1.38", "9.47395, -27.1501, -19.558, 0.55", "9.4537, -28.1528, -21.5237, 1.11", "9.27852, -30.1712, -26.0905, 0.55", "9.15484, -30.9873, -28.1454, 1.66", "8.44461, -34.5619, -37.4306, 0.28", "8.31264, -35.2177, -39.2754, 0.83", "8.05716, -36.8472, -43.9446, 0.28", "7.99456, -37.3998, -45.5288, 0.83", "7.83028, -39.1029, -50.1227, 0.28", "7.79118, -39.901, -52.1913, 1.66", "7.82156, -42.8136, -58.2151, 0.28", "7.8526, -43.1714, -58.9177, 0.55", "7.91116, -43.7409, -59.8711, 0.28", "7.94739, -44.1803, -60.5428, 0.83", "7.99515, -47.1122, -64.4095, 0.28", "7.90686, -48.0495, -65.5429, 0.83", "7.56393, -49.8345, -67.2879, 0.28", "7.28175, -50.8821, -68.2504, 0.55", "6.60491, -52.895, -69.9543, 0.28", "6.0357, -54.3088, -70.9563, 1.11", "4.68583, -57.1744, -72.5214, 0.28", "4.23851, -58.0822, -72.9814, 0.55", "3.67861, -59.2233, -73.4624, 0.28", "3.30962, -60.0534, -73.8086, 0.55", "2.54588, -61.967, -74.5379, 0.28", "2.18414, -63.0469, -74.9774, 0.83", "1.66226, -64.9755, -75.7443, 0.28", "1.36179, -66.3262, -76.2937, 1.11", "0.847642, -68.9593, -77.3854, 0.28", "0.706364, -69.6849, -77.6883, 0.55", "0.181319, -72.1096, -78.6631, 0.28", "-0.0337081, -73.1306, -79.0665, 0.83", "-0.620775, -75.9057, -80.0759, 0.28", "-0.737039, -76.4513, -80.2888, 0.55", "-1.30461, -78.8564, -81.2272, 0.28", "-1.84907, -81.1537, -82.2195, 1.66", "-2.64072, -84.4557, -83.74, 0.28", "-2.95274, -85.8771, -84.5226, 0.55", "-3.43282, -88.2862, -86.0243, 0.28", "-3.54882, -88.8874, -86.4654, 1.11", "-3.96284, -90.9971, -88.228, 0.28", "-4.09441, -91.6342, -88.7968, 0.55", "-4.69541, -94.2422, -90.997, 0.28", "-4.91398, -95.215, -91.7229, 0.83", "-5.48019, -97.9966, -93.5116, 0.28", "-5.74092, -99.4069, -94.3278, 0.83", "-5.99532, -101.035, -95.1964, 0.28", "-6.32723, -103.439, -96.3598, 0.28", "-6.58413, -105.463, -97.1727, 1.11", "-6.76472, -107.485, -97.9218, 0.28", "-6.86267, -108.768, -98.3374, 0.55", "-7.09308, -111.339, -99.2013, 0.28", "-7.20836, -112.372, -99.5545, 0.83", "-7.35982, -113.844, -100.234, 0.83", "-7.48294, -115.04, -100.86, 0.83", "-7.88193, -117.693, -102.507, 0.28", "-8.35344, -120.146, -104.194, 0.28", "-8.57935, -121.027, -104.877, 1.11", "-9.90424, -125.49, -108.65, 0.28", "-10.3007, -126.656, -109.742, 1.11", "-11.549, -130.031, -113.124, 0.28", "-11.9887, -131.169, -114.34, 0.83", "-13.1475, -134.063, -117.48, 0.28", "-13.4665, -134.884, -118.323, 0.83", "-14.272, -136.963, -120.217, 0.28", "-14.416, -137.411, -120.634, 0.55", "-15.031, -139.89, -122.781, 0.28", "-15.1531, -140.52, -123.373, 1.11", "-15.3859, -141.889, -124.656, 0.28", "-15.4626, -142.27, -125.031, 0.55", "-16.1313, -145.27, -127.908, 0.28", "-16.484, -146.541, -129.179, 0.83", "-17.6915, -150.19, -132.833, 0.28", "-18.0455, -151.094, -133.775, 0.83", "-18.8376, -152.833, -135.629, 0.28", "-19.4923, -154.039, -136.993, 0.83", "-20.9173, -156.154, -139.506, 0.28", "-21.6003, -156.878, -140.588, 0.55", "-22.4059, -157.434, -141.598, 0.28", "-22.7389, -157.59, -142.088, 0.55", "-24.3476, -158.087, -144.542, 0.28", "-24.8243, -158.183, -145.282, 0.83", "-27.0196, -158.56, -148.911, 0.28", "-27.6498, -158.673, -149.999, 0.83", "-31.451, -159.159, -156.6, 0.28", "-31.8942, -159.189, -157.367, 0.28", "-32.1779, -159.2, -157.847, 0.55", "-33.7663, -159.237, -160.402, 0.28", "-34.9643, -159.193, -162.101, 0.83", "-37.3405, -158.931, -165.007, 0.28", "-37.79, -158.847, -165.415, 0.55", "-39.0848, -158.515, -166.662, 0.28", "-39.9332, -158.243, -167.49, 0.55", "-41.7595, -157.395, -169.406, 0.28", "-42.5926, -156.905, -170.425, 0.28", "-43.0762, -156.581, -171.121, 0.83", "-44.6044, -155.304, -173.547, 0.28", "-44.7255, -155.181, -173.753, 0.55", "-46.0371, -153.709, -176.167, 0.28", "-46.2869, -153.434, -176.637, 0.55", "-47.0815, -152.617, -178.035, 0.28", "-47.4789, -152.276, -178.622, 0.83", "-49.0096, -151.273, -180.362, 0.28", "-49.6065, -150.97, -180.935, 0.55", "-50.6999, -150.585, -181.773, 0.28", "-51.1443, -150.475, -182.074, 0.55", "-52.4305, -150.26, -182.778, 0.28", "-53.6744, -150.114, -183.402, 0.55", "-54.7371, -150.048, -183.826, 0.28", "-55.5667, -150.019, -184.106, 0.55", "-57.0005, -149.996, -184.497, 0.28", "-58.6378, -150.0, -184.89, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "8.75005, -19.3652, -9.01036, 0.55", "9.23051, -26.7227, -11.215, 0.55", "9.43184, -29.1074, -11.6185, 0.55", "9.61414, -31.1571, -11.8509, 0.28", "9.69073, -32.1956, -11.9665, 0.55", "10.004, -36.1687, -12.4034, 0.28", "10.0509, -36.9385, -12.5309, 0.55", "10.3155, -41.4002, -13.0462, 0.28", "10.3297, -42.7204, -13.4304, 0.55", "10.2068, -46.3088, -14.8536, 0.28", "10.1607, -47.0037, -15.1654, 0.55", "9.75943, -51.4432, -17.3572, 0.28", "9.6918, -52.3913, -17.7822, 0.55", "9.20263, -60.4907, -21.1971, 0.28", "9.20233, -61.681, -21.5734, 0.55", "9.3673, -65.3903, -22.4214, 0.28", "9.50745, -66.7889, -22.6393, 0.83", "10.527, -72.9736, -23.1318, 0.28", "10.6901, -73.7316, -23.1464, 0.83", "12.7304, -81.3475, -22.7437, 0.28", "13.2256, -83.0724, -22.6243, 0.83", "14.9309, -88.7681, -22.1494, 0.28", "15.7634, -91.603, -21.9067, 0.83", "16.4955, -94.1291, -21.6871, 0.28", "16.8669, -95.444, -21.5492, 0.55", "17.7265, -98.5737, -21.144, 0.28", "18.2738, -100.612, -20.8412, 0.83", "19.2376, -104.329, -20.2737, 0.28", "19.4067, -105.001, -20.1844, 0.55", "20.1938, -108.12, -19.9014, 0.28", "20.4857, -109.186, -19.8178, 0.55", "21.1886, -111.506, -19.7061, 0.28", "22.3717, -115.041, -19.4681, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-3.28919, 6.74447, 19.5482, 0.83", "-6.03835, 7.76577, 20.5786, 0.83", "-7.75371, 8.62106, 21.3341, 0.83", "-9.90324, 9.70146, 22.2985, 1.38", "-12.6999, 10.9717, 23.9423, 0.83", "-16.4778, 12.5031, 26.8662, 0.83", "-19.9444, 13.8612, 29.887, 1.94", "-21.8065, 14.7085, 31.8744, 0.55", "-22.6668, 15.1325, 32.9026, 0.55", "-26.1255, 16.8848, 37.3784, 0.55", "-28.9994, 18.2617, 41.2357, 0.28", "-29.5662, 18.4507, 41.8941, 0.83", "-32.7511, 19.3524, 45.1288, 0.28", "-33.4554, 19.5693, 45.8301, 0.55", "-34.5152, 19.9935, 46.7099, 0.28", "-35.5899, 20.5104, 47.1516, 0.55", "-38.8122, 21.9467, 47.5775, 0.28", "-39.9024, 22.3242, 47.6153, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.28919, 6.74447, 19.5482, 0.83", "-2.00945, 5.96662, 19.5761, 0.83", "-0.400763, 4.98882, 19.6112, 0.83", "1.66612, 3.73253, 19.6564, 0.83", "4.9998, 1.70625, 19.7291, 0.83", "7.52625, 0.170614, 19.7843, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "22.0418, 5.63536, -17.441, 0.83", "24.9666, 5.85495, -17.9125, 0.83", "27.3324, 6.35503, -18.3527, 0.55", "30.0223, 7.10869, -19.0581, 0.55", "31.9129, 7.64074, -19.6046, 0.55", "33.7855, 8.13878, -20.1522, 0.83", "36.061, 8.74397, -20.8176, 0.55", "39.9528, 9.89206, -22.0581, 0.55", "42.995, 10.8917, -23.0833, 0.55", "44.5129, 11.4832, -23.599, 0.55", "47.9745, 12.8437, -24.9272, 1.66" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "22.0418, 5.63536, -17.441, 0.28", "22.9392, 6.8862, -17.0978, 0.28", "23.8458, 8.11107, -16.604, 0.55", "25.5675, 10.402, -15.5711, 0.28", "26.5608, 11.7045, -14.9403, 0.83", "28.0655, 13.6366, -13.9727, 0.28", "28.8934, 14.7297, -13.3997, 0.55", "30.9148, 17.3441, -11.9269, 0.28", "31.2361, 17.7869, -11.6702, 0.55", "31.8654, 18.7323, -11.1402, 0.28", "32.2399, 19.2915, -10.8246, 0.55", "33.1852, 20.6974, -10.0778, 0.28", "34.2559, 22.255, -9.35403, 0.55", "36.8988, 25.8955, -7.89085, 0.28", "38.4894, 27.8697, -7.16204, 0.55", "39.8574, 29.4138, -6.64139, 0.28", "40.4017, 29.9225, -6.49151, 0.55", "42.5547, 31.6098, -6.04693, 0.28", "43.8323, 32.4431, -5.83434, 0.83", "46.8593, 34.067, -5.45085, 0.28", "47.7456, 34.4912, -5.42664, 0.55", "52.7587, 36.6956, -5.625, 0.28", "53.4554, 36.9862, -5.66416, 0.83", "55.8764, 37.9054, -5.865, 0.28", "56.1342, 37.9992, -5.89372, 0.83", "61.9387, 40.0295, -6.87923, 0.28", "62.9931, 40.3997, -7.13822, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-32.4051, -31.5052, -32.3246, 0.28", "-34.1688, -32.4358, -32.3824, 0.28", "-34.6259, -32.6862, -32.4016, 0.55", "-36.9429, -33.9571, -32.4411, 0.28", "-38.3912, -34.7274, -32.4625, 0.55", "-41.5653, -36.3764, -32.6507, 0.83", "-43.7478, -37.4922, -32.8259, 0.28", "-46.2804, -38.6598, -33.2794, 0.83", "-49.3672, -39.9516, -34.0493, 0.28", "-50.5877, -40.3713, -34.5586, 0.55", "-52.6684, -40.983, -35.6522, 0.28", "-54.4381, -41.3516, -36.7045, 0.83", "-58.9592, -42.082, -39.7648, 0.28", "-60.1222, -42.2107, -40.6358, 0.55", "-65.9903, -42.5337, -45.1728, 0.28", "-67.3774, -42.6021, -46.2203, 0.55", "-69.0038, -42.6836, -47.3253, 0.28", "-70.384, -42.7569, -48.1958, 0.28", "-72.3176, -42.9367, -49.1802, 0.28", "-75.7162, -43.3214, -50.4748, 0.55", "-77.4238, -43.5781, -50.8541, 0.83", "-80.589, -44.0836, -51.5346, 0.28", "-80.9206, -44.1352, -51.6112, 0.55", "-82.6564, -44.3535, -51.9965, 0.28", "-84.2904, -44.4735, -52.3855, 0.83", "-87.5514, -44.5209, -53.203, 0.28", "-89.0983, -44.3906, -53.642, 0.83", "-93.2816, -43.6995, -54.9596, 0.28", "-93.9597, -43.5373, -55.1869, 0.83", "-96.0632, -42.8495, -55.9187, 0.28", "-96.4697, -42.6775, -56.0405, 0.83", "-98.2625, -41.6649, -56.3738, 0.28", "-99.0179, -41.14, -56.4506, 0.83", "-100.451, -39.9531, -56.4507, 0.28", "-101.007, -39.4789, -56.439, 0.83", "-103.058, -37.6808, -56.2879, 0.28", "-103.931, -36.9152, -56.1942, 0.83", "-107.087, -34.1582, -55.6286, 0.28", "-107.686, -33.6331, -55.5166, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-32.4051, -31.5052, -32.3246, 0.28", "-33.2866, -34.0372, -33.7031, 0.28", "-33.5476, -34.7661, -34.0938, 0.83", "-34.3695, -37.1232, -35.3378, 0.28", "-35.1415, -39.3149, -36.5082, 1.11", "-36.0173, -41.8463, -37.8038, 0.28", "-36.0958, -42.0844, -37.9219, 0.55", "-36.6522, -43.7041, -38.7539, 0.28", "-36.76, -44.0419, -38.9201, 0.55", "-37.2921, -45.9488, -39.7742, 0.28", "-37.8103, -48.0019, -40.5929, 1.38", "-38.3792, -50.5855, -41.4205, 0.28", "-38.4358, -50.8459, -41.4924, 0.55", "-38.8326, -52.6709, -41.9014, 0.28", "-38.9232, -53.0605, -41.9758, 0.55", "-39.5084, -55.5869, -42.3273, 0.28", "-39.6609, -56.1915, -42.3868, 0.55", "-40.1077, -57.5004, -42.4581, 0.28", "-40.3631, -58.2223, -42.5051, 0.55", "-41.0368, -59.7412, -42.5556, 0.28", "-41.6044, -60.7575, -42.5921, 0.55", "-42.8192, -62.6747, -42.6917, 0.28", "-43.9925, -64.4153, -42.73, 0.28", "-45.4313, -66.4746, -42.7261, 0.55", "-46.9051, -68.4975, -42.7927, 0.55", "-48.1686, -70.1725, -42.8778, 0.28", "-48.6564, -70.831, -42.9643, 0.55", "-49.6759, -72.242, -43.2657, 0.28", "-50.0493, -72.8987, -43.4505, 0.55", "-51.3737, -75.6993, -44.3867, 0.28", "-51.6918, -76.6839, -44.8283, 0.83", "-52.1414, -78.7484, -45.8281, 0.28", "-52.1951, -79.0827, -46.0086, 0.55", "-52.5765, -81.8294, -47.5324, 0.28", "-52.6354, -82.3115, -47.783, 0.55", "-52.978, -85.191, -49.1417, 0.28", "-53.2207, -87.1591, -50.0511, 0.83", "-53.6176, -90.3809, -51.4182, 0.28", "-53.7968, -92.2414, -52.2633, 0.55", "-53.9579, -93.9978, -53.075, 0.28", "-54.0248, -95.1011, -53.576, 0.83", "-54.095, -97.1298, -54.3989, 0.28", "-54.1372, -99.1584, -55.1921, 1.11", "-54.0716, -103.908, -56.8825, 0.28", "-54.0281, -104.94, -57.3251, 0.55", "-53.9234, -107.873, -58.7151, 0.28", "-53.9106, -109.062, -59.3265, 0.55", "-53.9465, -109.954, -59.8676, 0.28", "-54.0602, -110.985, -60.5291, 0.83", "-54.9178, -115.389, -63.3554, 0.28", "-55.1663, -116.55, -64.1127, 0.83", "-55.6136, -118.493, -65.3649, 0.28", "-56.2065, -121.13, -66.9256, 0.83", "-56.6871, -123.466, -68.1382, 0.28", "-56.8129, -124.021, -68.3913, 0.55", "-57.1787, -125.642, -68.8803, 0.28", "-57.4418, -126.956, -69.2199, 0.83", "-58.0929, -131.261, -69.9028, 0.28", "-58.2271, -132.473, -69.996, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.27979, -15.8195, -1.09852, 2.77", "-0.0643745, -21.737, -1.27001, 2.77" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.27979, -15.8195, -1.09852, 1.11", "-3.74731, -19.1554, -3.06744, 1.11", "-5.26725, -21.2102, -4.28027, 1.11", "-6.14899, -22.4022, -4.98384, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.70328, 41.377, 0.216622, 0.28", "-0.897022, 56.3757, 0.216622, 0.28", "-1.09076, 71.3745, 0.216622, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-39.9024, 22.3242, 47.6153, 0.28", "-41.7244, 21.4248, 48.4756, 0.28", "-42.3368, 21.2727, 48.6694, 0.55", "-44.9189, 20.7894, 49.3687, 0.28", "-46.9423, 20.4681, 49.8389, 0.55", "-49.1868, 20.1064, 50.3363, 0.55", "-50.1118, 19.968, 50.5258, 0.83", "-54.9266, 19.4507, 51.3956, 0.28", "-55.5561, 19.4002, 51.4945, 0.83", "-60.636, 19.1564, 52.0897, 0.28", "-61.2934, 19.1306, 52.1644, 0.55", "-62.6243, 19.0783, 52.3175, 0.28", "-63.7057, 19.0058, 52.4566, 0.55", "-71.4654, 16.569, 54.4632, 0.55", "-78.9633, 14.3213, 57.4476, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-39.9024, 22.3242, 47.6153, 0.83", "-41.3514, 23.6426, 46.9253, 0.83", "-42.876, 25.0298, 46.1993, 0.28", "-43.7688, 25.8422, 45.7741, 0.55", "-50.7121, 31.4536, 40.4942, 0.55", "-57.7269, 37.3522, 35.658, 0.55", "-64.6037, 43.0012, 30.3334, 0.55", "-69.7616, 49.0832, 23.7203, 0.55", "-76.6354, 54.9646, 18.6641, 0.55", "-83.8626, 60.8394, 14.1195, 0.55", "-91.2744, 65.9514, 8.94303, 0.55", "-98.4726, 72.1328, 4.79906, 0.55", "-104.386, 79.6568, 0.968802, 0.55", "-109.245, 88.4719, -0.999409, 0.55", "-112.446, 98.1461, -1.79197, 0.55", "-113.629, 108.249, -2.62909, 0.55", "-113.594, 118.16, -5.11694, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "7.52625, 0.170614, 19.7843, 0.83", "4.27464, 1.07768, 20.2114, 0.83", "0.989976, 2.23027, 20.9947, 0.83", "-0.440698, 2.7323, 21.3359, 0.55", "-1.63448, 3.1512, 21.6207, 0.55", "-3.43763, 3.78393, 22.0507, 0.55", "-5.36417, 4.45996, 22.5101, 0.55", "-6.8818, 5.14662, 23.1489, 0.55", "-14.3856, 6.71008, 23.8117, 0.55", "-21.775, 8.82571, 23.8511, 0.55", "-29.2353, 10.6308, 23.366, 0.55", "-36.8877, 11.4119, 23.7328, 0.55", "-44.391, 11.8518, 25.4174, 0.55", "-51.9662, 13.0086, 26.1491, 0.55", "-59.174, 14.7944, 28.1494, 0.55", "-66.1052, 15.9591, 31.2882, 0.55", "-72.4593, 17.9827, 35.1115, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "7.52625, 0.170614, 19.7843, 0.83", "7.53049, -1.57937, 19.7606, 0.83", "7.61036, -3.78226, 19.7233, 0.83", "7.70263, -5.52061, 19.6869, 0.83", "7.85943, -7.12292, 19.6899, 0.83", "8.2202, -9.17183, 19.7849, 0.55", "8.48371, -10.1554, 19.8871, 0.55", "9.05276, -11.3118, 20.1205, 0.83", "9.75527, -12.2193, 20.4196, 0.83", "10.7261, -13.1361, 20.848, 0.83", "12.2808, -14.2409, 21.5577, 0.83", "13.5108, -15.0423, 22.1957, 0.83", "14.4135, -15.6689, 22.7169, 0.55", "15.1239, -16.1954, 23.1627, 0.28", "15.6271, -16.6464, 23.4916, 0.83", "16.6715, -17.8408, 24.1793, 0.55", "17.5352, -19.1984, 24.7627, 0.55", "18.1366, -20.3085, 25.1531, 0.55", "18.7531, -21.5793, 25.5272, 0.55", "19.6509, -23.5858, 26.0476, 0.55", "20.1339, -24.7124, 26.2914, 0.55", "21.0057, -26.6911, 26.6272, 0.55", "21.7334, -28.0903, 26.8108, 0.55", "22.7388, -29.9666, 27.0118, 0.83", "23.4147, -31.2192, 27.1216, 0.83", "24.149, -32.6012, 27.2473, 0.55", "24.5934, -33.403, 27.3223, 0.55", "25.4427, -34.6617, 27.4662, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "47.9745, 12.8437, -24.9272, 0.83", "49.4213, 10.8528, -25.5875, 0.83", "49.993, 10.1346, -25.7855, 0.55", "50.6912, 9.25196, -26.0051, 0.55", "52.0673, 7.40955, -26.451, 0.83", "52.9392, 6.14136, -26.6091, 0.55", "54.1913, 4.18065, -26.7291, 1.11", "55.1646, 2.38041, -26.6473, 0.55", "55.5654, 1.54846, -26.5512, 0.55", "56.1323, 0.269901, -26.3335, 0.83", "57.3305, -2.74164, -25.6953, 0.28", "57.4757, -3.23072, -25.5603, 0.55", "57.8271, -5.07332, -25.0538, 0.55", "58.0548, -6.4902, -24.7295, 0.28", "58.2105, -7.25366, -24.6164, 0.55", "58.5253, -8.61469, -24.5842, 0.55", "59.2688, -11.4639, -24.918, 0.55", "59.9069, -13.6657, -25.3068, 0.83", "60.2806, -14.8715, -25.581, 0.83", "60.9615, -16.8448, -26.1944, 0.28", "61.5321, -18.321, -26.7226, 0.55", "61.9524, -19.297, -27.1409, 0.55", "62.8791, -21.2414, -28.1014, 0.28", "63.9553, -23.3465, -29.0707, 1.38", "65.1885, -25.797, -30.1174, 0.28", "66.0148, -27.4324, -30.7254, 0.55", "66.6313, -28.6131, -31.1178, 0.28", "67.6509, -30.533, -31.7451, 0.55", "68.3289, -31.8138, -32.1632, 0.28", "68.8952, -32.9193, -32.4701, 0.55", "69.7286, -34.6751, -32.6592, 0.28", "70.0568, -35.431, -32.6219, 0.28", "70.1923, -35.7161, -32.5652, 0.55", "71.0221, -37.1685, -32.1209, 0.28", "72.2299, -38.9673, -31.4813, 1.11", "74.0873, -41.37, -30.5135, 0.28", "75.4992, -43.0683, -29.8418, 0.83", "76.7594, -44.5106, -29.1854, 0.55", "78.1179, -45.9955, -28.5068, 0.55", "79.4197, -47.3625, -27.9005, 0.55", "80.1889, -48.1641, -27.6374, 0.55", "81.6377, -49.7544, -27.3556, 0.28", "83.4864, -52.0433, -27.2759, 0.55", "84.812, -53.9078, -27.3347, 0.28", "85.495, -54.9192, -27.424, 0.83", "86.4711, -56.3257, -27.6263, 0.28", "87.2912, -57.5172, -27.8554, 0.55", "88.9736, -59.9721, -28.4547, 0.28", "89.6739, -61.0171, -28.7654, 0.55", "91.1705, -63.2564, -29.3886, 0.28", "91.9574, -64.4501, -29.676, 0.55", "93.2071, -66.4062, -30.0661, 0.28", "93.7419, -67.2748, -30.2184, 0.55", "94.5703, -68.6808, -30.4102, 0.28", "94.9144, -69.3066, -30.5029, 0.55", "95.7592, -70.9541, -30.7599, 0.28", "95.9028, -71.2401, -30.8155, 0.55", "96.7873, -72.8326, -31.182, 0.28", "96.9649, -73.1299, -31.2216, 0.83", "97.9593, -74.6865, -31.3358, 0.28", "99.0561, -76.305, -31.3933, 0.55", "100.472, -78.1521, -31.3795, 0.28", "102.105, -80.0058, -31.2178, 0.55", "104.762, -82.6108, -30.8311, 0.28", "105.529, -83.2906, -30.7044, 0.28", "105.888, -83.5784, -30.6259, 0.55", "107.437, -84.6917, -30.2275, 0.28", "109.333, -85.8813, -29.6759, 0.83", "110.55, -86.5394, -29.3704, 0.28", "111.612, -86.9873, -29.3021, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "47.9745, 12.8437, -24.9272, 0.55", "50.4807, 13.9746, -24.921, 0.55", "52.0105, 14.6482, -24.9695, 0.55", "53.5377, 15.3172, -25.1431, 0.55", "55.9235, 16.3335, -25.565, 0.28", "56.482, 16.5931, -25.7234, 1.11", "58.8429, 17.6941, -26.5065, 0.55", "60.1465, 18.2586, -27.1416, 0.55", "62.0861, 19.1035, -28.3109, 0.28", "62.8749, 19.4663, -28.8729, 0.83", "65.5371, 20.7317, -30.9681, 0.28", "66.4648, 21.1891, -31.7165, 0.55", "68.7422, 22.3547, -33.4928, 0.28", "70.0661, 23.0805, -34.378, 0.55", "72.0376, 24.2124, -35.4289, 0.28", "72.5393, 24.4963, -35.6349, 0.55", "75.3857, 26.0344, -36.4536, 0.28", "76.7158, 26.7697, -36.7273, 0.83", "80.1421, 28.6663, -37.0866, 0.28", "81.2383, 29.2731, -37.1559, 0.83", "83.4773, 30.4847, -37.221, 0.28", "84.3795, 30.9716, -37.2351, 0.28", "87.585, 32.6442, -37.1938, 0.55", "90.1905, 33.9364, -37.2562, 0.28", "91.3809, 34.478, -37.2897, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-58.2271, -132.473, -69.996, 0.28", "-59.0562, -134.582, -71.3793, 0.28", "-59.2937, -135.419, -71.7978, 0.55", "-59.6809, -137.372, -72.574, 0.28", "-59.8079, -138.013, -72.8285, 0.83", "-60.2862, -140.427, -73.7875, 0.28", "-60.4156, -141.079, -74.0468, 0.55", "-60.875, -143.74, -75.0356, 0.28", "-60.9382, -144.468, -75.2356, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-58.2271, -132.473, -69.996, 0.28", "-53.5193, -135.999, -69.4493, 0.28", "-52.8338, -136.513, -69.3697, 0.83", "-51.3288, -137.64, -69.1949, 0.55", "-48.6754, -139.628, -68.8867, 0.28", "-47.4484, -140.547, -68.7442, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.0643745, -21.737, -1.27001, 2.22", "-0.94299, -25.0393, -4.27022, 2.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-0.0643745, -21.737, -1.27001, 0.83", "1.95199, -23.2342, -3.45355, 0.83", "2.91356, -23.8668, -4.44986, 0.55", "4.23731, -24.7316, -5.68963, 1.11", "6.81816, -26.363, -7.91092, 0.83", "8.66669, -27.4508, -9.32143, 0.55", "11.4207, -28.9302, -11.1568, 0.55", "13.2424, -29.8371, -12.3075, 0.55", "14.8302, -30.5293, -13.1442, 0.28", "15.9426, -30.8933, -13.6492, 0.83", "17.9098, -31.4076, -14.3381, 1.38", "19.7023, -31.8383, -14.8735, 0.28", "21.1506, -32.2146, -15.2997, 0.55", "23.6194, -32.8765, -16.1919, 0.28", "25.6093, -33.4599, -16.9779, 1.11", "27.2376, -34.0583, -17.6528, 0.55", "28.4747, -34.6662, -18.2656, 0.55", "29.7479, -35.4527, -18.9602, 0.55", "30.9813, -36.3541, -19.6085, 0.55", "32.437, -37.7343, -20.2577, 0.28", "33.0559, -38.4503, -20.5049, 0.55", "34.3941, -40.2408, -21.1007, 0.55", "34.8437, -40.8967, -21.35, 0.55", "35.6183, -41.958, -21.8107, 0.28", "36.485, -42.8909, -22.4198, 0.28", "37.3473, -43.5923, -22.994, 0.55", "38.5719, -44.3193, -23.7358, 0.55", "40.4546, -45.1286, -24.8624, 0.83", "41.7378, -45.5555, -25.6617, 0.83", "44.3897, -46.1805, -27.3617, 0.55", "45.7598, -46.3512, -28.3085, 0.28", "46.4137, -46.4191, -28.7618, 0.55", "48.3361, -46.5016, -30.0615, 0.28", "49.299, -46.5263, -30.8072, 0.28", "50.2292, -46.5834, -31.5831, 1.11", "52.8885, -46.7939, -34.0386, 0.55", "54.4507, -46.9198, -35.5709, 0.55", "56.1987, -47.0392, -37.4378, 0.55", "58.7739, -47.2034, -40.3227, 0.55", "59.556, -47.2748, -41.2271, 0.83", "61.7502, -47.5671, -43.7426, 0.28", "62.6046, -47.7293, -44.7023, 1.11", "65.0526, -48.3178, -47.32, 0.28", "65.5769, -48.505, -47.8134, 0.55", "66.6503, -48.8974, -48.573, 0.28", "67.3453, -49.1694, -48.9931, 0.55", "69.1139, -49.8505, -49.9289, 0.28", "70.9102, -50.5194, -50.8278, 0.83", "72.5159, -51.0123, -51.5713, 0.28", "73.7637, -51.3366, -52.1798, 0.28", "75.5029, -51.718, -53.0349, 1.11", "78.676, -52.3633, -54.5401, 0.28", "80.0852, -52.6679, -55.2299, 1.11", "82.4379, -53.2416, -56.4301, 0.28", "83.108, -53.4306, -56.7564, 0.55", "84.4063, -53.8707, -57.3327, 0.28", "85.4564, -54.2704, -57.7141, 1.11", "88.3707, -55.5639, -58.5079, 0.28", "89.4417, -56.0942, -58.7624, 1.11", "91.3832, -57.1788, -59.1353, 0.28", "93.4524, -58.3989, -59.5521, 1.11", "96.2487, -60.0507, -60.0868, 0.28", "97.3698, -60.6877, -60.2904, 0.55", "98.8585, -61.494, -60.5101, 0.28", "100.498, -62.3127, -60.7609, 0.83", "103.025, -63.4547, -61.2361, 0.28", "104.138, -63.8301, -61.5566, 0.55", "105.466, -64.1532, -62.0038, 0.28", "106.153, -64.2421, -62.2556, 0.55", "107.87, -64.3265, -62.8777, 0.28", "109.917, -64.3092, -63.6815, 0.55", "112.409, -64.2566, -64.6023, 0.28", "113.792, -64.2584, -65.176, 0.83", "115.524, -64.2639, -65.8927, 0.28", "116.456, -64.2819, -66.2805, 0.55", "119.742, -64.4041, -67.6113, 0.28", "120.772, -64.4595, -67.9791, 1.11", "123.96, -64.6883, -69.1185, 0.28", "125.777, -64.8592, -69.8578, 0.28", "126.563, -64.9724, -70.2019, 0.55", "127.873, -65.2012, -70.774, 0.28", "128.35, -65.3228, -70.9705, 0.55", "130.103, -65.8838, -71.7345, 0.28", "131.642, -66.691, -72.5112, 0.83", "133.189, -67.7652, -73.4283, 0.28", "133.773, -68.255, -73.7974, 0.83", "135.032, -69.508, -74.6315, 0.28", "135.293, -69.83, -74.8394, 1.11", "137.499, -73.0318, -76.801, 0.28", "137.938, -73.7969, -77.2368, 0.83", "138.419, -74.7524, -77.7769, 0.28", "138.507, -74.9409, -77.8901, 0.55", "139.932, -78.3724, -80.0017, 0.28", "140.213, -79.0391, -80.4221, 0.83", "140.744, -80.3564, -81.2695, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.14899, -22.4022, -4.98384, 0.83", "-7.29612, -25.3913, -3.40458, 0.83", "-8.46662, -28.8379, -1.7932, 0.83", "-9.367, -31.656, -0.645957, 0.83", "-10.5412, -35.2084, 0.747761, 0.83", "-11.6173, -38.2964, 1.8952, 0.83", "-13.3308, -42.9077, 3.52721, 0.83", "-14.4361, -45.6886, 4.42532, 0.83", "-15.8764, -48.7166, 5.28285, 1.11", "-17.6961, -51.8315, 5.88868, 0.55", "-19.3979, -54.2523, 6.19004, 0.55", "-20.8648, -56.0567, 6.35019, 0.83", "-22.9352, -58.1614, 6.44102, 0.83", "-26.1287, -61.0546, 6.23244, 0.83", "-29.5117, -63.6245, 5.78696, 0.83", "-31.8774, -64.9979, 5.22321, 0.83", "-33.395, -65.7232, 4.73187, 0.83", "-35.3051, -66.5767, 3.98451, 0.83", "-38.2661, -67.9598, 2.58778, 0.83", "-40.5057, -69.0582, 1.50074, 0.83", "-44.9356, -71.209, -0.375117, 0.83", "-47.0227, -72.3032, -1.14767, 0.83", "-49.0138, -73.5782, -1.90039, 1.11", "-50.9564, -75.1129, -2.73689, 0.55", "-53.4081, -77.4503, -3.9002, 0.55", "-55.6824, -79.9511, -5.05503, 0.55", "-58.0922, -82.9878, -6.39026, 1.11", "-60.7139, -86.2768, -7.93384, 0.55", "-62.4655, -88.5338, -9.08064, 0.83", "-63.4473, -89.7767, -9.81577, 0.55", "-64.1836, -90.7597, -10.463, 0.55", "-66.0072, -93.2226, -12.1315, 0.83", "-68.0623, -95.7249, -13.8599, 0.83", "-69.8073, -97.7324, -14.9443, 0.83", "-72.5007, -100.796, -16.264, 0.28", "-73.5881, -102.017, -16.7124, 0.28", "-74.9663, -103.598, -17.2196, 0.83", "-76.6105, -105.531, -17.7044, 0.83", "-78.3127, -107.707, -18.1528, 0.55", "-80.276, -110.622, -18.6119, 1.11", "-81.5688, -113.061, -18.995, 0.55", "-82.1148, -114.367, -19.2745, 0.28", "-82.5747, -116.173, -19.7832, 0.83", "-82.6742, -117.012, -20.0581, 0.28", "-82.7279, -119.119, -20.802, 1.11", "-82.6679, -122.359, -21.9851, 0.28", "-82.5904, -125.203, -23.0312, 0.55", "-82.5357, -128.573, -24.261, 0.28", "-82.5431, -131.142, -25.2142, 1.11", "-82.5974, -132.959, -25.8639, 0.28", "-82.7317, -134.645, -26.334, 0.83", "-83.0358, -136.812, -26.8205, 0.28", "-83.156, -137.392, -26.9452, 0.55", "-83.6226, -138.896, -27.2134, 0.28", "-84.1803, -140.337, -27.5829, 1.11", "-85.6977, -143.723, -28.5894, 0.28", "-86.9566, -146.519, -29.3435, 0.55", "-88.2841, -149.237, -30.0598, 0.28", "-89.631, -151.997, -30.603, 0.55", "-91.4535, -155.876, -31.1591, 0.28", "-92.638, -158.579, -31.4099, 1.38", "-94.152, -162.12, -31.289, 0.28", "-95.029, -164.317, -30.8831, 1.11", "-96.3256, -167.82, -29.667, 0.28", "-96.8211, -169.232, -28.956, 1.11", "-97.452, -171.154, -27.7528, 0.28", "-98.6483, -175.29, -24.9475, 0.55", "-98.7995, -175.968, -24.4925, 0.55", "-99.1308, -178.524, -22.8866, 0.83", "-99.2872, -180.246, -21.9442, 0.28", "-99.3555, -182.235, -21.0344, 0.83", "-99.1888, -184.125, -20.4346, 0.55", "-98.5887, -186.963, -19.9601, 0.55", "-98.2616, -188.298, -19.8068, 0.28", "-98.0582, -189.046, -19.755, 0.55", "-97.3363, -191.383, -19.5585, 0.55", "-96.837, -193.032, -19.4298, 0.55", "-96.2621, -195.084, -19.3079, 0.28", "-95.9035, -196.395, -19.1969, 0.55", "-95.3841, -198.236, -19.0202, 0.28", "-94.9887, -199.636, -18.8145, 0.55", "-94.7231, -200.729, -18.6005, 0.28", "-94.5429, -201.82, -18.4429, 0.55", "-94.3937, -202.994, -18.3507, 0.28", "-94.2954, -203.967, -18.3257, 0.83", "-94.1447, -206.391, -18.3786, 0.28", "-94.1079, -207.514, -18.3979, 1.11", "-94.0749, -210.275, -18.4397, 0.28", "-94.0771, -211.657, -18.5242, 0.55", "-94.0877, -213.315, -18.7534, 0.28", "-94.072, -214.144, -18.9261, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.14899, -22.4022, -4.98384, 0.55", "-7.88512, -21.6753, -3.83554, 0.55", "-8.97182, -21.3544, -2.83411, 0.55", "-11.4868, -20.9991, -0.341457, 0.83", "-13.706, -21.0918, 1.98616, 0.55", "-15.2536, -21.3633, 3.70227, 0.55", "-19.7522, -22.7467, 8.89449, 0.83", "-22.8647, -24.3852, 12.8639, 0.55", "-24.6704, -25.8845, 15.3025, 0.83", "-26.6425, -28.354, 17.9625, 0.55", "-27.3028, -29.5697, 18.7122, 0.83", "-28.1449, -31.5022, 19.6049, 0.83", "-28.5899, -32.8142, 19.9257, 0.55", "-29.6925, -36.2524, 20.284, 0.55", "-31.0711, -40.5125, 20.4627, 0.55", "-33.0573, -46.2428, 20.1033, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "25.4427, -34.6617, 27.4662, 0.55", "27.8107, -34.631, 28.4221, 0.55", "29.1906, -34.64, 28.8682, 0.55", "30.8155, -34.7559, 29.3028, 0.55", "32.8348, -35.0021, 29.7852, 0.55", "35.2537, -35.3265, 30.3141, 0.55", "36.7288, -35.5285, 30.6001, 0.55", "39.2249, -35.9618, 30.9091, 0.55", "41.3846, -36.4239, 31.0057, 0.55", "42.2591, -36.656, 30.99, 0.55", "43.8456, -37.1143, 30.8627, 0.28", "44.9236, -37.4291, 30.7559, 0.83", "46.7009, -38.044, 30.5594, 0.55", "47.8542, -38.4694, 30.405, 0.55", "49.8382, -39.176, 30.1155, 0.55", "50.6668, -39.4531, 29.9972, 0.83", "52.1013, -39.9009, 29.8026, 0.55", "53.3042, -40.2496, 29.6829, 0.55", "54.4875, -40.536, 29.6098, 0.55", "55.3576, -40.706, 29.5345, 0.55", "56.4898, -40.9046, 29.4174, 0.83", "57.6897, -41.0431, 29.3113, 0.28", "59.4918, -41.2214, 29.1792, 0.28", "60.3396, -41.3259, 29.1229, 0.55", "62.1263, -41.6709, 28.9947, 0.28", "63.7844, -42.152, 28.9168, 0.55", "66.1123, -43.0748, 28.7854, 0.28", "66.7067, -43.3631, 28.7517, 0.28", "67.7729, -43.8865, 28.6932, 0.55", "68.8272, -44.4736, 28.6455, 0.28", "70.9797, -45.9202, 28.5964, 0.83", "72.34, -47.0719, 28.542, 0.28", "73.2846, -48.0357, 28.4777, 0.55", "80.5545, -50.3926, 29.4422, 0.55", "87.3271, -53.9423, 30.2167, 0.55", "94.5612, -56.5811, 30.203, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "25.4427, -34.6617, 27.4662, 0.55", "26.2503, -37.6635, 27.9014, 0.55", "26.7117, -39.2749, 28.0828, 0.55", "27.3119, -41.1507, 28.245, 0.83", "28.0767, -43.1019, 28.3755, 0.55", "29.169, -45.5204, 28.508, 0.83", "30.1207, -47.5332, 28.5983, 0.28", "30.4003, -48.0818, 28.5911, 0.55", "30.9888, -49.3124, 28.5819, 0.28", "31.8904, -51.5575, 28.5807, 0.55", "32.3019, -52.8441, 28.5861, 0.83", "32.984, -55.5658, 28.6213, 0.83", "33.361, -57.8374, 28.6929, 0.28", "33.6566, -60.8283, 28.8065, 0.55", "33.7006, -63.298, 28.9681, 0.55", "33.5955, -64.4149, 29.0607, 0.28", "33.4424, -65.204, 29.11, 0.55", "33.0159, -66.6491, 29.1047, 0.28", "31.8472, -69.8317, 28.866, 0.55", "30.9534, -72.0435, 28.5535, 0.28", "29.9192, -74.327, 28.0989, 0.55", "28.6581, -77.1258, 27.3641, 0.83", "27.5567, -79.4203, 26.5924, 0.55", "27.353, -79.8494, 26.3878, 0.55", "27.0791, -80.5306, 25.9414, 0.28", "26.8963, -81.3015, 25.3704, 0.55", "26.7555, -82.8621, 24.2134, 0.28", "26.7197, -84.8262, 22.9369, 0.55", "26.6989, -87.2935, 21.5974, 0.28", "26.6338, -90.4725, 20.0355, 0.28", "26.5868, -91.3436, 19.638, 0.55", "26.4557, -92.934, 18.9985, 0.28", "26.2809, -94.8801, 18.3604, 0.83", "26.1943, -96.1661, 18.0412, 0.28", "26.1124, -96.745, 17.9632, 0.55", "25.7455, -98.6421, 17.8232, 0.28", "25.5298, -99.6833, 17.726, 0.55", "25.1077, -101.74, 17.5029, 0.28", "24.9322, -102.561, 17.3743, 0.55", "24.6798, -103.741, 17.2017, 0.28", "24.4363, -104.82, 17.1409, 0.55", "24.2365, -105.7, 17.1766, 0.28", "23.9159, -107.089, 17.3265, 0.55", "23.6733, -108.131, 17.5172, 0.28", "23.453, -109.076, 17.7064, 0.83", "22.9531, -111.347, 18.2113, 0.28", "22.4438, -113.662, 18.7811, 0.83", "22.0271, -115.744, 19.3498, 0.28", "21.8054, -116.994, 19.7118, 0.55", "21.0179, -126.397, 17.4407, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.94299, -25.0393, -4.27022, 1.11", "-1.24574, -26.9162, -4.10852, 1.11", "-1.4937, -28.4533, -3.97609, 1.11", "-2.0002, -31.5932, -3.70556, 0.83", "-2.89372, -37.1323, -3.22834, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-0.94299, -25.0393, -4.27022, 0.55", "-6.05588, -28.7847, -8.51906, 0.55", "-7.70513, -30.1215, -10.258, 1.11", "-9.09449, -31.4454, -12.088, 0.55", "-11.7735, -34.1546, -15.951, 1.38", "-13.7705, -36.1198, -18.7164, 0.55", "-15.1673, -37.4288, -20.5305, 0.55", "-17.5845, -39.7419, -23.979, 0.55", "-19.6005, -41.7312, -26.732, 0.55", "-21.2638, -43.3965, -28.7047, 0.55", "-23.8721, -45.9883, -31.1625, 0.83", "-26.7907, -48.885, -33.3563, 0.55", "-28.2862, -50.2634, -34.1947, 0.55", "-29.8743, -51.6167, -34.8085, 0.83", "-32.2701, -53.6393, -35.397, 0.28", "-34.1477, -55.347, -35.6829, 0.55", "-35.0847, -56.2477, -35.7758, 0.55", "-37.5935, -58.6662, -35.8609, 0.55", "-38.9063, -59.8963, -35.9067, 0.55", "-41.1586, -61.91, -36.1508, 0.28", "-42.3036, -62.9236, -36.4145, 0.55", "-43.7062, -64.1772, -36.8079, 0.28", "-45.0078, -65.3437, -37.1873, 0.83", "-46.5143, -66.7009, -37.6622, 0.28", "-48.2249, -68.1754, -38.4415, 0.83", "-50.0964, -69.7831, -39.5445, 0.55", "-50.8066, -70.476, -40.1057, 0.28", "-51.8476, -71.6103, -41.056, 0.55", "-52.6714, -72.7067, -42.0947, 0.28", "-54.157, -75.1256, -44.6754, 0.55", "-54.8853, -76.5361, -46.2553, 1.38", "-56.3831, -79.8447, -50.0785, 0.28", "-56.7265, -80.6531, -51.1229, 0.83", "-57.9533, -83.6469, -55.2146, 0.55", "-58.8473, -85.7677, -58.1634, 1.11", "-59.4981, -87.15, -60.1792, 0.28", "-60.142, -88.2936, -61.9139, 0.83", "-62.028, -90.872, -65.9275, 0.28", "-62.6907, -91.6125, -67.1095, 0.55", "-63.6616, -92.3897, -68.4289, 0.28", "-65.321, -93.4621, -70.2991, 0.55", "-66.5046, -94.0741, -71.4161, 0.28", "-67.4817, -94.5035, -72.2952, 0.28", "-68.9346, -95.0764, -73.491, 0.55", "-72.3283, -96.3436, -76.4672, 0.28", "-73.494, -96.758, -77.4855, 0.83", "-75.1907, -97.4056, -78.8547, 1.11", "-79.0816, -98.9512, -81.7111, 0.28", "-79.9081, -99.3196, -82.2638, 0.55", "-82.8653, -100.814, -83.9985, 0.28", "-84.1952, -101.586, -84.6484, 1.11", "-86.4521, -103.008, -85.6652, 0.28", "-88.5464, -104.458, -86.4208, 0.83", "-90.3103, -105.741, -86.8199, 0.28", "-90.8344, -106.15, -86.9471, 0.55", "-92.2174, -107.279, -87.3596, 0.28", "-92.8618, -107.798, -87.659, 0.55", "-95.4059, -109.851, -89.1285, 0.28", "-96.0063, -110.352, -89.6704, 0.55", "-98.2694, -112.215, -92.0558, 0.28", "-99.8699, -113.533, -93.7186, 0.83", "-101.935, -115.494, -96.3555, 0.28", "-102.613, -116.215, -97.3301, 0.83", "-105.845, -120.347, -103.096, 0.28", "-106.456, -121.254, -104.316, 0.55", "-107.854, -123.852, -107.374, 0.83", "-110.49, -129.681, -113.231, 0.28", "-110.889, -130.744, -114.196, 0.83", "-112.425, -135.37, -117.908, 0.28", "-112.644, -136.226, -118.443, 0.83", "-113.319, -139.377, -120.32, 0.28", "-113.472, -140.216, -120.788, 0.55", "-113.912, -142.823, -121.728, 0.28", "-114.194, -145.008, -122.395, 0.55", "-114.613, -149.769, -123.37, 0.28", "-114.659, -150.571, -123.549, 0.55", "-114.792, -152.981, -124.089, 0.28", "-114.856, -153.645, -124.248, 0.55", "-115.215, -156.042, -124.771, 0.28", "-115.428, -156.9, -125.039, 0.55", "-116.137, -158.95, -125.747, 0.28", "-116.595, -159.981, -126.154, 0.83", "-118.748, -163.769, -127.767, 0.28", "-119.567, -164.941, -128.368, 0.55", "-122.011, -167.775, -129.962, 0.28", "-122.573, -168.316, -130.297, 0.55", "-123.995, -169.468, -131.06, 0.28", "-124.999, -170.15, -131.538, 0.55", "-126.887, -171.037, -132.446, 0.28", "-128.575, -171.673, -133.301, 0.55", "-131.061, -172.432, -134.426, 0.28", "-132.423, -172.828, -135.085, 0.55", "-134.077, -173.295, -135.958, 0.28", "-138.447, -174.462, -138.402, 0.28", "-139.788, -174.777, -139.165, 0.28", "-141.4, -175.063, -140.224, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-33.0573, -46.2428, 20.1033, 0.55", "-33.9793, -48.2087, 18.0564, 0.55", "-35.0017, -50.7774, 15.615, 0.55", "-36.1102, -53.8668, 12.6324, 0.83", "-37.14, -56.9804, 9.68441, 0.83", "-37.6408, -58.537, 8.28328, 0.28", "-37.9589, -59.4534, 7.48585, 0.83", "-38.5946, -61.3173, 5.86128, 0.83", "-39.6741, -64.3098, 3.29566, 0.28", "-39.981, -65.2102, 2.68051, 0.28", "-40.6318, -66.7453, 1.81783, 0.55", "-41.9311, -69.1653, 0.341271, 0.28", "-42.253, -69.7092, 0.0163509, 0.55", "-43.6263, -71.944, -1.216, 0.28", "-44.3871, -73.3431, -1.80525, 0.83", "-45.5258, -75.5617, -2.63672, 0.28", "-46.9234, -78.4763, -3.44819, 0.55", "-47.8997, -80.707, -3.82435, 0.55", "-48.6329, -82.2206, -3.85829, 0.55", "-50.0823, -84.9238, -3.32417, 0.83", "-51.0392, -86.6218, -2.78184, 0.83", "-52.1378, -88.4421, -1.91388, 0.28", "-52.7183, -89.3227, -1.41528, 0.55", "-54.8461, -92.325, 0.435148, 0.83", "-56.5125, -94.5303, 2.00795, 0.28", "-56.9617, -95.0971, 2.44889, 0.55", "-57.6142, -95.9469, 3.07469, 0.28", "-58.5344, -97.1887, 3.90188, 0.55", "-60.3451, -99.646, 5.10247, 0.55", "-61.7495, -101.528, 5.6621, 0.28", "-62.6499, -102.587, 5.81569, 0.83", "-64.1679, -104.19, 5.91341, 0.28", "-64.8068, -104.825, 5.91781, 0.28", "-67.7629, -107.714, 6.06366, 0.83", "-70.1007, -109.935, 6.18457, 0.28", "-72.006, -111.95, 6.34806, 0.83", "-72.956, -113.064, 6.49701, 0.28", "-73.7856, -114.083, 6.68716, 0.83", "-76.224, -117.199, 7.52131, 0.28", "-76.5161, -117.671, 7.73356, 1.11", "-77.584, -120.273, 8.9921, 0.55", "-77.9984, -121.872, 9.91366, 1.11", "-83.5491, -130.286, 9.06437, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-33.0573, -46.2428, 20.1033, 0.55", "-32.6903, -48.2002, 22.7033, 0.55", "-32.4004, -49.7588, 24.4766, 0.55", "-31.9994, -52.7253, 27.4626, 0.55", "-31.7184, -54.8047, 29.5558, 0.55", "-31.5021, -56.4052, 31.1669, 0.55", "-31.156, -58.9659, 33.7445, 0.55", "-31.0876, -59.9946, 34.8616, 0.55", "-30.9028, -62.6055, 37.2243, 0.55", "-28.9248, -66.3671, 43.4711, 0.55", "-27.0541, -71.0337, 49.0735, 0.55", "-26.1143, -75.9582, 54.6806, 0.55", "-24.638, -80.672, 60.3599, 0.55", "-22.1824, -85.5216, 65.557, 0.55", "-20.6046, -89.8807, 71.5009, 0.55", "-18.647, -92.9673, 78.1355, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "94.5612, -56.5811, 30.203, 0.55", "102.6, -58.6068, 32.4508, 0.55", "110.147, -60.2236, 36.238, 0.55", "117.65, -60.5812, 40.4184, 0.55", "124.927, -61.0175, 44.9716, 0.55", "131.897, -60.0917, 49.8915, 0.55", "138.419, -58.1844, 55.1024, 0.55", "143.307, -55.8689, 61.7001, 0.55", "148.621, -53.4208, 67.915, 0.55", "153.408, -49.7583, 73.9163, 0.55", "159.008, -45.9569, 79.0908, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "94.5612, -56.5811, 30.203, 0.55", "103.714, -58.8101, 32.4997, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "21.0179, -126.397, 17.4407, 0.55", "21.11, -134.302, 16.1785, 0.55", "21.6564, -142.201, 14.9801, 0.55", "21.5846, -150.088, 13.602, 0.55", "21.3842, -157.761, 11.296, 0.55", "22.6384, -164.851, 7.70594, 0.55", "23.8376, -171.776, 3.77604, 0.55", "26.1347, -178.133, -0.650952, 0.55", "27.9941, -184.545, -5.19534, 0.55", "31.8232, -190.653, -8.87801, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "21.0179, -126.397, 17.4407, 0.55", "19.692, -136.297, 17.7822, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.89372, -37.1323, -3.22834, 0.83", "-3.31899, -41.9634, -2.18648, 0.83", "-4.03791, -45.9725, -1.51853, 0.83", "-5.33594, -51.3774, -0.640028, 0.83", "-6.63403, -56.8971, 0.206185, 0.83", "-7.60105, -61.4262, 0.883527, 0.83", "-8.44493, -66.0314, 1.52587, 0.83", "-9.46563, -72.5232, 2.29074, 0.83", "-10.2806, -77.8156, 2.78383, 0.83", "-11.3193, -84.8908, 3.1367, 0.83", "-11.6546, -88.0054, 3.19557, 0.55", "-11.7899, -91.6152, 3.15205, 1.11", "-11.6944, -95.9671, 3.04419, 0.55", "-11.1951, -101.488, 2.80506, 1.11", "-10.7775, -105.142, 2.4506, 0.55", "-10.4423, -109.052, 1.91138, 0.83", "-10.2539, -112.467, 1.35494, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.89372, -37.1323, -3.22834, 0.55", "-2.80552, -39.0194, -2.38688, 0.55", "-2.85428, -40.0568, -1.83237, 0.28", "-2.89043, -40.6177, -1.54167, 0.83", "-3.05063, -42.8707, -0.216597, 0.55", "-3.31367, -45.4219, 1.27341, 0.55", "-4.01067, -51.6579, 4.76626, 0.83", "-4.25157, -53.6696, 5.92796, 0.55", "-4.60703, -56.9346, 7.832, 0.55", "-4.95442, -60.6798, 10.0093, 0.28", "-5.1446, -63.0159, 11.3699, 0.55", "-5.26204, -65.0421, 12.4896, 0.55", "-5.26687, -67.9637, 13.8775, 0.55", "-5.20568, -69.1163, 14.4456, 0.28", "-4.93505, -72.1778, 16.0555, 0.83", "-4.68138, -73.983, 16.9865, 0.28", "-4.35768, -75.7721, 17.9633, 0.83", "-4.04453, -77.6219, 18.9765, 0.28", "-3.92421, -78.4185, 19.3894, 0.55", "-3.72133, -80.7436, 20.7269, 0.28", "-3.69013, -82.0337, 21.5727, 0.83", "-3.83453, -83.3574, 22.786, 0.55", "-4.2962, -85.7875, 25.351, 0.28", "-4.54781, -86.8322, 26.4756, 1.11", "-5.45218, -90.0893, 30.1837, 0.28", "-5.97668, -91.6924, 32.1385, 0.55", "-7.67208, -96.1983, 38.2025, 0.28", "-8.15369, -97.3321, 39.9188, 0.83", "-8.97513, -98.9441, 42.6758, 0.28", "-10.7311, -107.598, 48.0666, 0.28", "-12.6867, -117.178, 51.3164, 0.28", "-15.8976, -126.472, 54.4403, 0.28", "-20.0643, -135.203, 58.0955, 0.28", "-24.5227, -143.069, 63.1878, 0.28", "-30.1129, -150.164, 68.3546, 0.28", "-36.1672, -156.308, 74.2322, 0.28", "-41.6391, -162.706, 80.388, 0.28", "-45.9918, -169.729, 86.7181, 0.28", "-50.8336, -175.901, 93.6031, 0.28", "-55.7786, -182.494, 99.9838, 0.28", "-59.6831, -189.164, 106.974, 0.28", "-62.0507, -195.225, 115.139, 0.28", "-63.9759, -202.749, 122.044, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.2539, -112.467, 1.35494, 0.55", "-9.42209, -114.817, 2.44338, 0.55", "-8.73523, -117.101, 3.11274, 0.28", "-8.40714, -118.629, 3.40866, 0.83", "-8.15653, -120.201, 3.64129, 0.28", "-7.38857, -125.393, 4.33242, 0.83", "-7.02088, -127.716, 4.65217, 0.55", "-6.44447, -130.924, 4.99112, 0.83", "-5.69665, -134.464, 5.37535, 0.83", "-5.17726, -136.656, 5.62047, 0.55", "-4.67009, -138.633, 5.86942, 0.55", "-3.68419, -141.937, 6.34455, 0.83", "-2.54459, -145.389, 6.8296, 0.55", "-0.744473, -150.539, 7.52513, 0.55", "-0.0956921, -152.461, 7.70762, 0.28", "0.694826, -155.283, 7.84, 0.83", "1.3432, -158.42, 7.85229, 0.83", "1.61988, -160.999, 7.80725, 0.55", "1.6687, -163.33, 7.75928, 0.55", "1.49979, -168.129, 7.72599, 0.55", "1.32275, -170.436, 7.83862, 0.83", "1.03218, -173.37, 8.12329, 0.83", "0.560642, -177.679, 8.83323, 0.55", "0.279523, -180.499, 9.47445, 0.55", "0.162052, -182.371, 9.98823, 0.83", "0.110827, -185.374, 10.9228, 0.28", "0.14145, -186.046, 11.1288, 0.55", "0.387593, -189.087, 11.976, 0.28", "0.587349, -190.626, 12.3513, 0.55", "0.857356, -192.435, 12.7515, 0.28", "1.4062, -195.903, 13.4105, 1.66", "2.10433, -200.346, 14.1534, 0.83", "2.31313, -201.895, 14.4117, 1.11", "2.53297, -203.9, 14.7481, 0.55", "2.74805, -205.979, 15.2184, 0.28", "2.85487, -207.2, 15.565, 0.83", "2.97124, -208.824, 16.149, 0.28", "3.00853, -209.995, 16.6824, 0.55", "3.09826, -211.732, 17.5107, 0.28", "3.19334, -214.497, 19.0528, 0.28", "3.2786, -217.872, 21.0231, 0.83", "3.28988, -219.306, 21.9216, 0.55", "3.24816, -222.349, 23.796, 0.55", "3.23732, -225.393, 25.6751, 0.83", "3.12948, -230.587, 28.766, 0.55", "3.04036, -232.833, 30.0969, 0.55", "2.85858, -236.29, 32.2389, 0.55", "2.71779, -238.735, 33.8968, 0.55", "2.57071, -241.513, 35.9167, 0.55", "2.34477, -244.061, 38.0011, 0.55", "2.214, -246.287, 39.8695, 0.55", "2.09986, -248.565, 41.8551, 0.55", "1.91205, -252.874, 45.6834, 0.55", "1.86912, -253.924, 46.6681, 0.55", "1.74117, -256.452, 48.9567, 0.83", "1.7847, -258.119, 50.3588, 0.28", "1.84045, -259.699, 51.4779, 0.83", "1.98866, -262.007, 52.9191, 0.28", "2.05006, -263.228, 53.5565, 0.55", "2.12322, -265.481, 54.7581, 0.28", "2.17781, -267.128, 55.6469, 0.83", "2.16166, -270.082, 57.3253, 0.28", "2.12044, -271.718, 58.2474, 0.55", "1.9889, -274.339, 59.6196, 0.55", "1.85556, -276.315, 60.5573, 0.55", "1.84533, -278.472, 61.4784, 0.28", "1.97218, -279.804, 61.9842, 0.28", "2.51021, -282.398, 62.8436, 0.83", "3.04805, -284.361, 63.4217, 0.55", "4.39664, -288.292, 64.4542, 0.55", "5.91134, -292.164, 65.4471, 0.55", "7.07884, -294.949, 66.1482, 0.28", "8.04062, -297.283, 66.6955, 0.55", "9.21915, -300.421, 67.3287, 0.55", "10.2488, -304.119, 67.9612, 0.55", "10.5627, -306.107, 68.2715, 0.83", "10.5605, -308.034, 68.5153, 0.83", "10.2545, -310.565, 68.7562, 0.55", "9.82654, -312.66, 68.8295, 0.83", "8.8367, -316.225, 68.8235, 0.28", "8.5562, -317.12, 68.8231, 0.55", "8.04259, -318.926, 68.8759, 0.28", "7.66926, -320.619, 68.9947, 0.55", "7.24052, -323.643, 69.3215, 0.28", "7.16932, -324.467, 69.4752, 0.83", "6.98506, -327.516, 70.1265, 0.28", "6.89802, -329.073, 70.473, 0.55", "6.78565, -331.364, 70.9236, 0.28", "6.72036, -332.634, 71.1965, 0.83", "6.36786, -338.063, 72.3818, 0.28", "6.1475, -340.631, 72.8293, 0.55", "5.89679, -342.532, 73.0551, 0.55", "5.46906, -345.319, 73.3586, 0.55", "7.2958, -356.535, 75.5438, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-10.2539, -112.467, 1.35494, 0.83", "-10.2396, -114.095, 1.37283, 0.83", "-10.2099, -115.64, 1.36558, 0.28", "-10.1143, -116.644, 1.27258, 1.11", "-10.0313, -118.11, 1.11146, 0.28", "-10.0267, -118.515, 1.04604, 0.55", "-10.0595, -119.504, 0.856168, 0.28", "-10.0777, -119.718, 0.811021, 0.55", "-10.2426, -121.616, 0.429415, 0.28", "-10.2388, -123.139, -0.109762, 0.83", "-10.1705, -124.446, -0.708471, 0.28", "-10.1295, -125.32, -1.12236, 0.55", "-10.0406, -127.518, -2.17477, 0.28", "-9.99494, -128.333, -2.58427, 0.83", "-9.63818, -132.388, -4.79707, 0.28", "-9.51381, -132.955, -5.16926, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.51381, -132.955, -5.16926, 0.28", "-9.42607, -135.919, -3.16121, 0.28", "-9.41056, -136.443, -2.80615, 0.83", "-9.36215, -138.079, -1.69807, 0.28", "-9.3547, -138.33, -1.5276, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.51381, -132.955, -5.16926, 0.28", "-9.48192, -135.871, -3.66395, 0.28", "-9.45755, -137.437, -3.03112, 0.83", "-9.42432, -139.91, -2.22825, 0.28", "-9.42057, -140.428, -2.08483, 0.83", "-9.4037, -142.115, -1.6541, 0.28", "-9.39488, -143.133, -1.42842, 0.55", "-9.41504, -145.12, -1.1902, 0.28", "-9.46246, -146.546, -0.986909, 0.83", "-9.51458, -147.761, -0.807589, 0.28", "-9.53774, -148.307, -0.683509, 0.55", "-9.65255, -150.842, 0.071765, 0.28", "-9.66076, -151.081, 0.163454, 0.55", "-9.67198, -153.746, 1.32711, 0.28", "-9.63788, -155.263, 2.14664, 0.83", "-9.48296, -157.611, 3.61139, 0.28", "-9.41984, -158.357, 4.15702, 0.55", "-9.15947, -159.829, 5.22243, 0.28", "-8.91127, -160.836, 5.89803, 0.28", "-8.22903, -162.976, 7.16491, 0.55", "-7.56546, -164.91, 8.16264, 0.28", "-6.91, -166.792, 8.91031, 0.55", "-5.58913, -170.671, 9.92706, 0.28", "-5.28373, -171.634, 10.0527, 0.55", "-4.90263, -172.868, 10.0838, 0.28", "-4.61775, -173.857, 9.98228, 0.55", "-4.10084, -175.825, 9.61197, 0.28", "-3.77247, -177.413, 9.26965, 0.55", "-3.61166, -179.224, 8.98044, 0.28", "-3.58808, -179.733, 8.91479, 0.55", "-3.55624, -180.931, 8.83136, 0.28", "-3.5272, -181.744, 8.80859, 0.83", "-3.46005, -183.936, 8.78164, 0.28", "-3.43477, -184.702, 8.80844, 0.55", "-3.35342, -187.06, 8.86986, 0.28", "-3.30763, -189.282, 8.98829, 0.28", "-3.28893, -190.142, 9.05622, 0.55", "-1.65622, -198.11, 12.2015, 0.55", "-1.34998, -206.059, 15.7753, 0.55", "-0.992652, -213.835, 19.725, 0.55", "-0.898119, -220.579, 25.3338, 0.55", "-0.280788, -227.473, 30.7144, 0.55", "-0.784425, -234.379, 36.0895, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_40", "dend_27", "dend_22", "dend_17", "dend_0", "dend_42", "dend_41", "dend_37", "dend_28", "dend_24", "dend_23", "dend_21", "dend_18", "dend_6", "dend_1", "dend_39", "dend_38", "dend_36", "dend_29", "dend_26", "dend_25", "dend_20", "dend_19", "dend_8", "dend_7", "dend_5", "dend_2", "dend_33", "dend_30", "dend_10", "dend_9", "dend_4", "dend_3", "dend_35", "dend_34", "dend_32", "dend_31", "dend_12", "dend_11", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_40", "dend_27", "dend_22", "dend_17", "dend_0", "dend_42", "dend_41", "dend_37", "dend_28", "dend_24", "dend_23", "dend_21", "dend_18", "dend_6", "dend_1", "dend_39", "dend_38", "dend_36", "dend_29", "dend_26", "dend_25", "dend_20", "dend_19", "dend_8", "dend_7", "dend_5", "dend_2", "dend_33", "dend_30", "dend_10", "dend_9", "dend_4", "dend_3", "dend_35", "dend_34", "dend_32", "dend_31", "dend_12", "dend_11", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "axon_0", "axon_0", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_6", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_NBC_aa36da75a3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_27
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_28
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_40, dend_27, dend_22, dend_17, dend_0, dend_42, dend_41, dend_37, dend_28, dend_24, dend_23, dend_21, dend_18, dend_6, dend_1, dend_39, dend_38, dend_36, dend_29, dend_26, dend_25, dend_20, dend_19, dend_8, dend_7, dend_5, dend_2, dend_33, dend_30, dend_10, dend_9, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_12, dend_11, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_40, dend_27, dend_22, dend_17, dend_0, dend_42, dend_41, dend_37, dend_28, dend_24, dend_23, dend_21, dend_18, dend_6, dend_1, dend_39, dend_38, dend_36, dend_29, dend_26, dend_25, dend_20, dend_19, dend_8, dend_7, dend_5, dend_2, dend_33, dend_30, dend_10, dend_9, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_12, dend_11, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, axon_0, axon_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4999992531229967)
    connect dend_40(0), soma_0(0.4999992531229967)
    connect dend_27(0), soma_0(0.4999992531229967)
    connect dend_22(0), soma_0(0.4999992531229967)
    connect dend_17(0), soma_0(0.4999992531229967)
    connect dend_0(0), soma_0(0.4999992531229967)
    connect axon_0(0), soma_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.0394349, -10.0153, -0.17743, 2.95112 ) }
    soma_0 { pt3dadd( -0.0532529, -8.94556, -0.157727, 3.04845 ) }
    soma_0 { pt3dadd( -0.067071, -7.87582, -0.138025, 3.53426 ) }
    soma_0 { pt3dadd( -0.0808891, -6.80608, -0.118322, 4.26608 ) }
    soma_0 { pt3dadd( -0.0947072, -5.73635, -0.0986193, 5.29686 ) }
    soma_0 { pt3dadd( -0.108525, -4.66661, -0.0789167, 6.86463 ) }
    soma_0 { pt3dadd( -0.122343, -3.59687, -0.0592141, 8.27645 ) }
    soma_0 { pt3dadd( -0.136161, -2.52713, -0.0395115, 8.22963 ) }
    soma_0 { pt3dadd( -0.14998, -1.45739, -0.0198089, 8.18256 ) }
    soma_0 { pt3dadd( -0.163798, -0.387654, -1.06305E-4, 8.13086 ) }
    soma_0 { pt3dadd( -0.177616, 0.682084, 0.0195963, 8.16843 ) }
    soma_0 { pt3dadd( -0.191434, 1.75182, 0.0392989, 8.48334 ) }
    soma_0 { pt3dadd( -0.205252, 2.82156, 0.0590015, 9.11876 ) }
    soma_0 { pt3dadd( -0.21907, 3.8913, 0.0787041, 9.87 ) }
    soma_0 { pt3dadd( -0.232888, 4.96104, 0.0984067, 10.1451 ) }
    soma_0 { pt3dadd( -0.246706, 6.03077, 0.118109, 9.46254 ) }
    soma_0 { pt3dadd( -0.260524, 7.10051, 0.137812, 8.70667 ) }
    soma_0 { pt3dadd( -0.274342, 8.17025, 0.157515, 7.77276 ) }
    soma_0 { pt3dadd( -0.28816, 9.23999, 0.177217, 6.5331 ) }
    soma_0 { pt3dadd( -0.301978, 10.3097, 0.19692, 4.93174 ) }
    soma_0 { pt3dadd( -0.315796, 11.3795, 0.216622, 2.75051 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -2.11174, 6.42098, -10.8018, 1.11 ) }
    dend_43 { pt3dadd( -3.41175, 10.2943, -14.1885, 1.11 ) }
    dend_43 { pt3dadd( -3.86051, 11.5169, -15.3788, 0.28 ) }
    dend_43 { pt3dadd( -4.45685, 13.1202, -16.8545, 1.11 ) }
    dend_43 { pt3dadd( -6.39349, 17.8546, -21.3689, 0.55 ) }
    dend_43 { pt3dadd( -7.43436, 20.1013, -23.5439, 0.28 ) }
    dend_43 { pt3dadd( -8.08677, 21.4147, -24.9225, 0.83 ) }
    dend_43 { pt3dadd( -9.1221, 23.2332, -27.0581, 0.28 ) }
    dend_43 { pt3dadd( -10.1595, 24.929, -29.1362, 1.66 ) }
    dend_43 { pt3dadd( -12.4259, 28.4095, -33.3778, 0.28 ) }
    dend_43 { pt3dadd( -13.056, 29.3564, -34.4214, 0.83 ) }
    dend_43 { pt3dadd( -15.2409, 32.8758, -38.1967, 0.28 ) }
    dend_43 { pt3dadd( -16.4914, 34.8863, -40.3591, 0.55 ) }
    dend_43 { pt3dadd( -17.9249, 36.9172, -42.5732, 0.28 ) }
    dend_43 { pt3dadd( -18.8871, 38.0888, -44.0069, 1.66 ) }
    dend_43 { pt3dadd( -20.8449, 40.2135, -46.7064, 0.28 ) }
    dend_43 { pt3dadd( -21.1498, 40.5125, -47.1597, 0.55 ) }
    dend_43 { pt3dadd( -22.5675, 41.7367, -49.2824, 0.28 ) }
    dend_43 { pt3dadd( -23.8788, 42.765, -51.3869, 0.55 ) }
    dend_43 { pt3dadd( -26.2317, 44.3712, -55.5873, 0.28 ) }
    dend_43 { pt3dadd( -27.9673, 45.2965, -58.8259, 0.83 ) }
    dend_43 { pt3dadd( -30.745, 46.3726, -64.3961, 0.55 ) }
    dend_43 { pt3dadd( -31.4707, 46.5976, -65.9078, 0.28 ) }
    dend_43 { pt3dadd( -32.0745, 46.688, -67.2594, 0.55 ) }
    dend_43 { pt3dadd( -34.6178, 46.6871, -73.0273, 0.28 ) }
    dend_43 { pt3dadd( -35.4868, 46.4525, -74.8266, 0.83 ) }
    dend_43 { pt3dadd( -37.6516, 45.4299, -78.6315, 0.28 ) }
    dend_43 { pt3dadd( -37.9916, 45.239, -79.1343, 0.55 ) }
    dend_43 { pt3dadd( -40.8576, 43.6097, -82.8908, 0.28 ) }
    dend_43 { pt3dadd( -42.4024, 42.7726, -84.6807, 0.83 ) }
    dend_43 { pt3dadd( -44.0465, 41.9592, -86.295, 0.28 ) }
    dend_43 { pt3dadd( -46.3989, 40.8906, -88.7042, 0.83 ) }
    dend_43 { pt3dadd( -49.9221, 39.4071, -92.1585, 0.28 ) }
    dend_43 { pt3dadd( -51.2216, 38.9516, -93.5061, 0.83 ) }
    dend_43 { pt3dadd( -52.1248, 38.7127, -94.4522, 0.28 ) }
    dend_43 { pt3dadd( -53.6182, 38.5831, -96.1141, 0.83 ) }
    dend_43 { pt3dadd( -57.8216, 38.8811, -100.864, 0.28 ) }
    dend_43 { pt3dadd( -58.8872, 39.0836, -102.05, 0.55 ) }
    dend_43 { pt3dadd( -62.7847, 40.1764, -106.206, 0.28 ) }
    dend_43 { pt3dadd( -63.4664, 40.4017, -106.899, 1.11 ) }
    dend_43 { pt3dadd( -69.2158, 42.5445, -112.361, 0.28 ) }
    dend_43 { pt3dadd( -70.6489, 43.1604, -113.597, 0.83 ) }
    dend_43 { pt3dadd( -72.819, 44.1946, -115.151, 0.28 ) }
    dend_43 { pt3dadd( -73.2002, 44.3836, -115.396, 0.55 ) }
    dend_43 { pt3dadd( -75.3133, 45.3488, -116.467, 0.28 ) }
    dend_43 { pt3dadd( -75.8332, 45.5521, -116.687, 0.55 ) }
    dend_43 { pt3dadd( -77.7788, 46.1293, -117.262, 0.28 ) }
    dend_43 { pt3dadd( -78.81, 46.4922, -117.485, 0.55 ) }
    dend_43 { pt3dadd( -82.049, 47.8474, -117.958, 0.28 ) }
    dend_43 { pt3dadd( -84.0847, 48.7226, -118.232, 0.55 ) }
    dend_43 { pt3dadd( -87.0025, 50.0515, -118.579, 0.28 ) }
    dend_43 { pt3dadd( -87.9063, 50.4684, -118.645, 0.55 ) }
    dend_43 { pt3dadd( -91.9142, 52.3342, -118.673, 0.28 ) }
    dend_43 { pt3dadd( -92.534, 52.6412, -118.651, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 75/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.67826, -0.179771, -8.93177, 0.55 ) }
    dend_40 { pt3dadd( 4.47666, -2.2521, -8.92316, 0.55 ) }
    dend_40 { pt3dadd( 5.51357, -5.2344, -8.92434, 0.55 ) }
    dend_40 { pt3dadd( 6.12805, -7.2585, -8.92356, 0.28 ) }
    dend_40 { pt3dadd( 6.7439, -9.53522, -8.93085, 1.11 ) }
    dend_40 { pt3dadd( 7.46248, -12.1917, -8.93936, 0.55 ) }
    dend_40 { pt3dadd( 7.99309, -14.1533, -8.94565, 0.28 ) }
    dend_40 { pt3dadd( 8.2245, -15.2148, -8.95167, 0.83 ) }
    dend_40 { pt3dadd( 8.54356, -17.4151, -8.97441, 0.28 ) }
    dend_40 { pt3dadd( 8.75005, -19.3652, -9.01036, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 85/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.18174, 6.10898, 19.5482, 0.83 ) }
    dend_27 { pt3dadd( -3.28919, 6.74447, 19.5482, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 87/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 4.73826, 3.88598, -9.36177, 1.38 ) }
    dend_22 { pt3dadd( 6.32787, 3.94185, -10.218, 1.38 ) }
    dend_22 { pt3dadd( 8.47179, 4.18889, -11.1564, 1.66 ) }
    dend_22 { pt3dadd( 10.391, 4.41003, -11.9964, 1.66 ) }
    dend_22 { pt3dadd( 13.5984, 4.77962, -13.4003, 1.66 ) }
    dend_22 { pt3dadd( 17.3325, 5.20989, -15.0347, 0.83 ) }
    dend_22 { pt3dadd( 18.4226, 5.3355, -15.5118, 0.28 ) }
    dend_22 { pt3dadd( 22.0418, 5.63536, -17.441, 1.94 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 95/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -3.93174, -6.54652, -2.10177, 1.11 ) }
    dend_17 { pt3dadd( -4.66948, -7.75809, -4.58315, 1.11 ) }
    dend_17 { pt3dadd( -6.05353, -9.69045, -8.43932, 0.83 ) }
    dend_17 { pt3dadd( -6.94536, -10.8113, -10.5909, 1.66 ) }
    dend_17 { pt3dadd( -10.446, -14.6251, -17.5854, 1.94 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_17 { pt3dadd( -12.9006, -17.2318, -21.989, 0.83 ) }
    dend_17 { pt3dadd( -13.6795, -18.0762, -23.303, 0.83 ) }
    dend_17 { pt3dadd( -14.9751, -19.3147, -25.2117, 0.55 ) }
    dend_17 { pt3dadd( -15.8981, -20.0603, -26.1917, 0.83 ) }
    dend_17 { pt3dadd( -18.1667, -21.6302, -27.7532, 0.55 ) }
    dend_17 { pt3dadd( -19.8774, -22.7696, -28.3541, 0.55 ) }
    dend_17 { pt3dadd( -21.6423, -23.9837, -28.7821, 0.28 ) }
    dend_17 { pt3dadd( -23.9095, -25.5536, -29.3874, 0.55 ) }
    dend_17 { pt3dadd( -25.7255, -26.8539, -29.9578, 0.55 ) }
    dend_17 { pt3dadd( -28.4789, -28.8005, -30.8795, 0.55 ) }
    dend_17 { pt3dadd( -32.4051, -31.5052, -32.3246, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 11/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.23174, -11.168, -1.27177, 3.6 ) }
    dend_0 { pt3dadd( -1.24953, -12.8902, -1.20762, 3.6 ) }
    dend_0 { pt3dadd( -1.27979, -15.8195, -1.09852, 4.16 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 14/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.315796, 11.3795, 0.216622, 0.83 ) }
    axon_0 { pt3dadd( -0.509538, 26.3783, 0.216622, 0.83 ) }
    axon_0 { pt3dadd( -0.70328, 41.377, 0.216622, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 17/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 8.75005, -19.3652, -9.01036, 0.28 ) }
    dend_42 { pt3dadd( 9.18512, -21.4759, -10.9991, 0.28 ) }
    dend_42 { pt3dadd( 9.24625, -22.0316, -11.6593, 0.28 ) }
    dend_42 { pt3dadd( 9.34222, -23.7068, -13.6064, 0.83 ) }
    dend_42 { pt3dadd( 9.42382, -24.9411, -15.6445, 1.38 ) }
    dend_42 { pt3dadd( 9.47395, -27.1501, -19.558, 0.55 ) }
    dend_42 { pt3dadd( 9.4537, -28.1528, -21.5237, 1.11 ) }
    dend_42 { pt3dadd( 9.27852, -30.1712, -26.0905, 0.55 ) }
    dend_42 { pt3dadd( 9.15484, -30.9873, -28.1454, 1.66 ) }
    dend_42 { pt3dadd( 8.44461, -34.5619, -37.4306, 0.28 ) }
    dend_42 { pt3dadd( 8.31264, -35.2177, -39.2754, 0.83 ) }
    dend_42 { pt3dadd( 8.05716, -36.8472, -43.9446, 0.28 ) }
    dend_42 { pt3dadd( 7.99456, -37.3998, -45.5288, 0.83 ) }
    dend_42 { pt3dadd( 7.83028, -39.1029, -50.1227, 0.28 ) }
    dend_42 { pt3dadd( 7.79118, -39.901, -52.1913, 1.66 ) }
    dend_42 { pt3dadd( 7.82156, -42.8136, -58.2151, 0.28 ) }
    dend_42 { pt3dadd( 7.8526, -43.1714, -58.9177, 0.55 ) }
    dend_42 { pt3dadd( 7.91116, -43.7409, -59.8711, 0.28 ) }
    dend_42 { pt3dadd( 7.94739, -44.1803, -60.5428, 0.83 ) }
    dend_42 { pt3dadd( 7.99515, -47.1122, -64.4095, 0.28 ) }
    dend_42 { pt3dadd( 7.90686, -48.0495, -65.5429, 0.83 ) }
    dend_42 { pt3dadd( 7.56393, -49.8345, -67.2879, 0.28 ) }
    dend_42 { pt3dadd( 7.28175, -50.8821, -68.2504, 0.55 ) }
    dend_42 { pt3dadd( 6.60491, -52.895, -69.9543, 0.28 ) }
    dend_42 { pt3dadd( 6.0357, -54.3088, -70.9563, 1.11 ) }
    dend_42 { pt3dadd( 4.68583, -57.1744, -72.5214, 0.28 ) }
    dend_42 { pt3dadd( 4.23851, -58.0822, -72.9814, 0.55 ) }
    dend_42 { pt3dadd( 3.67861, -59.2233, -73.4624, 0.28 ) }
    dend_42 { pt3dadd( 3.30962, -60.0534, -73.8086, 0.55 ) }
    dend_42 { pt3dadd( 2.54588, -61.967, -74.5379, 0.28 ) }
    dend_42 { pt3dadd( 2.18414, -63.0469, -74.9774, 0.83 ) }
    dend_42 { pt3dadd( 1.66226, -64.9755, -75.7443, 0.28 ) }
    dend_42 { pt3dadd( 1.36179, -66.3262, -76.2937, 1.11 ) }
    dend_42 { pt3dadd( 0.847642, -68.9593, -77.3854, 0.28 ) }
    dend_42 { pt3dadd( 0.706364, -69.6849, -77.6883, 0.55 ) }
    dend_42 { pt3dadd( 0.181319, -72.1096, -78.6631, 0.28 ) }
    dend_42 { pt3dadd( -0.0337081, -73.1306, -79.0665, 0.83 ) }
    dend_42 { pt3dadd( -0.620775, -75.9057, -80.0759, 0.28 ) }
    dend_42 { pt3dadd( -0.737039, -76.4513, -80.2888, 0.55 ) }
    dend_42 { pt3dadd( -1.30461, -78.8564, -81.2272, 0.28 ) }
    dend_42 { pt3dadd( -1.84907, -81.1537, -82.2195, 1.66 ) }
    dend_42 { pt3dadd( -2.64072, -84.4557, -83.74, 0.28 ) }
    dend_42 { pt3dadd( -2.95274, -85.8771, -84.5226, 0.55 ) }
    dend_42 { pt3dadd( -3.43282, -88.2862, -86.0243, 0.28 ) }
    dend_42 { pt3dadd( -3.54882, -88.8874, -86.4654, 1.11 ) }
    dend_42 { pt3dadd( -3.96284, -90.9971, -88.228, 0.28 ) }
    dend_42 { pt3dadd( -4.09441, -91.6342, -88.7968, 0.55 ) }
    dend_42 { pt3dadd( -4.69541, -94.2422, -90.997, 0.28 ) }
    dend_42 { pt3dadd( -4.91398, -95.215, -91.7229, 0.83 ) }
    dend_42 { pt3dadd( -5.48019, -97.9966, -93.5116, 0.28 ) }
    dend_42 { pt3dadd( -5.74092, -99.4069, -94.3278, 0.83 ) }
    dend_42 { pt3dadd( -5.99532, -101.035, -95.1964, 0.28 ) }
    dend_42 { pt3dadd( -6.32723, -103.439, -96.3598, 0.28 ) }
    dend_42 { pt3dadd( -6.58413, -105.463, -97.1727, 1.11 ) }
    dend_42 { pt3dadd( -6.76472, -107.485, -97.9218, 0.28 ) }
    dend_42 { pt3dadd( -6.86267, -108.768, -98.3374, 0.55 ) }
    dend_42 { pt3dadd( -7.09308, -111.339, -99.2013, 0.28 ) }
    dend_42 { pt3dadd( -7.20836, -112.372, -99.5545, 0.83 ) }
    dend_42 { pt3dadd( -7.35982, -113.844, -100.234, 0.83 ) }
    dend_42 { pt3dadd( -7.48294, -115.04, -100.86, 0.83 ) }
    dend_42 { pt3dadd( -7.88193, -117.693, -102.507, 0.28 ) }
    dend_42 { pt3dadd( -8.35344, -120.146, -104.194, 0.28 ) }
    dend_42 { pt3dadd( -8.57935, -121.027, -104.877, 1.11 ) }
    dend_42 { pt3dadd( -9.90424, -125.49, -108.65, 0.28 ) }
    dend_42 { pt3dadd( -10.3007, -126.656, -109.742, 1.11 ) }
    dend_42 { pt3dadd( -11.549, -130.031, -113.124, 0.28 ) }
    dend_42 { pt3dadd( -11.9887, -131.169, -114.34, 0.83 ) }
    dend_42 { pt3dadd( -13.1475, -134.063, -117.48, 0.28 ) }
    dend_42 { pt3dadd( -13.4665, -134.884, -118.323, 0.83 ) }
    dend_42 { pt3dadd( -14.272, -136.963, -120.217, 0.28 ) }
    dend_42 { pt3dadd( -14.416, -137.411, -120.634, 0.55 ) }
    dend_42 { pt3dadd( -15.031, -139.89, -122.781, 0.28 ) }
    dend_42 { pt3dadd( -15.1531, -140.52, -123.373, 1.11 ) }
    dend_42 { pt3dadd( -15.3859, -141.889, -124.656, 0.28 ) }
    dend_42 { pt3dadd( -15.4626, -142.27, -125.031, 0.55 ) }
    dend_42 { pt3dadd( -16.1313, -145.27, -127.908, 0.28 ) }
    dend_42 { pt3dadd( -16.484, -146.541, -129.179, 0.83 ) }
    dend_42 { pt3dadd( -17.6915, -150.19, -132.833, 0.28 ) }
    dend_42 { pt3dadd( -18.0455, -151.094, -133.775, 0.83 ) }
    dend_42 { pt3dadd( -18.8376, -152.833, -135.629, 0.28 ) }
    dend_42 { pt3dadd( -19.4923, -154.039, -136.993, 0.83 ) }
    dend_42 { pt3dadd( -20.9173, -156.154, -139.506, 0.28 ) }
    dend_42 { pt3dadd( -21.6003, -156.878, -140.588, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_42 { pt3dadd( -22.4059, -157.434, -141.598, 0.28 ) }
    dend_42 { pt3dadd( -22.7389, -157.59, -142.088, 0.55 ) }
    dend_42 { pt3dadd( -24.3476, -158.087, -144.542, 0.28 ) }
    dend_42 { pt3dadd( -24.8243, -158.183, -145.282, 0.83 ) }
    dend_42 { pt3dadd( -27.0196, -158.56, -148.911, 0.28 ) }
    dend_42 { pt3dadd( -27.6498, -158.673, -149.999, 0.83 ) }
    dend_42 { pt3dadd( -31.451, -159.159, -156.6, 0.28 ) }
    dend_42 { pt3dadd( -31.8942, -159.189, -157.367, 0.28 ) }
    dend_42 { pt3dadd( -32.1779, -159.2, -157.847, 0.55 ) }
    dend_42 { pt3dadd( -33.7663, -159.237, -160.402, 0.28 ) }
    dend_42 { pt3dadd( -34.9643, -159.193, -162.101, 0.83 ) }
    dend_42 { pt3dadd( -37.3405, -158.931, -165.007, 0.28 ) }
    dend_42 { pt3dadd( -37.79, -158.847, -165.415, 0.55 ) }
    dend_42 { pt3dadd( -39.0848, -158.515, -166.662, 0.28 ) }
    dend_42 { pt3dadd( -39.9332, -158.243, -167.49, 0.55 ) }
    dend_42 { pt3dadd( -41.7595, -157.395, -169.406, 0.28 ) }
    dend_42 { pt3dadd( -42.5926, -156.905, -170.425, 0.28 ) }
    dend_42 { pt3dadd( -43.0762, -156.581, -171.121, 0.83 ) }
    dend_42 { pt3dadd( -44.6044, -155.304, -173.547, 0.28 ) }
    dend_42 { pt3dadd( -44.7255, -155.181, -173.753, 0.55 ) }
    dend_42 { pt3dadd( -46.0371, -153.709, -176.167, 0.28 ) }
    dend_42 { pt3dadd( -46.2869, -153.434, -176.637, 0.55 ) }
    dend_42 { pt3dadd( -47.0815, -152.617, -178.035, 0.28 ) }
    dend_42 { pt3dadd( -47.4789, -152.276, -178.622, 0.83 ) }
    dend_42 { pt3dadd( -49.0096, -151.273, -180.362, 0.28 ) }
    dend_42 { pt3dadd( -49.6065, -150.97, -180.935, 0.55 ) }
    dend_42 { pt3dadd( -50.6999, -150.585, -181.773, 0.28 ) }
    dend_42 { pt3dadd( -51.1443, -150.475, -182.074, 0.55 ) }
    dend_42 { pt3dadd( -52.4305, -150.26, -182.778, 0.28 ) }
    dend_42 { pt3dadd( -53.6744, -150.114, -183.402, 0.55 ) }
    dend_42 { pt3dadd( -54.7371, -150.048, -183.826, 0.28 ) }
    dend_42 { pt3dadd( -55.5667, -150.019, -184.106, 0.55 ) }
    dend_42 { pt3dadd( -57.0005, -149.996, -184.497, 0.28 ) }
    dend_42 { pt3dadd( -58.6378, -150.0, -184.89, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 34/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 8.75005, -19.3652, -9.01036, 0.55 ) }
    dend_41 { pt3dadd( 9.23051, -26.7227, -11.215, 0.55 ) }
    dend_41 { pt3dadd( 9.43184, -29.1074, -11.6185, 0.55 ) }
    dend_41 { pt3dadd( 9.61414, -31.1571, -11.8509, 0.28 ) }
    dend_41 { pt3dadd( 9.69073, -32.1956, -11.9665, 0.55 ) }
    dend_41 { pt3dadd( 10.004, -36.1687, -12.4034, 0.28 ) }
    dend_41 { pt3dadd( 10.0509, -36.9385, -12.5309, 0.55 ) }
    dend_41 { pt3dadd( 10.3155, -41.4002, -13.0462, 0.28 ) }
    dend_41 { pt3dadd( 10.3297, -42.7204, -13.4304, 0.55 ) }
    dend_41 { pt3dadd( 10.2068, -46.3088, -14.8536, 0.28 ) }
    dend_41 { pt3dadd( 10.1607, -47.0037, -15.1654, 0.55 ) }
    dend_41 { pt3dadd( 9.75943, -51.4432, -17.3572, 0.28 ) }
    dend_41 { pt3dadd( 9.6918, -52.3913, -17.7822, 0.55 ) }
    dend_41 { pt3dadd( 9.20263, -60.4907, -21.1971, 0.28 ) }
    dend_41 { pt3dadd( 9.20233, -61.681, -21.5734, 0.55 ) }
    dend_41 { pt3dadd( 9.3673, -65.3903, -22.4214, 0.28 ) }
    dend_41 { pt3dadd( 9.50745, -66.7889, -22.6393, 0.83 ) }
    dend_41 { pt3dadd( 10.527, -72.9736, -23.1318, 0.28 ) }
    dend_41 { pt3dadd( 10.6901, -73.7316, -23.1464, 0.83 ) }
    dend_41 { pt3dadd( 12.7304, -81.3475, -22.7437, 0.28 ) }
    dend_41 { pt3dadd( 13.2256, -83.0724, -22.6243, 0.83 ) }
    dend_41 { pt3dadd( 14.9309, -88.7681, -22.1494, 0.28 ) }
    dend_41 { pt3dadd( 15.7634, -91.603, -21.9067, 0.83 ) }
    dend_41 { pt3dadd( 16.4955, -94.1291, -21.6871, 0.28 ) }
    dend_41 { pt3dadd( 16.8669, -95.444, -21.5492, 0.55 ) }
    dend_41 { pt3dadd( 17.7265, -98.5737, -21.144, 0.28 ) }
    dend_41 { pt3dadd( 18.2738, -100.612, -20.8412, 0.83 ) }
    dend_41 { pt3dadd( 19.2376, -104.329, -20.2737, 0.28 ) }
    dend_41 { pt3dadd( 19.4067, -105.001, -20.1844, 0.55 ) }
    dend_41 { pt3dadd( 20.1938, -108.12, -19.9014, 0.28 ) }
    dend_41 { pt3dadd( 20.4857, -109.186, -19.8178, 0.55 ) }
    dend_41 { pt3dadd( 21.1886, -111.506, -19.7061, 0.28 ) }
    dend_41 { pt3dadd( 22.3717, -115.041, -19.4681, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_27 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -3.28919, 6.74447, 19.5482, 0.83 ) }
    dend_37 { pt3dadd( -6.03835, 7.76577, 20.5786, 0.83 ) }
    dend_37 { pt3dadd( -7.75371, 8.62106, 21.3341, 0.83 ) }
    dend_37 { pt3dadd( -9.90324, 9.70146, 22.2985, 1.38 ) }
    dend_37 { pt3dadd( -12.6999, 10.9717, 23.9423, 0.83 ) }
    dend_37 { pt3dadd( -16.4778, 12.5031, 26.8662, 0.83 ) }
    dend_37 { pt3dadd( -19.9444, 13.8612, 29.887, 1.94 ) }
    dend_37 { pt3dadd( -21.8065, 14.7085, 31.8744, 0.55 ) }
    dend_37 { pt3dadd( -22.6668, 15.1325, 32.9026, 0.55 ) }
    dend_37 { pt3dadd( -26.1255, 16.8848, 37.3784, 0.55 ) }
    dend_37 { pt3dadd( -28.9994, 18.2617, 41.2357, 0.28 ) }
    dend_37 { pt3dadd( -29.5662, 18.4507, 41.8941, 0.83 ) }
    dend_37 { pt3dadd( -32.7511, 19.3524, 45.1288, 0.28 ) }
    dend_37 { pt3dadd( -33.4554, 19.5693, 45.8301, 0.55 ) }
    dend_37 { pt3dadd( -34.5152, 19.9935, 46.7099, 0.28 ) }
    dend_37 { pt3dadd( -35.5899, 20.5104, 47.1516, 0.55 ) }
    dend_37 { pt3dadd( -38.8122, 21.9467, 47.5775, 0.28 ) }
    dend_37 { pt3dadd( -39.9024, 22.3242, 47.6153, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 85/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.28919, 6.74447, 19.5482, 0.83 ) }
    dend_28 { pt3dadd( -2.00945, 5.96662, 19.5761, 0.83 ) }
    dend_28 { pt3dadd( -0.400763, 4.98882, 19.6112, 0.83 ) }
    dend_28 { pt3dadd( 1.66612, 3.73253, 19.6564, 0.83 ) }
    dend_28 { pt3dadd( 4.9998, 1.70625, 19.7291, 0.83 ) }
    dend_28 { pt3dadd( 7.52625, 0.170614, 19.7843, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 91/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 22.0418, 5.63536, -17.441, 0.83 ) }
    dend_24 { pt3dadd( 24.9666, 5.85495, -17.9125, 0.83 ) }
    dend_24 { pt3dadd( 27.3324, 6.35503, -18.3527, 0.55 ) }
    dend_24 { pt3dadd( 30.0223, 7.10869, -19.0581, 0.55 ) }
    dend_24 { pt3dadd( 31.9129, 7.64074, -19.6046, 0.55 ) }
    dend_24 { pt3dadd( 33.7855, 8.13878, -20.1522, 0.83 ) }
    dend_24 { pt3dadd( 36.061, 8.74397, -20.8176, 0.55 ) }
    dend_24 { pt3dadd( 39.9528, 9.89206, -22.0581, 0.55 ) }
    dend_24 { pt3dadd( 42.995, 10.8917, -23.0833, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( 44.5129, 11.4832, -23.599, 0.55 ) }
    dend_24 { pt3dadd( 47.9745, 12.8437, -24.9272, 1.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 22.0418, 5.63536, -17.441, 0.28 ) }
    dend_23 { pt3dadd( 22.9392, 6.8862, -17.0978, 0.28 ) }
    dend_23 { pt3dadd( 23.8458, 8.11107, -16.604, 0.55 ) }
    dend_23 { pt3dadd( 25.5675, 10.402, -15.5711, 0.28 ) }
    dend_23 { pt3dadd( 26.5608, 11.7045, -14.9403, 0.83 ) }
    dend_23 { pt3dadd( 28.0655, 13.6366, -13.9727, 0.28 ) }
    dend_23 { pt3dadd( 28.8934, 14.7297, -13.3997, 0.55 ) }
    dend_23 { pt3dadd( 30.9148, 17.3441, -11.9269, 0.28 ) }
    dend_23 { pt3dadd( 31.2361, 17.7869, -11.6702, 0.55 ) }
    dend_23 { pt3dadd( 31.8654, 18.7323, -11.1402, 0.28 ) }
    dend_23 { pt3dadd( 32.2399, 19.2915, -10.8246, 0.55 ) }
    dend_23 { pt3dadd( 33.1852, 20.6974, -10.0778, 0.28 ) }
    dend_23 { pt3dadd( 34.2559, 22.255, -9.35403, 0.55 ) }
    dend_23 { pt3dadd( 36.8988, 25.8955, -7.89085, 0.28 ) }
    dend_23 { pt3dadd( 38.4894, 27.8697, -7.16204, 0.55 ) }
    dend_23 { pt3dadd( 39.8574, 29.4138, -6.64139, 0.28 ) }
    dend_23 { pt3dadd( 40.4017, 29.9225, -6.49151, 0.55 ) }
    dend_23 { pt3dadd( 42.5547, 31.6098, -6.04693, 0.28 ) }
    dend_23 { pt3dadd( 43.8323, 32.4431, -5.83434, 0.83 ) }
    dend_23 { pt3dadd( 46.8593, 34.067, -5.45085, 0.28 ) }
    dend_23 { pt3dadd( 47.7456, 34.4912, -5.42664, 0.55 ) }
    dend_23 { pt3dadd( 52.7587, 36.6956, -5.625, 0.28 ) }
    dend_23 { pt3dadd( 53.4554, 36.9862, -5.66416, 0.83 ) }
    dend_23 { pt3dadd( 55.8764, 37.9054, -5.865, 0.28 ) }
    dend_23 { pt3dadd( 56.1342, 37.9992, -5.89372, 0.83 ) }
    dend_23 { pt3dadd( 61.9387, 40.0295, -6.87923, 0.28 ) }
    dend_23 { pt3dadd( 62.9931, 40.3997, -7.13822, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 29/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -32.4051, -31.5052, -32.3246, 0.28 ) }
    dend_21 { pt3dadd( -34.1688, -32.4358, -32.3824, 0.28 ) }
    dend_21 { pt3dadd( -34.6259, -32.6862, -32.4016, 0.55 ) }
    dend_21 { pt3dadd( -36.9429, -33.9571, -32.4411, 0.28 ) }
    dend_21 { pt3dadd( -38.3912, -34.7274, -32.4625, 0.55 ) }
    dend_21 { pt3dadd( -41.5653, -36.3764, -32.6507, 0.83 ) }
    dend_21 { pt3dadd( -43.7478, -37.4922, -32.8259, 0.28 ) }
    dend_21 { pt3dadd( -46.2804, -38.6598, -33.2794, 0.83 ) }
    dend_21 { pt3dadd( -49.3672, -39.9516, -34.0493, 0.28 ) }
    dend_21 { pt3dadd( -50.5877, -40.3713, -34.5586, 0.55 ) }
    dend_21 { pt3dadd( -52.6684, -40.983, -35.6522, 0.28 ) }
    dend_21 { pt3dadd( -54.4381, -41.3516, -36.7045, 0.83 ) }
    dend_21 { pt3dadd( -58.9592, -42.082, -39.7648, 0.28 ) }
    dend_21 { pt3dadd( -60.1222, -42.2107, -40.6358, 0.55 ) }
    dend_21 { pt3dadd( -65.9903, -42.5337, -45.1728, 0.28 ) }
    dend_21 { pt3dadd( -67.3774, -42.6021, -46.2203, 0.55 ) }
    dend_21 { pt3dadd( -69.0038, -42.6836, -47.3253, 0.28 ) }
    dend_21 { pt3dadd( -70.384, -42.7569, -48.1958, 0.28 ) }
    dend_21 { pt3dadd( -72.3176, -42.9367, -49.1802, 0.28 ) }
    dend_21 { pt3dadd( -75.7162, -43.3214, -50.4748, 0.55 ) }
    dend_21 { pt3dadd( -77.4238, -43.5781, -50.8541, 0.83 ) }
    dend_21 { pt3dadd( -80.589, -44.0836, -51.5346, 0.28 ) }
    dend_21 { pt3dadd( -80.9206, -44.1352, -51.6112, 0.55 ) }
    dend_21 { pt3dadd( -82.6564, -44.3535, -51.9965, 0.28 ) }
    dend_21 { pt3dadd( -84.2904, -44.4735, -52.3855, 0.83 ) }
    dend_21 { pt3dadd( -87.5514, -44.5209, -53.203, 0.28 ) }
    dend_21 { pt3dadd( -89.0983, -44.3906, -53.642, 0.83 ) }
    dend_21 { pt3dadd( -93.2816, -43.6995, -54.9596, 0.28 ) }
    dend_21 { pt3dadd( -93.9597, -43.5373, -55.1869, 0.83 ) }
    dend_21 { pt3dadd( -96.0632, -42.8495, -55.9187, 0.28 ) }
    dend_21 { pt3dadd( -96.4697, -42.6775, -56.0405, 0.83 ) }
    dend_21 { pt3dadd( -98.2625, -41.6649, -56.3738, 0.28 ) }
    dend_21 { pt3dadd( -99.0179, -41.14, -56.4506, 0.83 ) }
    dend_21 { pt3dadd( -100.451, -39.9531, -56.4507, 0.28 ) }
    dend_21 { pt3dadd( -101.007, -39.4789, -56.439, 0.83 ) }
    dend_21 { pt3dadd( -103.058, -37.6808, -56.2879, 0.28 ) }
    dend_21 { pt3dadd( -103.931, -36.9152, -56.1942, 0.83 ) }
    dend_21 { pt3dadd( -107.087, -34.1582, -55.6286, 0.28 ) }
    dend_21 { pt3dadd( -107.686, -33.6331, -55.5166, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 68/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -32.4051, -31.5052, -32.3246, 0.28 ) }
    dend_18 { pt3dadd( -33.2866, -34.0372, -33.7031, 0.28 ) }
    dend_18 { pt3dadd( -33.5476, -34.7661, -34.0938, 0.83 ) }
    dend_18 { pt3dadd( -34.3695, -37.1232, -35.3378, 0.28 ) }
    dend_18 { pt3dadd( -35.1415, -39.3149, -36.5082, 1.11 ) }
    dend_18 { pt3dadd( -36.0173, -41.8463, -37.8038, 0.28 ) }
    dend_18 { pt3dadd( -36.0958, -42.0844, -37.9219, 0.55 ) }
    dend_18 { pt3dadd( -36.6522, -43.7041, -38.7539, 0.28 ) }
    dend_18 { pt3dadd( -36.76, -44.0419, -38.9201, 0.55 ) }
    dend_18 { pt3dadd( -37.2921, -45.9488, -39.7742, 0.28 ) }
    dend_18 { pt3dadd( -37.8103, -48.0019, -40.5929, 1.38 ) }
    dend_18 { pt3dadd( -38.3792, -50.5855, -41.4205, 0.28 ) }
    dend_18 { pt3dadd( -38.4358, -50.8459, -41.4924, 0.55 ) }
    dend_18 { pt3dadd( -38.8326, -52.6709, -41.9014, 0.28 ) }
    dend_18 { pt3dadd( -38.9232, -53.0605, -41.9758, 0.55 ) }
    dend_18 { pt3dadd( -39.5084, -55.5869, -42.3273, 0.28 ) }
    dend_18 { pt3dadd( -39.6609, -56.1915, -42.3868, 0.55 ) }
    dend_18 { pt3dadd( -40.1077, -57.5004, -42.4581, 0.28 ) }
    dend_18 { pt3dadd( -40.3631, -58.2223, -42.5051, 0.55 ) }
    dend_18 { pt3dadd( -41.0368, -59.7412, -42.5556, 0.28 ) }
    dend_18 { pt3dadd( -41.6044, -60.7575, -42.5921, 0.55 ) }
    dend_18 { pt3dadd( -42.8192, -62.6747, -42.6917, 0.28 ) }
    dend_18 { pt3dadd( -43.9925, -64.4153, -42.73, 0.28 ) }
    dend_18 { pt3dadd( -45.4313, -66.4746, -42.7261, 0.55 ) }
    dend_18 { pt3dadd( -46.9051, -68.4975, -42.7927, 0.55 ) }
    dend_18 { pt3dadd( -48.1686, -70.1725, -42.8778, 0.28 ) }
    dend_18 { pt3dadd( -48.6564, -70.831, -42.9643, 0.55 ) }
    dend_18 { pt3dadd( -49.6759, -72.242, -43.2657, 0.28 ) }
    dend_18 { pt3dadd( -50.0493, -72.8987, -43.4505, 0.55 ) }
    dend_18 { pt3dadd( -51.3737, -75.6993, -44.3867, 0.28 ) }
    dend_18 { pt3dadd( -51.6918, -76.6839, -44.8283, 0.83 ) }
    dend_18 { pt3dadd( -52.1414, -78.7484, -45.8281, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_18 { pt3dadd( -52.1951, -79.0827, -46.0086, 0.55 ) }
    dend_18 { pt3dadd( -52.5765, -81.8294, -47.5324, 0.28 ) }
    dend_18 { pt3dadd( -52.6354, -82.3115, -47.783, 0.55 ) }
    dend_18 { pt3dadd( -52.978, -85.191, -49.1417, 0.28 ) }
    dend_18 { pt3dadd( -53.2207, -87.1591, -50.0511, 0.83 ) }
    dend_18 { pt3dadd( -53.6176, -90.3809, -51.4182, 0.28 ) }
    dend_18 { pt3dadd( -53.7968, -92.2414, -52.2633, 0.55 ) }
    dend_18 { pt3dadd( -53.9579, -93.9978, -53.075, 0.28 ) }
    dend_18 { pt3dadd( -54.0248, -95.1011, -53.576, 0.83 ) }
    dend_18 { pt3dadd( -54.095, -97.1298, -54.3989, 0.28 ) }
    dend_18 { pt3dadd( -54.1372, -99.1584, -55.1921, 1.11 ) }
    dend_18 { pt3dadd( -54.0716, -103.908, -56.8825, 0.28 ) }
    dend_18 { pt3dadd( -54.0281, -104.94, -57.3251, 0.55 ) }
    dend_18 { pt3dadd( -53.9234, -107.873, -58.7151, 0.28 ) }
    dend_18 { pt3dadd( -53.9106, -109.062, -59.3265, 0.55 ) }
    dend_18 { pt3dadd( -53.9465, -109.954, -59.8676, 0.28 ) }
    dend_18 { pt3dadd( -54.0602, -110.985, -60.5291, 0.83 ) }
    dend_18 { pt3dadd( -54.9178, -115.389, -63.3554, 0.28 ) }
    dend_18 { pt3dadd( -55.1663, -116.55, -64.1127, 0.83 ) }
    dend_18 { pt3dadd( -55.6136, -118.493, -65.3649, 0.28 ) }
    dend_18 { pt3dadd( -56.2065, -121.13, -66.9256, 0.83 ) }
    dend_18 { pt3dadd( -56.6871, -123.466, -68.1382, 0.28 ) }
    dend_18 { pt3dadd( -56.8129, -124.021, -68.3913, 0.55 ) }
    dend_18 { pt3dadd( -57.1787, -125.642, -68.8803, 0.28 ) }
    dend_18 { pt3dadd( -57.4418, -126.956, -69.2199, 0.83 ) }
    dend_18 { pt3dadd( -58.0929, -131.261, -69.9028, 0.28 ) }
    dend_18 { pt3dadd( -58.2271, -132.473, -69.996, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 27/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.27979, -15.8195, -1.09852, 2.77 ) }
    dend_6 { pt3dadd( -0.0643745, -21.737, -1.27001, 2.77 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 29/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.27979, -15.8195, -1.09852, 1.11 ) }
    dend_1 { pt3dadd( -3.74731, -19.1554, -3.06744, 1.11 ) }
    dend_1 { pt3dadd( -5.26725, -21.2102, -4.28027, 1.11 ) }
    dend_1 { pt3dadd( -6.14899, -22.4022, -4.98384, 1.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 33/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.70328, 41.377, 0.216622, 0.28 ) }
    axon_1 { pt3dadd( -0.897022, 56.3757, 0.216622, 0.28 ) }
    axon_1 { pt3dadd( -1.09076, 71.3745, 0.216622, 0.28 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 36/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -39.9024, 22.3242, 47.6153, 0.28 ) }
    dend_39 { pt3dadd( -41.7244, 21.4248, 48.4756, 0.28 ) }
    dend_39 { pt3dadd( -42.3368, 21.2727, 48.6694, 0.55 ) }
    dend_39 { pt3dadd( -44.9189, 20.7894, 49.3687, 0.28 ) }
    dend_39 { pt3dadd( -46.9423, 20.4681, 49.8389, 0.55 ) }
    dend_39 { pt3dadd( -49.1868, 20.1064, 50.3363, 0.55 ) }
    dend_39 { pt3dadd( -50.1118, 19.968, 50.5258, 0.83 ) }
    dend_39 { pt3dadd( -54.9266, 19.4507, 51.3956, 0.28 ) }
    dend_39 { pt3dadd( -55.5561, 19.4002, 51.4945, 0.83 ) }
    dend_39 { pt3dadd( -60.636, 19.1564, 52.0897, 0.28 ) }
    dend_39 { pt3dadd( -61.2934, 19.1306, 52.1644, 0.55 ) }
    dend_39 { pt3dadd( -62.6243, 19.0783, 52.3175, 0.28 ) }
    dend_39 { pt3dadd( -63.7057, 19.0058, 52.4566, 0.55 ) }
    dend_39 { pt3dadd( -71.4654, 16.569, 54.4632, 0.55 ) }
    dend_39 { pt3dadd( -78.9633, 14.3213, 57.4476, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 51/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -39.9024, 22.3242, 47.6153, 0.83 ) }
    dend_38 { pt3dadd( -41.3514, 23.6426, 46.9253, 0.83 ) }
    dend_38 { pt3dadd( -42.876, 25.0298, 46.1993, 0.28 ) }
    dend_38 { pt3dadd( -43.7688, 25.8422, 45.7741, 0.55 ) }
    dend_38 { pt3dadd( -50.7121, 31.4536, 40.4942, 0.55 ) }
    dend_38 { pt3dadd( -57.7269, 37.3522, 35.658, 0.55 ) }
    dend_38 { pt3dadd( -64.6037, 43.0012, 30.3334, 0.55 ) }
    dend_38 { pt3dadd( -69.7616, 49.0832, 23.7203, 0.55 ) }
    dend_38 { pt3dadd( -76.6354, 54.9646, 18.6641, 0.55 ) }
    dend_38 { pt3dadd( -83.8626, 60.8394, 14.1195, 0.55 ) }
    dend_38 { pt3dadd( -91.2744, 65.9514, 8.94303, 0.55 ) }
    dend_38 { pt3dadd( -98.4726, 72.1328, 4.79906, 0.55 ) }
    dend_38 { pt3dadd( -104.386, 79.6568, 0.968802, 0.55 ) }
    dend_38 { pt3dadd( -109.245, 88.4719, -0.999409, 0.55 ) }
    dend_38 { pt3dadd( -112.446, 98.1461, -1.79197, 0.55 ) }
    dend_38 { pt3dadd( -113.629, 108.249, -2.62909, 0.55 ) }
    dend_38 { pt3dadd( -113.594, 118.16, -5.11694, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_28 (entry count 68/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 7.52625, 0.170614, 19.7843, 0.83 ) }
    dend_36 { pt3dadd( 4.27464, 1.07768, 20.2114, 0.83 ) }
    dend_36 { pt3dadd( 0.989976, 2.23027, 20.9947, 0.83 ) }
    dend_36 { pt3dadd( -0.440698, 2.7323, 21.3359, 0.55 ) }
    dend_36 { pt3dadd( -1.63448, 3.1512, 21.6207, 0.55 ) }
    dend_36 { pt3dadd( -3.43763, 3.78393, 22.0507, 0.55 ) }
    dend_36 { pt3dadd( -5.36417, 4.45996, 22.5101, 0.55 ) }
    dend_36 { pt3dadd( -6.8818, 5.14662, 23.1489, 0.55 ) }
    dend_36 { pt3dadd( -14.3856, 6.71008, 23.8117, 0.55 ) }
    dend_36 { pt3dadd( -21.775, 8.82571, 23.8511, 0.55 ) }
    dend_36 { pt3dadd( -29.2353, 10.6308, 23.366, 0.55 ) }
    dend_36 { pt3dadd( -36.8877, 11.4119, 23.7328, 0.55 ) }
    dend_36 { pt3dadd( -44.391, 11.8518, 25.4174, 0.55 ) }
    dend_36 { pt3dadd( -51.9662, 13.0086, 26.1491, 0.55 ) }
    dend_36 { pt3dadd( -59.174, 14.7944, 28.1494, 0.55 ) }
    dend_36 { pt3dadd( -66.1052, 15.9591, 31.2882, 0.55 ) }
    dend_36 { pt3dadd( -72.4593, 17.9827, 35.1115, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 85/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 7.52625, 0.170614, 19.7843, 0.83 ) }
    dend_29 { pt3dadd( 7.53049, -1.57937, 19.7606, 0.83 ) }
    dend_29 { pt3dadd( 7.61036, -3.78226, 19.7233, 0.83 ) }
    dend_29 { pt3dadd( 7.70263, -5.52061, 19.6869, 0.83 ) }
    dend_29 { pt3dadd( 7.85943, -7.12292, 19.6899, 0.83 ) }
    dend_29 { pt3dadd( 8.2202, -9.17183, 19.7849, 0.55 ) }
    dend_29 { pt3dadd( 8.48371, -10.1554, 19.8871, 0.55 ) }
    dend_29 { pt3dadd( 9.05276, -11.3118, 20.1205, 0.83 ) }
    dend_29 { pt3dadd( 9.75527, -12.2193, 20.4196, 0.83 ) }
    dend_29 { pt3dadd( 10.7261, -13.1361, 20.848, 0.83 ) }
    dend_29 { pt3dadd( 12.2808, -14.2409, 21.5577, 0.83 ) }
    dend_29 { pt3dadd( 13.5108, -15.0423, 22.1957, 0.83 ) }
    dend_29 { pt3dadd( 14.4135, -15.6689, 22.7169, 0.55 ) }
    dend_29 { pt3dadd( 15.1239, -16.1954, 23.1627, 0.28 ) }
    dend_29 { pt3dadd( 15.6271, -16.6464, 23.4916, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_29 { pt3dadd( 16.6715, -17.8408, 24.1793, 0.55 ) }
    dend_29 { pt3dadd( 17.5352, -19.1984, 24.7627, 0.55 ) }
    dend_29 { pt3dadd( 18.1366, -20.3085, 25.1531, 0.55 ) }
    dend_29 { pt3dadd( 18.7531, -21.5793, 25.5272, 0.55 ) }
    dend_29 { pt3dadd( 19.6509, -23.5858, 26.0476, 0.55 ) }
    dend_29 { pt3dadd( 20.1339, -24.7124, 26.2914, 0.55 ) }
    dend_29 { pt3dadd( 21.0057, -26.6911, 26.6272, 0.55 ) }
    dend_29 { pt3dadd( 21.7334, -28.0903, 26.8108, 0.55 ) }
    dend_29 { pt3dadd( 22.7388, -29.9666, 27.0118, 0.83 ) }
    dend_29 { pt3dadd( 23.4147, -31.2192, 27.1216, 0.83 ) }
    dend_29 { pt3dadd( 24.149, -32.6012, 27.2473, 0.55 ) }
    dend_29 { pt3dadd( 24.5934, -33.403, 27.3223, 0.55 ) }
    dend_29 { pt3dadd( 25.4427, -34.6617, 27.4662, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 13/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 47.9745, 12.8437, -24.9272, 0.83 ) }
    dend_26 { pt3dadd( 49.4213, 10.8528, -25.5875, 0.83 ) }
    dend_26 { pt3dadd( 49.993, 10.1346, -25.7855, 0.55 ) }
    dend_26 { pt3dadd( 50.6912, 9.25196, -26.0051, 0.55 ) }
    dend_26 { pt3dadd( 52.0673, 7.40955, -26.451, 0.83 ) }
    dend_26 { pt3dadd( 52.9392, 6.14136, -26.6091, 0.55 ) }
    dend_26 { pt3dadd( 54.1913, 4.18065, -26.7291, 1.11 ) }
    dend_26 { pt3dadd( 55.1646, 2.38041, -26.6473, 0.55 ) }
    dend_26 { pt3dadd( 55.5654, 1.54846, -26.5512, 0.55 ) }
    dend_26 { pt3dadd( 56.1323, 0.269901, -26.3335, 0.83 ) }
    dend_26 { pt3dadd( 57.3305, -2.74164, -25.6953, 0.28 ) }
    dend_26 { pt3dadd( 57.4757, -3.23072, -25.5603, 0.55 ) }
    dend_26 { pt3dadd( 57.8271, -5.07332, -25.0538, 0.55 ) }
    dend_26 { pt3dadd( 58.0548, -6.4902, -24.7295, 0.28 ) }
    dend_26 { pt3dadd( 58.2105, -7.25366, -24.6164, 0.55 ) }
    dend_26 { pt3dadd( 58.5253, -8.61469, -24.5842, 0.55 ) }
    dend_26 { pt3dadd( 59.2688, -11.4639, -24.918, 0.55 ) }
    dend_26 { pt3dadd( 59.9069, -13.6657, -25.3068, 0.83 ) }
    dend_26 { pt3dadd( 60.2806, -14.8715, -25.581, 0.83 ) }
    dend_26 { pt3dadd( 60.9615, -16.8448, -26.1944, 0.28 ) }
    dend_26 { pt3dadd( 61.5321, -18.321, -26.7226, 0.55 ) }
    dend_26 { pt3dadd( 61.9524, -19.297, -27.1409, 0.55 ) }
    dend_26 { pt3dadd( 62.8791, -21.2414, -28.1014, 0.28 ) }
    dend_26 { pt3dadd( 63.9553, -23.3465, -29.0707, 1.38 ) }
    dend_26 { pt3dadd( 65.1885, -25.797, -30.1174, 0.28 ) }
    dend_26 { pt3dadd( 66.0148, -27.4324, -30.7254, 0.55 ) }
    dend_26 { pt3dadd( 66.6313, -28.6131, -31.1178, 0.28 ) }
    dend_26 { pt3dadd( 67.6509, -30.533, -31.7451, 0.55 ) }
    dend_26 { pt3dadd( 68.3289, -31.8138, -32.1632, 0.28 ) }
    dend_26 { pt3dadd( 68.8952, -32.9193, -32.4701, 0.55 ) }
    dend_26 { pt3dadd( 69.7286, -34.6751, -32.6592, 0.28 ) }
    dend_26 { pt3dadd( 70.0568, -35.431, -32.6219, 0.28 ) }
    dend_26 { pt3dadd( 70.1923, -35.7161, -32.5652, 0.55 ) }
    dend_26 { pt3dadd( 71.0221, -37.1685, -32.1209, 0.28 ) }
    dend_26 { pt3dadd( 72.2299, -38.9673, -31.4813, 1.11 ) }
    dend_26 { pt3dadd( 74.0873, -41.37, -30.5135, 0.28 ) }
    dend_26 { pt3dadd( 75.4992, -43.0683, -29.8418, 0.83 ) }
    dend_26 { pt3dadd( 76.7594, -44.5106, -29.1854, 0.55 ) }
    dend_26 { pt3dadd( 78.1179, -45.9955, -28.5068, 0.55 ) }
    dend_26 { pt3dadd( 79.4197, -47.3625, -27.9005, 0.55 ) }
    dend_26 { pt3dadd( 80.1889, -48.1641, -27.6374, 0.55 ) }
    dend_26 { pt3dadd( 81.6377, -49.7544, -27.3556, 0.28 ) }
    dend_26 { pt3dadd( 83.4864, -52.0433, -27.2759, 0.55 ) }
    dend_26 { pt3dadd( 84.812, -53.9078, -27.3347, 0.28 ) }
    dend_26 { pt3dadd( 85.495, -54.9192, -27.424, 0.83 ) }
    dend_26 { pt3dadd( 86.4711, -56.3257, -27.6263, 0.28 ) }
    dend_26 { pt3dadd( 87.2912, -57.5172, -27.8554, 0.55 ) }
    dend_26 { pt3dadd( 88.9736, -59.9721, -28.4547, 0.28 ) }
    dend_26 { pt3dadd( 89.6739, -61.0171, -28.7654, 0.55 ) }
    dend_26 { pt3dadd( 91.1705, -63.2564, -29.3886, 0.28 ) }
    dend_26 { pt3dadd( 91.9574, -64.4501, -29.676, 0.55 ) }
    dend_26 { pt3dadd( 93.2071, -66.4062, -30.0661, 0.28 ) }
    dend_26 { pt3dadd( 93.7419, -67.2748, -30.2184, 0.55 ) }
    dend_26 { pt3dadd( 94.5703, -68.6808, -30.4102, 0.28 ) }
    dend_26 { pt3dadd( 94.9144, -69.3066, -30.5029, 0.55 ) }
    dend_26 { pt3dadd( 95.7592, -70.9541, -30.7599, 0.28 ) }
    dend_26 { pt3dadd( 95.9028, -71.2401, -30.8155, 0.55 ) }
    dend_26 { pt3dadd( 96.7873, -72.8326, -31.182, 0.28 ) }
    dend_26 { pt3dadd( 96.9649, -73.1299, -31.2216, 0.83 ) }
    dend_26 { pt3dadd( 97.9593, -74.6865, -31.3358, 0.28 ) }
    dend_26 { pt3dadd( 99.0561, -76.305, -31.3933, 0.55 ) }
    dend_26 { pt3dadd( 100.472, -78.1521, -31.3795, 0.28 ) }
    dend_26 { pt3dadd( 102.105, -80.0058, -31.2178, 0.55 ) }
    dend_26 { pt3dadd( 104.762, -82.6108, -30.8311, 0.28 ) }
    dend_26 { pt3dadd( 105.529, -83.2906, -30.7044, 0.28 ) }
    dend_26 { pt3dadd( 105.888, -83.5784, -30.6259, 0.55 ) }
    dend_26 { pt3dadd( 107.437, -84.6917, -30.2275, 0.28 ) }
    dend_26 { pt3dadd( 109.333, -85.8813, -29.6759, 0.83 ) }
    dend_26 { pt3dadd( 110.55, -86.5394, -29.3704, 0.28 ) }
    dend_26 { pt3dadd( 111.612, -86.9873, -29.3021, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 83/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 47.9745, 12.8437, -24.9272, 0.55 ) }
    dend_25 { pt3dadd( 50.4807, 13.9746, -24.921, 0.55 ) }
    dend_25 { pt3dadd( 52.0105, 14.6482, -24.9695, 0.55 ) }
    dend_25 { pt3dadd( 53.5377, 15.3172, -25.1431, 0.55 ) }
    dend_25 { pt3dadd( 55.9235, 16.3335, -25.565, 0.28 ) }
    dend_25 { pt3dadd( 56.482, 16.5931, -25.7234, 1.11 ) }
    dend_25 { pt3dadd( 58.8429, 17.6941, -26.5065, 0.55 ) }
    dend_25 { pt3dadd( 60.1465, 18.2586, -27.1416, 0.55 ) }
    dend_25 { pt3dadd( 62.0861, 19.1035, -28.3109, 0.28 ) }
    dend_25 { pt3dadd( 62.8749, 19.4663, -28.8729, 0.83 ) }
    dend_25 { pt3dadd( 65.5371, 20.7317, -30.9681, 0.28 ) }
    dend_25 { pt3dadd( 66.4648, 21.1891, -31.7165, 0.55 ) }
    dend_25 { pt3dadd( 68.7422, 22.3547, -33.4928, 0.28 ) }
    dend_25 { pt3dadd( 70.0661, 23.0805, -34.378, 0.55 ) }
    dend_25 { pt3dadd( 72.0376, 24.2124, -35.4289, 0.28 ) }
    dend_25 { pt3dadd( 72.5393, 24.4963, -35.6349, 0.55 ) }
    dend_25 { pt3dadd( 75.3857, 26.0344, -36.4536, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_25 { pt3dadd( 76.7158, 26.7697, -36.7273, 0.83 ) }
    dend_25 { pt3dadd( 80.1421, 28.6663, -37.0866, 0.28 ) }
    dend_25 { pt3dadd( 81.2383, 29.2731, -37.1559, 0.83 ) }
    dend_25 { pt3dadd( 83.4773, 30.4847, -37.221, 0.28 ) }
    dend_25 { pt3dadd( 84.3795, 30.9716, -37.2351, 0.28 ) }
    dend_25 { pt3dadd( 87.585, 32.6442, -37.1938, 0.55 ) }
    dend_25 { pt3dadd( 90.1905, 33.9364, -37.2562, 0.28 ) }
    dend_25 { pt3dadd( 91.3809, 34.478, -37.2897, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 8/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -58.2271, -132.473, -69.996, 0.28 ) }
    dend_20 { pt3dadd( -59.0562, -134.582, -71.3793, 0.28 ) }
    dend_20 { pt3dadd( -59.2937, -135.419, -71.7978, 0.55 ) }
    dend_20 { pt3dadd( -59.6809, -137.372, -72.574, 0.28 ) }
    dend_20 { pt3dadd( -59.8079, -138.013, -72.8285, 0.83 ) }
    dend_20 { pt3dadd( -60.2862, -140.427, -73.7875, 0.28 ) }
    dend_20 { pt3dadd( -60.4156, -141.079, -74.0468, 0.55 ) }
    dend_20 { pt3dadd( -60.875, -143.74, -75.0356, 0.28 ) }
    dend_20 { pt3dadd( -60.9382, -144.468, -75.2356, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 17/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -58.2271, -132.473, -69.996, 0.28 ) }
    dend_19 { pt3dadd( -53.5193, -135.999, -69.4493, 0.28 ) }
    dend_19 { pt3dadd( -52.8338, -136.513, -69.3697, 0.83 ) }
    dend_19 { pt3dadd( -51.3288, -137.64, -69.1949, 0.55 ) }
    dend_19 { pt3dadd( -48.6754, -139.628, -68.8867, 0.28 ) }
    dend_19 { pt3dadd( -47.4484, -140.547, -68.7442, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 23/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.0643745, -21.737, -1.27001, 2.22 ) }
    dend_8 { pt3dadd( -0.94299, -25.0393, -4.27022, 2.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 25/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -0.0643745, -21.737, -1.27001, 0.83 ) }
    dend_7 { pt3dadd( 1.95199, -23.2342, -3.45355, 0.83 ) }
    dend_7 { pt3dadd( 2.91356, -23.8668, -4.44986, 0.55 ) }
    dend_7 { pt3dadd( 4.23731, -24.7316, -5.68963, 1.11 ) }
    dend_7 { pt3dadd( 6.81816, -26.363, -7.91092, 0.83 ) }
    dend_7 { pt3dadd( 8.66669, -27.4508, -9.32143, 0.55 ) }
    dend_7 { pt3dadd( 11.4207, -28.9302, -11.1568, 0.55 ) }
    dend_7 { pt3dadd( 13.2424, -29.8371, -12.3075, 0.55 ) }
    dend_7 { pt3dadd( 14.8302, -30.5293, -13.1442, 0.28 ) }
    dend_7 { pt3dadd( 15.9426, -30.8933, -13.6492, 0.83 ) }
    dend_7 { pt3dadd( 17.9098, -31.4076, -14.3381, 1.38 ) }
    dend_7 { pt3dadd( 19.7023, -31.8383, -14.8735, 0.28 ) }
    dend_7 { pt3dadd( 21.1506, -32.2146, -15.2997, 0.55 ) }
    dend_7 { pt3dadd( 23.6194, -32.8765, -16.1919, 0.28 ) }
    dend_7 { pt3dadd( 25.6093, -33.4599, -16.9779, 1.11 ) }
    dend_7 { pt3dadd( 27.2376, -34.0583, -17.6528, 0.55 ) }
    dend_7 { pt3dadd( 28.4747, -34.6662, -18.2656, 0.55 ) }
    dend_7 { pt3dadd( 29.7479, -35.4527, -18.9602, 0.55 ) }
    dend_7 { pt3dadd( 30.9813, -36.3541, -19.6085, 0.55 ) }
    dend_7 { pt3dadd( 32.437, -37.7343, -20.2577, 0.28 ) }
    dend_7 { pt3dadd( 33.0559, -38.4503, -20.5049, 0.55 ) }
    dend_7 { pt3dadd( 34.3941, -40.2408, -21.1007, 0.55 ) }
    dend_7 { pt3dadd( 34.8437, -40.8967, -21.35, 0.55 ) }
    dend_7 { pt3dadd( 35.6183, -41.958, -21.8107, 0.28 ) }
    dend_7 { pt3dadd( 36.485, -42.8909, -22.4198, 0.28 ) }
    dend_7 { pt3dadd( 37.3473, -43.5923, -22.994, 0.55 ) }
    dend_7 { pt3dadd( 38.5719, -44.3193, -23.7358, 0.55 ) }
    dend_7 { pt3dadd( 40.4546, -45.1286, -24.8624, 0.83 ) }
    dend_7 { pt3dadd( 41.7378, -45.5555, -25.6617, 0.83 ) }
    dend_7 { pt3dadd( 44.3897, -46.1805, -27.3617, 0.55 ) }
    dend_7 { pt3dadd( 45.7598, -46.3512, -28.3085, 0.28 ) }
    dend_7 { pt3dadd( 46.4137, -46.4191, -28.7618, 0.55 ) }
    dend_7 { pt3dadd( 48.3361, -46.5016, -30.0615, 0.28 ) }
    dend_7 { pt3dadd( 49.299, -46.5263, -30.8072, 0.28 ) }
    dend_7 { pt3dadd( 50.2292, -46.5834, -31.5831, 1.11 ) }
    dend_7 { pt3dadd( 52.8885, -46.7939, -34.0386, 0.55 ) }
    dend_7 { pt3dadd( 54.4507, -46.9198, -35.5709, 0.55 ) }
    dend_7 { pt3dadd( 56.1987, -47.0392, -37.4378, 0.55 ) }
    dend_7 { pt3dadd( 58.7739, -47.2034, -40.3227, 0.55 ) }
    dend_7 { pt3dadd( 59.556, -47.2748, -41.2271, 0.83 ) }
    dend_7 { pt3dadd( 61.7502, -47.5671, -43.7426, 0.28 ) }
    dend_7 { pt3dadd( 62.6046, -47.7293, -44.7023, 1.11 ) }
    dend_7 { pt3dadd( 65.0526, -48.3178, -47.32, 0.28 ) }
    dend_7 { pt3dadd( 65.5769, -48.505, -47.8134, 0.55 ) }
    dend_7 { pt3dadd( 66.6503, -48.8974, -48.573, 0.28 ) }
    dend_7 { pt3dadd( 67.3453, -49.1694, -48.9931, 0.55 ) }
    dend_7 { pt3dadd( 69.1139, -49.8505, -49.9289, 0.28 ) }
    dend_7 { pt3dadd( 70.9102, -50.5194, -50.8278, 0.83 ) }
    dend_7 { pt3dadd( 72.5159, -51.0123, -51.5713, 0.28 ) }
    dend_7 { pt3dadd( 73.7637, -51.3366, -52.1798, 0.28 ) }
    dend_7 { pt3dadd( 75.5029, -51.718, -53.0349, 1.11 ) }
    dend_7 { pt3dadd( 78.676, -52.3633, -54.5401, 0.28 ) }
    dend_7 { pt3dadd( 80.0852, -52.6679, -55.2299, 1.11 ) }
    dend_7 { pt3dadd( 82.4379, -53.2416, -56.4301, 0.28 ) }
    dend_7 { pt3dadd( 83.108, -53.4306, -56.7564, 0.55 ) }
    dend_7 { pt3dadd( 84.4063, -53.8707, -57.3327, 0.28 ) }
    dend_7 { pt3dadd( 85.4564, -54.2704, -57.7141, 1.11 ) }
    dend_7 { pt3dadd( 88.3707, -55.5639, -58.5079, 0.28 ) }
    dend_7 { pt3dadd( 89.4417, -56.0942, -58.7624, 1.11 ) }
    dend_7 { pt3dadd( 91.3832, -57.1788, -59.1353, 0.28 ) }
    dend_7 { pt3dadd( 93.4524, -58.3989, -59.5521, 1.11 ) }
    dend_7 { pt3dadd( 96.2487, -60.0507, -60.0868, 0.28 ) }
    dend_7 { pt3dadd( 97.3698, -60.6877, -60.2904, 0.55 ) }
    dend_7 { pt3dadd( 98.8585, -61.494, -60.5101, 0.28 ) }
    dend_7 { pt3dadd( 100.498, -62.3127, -60.7609, 0.83 ) }
    dend_7 { pt3dadd( 103.025, -63.4547, -61.2361, 0.28 ) }
    dend_7 { pt3dadd( 104.138, -63.8301, -61.5566, 0.55 ) }
    dend_7 { pt3dadd( 105.466, -64.1532, -62.0038, 0.28 ) }
    dend_7 { pt3dadd( 106.153, -64.2421, -62.2556, 0.55 ) }
    dend_7 { pt3dadd( 107.87, -64.3265, -62.8777, 0.28 ) }
    dend_7 { pt3dadd( 109.917, -64.3092, -63.6815, 0.55 ) }
    dend_7 { pt3dadd( 112.409, -64.2566, -64.6023, 0.28 ) }
    dend_7 { pt3dadd( 113.792, -64.2584, -65.176, 0.83 ) }
    dend_7 { pt3dadd( 115.524, -64.2639, -65.8927, 0.28 ) }
    dend_7 { pt3dadd( 116.456, -64.2819, -66.2805, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_7 { pt3dadd( 119.742, -64.4041, -67.6113, 0.28 ) }
    dend_7 { pt3dadd( 120.772, -64.4595, -67.9791, 1.11 ) }
    dend_7 { pt3dadd( 123.96, -64.6883, -69.1185, 0.28 ) }
    dend_7 { pt3dadd( 125.777, -64.8592, -69.8578, 0.28 ) }
    dend_7 { pt3dadd( 126.563, -64.9724, -70.2019, 0.55 ) }
    dend_7 { pt3dadd( 127.873, -65.2012, -70.774, 0.28 ) }
    dend_7 { pt3dadd( 128.35, -65.3228, -70.9705, 0.55 ) }
    dend_7 { pt3dadd( 130.103, -65.8838, -71.7345, 0.28 ) }
    dend_7 { pt3dadd( 131.642, -66.691, -72.5112, 0.83 ) }
    dend_7 { pt3dadd( 133.189, -67.7652, -73.4283, 0.28 ) }
    dend_7 { pt3dadd( 133.773, -68.255, -73.7974, 0.83 ) }
    dend_7 { pt3dadd( 135.032, -69.508, -74.6315, 0.28 ) }
    dend_7 { pt3dadd( 135.293, -69.83, -74.8394, 1.11 ) }
    dend_7 { pt3dadd( 137.499, -73.0318, -76.801, 0.28 ) }
    dend_7 { pt3dadd( 137.938, -73.7969, -77.2368, 0.83 ) }
    dend_7 { pt3dadd( 138.419, -74.7524, -77.7769, 0.28 ) }
    dend_7 { pt3dadd( 138.507, -74.9409, -77.8901, 0.55 ) }
    dend_7 { pt3dadd( 139.932, -78.3724, -80.0017, 0.28 ) }
    dend_7 { pt3dadd( 140.213, -79.0391, -80.4221, 0.83 ) }
    dend_7 { pt3dadd( 140.744, -80.3564, -81.2695, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 20/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.14899, -22.4022, -4.98384, 0.83 ) }
    dend_5 { pt3dadd( -7.29612, -25.3913, -3.40458, 0.83 ) }
    dend_5 { pt3dadd( -8.46662, -28.8379, -1.7932, 0.83 ) }
    dend_5 { pt3dadd( -9.367, -31.656, -0.645957, 0.83 ) }
    dend_5 { pt3dadd( -10.5412, -35.2084, 0.747761, 0.83 ) }
    dend_5 { pt3dadd( -11.6173, -38.2964, 1.8952, 0.83 ) }
    dend_5 { pt3dadd( -13.3308, -42.9077, 3.52721, 0.83 ) }
    dend_5 { pt3dadd( -14.4361, -45.6886, 4.42532, 0.83 ) }
    dend_5 { pt3dadd( -15.8764, -48.7166, 5.28285, 1.11 ) }
    dend_5 { pt3dadd( -17.6961, -51.8315, 5.88868, 0.55 ) }
    dend_5 { pt3dadd( -19.3979, -54.2523, 6.19004, 0.55 ) }
    dend_5 { pt3dadd( -20.8648, -56.0567, 6.35019, 0.83 ) }
    dend_5 { pt3dadd( -22.9352, -58.1614, 6.44102, 0.83 ) }
    dend_5 { pt3dadd( -26.1287, -61.0546, 6.23244, 0.83 ) }
    dend_5 { pt3dadd( -29.5117, -63.6245, 5.78696, 0.83 ) }
    dend_5 { pt3dadd( -31.8774, -64.9979, 5.22321, 0.83 ) }
    dend_5 { pt3dadd( -33.395, -65.7232, 4.73187, 0.83 ) }
    dend_5 { pt3dadd( -35.3051, -66.5767, 3.98451, 0.83 ) }
    dend_5 { pt3dadd( -38.2661, -67.9598, 2.58778, 0.83 ) }
    dend_5 { pt3dadd( -40.5057, -69.0582, 1.50074, 0.83 ) }
    dend_5 { pt3dadd( -44.9356, -71.209, -0.375117, 0.83 ) }
    dend_5 { pt3dadd( -47.0227, -72.3032, -1.14767, 0.83 ) }
    dend_5 { pt3dadd( -49.0138, -73.5782, -1.90039, 1.11 ) }
    dend_5 { pt3dadd( -50.9564, -75.1129, -2.73689, 0.55 ) }
    dend_5 { pt3dadd( -53.4081, -77.4503, -3.9002, 0.55 ) }
    dend_5 { pt3dadd( -55.6824, -79.9511, -5.05503, 0.55 ) }
    dend_5 { pt3dadd( -58.0922, -82.9878, -6.39026, 1.11 ) }
    dend_5 { pt3dadd( -60.7139, -86.2768, -7.93384, 0.55 ) }
    dend_5 { pt3dadd( -62.4655, -88.5338, -9.08064, 0.83 ) }
    dend_5 { pt3dadd( -63.4473, -89.7767, -9.81577, 0.55 ) }
    dend_5 { pt3dadd( -64.1836, -90.7597, -10.463, 0.55 ) }
    dend_5 { pt3dadd( -66.0072, -93.2226, -12.1315, 0.83 ) }
    dend_5 { pt3dadd( -68.0623, -95.7249, -13.8599, 0.83 ) }
    dend_5 { pt3dadd( -69.8073, -97.7324, -14.9443, 0.83 ) }
    dend_5 { pt3dadd( -72.5007, -100.796, -16.264, 0.28 ) }
    dend_5 { pt3dadd( -73.5881, -102.017, -16.7124, 0.28 ) }
    dend_5 { pt3dadd( -74.9663, -103.598, -17.2196, 0.83 ) }
    dend_5 { pt3dadd( -76.6105, -105.531, -17.7044, 0.83 ) }
    dend_5 { pt3dadd( -78.3127, -107.707, -18.1528, 0.55 ) }
    dend_5 { pt3dadd( -80.276, -110.622, -18.6119, 1.11 ) }
    dend_5 { pt3dadd( -81.5688, -113.061, -18.995, 0.55 ) }
    dend_5 { pt3dadd( -82.1148, -114.367, -19.2745, 0.28 ) }
    dend_5 { pt3dadd( -82.5747, -116.173, -19.7832, 0.83 ) }
    dend_5 { pt3dadd( -82.6742, -117.012, -20.0581, 0.28 ) }
    dend_5 { pt3dadd( -82.7279, -119.119, -20.802, 1.11 ) }
    dend_5 { pt3dadd( -82.6679, -122.359, -21.9851, 0.28 ) }
    dend_5 { pt3dadd( -82.5904, -125.203, -23.0312, 0.55 ) }
    dend_5 { pt3dadd( -82.5357, -128.573, -24.261, 0.28 ) }
    dend_5 { pt3dadd( -82.5431, -131.142, -25.2142, 1.11 ) }
    dend_5 { pt3dadd( -82.5974, -132.959, -25.8639, 0.28 ) }
    dend_5 { pt3dadd( -82.7317, -134.645, -26.334, 0.83 ) }
    dend_5 { pt3dadd( -83.0358, -136.812, -26.8205, 0.28 ) }
    dend_5 { pt3dadd( -83.156, -137.392, -26.9452, 0.55 ) }
    dend_5 { pt3dadd( -83.6226, -138.896, -27.2134, 0.28 ) }
    dend_5 { pt3dadd( -84.1803, -140.337, -27.5829, 1.11 ) }
    dend_5 { pt3dadd( -85.6977, -143.723, -28.5894, 0.28 ) }
    dend_5 { pt3dadd( -86.9566, -146.519, -29.3435, 0.55 ) }
    dend_5 { pt3dadd( -88.2841, -149.237, -30.0598, 0.28 ) }
    dend_5 { pt3dadd( -89.631, -151.997, -30.603, 0.55 ) }
    dend_5 { pt3dadd( -91.4535, -155.876, -31.1591, 0.28 ) }
    dend_5 { pt3dadd( -92.638, -158.579, -31.4099, 1.38 ) }
    dend_5 { pt3dadd( -94.152, -162.12, -31.289, 0.28 ) }
    dend_5 { pt3dadd( -95.029, -164.317, -30.8831, 1.11 ) }
    dend_5 { pt3dadd( -96.3256, -167.82, -29.667, 0.28 ) }
    dend_5 { pt3dadd( -96.8211, -169.232, -28.956, 1.11 ) }
    dend_5 { pt3dadd( -97.452, -171.154, -27.7528, 0.28 ) }
    dend_5 { pt3dadd( -98.6483, -175.29, -24.9475, 0.55 ) }
    dend_5 { pt3dadd( -98.7995, -175.968, -24.4925, 0.55 ) }
    dend_5 { pt3dadd( -99.1308, -178.524, -22.8866, 0.83 ) }
    dend_5 { pt3dadd( -99.2872, -180.246, -21.9442, 0.28 ) }
    dend_5 { pt3dadd( -99.3555, -182.235, -21.0344, 0.83 ) }
    dend_5 { pt3dadd( -99.1888, -184.125, -20.4346, 0.55 ) }
    dend_5 { pt3dadd( -98.5887, -186.963, -19.9601, 0.55 ) }
    dend_5 { pt3dadd( -98.2616, -188.298, -19.8068, 0.28 ) }
    dend_5 { pt3dadd( -98.0582, -189.046, -19.755, 0.55 ) }
    dend_5 { pt3dadd( -97.3363, -191.383, -19.5585, 0.55 ) }
    dend_5 { pt3dadd( -96.837, -193.032, -19.4298, 0.55 ) }
    dend_5 { pt3dadd( -96.2621, -195.084, -19.3079, 0.28 ) }
    dend_5 { pt3dadd( -95.9035, -196.395, -19.1969, 0.55 ) }
    dend_5 { pt3dadd( -95.3841, -198.236, -19.0202, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( -94.9887, -199.636, -18.8145, 0.55 ) }
    dend_5 { pt3dadd( -94.7231, -200.729, -18.6005, 0.28 ) }
    dend_5 { pt3dadd( -94.5429, -201.82, -18.4429, 0.55 ) }
    dend_5 { pt3dadd( -94.3937, -202.994, -18.3507, 0.28 ) }
    dend_5 { pt3dadd( -94.2954, -203.967, -18.3257, 0.83 ) }
    dend_5 { pt3dadd( -94.1447, -206.391, -18.3786, 0.28 ) }
    dend_5 { pt3dadd( -94.1079, -207.514, -18.3979, 1.11 ) }
    dend_5 { pt3dadd( -94.0749, -210.275, -18.4397, 0.28 ) }
    dend_5 { pt3dadd( -94.0771, -211.657, -18.5242, 0.55 ) }
    dend_5 { pt3dadd( -94.0877, -213.315, -18.7534, 0.28 ) }
    dend_5 { pt3dadd( -94.072, -214.144, -18.9261, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 11/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.14899, -22.4022, -4.98384, 0.55 ) }
    dend_2 { pt3dadd( -7.88512, -21.6753, -3.83554, 0.55 ) }
    dend_2 { pt3dadd( -8.97182, -21.3544, -2.83411, 0.55 ) }
    dend_2 { pt3dadd( -11.4868, -20.9991, -0.341457, 0.83 ) }
    dend_2 { pt3dadd( -13.706, -21.0918, 1.98616, 0.55 ) }
    dend_2 { pt3dadd( -15.2536, -21.3633, 3.70227, 0.55 ) }
    dend_2 { pt3dadd( -19.7522, -22.7467, 8.89449, 0.83 ) }
    dend_2 { pt3dadd( -22.8647, -24.3852, 12.8639, 0.55 ) }
    dend_2 { pt3dadd( -24.6704, -25.8845, 15.3025, 0.83 ) }
    dend_2 { pt3dadd( -26.6425, -28.354, 17.9625, 0.55 ) }
    dend_2 { pt3dadd( -27.3028, -29.5697, 18.7122, 0.83 ) }
    dend_2 { pt3dadd( -28.1449, -31.5022, 19.6049, 0.83 ) }
    dend_2 { pt3dadd( -28.5899, -32.8142, 19.9257, 0.55 ) }
    dend_2 { pt3dadd( -29.6925, -36.2524, 20.284, 0.55 ) }
    dend_2 { pt3dadd( -31.0711, -40.5125, 20.4627, 0.55 ) }
    dend_2 { pt3dadd( -33.0573, -46.2428, 20.1033, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 25.4427, -34.6617, 27.4662, 0.55 ) }
    dend_33 { pt3dadd( 27.8107, -34.631, 28.4221, 0.55 ) }
    dend_33 { pt3dadd( 29.1906, -34.64, 28.8682, 0.55 ) }
    dend_33 { pt3dadd( 30.8155, -34.7559, 29.3028, 0.55 ) }
    dend_33 { pt3dadd( 32.8348, -35.0021, 29.7852, 0.55 ) }
    dend_33 { pt3dadd( 35.2537, -35.3265, 30.3141, 0.55 ) }
    dend_33 { pt3dadd( 36.7288, -35.5285, 30.6001, 0.55 ) }
    dend_33 { pt3dadd( 39.2249, -35.9618, 30.9091, 0.55 ) }
    dend_33 { pt3dadd( 41.3846, -36.4239, 31.0057, 0.55 ) }
    dend_33 { pt3dadd( 42.2591, -36.656, 30.99, 0.55 ) }
    dend_33 { pt3dadd( 43.8456, -37.1143, 30.8627, 0.28 ) }
    dend_33 { pt3dadd( 44.9236, -37.4291, 30.7559, 0.83 ) }
    dend_33 { pt3dadd( 46.7009, -38.044, 30.5594, 0.55 ) }
    dend_33 { pt3dadd( 47.8542, -38.4694, 30.405, 0.55 ) }
    dend_33 { pt3dadd( 49.8382, -39.176, 30.1155, 0.55 ) }
    dend_33 { pt3dadd( 50.6668, -39.4531, 29.9972, 0.83 ) }
    dend_33 { pt3dadd( 52.1013, -39.9009, 29.8026, 0.55 ) }
    dend_33 { pt3dadd( 53.3042, -40.2496, 29.6829, 0.55 ) }
    dend_33 { pt3dadd( 54.4875, -40.536, 29.6098, 0.55 ) }
    dend_33 { pt3dadd( 55.3576, -40.706, 29.5345, 0.55 ) }
    dend_33 { pt3dadd( 56.4898, -40.9046, 29.4174, 0.83 ) }
    dend_33 { pt3dadd( 57.6897, -41.0431, 29.3113, 0.28 ) }
    dend_33 { pt3dadd( 59.4918, -41.2214, 29.1792, 0.28 ) }
    dend_33 { pt3dadd( 60.3396, -41.3259, 29.1229, 0.55 ) }
    dend_33 { pt3dadd( 62.1263, -41.6709, 28.9947, 0.28 ) }
    dend_33 { pt3dadd( 63.7844, -42.152, 28.9168, 0.55 ) }
    dend_33 { pt3dadd( 66.1123, -43.0748, 28.7854, 0.28 ) }
    dend_33 { pt3dadd( 66.7067, -43.3631, 28.7517, 0.28 ) }
    dend_33 { pt3dadd( 67.7729, -43.8865, 28.6932, 0.55 ) }
    dend_33 { pt3dadd( 68.8272, -44.4736, 28.6455, 0.28 ) }
    dend_33 { pt3dadd( 70.9797, -45.9202, 28.5964, 0.83 ) }
    dend_33 { pt3dadd( 72.34, -47.0719, 28.542, 0.28 ) }
    dend_33 { pt3dadd( 73.2846, -48.0357, 28.4777, 0.55 ) }
    dend_33 { pt3dadd( 80.5545, -50.3926, 29.4422, 0.55 ) }
    dend_33 { pt3dadd( 87.3271, -53.9423, 30.2167, 0.55 ) }
    dend_33 { pt3dadd( 94.5612, -56.5811, 30.203, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 63/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 25.4427, -34.6617, 27.4662, 0.55 ) }
    dend_30 { pt3dadd( 26.2503, -37.6635, 27.9014, 0.55 ) }
    dend_30 { pt3dadd( 26.7117, -39.2749, 28.0828, 0.55 ) }
    dend_30 { pt3dadd( 27.3119, -41.1507, 28.245, 0.83 ) }
    dend_30 { pt3dadd( 28.0767, -43.1019, 28.3755, 0.55 ) }
    dend_30 { pt3dadd( 29.169, -45.5204, 28.508, 0.83 ) }
    dend_30 { pt3dadd( 30.1207, -47.5332, 28.5983, 0.28 ) }
    dend_30 { pt3dadd( 30.4003, -48.0818, 28.5911, 0.55 ) }
    dend_30 { pt3dadd( 30.9888, -49.3124, 28.5819, 0.28 ) }
    dend_30 { pt3dadd( 31.8904, -51.5575, 28.5807, 0.55 ) }
    dend_30 { pt3dadd( 32.3019, -52.8441, 28.5861, 0.83 ) }
    dend_30 { pt3dadd( 32.984, -55.5658, 28.6213, 0.83 ) }
    dend_30 { pt3dadd( 33.361, -57.8374, 28.6929, 0.28 ) }
    dend_30 { pt3dadd( 33.6566, -60.8283, 28.8065, 0.55 ) }
    dend_30 { pt3dadd( 33.7006, -63.298, 28.9681, 0.55 ) }
    dend_30 { pt3dadd( 33.5955, -64.4149, 29.0607, 0.28 ) }
    dend_30 { pt3dadd( 33.4424, -65.204, 29.11, 0.55 ) }
    dend_30 { pt3dadd( 33.0159, -66.6491, 29.1047, 0.28 ) }
    dend_30 { pt3dadd( 31.8472, -69.8317, 28.866, 0.55 ) }
    dend_30 { pt3dadd( 30.9534, -72.0435, 28.5535, 0.28 ) }
    dend_30 { pt3dadd( 29.9192, -74.327, 28.0989, 0.55 ) }
    dend_30 { pt3dadd( 28.6581, -77.1258, 27.3641, 0.83 ) }
    dend_30 { pt3dadd( 27.5567, -79.4203, 26.5924, 0.55 ) }
    dend_30 { pt3dadd( 27.353, -79.8494, 26.3878, 0.55 ) }
    dend_30 { pt3dadd( 27.0791, -80.5306, 25.9414, 0.28 ) }
    dend_30 { pt3dadd( 26.8963, -81.3015, 25.3704, 0.55 ) }
    dend_30 { pt3dadd( 26.7555, -82.8621, 24.2134, 0.28 ) }
    dend_30 { pt3dadd( 26.7197, -84.8262, 22.9369, 0.55 ) }
    dend_30 { pt3dadd( 26.6989, -87.2935, 21.5974, 0.28 ) }
    dend_30 { pt3dadd( 26.6338, -90.4725, 20.0355, 0.28 ) }
    dend_30 { pt3dadd( 26.5868, -91.3436, 19.638, 0.55 ) }
    dend_30 { pt3dadd( 26.4557, -92.934, 18.9985, 0.28 ) }
    dend_30 { pt3dadd( 26.2809, -94.8801, 18.3604, 0.83 ) }
    dend_30 { pt3dadd( 26.1943, -96.1661, 18.0412, 0.28 ) }
    dend_30 { pt3dadd( 26.1124, -96.745, 17.9632, 0.55 ) }
    dend_30 { pt3dadd( 25.7455, -98.6421, 17.8232, 0.28 ) }
    dend_30 { pt3dadd( 25.5298, -99.6833, 17.726, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( 25.1077, -101.74, 17.5029, 0.28 ) }
    dend_30 { pt3dadd( 24.9322, -102.561, 17.3743, 0.55 ) }
    dend_30 { pt3dadd( 24.6798, -103.741, 17.2017, 0.28 ) }
    dend_30 { pt3dadd( 24.4363, -104.82, 17.1409, 0.55 ) }
    dend_30 { pt3dadd( 24.2365, -105.7, 17.1766, 0.28 ) }
    dend_30 { pt3dadd( 23.9159, -107.089, 17.3265, 0.55 ) }
    dend_30 { pt3dadd( 23.6733, -108.131, 17.5172, 0.28 ) }
    dend_30 { pt3dadd( 23.453, -109.076, 17.7064, 0.83 ) }
    dend_30 { pt3dadd( 22.9531, -111.347, 18.2113, 0.28 ) }
    dend_30 { pt3dadd( 22.4438, -113.662, 18.7811, 0.83 ) }
    dend_30 { pt3dadd( 22.0271, -115.744, 19.3498, 0.28 ) }
    dend_30 { pt3dadd( 21.8054, -116.994, 19.7118, 0.55 ) }
    dend_30 { pt3dadd( 21.0179, -126.397, 17.4407, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 13/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.94299, -25.0393, -4.27022, 1.11 ) }
    dend_10 { pt3dadd( -1.24574, -26.9162, -4.10852, 1.11 ) }
    dend_10 { pt3dadd( -1.4937, -28.4533, -3.97609, 1.11 ) }
    dend_10 { pt3dadd( -2.0002, -31.5932, -3.70556, 0.83 ) }
    dend_10 { pt3dadd( -2.89372, -37.1323, -3.22834, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -0.94299, -25.0393, -4.27022, 0.55 ) }
    dend_9 { pt3dadd( -6.05588, -28.7847, -8.51906, 0.55 ) }
    dend_9 { pt3dadd( -7.70513, -30.1215, -10.258, 1.11 ) }
    dend_9 { pt3dadd( -9.09449, -31.4454, -12.088, 0.55 ) }
    dend_9 { pt3dadd( -11.7735, -34.1546, -15.951, 1.38 ) }
    dend_9 { pt3dadd( -13.7705, -36.1198, -18.7164, 0.55 ) }
    dend_9 { pt3dadd( -15.1673, -37.4288, -20.5305, 0.55 ) }
    dend_9 { pt3dadd( -17.5845, -39.7419, -23.979, 0.55 ) }
    dend_9 { pt3dadd( -19.6005, -41.7312, -26.732, 0.55 ) }
    dend_9 { pt3dadd( -21.2638, -43.3965, -28.7047, 0.55 ) }
    dend_9 { pt3dadd( -23.8721, -45.9883, -31.1625, 0.83 ) }
    dend_9 { pt3dadd( -26.7907, -48.885, -33.3563, 0.55 ) }
    dend_9 { pt3dadd( -28.2862, -50.2634, -34.1947, 0.55 ) }
    dend_9 { pt3dadd( -29.8743, -51.6167, -34.8085, 0.83 ) }
    dend_9 { pt3dadd( -32.2701, -53.6393, -35.397, 0.28 ) }
    dend_9 { pt3dadd( -34.1477, -55.347, -35.6829, 0.55 ) }
    dend_9 { pt3dadd( -35.0847, -56.2477, -35.7758, 0.55 ) }
    dend_9 { pt3dadd( -37.5935, -58.6662, -35.8609, 0.55 ) }
    dend_9 { pt3dadd( -38.9063, -59.8963, -35.9067, 0.55 ) }
    dend_9 { pt3dadd( -41.1586, -61.91, -36.1508, 0.28 ) }
    dend_9 { pt3dadd( -42.3036, -62.9236, -36.4145, 0.55 ) }
    dend_9 { pt3dadd( -43.7062, -64.1772, -36.8079, 0.28 ) }
    dend_9 { pt3dadd( -45.0078, -65.3437, -37.1873, 0.83 ) }
    dend_9 { pt3dadd( -46.5143, -66.7009, -37.6622, 0.28 ) }
    dend_9 { pt3dadd( -48.2249, -68.1754, -38.4415, 0.83 ) }
    dend_9 { pt3dadd( -50.0964, -69.7831, -39.5445, 0.55 ) }
    dend_9 { pt3dadd( -50.8066, -70.476, -40.1057, 0.28 ) }
    dend_9 { pt3dadd( -51.8476, -71.6103, -41.056, 0.55 ) }
    dend_9 { pt3dadd( -52.6714, -72.7067, -42.0947, 0.28 ) }
    dend_9 { pt3dadd( -54.157, -75.1256, -44.6754, 0.55 ) }
    dend_9 { pt3dadd( -54.8853, -76.5361, -46.2553, 1.38 ) }
    dend_9 { pt3dadd( -56.3831, -79.8447, -50.0785, 0.28 ) }
    dend_9 { pt3dadd( -56.7265, -80.6531, -51.1229, 0.83 ) }
    dend_9 { pt3dadd( -57.9533, -83.6469, -55.2146, 0.55 ) }
    dend_9 { pt3dadd( -58.8473, -85.7677, -58.1634, 1.11 ) }
    dend_9 { pt3dadd( -59.4981, -87.15, -60.1792, 0.28 ) }
    dend_9 { pt3dadd( -60.142, -88.2936, -61.9139, 0.83 ) }
    dend_9 { pt3dadd( -62.028, -90.872, -65.9275, 0.28 ) }
    dend_9 { pt3dadd( -62.6907, -91.6125, -67.1095, 0.55 ) }
    dend_9 { pt3dadd( -63.6616, -92.3897, -68.4289, 0.28 ) }
    dend_9 { pt3dadd( -65.321, -93.4621, -70.2991, 0.55 ) }
    dend_9 { pt3dadd( -66.5046, -94.0741, -71.4161, 0.28 ) }
    dend_9 { pt3dadd( -67.4817, -94.5035, -72.2952, 0.28 ) }
    dend_9 { pt3dadd( -68.9346, -95.0764, -73.491, 0.55 ) }
    dend_9 { pt3dadd( -72.3283, -96.3436, -76.4672, 0.28 ) }
    dend_9 { pt3dadd( -73.494, -96.758, -77.4855, 0.83 ) }
    dend_9 { pt3dadd( -75.1907, -97.4056, -78.8547, 1.11 ) }
    dend_9 { pt3dadd( -79.0816, -98.9512, -81.7111, 0.28 ) }
    dend_9 { pt3dadd( -79.9081, -99.3196, -82.2638, 0.55 ) }
    dend_9 { pt3dadd( -82.8653, -100.814, -83.9985, 0.28 ) }
    dend_9 { pt3dadd( -84.1952, -101.586, -84.6484, 1.11 ) }
    dend_9 { pt3dadd( -86.4521, -103.008, -85.6652, 0.28 ) }
    dend_9 { pt3dadd( -88.5464, -104.458, -86.4208, 0.83 ) }
    dend_9 { pt3dadd( -90.3103, -105.741, -86.8199, 0.28 ) }
    dend_9 { pt3dadd( -90.8344, -106.15, -86.9471, 0.55 ) }
    dend_9 { pt3dadd( -92.2174, -107.279, -87.3596, 0.28 ) }
    dend_9 { pt3dadd( -92.8618, -107.798, -87.659, 0.55 ) }
    dend_9 { pt3dadd( -95.4059, -109.851, -89.1285, 0.28 ) }
    dend_9 { pt3dadd( -96.0063, -110.352, -89.6704, 0.55 ) }
    dend_9 { pt3dadd( -98.2694, -112.215, -92.0558, 0.28 ) }
    dend_9 { pt3dadd( -99.8699, -113.533, -93.7186, 0.83 ) }
    dend_9 { pt3dadd( -101.935, -115.494, -96.3555, 0.28 ) }
    dend_9 { pt3dadd( -102.613, -116.215, -97.3301, 0.83 ) }
    dend_9 { pt3dadd( -105.845, -120.347, -103.096, 0.28 ) }
    dend_9 { pt3dadd( -106.456, -121.254, -104.316, 0.55 ) }
    dend_9 { pt3dadd( -107.854, -123.852, -107.374, 0.83 ) }
    dend_9 { pt3dadd( -110.49, -129.681, -113.231, 0.28 ) }
    dend_9 { pt3dadd( -110.889, -130.744, -114.196, 0.83 ) }
    dend_9 { pt3dadd( -112.425, -135.37, -117.908, 0.28 ) }
    dend_9 { pt3dadd( -112.644, -136.226, -118.443, 0.83 ) }
    dend_9 { pt3dadd( -113.319, -139.377, -120.32, 0.28 ) }
    dend_9 { pt3dadd( -113.472, -140.216, -120.788, 0.55 ) }
    dend_9 { pt3dadd( -113.912, -142.823, -121.728, 0.28 ) }
    dend_9 { pt3dadd( -114.194, -145.008, -122.395, 0.55 ) }
    dend_9 { pt3dadd( -114.613, -149.769, -123.37, 0.28 ) }
    dend_9 { pt3dadd( -114.659, -150.571, -123.549, 0.55 ) }
    dend_9 { pt3dadd( -114.792, -152.981, -124.089, 0.28 ) }
    dend_9 { pt3dadd( -114.856, -153.645, -124.248, 0.55 ) }
    dend_9 { pt3dadd( -115.215, -156.042, -124.771, 0.28 ) }
    dend_9 { pt3dadd( -115.428, -156.9, -125.039, 0.55 ) }
    dend_9 { pt3dadd( -116.137, -158.95, -125.747, 0.28 ) }
    dend_9 { pt3dadd( -116.595, -159.981, -126.154, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_9 { pt3dadd( -118.748, -163.769, -127.767, 0.28 ) }
    dend_9 { pt3dadd( -119.567, -164.941, -128.368, 0.55 ) }
    dend_9 { pt3dadd( -122.011, -167.775, -129.962, 0.28 ) }
    dend_9 { pt3dadd( -122.573, -168.316, -130.297, 0.55 ) }
    dend_9 { pt3dadd( -123.995, -169.468, -131.06, 0.28 ) }
    dend_9 { pt3dadd( -124.999, -170.15, -131.538, 0.55 ) }
    dend_9 { pt3dadd( -126.887, -171.037, -132.446, 0.28 ) }
    dend_9 { pt3dadd( -128.575, -171.673, -133.301, 0.55 ) }
    dend_9 { pt3dadd( -131.061, -172.432, -134.426, 0.28 ) }
    dend_9 { pt3dadd( -132.423, -172.828, -135.085, 0.55 ) }
    dend_9 { pt3dadd( -134.077, -173.295, -135.958, 0.28 ) }
    dend_9 { pt3dadd( -138.447, -174.462, -138.402, 0.28 ) }
    dend_9 { pt3dadd( -139.788, -174.777, -139.165, 0.28 ) }
    dend_9 { pt3dadd( -141.4, -175.063, -140.224, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 14/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -33.0573, -46.2428, 20.1033, 0.55 ) }
    dend_4 { pt3dadd( -33.9793, -48.2087, 18.0564, 0.55 ) }
    dend_4 { pt3dadd( -35.0017, -50.7774, 15.615, 0.55 ) }
    dend_4 { pt3dadd( -36.1102, -53.8668, 12.6324, 0.83 ) }
    dend_4 { pt3dadd( -37.14, -56.9804, 9.68441, 0.83 ) }
    dend_4 { pt3dadd( -37.6408, -58.537, 8.28328, 0.28 ) }
    dend_4 { pt3dadd( -37.9589, -59.4534, 7.48585, 0.83 ) }
    dend_4 { pt3dadd( -38.5946, -61.3173, 5.86128, 0.83 ) }
    dend_4 { pt3dadd( -39.6741, -64.3098, 3.29566, 0.28 ) }
    dend_4 { pt3dadd( -39.981, -65.2102, 2.68051, 0.28 ) }
    dend_4 { pt3dadd( -40.6318, -66.7453, 1.81783, 0.55 ) }
    dend_4 { pt3dadd( -41.9311, -69.1653, 0.341271, 0.28 ) }
    dend_4 { pt3dadd( -42.253, -69.7092, 0.0163509, 0.55 ) }
    dend_4 { pt3dadd( -43.6263, -71.944, -1.216, 0.28 ) }
    dend_4 { pt3dadd( -44.3871, -73.3431, -1.80525, 0.83 ) }
    dend_4 { pt3dadd( -45.5258, -75.5617, -2.63672, 0.28 ) }
    dend_4 { pt3dadd( -46.9234, -78.4763, -3.44819, 0.55 ) }
    dend_4 { pt3dadd( -47.8997, -80.707, -3.82435, 0.55 ) }
    dend_4 { pt3dadd( -48.6329, -82.2206, -3.85829, 0.55 ) }
    dend_4 { pt3dadd( -50.0823, -84.9238, -3.32417, 0.83 ) }
    dend_4 { pt3dadd( -51.0392, -86.6218, -2.78184, 0.83 ) }
    dend_4 { pt3dadd( -52.1378, -88.4421, -1.91388, 0.28 ) }
    dend_4 { pt3dadd( -52.7183, -89.3227, -1.41528, 0.55 ) }
    dend_4 { pt3dadd( -54.8461, -92.325, 0.435148, 0.83 ) }
    dend_4 { pt3dadd( -56.5125, -94.5303, 2.00795, 0.28 ) }
    dend_4 { pt3dadd( -56.9617, -95.0971, 2.44889, 0.55 ) }
    dend_4 { pt3dadd( -57.6142, -95.9469, 3.07469, 0.28 ) }
    dend_4 { pt3dadd( -58.5344, -97.1887, 3.90188, 0.55 ) }
    dend_4 { pt3dadd( -60.3451, -99.646, 5.10247, 0.55 ) }
    dend_4 { pt3dadd( -61.7495, -101.528, 5.6621, 0.28 ) }
    dend_4 { pt3dadd( -62.6499, -102.587, 5.81569, 0.83 ) }
    dend_4 { pt3dadd( -64.1679, -104.19, 5.91341, 0.28 ) }
    dend_4 { pt3dadd( -64.8068, -104.825, 5.91781, 0.28 ) }
    dend_4 { pt3dadd( -67.7629, -107.714, 6.06366, 0.83 ) }
    dend_4 { pt3dadd( -70.1007, -109.935, 6.18457, 0.28 ) }
    dend_4 { pt3dadd( -72.006, -111.95, 6.34806, 0.83 ) }
    dend_4 { pt3dadd( -72.956, -113.064, 6.49701, 0.28 ) }
    dend_4 { pt3dadd( -73.7856, -114.083, 6.68716, 0.83 ) }
    dend_4 { pt3dadd( -76.224, -117.199, 7.52131, 0.28 ) }
    dend_4 { pt3dadd( -76.5161, -117.671, 7.73356, 1.11 ) }
    dend_4 { pt3dadd( -77.584, -120.273, 8.9921, 0.55 ) }
    dend_4 { pt3dadd( -77.9984, -121.872, 9.91366, 1.11 ) }
    dend_4 { pt3dadd( -83.5491, -130.286, 9.06437, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 57/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -33.0573, -46.2428, 20.1033, 0.55 ) }
    dend_3 { pt3dadd( -32.6903, -48.2002, 22.7033, 0.55 ) }
    dend_3 { pt3dadd( -32.4004, -49.7588, 24.4766, 0.55 ) }
    dend_3 { pt3dadd( -31.9994, -52.7253, 27.4626, 0.55 ) }
    dend_3 { pt3dadd( -31.7184, -54.8047, 29.5558, 0.55 ) }
    dend_3 { pt3dadd( -31.5021, -56.4052, 31.1669, 0.55 ) }
    dend_3 { pt3dadd( -31.156, -58.9659, 33.7445, 0.55 ) }
    dend_3 { pt3dadd( -31.0876, -59.9946, 34.8616, 0.55 ) }
    dend_3 { pt3dadd( -30.9028, -62.6055, 37.2243, 0.55 ) }
    dend_3 { pt3dadd( -28.9248, -66.3671, 43.4711, 0.55 ) }
    dend_3 { pt3dadd( -27.0541, -71.0337, 49.0735, 0.55 ) }
    dend_3 { pt3dadd( -26.1143, -75.9582, 54.6806, 0.55 ) }
    dend_3 { pt3dadd( -24.638, -80.672, 60.3599, 0.55 ) }
    dend_3 { pt3dadd( -22.1824, -85.5216, 65.557, 0.55 ) }
    dend_3 { pt3dadd( -20.6046, -89.8807, 71.5009, 0.55 ) }
    dend_3 { pt3dadd( -18.647, -92.9673, 78.1355, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 73/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 94.5612, -56.5811, 30.203, 0.55 ) }
    dend_35 { pt3dadd( 102.6, -58.6068, 32.4508, 0.55 ) }
    dend_35 { pt3dadd( 110.147, -60.2236, 36.238, 0.55 ) }
    dend_35 { pt3dadd( 117.65, -60.5812, 40.4184, 0.55 ) }
    dend_35 { pt3dadd( 124.927, -61.0175, 44.9716, 0.55 ) }
    dend_35 { pt3dadd( 131.897, -60.0917, 49.8915, 0.55 ) }
    dend_35 { pt3dadd( 138.419, -58.1844, 55.1024, 0.55 ) }
    dend_35 { pt3dadd( 143.307, -55.8689, 61.7001, 0.55 ) }
    dend_35 { pt3dadd( 148.621, -53.4208, 67.915, 0.55 ) }
    dend_35 { pt3dadd( 153.408, -49.7583, 73.9163, 0.55 ) }
    dend_35 { pt3dadd( 159.008, -45.9569, 79.0908, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 84/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 94.5612, -56.5811, 30.203, 0.55 ) }
    dend_34 { pt3dadd( 103.714, -58.8101, 32.4997, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 86/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 21.0179, -126.397, 17.4407, 0.55 ) }
    dend_32 { pt3dadd( 21.11, -134.302, 16.1785, 0.55 ) }
    dend_32 { pt3dadd( 21.6564, -142.201, 14.9801, 0.55 ) }
    dend_32 { pt3dadd( 21.5846, -150.088, 13.602, 0.55 ) }
    dend_32 { pt3dadd( 21.3842, -157.761, 11.296, 0.55 ) }
    dend_32 { pt3dadd( 22.6384, -164.851, 7.70594, 0.55 ) }
    dend_32 { pt3dadd( 23.8376, -171.776, 3.77604, 0.55 ) }
    dend_32 { pt3dadd( 26.1347, -178.133, -0.650952, 0.55 ) }
    dend_32 { pt3dadd( 27.9941, -184.545, -5.19534, 0.55 ) }
    dend_32 { pt3dadd( 31.8232, -190.653, -8.87801, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 96/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 21.0179, -126.397, 17.4407, 0.55 ) }
    dend_31 { pt3dadd( 19.692, -136.297, 17.7822, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.89372, -37.1323, -3.22834, 0.83 ) }
    dend_12 { pt3dadd( -3.31899, -41.9634, -2.18648, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -4.03791, -45.9725, -1.51853, 0.83 ) }
    dend_12 { pt3dadd( -5.33594, -51.3774, -0.640028, 0.83 ) }
    dend_12 { pt3dadd( -6.63403, -56.8971, 0.206185, 0.83 ) }
    dend_12 { pt3dadd( -7.60105, -61.4262, 0.883527, 0.83 ) }
    dend_12 { pt3dadd( -8.44493, -66.0314, 1.52587, 0.83 ) }
    dend_12 { pt3dadd( -9.46563, -72.5232, 2.29074, 0.83 ) }
    dend_12 { pt3dadd( -10.2806, -77.8156, 2.78383, 0.83 ) }
    dend_12 { pt3dadd( -11.3193, -84.8908, 3.1367, 0.83 ) }
    dend_12 { pt3dadd( -11.6546, -88.0054, 3.19557, 0.55 ) }
    dend_12 { pt3dadd( -11.7899, -91.6152, 3.15205, 1.11 ) }
    dend_12 { pt3dadd( -11.6944, -95.9671, 3.04419, 0.55 ) }
    dend_12 { pt3dadd( -11.1951, -101.488, 2.80506, 1.11 ) }
    dend_12 { pt3dadd( -10.7775, -105.142, 2.4506, 0.55 ) }
    dend_12 { pt3dadd( -10.4423, -109.052, 1.91138, 0.83 ) }
    dend_12 { pt3dadd( -10.2539, -112.467, 1.35494, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.89372, -37.1323, -3.22834, 0.55 ) }
    dend_11 { pt3dadd( -2.80552, -39.0194, -2.38688, 0.55 ) }
    dend_11 { pt3dadd( -2.85428, -40.0568, -1.83237, 0.28 ) }
    dend_11 { pt3dadd( -2.89043, -40.6177, -1.54167, 0.83 ) }
    dend_11 { pt3dadd( -3.05063, -42.8707, -0.216597, 0.55 ) }
    dend_11 { pt3dadd( -3.31367, -45.4219, 1.27341, 0.55 ) }
    dend_11 { pt3dadd( -4.01067, -51.6579, 4.76626, 0.83 ) }
    dend_11 { pt3dadd( -4.25157, -53.6696, 5.92796, 0.55 ) }
    dend_11 { pt3dadd( -4.60703, -56.9346, 7.832, 0.55 ) }
    dend_11 { pt3dadd( -4.95442, -60.6798, 10.0093, 0.28 ) }
    dend_11 { pt3dadd( -5.1446, -63.0159, 11.3699, 0.55 ) }
    dend_11 { pt3dadd( -5.26204, -65.0421, 12.4896, 0.55 ) }
    dend_11 { pt3dadd( -5.26687, -67.9637, 13.8775, 0.55 ) }
    dend_11 { pt3dadd( -5.20568, -69.1163, 14.4456, 0.28 ) }
    dend_11 { pt3dadd( -4.93505, -72.1778, 16.0555, 0.83 ) }
    dend_11 { pt3dadd( -4.68138, -73.983, 16.9865, 0.28 ) }
    dend_11 { pt3dadd( -4.35768, -75.7721, 17.9633, 0.83 ) }
    dend_11 { pt3dadd( -4.04453, -77.6219, 18.9765, 0.28 ) }
    dend_11 { pt3dadd( -3.92421, -78.4185, 19.3894, 0.55 ) }
    dend_11 { pt3dadd( -3.72133, -80.7436, 20.7269, 0.28 ) }
    dend_11 { pt3dadd( -3.69013, -82.0337, 21.5727, 0.83 ) }
    dend_11 { pt3dadd( -3.83453, -83.3574, 22.786, 0.55 ) }
    dend_11 { pt3dadd( -4.2962, -85.7875, 25.351, 0.28 ) }
    dend_11 { pt3dadd( -4.54781, -86.8322, 26.4756, 1.11 ) }
    dend_11 { pt3dadd( -5.45218, -90.0893, 30.1837, 0.28 ) }
    dend_11 { pt3dadd( -5.97668, -91.6924, 32.1385, 0.55 ) }
    dend_11 { pt3dadd( -7.67208, -96.1983, 38.2025, 0.28 ) }
    dend_11 { pt3dadd( -8.15369, -97.3321, 39.9188, 0.83 ) }
    dend_11 { pt3dadd( -8.97513, -98.9441, 42.6758, 0.28 ) }
    dend_11 { pt3dadd( -10.7311, -107.598, 48.0666, 0.28 ) }
    dend_11 { pt3dadd( -12.6867, -117.178, 51.3164, 0.28 ) }
    dend_11 { pt3dadd( -15.8976, -126.472, 54.4403, 0.28 ) }
    dend_11 { pt3dadd( -20.0643, -135.203, 58.0955, 0.28 ) }
    dend_11 { pt3dadd( -24.5227, -143.069, 63.1878, 0.28 ) }
    dend_11 { pt3dadd( -30.1129, -150.164, 68.3546, 0.28 ) }
    dend_11 { pt3dadd( -36.1672, -156.308, 74.2322, 0.28 ) }
    dend_11 { pt3dadd( -41.6391, -162.706, 80.388, 0.28 ) }
    dend_11 { pt3dadd( -45.9918, -169.729, 86.7181, 0.28 ) }
    dend_11 { pt3dadd( -50.8336, -175.901, 93.6031, 0.28 ) }
    dend_11 { pt3dadd( -55.7786, -182.494, 99.9838, 0.28 ) }
    dend_11 { pt3dadd( -59.6831, -189.164, 106.974, 0.28 ) }
    dend_11 { pt3dadd( -62.0507, -195.225, 115.139, 0.28 ) }
    dend_11 { pt3dadd( -63.9759, -202.749, 122.044, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 58/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.2539, -112.467, 1.35494, 0.55 ) }
    dend_16 { pt3dadd( -9.42209, -114.817, 2.44338, 0.55 ) }
    dend_16 { pt3dadd( -8.73523, -117.101, 3.11274, 0.28 ) }
    dend_16 { pt3dadd( -8.40714, -118.629, 3.40866, 0.83 ) }
    dend_16 { pt3dadd( -8.15653, -120.201, 3.64129, 0.28 ) }
    dend_16 { pt3dadd( -7.38857, -125.393, 4.33242, 0.83 ) }
    dend_16 { pt3dadd( -7.02088, -127.716, 4.65217, 0.55 ) }
    dend_16 { pt3dadd( -6.44447, -130.924, 4.99112, 0.83 ) }
    dend_16 { pt3dadd( -5.69665, -134.464, 5.37535, 0.83 ) }
    dend_16 { pt3dadd( -5.17726, -136.656, 5.62047, 0.55 ) }
    dend_16 { pt3dadd( -4.67009, -138.633, 5.86942, 0.55 ) }
    dend_16 { pt3dadd( -3.68419, -141.937, 6.34455, 0.83 ) }
    dend_16 { pt3dadd( -2.54459, -145.389, 6.8296, 0.55 ) }
    dend_16 { pt3dadd( -0.744473, -150.539, 7.52513, 0.55 ) }
    dend_16 { pt3dadd( -0.0956921, -152.461, 7.70762, 0.28 ) }
    dend_16 { pt3dadd( 0.694826, -155.283, 7.84, 0.83 ) }
    dend_16 { pt3dadd( 1.3432, -158.42, 7.85229, 0.83 ) }
    dend_16 { pt3dadd( 1.61988, -160.999, 7.80725, 0.55 ) }
    dend_16 { pt3dadd( 1.6687, -163.33, 7.75928, 0.55 ) }
    dend_16 { pt3dadd( 1.49979, -168.129, 7.72599, 0.55 ) }
    dend_16 { pt3dadd( 1.32275, -170.436, 7.83862, 0.83 ) }
    dend_16 { pt3dadd( 1.03218, -173.37, 8.12329, 0.83 ) }
    dend_16 { pt3dadd( 0.560642, -177.679, 8.83323, 0.55 ) }
    dend_16 { pt3dadd( 0.279523, -180.499, 9.47445, 0.55 ) }
    dend_16 { pt3dadd( 0.162052, -182.371, 9.98823, 0.83 ) }
    dend_16 { pt3dadd( 0.110827, -185.374, 10.9228, 0.28 ) }
    dend_16 { pt3dadd( 0.14145, -186.046, 11.1288, 0.55 ) }
    dend_16 { pt3dadd( 0.387593, -189.087, 11.976, 0.28 ) }
    dend_16 { pt3dadd( 0.587349, -190.626, 12.3513, 0.55 ) }
    dend_16 { pt3dadd( 0.857356, -192.435, 12.7515, 0.28 ) }
    dend_16 { pt3dadd( 1.4062, -195.903, 13.4105, 1.66 ) }
    dend_16 { pt3dadd( 2.10433, -200.346, 14.1534, 0.83 ) }
    dend_16 { pt3dadd( 2.31313, -201.895, 14.4117, 1.11 ) }
    dend_16 { pt3dadd( 2.53297, -203.9, 14.7481, 0.55 ) }
    dend_16 { pt3dadd( 2.74805, -205.979, 15.2184, 0.28 ) }
    dend_16 { pt3dadd( 2.85487, -207.2, 15.565, 0.83 ) }
    dend_16 { pt3dadd( 2.97124, -208.824, 16.149, 0.28 ) }
    dend_16 { pt3dadd( 3.00853, -209.995, 16.6824, 0.55 ) }
    dend_16 { pt3dadd( 3.09826, -211.732, 17.5107, 0.28 ) }
    dend_16 { pt3dadd( 3.19334, -214.497, 19.0528, 0.28 ) }
    dend_16 { pt3dadd( 3.2786, -217.872, 21.0231, 0.83 ) }
    dend_16 { pt3dadd( 3.28988, -219.306, 21.9216, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( 3.24816, -222.349, 23.796, 0.55 ) }
    dend_16 { pt3dadd( 3.23732, -225.393, 25.6751, 0.83 ) }
    dend_16 { pt3dadd( 3.12948, -230.587, 28.766, 0.55 ) }
    dend_16 { pt3dadd( 3.04036, -232.833, 30.0969, 0.55 ) }
    dend_16 { pt3dadd( 2.85858, -236.29, 32.2389, 0.55 ) }
    dend_16 { pt3dadd( 2.71779, -238.735, 33.8968, 0.55 ) }
    dend_16 { pt3dadd( 2.57071, -241.513, 35.9167, 0.55 ) }
    dend_16 { pt3dadd( 2.34477, -244.061, 38.0011, 0.55 ) }
    dend_16 { pt3dadd( 2.214, -246.287, 39.8695, 0.55 ) }
    dend_16 { pt3dadd( 2.09986, -248.565, 41.8551, 0.55 ) }
    dend_16 { pt3dadd( 1.91205, -252.874, 45.6834, 0.55 ) }
    dend_16 { pt3dadd( 1.86912, -253.924, 46.6681, 0.55 ) }
    dend_16 { pt3dadd( 1.74117, -256.452, 48.9567, 0.83 ) }
    dend_16 { pt3dadd( 1.7847, -258.119, 50.3588, 0.28 ) }
    dend_16 { pt3dadd( 1.84045, -259.699, 51.4779, 0.83 ) }
    dend_16 { pt3dadd( 1.98866, -262.007, 52.9191, 0.28 ) }
    dend_16 { pt3dadd( 2.05006, -263.228, 53.5565, 0.55 ) }
    dend_16 { pt3dadd( 2.12322, -265.481, 54.7581, 0.28 ) }
    dend_16 { pt3dadd( 2.17781, -267.128, 55.6469, 0.83 ) }
    dend_16 { pt3dadd( 2.16166, -270.082, 57.3253, 0.28 ) }
    dend_16 { pt3dadd( 2.12044, -271.718, 58.2474, 0.55 ) }
    dend_16 { pt3dadd( 1.9889, -274.339, 59.6196, 0.55 ) }
    dend_16 { pt3dadd( 1.85556, -276.315, 60.5573, 0.55 ) }
    dend_16 { pt3dadd( 1.84533, -278.472, 61.4784, 0.28 ) }
    dend_16 { pt3dadd( 1.97218, -279.804, 61.9842, 0.28 ) }
    dend_16 { pt3dadd( 2.51021, -282.398, 62.8436, 0.83 ) }
    dend_16 { pt3dadd( 3.04805, -284.361, 63.4217, 0.55 ) }
    dend_16 { pt3dadd( 4.39664, -288.292, 64.4542, 0.55 ) }
    dend_16 { pt3dadd( 5.91134, -292.164, 65.4471, 0.55 ) }
    dend_16 { pt3dadd( 7.07884, -294.949, 66.1482, 0.28 ) }
    dend_16 { pt3dadd( 8.04062, -297.283, 66.6955, 0.55 ) }
    dend_16 { pt3dadd( 9.21915, -300.421, 67.3287, 0.55 ) }
    dend_16 { pt3dadd( 10.2488, -304.119, 67.9612, 0.55 ) }
    dend_16 { pt3dadd( 10.5627, -306.107, 68.2715, 0.83 ) }
    dend_16 { pt3dadd( 10.5605, -308.034, 68.5153, 0.83 ) }
    dend_16 { pt3dadd( 10.2545, -310.565, 68.7562, 0.55 ) }
    dend_16 { pt3dadd( 9.82654, -312.66, 68.8295, 0.83 ) }
    dend_16 { pt3dadd( 8.8367, -316.225, 68.8235, 0.28 ) }
    dend_16 { pt3dadd( 8.5562, -317.12, 68.8231, 0.55 ) }
    dend_16 { pt3dadd( 8.04259, -318.926, 68.8759, 0.28 ) }
    dend_16 { pt3dadd( 7.66926, -320.619, 68.9947, 0.55 ) }
    dend_16 { pt3dadd( 7.24052, -323.643, 69.3215, 0.28 ) }
    dend_16 { pt3dadd( 7.16932, -324.467, 69.4752, 0.83 ) }
    dend_16 { pt3dadd( 6.98506, -327.516, 70.1265, 0.28 ) }
    dend_16 { pt3dadd( 6.89802, -329.073, 70.473, 0.55 ) }
    dend_16 { pt3dadd( 6.78565, -331.364, 70.9236, 0.28 ) }
    dend_16 { pt3dadd( 6.72036, -332.634, 71.1965, 0.83 ) }
    dend_16 { pt3dadd( 6.36786, -338.063, 72.3818, 0.28 ) }
    dend_16 { pt3dadd( 6.1475, -340.631, 72.8293, 0.55 ) }
    dend_16 { pt3dadd( 5.89679, -342.532, 73.0551, 0.55 ) }
    dend_16 { pt3dadd( 5.46906, -345.319, 73.3586, 0.55 ) }
    dend_16 { pt3dadd( 7.2958, -356.535, 75.5438, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 52/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -10.2539, -112.467, 1.35494, 0.83 ) }
    dend_13 { pt3dadd( -10.2396, -114.095, 1.37283, 0.83 ) }
    dend_13 { pt3dadd( -10.2099, -115.64, 1.36558, 0.28 ) }
    dend_13 { pt3dadd( -10.1143, -116.644, 1.27258, 1.11 ) }
    dend_13 { pt3dadd( -10.0313, -118.11, 1.11146, 0.28 ) }
    dend_13 { pt3dadd( -10.0267, -118.515, 1.04604, 0.55 ) }
    dend_13 { pt3dadd( -10.0595, -119.504, 0.856168, 0.28 ) }
    dend_13 { pt3dadd( -10.0777, -119.718, 0.811021, 0.55 ) }
    dend_13 { pt3dadd( -10.2426, -121.616, 0.429415, 0.28 ) }
    dend_13 { pt3dadd( -10.2388, -123.139, -0.109762, 0.83 ) }
    dend_13 { pt3dadd( -10.1705, -124.446, -0.708471, 0.28 ) }
    dend_13 { pt3dadd( -10.1295, -125.32, -1.12236, 0.55 ) }
    dend_13 { pt3dadd( -10.0406, -127.518, -2.17477, 0.28 ) }
    dend_13 { pt3dadd( -9.99494, -128.333, -2.58427, 0.83 ) }
    dend_13 { pt3dadd( -9.63818, -132.388, -4.79707, 0.28 ) }
    dend_13 { pt3dadd( -9.51381, -132.955, -5.16926, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.51381, -132.955, -5.16926, 0.28 ) }
    dend_15 { pt3dadd( -9.42607, -135.919, -3.16121, 0.28 ) }
    dend_15 { pt3dadd( -9.41056, -136.443, -2.80615, 0.83 ) }
    dend_15 { pt3dadd( -9.36215, -138.079, -1.69807, 0.28 ) }
    dend_15 { pt3dadd( -9.3547, -138.33, -1.5276, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.51381, -132.955, -5.16926, 0.28 ) }
    dend_14 { pt3dadd( -9.48192, -135.871, -3.66395, 0.28 ) }
    dend_14 { pt3dadd( -9.45755, -137.437, -3.03112, 0.83 ) }
    dend_14 { pt3dadd( -9.42432, -139.91, -2.22825, 0.28 ) }
    dend_14 { pt3dadd( -9.42057, -140.428, -2.08483, 0.83 ) }
    dend_14 { pt3dadd( -9.4037, -142.115, -1.6541, 0.28 ) }
    dend_14 { pt3dadd( -9.39488, -143.133, -1.42842, 0.55 ) }
    dend_14 { pt3dadd( -9.41504, -145.12, -1.1902, 0.28 ) }
    dend_14 { pt3dadd( -9.46246, -146.546, -0.986909, 0.83 ) }
    dend_14 { pt3dadd( -9.51458, -147.761, -0.807589, 0.28 ) }
    dend_14 { pt3dadd( -9.53774, -148.307, -0.683509, 0.55 ) }
    dend_14 { pt3dadd( -9.65255, -150.842, 0.071765, 0.28 ) }
    dend_14 { pt3dadd( -9.66076, -151.081, 0.163454, 0.55 ) }
    dend_14 { pt3dadd( -9.67198, -153.746, 1.32711, 0.28 ) }
    dend_14 { pt3dadd( -9.63788, -155.263, 2.14664, 0.83 ) }
    dend_14 { pt3dadd( -9.48296, -157.611, 3.61139, 0.28 ) }
    dend_14 { pt3dadd( -9.41984, -158.357, 4.15702, 0.55 ) }
    dend_14 { pt3dadd( -9.15947, -159.829, 5.22243, 0.28 ) }
    dend_14 { pt3dadd( -8.91127, -160.836, 5.89803, 0.28 ) }
    dend_14 { pt3dadd( -8.22903, -162.976, 7.16491, 0.55 ) }
    dend_14 { pt3dadd( -7.56546, -164.91, 8.16264, 0.28 ) }
    dend_14 { pt3dadd( -6.91, -166.792, 8.91031, 0.55 ) }
    dend_14 { pt3dadd( -5.58913, -170.671, 9.92706, 0.28 ) }
    dend_14 { pt3dadd( -5.28373, -171.634, 10.0527, 0.55 ) }
    dend_14 { pt3dadd( -4.90263, -172.868, 10.0838, 0.28 ) }
    dend_14 { pt3dadd( -4.61775, -173.857, 9.98228, 0.55 ) }
    dend_14 { pt3dadd( -4.10084, -175.825, 9.61197, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_14 { pt3dadd( -3.77247, -177.413, 9.26965, 0.55 ) }
    dend_14 { pt3dadd( -3.61166, -179.224, 8.98044, 0.28 ) }
    dend_14 { pt3dadd( -3.58808, -179.733, 8.91479, 0.55 ) }
    dend_14 { pt3dadd( -3.55624, -180.931, 8.83136, 0.28 ) }
    dend_14 { pt3dadd( -3.5272, -181.744, 8.80859, 0.83 ) }
    dend_14 { pt3dadd( -3.46005, -183.936, 8.78164, 0.28 ) }
    dend_14 { pt3dadd( -3.43477, -184.702, 8.80844, 0.55 ) }
    dend_14 { pt3dadd( -3.35342, -187.06, 8.86986, 0.28 ) }
    dend_14 { pt3dadd( -3.30763, -189.282, 8.98829, 0.28 ) }
    dend_14 { pt3dadd( -3.28893, -190.142, 9.05622, 0.55 ) }
    dend_14 { pt3dadd( -1.65622, -198.11, 12.2015, 0.55 ) }
    dend_14 { pt3dadd( -1.34998, -206.059, 15.7753, 0.55 ) }
    dend_14 { pt3dadd( -0.992652, -213.835, 19.725, 0.55 ) }
    dend_14 { pt3dadd( -0.898119, -220.579, 25.3338, 0.55 ) }
    dend_14 { pt3dadd( -0.280788, -227.473, 30.7144, 0.55 ) }
    dend_14 { pt3dadd( -0.784425, -234.379, 36.0895, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_40, dend_27, dend_22, dend_17, dend_0, dend_42, dend_41, dend_37, dend_28, dend_24, dend_23, dend_21, dend_18, dend_6, dend_1, dend_39, dend_38, dend_36, dend_29, dend_26, dend_25, dend_20, dend_19, dend_8, dend_7, dend_5, dend_2, dend_33, dend_30, dend_10, dend_9, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_12, dend_11, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_40, dend_27, dend_22, dend_17, dend_0, dend_42, dend_41, dend_37, dend_28, dend_24, dend_23, dend_21, dend_18, dend_6, dend_1, dend_39, dend_38, dend_36, dend_29, dend_26, dend_25, dend_20, dend_19, dend_8, dend_7, dend_5, dend_2, dend_33, dend_30, dend_10, dend_9, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_12, dend_11, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_17 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_42 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_41 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_37 OneSecGrp_SectionRef_11.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_23 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_21 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_18 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_39 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_36 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_29 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_26 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_25 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_7 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_2 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_33 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_30 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_9 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_4 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_3 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_32 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_14 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_6 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_8 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_22 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_10 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_24 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_34 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_31 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, axon_0, axon_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_11 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 9
    dend_17 nseg = 3
    dend_42 nseg = 13
    dend_41 nseg = 5
    dend_37 nseg = 3
    dend_23 nseg = 3
    dend_21 nseg = 5
    dend_18 nseg = 5
    dend_39 nseg = 3
    dend_38 nseg = 7
    dend_36 nseg = 5
    dend_29 nseg = 3
    dend_26 nseg = 7
    dend_25 nseg = 3
    dend_7 nseg = 9
    dend_5 nseg = 11
    dend_2 nseg = 3
    dend_33 nseg = 3
    dend_30 nseg = 5
    dend_9 nseg = 13
    dend_4 nseg = 5
    dend_3 nseg = 3
    dend_35 nseg = 5
    dend_32 nseg = 3
    dend_12 nseg = 3
    dend_11 nseg = 11
    dend_16 nseg = 13
    dend_14 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_NBC_aa36da75a3_0_0


