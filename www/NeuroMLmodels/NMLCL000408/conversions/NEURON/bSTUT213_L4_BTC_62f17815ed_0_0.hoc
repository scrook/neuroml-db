// Cell: bSTUT213_L4_BTC_62f17815ed_0_0
/*
{
  "id" : "bSTUT213_L4_BTC_62f17815ed_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.71855, 1.8584, 2.77", "2.12166, -14.4537, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 10.5559, -3.7416, 1.38", "-6.20504, 12.4227, -3.94411, 1.38", "-7.93738, 15.3456, -4.26119, 1.66", "-9.4165, 17.8412, -4.53193, 1.38", "-10.5993, 19.837, -4.74843, 1.11", "-11.5335, 21.4132, -4.91942, 1.11", "-13.6931, 25.057, -5.31471, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.6302, 6.4384, 1.38", "6.01428, 9.23591, 7.12073, 1.38", "6.09699, 10.8464, 7.54396, 1.38", "6.34217, 13.6625, 8.37395, 1.38", "6.67728, 16.666, 9.30129, 1.38", "6.92951, 18.9266, 9.99923, 1.38", "7.15458, 20.9439, 10.622, 0.83", "7.30157, 22.9049, 11.2701, 1.38", "7.51684, 25.232, 12.073, 1.38", "8.00868, 28.0073, 13.0139, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.642532", "6.19422, -24.7888, -0.978947, 0.642532", "9.61231, -39.3941, -0.978947, 0.642532" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.12166, -14.4537, 1.8584, 2.22", "5.26461, -20.4633, 1.27654, 2.22", "6.89961, -23.5895, 0.973861, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.12166, -14.4537, 1.8584, 0.83", "-0.957228, -16.9763, 2.50825, 0.83", "-3.11856, -18.7353, 3.23457, 1.11", "-6.10048, -21.1622, 4.23665, 0.83", "-8.39086, -23.0262, 5.00634, 0.83", "-12.2742, -26.1867, 6.31137, 1.38", "-15.9859, -29.2075, 7.55872, 1.38", "-19.2936, -31.6022, 8.92538, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-13.6931, 25.057, -5.31471, 0.55", "-16.7495, 25.6013, -4.40342, 0.55", "-18.2185, 25.6708, -3.74345, 0.55", "-19.2678, 25.6579, -3.19811, 0.55", "-20.9947, 25.5647, -2.25929, 1.11", "-24.0173, 25.3035, -0.617987, 0.83", "-27.0629, 24.9145, 1.06904, 0.83", "-30.2596, 24.2576, 2.98903, 0.55", "-31.9951, 23.7994, 4.04363, 1.38", "-33.2551, 23.3924, 4.81699, 0.28", "-34.4025, 22.9492, 5.52586, 0.83", "-35.7883, 22.4121, 6.41446, 0.28", "-36.7507, 22.0274, 7.06536, 0.55", "-37.9678, 21.6112, 7.83662, 0.55", "-39.9013, 21.0183, 9.05349, 0.55", "-41.5705, 20.5178, 10.0931, 0.55", "-44.4165, 19.7436, 11.8996, 0.55", "-45.6185, 19.4461, 12.6349, 0.55", "-47.9199, 18.9097, 13.9827, 0.83", "-49.5376, 18.5706, 14.8898, 0.83", "-50.826, 18.3194, 15.5523, 0.83", "-53.5693, 17.8406, 16.9129, 0.83", "-54.5872, 17.6496, 17.3859, 0.83", "-57.0439, 17.1556, 18.6053, 0.83", "-60.4, 16.397, 20.319, 0.83", "-61.2433, 16.2267, 20.7453, 0.83", "-63.0822, 15.8965, 21.6374, 0.28", "-64.1098, 15.6838, 22.0704, 0.83", "-66.5746, 15.1516, 23.0383, 0.28", "-68.3023, 14.7667, 23.6014, 0.83", "-70.319, 14.3169, 24.1507, 0.28", "-70.7558, 14.2179, 24.2628, 0.55", "-73.2533, 13.7277, 24.7952, 0.55", "-75.0512, 13.4341, 25.122, 0.28", "-77.0941, 13.1158, 25.2946, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-13.6931, 25.057, -5.31471, 1.11", "-14.9567, 29.6495, -8.13336, 1.11", "-15.6812, 32.1575, -9.44354, 1.11", "-16.5549, 35.1824, -11.0237, 1.11", "-17.2895, 37.7252, -12.3521, 1.11", "-18.1544, 40.7193, -13.9162, 0.83", "-19.0402, 43.7857, -15.5181, 0.83", "-19.6855, 46.2051, -16.445, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.00868, 28.0073, 13.0139, 0.83", "6.89384, 31.8329, 14.7746, 0.83", "6.06002, 34.6942, 16.0914, 0.83", "5.41418, 36.9104, 17.1114, 0.83", "4.40632, 40.369, 18.7031, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.00868, 28.0073, 13.0139, 0.83", "11.0567, 31.1603, 12.6383, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.642532", "13.0304, -53.9995, -0.978947, 0.642532", "16.4485, -68.6049, -0.978947, 0.642532" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "6.89961, -23.5895, 0.973861, 0.83", "7.545, -24.6125, -0.804615, 0.83", "7.91416, -25.0735, -1.86181, 0.83", "8.36543, -25.5542, -3.19108, 0.83", "10.156, -27.4123, -8.66945, 0.83", "11.1508, -28.4333, -11.7059, 0.83", "12.6417, -29.9634, -16.2564, 0.55", "13.2681, -30.6335, -18.498, 0.83", "13.9388, -31.3293, -21.1066, 0.83", "14.5655, -31.901, -23.5802, 1.11", "14.7125, -31.9869, -23.9993, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "6.89961, -23.5895, 0.973861, 1.66", "7.94454, -26.3106, 1.08049, 1.66", "9.44891, -29.5896, 1.21325, 1.11", "10.5829, -31.7624, 1.31695, 1.11", "12.6644, -35.1498, 1.83858, 1.11", "14.4413, -38.0417, 2.2839, 1.11", "15.6842, -40.0645, 2.59539, 1.38", "17.1616, -42.2249, 2.97015, 1.11", "18.0895, -43.4272, 3.25007, 1.11", "22.0276, -47.5943, 4.65815, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-19.2936, -31.6022, 8.92538, 0.28", "-18.81, -35.0151, 12.0055, 0.28", "-18.6607, -36.4565, 13.4401, 1.11", "-18.0969, -41.3141, 18.5407, 0.55", "-17.9024, -42.8064, 20.0677, 0.83", "-17.4719, -46.1097, 23.4482, 0.83", "-16.9757, -49.917, 27.3443, 0.55", "-16.691, -52.0955, 29.67, 1.11", "-16.1082, -55.9215, 33.893, 0.55", "-15.9667, -57.2727, 35.3847, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-19.2936, -31.6022, 8.92538, 0.83", "-22.6339, -31.9381, 10.4752, 0.83", "-25.142, -32.1658, 11.6028, 1.11", "-27.627, -32.3055, 12.6636, 0.83", "-30.4289, -32.3965, 13.7828, 0.83", "-33.8841, -32.5086, 15.1631, 0.83", "-37.1824, -32.6157, 16.4807, 0.83", "-40.8083, -32.7234, 17.8707, 1.11", "-44.6411, -32.7634, 19.2137, 1.11", "-48.048, -32.7447, 20.3341, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-77.0941, 13.1158, 25.2946, 0.28", "-76.8635, 11.5341, 26.1423, 0.28", "-76.7817, 10.9725, 26.4432, 0.83", "-76.3685, 8.13779, 27.9623, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-77.0941, 13.1158, 25.2946, 0.28", "-81.2282, 13.7334, 26.1359, 0.28", "-82.6316, 14.0019, 25.9723, 0.55", "-85.6931, 14.5597, 25.1356, 0.28", "-88.4199, 15.0129, 24.2124, 0.83", "-91.6677, 15.5526, 23.1129, 0.28", "-94.7834, 16.0704, 22.0581, 0.28", "-99.9856, 16.9528, 19.3415, 0.28", "-101.031, 17.1425, 18.6571, 0.83", "-102.605, 17.4881, 17.3101, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-19.6855, 46.2051, -16.445, 0.55", "-20.9134, 46.5016, -17.2122, 0.55", "-23.0784, 47.0244, -18.565, 0.55", "-25.1685, 47.5291, -19.871, 0.83", "-28.9395, 48.4397, -22.2273, 0.55", "-31.3031, 49.0105, -23.7042, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-19.6855, 46.2051, -16.445, 0.55", "-18.1464, 50.4835, -18.4601, 0.55", "-17.4384, 52.637, -19.2939, 0.55", "-16.8432, 54.5169, -19.8272, 0.83", "-16.0476, 57.0124, -20.4035, 0.55", "-15.5447, 58.6193, -20.7577, 0.83", "-14.779, 61.017, -21.2547, 0.55", "-14.1993, 62.8605, -21.5181, 0.83", "-13.3006, 65.4927, -21.9828, 0.28", "-12.753, 66.9527, -22.3009, 0.83", "-11.7767, 69.3398, -22.9042, 0.55", "-10.9877, 71.2045, -23.4203, 0.83", "-9.73879, 74.0469, -24.2951, 0.55", "-8.28127, 77.2053, -25.3936, 0.83", "-6.90811, 80.1121, -26.5393, 0.83", "-5.04868, 83.9791, -28.0654, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "4.40632, 40.369, 18.7031, 0.83", "5.48321, 44.2903, 19.7105, 0.83", "6.46599, 48.6074, 20.7988, 0.83", "6.97887, 51.279, 21.5642, 0.83", "7.61085, 54.9899, 22.7162, 0.83", "8.27473, 59.1685, 24.0321, 0.83", "8.92579, 63.7999, 25.4914, 0.83", "9.44384, 68.2103, 26.9467, 0.83", "9.89548, 72.587, 28.4873, 0.83", "10.098, 75.2208, 29.3827, 0.55", "10.2461, 78.0945, 30.2468, 0.55", "10.3755, 80.5048, 30.8116, 0.83", "10.5215, 82.6631, 31.146, 0.83", "10.7072, 84.6553, 31.3413, 0.55", "10.974, 87.1774, 31.3603, 0.83", "11.2008, 89.2248, 31.316, 0.55", "11.3796, 90.9839, 31.2656, 0.83", "11.6143, 93.7138, 31.1973, 0.55", "11.7858, 96.4586, 31.0944, 0.83", "11.883, 98.9584, 30.7816, 0.55", "11.8957, 100.319, 30.5482, 0.55", "11.8623, 102.424, 30.1664, 0.83", "11.743, 105.436, 29.592, 0.83", "11.6226, 107.931, 29.1197, 0.55", "11.2381, 113.582, 28.0192, 0.83", "10.9815, 116.86, 27.3821, 0.83", "10.6826, 120.858, 26.6635, 0.83", "10.522, 123.287, 26.3318, 0.83", "10.3651, 125.232, 26.1842, 0.83", "10.1863, 127.147, 26.1884, 0.55", "9.94922, 129.326, 26.3431, 0.55", "9.59338, 131.81, 26.5085, 0.83", "8.77992, 136.419, 26.7909, 0.83", "8.12118, 140.065, 26.9847, 1.11", "7.58911, 142.834, 27.1101, 0.55", "6.93042, 145.869, 27.2469, 1.11", "5.85111, 150.127, 27.4589, 0.83", "4.88068, 153.656, 27.586, 0.83", "4.19206, 156.005, 27.5882, 0.83", "3.54282, 158.352, 27.5131, 0.55", "2.68497, 161.651, 27.3337, 0.55", "2.50548, 162.43, 27.2727, 0.55", "1.9484, 165.328, 27.0633, 0.55", "1.59482, 167.447, 26.8512, 0.28", "1.12845, 170.856, 26.3616, 0.55", "0.751887, 174.75, 25.6482, 0.55", "0.604148, 176.95, 25.1878, 0.55", "0.379719, 180.787, 24.3696, 0.83", "0.181129, 184.844, 23.4897, 0.83", "0.0112261, 187.728, 22.7434, 0.83", "-0.12909, 189.394, 22.2289, 0.55", "-0.266864, 190.874, 21.7309, 0.83", "-0.577839, 193.245, 20.9776, 0.83", "-1.11385, 196.243, 20.0874, 0.83", "-1.8829, 200.008, 19.2434, 0.83", "-2.41152, 202.384, 18.7919, 0.83", "-2.94556, 204.586, 18.3188, 0.83", "-3.73428, 207.699, 17.5735, 0.55", "-4.63268, 210.947, 16.7809, 0.55", "-5.28121, 213.309, 16.2426, 0.55", "-5.96433, 215.934, 15.6615, 0.83", "-6.96049, 219.939, 14.7123, 1.11", "-7.86665, 224.135, 13.7981, 0.55", "-8.25035, 226.584, 13.3698, 0.55", "-8.59548, 229.433, 12.9801, 0.55", "-8.81255, 232.268, 12.6757, 0.83", "-8.86076, 235.697, 12.4111, 0.83", "-8.67645, 240.426, 12.1495, 0.83", "-8.16959, 246.091, 11.7512, 0.83", "-7.75864, 249.383, 11.4315, 0.55", "-7.28321, 252.643, 11.0318, 0.55", "-6.60213, 256.73, 10.453, 0.83", "-6.31577, 258.646, 10.1287, 0.83", "-6.02922, 261.671, 9.57445, 0.83", "-5.94157, 265.242, 8.99673, 0.83", "-6.1151, 268.191, 8.68169, 0.28", "-6.33195, 269.716, 8.58862, 0.83", "-7.20094, 274.064, 8.44669, 0.83", "-8.03909, 277.522, 8.44237, 0.83", "-9.05048, 280.876, 8.59386, 0.83", "-10.2363, 284.317, 8.89402, 0.83", "-11.0979, 286.601, 9.15761, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "4.40632, 40.369, 18.7031, 0.83", "2.99452, 41.6882, 20.1221, 0.83", "1.98269, 42.8555, 21.2706, 0.55", "0.35437, 44.749, 23.1167, 0.55", "-1.16928, 46.5215, 24.837, 0.55", "-2.89439, 48.3381, 26.7065, 0.55", "-4.19226, 49.532, 28.0788, 0.55", "-6.45355, 51.2423, 30.4583, 0.55", "-8.09591, 52.208, 32.0759, 0.55", "-10.4017, 53.1184, 34.051, 0.55", "-14.1324, 53.7296, 36.7664, 0.55", "-16.3722, 53.7024, 38.1335, 0.55", "-18.8335, 53.1916, 39.4253, 0.55", "-20.3107, 52.6168, 40.0427, 0.55", "-21.5059, 51.9457, 40.4367, 0.55", "-23.73, 50.3058, 40.9507, 0.28", "-24.8145, 49.3269, 41.1253, 0.83", "-26.2721, 47.8828, 41.3376, 0.55", "-27.2054, 46.8005, 41.405, 0.55", "-28.3576, 45.1117, 41.3775, 0.55", "-29.3957, 43.3153, 41.2576, 0.83", "-30.253, 41.7063, 41.0867, 0.55", "-30.9681, 40.3379, 40.8775, 0.55", "-32.6138, 37.1233, 40.2853, 0.55", "-34.2663, 34.0722, 39.6607, 0.83", "-35.5832, 31.8256, 39.1264, 0.83", "-37.0014, 29.5827, 38.3923, 0.83", "-38.7234, 27.1001, 37.4887, 0.55", "-39.5653, 25.9793, 37.1088, 0.28", "-40.6553, 24.6627, 36.7207, 0.55", "-41.9743, 23.2616, 36.2985, 0.28", "-44.8364, 20.4193, 35.543, 0.55", "-46.6297, 18.7431, 35.163, 0.55", "-48.3877, 17.1512, 34.9097, 0.28", "-49.9787, 15.7253, 34.7519, 0.55", "-52.7099, 13.1512, 34.5622, 0.55", "-53.6531, 12.2168, 34.544, 0.83", "-55.3051, 10.4555, 34.5789, 0.55", "-57.5422, 7.80001, 34.5192, 0.55", "-59.0028, 5.69463, 34.4061, 0.83", "-60.4144, 3.09363, 34.2684, 0.55", "-61.2346, 1.03671, 34.1472, 0.55", "-61.8937, -1.06274, 34.0043, 0.55", "-62.1494, -2.1942, 33.9183, 0.83", "-62.6323, -5.13554, 33.6513, 0.55", "-63.0504, -8.60161, 33.3138, 0.28", "-63.5683, -13.6293, 32.8278, 0.28", "-63.7823, -15.7449, 32.5525, 0.83", "-64.188, -19.9006, 31.9595, 0.28", "-64.3366, -21.3572, 31.7613, 0.83", "-64.4367, -22.2649, 31.6468, 0.28", "-64.552, -23.6955, 31.4414, 0.83", "-64.7947, -26.5468, 31.032, 0.28", "-64.9348, -27.6352, 30.9059, 0.55", "-65.3898, -30.08, 30.6845, 0.28", "-65.6907, -31.4896, 30.5684, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "11.0567, 31.1603, 12.6383, 0.83", "11.2136, 32.4238, 10.8345, 0.83", "11.4441, 34.025, 8.8045, 0.83", "11.6225, 35.0461, 7.64433, 0.83", "13.0056, 41.2025, 1.34527, 0.55", "13.4984, 42.9031, -0.165847, 0.55", "13.8249, 43.8252, -0.872041, 0.55", "14.3109, 45.006, -1.67278, 0.55", "14.8793, 46.1811, -2.24883, 1.11", "15.63, 47.5645, -2.58213, 0.55", "17.0493, 49.9044, -2.59982, 0.55", "18.266, 52.0053, -2.53065, 0.55", "19.0538, 53.3714, -2.43796, 0.55", "20.0319, 55.0885, -2.18362, 0.83", "21.1373, 57.1717, -1.74594, 0.55", "21.9083, 58.8283, -1.32823, 1.11", "22.6553, 60.5507, -0.822422, 0.55", "23.3632, 62.2417, -0.295035, 0.83", "24.5457, 65.1848, 0.599244, 0.55", "25.1527, 66.7299, 1.04044, 0.55", "25.9533, 68.8697, 1.59578, 0.55", "26.5806, 70.5547, 1.92858, 0.55", "26.9562, 71.6028, 2.08654, 0.28", "27.6988, 73.6895, 2.29491, 0.55", "28.2447, 75.2642, 2.36422, 0.28", "28.7615, 76.6965, 2.39364, 0.55", "29.7446, 79.3916, 2.40394, 0.55", "30.2637, 80.9103, 2.39766, 0.55", "30.9809, 83.0231, 2.36107, 0.28", "31.545, 85.2131, 1.76544, 0.83", "31.9572, 87.133, 0.947181, 0.28", "32.0431, 87.5561, 0.705422, 0.55", "32.2289, 88.504, -0.0445001, 0.28", "32.3423, 89.0808, -0.592418, 0.83", "33.7345, 95.9522, -7.912, 0.55", "34.3453, 98.4903, -10.7317, 0.55", "34.5522, 99.2596, -11.5643, 0.83", "35.156, 101.061, -13.2287, 0.55", "35.5184, 101.948, -13.8566, 0.55", "36.0175, 103.007, -14.1101, 0.83", "36.6949, 104.335, -13.7797, 0.28", "36.9565, 105.054, -13.6723, 0.55", "37.5518, 107.077, -13.193, 0.28", "37.8962, 108.399, -12.6935, 0.55", "38.1768, 109.545, -12.2716, 0.28", "38.3239, 110.687, -11.9525, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.0567, 31.1603, 12.6383, 0.55", "12.3701, 30.6651, 13.3892, 0.55", "14.3411, 29.9221, 14.516, 0.28", "15.3753, 29.5322, 15.1072, 0.55", "17.2749, 28.8161, 16.1933, 0.55", "19.7585, 27.8797, 17.6132, 0.55", "21.1165, 27.3678, 18.3896, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "14.7125, -31.9869, -23.9993, 0.55", "11.9758, -29.8598, -25.8562, 0.55", "11.2332, -29.2669, -26.714, 0.83", "9.56314, -27.9282, -28.8665, 0.55", "8.86958, -27.4044, -29.741, 0.55", "5.87652, -25.4679, -34.3498, 0.28", "5.26167, -25.1293, -35.3364, 0.83", "2.91564, -24.1182, -39.7968, 0.55", "2.6677, -24.0376, -40.2899, 0.55", "2.01074, -23.8923, -41.6438, 0.83", "-0.950458, -23.4229, -47.5829, 0.55", "-1.53533, -23.3664, -48.7016, 0.55", "-2.18587, -23.3108, -49.9858, 0.83", "-3.55759, -23.1397, -52.9241, 0.55", "-3.83019, -23.0656, -53.5642, 0.55", "-4.2884, -22.8446, -54.8091, 0.55", "-6.03976, -21.5704, -59.8912, 0.28", "-6.47998, -21.1781, -61.3235, 0.83", "-7.90451, -19.672, -66.1948, 0.55", "-8.25011, -19.2182, -67.4533, 0.83", "-9.94845, -16.5497, -73.7863, 0.55", "-10.3634, -15.6541, -75.5854, 0.28", "-10.578, -15.0495, -76.6402, 0.83", "-10.8854, -13.9029, -78.4497, 0.55", "-11.0585, -12.9589, -79.7123, 0.83", "-11.2619, -10.6494, -82.514, 0.55", "-11.2095, -7.11305, -86.0681, 0.28", "-11.174, -6.57347, -86.594, 0.55", "-11.0319, -5.13914, -87.9617, 0.28", "-10.9596, -4.55784, -88.5125, 0.55", "-10.6908, -2.58892, -90.3334, 0.28", "-10.5757, -1.89567, -90.9444, 0.55", "-10.2348, 0.27766, -92.8432, 0.28", "-10.1153, 1.08023, -93.5895, 0.55", "-9.91415, 2.85453, -95.2567, 0.28", "-9.89035, 3.25385, -95.6364, 0.55", "-9.83965, 4.85597, -97.0614, 0.28", "-9.82755, 5.41126, -97.5484, 0.55", "-9.86295, 7.13771, -98.9967, 0.28", "-9.93635, 7.99578, -99.8178, 0.55", "-10.2917, 10.4966, -102.232, 0.28", "-10.4894, 11.5152, -103.253, 0.55", "-11.1252, 14.3115, -106.415, 0.28", "-11.317, 15.1558, -107.45, 0.55", "-11.8785, 17.8635, -111.225, 0.28", "-12.0737, 18.7621, -112.596, 0.28", "-12.3095, 19.8078, -114.287, 0.55", "-12.7905, 21.6111, -117.213, 0.28", "-12.8799, 21.9499, -117.717, 0.55", "-13.2653, 23.3942, -120.061, 0.28", "-13.459, 24.0862, -121.176, 0.83", "-13.9107, 25.4933, -123.44, 0.55", "-14.1941, 26.4067, -124.91, 0.55", "-14.6679, 28.0473, -127.436, 0.55", "-15.7124, 32.1195, -133.98, 0.83", "-16.0205, 33.5221, -136.344, 0.28", "-16.1457, 34.2618, -137.657, 0.55", "-16.4325, 36.993, -142.869, 0.55", "-16.4346, 37.7115, -144.271, 0.55", "-16.3098, 40.0197, -149.037, 0.83", "-16.1914, 41.49, -152.267, 0.28", "-16.1698, 42.2398, -154.454, 0.55", "-16.1553, 42.823, -157.16, 0.28", "-16.1561, 42.9549, -158.338, 0.83", "-16.2741, 43.1888, -164.999, 0.55", "-16.3586, 43.0937, -167.562, 0.55", "-16.7175, 42.6167, -173.411, 0.55", "-17.673, 41.8071, -182.073, 0.55", "-17.9656, 41.6075, -184.081, 0.55", "-18.8171, 41.1262, -189.115, 0.55", "-19.8324, 40.6937, -194.369, 0.55", "-20.7244, 40.4326, -198.448, 0.55", "-22.3221, 40.1082, -204.554, 0.55", "-24.1656, 39.9098, -210.725, 0.55", "-24.5871, 39.8864, -212.107, 0.55", "-26.4354, 39.746, -218.162, 0.55", "-26.8872, 39.708, -219.618, 0.28", "-26.9926, 39.6931, -219.971, 0.55", "-31.095, 38.7669, -233.708, 0.28", "-31.4847, 38.67, -234.945, 0.83", "-33.8079, 37.9687, -242.228, 0.28", "-33.9604, 37.9206, -242.694, 0.55", "-35.0847, 37.6023, -246.091, 0.28", "-35.5556, 37.4667, -247.467, 0.55", "-36.64, 37.0862, -250.049, 0.28", "-37.0061, 36.9475, -250.943, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "14.7125, -31.9869, -23.9993, 0.55", "16.1509, -32.2408, -25.4517, 0.55", "17.3575, -32.4423, -26.5438, 0.55", "20.0567, -32.8688, -29.1124, 0.83", "20.7732, -33.0118, -29.8067, 0.83", "21.6066, -33.2013, -30.6116, 0.83", "22.3088, -33.3596, -31.2701, 0.83", "23.5514, -33.6352, -32.396, 0.83", "25.6205, -34.1595, -34.2922, 0.83", "26.9004, -34.4519, -35.3868, 0.83", "28.3024, -34.7203, -36.6336, 0.83", "29.8685, -34.9747, -38.0134, 0.83", "31.297, -35.1791, -39.2647, 0.83", "33.6192, -35.4968, -41.2233, 0.83", "35.0629, -35.653, -42.3692, 0.83", "36.913, -35.7641, -43.8314, 0.83", "38.1026, -35.7999, -44.7799, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "22.0276, -47.5943, 4.65815, 0.55", "23.4906, -47.4871, 5.98156, 0.55", "24.6955, -47.4834, 7.11216, 0.28", "25.45, -47.5495, 7.84642, 0.55", "26.7221, -47.7165, 9.10546, 1.11", "28.9741, -48.1395, 11.5046, 0.55", "29.8191, -48.3331, 12.4601, 0.55", "30.7253, -48.614, 13.5773, 0.83", "31.6665, -48.9379, 14.7997, 0.28", "31.6665, -48.9379, 14.7997, 0.83", "33.1816, -49.8404, 17.0258, 0.28", "33.5843, -50.1217, 17.632, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "22.0276, -47.5943, 4.65815, 0.83", "23.4725, -49.6621, 4.47374, 0.83", "24.8225, -51.1862, 4.14023, 0.55", "25.7579, -52.0334, 3.79854, 0.83", "26.5211, -52.7247, 3.51975, 0.83", "27.5789, -53.6827, 3.13335, 0.83", "28.5079, -54.5241, 2.794, 0.83", "30.4855, -55.873, 1.93473, 0.83", "31.9964, -56.7221, 1.1343, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-48.048, -32.7447, 20.3341, 0.55", "-49.1383, -30.6085, 18.9228, 0.55", "-50.5005, -27.6524, 17.0015, 0.83", "-52.3701, -23.5387, 14.218, 0.55", "-53.1992, -21.5298, 12.9292, 0.55", "-54.3296, -18.5799, 11.1088, 1.11", "-55.3071, -15.9431, 9.54329, 0.83", "-56.2764, -13.1551, 7.93041, 0.55", "-56.6465, -12.0091, 7.3, 0.55", "-57.6486, -9.17741, 5.98859, 0.55", "-57.8575, -8.60289, 5.72379, 1.11", "-58.4366, -7.15944, 5.35663, 0.55", "-59.1583, -5.64978, 5.41754, 0.83", "-59.9646, -4.21265, 5.7808, 0.55", "-61.0019, -2.52872, 6.3366, 0.55", "-61.8151, -1.34371, 6.72657, 0.83", "-65.6553, 4.23374, 7.8517, 0.55", "-66.6763, 5.77656, 8.01287, 0.83", "-67.9939, 7.75713, 8.00401, 0.55", "-69.4435, 9.79241, 7.799, 0.55", "-70.821, 11.6426, 7.30823, 1.11", "-73.3277, 15.078, 5.9145, 0.55", "-74.1091, 16.1872, 5.34619, 0.55", "-76.0614, 19.134, 3.82192, 0.55", "-77.2827, 21.0677, 2.81048, 0.55", "-78.8434, 23.5791, 1.57527, 1.11", "-80.6096, 26.3948, 0.309659, 0.55", "-81.7175, 28.1288, -0.325011, 1.11", "-83.1252, 30.2829, -1.08298, 0.28", "-83.623, 31.0391, -1.30506, 0.55", "-84.4686, 32.266, -1.58435, 0.28", "-85.6821, 33.8605, -1.76643, 0.83", "-87.6767, 36.2075, -1.89552, 0.28", "-88.4339, 37.0848, -1.87678, 0.55", "-91.6069, 40.6936, -1.54462, 0.28", "-92.8064, 42.09, -1.37987, 0.83", "-94.5027, 44.1251, -1.13829, 0.55", "-96.207, 46.2166, -0.898016, 0.55", "-97.9211, 48.3485, -0.706782, 0.55", "-99.2029, 50.0207, -0.581218, 0.83", "-100.666, 52.0311, -0.499678, 0.28", "-102.017, 54.0135, -0.470374, 0.55", "-103.564, 56.6265, -0.615787, 0.55", "-103.825, 57.1626, -0.669727, 0.83", "-104.815, 59.5739, -1.25097, 0.28", "-105.219, 60.946, -1.7039, 0.55", "-105.462, 62.0588, -2.26088, 0.28", "-105.874, 64.2441, -3.79505, 0.55", "-106.212, 66.4897, -5.67967, 0.55", "-106.686, 69.6396, -8.54538, 0.28", "-106.938, 71.6493, -10.8556, 0.83", "-107.217, 74.4657, -14.4985, 0.55", "-107.359, 76.4631, -17.2866, 0.55", "-107.427, 77.2904, -18.4962, 0.55", "-107.561, 78.5129, -20.4723, 0.83", "-108.069, 81.8822, -25.8544, 0.28", "-108.22, 82.5623, -26.9856, 0.83", "-108.498, 83.5234, -28.4518, 0.28", "-108.876, 84.5337, -29.8035, 0.55", "-110.318, 86.9943, -32.825, 0.83", "-110.99, 87.8436, -33.3932, 0.83", "-112.303, 89.3313, -33.549, 0.28", "-112.965, 90.072, -33.4443, 0.55", "-114.531, 91.8747, -32.8753, 0.28", "-115.622, 93.304, -32.3165, 0.55", "-118.468, 97.5203, -29.6432, 0.28", "-119.011, 98.3866, -29.0135, 0.55", "-119.802, 99.8286, -27.9523, 0.28", "-120.381, 101.007, -27.0637, 0.83", "-121.273, 102.978, -25.5557, 0.83", "-123.573, 108.75, -21.3993, 0.28", "-123.876, 109.619, -20.8388, 0.55", "-124.855, 112.681, -18.9572, 0.28", "-125.372, 114.435, -17.9453, 0.83", "-125.888, 116.348, -16.932, 0.28", "-126.286, 117.925, -16.2397, 0.83", "-127.049, 121.284, -15.3222, 0.28", "-127.366, 122.81, -15.0096, 0.83", "-127.907, 125.648, -14.6926, 0.28", "-128.223, 127.341, -14.771, 0.55", "-128.526, 129.069, -15.118, 0.28", "-128.859, 131.018, -15.9448, 0.55", "-129.263, 133.335, -17.3447, 0.28", "-129.422, 134.283, -18.0377, 0.83", "-129.807, 136.586, -19.9138, 0.28", "-130.12, 138.244, -21.5865, 0.83", "-130.678, 141.171, -24.7155, 0.28", "-130.848, 142.089, -25.8872, 0.83", "-131.123, 143.673, -28.2011, 0.28", "-131.213, 144.273, -29.2489, 0.83", "-131.648, 147.686, -35.741, 0.28", "-131.815, 148.945, -38.5011, 0.83", "-132.136, 151.743, -45.0727, 0.28", "-132.203, 152.714, -47.5795, 0.83", "-132.312, 154.415, -52.3, 0.28", "-132.346, 154.928, -53.8211, 0.55", "-132.52, 156.505, -58.1982, 0.28", "-132.619, 157.028, -59.5927, 0.28", "-133.007, 158.433, -62.6392, 0.55", "-134.06, 160.522, -67.1484, 0.28", "-134.988, 161.956, -70.1917, 0.83", "-135.89, 163.2, -73.1672, 0.28", "-136.366, 163.809, -74.6394, 0.55", "-137.203, 164.818, -76.8199, 0.28", "-141.437, 169.761, -86.0581, 0.28", "-141.938, 170.364, -87.0676, 0.83", "-145.237, 174.428, -93.4155, 0.28", "-145.588, 174.872, -94.137, 0.83", "-149.514, 180.276, -101.864, 0.28", "-149.854, 180.878, -102.382, 0.55", "-151.132, 184.107, -102.39, 0.28", "-151.532, 185.082, -102.486, 0.55", "-152.19, 186.546, -102.534, 0.28", "-152.71, 187.731, -103.357, 0.55", "-153.489, 189.514, -105.314, 0.28", "-153.858, 190.353, -106.25, 1.11", "-154.876, 192.259, -108.281, 0.28", "-155.314, 193.016, -109.179, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-48.048, -32.7447, 20.3341, 0.55", "-51.1042, -34.3618, 20.7019, 0.55", "-52.465, -34.995, 20.8922, 0.55", "-54.5612, -35.8908, 21.259, 0.83", "-56.7034, -36.8104, 21.6641, 0.55", "-58.4826, -37.6726, 22.1091, 0.55", "-59.3079, -38.1231, 22.3471, 0.83", "-60.4795, -38.8754, 22.8082, 0.55", "-62.4518, -40.287, 23.9647, 0.55", "-63.4037, -41.0759, 24.7015, 0.55", "-65.0576, -42.6736, 26.2347, 0.55", "-65.7545, -43.4412, 27.0221, 0.28", "-67.2612, -45.2846, 28.9438, 0.83", "-68.9532, -47.4583, 31.4054, 0.55", "-69.2495, -47.8372, 31.8693, 0.55", "-70.2104, -48.9686, 33.3207, 0.83", "-71.4063, -50.1784, 34.9321, 0.55", "-72.3078, -51.0073, 36.0684, 0.83", "-74.8461, -53.1461, 38.7804, 0.55", "-76.0439, -54.0942, 39.7918, 0.83", "-77.5844, -55.1995, 40.8927, 0.28", "-78.8358, -55.9845, 41.598, 0.55", "-80.2589, -56.7786, 42.1533, 0.55", "-82.3945, -57.875, 42.7238, 0.28", "-83.3434, -58.3312, 42.8357, 0.28", "-84.1691, -58.7027, 42.9102, 0.55", "-86.3909, -59.8093, 43.128, 0.28", "-87.2103, -60.2974, 43.2987, 0.55", "-87.608, -60.5646, 43.3958, 0.28", "-88.6514, -61.3395, 43.7562, 0.28", "-89.3448, -61.8605, 44.0016, 0.55", "-90.7173, -62.9755, 44.4944, 0.28", "-92.0952, -64.231, 44.9632, 0.55", "-93.7899, -65.771, 45.5858, 0.28", "-95.0587, -66.9685, 46.0786, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-76.3685, 8.13779, 27.9623, 0.28", "-79.6347, 10.9425, 27.8124, 0.28", "-80.512, 11.8051, 27.7711, 0.55", "-82.3989, 13.7124, 27.7085, 0.28", "-82.8162, 14.1765, 27.7052, 0.55", "-86.7124, 18.8439, 27.7681, 0.28", "-89.7375, 22.5529, 27.9694, 0.28", "-91.5015, 24.989, 28.1855, 0.28", "-92.745, 26.8533, 28.4014, 0.55", "-95.5026, 31.3036, 28.8217, 0.28", "-96.5197, 32.9819, 29.0189, 0.55", "-98.079, 35.6726, 29.4544, 0.28", "-98.8835, 37.2063, 29.7308, 0.55", "-100.139, 39.7455, 30.2247, 0.28", "-101.69, 43.2634, 30.8552, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-76.3685, 8.13779, 27.9623, 0.28", "-73.5021, 7.43361, 26.4921, 0.28", "-72.7039, 7.26201, 25.9974, 0.83", "-68.8746, 6.67412, 23.8627, 0.28", "-68.4752, 6.61832, 23.6529, 0.83", "-64.9557, 6.18616, 22.0895, 0.28", "-63.9135, 6.05804, 21.6777, 0.83", "-57.0793, 5.37668, 19.249, 0.28", "-53.2219, 5.02072, 18.0397, 0.28", "-52.3743, 4.95501, 17.8274, 1.11", "-47.9436, 4.61816, 16.9524, 0.28", "-46.6401, 4.50301, 16.6984, 0.55", "-41.8631, 4.02245, 15.6974, 0.28", "-39.6408, 3.74764, 15.2537, 0.28", "-38.2542, 3.54218, 14.903, 0.55", "-36.1683, 3.22867, 14.3007, 0.28", "-30.0328, 2.10748, 12.0634, 0.28", "-26.82, 1.47557, 10.8247, 0.28", "-26.1239, 1.28434, 10.5442, 0.83", "-24.6158, 0.78465, 9.92443, 0.28", "-24.6158, 0.78465, 9.92443, 0.83", "-21.3387, -0.46387, 8.7167, 0.28", "-20.497, -0.864954, 8.5332, 0.83", "-18.0155, -2.39078, 7.75096, 0.28", "-16.5166, -3.3803, 7.22219, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-31.3031, 49.0105, -23.7042, 0.28", "-32.4779, 47.4904, -24.4897, 0.28", "-33.3953, 46.2998, -25.222, 0.83", "-34.3924, 44.9975, -26.0033, 0.55", "-35.4253, 43.6577, -26.9777, 1.11", "-38.2436, 39.8218, -30.0538, 0.28", "-38.4412, 39.5583, -30.302, 0.83", "-39.3336, 38.3658, -31.6417, 0.83", "-39.8831, 37.6182, -32.5591, 0.83", "-41.8997, 34.8874, -36.1464, 0.28", "-42.4213, 34.1965, -37.0529, 0.83", "-44.3425, 31.8977, -40.5659, 0.28", "-44.6884, 31.4939, -41.2368, 0.55", "-45.2836, 30.8135, -42.4279, 0.55", "-45.8973, 30.1196, -43.709, 0.55", "-46.7014, 29.2405, -45.3391, 1.11", "-49.9725, 25.7399, -52.5384, 0.55", "-50.4249, 25.2341, -53.6548, 0.28", "-50.5577, 25.0996, -53.9956, 0.55", "-51.4458, 24.2929, -56.2712, 0.28", "-51.8092, 23.9485, -57.29, 0.83", "-53.892, 21.9412, -63.4439, 0.28", "-53.9865, 21.852, -63.7065, 0.55", "-56.1087, 19.8727, -69.5569, 0.28", "-56.482, 19.495, -70.6142, 0.55", "-57.5725, 18.3519, -73.5466, 0.28", "-57.7629, 18.1384, -74.051, 0.83", "-58.6844, 17.0456, -76.3346, 0.28", "-59.1439, 16.4915, -77.4643, 0.83", "-61.3578, 13.5722, -82.8765, 0.28", "-61.9144, 12.8623, -84.0991, 0.83", "-64.1403, 10.129, -88.4865, 0.55", "-64.4225, 9.77171, -89.0295, 0.83", "-65.9664, 7.73701, -91.9289, 0.28", "-66.4472, 7.08529, -92.7728, 0.55", "-68.401, 4.33243, -95.9449, 0.28", "-69.0957, 3.31906, -97.0823, 0.83", "-72.4961, -1.75259, -102.246, 0.28", "-72.6667, -2.01126, -102.506, 0.83", "-73.7, -3.65408, -104.081, 0.28", "-73.9623, -4.06519, -104.501, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-31.3031, 49.0105, -23.7042, 0.55", "-32.4837, 51.4327, -23.9653, 0.55", "-33.3562, 53.2739, -24.2086, 0.55", "-34.238, 55.2308, -24.581, 0.28", "-34.8111, 56.5301, -24.859, 1.38", "-35.6521, 58.4339, -25.3456, 0.55", "-36.5963, 60.5615, -25.9215, 0.55", "-37.0154, 61.4632, -26.1566, 0.83", "-37.7491, 63.0787, -26.6299, 0.28", "-38.1329, 64.0091, -26.9111, 0.55", "-38.7689, 65.6471, -27.3575, 0.28", "-39.2284, 66.8256, -27.6029, 0.83", "-40.146, 69.2205, -27.8676, 0.28", "-40.5976, 70.5134, -28.0088, 0.55", "-41.08, 72.0658, -28.1494, 0.28", "-41.4081, 73.3974, -28.3214, 0.83", "-41.8639, 75.9127, -28.6765, 0.28", "-42.1679, 78.1658, -29.1111, 0.83", "-42.4854, 81.9956, -29.9773, 0.28", "-42.5295, 83.3347, -30.308, 0.83", "-42.5271, 87.041, -31.4774, 0.28", "-42.4641, 88.7727, -32.1079, 0.83", "-42.3289, 90.9159, -32.9585, 0.28", "-42.2123, 92.6135, -33.6871, 0.55", "-42.0968, 94.3094, -34.4073, 0.83", "-41.9577, 98.0435, -36.0099, 0.28", "-41.973, 99.4896, -36.6059, 0.83", "-42.0723, 101.433, -37.3976, 0.83", "-42.266, 103.355, -38.1396, 0.28", "-42.5575, 104.819, -38.7597, 0.83", "-42.9736, 106.265, -39.3449, 0.28", "-43.3398, 107.279, -39.698, 0.55", "-43.6708, 108.008, -39.9673, 0.28", "-44.4952, 109.479, -40.4608, 0.55", "-46.201, 112.16, -41.1431, 0.28", "-46.9059, 113.097, -41.3741, 0.55", "-47.7434, 114.091, -41.5953, 0.28", "-48.7104, 115.143, -41.8026, 0.83", "-50.0291, 116.468, -41.9926, 0.28", "-51.3569, 117.742, -42.0892, 0.83", "-53.3633, 119.615, -42.0798, 0.28", "-54.1492, 120.366, -42.1062, 0.83", "-55.0494, 121.263, -42.149, 0.28", "-56.2051, 122.521, -42.2287, 0.28", "-56.7002, 123.148, -42.3237, 0.55", "-57.7658, 124.796, -42.6782, 0.28", "-58.5322, 126.302, -43.2107, 0.55", "-58.9212, 127.191, -43.6153, 0.55", "-59.4478, 128.538, -44.305, 0.83", "-60.3965, 131.035, -45.8218, 0.28", "-61.0698, 132.865, -47.0452, 0.83", "-61.9903, 135.433, -49.008, 0.28", "-62.3407, 136.375, -49.7934, 0.28", "-62.8008, 137.693, -50.9182, 0.83", "-63.6313, 140.193, -53.1248, 0.28", "-63.9434, 141.116, -53.9116, 0.83", "-65.0464, 144.513, -56.6744, 0.28", "-65.5879, 146.163, -57.9913, 1.11", "-66.6207, 149.415, -60.6184, 0.28", "-67.011, 150.795, -61.7359, 0.55", "-67.338, 152.082, -62.6837, 0.28", "-67.6017, 153.131, -63.3935, 0.55", "-68.2219, 155.893, -65.0759, 0.28", "-68.4743, 157.002, -65.8267, 0.55", "-68.8799, 158.698, -67.0291, 0.28", "-69.1162, 159.811, -67.8905, 0.55", "-69.3526, 161.159, -68.9894, 0.28", "-69.6547, 163.162, -70.6465, 0.55", "-70.1524, 166.854, -73.5101, 0.28", "-70.3361, 168.385, -74.7443, 0.55", "-70.5658, 170.574, -76.5142, 0.28", "-70.6485, 171.799, -77.5451, 0.83", "-70.694, 173.471, -78.9104, 0.28", "-70.6906, 174.675, -79.913, 0.83", "-70.6422, 176.755, -81.6132, 0.28", "-70.6189, 177.698, -82.4638, 0.55", "-70.5578, 179.028, -83.7079, 0.28", "-70.4684, 180.156, -84.8168, 0.55", "-70.2462, 183.419, -87.8973, 0.28", "-70.1982, 184.543, -88.9127, 0.28", "-70.2731, 186.99, -90.8604, 0.55", "-70.4143, 189.011, -92.3009, 0.28", "-70.5553, 190.091, -92.9642, 0.55", "-71.1485, 192.91, -94.4003, 0.28", "-71.7032, 194.473, -94.966, 0.83", "-72.7854, 196.668, -95.5867, 0.28", "-73.2415, 197.315, -95.7269, 0.55", "-74.0939, 198.245, -95.9227, 0.28", "-75.0058, 199.086, -96.1495, 0.55", "-77.1337, 200.724, -96.6675, 0.28", "-77.6314, 201.074, -96.7675, 0.55", "-80.7733, 203.274, -97.4764, 0.28", "-81.552, 203.891, -97.6693, 0.55", "-82.5974, 204.862, -97.9186, 0.28", "-83.6283, 205.9, -98.1744, 0.55", "-85.2358, 207.758, -98.5717, 0.28", "-86.1935, 208.967, -98.7798, 0.55", "-88.0643, 211.825, -98.8683, 0.28", "-88.7309, 213.0, -98.8885, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.04868, 83.9791, -28.0654, 0.55", "-3.66595, 85.1683, -29.6659, 0.55", "-2.29177, 87.0162, -33.2233, 0.55", "-1.90959, 87.7813, -34.9698, 0.83", "-1.64933, 88.405, -36.4866, 0.83", "-1.02935, 90.1688, -40.886, 0.28", "-0.799487, 90.8364, -42.5121, 0.83", "-0.67035, 93.2643, -49.2965, 0.55", "-0.824127, 93.7953, -50.9584, 0.28", "-0.959957, 94.0383, -51.7824, 0.28", "-1.29068, 94.4384, -53.1986, 0.55", "-1.74816, 94.9279, -54.8426, 0.55", "-3.33748, 96.7044, -60.2281, 0.28", "-4.00325, 97.5831, -62.5704, 0.83", "-5.34254, 99.5426, -67.491, 0.83", "-6.44096, 101.291, -71.7101, 0.83", "-7.75223, 103.542, -77.0321, 0.28", "-8.16033, 104.334, -78.84, 0.28", "-8.30552, 104.784, -79.7488, 0.55", "-8.59686, 106.812, -83.5502, 0.28", "-8.58738, 107.121, -84.0828, 0.55", "-8.22186, 109.105, -87.5434, 0.28", "-8.10763, 109.737, -88.9808, 0.55", "-8.01425, 110.267, -90.4566, 0.28", "-7.97831, 110.458, -91.0455, 0.55", "-7.65869, 111.622, -95.1835, 0.28", "-7.52573, 111.949, -96.4224, 0.55", "-6.65625, 113.458, -103.004, 0.28", "-6.38053, 113.883, -104.867, 0.28", "-6.05048, 114.331, -106.746, 0.55", "-5.35949, 115.279, -110.762, 0.28", "-5.10911, 115.578, -111.991, 0.55", "-4.03619, 116.78, -116.941, 0.28", "-3.44091, 117.365, -119.35, 0.28", "-2.92808, 117.87, -121.507, 0.83", "-0.990887, 119.545, -128.933, 0.28", "-0.444287, 119.963, -130.826, 0.28", "0.379083, 120.523, -133.373, 0.55", "1.16657, 121.006, -135.458, 0.28", "1.72701, 121.289, -136.952, 0.55", "2.31198, 121.55, -138.334, 0.28", "2.776, 121.738, -138.982, 0.55", "3.86785, 122.24, -140.527, 0.28", "5.55354, 123.199, -142.472, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.04868, 83.9791, -28.0654, 0.55", "-5.28151, 86.8308, -27.4836, 0.55", "-5.28679, 88.7411, -27.0212, 0.55", "-5.28477, 89.5529, -26.8197, 0.55", "-5.27148, 90.8482, -26.5092, 0.55", "-5.26947, 91.9349, -26.2929, 0.55", "-5.25132, 94.5456, -25.7807, 0.28", "-5.23061, 95.466, -25.5949, 0.55", "-5.13244, 96.7624, -25.2598, 0.55", "-5.09324, 97.395, -25.0516, 0.83", "-5.05949, 98.84, -24.5021, 0.28", "-5.05248, 100.056, -24.0413, 0.83", "-5.09204, 102.272, -23.1856, 0.28", "-5.08758, 102.531, -23.0607, 0.83", "-4.93418, 104.514, -21.9656, 0.55", "-4.82713, 105.421, -21.413, 0.55", "-4.63016, 106.755, -20.5731, 0.83", "-4.21314, 109.187, -19.0158, 0.55", "-3.84823, 111.053, -17.8148, 0.83", "-3.63802, 111.999, -17.1937, 0.28", "-3.43719, 112.825, -16.6921, 0.83", "-3.14635, 114.052, -15.9544, 0.83", "-2.71269, 116.204, -14.7097, 0.83", "-2.45237, 117.983, -13.9021, 0.28", "-2.39611, 118.588, -13.6571, 0.83", "-2.25573, 120.425, -12.881, 0.83", "-2.14799, 122.038, -12.1794, 0.28", "-2.08882, 122.881, -11.7879, 0.55", "-2.00719, 124.55, -11.0644, 0.28", "-1.98891, 126.285, -10.2463, 0.55", "-2.00107, 128.57, -9.0682, 0.28", "-2.01236, 129.088, -8.77285, 0.83", "-2.042, 130.133, -8.18824, 0.28", "-2.07084, 131.391, -7.44571, 0.55", "-2.04362, 133.238, -6.23243, 0.28", "-2.03186, 133.591, -6.01558, 0.55", "-1.98877, 134.355, -5.52442, 0.28", "-1.89301, 135.161, -4.94445, 0.83", "-1.68343, 136.22, -4.15076, 0.28", "-1.32559, 137.536, -3.11495, 0.55", "-1.03516, 138.439, -2.32109, 0.28", "-0.862447, 138.998, -1.85154, 0.83", "-0.486242, 140.175, -0.923343, 0.83", "-0.116534, 141.355, -0.0680142, 0.55", "0.0889281, 141.993, 0.335129, 0.83", "1.18427, 145.541, 2.30381, 0.55", "1.57178, 146.868, 2.92615, 0.83", "2.77488, 151.186, 4.50789, 0.28", "2.97924, 152.088, 4.66678, 0.55", "3.33103, 153.846, 4.67355, 0.28", "3.52992, 154.885, 4.56241, 0.83", "3.86432, 156.974, 3.95323, 0.28", "4.01202, 158.219, 3.45368, 0.55", "4.16418, 161.595, 1.29224, 0.28", "4.18241, 163.073, 0.282764, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-11.0979, 286.601, 9.15761, 0.55", "-10.9835, 289.097, 9.17278, 0.55", "-10.9683, 292.073, 9.1378, 0.55", "-10.9808, 294.931, 9.09759, 0.83", "-11.0094, 296.907, 9.08168, 0.55", "-11.0529, 299.362, 9.09296, 1.11", "-11.0806, 303.126, 9.15833, 0.55", "-11.0701, 305.792, 9.24638, 1.11", "-10.9936, 307.811, 9.28828, 0.83", "-10.7854, 309.713, 9.33821, 0.55", "-10.2663, 312.207, 9.44868, 0.55", "-9.55975, 314.359, 9.56965, 0.83", "-8.44171, 316.606, 9.66913, 0.55", "-7.00687, 318.821, 9.71001, 0.83", "-5.71014, 320.497, 9.71726, 0.83", "-4.47693, 321.873, 9.7004, 0.83", "-3.39989, 322.97, 9.69359, 1.11", "-1.06739, 325.265, 9.613, 0.83", "-0.0692779, 326.26, 9.57436, 0.55", "1.50761, 327.861, 9.56833, 0.83", "3.79442, 330.339, 9.55174, 0.55", "5.23834, 331.885, 9.55612, 1.11", "7.40087, 334.232, 9.61317, 0.55", "8.1354, 335.065, 9.67188, 0.55", "9.12908, 336.236, 9.75915, 0.55", "11.3058, 339.062, 10.0241, 0.55", "12.1101, 340.243, 10.1833, 0.28", "12.5846, 341.053, 10.3119, 0.55", "13.3743, 342.616, 10.6233, 0.28", "13.9994, 344.0, 10.8705, 0.83", "15.0595, 346.617, 11.2985, 0.55", "15.3924, 347.493, 11.4548, 0.83", "16.0721, 349.381, 11.7538, 0.55", "16.5151, 350.604, 11.9214, 0.83", "17.8666, 354.328, 12.3712, 0.28", "18.7821, 356.793, 12.6212, 0.83", "19.7459, 359.34, 12.8439, 0.28", "20.5891, 361.587, 13.0166, 0.55", "21.4525, 363.961, 13.1747, 0.55", "22.1712, 366.115, 13.2364, 0.55", "22.5191, 367.312, 13.2223, 0.28", "22.8111, 368.47, 13.1774, 0.55", "23.2573, 370.712, 13.0507, 0.28", "23.4851, 372.037, 12.8988, 0.55", "23.8496, 374.451, 12.4871, 0.28", "24.0781, 376.093, 12.1643, 0.28", "24.3857, 378.39, 11.6828, 0.83", "24.6479, 380.45, 11.2134, 0.83", "25.1459, 384.381, 10.317, 0.55", "25.4483, 386.586, 9.86496, 0.55", "25.6784, 388.015, 9.64781, 0.55", "25.853, 388.829, 9.52788, 0.28", "26.14, 389.975, 9.37815, 0.55", "26.4162, 390.949, 9.30326, 0.28", "26.676, 391.861, 9.22468, 1.11", "27.4295, 394.623, 8.71799, 0.55", "27.8869, 396.637, 8.22656, 0.55", "28.2352, 398.407, 7.67184, 0.28", "28.4082, 399.41, 7.2679, 0.83", "28.9063, 402.297, 5.88749, 0.55", "29.2375, 404.166, 4.91986, 0.83", "29.6168, 406.228, 3.75082, 0.83", "30.0874, 408.316, 2.5029, 0.55", "30.5391, 409.962, 1.47129, 0.28", "31.031, 411.569, 0.469789, 0.55", "31.5065, 413.045, -0.43357, 0.55", "32.172, 414.982, -1.66602, 1.11", "33.0524, 417.533, -3.24357, 0.55", "33.4128, 418.638, -3.87789, 0.55", "33.7836, 419.833, -4.58617, 0.55", "34.548, 422.654, -6.33377, 0.55", "34.9369, 424.079, -7.24545, 0.83", "35.6966, 427.097, -9.05585, 0.28", "35.9013, 428.001, -9.5727, 0.55", "36.4795, 430.581, -10.9564, 0.28", "36.7736, 431.841, -11.5851, 0.55", "37.2433, 433.819, -12.44, 0.28", "37.6375, 435.797, -13.2078, 0.55", "37.8218, 436.824, -13.5587, 0.28", "38.1068, 438.51, -14.0505, 0.55", "38.5749, 441.316, -14.6222, 0.55", "38.8435, 442.766, -14.9269, 0.28", "39.0241, 444.044, -15.2356, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-11.0979, 286.601, 9.15761, 0.55", "-12.9558, 288.444, 8.24138, 0.55", "-15.1655, 290.742, 7.28916, 1.11", "-17.6411, 293.136, 6.37214, 0.55", "-18.4429, 293.931, 6.02757, 0.83", "-20.3463, 295.87, 5.17021, 0.55", "-21.9276, 297.41, 4.4684, 0.55", "-23.1586, 298.588, 3.92017, 0.83", "-26.8127, 301.985, 2.301, 0.55", "-29.5559, 304.451, 1.21081, 0.55", "-30.5182, 305.316, 0.79565, 0.83", "-33.148, 307.633, -0.369967, 0.55", "-33.5715, 308.0, -0.567059, 0.83", "-34.9715, 309.253, -1.16282, 0.28", "-35.2012, 309.472, -1.23041, 0.55", "-36.6358, 310.79, -1.40344, 0.28", "-37.5359, 311.668, -1.45261, 0.55", "-38.5611, 312.631, -1.52982, 0.55", "-41.3484, 315.116, -1.8003, 0.55", "-43.2467, 316.816, -2.02487, 0.55", "-44.6968, 318.189, -2.3252, 0.83", "-46.6513, 320.135, -2.84575, 0.83", "-49.0735, 322.802, -3.8479, 0.55", "-50.7866, 324.833, -4.77089, 0.55", "-52.5706, 327.124, -5.96104, 1.11", "-54.459, 329.96, -7.4351, 0.55", "-54.9408, 330.789, -7.86948, 0.83", "-56.3706, 333.643, -9.20217, 0.28", "-56.9823, 335.206, -10.1404, 0.55", "-57.3416, 336.265, -10.9112, 0.28", "-57.6432, 337.31, -11.719, 0.83", "-58.1707, 339.56, -13.5038, 0.28", "-58.5868, 341.607, -15.1626, 0.83", "-59.8813, 349.598, -21.5761, 0.55", "-60.0837, 351.142, -22.8206, 0.55", "-60.2263, 352.548, -23.9336, 0.83", "-60.3788, 354.347, -25.2763, 0.28", "-60.4272, 355.229, -25.8363, 0.55", "-60.5062, 356.551, -26.4958, 0.28", "-60.6453, 358.344, -26.8796, 0.55", "-60.8883, 360.871, -27.4671, 0.55", "-61.0443, 362.313, -27.7998, 0.55", "-61.2199, 363.922, -28.1421, 0.83", "-61.467, 366.494, -28.6923, 0.28", "-61.6672, 368.656, -29.129, 0.83", "-61.8318, 371.324, -29.5969, 0.55", "-61.896, 372.388, -29.7508, 0.55", "-61.9866, 374.413, -29.9521, 0.83", "-62.0508, 375.476, -30.0032, 0.55", "-62.1961, 377.471, -29.9198, 0.83", "-62.4557, 379.302, -29.8236, 0.28", "-62.6035, 380.057, -29.8521, 0.28", "-63.121, 382.085, -30.1225, 0.28", "-63.3621, 382.96, -30.3205, 0.83", "-63.9646, 385.002, -31.0119, 0.55", "-64.6434, 387.261, -32.245, 0.83", "-65.688, 390.333, -34.3893, 0.28", "-66.056, 391.282, -35.233, 0.55", "-66.4993, 392.214, -36.3019, 0.28", "-66.8905, 392.873, -37.1228, 0.83", "-68.4467, 395.286, -40.2116, 0.83", "-68.9766, 396.058, -41.1846, 0.83", "-70.7249, 398.446, -44.0038, 0.83", "-72.8054, 401.193, -47.1449, 0.55", "-74.0911, 402.812, -48.9903, 0.55", "-75.2558, 404.278, -50.598, 0.55", "-76.5366, 405.893, -52.2586, 0.55", "-78.3574, 408.422, -54.6652, 0.55", "-79.7958, 410.526, -56.395, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "38.1026, -35.7999, -44.7799, 0.55", "39.0329, -35.3211, -45.4452, 0.55", "39.9762, -34.7875, -46.1185, 0.83", "41.9, -33.6563, -47.4848, 0.28", "42.8744, -33.0621, -48.1549, 0.83", "45.2225, -31.6076, -49.6963, 0.28", "46.0236, -31.1078, -50.1953, 0.55", "47.8209, -29.9267, -51.3622, 0.55", "49.6884, -28.6213, -52.4945, 0.55", "51.2719, -27.5005, -53.3847, 0.28", "51.9177, -27.0386, -53.7245, 0.28", "52.5648, -26.5745, -54.0429, 0.55", "53.9482, -25.619, -54.6842, 0.28", "55.8069, -24.3549, -55.391, 0.55", "58.0147, -22.773, -56.3081, 0.28", "58.5896, -22.3625, -56.5601, 0.55", "60.9316, -20.6011, -57.61, 0.28", "62.456, -19.4186, -58.3121, 0.28", "64.2077, -18.0374, -59.1703, 0.83", "66.9751, -15.75, -60.6616, 0.55", "67.6472, -15.1874, -61.0429, 0.55", "69.0163, -14.0529, -61.9171, 0.55", "70.4062, -12.9528, -62.8663, 0.83", "72.466, -11.4123, -64.2948, 0.28", "73.0912, -10.9886, -64.6946, 0.55", "74.7106, -10.025, -65.4845, 0.28", "75.0069, -9.86236, -65.6195, 0.55", "76.3719, -9.23951, -66.1456, 0.55", "78.3667, -8.41801, -66.714, 0.28", "79.089, -8.13518, -66.8598, 0.55", "80.8282, -7.50691, -67.1674, 0.28", "81.5359, -7.26405, -67.2633, 0.55", "83.0488, -6.81697, -67.4647, 0.28", "83.9967, -6.62312, -67.6109, 0.55", "84.5126, -6.55733, -67.6776, 0.55", "85.9505, -6.36308, -67.7982, 0.28", "86.9019, -6.21864, -67.8212, 0.28", "87.8488, -6.01403, -67.8369, 0.55", "90.1642, -5.36713, -67.8337, 0.28", "91.7943, -4.77317, -67.799, 0.55", "93.3275, -4.08968, -67.7065, 0.55", "94.7424, -3.31467, -67.5577, 0.83", "96.8369, -1.95657, -67.2283, 0.28", "97.6091, -1.36106, -67.0679, 0.28", "98.9494, -0.109048, -66.6807, 0.55", "100.261, 1.27554, -66.2219, 0.28", "100.823, 1.91264, -65.9905, 0.55", "101.681, 2.95299, -65.5548, 0.55", "102.903, 4.50106, -64.8116, 0.28", "103.633, 5.44647, -64.356, 0.55", "104.732, 6.92624, -63.6543, 0.28", "105.953, 8.62432, -62.8915, 0.55", "107.202, 10.3924, -62.1256, 0.55", "107.748, 11.194, -61.7918, 0.55", "108.816, 12.8302, -61.1738, 0.55", "109.814, 14.3596, -60.6734, 0.55", "110.817, 15.9562, -60.2184, 0.55", "111.758, 17.4853, -59.8109, 0.28", "112.26, 18.2922, -59.6333, 0.55", "113.854, 20.8362, -59.1104, 0.28", "114.902, 22.5627, -58.8292, 0.28", "115.414, 23.4415, -58.7133, 0.55", "116.325, 25.0007, -58.5342, 0.28", "117.142, 26.4094, -58.387, 0.55", "117.759, 27.4897, -58.268, 0.55", "119.423, 30.5526, -57.9076, 0.28", "120.402, 32.4703, -57.68, 0.28", "120.783, 33.2566, -57.582, 0.55", "121.518, 34.8504, -57.3675, 0.55", "122.481, 37.0051, -56.9987, 0.28", "123.212, 38.6715, -56.6858, 0.55", "123.865, 40.2055, -56.3422, 0.28", "124.376, 41.5381, -56.0406, 0.55", "124.669, 42.3408, -55.8421, 0.28", "124.862, 42.8778, -55.6557, 0.55", "125.391, 44.4179, -54.9927, 0.28", "125.656, 45.1583, -54.6068, 0.55", "126.573, 47.5713, -53.2079, 0.28", "127.233, 49.2111, -52.2029, 0.55", "128.125, 51.3642, -50.812, 0.28", "128.625, 52.5143, -50.0444, 0.55", "129.217, 53.8145, -49.1355, 0.28", "129.758, 54.9663, -48.2942, 0.55", "130.277, 56.0446, -47.4911, 0.28", "130.666, 56.8829, -46.8817, 0.55", "131.595, 58.9965, -45.4347, 0.28", "132.057, 60.0701, -44.6669, 0.55", "132.678, 61.6178, -43.5406, 0.28", "132.897, 62.1918, -43.1008, 0.55", "133.408, 63.6592, -41.962, 0.28", "133.901, 65.2216, -40.7719, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "38.1026, -35.7999, -44.7799, 0.28", "41.7807, -36.0422, -46.2542, 0.28", "42.8754, -36.1127, -46.7569, 0.55", "44.3603, -36.1183, -47.5324, 0.55", "46.6241, -36.0614, -48.7356, 0.28", "47.9682, -36.0237, -49.421, 0.55", "52.6637, -35.8122, -51.6895, 0.28", "53.9201, -35.6659, -52.2568, 0.55", "56.8888, -35.1638, -53.5156, 0.28", "58.1511, -34.8813, -54.0069, 0.28", "60.2122, -34.33, -54.6912, 0.55", "62.1287, -33.8078, -55.2154, 0.55", "66.7908, -32.5651, -56.0706, 0.28", "68.5452, -32.1935, -56.3497, 0.55", "70.5527, -31.9142, -56.6276, 0.55", "74.2587, -31.6189, -57.1467, 0.28", "76.7083, -31.6062, -57.4837, 0.55", "79.8089, -31.9135, -57.8203, 0.28", "81.4881, -32.2823, -57.9461, 0.55", "84.5975, -33.2411, -58.1064, 0.28", "85.9306, -33.8053, -58.1164, 0.55", "87.4041, -34.6045, -58.0432, 0.55", "89.3242, -35.8949, -57.7398, 0.28", "90.4209, -36.7802, -57.4681, 0.28", "91.5954, -37.9754, -57.0512, 0.55", "93.0583, -39.8393, -56.3648, 0.28", "93.2516, -40.1307, -56.255, 0.55", "94.8613, -42.9735, -55.2966, 0.28", "95.0238, -43.3127, -55.2244, 0.83", "97.0876, -47.9783, -54.6172, 0.28", "97.4812, -48.8814, -54.6774, 0.55", "98.4294, -51.1436, -55.1544, 0.28", "99.0114, -52.5614, -55.5943, 0.55", "100.361, -55.8112, -57.0235, 0.28", "100.529, -56.2236, -57.2241, 0.55", "102.501, -61.0374, -59.9204, 0.28", "102.755, -61.7001, -60.2767, 0.55", "102.92, -62.1032, -60.4953, 0.55", "103.537, -63.5764, -61.1327, 0.28", "104.057, -64.801, -61.5357, 0.55", "104.996, -66.9038, -62.0482, 0.28", "105.392, -67.7625, -62.2147, 0.55", "107.924, -72.8836, -63.354, 0.28", "108.464, -73.925, -63.5984, 0.55", "109.1, -75.1103, -63.9434, 0.28", "111.214, -78.9161, -65.1871, 0.28", "111.87, -80.1534, -65.5599, 0.55", "113.692, -83.7253, -66.5241, 0.28", "113.827, -84.0308, -66.5826, 0.55", "115.406, -88.0465, -67.2781, 0.28", "116.074, -90.0391, -67.459, 0.55", "116.826, -92.6104, -67.4348, 0.28", "117.141, -93.6824, -67.3043, 0.55", "117.799, -95.8741, -66.8549, 0.28", "118.109, -96.8318, -66.6294, 0.55", "119.442, -100.534, -65.9666, 0.28", "120.63, -103.554, -65.6246, 0.28", "121.212, -104.851, -65.5914, 0.55", "122.742, -107.995, -65.6558, 0.28", "123.253, -108.943, -65.7038, 0.55", "126.715, -115.172, -66.1263, 0.28", "128.1, -117.502, -66.3723, 0.55", "130.28, -120.891, -66.7797, 0.28", "130.722, -121.551, -66.8652, 0.55", "132.942, -124.647, -67.2674, 0.28", "133.264, -125.059, -67.3085, 0.55", "134.619, -126.335, -67.2326, 0.28", "135.568, -127.102, -67.2377, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "33.5843, -50.1217, 17.632, 0.55", "34.6073, -49.7956, 19.0306, 0.55", "36.6606, -49.0435, 21.8554, 0.55", "40.428, -47.6486, 26.9276, 0.55", "43.33, -46.6003, 30.7712, 0.55", "45.9587, -45.73, 34.2151, 0.28", "47.4196, -45.2768, 36.0941, 0.83", "49.2388, -44.7531, 38.4824, 0.55", "50.6138, -44.4559, 40.2449, 0.28", "51.3111, -44.3591, 41.0006, 0.55", "52.8134, -44.1949, 42.4921, 0.28", "53.3164, -44.157, 42.9903, 0.55", "55.5168, -44.2127, 44.9406, 0.28", "56.9296, -44.4874, 46.0985, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "33.5843, -50.1217, 17.632, 0.28", "38.3822, -54.0396, 13.8178, 0.28", "39.0686, -54.5096, 13.3429, 0.83", "41.4834, -55.9614, 11.8062, 0.28", "42.2037, -56.2824, 11.3935, 0.83", "43.9078, -56.8714, 10.4643, 0.28", "44.637, -57.0614, 10.083, 0.83", "46.8892, -57.0482, 9.29177, 0.28", "47.3842, -56.9377, 9.08181, 0.83", "49.9007, -55.8992, 7.86393, 0.28", "50.5117, -55.6264, 7.55293, 0.28", "51.3782, -55.2151, 7.09486, 0.55", "53.0343, -54.3838, 6.54776, 0.28", "55.618, -53.0492, 6.06831, 0.28", "56.2791, -52.7024, 6.07989, 0.83", "61.0604, -50.2099, 6.90735, 0.28", "61.8829, -49.8091, 7.1415, 0.55", "67.8598, -46.9651, 9.6515, 0.28", "68.4998, -46.6589, 9.99573, 0.83", "72.3584, -44.6675, 12.529, 0.28", "72.8743, -44.3618, 12.9098, 0.55", "74.4169, -43.3187, 14.2036, 0.28", "75.8672, -42.3165, 15.3936, 0.55", "77.6796, -41.0721, 16.6479, 0.28", "78.4109, -40.5553, 17.1029, 0.55", "80.7075, -38.7585, 18.0998, 0.28", "81.5466, -38.0134, 18.4623, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "31.9964, -56.7221, 1.1343, 0.55", "33.4459, -57.3007, 0.229404, 0.55", "35.7634, -58.2488, -1.22617, 0.55", "37.4377, -58.9644, -2.29858, 0.28", "38.6329, -59.4681, -3.05526, 0.55", "40.5116, -60.2318, -4.19201, 0.55", "41.3245, -60.5843, -4.64364, 0.28", "41.8814, -60.8385, -4.97221, 0.55", "42.5093, -61.1799, -5.31817, 0.28", "43.438, -61.764, -5.81623, 0.55", "44.8241, -62.681, -6.45531, 0.55", "46.8204, -64.0171, -7.31957, 0.55", "49.3935, -65.7436, -8.80617, 1.38", "50.9798, -66.789, -9.88161, 0.83", "52.3036, -67.6127, -10.8694, 0.55", "53.9402, -68.578, -12.2018, 0.28", "55.9143, -69.6663, -13.9307, 0.83", "59.5322, -71.4439, -17.5401, 0.28", "59.9893, -71.6763, -18.0404, 0.28", "61.0933, -72.3008, -19.4303, 0.55", "61.8152, -72.7234, -20.4068, 0.55", "62.4488, -73.139, -21.3454, 0.55", "64.2218, -74.4552, -23.8581, 0.55", "65.9635, -75.9055, -26.1907, 0.28", "67.0107, -76.8666, -27.6544, 0.83", "67.6435, -77.4849, -28.5684, 0.83", "69.3211, -79.1203, -30.9519, 0.55", "70.0147, -79.7873, -31.871, 0.83", "71.0274, -80.6912, -32.9499, 0.28", "71.788, -81.2837, -33.6101, 0.55", "72.267, -81.6685, -33.9486, 0.28", "72.5066, -81.8748, -34.0851, 0.55", "73.6954, -82.8266, -34.5894, 0.28", "74.9828, -83.905, -35.2393, 0.28", "75.9751, -84.7512, -35.7309, 0.83", "76.8099, -85.552, -36.1685, 0.55", "78.8905, -87.6916, -37.2797, 0.28", "79.4904, -88.3767, -37.6482, 0.83", "81.3662, -90.7166, -38.8987, 0.28", "82.0532, -91.7176, -39.3936, 0.83", "83.2316, -93.5288, -40.1965, 0.28", "83.5633, -94.0487, -40.4317, 0.83", "84.9222, -96.2879, -41.3994, 0.28", "85.7437, -97.6652, -41.9687, 0.28", "86.5015, -98.8298, -42.3789, 0.55", "87.3837, -100.101, -42.8993, 0.55", "88.867, -102.03, -43.7463, 0.55", "89.6717, -103.008, -44.1862, 0.28", "90.1052, -103.51, -44.427, 0.55", "91.517, -105.133, -45.3531, 0.28", "92.5858, -106.272, -46.0634, 0.55", "93.6971, -107.501, -46.8372, 0.28", "94.0347, -107.867, -47.0448, 0.83", "95.4737, -109.417, -47.9995, 0.28", "95.8093, -109.756, -48.2268, 0.55", "96.6768, -110.557, -48.841, 0.55", "98.1841, -111.851, -49.6938, 0.28", "98.2439, -111.9, -49.7288, 0.55", "99.5716, -112.924, -50.6165, 0.28", "100.098, -113.298, -50.9748, 0.55", "101.485, -114.328, -52.0567, 0.28", "102.386, -114.989, -52.8265, 0.55", "103.998, -116.106, -54.2848, 0.55", "105.386, -117.084, -55.6074, 0.28", "106.228, -117.71, -56.4363, 0.83", "107.672, -118.826, -57.872, 0.28", "107.992, -119.042, -58.1494, 0.55", "109.209, -119.741, -59.1007, 0.28", "109.643, -119.932, -59.3316, 0.55", "111.778, -120.665, -60.2242, 0.28", "112.469, -120.853, -60.4771, 0.83", "115.22, -121.359, -61.1934, 0.28", "115.739, -121.43, -61.3038, 0.55", "117.882, -121.521, -61.5875, 0.28", "119.72, -121.434, -61.7961, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "31.9964, -56.7221, 1.1343, 0.55", "32.3656, -57.8938, -0.487082, 0.55", "33.0131, -60.4293, -3.88958, 0.55", "33.6105, -62.5991, -6.76813, 0.28", "34.0709, -64.1414, -8.87877, 0.83", "34.9415, -66.5713, -12.3097, 0.28", "35.1465, -67.119, -13.1428, 0.55", "35.3046, -67.5728, -13.9027, 0.55", "35.6846, -68.3747, -15.4923, 0.55", "36.3426, -69.5245, -17.9364, 0.55", "36.7193, -70.1271, -19.2856, 0.55", "37.998, -71.6337, -22.9231, 0.83", "38.8052, -72.5133, -25.1751, 0.28", "39.1096, -72.8503, -26.1087, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-73.9623, -4.06519, -104.501, 0.28", "-74.6608, -4.19363, -104.338, 0.28", "-75.5683, -4.36052, -104.127, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-73.9623, -4.06519, -104.501, 0.28", "-74.9735, -5.90169, -106.048, 0.28", "-75.2691, -6.43863, -106.5, 0.55", "-76.194, -8.11854, -107.915, 0.28", "-76.6034, -8.8621, -108.541, 0.83", "-78.3951, -12.1161, -111.282, 0.28", "-78.6895, -12.6509, -111.733, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-79.7958, 410.526, -56.395, 0.55", "-80.316, 411.484, -57.873, 0.55", "-80.8891, 412.618, -59.3851, 0.28", "-81.4605, 413.749, -60.8931, 0.55", "-83.1129, 417.02, -65.2533, 0.28", "-83.3029, 417.396, -65.7546, 0.55", "-84.5281, 419.821, -68.9877, 0.28", "-85.0598, 420.878, -70.769, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-79.7958, 410.526, -56.395, 0.28", "-81.6164, 409.802, -56.4877, 0.28", "-82.6298, 409.399, -56.5393, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "133.901, 65.2216, -40.7719, 0.28", "130.175, 68.7141, -40.5395, 0.28", "128.913, 69.8979, -40.4608, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "133.901, 65.2216, -40.7719, 0.28", "134.439, 66.8043, -39.9546, 0.28", "135.41, 69.7832, -38.3785, 0.28", "135.64, 70.5808, -37.9188, 0.55", "136.353, 73.4749, -36.0944, 0.28", "136.763, 75.1379, -35.0461, 0.55", "137.293, 77.2863, -33.6917, 0.28", "137.525, 78.4097, -32.9146, 0.55", "137.8, 80.1763, -31.5466, 0.28", "137.967, 81.614, -30.4206, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "39.1096, -72.8503, -26.1087, 0.55", "38.1617, -73.8886, -28.1159, 0.55", "37.7388, -74.405, -29.0777, 0.28", "37.4495, -74.7239, -29.7198, 0.83", "35.5802, -76.5645, -33.4977, 0.28", "35.0494, -77.1068, -34.553, 0.83", "32.7211, -79.5362, -39.0136, 0.28", "32.3953, -79.8712, -39.6279, 0.83", "30.3131, -81.7604, -43.272, 0.28", "29.6698, -82.2873, -44.2672, 0.55", "26.7249, -84.4003, -48.3088, 0.28", "26.1221, -84.8017, -49.1274, 0.28", "24.8198, -85.5978, -50.8837, 0.83", "20.9908, -87.8175, -56.0996, 0.28", "19.9527, -88.4044, -57.5716, 0.55", "17.9383, -89.5028, -60.5106, 0.55", "16.4365, -90.2521, -62.6791, 0.55", "13.8604, -91.5792, -66.4376, 0.28", "13.1471, -92.0006, -67.4948, 0.83", "10.729, -93.5801, -70.9738, 0.28", "10.2564, -93.9224, -71.6262, 0.55", "8.06537, -95.6286, -74.1896, 0.28", "7.37684, -96.1295, -74.8683, 0.55", "4.66539, -98.1362, -77.2039, 0.28", "4.42061, -98.3052, -77.4096, 0.83", "2.92721, -99.2523, -78.4795, 0.28", "1.69278, -99.9977, -79.2558, 0.55", "-2.10384, -102.147, -81.5088, 0.28", "-3.25743, -102.807, -82.1284, 0.83", "-8.31092, -105.718, -84.4996, 0.28", "-10.4915, -107.004, -85.479, 0.55", "-13.3551, -108.77, -86.7839, 0.55", "-16.5523, -110.865, -88.1623, 0.28", "-19.2538, -112.758, -89.1701, 0.55", "-21.1734, -114.158, -89.9822, 0.28", "-21.4527, -114.378, -90.1074, 0.55", "-23.1442, -115.663, -90.9723, 0.28", "-24.4611, -116.571, -91.6716, 0.55", "-25.9128, -117.456, -92.4722, 0.55", "-28.397, -118.712, -93.9944, 0.28", "-29.4686, -119.177, -94.624, 0.55", "-31.0105, -119.808, -95.514, 0.28", "-32.0015, -120.173, -96.0456, 0.55", "-34.6847, -121.096, -97.4905, 0.28", "-35.579, -121.384, -98.0121, 0.55", "-37.8209, -122.141, -99.3242, 0.28", "-39.2175, -122.677, -100.336, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "39.1096, -72.8503, -26.1087, 0.28", "44.5138, -73.5414, -26.7179, 0.28", "45.2933, -73.6688, -26.8789, 0.83", "48.8595, -74.438, -27.658, 0.28", "50.1073, -74.6744, -27.9389, 0.28", "51.6424, -75.0352, -28.3444, 0.55", "54.3271, -75.7293, -29.4115, 0.28", "57.1654, -76.6001, -30.9546, 0.55", "58.8246, -77.2247, -31.9153, 0.55", "60.8549, -78.1268, -33.347, 0.55", "64.3571, -79.7584, -36.14, 0.83", "68.4991, -81.7657, -39.8295, 0.28", "69.9138, -82.4761, -41.1801, 0.28", "70.627, -82.8957, -41.9626, 0.83", "75.3293, -85.796, -47.4133, 0.28", "76.6349, -86.7103, -49.0735, 0.83", "77.7124, -87.5626, -50.5637, 0.83", "79.5874, -89.244, -53.1749, 0.83", "82.7319, -92.2685, -57.6999, 0.55", "85.3815, -95.231, -61.6499, 0.55", "88.5265, -99.4897, -66.4544, 0.55", "89.9247, -101.843, -68.8446, 0.55", "91.0168, -104.17, -70.9479, 0.28", "91.1261, -104.482, -71.1811, 0.55", "92.269, -109.302, -74.025, 0.28", "92.5415, -111.152, -74.9034, 0.55", "93.2401, -116.658, -77.0965, 0.28", "93.6743, -119.785, -78.172, 0.55", "94.2276, -123.16, -79.2006, 0.28", "94.7511, -125.697, -79.7986, 0.55", "96.1864, -131.626, -80.7739, 0.28", "96.5939, -133.052, -80.9068, 1.11", "99.1629, -140.217, -80.9861, 0.28", "100.663, -143.705, -80.7737, 0.55", "102.324, -146.982, -80.0198, 0.28", "102.948, -148.015, -79.5736, 0.55", "104.707, -150.592, -77.915, 0.28", "105.932, -152.238, -76.5765, 0.28", "108.396, -155.142, -73.4868, 0.55", "112.016, -159.459, -68.6482, 0.55", "113.423, -161.146, -66.7236, 0.28", "113.725, -161.469, -66.3426, 0.55", "116.029, -163.622, -63.7592, 0.28", "116.44, -163.98, -63.3381, 0.55", "118.467, -165.431, -61.7081, 0.28", "119.441, -165.986, -61.1355, 0.55", "123.429, -167.667, -58.6638, 0.28", "124.701, -168.024, -57.7131, 0.55", "126.776, -168.29, -56.1906, 0.28", "127.446, -168.275, -55.5688, 0.55", "129.375, -167.966, -53.5193, 0.28", "131.029, -167.612, -51.6145, 0.55", "133.949, -166.725, -47.5519, 0.28", "136.138, -165.909, -44.2395, 0.55", "140.721, -163.75, -36.872, 0.28", "141.374, -163.416, -35.7559, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L4_BTC_62f17815ed_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.71855, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.12166, -14.4537, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 10.5559, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -6.20504, 12.4227, -3.94411, 1.38 ) }
    dend_11 { pt3dadd( -7.93738, 15.3456, -4.26119, 1.66 ) }
    dend_11 { pt3dadd( -9.4165, 17.8412, -4.53193, 1.38 ) }
    dend_11 { pt3dadd( -10.5993, 19.837, -4.74843, 1.11 ) }
    dend_11 { pt3dadd( -11.5335, 21.4132, -4.91942, 1.11 ) }
    dend_11 { pt3dadd( -13.6931, 25.057, -5.31471, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.6302, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01428, 9.23591, 7.12073, 1.38 ) }
    dend_0 { pt3dadd( 6.09699, 10.8464, 7.54396, 1.38 ) }
    dend_0 { pt3dadd( 6.34217, 13.6625, 8.37395, 1.38 ) }
    dend_0 { pt3dadd( 6.67728, 16.666, 9.30129, 1.38 ) }
    dend_0 { pt3dadd( 6.92951, 18.9266, 9.99923, 1.38 ) }
    dend_0 { pt3dadd( 7.15458, 20.9439, 10.622, 0.83 ) }
    dend_0 { pt3dadd( 7.30157, 22.9049, 11.2701, 1.38 ) }
    dend_0 { pt3dadd( 7.51684, 25.232, 12.073, 1.38 ) }
    dend_0 { pt3dadd( 8.00868, 28.0073, 13.0139, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.642532 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.642532 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.642532 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.12166, -14.4537, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 5.26461, -20.4633, 1.27654, 2.22 ) }
    dend_32 { pt3dadd( 6.89961, -23.5895, 0.973861, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.12166, -14.4537, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( -0.957228, -16.9763, 2.50825, 0.83 ) }
    dend_27 { pt3dadd( -3.11856, -18.7353, 3.23457, 1.11 ) }
    dend_27 { pt3dadd( -6.10048, -21.1622, 4.23665, 0.83 ) }
    dend_27 { pt3dadd( -8.39086, -23.0262, 5.00634, 0.83 ) }
    dend_27 { pt3dadd( -12.2742, -26.1867, 6.31137, 1.38 ) }
    dend_27 { pt3dadd( -15.9859, -29.2075, 7.55872, 1.38 ) }
    dend_27 { pt3dadd( -19.2936, -31.6022, 8.92538, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -13.6931, 25.057, -5.31471, 0.55 ) }
    dend_21 { pt3dadd( -16.7495, 25.6013, -4.40342, 0.55 ) }
    dend_21 { pt3dadd( -18.2185, 25.6708, -3.74345, 0.55 ) }
    dend_21 { pt3dadd( -19.2678, 25.6579, -3.19811, 0.55 ) }
    dend_21 { pt3dadd( -20.9947, 25.5647, -2.25929, 1.11 ) }
    dend_21 { pt3dadd( -24.0173, 25.3035, -0.617987, 0.83 ) }
    dend_21 { pt3dadd( -27.0629, 24.9145, 1.06904, 0.83 ) }
    dend_21 { pt3dadd( -30.2596, 24.2576, 2.98903, 0.55 ) }
    dend_21 { pt3dadd( -31.9951, 23.7994, 4.04363, 1.38 ) }
    dend_21 { pt3dadd( -33.2551, 23.3924, 4.81699, 0.28 ) }
    dend_21 { pt3dadd( -34.4025, 22.9492, 5.52586, 0.83 ) }
    dend_21 { pt3dadd( -35.7883, 22.4121, 6.41446, 0.28 ) }
    dend_21 { pt3dadd( -36.7507, 22.0274, 7.06536, 0.55 ) }
    dend_21 { pt3dadd( -37.9678, 21.6112, 7.83662, 0.55 ) }
    dend_21 { pt3dadd( -39.9013, 21.0183, 9.05349, 0.55 ) }
    dend_21 { pt3dadd( -41.5705, 20.5178, 10.0931, 0.55 ) }
    dend_21 { pt3dadd( -44.4165, 19.7436, 11.8996, 0.55 ) }
    dend_21 { pt3dadd( -45.6185, 19.4461, 12.6349, 0.55 ) }
    dend_21 { pt3dadd( -47.9199, 18.9097, 13.9827, 0.83 ) }
    dend_21 { pt3dadd( -49.5376, 18.5706, 14.8898, 0.83 ) }
    dend_21 { pt3dadd( -50.826, 18.3194, 15.5523, 0.83 ) }
    dend_21 { pt3dadd( -53.5693, 17.8406, 16.9129, 0.83 ) }
    dend_21 { pt3dadd( -54.5872, 17.6496, 17.3859, 0.83 ) }
    dend_21 { pt3dadd( -57.0439, 17.1556, 18.6053, 0.83 ) }
    dend_21 { pt3dadd( -60.4, 16.397, 20.319, 0.83 ) }
    dend_21 { pt3dadd( -61.2433, 16.2267, 20.7453, 0.83 ) }
    dend_21 { pt3dadd( -63.0822, 15.8965, 21.6374, 0.28 ) }
    dend_21 { pt3dadd( -64.1098, 15.6838, 22.0704, 0.83 ) }
    dend_21 { pt3dadd( -66.5746, 15.1516, 23.0383, 0.28 ) }
    dend_21 { pt3dadd( -68.3023, 14.7667, 23.6014, 0.83 ) }
    dend_21 { pt3dadd( -70.319, 14.3169, 24.1507, 0.28 ) }
    dend_21 { pt3dadd( -70.7558, 14.2179, 24.2628, 0.55 ) }
    dend_21 { pt3dadd( -73.2533, 13.7277, 24.7952, 0.55 ) }
    dend_21 { pt3dadd( -75.0512, 13.4341, 25.122, 0.28 ) }
    dend_21 { pt3dadd( -77.0941, 13.1158, 25.2946, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -13.6931, 25.057, -5.31471, 1.11 ) }
    dend_12 { pt3dadd( -14.9567, 29.6495, -8.13336, 1.11 ) }
    dend_12 { pt3dadd( -15.6812, 32.1575, -9.44354, 1.11 ) }
    dend_12 { pt3dadd( -16.5549, 35.1824, -11.0237, 1.11 ) }
    dend_12 { pt3dadd( -17.2895, 37.7252, -12.3521, 1.11 ) }
    dend_12 { pt3dadd( -18.1544, 40.7193, -13.9162, 0.83 ) }
    dend_12 { pt3dadd( -19.0402, 43.7857, -15.5181, 0.83 ) }
    dend_12 { pt3dadd( -19.6855, 46.2051, -16.445, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.00868, 28.0073, 13.0139, 0.83 ) }
    dend_4 { pt3dadd( 6.89384, 31.8329, 14.7746, 0.83 ) }
    dend_4 { pt3dadd( 6.06002, 34.6942, 16.0914, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 5.41418, 36.9104, 17.1114, 0.83 ) }
    dend_4 { pt3dadd( 4.40632, 40.369, 18.7031, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.00868, 28.0073, 13.0139, 0.83 ) }
    dend_1 { pt3dadd( 11.0567, 31.1603, 12.6383, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.642532 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.642532 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.642532 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 6.89961, -23.5895, 0.973861, 0.83 ) }
    dend_42 { pt3dadd( 7.545, -24.6125, -0.804615, 0.83 ) }
    dend_42 { pt3dadd( 7.91416, -25.0735, -1.86181, 0.83 ) }
    dend_42 { pt3dadd( 8.36543, -25.5542, -3.19108, 0.83 ) }
    dend_42 { pt3dadd( 10.156, -27.4123, -8.66945, 0.83 ) }
    dend_42 { pt3dadd( 11.1508, -28.4333, -11.7059, 0.83 ) }
    dend_42 { pt3dadd( 12.6417, -29.9634, -16.2564, 0.55 ) }
    dend_42 { pt3dadd( 13.2681, -30.6335, -18.498, 0.83 ) }
    dend_42 { pt3dadd( 13.9388, -31.3293, -21.1066, 0.83 ) }
    dend_42 { pt3dadd( 14.5655, -31.901, -23.5802, 1.11 ) }
    dend_42 { pt3dadd( 14.7125, -31.9869, -23.9993, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 6.89961, -23.5895, 0.973861, 1.66 ) }
    dend_33 { pt3dadd( 7.94454, -26.3106, 1.08049, 1.66 ) }
    dend_33 { pt3dadd( 9.44891, -29.5896, 1.21325, 1.11 ) }
    dend_33 { pt3dadd( 10.5829, -31.7624, 1.31695, 1.11 ) }
    dend_33 { pt3dadd( 12.6644, -35.1498, 1.83858, 1.11 ) }
    dend_33 { pt3dadd( 14.4413, -38.0417, 2.2839, 1.11 ) }
    dend_33 { pt3dadd( 15.6842, -40.0645, 2.59539, 1.38 ) }
    dend_33 { pt3dadd( 17.1616, -42.2249, 2.97015, 1.11 ) }
    dend_33 { pt3dadd( 18.0895, -43.4272, 3.25007, 1.11 ) }
    dend_33 { pt3dadd( 22.0276, -47.5943, 4.65815, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -19.2936, -31.6022, 8.92538, 0.28 ) }
    dend_31 { pt3dadd( -18.81, -35.0151, 12.0055, 0.28 ) }
    dend_31 { pt3dadd( -18.6607, -36.4565, 13.4401, 1.11 ) }
    dend_31 { pt3dadd( -18.0969, -41.3141, 18.5407, 0.55 ) }
    dend_31 { pt3dadd( -17.9024, -42.8064, 20.0677, 0.83 ) }
    dend_31 { pt3dadd( -17.4719, -46.1097, 23.4482, 0.83 ) }
    dend_31 { pt3dadd( -16.9757, -49.917, 27.3443, 0.55 ) }
    dend_31 { pt3dadd( -16.691, -52.0955, 29.67, 1.11 ) }
    dend_31 { pt3dadd( -16.1082, -55.9215, 33.893, 0.55 ) }
    dend_31 { pt3dadd( -15.9667, -57.2727, 35.3847, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -19.2936, -31.6022, 8.92538, 0.83 ) }
    dend_28 { pt3dadd( -22.6339, -31.9381, 10.4752, 0.83 ) }
    dend_28 { pt3dadd( -25.142, -32.1658, 11.6028, 1.11 ) }
    dend_28 { pt3dadd( -27.627, -32.3055, 12.6636, 0.83 ) }
    dend_28 { pt3dadd( -30.4289, -32.3965, 13.7828, 0.83 ) }
    dend_28 { pt3dadd( -33.8841, -32.5086, 15.1631, 0.83 ) }
    dend_28 { pt3dadd( -37.1824, -32.6157, 16.4807, 0.83 ) }
    dend_28 { pt3dadd( -40.8083, -32.7234, 17.8707, 1.11 ) }
    dend_28 { pt3dadd( -44.6411, -32.7634, 19.2137, 1.11 ) }
    dend_28 { pt3dadd( -48.048, -32.7447, 20.3341, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -77.0941, 13.1158, 25.2946, 0.28 ) }
    dend_23 { pt3dadd( -76.8635, 11.5341, 26.1423, 0.28 ) }
    dend_23 { pt3dadd( -76.7817, 10.9725, 26.4432, 0.83 ) }
    dend_23 { pt3dadd( -76.3685, 8.13779, 27.9623, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -77.0941, 13.1158, 25.2946, 0.28 ) }
    dend_22 { pt3dadd( -81.2282, 13.7334, 26.1359, 0.28 ) }
    dend_22 { pt3dadd( -82.6316, 14.0019, 25.9723, 0.55 ) }
    dend_22 { pt3dadd( -85.6931, 14.5597, 25.1356, 0.28 ) }
    dend_22 { pt3dadd( -88.4199, 15.0129, 24.2124, 0.83 ) }
    dend_22 { pt3dadd( -91.6677, 15.5526, 23.1129, 0.28 ) }
    dend_22 { pt3dadd( -94.7834, 16.0704, 22.0581, 0.28 ) }
    dend_22 { pt3dadd( -99.9856, 16.9528, 19.3415, 0.28 ) }
    dend_22 { pt3dadd( -101.031, 17.1425, 18.6571, 0.83 ) }
    dend_22 { pt3dadd( -102.605, 17.4881, 17.3101, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -19.6855, 46.2051, -16.445, 0.55 ) }
    dend_16 { pt3dadd( -20.9134, 46.5016, -17.2122, 0.55 ) }
    dend_16 { pt3dadd( -23.0784, 47.0244, -18.565, 0.55 ) }
    dend_16 { pt3dadd( -25.1685, 47.5291, -19.871, 0.83 ) }
    dend_16 { pt3dadd( -28.9395, 48.4397, -22.2273, 0.55 ) }
    dend_16 { pt3dadd( -31.3031, 49.0105, -23.7042, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -19.6855, 46.2051, -16.445, 0.55 ) }
    dend_13 { pt3dadd( -18.1464, 50.4835, -18.4601, 0.55 ) }
    dend_13 { pt3dadd( -17.4384, 52.637, -19.2939, 0.55 ) }
    dend_13 { pt3dadd( -16.8432, 54.5169, -19.8272, 0.83 ) }
    dend_13 { pt3dadd( -16.0476, 57.0124, -20.4035, 0.55 ) }
    dend_13 { pt3dadd( -15.5447, 58.6193, -20.7577, 0.83 ) }
    dend_13 { pt3dadd( -14.779, 61.017, -21.2547, 0.55 ) }
    dend_13 { pt3dadd( -14.1993, 62.8605, -21.5181, 0.83 ) }
    dend_13 { pt3dadd( -13.3006, 65.4927, -21.9828, 0.28 ) }
    dend_13 { pt3dadd( -12.753, 66.9527, -22.3009, 0.83 ) }
    dend_13 { pt3dadd( -11.7767, 69.3398, -22.9042, 0.55 ) }
    dend_13 { pt3dadd( -10.9877, 71.2045, -23.4203, 0.83 ) }
    dend_13 { pt3dadd( -9.73879, 74.0469, -24.2951, 0.55 ) }
    dend_13 { pt3dadd( -8.28127, 77.2053, -25.3936, 0.83 ) }
    dend_13 { pt3dadd( -6.90811, 80.1121, -26.5393, 0.83 ) }
    dend_13 { pt3dadd( -5.04868, 83.9791, -28.0654, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 4.40632, 40.369, 18.7031, 0.83 ) }
    dend_6 { pt3dadd( 5.48321, 44.2903, 19.7105, 0.83 ) }
    dend_6 { pt3dadd( 6.46599, 48.6074, 20.7988, 0.83 ) }
    dend_6 { pt3dadd( 6.97887, 51.279, 21.5642, 0.83 ) }
    dend_6 { pt3dadd( 7.61085, 54.9899, 22.7162, 0.83 ) }
    dend_6 { pt3dadd( 8.27473, 59.1685, 24.0321, 0.83 ) }
    dend_6 { pt3dadd( 8.92579, 63.7999, 25.4914, 0.83 ) }
    dend_6 { pt3dadd( 9.44384, 68.2103, 26.9467, 0.83 ) }
    dend_6 { pt3dadd( 9.89548, 72.587, 28.4873, 0.83 ) }
    dend_6 { pt3dadd( 10.098, 75.2208, 29.3827, 0.55 ) }
    dend_6 { pt3dadd( 10.2461, 78.0945, 30.2468, 0.55 ) }
    dend_6 { pt3dadd( 10.3755, 80.5048, 30.8116, 0.83 ) }
    dend_6 { pt3dadd( 10.5215, 82.6631, 31.146, 0.83 ) }
    dend_6 { pt3dadd( 10.7072, 84.6553, 31.3413, 0.55 ) }
    dend_6 { pt3dadd( 10.974, 87.1774, 31.3603, 0.83 ) }
    dend_6 { pt3dadd( 11.2008, 89.2248, 31.316, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 11.3796, 90.9839, 31.2656, 0.83 ) }
    dend_6 { pt3dadd( 11.6143, 93.7138, 31.1973, 0.55 ) }
    dend_6 { pt3dadd( 11.7858, 96.4586, 31.0944, 0.83 ) }
    dend_6 { pt3dadd( 11.883, 98.9584, 30.7816, 0.55 ) }
    dend_6 { pt3dadd( 11.8957, 100.319, 30.5482, 0.55 ) }
    dend_6 { pt3dadd( 11.8623, 102.424, 30.1664, 0.83 ) }
    dend_6 { pt3dadd( 11.743, 105.436, 29.592, 0.83 ) }
    dend_6 { pt3dadd( 11.6226, 107.931, 29.1197, 0.55 ) }
    dend_6 { pt3dadd( 11.2381, 113.582, 28.0192, 0.83 ) }
    dend_6 { pt3dadd( 10.9815, 116.86, 27.3821, 0.83 ) }
    dend_6 { pt3dadd( 10.6826, 120.858, 26.6635, 0.83 ) }
    dend_6 { pt3dadd( 10.522, 123.287, 26.3318, 0.83 ) }
    dend_6 { pt3dadd( 10.3651, 125.232, 26.1842, 0.83 ) }
    dend_6 { pt3dadd( 10.1863, 127.147, 26.1884, 0.55 ) }
    dend_6 { pt3dadd( 9.94922, 129.326, 26.3431, 0.55 ) }
    dend_6 { pt3dadd( 9.59338, 131.81, 26.5085, 0.83 ) }
    dend_6 { pt3dadd( 8.77992, 136.419, 26.7909, 0.83 ) }
    dend_6 { pt3dadd( 8.12118, 140.065, 26.9847, 1.11 ) }
    dend_6 { pt3dadd( 7.58911, 142.834, 27.1101, 0.55 ) }
    dend_6 { pt3dadd( 6.93042, 145.869, 27.2469, 1.11 ) }
    dend_6 { pt3dadd( 5.85111, 150.127, 27.4589, 0.83 ) }
    dend_6 { pt3dadd( 4.88068, 153.656, 27.586, 0.83 ) }
    dend_6 { pt3dadd( 4.19206, 156.005, 27.5882, 0.83 ) }
    dend_6 { pt3dadd( 3.54282, 158.352, 27.5131, 0.55 ) }
    dend_6 { pt3dadd( 2.68497, 161.651, 27.3337, 0.55 ) }
    dend_6 { pt3dadd( 2.50548, 162.43, 27.2727, 0.55 ) }
    dend_6 { pt3dadd( 1.9484, 165.328, 27.0633, 0.55 ) }
    dend_6 { pt3dadd( 1.59482, 167.447, 26.8512, 0.28 ) }
    dend_6 { pt3dadd( 1.12845, 170.856, 26.3616, 0.55 ) }
    dend_6 { pt3dadd( 0.751887, 174.75, 25.6482, 0.55 ) }
    dend_6 { pt3dadd( 0.604148, 176.95, 25.1878, 0.55 ) }
    dend_6 { pt3dadd( 0.379719, 180.787, 24.3696, 0.83 ) }
    dend_6 { pt3dadd( 0.181129, 184.844, 23.4897, 0.83 ) }
    dend_6 { pt3dadd( 0.0112261, 187.728, 22.7434, 0.83 ) }
    dend_6 { pt3dadd( -0.12909, 189.394, 22.2289, 0.55 ) }
    dend_6 { pt3dadd( -0.266864, 190.874, 21.7309, 0.83 ) }
    dend_6 { pt3dadd( -0.577839, 193.245, 20.9776, 0.83 ) }
    dend_6 { pt3dadd( -1.11385, 196.243, 20.0874, 0.83 ) }
    dend_6 { pt3dadd( -1.8829, 200.008, 19.2434, 0.83 ) }
    dend_6 { pt3dadd( -2.41152, 202.384, 18.7919, 0.83 ) }
    dend_6 { pt3dadd( -2.94556, 204.586, 18.3188, 0.83 ) }
    dend_6 { pt3dadd( -3.73428, 207.699, 17.5735, 0.55 ) }
    dend_6 { pt3dadd( -4.63268, 210.947, 16.7809, 0.55 ) }
    dend_6 { pt3dadd( -5.28121, 213.309, 16.2426, 0.55 ) }
    dend_6 { pt3dadd( -5.96433, 215.934, 15.6615, 0.83 ) }
    dend_6 { pt3dadd( -6.96049, 219.939, 14.7123, 1.11 ) }
    dend_6 { pt3dadd( -7.86665, 224.135, 13.7981, 0.55 ) }
    dend_6 { pt3dadd( -8.25035, 226.584, 13.3698, 0.55 ) }
    dend_6 { pt3dadd( -8.59548, 229.433, 12.9801, 0.55 ) }
    dend_6 { pt3dadd( -8.81255, 232.268, 12.6757, 0.83 ) }
    dend_6 { pt3dadd( -8.86076, 235.697, 12.4111, 0.83 ) }
    dend_6 { pt3dadd( -8.67645, 240.426, 12.1495, 0.83 ) }
    dend_6 { pt3dadd( -8.16959, 246.091, 11.7512, 0.83 ) }
    dend_6 { pt3dadd( -7.75864, 249.383, 11.4315, 0.55 ) }
    dend_6 { pt3dadd( -7.28321, 252.643, 11.0318, 0.55 ) }
    dend_6 { pt3dadd( -6.60213, 256.73, 10.453, 0.83 ) }
    dend_6 { pt3dadd( -6.31577, 258.646, 10.1287, 0.83 ) }
    dend_6 { pt3dadd( -6.02922, 261.671, 9.57445, 0.83 ) }
    dend_6 { pt3dadd( -5.94157, 265.242, 8.99673, 0.83 ) }
    dend_6 { pt3dadd( -6.1151, 268.191, 8.68169, 0.28 ) }
    dend_6 { pt3dadd( -6.33195, 269.716, 8.58862, 0.83 ) }
    dend_6 { pt3dadd( -7.20094, 274.064, 8.44669, 0.83 ) }
    dend_6 { pt3dadd( -8.03909, 277.522, 8.44237, 0.83 ) }
    dend_6 { pt3dadd( -9.05048, 280.876, 8.59386, 0.83 ) }
    dend_6 { pt3dadd( -10.2363, 284.317, 8.89402, 0.83 ) }
    dend_6 { pt3dadd( -11.0979, 286.601, 9.15761, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 4.40632, 40.369, 18.7031, 0.83 ) }
    dend_5 { pt3dadd( 2.99452, 41.6882, 20.1221, 0.83 ) }
    dend_5 { pt3dadd( 1.98269, 42.8555, 21.2706, 0.55 ) }
    dend_5 { pt3dadd( 0.35437, 44.749, 23.1167, 0.55 ) }
    dend_5 { pt3dadd( -1.16928, 46.5215, 24.837, 0.55 ) }
    dend_5 { pt3dadd( -2.89439, 48.3381, 26.7065, 0.55 ) }
    dend_5 { pt3dadd( -4.19226, 49.532, 28.0788, 0.55 ) }
    dend_5 { pt3dadd( -6.45355, 51.2423, 30.4583, 0.55 ) }
    dend_5 { pt3dadd( -8.09591, 52.208, 32.0759, 0.55 ) }
    dend_5 { pt3dadd( -10.4017, 53.1184, 34.051, 0.55 ) }
    dend_5 { pt3dadd( -14.1324, 53.7296, 36.7664, 0.55 ) }
    dend_5 { pt3dadd( -16.3722, 53.7024, 38.1335, 0.55 ) }
    dend_5 { pt3dadd( -18.8335, 53.1916, 39.4253, 0.55 ) }
    dend_5 { pt3dadd( -20.3107, 52.6168, 40.0427, 0.55 ) }
    dend_5 { pt3dadd( -21.5059, 51.9457, 40.4367, 0.55 ) }
    dend_5 { pt3dadd( -23.73, 50.3058, 40.9507, 0.28 ) }
    dend_5 { pt3dadd( -24.8145, 49.3269, 41.1253, 0.83 ) }
    dend_5 { pt3dadd( -26.2721, 47.8828, 41.3376, 0.55 ) }
    dend_5 { pt3dadd( -27.2054, 46.8005, 41.405, 0.55 ) }
    dend_5 { pt3dadd( -28.3576, 45.1117, 41.3775, 0.55 ) }
    dend_5 { pt3dadd( -29.3957, 43.3153, 41.2576, 0.83 ) }
    dend_5 { pt3dadd( -30.253, 41.7063, 41.0867, 0.55 ) }
    dend_5 { pt3dadd( -30.9681, 40.3379, 40.8775, 0.55 ) }
    dend_5 { pt3dadd( -32.6138, 37.1233, 40.2853, 0.55 ) }
    dend_5 { pt3dadd( -34.2663, 34.0722, 39.6607, 0.83 ) }
    dend_5 { pt3dadd( -35.5832, 31.8256, 39.1264, 0.83 ) }
    dend_5 { pt3dadd( -37.0014, 29.5827, 38.3923, 0.83 ) }
    dend_5 { pt3dadd( -38.7234, 27.1001, 37.4887, 0.55 ) }
    dend_5 { pt3dadd( -39.5653, 25.9793, 37.1088, 0.28 ) }
    dend_5 { pt3dadd( -40.6553, 24.6627, 36.7207, 0.55 ) }
    dend_5 { pt3dadd( -41.9743, 23.2616, 36.2985, 0.28 ) }
    dend_5 { pt3dadd( -44.8364, 20.4193, 35.543, 0.55 ) }
    dend_5 { pt3dadd( -46.6297, 18.7431, 35.163, 0.55 ) }
    dend_5 { pt3dadd( -48.3877, 17.1512, 34.9097, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -49.9787, 15.7253, 34.7519, 0.55 ) }
    dend_5 { pt3dadd( -52.7099, 13.1512, 34.5622, 0.55 ) }
    dend_5 { pt3dadd( -53.6531, 12.2168, 34.544, 0.83 ) }
    dend_5 { pt3dadd( -55.3051, 10.4555, 34.5789, 0.55 ) }
    dend_5 { pt3dadd( -57.5422, 7.80001, 34.5192, 0.55 ) }
    dend_5 { pt3dadd( -59.0028, 5.69463, 34.4061, 0.83 ) }
    dend_5 { pt3dadd( -60.4144, 3.09363, 34.2684, 0.55 ) }
    dend_5 { pt3dadd( -61.2346, 1.03671, 34.1472, 0.55 ) }
    dend_5 { pt3dadd( -61.8937, -1.06274, 34.0043, 0.55 ) }
    dend_5 { pt3dadd( -62.1494, -2.1942, 33.9183, 0.83 ) }
    dend_5 { pt3dadd( -62.6323, -5.13554, 33.6513, 0.55 ) }
    dend_5 { pt3dadd( -63.0504, -8.60161, 33.3138, 0.28 ) }
    dend_5 { pt3dadd( -63.5683, -13.6293, 32.8278, 0.28 ) }
    dend_5 { pt3dadd( -63.7823, -15.7449, 32.5525, 0.83 ) }
    dend_5 { pt3dadd( -64.188, -19.9006, 31.9595, 0.28 ) }
    dend_5 { pt3dadd( -64.3366, -21.3572, 31.7613, 0.83 ) }
    dend_5 { pt3dadd( -64.4367, -22.2649, 31.6468, 0.28 ) }
    dend_5 { pt3dadd( -64.552, -23.6955, 31.4414, 0.83 ) }
    dend_5 { pt3dadd( -64.7947, -26.5468, 31.032, 0.28 ) }
    dend_5 { pt3dadd( -64.9348, -27.6352, 30.9059, 0.55 ) }
    dend_5 { pt3dadd( -65.3898, -30.08, 30.6845, 0.28 ) }
    dend_5 { pt3dadd( -65.6907, -31.4896, 30.5684, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 11.0567, 31.1603, 12.6383, 0.83 ) }
    dend_3 { pt3dadd( 11.2136, 32.4238, 10.8345, 0.83 ) }
    dend_3 { pt3dadd( 11.4441, 34.025, 8.8045, 0.83 ) }
    dend_3 { pt3dadd( 11.6225, 35.0461, 7.64433, 0.83 ) }
    dend_3 { pt3dadd( 13.0056, 41.2025, 1.34527, 0.55 ) }
    dend_3 { pt3dadd( 13.4984, 42.9031, -0.165847, 0.55 ) }
    dend_3 { pt3dadd( 13.8249, 43.8252, -0.872041, 0.55 ) }
    dend_3 { pt3dadd( 14.3109, 45.006, -1.67278, 0.55 ) }
    dend_3 { pt3dadd( 14.8793, 46.1811, -2.24883, 1.11 ) }
    dend_3 { pt3dadd( 15.63, 47.5645, -2.58213, 0.55 ) }
    dend_3 { pt3dadd( 17.0493, 49.9044, -2.59982, 0.55 ) }
    dend_3 { pt3dadd( 18.266, 52.0053, -2.53065, 0.55 ) }
    dend_3 { pt3dadd( 19.0538, 53.3714, -2.43796, 0.55 ) }
    dend_3 { pt3dadd( 20.0319, 55.0885, -2.18362, 0.83 ) }
    dend_3 { pt3dadd( 21.1373, 57.1717, -1.74594, 0.55 ) }
    dend_3 { pt3dadd( 21.9083, 58.8283, -1.32823, 1.11 ) }
    dend_3 { pt3dadd( 22.6553, 60.5507, -0.822422, 0.55 ) }
    dend_3 { pt3dadd( 23.3632, 62.2417, -0.295035, 0.83 ) }
    dend_3 { pt3dadd( 24.5457, 65.1848, 0.599244, 0.55 ) }
    dend_3 { pt3dadd( 25.1527, 66.7299, 1.04044, 0.55 ) }
    dend_3 { pt3dadd( 25.9533, 68.8697, 1.59578, 0.55 ) }
    dend_3 { pt3dadd( 26.5806, 70.5547, 1.92858, 0.55 ) }
    dend_3 { pt3dadd( 26.9562, 71.6028, 2.08654, 0.28 ) }
    dend_3 { pt3dadd( 27.6988, 73.6895, 2.29491, 0.55 ) }
    dend_3 { pt3dadd( 28.2447, 75.2642, 2.36422, 0.28 ) }
    dend_3 { pt3dadd( 28.7615, 76.6965, 2.39364, 0.55 ) }
    dend_3 { pt3dadd( 29.7446, 79.3916, 2.40394, 0.55 ) }
    dend_3 { pt3dadd( 30.2637, 80.9103, 2.39766, 0.55 ) }
    dend_3 { pt3dadd( 30.9809, 83.0231, 2.36107, 0.28 ) }
    dend_3 { pt3dadd( 31.545, 85.2131, 1.76544, 0.83 ) }
    dend_3 { pt3dadd( 31.9572, 87.133, 0.947181, 0.28 ) }
    dend_3 { pt3dadd( 32.0431, 87.5561, 0.705422, 0.55 ) }
    dend_3 { pt3dadd( 32.2289, 88.504, -0.0445001, 0.28 ) }
    dend_3 { pt3dadd( 32.3423, 89.0808, -0.592418, 0.83 ) }
    dend_3 { pt3dadd( 33.7345, 95.9522, -7.912, 0.55 ) }
    dend_3 { pt3dadd( 34.3453, 98.4903, -10.7317, 0.55 ) }
    dend_3 { pt3dadd( 34.5522, 99.2596, -11.5643, 0.83 ) }
    dend_3 { pt3dadd( 35.156, 101.061, -13.2287, 0.55 ) }
    dend_3 { pt3dadd( 35.5184, 101.948, -13.8566, 0.55 ) }
    dend_3 { pt3dadd( 36.0175, 103.007, -14.1101, 0.83 ) }
    dend_3 { pt3dadd( 36.6949, 104.335, -13.7797, 0.28 ) }
    dend_3 { pt3dadd( 36.9565, 105.054, -13.6723, 0.55 ) }
    dend_3 { pt3dadd( 37.5518, 107.077, -13.193, 0.28 ) }
    dend_3 { pt3dadd( 37.8962, 108.399, -12.6935, 0.55 ) }
    dend_3 { pt3dadd( 38.1768, 109.545, -12.2716, 0.28 ) }
    dend_3 { pt3dadd( 38.3239, 110.687, -11.9525, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.0567, 31.1603, 12.6383, 0.55 ) }
    dend_2 { pt3dadd( 12.3701, 30.6651, 13.3892, 0.55 ) }
    dend_2 { pt3dadd( 14.3411, 29.9221, 14.516, 0.28 ) }
    dend_2 { pt3dadd( 15.3753, 29.5322, 15.1072, 0.55 ) }
    dend_2 { pt3dadd( 17.2749, 28.8161, 16.1933, 0.55 ) }
    dend_2 { pt3dadd( 19.7585, 27.8797, 17.6132, 0.55 ) }
    dend_2 { pt3dadd( 21.1165, 27.3678, 18.3896, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 14.7125, -31.9869, -23.9993, 0.55 ) }
    dend_48 { pt3dadd( 11.9758, -29.8598, -25.8562, 0.55 ) }
    dend_48 { pt3dadd( 11.2332, -29.2669, -26.714, 0.83 ) }
    dend_48 { pt3dadd( 9.56314, -27.9282, -28.8665, 0.55 ) }
    dend_48 { pt3dadd( 8.86958, -27.4044, -29.741, 0.55 ) }
    dend_48 { pt3dadd( 5.87652, -25.4679, -34.3498, 0.28 ) }
    dend_48 { pt3dadd( 5.26167, -25.1293, -35.3364, 0.83 ) }
    dend_48 { pt3dadd( 2.91564, -24.1182, -39.7968, 0.55 ) }
    dend_48 { pt3dadd( 2.6677, -24.0376, -40.2899, 0.55 ) }
    dend_48 { pt3dadd( 2.01074, -23.8923, -41.6438, 0.83 ) }
    dend_48 { pt3dadd( -0.950458, -23.4229, -47.5829, 0.55 ) }
    dend_48 { pt3dadd( -1.53533, -23.3664, -48.7016, 0.55 ) }
    dend_48 { pt3dadd( -2.18587, -23.3108, -49.9858, 0.83 ) }
    dend_48 { pt3dadd( -3.55759, -23.1397, -52.9241, 0.55 ) }
    dend_48 { pt3dadd( -3.83019, -23.0656, -53.5642, 0.55 ) }
    dend_48 { pt3dadd( -4.2884, -22.8446, -54.8091, 0.55 ) }
    dend_48 { pt3dadd( -6.03976, -21.5704, -59.8912, 0.28 ) }
    dend_48 { pt3dadd( -6.47998, -21.1781, -61.3235, 0.83 ) }
    dend_48 { pt3dadd( -7.90451, -19.672, -66.1948, 0.55 ) }
    dend_48 { pt3dadd( -8.25011, -19.2182, -67.4533, 0.83 ) }
    dend_48 { pt3dadd( -9.94845, -16.5497, -73.7863, 0.55 ) }
    dend_48 { pt3dadd( -10.3634, -15.6541, -75.5854, 0.28 ) }
    dend_48 { pt3dadd( -10.578, -15.0495, -76.6402, 0.83 ) }
    dend_48 { pt3dadd( -10.8854, -13.9029, -78.4497, 0.55 ) }
    dend_48 { pt3dadd( -11.0585, -12.9589, -79.7123, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( -11.2619, -10.6494, -82.514, 0.55 ) }
    dend_48 { pt3dadd( -11.2095, -7.11305, -86.0681, 0.28 ) }
    dend_48 { pt3dadd( -11.174, -6.57347, -86.594, 0.55 ) }
    dend_48 { pt3dadd( -11.0319, -5.13914, -87.9617, 0.28 ) }
    dend_48 { pt3dadd( -10.9596, -4.55784, -88.5125, 0.55 ) }
    dend_48 { pt3dadd( -10.6908, -2.58892, -90.3334, 0.28 ) }
    dend_48 { pt3dadd( -10.5757, -1.89567, -90.9444, 0.55 ) }
    dend_48 { pt3dadd( -10.2348, 0.27766, -92.8432, 0.28 ) }
    dend_48 { pt3dadd( -10.1153, 1.08023, -93.5895, 0.55 ) }
    dend_48 { pt3dadd( -9.91415, 2.85453, -95.2567, 0.28 ) }
    dend_48 { pt3dadd( -9.89035, 3.25385, -95.6364, 0.55 ) }
    dend_48 { pt3dadd( -9.83965, 4.85597, -97.0614, 0.28 ) }
    dend_48 { pt3dadd( -9.82755, 5.41126, -97.5484, 0.55 ) }
    dend_48 { pt3dadd( -9.86295, 7.13771, -98.9967, 0.28 ) }
    dend_48 { pt3dadd( -9.93635, 7.99578, -99.8178, 0.55 ) }
    dend_48 { pt3dadd( -10.2917, 10.4966, -102.232, 0.28 ) }
    dend_48 { pt3dadd( -10.4894, 11.5152, -103.253, 0.55 ) }
    dend_48 { pt3dadd( -11.1252, 14.3115, -106.415, 0.28 ) }
    dend_48 { pt3dadd( -11.317, 15.1558, -107.45, 0.55 ) }
    dend_48 { pt3dadd( -11.8785, 17.8635, -111.225, 0.28 ) }
    dend_48 { pt3dadd( -12.0737, 18.7621, -112.596, 0.28 ) }
    dend_48 { pt3dadd( -12.3095, 19.8078, -114.287, 0.55 ) }
    dend_48 { pt3dadd( -12.7905, 21.6111, -117.213, 0.28 ) }
    dend_48 { pt3dadd( -12.8799, 21.9499, -117.717, 0.55 ) }
    dend_48 { pt3dadd( -13.2653, 23.3942, -120.061, 0.28 ) }
    dend_48 { pt3dadd( -13.459, 24.0862, -121.176, 0.83 ) }
    dend_48 { pt3dadd( -13.9107, 25.4933, -123.44, 0.55 ) }
    dend_48 { pt3dadd( -14.1941, 26.4067, -124.91, 0.55 ) }
    dend_48 { pt3dadd( -14.6679, 28.0473, -127.436, 0.55 ) }
    dend_48 { pt3dadd( -15.7124, 32.1195, -133.98, 0.83 ) }
    dend_48 { pt3dadd( -16.0205, 33.5221, -136.344, 0.28 ) }
    dend_48 { pt3dadd( -16.1457, 34.2618, -137.657, 0.55 ) }
    dend_48 { pt3dadd( -16.4325, 36.993, -142.869, 0.55 ) }
    dend_48 { pt3dadd( -16.4346, 37.7115, -144.271, 0.55 ) }
    dend_48 { pt3dadd( -16.3098, 40.0197, -149.037, 0.83 ) }
    dend_48 { pt3dadd( -16.1914, 41.49, -152.267, 0.28 ) }
    dend_48 { pt3dadd( -16.1698, 42.2398, -154.454, 0.55 ) }
    dend_48 { pt3dadd( -16.1553, 42.823, -157.16, 0.28 ) }
    dend_48 { pt3dadd( -16.1561, 42.9549, -158.338, 0.83 ) }
    dend_48 { pt3dadd( -16.2741, 43.1888, -164.999, 0.55 ) }
    dend_48 { pt3dadd( -16.3586, 43.0937, -167.562, 0.55 ) }
    dend_48 { pt3dadd( -16.7175, 42.6167, -173.411, 0.55 ) }
    dend_48 { pt3dadd( -17.673, 41.8071, -182.073, 0.55 ) }
    dend_48 { pt3dadd( -17.9656, 41.6075, -184.081, 0.55 ) }
    dend_48 { pt3dadd( -18.8171, 41.1262, -189.115, 0.55 ) }
    dend_48 { pt3dadd( -19.8324, 40.6937, -194.369, 0.55 ) }
    dend_48 { pt3dadd( -20.7244, 40.4326, -198.448, 0.55 ) }
    dend_48 { pt3dadd( -22.3221, 40.1082, -204.554, 0.55 ) }
    dend_48 { pt3dadd( -24.1656, 39.9098, -210.725, 0.55 ) }
    dend_48 { pt3dadd( -24.5871, 39.8864, -212.107, 0.55 ) }
    dend_48 { pt3dadd( -26.4354, 39.746, -218.162, 0.55 ) }
    dend_48 { pt3dadd( -26.8872, 39.708, -219.618, 0.28 ) }
    dend_48 { pt3dadd( -26.9926, 39.6931, -219.971, 0.55 ) }
    dend_48 { pt3dadd( -31.095, 38.7669, -233.708, 0.28 ) }
    dend_48 { pt3dadd( -31.4847, 38.67, -234.945, 0.83 ) }
    dend_48 { pt3dadd( -33.8079, 37.9687, -242.228, 0.28 ) }
    dend_48 { pt3dadd( -33.9604, 37.9206, -242.694, 0.55 ) }
    dend_48 { pt3dadd( -35.0847, 37.6023, -246.091, 0.28 ) }
    dend_48 { pt3dadd( -35.5556, 37.4667, -247.467, 0.55 ) }
    dend_48 { pt3dadd( -36.64, 37.0862, -250.049, 0.28 ) }
    dend_48 { pt3dadd( -37.0061, 36.9475, -250.943, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 14.7125, -31.9869, -23.9993, 0.55 ) }
    dend_43 { pt3dadd( 16.1509, -32.2408, -25.4517, 0.55 ) }
    dend_43 { pt3dadd( 17.3575, -32.4423, -26.5438, 0.55 ) }
    dend_43 { pt3dadd( 20.0567, -32.8688, -29.1124, 0.83 ) }
    dend_43 { pt3dadd( 20.7732, -33.0118, -29.8067, 0.83 ) }
    dend_43 { pt3dadd( 21.6066, -33.2013, -30.6116, 0.83 ) }
    dend_43 { pt3dadd( 22.3088, -33.3596, -31.2701, 0.83 ) }
    dend_43 { pt3dadd( 23.5514, -33.6352, -32.396, 0.83 ) }
    dend_43 { pt3dadd( 25.6205, -34.1595, -34.2922, 0.83 ) }
    dend_43 { pt3dadd( 26.9004, -34.4519, -35.3868, 0.83 ) }
    dend_43 { pt3dadd( 28.3024, -34.7203, -36.6336, 0.83 ) }
    dend_43 { pt3dadd( 29.8685, -34.9747, -38.0134, 0.83 ) }
    dend_43 { pt3dadd( 31.297, -35.1791, -39.2647, 0.83 ) }
    dend_43 { pt3dadd( 33.6192, -35.4968, -41.2233, 0.83 ) }
    dend_43 { pt3dadd( 35.0629, -35.653, -42.3692, 0.83 ) }
    dend_43 { pt3dadd( 36.913, -35.7641, -43.8314, 0.83 ) }
    dend_43 { pt3dadd( 38.1026, -35.7999, -44.7799, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 22.0276, -47.5943, 4.65815, 0.55 ) }
    dend_39 { pt3dadd( 23.4906, -47.4871, 5.98156, 0.55 ) }
    dend_39 { pt3dadd( 24.6955, -47.4834, 7.11216, 0.28 ) }
    dend_39 { pt3dadd( 25.45, -47.5495, 7.84642, 0.55 ) }
    dend_39 { pt3dadd( 26.7221, -47.7165, 9.10546, 1.11 ) }
    dend_39 { pt3dadd( 28.9741, -48.1395, 11.5046, 0.55 ) }
    dend_39 { pt3dadd( 29.8191, -48.3331, 12.4601, 0.55 ) }
    dend_39 { pt3dadd( 30.7253, -48.614, 13.5773, 0.83 ) }
    dend_39 { pt3dadd( 31.6665, -48.9379, 14.7997, 0.28 ) }
    dend_39 { pt3dadd( 31.6665, -48.9379, 14.7997, 0.83 ) }
    dend_39 { pt3dadd( 33.1816, -49.8404, 17.0258, 0.28 ) }
    dend_39 { pt3dadd( 33.5843, -50.1217, 17.632, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 22.0276, -47.5943, 4.65815, 0.83 ) }
    dend_34 { pt3dadd( 23.4725, -49.6621, 4.47374, 0.83 ) }
    dend_34 { pt3dadd( 24.8225, -51.1862, 4.14023, 0.55 ) }
    dend_34 { pt3dadd( 25.7579, -52.0334, 3.79854, 0.83 ) }
    dend_34 { pt3dadd( 26.5211, -52.7247, 3.51975, 0.83 ) }
    dend_34 { pt3dadd( 27.5789, -53.6827, 3.13335, 0.83 ) }
    dend_34 { pt3dadd( 28.5079, -54.5241, 2.794, 0.83 ) }
    dend_34 { pt3dadd( 30.4855, -55.873, 1.93473, 0.83 ) }
    dend_34 { pt3dadd( 31.9964, -56.7221, 1.1343, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -48.048, -32.7447, 20.3341, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -49.1383, -30.6085, 18.9228, 0.55 ) }
    dend_30 { pt3dadd( -50.5005, -27.6524, 17.0015, 0.83 ) }
    dend_30 { pt3dadd( -52.3701, -23.5387, 14.218, 0.55 ) }
    dend_30 { pt3dadd( -53.1992, -21.5298, 12.9292, 0.55 ) }
    dend_30 { pt3dadd( -54.3296, -18.5799, 11.1088, 1.11 ) }
    dend_30 { pt3dadd( -55.3071, -15.9431, 9.54329, 0.83 ) }
    dend_30 { pt3dadd( -56.2764, -13.1551, 7.93041, 0.55 ) }
    dend_30 { pt3dadd( -56.6465, -12.0091, 7.3, 0.55 ) }
    dend_30 { pt3dadd( -57.6486, -9.17741, 5.98859, 0.55 ) }
    dend_30 { pt3dadd( -57.8575, -8.60289, 5.72379, 1.11 ) }
    dend_30 { pt3dadd( -58.4366, -7.15944, 5.35663, 0.55 ) }
    dend_30 { pt3dadd( -59.1583, -5.64978, 5.41754, 0.83 ) }
    dend_30 { pt3dadd( -59.9646, -4.21265, 5.7808, 0.55 ) }
    dend_30 { pt3dadd( -61.0019, -2.52872, 6.3366, 0.55 ) }
    dend_30 { pt3dadd( -61.8151, -1.34371, 6.72657, 0.83 ) }
    dend_30 { pt3dadd( -65.6553, 4.23374, 7.8517, 0.55 ) }
    dend_30 { pt3dadd( -66.6763, 5.77656, 8.01287, 0.83 ) }
    dend_30 { pt3dadd( -67.9939, 7.75713, 8.00401, 0.55 ) }
    dend_30 { pt3dadd( -69.4435, 9.79241, 7.799, 0.55 ) }
    dend_30 { pt3dadd( -70.821, 11.6426, 7.30823, 1.11 ) }
    dend_30 { pt3dadd( -73.3277, 15.078, 5.9145, 0.55 ) }
    dend_30 { pt3dadd( -74.1091, 16.1872, 5.34619, 0.55 ) }
    dend_30 { pt3dadd( -76.0614, 19.134, 3.82192, 0.55 ) }
    dend_30 { pt3dadd( -77.2827, 21.0677, 2.81048, 0.55 ) }
    dend_30 { pt3dadd( -78.8434, 23.5791, 1.57527, 1.11 ) }
    dend_30 { pt3dadd( -80.6096, 26.3948, 0.309659, 0.55 ) }
    dend_30 { pt3dadd( -81.7175, 28.1288, -0.325011, 1.11 ) }
    dend_30 { pt3dadd( -83.1252, 30.2829, -1.08298, 0.28 ) }
    dend_30 { pt3dadd( -83.623, 31.0391, -1.30506, 0.55 ) }
    dend_30 { pt3dadd( -84.4686, 32.266, -1.58435, 0.28 ) }
    dend_30 { pt3dadd( -85.6821, 33.8605, -1.76643, 0.83 ) }
    dend_30 { pt3dadd( -87.6767, 36.2075, -1.89552, 0.28 ) }
    dend_30 { pt3dadd( -88.4339, 37.0848, -1.87678, 0.55 ) }
    dend_30 { pt3dadd( -91.6069, 40.6936, -1.54462, 0.28 ) }
    dend_30 { pt3dadd( -92.8064, 42.09, -1.37987, 0.83 ) }
    dend_30 { pt3dadd( -94.5027, 44.1251, -1.13829, 0.55 ) }
    dend_30 { pt3dadd( -96.207, 46.2166, -0.898016, 0.55 ) }
    dend_30 { pt3dadd( -97.9211, 48.3485, -0.706782, 0.55 ) }
    dend_30 { pt3dadd( -99.2029, 50.0207, -0.581218, 0.83 ) }
    dend_30 { pt3dadd( -100.666, 52.0311, -0.499678, 0.28 ) }
    dend_30 { pt3dadd( -102.017, 54.0135, -0.470374, 0.55 ) }
    dend_30 { pt3dadd( -103.564, 56.6265, -0.615787, 0.55 ) }
    dend_30 { pt3dadd( -103.825, 57.1626, -0.669727, 0.83 ) }
    dend_30 { pt3dadd( -104.815, 59.5739, -1.25097, 0.28 ) }
    dend_30 { pt3dadd( -105.219, 60.946, -1.7039, 0.55 ) }
    dend_30 { pt3dadd( -105.462, 62.0588, -2.26088, 0.28 ) }
    dend_30 { pt3dadd( -105.874, 64.2441, -3.79505, 0.55 ) }
    dend_30 { pt3dadd( -106.212, 66.4897, -5.67967, 0.55 ) }
    dend_30 { pt3dadd( -106.686, 69.6396, -8.54538, 0.28 ) }
    dend_30 { pt3dadd( -106.938, 71.6493, -10.8556, 0.83 ) }
    dend_30 { pt3dadd( -107.217, 74.4657, -14.4985, 0.55 ) }
    dend_30 { pt3dadd( -107.359, 76.4631, -17.2866, 0.55 ) }
    dend_30 { pt3dadd( -107.427, 77.2904, -18.4962, 0.55 ) }
    dend_30 { pt3dadd( -107.561, 78.5129, -20.4723, 0.83 ) }
    dend_30 { pt3dadd( -108.069, 81.8822, -25.8544, 0.28 ) }
    dend_30 { pt3dadd( -108.22, 82.5623, -26.9856, 0.83 ) }
    dend_30 { pt3dadd( -108.498, 83.5234, -28.4518, 0.28 ) }
    dend_30 { pt3dadd( -108.876, 84.5337, -29.8035, 0.55 ) }
    dend_30 { pt3dadd( -110.318, 86.9943, -32.825, 0.83 ) }
    dend_30 { pt3dadd( -110.99, 87.8436, -33.3932, 0.83 ) }
    dend_30 { pt3dadd( -112.303, 89.3313, -33.549, 0.28 ) }
    dend_30 { pt3dadd( -112.965, 90.072, -33.4443, 0.55 ) }
    dend_30 { pt3dadd( -114.531, 91.8747, -32.8753, 0.28 ) }
    dend_30 { pt3dadd( -115.622, 93.304, -32.3165, 0.55 ) }
    dend_30 { pt3dadd( -118.468, 97.5203, -29.6432, 0.28 ) }
    dend_30 { pt3dadd( -119.011, 98.3866, -29.0135, 0.55 ) }
    dend_30 { pt3dadd( -119.802, 99.8286, -27.9523, 0.28 ) }
    dend_30 { pt3dadd( -120.381, 101.007, -27.0637, 0.83 ) }
    dend_30 { pt3dadd( -121.273, 102.978, -25.5557, 0.83 ) }
    dend_30 { pt3dadd( -123.573, 108.75, -21.3993, 0.28 ) }
    dend_30 { pt3dadd( -123.876, 109.619, -20.8388, 0.55 ) }
    dend_30 { pt3dadd( -124.855, 112.681, -18.9572, 0.28 ) }
    dend_30 { pt3dadd( -125.372, 114.435, -17.9453, 0.83 ) }
    dend_30 { pt3dadd( -125.888, 116.348, -16.932, 0.28 ) }
    dend_30 { pt3dadd( -126.286, 117.925, -16.2397, 0.83 ) }
    dend_30 { pt3dadd( -127.049, 121.284, -15.3222, 0.28 ) }
    dend_30 { pt3dadd( -127.366, 122.81, -15.0096, 0.83 ) }
    dend_30 { pt3dadd( -127.907, 125.648, -14.6926, 0.28 ) }
    dend_30 { pt3dadd( -128.223, 127.341, -14.771, 0.55 ) }
    dend_30 { pt3dadd( -128.526, 129.069, -15.118, 0.28 ) }
    dend_30 { pt3dadd( -128.859, 131.018, -15.9448, 0.55 ) }
    dend_30 { pt3dadd( -129.263, 133.335, -17.3447, 0.28 ) }
    dend_30 { pt3dadd( -129.422, 134.283, -18.0377, 0.83 ) }
    dend_30 { pt3dadd( -129.807, 136.586, -19.9138, 0.28 ) }
    dend_30 { pt3dadd( -130.12, 138.244, -21.5865, 0.83 ) }
    dend_30 { pt3dadd( -130.678, 141.171, -24.7155, 0.28 ) }
    dend_30 { pt3dadd( -130.848, 142.089, -25.8872, 0.83 ) }
    dend_30 { pt3dadd( -131.123, 143.673, -28.2011, 0.28 ) }
    dend_30 { pt3dadd( -131.213, 144.273, -29.2489, 0.83 ) }
    dend_30 { pt3dadd( -131.648, 147.686, -35.741, 0.28 ) }
    dend_30 { pt3dadd( -131.815, 148.945, -38.5011, 0.83 ) }
    dend_30 { pt3dadd( -132.136, 151.743, -45.0727, 0.28 ) }
    dend_30 { pt3dadd( -132.203, 152.714, -47.5795, 0.83 ) }
    dend_30 { pt3dadd( -132.312, 154.415, -52.3, 0.28 ) }
    dend_30 { pt3dadd( -132.346, 154.928, -53.8211, 0.55 ) }
    dend_30 { pt3dadd( -132.52, 156.505, -58.1982, 0.28 ) }
    dend_30 { pt3dadd( -132.619, 157.028, -59.5927, 0.28 ) }
    dend_30 { pt3dadd( -133.007, 158.433, -62.6392, 0.55 ) }
    dend_30 { pt3dadd( -134.06, 160.522, -67.1484, 0.28 ) }
    dend_30 { pt3dadd( -134.988, 161.956, -70.1917, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -135.89, 163.2, -73.1672, 0.28 ) }
    dend_30 { pt3dadd( -136.366, 163.809, -74.6394, 0.55 ) }
    dend_30 { pt3dadd( -137.203, 164.818, -76.8199, 0.28 ) }
    dend_30 { pt3dadd( -141.437, 169.761, -86.0581, 0.28 ) }
    dend_30 { pt3dadd( -141.938, 170.364, -87.0676, 0.83 ) }
    dend_30 { pt3dadd( -145.237, 174.428, -93.4155, 0.28 ) }
    dend_30 { pt3dadd( -145.588, 174.872, -94.137, 0.83 ) }
    dend_30 { pt3dadd( -149.514, 180.276, -101.864, 0.28 ) }
    dend_30 { pt3dadd( -149.854, 180.878, -102.382, 0.55 ) }
    dend_30 { pt3dadd( -151.132, 184.107, -102.39, 0.28 ) }
    dend_30 { pt3dadd( -151.532, 185.082, -102.486, 0.55 ) }
    dend_30 { pt3dadd( -152.19, 186.546, -102.534, 0.28 ) }
    dend_30 { pt3dadd( -152.71, 187.731, -103.357, 0.55 ) }
    dend_30 { pt3dadd( -153.489, 189.514, -105.314, 0.28 ) }
    dend_30 { pt3dadd( -153.858, 190.353, -106.25, 1.11 ) }
    dend_30 { pt3dadd( -154.876, 192.259, -108.281, 0.28 ) }
    dend_30 { pt3dadd( -155.314, 193.016, -109.179, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -48.048, -32.7447, 20.3341, 0.55 ) }
    dend_29 { pt3dadd( -51.1042, -34.3618, 20.7019, 0.55 ) }
    dend_29 { pt3dadd( -52.465, -34.995, 20.8922, 0.55 ) }
    dend_29 { pt3dadd( -54.5612, -35.8908, 21.259, 0.83 ) }
    dend_29 { pt3dadd( -56.7034, -36.8104, 21.6641, 0.55 ) }
    dend_29 { pt3dadd( -58.4826, -37.6726, 22.1091, 0.55 ) }
    dend_29 { pt3dadd( -59.3079, -38.1231, 22.3471, 0.83 ) }
    dend_29 { pt3dadd( -60.4795, -38.8754, 22.8082, 0.55 ) }
    dend_29 { pt3dadd( -62.4518, -40.287, 23.9647, 0.55 ) }
    dend_29 { pt3dadd( -63.4037, -41.0759, 24.7015, 0.55 ) }
    dend_29 { pt3dadd( -65.0576, -42.6736, 26.2347, 0.55 ) }
    dend_29 { pt3dadd( -65.7545, -43.4412, 27.0221, 0.28 ) }
    dend_29 { pt3dadd( -67.2612, -45.2846, 28.9438, 0.83 ) }
    dend_29 { pt3dadd( -68.9532, -47.4583, 31.4054, 0.55 ) }
    dend_29 { pt3dadd( -69.2495, -47.8372, 31.8693, 0.55 ) }
    dend_29 { pt3dadd( -70.2104, -48.9686, 33.3207, 0.83 ) }
    dend_29 { pt3dadd( -71.4063, -50.1784, 34.9321, 0.55 ) }
    dend_29 { pt3dadd( -72.3078, -51.0073, 36.0684, 0.83 ) }
    dend_29 { pt3dadd( -74.8461, -53.1461, 38.7804, 0.55 ) }
    dend_29 { pt3dadd( -76.0439, -54.0942, 39.7918, 0.83 ) }
    dend_29 { pt3dadd( -77.5844, -55.1995, 40.8927, 0.28 ) }
    dend_29 { pt3dadd( -78.8358, -55.9845, 41.598, 0.55 ) }
    dend_29 { pt3dadd( -80.2589, -56.7786, 42.1533, 0.55 ) }
    dend_29 { pt3dadd( -82.3945, -57.875, 42.7238, 0.28 ) }
    dend_29 { pt3dadd( -83.3434, -58.3312, 42.8357, 0.28 ) }
    dend_29 { pt3dadd( -84.1691, -58.7027, 42.9102, 0.55 ) }
    dend_29 { pt3dadd( -86.3909, -59.8093, 43.128, 0.28 ) }
    dend_29 { pt3dadd( -87.2103, -60.2974, 43.2987, 0.55 ) }
    dend_29 { pt3dadd( -87.608, -60.5646, 43.3958, 0.28 ) }
    dend_29 { pt3dadd( -88.6514, -61.3395, 43.7562, 0.28 ) }
    dend_29 { pt3dadd( -89.3448, -61.8605, 44.0016, 0.55 ) }
    dend_29 { pt3dadd( -90.7173, -62.9755, 44.4944, 0.28 ) }
    dend_29 { pt3dadd( -92.0952, -64.231, 44.9632, 0.55 ) }
    dend_29 { pt3dadd( -93.7899, -65.771, 45.5858, 0.28 ) }
    dend_29 { pt3dadd( -95.0587, -66.9685, 46.0786, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -76.3685, 8.13779, 27.9623, 0.28 ) }
    dend_25 { pt3dadd( -79.6347, 10.9425, 27.8124, 0.28 ) }
    dend_25 { pt3dadd( -80.512, 11.8051, 27.7711, 0.55 ) }
    dend_25 { pt3dadd( -82.3989, 13.7124, 27.7085, 0.28 ) }
    dend_25 { pt3dadd( -82.8162, 14.1765, 27.7052, 0.55 ) }
    dend_25 { pt3dadd( -86.7124, 18.8439, 27.7681, 0.28 ) }
    dend_25 { pt3dadd( -89.7375, 22.5529, 27.9694, 0.28 ) }
    dend_25 { pt3dadd( -91.5015, 24.989, 28.1855, 0.28 ) }
    dend_25 { pt3dadd( -92.745, 26.8533, 28.4014, 0.55 ) }
    dend_25 { pt3dadd( -95.5026, 31.3036, 28.8217, 0.28 ) }
    dend_25 { pt3dadd( -96.5197, 32.9819, 29.0189, 0.55 ) }
    dend_25 { pt3dadd( -98.079, 35.6726, 29.4544, 0.28 ) }
    dend_25 { pt3dadd( -98.8835, 37.2063, 29.7308, 0.55 ) }
    dend_25 { pt3dadd( -100.139, 39.7455, 30.2247, 0.28 ) }
    dend_25 { pt3dadd( -101.69, 43.2634, 30.8552, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -76.3685, 8.13779, 27.9623, 0.28 ) }
    dend_24 { pt3dadd( -73.5021, 7.43361, 26.4921, 0.28 ) }
    dend_24 { pt3dadd( -72.7039, 7.26201, 25.9974, 0.83 ) }
    dend_24 { pt3dadd( -68.8746, 6.67412, 23.8627, 0.28 ) }
    dend_24 { pt3dadd( -68.4752, 6.61832, 23.6529, 0.83 ) }
    dend_24 { pt3dadd( -64.9557, 6.18616, 22.0895, 0.28 ) }
    dend_24 { pt3dadd( -63.9135, 6.05804, 21.6777, 0.83 ) }
    dend_24 { pt3dadd( -57.0793, 5.37668, 19.249, 0.28 ) }
    dend_24 { pt3dadd( -53.2219, 5.02072, 18.0397, 0.28 ) }
    dend_24 { pt3dadd( -52.3743, 4.95501, 17.8274, 1.11 ) }
    dend_24 { pt3dadd( -47.9436, 4.61816, 16.9524, 0.28 ) }
    dend_24 { pt3dadd( -46.6401, 4.50301, 16.6984, 0.55 ) }
    dend_24 { pt3dadd( -41.8631, 4.02245, 15.6974, 0.28 ) }
    dend_24 { pt3dadd( -39.6408, 3.74764, 15.2537, 0.28 ) }
    dend_24 { pt3dadd( -38.2542, 3.54218, 14.903, 0.55 ) }
    dend_24 { pt3dadd( -36.1683, 3.22867, 14.3007, 0.28 ) }
    dend_24 { pt3dadd( -30.0328, 2.10748, 12.0634, 0.28 ) }
    dend_24 { pt3dadd( -26.82, 1.47557, 10.8247, 0.28 ) }
    dend_24 { pt3dadd( -26.1239, 1.28434, 10.5442, 0.83 ) }
    dend_24 { pt3dadd( -24.6158, 0.78465, 9.92443, 0.28 ) }
    dend_24 { pt3dadd( -24.6158, 0.78465, 9.92443, 0.83 ) }
    dend_24 { pt3dadd( -21.3387, -0.46387, 8.7167, 0.28 ) }
    dend_24 { pt3dadd( -20.497, -0.864954, 8.5332, 0.83 ) }
    dend_24 { pt3dadd( -18.0155, -2.39078, 7.75096, 0.28 ) }
    dend_24 { pt3dadd( -16.5166, -3.3803, 7.22219, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -31.3031, 49.0105, -23.7042, 0.28 ) }
    dend_18 { pt3dadd( -32.4779, 47.4904, -24.4897, 0.28 ) }
    dend_18 { pt3dadd( -33.3953, 46.2998, -25.222, 0.83 ) }
    dend_18 { pt3dadd( -34.3924, 44.9975, -26.0033, 0.55 ) }
    dend_18 { pt3dadd( -35.4253, 43.6577, -26.9777, 1.11 ) }
    dend_18 { pt3dadd( -38.2436, 39.8218, -30.0538, 0.28 ) }
    dend_18 { pt3dadd( -38.4412, 39.5583, -30.302, 0.83 ) }
    dend_18 { pt3dadd( -39.3336, 38.3658, -31.6417, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -39.8831, 37.6182, -32.5591, 0.83 ) }
    dend_18 { pt3dadd( -41.8997, 34.8874, -36.1464, 0.28 ) }
    dend_18 { pt3dadd( -42.4213, 34.1965, -37.0529, 0.83 ) }
    dend_18 { pt3dadd( -44.3425, 31.8977, -40.5659, 0.28 ) }
    dend_18 { pt3dadd( -44.6884, 31.4939, -41.2368, 0.55 ) }
    dend_18 { pt3dadd( -45.2836, 30.8135, -42.4279, 0.55 ) }
    dend_18 { pt3dadd( -45.8973, 30.1196, -43.709, 0.55 ) }
    dend_18 { pt3dadd( -46.7014, 29.2405, -45.3391, 1.11 ) }
    dend_18 { pt3dadd( -49.9725, 25.7399, -52.5384, 0.55 ) }
    dend_18 { pt3dadd( -50.4249, 25.2341, -53.6548, 0.28 ) }
    dend_18 { pt3dadd( -50.5577, 25.0996, -53.9956, 0.55 ) }
    dend_18 { pt3dadd( -51.4458, 24.2929, -56.2712, 0.28 ) }
    dend_18 { pt3dadd( -51.8092, 23.9485, -57.29, 0.83 ) }
    dend_18 { pt3dadd( -53.892, 21.9412, -63.4439, 0.28 ) }
    dend_18 { pt3dadd( -53.9865, 21.852, -63.7065, 0.55 ) }
    dend_18 { pt3dadd( -56.1087, 19.8727, -69.5569, 0.28 ) }
    dend_18 { pt3dadd( -56.482, 19.495, -70.6142, 0.55 ) }
    dend_18 { pt3dadd( -57.5725, 18.3519, -73.5466, 0.28 ) }
    dend_18 { pt3dadd( -57.7629, 18.1384, -74.051, 0.83 ) }
    dend_18 { pt3dadd( -58.6844, 17.0456, -76.3346, 0.28 ) }
    dend_18 { pt3dadd( -59.1439, 16.4915, -77.4643, 0.83 ) }
    dend_18 { pt3dadd( -61.3578, 13.5722, -82.8765, 0.28 ) }
    dend_18 { pt3dadd( -61.9144, 12.8623, -84.0991, 0.83 ) }
    dend_18 { pt3dadd( -64.1403, 10.129, -88.4865, 0.55 ) }
    dend_18 { pt3dadd( -64.4225, 9.77171, -89.0295, 0.83 ) }
    dend_18 { pt3dadd( -65.9664, 7.73701, -91.9289, 0.28 ) }
    dend_18 { pt3dadd( -66.4472, 7.08529, -92.7728, 0.55 ) }
    dend_18 { pt3dadd( -68.401, 4.33243, -95.9449, 0.28 ) }
    dend_18 { pt3dadd( -69.0957, 3.31906, -97.0823, 0.83 ) }
    dend_18 { pt3dadd( -72.4961, -1.75259, -102.246, 0.28 ) }
    dend_18 { pt3dadd( -72.6667, -2.01126, -102.506, 0.83 ) }
    dend_18 { pt3dadd( -73.7, -3.65408, -104.081, 0.28 ) }
    dend_18 { pt3dadd( -73.9623, -4.06519, -104.501, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -31.3031, 49.0105, -23.7042, 0.55 ) }
    dend_17 { pt3dadd( -32.4837, 51.4327, -23.9653, 0.55 ) }
    dend_17 { pt3dadd( -33.3562, 53.2739, -24.2086, 0.55 ) }
    dend_17 { pt3dadd( -34.238, 55.2308, -24.581, 0.28 ) }
    dend_17 { pt3dadd( -34.8111, 56.5301, -24.859, 1.38 ) }
    dend_17 { pt3dadd( -35.6521, 58.4339, -25.3456, 0.55 ) }
    dend_17 { pt3dadd( -36.5963, 60.5615, -25.9215, 0.55 ) }
    dend_17 { pt3dadd( -37.0154, 61.4632, -26.1566, 0.83 ) }
    dend_17 { pt3dadd( -37.7491, 63.0787, -26.6299, 0.28 ) }
    dend_17 { pt3dadd( -38.1329, 64.0091, -26.9111, 0.55 ) }
    dend_17 { pt3dadd( -38.7689, 65.6471, -27.3575, 0.28 ) }
    dend_17 { pt3dadd( -39.2284, 66.8256, -27.6029, 0.83 ) }
    dend_17 { pt3dadd( -40.146, 69.2205, -27.8676, 0.28 ) }
    dend_17 { pt3dadd( -40.5976, 70.5134, -28.0088, 0.55 ) }
    dend_17 { pt3dadd( -41.08, 72.0658, -28.1494, 0.28 ) }
    dend_17 { pt3dadd( -41.4081, 73.3974, -28.3214, 0.83 ) }
    dend_17 { pt3dadd( -41.8639, 75.9127, -28.6765, 0.28 ) }
    dend_17 { pt3dadd( -42.1679, 78.1658, -29.1111, 0.83 ) }
    dend_17 { pt3dadd( -42.4854, 81.9956, -29.9773, 0.28 ) }
    dend_17 { pt3dadd( -42.5295, 83.3347, -30.308, 0.83 ) }
    dend_17 { pt3dadd( -42.5271, 87.041, -31.4774, 0.28 ) }
    dend_17 { pt3dadd( -42.4641, 88.7727, -32.1079, 0.83 ) }
    dend_17 { pt3dadd( -42.3289, 90.9159, -32.9585, 0.28 ) }
    dend_17 { pt3dadd( -42.2123, 92.6135, -33.6871, 0.55 ) }
    dend_17 { pt3dadd( -42.0968, 94.3094, -34.4073, 0.83 ) }
    dend_17 { pt3dadd( -41.9577, 98.0435, -36.0099, 0.28 ) }
    dend_17 { pt3dadd( -41.973, 99.4896, -36.6059, 0.83 ) }
    dend_17 { pt3dadd( -42.0723, 101.433, -37.3976, 0.83 ) }
    dend_17 { pt3dadd( -42.266, 103.355, -38.1396, 0.28 ) }
    dend_17 { pt3dadd( -42.5575, 104.819, -38.7597, 0.83 ) }
    dend_17 { pt3dadd( -42.9736, 106.265, -39.3449, 0.28 ) }
    dend_17 { pt3dadd( -43.3398, 107.279, -39.698, 0.55 ) }
    dend_17 { pt3dadd( -43.6708, 108.008, -39.9673, 0.28 ) }
    dend_17 { pt3dadd( -44.4952, 109.479, -40.4608, 0.55 ) }
    dend_17 { pt3dadd( -46.201, 112.16, -41.1431, 0.28 ) }
    dend_17 { pt3dadd( -46.9059, 113.097, -41.3741, 0.55 ) }
    dend_17 { pt3dadd( -47.7434, 114.091, -41.5953, 0.28 ) }
    dend_17 { pt3dadd( -48.7104, 115.143, -41.8026, 0.83 ) }
    dend_17 { pt3dadd( -50.0291, 116.468, -41.9926, 0.28 ) }
    dend_17 { pt3dadd( -51.3569, 117.742, -42.0892, 0.83 ) }
    dend_17 { pt3dadd( -53.3633, 119.615, -42.0798, 0.28 ) }
    dend_17 { pt3dadd( -54.1492, 120.366, -42.1062, 0.83 ) }
    dend_17 { pt3dadd( -55.0494, 121.263, -42.149, 0.28 ) }
    dend_17 { pt3dadd( -56.2051, 122.521, -42.2287, 0.28 ) }
    dend_17 { pt3dadd( -56.7002, 123.148, -42.3237, 0.55 ) }
    dend_17 { pt3dadd( -57.7658, 124.796, -42.6782, 0.28 ) }
    dend_17 { pt3dadd( -58.5322, 126.302, -43.2107, 0.55 ) }
    dend_17 { pt3dadd( -58.9212, 127.191, -43.6153, 0.55 ) }
    dend_17 { pt3dadd( -59.4478, 128.538, -44.305, 0.83 ) }
    dend_17 { pt3dadd( -60.3965, 131.035, -45.8218, 0.28 ) }
    dend_17 { pt3dadd( -61.0698, 132.865, -47.0452, 0.83 ) }
    dend_17 { pt3dadd( -61.9903, 135.433, -49.008, 0.28 ) }
    dend_17 { pt3dadd( -62.3407, 136.375, -49.7934, 0.28 ) }
    dend_17 { pt3dadd( -62.8008, 137.693, -50.9182, 0.83 ) }
    dend_17 { pt3dadd( -63.6313, 140.193, -53.1248, 0.28 ) }
    dend_17 { pt3dadd( -63.9434, 141.116, -53.9116, 0.83 ) }
    dend_17 { pt3dadd( -65.0464, 144.513, -56.6744, 0.28 ) }
    dend_17 { pt3dadd( -65.5879, 146.163, -57.9913, 1.11 ) }
    dend_17 { pt3dadd( -66.6207, 149.415, -60.6184, 0.28 ) }
    dend_17 { pt3dadd( -67.011, 150.795, -61.7359, 0.55 ) }
    dend_17 { pt3dadd( -67.338, 152.082, -62.6837, 0.28 ) }
    dend_17 { pt3dadd( -67.6017, 153.131, -63.3935, 0.55 ) }
    dend_17 { pt3dadd( -68.2219, 155.893, -65.0759, 0.28 ) }
    dend_17 { pt3dadd( -68.4743, 157.002, -65.8267, 0.55 ) }
    dend_17 { pt3dadd( -68.8799, 158.698, -67.0291, 0.28 ) }
    dend_17 { pt3dadd( -69.1162, 159.811, -67.8905, 0.55 ) }
    dend_17 { pt3dadd( -69.3526, 161.159, -68.9894, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -69.6547, 163.162, -70.6465, 0.55 ) }
    dend_17 { pt3dadd( -70.1524, 166.854, -73.5101, 0.28 ) }
    dend_17 { pt3dadd( -70.3361, 168.385, -74.7443, 0.55 ) }
    dend_17 { pt3dadd( -70.5658, 170.574, -76.5142, 0.28 ) }
    dend_17 { pt3dadd( -70.6485, 171.799, -77.5451, 0.83 ) }
    dend_17 { pt3dadd( -70.694, 173.471, -78.9104, 0.28 ) }
    dend_17 { pt3dadd( -70.6906, 174.675, -79.913, 0.83 ) }
    dend_17 { pt3dadd( -70.6422, 176.755, -81.6132, 0.28 ) }
    dend_17 { pt3dadd( -70.6189, 177.698, -82.4638, 0.55 ) }
    dend_17 { pt3dadd( -70.5578, 179.028, -83.7079, 0.28 ) }
    dend_17 { pt3dadd( -70.4684, 180.156, -84.8168, 0.55 ) }
    dend_17 { pt3dadd( -70.2462, 183.419, -87.8973, 0.28 ) }
    dend_17 { pt3dadd( -70.1982, 184.543, -88.9127, 0.28 ) }
    dend_17 { pt3dadd( -70.2731, 186.99, -90.8604, 0.55 ) }
    dend_17 { pt3dadd( -70.4143, 189.011, -92.3009, 0.28 ) }
    dend_17 { pt3dadd( -70.5553, 190.091, -92.9642, 0.55 ) }
    dend_17 { pt3dadd( -71.1485, 192.91, -94.4003, 0.28 ) }
    dend_17 { pt3dadd( -71.7032, 194.473, -94.966, 0.83 ) }
    dend_17 { pt3dadd( -72.7854, 196.668, -95.5867, 0.28 ) }
    dend_17 { pt3dadd( -73.2415, 197.315, -95.7269, 0.55 ) }
    dend_17 { pt3dadd( -74.0939, 198.245, -95.9227, 0.28 ) }
    dend_17 { pt3dadd( -75.0058, 199.086, -96.1495, 0.55 ) }
    dend_17 { pt3dadd( -77.1337, 200.724, -96.6675, 0.28 ) }
    dend_17 { pt3dadd( -77.6314, 201.074, -96.7675, 0.55 ) }
    dend_17 { pt3dadd( -80.7733, 203.274, -97.4764, 0.28 ) }
    dend_17 { pt3dadd( -81.552, 203.891, -97.6693, 0.55 ) }
    dend_17 { pt3dadd( -82.5974, 204.862, -97.9186, 0.28 ) }
    dend_17 { pt3dadd( -83.6283, 205.9, -98.1744, 0.55 ) }
    dend_17 { pt3dadd( -85.2358, 207.758, -98.5717, 0.28 ) }
    dend_17 { pt3dadd( -86.1935, 208.967, -98.7798, 0.55 ) }
    dend_17 { pt3dadd( -88.0643, 211.825, -98.8683, 0.28 ) }
    dend_17 { pt3dadd( -88.7309, 213.0, -98.8885, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.04868, 83.9791, -28.0654, 0.55 ) }
    dend_15 { pt3dadd( -3.66595, 85.1683, -29.6659, 0.55 ) }
    dend_15 { pt3dadd( -2.29177, 87.0162, -33.2233, 0.55 ) }
    dend_15 { pt3dadd( -1.90959, 87.7813, -34.9698, 0.83 ) }
    dend_15 { pt3dadd( -1.64933, 88.405, -36.4866, 0.83 ) }
    dend_15 { pt3dadd( -1.02935, 90.1688, -40.886, 0.28 ) }
    dend_15 { pt3dadd( -0.799487, 90.8364, -42.5121, 0.83 ) }
    dend_15 { pt3dadd( -0.67035, 93.2643, -49.2965, 0.55 ) }
    dend_15 { pt3dadd( -0.824127, 93.7953, -50.9584, 0.28 ) }
    dend_15 { pt3dadd( -0.959957, 94.0383, -51.7824, 0.28 ) }
    dend_15 { pt3dadd( -1.29068, 94.4384, -53.1986, 0.55 ) }
    dend_15 { pt3dadd( -1.74816, 94.9279, -54.8426, 0.55 ) }
    dend_15 { pt3dadd( -3.33748, 96.7044, -60.2281, 0.28 ) }
    dend_15 { pt3dadd( -4.00325, 97.5831, -62.5704, 0.83 ) }
    dend_15 { pt3dadd( -5.34254, 99.5426, -67.491, 0.83 ) }
    dend_15 { pt3dadd( -6.44096, 101.291, -71.7101, 0.83 ) }
    dend_15 { pt3dadd( -7.75223, 103.542, -77.0321, 0.28 ) }
    dend_15 { pt3dadd( -8.16033, 104.334, -78.84, 0.28 ) }
    dend_15 { pt3dadd( -8.30552, 104.784, -79.7488, 0.55 ) }
    dend_15 { pt3dadd( -8.59686, 106.812, -83.5502, 0.28 ) }
    dend_15 { pt3dadd( -8.58738, 107.121, -84.0828, 0.55 ) }
    dend_15 { pt3dadd( -8.22186, 109.105, -87.5434, 0.28 ) }
    dend_15 { pt3dadd( -8.10763, 109.737, -88.9808, 0.55 ) }
    dend_15 { pt3dadd( -8.01425, 110.267, -90.4566, 0.28 ) }
    dend_15 { pt3dadd( -7.97831, 110.458, -91.0455, 0.55 ) }
    dend_15 { pt3dadd( -7.65869, 111.622, -95.1835, 0.28 ) }
    dend_15 { pt3dadd( -7.52573, 111.949, -96.4224, 0.55 ) }
    dend_15 { pt3dadd( -6.65625, 113.458, -103.004, 0.28 ) }
    dend_15 { pt3dadd( -6.38053, 113.883, -104.867, 0.28 ) }
    dend_15 { pt3dadd( -6.05048, 114.331, -106.746, 0.55 ) }
    dend_15 { pt3dadd( -5.35949, 115.279, -110.762, 0.28 ) }
    dend_15 { pt3dadd( -5.10911, 115.578, -111.991, 0.55 ) }
    dend_15 { pt3dadd( -4.03619, 116.78, -116.941, 0.28 ) }
    dend_15 { pt3dadd( -3.44091, 117.365, -119.35, 0.28 ) }
    dend_15 { pt3dadd( -2.92808, 117.87, -121.507, 0.83 ) }
    dend_15 { pt3dadd( -0.990887, 119.545, -128.933, 0.28 ) }
    dend_15 { pt3dadd( -0.444287, 119.963, -130.826, 0.28 ) }
    dend_15 { pt3dadd( 0.379083, 120.523, -133.373, 0.55 ) }
    dend_15 { pt3dadd( 1.16657, 121.006, -135.458, 0.28 ) }
    dend_15 { pt3dadd( 1.72701, 121.289, -136.952, 0.55 ) }
    dend_15 { pt3dadd( 2.31198, 121.55, -138.334, 0.28 ) }
    dend_15 { pt3dadd( 2.776, 121.738, -138.982, 0.55 ) }
    dend_15 { pt3dadd( 3.86785, 122.24, -140.527, 0.28 ) }
    dend_15 { pt3dadd( 5.55354, 123.199, -142.472, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.04868, 83.9791, -28.0654, 0.55 ) }
    dend_14 { pt3dadd( -5.28151, 86.8308, -27.4836, 0.55 ) }
    dend_14 { pt3dadd( -5.28679, 88.7411, -27.0212, 0.55 ) }
    dend_14 { pt3dadd( -5.28477, 89.5529, -26.8197, 0.55 ) }
    dend_14 { pt3dadd( -5.27148, 90.8482, -26.5092, 0.55 ) }
    dend_14 { pt3dadd( -5.26947, 91.9349, -26.2929, 0.55 ) }
    dend_14 { pt3dadd( -5.25132, 94.5456, -25.7807, 0.28 ) }
    dend_14 { pt3dadd( -5.23061, 95.466, -25.5949, 0.55 ) }
    dend_14 { pt3dadd( -5.13244, 96.7624, -25.2598, 0.55 ) }
    dend_14 { pt3dadd( -5.09324, 97.395, -25.0516, 0.83 ) }
    dend_14 { pt3dadd( -5.05949, 98.84, -24.5021, 0.28 ) }
    dend_14 { pt3dadd( -5.05248, 100.056, -24.0413, 0.83 ) }
    dend_14 { pt3dadd( -5.09204, 102.272, -23.1856, 0.28 ) }
    dend_14 { pt3dadd( -5.08758, 102.531, -23.0607, 0.83 ) }
    dend_14 { pt3dadd( -4.93418, 104.514, -21.9656, 0.55 ) }
    dend_14 { pt3dadd( -4.82713, 105.421, -21.413, 0.55 ) }
    dend_14 { pt3dadd( -4.63016, 106.755, -20.5731, 0.83 ) }
    dend_14 { pt3dadd( -4.21314, 109.187, -19.0158, 0.55 ) }
    dend_14 { pt3dadd( -3.84823, 111.053, -17.8148, 0.83 ) }
    dend_14 { pt3dadd( -3.63802, 111.999, -17.1937, 0.28 ) }
    dend_14 { pt3dadd( -3.43719, 112.825, -16.6921, 0.83 ) }
    dend_14 { pt3dadd( -3.14635, 114.052, -15.9544, 0.83 ) }
    dend_14 { pt3dadd( -2.71269, 116.204, -14.7097, 0.83 ) }
    dend_14 { pt3dadd( -2.45237, 117.983, -13.9021, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -2.39611, 118.588, -13.6571, 0.83 ) }
    dend_14 { pt3dadd( -2.25573, 120.425, -12.881, 0.83 ) }
    dend_14 { pt3dadd( -2.14799, 122.038, -12.1794, 0.28 ) }
    dend_14 { pt3dadd( -2.08882, 122.881, -11.7879, 0.55 ) }
    dend_14 { pt3dadd( -2.00719, 124.55, -11.0644, 0.28 ) }
    dend_14 { pt3dadd( -1.98891, 126.285, -10.2463, 0.55 ) }
    dend_14 { pt3dadd( -2.00107, 128.57, -9.0682, 0.28 ) }
    dend_14 { pt3dadd( -2.01236, 129.088, -8.77285, 0.83 ) }
    dend_14 { pt3dadd( -2.042, 130.133, -8.18824, 0.28 ) }
    dend_14 { pt3dadd( -2.07084, 131.391, -7.44571, 0.55 ) }
    dend_14 { pt3dadd( -2.04362, 133.238, -6.23243, 0.28 ) }
    dend_14 { pt3dadd( -2.03186, 133.591, -6.01558, 0.55 ) }
    dend_14 { pt3dadd( -1.98877, 134.355, -5.52442, 0.28 ) }
    dend_14 { pt3dadd( -1.89301, 135.161, -4.94445, 0.83 ) }
    dend_14 { pt3dadd( -1.68343, 136.22, -4.15076, 0.28 ) }
    dend_14 { pt3dadd( -1.32559, 137.536, -3.11495, 0.55 ) }
    dend_14 { pt3dadd( -1.03516, 138.439, -2.32109, 0.28 ) }
    dend_14 { pt3dadd( -0.862447, 138.998, -1.85154, 0.83 ) }
    dend_14 { pt3dadd( -0.486242, 140.175, -0.923343, 0.83 ) }
    dend_14 { pt3dadd( -0.116534, 141.355, -0.0680142, 0.55 ) }
    dend_14 { pt3dadd( 0.0889281, 141.993, 0.335129, 0.83 ) }
    dend_14 { pt3dadd( 1.18427, 145.541, 2.30381, 0.55 ) }
    dend_14 { pt3dadd( 1.57178, 146.868, 2.92615, 0.83 ) }
    dend_14 { pt3dadd( 2.77488, 151.186, 4.50789, 0.28 ) }
    dend_14 { pt3dadd( 2.97924, 152.088, 4.66678, 0.55 ) }
    dend_14 { pt3dadd( 3.33103, 153.846, 4.67355, 0.28 ) }
    dend_14 { pt3dadd( 3.52992, 154.885, 4.56241, 0.83 ) }
    dend_14 { pt3dadd( 3.86432, 156.974, 3.95323, 0.28 ) }
    dend_14 { pt3dadd( 4.01202, 158.219, 3.45368, 0.55 ) }
    dend_14 { pt3dadd( 4.16418, 161.595, 1.29224, 0.28 ) }
    dend_14 { pt3dadd( 4.18241, 163.073, 0.282764, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -11.0979, 286.601, 9.15761, 0.55 ) }
    dend_10 { pt3dadd( -10.9835, 289.097, 9.17278, 0.55 ) }
    dend_10 { pt3dadd( -10.9683, 292.073, 9.1378, 0.55 ) }
    dend_10 { pt3dadd( -10.9808, 294.931, 9.09759, 0.83 ) }
    dend_10 { pt3dadd( -11.0094, 296.907, 9.08168, 0.55 ) }
    dend_10 { pt3dadd( -11.0529, 299.362, 9.09296, 1.11 ) }
    dend_10 { pt3dadd( -11.0806, 303.126, 9.15833, 0.55 ) }
    dend_10 { pt3dadd( -11.0701, 305.792, 9.24638, 1.11 ) }
    dend_10 { pt3dadd( -10.9936, 307.811, 9.28828, 0.83 ) }
    dend_10 { pt3dadd( -10.7854, 309.713, 9.33821, 0.55 ) }
    dend_10 { pt3dadd( -10.2663, 312.207, 9.44868, 0.55 ) }
    dend_10 { pt3dadd( -9.55975, 314.359, 9.56965, 0.83 ) }
    dend_10 { pt3dadd( -8.44171, 316.606, 9.66913, 0.55 ) }
    dend_10 { pt3dadd( -7.00687, 318.821, 9.71001, 0.83 ) }
    dend_10 { pt3dadd( -5.71014, 320.497, 9.71726, 0.83 ) }
    dend_10 { pt3dadd( -4.47693, 321.873, 9.7004, 0.83 ) }
    dend_10 { pt3dadd( -3.39989, 322.97, 9.69359, 1.11 ) }
    dend_10 { pt3dadd( -1.06739, 325.265, 9.613, 0.83 ) }
    dend_10 { pt3dadd( -0.0692779, 326.26, 9.57436, 0.55 ) }
    dend_10 { pt3dadd( 1.50761, 327.861, 9.56833, 0.83 ) }
    dend_10 { pt3dadd( 3.79442, 330.339, 9.55174, 0.55 ) }
    dend_10 { pt3dadd( 5.23834, 331.885, 9.55612, 1.11 ) }
    dend_10 { pt3dadd( 7.40087, 334.232, 9.61317, 0.55 ) }
    dend_10 { pt3dadd( 8.1354, 335.065, 9.67188, 0.55 ) }
    dend_10 { pt3dadd( 9.12908, 336.236, 9.75915, 0.55 ) }
    dend_10 { pt3dadd( 11.3058, 339.062, 10.0241, 0.55 ) }
    dend_10 { pt3dadd( 12.1101, 340.243, 10.1833, 0.28 ) }
    dend_10 { pt3dadd( 12.5846, 341.053, 10.3119, 0.55 ) }
    dend_10 { pt3dadd( 13.3743, 342.616, 10.6233, 0.28 ) }
    dend_10 { pt3dadd( 13.9994, 344.0, 10.8705, 0.83 ) }
    dend_10 { pt3dadd( 15.0595, 346.617, 11.2985, 0.55 ) }
    dend_10 { pt3dadd( 15.3924, 347.493, 11.4548, 0.83 ) }
    dend_10 { pt3dadd( 16.0721, 349.381, 11.7538, 0.55 ) }
    dend_10 { pt3dadd( 16.5151, 350.604, 11.9214, 0.83 ) }
    dend_10 { pt3dadd( 17.8666, 354.328, 12.3712, 0.28 ) }
    dend_10 { pt3dadd( 18.7821, 356.793, 12.6212, 0.83 ) }
    dend_10 { pt3dadd( 19.7459, 359.34, 12.8439, 0.28 ) }
    dend_10 { pt3dadd( 20.5891, 361.587, 13.0166, 0.55 ) }
    dend_10 { pt3dadd( 21.4525, 363.961, 13.1747, 0.55 ) }
    dend_10 { pt3dadd( 22.1712, 366.115, 13.2364, 0.55 ) }
    dend_10 { pt3dadd( 22.5191, 367.312, 13.2223, 0.28 ) }
    dend_10 { pt3dadd( 22.8111, 368.47, 13.1774, 0.55 ) }
    dend_10 { pt3dadd( 23.2573, 370.712, 13.0507, 0.28 ) }
    dend_10 { pt3dadd( 23.4851, 372.037, 12.8988, 0.55 ) }
    dend_10 { pt3dadd( 23.8496, 374.451, 12.4871, 0.28 ) }
    dend_10 { pt3dadd( 24.0781, 376.093, 12.1643, 0.28 ) }
    dend_10 { pt3dadd( 24.3857, 378.39, 11.6828, 0.83 ) }
    dend_10 { pt3dadd( 24.6479, 380.45, 11.2134, 0.83 ) }
    dend_10 { pt3dadd( 25.1459, 384.381, 10.317, 0.55 ) }
    dend_10 { pt3dadd( 25.4483, 386.586, 9.86496, 0.55 ) }
    dend_10 { pt3dadd( 25.6784, 388.015, 9.64781, 0.55 ) }
    dend_10 { pt3dadd( 25.853, 388.829, 9.52788, 0.28 ) }
    dend_10 { pt3dadd( 26.14, 389.975, 9.37815, 0.55 ) }
    dend_10 { pt3dadd( 26.4162, 390.949, 9.30326, 0.28 ) }
    dend_10 { pt3dadd( 26.676, 391.861, 9.22468, 1.11 ) }
    dend_10 { pt3dadd( 27.4295, 394.623, 8.71799, 0.55 ) }
    dend_10 { pt3dadd( 27.8869, 396.637, 8.22656, 0.55 ) }
    dend_10 { pt3dadd( 28.2352, 398.407, 7.67184, 0.28 ) }
    dend_10 { pt3dadd( 28.4082, 399.41, 7.2679, 0.83 ) }
    dend_10 { pt3dadd( 28.9063, 402.297, 5.88749, 0.55 ) }
    dend_10 { pt3dadd( 29.2375, 404.166, 4.91986, 0.83 ) }
    dend_10 { pt3dadd( 29.6168, 406.228, 3.75082, 0.83 ) }
    dend_10 { pt3dadd( 30.0874, 408.316, 2.5029, 0.55 ) }
    dend_10 { pt3dadd( 30.5391, 409.962, 1.47129, 0.28 ) }
    dend_10 { pt3dadd( 31.031, 411.569, 0.469789, 0.55 ) }
    dend_10 { pt3dadd( 31.5065, 413.045, -0.43357, 0.55 ) }
    dend_10 { pt3dadd( 32.172, 414.982, -1.66602, 1.11 ) }
    dend_10 { pt3dadd( 33.0524, 417.533, -3.24357, 0.55 ) }
    dend_10 { pt3dadd( 33.4128, 418.638, -3.87789, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 33.7836, 419.833, -4.58617, 0.55 ) }
    dend_10 { pt3dadd( 34.548, 422.654, -6.33377, 0.55 ) }
    dend_10 { pt3dadd( 34.9369, 424.079, -7.24545, 0.83 ) }
    dend_10 { pt3dadd( 35.6966, 427.097, -9.05585, 0.28 ) }
    dend_10 { pt3dadd( 35.9013, 428.001, -9.5727, 0.55 ) }
    dend_10 { pt3dadd( 36.4795, 430.581, -10.9564, 0.28 ) }
    dend_10 { pt3dadd( 36.7736, 431.841, -11.5851, 0.55 ) }
    dend_10 { pt3dadd( 37.2433, 433.819, -12.44, 0.28 ) }
    dend_10 { pt3dadd( 37.6375, 435.797, -13.2078, 0.55 ) }
    dend_10 { pt3dadd( 37.8218, 436.824, -13.5587, 0.28 ) }
    dend_10 { pt3dadd( 38.1068, 438.51, -14.0505, 0.55 ) }
    dend_10 { pt3dadd( 38.5749, 441.316, -14.6222, 0.55 ) }
    dend_10 { pt3dadd( 38.8435, 442.766, -14.9269, 0.28 ) }
    dend_10 { pt3dadd( 39.0241, 444.044, -15.2356, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -11.0979, 286.601, 9.15761, 0.55 ) }
    dend_7 { pt3dadd( -12.9558, 288.444, 8.24138, 0.55 ) }
    dend_7 { pt3dadd( -15.1655, 290.742, 7.28916, 1.11 ) }
    dend_7 { pt3dadd( -17.6411, 293.136, 6.37214, 0.55 ) }
    dend_7 { pt3dadd( -18.4429, 293.931, 6.02757, 0.83 ) }
    dend_7 { pt3dadd( -20.3463, 295.87, 5.17021, 0.55 ) }
    dend_7 { pt3dadd( -21.9276, 297.41, 4.4684, 0.55 ) }
    dend_7 { pt3dadd( -23.1586, 298.588, 3.92017, 0.83 ) }
    dend_7 { pt3dadd( -26.8127, 301.985, 2.301, 0.55 ) }
    dend_7 { pt3dadd( -29.5559, 304.451, 1.21081, 0.55 ) }
    dend_7 { pt3dadd( -30.5182, 305.316, 0.79565, 0.83 ) }
    dend_7 { pt3dadd( -33.148, 307.633, -0.369967, 0.55 ) }
    dend_7 { pt3dadd( -33.5715, 308.0, -0.567059, 0.83 ) }
    dend_7 { pt3dadd( -34.9715, 309.253, -1.16282, 0.28 ) }
    dend_7 { pt3dadd( -35.2012, 309.472, -1.23041, 0.55 ) }
    dend_7 { pt3dadd( -36.6358, 310.79, -1.40344, 0.28 ) }
    dend_7 { pt3dadd( -37.5359, 311.668, -1.45261, 0.55 ) }
    dend_7 { pt3dadd( -38.5611, 312.631, -1.52982, 0.55 ) }
    dend_7 { pt3dadd( -41.3484, 315.116, -1.8003, 0.55 ) }
    dend_7 { pt3dadd( -43.2467, 316.816, -2.02487, 0.55 ) }
    dend_7 { pt3dadd( -44.6968, 318.189, -2.3252, 0.83 ) }
    dend_7 { pt3dadd( -46.6513, 320.135, -2.84575, 0.83 ) }
    dend_7 { pt3dadd( -49.0735, 322.802, -3.8479, 0.55 ) }
    dend_7 { pt3dadd( -50.7866, 324.833, -4.77089, 0.55 ) }
    dend_7 { pt3dadd( -52.5706, 327.124, -5.96104, 1.11 ) }
    dend_7 { pt3dadd( -54.459, 329.96, -7.4351, 0.55 ) }
    dend_7 { pt3dadd( -54.9408, 330.789, -7.86948, 0.83 ) }
    dend_7 { pt3dadd( -56.3706, 333.643, -9.20217, 0.28 ) }
    dend_7 { pt3dadd( -56.9823, 335.206, -10.1404, 0.55 ) }
    dend_7 { pt3dadd( -57.3416, 336.265, -10.9112, 0.28 ) }
    dend_7 { pt3dadd( -57.6432, 337.31, -11.719, 0.83 ) }
    dend_7 { pt3dadd( -58.1707, 339.56, -13.5038, 0.28 ) }
    dend_7 { pt3dadd( -58.5868, 341.607, -15.1626, 0.83 ) }
    dend_7 { pt3dadd( -59.8813, 349.598, -21.5761, 0.55 ) }
    dend_7 { pt3dadd( -60.0837, 351.142, -22.8206, 0.55 ) }
    dend_7 { pt3dadd( -60.2263, 352.548, -23.9336, 0.83 ) }
    dend_7 { pt3dadd( -60.3788, 354.347, -25.2763, 0.28 ) }
    dend_7 { pt3dadd( -60.4272, 355.229, -25.8363, 0.55 ) }
    dend_7 { pt3dadd( -60.5062, 356.551, -26.4958, 0.28 ) }
    dend_7 { pt3dadd( -60.6453, 358.344, -26.8796, 0.55 ) }
    dend_7 { pt3dadd( -60.8883, 360.871, -27.4671, 0.55 ) }
    dend_7 { pt3dadd( -61.0443, 362.313, -27.7998, 0.55 ) }
    dend_7 { pt3dadd( -61.2199, 363.922, -28.1421, 0.83 ) }
    dend_7 { pt3dadd( -61.467, 366.494, -28.6923, 0.28 ) }
    dend_7 { pt3dadd( -61.6672, 368.656, -29.129, 0.83 ) }
    dend_7 { pt3dadd( -61.8318, 371.324, -29.5969, 0.55 ) }
    dend_7 { pt3dadd( -61.896, 372.388, -29.7508, 0.55 ) }
    dend_7 { pt3dadd( -61.9866, 374.413, -29.9521, 0.83 ) }
    dend_7 { pt3dadd( -62.0508, 375.476, -30.0032, 0.55 ) }
    dend_7 { pt3dadd( -62.1961, 377.471, -29.9198, 0.83 ) }
    dend_7 { pt3dadd( -62.4557, 379.302, -29.8236, 0.28 ) }
    dend_7 { pt3dadd( -62.6035, 380.057, -29.8521, 0.28 ) }
    dend_7 { pt3dadd( -63.121, 382.085, -30.1225, 0.28 ) }
    dend_7 { pt3dadd( -63.3621, 382.96, -30.3205, 0.83 ) }
    dend_7 { pt3dadd( -63.9646, 385.002, -31.0119, 0.55 ) }
    dend_7 { pt3dadd( -64.6434, 387.261, -32.245, 0.83 ) }
    dend_7 { pt3dadd( -65.688, 390.333, -34.3893, 0.28 ) }
    dend_7 { pt3dadd( -66.056, 391.282, -35.233, 0.55 ) }
    dend_7 { pt3dadd( -66.4993, 392.214, -36.3019, 0.28 ) }
    dend_7 { pt3dadd( -66.8905, 392.873, -37.1228, 0.83 ) }
    dend_7 { pt3dadd( -68.4467, 395.286, -40.2116, 0.83 ) }
    dend_7 { pt3dadd( -68.9766, 396.058, -41.1846, 0.83 ) }
    dend_7 { pt3dadd( -70.7249, 398.446, -44.0038, 0.83 ) }
    dend_7 { pt3dadd( -72.8054, 401.193, -47.1449, 0.55 ) }
    dend_7 { pt3dadd( -74.0911, 402.812, -48.9903, 0.55 ) }
    dend_7 { pt3dadd( -75.2558, 404.278, -50.598, 0.55 ) }
    dend_7 { pt3dadd( -76.5366, 405.893, -52.2586, 0.55 ) }
    dend_7 { pt3dadd( -78.3574, 408.422, -54.6652, 0.55 ) }
    dend_7 { pt3dadd( -79.7958, 410.526, -56.395, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 38.1026, -35.7999, -44.7799, 0.55 ) }
    dend_45 { pt3dadd( 39.0329, -35.3211, -45.4452, 0.55 ) }
    dend_45 { pt3dadd( 39.9762, -34.7875, -46.1185, 0.83 ) }
    dend_45 { pt3dadd( 41.9, -33.6563, -47.4848, 0.28 ) }
    dend_45 { pt3dadd( 42.8744, -33.0621, -48.1549, 0.83 ) }
    dend_45 { pt3dadd( 45.2225, -31.6076, -49.6963, 0.28 ) }
    dend_45 { pt3dadd( 46.0236, -31.1078, -50.1953, 0.55 ) }
    dend_45 { pt3dadd( 47.8209, -29.9267, -51.3622, 0.55 ) }
    dend_45 { pt3dadd( 49.6884, -28.6213, -52.4945, 0.55 ) }
    dend_45 { pt3dadd( 51.2719, -27.5005, -53.3847, 0.28 ) }
    dend_45 { pt3dadd( 51.9177, -27.0386, -53.7245, 0.28 ) }
    dend_45 { pt3dadd( 52.5648, -26.5745, -54.0429, 0.55 ) }
    dend_45 { pt3dadd( 53.9482, -25.619, -54.6842, 0.28 ) }
    dend_45 { pt3dadd( 55.8069, -24.3549, -55.391, 0.55 ) }
    dend_45 { pt3dadd( 58.0147, -22.773, -56.3081, 0.28 ) }
    dend_45 { pt3dadd( 58.5896, -22.3625, -56.5601, 0.55 ) }
    dend_45 { pt3dadd( 60.9316, -20.6011, -57.61, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 62.456, -19.4186, -58.3121, 0.28 ) }
    dend_45 { pt3dadd( 64.2077, -18.0374, -59.1703, 0.83 ) }
    dend_45 { pt3dadd( 66.9751, -15.75, -60.6616, 0.55 ) }
    dend_45 { pt3dadd( 67.6472, -15.1874, -61.0429, 0.55 ) }
    dend_45 { pt3dadd( 69.0163, -14.0529, -61.9171, 0.55 ) }
    dend_45 { pt3dadd( 70.4062, -12.9528, -62.8663, 0.83 ) }
    dend_45 { pt3dadd( 72.466, -11.4123, -64.2948, 0.28 ) }
    dend_45 { pt3dadd( 73.0912, -10.9886, -64.6946, 0.55 ) }
    dend_45 { pt3dadd( 74.7106, -10.025, -65.4845, 0.28 ) }
    dend_45 { pt3dadd( 75.0069, -9.86236, -65.6195, 0.55 ) }
    dend_45 { pt3dadd( 76.3719, -9.23951, -66.1456, 0.55 ) }
    dend_45 { pt3dadd( 78.3667, -8.41801, -66.714, 0.28 ) }
    dend_45 { pt3dadd( 79.089, -8.13518, -66.8598, 0.55 ) }
    dend_45 { pt3dadd( 80.8282, -7.50691, -67.1674, 0.28 ) }
    dend_45 { pt3dadd( 81.5359, -7.26405, -67.2633, 0.55 ) }
    dend_45 { pt3dadd( 83.0488, -6.81697, -67.4647, 0.28 ) }
    dend_45 { pt3dadd( 83.9967, -6.62312, -67.6109, 0.55 ) }
    dend_45 { pt3dadd( 84.5126, -6.55733, -67.6776, 0.55 ) }
    dend_45 { pt3dadd( 85.9505, -6.36308, -67.7982, 0.28 ) }
    dend_45 { pt3dadd( 86.9019, -6.21864, -67.8212, 0.28 ) }
    dend_45 { pt3dadd( 87.8488, -6.01403, -67.8369, 0.55 ) }
    dend_45 { pt3dadd( 90.1642, -5.36713, -67.8337, 0.28 ) }
    dend_45 { pt3dadd( 91.7943, -4.77317, -67.799, 0.55 ) }
    dend_45 { pt3dadd( 93.3275, -4.08968, -67.7065, 0.55 ) }
    dend_45 { pt3dadd( 94.7424, -3.31467, -67.5577, 0.83 ) }
    dend_45 { pt3dadd( 96.8369, -1.95657, -67.2283, 0.28 ) }
    dend_45 { pt3dadd( 97.6091, -1.36106, -67.0679, 0.28 ) }
    dend_45 { pt3dadd( 98.9494, -0.109048, -66.6807, 0.55 ) }
    dend_45 { pt3dadd( 100.261, 1.27554, -66.2219, 0.28 ) }
    dend_45 { pt3dadd( 100.823, 1.91264, -65.9905, 0.55 ) }
    dend_45 { pt3dadd( 101.681, 2.95299, -65.5548, 0.55 ) }
    dend_45 { pt3dadd( 102.903, 4.50106, -64.8116, 0.28 ) }
    dend_45 { pt3dadd( 103.633, 5.44647, -64.356, 0.55 ) }
    dend_45 { pt3dadd( 104.732, 6.92624, -63.6543, 0.28 ) }
    dend_45 { pt3dadd( 105.953, 8.62432, -62.8915, 0.55 ) }
    dend_45 { pt3dadd( 107.202, 10.3924, -62.1256, 0.55 ) }
    dend_45 { pt3dadd( 107.748, 11.194, -61.7918, 0.55 ) }
    dend_45 { pt3dadd( 108.816, 12.8302, -61.1738, 0.55 ) }
    dend_45 { pt3dadd( 109.814, 14.3596, -60.6734, 0.55 ) }
    dend_45 { pt3dadd( 110.817, 15.9562, -60.2184, 0.55 ) }
    dend_45 { pt3dadd( 111.758, 17.4853, -59.8109, 0.28 ) }
    dend_45 { pt3dadd( 112.26, 18.2922, -59.6333, 0.55 ) }
    dend_45 { pt3dadd( 113.854, 20.8362, -59.1104, 0.28 ) }
    dend_45 { pt3dadd( 114.902, 22.5627, -58.8292, 0.28 ) }
    dend_45 { pt3dadd( 115.414, 23.4415, -58.7133, 0.55 ) }
    dend_45 { pt3dadd( 116.325, 25.0007, -58.5342, 0.28 ) }
    dend_45 { pt3dadd( 117.142, 26.4094, -58.387, 0.55 ) }
    dend_45 { pt3dadd( 117.759, 27.4897, -58.268, 0.55 ) }
    dend_45 { pt3dadd( 119.423, 30.5526, -57.9076, 0.28 ) }
    dend_45 { pt3dadd( 120.402, 32.4703, -57.68, 0.28 ) }
    dend_45 { pt3dadd( 120.783, 33.2566, -57.582, 0.55 ) }
    dend_45 { pt3dadd( 121.518, 34.8504, -57.3675, 0.55 ) }
    dend_45 { pt3dadd( 122.481, 37.0051, -56.9987, 0.28 ) }
    dend_45 { pt3dadd( 123.212, 38.6715, -56.6858, 0.55 ) }
    dend_45 { pt3dadd( 123.865, 40.2055, -56.3422, 0.28 ) }
    dend_45 { pt3dadd( 124.376, 41.5381, -56.0406, 0.55 ) }
    dend_45 { pt3dadd( 124.669, 42.3408, -55.8421, 0.28 ) }
    dend_45 { pt3dadd( 124.862, 42.8778, -55.6557, 0.55 ) }
    dend_45 { pt3dadd( 125.391, 44.4179, -54.9927, 0.28 ) }
    dend_45 { pt3dadd( 125.656, 45.1583, -54.6068, 0.55 ) }
    dend_45 { pt3dadd( 126.573, 47.5713, -53.2079, 0.28 ) }
    dend_45 { pt3dadd( 127.233, 49.2111, -52.2029, 0.55 ) }
    dend_45 { pt3dadd( 128.125, 51.3642, -50.812, 0.28 ) }
    dend_45 { pt3dadd( 128.625, 52.5143, -50.0444, 0.55 ) }
    dend_45 { pt3dadd( 129.217, 53.8145, -49.1355, 0.28 ) }
    dend_45 { pt3dadd( 129.758, 54.9663, -48.2942, 0.55 ) }
    dend_45 { pt3dadd( 130.277, 56.0446, -47.4911, 0.28 ) }
    dend_45 { pt3dadd( 130.666, 56.8829, -46.8817, 0.55 ) }
    dend_45 { pt3dadd( 131.595, 58.9965, -45.4347, 0.28 ) }
    dend_45 { pt3dadd( 132.057, 60.0701, -44.6669, 0.55 ) }
    dend_45 { pt3dadd( 132.678, 61.6178, -43.5406, 0.28 ) }
    dend_45 { pt3dadd( 132.897, 62.1918, -43.1008, 0.55 ) }
    dend_45 { pt3dadd( 133.408, 63.6592, -41.962, 0.28 ) }
    dend_45 { pt3dadd( 133.901, 65.2216, -40.7719, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 38.1026, -35.7999, -44.7799, 0.28 ) }
    dend_44 { pt3dadd( 41.7807, -36.0422, -46.2542, 0.28 ) }
    dend_44 { pt3dadd( 42.8754, -36.1127, -46.7569, 0.55 ) }
    dend_44 { pt3dadd( 44.3603, -36.1183, -47.5324, 0.55 ) }
    dend_44 { pt3dadd( 46.6241, -36.0614, -48.7356, 0.28 ) }
    dend_44 { pt3dadd( 47.9682, -36.0237, -49.421, 0.55 ) }
    dend_44 { pt3dadd( 52.6637, -35.8122, -51.6895, 0.28 ) }
    dend_44 { pt3dadd( 53.9201, -35.6659, -52.2568, 0.55 ) }
    dend_44 { pt3dadd( 56.8888, -35.1638, -53.5156, 0.28 ) }
    dend_44 { pt3dadd( 58.1511, -34.8813, -54.0069, 0.28 ) }
    dend_44 { pt3dadd( 60.2122, -34.33, -54.6912, 0.55 ) }
    dend_44 { pt3dadd( 62.1287, -33.8078, -55.2154, 0.55 ) }
    dend_44 { pt3dadd( 66.7908, -32.5651, -56.0706, 0.28 ) }
    dend_44 { pt3dadd( 68.5452, -32.1935, -56.3497, 0.55 ) }
    dend_44 { pt3dadd( 70.5527, -31.9142, -56.6276, 0.55 ) }
    dend_44 { pt3dadd( 74.2587, -31.6189, -57.1467, 0.28 ) }
    dend_44 { pt3dadd( 76.7083, -31.6062, -57.4837, 0.55 ) }
    dend_44 { pt3dadd( 79.8089, -31.9135, -57.8203, 0.28 ) }
    dend_44 { pt3dadd( 81.4881, -32.2823, -57.9461, 0.55 ) }
    dend_44 { pt3dadd( 84.5975, -33.2411, -58.1064, 0.28 ) }
    dend_44 { pt3dadd( 85.9306, -33.8053, -58.1164, 0.55 ) }
    dend_44 { pt3dadd( 87.4041, -34.6045, -58.0432, 0.55 ) }
    dend_44 { pt3dadd( 89.3242, -35.8949, -57.7398, 0.28 ) }
    dend_44 { pt3dadd( 90.4209, -36.7802, -57.4681, 0.28 ) }
    dend_44 { pt3dadd( 91.5954, -37.9754, -57.0512, 0.55 ) }
    dend_44 { pt3dadd( 93.0583, -39.8393, -56.3648, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 93.2516, -40.1307, -56.255, 0.55 ) }
    dend_44 { pt3dadd( 94.8613, -42.9735, -55.2966, 0.28 ) }
    dend_44 { pt3dadd( 95.0238, -43.3127, -55.2244, 0.83 ) }
    dend_44 { pt3dadd( 97.0876, -47.9783, -54.6172, 0.28 ) }
    dend_44 { pt3dadd( 97.4812, -48.8814, -54.6774, 0.55 ) }
    dend_44 { pt3dadd( 98.4294, -51.1436, -55.1544, 0.28 ) }
    dend_44 { pt3dadd( 99.0114, -52.5614, -55.5943, 0.55 ) }
    dend_44 { pt3dadd( 100.361, -55.8112, -57.0235, 0.28 ) }
    dend_44 { pt3dadd( 100.529, -56.2236, -57.2241, 0.55 ) }
    dend_44 { pt3dadd( 102.501, -61.0374, -59.9204, 0.28 ) }
    dend_44 { pt3dadd( 102.755, -61.7001, -60.2767, 0.55 ) }
    dend_44 { pt3dadd( 102.92, -62.1032, -60.4953, 0.55 ) }
    dend_44 { pt3dadd( 103.537, -63.5764, -61.1327, 0.28 ) }
    dend_44 { pt3dadd( 104.057, -64.801, -61.5357, 0.55 ) }
    dend_44 { pt3dadd( 104.996, -66.9038, -62.0482, 0.28 ) }
    dend_44 { pt3dadd( 105.392, -67.7625, -62.2147, 0.55 ) }
    dend_44 { pt3dadd( 107.924, -72.8836, -63.354, 0.28 ) }
    dend_44 { pt3dadd( 108.464, -73.925, -63.5984, 0.55 ) }
    dend_44 { pt3dadd( 109.1, -75.1103, -63.9434, 0.28 ) }
    dend_44 { pt3dadd( 111.214, -78.9161, -65.1871, 0.28 ) }
    dend_44 { pt3dadd( 111.87, -80.1534, -65.5599, 0.55 ) }
    dend_44 { pt3dadd( 113.692, -83.7253, -66.5241, 0.28 ) }
    dend_44 { pt3dadd( 113.827, -84.0308, -66.5826, 0.55 ) }
    dend_44 { pt3dadd( 115.406, -88.0465, -67.2781, 0.28 ) }
    dend_44 { pt3dadd( 116.074, -90.0391, -67.459, 0.55 ) }
    dend_44 { pt3dadd( 116.826, -92.6104, -67.4348, 0.28 ) }
    dend_44 { pt3dadd( 117.141, -93.6824, -67.3043, 0.55 ) }
    dend_44 { pt3dadd( 117.799, -95.8741, -66.8549, 0.28 ) }
    dend_44 { pt3dadd( 118.109, -96.8318, -66.6294, 0.55 ) }
    dend_44 { pt3dadd( 119.442, -100.534, -65.9666, 0.28 ) }
    dend_44 { pt3dadd( 120.63, -103.554, -65.6246, 0.28 ) }
    dend_44 { pt3dadd( 121.212, -104.851, -65.5914, 0.55 ) }
    dend_44 { pt3dadd( 122.742, -107.995, -65.6558, 0.28 ) }
    dend_44 { pt3dadd( 123.253, -108.943, -65.7038, 0.55 ) }
    dend_44 { pt3dadd( 126.715, -115.172, -66.1263, 0.28 ) }
    dend_44 { pt3dadd( 128.1, -117.502, -66.3723, 0.55 ) }
    dend_44 { pt3dadd( 130.28, -120.891, -66.7797, 0.28 ) }
    dend_44 { pt3dadd( 130.722, -121.551, -66.8652, 0.55 ) }
    dend_44 { pt3dadd( 132.942, -124.647, -67.2674, 0.28 ) }
    dend_44 { pt3dadd( 133.264, -125.059, -67.3085, 0.55 ) }
    dend_44 { pt3dadd( 134.619, -126.335, -67.2326, 0.28 ) }
    dend_44 { pt3dadd( 135.568, -127.102, -67.2377, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 33.5843, -50.1217, 17.632, 0.55 ) }
    dend_41 { pt3dadd( 34.6073, -49.7956, 19.0306, 0.55 ) }
    dend_41 { pt3dadd( 36.6606, -49.0435, 21.8554, 0.55 ) }
    dend_41 { pt3dadd( 40.428, -47.6486, 26.9276, 0.55 ) }
    dend_41 { pt3dadd( 43.33, -46.6003, 30.7712, 0.55 ) }
    dend_41 { pt3dadd( 45.9587, -45.73, 34.2151, 0.28 ) }
    dend_41 { pt3dadd( 47.4196, -45.2768, 36.0941, 0.83 ) }
    dend_41 { pt3dadd( 49.2388, -44.7531, 38.4824, 0.55 ) }
    dend_41 { pt3dadd( 50.6138, -44.4559, 40.2449, 0.28 ) }
    dend_41 { pt3dadd( 51.3111, -44.3591, 41.0006, 0.55 ) }
    dend_41 { pt3dadd( 52.8134, -44.1949, 42.4921, 0.28 ) }
    dend_41 { pt3dadd( 53.3164, -44.157, 42.9903, 0.55 ) }
    dend_41 { pt3dadd( 55.5168, -44.2127, 44.9406, 0.28 ) }
    dend_41 { pt3dadd( 56.9296, -44.4874, 46.0985, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 33.5843, -50.1217, 17.632, 0.28 ) }
    dend_40 { pt3dadd( 38.3822, -54.0396, 13.8178, 0.28 ) }
    dend_40 { pt3dadd( 39.0686, -54.5096, 13.3429, 0.83 ) }
    dend_40 { pt3dadd( 41.4834, -55.9614, 11.8062, 0.28 ) }
    dend_40 { pt3dadd( 42.2037, -56.2824, 11.3935, 0.83 ) }
    dend_40 { pt3dadd( 43.9078, -56.8714, 10.4643, 0.28 ) }
    dend_40 { pt3dadd( 44.637, -57.0614, 10.083, 0.83 ) }
    dend_40 { pt3dadd( 46.8892, -57.0482, 9.29177, 0.28 ) }
    dend_40 { pt3dadd( 47.3842, -56.9377, 9.08181, 0.83 ) }
    dend_40 { pt3dadd( 49.9007, -55.8992, 7.86393, 0.28 ) }
    dend_40 { pt3dadd( 50.5117, -55.6264, 7.55293, 0.28 ) }
    dend_40 { pt3dadd( 51.3782, -55.2151, 7.09486, 0.55 ) }
    dend_40 { pt3dadd( 53.0343, -54.3838, 6.54776, 0.28 ) }
    dend_40 { pt3dadd( 55.618, -53.0492, 6.06831, 0.28 ) }
    dend_40 { pt3dadd( 56.2791, -52.7024, 6.07989, 0.83 ) }
    dend_40 { pt3dadd( 61.0604, -50.2099, 6.90735, 0.28 ) }
    dend_40 { pt3dadd( 61.8829, -49.8091, 7.1415, 0.55 ) }
    dend_40 { pt3dadd( 67.8598, -46.9651, 9.6515, 0.28 ) }
    dend_40 { pt3dadd( 68.4998, -46.6589, 9.99573, 0.83 ) }
    dend_40 { pt3dadd( 72.3584, -44.6675, 12.529, 0.28 ) }
    dend_40 { pt3dadd( 72.8743, -44.3618, 12.9098, 0.55 ) }
    dend_40 { pt3dadd( 74.4169, -43.3187, 14.2036, 0.28 ) }
    dend_40 { pt3dadd( 75.8672, -42.3165, 15.3936, 0.55 ) }
    dend_40 { pt3dadd( 77.6796, -41.0721, 16.6479, 0.28 ) }
    dend_40 { pt3dadd( 78.4109, -40.5553, 17.1029, 0.55 ) }
    dend_40 { pt3dadd( 80.7075, -38.7585, 18.0998, 0.28 ) }
    dend_40 { pt3dadd( 81.5466, -38.0134, 18.4623, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 31.9964, -56.7221, 1.1343, 0.55 ) }
    dend_38 { pt3dadd( 33.4459, -57.3007, 0.229404, 0.55 ) }
    dend_38 { pt3dadd( 35.7634, -58.2488, -1.22617, 0.55 ) }
    dend_38 { pt3dadd( 37.4377, -58.9644, -2.29858, 0.28 ) }
    dend_38 { pt3dadd( 38.6329, -59.4681, -3.05526, 0.55 ) }
    dend_38 { pt3dadd( 40.5116, -60.2318, -4.19201, 0.55 ) }
    dend_38 { pt3dadd( 41.3245, -60.5843, -4.64364, 0.28 ) }
    dend_38 { pt3dadd( 41.8814, -60.8385, -4.97221, 0.55 ) }
    dend_38 { pt3dadd( 42.5093, -61.1799, -5.31817, 0.28 ) }
    dend_38 { pt3dadd( 43.438, -61.764, -5.81623, 0.55 ) }
    dend_38 { pt3dadd( 44.8241, -62.681, -6.45531, 0.55 ) }
    dend_38 { pt3dadd( 46.8204, -64.0171, -7.31957, 0.55 ) }
    dend_38 { pt3dadd( 49.3935, -65.7436, -8.80617, 1.38 ) }
    dend_38 { pt3dadd( 50.9798, -66.789, -9.88161, 0.83 ) }
    dend_38 { pt3dadd( 52.3036, -67.6127, -10.8694, 0.55 ) }
    dend_38 { pt3dadd( 53.9402, -68.578, -12.2018, 0.28 ) }
    dend_38 { pt3dadd( 55.9143, -69.6663, -13.9307, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 59.5322, -71.4439, -17.5401, 0.28 ) }
    dend_38 { pt3dadd( 59.9893, -71.6763, -18.0404, 0.28 ) }
    dend_38 { pt3dadd( 61.0933, -72.3008, -19.4303, 0.55 ) }
    dend_38 { pt3dadd( 61.8152, -72.7234, -20.4068, 0.55 ) }
    dend_38 { pt3dadd( 62.4488, -73.139, -21.3454, 0.55 ) }
    dend_38 { pt3dadd( 64.2218, -74.4552, -23.8581, 0.55 ) }
    dend_38 { pt3dadd( 65.9635, -75.9055, -26.1907, 0.28 ) }
    dend_38 { pt3dadd( 67.0107, -76.8666, -27.6544, 0.83 ) }
    dend_38 { pt3dadd( 67.6435, -77.4849, -28.5684, 0.83 ) }
    dend_38 { pt3dadd( 69.3211, -79.1203, -30.9519, 0.55 ) }
    dend_38 { pt3dadd( 70.0147, -79.7873, -31.871, 0.83 ) }
    dend_38 { pt3dadd( 71.0274, -80.6912, -32.9499, 0.28 ) }
    dend_38 { pt3dadd( 71.788, -81.2837, -33.6101, 0.55 ) }
    dend_38 { pt3dadd( 72.267, -81.6685, -33.9486, 0.28 ) }
    dend_38 { pt3dadd( 72.5066, -81.8748, -34.0851, 0.55 ) }
    dend_38 { pt3dadd( 73.6954, -82.8266, -34.5894, 0.28 ) }
    dend_38 { pt3dadd( 74.9828, -83.905, -35.2393, 0.28 ) }
    dend_38 { pt3dadd( 75.9751, -84.7512, -35.7309, 0.83 ) }
    dend_38 { pt3dadd( 76.8099, -85.552, -36.1685, 0.55 ) }
    dend_38 { pt3dadd( 78.8905, -87.6916, -37.2797, 0.28 ) }
    dend_38 { pt3dadd( 79.4904, -88.3767, -37.6482, 0.83 ) }
    dend_38 { pt3dadd( 81.3662, -90.7166, -38.8987, 0.28 ) }
    dend_38 { pt3dadd( 82.0532, -91.7176, -39.3936, 0.83 ) }
    dend_38 { pt3dadd( 83.2316, -93.5288, -40.1965, 0.28 ) }
    dend_38 { pt3dadd( 83.5633, -94.0487, -40.4317, 0.83 ) }
    dend_38 { pt3dadd( 84.9222, -96.2879, -41.3994, 0.28 ) }
    dend_38 { pt3dadd( 85.7437, -97.6652, -41.9687, 0.28 ) }
    dend_38 { pt3dadd( 86.5015, -98.8298, -42.3789, 0.55 ) }
    dend_38 { pt3dadd( 87.3837, -100.101, -42.8993, 0.55 ) }
    dend_38 { pt3dadd( 88.867, -102.03, -43.7463, 0.55 ) }
    dend_38 { pt3dadd( 89.6717, -103.008, -44.1862, 0.28 ) }
    dend_38 { pt3dadd( 90.1052, -103.51, -44.427, 0.55 ) }
    dend_38 { pt3dadd( 91.517, -105.133, -45.3531, 0.28 ) }
    dend_38 { pt3dadd( 92.5858, -106.272, -46.0634, 0.55 ) }
    dend_38 { pt3dadd( 93.6971, -107.501, -46.8372, 0.28 ) }
    dend_38 { pt3dadd( 94.0347, -107.867, -47.0448, 0.83 ) }
    dend_38 { pt3dadd( 95.4737, -109.417, -47.9995, 0.28 ) }
    dend_38 { pt3dadd( 95.8093, -109.756, -48.2268, 0.55 ) }
    dend_38 { pt3dadd( 96.6768, -110.557, -48.841, 0.55 ) }
    dend_38 { pt3dadd( 98.1841, -111.851, -49.6938, 0.28 ) }
    dend_38 { pt3dadd( 98.2439, -111.9, -49.7288, 0.55 ) }
    dend_38 { pt3dadd( 99.5716, -112.924, -50.6165, 0.28 ) }
    dend_38 { pt3dadd( 100.098, -113.298, -50.9748, 0.55 ) }
    dend_38 { pt3dadd( 101.485, -114.328, -52.0567, 0.28 ) }
    dend_38 { pt3dadd( 102.386, -114.989, -52.8265, 0.55 ) }
    dend_38 { pt3dadd( 103.998, -116.106, -54.2848, 0.55 ) }
    dend_38 { pt3dadd( 105.386, -117.084, -55.6074, 0.28 ) }
    dend_38 { pt3dadd( 106.228, -117.71, -56.4363, 0.83 ) }
    dend_38 { pt3dadd( 107.672, -118.826, -57.872, 0.28 ) }
    dend_38 { pt3dadd( 107.992, -119.042, -58.1494, 0.55 ) }
    dend_38 { pt3dadd( 109.209, -119.741, -59.1007, 0.28 ) }
    dend_38 { pt3dadd( 109.643, -119.932, -59.3316, 0.55 ) }
    dend_38 { pt3dadd( 111.778, -120.665, -60.2242, 0.28 ) }
    dend_38 { pt3dadd( 112.469, -120.853, -60.4771, 0.83 ) }
    dend_38 { pt3dadd( 115.22, -121.359, -61.1934, 0.28 ) }
    dend_38 { pt3dadd( 115.739, -121.43, -61.3038, 0.55 ) }
    dend_38 { pt3dadd( 117.882, -121.521, -61.5875, 0.28 ) }
    dend_38 { pt3dadd( 119.72, -121.434, -61.7961, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 31.9964, -56.7221, 1.1343, 0.55 ) }
    dend_35 { pt3dadd( 32.3656, -57.8938, -0.487082, 0.55 ) }
    dend_35 { pt3dadd( 33.0131, -60.4293, -3.88958, 0.55 ) }
    dend_35 { pt3dadd( 33.6105, -62.5991, -6.76813, 0.28 ) }
    dend_35 { pt3dadd( 34.0709, -64.1414, -8.87877, 0.83 ) }
    dend_35 { pt3dadd( 34.9415, -66.5713, -12.3097, 0.28 ) }
    dend_35 { pt3dadd( 35.1465, -67.119, -13.1428, 0.55 ) }
    dend_35 { pt3dadd( 35.3046, -67.5728, -13.9027, 0.55 ) }
    dend_35 { pt3dadd( 35.6846, -68.3747, -15.4923, 0.55 ) }
    dend_35 { pt3dadd( 36.3426, -69.5245, -17.9364, 0.55 ) }
    dend_35 { pt3dadd( 36.7193, -70.1271, -19.2856, 0.55 ) }
    dend_35 { pt3dadd( 37.998, -71.6337, -22.9231, 0.83 ) }
    dend_35 { pt3dadd( 38.8052, -72.5133, -25.1751, 0.28 ) }
    dend_35 { pt3dadd( 39.1096, -72.8503, -26.1087, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -73.9623, -4.06519, -104.501, 0.28 ) }
    dend_20 { pt3dadd( -74.6608, -4.19363, -104.338, 0.28 ) }
    dend_20 { pt3dadd( -75.5683, -4.36052, -104.127, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -73.9623, -4.06519, -104.501, 0.28 ) }
    dend_19 { pt3dadd( -74.9735, -5.90169, -106.048, 0.28 ) }
    dend_19 { pt3dadd( -75.2691, -6.43863, -106.5, 0.55 ) }
    dend_19 { pt3dadd( -76.194, -8.11854, -107.915, 0.28 ) }
    dend_19 { pt3dadd( -76.6034, -8.8621, -108.541, 0.83 ) }
    dend_19 { pt3dadd( -78.3951, -12.1161, -111.282, 0.28 ) }
    dend_19 { pt3dadd( -78.6895, -12.6509, -111.733, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -79.7958, 410.526, -56.395, 0.55 ) }
    dend_9 { pt3dadd( -80.316, 411.484, -57.873, 0.55 ) }
    dend_9 { pt3dadd( -80.8891, 412.618, -59.3851, 0.28 ) }
    dend_9 { pt3dadd( -81.4605, 413.749, -60.8931, 0.55 ) }
    dend_9 { pt3dadd( -83.1129, 417.02, -65.2533, 0.28 ) }
    dend_9 { pt3dadd( -83.3029, 417.396, -65.7546, 0.55 ) }
    dend_9 { pt3dadd( -84.5281, 419.821, -68.9877, 0.28 ) }
    dend_9 { pt3dadd( -85.0598, 420.878, -70.769, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -79.7958, 410.526, -56.395, 0.28 ) }
    dend_8 { pt3dadd( -81.6164, 409.802, -56.4877, 0.28 ) }
    dend_8 { pt3dadd( -82.6298, 409.399, -56.5393, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 133.901, 65.2216, -40.7719, 0.28 ) }
    dend_47 { pt3dadd( 130.175, 68.7141, -40.5395, 0.28 ) }
    dend_47 { pt3dadd( 128.913, 69.8979, -40.4608, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 133.901, 65.2216, -40.7719, 0.28 ) }
    dend_46 { pt3dadd( 134.439, 66.8043, -39.9546, 0.28 ) }
    dend_46 { pt3dadd( 135.41, 69.7832, -38.3785, 0.28 ) }
    dend_46 { pt3dadd( 135.64, 70.5808, -37.9188, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 136.353, 73.4749, -36.0944, 0.28 ) }
    dend_46 { pt3dadd( 136.763, 75.1379, -35.0461, 0.55 ) }
    dend_46 { pt3dadd( 137.293, 77.2863, -33.6917, 0.28 ) }
    dend_46 { pt3dadd( 137.525, 78.4097, -32.9146, 0.55 ) }
    dend_46 { pt3dadd( 137.8, 80.1763, -31.5466, 0.28 ) }
    dend_46 { pt3dadd( 137.967, 81.614, -30.4206, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 39.1096, -72.8503, -26.1087, 0.55 ) }
    dend_37 { pt3dadd( 38.1617, -73.8886, -28.1159, 0.55 ) }
    dend_37 { pt3dadd( 37.7388, -74.405, -29.0777, 0.28 ) }
    dend_37 { pt3dadd( 37.4495, -74.7239, -29.7198, 0.83 ) }
    dend_37 { pt3dadd( 35.5802, -76.5645, -33.4977, 0.28 ) }
    dend_37 { pt3dadd( 35.0494, -77.1068, -34.553, 0.83 ) }
    dend_37 { pt3dadd( 32.7211, -79.5362, -39.0136, 0.28 ) }
    dend_37 { pt3dadd( 32.3953, -79.8712, -39.6279, 0.83 ) }
    dend_37 { pt3dadd( 30.3131, -81.7604, -43.272, 0.28 ) }
    dend_37 { pt3dadd( 29.6698, -82.2873, -44.2672, 0.55 ) }
    dend_37 { pt3dadd( 26.7249, -84.4003, -48.3088, 0.28 ) }
    dend_37 { pt3dadd( 26.1221, -84.8017, -49.1274, 0.28 ) }
    dend_37 { pt3dadd( 24.8198, -85.5978, -50.8837, 0.83 ) }
    dend_37 { pt3dadd( 20.9908, -87.8175, -56.0996, 0.28 ) }
    dend_37 { pt3dadd( 19.9527, -88.4044, -57.5716, 0.55 ) }
    dend_37 { pt3dadd( 17.9383, -89.5028, -60.5106, 0.55 ) }
    dend_37 { pt3dadd( 16.4365, -90.2521, -62.6791, 0.55 ) }
    dend_37 { pt3dadd( 13.8604, -91.5792, -66.4376, 0.28 ) }
    dend_37 { pt3dadd( 13.1471, -92.0006, -67.4948, 0.83 ) }
    dend_37 { pt3dadd( 10.729, -93.5801, -70.9738, 0.28 ) }
    dend_37 { pt3dadd( 10.2564, -93.9224, -71.6262, 0.55 ) }
    dend_37 { pt3dadd( 8.06537, -95.6286, -74.1896, 0.28 ) }
    dend_37 { pt3dadd( 7.37684, -96.1295, -74.8683, 0.55 ) }
    dend_37 { pt3dadd( 4.66539, -98.1362, -77.2039, 0.28 ) }
    dend_37 { pt3dadd( 4.42061, -98.3052, -77.4096, 0.83 ) }
    dend_37 { pt3dadd( 2.92721, -99.2523, -78.4795, 0.28 ) }
    dend_37 { pt3dadd( 1.69278, -99.9977, -79.2558, 0.55 ) }
    dend_37 { pt3dadd( -2.10384, -102.147, -81.5088, 0.28 ) }
    dend_37 { pt3dadd( -3.25743, -102.807, -82.1284, 0.83 ) }
    dend_37 { pt3dadd( -8.31092, -105.718, -84.4996, 0.28 ) }
    dend_37 { pt3dadd( -10.4915, -107.004, -85.479, 0.55 ) }
    dend_37 { pt3dadd( -13.3551, -108.77, -86.7839, 0.55 ) }
    dend_37 { pt3dadd( -16.5523, -110.865, -88.1623, 0.28 ) }
    dend_37 { pt3dadd( -19.2538, -112.758, -89.1701, 0.55 ) }
    dend_37 { pt3dadd( -21.1734, -114.158, -89.9822, 0.28 ) }
    dend_37 { pt3dadd( -21.4527, -114.378, -90.1074, 0.55 ) }
    dend_37 { pt3dadd( -23.1442, -115.663, -90.9723, 0.28 ) }
    dend_37 { pt3dadd( -24.4611, -116.571, -91.6716, 0.55 ) }
    dend_37 { pt3dadd( -25.9128, -117.456, -92.4722, 0.55 ) }
    dend_37 { pt3dadd( -28.397, -118.712, -93.9944, 0.28 ) }
    dend_37 { pt3dadd( -29.4686, -119.177, -94.624, 0.55 ) }
    dend_37 { pt3dadd( -31.0105, -119.808, -95.514, 0.28 ) }
    dend_37 { pt3dadd( -32.0015, -120.173, -96.0456, 0.55 ) }
    dend_37 { pt3dadd( -34.6847, -121.096, -97.4905, 0.28 ) }
    dend_37 { pt3dadd( -35.579, -121.384, -98.0121, 0.55 ) }
    dend_37 { pt3dadd( -37.8209, -122.141, -99.3242, 0.28 ) }
    dend_37 { pt3dadd( -39.2175, -122.677, -100.336, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 39.1096, -72.8503, -26.1087, 0.28 ) }
    dend_36 { pt3dadd( 44.5138, -73.5414, -26.7179, 0.28 ) }
    dend_36 { pt3dadd( 45.2933, -73.6688, -26.8789, 0.83 ) }
    dend_36 { pt3dadd( 48.8595, -74.438, -27.658, 0.28 ) }
    dend_36 { pt3dadd( 50.1073, -74.6744, -27.9389, 0.28 ) }
    dend_36 { pt3dadd( 51.6424, -75.0352, -28.3444, 0.55 ) }
    dend_36 { pt3dadd( 54.3271, -75.7293, -29.4115, 0.28 ) }
    dend_36 { pt3dadd( 57.1654, -76.6001, -30.9546, 0.55 ) }
    dend_36 { pt3dadd( 58.8246, -77.2247, -31.9153, 0.55 ) }
    dend_36 { pt3dadd( 60.8549, -78.1268, -33.347, 0.55 ) }
    dend_36 { pt3dadd( 64.3571, -79.7584, -36.14, 0.83 ) }
    dend_36 { pt3dadd( 68.4991, -81.7657, -39.8295, 0.28 ) }
    dend_36 { pt3dadd( 69.9138, -82.4761, -41.1801, 0.28 ) }
    dend_36 { pt3dadd( 70.627, -82.8957, -41.9626, 0.83 ) }
    dend_36 { pt3dadd( 75.3293, -85.796, -47.4133, 0.28 ) }
    dend_36 { pt3dadd( 76.6349, -86.7103, -49.0735, 0.83 ) }
    dend_36 { pt3dadd( 77.7124, -87.5626, -50.5637, 0.83 ) }
    dend_36 { pt3dadd( 79.5874, -89.244, -53.1749, 0.83 ) }
    dend_36 { pt3dadd( 82.7319, -92.2685, -57.6999, 0.55 ) }
    dend_36 { pt3dadd( 85.3815, -95.231, -61.6499, 0.55 ) }
    dend_36 { pt3dadd( 88.5265, -99.4897, -66.4544, 0.55 ) }
    dend_36 { pt3dadd( 89.9247, -101.843, -68.8446, 0.55 ) }
    dend_36 { pt3dadd( 91.0168, -104.17, -70.9479, 0.28 ) }
    dend_36 { pt3dadd( 91.1261, -104.482, -71.1811, 0.55 ) }
    dend_36 { pt3dadd( 92.269, -109.302, -74.025, 0.28 ) }
    dend_36 { pt3dadd( 92.5415, -111.152, -74.9034, 0.55 ) }
    dend_36 { pt3dadd( 93.2401, -116.658, -77.0965, 0.28 ) }
    dend_36 { pt3dadd( 93.6743, -119.785, -78.172, 0.55 ) }
    dend_36 { pt3dadd( 94.2276, -123.16, -79.2006, 0.28 ) }
    dend_36 { pt3dadd( 94.7511, -125.697, -79.7986, 0.55 ) }
    dend_36 { pt3dadd( 96.1864, -131.626, -80.7739, 0.28 ) }
    dend_36 { pt3dadd( 96.5939, -133.052, -80.9068, 1.11 ) }
    dend_36 { pt3dadd( 99.1629, -140.217, -80.9861, 0.28 ) }
    dend_36 { pt3dadd( 100.663, -143.705, -80.7737, 0.55 ) }
    dend_36 { pt3dadd( 102.324, -146.982, -80.0198, 0.28 ) }
    dend_36 { pt3dadd( 102.948, -148.015, -79.5736, 0.55 ) }
    dend_36 { pt3dadd( 104.707, -150.592, -77.915, 0.28 ) }
    dend_36 { pt3dadd( 105.932, -152.238, -76.5765, 0.28 ) }
    dend_36 { pt3dadd( 108.396, -155.142, -73.4868, 0.55 ) }
    dend_36 { pt3dadd( 112.016, -159.459, -68.6482, 0.55 ) }
    dend_36 { pt3dadd( 113.423, -161.146, -66.7236, 0.28 ) }
    dend_36 { pt3dadd( 113.725, -161.469, -66.3426, 0.55 ) }
    dend_36 { pt3dadd( 116.029, -163.622, -63.7592, 0.28 ) }
    dend_36 { pt3dadd( 116.44, -163.98, -63.3381, 0.55 ) }
    dend_36 { pt3dadd( 118.467, -165.431, -61.7081, 0.28 ) }
    dend_36 { pt3dadd( 119.441, -165.986, -61.1355, 0.55 ) }
    dend_36 { pt3dadd( 123.429, -167.667, -58.6638, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 124.701, -168.024, -57.7131, 0.55 ) }
    dend_36 { pt3dadd( 126.776, -168.29, -56.1906, 0.28 ) }
    dend_36 { pt3dadd( 127.446, -168.275, -55.5688, 0.55 ) }
    dend_36 { pt3dadd( 129.375, -167.966, -53.5193, 0.28 ) }
    dend_36 { pt3dadd( 131.029, -167.612, -51.6145, 0.55 ) }
    dend_36 { pt3dadd( 133.949, -166.725, -47.5519, 0.28 ) }
    dend_36 { pt3dadd( 136.138, -165.909, -44.2395, 0.55 ) }
    dend_36 { pt3dadd( 140.721, -163.75, -36.872, 0.28 ) }
    dend_36 { pt3dadd( 141.374, -163.416, -35.7559, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 3
    dend_13 nseg = 3
    dend_6 nseg = 13
    dend_5 nseg = 7
    dend_3 nseg = 5
    dend_48 nseg = 13
    dend_30 nseg = 17
    dend_29 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_18 nseg = 5
    dend_17 nseg = 11
    dend_15 nseg = 7
    dend_14 nseg = 5
    dend_10 nseg = 9
    dend_7 nseg = 9
    dend_45 nseg = 7
    dend_44 nseg = 9
    dend_40 nseg = 3
    dend_38 nseg = 7
    dend_37 nseg = 7
    dend_36 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L4_BTC_62f17815ed_0_0


