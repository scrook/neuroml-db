// Cell: Cell_473863578
/*
{
  "id" : "Cell_473863578",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "361.573, 302.931, 20.72, 15.8784", "369.512, 302.931, 20.72, 15.8784", "377.451, 302.931, 20.72, 15.8784" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "369.512, 302.931, 20.72, 1.0", "375.353, 316.747, 20.72, 1.0", "381.195, 330.563, 20.72, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "368.638, 294.96, 25.6446, 0.3304", "369.382, 294.491, 25.6446, 0.4322", "370.07, 293.937, 25.6446, 0.4576", "369.983, 292.745, 25.6446, 0.483", "368.655, 291.974, 26.6725, 0.4068", "367.372, 291.821, 26.6725, 0.3304", "365.912, 290.599, 27.7001, 0.2796", "364.572, 289.629, 31.2973, 0.483", "364.847, 289.661, 32.4178, 0.661", "365.165, 289.546, 33.32, 0.5848", "365.508, 289.191, 34.1911, 0.3814" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "366.309, 294.955, 21.0199, 0.3814", "366.284, 294.101, 21.0199, 0.4322", "365.775, 293.433, 21.0199, 0.483", "365.176, 292.375, 21.0199, 0.5084", "364.004, 291.153, 21.0199, 0.5848", "362.88, 290.471, 21.0199, 0.6864", "362.051, 290.271, 21.0311, 0.9406", "361.491, 289.699, 21.9022, 0.7118", "360.462, 289.636, 22.8668, 0.661", "359.813, 289.292, 22.96, 0.788", "359.395, 288.415, 23.0532, 0.7626", "358.619, 287.856, 22.96, 0.7118", "358.403, 287.157, 23.24, 0.6864", "357.856, 286.343, 23.2711, 0.661", "357.398, 286.102, 23.52, 0.483", "357.386, 285.415, 22.9911, 0.661", "357.538, 284.665, 22.96, 0.7372", "357.386, 283.081, 21.7364, 0.5084", "356.91, 282.089, 21.0165, 0.4322", "356.378, 281.088, 20.956, 0.4576", "355.807, 280.15, 21.6563, 0.5592", "355.04, 279.308, 21.8403, 0.7372", "354.229, 278.501, 21.8411, 0.8898", "353.415, 277.697, 21.8439, 0.8644", "352.584, 276.911, 21.8551, 0.7372" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "377.221, 305.614, 24.8741, 0.5848", "378.274, 305.707, 23.8476, 0.6102", "379.334, 305.872, 23.018, 0.5592", "380.442, 306.126, 22.9082, 0.483", "381.57, 306.122, 22.5641, 0.4322", "382.684, 306.049, 22.104, 0.483", "383.579, 305.501, 22.8592, 0.5338", "384.49, 304.823, 22.6965, 0.5592", "385.407, 304.318, 21.9041, 0.483", "386.544, 304.291, 22.0419, 0.5084", "387.663, 304.219, 22.0136, 0.5084", "388.692, 303.787, 21.8481, 0.5848", "389.41, 302.905, 21.8826, 0.5592", "390.242, 302.142, 22.0626, 0.5338", "391.254, 301.785, 22.9373, 0.483", "392.247, 301.445, 24.022, 0.4322", "393.174, 300.915, 24.9306, 0.4322", "394.211, 300.691, 25.2132, 0.4322", "395.155, 301.331, 25.2689, 0.483", "396.183, 301.279, 25.8653, 0.5084", "397.267, 301.034, 26.32, 0.5338", "398.344, 300.696, 26.32, 0.5338", "399.374, 300.23, 26.3203, 0.5084", "400.516, 300.234, 26.3225, 0.4576", "401.62, 300.492, 26.3362, 0.4068", "402.75, 300.592, 26.4396, 0.3814", "403.754, 300.257, 27.2121, 0.4322", "404.857, 300.014, 27.44, 0.4576", "405.938, 299.649, 27.44, 0.5338", "407.017, 299.277, 27.44, 0.5338", "408.117, 299.21, 27.44, 0.5848", "409.228, 299.476, 27.4397, 0.6102", "410.341, 299.411, 27.4383, 0.6864", "411.473, 299.284, 27.4291, 0.7372", "412.613, 299.361, 27.3647, 0.7626", "413.657, 299.753, 26.964, 0.8136", "414.594, 300.35, 26.404, 0.8644", "415.558, 300.959, 26.4421, 0.8898", "416.5, 301.549, 26.9539, 0.8136", "417.515, 301.954, 27.7161, 0.7118", "418.583, 302.016, 28.674, 0.6864", "419.694, 302.017, 28.7588, 0.7118", "420.833, 302.024, 28.7146, 0.788", "421.932, 302.072, 29.4011, 0.7626", "423.004, 302.393, 29.4619, 0.6864", "423.896, 303.016, 29.1718, 0.5338" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "369.814, 294.959, 16.3394, 0.6356", "370.291, 294.019, 16.9789, 0.6864", "369.9, 292.99, 16.7647, 0.7118", "369.293, 292.048, 16.2669, 0.6356", "368.832, 291.007, 16.2386, 0.5848", "368.155, 290.089, 16.2338, 0.5338", "367.421, 289.212, 16.2131, 0.5848", "367.051, 288.137, 16.0695, 0.6356", "366.774, 287.073, 15.4104, 0.6864", "366.706, 285.961, 15.6948, 0.661", "366.325, 285.153, 17.2788, 0.661", "365.466, 284.48, 18.0449, 0.661", "364.68, 283.68, 18.4416, 0.6864", "364.464, 282.57, 18.2283, 0.6864", "364.389, 281.506, 17.2707, 0.6356", "363.995, 280.535, 16.3033, 0.5592" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "365.968, 308.469, 11.0905, 0.6864", "366.985, 308.917, 10.5952, 0.7118", "367.909, 309.577, 10.4121, 0.7118", "368.695, 310.332, 9.6555, 0.6864", "369.542, 311.095, 9.6718, 0.661", "370.357, 311.823, 10.3275, 0.6102", "371.311, 312.224, 9.4976, 0.5084", "371.457, 312.516, 10.0178, 0.483" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "363.9, 308.23, 14.6927, 0.6102", "362.841, 308.422, 15.5322, 0.5592", "361.733, 308.421, 15.4596, 0.5592" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "365.293, 296.733, 17.3614, 0.7118", "364.796, 295.707, 17.3687, 0.661", "363.962, 294.941, 17.4118, 0.6356", "363.118, 294.185, 17.6364, 0.6102", "362.315, 293.612, 18.8622, 0.5592", "361.434, 292.982, 19.5642, 0.5592", "360.661, 292.14, 19.6, 0.6102", "360.061, 291.171, 19.6, 0.6864", "359.501, 290.178, 19.6, 0.7118", "358.881, 289.219, 19.6, 0.7372", "358.182, 288.161, 19.6, 0.7118", "357.224, 287.556, 19.6, 0.7626", "356.118, 287.277, 19.6003, 0.7626", "355.059, 286.873, 19.6011, 0.8136", "354.092, 286.265, 19.6056, 0.788", "353.053, 285.799, 19.6316, 0.7626" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "377.216, 302.098, 22.8984, 0.6356", "378.335, 302.057, 22.5089, 0.5592", "379.372, 302.308, 21.6303, 0.5338", "380.332, 302.759, 20.7693, 0.5084", "381.392, 302.456, 20.7194, 0.6102", "382.262, 301.714, 20.7172, 0.6864", "383.186, 301.043, 20.7063, 0.7372", "383.873, 300.14, 20.65, 0.6864", "384.549, 299.229, 20.3748, 0.6356", "385.263, 298.401, 19.6888, 0.6356", "386.23, 297.793, 19.6417, 0.7118", "387.3, 297.451, 19.8268, 0.8136", "388.405, 297.474, 20.4537, 0.9152", "389.479, 297.668, 19.8248, 0.9152", "390.586, 297.903, 19.5983, 0.8898", "391.73, 297.941, 19.588, 0.788", "392.835, 298.187, 19.5283, 0.7372", "393.936, 298.366, 19.0795, 0.6864", "394.989, 298.415, 17.9981, 0.7118", "396.052, 298.721, 17.6296, 0.7372" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "370.955, 310.929, 20.4602, 0.7118", "371.137, 311.946, 19.4076, 0.7626", "371.419, 313.0, 18.6116, 0.7626", "371.793, 314.065, 18.5282, 0.788", "372.387, 315.035, 18.7222, 0.839", "372.939, 315.967, 19.537, 0.8898", "373.415, 316.923, 20.4772, 0.9152", "373.903, 317.946, 20.713, 0.9152", "374.236, 319.036, 20.6746, 0.9152", "374.53, 320.131, 20.4386, 0.8898", "374.572, 321.184, 19.3911, 0.839", "374.733, 322.133, 17.9536, 0.7626", "375.086, 322.997, 16.4203, 0.661", "375.358, 324.091, 16.1605, 0.5848", "375.133, 325.173, 15.6979, 0.5084", "375.225, 326.268, 15.1522, 0.5084", "375.972, 327.116, 15.302, 0.483", "376.823, 327.774, 16.1179, 0.5338", "377.658, 328.541, 16.436, 0.5338", "378.26, 329.436, 17.2155, 0.5592" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "368.613, 310.599, 19.6, 0.7118", "368.988, 311.67, 19.6003, 0.9152", "368.914, 312.806, 19.6028, 1.0424", "368.375, 313.802, 19.614, 1.0168", "367.843, 314.813, 19.6734, 0.9406", "367.625, 315.903, 20.1603, 0.8898", "367.28, 316.82, 21.4337, 0.9406", "366.795, 317.804, 21.84, 1.0424", "366.788, 318.947, 21.8403, 1.144" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "381.195, 330.563, 20.72, 1.0", "387.036, 344.379, 20.72, 1.0", "392.877, 358.195, 20.72, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "365.508, 289.191, 34.1911, 0.3814", "365.61, 288.517, 34.1911, 0.5848", "365.622, 287.805, 33.9422, 0.5848", "366.08, 286.737, 33.7243, 0.7626", "366.08, 285.898, 34.1911, 0.5338", "366.271, 285.771, 35.6532, 0.5338", "366.118, 285.733, 36.96, 0.6864", "365.749, 285.39, 37.9557, 0.3814", "366.182, 284.856, 38.1111, 0.7372" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "365.508, 289.191, 34.1911, 0.3814", "365.635, 288.644, 34.16, 0.6864", "366.093, 288.174, 34.9689, 0.6102", "366.321, 288.072, 35.28, 0.2542", "366.779, 287.881, 35.9332, 0.5084", "367.376, 287.83, 36.8668, 0.5084", "367.605, 288.263, 37.4889, 0.483", "367.923, 288.656, 36.4932, 0.6102", "368.635, 288.555, 35.84, 0.5848", "369.169, 288.402, 36.12, 0.483", "369.664, 288.479, 35.84, 0.5338", "370.084, 288.326, 36.7732, 0.5592", "370.084, 288.059, 38.92, 0.4576", "370.084, 288.059, 40.6, 0.5338", "370.236, 288.174, 41.6268, 0.5084", "370.656, 288.288, 41.72, 0.3814", "370.999, 288.288, 41.72, 0.2796", "371.228, 288.288, 41.72, 0.2288", "371.457, 288.288, 41.72, 0.2542", "371.469, 288.39, 40.6, 0.661", "371.342, 288.186, 39.2311, 0.6102", "371.648, 288.44, 38.64, 0.4576", "371.927, 288.733, 38.64, 0.4576", "372.22, 288.402, 38.2668, 0.2542", "372.486, 288.059, 38.08, 0.305", "372.867, 287.754, 38.08, 0.3304", "373.173, 287.83, 38.64, 0.3814", "373.173, 287.83, 39.48, 0.2796", "373.173, 287.678, 40.7868, 0.4576", "373.096, 287.678, 42.0, 0.6102", "373.084, 287.703, 43.5868, 0.661", "373.402, 287.144, 43.4, 0.6102", "373.732, 286.801, 43.7111, 0.4576", "373.821, 286.763, 44.8, 0.305", "374.215, 286.393, 45.2668, 0.8898", "374.889, 286.0, 45.64, 0.483", "375.346, 285.657, 45.64, 0.483", "375.791, 285.301, 46.48, 0.661", "376.211, 284.92, 46.48, 0.6102", "376.808, 284.627, 47.1022, 0.7118", "377.113, 284.729, 48.3468, 0.4576", "377.545, 284.754, 48.2532, 0.2542", "377.736, 284.856, 47.8489, 0.2288", "377.965, 284.856, 47.0711, 0.5084", "378.499, 284.983, 47.4132, 0.6864", "378.778, 285.428, 48.44, 0.6356", "379.122, 285.733, 48.8132, 0.5084", "379.567, 285.886, 49.0311, 0.483", "380.075, 285.962, 49.84, 0.6356", "380.609, 286.458, 50.4, 0.8644", "381.32, 286.699, 50.8668, 0.7118", "381.969, 286.724, 51.6443, 0.5338", "382.287, 287.144, 51.4268, 0.5592", "382.693, 286.826, 51.24, 0.2796", "382.999, 286.458, 51.5511, 0.4322", "382.909, 286.254, 52.7332, 0.7118", "383.049, 285.466, 53.48, 0.9914", "383.456, 284.729, 54.04, 0.6864", "384.066, 284.207, 54.3511, 0.6356", "384.461, 284.017, 55.16, 0.3814", "384.956, 283.254, 55.16, 0.4576", "385.083, 282.695, 55.16, 0.6102", "385.223, 282.441, 56.0622, 0.5338", "385.07, 282.11, 57.4, 0.3814", "384.842, 281.653, 57.4, 0.2542", "384.879, 281.246, 57.3689, 0.3814", "384.956, 280.738, 56.84, 0.5338", "384.956, 280.14, 56.9022, 0.6356", "384.842, 279.403, 56.6532, 0.6864", "385.223, 278.716, 57.12, 0.7118", "385.655, 278.196, 56.3732, 0.788", "385.871, 277.484, 56.9957, 0.6356", "385.986, 276.886, 57.7732, 0.661", "386.329, 276.353, 58.7068, 0.661", "386.468, 275.806, 58.9868, 0.356", "386.888, 275.691, 58.8, 0.356", "387.015, 275.348, 58.5511, 0.356", "387.117, 275.043, 58.6132, 0.2542", "387.371, 274.573, 58.8, 0.2288", "387.511, 274.001, 58.5822, 0.2542", "387.702, 273.53, 58.24, 0.305", "387.702, 273.187, 58.24, 0.3814", "387.829, 272.958, 57.4311, 0.483", "388.045, 272.386, 57.12, 0.4576", "388.184, 271.84, 56.84, 0.2796", "388.363, 271.675, 56.84, 0.2288", "388.681, 271.573, 56.7468, 0.2542", "388.769, 271.141, 56.7778, 0.3814", "388.96, 270.899, 57.12, 0.3814", "389.074, 270.315, 57.3689, 0.305", "389.189, 269.857, 57.9289, 0.2542", "389.341, 269.45, 58.24, 0.2542", "389.507, 269.081, 57.8668, 0.4322", "389.659, 268.738, 57.68, 0.5084", "389.761, 268.332, 58.1157, 0.2796", "389.85, 267.9, 58.24, 0.305", "390.181, 267.658, 57.68, 0.6864", "390.46, 266.908, 57.96, 0.7626", "391.096, 266.298, 57.7111, 0.7372", "391.248, 265.967, 59.0489, 0.4068", "391.553, 265.637, 59.4532, 0.4322", "391.934, 265.421, 59.6089, 0.5592", "392.392, 264.95, 59.36, 0.7372", "392.926, 264.378, 59.2668, 0.7626", "393.307, 263.959, 58.3332, 0.6864", "393.307, 263.272, 58.8932, 0.5848", "393.511, 262.789, 58.9868, 0.483", "393.688, 262.357, 58.8, 0.3304", "393.867, 262.09, 59.3289, 0.4068", "393.879, 261.454, 59.2357, 0.6102", "393.994, 260.946, 58.8, 0.483", "393.981, 260.26, 59.6711, 0.4068", "394.324, 259.981, 59.7332, 0.5084", "394.667, 259.218, 59.36, 0.305", "394.871, 259.078, 59.36, 0.2542", "394.909, 258.773, 59.36, 0.2288", "394.921, 258.48, 59.4532, 0.2288", "395.023, 258.303, 60.1689, 0.2288", "395.023, 258.201, 60.76, 0.2288", "395.036, 258.061, 61.2268, 0.2288", "395.265, 257.743, 61.5689, 0.2796", "395.557, 257.591, 61.6, 0.305", "395.811, 257.502, 61.6, 0.2542", "395.938, 257.286, 61.6, 0.2288", "395.938, 257.057, 61.6, 0.2288", "395.938, 256.688, 61.8178, 0.3814", "395.837, 256.358, 62.44, 0.3814", "395.938, 255.913, 62.72, 0.2542" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "352.584, 276.911, 21.8551, 0.7372", "351.272, 275.961, 21.9923, 0.7626", "350.424, 275.275, 22.6968, 0.788", "349.965, 274.332, 23.7132, 0.7372", "350.162, 273.382, 24.53, 0.6864", "350.146, 272.322, 23.7986, 0.7118", "349.645, 271.304, 24.0814, 0.7118", "348.941, 270.404, 24.087, 0.6864", "348.691, 269.641, 22.96, 0.5338", "348.119, 269.298, 22.68, 0.6864", "347.624, 268.649, 22.68, 0.839", "346.873, 268.408, 22.8668, 0.483", "346.365, 268.077, 22.68, 0.5084", "345.946, 267.582, 22.96, 0.4068", "345.628, 267.328, 23.8, 0.6102", "345.081, 266.845, 25.2, 0.7118", "344.56, 266.323, 24.8889, 0.5084", "344.115, 266.094, 26.04, 0.6864", "343.734, 265.637, 27.0668, 0.4068", "343.645, 265.599, 27.8757, 0.305", "343.543, 265.485, 29.0268, 0.3814", "343.441, 265.497, 30.0532, 0.4322", "343.289, 265.649, 30.7068, 0.4068", "342.755, 265.853, 30.8, 0.4322", "342.285, 265.637, 30.52, 0.6864", "342.183, 265.04, 30.6132, 0.4576", "342.514, 264.518, 31.4222, 0.4322", "342.272, 264.277, 31.92, 0.2542", "341.916, 264.264, 32.1378, 0.2542", "341.28, 264.264, 32.8222, 0.5592", "340.696, 264.137, 33.04, 0.7372", "340.149, 263.654, 32.2622, 0.661", "340.111, 263.361, 33.3511, 0.356", "339.972, 263.349, 34.0978, 0.5084", "339.323, 263.705, 34.72, 0.6864", "338.586, 263.692, 34.5332, 0.6102" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "352.584, 276.911, 21.8551, 0.7372", "352.583, 276.006, 21.8498, 0.305", "352.597, 274.862, 21.9257, 0.3814", "352.678, 273.751, 22.4409, 0.5592", "352.987, 272.677, 22.8752, 0.6356", "352.995, 271.557, 22.6083, 0.6864", "352.749, 270.46, 22.955, 0.6356", "352.558, 269.336, 22.96, 0.6356", "352.439, 268.199, 22.96, 0.5848", "351.948, 267.17, 22.96, 0.5592", "351.313, 266.219, 22.96, 0.5338", "350.843, 265.181, 22.96, 0.5084", "350.651, 264.055, 22.96, 0.4322", "350.18, 263.034, 22.96, 0.356", "349.413, 262.185, 22.96, 0.3304", "348.703, 261.29, 22.96, 0.356", "348.65, 260.18, 22.9603, 0.4322", "348.91, 259.071, 22.9611, 0.4322", "348.902, 257.928, 22.9687, 0.4576", "348.801, 256.789, 23.0177, 0.4322", "348.372, 255.765, 23.4668, 0.5084", "347.826, 254.812, 24.0951, 0.5592", "347.185, 253.867, 24.1556, 0.5848", "346.672, 252.867, 24.5378, 0.5592", "346.164, 251.887, 25.058, 0.5084", "345.194, 251.383, 24.421, 0.5084", "344.477, 250.536, 24.1814, 0.483", "344.342, 249.445, 24.7528, 0.5338", "344.33, 248.324, 25.24, 0.5084", "344.254, 247.186, 25.447, 0.483", "343.85, 246.185, 26.1976, 0.3814", "343.102, 245.323, 26.32, 0.3814", "342.514, 244.358, 26.32, 0.4322", "342.208, 244.13, 26.2268, 0.4322", "341.865, 243.965, 25.7911, 0.3814", "341.827, 243.558, 25.76, 0.483", "341.942, 242.948, 25.5732, 0.3814", "341.84, 242.553, 25.8532, 0.3304" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "423.896, 303.016, 29.1718, 0.5338", "423.397, 302.018, 29.279, 0.3814", "423.492, 301.382, 29.6058, 0.3304", "423.898, 300.315, 29.6806, 0.356", "424.606, 299.44, 29.6839, 0.4322", "425.221, 298.48, 29.7055, 0.5084", "425.949, 297.604, 29.8054, 0.5338", "426.864, 296.987, 30.3293, 0.5338", "427.893, 296.551, 30.8017, 0.5338", "428.761, 295.836, 30.8106, 0.5338", "429.408, 294.893, 30.8552, 0.5338", "430.014, 293.931, 31.078, 0.5338", "430.652, 293.079, 32.0099, 0.5338", "432.037, 292.865, 33.8481, 0.6102" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "423.896, 303.016, 29.1718, 0.5338", "424.754, 303.738, 29.675, 0.661", "425.557, 304.549, 29.7951, 0.661", "426.285, 305.394, 30.2484, 0.6356", "427.123, 306.022, 31.0783, 0.5848", "427.664, 306.134, 30.8, 0.5592", "428.808, 306.138, 30.8, 0.5084", "429.952, 306.158, 30.8, 0.5084", "431.086, 306.288, 30.8, 0.5338", "432.125, 306.759, 30.8, 0.5592", "433.177, 307.203, 30.8003, 0.5592", "434.121, 307.833, 30.8011, 0.5592", "434.944, 308.626, 30.8045, 0.6864", "435.784, 309.403, 30.8185, 0.8644", "436.725, 310.045, 30.8913, 0.966", "437.66, 310.672, 31.2606, 0.9152", "438.637, 311.2, 31.864, 0.788", "439.613, 311.789, 31.915, 0.7626", "440.686, 312.153, 31.8898, 0.788", "441.767, 312.489, 31.7279, 0.8136", "442.775, 312.921, 31.0344, 0.7626", "443.652, 313.64, 30.8, 0.7372", "444.549, 314.341, 30.8, 0.7372", "445.563, 314.865, 30.8, 0.8136", "446.587, 315.368, 30.8, 0.8136", "447.601, 315.889, 30.8003, 0.8644", "448.596, 316.449, 30.8011, 0.788", "449.51, 317.135, 30.8056, 0.788", "450.529, 317.616, 30.8319, 0.7118", "451.602, 317.97, 30.989, 0.7372", "452.54, 318.514, 31.7559, 0.7372", "453.483, 318.92, 32.916, 0.7626", "454.462, 319.499, 33.04, 0.7118", "455.542, 319.838, 33.04, 0.6356", "456.685, 319.862, 33.04, 0.483", "456.431, 320.434, 32.48, 0.3814", "456.342, 320.879, 32.7911, 0.3304", "456.456, 321.083, 33.1332, 0.4068", "456.761, 321.121, 33.4132, 0.305", "457.105, 321.159, 33.6, 0.356", "457.384, 321.451, 33.32, 0.5848", "457.791, 321.502, 32.76, 0.4322", "457.867, 321.884, 32.48, 0.4576", "458.401, 321.807, 32.2, 0.4576", "458.935, 321.922, 31.1732, 0.7118", "459.736, 322.15, 31.5468, 0.839", "460.537, 322.417, 31.08, 0.7118", "460.982, 322.837, 31.2043, 0.788", "461.159, 322.849, 32.76, 0.4576", "461.591, 322.837, 33.2889, 0.3814", "461.858, 322.913, 33.0711, 0.4576", "462.214, 322.951, 33.6932, 0.4322", "462.519, 322.951, 33.6, 0.2542", "462.812, 322.951, 33.4757, 0.2542", "463.091, 323.066, 32.76, 0.305", "463.434, 323.078, 32.2311, 0.4322", "463.765, 323.18, 32.5111, 0.5084", "463.905, 323.18, 33.2889, 0.2542", "464.083, 323.282, 33.7243, 0.2796", "464.426, 323.218, 34.16, 0.2796", "464.693, 323.409, 34.44, 0.2796", "465.074, 323.485, 35.0, 0.2796", "465.456, 323.675, 34.72, 0.2796", "465.786, 323.879, 34.6268, 0.2796", "465.926, 324.133, 33.9111, 0.2288", "466.066, 324.172, 33.6932, 0.2288", "466.421, 324.095, 33.3511, 0.2288", "466.702, 324.108, 33.2268, 0.2542", "466.854, 324.324, 32.4489, 0.4068", "467.095, 324.438, 31.9822, 0.5084", "467.299, 324.705, 32.7289, 0.483", "467.655, 324.819, 32.6357, 0.4068", "467.998, 325.061, 32.3868, 0.5084", "468.43, 325.239, 32.1068, 0.6864", "469.09, 325.354, 31.7643, 0.6356", "469.65, 325.43, 31.92, 0.5848", "470.159, 325.455, 32.8532, 0.6102", "470.629, 325.366, 33.32, 0.5848", "471.087, 325.582, 33.6311, 0.6356", "471.595, 326.027, 33.8178, 0.6864", "472.002, 326.421, 34.9378, 0.5338", "472.205, 326.65, 35.56, 0.3814", "472.472, 326.726, 35.56, 0.305", "472.904, 326.726, 35.2178, 0.2796", "473.273, 326.917, 34.6268, 0.3304", "473.464, 327.222, 34.16, 0.483", "473.845, 327.565, 34.2532, 0.5848", "474.074, 327.985, 34.9378, 0.3304", "474.074, 328.405, 34.6268, 0.4322", "474.036, 328.748, 34.44, 0.5084", "474.442, 328.989, 35.0, 0.6102", "474.722, 329.472, 35.0932, 0.5592", "475.103, 329.472, 35.28, 0.4322", "475.446, 329.472, 35.28, 0.4068", "475.891, 329.599, 35.0, 0.6864", "476.031, 330.146, 35.0, 0.5084", "476.399, 330.387, 34.5332, 0.4576", "476.628, 330.578, 33.04, 0.661", "477.15, 331.277, 33.1332, 0.5338", "477.416, 331.722, 33.3511, 0.5084", "477.658, 332.103, 33.7868, 0.4576", "477.963, 332.561, 33.88, 0.7118", "478.217, 332.981, 32.7289, 0.5338", "478.421, 333.324, 32.1068, 0.5084", "478.599, 333.832, 31.8268, 0.4576", "478.662, 334.264, 31.92, 0.483", "479.184, 334.76, 32.1689, 0.5848", "479.476, 335.04, 32.2311, 0.5338", "479.781, 335.319, 32.2, 0.483", "480.022, 335.65, 32.1378, 0.4576", "480.366, 336.107, 31.64, 0.3304", "480.811, 336.386, 32.1068, 0.4068", "480.938, 336.756, 32.8532, 0.5592", "481.027, 337.162, 33.6, 0.6864", "481.688, 337.607, 33.6932, 0.4576", "481.891, 338.306, 33.5689, 0.6102", "482.044, 338.992, 33.0089, 0.5592", "482.082, 339.539, 33.04, 0.5848", "482.489, 339.781, 32.9468, 0.5084", "482.845, 340.136, 32.7289, 0.5084", "483.111, 340.429, 32.8222, 0.5338", "483.34, 340.798, 33.04, 0.4322", "483.645, 340.989, 32.76, 0.4068", "483.569, 341.471, 32.7289, 0.4322", "484.128, 341.688, 32.1068, 0.5848", "484.357, 342.069, 32.48, 0.6102", "484.573, 342.539, 32.76, 0.483", "485.006, 342.857, 32.8843, 0.4068", "485.069, 342.857, 33.5689, 0.4576", "485.399, 343.2, 33.6, 0.3304", "485.869, 343.836, 33.9732, 0.4068", "486.379, 344.051, 34.16, 0.4068", "486.658, 344.344, 34.44, 0.4322", "487.267, 344.675, 33.6622, 0.5592", "487.966, 344.687, 32.3243, 0.4322", "488.374, 344.687, 31.64, 0.3814", "488.933, 344.802, 31.6711, 0.661", "489.594, 344.954, 31.92, 0.7372", "489.937, 345.336, 33.04, 0.4576", "490.013, 345.704, 33.1022, 0.356", "490.09, 345.831, 32.8222, 0.2542", "490.09, 346.174, 33.5378, 0.6864", "490.318, 346.746, 33.32, 0.5592", "490.712, 347.191, 33.5068, 0.5084", "491.107, 347.522, 33.5068, 0.4576", "491.412, 347.712, 33.04, 0.4322", "491.577, 348.043, 33.5068, 0.6102", "491.907, 348.271, 32.8222, 0.5084", "492.365, 348.475, 32.2, 0.4576", "492.95, 348.577, 32.2, 0.3304", "493.28, 348.818, 31.92, 0.5084", "493.623, 349.276, 31.36, 0.5592", "494.144, 349.708, 31.5468, 0.661", "494.958, 349.873, 31.9511, 0.5338", "495.238, 350.064, 32.76, 0.483", "495.81, 350.293, 33.32, 0.5084", "496.458, 350.293, 32.6668, 0.483", "496.966, 350.293, 32.4489, 0.5848", "497.526, 350.522, 31.64, 0.483", "497.983, 350.522, 31.64, 0.4576", "498.453, 350.522, 32.1689, 0.4322", "498.924, 350.713, 32.1689, 0.4068", "499.216, 350.903, 31.1111, 0.5338", "499.699, 351.131, 31.2668, 0.5848", "500.144, 351.131, 30.6757, 0.483", "500.309, 351.335, 30.6757, 0.2796", "500.577, 351.437, 30.8932, 0.5084", "501.122, 351.628, 31.0489, 0.5084", "501.758, 351.78, 31.08, 0.305", "502.102, 351.78, 31.08, 0.2542", "502.445, 351.78, 30.8, 0.4068", "502.788, 351.996, 30.8311, 0.483", "503.233, 352.047, 31.5778, 0.5084", "503.589, 352.2, 32.0132, 0.4576", "503.818, 352.772, 32.1068, 0.5084", "504.504, 352.924, 31.36, 0.6102", "505.063, 352.695, 30.8311, 0.661", "505.241, 352.911, 31.5468, 0.2796", "505.483, 352.962, 31.6089, 0.3304", "505.889, 352.962, 31.0178, 0.4068", "506.22, 352.847, 30.9868, 0.4576", "506.792, 353.038, 30.8, 0.2542", "507.135, 353.038, 30.8, 0.2288", "507.428, 353.038, 30.9243, 0.2288", "507.568, 353.076, 31.3289, 0.2542", "507.911, 353.292, 31.36, 0.305", "508.088, 353.394, 30.9243, 0.4322", "508.329, 353.598, 30.8932, 0.4322", "508.622, 353.763, 31.2668, 0.3304", "508.901, 353.941, 31.1732, 0.3304", "509.487, 354.03, 31.1111, 0.4576", "510.02, 353.966, 31.5468, 0.5338", "510.567, 354.182, 31.64, 0.5084", "511.127, 354.195, 31.36, 0.483", "511.368, 354.602, 30.8932, 0.305", "511.482, 354.678, 31.2668, 0.2542", "511.813, 354.754, 31.3289, 0.2288", "511.953, 354.792, 30.9243, 0.2288", "512.423, 354.958, 30.8, 0.2542", "512.868, 355.098, 31.0489, 0.3304", "513.313, 355.174, 30.7068, 0.356", "513.618, 355.364, 30.52, 0.4068", "513.872, 355.644, 30.3332, 0.4322", "514.241, 356.0, 30.8, 0.356", "514.571, 356.013, 30.8, 0.3814", "515.029, 356.177, 30.9557, 0.5084", "515.461, 356.279, 31.6089, 0.5084", "515.969, 356.547, 30.5511, 0.661", "516.605, 356.724, 30.52, 0.6864", "517.063, 357.411, 30.52, 0.6864", "517.774, 357.716, 30.4889, 0.6864", "518.155, 358.186, 30.7068, 0.7118", "518.754, 358.542, 30.3332, 0.661", "519.249, 359.0, 30.24, 0.6864", "519.884, 359.254, 30.7689, 0.5338", "520.52, 359.33, 30.8, 0.6102", "521.206, 359.381, 30.6443, 0.7372", "521.995, 359.686, 30.52, 0.7118", "522.948, 360.22, 30.8, 0.6102", "523.457, 360.36, 30.8932, 0.5592", "523.863, 360.601, 30.6132, 0.5084", "524.283, 360.792, 30.7068, 0.4068", "524.753, 360.97, 30.3332, 0.305", "525.134, 361.237, 30.24, 0.305", "525.401, 361.529, 30.5511, 0.3814", "525.884, 361.86, 31.08, 0.4576", "526.278, 362.153, 31.36, 0.5084", "526.723, 362.496, 31.3289, 0.5084", "527.168, 362.75, 31.08, 0.483", "527.511, 362.991, 31.1111, 0.483", "527.931, 363.245, 31.36, 0.5084", "528.261, 363.563, 31.1732, 0.5338", "528.553, 363.869, 31.3911, 0.483", "528.986, 364.008, 31.6089, 0.4576", "529.52, 363.754, 31.36, 0.483", "530.065, 363.487, 31.6089, 0.5848", "530.384, 363.322, 32.1068, 0.483", "531.261, 363.106, 31.9511, 0.5338", "531.375, 362.698, 32.3868, 0.5338" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "363.995, 280.535, 16.3033, 0.5592", "364.437, 279.699, 16.1787, 0.3814", "365.382, 279.082, 15.8925, 0.2796", "366.271, 278.547, 14.8299, 0.2288", "366.98, 277.721, 14.1145, 0.2542", "368.004, 277.276, 14.2201, 0.2796", "369.068, 277.026, 14.9316, 0.305", "370.177, 276.976, 14.6076, 0.2796", "371.141, 277.477, 13.8779, 0.305", "372.039, 277.961, 12.8458, 0.3814", "372.938, 277.557, 11.7804, 0.5338", "373.828, 276.847, 11.5702, 0.6356", "374.848, 276.682, 10.8923, 0.6864", "375.897, 277.111, 10.8816, 0.6864", "376.955, 277.118, 10.9878, 0.661", "377.907, 277.722, 10.612, 0.6356", "378.953, 277.836, 10.4723, 0.6356", "379.837, 277.199, 9.7614, 0.6356", "380.485, 276.427, 8.5117, 0.6356", "381.208, 275.553, 8.1942, 0.5848", "381.783, 274.6, 7.6182, 0.5592", "382.399, 273.673, 7.8949, 0.5592", "382.846, 272.768, 7.2335, 0.5848", "382.293, 271.875, 6.7155, 0.6356", "381.176, 271.814, 6.3557, 0.6356", "380.037, 271.814, 6.16, 0.6356" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "363.995, 280.535, 16.3033, 0.5592", "362.845, 279.351, 15.4428, 0.661", "362.007, 278.589, 15.1197, 0.7118", "361.054, 277.966, 15.1189, 0.788", "360.097, 277.35, 15.1147, 0.7626", "359.414, 276.452, 15.0931, 0.7118", "359.024, 275.388, 14.9551, 0.6102", "358.96, 274.293, 14.2377, 0.5338", "358.815, 273.171, 13.9955, 0.4576", "358.232, 272.192, 13.9706, 0.3814", "357.275, 271.604, 13.8015, 0.305", "356.76, 270.749, 12.7725, 0.2542", "356.866, 269.711, 11.8051, 0.2542", "356.807, 268.608, 11.7306, 0.305", "356.382, 267.552, 11.578, 0.4068", "356.331, 266.466, 10.8385, 0.5084", "356.812, 265.47, 10.6414, 0.6102", "357.833, 265.044, 10.6487, 0.6356", "358.945, 265.265, 10.6935, 0.6102", "360.014, 265.152, 11.268, 0.5084", "360.743, 265.985, 11.256, 0.483", "361.425, 266.708, 10.2561, 0.483", "362.494, 266.539, 9.5348, 0.5592", "363.598, 266.269, 9.3481, 0.5338", "364.596, 265.927, 8.5198, 0.483", "364.982, 264.945, 7.6742, 0.4068", "365.264, 263.871, 7.2792, 0.4068", "366.049, 263.052, 7.275, 0.4576", "366.626, 262.13, 7.2453, 0.5084", "366.636, 261.023, 7.058, 0.5338", "367.218, 260.101, 6.3297, 0.5338", "368.144, 259.441, 6.16, 0.5592", "369.037, 258.726, 6.1597, 0.5592", "370.077, 258.259, 6.1583, 0.5848", "370.965, 257.544, 6.1524, 0.5338", "371.768, 256.73, 6.1314, 0.5084", "372.551, 255.897, 6.0365, 0.4322", "373.192, 254.993, 5.5384, 0.4322", "373.63, 253.968, 5.04, 0.4576" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "371.457, 312.516, 10.0178, 0.483", "371.533, 312.248, 11.0132, 0.4322", "371.686, 312.083, 11.48, 0.483", "372.295, 311.956, 10.7643, 0.5848", "372.397, 311.384, 9.6132, 0.6102", "372.334, 311.13, 8.4, 0.4322", "372.715, 311.016, 7.3732, 0.6864", "373.439, 310.71, 6.8132, 0.788", "374.24, 310.138, 6.2532, 0.966", "375.016, 310.355, 6.72, 0.839", "375.677, 310.329, 7.0622, 0.6102", "376.16, 310.253, 6.1911, 0.6102", "376.719, 310.367, 7.28, 0.5338", "376.973, 310.278, 8.4, 0.5338", "377.52, 309.795, 7.84, 0.8136", "377.978, 309.059, 7.4043, 0.788", "378.232, 308.346, 7.5289, 0.6356", "378.587, 307.749, 7.0622, 0.6102", "379.045, 307.659, 6.16, 0.6864", "379.477, 307.813, 4.4178, 0.5084" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "371.457, 312.516, 10.0178, 0.483", "371.864, 312.897, 9.7068, 0.6864", "372.867, 313.075, 9.24, 0.7118", "373.516, 313.227, 9.24, 0.7626", "374.304, 313.329, 9.52, 0.661", "374.889, 313.227, 9.52, 0.5848", "375.194, 313.379, 8.68, 0.5084", "375.537, 313.57, 8.2132, 0.4068", "375.804, 313.647, 8.3068, 0.483", "376.262, 313.914, 8.12, 0.5592", "376.719, 314.359, 7.8711, 0.4576", "377.164, 314.575, 7.9332, 0.3304", "377.304, 314.702, 8.12, 0.2796", "377.736, 314.638, 8.5243, 0.3304", "377.876, 314.816, 8.96, 0.4576", "378.423, 314.931, 8.68, 0.5848", "378.766, 314.829, 7.8711, 0.4322", "379.3, 314.956, 8.2132, 0.4068", "379.541, 315.324, 8.68, 0.4068", "379.731, 315.21, 9.1778, 0.4068", "380.266, 315.286, 8.68, 0.3814", "380.621, 315.286, 8.9289, 0.356", "381.283, 315.299, 8.68, 0.4576", "381.817, 315.439, 8.3689, 0.5338", "382.325, 315.858, 7.84, 0.5084", "382.604, 316.316, 7.1243, 0.4576", "383.227, 316.545, 7.0311, 0.5848", "383.926, 316.659, 7.28, 0.8136", "384.613, 316.697, 7.3732, 0.5592", "384.765, 316.774, 8.3068, 0.3814", "385.07, 316.875, 8.9289, 0.4576", "385.68, 317.308, 8.4, 0.8136", "386.393, 317.396, 8.4, 0.7626", "386.901, 317.498, 7.9332, 0.5338", "387.13, 317.803, 7.0, 0.4576", "387.575, 318.121, 7.0932, 0.5338", "387.473, 318.49, 7.0, 0.4322", "387.612, 318.808, 6.72, 0.4068", "388.159, 319.099, 7.4668, 0.9406", "388.667, 319.812, 5.6, 0.966", "389.087, 320.422, 5.6, 0.7118", "389.863, 321.019, 5.6, 0.5084", "390.066, 321.616, 5.6, 0.4322", "390.104, 322.379, 5.6, 0.4322", "390.409, 322.875, 5.6, 0.5592", "390.79, 323.294, 5.6, 0.7118", "391.464, 323.638, 5.6, 0.6356" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "361.733, 308.421, 15.4596, 0.5592", "361.265, 308.496, 13.3297, 0.6102", "360.233, 308.901, 12.8713, 0.661", "359.376, 309.636, 12.8313, 0.6102", "359.24, 310.703, 12.6101, 0.6102", "359.185, 311.77, 11.8364, 0.6102", "358.586, 312.739, 11.7191, 0.661", "358.134, 313.779, 11.5192, 0.6356", "358.121, 314.855, 10.8637, 0.661", "358.344, 315.935, 11.1877, 0.661", "358.214, 317.014, 10.4294, 0.6864", "358.459, 318.05, 9.653, 0.7626", "359.011, 319.046, 9.5981, 0.788", "359.484, 320.053, 9.9907, 0.8136", "359.754, 321.124, 10.6168, 0.7118" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "361.733, 308.421, 15.4596, 0.5592", "361.229, 308.42, 15.0774, 0.4576", "360.138, 308.406, 14.2579, 0.483", "359.01, 308.311, 13.9681, 0.483", "358.192, 307.63, 13.7631, 0.4576", "358.21, 306.563, 12.9615, 0.5084", "357.818, 305.508, 12.6697, 0.5084", "357.107, 304.72, 11.8555, 0.5084", "355.678, 303.901, 11.3876, 0.5848", "354.762, 303.278, 10.7444, 0.7118", "353.882, 302.552, 10.6803, 0.788", "352.93, 301.924, 10.8458, 0.7626", "352.055, 301.275, 11.5998, 0.6864", "351.409, 300.413, 12.4054, 0.6356", "350.827, 299.467, 11.9428, 0.6102", "350.03, 298.666, 11.5676, 0.6102", "349.076, 298.107, 10.9724, 0.6102", "348.038, 297.719, 11.335, 0.6356", "347.101, 297.1, 11.7891, 0.661" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "353.053, 285.799, 19.6316, 0.7626", "351.731, 285.632, 18.6074, 0.483", "350.639, 285.682, 19.2662, 0.4322", "349.539, 285.887, 19.6028, 0.356", "348.449, 285.569, 19.616, 0.3814", "347.329, 285.365, 19.7014, 0.4576", "346.23, 285.21, 19.882, 0.5848", "345.17, 285.597, 19.5101, 0.6102", "344.203, 286.083, 18.8625, 0.5084", "343.276, 286.635, 18.0835, 0.4068", "342.296, 286.232, 17.6285, 0.3814", "341.495, 285.496, 18.3711, 0.483", "340.586, 284.816, 18.478, 0.5338", "339.465, 284.685, 18.4668, 0.5848", "338.38, 285.0, 18.4019, 0.5338", "337.378, 285.5, 17.9942, 0.483", "336.481, 286.005, 16.8302, 0.4068", "335.469, 286.375, 16.4567, 0.4322", "334.406, 286.122, 16.1605, 0.5084", "333.502, 285.552, 15.2653, 0.5848", "332.735, 284.722, 15.12, 0.6356", "331.695, 284.261, 15.12, 0.6864", "330.559, 284.171, 15.1194, 0.7372", "329.415, 284.173, 15.1161, 0.7118", "328.271, 284.197, 15.0945, 0.661", "327.151, 284.372, 14.9576, 0.5848", "326.056, 284.543, 14.429, 0.5592", "325.041, 284.157, 15.1858, 0.5084", "324.062, 283.686, 15.9496, 0.483", "323.008, 283.323, 16.3475, 0.483", "322.217, 282.555, 16.8966, 0.5338", "321.146, 282.339, 16.7804, 0.5592", "320.029, 282.338, 16.2554, 0.6102", "318.885, 282.336, 16.3512, 0.6356", "317.781, 282.316, 16.9719, 0.7372", "316.664, 282.182, 17.3597, 0.788", "315.701, 281.597, 17.3583, 0.788", "314.87, 280.811, 17.353, 0.7372", "314.012, 280.056, 17.3298, 0.6356", "313.558, 279.721, 15.96, 0.5338", "312.884, 279.708, 15.96, 0.4068", "311.854, 279.708, 15.96, 0.6864", "311.054, 279.708, 15.96, 0.839", "309.361, 279.992, 16.952, 0.6102", "308.308, 280.329, 16.4251, 0.5084", "307.341, 280.938, 16.2789, 0.5338", "306.393, 281.574, 16.2481, 0.5848", "305.445, 282.204, 16.1703, 0.6102", "304.611, 282.893, 15.3776, 0.661", "303.531, 283.082, 15.1603, 0.7372", "302.456, 282.844, 14.5771, 0.8136", "301.463, 282.605, 13.4299, 0.839", "300.378, 282.349, 13.8678, 0.8136", "299.348, 281.885, 13.9762, 0.788", "298.367, 281.298, 13.9955, 0.7372", "297.432, 280.639, 13.9992, 0.7372", "296.481, 280.013, 13.8491, 0.7372", "295.48, 279.573, 13.1135, 0.7118", "294.558, 278.945, 12.6207, 0.5848", "294.237, 278.702, 10.239, 0.4322", "293.706, 278.897, 10.5356, 0.3814", "292.639, 278.604, 10.64, 0.4576", "291.554, 278.327, 10.64, 0.5592", "290.456, 278.616, 10.6397, 0.6102", "289.322, 278.515, 10.6389, 0.5592", "288.349, 277.931, 10.6344, 0.5338", "287.339, 277.449, 10.6086, 0.5084", "286.302, 277.856, 10.4555, 0.5848", "285.354, 278.42, 9.807, 0.6356", "284.336, 278.912, 9.5189, 0.6864", "283.254, 279.272, 9.5138, 0.6864", "282.156, 279.755, 9.478, 0.661", "281.074, 280.09, 9.2803, 0.6356", "280.022, 280.358, 8.5162, 0.6102", "278.899, 280.549, 8.4, 0.6356", "277.789, 280.779, 8.3997, 0.661", "276.659, 280.877, 8.398, 0.6864", "275.578, 280.525, 8.3885, 0.661", "274.506, 280.138, 8.3311, 0.6102", "273.466, 279.714, 7.9635, 0.5338", "272.367, 279.596, 7.3604, 0.4576", "271.237, 279.611, 7.6675, 0.3814", "270.14, 279.699, 8.3569, 0.356", "269.065, 280.076, 8.3938, 0.4068", "268.005, 280.491, 8.3605, 0.5338", "267.014, 281.053, 8.197, 0.6102", "265.986, 281.384, 7.4802, 0.5848", "264.866, 281.241, 7.3119, 0.4576", "263.836, 280.753, 7.4749, 0.4068", "262.801, 280.452, 8.0864, 0.4322", "261.779, 280.163, 7.1901, 0.5592", "260.799, 279.697, 6.4246, 0.6102", "259.78, 279.278, 6.9731, 0.6356", "258.943, 278.521, 7.2713, 0.5848", "258.347, 277.553, 7.2344, 0.5084", "257.955, 276.49, 6.9894, 0.4068", "257.473, 275.534, 6.151, 0.3304", "257.606, 274.41, 5.9766, 0.305", "257.701, 273.319, 5.2374, 0.3814", "258.086, 272.272, 5.04, 0.4576" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "353.053, 285.799, 19.6316, 0.7626", "352.228, 285.179, 19.7453, 0.483", "351.483, 284.394, 20.4893, 0.6102", "350.811, 283.57, 21.4133, 0.6864", "350.102, 282.751, 21.1492, 0.6864", "349.302, 281.988, 21.296, 0.7118", "348.464, 281.26, 21.84, 0.7372", "347.58, 280.534, 21.84, 0.7118", "346.777, 279.719, 21.84, 0.661", "345.999, 278.882, 21.8394, 0.6102", "345.323, 277.962, 21.8375, 0.6102", "344.466, 277.22, 21.8285, 0.6356", "343.558, 276.528, 21.7879, 0.6356", "342.711, 275.761, 21.6258, 0.661", "341.809, 275.127, 20.9706, 0.6356", "340.952, 274.383, 20.7158, 0.661", "340.127, 273.59, 20.7035, 0.6102", "339.254, 272.854, 20.6506, 0.6102", "338.241, 272.36, 20.3062, 0.6102", "337.184, 272.033, 19.689, 0.7118", "336.084, 271.75, 19.8643, 0.8136", "335.026, 271.452, 20.463, 0.8898", "333.953, 271.195, 19.8509, 0.8898", "333.015, 270.574, 19.8982, 0.8136" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "396.052, 298.721, 17.6296, 0.7372", "397.071, 299.23, 18.3812, 0.7118", "398.123, 299.314, 18.4478, 0.661", "398.857, 298.465, 18.3033, 0.661", "399.402, 297.615, 17.1847, 0.6102", "400.24, 297.02, 17.0352, 0.6102", "401.356, 296.946, 17.5784, 0.5848", "402.432, 296.765, 18.3554, 0.6356", "403.27, 296.004, 18.473, 0.6356", "403.83, 295.008, 18.4422, 0.661", "404.451, 294.056, 18.2862, 0.6864", "405.159, 293.223, 17.598, 0.7372", "405.994, 292.45, 17.6207, 0.7118", "406.671, 291.59, 18.3431, 0.661", "407.623, 290.958, 18.3403, 0.6356", "408.577, 290.377, 17.8424, 0.6864", "409.562, 289.853, 18.2073, 0.6864", "410.517, 289.248, 18.3616, 0.6864", "411.233, 288.401, 17.871, 0.7372", "411.886, 287.49, 17.3852, 0.8898", "412.501, 286.535, 17.3278, 0.9914", "412.851, 285.453, 17.1576, 0.9914", "413.04, 284.396, 16.2823, 0.9152", "413.315, 283.389, 15.26, 0.839", "413.919, 282.443, 14.8386, 0.7626", "414.699, 281.692, 14.0815, 0.7118", "415.103, 280.629, 14.0, 0.7372", "415.521, 279.566, 13.9994, 0.788", "416.286, 278.728, 13.9964, 0.839", "417.208, 278.056, 13.9818, 0.8136", "417.995, 277.228, 13.9238, 0.8136", "418.556, 276.26, 13.5918, 0.8136", "419.061, 275.288, 12.908, 0.8644", "419.674, 274.33, 12.6605, 0.8644", "420.359, 273.504, 11.8835, 0.8644", "421.268, 272.814, 11.7597, 0.8136", "422.209, 272.167, 11.7589, 0.7626", "423.055, 271.397, 11.7558, 0.7118", "423.934, 270.666, 11.7412, 0.6356", "425.025, 270.352, 11.6329, 0.5338", "426.05, 269.987, 10.9651, 0.4068", "426.884, 269.471, 9.6432, 0.3814", "426.711, 268.39, 9.5225, 0.4068", "426.19, 267.376, 9.5332, 0.483", "425.511, 266.489, 9.6611, 0.5084", "424.541, 266.481, 8.6503, 0.5848", "424.882, 265.866, 9.24, 0.661", "425.212, 265.052, 8.68, 0.6864", "425.809, 264.798, 8.8357, 0.5592", "426.115, 264.277, 9.1468, 0.6356", "427.17, 264.15, 8.96, 0.5848", "427.818, 264.15, 8.8668, 0.4576", "428.53, 263.921, 8.1511, 0.4068", "428.771, 263.806, 8.4, 0.4068", "429.229, 263.578, 8.68, 0.3814", "429.788, 263.234, 8.7111, 0.3814", "430.004, 263.018, 9.1468, 0.3814", "430.296, 262.916, 8.4311, 0.356", "430.348, 262.51, 8.4311, 0.4068", "430.793, 262.281, 8.12, 0.6356", "431.123, 262.167, 7.0311, 0.5592", "431.529, 261.976, 6.7511, 0.3304", "432.127, 261.862, 6.9068, 0.483", "432.584, 261.735, 7.4357, 0.7372", "433.322, 261.963, 7.9332, 0.6356", "433.741, 262.078, 8.5868, 0.5338", "434.262, 261.976, 9.52, 0.5338", "434.911, 261.633, 9.9868, 0.6356", "435.419, 261.709, 10.7022, 0.5592", "435.928, 261.633, 11.0443, 0.4322", "436.08, 261.671, 11.6978, 0.5084", "436.182, 261.899, 12.2889, 0.483", "436.588, 261.899, 12.32, 0.2542", "436.919, 261.862, 12.1022, 0.2542", "437.122, 261.785, 11.0132, 0.3814", "437.503, 262.155, 10.8889, 0.4576", "437.885, 262.319, 10.7332, 0.3814", "438.19, 262.243, 10.92, 0.483", "438.647, 262.319, 10.4532, 0.483", "439.169, 262.128, 10.4843, 0.483", "439.627, 261.862, 11.5111, 0.5848", "440.211, 261.785, 11.9468, 0.4068", "440.363, 261.747, 12.6932, 0.483", "440.898, 261.671, 13.0668, 0.5338", "441.571, 261.429, 12.2268, 0.6102", "442.042, 261.29, 12.04, 0.5848", "442.549, 261.366, 12.3511, 0.483", "443.25, 261.354, 12.32, 0.5848", "443.974, 261.175, 11.7911, 0.5848", "444.19, 260.845, 11.9468, 0.356", "444.558, 261.2, 11.5422, 0.3814", "444.787, 260.87, 11.2932, 0.4576", "445.474, 260.578, 11.9778, 0.5592", "445.855, 260.412, 12.6, 0.3814", "446.414, 260.412, 12.5689, 0.3304", "447.19, 260.489, 11.76, 0.3304", "447.647, 260.718, 11.76, 0.5592", "448.105, 260.718, 11.6978, 0.5338", "448.677, 260.603, 11.48, 0.5592", "449.63, 260.412, 11.48, 0.5848", "450.266, 260.019, 11.76, 0.6356", "450.736, 259.561, 11.5111, 0.5848", "450.863, 259.243, 12.32, 0.2796", "451.295, 259.23, 12.8489, 0.5848", "451.549, 258.875, 12.88, 0.5338", "452.223, 258.43, 13.16, 0.4322", "452.656, 258.213, 13.3468, 0.4576", "452.91, 258.531, 12.8489, 0.3814", "453.24, 258.849, 12.7243, 0.4322", "453.469, 259.002, 13.1289, 0.4576", "453.673, 259.268, 12.6, 0.2542", "453.939, 259.345, 12.6, 0.2288", "454.282, 259.345, 12.6, 0.2288", "455.096, 259.447, 12.6, 0.2542", "455.884, 259.459, 12.6, 0.305", "456.456, 259.574, 12.8178, 0.3814", "457.142, 259.574, 12.6, 0.4322", "457.677, 259.688, 12.6932, 0.3814", "458.058, 259.675, 13.4089, 0.3304", "458.363, 259.561, 12.7557, 0.3814", "458.553, 259.802, 12.2268, 0.4576", "459.189, 259.802, 12.6311, 0.5338", "459.723, 259.79, 13.2532, 0.4576", "460.244, 259.561, 12.88, 0.5848", "460.574, 259.129, 13.1289, 0.5084", "461.032, 259.116, 12.32, 0.3814", "461.604, 259.154, 12.7868, 0.4068", "462.112, 259.409, 12.6, 0.5848", "462.634, 259.574, 12.04, 0.6356", "463.091, 259.688, 10.92, 0.5084", "464.019, 260.031, 10.6711, 0.4068", "464.35, 260.031, 10.64, 0.4322", "464.668, 260.146, 11.2622, 0.4322", "464.959, 260.146, 11.9468, 0.3814", "465.277, 260.324, 12.4132, 0.4322", "465.621, 260.489, 12.3511, 0.4576", "465.989, 260.641, 11.76, 0.483", "466.447, 260.489, 11.5732, 0.5338", "466.931, 260.451, 11.5111, 0.5084", "467.438, 260.412, 11.5732, 0.661", "467.998, 260.374, 11.1689, 0.6102", "468.506, 260.374, 10.8268, 0.5592", "469.002, 259.892, 10.8889, 0.5338", "469.714, 259.484, 11.5732, 0.7118", "470.146, 259.078, 11.2, 0.5338", "470.552, 259.002, 10.7022, 0.4068", "470.896, 258.875, 10.8268, 0.356", "471.328, 258.582, 11.0132, 0.3304", "471.684, 258.29, 11.3868, 0.305", "472.078, 258.049, 11.2311, 0.3304", "472.447, 257.718, 11.48, 0.3814", "472.967, 257.438, 11.48, 0.4068", "473.285, 257.286, 12.0089, 0.305", "473.603, 257.286, 12.0089, 0.2796", "473.845, 257.159, 11.5111, 0.356", "474.163, 256.917, 11.2, 0.3814", "474.442, 256.714, 11.6978, 0.4322", "474.837, 256.599, 12.1332, 0.6864", "475.116, 256.333, 11.3243, 0.305", "475.345, 256.154, 11.2, 0.2288", "476.133, 255.798, 11.48, 0.5084", "476.807, 255.443, 12.32, 0.4576", "477.227, 255.328, 12.9732, 0.356", "477.518, 255.125, 13.44, 0.356", "477.874, 254.908, 13.16, 0.356", "478.446, 254.578, 13.4711, 0.5338", "478.916, 254.311, 13.9068, 0.6102", "479.259, 254.006, 14.0, 0.5084", "479.463, 253.396, 13.7511, 0.483", "479.565, 252.926, 13.4711, 0.483", "479.247, 252.493, 13.8132, 0.4068" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "396.052, 298.721, 17.6296, 0.7372", "396.445, 299.193, 17.3981, 0.5084", "397.376, 299.834, 17.5647, 0.5592", "398.083, 300.429, 18.9465, 0.6102", "398.755, 301.271, 18.4316, 0.5848", "399.715, 301.673, 17.4143, 0.5592", "400.78, 302.001, 16.8798, 0.5338", "401.833, 302.121, 16.3738, 0.5592", "402.427, 302.411, 18.2417, 0.5848", "403.513, 302.144, 18.4716, 0.6356", "404.643, 302.003, 18.4262, 0.6356", "405.772, 301.935, 18.102, 0.661", "406.814, 301.6, 17.4202, 0.661", "407.869, 301.172, 17.36, 0.6864", "408.847, 300.586, 17.36, 0.6356", "409.908, 300.18, 17.3606, 0.5848", "411.007, 299.898, 17.3639, 0.5592", "412.043, 299.417, 17.3821, 0.6102", "413.125, 299.06, 17.5014, 0.6864", "414.134, 298.584, 18.0158, 0.7118", "415.132, 298.092, 17.5582, 0.6864", "416.177, 297.661, 17.379, 0.6356", "417.164, 297.17, 17.5176, 0.6356", "418.224, 297.467, 18.2036, 0.7118", "419.298, 297.79, 18.48, 0.7626", "420.271, 298.382, 18.4803, 0.788", "421.105, 299.164, 18.4811, 0.7626", "421.898, 299.989, 18.4848, 0.7626", "422.625, 300.867, 18.5013, 0.7626", "423.33, 301.762, 18.5847, 0.7372", "424.202, 302.462, 18.9787, 0.7372", "425.174, 303.008, 19.5373, 0.7372", "426.094, 303.679, 19.5104, 0.7372", "426.941, 304.433, 19.1881, 0.661", "427.509, 304.767, 19.5989, 0.5592", "428.652, 304.804, 19.591, 0.6356", "429.674, 305.178, 19.5129, 0.7372", "430.071, 306.205, 19.0254, 0.788", "429.938, 307.286, 19.5051, 0.788", "429.696, 308.341, 20.305, 0.7626", "429.689, 309.453, 19.7305, 0.839", "429.704, 310.593, 19.8394, 0.9152", "429.793, 311.681, 20.6259, 0.966", "430.268, 312.698, 20.8099, 0.9406", "430.904, 313.622, 21.1607, 0.9406", "431.06, 314.704, 21.8534, 0.966", "431.067, 315.838, 22.1665, 1.0168", "431.108, 316.949, 22.6909, 1.0424", "431.366, 318.003, 21.9758, 1.0678", "431.686, 319.096, 21.8016, 0.966", "431.96, 320.196, 21.6118, 0.788", "431.965, 321.293, 20.8743, 0.5848", "431.907, 322.426, 21.0571, 0.483", "431.527, 323.296, 22.4277, 0.483", "431.16, 324.292, 22.3342, 0.5338", "431.41, 325.354, 21.5765, 0.5848", "431.354, 325.95, 21.0571, 0.6102", "431.099, 327.047, 20.8474, 0.6102", "431.206, 328.136, 21.5281, 0.6356", "431.604, 329.163, 22.2558, 0.6356", "432.115, 330.135, 22.8917, 0.6356", "432.727, 331.099, 22.9603, 0.6102", "433.331, 332.067, 22.9617, 0.6356", "433.73, 333.13, 22.9704, 0.661" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "378.26, 329.436, 17.2155, 0.5592", "378.473, 330.443, 16.2512, 0.7372", "379.19, 330.979, 14.5804, 0.7118", "379.555, 331.618, 12.5731, 0.6864", "379.544, 332.683, 11.7267, 0.6356", "379.299, 333.781, 11.5256, 0.5592", "378.653, 334.607, 10.603, 0.483", "377.71, 334.188, 9.5738, 0.4576", "376.659, 333.868, 8.8875, 0.4576", "376.111, 332.994, 7.9806, 0.4576", "376.336, 331.964, 7.294, 0.4576", "377.215, 331.262, 7.1534, 0.483", "378.219, 330.813, 6.5414, 0.5084", "379.238, 330.845, 6.2115, 0.5848", "380.0, 331.685, 6.4663, 0.5848", "380.589, 332.579, 6.9826, 0.5848", "381.249, 333.322, 5.9682, 0.483", "382.281, 333.251, 5.1909, 0.483", "383.24, 333.59, 6.16, 0.483" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "378.26, 329.436, 17.2155, 0.5592", "378.528, 329.987, 18.0586, 0.5592", "379.447, 330.603, 18.2381, 0.5338", "380.51, 330.791, 17.4283, 0.483", "381.609, 330.785, 16.977, 0.4068", "382.7, 331.003, 16.8218, 0.4322", "383.683, 331.561, 16.9655, 0.5084", "384.639, 331.881, 15.6878, 0.5848", "385.705, 332.188, 15.5641, 0.5592", "386.809, 332.227, 16.2154, 0.5338", "387.951, 332.282, 16.24, 0.5592", "389.023, 332.624, 16.2397, 0.661", "389.872, 333.386, 16.2389, 0.7118", "390.636, 334.237, 16.2358, 0.6864", "391.198, 335.224, 16.2179, 0.661", "391.397, 336.336, 16.1017, 0.6356", "391.367, 337.702, 15.267, 0.6102", "391.801, 338.753, 15.2351, 0.5338", "391.922, 339.842, 15.874, 0.5084", "391.861, 340.876, 17.003, 0.5338", "391.505, 341.93, 16.7076, 0.6356", "390.935, 342.887, 17.2746, 0.6864", "390.346, 343.863, 17.358, 0.7118", "389.829, 344.88, 17.3491, 0.661", "389.318, 345.899, 17.302, 0.6356", "388.851, 346.931, 17.0204, 0.5848", "388.559, 347.989, 16.305, 0.5084", "388.43, 349.111, 16.2403, 0.4322", "389.072, 350.035, 16.242, 0.356", "390.078, 350.567, 16.2529, 0.356", "391.069, 351.111, 16.317, 0.3814", "391.819, 351.96, 16.5752, 0.4576", "392.318, 352.942, 17.2724, 0.5592", "392.743, 353.998, 17.36, 0.6356", "393.401, 354.932, 17.36, 0.7118", "394.221, 355.71, 17.3606, 0.7118", "395.12, 356.415, 17.3628, 0.661", "396.007, 357.134, 17.3743, 0.5592", "396.587, 358.086, 17.4577, 0.4576", "396.981, 359.126, 17.9754, 0.4322", "397.484, 360.121, 18.2736, 0.4068", "398.293, 360.717, 17.162, 0.3814", "398.539, 361.067, 17.4138, 0.356", "399.141, 362.01, 17.789, 0.356", "399.256, 363.107, 17.7374, 0.4068", "399.256, 364.227, 17.2049, 0.4068", "399.257, 365.342, 16.6516, 0.4068", "399.266, 366.452, 17.2791, 0.3814", "399.327, 367.592, 17.3866, 0.4068", "399.722, 368.644, 17.5417, 0.4576", "400.528, 369.344, 18.305, 0.5084", "401.549, 369.829, 18.4993, 0.5338", "401.845, 370.854, 18.6287, 0.5592", "401.252, 371.758, 19.4015, 0.5848", "400.705, 372.751, 19.6025, 0.5592", "400.203, 373.775, 19.6146, 0.5084", "399.692, 374.793, 19.6882, 0.4322", "399.107, 375.731, 20.2244, 0.4322", "398.705, 376.751, 19.7761, 0.4322", "398.369, 377.836, 19.6165, 0.4576", "398.26, 378.973, 19.7235, 0.4322", "398.075, 380.001, 20.5447, 0.3814", "398.787, 380.874, 20.7197, 0.3814", "399.583, 381.678, 20.7189, 0.4322", "400.314, 382.558, 20.715, 0.483", "400.956, 383.501, 20.6956, 0.483", "401.651, 384.408, 20.6161, 0.4576", "402.085, 385.427, 20.4299, 0.4576", "402.379, 386.511, 20.8614, 0.4322", "402.043, 387.521, 21.3581, 0.4322", "401.541, 388.515, 20.7883, 0.4322", "401.043, 389.54, 20.7743, 0.4322", "400.56, 390.564, 21.0367, 0.356", "399.916, 391.405, 21.7801, 0.3304", "398.872, 391.853, 21.8422, 0.3304", "397.985, 392.545, 21.8546, 0.3814", "397.518, 393.583, 21.9142, 0.4068", "397.426, 394.68, 21.84, 0.483" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "366.788, 318.947, 21.8403, 1.144", "365.511, 320.398, 21.7599, 0.8644", "364.968, 321.343, 21.2131, 0.788", "364.161, 322.122, 20.732, 0.7372", "363.519, 323.066, 20.736, 0.7118" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "366.788, 318.947, 21.8403, 1.144", "367.25, 320.731, 21.8459, 0.7372", "368.043, 321.553, 21.8652, 0.661", "368.918, 322.288, 21.9548, 0.6356", "369.962, 322.589, 22.5459, 0.6356", "371.082, 322.464, 22.8721, 0.6356", "371.946, 321.818, 22.3462, 0.6102", "372.88, 321.323, 22.5442, 0.6864", "373.7, 321.688, 24.045, 0.7118", "374.546, 322.319, 24.2967, 0.6864" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "366.182, 284.856, 38.1111, 0.7372", "366.995, 284.284, 39.2, 0.5084", "367.567, 284.398, 39.2, 0.5338", "368.05, 284.386, 39.6668, 0.5338", "368.418, 284.271, 40.5068, 0.661", "368.863, 284.284, 41.0668, 0.7626", "369.55, 283.966, 40.5689, 0.788", "370.059, 283.572, 40.6, 0.4322", "370.415, 283.28, 40.6932, 0.3304", "370.554, 282.924, 40.88, 0.5084", "371.203, 282.2, 41.44, 0.6356", "371.723, 281.919, 42.0, 0.5338", "372.131, 281.564, 41.8132, 0.4322", "372.245, 281.335, 41.9068, 0.2542", "372.41, 281.068, 41.8757, 0.2542", "372.69, 280.712, 42.28, 0.3304", "373.135, 280.357, 42.28, 0.4576", "373.668, 280.089, 42.28, 0.5848", "374.088, 279.708, 42.28, 0.6356", "374.482, 279.072, 42.0, 0.5592", "375.232, 278.907, 42.28, 0.7372", "375.918, 278.348, 42.0311, 0.7372", "376.605, 277.878, 42.0, 0.966", "377.253, 277.649, 42.0932, 0.5592", "377.418, 277.534, 43.3689, 0.661", "377.901, 277.649, 43.7732, 0.6864", "378.575, 277.649, 43.4622, 0.7118", "379.236, 277.522, 43.3689, 0.483", "380.062, 277.115, 43.7111, 0.6864", "380.621, 276.619, 44.4889, 0.9152", "381.27, 275.908, 44.52, 0.6102", "381.867, 275.475, 44.52, 0.6864", "382.325, 274.928, 44.8, 0.6864" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "366.182, 284.856, 38.1111, 0.7372", "365.966, 284.284, 39.48, 1.0424", "365.61, 284.322, 41.0357, 0.3304", "365.343, 284.398, 41.5957, 0.4576", "364.809, 283.953, 42.0, 0.661", "364.185, 283.445, 41.7511, 0.483", "363.894, 282.772, 42.0932, 0.483", "363.131, 282.085, 41.72, 0.6864", "362.419, 281.424, 42.28, 0.7118", "361.911, 280.559, 42.28, 0.6864", "361.415, 279.568, 42.56, 0.6356", "360.932, 278.45, 42.56, 0.5592", "360.741, 278.005, 42.6843, 0.5084", "360.347, 277.878, 43.6489, 0.6864", "359.636, 277.572, 43.96, 0.6356", "359.229, 277.42, 45.1111, 0.3814", "358.975, 277.42, 45.8889, 0.4068", "358.059, 277.343, 45.2978, 0.5338", "357.652, 277.268, 44.5822, 0.2542", "357.271, 276.848, 45.36, 0.5848", "357.271, 276.378, 46.1689, 0.4068", "356.903, 276.047, 46.9778, 0.6864", "355.988, 275.844, 47.04, 0.6356", "355.225, 275.717, 46.76, 0.5084", "354.78, 275.336, 47.04, 0.483", "354.093, 274.865, 46.7911, 0.6864", "353.165, 274.674, 46.7911, 0.6102", "352.759, 274.483, 47.5689, 0.305", "352.314, 274.331, 47.1332, 0.4068", "351.691, 274.293, 47.0711, 0.6864", "350.954, 274.102, 46.9778, 0.6864", "350.649, 274.052, 48.0668, 0.4068", "350.318, 273.772, 48.0668, 0.2542", "350.064, 273.759, 47.88, 0.2542", "349.606, 273.53, 47.6, 0.3304", "349.161, 273.175, 47.6, 0.483", "348.679, 272.742, 47.88, 0.7372", "347.903, 272.806, 48.0043, 0.5592", "347.585, 272.73, 48.8132, 0.4322", "346.81, 272.322, 49.0, 0.7118", "345.869, 272.043, 48.6268, 0.8136", "345.463, 271.382, 48.44, 0.7118", "345.145, 270.899, 49.56, 0.7118", "344.115, 270.556, 51.24, 0.5338", "343.683, 270.289, 51.2711, 0.2796", "343.213, 270.098, 51.2711, 0.6864", "343.035, 269.564, 52.3289, 0.7118", "342.056, 269.412, 52.36, 0.839", "341.37, 269.031, 52.2668, 0.661", "340.976, 268.661, 52.08, 0.5338", "340.378, 268.395, 52.4843, 0.5338", "339.31, 268.382, 53.48, 0.7118", "338.51, 268.382, 53.48, 0.7626", "337.759, 268.535, 53.2311, 0.6864", "337.175, 268.89, 53.5111, 0.3304", "336.59, 269.208, 53.48, 0.4068", "336.145, 269.564, 53.48, 0.5084", "335.56, 269.87, 53.8222, 0.5848", "334.963, 269.882, 54.5689, 0.5338", "334.493, 270.327, 54.0711, 0.661", "333.946, 270.67, 54.3511, 0.661", "333.451, 270.429, 54.1332, 0.4576", "332.827, 270.086, 54.3822, 0.483", "332.561, 269.298, 54.88, 0.6102", "332.573, 268.661, 54.9732, 0.5338", "332.497, 268.688, 56.0311, 0.3814", "332.446, 268.268, 56.56, 0.2796", "332.523, 268.001, 56.56, 0.2542", "332.637, 267.785, 56.5289, 0.2542", "332.675, 267.238, 56.0, 0.3304", "332.599, 266.857, 56.0, 0.4322", "332.332, 266.094, 56.0, 0.5338", "332.218, 265.167, 56.8089, 0.6102", "332.218, 264.48, 56.5911, 0.6102", "332.319, 263.769, 57.0578, 0.6102", "331.989, 263.12, 56.84, 0.6864", "331.837, 262.357, 57.4, 0.7626", "331.404, 261.569, 58.3332, 0.7626", "330.616, 260.946, 58.24, 0.5084", "330.171, 260.705, 58.52, 0.4322", "329.853, 260.451, 59.08, 0.356", "329.612, 260.12, 59.64, 0.3304", "329.32, 259.815, 59.8578, 0.305", "329.129, 259.268, 59.4532, 0.2796", "329.014, 258.862, 59.7022, 0.305", "328.9, 258.315, 59.36, 0.356", "328.671, 257.858, 59.64, 0.305", "328.569, 257.502, 60.48, 0.356", "328.214, 257.057, 61.04, 0.305", "328.099, 256.828, 61.6, 0.305", "327.731, 256.51, 61.88, 0.305", "327.184, 255.913, 62.16, 0.2796", "326.968, 255.798, 62.1911, 0.2542", "326.803, 255.379, 62.44, 0.3304", "326.714, 254.705, 62.8132, 0.5848", "326.04, 254.426, 63.0, 0.4576", "326.049, 254.691, 65.105, 0.3304", "323.998, 253.549, 68.3068, 0.2542", "320.962, 256.269, 70.4413, 0.2288", "318.502, 257.667, 70.4413, 0.2288", "316.619, 257.628, 70.4413, 0.2288", "313.488, 256.195, 72.0423, 0.2796", "312.51, 255.671, 72.0423, 0.4068" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "338.586, 263.692, 34.5332, 0.6102", "337.9, 263.501, 34.44, 0.6102", "337.328, 263.463, 33.6932, 0.6102", "336.552, 263.234, 33.8489, 0.5848", "336.12, 263.387, 34.6578, 0.5338", "335.853, 264.01, 35.0, 0.6102", "335.612, 264.226, 36.4, 0.3814", "335.433, 264.391, 36.96, 0.483", "334.938, 264.798, 36.9911, 0.7118", "334.734, 265.408, 37.52, 0.5592", "334.684, 265.853, 37.0532, 0.4576", "334.15, 265.751, 35.8711, 0.661", "333.705, 265.573, 36.5243, 0.4576", "333.807, 265.573, 37.4268, 0.2542", "333.819, 265.751, 37.52, 0.2288", "333.807, 266.082, 38.08, 0.356", "333.438, 266.209, 38.8268, 0.7118", "332.573, 265.866, 38.3911, 0.483", "331.798, 266.018, 38.64, 0.661", "330.947, 266.539, 38.08, 0.5848", "330.26, 266.666, 37.5511, 0.5848", "329.765, 267.086, 37.2089, 0.6864", "329.014, 266.857, 37.7068, 0.6356", "328.519, 266.247, 37.52, 0.661", "328.214, 265.687, 38.2043, 0.6864", "328.061, 265.229, 39.1689, 0.5338", "327.642, 264.836, 39.2, 0.4576", "327.451, 264.455, 39.76, 0.4068", "327.413, 263.806, 40.04, 0.3814", "327.54, 263.272, 39.4178, 0.2542", "327.743, 263.043, 39.3243, 0.2288", "327.769, 263.006, 39.7289, 0.2288", "328.074, 262.7, 40.1332, 0.3814", "327.972, 262.471, 41.2222, 0.2796", "327.604, 262.09, 42.4668, 0.5084", "327.261, 261.785, 42.84, 0.5338", "326.79, 261.518, 43.8357, 0.5084", "326.625, 260.946, 44.4889, 0.4322", "326.841, 260.476, 43.9911, 0.6102", "326.434, 259.879, 43.9911, 0.6864", "325.888, 259.357, 44.8622, 0.7372", "325.659, 258.798, 43.7111, 0.6102", "325.125, 258.277, 44.9868, 0.5338", "324.782, 257.565, 45.7643, 0.8898", "324.515, 256.841, 46.4178, 0.788", "324.438, 256.256, 47.88, 0.661", "324.515, 255.493, 48.16, 0.6102", "324.184, 255.035, 48.1911, 0.5084", "323.79, 254.858, 48.7511, 0.2796", "323.866, 254.4, 48.7822, 0.3814", "324.083, 254.045, 47.9422, 0.6102", "323.879, 252.71, 48.1911, 0.7626", "323.79, 251.871, 48.72, 0.4322", "323.6, 251.451, 49.1868, 0.3304", "323.523, 251.006, 49.8711, 0.3304", "323.523, 250.561, 50.7422, 0.3304", "323.409, 250.18, 50.9911, 0.356", "323.421, 249.519, 51.24, 0.356", "323.561, 249.087, 50.96, 0.4322", "323.79, 248.743, 51.24, 0.483" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "338.586, 263.692, 34.5332, 0.6102", "338.039, 263.819, 32.76, 0.661", "337.187, 263.692, 32.3557, 0.4576", "337.137, 264.023, 31.8889, 0.2288", "337.137, 264.15, 31.36, 0.2288", "337.137, 264.2, 30.6443, 0.2288", "337.137, 264.493, 30.52, 0.2288", "337.137, 264.709, 30.2089, 0.2542", "337.213, 264.722, 29.0268, 0.356", "337.328, 264.913, 28.28, 0.5084", "337.251, 264.607, 27.16, 0.4576", "336.756, 264.341, 26.6, 0.5338", "336.132, 264.569, 27.1289, 0.6864", "335.637, 264.786, 26.2268, 0.4322", "335.027, 265.167, 25.6668, 0.5848", "334.62, 265.154, 26.3822, 0.3814", "334.531, 265.395, 26.5068, 0.305", "333.743, 265.675, 26.04, 0.6102", "333.145, 265.878, 26.04, 0.5084", "332.713, 265.98, 25.5732, 0.4322", "332.319, 266.171, 25.4178, 0.3814", "332.091, 266.463, 25.1068, 0.4322", "331.455, 266.666, 25.0132, 0.661", "330.603, 266.45, 25.76, 0.8136", "329.599, 266.666, 26.5689, 0.8136", "328.823, 266.743, 26.32, 0.356", "328.251, 266.514, 26.6, 0.3304", "328.251, 266.107, 27.3778, 0.4322", "328.239, 265.955, 28.0, 0.4576", "327.756, 265.751, 28.0, 0.483", "327.222, 265.56, 28.0, 0.5338", "326.625, 265.649, 28.0, 0.6356", "325.951, 265.942, 28.0311, 0.483", "325.1, 265.662, 27.72, 0.6864", "324.401, 265.319, 27.9689, 0.6102", "323.866, 265.065, 28.28, 0.4322", "323.409, 265.065, 28.28, 0.4068", "322.989, 265.065, 27.6268, 0.3814", "322.608, 265.179, 27.6578, 0.3814", "322.188, 265.192, 26.7557, 0.661", "321.807, 264.836, 25.48, 0.6356", "321.35, 264.709, 25.7289, 0.4068", "321.044, 264.505, 25.0757, 0.4576", "320.815, 264.226, 24.08, 0.4576", "320.485, 263.794, 24.7332, 0.5338", "319.798, 263.451, 24.5468, 0.7118", "318.997, 263.476, 24.2668, 0.7626", "318.223, 263.692, 24.2668, 0.8136", "317.346, 263.234, 24.08, 0.9406", "316.774, 262.7, 23.3332, 0.7118", "316.189, 262.319, 23.2089, 0.5592", "315.54, 262.053, 23.2089, 0.6102", "315.172, 261.62, 22.1511, 0.6102", "315.324, 260.946, 21.7468, 0.6864", "315.312, 260.12, 21.56, 0.8136", "314.931, 259.459, 21.0311, 0.8136", "314.448, 258.912, 21.0311, 0.5592", "313.901, 258.43, 20.7511, 0.7626", "313.049, 258.277, 21.0311, 0.6102", "312.528, 257.858, 20.7511, 0.661", "312.058, 257.438, 20.1911, 0.6356", "311.397, 257.273, 21.2489, 0.7626", "310.952, 256.828, 19.5689, 0.6864", "310.062, 256.523, 18.76, 0.5338", "309.566, 256.612, 19.6311, 0.6356", "308.893, 256.015, 19.32, 0.7372", "308.308, 255.582, 19.8489, 0.5592", "308.003, 255.074, 19.32, 0.5848", "307.965, 254.756, 20.6889, 0.7372", "307.927, 253.93, 21.28, 0.6864", "308.308, 252.951, 21.3111, 0.5848", "308.079, 252.354, 21.0311, 0.661", "307.507, 251.832, 21.1868, 0.356", "307.622, 250.994, 20.44, 0.5848", "307.622, 250.536, 20.16, 0.483", "305.958, 248.938, 21.8795, 0.4322", "305.445, 248.338, 21.8795, 0.3814", "305.638, 247.801, 21.8795, 0.3304", "305.884, 246.699, 21.8795, 0.356", "305.748, 245.882, 21.8795, 0.4068", "305.006, 244.659, 21.8795, 0.483", "302.752, 242.22, 23.4805, 0.483", "301.978, 240.389, 23.4805, 0.5338", "292.038, 228.983, 28.2834, 0.5084", "289.89, 225.975, 26.1486, 0.483", "290.599, 223.421, 27.216, 0.3814", "290.236, 222.352, 27.216, 0.3304", "289.562, 221.202, 27.216, 0.3304", "287.844, 219.09, 25.615, 0.356", "287.526, 218.16, 25.615, 0.4068", "287.09, 216.819, 25.615, 0.4068", "286.672, 215.15, 26.6823, 0.4322", "285.397, 214.884, 26.6823, 0.4068", "284.04, 214.6, 26.6823, 0.4068", "282.454, 213.169, 25.615, 0.3814", "279.602, 213.278, 25.615, 0.4576" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "341.84, 242.553, 25.8532, 0.3304", "341.37, 242.185, 26.32, 0.5592", "340.81, 241.956, 26.3511, 0.5592", "340.188, 241.549, 26.5689, 0.5848", "339.628, 241.307, 26.5689, 0.4576", "338.98, 241.384, 26.3511, 0.4576", "338.599, 241.028, 26.7868, 0.3814", "338.243, 240.698, 27.0668, 0.4068", "338.052, 240.354, 27.16, 0.4322", "337.709, 240.278, 27.3468, 0.4576", "336.933, 240.507, 27.9689, 0.4322", "336.349, 240.698, 27.9689, 0.4068", "335.916, 240.621, 27.72, 0.356", "335.624, 240.354, 28.2178, 0.4322", "335.306, 240.126, 28.84, 0.4576", "334.887, 239.859, 29.12, 0.4322", "334.366, 239.782, 29.6178, 0.3814", "333.896, 239.604, 29.9911, 0.3304", "333.069, 239.083, 30.0532, 0.3814", "332.981, 238.892, 30.4889, 0.2542", "332.625, 238.676, 29.7111, 0.4576", "331.798, 237.927, 29.7111, 0.7626", "331.379, 237.418, 29.96, 0.5592", "331.188, 236.91, 30.4889, 0.4322", "331.036, 236.388, 30.8, 0.5084", "330.502, 235.893, 31.0178, 0.5338", "329.98, 235.651, 31.7332, 0.4322", "330.006, 235.092, 32.0132, 0.305", "330.044, 234.876, 32.2311, 0.2542", "330.044, 234.177, 32.76, 0.2288", "330.044, 233.91, 32.5732, 0.2288", "330.044, 233.605, 32.48, 0.2288", "329.955, 233.351, 32.48, 0.2288", "329.281, 232.918, 33.1332, 0.305", "329.078, 232.727, 33.8489, 0.2542", "328.671, 232.461, 33.88, 0.2288", "328.328, 232.309, 34.0668, 0.2288", "327.985, 232.016, 34.4089, 0.2288", "327.743, 232.003, 34.1911, 0.2288", "327.413, 232.003, 34.44, 0.2542", "327.082, 231.698, 34.5957, 0.3814", "326.701, 231.456, 34.16, 0.3814", "326.078, 231.063, 34.7511, 0.3814", "325.672, 230.77, 35.0, 0.4322", "325.391, 230.376, 35.0311, 0.4322", "325.227, 230.249, 35.9957, 0.4068", "325.087, 229.88, 36.3689, 0.4576", "324.782, 229.295, 35.9332, 0.356", "324.629, 228.838, 36.4, 0.305", "324.438, 228.228, 36.4, 0.2542", "324.438, 227.427, 36.4, 0.2288", "324.159, 226.906, 36.4, 0.2288", "323.829, 226.512, 36.5868, 0.2288", "323.447, 226.245, 36.68, 0.2288", "323.193, 225.927, 36.96, 0.2288", "323.18, 224.91, 36.96, 0.2288", "322.964, 224.326, 36.96, 0.2288", "322.951, 223.995, 36.96, 0.2288", "322.913, 223.766, 37.1468, 0.2288", "322.685, 223.563, 37.7689, 0.3814", "322.443, 223.245, 37.8, 0.5084", "321.832, 222.712, 38.08, 0.4068", "321.541, 222.203, 38.08, 0.305", "321.235, 221.707, 38.08, 0.2542", "320.917, 221.224, 38.08, 0.2288", "320.499, 220.957, 38.08, 0.2288", "320.32, 220.449, 38.08, 0.2288", "320.015, 219.725, 38.08, 0.2542", "319.9, 219.038, 38.08, 0.305", "319.71, 218.427, 38.08, 0.356", "319.443, 217.894, 38.08, 0.4322", "319.278, 216.763, 38.8268, 0.7372", "318.833, 215.644, 38.92, 0.9914", "318.935, 214.843, 39.2311, 0.6102", "318.731, 213.699, 38.9511, 0.6864", "318.668, 213.165, 39.4489, 0.5592", "318.49, 212.632, 39.8532, 0.6864", "318.49, 211.869, 39.2, 0.7118", "317.93, 211.068, 38.8889, 0.7372", "317.422, 210.648, 39.48, 0.305", "316.901, 210.598, 39.48, 0.2542", "316.316, 209.962, 39.3868, 0.3814", "316.087, 209.619, 39.2932, 0.483", "316.43, 208.666, 40.32, 0.6356", "316.303, 208.106, 40.6, 0.6864", "315.655, 207.496, 40.88, 0.7372", "315.083, 206.696, 41.16, 0.5338", "314.727, 206.136, 42.0, 0.3304", "314.829, 205.5, 41.9068, 0.356", "314.841, 204.992, 40.88, 0.6102", "314.714, 204.356, 41.5332, 0.483", "314.6, 204.025, 42.4357, 0.5338", "314.6, 203.48, 41.9068, 0.5338", "314.232, 202.742, 42.28, 0.483", "314.028, 202.247, 43.0889, 0.2796", "314.028, 201.789, 42.8711, 0.2288", "314.028, 201.001, 42.84, 0.2288", "314.028, 200.772, 42.84, 0.2288", "314.028, 200.543, 42.84, 0.2542", "314.028, 200.213, 42.5289, 0.4576", "314.257, 199.857, 41.72, 0.4322", "314.207, 199.069, 42.4668, 0.2796", "314.015, 198.497, 42.56, 0.305", "313.799, 197.989, 42.3732, 0.2796", "313.697, 197.353, 42.28, 0.2796", "313.812, 196.781, 42.0, 0.2796", "314.028, 196.387, 42.0932, 0.3304", "314.13, 195.878, 42.1868, 0.356", "314.257, 195.497, 42.2489, 0.4068", "314.142, 195.154, 42.8089, 0.3304", "314.028, 194.301, 42.7157, 0.4322", "314.028, 193.946, 42.0932, 0.483", "313.723, 193.641, 42.56, 0.5084", "313.57, 192.548, 42.5911, 0.5592", "313.583, 192.052, 42.3732, 0.5338", "313.723, 191.543, 42.0, 0.4576", "313.837, 191.023, 41.9689, 0.3814", "313.685, 190.374, 41.7511, 0.305", "313.685, 189.79, 42.28, 0.2542", "313.672, 189.459, 42.28, 0.2288", "313.227, 189.218, 42.28, 0.2542", "312.998, 189.103, 41.72, 0.305", "312.77, 188.81, 41.5643, 0.483", "312.668, 188.29, 42.28, 0.4068", "312.503, 187.883, 42.0, 0.3814", "312.643, 187.502, 41.4711, 0.5592", "312.884, 187.502, 41.6889, 0.2796" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "341.84, 242.553, 25.8532, 0.3304", "341.827, 242.07, 25.48, 0.5848", "341.789, 241.613, 25.0132, 0.5338", "341.611, 241.105, 25.3868, 0.5084", "341.598, 240.469, 25.76, 0.5338", "341.586, 239.833, 26.5068, 0.6356", "341.382, 239.312, 26.04, 0.4576", "341.243, 238.422, 26.04, 0.3814", "340.989, 237.952, 26.2268, 0.4068", "340.925, 237.278, 26.32, 0.4322", "340.989, 236.719, 26.5689, 0.4576", "340.835, 236.186, 26.8489, 0.4576", "340.607, 235.626, 26.88, 0.4576", "340.429, 235.003, 26.88, 0.4576", "340.111, 234.52, 26.88, 0.4576", "339.845, 233.986, 26.88, 0.4322", "339.806, 233.299, 26.88, 0.3814", "339.895, 232.779, 26.9732, 0.3304", "339.959, 232.27, 27.16, 0.3304", "339.781, 231.762, 27.44, 0.3814", "339.818, 231.24, 27.4089, 0.4322", "339.997, 230.859, 27.16, 0.4576", "339.959, 230.325, 27.44, 0.4576", "339.768, 229.613, 27.7511, 0.4576", "339.641, 229.156, 28.28, 0.4576", "339.425, 228.787, 29.0889, 0.2542", "339.425, 228.342, 28.56, 0.4322", "339.425, 227.77, 28.28, 0.4576", "339.425, 227.377, 28.9957, 0.5084", "339.348, 226.703, 29.4, 0.4322", "339.31, 226.296, 29.4311, 0.2542", "339.183, 225.94, 29.4311, 0.305", "338.84, 225.266, 30.24, 0.3814", "338.701, 224.796, 30.3332, 0.4068", "338.624, 224.326, 29.9911, 0.4576", "338.637, 223.779, 30.8, 0.5084", "338.738, 223.194, 31.08, 0.4322", "338.701, 222.431, 31.08, 0.3304", "338.51, 221.949, 31.3911, 0.2542", "338.472, 221.402, 31.92, 0.2288", "338.395, 220.678, 31.92, 0.2288", "338.395, 219.877, 31.92, 0.2288", "338.395, 219.076, 31.92, 0.2288", "338.395, 218.275, 31.92, 0.2796", "338.395, 217.474, 31.92, 0.3814", "338.472, 217.004, 32.3557, 0.5084", "338.433, 216.521, 33.04, 0.4068", "338.395, 216.089, 32.7911, 0.4322", "338.281, 215.644, 32.2, 0.4576", "338.192, 215.161, 31.92, 0.4576", "338.09, 214.577, 32.76, 0.5338", "337.709, 214.005, 32.2932, 0.5338", "337.48, 213.394, 32.2932, 0.4068", "337.239, 213.025, 32.2, 0.3814", "336.908, 212.67, 32.2, 0.4068", "337.035, 212.301, 32.2932, 0.4322", "337.162, 211.844, 32.48, 0.4322", "336.781, 211.538, 32.76, 0.4576", "336.222, 211.297, 33.88, 0.4576", "336.107, 210.648, 33.7868, 0.5338", "336.043, 210.026, 32.9468, 0.483", "335.955, 209.047, 32.2, 0.5848", "335.777, 208.526, 31.8268, 0.483", "335.955, 207.941, 31.7022, 0.4576", "336.107, 207.559, 32.8532, 0.5338", "336.107, 206.987, 33.1332, 0.4068", "336.184, 206.415, 33.6, 0.4576", "336.145, 205.742, 33.5689, 0.4322", "336.145, 205.271, 33.04, 0.4322", "336.222, 204.801, 33.3822, 0.4576", "336.361, 204.344, 33.6, 0.356", "336.565, 203.823, 33.4132, 0.4068", "336.577, 203.174, 32.5111, 0.5338", "336.831, 202.259, 32.9468, 0.483", "337.175, 201.573, 32.8532, 0.8898", "336.946, 200.963, 31.92, 0.7626", "337.01, 200.073, 32.2, 0.839", "336.679, 199.272, 31.9511, 0.7626", "336.463, 198.509, 31.4532, 0.6864", "336.565, 197.404, 31.7957, 0.6864", "336.565, 196.882, 33.04, 0.5338", "336.565, 196.501, 33.7868, 0.483", "336.565, 195.738, 33.6, 0.5592", "336.679, 195.065, 33.9111, 0.5338", "336.794, 193.908, 34.16, 0.5848", "337.112, 192.955, 33.4132, 0.5338", "337.251, 192.192, 33.32, 0.5592", "337.594, 191.849, 33.04, 0.305" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "432.037, 292.865, 33.8481, 0.6102", "431.86, 292.063, 31.92, 0.3304", "432.191, 291.822, 31.36, 0.6102", "432.355, 291.198, 32.4489, 0.5338", "432.661, 290.69, 32.2, 0.483", "432.89, 290.118, 32.2, 0.6102", "433.208, 289.636, 32.2, 0.6864", "433.576, 288.669, 32.8532, 0.4576", "433.653, 288.263, 33.2889, 0.2288", "433.69, 287.716, 33.04, 0.3814", "433.843, 287.258, 32.9468, 0.6102", "434.148, 286.801, 33.04, 0.5338", "434.504, 286.356, 33.04, 0.483", "434.733, 285.936, 33.1332, 0.483", "434.834, 285.199, 33.04, 0.5848", "434.987, 284.665, 32.76, 0.483", "435.178, 284.182, 32.7289, 0.4576", "435.342, 283.648, 31.92, 0.5338", "435.712, 283.153, 31.7957, 0.661", "436.207, 282.682, 31.92, 0.661", "436.55, 282.454, 31.1422, 0.5338", "437.008, 282.454, 31.64, 0.2542", "437.313, 282.491, 32.2, 0.4576", "437.542, 282.11, 32.6668, 0.483", "437.771, 281.729, 31.92, 0.356", "437.961, 281.462, 31.64, 0.305", "438.152, 281.183, 32.4489, 0.6864", "438.699, 280.827, 33.04, 0.5848", "439.029, 280.471, 33.04, 0.4576", "439.067, 279.822, 33.04, 0.5848", "439.296, 279.263, 32.1689, 0.7372", "439.741, 278.907, 31.6089, 0.4576", "440.097, 278.742, 30.6443, 0.5084", "440.326, 278.45, 31.36, 0.3814", "440.49, 278.157, 32.2, 0.6356", "440.91, 277.776, 31.92, 0.6864", "441.291, 277.191, 31.7957, 0.6102", "441.775, 276.962, 31.5468, 0.4576", "441.965, 276.632, 31.7957, 0.3304", "442.36, 276.632, 32.2932, 0.4576", "442.766, 276.212, 31.6089, 0.7118", "443.529, 275.654, 30.9243, 0.7118", "443.872, 275.119, 30.2711, 0.356", "444.33, 274.916, 30.5511, 0.4322", "444.698, 274.7, 31.08, 0.5084", "444.939, 274.153, 31.3911, 0.4322", "445.461, 273.747, 31.64, 0.661", "446.046, 273.378, 30.9868, 0.5848", "446.351, 272.921, 31.08, 0.483", "446.618, 272.488, 31.3289, 0.4322", "446.936, 272.158, 31.0178, 0.483", "447.52, 271.802, 30.8, 0.6864", "447.863, 271.395, 31.4843, 0.483", "447.99, 270.899, 31.36, 0.5338", "448.435, 270.747, 31.4222, 0.5338", "448.893, 270.327, 31.6711, 0.661", "449.249, 269.87, 31.64, 0.483", "449.719, 269.539, 32.2, 0.6864", "450.126, 268.7, 32.5111, 0.5338", "450.457, 268.332, 32.76, 0.4576", "450.659, 267.963, 33.32, 0.3814", "450.863, 267.48, 33.32, 0.2542", "450.977, 267.124, 32.7911, 0.356", "451.194, 266.717, 32.6357, 0.4576", "451.512, 266.336, 32.2932, 0.3814", "451.728, 265.828, 32.48, 0.4068", "451.994, 265.522, 32.2, 0.5084", "452.236, 265.154, 31.1732, 0.4576", "452.375, 264.823, 32.3557, 0.5084", "452.656, 264.823, 33.1332, 0.3304", "452.82, 264.747, 33.32, 0.2542", "453.024, 264.531, 33.4132, 0.2288", "453.367, 264.264, 33.32, 0.2288", "453.634, 264.187, 33.32, 0.2288", "453.825, 264.15, 33.32, 0.2288", "454.054, 264.15, 33.32, 0.2288", "454.27, 264.023, 33.32, 0.2288", "454.282, 263.692, 33.32, 0.2288", "454.282, 263.463, 33.32, 0.2288", "454.32, 263.158, 33.32, 0.2288", "454.435, 262.941, 33.2889, 0.2542", "454.663, 262.815, 32.2, 0.4068", "455.198, 262.548, 32.2, 0.4322", "455.503, 262.205, 31.8268, 0.4068", "455.579, 262.128, 30.52, 0.5592", "455.961, 261.874, 30.9243, 0.483", "456.202, 261.722, 31.64, 0.4576", "456.494, 261.327, 31.36, 0.5338", "456.951, 260.984, 31.36, 0.5084", "457.244, 260.591, 31.08, 0.5084", "457.587, 260.069, 30.9243, 0.3304", "457.689, 259.993, 31.3289, 0.2542", "457.841, 259.663, 31.5468, 0.2542", "458.172, 259.421, 31.1732, 0.3814", "458.54, 259.039, 31.1111, 0.4576", "459.062, 258.442, 31.4532, 0.4576", "459.393, 258.163, 31.64, 0.4322", "459.684, 257.895, 31.3289, 0.305", "459.824, 257.667, 30.8311, 0.2542", "460.117, 257.54, 31.4222, 0.356", "460.447, 257.387, 31.64, 0.356", "460.778, 257.069, 31.7332, 0.356", "461.045, 256.942, 31.3911, 0.3814", "461.337, 256.676, 31.36, 0.3814", "461.808, 256.116, 31.36, 0.4068", "462.099, 255.734, 31.6089, 0.4576" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "432.037, 292.865, 33.8481, 0.6102", "433.077, 292.871, 34.9938, 0.661", "434.209, 292.912, 35.2887, 0.7626", "435.317, 293.155, 35.3402, 0.8136", "436.384, 292.969, 35.7076, 0.7626", "437.071, 292.477, 37.4489, 0.7118", "438.128, 292.698, 37.9733, 0.661", "439.031, 292.587, 39.4475, 0.6356", "439.703, 291.701, 39.9353, 0.5848", "440.06, 290.704, 40.7823, 0.6356", "439.766, 289.948, 42.6157, 0.6864", "439.106, 289.064, 43.2062, 0.788", "438.595, 288.072, 43.6103, 0.7118", "438.743, 286.996, 44.2523, 0.5848", "438.596, 285.892, 44.4732, 0.4322", "438.027, 285.087, 45.6666, 0.4068", "438.281, 284.154, 46.94, 0.4322", "439.121, 283.448, 47.6022, 0.4322", "439.813, 282.592, 47.8349, 0.3814", "440.491, 281.845, 48.7659, 0.3814", "441.449, 281.374, 49.4712, 0.4576", "442.366, 280.996, 50.7088, 0.5592", "443.401, 280.566, 51.0905, 0.5592", "444.499, 280.553, 51.7616, 0.483", "445.245, 280.966, 50.96, 0.4322", "445.041, 280.547, 51.8932, 0.4322", "445.168, 280.432, 52.92, 0.3304", "445.715, 280.28, 52.9511, 0.2288", "445.995, 280.28, 52.7957, 0.2542", "446.351, 280.013, 52.36, 0.483", "446.986, 279.848, 52.36, 0.5848", "447.304, 279.606, 51.8311, 0.305", "447.304, 279.594, 52.36, 0.2288", "447.418, 279.581, 53.1689, 0.483", "447.889, 279.517, 52.7643, 0.483", "448.105, 279.937, 52.92, 0.356", "448.512, 280.166, 52.7957, 0.3814", "448.791, 280.166, 52.36, 0.4068", "449.02, 279.873, 52.4843, 0.3814", "449.122, 279.67, 53.1378, 0.4576", "449.313, 279.581, 54.1332, 0.5338" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "359.754, 321.124, 10.6168, 0.7118", "359.946, 321.796, 9.6656, 0.5848", "360.501, 322.703, 10.5414, 0.7118", "361.297, 323.521, 10.6319, 0.7118", "362.139, 324.295, 10.6058, 0.6356", "363.048, 324.976, 10.4286, 0.5084", "363.151, 325.844, 9.3159, 0.4576", "362.44, 326.637, 8.4972, 0.4322", "361.828, 327.573, 8.6442, 0.4576", "361.867, 328.659, 9.3794, 0.4068", "362.457, 329.601, 9.2431, 0.3814", "363.364, 330.158, 8.3238, 0.3814", "364.286, 330.537, 6.977, 0.483", "365.174, 331.141, 6.2149, 0.5338", "365.924, 332.001, 6.1888, 0.5848", "366.223, 333.07, 6.3417, 0.5848" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "359.754, 321.124, 10.6168, 0.7118", "358.757, 321.573, 10.2074, 0.4576", "358.083, 321.118, 8.3258, 0.3814", "357.286, 320.799, 6.7413, 0.4068", "356.372, 320.884, 8.2261, 0.5084", "355.443, 321.363, 9.263, 0.5848", "354.519, 322.012, 9.5264, 0.6102", "353.636, 322.738, 9.5497, 0.6356", "352.552, 322.948, 9.7303, 0.6356", "351.798, 322.281, 10.7492, 0.5848", "351.267, 321.368, 11.5382, 0.483", "350.57, 320.609, 10.5602, 0.4322", "349.811, 320.907, 8.8407, 0.4576", "349.013, 321.383, 7.2951, 0.5338", "348.184, 322.05, 6.3994, 0.5848", "347.528, 322.971, 6.1916, 0.6102", "346.614, 323.63, 6.3893, 0.6102", "345.715, 323.346, 7.3651, 0.5592", "345.293, 322.36, 8.0909, 0.5084", "345.335, 321.243, 7.9442, 0.4322", "345.729, 320.193, 8.2701, 0.4322", "346.45, 319.337, 7.9654, 0.4576", "346.775, 318.397, 6.6346, 0.483", "346.658, 317.565, 7.0686, 0.4576", "345.544, 317.383, 7.1568, 0.356", "344.466, 317.078, 6.7508, 0.305", "343.827, 316.737, 8.6486, 0.305", "343.32, 315.848, 8.9981, 0.356", "342.622, 315.268, 7.5023, 0.3814", "342.924, 314.34, 6.1986, 0.356", "343.04, 313.236, 5.5829, 0.3304", "343.447, 312.342, 6.6542, 0.2796", "344.109, 311.455, 6.5279, 0.2542", "344.667, 310.474, 6.526, 0.2796", "344.764, 309.516, 7.9184, 0.3304", "344.597, 308.628, 9.604, 0.4068", "343.692, 308.318, 11.0429, 0.4068", "342.896, 307.888, 12.6647, 0.4322", "341.983, 307.717, 13.7178, 0.4322", "341.066, 308.3, 13.0432, 0.4322", "340.656, 309.277, 12.2192, 0.3814", "340.485, 310.381, 11.802, 0.305", "341.105, 311.224, 12.0439, 0.2796", "341.926, 311.875, 12.8192, 0.3304", "342.056, 312.998, 12.88, 0.483" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "347.101, 297.1, 11.7891, 0.661", "345.971, 296.279, 11.984, 0.5592", "345.179, 295.553, 12.7658, 0.483", "344.109, 295.238, 12.8887, 0.4068", "343.068, 294.77, 12.9284, 0.4322", "341.947, 294.629, 13.2163, 0.5338", "340.876, 294.364, 13.6458, 0.661", "339.761, 294.404, 13.9535, 0.6864", "338.777, 294.943, 14.4197, 0.6102", "337.745, 295.027, 15.5078, 0.5084", "336.772, 294.55, 16.1935, 0.5084", "335.756, 294.035, 16.2932, 0.5848", "334.65, 294.018, 16.5922, 0.6356", "333.588, 293.826, 17.2833, 0.6356", "332.537, 293.399, 17.2385, 0.5592", "331.846, 292.602, 16.5724, 0.5338", "331.073, 292.017, 17.7262, 0.483", "329.984, 291.961, 17.6739, 0.5084", "328.854, 292.039, 17.5291, 0.483", "328.026, 292.623, 18.4923, 0.4576", "327.279, 293.35, 19.502, 0.4322", "326.277, 293.876, 19.6045, 0.4576", "325.262, 294.389, 19.6244, 0.5592", "324.175, 294.685, 19.7495, 0.6102", "323.078, 294.638, 20.4501, 0.6356", "321.965, 294.46, 20.7211, 0.6102", "320.954, 294.97, 20.7253, 0.6102", "319.848, 295.237, 20.7564, 0.6102", "318.756, 295.547, 20.9468, 0.6102", "317.787, 295.54, 22.2443, 0.661", "316.981, 295.189, 23.8661, 0.661", "316.107, 294.465, 24.0856, 0.661", "315.134, 293.895, 24.1083, 0.6102", "314.043, 294.094, 24.2822, 0.661", "313.314, 294.896, 25.0342, 0.7118", "312.427, 295.541, 25.6102, 0.7626", "311.314, 295.747, 25.468, 0.7372", "309.818, 295.319, 26.236, 0.7118", "308.719, 295.112, 26.7159, 0.661", "307.638, 294.882, 27.1964, 0.6102", "306.595, 294.53, 26.5868, 0.5592", "305.56, 294.393, 27.3473, 0.5338", "304.46, 294.674, 27.44, 0.5592", "303.317, 294.675, 27.44, 0.5848", "302.18, 294.563, 27.44, 0.6102", "301.165, 294.054, 27.44, 0.6356", "300.522, 293.131, 27.4403, 0.6864", "300.442, 292.03, 27.4411, 0.7118", "300.546, 290.901, 27.4481, 0.661", "300.138, 289.843, 27.4879, 0.5848", "299.523, 288.884, 27.6688, 0.5338", "299.0, 287.916, 28.3732, 0.5338", "298.68, 286.827, 28.4908, 0.5084", "298.466, 285.737, 28.0613, 0.483", "298.781, 284.68, 27.806, 0.5084", "298.896, 283.609, 28.5678, 0.5848", "299.255, 282.533, 28.6076, 0.661", "299.643, 281.467, 28.8179, 0.6864", "299.577, 280.386, 29.5887, 0.6356", "299.341, 279.279, 29.6794, 0.5848", "299.629, 278.189, 29.6769, 0.5084", "300.021, 277.751, 29.2132, 0.4322", "300.109, 277.013, 29.3689, 0.483", "300.325, 276.53, 29.4, 0.4576", "300.414, 276.06, 29.7111, 0.4322", "300.631, 275.704, 29.9289, 0.305", "300.643, 275.132, 29.68, 0.2796", "300.822, 274.751, 29.7111, 0.3304", "301.215, 274.204, 30.4889, 0.3304", "301.177, 273.721, 30.8, 0.4068", "301.101, 273.123, 30.6757, 0.5338", "300.758, 272.272, 30.8, 0.6356", "300.427, 271.802, 30.8, 0.5848", "299.944, 271.255, 30.52, 0.6102", "299.651, 270.442, 30.9868, 0.5848", "299.27, 270.111, 30.8311, 0.5338", "298.991, 269.691, 30.52, 0.5084", "298.47, 269.641, 30.52, 0.5338", "298.076, 269.119, 31.08, 0.6102" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "347.101, 297.1, 11.7891, 0.661", "346.3, 296.151, 11.7698, 0.6356", "345.597, 295.25, 11.814, 0.6102", "345.558, 294.169, 12.0954, 0.6102", "345.639, 293.081, 12.812, 0.6102", "345.247, 292.03, 12.8229, 0.5592", "344.442, 291.225, 12.6358, 0.5338", "343.543, 290.59, 11.9361, 0.483", "342.75, 289.774, 11.76, 0.5338", "342.168, 288.793, 11.76, 0.5848", "341.633, 287.786, 11.76, 0.6864", "340.993, 286.847, 11.76, 0.7118", "340.136, 286.095, 11.76, 0.6864", "339.133, 285.55, 11.7594, 0.6356", "338.134, 284.998, 11.7564, 0.6356", "337.33, 284.208, 11.7407, 0.6864", "336.568, 283.36, 11.6626, 0.6864", "335.614, 282.974, 11.0222, 0.661", "334.711, 282.852, 9.5609, 0.5848", "333.723, 282.647, 8.9149, 0.5592", "332.72, 283.115, 8.4232, 0.5084", "331.588, 283.127, 8.5529, 0.4576", "330.577, 282.717, 9.2711, 0.4576", "329.567, 282.379, 10.1844, 0.483", "328.5, 282.377, 9.6074, 0.5338", "327.724, 282.589, 7.6941, 0.5338", "326.809, 283.233, 7.219, 0.5084", "325.794, 283.314, 6.8664, 0.483", "325.564, 282.45, 5.2648, 0.4322", "325.439, 281.327, 5.0487, 0.4322", "324.654, 280.625, 5.108, 0.4068", "323.639, 280.963, 5.7014, 0.3814", "322.634, 280.953, 6.1043, 0.356", "322.293, 279.9, 5.7431, 0.4068", "321.95, 278.855, 5.1069, 0.5084", "321.516, 277.806, 5.1769, 0.5338", "321.117, 276.841, 5.9478, 0.483", "321.464, 275.933, 5.04, 0.4322" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "333.015, 270.574, 19.8982, 0.8136", "331.564, 270.487, 20.1541, 0.5592", "330.496, 270.775, 19.8139, 0.5338", "329.793, 271.639, 19.5978, 0.5084", "329.575, 272.758, 19.5838, 0.4322", "328.861, 273.554, 19.4757, 0.483", "327.766, 273.583, 18.8244, 0.6102", "326.67, 273.331, 18.522, 0.7626", "325.578, 273.52, 18.7284, 0.8136", "324.541, 273.909, 19.2265, 0.7626", "323.876, 274.517, 17.7159, 0.6864", "322.852, 274.933, 17.3306, 0.6102" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "333.015, 270.574, 19.8982, 0.8136", "332.299, 269.965, 20.7883, 0.5592", "331.305, 269.54, 21.5317, 0.5338", "330.174, 269.449, 21.5732, 0.5084", "329.163, 269.064, 20.8172, 0.483", "328.369, 268.285, 20.7777, 0.4322", "327.949, 267.24, 21.0916, 0.4322", "327.446, 266.337, 22.2116, 0.4322", "327.128, 265.264, 21.9682, 0.483", "326.454, 264.345, 22.0405, 0.5084", "325.891, 263.411, 22.7497, 0.5084", "325.579, 262.368, 23.5186, 0.5084", "325.453, 261.262, 24.08, 0.483", "325.1, 260.178, 24.08, 0.4576", "324.768, 259.097, 24.08, 0.356", "324.125, 258.162, 24.08, 0.305", "323.242, 257.439, 24.0797, 0.305", "322.643, 256.477, 24.0789, 0.3814", "322.32, 255.388, 24.0741, 0.4322", "322.197, 254.268, 24.0391, 0.483", "321.914, 253.176, 23.8389, 0.5084", "321.442, 252.194, 23.0843, 0.5848", "320.653, 251.376, 22.8382, 0.6356", "319.776, 250.687, 22.381, 0.7118", "318.888, 250.003, 21.891, 0.7118", "318.066, 249.208, 21.8599, 0.7372", "317.243, 248.415, 21.919, 0.7372", "316.377, 247.682, 22.1651, 0.7118", "315.398, 247.174, 22.8701, 0.6102", "314.368, 246.701, 22.96, 0.4576", "313.665, 245.822, 22.96, 0.3814", "313.093, 244.848, 22.96, 0.3814", "312.082, 244.382, 22.96, 0.483", "310.939, 244.358, 22.96, 0.5848", "310.24, 244.167, 22.8043, 0.661", "309.452, 244.003, 22.6489, 0.5848", "308.982, 243.888, 23.24, 0.5592", "308.194, 243.558, 23.24, 0.5338", "307.736, 243.138, 23.6132, 0.5084", "307.316, 242.833, 23.24, 0.5084", "306.923, 242.35, 22.5868, 0.483", "306.478, 242.083, 22.9289, 0.4068", "306.097, 242.07, 22.8668, 0.4576", "305.753, 241.715, 23.6757, 0.305", "305.448, 241.27, 24.08, 0.2796", "304.94, 241.091, 24.64, 0.305", "304.431, 240.914, 24.64, 0.4322", "303.846, 240.253, 24.6089, 0.5084", "303.618, 239.718, 24.7643, 0.4576", "303.274, 239.21, 25.1378, 0.4576", "303.16, 238.626, 24.6711, 0.4576", "303.173, 238.092, 25.0132, 0.5338", "302.842, 237.469, 25.48, 0.6356", "302.029, 236.922, 26.0711, 0.5084", "301.406, 236.694, 26.2268, 0.5848", "300.974, 236.477, 26.6, 0.483", "300.414, 236.236, 25.76, 0.6864", "299.728, 235.905, 26.0711, 0.6864", "299.385, 235.333, 26.5689, 0.7372", "299.143, 234.749, 25.5111, 0.5592", "298.915, 234.177, 26.5689, 0.5848", "298.279, 233.58, 26.3511, 0.4576", "298.241, 233.224, 27.3468, 0.356", "298.241, 232.69, 27.72, 0.3814", "298.114, 232.245, 27.72, 0.4322", "297.898, 231.889, 28.0, 0.4576", "297.186, 231.66, 27.7822, 0.4576", "296.563, 231.546, 28.4668, 0.483", "295.61, 231.583, 28.3732, 0.6864", "295.254, 231.66, 27.4711, 0.305", "294.821, 231.673, 26.88, 0.5084", "294.53, 232.067, 26.6, 0.4068", "294.224, 232.118, 25.7911, 0.3814", "293.767, 231.901, 25.2, 0.4576", "293.08, 231.889, 24.8889, 0.305", "292.292, 231.698, 24.8268, 0.2288", "291.936, 231.431, 24.3911, 0.2542", "291.643, 231.088, 24.1732, 0.2796", "291.377, 230.745, 24.08, 0.3304", "291.11, 230.439, 23.52, 0.356", "290.576, 230.173, 23.8, 0.4576", "290.131, 230.16, 23.52, 0.4576", "288.974, 230.058, 23.52, 0.305", "288.174, 230.058, 23.52, 0.2542", "287.373, 230.058, 23.52, 0.2288", "286.724, 229.906, 23.52, 0.2288", "286.204, 229.792, 23.4889, 0.2288", "285.784, 229.83, 23.2089, 0.3814", "285.657, 230.046, 22.3689, 0.483", "285.339, 230.096, 21.8089, 0.2542", "284.729, 230.275, 22.12, 0.3304", "284.207, 230.516, 22.0268, 0.3814", "283.725, 230.529, 22.12, 0.4322", "283.369, 230.745, 21.84, 0.356", "282.975, 230.961, 21.4668, 0.4068", "282.518, 231.165, 21.5289, 0.3814", "282.073, 231.279, 21.0, 0.4068", "281.36, 231.355, 20.9689, 0.4068", "280.979, 231.444, 20.72, 0.3814", "280.725, 231.66, 20.9689, 0.4576", "280.242, 231.851, 21.56, 0.4068", "279.822, 232.13, 21.5289, 0.4068", "279.581, 232.346, 21.8089, 0.4576", "279.174, 233.172, 21.5911, 0.4576", "278.831, 233.528, 21.84, 0.4322", "278.564, 233.834, 22.12, 0.305", "278.373, 233.986, 22.12, 0.2542", "278.335, 234.291, 22.12, 0.2288", "278.335, 234.52, 22.12, 0.2288", "278.323, 234.851, 22.12, 0.2288", "278.106, 234.978, 22.12, 0.2288", "277.776, 234.99, 22.12, 0.2288", "277.522, 235.079, 22.12, 0.2288", "277.153, 235.283, 22.12, 0.2288", "277.026, 235.423, 21.9332, 0.2288", "276.798, 235.614, 21.84, 0.2288", "276.607, 235.702, 22.2757, 0.2288", "276.251, 235.982, 22.12, 0.2542" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "433.73, 333.13, 22.9704, 0.661", "433.69, 333.476, 22.12, 0.4068", "433.69, 333.921, 22.7111, 0.4322", "433.551, 334.137, 23.24, 0.483", "433.462, 334.506, 23.8, 0.5338", "433.424, 335.256, 23.7689, 0.5848", "433.526, 335.421, 22.2757, 0.6102", "433.69, 335.929, 22.5557, 0.6102", "433.805, 336.323, 22.7111, 0.4322", "433.919, 336.781, 22.6489, 0.5592", "434.148, 337.239, 22.4311, 0.6864", "434.568, 337.747, 22.96, 0.6356", "434.872, 338.129, 23.1778, 0.5592", "434.961, 338.637, 22.12, 0.3814", "434.949, 338.967, 22.12, 0.356", "435.025, 339.348, 22.12, 0.2542", "435.063, 339.654, 22.12, 0.2796", "435.356, 339.933, 21.84, 0.4322", "435.406, 340.454, 21.84, 0.4322", "435.635, 340.899, 21.5289, 0.4322", "435.75, 341.319, 20.8757, 0.6102", "435.953, 341.827, 20.72, 0.5338", "436.093, 342.247, 20.9068, 0.5084", "435.877, 342.641, 20.72, 0.4068", "435.8, 342.933, 21.2489, 0.4322", "435.941, 343.454, 21.0311, 0.6356", "435.978, 344.001, 21.0622, 0.5592", "435.483, 344.357, 21.1243, 0.661", "435.521, 345.03, 21.0, 0.5848", "435.305, 345.297, 20.2222, 0.4068", "435.063, 345.628, 20.0978, 0.4576", "434.733, 346.149, 20.6268, 0.5848", "434.593, 346.632, 20.1289, 0.6356", "434.516, 347.077, 20.2532, 0.483", "434.275, 347.217, 21.28, 0.4322", "434.186, 347.687, 21.2489, 0.305", "434.262, 347.903, 20.4711, 0.4576", "434.377, 348.462, 20.44, 0.483", "434.453, 349.124, 20.6889, 0.661", "434.606, 349.619, 20.1911, 0.6356", "434.72, 350.077, 20.1289, 0.305", "434.872, 350.865, 20.6268, 0.4068", "435.101, 351.183, 20.9689, 0.4322", "435.178, 351.437, 21.0, 0.4322", "435.178, 351.78, 21.0, 0.483", "435.33, 352.25, 20.8443, 0.5084", "435.521, 352.645, 20.8757, 0.4576", "435.737, 353.051, 19.88, 0.4576", "435.889, 353.458, 20.4089, 0.4068", "435.978, 353.725, 20.16, 0.3304", "436.029, 354.246, 20.44, 0.4068", "436.398, 354.526, 20.3468, 0.6356", "436.359, 355.021, 19.88, 0.483", "436.398, 355.555, 19.6932, 0.4068", "436.322, 355.975, 19.7868, 0.3814", "436.245, 356.369, 19.2578, 0.356", "435.864, 356.801, 19.0711, 0.4576", "435.648, 357.132, 19.5068, 0.5338", "435.699, 357.716, 19.4132, 0.5848", "435.292, 358.072, 18.76, 0.5084", "435.063, 358.682, 18.8532, 0.6356", "434.949, 359.293, 18.8532, 0.5338", "434.987, 359.648, 19.3511, 0.3814", "434.987, 360.017, 19.5068, 0.3814", "435.051, 360.41, 18.8532, 0.483", "435.254, 360.868, 19.0089, 0.5592", "435.305, 361.644, 19.1332, 0.6356", "435.419, 362.063, 18.76, 0.5338", "435.521, 362.432, 19.2889, 0.4576", "435.75, 362.953, 18.3868, 0.483", "436.093, 363.436, 18.7911, 0.6356", "436.322, 363.919, 18.5111, 0.3304", "436.322, 364.287, 18.2932, 0.2796", "436.322, 364.593, 18.2, 0.2796", "436.588, 364.898, 18.2, 0.305", "436.779, 364.936, 18.2, 0.2288", "437.008, 364.936, 18.2, 0.2288", "437.237, 364.936, 18.2, 0.2542", "437.58, 364.936, 18.2, 0.2796", "437.961, 365.063, 18.6357, 0.3304", "438.304, 365.241, 19.5378, 0.4322", "438.724, 365.737, 19.32, 0.6102", "439.042, 366.22, 19.32, 0.5338", "439.296, 366.5, 19.6932, 0.4576", "439.741, 366.665, 19.32, 0.5338", "440.173, 366.843, 18.76, 0.5338", "440.363, 367.072, 18.2, 0.483", "440.898, 367.224, 18.48, 0.661", "441.343, 367.338, 18.5111, 0.4068", "441.559, 367.465, 18.1068, 0.3814", "441.813, 367.453, 17.92, 0.4576", "442.194, 367.669, 18.4178, 0.4576", "442.41, 367.758, 19.0089, 0.4576", "442.728, 368.025, 18.76, 0.2542", "442.842, 368.254, 18.76, 0.2288", "443.059, 368.381, 18.76, 0.2288", "443.173, 368.445, 18.8843, 0.2288", "443.186, 368.482, 19.32, 0.2288", "443.3, 368.597, 20.16, 0.3814", "443.567, 368.915, 19.6311, 0.4576", "443.758, 369.181, 20.1289, 0.4576", "444.051, 369.779, 20.1289, 0.4576", "444.342, 370.109, 20.0668, 0.4576", "444.431, 370.758, 20.16, 0.4322", "444.406, 371.266, 19.88, 0.3814", "444.673, 371.457, 19.04, 0.4322", "444.825, 371.8, 19.4132, 0.5084", "444.825, 372.118, 20.1289, 0.4322", "444.939, 372.334, 20.16, 0.3814", "445.003, 372.601, 19.6311, 0.5084", "445.118, 373.071, 20.44, 0.305", "445.13, 373.402, 20.44, 0.2542", "445.13, 374.317, 20.44, 0.2796", "445.13, 374.66, 20.44, 0.3814", "445.257, 375.105, 20.72, 0.6102", "445.817, 375.69, 20.72, 0.5338", "446.147, 376.008, 20.6268, 0.5338", "446.262, 376.426, 20.2532, 0.4322", "446.274, 376.732, 19.9111, 0.4576", "446.325, 377.241, 19.88, 0.305", "446.503, 377.291, 19.88, 0.2542", "446.757, 377.368, 19.9111, 0.2288", "446.961, 377.52, 20.44, 0.2288", "447.368, 378.054, 19.8489, 0.4068", "447.469, 378.271, 19.32, 0.356", "447.685, 378.397, 19.88, 0.4322", "447.876, 378.55, 20.16, 0.3304", "448.194, 378.918, 19.32, 0.4576", "448.562, 379.236, 19.6, 0.305", "448.868, 379.465, 19.7868, 0.2288", "448.982, 379.617, 19.6, 0.2542", "449.097, 379.948, 19.9111, 0.2796", "449.236, 380.482, 20.16, 0.356", "449.249, 380.85, 19.6311, 0.3814", "449.249, 381.181, 19.6, 0.4068", "449.579, 381.537, 19.6, 0.4576", "450.151, 381.982, 19.6311, 0.483", "450.495, 382.452, 19.6, 0.5592", "450.863, 382.77, 19.6, 0.3304", "451.194, 382.782, 19.6, 0.2542", "451.842, 383.011, 19.5068, 0.2542", "452.173, 383.278, 19.6311, 0.305", "452.414, 383.634, 19.6311, 0.3814", "452.529, 384.028, 19.7557, 0.4322", "452.668, 384.232, 19.6622, 0.3814", "452.719, 384.575, 19.9422, 0.5084", "452.757, 384.994, 19.88, 0.4322", "452.922, 385.401, 19.6, 0.3814", "453.253, 385.642, 19.88, 0.4068", "453.71, 385.986, 20.16, 0.305", "454.193, 386.291, 20.1911, 0.4068", "454.486, 386.443, 20.0978, 0.4576", "454.892, 386.443, 20.0668, 0.356", "455.376, 386.456, 19.9732, 0.4322", "455.591, 386.659, 20.6268, 0.4576", "455.884, 386.863, 20.6268, 0.483", "456.316, 387.384, 19.88, 0.5338", "456.672, 387.739, 19.6622, 0.4576", "456.849, 387.918, 19.1332, 0.2796", "457.13, 387.93, 19.0711, 0.4322", "457.333, 387.943, 19.6622, 0.4576", "457.714, 387.943, 19.5689, 0.4576", "458.147, 387.676, 19.04, 0.305", "458.63, 387.473, 19.04, 0.356", "458.973, 387.714, 18.5111, 0.6864", "459.684, 388.121, 18.4489, 0.5592", "460.346, 388.159, 18.2, 0.483", "461.032, 388.197, 18.3868, 0.4322", "461.566, 388.236, 18.2, 0.5084", "462.062, 388.147, 18.1689, 0.5338", "462.519, 388.032, 18.7289, 0.5338", "462.964, 387.93, 19.0711, 0.483", "463.307, 387.739, 19.1957, 0.5338", "463.333, 387.702, 17.9511, 0.483", "463.74, 387.549, 18.48, 0.4576", "464.044, 387.244, 18.8532, 0.5084", "464.273, 387.028, 17.9822, 0.4322", "464.541, 386.786, 16.9868, 0.483", "464.757, 386.622, 16.52, 0.2542", "464.922, 386.456, 16.7689, 0.2288", "465.113, 386.532, 16.8932, 0.2288", "465.685, 386.329, 17.4532, 0.3814", "466.053, 386.341, 18.2, 0.4576", "466.485, 386.329, 18.2932, 0.4322", "466.752, 385.986, 17.92, 0.5084", "466.981, 385.464, 17.7643, 0.5084", "467.476, 385.337, 18.48, 0.356", "467.896, 385.083, 18.1689, 0.2796", "468.481, 384.956, 16.8311, 0.356", "468.747, 384.727, 16.0843, 0.4576", "469.154, 384.536, 15.5868, 0.483", "469.955, 384.27, 14.84, 0.5592", "470.578, 384.079, 14.8711, 0.483", "471.087, 384.028, 15.12, 0.3814", "471.353, 383.837, 15.12, 0.356", "471.748, 383.812, 14.4668, 0.2796", "472.002, 383.621, 14.4043, 0.2542", "472.052, 383.66, 14.84, 0.2542", "472.332, 383.481, 15.2132, 0.483", "472.586, 383.812, 15.4, 0.3304" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "433.73, 333.13, 22.9704, 0.661", "434.408, 333.884, 22.472, 0.4068", "435.206, 334.604, 21.8386, 0.483", "436.247, 335.07, 21.8313, 0.5338", "437.207, 335.667, 21.7941, 0.5338", "437.971, 336.51, 21.6247, 0.5084", "438.782, 337.235, 20.8816, 0.5084", "439.646, 337.979, 20.7295, 0.483", "440.556, 338.668, 20.7673, 0.483", "441.087, 339.642, 21.0123, 0.4576", "441.13, 340.75, 21.236, 0.4576", "441.146, 341.87, 20.7186, 0.4576", "441.283, 342.999, 20.7099, 0.4322", "441.368, 344.129, 20.6564, 0.3814", "441.944, 345.099, 20.379, 0.3304", "442.5, 346.053, 19.6907, 0.305", "443.175, 346.963, 19.6, 0.356", "444.104, 347.619, 19.5997, 0.4322", "445.033, 348.285, 19.598, 0.5338", "445.9, 349.024, 19.5894, 0.5592", "446.49, 349.998, 19.5446, 0.5592", "446.986, 350.996, 19.1414, 0.5084", "447.19, 351.767, 18.7289, 0.4068", "447.202, 352.123, 18.7289, 0.4068", "447.304, 352.619, 19.2268, 0.4576", "447.533, 352.924, 19.5378, 0.5084", "447.647, 353.394, 19.0711, 0.4322", "447.812, 353.789, 18.76, 0.356", "448.105, 353.954, 19.04, 0.356", "448.398, 354.182, 18.8843, 0.4322", "448.639, 354.309, 19.6622, 0.4576", "449.097, 354.665, 20.1911, 0.483", "449.605, 354.945, 20.0978, 0.661", "450.05, 355.212, 19.88, 0.6102", "450.177, 355.809, 20.2532, 0.5338", "450.431, 356.115, 19.7243, 0.3304", "450.761, 356.013, 19.8178, 0.4576", "451.003, 356.127, 20.6268, 0.4322", "451.27, 356.356, 20.6268, 0.4068", "451.537, 356.394, 21.1868, 0.6864", "452.134, 356.242, 20.2222, 0.5338", "452.529, 356.127, 20.5332, 0.4068", "452.833, 356.318, 21.0, 0.483", "453.482, 356.356, 20.72, 0.5338", "454.054, 356.445, 21.0, 0.4322", "454.486, 356.254, 21.1868, 0.4322", "454.854, 356.242, 21.0, 0.5592", "455.362, 355.949, 21.56, 0.5592", "456.049, 355.707, 21.3111, 0.4322", "456.723, 355.746, 21.28, 0.3304", "457.486, 355.784, 21.28, 0.2542", "458.286, 355.784, 21.28, 0.2288", "458.515, 355.784, 21.28, 0.2288", "458.744, 355.784, 21.28, 0.2288", "459.037, 355.834, 21.28, 0.2288", "459.087, 356.013, 21.28, 0.2288", "459.087, 356.242, 21.28, 0.2288", "459.138, 356.534, 21.28, 0.2288", "459.316, 356.585, 21.28, 0.2288", "459.659, 356.699, 21.28, 0.3814", "460.015, 356.966, 20.8443, 0.4322", "460.269, 357.246, 20.1911, 0.2542", "460.396, 357.373, 20.3468, 0.2542", "460.689, 357.386, 20.44, 0.2796", "461.019, 357.513, 20.16, 0.305", "461.4, 357.805, 19.9111, 0.3304", "461.629, 357.843, 20.3778, 0.483", "461.935, 357.958, 20.9689, 0.5338", "462.253, 358.11, 20.44, 0.3814", "462.405, 358.301, 20.72, 0.3814", "462.748, 358.631, 21.3111, 0.4576", "462.952, 358.911, 22.0889, 0.483", "463.447, 359.33, 21.8089, 0.5338", "463.815, 359.661, 21.6222, 0.5338", "464.171, 359.865, 21.5289, 0.5084", "464.655, 360.169, 21.56, 0.483" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "363.519, 323.066, 20.736, 0.7118", "361.823, 323.464, 20.7144, 0.6864", "360.7, 323.59, 20.6816, 0.6102", "359.709, 323.04, 20.5142, 0.5338", "358.694, 322.812, 19.7218, 0.5338", "357.952, 323.655, 19.3844, 0.5338", "357.275, 324.503, 18.5951, 0.5084", "356.28, 324.812, 17.9917, 0.483", "355.299, 324.334, 17.918, 0.4068", "354.3, 323.918, 18.4744, 0.356", "353.194, 323.66, 18.4439, 0.356", "352.102, 323.859, 18.2308, 0.4322", "351.198, 324.136, 16.7941, 0.5084", "350.27, 324.682, 15.9468, 0.483", "349.198, 324.849, 15.1964, 0.4576", "348.073, 324.699, 15.1256, 0.4576", "347.122, 325.3, 15.148, 0.483", "346.272, 326.063, 15.2426, 0.4576", "345.307, 326.572, 15.7889, 0.4322", "344.272, 326.228, 16.2232, 0.5084", "343.318, 325.614, 16.1549, 0.6102", "342.253, 325.803, 15.682, 0.661", "341.232, 326.213, 14.9775, 0.6102", "340.179, 326.366, 14.0638, 0.5848", "339.408, 326.823, 12.4331, 0.5848", "338.609, 327.542, 12.2511, 0.5848", "337.547, 327.849, 12.866, 0.5848", "336.812, 328.684, 12.7966, 0.6102", "337.108, 329.685, 12.1635, 0.6356", "337.348, 330.734, 11.7631, 0.5592" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "363.519, 323.066, 20.736, 0.7118", "362.647, 324.016, 20.8012, 0.4576", "361.892, 324.87, 21.0395, 0.6356", "361.348, 325.799, 21.9618, 0.839", "360.791, 326.725, 22.7746, 0.966" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "374.546, 322.319, 24.2967, 0.6864", "375.116, 322.054, 26.0014, 0.661", "375.622, 321.279, 27.4193, 0.5592", "375.485, 320.206, 28.2425, 0.5592", "375.477, 319.106, 28.6412, 0.5848", "376.147, 318.201, 28.9643, 0.7118", "376.725, 317.602, 30.6701, 0.788", "377.742, 317.574, 31.8721, 0.8136", "378.845, 317.576, 32.5307, 0.7118", "379.802, 317.581, 33.9945, 0.6102", "380.819, 317.627, 35.24, 0.5338", "381.801, 317.96, 36.2494, 0.5592", "382.869, 318.12, 36.9978, 0.5592", "383.799, 318.217, 36.6948, 0.5338", "384.506, 317.363, 36.7794, 0.5338", "384.663, 316.525, 38.5594, 0.6102", "384.858, 315.537, 39.6992, 0.7118", "384.572, 314.452, 39.8017, 0.7372", "384.143, 313.405, 40.0378, 0.661", "383.741, 312.694, 41.6332, 0.6102", "383.212, 313.376, 43.0217, 0.6356", "382.936, 314.411, 43.706, 0.7372", "382.342, 315.275, 44.7401, 0.788", "382.043, 316.363, 44.6925, 0.7118", "381.453, 317.029, 46.2092, 0.5848", "380.685, 317.138, 48.2518, 0.483", "379.879, 317.211, 50.227, 0.4322", "379.122, 317.574, 52.08, 0.3814", "378.702, 316.863, 52.3911, 0.3304", "378.308, 316.545, 53.1689, 0.4322", "378.206, 316.545, 53.76, 0.483", "377.761, 316.583, 54.7243, 0.5084", "377.406, 316.443, 55.4711, 0.4068", "376.91, 316.43, 55.9068, 0.3814", "376.376, 316.202, 55.72, 0.4068", "376.033, 316.202, 55.72, 0.3814", "375.448, 316.202, 55.9689, 0.5338", "375.232, 315.858, 56.84, 0.7372", "374.889, 315.401, 57.4, 0.5592", "374.495, 315.108, 57.4, 0.4068", "374.317, 314.791, 57.8668, 0.3814", "374.24, 314.282, 57.9911, 0.4322", "374.355, 313.685, 58.4268, 0.483", "374.533, 313.329, 58.8, 0.4576", "374.546, 313.036, 59.7332, 0.2796", "374.596, 312.782, 60.3868, 0.2288", "374.762, 312.643, 60.48, 0.2542", "374.774, 312.198, 60.48, 0.4068", "374.927, 311.765, 60.7289, 0.5338", "375.232, 311.32, 60.5732, 0.483", "375.346, 310.748, 61.9732, 0.4576", "375.448, 310.634, 62.7822, 0.2288", "375.346, 310.469, 63.2489, 0.2288", "375.346, 310.138, 63.28, 0.2288", "375.27, 309.185, 63.28, 0.483", "375.118, 308.537, 63.84, 0.2796", "374.876, 308.422, 64.3689, 0.2288", "374.673, 308.385, 64.6178, 0.2288", "374.571, 308.308, 65.0222, 0.2288", "374.317, 308.308, 65.24, 0.2288", "374.101, 308.258, 65.0532, 0.2288", "373.974, 307.965, 64.68, 0.2288", "373.529, 307.838, 64.4, 0.2288", "372.639, 307.545, 64.68, 0.4322", "372.029, 307.622, 64.4, 0.5338", "371.444, 307.622, 64.1511, 0.6356", "370.618, 308.283, 64.6489, 0.5084", "370.389, 308.639, 64.4932, 0.4576" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "374.546, 322.319, 24.2967, 0.6864", "375.267, 322.726, 23.9221, 0.661", "376.297, 323.058, 23.1585, 0.661", "377.435, 323.067, 23.1409, 0.6356", "378.531, 323.074, 23.8753, 0.6356", "379.667, 323.116, 24.0783, 0.661", "380.76, 323.402, 24.0699, 0.6864", "381.716, 324.025, 24.0299, 0.6864", "382.666, 324.657, 23.8459, 0.661", "383.637, 325.174, 23.1344, 0.6356", "384.741, 325.444, 23.0622, 0.5848", "385.765, 325.827, 23.662, 0.5592", "386.677, 326.261, 24.817, 0.5338", "387.772, 326.388, 24.463, 0.5592", "388.804, 326.764, 23.7216, 0.6102", "389.826, 327.148, 22.9435, 0.661", "390.85, 327.581, 22.4059, 0.7372", "391.929, 327.857, 21.8386, 0.788" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "382.325, 274.928, 44.8, 0.6864", "382.034, 275.018, 46.4766, 0.6102", "381.422, 274.98, 46.5422, 0.661", "380.952, 274.522, 46.1068, 0.5848", "380.571, 274.458, 46.9157, 0.483", "380.33, 274.738, 47.6, 0.483", "379.744, 274.916, 47.6932, 0.6356", "379.045, 275.246, 47.5068, 0.7626", "378.333, 275.602, 47.88, 0.6864", "377.597, 276.111, 48.6889, 0.661", "377.139, 276.353, 48.44, 0.3304", "376.846, 276.632, 48.72, 0.3814", "376.948, 277.039, 49.6532, 0.5338", "376.846, 277.318, 50.68, 0.5848", "376.91, 277.751, 51.1778, 0.5084", "376.147, 277.878, 52.08, 0.2796", "376.033, 277.89, 52.6089, 0.2542", "375.944, 278.017, 52.92, 0.2288", "375.69, 278.106, 52.92, 0.2288", "375.346, 278.106, 52.92, 0.2288", "375.118, 278.106, 52.92, 0.2288", "374.317, 278.106, 52.92, 0.2288", "373.516, 278.106, 52.92, 0.2288", "372.842, 278.233, 52.92, 0.2288", "372.22, 278.335, 53.1068, 0.2288", "371.686, 278.221, 53.48, 0.2796", "371.178, 278.042, 53.76, 0.356", "370.542, 277.878, 53.76, 0.483", "369.487, 277.649, 54.5378, 0.6864", "369.054, 277.28, 54.1022, 0.305", "368.724, 277.064, 54.04, 0.5084", "368.254, 276.848, 54.88, 0.5592", "367.974, 276.95, 56.1868, 0.6102", "367.758, 276.848, 57.3068, 0.5084", "367.644, 276.848, 58.4268, 0.5338", "367.465, 276.53, 59.1732, 0.3814", "367.453, 276.162, 59.36, 0.5084" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "382.325, 274.928, 44.8, 0.6864", "382.604, 275.018, 46.3557, 0.7626", "383.138, 275.132, 45.6711, 0.5338", "383.558, 275.17, 47.0089, 0.8136", "383.926, 275.552, 46.9468, 0.3304", "384.282, 275.59, 46.2311, 0.4576", "384.879, 276.009, 46.2, 0.6102", "385.68, 275.818, 46.6668, 0.7372", "386.316, 275.717, 46.76, 0.6864", "387.015, 275.818, 46.76, 0.6356", "387.473, 275.818, 46.76, 0.5338", "387.93, 276.009, 47.6932, 0.661", "388.286, 276.276, 48.9689, 0.8898", "389.494, 276.314, 49.28, 0.7118", "390.206, 276.276, 49.5911, 0.6864", "390.651, 276.416, 50.4, 0.483", "391.134, 276.39, 50.12, 0.4068", "391.616, 276.301, 49.56, 0.305", "391.795, 276.174, 49.4668, 0.2542", "392.087, 276.162, 49.0932, 0.2796", "392.481, 276.162, 49.6222, 0.3814", "393.078, 276.047, 50.12, 0.6102", "393.638, 275.971, 50.5243, 0.5848", "393.79, 275.513, 50.3689, 0.483", "394.222, 275.361, 50.12, 0.4068", "394.451, 275.654, 50.5243, 0.4322", "394.54, 275.742, 51.2089, 0.3304", "394.871, 275.781, 51.52, 0.661", "395.595, 275.704, 50.96, 0.6864", "396.307, 276.06, 51.1468, 0.661", "396.854, 276.174, 50.9289, 0.5592", "397.12, 275.933, 51.4268, 0.4068", "397.388, 275.781, 51.52, 0.483", "398.074, 275.552, 50.96, 0.7118", "398.595, 275.17, 51.8311, 0.6102", "399.129, 275.018, 52.6711, 0.5592", "399.37, 275.018, 53.2, 0.2542", "399.676, 274.98, 53.2, 0.2288", "399.942, 274.801, 52.8889, 0.4068", "400.095, 274.369, 52.92, 0.4576", "400.768, 273.911, 53.1689, 0.5848", "401.201, 273.759, 52.64, 0.4322", "401.646, 273.797, 52.8578, 0.356", "401.658, 273.683, 53.8532, 0.5338", "401.875, 273.632, 54.88, 0.5084", "402.65, 273.302, 55.0668, 0.6864", "403.337, 273.035, 55.16, 0.6102", "404.188, 273.073, 55.1289, 0.7626", "404.874, 273.187, 56.2489, 0.7118", "405.662, 273.302, 56.28, 0.6356", "406.324, 273.403, 56.9332, 0.661", "406.806, 273.721, 57.2132, 0.5338", "407.264, 273.988, 57.4, 0.6102", "407.632, 274.306, 58.24, 0.6102", "407.823, 275.018, 57.9289, 0.8898", "408.421, 275.729, 57.5868, 0.7118", "408.866, 276.353, 58.0532, 0.5848", "409.171, 276.886, 58.52, 0.6356", "409.59, 277.268, 58.8, 0.483", "410.022, 277.42, 59.0489, 0.4576", "410.48, 277.636, 59.64, 0.5084", "410.912, 278.005, 59.64, 0.4322", "411.154, 278.437, 59.6089, 0.3304", "411.573, 278.602, 58.8, 0.305", "411.776, 278.857, 58.8, 0.3304", "412.107, 279.213, 58.8, 0.356", "412.183, 279.479, 58.8, 0.305", "412.183, 279.822, 58.8, 0.2796", "412.387, 280.191, 58.8, 0.3304", "412.743, 280.521, 59.08, 0.5338", "412.857, 281.576, 59.2978, 0.6102", "413.061, 282.034, 59.64, 0.6102", "413.442, 282.466, 60.1689, 0.6864", "413.823, 283.102, 59.64, 0.5592", "414.205, 283.598, 59.7332, 0.6102", "414.433, 284.182, 60.2622, 0.5592", "414.891, 284.436, 60.76, 0.5338", "415.145, 284.831, 60.3868, 0.483", "415.272, 285.199, 60.2, 0.483", "415.463, 285.873, 60.0443, 0.839", "415.882, 286.305, 60.76, 0.661", "416.391, 286.495, 60.5111, 0.483", "416.645, 286.776, 60.1378, 0.4322", "416.657, 287.131, 60.2, 0.661", "416.975, 287.385, 60.76, 0.4576", "417.471, 287.92, 61.32, 0.4576", "417.916, 288.275, 61.32, 0.4322", "418.488, 288.504, 61.32, 0.4068", "418.933, 288.631, 61.04, 0.483", "419.301, 289.165, 61.0711, 0.661", "419.734, 289.432, 61.32, 0.6356", "420.306, 289.584, 61.1332, 0.6356", "420.84, 289.775, 61.1332, 0.6864", "421.577, 289.89, 62.4089, 0.7372", "422.098, 290.054, 63.2489, 0.661", "422.708, 290.347, 63.28, 0.6102", "423.255, 290.69, 63.9022, 0.5338", "423.673, 290.983, 64.12, 0.5084", "424.335, 291.237, 64.12, 0.4322", "424.653, 291.491, 63.84, 0.2542", "424.818, 291.67, 63.84, 0.2288", "425.073, 291.72, 63.9332, 0.2288", "425.237, 291.72, 64.0889, 0.2288", "425.555, 291.733, 64.12, 0.2288", "425.797, 291.834, 64.12, 0.2288", "425.949, 292.025, 64.12, 0.2288", "426.076, 292.242, 64.12, 0.2542", "426.725, 292.623, 64.12, 0.305", "427.08, 292.826, 64.3689, 0.2796", "427.411, 292.978, 63.8711, 0.4068", "427.779, 293.157, 63.8711, 0.5084", "428.428, 293.627, 64.2132, 0.6102", "428.86, 293.919, 64.4, 0.5592", "429.343, 294.199, 64.3068, 0.5338", "429.903, 294.58, 64.1511, 0.661", "430.067, 295.229, 64.4, 0.6864", "430.5, 295.635, 63.6532, 0.305", "430.729, 295.838, 63.8089, 0.2542", "430.945, 296.144, 64.2132, 0.3814", "431.059, 296.436, 64.4622, 0.483", "431.288, 296.525, 63.0, 0.6102", "431.835, 296.754, 63.0622, 0.3814", "432.165, 296.982, 63.6532, 0.3304", "432.254, 297.173, 64.3689, 0.4322", "432.546, 297.211, 64.4, 0.305", "432.763, 297.288, 64.2757, 0.2288", "432.775, 297.554, 63.84, 0.305", "433.029, 297.898, 63.6222, 0.356", "433.081, 298.317, 63.28, 0.3814", "433.093, 298.736, 63.5289, 0.305", "433.245, 298.8, 63.56, 0.2288", "433.449, 298.825, 63.56, 0.2288", "433.576, 298.927, 63.56, 0.2288", "433.728, 299.118, 63.56, 0.2288", "433.907, 299.206, 63.7468, 0.2288", "433.932, 299.487, 63.84, 0.2288", "434.059, 299.614, 63.6222, 0.2288", "434.262, 299.83, 63.3111, 0.2288", "434.504, 299.842, 63.5289, 0.2288", "434.797, 299.855, 63.9022, 0.2288", "434.949, 299.957, 64.12, 0.2288", "435.14, 300.109, 64.12, 0.2288", "435.178, 300.377, 64.0268, 0.2288", "435.521, 300.529, 63.84, 0.2542", "435.889, 300.567, 63.2489, 0.4576", "436.322, 300.897, 62.9378, 0.6864", "436.843, 301.253, 63.5289, 0.483", "437.021, 301.698, 63.1868, 0.4068", "437.237, 301.902, 63.28, 0.483", "437.63, 302.309, 63.84, 0.7118", "438.343, 302.474, 63.9332, 0.661", "438.724, 302.855, 63.6532, 0.4322", "438.915, 303.083, 63.84, 0.4322", "439.144, 303.401, 64.4622, 0.4322", "439.373, 303.553, 64.9289, 0.305", "439.41, 303.732, 64.96, 0.2288", "439.741, 304.088, 64.68, 0.4068", "439.982, 304.177, 64.7111, 0.3814", "440.211, 304.418, 65.52, 0.4322", "440.44, 304.914, 65.9868, 0.4576", "440.554, 305.473, 65.8622, 0.4322", "440.745, 305.779, 65.9243, 0.3814", "440.999, 306.07, 66.1732, 0.305", "441.164, 306.592, 66.2668, 0.2542", "441.241, 306.808, 66.3289, 0.2288", "441.355, 306.948, 66.1111, 0.2542", "441.724, 307.126, 65.8311, 0.4068", "442.016, 307.164, 66.4222, 0.483", "442.461, 306.948, 66.7643, 0.5084", "442.499, 306.986, 67.9157, 0.4576", "442.651, 307.342, 68.3511, 0.4068", "443.033, 307.393, 68.7868, 0.2542", "443.377, 307.393, 68.6932, 0.2542", "443.758, 307.584, 68.7868, 0.356", "444.139, 307.813, 68.04, 0.4068", "444.38, 308.029, 68.04, 0.356", "444.825, 308.385, 68.04, 0.356", "445.27, 308.728, 68.0711, 0.4068", "445.69, 309.007, 68.32, 0.4322", "446.058, 309.439, 68.32, 0.4576", "446.414, 309.77, 68.04, 0.4322", "446.745, 310.126, 68.04, 0.483", "446.999, 310.673, 67.48, 0.4576", "447.304, 310.71, 67.48, 0.2288", "447.647, 310.71, 67.48, 0.3814", "448.028, 310.914, 67.7289, 0.483", "448.194, 311.168, 68.32, 0.356", "448.105, 311.295, 68.8489, 0.2288", "448.105, 311.461, 69.0043, 0.2288", "448.181, 311.561, 69.4089, 0.2288", "448.257, 311.69, 69.4089, 0.2288", "448.448, 311.753, 69.1911, 0.2288", "449.236, 311.981, 69.16, 0.2288", "449.44, 312.108, 69.1289, 0.2288", "449.592, 312.21, 68.9111, 0.2288", "449.897, 312.464, 69.16, 0.2288", "449.935, 312.998, 69.16, 0.2288", "449.935, 313.342, 69.16, 0.2288", "449.935, 313.799, 69.16, 0.2288", "450.062, 314.015, 69.16, 0.2288", "450.278, 314.142, 69.16, 0.2288", "450.507, 314.257, 69.16, 0.2288", "450.736, 314.257, 69.16, 0.2288", "451.524, 314.269, 69.16, 0.2288", "452.109, 314.486, 69.16, 0.2288", "452.452, 314.486, 69.16, 0.2288", "452.757, 314.523, 69.16, 0.2288", "453.011, 314.613, 69.16, 0.2288", "453.215, 314.752, 69.16, 0.2288", "453.596, 315.286, 69.44, 0.2288", "453.825, 315.388, 69.4711, 0.2288", "453.952, 315.515, 69.6889, 0.2288", "454.118, 315.68, 69.72, 0.2288", "454.168, 315.973, 69.72, 0.2288", "454.168, 316.202, 69.72, 0.2288", "454.168, 316.545, 69.72, 0.2288", "454.218, 316.838, 69.72, 0.2288", "454.473, 316.926, 69.72, 0.2288", "454.69, 317.053, 69.72, 0.2288", "455.312, 317.346, 70.0, 0.2288", "456.113, 317.346, 70.0, 0.2288", "456.876, 317.383, 70.0, 0.2288", "457.371, 317.689, 70.0, 0.2288", "457.714, 318.146, 70.0, 0.2288", "457.714, 318.49, 70.0, 0.2288", "457.841, 318.706, 70.0, 0.2288", "458.172, 318.718, 70.0, 0.2288", "458.388, 318.845, 70.0, 0.2288", "458.401, 319.049, 69.9689, 0.2288", "458.694, 319.341, 69.44, 0.2288", "459.011, 319.825, 69.44, 0.2288", "459.176, 320.002, 69.44, 0.2288", "459.316, 320.206, 69.44, 0.2542", "459.583, 320.434, 69.9068, 0.305", "459.85, 320.651, 70.1243, 0.356", "460.181, 320.815, 70.5289, 0.5848", "460.587, 321.108, 70.56, 0.6864", "460.994, 321.514, 71.3689, 0.6102", "461.668, 321.693, 70.9957, 0.483", "461.845, 322.215, 70.3732, 0.661", "462.367, 322.494, 70.6532, 0.5084", "462.862, 322.379, 70.84, 0.4322" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "323.79, 248.743, 51.24, 0.483", "328.178, 243.821, 48.0281, 0.2542", "329.293, 242.464, 48.0281, 0.2288", "329.491, 241.187, 48.0281, 0.2288", "330.292, 233.979, 52.831, 0.2288", "329.064, 230.757, 52.831, 0.2288", "328.378, 228.286, 52.831, 0.2542", "328.966, 222.495, 52.831, 0.305" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "323.79, 248.743, 51.24, 0.483", "324.095, 248.439, 51.9868, 0.4322", "324.515, 248.21, 52.08, 0.4322", "324.846, 248.121, 51.8932, 0.356", "325.048, 247.828, 52.36, 0.2796", "325.125, 247.295, 53.1068, 0.2542", "324.832, 246.939, 53.48, 0.356", "324.54, 246.43, 53.48, 0.2542", "324.274, 246.087, 53.6668, 0.2542", "323.829, 245.998, 53.76, 0.356", "323.332, 245.731, 54.4132, 0.3814", "323.294, 245.35, 54.7868, 0.305", "323.294, 244.587, 54.88, 0.2542", "323.294, 244.015, 55.44, 0.2288", "323.167, 243.558, 55.9689, 0.2288", "323.066, 242.986, 56.28, 0.2288", "322.722, 242.528, 56.28, 0.2288", "322.506, 242.401, 56.28, 0.2288", "322.341, 241.879, 56.28, 0.2288", "321.922, 241.727, 56.28, 0.2288", "321.591, 241.257, 56.28, 0.2288", "321.121, 240.926, 56.28, 0.2288", "320.879, 240.825, 56.28, 0.2288", "320.384, 240.633, 56.28, 0.2288", "320.206, 240.24, 57.12, 0.2288", "320.206, 240.049, 57.4932, 0.2288", "320.206, 239.897, 58.24, 0.2288", "320.193, 239.757, 58.7068, 0.2288", "319.977, 239.401, 58.9868, 0.305", "319.964, 238.994, 59.36, 0.3814", "319.748, 239.083, 60.1689, 0.3814", "319.494, 238.664, 60.48, 0.5848", "319.024, 238.104, 59.92, 0.6102", "318.617, 237.711, 61.04, 0.4576", "318.375, 236.731, 61.1332, 0.5592", "318.286, 236.315, 61.903, 0.483", "311.987, 227.56, 65.6387, 0.356", "311.193, 225.079, 65.6387, 0.2796", "311.369, 219.188, 68.8405, 0.2288", "310.858, 216.729, 68.8405, 0.2288", "309.443, 215.188, 68.8405, 0.2796", "303.309, 212.829, 78.9799, 0.356" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "366.223, 333.07, 6.3417, 0.5848", "365.61, 332.777, 3.92, 0.5338" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "366.223, 333.07, 6.3417, 0.5848", "366.741, 333.578, 5.4132, 0.6356", "367.008, 333.883, 5.4132, 0.483", "367.326, 334.2, 5.8178, 0.4576", "367.389, 334.353, 6.6889, 0.4576", "367.707, 334.493, 5.9732, 0.4068", "368.152, 334.175, 6.44, 0.6102", "368.597, 334.162, 6.44, 0.5338", "369.105, 334.162, 5.4443, 0.5848", "369.716, 333.908, 5.6, 0.6864", "370.3, 333.921, 5.88, 0.6102", "370.847, 333.819, 6.2532, 0.4576", "371.114, 333.641, 6.8443, 0.4576", "371.495, 333.514, 7.84, 0.5084", "371.914, 333.934, 8.4, 0.4322" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "322.852, 274.933, 17.3306, 0.6102", "321.975, 275.464, 17.3611, 0.5084", "320.836, 275.381, 17.3701, 0.7118", "319.764, 275.004, 17.4244, 0.839", "318.718, 274.605, 17.8024, 0.8644", "316.855, 274.41, 17.2119, 0.8136", "315.84, 273.978, 16.5668, 0.788", "314.758, 273.685, 16.2834, 0.7372", "313.638, 273.814, 16.5494, 0.7118", "312.858, 274.225, 18.1009, 0.6356" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "322.852, 274.933, 17.3306, 0.6102", "321.514, 274.56, 16.928, 0.5848", "320.805, 273.74, 16.2058, 0.5592", "319.896, 273.049, 16.0345, 0.5592", "318.976, 272.445, 15.3474, 0.5848", "318.079, 271.759, 14.9153, 0.6356", "317.099, 271.726, 14.1677, 0.7626", "316.0, 271.941, 14.2856, 0.8644", "314.947, 272.363, 13.9919, 0.8898", "313.844, 272.556, 13.9482, 0.8136", "312.871, 271.996, 13.748, 0.7118", "311.973, 271.366, 13.0116, 0.6864", "311.211, 270.529, 12.6924, 0.7372", "310.313, 269.516, 12.8797, 0.788", "309.467, 268.808, 12.8789, 0.7372", "308.361, 269.029, 12.8727, 0.661", "307.22, 269.097, 12.829, 0.6102", "306.137, 269.26, 12.3581, 0.6356", "305.456, 268.478, 11.7516, 0.6102", "305.575, 267.369, 11.7071, 0.6356", "305.557, 266.245, 11.4064, 0.661", "305.07, 265.278, 10.6946, 0.788", "304.312, 264.426, 10.4966, 0.839", "303.678, 263.516, 9.9548, 0.788", "303.052, 262.574, 9.8851, 0.661", "302.579, 261.584, 10.5739, 0.5338", "301.741, 260.831, 10.64, 0.483", "300.73, 260.303, 10.64, 0.4576", "299.734, 259.746, 10.64, 0.4576", "298.873, 258.995, 10.64, 0.5084", "298.218, 258.065, 10.64, 0.5848", "297.594, 257.106, 10.64, 0.7118", "297.195, 256.039, 10.64, 0.7626", "296.711, 255.005, 10.6397, 0.7626", "296.299, 253.939, 10.6386, 0.661", "295.618, 253.025, 10.6336, 0.5848", "294.866, 252.164, 10.6128, 0.5338", "294.342, 251.15, 10.4835, 0.5084", "293.978, 250.113, 9.8143, 0.4576", "293.376, 249.173, 9.7885, 0.4322", "292.805, 248.227, 10.0691, 0.4576", "292.151, 247.318, 9.5819, 0.483", "291.375, 246.48, 9.5396, 0.4576", "290.671, 245.584, 9.6188, 0.3814", "291.11, 244.827, 10.2864, 0.3814", "290.804, 245.059, 9.6709, 0.4322" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "337.348, 330.734, 11.7631, 0.5592", "337.251, 331.366, 11.8843, 0.6864", "336.921, 331.81, 12.1332, 0.483", "336.641, 332.294, 11.76, 0.5084", "336.196, 332.561, 10.9822, 0.5592", "335.853, 332.904, 9.5822, 0.7626", "335.65, 333.578, 8.9911, 0.5848", "335.217, 333.628, 8.9911, 0.356", "334.963, 334.086, 9.1468, 0.4322", "334.849, 334.277, 9.52, 0.5084", "334.213, 334.468, 9.4889, 0.5848", "333.807, 334.391, 8.1511, 0.483", "333.133, 333.934, 8.68, 0.6864", "332.434, 333.489, 8.4, 0.5848", "331.862, 332.879, 8.4932, 0.4576", "331.569, 332.332, 8.4932, 0.4322", "331.455, 331.683, 8.68, 0.5338", "331.531, 331.074, 8.96, 0.483", "331.404, 330.591, 8.2132, 0.3814", "330.997, 330.044, 7.4668, 0.4576", "330.616, 329.917, 5.8489, 0.6356", "330.387, 329.32, 5.7868, 0.5084", "330.082, 328.938, 6.16, 0.4576", "329.815, 328.786, 7.28, 0.5084", "329.828, 328.557, 6.4711, 0.2288", "330.094, 328.557, 5.7243, 0.4576", "330.464, 328.442, 4.9468, 0.5084", "330.768, 327.883, 4.2622, 0.4576", "330.959, 327.527, 3.92, 0.2542", "330.959, 327.146, 4.3868, 0.2288", "331.124, 326.955, 5.4757, 0.3814", "331.417, 326.955, 5.6, 0.5084" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "337.348, 330.734, 11.7631, 0.5592", "338.155, 330.991, 11.5366, 0.5592", "339.015, 331.383, 10.0509, 0.5338", "339.71, 331.779, 8.0959, 0.4576", "340.499, 331.838, 6.3997, 0.3814", "341.367, 331.13, 5.9419, 0.305", "342.287, 330.567, 5.234, 0.2542", "343.203, 330.117, 6.0668, 0.2288", "344.123, 330.362, 7.5947, 0.2288", "345.151, 330.385, 8.7926, 0.2288", "346.185, 330.371, 8.0926, 0.2542", "346.737, 330.428, 5.8061, 0.2796", "347.055, 331.3, 6.8704, 0.356", "346.913, 332.274, 8.0604, 0.3814", "346.471, 333.15, 6.8785, 0.4068", "345.539, 333.643, 6.4613, 0.356", "345.022, 334.25, 8.2121, 0.3304", "344.492, 335.059, 9.4486, 0.3304", "344.479, 335.89, 11.1835, 0.3814", "343.832, 336.438, 13.0068, 0.4576", "343.359, 337.274, 14.1075, 0.5848", "342.971, 338.166, 15.12, 0.6864" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "360.791, 326.725, 22.7746, 0.966", "360.111, 327.753, 21.0521, 0.6864", "359.376, 328.613, 20.72, 0.6864", "358.548, 329.402, 20.7203, 0.6356", "357.64, 330.091, 20.7214, 0.6356", "356.793, 330.857, 20.7267, 0.6356", "356.278, 331.857, 20.7581, 0.6864", "356.22, 332.996, 20.9647, 0.788", "356.119, 334.076, 21.8028, 0.8644", "355.807, 335.139, 22.3731, 0.839", "355.731, 336.184, 23.4833, 0.7626", "355.459, 337.248, 24.05, 0.661", "355.104, 338.33, 23.8924, 0.6864", "354.633, 339.325, 23.2095, 0.6864", "354.126, 340.337, 22.9362, 0.7372", "353.647, 341.372, 22.8256, 0.7372", "353.418, 342.451, 22.1813, 0.788", "353.113, 343.536, 22.076, 0.8136", "353.001, 344.622, 22.8497, 0.839", "352.767, 345.727, 22.9645, 0.839", "352.231, 346.735, 22.9849, 0.839", "351.626, 347.699, 23.0868, 0.839", "351.166, 348.703, 23.6863, 0.8136", "350.69, 349.717, 24.08, 0.7372", "350.098, 350.693, 24.08, 0.7118", "349.58, 351.709, 24.08, 0.7118", "349.061, 352.724, 24.0803, 0.8136", "348.537, 353.737, 24.0814, 0.839", "347.989, 354.737, 24.0876, 0.8644", "347.534, 355.773, 24.1242, 0.839", "347.277, 356.875, 24.3351, 0.839", "347.106, 357.952, 25.1028, 0.839", "347.197, 359.089, 25.1835, 0.8136", "347.577, 360.162, 25.0902, 0.788", "347.614, 361.402, 25.2843, 0.7626", "347.877, 362.481, 25.7684, 0.7626", "347.755, 363.565, 26.36, 0.7626", "346.939, 364.332, 26.5429, 0.788", "345.893, 364.561, 27.4296, 0.8136", "344.907, 364.921, 28.3741, 0.8136", "344.065, 365.686, 28.5603, 0.7626", "343.277, 366.515, 28.5614, 0.7118", "342.578, 367.413, 28.5662, 0.661", "342.12, 368.456, 28.5953, 0.6356", "341.916, 369.575, 28.7899, 0.6356", "341.614, 370.579, 29.7909, 0.6864", "341.497, 371.628, 30.7535, 0.7372", "341.129, 372.705, 30.8, 0.7626", "340.754, 373.783, 30.8, 0.7626", "340.339, 374.844, 30.8, 0.7626", "339.749, 375.819, 30.8, 0.7118", "339.318, 376.872, 30.8, 0.661", "339.036, 377.972, 30.8, 0.6356", "338.468, 378.96, 30.8, 0.7372", "337.712, 379.817, 30.8, 0.8136", "336.924, 380.647, 30.8, 0.788", "336.219, 381.541, 30.8, 0.6356", "335.769, 382.588, 30.8, 0.5592", "335.134, 383.537, 30.8, 0.6102", "334.461, 384.461, 30.8, 0.6864", "333.763, 385.362, 30.8, 0.6864", "333.085, 386.281, 30.8, 0.6102", "332.348, 387.155, 30.8, 0.5848", "331.939, 388.205, 30.8006, 0.5592", "331.632, 389.297, 30.8036, 0.5592", "331.282, 390.383, 30.823, 0.5338", "330.925, 391.468, 30.9383, 0.5338", "330.435, 392.46, 31.5596, 0.5592", "329.783, 393.384, 31.92, 0.5848", "329.171, 394.348, 31.9208, 0.6102", "328.58, 395.324, 31.9242, 0.6102", "328.053, 396.336, 31.943, 0.6102", "327.497, 397.332, 32.0438, 0.6102", "326.904, 398.27, 32.5702, 0.6102", "326.414, 399.279, 33.0414, 0.6356", "325.996, 400.336, 33.0487, 0.7118", "325.663, 401.427, 33.0929, 0.788", "325.581, 402.553, 33.4023, 0.8136", "325.574, 403.654, 34.1113, 0.788", "325.532, 404.795, 34.1597, 0.7626", "325.244, 405.887, 34.158, 0.7626", "324.544, 406.788, 34.1508, 0.7372", "323.895, 407.725, 34.1155, 0.7118", "323.188, 408.622, 33.9634, 0.7118", "322.614, 409.561, 33.3192, 0.7626", "322.138, 410.59, 33.1643, 0.8136", "321.909, 411.661, 33.8041, 0.8644", "321.844, 412.785, 34.2636, 0.9152", "321.579, 413.857, 34.825, 0.9914", "321.789, 414.944, 35.1968, 0.9914", "321.914, 416.048, 34.6996, 0.9406", "321.872, 417.163, 34.1754, 0.8644", "321.576, 418.25, 34.2689, 0.839", "320.868, 419.087, 34.8645, 0.8644", "320.109, 419.921, 35.28, 0.9152", "319.51, 420.886, 35.28, 1.0168", "319.184, 421.971, 35.28, 1.0932", "319.11, 423.112, 35.28, 1.144", "318.812, 424.208, 35.28, 1.144", "318.652, 425.338, 35.28, 1.144", "318.321, 426.424, 35.28, 1.1694", "317.886, 427.476, 35.28, 1.1694", "317.205, 428.394, 35.28, 1.1694", "316.822, 429.455, 35.2806, 1.144", "316.491, 430.54, 35.2839, 1.1948", "316.055, 431.592, 35.3038, 1.2202", "315.37, 432.505, 35.3931, 1.2202", "314.959, 433.523, 35.947, 1.1694", "314.638, 434.596, 36.4, 1.144", "314.593, 435.738, 36.4, 1.144", "314.555, 436.881, 36.4, 1.0932", "314.296, 437.98, 36.4006, 1.0168", "313.727, 438.969, 36.4025, 0.9406", "312.993, 439.845, 36.4109, 0.9152", "312.39, 440.802, 36.4543, 0.966", "312.263, 441.922, 36.7772, 1.0168", "312.005, 442.98, 37.464, 1.1186", "311.446, 443.973, 37.5197, 1.1948", "311.094, 445.057, 37.5178, 1.1694", "310.948, 446.186, 37.5052, 1.0678", "311.009, 447.327, 37.4125, 0.9406", "309.661, 448.662, 38.2245, 1.0932", "308.994, 449.574, 38.635, 1.0932", "308.446, 450.56, 38.6403, 0.9914", "308.278, 451.691, 38.6414, 0.8898", "307.731, 452.682, 38.6478, 0.8644", "307.156, 453.668, 38.68, 0.7626", "306.611, 454.668, 38.8604, 0.6864", "306.145, 455.62, 39.7538, 0.6102", "305.94, 456.637, 40.805, 0.5848", "305.618, 457.73, 40.88, 0.5592", "305.256, 458.801, 40.88, 0.5338", "304.644, 459.761, 40.88, 0.5848", "303.897, 460.627, 40.88, 0.5848", "303.35, 461.617, 40.88, 0.5848", "303.001, 462.702, 40.88, 0.5338", "302.801, 463.826, 40.88, 0.5848", "302.498, 464.923, 40.88, 0.6356", "302.474, 466.066, 40.88, 0.7372", "302.326, 466.947, 40.878, 0.788", "301.758, 467.919, 40.8702, 0.8644", "300.987, 468.765, 40.8388, 0.8136", "300.329, 469.686, 40.6904, 0.7626", "300.16, 470.764, 39.9742, 0.6356", "300.016, 471.887, 39.9288, 0.6102", "299.648, 472.924, 40.6137, 0.5848", "299.222, 473.972, 40.8806, 0.6356", "298.729, 475.0, 40.8828, 0.661", "298.28, 476.046, 40.8982, 0.7118", "297.779, 477.066, 40.9836, 0.7372", "297.382, 478.095, 41.5036, 0.788", "297.028, 479.144, 42.0, 0.8136", "296.418, 480.106, 42.0, 0.839", "295.663, 480.965, 42.0, 0.788", "295.048, 481.92, 42.0, 0.7118", "294.66, 482.988, 42.0, 0.661", "294.316, 484.066, 42.0, 0.7118", "293.764, 485.064, 42.0, 0.8136", "293.401, 486.145, 42.0, 0.8644", "293.044, 487.228, 42.0, 0.839", "292.68, 488.311, 42.0, 0.7626", "292.136, 489.315, 42.0, 0.7118", "291.396, 490.186, 42.0, 0.661", "290.589, 490.996, 42.0, 0.6356", "289.787, 491.811, 42.0006, 0.6102", "289.004, 492.645, 42.0022, 0.661", "288.346, 493.572, 42.0104, 0.7372", "287.937, 494.635, 42.0588, 0.8136", "287.437, 495.649, 42.3377, 0.839", "286.951, 496.636, 43.0338, 0.8136", "286.45, 497.658, 43.12, 0.8136", "285.948, 498.682, 43.12, 0.788", "285.442, 499.705, 43.12, 0.7372", "284.903, 500.711, 43.1197, 0.5848", "284.302, 501.681, 43.118, 0.483", "283.999, 502.781, 43.1066, 0.4576", "283.397, 503.741, 43.0494, 0.5338", "282.774, 504.674, 42.7132, 0.5592", "282.273, 505.681, 43.0128, 0.6102", "281.512, 506.532, 43.1511, 0.6356", "280.846, 507.453, 43.2841, 0.6864", "280.204, 508.314, 44.1171, 0.661", "279.622, 509.236, 44.8683, 0.661", "279.318, 510.317, 45.1542, 0.661", "279.384, 511.332, 44.1538, 0.6356", "279.139, 512.404, 43.4316, 0.5592", "279.082, 513.506, 43.8911, 0.483", "278.878, 514.603, 44.2627, 0.5338", "278.551, 515.687, 44.3892, 0.6356", "277.865, 516.53, 45.1139, 0.7372", "277.062, 517.334, 45.36, 0.7626", "276.255, 518.145, 45.36, 0.788", "275.458, 518.964, 45.36, 0.8136", "274.69, 519.813, 45.36, 0.8136", "274.05, 520.759, 45.3603, 0.788", "273.279, 521.603, 45.3617, 0.7626", "272.521, 522.46, 45.3678, 0.788", "271.967, 523.458, 45.4009, 0.788", "271.62, 524.538, 45.6565, 0.8136", "271.353, 525.433, 47.1282, 0.8136", "271.328, 526.548, 47.5773, 0.839", "271.17, 527.673, 47.4499, 0.839", "270.658, 528.655, 46.8426, 0.8136", "269.957, 529.55, 46.6511, 0.8136", "269.332, 530.459, 47.2632, 0.8136", "268.707, 531.401, 47.6176, 0.8644", "268.247, 532.443, 47.7047, 0.839", "268.111, 533.539, 48.2961, 0.8136", "267.869, 534.625, 48.7208, 0.7626", "267.201, 535.551, 48.7239, 0.839", "266.692, 536.56, 48.7418, 0.9152", "266.253, 537.612, 48.8482, 1.0168", "265.743, 538.594, 49.4379, 1.0168", "265.127, 539.54, 49.84, 0.9406", "264.754, 540.617, 49.84, 0.8136", "264.444, 541.715, 49.84, 0.7372", "264.127, 542.803, 49.84, 0.8136", "263.716, 543.867, 49.84, 0.8898", "263.097, 544.827, 49.8406, 0.9152", "262.491, 545.795, 49.8425, 0.839", "262.16, 546.878, 49.8548, 0.788", "261.899, 547.977, 49.9408, 0.7372", "261.316, 548.932, 50.3742, 0.7626", "260.884, 549.955, 50.9362, 0.7626", "260.705, 551.084, 50.946, 0.7626", "260.185, 552.082, 50.8822, 0.661", "259.508, 552.986, 50.5854, 0.6356", "259.034, 553.992, 50.4445, 0.661", "258.647, 555.041, 50.9496, 0.788", "258.133, 556.058, 50.9443, 0.8898", "257.572, 557.05, 50.8729, 0.966", "257.122, 558.067, 50.442, 0.9914", "256.754, 559.102, 49.863, 0.966", "256.058, 560.01, 49.84, 0.966", "255.652, 561.069, 49.84, 0.9406", "255.277, 562.147, 49.84, 0.9152", "254.899, 563.224, 49.84, 0.8644", "254.549, 564.31, 49.84, 0.8644", "254.311, 565.428, 49.84, 0.9152", "253.898, 566.488, 49.8403, 0.9406", "253.443, 567.533, 49.8411, 0.8644", "252.946, 568.555, 49.8462, 0.7626", "252.503, 569.598, 49.8744, 0.6864", "252.135, 570.675, 50.0604, 0.6864", "251.817, 571.652, 51.1266, 0.661", "251.19, 572.804, 52.7066, 0.6864", "250.809, 573.856, 52.9875, 0.7372", "250.431, 574.883, 52.26, 0.8644", "249.889, 575.88, 52.08, 0.9406", "249.321, 576.868, 52.08, 1.0424", "248.782, 577.865, 52.08, 1.0932", "248.038, 578.734, 52.08, 1.1186", "247.527, 579.739, 52.0803, 1.0424", "247.162, 580.81, 52.0825, 0.9152", "246.471, 581.719, 52.0915, 0.8136", "246.063, 582.776, 52.145, 0.8136", "245.724, 583.846, 52.5246, 0.9152", "245.481, 584.919, 53.1667, 0.966", "245.238, 586.031, 53.2, 0.9406", "245.02, 587.143, 53.2003, 0.8136", "244.62, 588.215, 53.2014, 0.7118", "243.958, 589.142, 53.2064, 0.661", "243.221, 590.017, 53.2297, 0.6864", "242.838, 591.083, 53.3828, 0.788", "242.552, 592.131, 54.1548, 0.839", "242.519, 593.219, 54.9811, 0.839", "242.463, 594.34, 55.44, 0.788", "242.122, 595.413, 55.44, 0.7626", "241.376, 596.277, 55.44, 0.8136", "240.594, 597.111, 55.44, 0.8898", "239.93, 598.032, 55.4392, 0.9914", "239.76, 599.154, 55.4347, 1.0424", "239.612, 600.282, 55.4022, 1.0424", "239.319, 601.379, 55.2157, 0.9914", "239.197, 602.468, 54.4802, 0.9152", "238.88, 603.555, 54.6179, 0.839", "238.783, 604.568, 55.8253, 0.7626", "238.354, 605.541, 56.5281, 0.7372", "237.478, 606.27, 56.376, 0.7626", "237.003, 607.237, 55.6847, 0.8644", "236.667, 608.308, 55.3406, 0.9406", "236.165, 609.301, 54.8671, 0.9914", "236.076, 610.406, 55.2339, 0.9406", "235.794, 611.469, 55.8488, 0.839", "235.378, 612.315, 57.3745, 0.7118", "234.811, 613.287, 57.6775, 0.6102", "234.078, 614.164, 57.6694, 0.5592", "233.46, 615.112, 57.6282, 0.5848", "233.28, 616.228, 57.3423, 0.6864", "232.865, 617.235, 56.6493, 0.8644", "232.464, 618.287, 56.6101, 1.0424", "232.367, 619.418, 56.8859, 1.1948", "231.954, 620.422, 57.5988, 1.2456", "231.248, 622.566, 57.8071, 1.1948", "230.955, 624.761, 58.1714, 1.144", "230.502, 625.784, 57.6808, 1.0424", "229.896, 626.752, 57.6839, 0.9914", "229.651, 627.862, 57.7072, 0.966", "229.32, 628.94, 57.8421, 0.966", "228.817, 629.904, 58.5514, 0.9152", "228.6, 630.934, 59.5818, 0.839", "228.141, 631.971, 59.8153, 0.788", "227.822, 633.028, 59.2631, 0.7372", "227.468, 634.081, 58.8073, 0.6864", "226.889, 635.063, 58.8392, 0.6356", "226.313, 636.045, 58.9996, 0.6356", "225.899, 637.06, 59.7066, 0.7118", "225.278, 638.004, 59.92, 0.839", "224.533, 638.871, 59.92, 0.8898", "224.057, 639.901, 59.9206, 0.8644", "223.451, 640.867, 59.9228, 0.788", "222.892, 641.864, 59.936, 0.788", "222.32, 642.849, 60.0068, 0.788", "221.807, 643.842, 60.4134, 0.7118", "221.227, 644.782, 60.9801, 0.6102", "220.467, 645.637, 61.0201, 0.5592", "219.852, 646.593, 60.9319, 0.6102", "219.276, 647.511, 60.2706, 0.661", "218.791, 648.527, 59.9726, 0.6864", "218.092, 649.428, 60.1535, 0.7118", "217.625, 650.416, 60.8919, 0.7626", "216.917, 651.3, 61.04, 0.8644", "216.089, 652.064, 61.04, 0.9406", "215.673, 653.123, 61.04, 1.0424", "215.173, 654.148, 61.0403, 1.0424", "214.729, 655.198, 61.042, 1.0678", "214.53, 656.323, 61.052, 1.0424", "214.04, 657.318, 61.126, 1.0932", "213.325, 658.143, 61.6325, 1.0932", "213.157, 659.244, 62.1527, 1.0168", "212.771, 660.309, 62.1141, 0.9152", "212.21, 661.297, 61.9072, 0.8644", "211.427, 662.055, 61.1419, 0.9152", "210.9, 663.043, 61.0604, 0.9914", "210.564, 664.133, 61.1674, 0.9914", "210.487, 665.229, 61.8248, 0.9406", "210.433, 666.358, 62.1639, 0.8898", "210.102, 667.438, 62.1841, 0.839", "209.534, 668.424, 62.2924, 0.8136", "208.999, 669.4, 62.7981, 0.6864", "208.29, 670.217, 62.148, 0.6864", "207.747, 671.155, 61.4516, 0.7118", "207.391, 672.158, 61.7663, 0.8898", "206.903, 673.166, 62.1617, 1.0168", "206.651, 674.281, 62.1709, 1.144", "206.045, 675.247, 62.2188, 1.0678", "205.568, 676.272, 62.5321, 0.8898", "205.462, 677.019, 64.4, 0.6356", "205.234, 677.248, 62.72, 0.5592", "204.853, 677.706, 62.5332, 0.7626", "204.509, 678.735, 63.0932, 0.6864", "203.759, 679.422, 62.4089, 0.8898", "203.555, 680.375, 61.6, 0.839", "202.755, 680.947, 62.16, 0.8136", "202.374, 681.786, 63.1868, 0.6102", "201.903, 682.612, 63.0, 0.6864", "201.687, 683.235, 63.4668, 0.6864", "201.764, 684.189, 63.0, 0.7372", "201.675, 684.977, 62.8132, 0.788", "201.585, 685.815, 63.84, 0.5084", "201.675, 686.311, 64.0268, 0.305", "201.458, 686.731, 64.0889, 0.305", "201.242, 686.82, 63.9643, 0.2542", "201.23, 686.858, 64.4, 0.2288", "201.23, 687.201, 64.96, 0.4576", "201.23, 687.696, 64.7732, 0.4322", "201.115, 688.23, 64.68, 0.305", "200.899, 688.586, 64.96, 0.4068", "200.886, 689.158, 65.7689, 0.6356", "200.62, 689.794, 65.8, 0.6356", "200.543, 690.442, 65.6132, 0.788", "200.2, 691.103, 65.2711, 0.788", "199.971, 691.523, 66.4222, 0.6102", "199.971, 692.234, 66.64, 0.3304", "199.971, 692.578, 66.64, 0.2542", "199.971, 693.035, 66.64, 0.2288", "199.971, 693.378, 66.64, 0.2288", "199.921, 693.671, 66.64, 0.2288", "199.666, 693.759, 66.64, 0.2288", "199.234, 694.358, 66.64, 0.2288", "199.018, 694.485, 66.64, 0.2288", "198.84, 694.649, 66.64, 0.2288", "198.827, 694.98, 66.64, 0.2542" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "360.791, 326.725, 22.7746, 0.966", "360.217, 327.408, 22.7559, 0.4576", "359.575, 328.306, 22.1122, 0.6102", "358.811, 329.145, 21.8518, 0.7118", "357.93, 329.868, 21.8921, 0.7626", "356.943, 330.435, 22.1189, 0.7118", "355.99, 330.459, 23.2324, 0.661", "355.62, 329.673, 24.9491, 0.5848", "354.892, 328.857, 25.3411, 0.5338", "354.077, 328.125, 25.9888, 0.483", "353.106, 327.579, 25.8353, 0.483", "352.156, 327.092, 26.3987, 0.5592", "351.354, 326.458, 27.4246, 0.6356", "350.477, 325.729, 27.5649, 0.6864", "349.418, 325.468, 27.8177, 0.6864", "348.346, 325.802, 27.998, 0.6864", "347.356, 325.961, 29.3222, 0.6864", "346.401, 326.522, 29.6803, 0.661", "345.574, 327.311, 29.6806, 0.5848", "344.743, 328.097, 29.682, 0.4576", "343.833, 328.78, 29.6898, 0.356", "342.749, 328.679, 29.7556, 0.305", "341.833, 328.095, 30.1493, 0.356", "340.732, 327.882, 30.4108, 0.4068", "339.968, 327.073, 30.8384, 0.483", "339.205, 326.227, 30.9739, 0.5084", "338.323, 325.564, 31.5935, 0.5592", "337.535, 324.763, 31.9586, 0.5848", "336.93, 323.796, 32.1146, 0.5848", "336.455, 322.809, 32.8031, 0.5592", "335.925, 321.813, 33.0826, 0.5338", "335.584, 320.739, 33.3298, 0.5848", "335.296, 319.89, 34.8922, 0.6356", "335.44, 318.982, 36.3331, 0.6864", "336.125, 318.083, 36.5543, 0.6356", "336.584, 317.136, 37.4674, 0.5338", "336.787, 316.194, 38.5031, 0.4322", "336.704, 315.668, 40.9158, 0.4068", "337.438, 315.07, 42.1196, 0.4322", "338.496, 314.809, 42.7843, 0.5084", "339.619, 314.698, 43.1323, 0.6102", "340.609, 314.158, 43.2104, 0.8136", "341.317, 313.362, 43.9855, 0.8898", "342.009, 312.545, 44.7938, 0.839", "342.595, 311.845, 46.4086, 0.6356", "343.121, 311.162, 48.1874, 0.5592", "343.82, 310.688, 50.01, 0.5592", "344.382, 310.339, 52.2312, 0.5592", "344.802, 309.795, 54.32, 0.4576", "345.195, 309.502, 53.48, 0.2542", "345.475, 309.439, 53.48, 0.2288", "345.64, 309.261, 53.48, 0.2288", "345.819, 308.88, 53.5111, 0.2542", "345.844, 308.321, 54.04, 0.305", "346.251, 308.181, 53.4178, 0.356", "346.594, 307.965, 53.5732, 0.6356", "346.823, 307.85, 54.6932, 0.5084", "347.052, 307.418, 55.4089, 0.661", "347.052, 306.567, 54.5689, 0.6102", "347.395, 306.211, 55.16, 0.5084", "347.712, 305.943, 55.4711, 0.2796", "348.119, 305.766, 55.6578, 0.3814", "348.246, 305.461, 56.28, 0.3814", "348.475, 305.346, 56.56, 0.2542", "348.691, 305.257, 56.4668, 0.2288", "348.843, 305.13, 55.8132, 0.2542", "349.263, 305.232, 55.9689, 0.3814", "349.606, 305.334, 57.12, 0.4322", "349.81, 305.448, 58.3022, 0.305", "350.064, 305.448, 58.52, 0.2542", "350.522, 305.448, 58.52, 0.2542", "350.979, 305.448, 59.08, 0.3814", "351.208, 305.371, 59.8268, 0.483", "351.437, 304.647, 59.64, 0.2542", "351.437, 304.381, 59.8268, 0.2288", "351.335, 304.063, 59.92, 0.2542", "350.865, 303.732, 59.92, 0.305", "350.382, 303.732, 60.1378, 0.305", "350.293, 303.655, 60.8532, 0.2796", "350.242, 303.427, 61.5689, 0.2542", "349.606, 303.274, 61.6, 0.3304" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "391.929, 327.857, 21.8386, 0.788", "392.506, 328.625, 21.8708, 0.5848", "393.541, 329.021, 22.3328, 0.6356", "394.639, 329.202, 22.8841, 0.661", "395.512, 329.896, 22.4804, 0.7118", "396.062, 330.75, 21.2537, 0.7118", "396.533, 331.753, 20.7214, 0.7372", "397.277, 332.623, 20.7208, 0.7372", "397.94, 333.552, 20.7234, 0.7626", "398.799, 334.303, 20.736, 0.7372", "399.902, 334.581, 20.8326, 0.7118", "400.964, 334.861, 21.4323, 0.661", "402.007, 334.857, 22.5324, 0.6356", "403.096, 334.578, 22.7646, 0.6102", "404.159, 334.769, 22.0184, 0.6356", "405.246, 335.089, 21.6891, 0.661", "406.301, 335.385, 21.0146, 0.6864", "407.432, 335.392, 20.7463, 0.661", "408.543, 335.186, 20.9124, 0.6356", "409.487, 334.667, 21.6675, 0.5848", "410.585, 334.694, 21.2268, 0.5592", "411.493, 335.334, 20.7516, 0.5848", "412.275, 336.167, 20.7435, 0.661", "412.948, 337.086, 20.8404, 0.7118", "413.794, 337.804, 21.3354, 0.661", "414.686, 338.484, 21.8047, 0.6102", "415.541, 339.243, 21.8378, 0.6356", "416.506, 339.85, 21.8288, 0.7372", "417.475, 340.449, 21.7829, 0.788", "418.291, 341.245, 21.59, 0.788", "419.008, 342.058, 20.8163, 0.8136", "419.75, 342.922, 20.7248, 0.839", "420.667, 343.564, 20.7463, 0.8644", "421.792, 343.533, 20.9222, 0.7372", "422.613, 343.924, 21.7837, 0.661", "423.175, 344.917, 21.8425, 0.5592", "423.937, 345.764, 21.8523, 0.5848", "424.955, 346.276, 21.9108, 0.5338", "425.536, 346.353, 21.8392, 0.5084", "426.608, 346.704, 21.84, 0.4576", "427.518, 347.396, 21.84, 0.483", "428.515, 347.949, 21.8946, 0.483", "429.553, 348.318, 22.5585, 0.483", "430.563, 348.822, 22.892, 0.483", "431.353, 349.642, 22.9468, 0.5592", "431.857, 350.666, 22.9575, 0.6102", "432.208, 351.755, 22.9597, 0.6102", "432.244, 352.885, 22.9393, 0.5592", "432.546, 353.947, 22.3143, 0.5338", "433.338, 354.714, 21.9114, 0.5338", "434.157, 355.511, 21.8557, 0.483", "434.687, 356.513, 21.8428, 0.4322", "435.273, 357.491, 21.8086, 0.3814", "435.063, 357.475, 22.4622, 0.4576", "435.317, 357.741, 22.8668, 0.4576", "435.775, 358.263, 22.4311, 0.3814", "435.991, 358.631, 22.4, 0.4322", "436.322, 358.987, 22.12, 0.4576", "436.513, 359.559, 22.2132, 0.483", "436.894, 360.004, 22.7111, 0.6356", "437.58, 360.474, 23.24, 0.6356", "438.279, 361.161, 23.2711, 0.6102", "438.737, 361.173, 22.12, 0.5848", "438.965, 361.491, 21.56, 0.3814", "439.194, 361.835, 21.56, 0.483", "439.512, 362.33, 21.4668, 0.6356", "439.525, 362.864, 21.8711, 0.6864", "439.716, 363.245, 22.6489, 0.4322", "440.02, 363.449, 22.5868, 0.4068", "440.847, 363.665, 22.3068, 0.356", "441.228, 363.728, 21.9332, 0.4068", "441.571, 363.919, 21.56, 0.4576", "441.698, 364.25, 21.0, 0.483", "441.825, 364.593, 21.2489, 0.2542", "442.092, 364.822, 20.8443, 0.305", "442.614, 365.152, 20.7511, 0.5084", "442.741, 365.508, 21.5289, 0.4576", "442.537, 365.953, 21.4043, 0.3304", "442.614, 366.194, 22.12, 0.5848", "442.728, 366.754, 21.8089, 0.6864", "443.287, 367.16, 20.9068, 0.5338", "443.529, 367.453, 21.0, 0.3304", "443.732, 367.758, 21.0932, 0.4322", "443.643, 367.809, 21.8089, 0.4322", "443.681, 368.025, 22.3068, 0.5084", "444.33, 368.216, 21.9332, 0.6102", "444.775, 368.482, 22.1511, 0.6102", "445.181, 368.788, 22.1511, 0.661", "445.474, 369.067, 21.8711, 0.5338", "445.715, 369.054, 23.2089, 0.4576", "446.274, 369.283, 22.96, 0.661", "446.643, 369.398, 23.7378, 0.5338", "446.745, 369.398, 24.6089, 0.5338", "447.164, 369.258, 24.92, 0.4322", "447.342, 369.245, 24.36, 0.4068", "447.635, 368.978, 23.9557, 0.3814", "447.876, 368.863, 23.3332, 0.5084", "448.473, 368.699, 23.3332, 0.6356", "449.528, 368.381, 23.7068, 0.6102", "450.012, 368.445, 23.8, 0.5338", "450.736, 368.254, 22.96, 0.305", "451.181, 368.368, 22.9911, 0.2796", "451.308, 368.635, 23.4268, 0.3814", "451.422, 368.89, 23.6443, 0.483", "451.499, 369.169, 24.4532, 0.356", "452.109, 369.398, 24.64, 0.2542", "452.617, 369.181, 24.4532, 0.3814", "452.91, 368.94, 24.8578, 0.4576", "453.825, 369.017, 24.8268, 0.3814", "454.308, 369.181, 24.8268, 0.4068", "454.69, 369.283, 24.7643, 0.483", "455.235, 369.817, 25.2, 0.6102", "455.998, 370.198, 24.92, 0.5084", "456.418, 370.554, 24.2978, 0.483", "456.533, 371.037, 24.64, 0.4576", "456.863, 371.278, 24.64, 0.5338", "457.6, 371.698, 24.8889, 0.5592", "458.083, 372.004, 24.92, 0.5592", "458.477, 372.258, 24.4532, 0.483", "458.935, 372.524, 24.64, 0.4576", "459.1, 372.931, 24.64, 0.3814", "459.545, 372.944, 25.2, 0.3814", "459.888, 372.715, 26.04, 0.483", "460.498, 372.601, 25.8532, 0.4322", "460.943, 372.677, 25.7911, 0.3814", "461.07, 373.021, 26.32, 0.6356", "461.452, 373.262, 25.9468, 0.5338", "462.062, 373.439, 24.8268, 0.483", "462.544, 373.516, 24.5778, 0.4576", "462.837, 373.783, 25.7289, 0.661", "463.345, 373.859, 25.2622, 0.6102", "463.879, 373.974, 24.9511, 0.5592", "464.337, 373.745, 25.4489, 0.4576", "464.782, 373.783, 24.6711, 0.305", "464.998, 373.923, 25.4489, 0.6356", "465.468, 373.897, 26.2889, 0.5848", "466.155, 374.088, 26.3822, 0.5592", "466.459, 374.202, 27.0357, 0.3304", "466.752, 374.202, 27.16, 0.2542", "467.083, 374.202, 27.1289, 0.2288", "467.401, 374.24, 26.6, 0.356", "467.744, 374.482, 26.8489, 0.4322", "467.819, 374.737, 26.88, 0.4322", "467.973, 375.016, 26.5378, 0.4322", "468.112, 375.359, 25.76, 0.356", "468.189, 375.817, 25.8532, 0.3304", "468.239, 376.224, 26.5068, 0.5848", "468.379, 376.694, 26.04, 0.6102", "468.647, 377.113, 26.04, 0.6102", "469.244, 377.558, 26.8489, 0.4322", "469.396, 377.736, 27.16, 0.4576", "469.79, 377.863, 27.3157, 0.4576", "470.082, 377.978, 26.3511, 0.3814", "470.362, 378.194, 26.1332, 0.4576", "470.858, 378.015, 26.7243, 0.5592", "471.214, 377.978, 27.44, 0.6356", "471.875, 378.015, 27.4711, 0.5338", "472.345, 378.257, 27.6268, 0.4068", "472.472, 378.435, 28.0, 0.4068", "472.739, 378.626, 28.56, 0.4576", "473.031, 378.905, 28.28, 0.4576", "473.387, 379.249, 27.7511, 0.4576", "473.82, 379.567, 27.8132, 0.4068", "474.048, 379.617, 28.2489, 0.483", "474.302, 379.808, 28.4978, 0.5084", "474.874, 379.706, 28.0311, 0.483", "475.446, 379.706, 28.3111, 0.6102", "476.108, 379.465, 28.9022, 0.6102", "476.655, 379.452, 29.0268, 0.5592", "477.213, 379.363, 29.5868, 0.5338", "477.468, 379.503, 30.52, 0.5338", "477.722, 379.706, 29.96, 0.5084", "478.396, 380.062, 29.96, 0.5848", "478.841, 380.303, 30.24, 0.5084", "479.552, 380.393, 30.24, 0.4576", "480.022, 380.405, 30.52, 0.5084", "480.709, 380.685, 30.6132, 0.483", "481.166, 380.952, 31.08, 0.305", "481.51, 380.952, 31.08, 0.2542", "482.425, 380.952, 31.08, 0.3304", "482.947, 381.104, 31.0489, 0.483", "483.34, 381.41, 30.24, 0.3814", "483.683, 381.511, 30.5511, 0.3814", "484.091, 381.765, 31.1732, 0.4322", "484.446, 381.905, 31.64, 0.305", "484.7, 381.994, 31.64, 0.2796", "484.967, 382.185, 31.36, 0.4576", "485.361, 382.477, 31.08, 0.5848", "485.793, 382.732, 31.36, 0.661", "486.277, 382.897, 31.2668, 0.5592", "486.722, 383.011, 31.7643, 0.4322", "486.988, 383.24, 32.5111, 0.4576", "487.115, 383.481, 33.2889, 0.4322", "487.267, 383.901, 33.5689, 0.356", "487.471, 384.18, 33.4132, 0.4576", "487.675, 384.575, 33.1957, 0.5084", "488.272, 384.715, 32.76, 0.4322", "488.717, 384.461, 32.5732, 0.4322", "489.022, 384.053, 32.6043, 0.3814", "489.289, 384.041, 33.04, 0.2542", "489.784, 384.041, 33.7868, 0.2542", "490.395, 384.041, 34.2532, 0.2796", "490.789, 384.257, 34.72, 0.356", "491.119, 384.384, 34.72, 0.483", "491.462, 384.384, 35.56, 0.4068", "491.513, 384.307, 36.3689, 0.2542", "491.679, 384.282, 36.4, 0.2288", "491.806, 384.346, 36.3068, 0.2288", "492.111, 384.384, 35.4668, 0.305", "492.365, 384.397, 34.72, 0.4322", "492.823, 384.27, 35.3111, 0.5084", "493.293, 384.384, 35.56, 0.3304", "493.865, 384.613, 35.84, 0.2796", "494.17, 384.575, 35.84, 0.2542", "494.882, 384.498, 35.5911, 0.2288", "495.479, 384.498, 35.5911, 0.2288", "496.038, 384.727, 35.56, 0.2542", "496.598, 384.969, 35.56, 0.305", "497.093, 385.197, 35.3732, 0.356", "497.627, 385.312, 35.28, 0.356", "497.983, 385.528, 35.56, 0.2796", "498.555, 385.986, 35.56, 0.2288", "499.242, 386.1, 35.56, 0.2288", "499.903, 386.24, 35.56, 0.2288", "500.614, 386.329, 35.56, 0.2288", "501.288, 386.329, 35.2489, 0.2288", "501.873, 386.329, 34.72, 0.2288", "502.343, 386.291, 34.8757, 0.2288", "502.813, 386.202, 34.9068, 0.2288", "503.373, 385.998, 35.0, 0.2288", "504.046, 385.871, 35.0, 0.2542", "504.593, 385.769, 35.0932, 0.305", "504.987, 385.948, 35.2489, 0.2542", "505.317, 386.087, 35.0, 0.2542", "506.093, 385.973, 35.84, 0.305", "506.715, 385.871, 35.6532, 0.305", "507.25, 385.757, 35.56, 0.3304", "507.707, 385.859, 35.8711, 0.3304", "508.444, 385.871, 36.5557, 0.2796", "508.724, 385.871, 36.6489, 0.2542", "508.94, 385.909, 36.4311, 0.2542", "509.296, 386.062, 35.9957, 0.3304", "509.639, 386.1, 35.5289, 0.3304", "509.893, 386.1, 35.3111, 0.3304", "510.682, 385.986, 35.28, 0.2542", "511.025, 385.986, 35.28, 0.2542", "511.406, 385.769, 35.4978, 0.3814", "511.89, 385.49, 35.8089, 0.4576", "512.69, 385.172, 35.4668, 0.4576", "513.084, 384.879, 35.3732, 0.4576", "513.567, 384.638, 35.56, 0.4576", "514.126, 384.498, 35.8089, 0.4576", "514.673, 384.498, 35.5911, 0.483", "515.181, 384.613, 36.3068, 0.5084", "515.83, 384.727, 36.4, 0.4068", "516.618, 384.727, 36.4311, 0.3814", "517.19, 384.613, 36.6489, 0.4576", "517.851, 384.613, 36.3068, 0.5338", "518.448, 384.625, 35.84, 0.5338", "519.02, 384.842, 35.8089, 0.4576", "519.426, 384.842, 35.9957, 0.483", "519.884, 384.651, 35.5911, 0.483", "520.495, 384.613, 35.2178, 0.4322", "520.838, 384.461, 34.7511, 0.305", "521.092, 384.384, 34.72, 0.2542", "521.435, 384.384, 34.72, 0.2288", "521.664, 384.384, 34.72, 0.2288", "522.465, 384.384, 34.72, 0.2288", "522.808, 384.384, 34.72, 0.2288", "523.113, 384.346, 34.72, 0.2288", "523.291, 384.18, 34.72, 0.2542", "523.761, 383.926, 34.6268, 0.4576", "524.447, 383.926, 34.9068, 0.6356", "525.096, 383.926, 35.0, 0.6102", "525.325, 383.71, 33.8489, 0.4576", "525.668, 383.583, 33.6, 0.2542", "526.036, 383.66, 33.5689, 0.3814", "526.392, 383.392, 33.04, 0.5084", "526.837, 383.036, 33.32, 0.5592", "527.143, 382.77, 33.88, 0.483", "527.575, 382.325, 34.0668, 0.5592", "527.765, 381.803, 33.6311, 0.5338", "528.261, 381.537, 33.4757, 0.6356", "528.414, 381.474, 32.3243, 0.3304", "528.515, 381.206, 32.2932, 0.2542" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "391.929, 327.857, 21.8386, 0.788", "392.402, 327.881, 21.8369, 0.4068", "393.403, 327.342, 21.8204, 0.4322", "394.031, 326.423, 21.7258, 0.4576", "393.86, 325.347, 21.1123, 0.483", "394.077, 324.263, 20.6917, 0.4576", "394.777, 323.363, 20.587, 0.483", "395.397, 322.466, 20.0172, 0.4576", "395.098, 321.638, 18.6082, 0.5338", "394.289, 320.857, 18.6259, 0.5848", "393.288, 320.604, 18.5405, 0.661", "392.906, 320.987, 16.4066, 0.7118", "393.107, 321.879, 14.9685, 0.6864", "393.88, 321.551, 13.3109, 0.661", "394.618, 320.718, 12.7271, 0.6102", "395.084, 319.738, 12.1075, 0.661", "395.037, 318.61, 11.9059, 0.7626", "394.706, 317.574, 12.6288, 0.839", "394.416, 316.254, 13.9107, 0.8898", "394.274, 315.182, 13.8692, 0.8898", "394.524, 314.156, 12.9461, 0.9152", "395.13, 313.192, 12.88, 0.8644", "395.649, 312.176, 12.8797, 0.8136", "396.151, 311.152, 12.8786, 0.7372", "396.657, 310.129, 12.8719, 0.7118", "397.085, 309.073, 12.8324, 0.6356", "397.632, 308.079, 12.6423, 0.6356", "398.07, 307.077, 11.9006, 0.6102", "398.706, 306.134, 11.7572, 0.6864", "399.323, 304.94, 11.737, 0.7372", "399.648, 303.849, 11.6203, 0.6864", "399.623, 302.753, 10.9332, 0.6356", "399.271, 301.683, 10.6411, 0.5848", "399.023, 300.591, 10.647, 0.5848", "399.513, 299.561, 10.682, 0.6356", "400.18, 298.638, 10.8576, 0.6356", "400.876, 297.814, 11.664, 0.6102", "401.76, 297.099, 11.7382, 0.5848", "402.577, 296.303, 11.653, 0.6102", "403.086, 295.354, 10.9673, 0.7118", "403.441, 294.291, 10.64, 0.7626", "403.811, 293.222, 10.6397, 0.7372", "404.437, 292.273, 10.6389, 0.6102", "405.253, 291.499, 10.6319, 0.4576", "406.362, 291.237, 10.5773, 0.3304", "407.396, 291.595, 10.1522, 0.305", "408.053, 291.816, 8.1533, 0.356", "408.795, 291.137, 7.814, 0.4576", "409.894, 290.991, 8.1967, 0.5084", "410.939, 290.764, 7.3503, 0.5338", "411.896, 290.258, 6.5498, 0.5592", "412.834, 289.677, 6.9199, 0.5592", "413.853, 289.211, 7.2808, 0.6102", "414.614, 288.568, 7.9416, 0.6102", "414.857, 287.505, 7.7263, 0.6102", "415.191, 286.621, 7.8159, 0.5592", "416.095, 286.691, 9.3148, 0.5084", "417.209, 286.756, 9.52, 0.5084", "418.304, 286.438, 9.5192, 0.4576", "419.416, 286.203, 9.5147, 0.4576", "420.496, 286.38, 9.48, 0.483", "421.207, 287.257, 9.2523, 0.5848" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "312.858, 274.225, 18.1009, 0.6356", "311.846, 274.571, 16.8613, 0.5848", "310.772, 274.63, 15.9482, 0.661", "309.769, 274.951, 14.9481, 0.7372", "308.824, 275.479, 14.1414, 0.7372", "307.825, 276.017, 14.1758, 0.6102", "306.775, 276.076, 14.8655, 0.4576", "305.784, 275.529, 14.9769, 0.305", "304.957, 274.827, 14.2388, 0.305", "304.032, 274.266, 13.463, 0.356", "302.961, 274.396, 12.8878, 0.483", "301.845, 274.638, 12.878, 0.5592", "300.75, 274.945, 12.8682, 0.6102", "299.614, 275.046, 12.7926, 0.5848", "298.545, 275.236, 12.1352, 0.5084", "298.203, 276.285, 11.6245, 0.4576", "297.483, 277.062, 10.8377, 0.4068", "296.383, 277.16, 10.6369, 0.4322", "296.296, 277.077, 9.24, 0.4068", "295.851, 276.848, 9.2711, 0.4576", "295.317, 276.683, 10.08, 0.661", "294.759, 276.098, 9.52, 0.5848", "294.122, 275.59, 9.24, 0.6102", "293.423, 275.577, 8.96, 0.6102", "292.851, 275.552, 8.5243, 0.5084", "291.847, 275.59, 7.5289, 0.3304", "291.453, 275.59, 7.4668, 0.2542", "291.237, 275.577, 7.7468, 0.2288", "291.148, 275.475, 8.4, 0.4322", "291.046, 275.602, 9.24, 0.4576", "290.589, 275.742, 9.1157, 0.4322", "290.499, 275.717, 8.3378, 0.2288", "290.372, 275.92, 8.2132, 0.2288", "289.979, 275.92, 8.8668, 0.4068", "289.482, 275.945, 8.8668, 0.3814", "288.974, 276.047, 8.4, 0.4322", "288.047, 275.717, 8.4, 0.4576", "287.602, 275.704, 8.68, 0.2288", "287.271, 275.704, 8.3689, 0.4322", "287.094, 275.818, 7.4043, 0.4576", "286.458, 275.742, 7.7468, 0.5084", "285.542, 275.704, 8.12, 0.305", "284.742, 275.704, 8.12, 0.2542", "284.513, 275.704, 8.12, 0.2288", "284.284, 275.704, 8.12, 0.2542", "283.953, 275.742, 8.3378, 0.4576", "284.043, 275.818, 8.9911, 0.2542", "283.75, 276.072, 9.4889, 0.2542", "283.75, 276.441, 8.7111, 0.4322", "283.369, 276.619, 8.12, 0.6864", "282.682, 276.276, 7.28, 0.6864", "281.919, 276.353, 6.16, 0.6102", "281.474, 275.997, 6.16, 0.5338", "281.322, 275.513, 6.5643, 0.4322", "281.31, 275.475, 7.28, 0.2542", "281.31, 275.475, 7.84, 0.2288", "281.31, 275.475, 8.4, 0.2288", "281.386, 275.399, 10.08, 0.305", "281.424, 275.259, 10.8889, 0.356", "281.513, 274.903, 10.9822, 0.305", "281.882, 274.891, 11.4489, 0.2796", "282.2, 274.573, 11.3868, 0.2288", "282.327, 274.522, 10.9822, 0.2288", "282.53, 274.293, 10.64, 0.2542", "282.911, 273.874, 10.64, 0.2796", "283.14, 273.607, 10.1732, 0.2288", "283.14, 273.175, 9.8311, 0.2288", "283.14, 272.844, 9.8, 0.2542", "283.14, 272.501, 9.8, 0.305", "282.988, 272.068, 9.5511, 0.4322", "282.67, 271.852, 8.6178, 0.483", "282.237, 271.23, 8.12, 0.5338", "281.78, 270.772, 7.84, 0.661", "281.424, 270.098, 7.8089, 0.5848" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "312.858, 274.225, 18.1009, 0.6356", "312.63, 274.126, 20.7701, 0.5338", "311.691, 274.018, 21.6541, 0.5848", "309.944, 273.091, 21.3077, 0.661", "309.093, 272.357, 20.9894, 0.6356", "308.513, 271.424, 21.6866, 0.6356", "307.865, 270.496, 21.8414, 0.5848", "306.877, 269.968, 21.8487, 0.5338", "305.785, 269.665, 21.8935, 0.5084", "304.778, 269.139, 22.1057, 0.5338", "303.846, 268.562, 22.8357, 0.5848", "303.012, 267.783, 22.96, 0.5592", "302.194, 266.982, 22.96, 0.483", "301.353, 266.209, 22.9603, 0.4068", "300.405, 265.574, 22.9611, 0.4322", "299.452, 264.946, 22.965, 0.5084", "298.447, 264.405, 22.9863, 0.5592", "297.495, 263.774, 23.0936, 0.5084", "296.509, 263.296, 23.753, 0.3814", "295.891, 262.382, 24.0892, 0.305", "295.065, 261.643, 24.1405, 0.3304", "293.997, 261.315, 24.4874, 0.483", "292.886, 261.298, 24.5224, 0.6356", "291.757, 261.347, 24.2553, 0.7118", "290.703, 261.636, 24.8839, 0.6356", "289.729, 262.171, 24.556, 0.5084", "288.64, 262.44, 24.169, 0.4322", "287.648, 262.103, 24.845, 0.4322", "286.685, 261.55, 25.4041, 0.483", "285.649, 261.207, 26.1433, 0.5084", "284.758, 260.584, 26.0823, 0.5848", "283.985, 259.828, 25.2913, 0.6102", "283.02, 259.227, 25.247, 0.5848", "282.007, 258.712, 25.468, 0.4576", "280.966, 258.544, 26.32, 0.3304", "280.623, 258.315, 26.04, 0.2542", "280.394, 258.277, 25.8532, 0.2542", "279.987, 258.239, 25.5111, 0.305", "279.25, 258.43, 25.76, 0.2542", "278.666, 258.646, 25.76, 0.2542", "278.132, 258.696, 25.5111, 0.4576", "277.687, 258.48, 25.7289, 0.5338", "277.204, 258.01, 25.3243, 0.4068", "277.077, 257.959, 26.0089, 0.3304", "276.644, 257.718, 26.04, 0.3304", "276.263, 257.375, 25.5732, 0.483", "275.704, 257.171, 24.92, 0.5084", "274.903, 257.057, 25.48, 0.483", "274.229, 257.057, 25.2311, 0.6102", "273.581, 256.942, 25.6043, 0.5084", "272.958, 256.828, 25.76, 0.4576", "272.31, 256.561, 26.04, 0.4576", "271.814, 256.333, 25.8532, 0.4322", "271.395, 256.027, 25.8532, 0.4322", "271.039, 255.773, 25.76, 0.4068", "270.633, 255.379, 25.76, 0.4068", "270.188, 255.035, 25.7911, 0.3304", "269.78, 254.744, 26.04, 0.305", "269.425, 254.49, 26.5068, 0.3304", "269.094, 254.057, 26.6, 0.4322", "268.738, 253.625, 26.5689, 0.5084", "268.306, 253.358, 26.88, 0.483", "267.734, 253.282, 26.4132, 0.5338", "267.099, 253.485, 26.6, 0.4576", "266.323, 253.51, 26.04, 0.483", "265.878, 253.396, 26.2889, 0.356", "265.446, 253.396, 25.1068, 0.305", "264.913, 253.282, 25.1068, 0.4322", "264.607, 253.282, 26.04, 0.5848", "264.112, 253.167, 26.1332, 0.4576", "263.463, 253.053, 25.2, 0.5338", "262.941, 253.053, 25.0757, 0.483", "262.434, 253.053, 24.64, 0.4322", "261.951, 253.244, 24.9511, 0.3304", "261.709, 253.485, 25.4489, 0.2542", "261.366, 253.701, 24.64, 0.2542", "260.718, 253.625, 24.64, 0.305", "259.929, 253.282, 24.3289, 0.3304", "259.243, 253.167, 23.8311, 0.6356", "258.621, 252.989, 24.0489, 0.5338", "257.985, 252.747, 24.2043, 0.6864", "257.323, 252.329, 23.8, 0.6864", "256.599, 251.909, 24.08, 0.4068", "256.218, 251.489, 24.08, 0.356", "255.951, 251.108, 23.7068, 0.3814", "255.761, 250.688, 23.8, 0.4576", "255.48, 250.168, 24.36, 0.483", "255.226, 249.812, 23.6132, 0.2542", "255.112, 249.621, 22.68, 0.2288", "255.112, 249.621, 21.84, 0.2288", "255.112, 249.621, 21.28, 0.2288", "255.112, 249.621, 19.32, 0.2288", "255.112, 249.621, 18.76, 0.2288", "255.112, 249.621, 18.2, 0.2288", "255.112, 249.57, 17.4843, 0.2288", "255.112, 249.278, 17.36, 0.2288", "255.112, 249.011, 17.1732, 0.2288", "255.112, 248.134, 17.08, 0.2288", "255.112, 247.79, 17.08, 0.2288", "255.112, 247.447, 17.08, 0.2288", "254.998, 247.218, 17.08, 0.2288", "254.833, 247.04, 17.08, 0.2288", "254.311, 246.99, 17.08, 0.2288", "253.968, 246.99, 17.08, 0.2288", "253.053, 246.99, 17.08, 0.2288", "252.366, 246.99, 16.8, 0.2288", "252.1, 246.913, 16.8, 0.2288", "251.794, 246.875, 16.8, 0.2288", "251.578, 246.761, 16.7689, 0.2288", "251.464, 246.354, 15.8668, 0.305", "251.566, 246.151, 14.9332, 0.2796", "251.312, 245.528, 14.84, 0.2796", "251.07, 245.299, 15.6489, 0.3814", "250.65, 245.172, 15.9289, 0.3814", "250.307, 245.274, 16.24, 0.356" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "198.827, 694.98, 66.64, 0.2542", "198.705, 695.283, 66.7058, 0.2542", "196.075, 695.827, 66.7058, 0.2796", "194.193, 697.883, 66.7058, 0.356", "190.676, 703.037, 68.3068, 0.4322", "188.124, 706.05, 71.5086, 0.5084", "187.645, 708.558, 71.5086, 0.483", "185.31, 711.157, 73.1097, 0.4322", "183.241, 712.68, 75.2441, 0.4068", "180.047, 715.591, 78.4462, 0.4322", "180.33, 717.662, 78.4462, 0.4576", "179.766, 718.509, 78.4462, 0.4322", "176.855, 718.408, 81.1143, 0.4068" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "198.827, 694.98, 66.64, 0.2542", "198.382, 695.45, 66.64, 0.4576", "197.925, 695.793, 66.64, 0.2288", "197.899, 696.111, 66.64, 0.2288", "197.454, 696.582, 66.64, 0.305", "197.188, 697.103, 66.6711, 0.3814", "196.972, 697.357, 67.2, 0.4576", "196.743, 697.802, 67.1689, 0.4322", "196.577, 697.992, 65.8622, 0.661", "196.527, 698.653, 66.36, 0.8644", "196.082, 699.442, 66.64, 0.839", "195.433, 700.128, 65.8932, 0.5592", "195.09, 700.954, 65.8311, 0.6102", "194.836, 701.476, 65.7068, 0.661", "194.62, 701.882, 64.9911, 0.788", "194.099, 702.848, 65.7689, 0.7626", "193.717, 703.483, 66.08, 0.661", "193.565, 704.03, 65.2711, 0.5592", "193.641, 704.704, 64.7732, 0.6864", "193.527, 705.467, 65.52, 0.5338", "193.298, 705.835, 65.5822, 0.483", "192.98, 706.179, 65.24, 0.356", "192.548, 706.42, 65.2089, 0.4068", "192.179, 706.522, 64.96, 0.4068", "191.772, 706.763, 65.0532, 0.5848", "191.506, 707.412, 66.1732, 0.7372", "191.607, 708.581, 66.92, 0.661", "191.582, 709.064, 66.5778, 0.5848", "191.543, 709.534, 66.1111, 0.5338", "191.2, 710.004, 65.8, 0.6102" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "421.207, 287.257, 9.2523, 0.5848", "421.793, 286.763, 10.4532, 0.4322", "422.136, 286.343, 10.08, 0.5592", "422.733, 285.53, 9.6132, 0.6864", "423.14, 284.983, 8.7732, 0.661", "423.598, 284.869, 9.6132, 0.5338", "423.852, 284.627, 10.36, 0.356", "424.22, 284.424, 10.64, 0.356", "424.424, 284.17, 10.36, 0.3304", "424.755, 283.941, 9.7689, 0.2796", "424.844, 283.776, 9.2711, 0.2542", "425.11, 283.407, 9.1468, 0.356", "425.568, 283.254, 8.96, 0.305", "425.784, 283.242, 8.68, 0.2542", "425.797, 282.911, 8.4, 0.2542", "425.899, 282.491, 8.2757, 0.5084", "426.229, 282.352, 7.6532, 0.483", "426.941, 281.996, 7.56, 0.5084", "427.488, 281.628, 7.28, 0.3304", "427.856, 281.322, 7.8089, 0.4322", "428.123, 281.488, 7.2489, 0.4576", "428.212, 281.551, 6.16, 0.2542", "428.428, 281.424, 6.16, 0.2288", "428.657, 281.424, 6.16, 0.2288", "428.886, 281.424, 6.16, 0.2288", "429.483, 281.31, 6.3468, 0.788" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "421.207, 287.257, 9.2523, 0.5848", "421.641, 287.876, 7.4645, 0.483", "421.54, 288.663, 5.8803, 0.4068", "422.446, 289.258, 5.8666, 0.356", "423.246, 289.811, 7.2498, 0.356", "423.91, 290.34, 9.0468, 0.4068", "424.185, 290.749, 11.4635, 0.5338", "423.417, 291.35, 12.7669, 0.6102", "422.301, 291.571, 12.8565, 0.5848", "421.426, 292.157, 12.6756, 0.4576", "421.662, 293.184, 11.9689, 0.3814", "421.678, 294.237, 12.88, 0.356" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "176.855, 718.408, 81.1143, 0.4068", "177.115, 718.528, 81.1143, 0.4068", "180.22, 725.484, 85.9172, 0.3304", "180.339, 731.501, 94.4555, 0.3304", "184.976, 735.939, 99.792, 0.3814", "187.872, 742.258, 106.729, 0.3814", "191.186, 746.955, 113.133, 0.3814", "195.217, 751.383, 114.734, 0.3814", "196.103, 753.45, 114.734, 0.3304", "196.792, 755.516, 114.734, 0.305", "203.394, 760.353, 116.869, 0.2796" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "176.855, 718.408, 81.1143, 0.4068", "173.843, 718.119, 83.7827, 0.3304", "172.24, 716.797, 83.7827, 0.3304", "171.296, 715.758, 83.7827, 0.356", "165.718, 715.559, 86.4508, 0.356", "162.599, 714.709, 86.4508, 0.3814", "153.479, 713.943, 89.119, 0.356", "150.348, 713.943, 89.119, 0.305", "146.956, 715.117, 89.119, 0.2542", "142.521, 715.509, 89.119, 0.2288", "133.913, 712.516, 91.2537, 0.2288", "124.116, 710.426, 91.2537, 0.2796", "118.629, 709.512, 91.2537, 0.3304", "112.342, 706.771, 92.8547, 0.4322", "109.989, 703.633, 92.8547, 0.4322", "104.015, 700.202, 92.321, 0.4322", "102.054, 698.242, 92.321, 0.3304", "98.7867, 696.282, 92.321, 0.2796", "89.7256, 692.087, 95.5228, 0.2288", "85.4035, 690.514, 95.5228, 0.2288", "79.6302, 687.952, 96.5902, 0.2288" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "191.2, 710.004, 65.8, 0.6102", "185.836, 713.801, 64.5714, 0.5084", "183.741, 715.446, 64.5714, 0.4068", "180.659, 716.327, 64.5714, 0.305", "173.738, 717.338, 62.9703, 0.2542", "165.953, 718.558, 61.903, 0.2796" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "191.2, 710.004, 65.8, 0.6102", "190.807, 710.538, 66.0489, 0.6864", "190.336, 711.2, 66.08, 0.6864", "190.133, 712.0, 66.2978, 0.839", "190.133, 712.598, 66.64, 0.6864", "190.018, 713.411, 66.9511, 0.6102", "190.031, 714.187, 66.92, 0.5592", "190.133, 714.644, 67.1689, 0.4576", "190.26, 714.962, 66.0178, 0.305", "190.73, 715.204, 65.8, 0.305", "191.035, 715.381, 66.5778, 0.4322", "191.048, 715.547, 66.9822, 0.4576", "190.946, 716.042, 67.48, 0.4576", "190.705, 716.602, 67.48, 0.4068", "190.438, 716.843, 67.9157, 0.5084", "190.324, 717.517, 67.8532, 0.788", "190.426, 718.139, 67.2, 0.7626", "190.603, 718.991, 67.2, 0.8644", "190.743, 719.614, 67.76, 0.6102", "190.705, 720.059, 67.9778, 0.483", "190.489, 720.606, 68.0089, 0.6864", "190.133, 721.292, 66.92, 1.0168", "189.904, 722.105, 67.5111, 0.6864" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "165.953, 718.558, 61.903, 0.2796", "155.746, 719.686, 63.504, 0.2796", "151.595, 720.663, 63.504, 0.2542", "139.927, 722.929, 65.105, 0.3304", "134.907, 724.345, 65.105, 0.4068", "126.688, 726.299, 67.2395, 0.4322", "121.978, 728.035, 69.3742, 0.356", "117.397, 730.642, 72.0423, 0.2796" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "165.953, 718.558, 61.903, 0.2796", "161.746, 716.419, 57.6338, 0.2288", "157.472, 716.536, 57.6338, 0.2288", "152.438, 718.172, 57.6338, 0.2542", "149.271, 719.586, 57.6338, 0.305", "147.066, 722.739, 54.9657, 0.356", "144.239, 725.878, 52.831, 0.356", "140.018, 726.853, 50.6965, 0.3304", "138.283, 728.361, 50.6965, 0.305", "134.711, 727.931, 50.6965, 0.3814", "129.763, 729.114, 48.5618, 0.5084", "121.629, 731.897, 46.961, 0.6864", "120.231, 733.074, 46.961, 0.7118", "119.373, 734.573, 46.961, 0.6356", "116.214, 742.017, 45.36, 0.5338", "114.174, 744.8, 45.36, 0.5084", "112.136, 746.3, 45.36, 0.5592", "112.135, 748.009, 45.36, 0.5084", "114.086, 750.684, 43.2253, 0.4576", "114.838, 751.43, 43.2253, 0.356", "115.069, 754.846, 41.0908, 0.4068" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "189.904, 722.105, 67.5111, 0.6864", "190.299, 722.634, 65.6387, 0.305", "190.61, 725.095, 65.6387, 0.356", "192.693, 730.25, 70.4413, 0.4068", "192.247, 737.255, 74.177, 0.4576", "192.839, 739.861, 74.177, 0.3814", "195.24, 746.722, 78.9799, 0.3814", "197.239, 750.149, 78.9799, 0.4322", "198.148, 755.229, 78.9799, 0.5592", "200.019, 762.724, 81.648, 0.5592", "202.042, 768.068, 81.648, 0.4576", "203.805, 774.761, 83.7827, 0.356", "204.826, 777.913, 83.7827, 0.2796", "210.513, 784.298, 85.3835, 0.2542", "214.047, 788.786, 85.3835, 0.2288", "216.753, 793.965, 85.3835, 0.2288", "220.512, 796.922, 83.249, 0.2288", "220.971, 800.063, 83.249, 0.2288", "222.278, 804.833, 83.249, 0.2288", "226.592, 807.496, 83.249, 0.2288", "234.852, 813.517, 84.8498, 0.2288", "239.707, 817.112, 84.8498, 0.2288", "244.684, 820.427, 84.8498, 0.2796" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "189.904, 722.105, 67.5111, 0.6864", "189.739, 722.767, 68.2268, 0.788", "189.548, 723.237, 68.3511, 0.5084", "189.294, 723.885, 68.32, 0.4322", "189.103, 724.368, 68.6311, 0.483", "188.9, 724.826, 68.9732, 0.483", "188.506, 725.156, 69.16, 0.4576", "188.201, 725.537, 69.16, 0.3814", "188.188, 725.868, 69.16, 0.4322", "188.29, 726.338, 69.16, 0.6356", "188.315, 726.999, 69.44, 0.7118", "188.531, 727.584, 69.44, 0.7626", "188.531, 728.347, 69.5332, 0.7118", "188.531, 728.728, 70.28, 0.5084", "188.531, 729.3, 70.0622, 0.3304", "188.531, 730.024, 70.7468, 0.3814", "188.531, 730.787, 70.84, 0.4068", "188.531, 731.474, 70.56, 0.3814", "188.531, 731.995, 70.4043, 0.2542", "188.531, 732.135, 70.9022, 0.2542", "188.531, 732.389, 71.68, 0.3814", "188.493, 732.809, 72.24, 0.3814", "188.417, 733.075, 72.24, 0.305", "188.417, 733.304, 71.96, 0.2542", "188.417, 733.571, 71.2132, 0.3814", "188.417, 734.143, 70.9332, 0.6356", "188.34, 734.6, 71.68, 0.6102", "188.213, 735.02, 71.96, 0.5084", "188.379, 735.744, 72.24, 0.6356", "188.074, 736.278, 72.24, 0.6102", "187.807, 736.813, 72.24, 0.7372", "187.387, 737.537, 71.68, 1.0424", "187.031, 738.402, 71.8668, 0.9914", "186.332, 739.444, 71.1511, 0.6102", "186.129, 739.939, 71.4, 0.5084", "185.862, 740.359, 71.12, 0.4576", "185.405, 741.045, 71.68, 0.4068", "185.214, 741.337, 72.4578, 0.3814", "184.947, 741.63, 73.0489, 0.3814", "184.87, 741.897, 73.8889, 0.305", "184.87, 742.215, 73.9511, 0.2542", "184.858, 742.456, 74.1689, 0.2288", "184.515, 742.672, 74.2, 0.2288", "184.234, 742.735, 74.2, 0.2288", "184.107, 742.951, 74.2, 0.2288", "183.943, 743.13, 74.2, 0.2542", "183.51, 743.142, 73.8889, 0.5084", "183.498, 743.142, 72.8, 0.2542", "183.498, 743.232, 71.8978, 0.5084", "183.269, 743.677, 72.0532, 0.5848", "182.926, 744.159, 73.9511, 0.5084", "182.684, 744.617, 74.2, 0.2796", "182.545, 744.833, 73.6711, 0.4576", "182.239, 745.316, 73.08, 0.5848", "182.227, 745.952, 73.1732, 0.5338", "181.705, 745.736, 73.64, 0.4576" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "181.705, 745.736, 73.64, 0.4576", "183.566, 748.242, 73.6434, 0.4322", "186.202, 750.418, 73.6434, 0.4576", "192.843, 757.185, 75.2441, 0.4576", "200.531, 759.837, 77.3788, 0.483", "205.351, 761.214, 77.3788, 0.4576", "210.059, 764.083, 77.3788, 0.4322", "216.972, 770.424, 79.5133, 0.356", "220.306, 775.138, 79.5133, 0.3304", "223.725, 780.263, 81.648, 0.2796", "230.976, 783.256, 81.648, 0.2542", "238.916, 789.239, 81.648, 0.2288", "241.83, 796.396, 84.3161, 0.2288", "244.284, 802.069, 86.4508, 0.2288", "251.364, 808.102, 88.5853, 0.2542", "254.022, 810.991, 88.5853, 0.3304" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "181.705, 745.736, 73.64, 0.4576", "181.197, 745.99, 74.48, 0.5848", "180.752, 746.219, 74.7911, 0.5084", "180.345, 746.473, 75.1332, 0.3814", "180.001, 746.701, 75.6932, 0.2796", "179.748, 746.943, 76.44, 0.2542", "179.595, 747.261, 76.9689, 0.3814", "179.113, 747.452, 77.0, 0.3814", "178.616, 747.871, 76.72, 0.2796", "178.35, 748.176, 76.44, 0.3814", "177.994, 748.405, 74.7911, 0.6356", "177.422, 749.079, 75.04, 0.8644", "177.129, 749.206, 73.7332, 0.5338", "176.977, 749.358, 74.6668, 0.5084", "176.735, 749.625, 75.6622, 0.661", "176.405, 749.981, 76.5022, 0.4576", "176.099, 750.4, 76.9689, 0.2542", "175.935, 750.566, 77.0, 0.2288", "175.579, 750.668, 77.0, 0.2288", "175.261, 750.959, 77.1868, 0.356", "175.032, 751.265, 77.28, 0.483", "174.549, 751.583, 77.28, 0.483", "174.219, 751.875, 76.2843, 0.483", "174.117, 752.294, 75.6, 0.4322", "174.117, 752.523, 75.6, 0.2542", "174.117, 752.752, 75.6, 0.2542", "173.977, 753.07, 75.6, 0.3814", "173.748, 753.299, 75.6, 0.3814", "173.291, 753.528, 75.6, 0.356", "173.202, 753.782, 75.6, 0.3814", "173.075, 754.303, 75.6932, 0.2796", "172.973, 754.239, 76.44, 0.3304", "173.075, 754.493, 77.4668, 0.6356", "172.846, 755.027, 77.28, 0.661", "172.413, 755.281, 77.28, 0.5338", "171.918, 755.612, 77.3422, 0.5338", "171.714, 755.905, 76.0357, 0.3814", "171.804, 756.298, 75.88, 0.6864", "171.816, 757.099, 76.6889, 0.9406", "171.371, 757.875, 76.0978, 0.7118", "171.232, 758.561, 75.32, 0.6864", "171.371, 759.158, 75.04, 0.661", "171.867, 759.693, 75.04, 0.6356", "172.095, 760.481, 74.5111, 0.5592", "172.185, 760.862, 74.76, 0.3814", "172.249, 761.014, 74.7911, 0.2542", "172.299, 761.218, 75.0089, 0.2542", "172.617, 761.332, 75.0089, 0.2542", "172.744, 761.382, 74.6043, 0.2288", "172.871, 761.663, 74.48, 0.2288", "173.151, 761.726, 74.48, 0.2288", "173.202, 762.018, 74.48, 0.2288", "173.202, 762.362, 74.48, 0.2542", "173.495, 762.641, 74.48, 0.305", "173.647, 762.908, 74.5732, 0.5084", "174.002, 763.277, 74.76, 0.6102", "174.231, 763.836, 75.2889, 0.483", "174.002, 764.294, 74.7289, 0.661", "173.965, 764.764, 74.3868, 0.4068", "173.774, 765.095, 74.4489, 0.4068", "173.52, 765.527, 73.8889, 0.6102", "172.896, 765.794, 73.1732, 0.4068", "172.744, 766.251, 73.64, 0.4576", "172.553, 766.48, 74.9468, 0.4322", "172.617, 766.671, 75.6622, 0.3814", "172.274, 767.039, 75.88, 0.3304", "172.007, 767.268, 76.0668, 0.356", "171.829, 767.395, 76.16, 0.2542", "171.714, 767.701, 75.7868, 0.356", "171.486, 767.955, 73.6089, 0.5848", "171.486, 768.056, 71.8978, 0.5848", "171.232, 768.4, 71.68, 0.3814", "171.142, 768.755, 71.6489, 0.4322", "171.142, 768.972, 71.0578, 0.4576", "171.003, 769.429, 70.84, 0.5338", "168.699, 770.72, 68.8405, 0.3814", "167.57, 771.892, 68.8405, 0.305", "165.946, 772.207, 67.2395, 0.305", "161.694, 769.954, 65.6387, 0.3814", "158.76, 767.665, 64.0377, 0.4068", "156.148, 766.64, 64.0377, 0.3814", "151.752, 764.842, 61.903, 0.305", "148.089, 764.335, 61.903, 0.2542", "144.799, 764.319, 61.903, 0.2288", "140.514, 765.63, 59.7685, 0.2288", "134.893, 768.006, 58.7012, 0.2796", "131.759, 769.139, 56.5667, 0.4068" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_184",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_185",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_37", "dend_32", "dend_29", "dend_26", "dend_17", "dend_8", "dend_3", "dend_0", "apic_0", "dend_48", "dend_47", "dend_41", "dend_38", "dend_34", "dend_33", "dend_31", "dend_30", "dend_28", "dend_27", "dend_21", "dend_18", "dend_16", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "apic_8", "apic_1", "dend_50", "dend_49", "dend_43", "dend_42", "dend_40", "dend_39", "dend_36", "dend_35", "dend_23", "dend_22", "dend_20", "dend_19", "dend_11", "dend_10", "dend_6", "dend_5", "apic_24", "apic_9", "apic_7", "apic_2", "dend_52", "dend_51", "dend_45", "dend_44", "dend_25", "dend_24", "dend_13", "dend_12", "apic_26", "apic_25", "apic_11", "apic_10", "apic_6", "apic_3", "dend_15", "dend_14", "apic_21", "apic_12", "apic_5", "apic_4", "apic_23", "apic_22", "apic_18", "apic_13", "apic_20", "apic_19", "apic_17", "apic_14", "apic_16", "apic_15" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_37", "dend_32", "dend_29", "dend_26", "dend_17", "dend_8", "dend_3", "dend_0", "dend_48", "dend_47", "dend_41", "dend_38", "dend_34", "dend_33", "dend_31", "dend_30", "dend_28", "dend_27", "dend_21", "dend_18", "dend_16", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "dend_50", "dend_49", "dend_43", "dend_42", "dend_40", "dend_39", "dend_36", "dend_35", "dend_23", "dend_22", "dend_20", "dend_19", "dend_11", "dend_10", "dend_6", "dend_5", "dend_52", "dend_51", "dend_45", "dend_44", "dend_25", "dend_24", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_8", "apic_1", "apic_24", "apic_9", "apic_7", "apic_2", "apic_26", "apic_25", "apic_11", "apic_10", "apic_6", "apic_3", "apic_21", "apic_12", "apic_5", "apic_4", "apic_23", "apic_22", "apic_18", "apic_13", "apic_20", "apic_19", "apic_17", "apic_14", "apic_16", "apic_15" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8985",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_8", "apic_8", "apic_8", "apic_8", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_9", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "2.14"
  }, {
    "group" : "dend",
    "value" : "2.14"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "164.37"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.7283836E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.5441923E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.5744796",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "5.9488895E-5",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.02003826",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "7.31997E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.014248451",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.045994937",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.534947E-4",
    "erev" : "-91.00126"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "4.863672E-4",
    "erev" : "-91.00126"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "9.172918E-6",
    "erev" : "-91.00126"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "5.7642636E-5",
    "erev" : "-91.00126"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "3.2741745E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0068450468",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473863578

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_8, id: apic_8, parent: apic_0
create apic_8
public apic_8
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_24, id: apic_24, parent: apic_8
create apic_24
public apic_24
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_1
create apic_7
public apic_7
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: apic_26, id: apic_26, parent: apic_24
create apic_26
public apic_26
// Section: apic_25, id: apic_25, parent: apic_24
create apic_25
public apic_25
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_6, id: apic_6, parent: apic_2
create apic_6
public apic_6
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: apic_21, id: apic_21, parent: apic_11
create apic_21
public apic_21
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_23, id: apic_23, parent: apic_21
create apic_23
public apic_23
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_18, id: apic_18, parent: apic_12
create apic_18
public apic_18
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_20, id: apic_20, parent: apic_18
create apic_20
public apic_20
// Section: apic_19, id: apic_19, parent: apic_18
create apic_19
public apic_19
// Section: apic_17, id: apic_17, parent: apic_13
create apic_17
public apic_17
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_184, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_184
// Group: {name=ModelViewParmSubset_185, groups=[], sections=[dend_46, dend_37, dend_32, dend_29, dend_26, dend_17, dend_8, dend_3, dend_0, apic_0, dend_48, dend_47, dend_41, dend_38, dend_34, dend_33, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_16, dend_9, dend_7, dend_4, dend_2, dend_1, apic_8, apic_1, dend_50, dend_49, dend_43, dend_42, dend_40, dend_39, dend_36, dend_35, dend_23, dend_22, dend_20, dend_19, dend_11, dend_10, dend_6, dend_5, apic_24, apic_9, apic_7, apic_2, dend_52, dend_51, dend_45, dend_44, dend_25, dend_24, dend_13, dend_12, apic_26, apic_25, apic_11, apic_10, apic_6, apic_3, dend_15, dend_14, apic_21, apic_12, apic_5, apic_4, apic_23, apic_22, apic_18, apic_13, apic_20, apic_19, apic_17, apic_14, apic_16, apic_15]}
objref ModelViewParmSubset_185
// Group: {name=dend, groups=[], sections=[dend_46, dend_37, dend_32, dend_29, dend_26, dend_17, dend_8, dend_3, dend_0, dend_48, dend_47, dend_41, dend_38, dend_34, dend_33, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_16, dend_9, dend_7, dend_4, dend_2, dend_1, dend_50, dend_49, dend_43, dend_42, dend_40, dend_39, dend_36, dend_35, dend_23, dend_22, dend_20, dend_19, dend_11, dend_10, dend_6, dend_5, dend_52, dend_51, dend_45, dend_44, dend_25, dend_24, dend_13, dend_12, dend_15, dend_14]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_8, apic_1, apic_24, apic_9, apic_7, apic_2, apic_26, apic_25, apic_11, apic_10, apic_6, apic_3, apic_21, apic_12, apic_5, apic_4, apic_23, apic_22, apic_18, apic_13, apic_20, apic_19, apic_17, apic_14, apic_16, apic_15]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_8985, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_8985
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_8, apic_8, apic_8, apic_8, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_18, apic_18, apic_18, apic_18, apic_18, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_46(0), soma_0(0.5)
    connect dend_37(0), soma_0(0.5)
    connect dend_32(0), soma_0(0.5)
    connect dend_29(0), soma_0(0.5)
    connect dend_26(0), soma_0(0.5)
    connect dend_17(0), soma_0(0.5)
    connect dend_8(0), soma_0(0.5)
    connect dend_3(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect apic_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_8(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_24(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect apic_26(0), apic_24(1.0)
    connect apic_25(0), apic_24(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_6(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect apic_21(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_23(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_18(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_20(0), apic_18(1.0)
    connect apic_19(0), apic_18(1.0)
    connect apic_17(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 361.573, 302.931, 20.72, 15.8784 ) }
    soma_0 { pt3dadd( 369.512, 302.931, 20.72, 15.8784 ) }
    soma_0 { pt3dadd( 377.451, 302.931, 20.72, 15.8784 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 369.512, 302.931, 20.72, 1.0 ) }
    axon_0 { pt3dadd( 375.353, 316.747, 20.72, 1.0 ) }
    axon_0 { pt3dadd( 381.195, 330.563, 20.72, 1.0 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 6/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 368.638, 294.96, 25.6446, 0.3304 ) }
    dend_46 { pt3dadd( 369.382, 294.491, 25.6446, 0.4322 ) }
    dend_46 { pt3dadd( 370.07, 293.937, 25.6446, 0.4576 ) }
    dend_46 { pt3dadd( 369.983, 292.745, 25.6446, 0.483 ) }
    dend_46 { pt3dadd( 368.655, 291.974, 26.6725, 0.4068 ) }
    dend_46 { pt3dadd( 367.372, 291.821, 26.6725, 0.3304 ) }
    dend_46 { pt3dadd( 365.912, 290.599, 27.7001, 0.2796 ) }
    dend_46 { pt3dadd( 364.572, 289.629, 31.2973, 0.483 ) }
    dend_46 { pt3dadd( 364.847, 289.661, 32.4178, 0.661 ) }
    dend_46 { pt3dadd( 365.165, 289.546, 33.32, 0.5848 ) }
    dend_46 { pt3dadd( 365.508, 289.191, 34.1911, 0.3814 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 17/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 366.309, 294.955, 21.0199, 0.3814 ) }
    dend_37 { pt3dadd( 366.284, 294.101, 21.0199, 0.4322 ) }
    dend_37 { pt3dadd( 365.775, 293.433, 21.0199, 0.483 ) }
    dend_37 { pt3dadd( 365.176, 292.375, 21.0199, 0.5084 ) }
    dend_37 { pt3dadd( 364.004, 291.153, 21.0199, 0.5848 ) }
    dend_37 { pt3dadd( 362.88, 290.471, 21.0199, 0.6864 ) }
    dend_37 { pt3dadd( 362.051, 290.271, 21.0311, 0.9406 ) }
    dend_37 { pt3dadd( 361.491, 289.699, 21.9022, 0.7118 ) }
    dend_37 { pt3dadd( 360.462, 289.636, 22.8668, 0.661 ) }
    dend_37 { pt3dadd( 359.813, 289.292, 22.96, 0.788 ) }
    dend_37 { pt3dadd( 359.395, 288.415, 23.0532, 0.7626 ) }
    dend_37 { pt3dadd( 358.619, 287.856, 22.96, 0.7118 ) }
    dend_37 { pt3dadd( 358.403, 287.157, 23.24, 0.6864 ) }
    dend_37 { pt3dadd( 357.856, 286.343, 23.2711, 0.661 ) }
    dend_37 { pt3dadd( 357.398, 286.102, 23.52, 0.483 ) }
    dend_37 { pt3dadd( 357.386, 285.415, 22.9911, 0.661 ) }
    dend_37 { pt3dadd( 357.538, 284.665, 22.96, 0.7372 ) }
    dend_37 { pt3dadd( 357.386, 283.081, 21.7364, 0.5084 ) }
    dend_37 { pt3dadd( 356.91, 282.089, 21.0165, 0.4322 ) }
    dend_37 { pt3dadd( 356.378, 281.088, 20.956, 0.4576 ) }
    dend_37 { pt3dadd( 355.807, 280.15, 21.6563, 0.5592 ) }
    dend_37 { pt3dadd( 355.04, 279.308, 21.8403, 0.7372 ) }
    dend_37 { pt3dadd( 354.229, 278.501, 21.8411, 0.8898 ) }
    dend_37 { pt3dadd( 353.415, 277.697, 21.8439, 0.8644 ) }
    dend_37 { pt3dadd( 352.584, 276.911, 21.8551, 0.7372 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 42/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 377.221, 305.614, 24.8741, 0.5848 ) }
    dend_32 { pt3dadd( 378.274, 305.707, 23.8476, 0.6102 ) }
    dend_32 { pt3dadd( 379.334, 305.872, 23.018, 0.5592 ) }
    dend_32 { pt3dadd( 380.442, 306.126, 22.9082, 0.483 ) }
    dend_32 { pt3dadd( 381.57, 306.122, 22.5641, 0.4322 ) }
    dend_32 { pt3dadd( 382.684, 306.049, 22.104, 0.483 ) }
    dend_32 { pt3dadd( 383.579, 305.501, 22.8592, 0.5338 ) }
    dend_32 { pt3dadd( 384.49, 304.823, 22.6965, 0.5592 ) }
    dend_32 { pt3dadd( 385.407, 304.318, 21.9041, 0.483 ) }
    dend_32 { pt3dadd( 386.544, 304.291, 22.0419, 0.5084 ) }
    dend_32 { pt3dadd( 387.663, 304.219, 22.0136, 0.5084 ) }
    dend_32 { pt3dadd( 388.692, 303.787, 21.8481, 0.5848 ) }
    dend_32 { pt3dadd( 389.41, 302.905, 21.8826, 0.5592 ) }
    dend_32 { pt3dadd( 390.242, 302.142, 22.0626, 0.5338 ) }
    dend_32 { pt3dadd( 391.254, 301.785, 22.9373, 0.483 ) }
    dend_32 { pt3dadd( 392.247, 301.445, 24.022, 0.4322 ) }
    dend_32 { pt3dadd( 393.174, 300.915, 24.9306, 0.4322 ) }
    dend_32 { pt3dadd( 394.211, 300.691, 25.2132, 0.4322 ) }
    dend_32 { pt3dadd( 395.155, 301.331, 25.2689, 0.483 ) }
    dend_32 { pt3dadd( 396.183, 301.279, 25.8653, 0.5084 ) }
    dend_32 { pt3dadd( 397.267, 301.034, 26.32, 0.5338 ) }
    dend_32 { pt3dadd( 398.344, 300.696, 26.32, 0.5338 ) }
    dend_32 { pt3dadd( 399.374, 300.23, 26.3203, 0.5084 ) }
    dend_32 { pt3dadd( 400.516, 300.234, 26.3225, 0.4576 ) }
    dend_32 { pt3dadd( 401.62, 300.492, 26.3362, 0.4068 ) }
    dend_32 { pt3dadd( 402.75, 300.592, 26.4396, 0.3814 ) }
    dend_32 { pt3dadd( 403.754, 300.257, 27.2121, 0.4322 ) }
    dend_32 { pt3dadd( 404.857, 300.014, 27.44, 0.4576 ) }
    dend_32 { pt3dadd( 405.938, 299.649, 27.44, 0.5338 ) }
    dend_32 { pt3dadd( 407.017, 299.277, 27.44, 0.5338 ) }
    dend_32 { pt3dadd( 408.117, 299.21, 27.44, 0.5848 ) }
    dend_32 { pt3dadd( 409.228, 299.476, 27.4397, 0.6102 ) }
    dend_32 { pt3dadd( 410.341, 299.411, 27.4383, 0.6864 ) }
    dend_32 { pt3dadd( 411.473, 299.284, 27.4291, 0.7372 ) }
    dend_32 { pt3dadd( 412.613, 299.361, 27.3647, 0.7626 ) }
    dend_32 { pt3dadd( 413.657, 299.753, 26.964, 0.8136 ) }
    dend_32 { pt3dadd( 414.594, 300.35, 26.404, 0.8644 ) }
    dend_32 { pt3dadd( 415.558, 300.959, 26.4421, 0.8898 ) }
    dend_32 { pt3dadd( 416.5, 301.549, 26.9539, 0.8136 ) }
    dend_32 { pt3dadd( 417.515, 301.954, 27.7161, 0.7118 ) }
    dend_32 { pt3dadd( 418.583, 302.016, 28.674, 0.6864 ) }
    dend_32 { pt3dadd( 419.694, 302.017, 28.7588, 0.7118 ) }
    dend_32 { pt3dadd( 420.833, 302.024, 28.7146, 0.788 ) }
    dend_32 { pt3dadd( 421.932, 302.072, 29.4011, 0.7626 ) }
    dend_32 { pt3dadd( 423.004, 302.393, 29.4619, 0.6864 ) }
    dend_32 { pt3dadd( 423.896, 303.016, 29.1718, 0.5338 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 88/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 369.814, 294.959, 16.3394, 0.6356 ) }
    dend_29 { pt3dadd( 370.291, 294.019, 16.9789, 0.6864 ) }
    dend_29 { pt3dadd( 369.9, 292.99, 16.7647, 0.7118 ) }
    dend_29 { pt3dadd( 369.293, 292.048, 16.2669, 0.6356 ) }
    dend_29 { pt3dadd( 368.832, 291.007, 16.2386, 0.5848 ) }
    dend_29 { pt3dadd( 368.155, 290.089, 16.2338, 0.5338 ) }
    dend_29 { pt3dadd( 367.421, 289.212, 16.2131, 0.5848 ) }
    dend_29 { pt3dadd( 367.051, 288.137, 16.0695, 0.6356 ) }
    dend_29 { pt3dadd( 366.774, 287.073, 15.4104, 0.6864 ) }
    dend_29 { pt3dadd( 366.706, 285.961, 15.6948, 0.661 ) }
    dend_29 { pt3dadd( 366.325, 285.153, 17.2788, 0.661 ) }
    dend_29 { pt3dadd( 365.466, 284.48, 18.0449, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_29 { pt3dadd( 364.68, 283.68, 18.4416, 0.6864 ) }
    dend_29 { pt3dadd( 364.464, 282.57, 18.2283, 0.6864 ) }
    dend_29 { pt3dadd( 364.389, 281.506, 17.2707, 0.6356 ) }
    dend_29 { pt3dadd( 363.995, 280.535, 16.3033, 0.5592 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 4/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 365.968, 308.469, 11.0905, 0.6864 ) }
    dend_26 { pt3dadd( 366.985, 308.917, 10.5952, 0.7118 ) }
    dend_26 { pt3dadd( 367.909, 309.577, 10.4121, 0.7118 ) }
    dend_26 { pt3dadd( 368.695, 310.332, 9.6555, 0.6864 ) }
    dend_26 { pt3dadd( 369.542, 311.095, 9.6718, 0.661 ) }
    dend_26 { pt3dadd( 370.357, 311.823, 10.3275, 0.6102 ) }
    dend_26 { pt3dadd( 371.311, 312.224, 9.4976, 0.5084 ) }
    dend_26 { pt3dadd( 371.457, 312.516, 10.0178, 0.483 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 12/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 363.9, 308.23, 14.6927, 0.6102 ) }
    dend_17 { pt3dadd( 362.841, 308.422, 15.5322, 0.5592 ) }
    dend_17 { pt3dadd( 361.733, 308.421, 15.4596, 0.5592 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 15/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 365.293, 296.733, 17.3614, 0.7118 ) }
    dend_8 { pt3dadd( 364.796, 295.707, 17.3687, 0.661 ) }
    dend_8 { pt3dadd( 363.962, 294.941, 17.4118, 0.6356 ) }
    dend_8 { pt3dadd( 363.118, 294.185, 17.6364, 0.6102 ) }
    dend_8 { pt3dadd( 362.315, 293.612, 18.8622, 0.5592 ) }
    dend_8 { pt3dadd( 361.434, 292.982, 19.5642, 0.5592 ) }
    dend_8 { pt3dadd( 360.661, 292.14, 19.6, 0.6102 ) }
    dend_8 { pt3dadd( 360.061, 291.171, 19.6, 0.6864 ) }
    dend_8 { pt3dadd( 359.501, 290.178, 19.6, 0.7118 ) }
    dend_8 { pt3dadd( 358.881, 289.219, 19.6, 0.7372 ) }
    dend_8 { pt3dadd( 358.182, 288.161, 19.6, 0.7118 ) }
    dend_8 { pt3dadd( 357.224, 287.556, 19.6, 0.7626 ) }
    dend_8 { pt3dadd( 356.118, 287.277, 19.6003, 0.7626 ) }
    dend_8 { pt3dadd( 355.059, 286.873, 19.6011, 0.8136 ) }
    dend_8 { pt3dadd( 354.092, 286.265, 19.6056, 0.788 ) }
    dend_8 { pt3dadd( 353.053, 285.799, 19.6316, 0.7626 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 377.216, 302.098, 22.8984, 0.6356 ) }
    dend_3 { pt3dadd( 378.335, 302.057, 22.5089, 0.5592 ) }
    dend_3 { pt3dadd( 379.372, 302.308, 21.6303, 0.5338 ) }
    dend_3 { pt3dadd( 380.332, 302.759, 20.7693, 0.5084 ) }
    dend_3 { pt3dadd( 381.392, 302.456, 20.7194, 0.6102 ) }
    dend_3 { pt3dadd( 382.262, 301.714, 20.7172, 0.6864 ) }
    dend_3 { pt3dadd( 383.186, 301.043, 20.7063, 0.7372 ) }
    dend_3 { pt3dadd( 383.873, 300.14, 20.65, 0.6864 ) }
    dend_3 { pt3dadd( 384.549, 299.229, 20.3748, 0.6356 ) }
    dend_3 { pt3dadd( 385.263, 298.401, 19.6888, 0.6356 ) }
    dend_3 { pt3dadd( 386.23, 297.793, 19.6417, 0.7118 ) }
    dend_3 { pt3dadd( 387.3, 297.451, 19.8268, 0.8136 ) }
    dend_3 { pt3dadd( 388.405, 297.474, 20.4537, 0.9152 ) }
    dend_3 { pt3dadd( 389.479, 297.668, 19.8248, 0.9152 ) }
    dend_3 { pt3dadd( 390.586, 297.903, 19.5983, 0.8898 ) }
    dend_3 { pt3dadd( 391.73, 297.941, 19.588, 0.788 ) }
    dend_3 { pt3dadd( 392.835, 298.187, 19.5283, 0.7372 ) }
    dend_3 { pt3dadd( 393.936, 298.366, 19.0795, 0.6864 ) }
    dend_3 { pt3dadd( 394.989, 298.415, 17.9981, 0.7118 ) }
    dend_3 { pt3dadd( 396.052, 298.721, 17.6296, 0.7372 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 51/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 370.955, 310.929, 20.4602, 0.7118 ) }
    dend_0 { pt3dadd( 371.137, 311.946, 19.4076, 0.7626 ) }
    dend_0 { pt3dadd( 371.419, 313.0, 18.6116, 0.7626 ) }
    dend_0 { pt3dadd( 371.793, 314.065, 18.5282, 0.788 ) }
    dend_0 { pt3dadd( 372.387, 315.035, 18.7222, 0.839 ) }
    dend_0 { pt3dadd( 372.939, 315.967, 19.537, 0.8898 ) }
    dend_0 { pt3dadd( 373.415, 316.923, 20.4772, 0.9152 ) }
    dend_0 { pt3dadd( 373.903, 317.946, 20.713, 0.9152 ) }
    dend_0 { pt3dadd( 374.236, 319.036, 20.6746, 0.9152 ) }
    dend_0 { pt3dadd( 374.53, 320.131, 20.4386, 0.8898 ) }
    dend_0 { pt3dadd( 374.572, 321.184, 19.3911, 0.839 ) }
    dend_0 { pt3dadd( 374.733, 322.133, 17.9536, 0.7626 ) }
    dend_0 { pt3dadd( 375.086, 322.997, 16.4203, 0.661 ) }
    dend_0 { pt3dadd( 375.358, 324.091, 16.1605, 0.5848 ) }
    dend_0 { pt3dadd( 375.133, 325.173, 15.6979, 0.5084 ) }
    dend_0 { pt3dadd( 375.225, 326.268, 15.1522, 0.5084 ) }
    dend_0 { pt3dadd( 375.972, 327.116, 15.302, 0.483 ) }
    dend_0 { pt3dadd( 376.823, 327.774, 16.1179, 0.5338 ) }
    dend_0 { pt3dadd( 377.658, 328.541, 16.436, 0.5338 ) }
    dend_0 { pt3dadd( 378.26, 329.436, 17.2155, 0.5592 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 71/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 368.613, 310.599, 19.6, 0.7118 ) }
    apic_0 { pt3dadd( 368.988, 311.67, 19.6003, 0.9152 ) }
    apic_0 { pt3dadd( 368.914, 312.806, 19.6028, 1.0424 ) }
    apic_0 { pt3dadd( 368.375, 313.802, 19.614, 1.0168 ) }
    apic_0 { pt3dadd( 367.843, 314.813, 19.6734, 0.9406 ) }
    apic_0 { pt3dadd( 367.625, 315.903, 20.1603, 0.8898 ) }
    apic_0 { pt3dadd( 367.28, 316.82, 21.4337, 0.9406 ) }
    apic_0 { pt3dadd( 366.795, 317.804, 21.84, 1.0424 ) }
    apic_0 { pt3dadd( 366.788, 318.947, 21.8403, 1.144 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 80/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 381.195, 330.563, 20.72, 1.0 ) }
    axon_1 { pt3dadd( 387.036, 344.379, 20.72, 1.0 ) }
    axon_1 { pt3dadd( 392.877, 358.195, 20.72, 1.0 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 83/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 365.508, 289.191, 34.1911, 0.3814 ) }
    dend_48 { pt3dadd( 365.61, 288.517, 34.1911, 0.5848 ) }
    dend_48 { pt3dadd( 365.622, 287.805, 33.9422, 0.5848 ) }
    dend_48 { pt3dadd( 366.08, 286.737, 33.7243, 0.7626 ) }
    dend_48 { pt3dadd( 366.08, 285.898, 34.1911, 0.5338 ) }
    dend_48 { pt3dadd( 366.271, 285.771, 35.6532, 0.5338 ) }
    dend_48 { pt3dadd( 366.118, 285.733, 36.96, 0.6864 ) }
    dend_48 { pt3dadd( 365.749, 285.39, 37.9557, 0.3814 ) }
    dend_48 { pt3dadd( 366.182, 284.856, 38.1111, 0.7372 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 92/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 365.508, 289.191, 34.1911, 0.3814 ) }
    dend_47 { pt3dadd( 365.635, 288.644, 34.16, 0.6864 ) }
    dend_47 { pt3dadd( 366.093, 288.174, 34.9689, 0.6102 ) }
    dend_47 { pt3dadd( 366.321, 288.072, 35.28, 0.2542 ) }
    dend_47 { pt3dadd( 366.779, 287.881, 35.9332, 0.5084 ) }
    dend_47 { pt3dadd( 367.376, 287.83, 36.8668, 0.5084 ) }
    dend_47 { pt3dadd( 367.605, 288.263, 37.4889, 0.483 ) }
    dend_47 { pt3dadd( 367.923, 288.656, 36.4932, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_47 { pt3dadd( 368.635, 288.555, 35.84, 0.5848 ) }
    dend_47 { pt3dadd( 369.169, 288.402, 36.12, 0.483 ) }
    dend_47 { pt3dadd( 369.664, 288.479, 35.84, 0.5338 ) }
    dend_47 { pt3dadd( 370.084, 288.326, 36.7732, 0.5592 ) }
    dend_47 { pt3dadd( 370.084, 288.059, 38.92, 0.4576 ) }
    dend_47 { pt3dadd( 370.084, 288.059, 40.6, 0.5338 ) }
    dend_47 { pt3dadd( 370.236, 288.174, 41.6268, 0.5084 ) }
    dend_47 { pt3dadd( 370.656, 288.288, 41.72, 0.3814 ) }
    dend_47 { pt3dadd( 370.999, 288.288, 41.72, 0.2796 ) }
    dend_47 { pt3dadd( 371.228, 288.288, 41.72, 0.2288 ) }
    dend_47 { pt3dadd( 371.457, 288.288, 41.72, 0.2542 ) }
    dend_47 { pt3dadd( 371.469, 288.39, 40.6, 0.661 ) }
    dend_47 { pt3dadd( 371.342, 288.186, 39.2311, 0.6102 ) }
    dend_47 { pt3dadd( 371.648, 288.44, 38.64, 0.4576 ) }
    dend_47 { pt3dadd( 371.927, 288.733, 38.64, 0.4576 ) }
    dend_47 { pt3dadd( 372.22, 288.402, 38.2668, 0.2542 ) }
    dend_47 { pt3dadd( 372.486, 288.059, 38.08, 0.305 ) }
    dend_47 { pt3dadd( 372.867, 287.754, 38.08, 0.3304 ) }
    dend_47 { pt3dadd( 373.173, 287.83, 38.64, 0.3814 ) }
    dend_47 { pt3dadd( 373.173, 287.83, 39.48, 0.2796 ) }
    dend_47 { pt3dadd( 373.173, 287.678, 40.7868, 0.4576 ) }
    dend_47 { pt3dadd( 373.096, 287.678, 42.0, 0.6102 ) }
    dend_47 { pt3dadd( 373.084, 287.703, 43.5868, 0.661 ) }
    dend_47 { pt3dadd( 373.402, 287.144, 43.4, 0.6102 ) }
    dend_47 { pt3dadd( 373.732, 286.801, 43.7111, 0.4576 ) }
    dend_47 { pt3dadd( 373.821, 286.763, 44.8, 0.305 ) }
    dend_47 { pt3dadd( 374.215, 286.393, 45.2668, 0.8898 ) }
    dend_47 { pt3dadd( 374.889, 286.0, 45.64, 0.483 ) }
    dend_47 { pt3dadd( 375.346, 285.657, 45.64, 0.483 ) }
    dend_47 { pt3dadd( 375.791, 285.301, 46.48, 0.661 ) }
    dend_47 { pt3dadd( 376.211, 284.92, 46.48, 0.6102 ) }
    dend_47 { pt3dadd( 376.808, 284.627, 47.1022, 0.7118 ) }
    dend_47 { pt3dadd( 377.113, 284.729, 48.3468, 0.4576 ) }
    dend_47 { pt3dadd( 377.545, 284.754, 48.2532, 0.2542 ) }
    dend_47 { pt3dadd( 377.736, 284.856, 47.8489, 0.2288 ) }
    dend_47 { pt3dadd( 377.965, 284.856, 47.0711, 0.5084 ) }
    dend_47 { pt3dadd( 378.499, 284.983, 47.4132, 0.6864 ) }
    dend_47 { pt3dadd( 378.778, 285.428, 48.44, 0.6356 ) }
    dend_47 { pt3dadd( 379.122, 285.733, 48.8132, 0.5084 ) }
    dend_47 { pt3dadd( 379.567, 285.886, 49.0311, 0.483 ) }
    dend_47 { pt3dadd( 380.075, 285.962, 49.84, 0.6356 ) }
    dend_47 { pt3dadd( 380.609, 286.458, 50.4, 0.8644 ) }
    dend_47 { pt3dadd( 381.32, 286.699, 50.8668, 0.7118 ) }
    dend_47 { pt3dadd( 381.969, 286.724, 51.6443, 0.5338 ) }
    dend_47 { pt3dadd( 382.287, 287.144, 51.4268, 0.5592 ) }
    dend_47 { pt3dadd( 382.693, 286.826, 51.24, 0.2796 ) }
    dend_47 { pt3dadd( 382.999, 286.458, 51.5511, 0.4322 ) }
    dend_47 { pt3dadd( 382.909, 286.254, 52.7332, 0.7118 ) }
    dend_47 { pt3dadd( 383.049, 285.466, 53.48, 0.9914 ) }
    dend_47 { pt3dadd( 383.456, 284.729, 54.04, 0.6864 ) }
    dend_47 { pt3dadd( 384.066, 284.207, 54.3511, 0.6356 ) }
    dend_47 { pt3dadd( 384.461, 284.017, 55.16, 0.3814 ) }
    dend_47 { pt3dadd( 384.956, 283.254, 55.16, 0.4576 ) }
    dend_47 { pt3dadd( 385.083, 282.695, 55.16, 0.6102 ) }
    dend_47 { pt3dadd( 385.223, 282.441, 56.0622, 0.5338 ) }
    dend_47 { pt3dadd( 385.07, 282.11, 57.4, 0.3814 ) }
    dend_47 { pt3dadd( 384.842, 281.653, 57.4, 0.2542 ) }
    dend_47 { pt3dadd( 384.879, 281.246, 57.3689, 0.3814 ) }
    dend_47 { pt3dadd( 384.956, 280.738, 56.84, 0.5338 ) }
    dend_47 { pt3dadd( 384.956, 280.14, 56.9022, 0.6356 ) }
    dend_47 { pt3dadd( 384.842, 279.403, 56.6532, 0.6864 ) }
    dend_47 { pt3dadd( 385.223, 278.716, 57.12, 0.7118 ) }
    dend_47 { pt3dadd( 385.655, 278.196, 56.3732, 0.788 ) }
    dend_47 { pt3dadd( 385.871, 277.484, 56.9957, 0.6356 ) }
    dend_47 { pt3dadd( 385.986, 276.886, 57.7732, 0.661 ) }
    dend_47 { pt3dadd( 386.329, 276.353, 58.7068, 0.661 ) }
    dend_47 { pt3dadd( 386.468, 275.806, 58.9868, 0.356 ) }
    dend_47 { pt3dadd( 386.888, 275.691, 58.8, 0.356 ) }
    dend_47 { pt3dadd( 387.015, 275.348, 58.5511, 0.356 ) }
    dend_47 { pt3dadd( 387.117, 275.043, 58.6132, 0.2542 ) }
    dend_47 { pt3dadd( 387.371, 274.573, 58.8, 0.2288 ) }
    dend_47 { pt3dadd( 387.511, 274.001, 58.5822, 0.2542 ) }
    dend_47 { pt3dadd( 387.702, 273.53, 58.24, 0.305 ) }
    dend_47 { pt3dadd( 387.702, 273.187, 58.24, 0.3814 ) }
    dend_47 { pt3dadd( 387.829, 272.958, 57.4311, 0.483 ) }
    dend_47 { pt3dadd( 388.045, 272.386, 57.12, 0.4576 ) }
    dend_47 { pt3dadd( 388.184, 271.84, 56.84, 0.2796 ) }
    dend_47 { pt3dadd( 388.363, 271.675, 56.84, 0.2288 ) }
    dend_47 { pt3dadd( 388.681, 271.573, 56.7468, 0.2542 ) }
    dend_47 { pt3dadd( 388.769, 271.141, 56.7778, 0.3814 ) }
    dend_47 { pt3dadd( 388.96, 270.899, 57.12, 0.3814 ) }
    dend_47 { pt3dadd( 389.074, 270.315, 57.3689, 0.305 ) }
    dend_47 { pt3dadd( 389.189, 269.857, 57.9289, 0.2542 ) }
    dend_47 { pt3dadd( 389.341, 269.45, 58.24, 0.2542 ) }
    dend_47 { pt3dadd( 389.507, 269.081, 57.8668, 0.4322 ) }
    dend_47 { pt3dadd( 389.659, 268.738, 57.68, 0.5084 ) }
    dend_47 { pt3dadd( 389.761, 268.332, 58.1157, 0.2796 ) }
    dend_47 { pt3dadd( 389.85, 267.9, 58.24, 0.305 ) }
    dend_47 { pt3dadd( 390.181, 267.658, 57.68, 0.6864 ) }
    dend_47 { pt3dadd( 390.46, 266.908, 57.96, 0.7626 ) }
    dend_47 { pt3dadd( 391.096, 266.298, 57.7111, 0.7372 ) }
    dend_47 { pt3dadd( 391.248, 265.967, 59.0489, 0.4068 ) }
    dend_47 { pt3dadd( 391.553, 265.637, 59.4532, 0.4322 ) }
    dend_47 { pt3dadd( 391.934, 265.421, 59.6089, 0.5592 ) }
    dend_47 { pt3dadd( 392.392, 264.95, 59.36, 0.7372 ) }
    dend_47 { pt3dadd( 392.926, 264.378, 59.2668, 0.7626 ) }
    dend_47 { pt3dadd( 393.307, 263.959, 58.3332, 0.6864 ) }
    dend_47 { pt3dadd( 393.307, 263.272, 58.8932, 0.5848 ) }
    dend_47 { pt3dadd( 393.511, 262.789, 58.9868, 0.483 ) }
    dend_47 { pt3dadd( 393.688, 262.357, 58.8, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_47 { pt3dadd( 393.867, 262.09, 59.3289, 0.4068 ) }
    dend_47 { pt3dadd( 393.879, 261.454, 59.2357, 0.6102 ) }
    dend_47 { pt3dadd( 393.994, 260.946, 58.8, 0.483 ) }
    dend_47 { pt3dadd( 393.981, 260.26, 59.6711, 0.4068 ) }
    dend_47 { pt3dadd( 394.324, 259.981, 59.7332, 0.5084 ) }
    dend_47 { pt3dadd( 394.667, 259.218, 59.36, 0.305 ) }
    dend_47 { pt3dadd( 394.871, 259.078, 59.36, 0.2542 ) }
    dend_47 { pt3dadd( 394.909, 258.773, 59.36, 0.2288 ) }
    dend_47 { pt3dadd( 394.921, 258.48, 59.4532, 0.2288 ) }
    dend_47 { pt3dadd( 395.023, 258.303, 60.1689, 0.2288 ) }
    dend_47 { pt3dadd( 395.023, 258.201, 60.76, 0.2288 ) }
    dend_47 { pt3dadd( 395.036, 258.061, 61.2268, 0.2288 ) }
    dend_47 { pt3dadd( 395.265, 257.743, 61.5689, 0.2796 ) }
    dend_47 { pt3dadd( 395.557, 257.591, 61.6, 0.305 ) }
    dend_47 { pt3dadd( 395.811, 257.502, 61.6, 0.2542 ) }
    dend_47 { pt3dadd( 395.938, 257.286, 61.6, 0.2288 ) }
    dend_47 { pt3dadd( 395.938, 257.057, 61.6, 0.2288 ) }
    dend_47 { pt3dadd( 395.938, 256.688, 61.8178, 0.3814 ) }
    dend_47 { pt3dadd( 395.837, 256.358, 62.44, 0.3814 ) }
    dend_47 { pt3dadd( 395.938, 255.913, 62.72, 0.2542 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 20/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 352.584, 276.911, 21.8551, 0.7372 ) }
    dend_41 { pt3dadd( 351.272, 275.961, 21.9923, 0.7626 ) }
    dend_41 { pt3dadd( 350.424, 275.275, 22.6968, 0.788 ) }
    dend_41 { pt3dadd( 349.965, 274.332, 23.7132, 0.7372 ) }
    dend_41 { pt3dadd( 350.162, 273.382, 24.53, 0.6864 ) }
    dend_41 { pt3dadd( 350.146, 272.322, 23.7986, 0.7118 ) }
    dend_41 { pt3dadd( 349.645, 271.304, 24.0814, 0.7118 ) }
    dend_41 { pt3dadd( 348.941, 270.404, 24.087, 0.6864 ) }
    dend_41 { pt3dadd( 348.691, 269.641, 22.96, 0.5338 ) }
    dend_41 { pt3dadd( 348.119, 269.298, 22.68, 0.6864 ) }
    dend_41 { pt3dadd( 347.624, 268.649, 22.68, 0.839 ) }
    dend_41 { pt3dadd( 346.873, 268.408, 22.8668, 0.483 ) }
    dend_41 { pt3dadd( 346.365, 268.077, 22.68, 0.5084 ) }
    dend_41 { pt3dadd( 345.946, 267.582, 22.96, 0.4068 ) }
    dend_41 { pt3dadd( 345.628, 267.328, 23.8, 0.6102 ) }
    dend_41 { pt3dadd( 345.081, 266.845, 25.2, 0.7118 ) }
    dend_41 { pt3dadd( 344.56, 266.323, 24.8889, 0.5084 ) }
    dend_41 { pt3dadd( 344.115, 266.094, 26.04, 0.6864 ) }
    dend_41 { pt3dadd( 343.734, 265.637, 27.0668, 0.4068 ) }
    dend_41 { pt3dadd( 343.645, 265.599, 27.8757, 0.305 ) }
    dend_41 { pt3dadd( 343.543, 265.485, 29.0268, 0.3814 ) }
    dend_41 { pt3dadd( 343.441, 265.497, 30.0532, 0.4322 ) }
    dend_41 { pt3dadd( 343.289, 265.649, 30.7068, 0.4068 ) }
    dend_41 { pt3dadd( 342.755, 265.853, 30.8, 0.4322 ) }
    dend_41 { pt3dadd( 342.285, 265.637, 30.52, 0.6864 ) }
    dend_41 { pt3dadd( 342.183, 265.04, 30.6132, 0.4576 ) }
    dend_41 { pt3dadd( 342.514, 264.518, 31.4222, 0.4322 ) }
    dend_41 { pt3dadd( 342.272, 264.277, 31.92, 0.2542 ) }
    dend_41 { pt3dadd( 341.916, 264.264, 32.1378, 0.2542 ) }
    dend_41 { pt3dadd( 341.28, 264.264, 32.8222, 0.5592 ) }
    dend_41 { pt3dadd( 340.696, 264.137, 33.04, 0.7372 ) }
    dend_41 { pt3dadd( 340.149, 263.654, 32.2622, 0.661 ) }
    dend_41 { pt3dadd( 340.111, 263.361, 33.3511, 0.356 ) }
    dend_41 { pt3dadd( 339.972, 263.349, 34.0978, 0.5084 ) }
    dend_41 { pt3dadd( 339.323, 263.705, 34.72, 0.6864 ) }
    dend_41 { pt3dadd( 338.586, 263.692, 34.5332, 0.6102 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 56/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 352.584, 276.911, 21.8551, 0.7372 ) }
    dend_38 { pt3dadd( 352.583, 276.006, 21.8498, 0.305 ) }
    dend_38 { pt3dadd( 352.597, 274.862, 21.9257, 0.3814 ) }
    dend_38 { pt3dadd( 352.678, 273.751, 22.4409, 0.5592 ) }
    dend_38 { pt3dadd( 352.987, 272.677, 22.8752, 0.6356 ) }
    dend_38 { pt3dadd( 352.995, 271.557, 22.6083, 0.6864 ) }
    dend_38 { pt3dadd( 352.749, 270.46, 22.955, 0.6356 ) }
    dend_38 { pt3dadd( 352.558, 269.336, 22.96, 0.6356 ) }
    dend_38 { pt3dadd( 352.439, 268.199, 22.96, 0.5848 ) }
    dend_38 { pt3dadd( 351.948, 267.17, 22.96, 0.5592 ) }
    dend_38 { pt3dadd( 351.313, 266.219, 22.96, 0.5338 ) }
    dend_38 { pt3dadd( 350.843, 265.181, 22.96, 0.5084 ) }
    dend_38 { pt3dadd( 350.651, 264.055, 22.96, 0.4322 ) }
    dend_38 { pt3dadd( 350.18, 263.034, 22.96, 0.356 ) }
    dend_38 { pt3dadd( 349.413, 262.185, 22.96, 0.3304 ) }
    dend_38 { pt3dadd( 348.703, 261.29, 22.96, 0.356 ) }
    dend_38 { pt3dadd( 348.65, 260.18, 22.9603, 0.4322 ) }
    dend_38 { pt3dadd( 348.91, 259.071, 22.9611, 0.4322 ) }
    dend_38 { pt3dadd( 348.902, 257.928, 22.9687, 0.4576 ) }
    dend_38 { pt3dadd( 348.801, 256.789, 23.0177, 0.4322 ) }
    dend_38 { pt3dadd( 348.372, 255.765, 23.4668, 0.5084 ) }
    dend_38 { pt3dadd( 347.826, 254.812, 24.0951, 0.5592 ) }
    dend_38 { pt3dadd( 347.185, 253.867, 24.1556, 0.5848 ) }
    dend_38 { pt3dadd( 346.672, 252.867, 24.5378, 0.5592 ) }
    dend_38 { pt3dadd( 346.164, 251.887, 25.058, 0.5084 ) }
    dend_38 { pt3dadd( 345.194, 251.383, 24.421, 0.5084 ) }
    dend_38 { pt3dadd( 344.477, 250.536, 24.1814, 0.483 ) }
    dend_38 { pt3dadd( 344.342, 249.445, 24.7528, 0.5338 ) }
    dend_38 { pt3dadd( 344.33, 248.324, 25.24, 0.5084 ) }
    dend_38 { pt3dadd( 344.254, 247.186, 25.447, 0.483 ) }
    dend_38 { pt3dadd( 343.85, 246.185, 26.1976, 0.3814 ) }
    dend_38 { pt3dadd( 343.102, 245.323, 26.32, 0.3814 ) }
    dend_38 { pt3dadd( 342.514, 244.358, 26.32, 0.4322 ) }
    dend_38 { pt3dadd( 342.208, 244.13, 26.2268, 0.4322 ) }
    dend_38 { pt3dadd( 341.865, 243.965, 25.7911, 0.3814 ) }
    dend_38 { pt3dadd( 341.827, 243.558, 25.76, 0.483 ) }
    dend_38 { pt3dadd( 341.942, 242.948, 25.5732, 0.3814 ) }
    dend_38 { pt3dadd( 341.84, 242.553, 25.8532, 0.3304 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 94/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 423.896, 303.016, 29.1718, 0.5338 ) }
    dend_34 { pt3dadd( 423.397, 302.018, 29.279, 0.3814 ) }
    dend_34 { pt3dadd( 423.492, 301.382, 29.6058, 0.3304 ) }
    dend_34 { pt3dadd( 423.898, 300.315, 29.6806, 0.356 ) }
    dend_34 { pt3dadd( 424.606, 299.44, 29.6839, 0.4322 ) }
    dend_34 { pt3dadd( 425.221, 298.48, 29.7055, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( 425.949, 297.604, 29.8054, 0.5338 ) }
    dend_34 { pt3dadd( 426.864, 296.987, 30.3293, 0.5338 ) }
    dend_34 { pt3dadd( 427.893, 296.551, 30.8017, 0.5338 ) }
    dend_34 { pt3dadd( 428.761, 295.836, 30.8106, 0.5338 ) }
    dend_34 { pt3dadd( 429.408, 294.893, 30.8552, 0.5338 ) }
    dend_34 { pt3dadd( 430.014, 293.931, 31.078, 0.5338 ) }
    dend_34 { pt3dadd( 430.652, 293.079, 32.0099, 0.5338 ) }
    dend_34 { pt3dadd( 432.037, 292.865, 33.8481, 0.6102 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 8/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 423.896, 303.016, 29.1718, 0.5338 ) }
    dend_33 { pt3dadd( 424.754, 303.738, 29.675, 0.661 ) }
    dend_33 { pt3dadd( 425.557, 304.549, 29.7951, 0.661 ) }
    dend_33 { pt3dadd( 426.285, 305.394, 30.2484, 0.6356 ) }
    dend_33 { pt3dadd( 427.123, 306.022, 31.0783, 0.5848 ) }
    dend_33 { pt3dadd( 427.664, 306.134, 30.8, 0.5592 ) }
    dend_33 { pt3dadd( 428.808, 306.138, 30.8, 0.5084 ) }
    dend_33 { pt3dadd( 429.952, 306.158, 30.8, 0.5084 ) }
    dend_33 { pt3dadd( 431.086, 306.288, 30.8, 0.5338 ) }
    dend_33 { pt3dadd( 432.125, 306.759, 30.8, 0.5592 ) }
    dend_33 { pt3dadd( 433.177, 307.203, 30.8003, 0.5592 ) }
    dend_33 { pt3dadd( 434.121, 307.833, 30.8011, 0.5592 ) }
    dend_33 { pt3dadd( 434.944, 308.626, 30.8045, 0.6864 ) }
    dend_33 { pt3dadd( 435.784, 309.403, 30.8185, 0.8644 ) }
    dend_33 { pt3dadd( 436.725, 310.045, 30.8913, 0.966 ) }
    dend_33 { pt3dadd( 437.66, 310.672, 31.2606, 0.9152 ) }
    dend_33 { pt3dadd( 438.637, 311.2, 31.864, 0.788 ) }
    dend_33 { pt3dadd( 439.613, 311.789, 31.915, 0.7626 ) }
    dend_33 { pt3dadd( 440.686, 312.153, 31.8898, 0.788 ) }
    dend_33 { pt3dadd( 441.767, 312.489, 31.7279, 0.8136 ) }
    dend_33 { pt3dadd( 442.775, 312.921, 31.0344, 0.7626 ) }
    dend_33 { pt3dadd( 443.652, 313.64, 30.8, 0.7372 ) }
    dend_33 { pt3dadd( 444.549, 314.341, 30.8, 0.7372 ) }
    dend_33 { pt3dadd( 445.563, 314.865, 30.8, 0.8136 ) }
    dend_33 { pt3dadd( 446.587, 315.368, 30.8, 0.8136 ) }
    dend_33 { pt3dadd( 447.601, 315.889, 30.8003, 0.8644 ) }
    dend_33 { pt3dadd( 448.596, 316.449, 30.8011, 0.788 ) }
    dend_33 { pt3dadd( 449.51, 317.135, 30.8056, 0.788 ) }
    dend_33 { pt3dadd( 450.529, 317.616, 30.8319, 0.7118 ) }
    dend_33 { pt3dadd( 451.602, 317.97, 30.989, 0.7372 ) }
    dend_33 { pt3dadd( 452.54, 318.514, 31.7559, 0.7372 ) }
    dend_33 { pt3dadd( 453.483, 318.92, 32.916, 0.7626 ) }
    dend_33 { pt3dadd( 454.462, 319.499, 33.04, 0.7118 ) }
    dend_33 { pt3dadd( 455.542, 319.838, 33.04, 0.6356 ) }
    dend_33 { pt3dadd( 456.685, 319.862, 33.04, 0.483 ) }
    dend_33 { pt3dadd( 456.431, 320.434, 32.48, 0.3814 ) }
    dend_33 { pt3dadd( 456.342, 320.879, 32.7911, 0.3304 ) }
    dend_33 { pt3dadd( 456.456, 321.083, 33.1332, 0.4068 ) }
    dend_33 { pt3dadd( 456.761, 321.121, 33.4132, 0.305 ) }
    dend_33 { pt3dadd( 457.105, 321.159, 33.6, 0.356 ) }
    dend_33 { pt3dadd( 457.384, 321.451, 33.32, 0.5848 ) }
    dend_33 { pt3dadd( 457.791, 321.502, 32.76, 0.4322 ) }
    dend_33 { pt3dadd( 457.867, 321.884, 32.48, 0.4576 ) }
    dend_33 { pt3dadd( 458.401, 321.807, 32.2, 0.4576 ) }
    dend_33 { pt3dadd( 458.935, 321.922, 31.1732, 0.7118 ) }
    dend_33 { pt3dadd( 459.736, 322.15, 31.5468, 0.839 ) }
    dend_33 { pt3dadd( 460.537, 322.417, 31.08, 0.7118 ) }
    dend_33 { pt3dadd( 460.982, 322.837, 31.2043, 0.788 ) }
    dend_33 { pt3dadd( 461.159, 322.849, 32.76, 0.4576 ) }
    dend_33 { pt3dadd( 461.591, 322.837, 33.2889, 0.3814 ) }
    dend_33 { pt3dadd( 461.858, 322.913, 33.0711, 0.4576 ) }
    dend_33 { pt3dadd( 462.214, 322.951, 33.6932, 0.4322 ) }
    dend_33 { pt3dadd( 462.519, 322.951, 33.6, 0.2542 ) }
    dend_33 { pt3dadd( 462.812, 322.951, 33.4757, 0.2542 ) }
    dend_33 { pt3dadd( 463.091, 323.066, 32.76, 0.305 ) }
    dend_33 { pt3dadd( 463.434, 323.078, 32.2311, 0.4322 ) }
    dend_33 { pt3dadd( 463.765, 323.18, 32.5111, 0.5084 ) }
    dend_33 { pt3dadd( 463.905, 323.18, 33.2889, 0.2542 ) }
    dend_33 { pt3dadd( 464.083, 323.282, 33.7243, 0.2796 ) }
    dend_33 { pt3dadd( 464.426, 323.218, 34.16, 0.2796 ) }
    dend_33 { pt3dadd( 464.693, 323.409, 34.44, 0.2796 ) }
    dend_33 { pt3dadd( 465.074, 323.485, 35.0, 0.2796 ) }
    dend_33 { pt3dadd( 465.456, 323.675, 34.72, 0.2796 ) }
    dend_33 { pt3dadd( 465.786, 323.879, 34.6268, 0.2796 ) }
    dend_33 { pt3dadd( 465.926, 324.133, 33.9111, 0.2288 ) }
    dend_33 { pt3dadd( 466.066, 324.172, 33.6932, 0.2288 ) }
    dend_33 { pt3dadd( 466.421, 324.095, 33.3511, 0.2288 ) }
    dend_33 { pt3dadd( 466.702, 324.108, 33.2268, 0.2542 ) }
    dend_33 { pt3dadd( 466.854, 324.324, 32.4489, 0.4068 ) }
    dend_33 { pt3dadd( 467.095, 324.438, 31.9822, 0.5084 ) }
    dend_33 { pt3dadd( 467.299, 324.705, 32.7289, 0.483 ) }
    dend_33 { pt3dadd( 467.655, 324.819, 32.6357, 0.4068 ) }
    dend_33 { pt3dadd( 467.998, 325.061, 32.3868, 0.5084 ) }
    dend_33 { pt3dadd( 468.43, 325.239, 32.1068, 0.6864 ) }
    dend_33 { pt3dadd( 469.09, 325.354, 31.7643, 0.6356 ) }
    dend_33 { pt3dadd( 469.65, 325.43, 31.92, 0.5848 ) }
    dend_33 { pt3dadd( 470.159, 325.455, 32.8532, 0.6102 ) }
    dend_33 { pt3dadd( 470.629, 325.366, 33.32, 0.5848 ) }
    dend_33 { pt3dadd( 471.087, 325.582, 33.6311, 0.6356 ) }
    dend_33 { pt3dadd( 471.595, 326.027, 33.8178, 0.6864 ) }
    dend_33 { pt3dadd( 472.002, 326.421, 34.9378, 0.5338 ) }
    dend_33 { pt3dadd( 472.205, 326.65, 35.56, 0.3814 ) }
    dend_33 { pt3dadd( 472.472, 326.726, 35.56, 0.305 ) }
    dend_33 { pt3dadd( 472.904, 326.726, 35.2178, 0.2796 ) }
    dend_33 { pt3dadd( 473.273, 326.917, 34.6268, 0.3304 ) }
    dend_33 { pt3dadd( 473.464, 327.222, 34.16, 0.483 ) }
    dend_33 { pt3dadd( 473.845, 327.565, 34.2532, 0.5848 ) }
    dend_33 { pt3dadd( 474.074, 327.985, 34.9378, 0.3304 ) }
    dend_33 { pt3dadd( 474.074, 328.405, 34.6268, 0.4322 ) }
    dend_33 { pt3dadd( 474.036, 328.748, 34.44, 0.5084 ) }
    dend_33 { pt3dadd( 474.442, 328.989, 35.0, 0.6102 ) }
    dend_33 { pt3dadd( 474.722, 329.472, 35.0932, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_33 { pt3dadd( 475.103, 329.472, 35.28, 0.4322 ) }
    dend_33 { pt3dadd( 475.446, 329.472, 35.28, 0.4068 ) }
    dend_33 { pt3dadd( 475.891, 329.599, 35.0, 0.6864 ) }
    dend_33 { pt3dadd( 476.031, 330.146, 35.0, 0.5084 ) }
    dend_33 { pt3dadd( 476.399, 330.387, 34.5332, 0.4576 ) }
    dend_33 { pt3dadd( 476.628, 330.578, 33.04, 0.661 ) }
    dend_33 { pt3dadd( 477.15, 331.277, 33.1332, 0.5338 ) }
    dend_33 { pt3dadd( 477.416, 331.722, 33.3511, 0.5084 ) }
    dend_33 { pt3dadd( 477.658, 332.103, 33.7868, 0.4576 ) }
    dend_33 { pt3dadd( 477.963, 332.561, 33.88, 0.7118 ) }
    dend_33 { pt3dadd( 478.217, 332.981, 32.7289, 0.5338 ) }
    dend_33 { pt3dadd( 478.421, 333.324, 32.1068, 0.5084 ) }
    dend_33 { pt3dadd( 478.599, 333.832, 31.8268, 0.4576 ) }
    dend_33 { pt3dadd( 478.662, 334.264, 31.92, 0.483 ) }
    dend_33 { pt3dadd( 479.184, 334.76, 32.1689, 0.5848 ) }
    dend_33 { pt3dadd( 479.476, 335.04, 32.2311, 0.5338 ) }
    dend_33 { pt3dadd( 479.781, 335.319, 32.2, 0.483 ) }
    dend_33 { pt3dadd( 480.022, 335.65, 32.1378, 0.4576 ) }
    dend_33 { pt3dadd( 480.366, 336.107, 31.64, 0.3304 ) }
    dend_33 { pt3dadd( 480.811, 336.386, 32.1068, 0.4068 ) }
    dend_33 { pt3dadd( 480.938, 336.756, 32.8532, 0.5592 ) }
    dend_33 { pt3dadd( 481.027, 337.162, 33.6, 0.6864 ) }
    dend_33 { pt3dadd( 481.688, 337.607, 33.6932, 0.4576 ) }
    dend_33 { pt3dadd( 481.891, 338.306, 33.5689, 0.6102 ) }
    dend_33 { pt3dadd( 482.044, 338.992, 33.0089, 0.5592 ) }
    dend_33 { pt3dadd( 482.082, 339.539, 33.04, 0.5848 ) }
    dend_33 { pt3dadd( 482.489, 339.781, 32.9468, 0.5084 ) }
    dend_33 { pt3dadd( 482.845, 340.136, 32.7289, 0.5084 ) }
    dend_33 { pt3dadd( 483.111, 340.429, 32.8222, 0.5338 ) }
    dend_33 { pt3dadd( 483.34, 340.798, 33.04, 0.4322 ) }
    dend_33 { pt3dadd( 483.645, 340.989, 32.76, 0.4068 ) }
    dend_33 { pt3dadd( 483.569, 341.471, 32.7289, 0.4322 ) }
    dend_33 { pt3dadd( 484.128, 341.688, 32.1068, 0.5848 ) }
    dend_33 { pt3dadd( 484.357, 342.069, 32.48, 0.6102 ) }
    dend_33 { pt3dadd( 484.573, 342.539, 32.76, 0.483 ) }
    dend_33 { pt3dadd( 485.006, 342.857, 32.8843, 0.4068 ) }
    dend_33 { pt3dadd( 485.069, 342.857, 33.5689, 0.4576 ) }
    dend_33 { pt3dadd( 485.399, 343.2, 33.6, 0.3304 ) }
    dend_33 { pt3dadd( 485.869, 343.836, 33.9732, 0.4068 ) }
    dend_33 { pt3dadd( 486.379, 344.051, 34.16, 0.4068 ) }
    dend_33 { pt3dadd( 486.658, 344.344, 34.44, 0.4322 ) }
    dend_33 { pt3dadd( 487.267, 344.675, 33.6622, 0.5592 ) }
    dend_33 { pt3dadd( 487.966, 344.687, 32.3243, 0.4322 ) }
    dend_33 { pt3dadd( 488.374, 344.687, 31.64, 0.3814 ) }
    dend_33 { pt3dadd( 488.933, 344.802, 31.6711, 0.661 ) }
    dend_33 { pt3dadd( 489.594, 344.954, 31.92, 0.7372 ) }
    dend_33 { pt3dadd( 489.937, 345.336, 33.04, 0.4576 ) }
    dend_33 { pt3dadd( 490.013, 345.704, 33.1022, 0.356 ) }
    dend_33 { pt3dadd( 490.09, 345.831, 32.8222, 0.2542 ) }
    dend_33 { pt3dadd( 490.09, 346.174, 33.5378, 0.6864 ) }
    dend_33 { pt3dadd( 490.318, 346.746, 33.32, 0.5592 ) }
    dend_33 { pt3dadd( 490.712, 347.191, 33.5068, 0.5084 ) }
    dend_33 { pt3dadd( 491.107, 347.522, 33.5068, 0.4576 ) }
    dend_33 { pt3dadd( 491.412, 347.712, 33.04, 0.4322 ) }
    dend_33 { pt3dadd( 491.577, 348.043, 33.5068, 0.6102 ) }
    dend_33 { pt3dadd( 491.907, 348.271, 32.8222, 0.5084 ) }
    dend_33 { pt3dadd( 492.365, 348.475, 32.2, 0.4576 ) }
    dend_33 { pt3dadd( 492.95, 348.577, 32.2, 0.3304 ) }
    dend_33 { pt3dadd( 493.28, 348.818, 31.92, 0.5084 ) }
    dend_33 { pt3dadd( 493.623, 349.276, 31.36, 0.5592 ) }
    dend_33 { pt3dadd( 494.144, 349.708, 31.5468, 0.661 ) }
    dend_33 { pt3dadd( 494.958, 349.873, 31.9511, 0.5338 ) }
    dend_33 { pt3dadd( 495.238, 350.064, 32.76, 0.483 ) }
    dend_33 { pt3dadd( 495.81, 350.293, 33.32, 0.5084 ) }
    dend_33 { pt3dadd( 496.458, 350.293, 32.6668, 0.483 ) }
    dend_33 { pt3dadd( 496.966, 350.293, 32.4489, 0.5848 ) }
    dend_33 { pt3dadd( 497.526, 350.522, 31.64, 0.483 ) }
    dend_33 { pt3dadd( 497.983, 350.522, 31.64, 0.4576 ) }
    dend_33 { pt3dadd( 498.453, 350.522, 32.1689, 0.4322 ) }
    dend_33 { pt3dadd( 498.924, 350.713, 32.1689, 0.4068 ) }
    dend_33 { pt3dadd( 499.216, 350.903, 31.1111, 0.5338 ) }
    dend_33 { pt3dadd( 499.699, 351.131, 31.2668, 0.5848 ) }
    dend_33 { pt3dadd( 500.144, 351.131, 30.6757, 0.483 ) }
    dend_33 { pt3dadd( 500.309, 351.335, 30.6757, 0.2796 ) }
    dend_33 { pt3dadd( 500.577, 351.437, 30.8932, 0.5084 ) }
    dend_33 { pt3dadd( 501.122, 351.628, 31.0489, 0.5084 ) }
    dend_33 { pt3dadd( 501.758, 351.78, 31.08, 0.305 ) }
    dend_33 { pt3dadd( 502.102, 351.78, 31.08, 0.2542 ) }
    dend_33 { pt3dadd( 502.445, 351.78, 30.8, 0.4068 ) }
    dend_33 { pt3dadd( 502.788, 351.996, 30.8311, 0.483 ) }
    dend_33 { pt3dadd( 503.233, 352.047, 31.5778, 0.5084 ) }
    dend_33 { pt3dadd( 503.589, 352.2, 32.0132, 0.4576 ) }
    dend_33 { pt3dadd( 503.818, 352.772, 32.1068, 0.5084 ) }
    dend_33 { pt3dadd( 504.504, 352.924, 31.36, 0.6102 ) }
    dend_33 { pt3dadd( 505.063, 352.695, 30.8311, 0.661 ) }
    dend_33 { pt3dadd( 505.241, 352.911, 31.5468, 0.2796 ) }
    dend_33 { pt3dadd( 505.483, 352.962, 31.6089, 0.3304 ) }
    dend_33 { pt3dadd( 505.889, 352.962, 31.0178, 0.4068 ) }
    dend_33 { pt3dadd( 506.22, 352.847, 30.9868, 0.4576 ) }
    dend_33 { pt3dadd( 506.792, 353.038, 30.8, 0.2542 ) }
    dend_33 { pt3dadd( 507.135, 353.038, 30.8, 0.2288 ) }
    dend_33 { pt3dadd( 507.428, 353.038, 30.9243, 0.2288 ) }
    dend_33 { pt3dadd( 507.568, 353.076, 31.3289, 0.2542 ) }
    dend_33 { pt3dadd( 507.911, 353.292, 31.36, 0.305 ) }
    dend_33 { pt3dadd( 508.088, 353.394, 30.9243, 0.4322 ) }
    dend_33 { pt3dadd( 508.329, 353.598, 30.8932, 0.4322 ) }
    dend_33 { pt3dadd( 508.622, 353.763, 31.2668, 0.3304 ) }
    dend_33 { pt3dadd( 508.901, 353.941, 31.1732, 0.3304 ) }
    dend_33 { pt3dadd( 509.487, 354.03, 31.1111, 0.4576 ) }
    dend_33 { pt3dadd( 510.02, 353.966, 31.5468, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_33 { pt3dadd( 510.567, 354.182, 31.64, 0.5084 ) }
    dend_33 { pt3dadd( 511.127, 354.195, 31.36, 0.483 ) }
    dend_33 { pt3dadd( 511.368, 354.602, 30.8932, 0.305 ) }
    dend_33 { pt3dadd( 511.482, 354.678, 31.2668, 0.2542 ) }
    dend_33 { pt3dadd( 511.813, 354.754, 31.3289, 0.2288 ) }
    dend_33 { pt3dadd( 511.953, 354.792, 30.9243, 0.2288 ) }
    dend_33 { pt3dadd( 512.423, 354.958, 30.8, 0.2542 ) }
    dend_33 { pt3dadd( 512.868, 355.098, 31.0489, 0.3304 ) }
    dend_33 { pt3dadd( 513.313, 355.174, 30.7068, 0.356 ) }
    dend_33 { pt3dadd( 513.618, 355.364, 30.52, 0.4068 ) }
    dend_33 { pt3dadd( 513.872, 355.644, 30.3332, 0.4322 ) }
    dend_33 { pt3dadd( 514.241, 356.0, 30.8, 0.356 ) }
    dend_33 { pt3dadd( 514.571, 356.013, 30.8, 0.3814 ) }
    dend_33 { pt3dadd( 515.029, 356.177, 30.9557, 0.5084 ) }
    dend_33 { pt3dadd( 515.461, 356.279, 31.6089, 0.5084 ) }
    dend_33 { pt3dadd( 515.969, 356.547, 30.5511, 0.661 ) }
    dend_33 { pt3dadd( 516.605, 356.724, 30.52, 0.6864 ) }
    dend_33 { pt3dadd( 517.063, 357.411, 30.52, 0.6864 ) }
    dend_33 { pt3dadd( 517.774, 357.716, 30.4889, 0.6864 ) }
    dend_33 { pt3dadd( 518.155, 358.186, 30.7068, 0.7118 ) }
    dend_33 { pt3dadd( 518.754, 358.542, 30.3332, 0.661 ) }
    dend_33 { pt3dadd( 519.249, 359.0, 30.24, 0.6864 ) }
    dend_33 { pt3dadd( 519.884, 359.254, 30.7689, 0.5338 ) }
    dend_33 { pt3dadd( 520.52, 359.33, 30.8, 0.6102 ) }
    dend_33 { pt3dadd( 521.206, 359.381, 30.6443, 0.7372 ) }
    dend_33 { pt3dadd( 521.995, 359.686, 30.52, 0.7118 ) }
    dend_33 { pt3dadd( 522.948, 360.22, 30.8, 0.6102 ) }
    dend_33 { pt3dadd( 523.457, 360.36, 30.8932, 0.5592 ) }
    dend_33 { pt3dadd( 523.863, 360.601, 30.6132, 0.5084 ) }
    dend_33 { pt3dadd( 524.283, 360.792, 30.7068, 0.4068 ) }
    dend_33 { pt3dadd( 524.753, 360.97, 30.3332, 0.305 ) }
    dend_33 { pt3dadd( 525.134, 361.237, 30.24, 0.305 ) }
    dend_33 { pt3dadd( 525.401, 361.529, 30.5511, 0.3814 ) }
    dend_33 { pt3dadd( 525.884, 361.86, 31.08, 0.4576 ) }
    dend_33 { pt3dadd( 526.278, 362.153, 31.36, 0.5084 ) }
    dend_33 { pt3dadd( 526.723, 362.496, 31.3289, 0.5084 ) }
    dend_33 { pt3dadd( 527.168, 362.75, 31.08, 0.483 ) }
    dend_33 { pt3dadd( 527.511, 362.991, 31.1111, 0.483 ) }
    dend_33 { pt3dadd( 527.931, 363.245, 31.36, 0.5084 ) }
    dend_33 { pt3dadd( 528.261, 363.563, 31.1732, 0.5338 ) }
    dend_33 { pt3dadd( 528.553, 363.869, 31.3911, 0.483 ) }
    dend_33 { pt3dadd( 528.986, 364.008, 31.6089, 0.4576 ) }
    dend_33 { pt3dadd( 529.52, 363.754, 31.36, 0.483 ) }
    dend_33 { pt3dadd( 530.065, 363.487, 31.6089, 0.5848 ) }
    dend_33 { pt3dadd( 530.384, 363.322, 32.1068, 0.483 ) }
    dend_33 { pt3dadd( 531.261, 363.106, 31.9511, 0.5338 ) }
    dend_33 { pt3dadd( 531.375, 362.698, 32.3868, 0.5338 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 47/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 363.995, 280.535, 16.3033, 0.5592 ) }
    dend_31 { pt3dadd( 364.437, 279.699, 16.1787, 0.3814 ) }
    dend_31 { pt3dadd( 365.382, 279.082, 15.8925, 0.2796 ) }
    dend_31 { pt3dadd( 366.271, 278.547, 14.8299, 0.2288 ) }
    dend_31 { pt3dadd( 366.98, 277.721, 14.1145, 0.2542 ) }
    dend_31 { pt3dadd( 368.004, 277.276, 14.2201, 0.2796 ) }
    dend_31 { pt3dadd( 369.068, 277.026, 14.9316, 0.305 ) }
    dend_31 { pt3dadd( 370.177, 276.976, 14.6076, 0.2796 ) }
    dend_31 { pt3dadd( 371.141, 277.477, 13.8779, 0.305 ) }
    dend_31 { pt3dadd( 372.039, 277.961, 12.8458, 0.3814 ) }
    dend_31 { pt3dadd( 372.938, 277.557, 11.7804, 0.5338 ) }
    dend_31 { pt3dadd( 373.828, 276.847, 11.5702, 0.6356 ) }
    dend_31 { pt3dadd( 374.848, 276.682, 10.8923, 0.6864 ) }
    dend_31 { pt3dadd( 375.897, 277.111, 10.8816, 0.6864 ) }
    dend_31 { pt3dadd( 376.955, 277.118, 10.9878, 0.661 ) }
    dend_31 { pt3dadd( 377.907, 277.722, 10.612, 0.6356 ) }
    dend_31 { pt3dadd( 378.953, 277.836, 10.4723, 0.6356 ) }
    dend_31 { pt3dadd( 379.837, 277.199, 9.7614, 0.6356 ) }
    dend_31 { pt3dadd( 380.485, 276.427, 8.5117, 0.6356 ) }
    dend_31 { pt3dadd( 381.208, 275.553, 8.1942, 0.5848 ) }
    dend_31 { pt3dadd( 381.783, 274.6, 7.6182, 0.5592 ) }
    dend_31 { pt3dadd( 382.399, 273.673, 7.8949, 0.5592 ) }
    dend_31 { pt3dadd( 382.846, 272.768, 7.2335, 0.5848 ) }
    dend_31 { pt3dadd( 382.293, 271.875, 6.7155, 0.6356 ) }
    dend_31 { pt3dadd( 381.176, 271.814, 6.3557, 0.6356 ) }
    dend_31 { pt3dadd( 380.037, 271.814, 6.16, 0.6356 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 73/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 363.995, 280.535, 16.3033, 0.5592 ) }
    dend_30 { pt3dadd( 362.845, 279.351, 15.4428, 0.661 ) }
    dend_30 { pt3dadd( 362.007, 278.589, 15.1197, 0.7118 ) }
    dend_30 { pt3dadd( 361.054, 277.966, 15.1189, 0.788 ) }
    dend_30 { pt3dadd( 360.097, 277.35, 15.1147, 0.7626 ) }
    dend_30 { pt3dadd( 359.414, 276.452, 15.0931, 0.7118 ) }
    dend_30 { pt3dadd( 359.024, 275.388, 14.9551, 0.6102 ) }
    dend_30 { pt3dadd( 358.96, 274.293, 14.2377, 0.5338 ) }
    dend_30 { pt3dadd( 358.815, 273.171, 13.9955, 0.4576 ) }
    dend_30 { pt3dadd( 358.232, 272.192, 13.9706, 0.3814 ) }
    dend_30 { pt3dadd( 357.275, 271.604, 13.8015, 0.305 ) }
    dend_30 { pt3dadd( 356.76, 270.749, 12.7725, 0.2542 ) }
    dend_30 { pt3dadd( 356.866, 269.711, 11.8051, 0.2542 ) }
    dend_30 { pt3dadd( 356.807, 268.608, 11.7306, 0.305 ) }
    dend_30 { pt3dadd( 356.382, 267.552, 11.578, 0.4068 ) }
    dend_30 { pt3dadd( 356.331, 266.466, 10.8385, 0.5084 ) }
    dend_30 { pt3dadd( 356.812, 265.47, 10.6414, 0.6102 ) }
    dend_30 { pt3dadd( 357.833, 265.044, 10.6487, 0.6356 ) }
    dend_30 { pt3dadd( 358.945, 265.265, 10.6935, 0.6102 ) }
    dend_30 { pt3dadd( 360.014, 265.152, 11.268, 0.5084 ) }
    dend_30 { pt3dadd( 360.743, 265.985, 11.256, 0.483 ) }
    dend_30 { pt3dadd( 361.425, 266.708, 10.2561, 0.483 ) }
    dend_30 { pt3dadd( 362.494, 266.539, 9.5348, 0.5592 ) }
    dend_30 { pt3dadd( 363.598, 266.269, 9.3481, 0.5338 ) }
    dend_30 { pt3dadd( 364.596, 265.927, 8.5198, 0.483 ) }
    dend_30 { pt3dadd( 364.982, 264.945, 7.6742, 0.4068 ) }
    dend_30 { pt3dadd( 365.264, 263.871, 7.2792, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_30 { pt3dadd( 366.049, 263.052, 7.275, 0.4576 ) }
    dend_30 { pt3dadd( 366.626, 262.13, 7.2453, 0.5084 ) }
    dend_30 { pt3dadd( 366.636, 261.023, 7.058, 0.5338 ) }
    dend_30 { pt3dadd( 367.218, 260.101, 6.3297, 0.5338 ) }
    dend_30 { pt3dadd( 368.144, 259.441, 6.16, 0.5592 ) }
    dend_30 { pt3dadd( 369.037, 258.726, 6.1597, 0.5592 ) }
    dend_30 { pt3dadd( 370.077, 258.259, 6.1583, 0.5848 ) }
    dend_30 { pt3dadd( 370.965, 257.544, 6.1524, 0.5338 ) }
    dend_30 { pt3dadd( 371.768, 256.73, 6.1314, 0.5084 ) }
    dend_30 { pt3dadd( 372.551, 255.897, 6.0365, 0.4322 ) }
    dend_30 { pt3dadd( 373.192, 254.993, 5.5384, 0.4322 ) }
    dend_30 { pt3dadd( 373.63, 253.968, 5.04, 0.4576 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 12/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 371.457, 312.516, 10.0178, 0.483 ) }
    dend_28 { pt3dadd( 371.533, 312.248, 11.0132, 0.4322 ) }
    dend_28 { pt3dadd( 371.686, 312.083, 11.48, 0.483 ) }
    dend_28 { pt3dadd( 372.295, 311.956, 10.7643, 0.5848 ) }
    dend_28 { pt3dadd( 372.397, 311.384, 9.6132, 0.6102 ) }
    dend_28 { pt3dadd( 372.334, 311.13, 8.4, 0.4322 ) }
    dend_28 { pt3dadd( 372.715, 311.016, 7.3732, 0.6864 ) }
    dend_28 { pt3dadd( 373.439, 310.71, 6.8132, 0.788 ) }
    dend_28 { pt3dadd( 374.24, 310.138, 6.2532, 0.966 ) }
    dend_28 { pt3dadd( 375.016, 310.355, 6.72, 0.839 ) }
    dend_28 { pt3dadd( 375.677, 310.329, 7.0622, 0.6102 ) }
    dend_28 { pt3dadd( 376.16, 310.253, 6.1911, 0.6102 ) }
    dend_28 { pt3dadd( 376.719, 310.367, 7.28, 0.5338 ) }
    dend_28 { pt3dadd( 376.973, 310.278, 8.4, 0.5338 ) }
    dend_28 { pt3dadd( 377.52, 309.795, 7.84, 0.8136 ) }
    dend_28 { pt3dadd( 377.978, 309.059, 7.4043, 0.788 ) }
    dend_28 { pt3dadd( 378.232, 308.346, 7.5289, 0.6356 ) }
    dend_28 { pt3dadd( 378.587, 307.749, 7.0622, 0.6102 ) }
    dend_28 { pt3dadd( 379.045, 307.659, 6.16, 0.6864 ) }
    dend_28 { pt3dadd( 379.477, 307.813, 4.4178, 0.5084 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 32/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 371.457, 312.516, 10.0178, 0.483 ) }
    dend_27 { pt3dadd( 371.864, 312.897, 9.7068, 0.6864 ) }
    dend_27 { pt3dadd( 372.867, 313.075, 9.24, 0.7118 ) }
    dend_27 { pt3dadd( 373.516, 313.227, 9.24, 0.7626 ) }
    dend_27 { pt3dadd( 374.304, 313.329, 9.52, 0.661 ) }
    dend_27 { pt3dadd( 374.889, 313.227, 9.52, 0.5848 ) }
    dend_27 { pt3dadd( 375.194, 313.379, 8.68, 0.5084 ) }
    dend_27 { pt3dadd( 375.537, 313.57, 8.2132, 0.4068 ) }
    dend_27 { pt3dadd( 375.804, 313.647, 8.3068, 0.483 ) }
    dend_27 { pt3dadd( 376.262, 313.914, 8.12, 0.5592 ) }
    dend_27 { pt3dadd( 376.719, 314.359, 7.8711, 0.4576 ) }
    dend_27 { pt3dadd( 377.164, 314.575, 7.9332, 0.3304 ) }
    dend_27 { pt3dadd( 377.304, 314.702, 8.12, 0.2796 ) }
    dend_27 { pt3dadd( 377.736, 314.638, 8.5243, 0.3304 ) }
    dend_27 { pt3dadd( 377.876, 314.816, 8.96, 0.4576 ) }
    dend_27 { pt3dadd( 378.423, 314.931, 8.68, 0.5848 ) }
    dend_27 { pt3dadd( 378.766, 314.829, 7.8711, 0.4322 ) }
    dend_27 { pt3dadd( 379.3, 314.956, 8.2132, 0.4068 ) }
    dend_27 { pt3dadd( 379.541, 315.324, 8.68, 0.4068 ) }
    dend_27 { pt3dadd( 379.731, 315.21, 9.1778, 0.4068 ) }
    dend_27 { pt3dadd( 380.266, 315.286, 8.68, 0.3814 ) }
    dend_27 { pt3dadd( 380.621, 315.286, 8.9289, 0.356 ) }
    dend_27 { pt3dadd( 381.283, 315.299, 8.68, 0.4576 ) }
    dend_27 { pt3dadd( 381.817, 315.439, 8.3689, 0.5338 ) }
    dend_27 { pt3dadd( 382.325, 315.858, 7.84, 0.5084 ) }
    dend_27 { pt3dadd( 382.604, 316.316, 7.1243, 0.4576 ) }
    dend_27 { pt3dadd( 383.227, 316.545, 7.0311, 0.5848 ) }
    dend_27 { pt3dadd( 383.926, 316.659, 7.28, 0.8136 ) }
    dend_27 { pt3dadd( 384.613, 316.697, 7.3732, 0.5592 ) }
    dend_27 { pt3dadd( 384.765, 316.774, 8.3068, 0.3814 ) }
    dend_27 { pt3dadd( 385.07, 316.875, 8.9289, 0.4576 ) }
    dend_27 { pt3dadd( 385.68, 317.308, 8.4, 0.8136 ) }
    dend_27 { pt3dadd( 386.393, 317.396, 8.4, 0.7626 ) }
    dend_27 { pt3dadd( 386.901, 317.498, 7.9332, 0.5338 ) }
    dend_27 { pt3dadd( 387.13, 317.803, 7.0, 0.4576 ) }
    dend_27 { pt3dadd( 387.575, 318.121, 7.0932, 0.5338 ) }
    dend_27 { pt3dadd( 387.473, 318.49, 7.0, 0.4322 ) }
    dend_27 { pt3dadd( 387.612, 318.808, 6.72, 0.4068 ) }
    dend_27 { pt3dadd( 388.159, 319.099, 7.4668, 0.9406 ) }
    dend_27 { pt3dadd( 388.667, 319.812, 5.6, 0.966 ) }
    dend_27 { pt3dadd( 389.087, 320.422, 5.6, 0.7118 ) }
    dend_27 { pt3dadd( 389.863, 321.019, 5.6, 0.5084 ) }
    dend_27 { pt3dadd( 390.066, 321.616, 5.6, 0.4322 ) }
    dend_27 { pt3dadd( 390.104, 322.379, 5.6, 0.4322 ) }
    dend_27 { pt3dadd( 390.409, 322.875, 5.6, 0.5592 ) }
    dend_27 { pt3dadd( 390.79, 323.294, 5.6, 0.7118 ) }
    dend_27 { pt3dadd( 391.464, 323.638, 5.6, 0.6356 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 79/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 361.733, 308.421, 15.4596, 0.5592 ) }
    dend_21 { pt3dadd( 361.265, 308.496, 13.3297, 0.6102 ) }
    dend_21 { pt3dadd( 360.233, 308.901, 12.8713, 0.661 ) }
    dend_21 { pt3dadd( 359.376, 309.636, 12.8313, 0.6102 ) }
    dend_21 { pt3dadd( 359.24, 310.703, 12.6101, 0.6102 ) }
    dend_21 { pt3dadd( 359.185, 311.77, 11.8364, 0.6102 ) }
    dend_21 { pt3dadd( 358.586, 312.739, 11.7191, 0.661 ) }
    dend_21 { pt3dadd( 358.134, 313.779, 11.5192, 0.6356 ) }
    dend_21 { pt3dadd( 358.121, 314.855, 10.8637, 0.661 ) }
    dend_21 { pt3dadd( 358.344, 315.935, 11.1877, 0.661 ) }
    dend_21 { pt3dadd( 358.214, 317.014, 10.4294, 0.6864 ) }
    dend_21 { pt3dadd( 358.459, 318.05, 9.653, 0.7626 ) }
    dend_21 { pt3dadd( 359.011, 319.046, 9.5981, 0.788 ) }
    dend_21 { pt3dadd( 359.484, 320.053, 9.9907, 0.8136 ) }
    dend_21 { pt3dadd( 359.754, 321.124, 10.6168, 0.7118 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 94/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 361.733, 308.421, 15.4596, 0.5592 ) }
    dend_18 { pt3dadd( 361.229, 308.42, 15.0774, 0.4576 ) }
    dend_18 { pt3dadd( 360.138, 308.406, 14.2579, 0.483 ) }
    dend_18 { pt3dadd( 359.01, 308.311, 13.9681, 0.483 ) }
    dend_18 { pt3dadd( 358.192, 307.63, 13.7631, 0.4576 ) }
    dend_18 { pt3dadd( 358.21, 306.563, 12.9615, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( 357.818, 305.508, 12.6697, 0.5084 ) }
    dend_18 { pt3dadd( 357.107, 304.72, 11.8555, 0.5084 ) }
    dend_18 { pt3dadd( 355.678, 303.901, 11.3876, 0.5848 ) }
    dend_18 { pt3dadd( 354.762, 303.278, 10.7444, 0.7118 ) }
    dend_18 { pt3dadd( 353.882, 302.552, 10.6803, 0.788 ) }
    dend_18 { pt3dadd( 352.93, 301.924, 10.8458, 0.7626 ) }
    dend_18 { pt3dadd( 352.055, 301.275, 11.5998, 0.6864 ) }
    dend_18 { pt3dadd( 351.409, 300.413, 12.4054, 0.6356 ) }
    dend_18 { pt3dadd( 350.827, 299.467, 11.9428, 0.6102 ) }
    dend_18 { pt3dadd( 350.03, 298.666, 11.5676, 0.6102 ) }
    dend_18 { pt3dadd( 349.076, 298.107, 10.9724, 0.6102 ) }
    dend_18 { pt3dadd( 348.038, 297.719, 11.335, 0.6356 ) }
    dend_18 { pt3dadd( 347.101, 297.1, 11.7891, 0.661 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 353.053, 285.799, 19.6316, 0.7626 ) }
    dend_16 { pt3dadd( 351.731, 285.632, 18.6074, 0.483 ) }
    dend_16 { pt3dadd( 350.639, 285.682, 19.2662, 0.4322 ) }
    dend_16 { pt3dadd( 349.539, 285.887, 19.6028, 0.356 ) }
    dend_16 { pt3dadd( 348.449, 285.569, 19.616, 0.3814 ) }
    dend_16 { pt3dadd( 347.329, 285.365, 19.7014, 0.4576 ) }
    dend_16 { pt3dadd( 346.23, 285.21, 19.882, 0.5848 ) }
    dend_16 { pt3dadd( 345.17, 285.597, 19.5101, 0.6102 ) }
    dend_16 { pt3dadd( 344.203, 286.083, 18.8625, 0.5084 ) }
    dend_16 { pt3dadd( 343.276, 286.635, 18.0835, 0.4068 ) }
    dend_16 { pt3dadd( 342.296, 286.232, 17.6285, 0.3814 ) }
    dend_16 { pt3dadd( 341.495, 285.496, 18.3711, 0.483 ) }
    dend_16 { pt3dadd( 340.586, 284.816, 18.478, 0.5338 ) }
    dend_16 { pt3dadd( 339.465, 284.685, 18.4668, 0.5848 ) }
    dend_16 { pt3dadd( 338.38, 285.0, 18.4019, 0.5338 ) }
    dend_16 { pt3dadd( 337.378, 285.5, 17.9942, 0.483 ) }
    dend_16 { pt3dadd( 336.481, 286.005, 16.8302, 0.4068 ) }
    dend_16 { pt3dadd( 335.469, 286.375, 16.4567, 0.4322 ) }
    dend_16 { pt3dadd( 334.406, 286.122, 16.1605, 0.5084 ) }
    dend_16 { pt3dadd( 333.502, 285.552, 15.2653, 0.5848 ) }
    dend_16 { pt3dadd( 332.735, 284.722, 15.12, 0.6356 ) }
    dend_16 { pt3dadd( 331.695, 284.261, 15.12, 0.6864 ) }
    dend_16 { pt3dadd( 330.559, 284.171, 15.1194, 0.7372 ) }
    dend_16 { pt3dadd( 329.415, 284.173, 15.1161, 0.7118 ) }
    dend_16 { pt3dadd( 328.271, 284.197, 15.0945, 0.661 ) }
    dend_16 { pt3dadd( 327.151, 284.372, 14.9576, 0.5848 ) }
    dend_16 { pt3dadd( 326.056, 284.543, 14.429, 0.5592 ) }
    dend_16 { pt3dadd( 325.041, 284.157, 15.1858, 0.5084 ) }
    dend_16 { pt3dadd( 324.062, 283.686, 15.9496, 0.483 ) }
    dend_16 { pt3dadd( 323.008, 283.323, 16.3475, 0.483 ) }
    dend_16 { pt3dadd( 322.217, 282.555, 16.8966, 0.5338 ) }
    dend_16 { pt3dadd( 321.146, 282.339, 16.7804, 0.5592 ) }
    dend_16 { pt3dadd( 320.029, 282.338, 16.2554, 0.6102 ) }
    dend_16 { pt3dadd( 318.885, 282.336, 16.3512, 0.6356 ) }
    dend_16 { pt3dadd( 317.781, 282.316, 16.9719, 0.7372 ) }
    dend_16 { pt3dadd( 316.664, 282.182, 17.3597, 0.788 ) }
    dend_16 { pt3dadd( 315.701, 281.597, 17.3583, 0.788 ) }
    dend_16 { pt3dadd( 314.87, 280.811, 17.353, 0.7372 ) }
    dend_16 { pt3dadd( 314.012, 280.056, 17.3298, 0.6356 ) }
    dend_16 { pt3dadd( 313.558, 279.721, 15.96, 0.5338 ) }
    dend_16 { pt3dadd( 312.884, 279.708, 15.96, 0.4068 ) }
    dend_16 { pt3dadd( 311.854, 279.708, 15.96, 0.6864 ) }
    dend_16 { pt3dadd( 311.054, 279.708, 15.96, 0.839 ) }
    dend_16 { pt3dadd( 309.361, 279.992, 16.952, 0.6102 ) }
    dend_16 { pt3dadd( 308.308, 280.329, 16.4251, 0.5084 ) }
    dend_16 { pt3dadd( 307.341, 280.938, 16.2789, 0.5338 ) }
    dend_16 { pt3dadd( 306.393, 281.574, 16.2481, 0.5848 ) }
    dend_16 { pt3dadd( 305.445, 282.204, 16.1703, 0.6102 ) }
    dend_16 { pt3dadd( 304.611, 282.893, 15.3776, 0.661 ) }
    dend_16 { pt3dadd( 303.531, 283.082, 15.1603, 0.7372 ) }
    dend_16 { pt3dadd( 302.456, 282.844, 14.5771, 0.8136 ) }
    dend_16 { pt3dadd( 301.463, 282.605, 13.4299, 0.839 ) }
    dend_16 { pt3dadd( 300.378, 282.349, 13.8678, 0.8136 ) }
    dend_16 { pt3dadd( 299.348, 281.885, 13.9762, 0.788 ) }
    dend_16 { pt3dadd( 298.367, 281.298, 13.9955, 0.7372 ) }
    dend_16 { pt3dadd( 297.432, 280.639, 13.9992, 0.7372 ) }
    dend_16 { pt3dadd( 296.481, 280.013, 13.8491, 0.7372 ) }
    dend_16 { pt3dadd( 295.48, 279.573, 13.1135, 0.7118 ) }
    dend_16 { pt3dadd( 294.558, 278.945, 12.6207, 0.5848 ) }
    dend_16 { pt3dadd( 294.237, 278.702, 10.239, 0.4322 ) }
    dend_16 { pt3dadd( 293.706, 278.897, 10.5356, 0.3814 ) }
    dend_16 { pt3dadd( 292.639, 278.604, 10.64, 0.4576 ) }
    dend_16 { pt3dadd( 291.554, 278.327, 10.64, 0.5592 ) }
    dend_16 { pt3dadd( 290.456, 278.616, 10.6397, 0.6102 ) }
    dend_16 { pt3dadd( 289.322, 278.515, 10.6389, 0.5592 ) }
    dend_16 { pt3dadd( 288.349, 277.931, 10.6344, 0.5338 ) }
    dend_16 { pt3dadd( 287.339, 277.449, 10.6086, 0.5084 ) }
    dend_16 { pt3dadd( 286.302, 277.856, 10.4555, 0.5848 ) }
    dend_16 { pt3dadd( 285.354, 278.42, 9.807, 0.6356 ) }
    dend_16 { pt3dadd( 284.336, 278.912, 9.5189, 0.6864 ) }
    dend_16 { pt3dadd( 283.254, 279.272, 9.5138, 0.6864 ) }
    dend_16 { pt3dadd( 282.156, 279.755, 9.478, 0.661 ) }
    dend_16 { pt3dadd( 281.074, 280.09, 9.2803, 0.6356 ) }
    dend_16 { pt3dadd( 280.022, 280.358, 8.5162, 0.6102 ) }
    dend_16 { pt3dadd( 278.899, 280.549, 8.4, 0.6356 ) }
    dend_16 { pt3dadd( 277.789, 280.779, 8.3997, 0.661 ) }
    dend_16 { pt3dadd( 276.659, 280.877, 8.398, 0.6864 ) }
    dend_16 { pt3dadd( 275.578, 280.525, 8.3885, 0.661 ) }
    dend_16 { pt3dadd( 274.506, 280.138, 8.3311, 0.6102 ) }
    dend_16 { pt3dadd( 273.466, 279.714, 7.9635, 0.5338 ) }
    dend_16 { pt3dadd( 272.367, 279.596, 7.3604, 0.4576 ) }
    dend_16 { pt3dadd( 271.237, 279.611, 7.6675, 0.3814 ) }
    dend_16 { pt3dadd( 270.14, 279.699, 8.3569, 0.356 ) }
    dend_16 { pt3dadd( 269.065, 280.076, 8.3938, 0.4068 ) }
    dend_16 { pt3dadd( 268.005, 280.491, 8.3605, 0.5338 ) }
    dend_16 { pt3dadd( 267.014, 281.053, 8.197, 0.6102 ) }
    dend_16 { pt3dadd( 265.986, 281.384, 7.4802, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_16 { pt3dadd( 264.866, 281.241, 7.3119, 0.4576 ) }
    dend_16 { pt3dadd( 263.836, 280.753, 7.4749, 0.4068 ) }
    dend_16 { pt3dadd( 262.801, 280.452, 8.0864, 0.4322 ) }
    dend_16 { pt3dadd( 261.779, 280.163, 7.1901, 0.5592 ) }
    dend_16 { pt3dadd( 260.799, 279.697, 6.4246, 0.6102 ) }
    dend_16 { pt3dadd( 259.78, 279.278, 6.9731, 0.6356 ) }
    dend_16 { pt3dadd( 258.943, 278.521, 7.2713, 0.5848 ) }
    dend_16 { pt3dadd( 258.347, 277.553, 7.2344, 0.5084 ) }
    dend_16 { pt3dadd( 257.955, 276.49, 6.9894, 0.4068 ) }
    dend_16 { pt3dadd( 257.473, 275.534, 6.151, 0.3304 ) }
    dend_16 { pt3dadd( 257.606, 274.41, 5.9766, 0.305 ) }
    dend_16 { pt3dadd( 257.701, 273.319, 5.2374, 0.3814 ) }
    dend_16 { pt3dadd( 258.086, 272.272, 5.04, 0.4576 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 353.053, 285.799, 19.6316, 0.7626 ) }
    dend_9 { pt3dadd( 352.228, 285.179, 19.7453, 0.483 ) }
    dend_9 { pt3dadd( 351.483, 284.394, 20.4893, 0.6102 ) }
    dend_9 { pt3dadd( 350.811, 283.57, 21.4133, 0.6864 ) }
    dend_9 { pt3dadd( 350.102, 282.751, 21.1492, 0.6864 ) }
    dend_9 { pt3dadd( 349.302, 281.988, 21.296, 0.7118 ) }
    dend_9 { pt3dadd( 348.464, 281.26, 21.84, 0.7372 ) }
    dend_9 { pt3dadd( 347.58, 280.534, 21.84, 0.7118 ) }
    dend_9 { pt3dadd( 346.777, 279.719, 21.84, 0.661 ) }
    dend_9 { pt3dadd( 345.999, 278.882, 21.8394, 0.6102 ) }
    dend_9 { pt3dadd( 345.323, 277.962, 21.8375, 0.6102 ) }
    dend_9 { pt3dadd( 344.466, 277.22, 21.8285, 0.6356 ) }
    dend_9 { pt3dadd( 343.558, 276.528, 21.7879, 0.6356 ) }
    dend_9 { pt3dadd( 342.711, 275.761, 21.6258, 0.661 ) }
    dend_9 { pt3dadd( 341.809, 275.127, 20.9706, 0.6356 ) }
    dend_9 { pt3dadd( 340.952, 274.383, 20.7158, 0.661 ) }
    dend_9 { pt3dadd( 340.127, 273.59, 20.7035, 0.6102 ) }
    dend_9 { pt3dadd( 339.254, 272.854, 20.6506, 0.6102 ) }
    dend_9 { pt3dadd( 338.241, 272.36, 20.3062, 0.6102 ) }
    dend_9 { pt3dadd( 337.184, 272.033, 19.689, 0.7118 ) }
    dend_9 { pt3dadd( 336.084, 271.75, 19.8643, 0.8136 ) }
    dend_9 { pt3dadd( 335.026, 271.452, 20.463, 0.8898 ) }
    dend_9 { pt3dadd( 333.953, 271.195, 19.8509, 0.8898 ) }
    dend_9 { pt3dadd( 333.015, 270.574, 19.8982, 0.8136 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 396.052, 298.721, 17.6296, 0.7372 ) }
    dend_7 { pt3dadd( 397.071, 299.23, 18.3812, 0.7118 ) }
    dend_7 { pt3dadd( 398.123, 299.314, 18.4478, 0.661 ) }
    dend_7 { pt3dadd( 398.857, 298.465, 18.3033, 0.661 ) }
    dend_7 { pt3dadd( 399.402, 297.615, 17.1847, 0.6102 ) }
    dend_7 { pt3dadd( 400.24, 297.02, 17.0352, 0.6102 ) }
    dend_7 { pt3dadd( 401.356, 296.946, 17.5784, 0.5848 ) }
    dend_7 { pt3dadd( 402.432, 296.765, 18.3554, 0.6356 ) }
    dend_7 { pt3dadd( 403.27, 296.004, 18.473, 0.6356 ) }
    dend_7 { pt3dadd( 403.83, 295.008, 18.4422, 0.661 ) }
    dend_7 { pt3dadd( 404.451, 294.056, 18.2862, 0.6864 ) }
    dend_7 { pt3dadd( 405.159, 293.223, 17.598, 0.7372 ) }
    dend_7 { pt3dadd( 405.994, 292.45, 17.6207, 0.7118 ) }
    dend_7 { pt3dadd( 406.671, 291.59, 18.3431, 0.661 ) }
    dend_7 { pt3dadd( 407.623, 290.958, 18.3403, 0.6356 ) }
    dend_7 { pt3dadd( 408.577, 290.377, 17.8424, 0.6864 ) }
    dend_7 { pt3dadd( 409.562, 289.853, 18.2073, 0.6864 ) }
    dend_7 { pt3dadd( 410.517, 289.248, 18.3616, 0.6864 ) }
    dend_7 { pt3dadd( 411.233, 288.401, 17.871, 0.7372 ) }
    dend_7 { pt3dadd( 411.886, 287.49, 17.3852, 0.8898 ) }
    dend_7 { pt3dadd( 412.501, 286.535, 17.3278, 0.9914 ) }
    dend_7 { pt3dadd( 412.851, 285.453, 17.1576, 0.9914 ) }
    dend_7 { pt3dadd( 413.04, 284.396, 16.2823, 0.9152 ) }
    dend_7 { pt3dadd( 413.315, 283.389, 15.26, 0.839 ) }
    dend_7 { pt3dadd( 413.919, 282.443, 14.8386, 0.7626 ) }
    dend_7 { pt3dadd( 414.699, 281.692, 14.0815, 0.7118 ) }
    dend_7 { pt3dadd( 415.103, 280.629, 14.0, 0.7372 ) }
    dend_7 { pt3dadd( 415.521, 279.566, 13.9994, 0.788 ) }
    dend_7 { pt3dadd( 416.286, 278.728, 13.9964, 0.839 ) }
    dend_7 { pt3dadd( 417.208, 278.056, 13.9818, 0.8136 ) }
    dend_7 { pt3dadd( 417.995, 277.228, 13.9238, 0.8136 ) }
    dend_7 { pt3dadd( 418.556, 276.26, 13.5918, 0.8136 ) }
    dend_7 { pt3dadd( 419.061, 275.288, 12.908, 0.8644 ) }
    dend_7 { pt3dadd( 419.674, 274.33, 12.6605, 0.8644 ) }
    dend_7 { pt3dadd( 420.359, 273.504, 11.8835, 0.8644 ) }
    dend_7 { pt3dadd( 421.268, 272.814, 11.7597, 0.8136 ) }
    dend_7 { pt3dadd( 422.209, 272.167, 11.7589, 0.7626 ) }
    dend_7 { pt3dadd( 423.055, 271.397, 11.7558, 0.7118 ) }
    dend_7 { pt3dadd( 423.934, 270.666, 11.7412, 0.6356 ) }
    dend_7 { pt3dadd( 425.025, 270.352, 11.6329, 0.5338 ) }
    dend_7 { pt3dadd( 426.05, 269.987, 10.9651, 0.4068 ) }
    dend_7 { pt3dadd( 426.884, 269.471, 9.6432, 0.3814 ) }
    dend_7 { pt3dadd( 426.711, 268.39, 9.5225, 0.4068 ) }
    dend_7 { pt3dadd( 426.19, 267.376, 9.5332, 0.483 ) }
    dend_7 { pt3dadd( 425.511, 266.489, 9.6611, 0.5084 ) }
    dend_7 { pt3dadd( 424.541, 266.481, 8.6503, 0.5848 ) }
    dend_7 { pt3dadd( 424.882, 265.866, 9.24, 0.661 ) }
    dend_7 { pt3dadd( 425.212, 265.052, 8.68, 0.6864 ) }
    dend_7 { pt3dadd( 425.809, 264.798, 8.8357, 0.5592 ) }
    dend_7 { pt3dadd( 426.115, 264.277, 9.1468, 0.6356 ) }
    dend_7 { pt3dadd( 427.17, 264.15, 8.96, 0.5848 ) }
    dend_7 { pt3dadd( 427.818, 264.15, 8.8668, 0.4576 ) }
    dend_7 { pt3dadd( 428.53, 263.921, 8.1511, 0.4068 ) }
    dend_7 { pt3dadd( 428.771, 263.806, 8.4, 0.4068 ) }
    dend_7 { pt3dadd( 429.229, 263.578, 8.68, 0.3814 ) }
    dend_7 { pt3dadd( 429.788, 263.234, 8.7111, 0.3814 ) }
    dend_7 { pt3dadd( 430.004, 263.018, 9.1468, 0.3814 ) }
    dend_7 { pt3dadd( 430.296, 262.916, 8.4311, 0.356 ) }
    dend_7 { pt3dadd( 430.348, 262.51, 8.4311, 0.4068 ) }
    dend_7 { pt3dadd( 430.793, 262.281, 8.12, 0.6356 ) }
    dend_7 { pt3dadd( 431.123, 262.167, 7.0311, 0.5592 ) }
    dend_7 { pt3dadd( 431.529, 261.976, 6.7511, 0.3304 ) }
    dend_7 { pt3dadd( 432.127, 261.862, 6.9068, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 432.584, 261.735, 7.4357, 0.7372 ) }
    dend_7 { pt3dadd( 433.322, 261.963, 7.9332, 0.6356 ) }
    dend_7 { pt3dadd( 433.741, 262.078, 8.5868, 0.5338 ) }
    dend_7 { pt3dadd( 434.262, 261.976, 9.52, 0.5338 ) }
    dend_7 { pt3dadd( 434.911, 261.633, 9.9868, 0.6356 ) }
    dend_7 { pt3dadd( 435.419, 261.709, 10.7022, 0.5592 ) }
    dend_7 { pt3dadd( 435.928, 261.633, 11.0443, 0.4322 ) }
    dend_7 { pt3dadd( 436.08, 261.671, 11.6978, 0.5084 ) }
    dend_7 { pt3dadd( 436.182, 261.899, 12.2889, 0.483 ) }
    dend_7 { pt3dadd( 436.588, 261.899, 12.32, 0.2542 ) }
    dend_7 { pt3dadd( 436.919, 261.862, 12.1022, 0.2542 ) }
    dend_7 { pt3dadd( 437.122, 261.785, 11.0132, 0.3814 ) }
    dend_7 { pt3dadd( 437.503, 262.155, 10.8889, 0.4576 ) }
    dend_7 { pt3dadd( 437.885, 262.319, 10.7332, 0.3814 ) }
    dend_7 { pt3dadd( 438.19, 262.243, 10.92, 0.483 ) }
    dend_7 { pt3dadd( 438.647, 262.319, 10.4532, 0.483 ) }
    dend_7 { pt3dadd( 439.169, 262.128, 10.4843, 0.483 ) }
    dend_7 { pt3dadd( 439.627, 261.862, 11.5111, 0.5848 ) }
    dend_7 { pt3dadd( 440.211, 261.785, 11.9468, 0.4068 ) }
    dend_7 { pt3dadd( 440.363, 261.747, 12.6932, 0.483 ) }
    dend_7 { pt3dadd( 440.898, 261.671, 13.0668, 0.5338 ) }
    dend_7 { pt3dadd( 441.571, 261.429, 12.2268, 0.6102 ) }
    dend_7 { pt3dadd( 442.042, 261.29, 12.04, 0.5848 ) }
    dend_7 { pt3dadd( 442.549, 261.366, 12.3511, 0.483 ) }
    dend_7 { pt3dadd( 443.25, 261.354, 12.32, 0.5848 ) }
    dend_7 { pt3dadd( 443.974, 261.175, 11.7911, 0.5848 ) }
    dend_7 { pt3dadd( 444.19, 260.845, 11.9468, 0.356 ) }
    dend_7 { pt3dadd( 444.558, 261.2, 11.5422, 0.3814 ) }
    dend_7 { pt3dadd( 444.787, 260.87, 11.2932, 0.4576 ) }
    dend_7 { pt3dadd( 445.474, 260.578, 11.9778, 0.5592 ) }
    dend_7 { pt3dadd( 445.855, 260.412, 12.6, 0.3814 ) }
    dend_7 { pt3dadd( 446.414, 260.412, 12.5689, 0.3304 ) }
    dend_7 { pt3dadd( 447.19, 260.489, 11.76, 0.3304 ) }
    dend_7 { pt3dadd( 447.647, 260.718, 11.76, 0.5592 ) }
    dend_7 { pt3dadd( 448.105, 260.718, 11.6978, 0.5338 ) }
    dend_7 { pt3dadd( 448.677, 260.603, 11.48, 0.5592 ) }
    dend_7 { pt3dadd( 449.63, 260.412, 11.48, 0.5848 ) }
    dend_7 { pt3dadd( 450.266, 260.019, 11.76, 0.6356 ) }
    dend_7 { pt3dadd( 450.736, 259.561, 11.5111, 0.5848 ) }
    dend_7 { pt3dadd( 450.863, 259.243, 12.32, 0.2796 ) }
    dend_7 { pt3dadd( 451.295, 259.23, 12.8489, 0.5848 ) }
    dend_7 { pt3dadd( 451.549, 258.875, 12.88, 0.5338 ) }
    dend_7 { pt3dadd( 452.223, 258.43, 13.16, 0.4322 ) }
    dend_7 { pt3dadd( 452.656, 258.213, 13.3468, 0.4576 ) }
    dend_7 { pt3dadd( 452.91, 258.531, 12.8489, 0.3814 ) }
    dend_7 { pt3dadd( 453.24, 258.849, 12.7243, 0.4322 ) }
    dend_7 { pt3dadd( 453.469, 259.002, 13.1289, 0.4576 ) }
    dend_7 { pt3dadd( 453.673, 259.268, 12.6, 0.2542 ) }
    dend_7 { pt3dadd( 453.939, 259.345, 12.6, 0.2288 ) }
    dend_7 { pt3dadd( 454.282, 259.345, 12.6, 0.2288 ) }
    dend_7 { pt3dadd( 455.096, 259.447, 12.6, 0.2542 ) }
    dend_7 { pt3dadd( 455.884, 259.459, 12.6, 0.305 ) }
    dend_7 { pt3dadd( 456.456, 259.574, 12.8178, 0.3814 ) }
    dend_7 { pt3dadd( 457.142, 259.574, 12.6, 0.4322 ) }
    dend_7 { pt3dadd( 457.677, 259.688, 12.6932, 0.3814 ) }
    dend_7 { pt3dadd( 458.058, 259.675, 13.4089, 0.3304 ) }
    dend_7 { pt3dadd( 458.363, 259.561, 12.7557, 0.3814 ) }
    dend_7 { pt3dadd( 458.553, 259.802, 12.2268, 0.4576 ) }
    dend_7 { pt3dadd( 459.189, 259.802, 12.6311, 0.5338 ) }
    dend_7 { pt3dadd( 459.723, 259.79, 13.2532, 0.4576 ) }
    dend_7 { pt3dadd( 460.244, 259.561, 12.88, 0.5848 ) }
    dend_7 { pt3dadd( 460.574, 259.129, 13.1289, 0.5084 ) }
    dend_7 { pt3dadd( 461.032, 259.116, 12.32, 0.3814 ) }
    dend_7 { pt3dadd( 461.604, 259.154, 12.7868, 0.4068 ) }
    dend_7 { pt3dadd( 462.112, 259.409, 12.6, 0.5848 ) }
    dend_7 { pt3dadd( 462.634, 259.574, 12.04, 0.6356 ) }
    dend_7 { pt3dadd( 463.091, 259.688, 10.92, 0.5084 ) }
    dend_7 { pt3dadd( 464.019, 260.031, 10.6711, 0.4068 ) }
    dend_7 { pt3dadd( 464.35, 260.031, 10.64, 0.4322 ) }
    dend_7 { pt3dadd( 464.668, 260.146, 11.2622, 0.4322 ) }
    dend_7 { pt3dadd( 464.959, 260.146, 11.9468, 0.3814 ) }
    dend_7 { pt3dadd( 465.277, 260.324, 12.4132, 0.4322 ) }
    dend_7 { pt3dadd( 465.621, 260.489, 12.3511, 0.4576 ) }
    dend_7 { pt3dadd( 465.989, 260.641, 11.76, 0.483 ) }
    dend_7 { pt3dadd( 466.447, 260.489, 11.5732, 0.5338 ) }
    dend_7 { pt3dadd( 466.931, 260.451, 11.5111, 0.5084 ) }
    dend_7 { pt3dadd( 467.438, 260.412, 11.5732, 0.661 ) }
    dend_7 { pt3dadd( 467.998, 260.374, 11.1689, 0.6102 ) }
    dend_7 { pt3dadd( 468.506, 260.374, 10.8268, 0.5592 ) }
    dend_7 { pt3dadd( 469.002, 259.892, 10.8889, 0.5338 ) }
    dend_7 { pt3dadd( 469.714, 259.484, 11.5732, 0.7118 ) }
    dend_7 { pt3dadd( 470.146, 259.078, 11.2, 0.5338 ) }
    dend_7 { pt3dadd( 470.552, 259.002, 10.7022, 0.4068 ) }
    dend_7 { pt3dadd( 470.896, 258.875, 10.8268, 0.356 ) }
    dend_7 { pt3dadd( 471.328, 258.582, 11.0132, 0.3304 ) }
    dend_7 { pt3dadd( 471.684, 258.29, 11.3868, 0.305 ) }
    dend_7 { pt3dadd( 472.078, 258.049, 11.2311, 0.3304 ) }
    dend_7 { pt3dadd( 472.447, 257.718, 11.48, 0.3814 ) }
    dend_7 { pt3dadd( 472.967, 257.438, 11.48, 0.4068 ) }
    dend_7 { pt3dadd( 473.285, 257.286, 12.0089, 0.305 ) }
    dend_7 { pt3dadd( 473.603, 257.286, 12.0089, 0.2796 ) }
    dend_7 { pt3dadd( 473.845, 257.159, 11.5111, 0.356 ) }
    dend_7 { pt3dadd( 474.163, 256.917, 11.2, 0.3814 ) }
    dend_7 { pt3dadd( 474.442, 256.714, 11.6978, 0.4322 ) }
    dend_7 { pt3dadd( 474.837, 256.599, 12.1332, 0.6864 ) }
    dend_7 { pt3dadd( 475.116, 256.333, 11.3243, 0.305 ) }
    dend_7 { pt3dadd( 475.345, 256.154, 11.2, 0.2288 ) }
    dend_7 { pt3dadd( 476.133, 255.798, 11.48, 0.5084 ) }
    dend_7 { pt3dadd( 476.807, 255.443, 12.32, 0.4576 ) }
    dend_7 { pt3dadd( 477.227, 255.328, 12.9732, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_7 { pt3dadd( 477.518, 255.125, 13.44, 0.356 ) }
    dend_7 { pt3dadd( 477.874, 254.908, 13.16, 0.356 ) }
    dend_7 { pt3dadd( 478.446, 254.578, 13.4711, 0.5338 ) }
    dend_7 { pt3dadd( 478.916, 254.311, 13.9068, 0.6102 ) }
    dend_7 { pt3dadd( 479.259, 254.006, 14.0, 0.5084 ) }
    dend_7 { pt3dadd( 479.463, 253.396, 13.7511, 0.483 ) }
    dend_7 { pt3dadd( 479.565, 252.926, 13.4711, 0.483 ) }
    dend_7 { pt3dadd( 479.247, 252.493, 13.8132, 0.4068 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 8/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 396.052, 298.721, 17.6296, 0.7372 ) }
    dend_4 { pt3dadd( 396.445, 299.193, 17.3981, 0.5084 ) }
    dend_4 { pt3dadd( 397.376, 299.834, 17.5647, 0.5592 ) }
    dend_4 { pt3dadd( 398.083, 300.429, 18.9465, 0.6102 ) }
    dend_4 { pt3dadd( 398.755, 301.271, 18.4316, 0.5848 ) }
    dend_4 { pt3dadd( 399.715, 301.673, 17.4143, 0.5592 ) }
    dend_4 { pt3dadd( 400.78, 302.001, 16.8798, 0.5338 ) }
    dend_4 { pt3dadd( 401.833, 302.121, 16.3738, 0.5592 ) }
    dend_4 { pt3dadd( 402.427, 302.411, 18.2417, 0.5848 ) }
    dend_4 { pt3dadd( 403.513, 302.144, 18.4716, 0.6356 ) }
    dend_4 { pt3dadd( 404.643, 302.003, 18.4262, 0.6356 ) }
    dend_4 { pt3dadd( 405.772, 301.935, 18.102, 0.661 ) }
    dend_4 { pt3dadd( 406.814, 301.6, 17.4202, 0.661 ) }
    dend_4 { pt3dadd( 407.869, 301.172, 17.36, 0.6864 ) }
    dend_4 { pt3dadd( 408.847, 300.586, 17.36, 0.6356 ) }
    dend_4 { pt3dadd( 409.908, 300.18, 17.3606, 0.5848 ) }
    dend_4 { pt3dadd( 411.007, 299.898, 17.3639, 0.5592 ) }
    dend_4 { pt3dadd( 412.043, 299.417, 17.3821, 0.6102 ) }
    dend_4 { pt3dadd( 413.125, 299.06, 17.5014, 0.6864 ) }
    dend_4 { pt3dadd( 414.134, 298.584, 18.0158, 0.7118 ) }
    dend_4 { pt3dadd( 415.132, 298.092, 17.5582, 0.6864 ) }
    dend_4 { pt3dadd( 416.177, 297.661, 17.379, 0.6356 ) }
    dend_4 { pt3dadd( 417.164, 297.17, 17.5176, 0.6356 ) }
    dend_4 { pt3dadd( 418.224, 297.467, 18.2036, 0.7118 ) }
    dend_4 { pt3dadd( 419.298, 297.79, 18.48, 0.7626 ) }
    dend_4 { pt3dadd( 420.271, 298.382, 18.4803, 0.788 ) }
    dend_4 { pt3dadd( 421.105, 299.164, 18.4811, 0.7626 ) }
    dend_4 { pt3dadd( 421.898, 299.989, 18.4848, 0.7626 ) }
    dend_4 { pt3dadd( 422.625, 300.867, 18.5013, 0.7626 ) }
    dend_4 { pt3dadd( 423.33, 301.762, 18.5847, 0.7372 ) }
    dend_4 { pt3dadd( 424.202, 302.462, 18.9787, 0.7372 ) }
    dend_4 { pt3dadd( 425.174, 303.008, 19.5373, 0.7372 ) }
    dend_4 { pt3dadd( 426.094, 303.679, 19.5104, 0.7372 ) }
    dend_4 { pt3dadd( 426.941, 304.433, 19.1881, 0.661 ) }
    dend_4 { pt3dadd( 427.509, 304.767, 19.5989, 0.5592 ) }
    dend_4 { pt3dadd( 428.652, 304.804, 19.591, 0.6356 ) }
    dend_4 { pt3dadd( 429.674, 305.178, 19.5129, 0.7372 ) }
    dend_4 { pt3dadd( 430.071, 306.205, 19.0254, 0.788 ) }
    dend_4 { pt3dadd( 429.938, 307.286, 19.5051, 0.788 ) }
    dend_4 { pt3dadd( 429.696, 308.341, 20.305, 0.7626 ) }
    dend_4 { pt3dadd( 429.689, 309.453, 19.7305, 0.839 ) }
    dend_4 { pt3dadd( 429.704, 310.593, 19.8394, 0.9152 ) }
    dend_4 { pt3dadd( 429.793, 311.681, 20.6259, 0.966 ) }
    dend_4 { pt3dadd( 430.268, 312.698, 20.8099, 0.9406 ) }
    dend_4 { pt3dadd( 430.904, 313.622, 21.1607, 0.9406 ) }
    dend_4 { pt3dadd( 431.06, 314.704, 21.8534, 0.966 ) }
    dend_4 { pt3dadd( 431.067, 315.838, 22.1665, 1.0168 ) }
    dend_4 { pt3dadd( 431.108, 316.949, 22.6909, 1.0424 ) }
    dend_4 { pt3dadd( 431.366, 318.003, 21.9758, 1.0678 ) }
    dend_4 { pt3dadd( 431.686, 319.096, 21.8016, 0.966 ) }
    dend_4 { pt3dadd( 431.96, 320.196, 21.6118, 0.788 ) }
    dend_4 { pt3dadd( 431.965, 321.293, 20.8743, 0.5848 ) }
    dend_4 { pt3dadd( 431.907, 322.426, 21.0571, 0.483 ) }
    dend_4 { pt3dadd( 431.527, 323.296, 22.4277, 0.483 ) }
    dend_4 { pt3dadd( 431.16, 324.292, 22.3342, 0.5338 ) }
    dend_4 { pt3dadd( 431.41, 325.354, 21.5765, 0.5848 ) }
    dend_4 { pt3dadd( 431.354, 325.95, 21.0571, 0.6102 ) }
    dend_4 { pt3dadd( 431.099, 327.047, 20.8474, 0.6102 ) }
    dend_4 { pt3dadd( 431.206, 328.136, 21.5281, 0.6356 ) }
    dend_4 { pt3dadd( 431.604, 329.163, 22.2558, 0.6356 ) }
    dend_4 { pt3dadd( 432.115, 330.135, 22.8917, 0.6356 ) }
    dend_4 { pt3dadd( 432.727, 331.099, 22.9603, 0.6102 ) }
    dend_4 { pt3dadd( 433.331, 332.067, 22.9617, 0.6356 ) }
    dend_4 { pt3dadd( 433.73, 333.13, 22.9704, 0.661 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 72/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 378.26, 329.436, 17.2155, 0.5592 ) }
    dend_2 { pt3dadd( 378.473, 330.443, 16.2512, 0.7372 ) }
    dend_2 { pt3dadd( 379.19, 330.979, 14.5804, 0.7118 ) }
    dend_2 { pt3dadd( 379.555, 331.618, 12.5731, 0.6864 ) }
    dend_2 { pt3dadd( 379.544, 332.683, 11.7267, 0.6356 ) }
    dend_2 { pt3dadd( 379.299, 333.781, 11.5256, 0.5592 ) }
    dend_2 { pt3dadd( 378.653, 334.607, 10.603, 0.483 ) }
    dend_2 { pt3dadd( 377.71, 334.188, 9.5738, 0.4576 ) }
    dend_2 { pt3dadd( 376.659, 333.868, 8.8875, 0.4576 ) }
    dend_2 { pt3dadd( 376.111, 332.994, 7.9806, 0.4576 ) }
    dend_2 { pt3dadd( 376.336, 331.964, 7.294, 0.4576 ) }
    dend_2 { pt3dadd( 377.215, 331.262, 7.1534, 0.483 ) }
    dend_2 { pt3dadd( 378.219, 330.813, 6.5414, 0.5084 ) }
    dend_2 { pt3dadd( 379.238, 330.845, 6.2115, 0.5848 ) }
    dend_2 { pt3dadd( 380.0, 331.685, 6.4663, 0.5848 ) }
    dend_2 { pt3dadd( 380.589, 332.579, 6.9826, 0.5848 ) }
    dend_2 { pt3dadd( 381.249, 333.322, 5.9682, 0.483 ) }
    dend_2 { pt3dadd( 382.281, 333.251, 5.1909, 0.483 ) }
    dend_2 { pt3dadd( 383.24, 333.59, 6.16, 0.483 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 91/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 378.26, 329.436, 17.2155, 0.5592 ) }
    dend_1 { pt3dadd( 378.528, 329.987, 18.0586, 0.5592 ) }
    dend_1 { pt3dadd( 379.447, 330.603, 18.2381, 0.5338 ) }
    dend_1 { pt3dadd( 380.51, 330.791, 17.4283, 0.483 ) }
    dend_1 { pt3dadd( 381.609, 330.785, 16.977, 0.4068 ) }
    dend_1 { pt3dadd( 382.7, 331.003, 16.8218, 0.4322 ) }
    dend_1 { pt3dadd( 383.683, 331.561, 16.9655, 0.5084 ) }
    dend_1 { pt3dadd( 384.639, 331.881, 15.6878, 0.5848 ) }
    dend_1 { pt3dadd( 385.705, 332.188, 15.5641, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_1 { pt3dadd( 386.809, 332.227, 16.2154, 0.5338 ) }
    dend_1 { pt3dadd( 387.951, 332.282, 16.24, 0.5592 ) }
    dend_1 { pt3dadd( 389.023, 332.624, 16.2397, 0.661 ) }
    dend_1 { pt3dadd( 389.872, 333.386, 16.2389, 0.7118 ) }
    dend_1 { pt3dadd( 390.636, 334.237, 16.2358, 0.6864 ) }
    dend_1 { pt3dadd( 391.198, 335.224, 16.2179, 0.661 ) }
    dend_1 { pt3dadd( 391.397, 336.336, 16.1017, 0.6356 ) }
    dend_1 { pt3dadd( 391.367, 337.702, 15.267, 0.6102 ) }
    dend_1 { pt3dadd( 391.801, 338.753, 15.2351, 0.5338 ) }
    dend_1 { pt3dadd( 391.922, 339.842, 15.874, 0.5084 ) }
    dend_1 { pt3dadd( 391.861, 340.876, 17.003, 0.5338 ) }
    dend_1 { pt3dadd( 391.505, 341.93, 16.7076, 0.6356 ) }
    dend_1 { pt3dadd( 390.935, 342.887, 17.2746, 0.6864 ) }
    dend_1 { pt3dadd( 390.346, 343.863, 17.358, 0.7118 ) }
    dend_1 { pt3dadd( 389.829, 344.88, 17.3491, 0.661 ) }
    dend_1 { pt3dadd( 389.318, 345.899, 17.302, 0.6356 ) }
    dend_1 { pt3dadd( 388.851, 346.931, 17.0204, 0.5848 ) }
    dend_1 { pt3dadd( 388.559, 347.989, 16.305, 0.5084 ) }
    dend_1 { pt3dadd( 388.43, 349.111, 16.2403, 0.4322 ) }
    dend_1 { pt3dadd( 389.072, 350.035, 16.242, 0.356 ) }
    dend_1 { pt3dadd( 390.078, 350.567, 16.2529, 0.356 ) }
    dend_1 { pt3dadd( 391.069, 351.111, 16.317, 0.3814 ) }
    dend_1 { pt3dadd( 391.819, 351.96, 16.5752, 0.4576 ) }
    dend_1 { pt3dadd( 392.318, 352.942, 17.2724, 0.5592 ) }
    dend_1 { pt3dadd( 392.743, 353.998, 17.36, 0.6356 ) }
    dend_1 { pt3dadd( 393.401, 354.932, 17.36, 0.7118 ) }
    dend_1 { pt3dadd( 394.221, 355.71, 17.3606, 0.7118 ) }
    dend_1 { pt3dadd( 395.12, 356.415, 17.3628, 0.661 ) }
    dend_1 { pt3dadd( 396.007, 357.134, 17.3743, 0.5592 ) }
    dend_1 { pt3dadd( 396.587, 358.086, 17.4577, 0.4576 ) }
    dend_1 { pt3dadd( 396.981, 359.126, 17.9754, 0.4322 ) }
    dend_1 { pt3dadd( 397.484, 360.121, 18.2736, 0.4068 ) }
    dend_1 { pt3dadd( 398.293, 360.717, 17.162, 0.3814 ) }
    dend_1 { pt3dadd( 398.539, 361.067, 17.4138, 0.356 ) }
    dend_1 { pt3dadd( 399.141, 362.01, 17.789, 0.356 ) }
    dend_1 { pt3dadd( 399.256, 363.107, 17.7374, 0.4068 ) }
    dend_1 { pt3dadd( 399.256, 364.227, 17.2049, 0.4068 ) }
    dend_1 { pt3dadd( 399.257, 365.342, 16.6516, 0.4068 ) }
    dend_1 { pt3dadd( 399.266, 366.452, 17.2791, 0.3814 ) }
    dend_1 { pt3dadd( 399.327, 367.592, 17.3866, 0.4068 ) }
    dend_1 { pt3dadd( 399.722, 368.644, 17.5417, 0.4576 ) }
    dend_1 { pt3dadd( 400.528, 369.344, 18.305, 0.5084 ) }
    dend_1 { pt3dadd( 401.549, 369.829, 18.4993, 0.5338 ) }
    dend_1 { pt3dadd( 401.845, 370.854, 18.6287, 0.5592 ) }
    dend_1 { pt3dadd( 401.252, 371.758, 19.4015, 0.5848 ) }
    dend_1 { pt3dadd( 400.705, 372.751, 19.6025, 0.5592 ) }
    dend_1 { pt3dadd( 400.203, 373.775, 19.6146, 0.5084 ) }
    dend_1 { pt3dadd( 399.692, 374.793, 19.6882, 0.4322 ) }
    dend_1 { pt3dadd( 399.107, 375.731, 20.2244, 0.4322 ) }
    dend_1 { pt3dadd( 398.705, 376.751, 19.7761, 0.4322 ) }
    dend_1 { pt3dadd( 398.369, 377.836, 19.6165, 0.4576 ) }
    dend_1 { pt3dadd( 398.26, 378.973, 19.7235, 0.4322 ) }
    dend_1 { pt3dadd( 398.075, 380.001, 20.5447, 0.3814 ) }
    dend_1 { pt3dadd( 398.787, 380.874, 20.7197, 0.3814 ) }
    dend_1 { pt3dadd( 399.583, 381.678, 20.7189, 0.4322 ) }
    dend_1 { pt3dadd( 400.314, 382.558, 20.715, 0.483 ) }
    dend_1 { pt3dadd( 400.956, 383.501, 20.6956, 0.483 ) }
    dend_1 { pt3dadd( 401.651, 384.408, 20.6161, 0.4576 ) }
    dend_1 { pt3dadd( 402.085, 385.427, 20.4299, 0.4576 ) }
    dend_1 { pt3dadd( 402.379, 386.511, 20.8614, 0.4322 ) }
    dend_1 { pt3dadd( 402.043, 387.521, 21.3581, 0.4322 ) }
    dend_1 { pt3dadd( 401.541, 388.515, 20.7883, 0.4322 ) }
    dend_1 { pt3dadd( 401.043, 389.54, 20.7743, 0.4322 ) }
    dend_1 { pt3dadd( 400.56, 390.564, 21.0367, 0.356 ) }
    dend_1 { pt3dadd( 399.916, 391.405, 21.7801, 0.3304 ) }
    dend_1 { pt3dadd( 398.872, 391.853, 21.8422, 0.3304 ) }
    dend_1 { pt3dadd( 397.985, 392.545, 21.8546, 0.3814 ) }
    dend_1 { pt3dadd( 397.518, 393.583, 21.9142, 0.4068 ) }
    dend_1 { pt3dadd( 397.426, 394.68, 21.84, 0.483 ) }
    // Section: apic_8, id: apic_8, parent: apic_0 (entry count 69/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 366.788, 318.947, 21.8403, 1.144 ) }
    apic_8 { pt3dadd( 365.511, 320.398, 21.7599, 0.8644 ) }
    apic_8 { pt3dadd( 364.968, 321.343, 21.2131, 0.788 ) }
    apic_8 { pt3dadd( 364.161, 322.122, 20.732, 0.7372 ) }
    apic_8 { pt3dadd( 363.519, 323.066, 20.736, 0.7118 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 74/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 366.788, 318.947, 21.8403, 1.144 ) }
    apic_1 { pt3dadd( 367.25, 320.731, 21.8459, 0.7372 ) }
    apic_1 { pt3dadd( 368.043, 321.553, 21.8652, 0.661 ) }
    apic_1 { pt3dadd( 368.918, 322.288, 21.9548, 0.6356 ) }
    apic_1 { pt3dadd( 369.962, 322.589, 22.5459, 0.6356 ) }
    apic_1 { pt3dadd( 371.082, 322.464, 22.8721, 0.6356 ) }
    apic_1 { pt3dadd( 371.946, 321.818, 22.3462, 0.6102 ) }
    apic_1 { pt3dadd( 372.88, 321.323, 22.5442, 0.6864 ) }
    apic_1 { pt3dadd( 373.7, 321.688, 24.045, 0.7118 ) }
    apic_1 { pt3dadd( 374.546, 322.319, 24.2967, 0.6864 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 84/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 366.182, 284.856, 38.1111, 0.7372 ) }
    dend_50 { pt3dadd( 366.995, 284.284, 39.2, 0.5084 ) }
    dend_50 { pt3dadd( 367.567, 284.398, 39.2, 0.5338 ) }
    dend_50 { pt3dadd( 368.05, 284.386, 39.6668, 0.5338 ) }
    dend_50 { pt3dadd( 368.418, 284.271, 40.5068, 0.661 ) }
    dend_50 { pt3dadd( 368.863, 284.284, 41.0668, 0.7626 ) }
    dend_50 { pt3dadd( 369.55, 283.966, 40.5689, 0.788 ) }
    dend_50 { pt3dadd( 370.059, 283.572, 40.6, 0.4322 ) }
    dend_50 { pt3dadd( 370.415, 283.28, 40.6932, 0.3304 ) }
    dend_50 { pt3dadd( 370.554, 282.924, 40.88, 0.5084 ) }
    dend_50 { pt3dadd( 371.203, 282.2, 41.44, 0.6356 ) }
    dend_50 { pt3dadd( 371.723, 281.919, 42.0, 0.5338 ) }
    dend_50 { pt3dadd( 372.131, 281.564, 41.8132, 0.4322 ) }
    dend_50 { pt3dadd( 372.245, 281.335, 41.9068, 0.2542 ) }
    dend_50 { pt3dadd( 372.41, 281.068, 41.8757, 0.2542 ) }
    dend_50 { pt3dadd( 372.69, 280.712, 42.28, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_50 { pt3dadd( 373.135, 280.357, 42.28, 0.4576 ) }
    dend_50 { pt3dadd( 373.668, 280.089, 42.28, 0.5848 ) }
    dend_50 { pt3dadd( 374.088, 279.708, 42.28, 0.6356 ) }
    dend_50 { pt3dadd( 374.482, 279.072, 42.0, 0.5592 ) }
    dend_50 { pt3dadd( 375.232, 278.907, 42.28, 0.7372 ) }
    dend_50 { pt3dadd( 375.918, 278.348, 42.0311, 0.7372 ) }
    dend_50 { pt3dadd( 376.605, 277.878, 42.0, 0.966 ) }
    dend_50 { pt3dadd( 377.253, 277.649, 42.0932, 0.5592 ) }
    dend_50 { pt3dadd( 377.418, 277.534, 43.3689, 0.661 ) }
    dend_50 { pt3dadd( 377.901, 277.649, 43.7732, 0.6864 ) }
    dend_50 { pt3dadd( 378.575, 277.649, 43.4622, 0.7118 ) }
    dend_50 { pt3dadd( 379.236, 277.522, 43.3689, 0.483 ) }
    dend_50 { pt3dadd( 380.062, 277.115, 43.7111, 0.6864 ) }
    dend_50 { pt3dadd( 380.621, 276.619, 44.4889, 0.9152 ) }
    dend_50 { pt3dadd( 381.27, 275.908, 44.52, 0.6102 ) }
    dend_50 { pt3dadd( 381.867, 275.475, 44.52, 0.6864 ) }
    dend_50 { pt3dadd( 382.325, 274.928, 44.8, 0.6864 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 366.182, 284.856, 38.1111, 0.7372 ) }
    dend_49 { pt3dadd( 365.966, 284.284, 39.48, 1.0424 ) }
    dend_49 { pt3dadd( 365.61, 284.322, 41.0357, 0.3304 ) }
    dend_49 { pt3dadd( 365.343, 284.398, 41.5957, 0.4576 ) }
    dend_49 { pt3dadd( 364.809, 283.953, 42.0, 0.661 ) }
    dend_49 { pt3dadd( 364.185, 283.445, 41.7511, 0.483 ) }
    dend_49 { pt3dadd( 363.894, 282.772, 42.0932, 0.483 ) }
    dend_49 { pt3dadd( 363.131, 282.085, 41.72, 0.6864 ) }
    dend_49 { pt3dadd( 362.419, 281.424, 42.28, 0.7118 ) }
    dend_49 { pt3dadd( 361.911, 280.559, 42.28, 0.6864 ) }
    dend_49 { pt3dadd( 361.415, 279.568, 42.56, 0.6356 ) }
    dend_49 { pt3dadd( 360.932, 278.45, 42.56, 0.5592 ) }
    dend_49 { pt3dadd( 360.741, 278.005, 42.6843, 0.5084 ) }
    dend_49 { pt3dadd( 360.347, 277.878, 43.6489, 0.6864 ) }
    dend_49 { pt3dadd( 359.636, 277.572, 43.96, 0.6356 ) }
    dend_49 { pt3dadd( 359.229, 277.42, 45.1111, 0.3814 ) }
    dend_49 { pt3dadd( 358.975, 277.42, 45.8889, 0.4068 ) }
    dend_49 { pt3dadd( 358.059, 277.343, 45.2978, 0.5338 ) }
    dend_49 { pt3dadd( 357.652, 277.268, 44.5822, 0.2542 ) }
    dend_49 { pt3dadd( 357.271, 276.848, 45.36, 0.5848 ) }
    dend_49 { pt3dadd( 357.271, 276.378, 46.1689, 0.4068 ) }
    dend_49 { pt3dadd( 356.903, 276.047, 46.9778, 0.6864 ) }
    dend_49 { pt3dadd( 355.988, 275.844, 47.04, 0.6356 ) }
    dend_49 { pt3dadd( 355.225, 275.717, 46.76, 0.5084 ) }
    dend_49 { pt3dadd( 354.78, 275.336, 47.04, 0.483 ) }
    dend_49 { pt3dadd( 354.093, 274.865, 46.7911, 0.6864 ) }
    dend_49 { pt3dadd( 353.165, 274.674, 46.7911, 0.6102 ) }
    dend_49 { pt3dadd( 352.759, 274.483, 47.5689, 0.305 ) }
    dend_49 { pt3dadd( 352.314, 274.331, 47.1332, 0.4068 ) }
    dend_49 { pt3dadd( 351.691, 274.293, 47.0711, 0.6864 ) }
    dend_49 { pt3dadd( 350.954, 274.102, 46.9778, 0.6864 ) }
    dend_49 { pt3dadd( 350.649, 274.052, 48.0668, 0.4068 ) }
    dend_49 { pt3dadd( 350.318, 273.772, 48.0668, 0.2542 ) }
    dend_49 { pt3dadd( 350.064, 273.759, 47.88, 0.2542 ) }
    dend_49 { pt3dadd( 349.606, 273.53, 47.6, 0.3304 ) }
    dend_49 { pt3dadd( 349.161, 273.175, 47.6, 0.483 ) }
    dend_49 { pt3dadd( 348.679, 272.742, 47.88, 0.7372 ) }
    dend_49 { pt3dadd( 347.903, 272.806, 48.0043, 0.5592 ) }
    dend_49 { pt3dadd( 347.585, 272.73, 48.8132, 0.4322 ) }
    dend_49 { pt3dadd( 346.81, 272.322, 49.0, 0.7118 ) }
    dend_49 { pt3dadd( 345.869, 272.043, 48.6268, 0.8136 ) }
    dend_49 { pt3dadd( 345.463, 271.382, 48.44, 0.7118 ) }
    dend_49 { pt3dadd( 345.145, 270.899, 49.56, 0.7118 ) }
    dend_49 { pt3dadd( 344.115, 270.556, 51.24, 0.5338 ) }
    dend_49 { pt3dadd( 343.683, 270.289, 51.2711, 0.2796 ) }
    dend_49 { pt3dadd( 343.213, 270.098, 51.2711, 0.6864 ) }
    dend_49 { pt3dadd( 343.035, 269.564, 52.3289, 0.7118 ) }
    dend_49 { pt3dadd( 342.056, 269.412, 52.36, 0.839 ) }
    dend_49 { pt3dadd( 341.37, 269.031, 52.2668, 0.661 ) }
    dend_49 { pt3dadd( 340.976, 268.661, 52.08, 0.5338 ) }
    dend_49 { pt3dadd( 340.378, 268.395, 52.4843, 0.5338 ) }
    dend_49 { pt3dadd( 339.31, 268.382, 53.48, 0.7118 ) }
    dend_49 { pt3dadd( 338.51, 268.382, 53.48, 0.7626 ) }
    dend_49 { pt3dadd( 337.759, 268.535, 53.2311, 0.6864 ) }
    dend_49 { pt3dadd( 337.175, 268.89, 53.5111, 0.3304 ) }
    dend_49 { pt3dadd( 336.59, 269.208, 53.48, 0.4068 ) }
    dend_49 { pt3dadd( 336.145, 269.564, 53.48, 0.5084 ) }
    dend_49 { pt3dadd( 335.56, 269.87, 53.8222, 0.5848 ) }
    dend_49 { pt3dadd( 334.963, 269.882, 54.5689, 0.5338 ) }
    dend_49 { pt3dadd( 334.493, 270.327, 54.0711, 0.661 ) }
    dend_49 { pt3dadd( 333.946, 270.67, 54.3511, 0.661 ) }
    dend_49 { pt3dadd( 333.451, 270.429, 54.1332, 0.4576 ) }
    dend_49 { pt3dadd( 332.827, 270.086, 54.3822, 0.483 ) }
    dend_49 { pt3dadd( 332.561, 269.298, 54.88, 0.6102 ) }
    dend_49 { pt3dadd( 332.573, 268.661, 54.9732, 0.5338 ) }
    dend_49 { pt3dadd( 332.497, 268.688, 56.0311, 0.3814 ) }
    dend_49 { pt3dadd( 332.446, 268.268, 56.56, 0.2796 ) }
    dend_49 { pt3dadd( 332.523, 268.001, 56.56, 0.2542 ) }
    dend_49 { pt3dadd( 332.637, 267.785, 56.5289, 0.2542 ) }
    dend_49 { pt3dadd( 332.675, 267.238, 56.0, 0.3304 ) }
    dend_49 { pt3dadd( 332.599, 266.857, 56.0, 0.4322 ) }
    dend_49 { pt3dadd( 332.332, 266.094, 56.0, 0.5338 ) }
    dend_49 { pt3dadd( 332.218, 265.167, 56.8089, 0.6102 ) }
    dend_49 { pt3dadd( 332.218, 264.48, 56.5911, 0.6102 ) }
    dend_49 { pt3dadd( 332.319, 263.769, 57.0578, 0.6102 ) }
    dend_49 { pt3dadd( 331.989, 263.12, 56.84, 0.6864 ) }
    dend_49 { pt3dadd( 331.837, 262.357, 57.4, 0.7626 ) }
    dend_49 { pt3dadd( 331.404, 261.569, 58.3332, 0.7626 ) }
    dend_49 { pt3dadd( 330.616, 260.946, 58.24, 0.5084 ) }
    dend_49 { pt3dadd( 330.171, 260.705, 58.52, 0.4322 ) }
    dend_49 { pt3dadd( 329.853, 260.451, 59.08, 0.356 ) }
    dend_49 { pt3dadd( 329.612, 260.12, 59.64, 0.3304 ) }
    dend_49 { pt3dadd( 329.32, 259.815, 59.8578, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_49 { pt3dadd( 329.129, 259.268, 59.4532, 0.2796 ) }
    dend_49 { pt3dadd( 329.014, 258.862, 59.7022, 0.305 ) }
    dend_49 { pt3dadd( 328.9, 258.315, 59.36, 0.356 ) }
    dend_49 { pt3dadd( 328.671, 257.858, 59.64, 0.305 ) }
    dend_49 { pt3dadd( 328.569, 257.502, 60.48, 0.356 ) }
    dend_49 { pt3dadd( 328.214, 257.057, 61.04, 0.305 ) }
    dend_49 { pt3dadd( 328.099, 256.828, 61.6, 0.305 ) }
    dend_49 { pt3dadd( 327.731, 256.51, 61.88, 0.305 ) }
    dend_49 { pt3dadd( 327.184, 255.913, 62.16, 0.2796 ) }
    dend_49 { pt3dadd( 326.968, 255.798, 62.1911, 0.2542 ) }
    dend_49 { pt3dadd( 326.803, 255.379, 62.44, 0.3304 ) }
    dend_49 { pt3dadd( 326.714, 254.705, 62.8132, 0.5848 ) }
    dend_49 { pt3dadd( 326.04, 254.426, 63.0, 0.4576 ) }
    dend_49 { pt3dadd( 326.049, 254.691, 65.105, 0.3304 ) }
    dend_49 { pt3dadd( 323.998, 253.549, 68.3068, 0.2542 ) }
    dend_49 { pt3dadd( 320.962, 256.269, 70.4413, 0.2288 ) }
    dend_49 { pt3dadd( 318.502, 257.667, 70.4413, 0.2288 ) }
    dend_49 { pt3dadd( 316.619, 257.628, 70.4413, 0.2288 ) }
    dend_49 { pt3dadd( 313.488, 256.195, 72.0423, 0.2796 ) }
    dend_49 { pt3dadd( 312.51, 255.671, 72.0423, 0.4068 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 20/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 338.586, 263.692, 34.5332, 0.6102 ) }
    dend_43 { pt3dadd( 337.9, 263.501, 34.44, 0.6102 ) }
    dend_43 { pt3dadd( 337.328, 263.463, 33.6932, 0.6102 ) }
    dend_43 { pt3dadd( 336.552, 263.234, 33.8489, 0.5848 ) }
    dend_43 { pt3dadd( 336.12, 263.387, 34.6578, 0.5338 ) }
    dend_43 { pt3dadd( 335.853, 264.01, 35.0, 0.6102 ) }
    dend_43 { pt3dadd( 335.612, 264.226, 36.4, 0.3814 ) }
    dend_43 { pt3dadd( 335.433, 264.391, 36.96, 0.483 ) }
    dend_43 { pt3dadd( 334.938, 264.798, 36.9911, 0.7118 ) }
    dend_43 { pt3dadd( 334.734, 265.408, 37.52, 0.5592 ) }
    dend_43 { pt3dadd( 334.684, 265.853, 37.0532, 0.4576 ) }
    dend_43 { pt3dadd( 334.15, 265.751, 35.8711, 0.661 ) }
    dend_43 { pt3dadd( 333.705, 265.573, 36.5243, 0.4576 ) }
    dend_43 { pt3dadd( 333.807, 265.573, 37.4268, 0.2542 ) }
    dend_43 { pt3dadd( 333.819, 265.751, 37.52, 0.2288 ) }
    dend_43 { pt3dadd( 333.807, 266.082, 38.08, 0.356 ) }
    dend_43 { pt3dadd( 333.438, 266.209, 38.8268, 0.7118 ) }
    dend_43 { pt3dadd( 332.573, 265.866, 38.3911, 0.483 ) }
    dend_43 { pt3dadd( 331.798, 266.018, 38.64, 0.661 ) }
    dend_43 { pt3dadd( 330.947, 266.539, 38.08, 0.5848 ) }
    dend_43 { pt3dadd( 330.26, 266.666, 37.5511, 0.5848 ) }
    dend_43 { pt3dadd( 329.765, 267.086, 37.2089, 0.6864 ) }
    dend_43 { pt3dadd( 329.014, 266.857, 37.7068, 0.6356 ) }
    dend_43 { pt3dadd( 328.519, 266.247, 37.52, 0.661 ) }
    dend_43 { pt3dadd( 328.214, 265.687, 38.2043, 0.6864 ) }
    dend_43 { pt3dadd( 328.061, 265.229, 39.1689, 0.5338 ) }
    dend_43 { pt3dadd( 327.642, 264.836, 39.2, 0.4576 ) }
    dend_43 { pt3dadd( 327.451, 264.455, 39.76, 0.4068 ) }
    dend_43 { pt3dadd( 327.413, 263.806, 40.04, 0.3814 ) }
    dend_43 { pt3dadd( 327.54, 263.272, 39.4178, 0.2542 ) }
    dend_43 { pt3dadd( 327.743, 263.043, 39.3243, 0.2288 ) }
    dend_43 { pt3dadd( 327.769, 263.006, 39.7289, 0.2288 ) }
    dend_43 { pt3dadd( 328.074, 262.7, 40.1332, 0.3814 ) }
    dend_43 { pt3dadd( 327.972, 262.471, 41.2222, 0.2796 ) }
    dend_43 { pt3dadd( 327.604, 262.09, 42.4668, 0.5084 ) }
    dend_43 { pt3dadd( 327.261, 261.785, 42.84, 0.5338 ) }
    dend_43 { pt3dadd( 326.79, 261.518, 43.8357, 0.5084 ) }
    dend_43 { pt3dadd( 326.625, 260.946, 44.4889, 0.4322 ) }
    dend_43 { pt3dadd( 326.841, 260.476, 43.9911, 0.6102 ) }
    dend_43 { pt3dadd( 326.434, 259.879, 43.9911, 0.6864 ) }
    dend_43 { pt3dadd( 325.888, 259.357, 44.8622, 0.7372 ) }
    dend_43 { pt3dadd( 325.659, 258.798, 43.7111, 0.6102 ) }
    dend_43 { pt3dadd( 325.125, 258.277, 44.9868, 0.5338 ) }
    dend_43 { pt3dadd( 324.782, 257.565, 45.7643, 0.8898 ) }
    dend_43 { pt3dadd( 324.515, 256.841, 46.4178, 0.788 ) }
    dend_43 { pt3dadd( 324.438, 256.256, 47.88, 0.661 ) }
    dend_43 { pt3dadd( 324.515, 255.493, 48.16, 0.6102 ) }
    dend_43 { pt3dadd( 324.184, 255.035, 48.1911, 0.5084 ) }
    dend_43 { pt3dadd( 323.79, 254.858, 48.7511, 0.2796 ) }
    dend_43 { pt3dadd( 323.866, 254.4, 48.7822, 0.3814 ) }
    dend_43 { pt3dadd( 324.083, 254.045, 47.9422, 0.6102 ) }
    dend_43 { pt3dadd( 323.879, 252.71, 48.1911, 0.7626 ) }
    dend_43 { pt3dadd( 323.79, 251.871, 48.72, 0.4322 ) }
    dend_43 { pt3dadd( 323.6, 251.451, 49.1868, 0.3304 ) }
    dend_43 { pt3dadd( 323.523, 251.006, 49.8711, 0.3304 ) }
    dend_43 { pt3dadd( 323.523, 250.561, 50.7422, 0.3304 ) }
    dend_43 { pt3dadd( 323.409, 250.18, 50.9911, 0.356 ) }
    dend_43 { pt3dadd( 323.421, 249.519, 51.24, 0.356 ) }
    dend_43 { pt3dadd( 323.561, 249.087, 50.96, 0.4322 ) }
    dend_43 { pt3dadd( 323.79, 248.743, 51.24, 0.483 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 80/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 338.586, 263.692, 34.5332, 0.6102 ) }
    dend_42 { pt3dadd( 338.039, 263.819, 32.76, 0.661 ) }
    dend_42 { pt3dadd( 337.187, 263.692, 32.3557, 0.4576 ) }
    dend_42 { pt3dadd( 337.137, 264.023, 31.8889, 0.2288 ) }
    dend_42 { pt3dadd( 337.137, 264.15, 31.36, 0.2288 ) }
    dend_42 { pt3dadd( 337.137, 264.2, 30.6443, 0.2288 ) }
    dend_42 { pt3dadd( 337.137, 264.493, 30.52, 0.2288 ) }
    dend_42 { pt3dadd( 337.137, 264.709, 30.2089, 0.2542 ) }
    dend_42 { pt3dadd( 337.213, 264.722, 29.0268, 0.356 ) }
    dend_42 { pt3dadd( 337.328, 264.913, 28.28, 0.5084 ) }
    dend_42 { pt3dadd( 337.251, 264.607, 27.16, 0.4576 ) }
    dend_42 { pt3dadd( 336.756, 264.341, 26.6, 0.5338 ) }
    dend_42 { pt3dadd( 336.132, 264.569, 27.1289, 0.6864 ) }
    dend_42 { pt3dadd( 335.637, 264.786, 26.2268, 0.4322 ) }
    dend_42 { pt3dadd( 335.027, 265.167, 25.6668, 0.5848 ) }
    dend_42 { pt3dadd( 334.62, 265.154, 26.3822, 0.3814 ) }
    dend_42 { pt3dadd( 334.531, 265.395, 26.5068, 0.305 ) }
    dend_42 { pt3dadd( 333.743, 265.675, 26.04, 0.6102 ) }
    dend_42 { pt3dadd( 333.145, 265.878, 26.04, 0.5084 ) }
    dend_42 { pt3dadd( 332.713, 265.98, 25.5732, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_42 { pt3dadd( 332.319, 266.171, 25.4178, 0.3814 ) }
    dend_42 { pt3dadd( 332.091, 266.463, 25.1068, 0.4322 ) }
    dend_42 { pt3dadd( 331.455, 266.666, 25.0132, 0.661 ) }
    dend_42 { pt3dadd( 330.603, 266.45, 25.76, 0.8136 ) }
    dend_42 { pt3dadd( 329.599, 266.666, 26.5689, 0.8136 ) }
    dend_42 { pt3dadd( 328.823, 266.743, 26.32, 0.356 ) }
    dend_42 { pt3dadd( 328.251, 266.514, 26.6, 0.3304 ) }
    dend_42 { pt3dadd( 328.251, 266.107, 27.3778, 0.4322 ) }
    dend_42 { pt3dadd( 328.239, 265.955, 28.0, 0.4576 ) }
    dend_42 { pt3dadd( 327.756, 265.751, 28.0, 0.483 ) }
    dend_42 { pt3dadd( 327.222, 265.56, 28.0, 0.5338 ) }
    dend_42 { pt3dadd( 326.625, 265.649, 28.0, 0.6356 ) }
    dend_42 { pt3dadd( 325.951, 265.942, 28.0311, 0.483 ) }
    dend_42 { pt3dadd( 325.1, 265.662, 27.72, 0.6864 ) }
    dend_42 { pt3dadd( 324.401, 265.319, 27.9689, 0.6102 ) }
    dend_42 { pt3dadd( 323.866, 265.065, 28.28, 0.4322 ) }
    dend_42 { pt3dadd( 323.409, 265.065, 28.28, 0.4068 ) }
    dend_42 { pt3dadd( 322.989, 265.065, 27.6268, 0.3814 ) }
    dend_42 { pt3dadd( 322.608, 265.179, 27.6578, 0.3814 ) }
    dend_42 { pt3dadd( 322.188, 265.192, 26.7557, 0.661 ) }
    dend_42 { pt3dadd( 321.807, 264.836, 25.48, 0.6356 ) }
    dend_42 { pt3dadd( 321.35, 264.709, 25.7289, 0.4068 ) }
    dend_42 { pt3dadd( 321.044, 264.505, 25.0757, 0.4576 ) }
    dend_42 { pt3dadd( 320.815, 264.226, 24.08, 0.4576 ) }
    dend_42 { pt3dadd( 320.485, 263.794, 24.7332, 0.5338 ) }
    dend_42 { pt3dadd( 319.798, 263.451, 24.5468, 0.7118 ) }
    dend_42 { pt3dadd( 318.997, 263.476, 24.2668, 0.7626 ) }
    dend_42 { pt3dadd( 318.223, 263.692, 24.2668, 0.8136 ) }
    dend_42 { pt3dadd( 317.346, 263.234, 24.08, 0.9406 ) }
    dend_42 { pt3dadd( 316.774, 262.7, 23.3332, 0.7118 ) }
    dend_42 { pt3dadd( 316.189, 262.319, 23.2089, 0.5592 ) }
    dend_42 { pt3dadd( 315.54, 262.053, 23.2089, 0.6102 ) }
    dend_42 { pt3dadd( 315.172, 261.62, 22.1511, 0.6102 ) }
    dend_42 { pt3dadd( 315.324, 260.946, 21.7468, 0.6864 ) }
    dend_42 { pt3dadd( 315.312, 260.12, 21.56, 0.8136 ) }
    dend_42 { pt3dadd( 314.931, 259.459, 21.0311, 0.8136 ) }
    dend_42 { pt3dadd( 314.448, 258.912, 21.0311, 0.5592 ) }
    dend_42 { pt3dadd( 313.901, 258.43, 20.7511, 0.7626 ) }
    dend_42 { pt3dadd( 313.049, 258.277, 21.0311, 0.6102 ) }
    dend_42 { pt3dadd( 312.528, 257.858, 20.7511, 0.661 ) }
    dend_42 { pt3dadd( 312.058, 257.438, 20.1911, 0.6356 ) }
    dend_42 { pt3dadd( 311.397, 257.273, 21.2489, 0.7626 ) }
    dend_42 { pt3dadd( 310.952, 256.828, 19.5689, 0.6864 ) }
    dend_42 { pt3dadd( 310.062, 256.523, 18.76, 0.5338 ) }
    dend_42 { pt3dadd( 309.566, 256.612, 19.6311, 0.6356 ) }
    dend_42 { pt3dadd( 308.893, 256.015, 19.32, 0.7372 ) }
    dend_42 { pt3dadd( 308.308, 255.582, 19.8489, 0.5592 ) }
    dend_42 { pt3dadd( 308.003, 255.074, 19.32, 0.5848 ) }
    dend_42 { pt3dadd( 307.965, 254.756, 20.6889, 0.7372 ) }
    dend_42 { pt3dadd( 307.927, 253.93, 21.28, 0.6864 ) }
    dend_42 { pt3dadd( 308.308, 252.951, 21.3111, 0.5848 ) }
    dend_42 { pt3dadd( 308.079, 252.354, 21.0311, 0.661 ) }
    dend_42 { pt3dadd( 307.507, 251.832, 21.1868, 0.356 ) }
    dend_42 { pt3dadd( 307.622, 250.994, 20.44, 0.5848 ) }
    dend_42 { pt3dadd( 307.622, 250.536, 20.16, 0.483 ) }
    dend_42 { pt3dadd( 305.958, 248.938, 21.8795, 0.4322 ) }
    dend_42 { pt3dadd( 305.445, 248.338, 21.8795, 0.3814 ) }
    dend_42 { pt3dadd( 305.638, 247.801, 21.8795, 0.3304 ) }
    dend_42 { pt3dadd( 305.884, 246.699, 21.8795, 0.356 ) }
    dend_42 { pt3dadd( 305.748, 245.882, 21.8795, 0.4068 ) }
    dend_42 { pt3dadd( 305.006, 244.659, 21.8795, 0.483 ) }
    dend_42 { pt3dadd( 302.752, 242.22, 23.4805, 0.483 ) }
    dend_42 { pt3dadd( 301.978, 240.389, 23.4805, 0.5338 ) }
    dend_42 { pt3dadd( 292.038, 228.983, 28.2834, 0.5084 ) }
    dend_42 { pt3dadd( 289.89, 225.975, 26.1486, 0.483 ) }
    dend_42 { pt3dadd( 290.599, 223.421, 27.216, 0.3814 ) }
    dend_42 { pt3dadd( 290.236, 222.352, 27.216, 0.3304 ) }
    dend_42 { pt3dadd( 289.562, 221.202, 27.216, 0.3304 ) }
    dend_42 { pt3dadd( 287.844, 219.09, 25.615, 0.356 ) }
    dend_42 { pt3dadd( 287.526, 218.16, 25.615, 0.4068 ) }
    dend_42 { pt3dadd( 287.09, 216.819, 25.615, 0.4068 ) }
    dend_42 { pt3dadd( 286.672, 215.15, 26.6823, 0.4322 ) }
    dend_42 { pt3dadd( 285.397, 214.884, 26.6823, 0.4068 ) }
    dend_42 { pt3dadd( 284.04, 214.6, 26.6823, 0.4068 ) }
    dend_42 { pt3dadd( 282.454, 213.169, 25.615, 0.3814 ) }
    dend_42 { pt3dadd( 279.602, 213.278, 25.615, 0.4576 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 76/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 341.84, 242.553, 25.8532, 0.3304 ) }
    dend_40 { pt3dadd( 341.37, 242.185, 26.32, 0.5592 ) }
    dend_40 { pt3dadd( 340.81, 241.956, 26.3511, 0.5592 ) }
    dend_40 { pt3dadd( 340.188, 241.549, 26.5689, 0.5848 ) }
    dend_40 { pt3dadd( 339.628, 241.307, 26.5689, 0.4576 ) }
    dend_40 { pt3dadd( 338.98, 241.384, 26.3511, 0.4576 ) }
    dend_40 { pt3dadd( 338.599, 241.028, 26.7868, 0.3814 ) }
    dend_40 { pt3dadd( 338.243, 240.698, 27.0668, 0.4068 ) }
    dend_40 { pt3dadd( 338.052, 240.354, 27.16, 0.4322 ) }
    dend_40 { pt3dadd( 337.709, 240.278, 27.3468, 0.4576 ) }
    dend_40 { pt3dadd( 336.933, 240.507, 27.9689, 0.4322 ) }
    dend_40 { pt3dadd( 336.349, 240.698, 27.9689, 0.4068 ) }
    dend_40 { pt3dadd( 335.916, 240.621, 27.72, 0.356 ) }
    dend_40 { pt3dadd( 335.624, 240.354, 28.2178, 0.4322 ) }
    dend_40 { pt3dadd( 335.306, 240.126, 28.84, 0.4576 ) }
    dend_40 { pt3dadd( 334.887, 239.859, 29.12, 0.4322 ) }
    dend_40 { pt3dadd( 334.366, 239.782, 29.6178, 0.3814 ) }
    dend_40 { pt3dadd( 333.896, 239.604, 29.9911, 0.3304 ) }
    dend_40 { pt3dadd( 333.069, 239.083, 30.0532, 0.3814 ) }
    dend_40 { pt3dadd( 332.981, 238.892, 30.4889, 0.2542 ) }
    dend_40 { pt3dadd( 332.625, 238.676, 29.7111, 0.4576 ) }
    dend_40 { pt3dadd( 331.798, 237.927, 29.7111, 0.7626 ) }
    dend_40 { pt3dadd( 331.379, 237.418, 29.96, 0.5592 ) }
    dend_40 { pt3dadd( 331.188, 236.91, 30.4889, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 331.036, 236.388, 30.8, 0.5084 ) }
    dend_40 { pt3dadd( 330.502, 235.893, 31.0178, 0.5338 ) }
    dend_40 { pt3dadd( 329.98, 235.651, 31.7332, 0.4322 ) }
    dend_40 { pt3dadd( 330.006, 235.092, 32.0132, 0.305 ) }
    dend_40 { pt3dadd( 330.044, 234.876, 32.2311, 0.2542 ) }
    dend_40 { pt3dadd( 330.044, 234.177, 32.76, 0.2288 ) }
    dend_40 { pt3dadd( 330.044, 233.91, 32.5732, 0.2288 ) }
    dend_40 { pt3dadd( 330.044, 233.605, 32.48, 0.2288 ) }
    dend_40 { pt3dadd( 329.955, 233.351, 32.48, 0.2288 ) }
    dend_40 { pt3dadd( 329.281, 232.918, 33.1332, 0.305 ) }
    dend_40 { pt3dadd( 329.078, 232.727, 33.8489, 0.2542 ) }
    dend_40 { pt3dadd( 328.671, 232.461, 33.88, 0.2288 ) }
    dend_40 { pt3dadd( 328.328, 232.309, 34.0668, 0.2288 ) }
    dend_40 { pt3dadd( 327.985, 232.016, 34.4089, 0.2288 ) }
    dend_40 { pt3dadd( 327.743, 232.003, 34.1911, 0.2288 ) }
    dend_40 { pt3dadd( 327.413, 232.003, 34.44, 0.2542 ) }
    dend_40 { pt3dadd( 327.082, 231.698, 34.5957, 0.3814 ) }
    dend_40 { pt3dadd( 326.701, 231.456, 34.16, 0.3814 ) }
    dend_40 { pt3dadd( 326.078, 231.063, 34.7511, 0.3814 ) }
    dend_40 { pt3dadd( 325.672, 230.77, 35.0, 0.4322 ) }
    dend_40 { pt3dadd( 325.391, 230.376, 35.0311, 0.4322 ) }
    dend_40 { pt3dadd( 325.227, 230.249, 35.9957, 0.4068 ) }
    dend_40 { pt3dadd( 325.087, 229.88, 36.3689, 0.4576 ) }
    dend_40 { pt3dadd( 324.782, 229.295, 35.9332, 0.356 ) }
    dend_40 { pt3dadd( 324.629, 228.838, 36.4, 0.305 ) }
    dend_40 { pt3dadd( 324.438, 228.228, 36.4, 0.2542 ) }
    dend_40 { pt3dadd( 324.438, 227.427, 36.4, 0.2288 ) }
    dend_40 { pt3dadd( 324.159, 226.906, 36.4, 0.2288 ) }
    dend_40 { pt3dadd( 323.829, 226.512, 36.5868, 0.2288 ) }
    dend_40 { pt3dadd( 323.447, 226.245, 36.68, 0.2288 ) }
    dend_40 { pt3dadd( 323.193, 225.927, 36.96, 0.2288 ) }
    dend_40 { pt3dadd( 323.18, 224.91, 36.96, 0.2288 ) }
    dend_40 { pt3dadd( 322.964, 224.326, 36.96, 0.2288 ) }
    dend_40 { pt3dadd( 322.951, 223.995, 36.96, 0.2288 ) }
    dend_40 { pt3dadd( 322.913, 223.766, 37.1468, 0.2288 ) }
    dend_40 { pt3dadd( 322.685, 223.563, 37.7689, 0.3814 ) }
    dend_40 { pt3dadd( 322.443, 223.245, 37.8, 0.5084 ) }
    dend_40 { pt3dadd( 321.832, 222.712, 38.08, 0.4068 ) }
    dend_40 { pt3dadd( 321.541, 222.203, 38.08, 0.305 ) }
    dend_40 { pt3dadd( 321.235, 221.707, 38.08, 0.2542 ) }
    dend_40 { pt3dadd( 320.917, 221.224, 38.08, 0.2288 ) }
    dend_40 { pt3dadd( 320.499, 220.957, 38.08, 0.2288 ) }
    dend_40 { pt3dadd( 320.32, 220.449, 38.08, 0.2288 ) }
    dend_40 { pt3dadd( 320.015, 219.725, 38.08, 0.2542 ) }
    dend_40 { pt3dadd( 319.9, 219.038, 38.08, 0.305 ) }
    dend_40 { pt3dadd( 319.71, 218.427, 38.08, 0.356 ) }
    dend_40 { pt3dadd( 319.443, 217.894, 38.08, 0.4322 ) }
    dend_40 { pt3dadd( 319.278, 216.763, 38.8268, 0.7372 ) }
    dend_40 { pt3dadd( 318.833, 215.644, 38.92, 0.9914 ) }
    dend_40 { pt3dadd( 318.935, 214.843, 39.2311, 0.6102 ) }
    dend_40 { pt3dadd( 318.731, 213.699, 38.9511, 0.6864 ) }
    dend_40 { pt3dadd( 318.668, 213.165, 39.4489, 0.5592 ) }
    dend_40 { pt3dadd( 318.49, 212.632, 39.8532, 0.6864 ) }
    dend_40 { pt3dadd( 318.49, 211.869, 39.2, 0.7118 ) }
    dend_40 { pt3dadd( 317.93, 211.068, 38.8889, 0.7372 ) }
    dend_40 { pt3dadd( 317.422, 210.648, 39.48, 0.305 ) }
    dend_40 { pt3dadd( 316.901, 210.598, 39.48, 0.2542 ) }
    dend_40 { pt3dadd( 316.316, 209.962, 39.3868, 0.3814 ) }
    dend_40 { pt3dadd( 316.087, 209.619, 39.2932, 0.483 ) }
    dend_40 { pt3dadd( 316.43, 208.666, 40.32, 0.6356 ) }
    dend_40 { pt3dadd( 316.303, 208.106, 40.6, 0.6864 ) }
    dend_40 { pt3dadd( 315.655, 207.496, 40.88, 0.7372 ) }
    dend_40 { pt3dadd( 315.083, 206.696, 41.16, 0.5338 ) }
    dend_40 { pt3dadd( 314.727, 206.136, 42.0, 0.3304 ) }
    dend_40 { pt3dadd( 314.829, 205.5, 41.9068, 0.356 ) }
    dend_40 { pt3dadd( 314.841, 204.992, 40.88, 0.6102 ) }
    dend_40 { pt3dadd( 314.714, 204.356, 41.5332, 0.483 ) }
    dend_40 { pt3dadd( 314.6, 204.025, 42.4357, 0.5338 ) }
    dend_40 { pt3dadd( 314.6, 203.48, 41.9068, 0.5338 ) }
    dend_40 { pt3dadd( 314.232, 202.742, 42.28, 0.483 ) }
    dend_40 { pt3dadd( 314.028, 202.247, 43.0889, 0.2796 ) }
    dend_40 { pt3dadd( 314.028, 201.789, 42.8711, 0.2288 ) }
    dend_40 { pt3dadd( 314.028, 201.001, 42.84, 0.2288 ) }
    dend_40 { pt3dadd( 314.028, 200.772, 42.84, 0.2288 ) }
    dend_40 { pt3dadd( 314.028, 200.543, 42.84, 0.2542 ) }
    dend_40 { pt3dadd( 314.028, 200.213, 42.5289, 0.4576 ) }
    dend_40 { pt3dadd( 314.257, 199.857, 41.72, 0.4322 ) }
    dend_40 { pt3dadd( 314.207, 199.069, 42.4668, 0.2796 ) }
    dend_40 { pt3dadd( 314.015, 198.497, 42.56, 0.305 ) }
    dend_40 { pt3dadd( 313.799, 197.989, 42.3732, 0.2796 ) }
    dend_40 { pt3dadd( 313.697, 197.353, 42.28, 0.2796 ) }
    dend_40 { pt3dadd( 313.812, 196.781, 42.0, 0.2796 ) }
    dend_40 { pt3dadd( 314.028, 196.387, 42.0932, 0.3304 ) }
    dend_40 { pt3dadd( 314.13, 195.878, 42.1868, 0.356 ) }
    dend_40 { pt3dadd( 314.257, 195.497, 42.2489, 0.4068 ) }
    dend_40 { pt3dadd( 314.142, 195.154, 42.8089, 0.3304 ) }
    dend_40 { pt3dadd( 314.028, 194.301, 42.7157, 0.4322 ) }
    dend_40 { pt3dadd( 314.028, 193.946, 42.0932, 0.483 ) }
    dend_40 { pt3dadd( 313.723, 193.641, 42.56, 0.5084 ) }
    dend_40 { pt3dadd( 313.57, 192.548, 42.5911, 0.5592 ) }
    dend_40 { pt3dadd( 313.583, 192.052, 42.3732, 0.5338 ) }
    dend_40 { pt3dadd( 313.723, 191.543, 42.0, 0.4576 ) }
    dend_40 { pt3dadd( 313.837, 191.023, 41.9689, 0.3814 ) }
    dend_40 { pt3dadd( 313.685, 190.374, 41.7511, 0.305 ) }
    dend_40 { pt3dadd( 313.685, 189.79, 42.28, 0.2542 ) }
    dend_40 { pt3dadd( 313.672, 189.459, 42.28, 0.2288 ) }
    dend_40 { pt3dadd( 313.227, 189.218, 42.28, 0.2542 ) }
    dend_40 { pt3dadd( 312.998, 189.103, 41.72, 0.305 ) }
    dend_40 { pt3dadd( 312.77, 188.81, 41.5643, 0.483 ) }
    dend_40 { pt3dadd( 312.668, 188.29, 42.28, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_40 { pt3dadd( 312.503, 187.883, 42.0, 0.3814 ) }
    dend_40 { pt3dadd( 312.643, 187.502, 41.4711, 0.5592 ) }
    dend_40 { pt3dadd( 312.884, 187.502, 41.6889, 0.2796 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 3/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 341.84, 242.553, 25.8532, 0.3304 ) }
    dend_39 { pt3dadd( 341.827, 242.07, 25.48, 0.5848 ) }
    dend_39 { pt3dadd( 341.789, 241.613, 25.0132, 0.5338 ) }
    dend_39 { pt3dadd( 341.611, 241.105, 25.3868, 0.5084 ) }
    dend_39 { pt3dadd( 341.598, 240.469, 25.76, 0.5338 ) }
    dend_39 { pt3dadd( 341.586, 239.833, 26.5068, 0.6356 ) }
    dend_39 { pt3dadd( 341.382, 239.312, 26.04, 0.4576 ) }
    dend_39 { pt3dadd( 341.243, 238.422, 26.04, 0.3814 ) }
    dend_39 { pt3dadd( 340.989, 237.952, 26.2268, 0.4068 ) }
    dend_39 { pt3dadd( 340.925, 237.278, 26.32, 0.4322 ) }
    dend_39 { pt3dadd( 340.989, 236.719, 26.5689, 0.4576 ) }
    dend_39 { pt3dadd( 340.835, 236.186, 26.8489, 0.4576 ) }
    dend_39 { pt3dadd( 340.607, 235.626, 26.88, 0.4576 ) }
    dend_39 { pt3dadd( 340.429, 235.003, 26.88, 0.4576 ) }
    dend_39 { pt3dadd( 340.111, 234.52, 26.88, 0.4576 ) }
    dend_39 { pt3dadd( 339.845, 233.986, 26.88, 0.4322 ) }
    dend_39 { pt3dadd( 339.806, 233.299, 26.88, 0.3814 ) }
    dend_39 { pt3dadd( 339.895, 232.779, 26.9732, 0.3304 ) }
    dend_39 { pt3dadd( 339.959, 232.27, 27.16, 0.3304 ) }
    dend_39 { pt3dadd( 339.781, 231.762, 27.44, 0.3814 ) }
    dend_39 { pt3dadd( 339.818, 231.24, 27.4089, 0.4322 ) }
    dend_39 { pt3dadd( 339.997, 230.859, 27.16, 0.4576 ) }
    dend_39 { pt3dadd( 339.959, 230.325, 27.44, 0.4576 ) }
    dend_39 { pt3dadd( 339.768, 229.613, 27.7511, 0.4576 ) }
    dend_39 { pt3dadd( 339.641, 229.156, 28.28, 0.4576 ) }
    dend_39 { pt3dadd( 339.425, 228.787, 29.0889, 0.2542 ) }
    dend_39 { pt3dadd( 339.425, 228.342, 28.56, 0.4322 ) }
    dend_39 { pt3dadd( 339.425, 227.77, 28.28, 0.4576 ) }
    dend_39 { pt3dadd( 339.425, 227.377, 28.9957, 0.5084 ) }
    dend_39 { pt3dadd( 339.348, 226.703, 29.4, 0.4322 ) }
    dend_39 { pt3dadd( 339.31, 226.296, 29.4311, 0.2542 ) }
    dend_39 { pt3dadd( 339.183, 225.94, 29.4311, 0.305 ) }
    dend_39 { pt3dadd( 338.84, 225.266, 30.24, 0.3814 ) }
    dend_39 { pt3dadd( 338.701, 224.796, 30.3332, 0.4068 ) }
    dend_39 { pt3dadd( 338.624, 224.326, 29.9911, 0.4576 ) }
    dend_39 { pt3dadd( 338.637, 223.779, 30.8, 0.5084 ) }
    dend_39 { pt3dadd( 338.738, 223.194, 31.08, 0.4322 ) }
    dend_39 { pt3dadd( 338.701, 222.431, 31.08, 0.3304 ) }
    dend_39 { pt3dadd( 338.51, 221.949, 31.3911, 0.2542 ) }
    dend_39 { pt3dadd( 338.472, 221.402, 31.92, 0.2288 ) }
    dend_39 { pt3dadd( 338.395, 220.678, 31.92, 0.2288 ) }
    dend_39 { pt3dadd( 338.395, 219.877, 31.92, 0.2288 ) }
    dend_39 { pt3dadd( 338.395, 219.076, 31.92, 0.2288 ) }
    dend_39 { pt3dadd( 338.395, 218.275, 31.92, 0.2796 ) }
    dend_39 { pt3dadd( 338.395, 217.474, 31.92, 0.3814 ) }
    dend_39 { pt3dadd( 338.472, 217.004, 32.3557, 0.5084 ) }
    dend_39 { pt3dadd( 338.433, 216.521, 33.04, 0.4068 ) }
    dend_39 { pt3dadd( 338.395, 216.089, 32.7911, 0.4322 ) }
    dend_39 { pt3dadd( 338.281, 215.644, 32.2, 0.4576 ) }
    dend_39 { pt3dadd( 338.192, 215.161, 31.92, 0.4576 ) }
    dend_39 { pt3dadd( 338.09, 214.577, 32.76, 0.5338 ) }
    dend_39 { pt3dadd( 337.709, 214.005, 32.2932, 0.5338 ) }
    dend_39 { pt3dadd( 337.48, 213.394, 32.2932, 0.4068 ) }
    dend_39 { pt3dadd( 337.239, 213.025, 32.2, 0.3814 ) }
    dend_39 { pt3dadd( 336.908, 212.67, 32.2, 0.4068 ) }
    dend_39 { pt3dadd( 337.035, 212.301, 32.2932, 0.4322 ) }
    dend_39 { pt3dadd( 337.162, 211.844, 32.48, 0.4322 ) }
    dend_39 { pt3dadd( 336.781, 211.538, 32.76, 0.4576 ) }
    dend_39 { pt3dadd( 336.222, 211.297, 33.88, 0.4576 ) }
    dend_39 { pt3dadd( 336.107, 210.648, 33.7868, 0.5338 ) }
    dend_39 { pt3dadd( 336.043, 210.026, 32.9468, 0.483 ) }
    dend_39 { pt3dadd( 335.955, 209.047, 32.2, 0.5848 ) }
    dend_39 { pt3dadd( 335.777, 208.526, 31.8268, 0.483 ) }
    dend_39 { pt3dadd( 335.955, 207.941, 31.7022, 0.4576 ) }
    dend_39 { pt3dadd( 336.107, 207.559, 32.8532, 0.5338 ) }
    dend_39 { pt3dadd( 336.107, 206.987, 33.1332, 0.4068 ) }
    dend_39 { pt3dadd( 336.184, 206.415, 33.6, 0.4576 ) }
    dend_39 { pt3dadd( 336.145, 205.742, 33.5689, 0.4322 ) }
    dend_39 { pt3dadd( 336.145, 205.271, 33.04, 0.4322 ) }
    dend_39 { pt3dadd( 336.222, 204.801, 33.3822, 0.4576 ) }
    dend_39 { pt3dadd( 336.361, 204.344, 33.6, 0.356 ) }
    dend_39 { pt3dadd( 336.565, 203.823, 33.4132, 0.4068 ) }
    dend_39 { pt3dadd( 336.577, 203.174, 32.5111, 0.5338 ) }
    dend_39 { pt3dadd( 336.831, 202.259, 32.9468, 0.483 ) }
    dend_39 { pt3dadd( 337.175, 201.573, 32.8532, 0.8898 ) }
    dend_39 { pt3dadd( 336.946, 200.963, 31.92, 0.7626 ) }
    dend_39 { pt3dadd( 337.01, 200.073, 32.2, 0.839 ) }
    dend_39 { pt3dadd( 336.679, 199.272, 31.9511, 0.7626 ) }
    dend_39 { pt3dadd( 336.463, 198.509, 31.4532, 0.6864 ) }
    dend_39 { pt3dadd( 336.565, 197.404, 31.7957, 0.6864 ) }
    dend_39 { pt3dadd( 336.565, 196.882, 33.04, 0.5338 ) }
    dend_39 { pt3dadd( 336.565, 196.501, 33.7868, 0.483 ) }
    dend_39 { pt3dadd( 336.565, 195.738, 33.6, 0.5592 ) }
    dend_39 { pt3dadd( 336.679, 195.065, 33.9111, 0.5338 ) }
    dend_39 { pt3dadd( 336.794, 193.908, 34.16, 0.5848 ) }
    dend_39 { pt3dadd( 337.112, 192.955, 33.4132, 0.5338 ) }
    dend_39 { pt3dadd( 337.251, 192.192, 33.32, 0.5592 ) }
    dend_39 { pt3dadd( 337.594, 191.849, 33.04, 0.305 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 91/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 432.037, 292.865, 33.8481, 0.6102 ) }
    dend_36 { pt3dadd( 431.86, 292.063, 31.92, 0.3304 ) }
    dend_36 { pt3dadd( 432.191, 291.822, 31.36, 0.6102 ) }
    dend_36 { pt3dadd( 432.355, 291.198, 32.4489, 0.5338 ) }
    dend_36 { pt3dadd( 432.661, 290.69, 32.2, 0.483 ) }
    dend_36 { pt3dadd( 432.89, 290.118, 32.2, 0.6102 ) }
    dend_36 { pt3dadd( 433.208, 289.636, 32.2, 0.6864 ) }
    dend_36 { pt3dadd( 433.576, 288.669, 32.8532, 0.4576 ) }
    dend_36 { pt3dadd( 433.653, 288.263, 33.2889, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_36 { pt3dadd( 433.69, 287.716, 33.04, 0.3814 ) }
    dend_36 { pt3dadd( 433.843, 287.258, 32.9468, 0.6102 ) }
    dend_36 { pt3dadd( 434.148, 286.801, 33.04, 0.5338 ) }
    dend_36 { pt3dadd( 434.504, 286.356, 33.04, 0.483 ) }
    dend_36 { pt3dadd( 434.733, 285.936, 33.1332, 0.483 ) }
    dend_36 { pt3dadd( 434.834, 285.199, 33.04, 0.5848 ) }
    dend_36 { pt3dadd( 434.987, 284.665, 32.76, 0.483 ) }
    dend_36 { pt3dadd( 435.178, 284.182, 32.7289, 0.4576 ) }
    dend_36 { pt3dadd( 435.342, 283.648, 31.92, 0.5338 ) }
    dend_36 { pt3dadd( 435.712, 283.153, 31.7957, 0.661 ) }
    dend_36 { pt3dadd( 436.207, 282.682, 31.92, 0.661 ) }
    dend_36 { pt3dadd( 436.55, 282.454, 31.1422, 0.5338 ) }
    dend_36 { pt3dadd( 437.008, 282.454, 31.64, 0.2542 ) }
    dend_36 { pt3dadd( 437.313, 282.491, 32.2, 0.4576 ) }
    dend_36 { pt3dadd( 437.542, 282.11, 32.6668, 0.483 ) }
    dend_36 { pt3dadd( 437.771, 281.729, 31.92, 0.356 ) }
    dend_36 { pt3dadd( 437.961, 281.462, 31.64, 0.305 ) }
    dend_36 { pt3dadd( 438.152, 281.183, 32.4489, 0.6864 ) }
    dend_36 { pt3dadd( 438.699, 280.827, 33.04, 0.5848 ) }
    dend_36 { pt3dadd( 439.029, 280.471, 33.04, 0.4576 ) }
    dend_36 { pt3dadd( 439.067, 279.822, 33.04, 0.5848 ) }
    dend_36 { pt3dadd( 439.296, 279.263, 32.1689, 0.7372 ) }
    dend_36 { pt3dadd( 439.741, 278.907, 31.6089, 0.4576 ) }
    dend_36 { pt3dadd( 440.097, 278.742, 30.6443, 0.5084 ) }
    dend_36 { pt3dadd( 440.326, 278.45, 31.36, 0.3814 ) }
    dend_36 { pt3dadd( 440.49, 278.157, 32.2, 0.6356 ) }
    dend_36 { pt3dadd( 440.91, 277.776, 31.92, 0.6864 ) }
    dend_36 { pt3dadd( 441.291, 277.191, 31.7957, 0.6102 ) }
    dend_36 { pt3dadd( 441.775, 276.962, 31.5468, 0.4576 ) }
    dend_36 { pt3dadd( 441.965, 276.632, 31.7957, 0.3304 ) }
    dend_36 { pt3dadd( 442.36, 276.632, 32.2932, 0.4576 ) }
    dend_36 { pt3dadd( 442.766, 276.212, 31.6089, 0.7118 ) }
    dend_36 { pt3dadd( 443.529, 275.654, 30.9243, 0.7118 ) }
    dend_36 { pt3dadd( 443.872, 275.119, 30.2711, 0.356 ) }
    dend_36 { pt3dadd( 444.33, 274.916, 30.5511, 0.4322 ) }
    dend_36 { pt3dadd( 444.698, 274.7, 31.08, 0.5084 ) }
    dend_36 { pt3dadd( 444.939, 274.153, 31.3911, 0.4322 ) }
    dend_36 { pt3dadd( 445.461, 273.747, 31.64, 0.661 ) }
    dend_36 { pt3dadd( 446.046, 273.378, 30.9868, 0.5848 ) }
    dend_36 { pt3dadd( 446.351, 272.921, 31.08, 0.483 ) }
    dend_36 { pt3dadd( 446.618, 272.488, 31.3289, 0.4322 ) }
    dend_36 { pt3dadd( 446.936, 272.158, 31.0178, 0.483 ) }
    dend_36 { pt3dadd( 447.52, 271.802, 30.8, 0.6864 ) }
    dend_36 { pt3dadd( 447.863, 271.395, 31.4843, 0.483 ) }
    dend_36 { pt3dadd( 447.99, 270.899, 31.36, 0.5338 ) }
    dend_36 { pt3dadd( 448.435, 270.747, 31.4222, 0.5338 ) }
    dend_36 { pt3dadd( 448.893, 270.327, 31.6711, 0.661 ) }
    dend_36 { pt3dadd( 449.249, 269.87, 31.64, 0.483 ) }
    dend_36 { pt3dadd( 449.719, 269.539, 32.2, 0.6864 ) }
    dend_36 { pt3dadd( 450.126, 268.7, 32.5111, 0.5338 ) }
    dend_36 { pt3dadd( 450.457, 268.332, 32.76, 0.4576 ) }
    dend_36 { pt3dadd( 450.659, 267.963, 33.32, 0.3814 ) }
    dend_36 { pt3dadd( 450.863, 267.48, 33.32, 0.2542 ) }
    dend_36 { pt3dadd( 450.977, 267.124, 32.7911, 0.356 ) }
    dend_36 { pt3dadd( 451.194, 266.717, 32.6357, 0.4576 ) }
    dend_36 { pt3dadd( 451.512, 266.336, 32.2932, 0.3814 ) }
    dend_36 { pt3dadd( 451.728, 265.828, 32.48, 0.4068 ) }
    dend_36 { pt3dadd( 451.994, 265.522, 32.2, 0.5084 ) }
    dend_36 { pt3dadd( 452.236, 265.154, 31.1732, 0.4576 ) }
    dend_36 { pt3dadd( 452.375, 264.823, 32.3557, 0.5084 ) }
    dend_36 { pt3dadd( 452.656, 264.823, 33.1332, 0.3304 ) }
    dend_36 { pt3dadd( 452.82, 264.747, 33.32, 0.2542 ) }
    dend_36 { pt3dadd( 453.024, 264.531, 33.4132, 0.2288 ) }
    dend_36 { pt3dadd( 453.367, 264.264, 33.32, 0.2288 ) }
    dend_36 { pt3dadd( 453.634, 264.187, 33.32, 0.2288 ) }
    dend_36 { pt3dadd( 453.825, 264.15, 33.32, 0.2288 ) }
    dend_36 { pt3dadd( 454.054, 264.15, 33.32, 0.2288 ) }
    dend_36 { pt3dadd( 454.27, 264.023, 33.32, 0.2288 ) }
    dend_36 { pt3dadd( 454.282, 263.692, 33.32, 0.2288 ) }
    dend_36 { pt3dadd( 454.282, 263.463, 33.32, 0.2288 ) }
    dend_36 { pt3dadd( 454.32, 263.158, 33.32, 0.2288 ) }
    dend_36 { pt3dadd( 454.435, 262.941, 33.2889, 0.2542 ) }
    dend_36 { pt3dadd( 454.663, 262.815, 32.2, 0.4068 ) }
    dend_36 { pt3dadd( 455.198, 262.548, 32.2, 0.4322 ) }
    dend_36 { pt3dadd( 455.503, 262.205, 31.8268, 0.4068 ) }
    dend_36 { pt3dadd( 455.579, 262.128, 30.52, 0.5592 ) }
    dend_36 { pt3dadd( 455.961, 261.874, 30.9243, 0.483 ) }
    dend_36 { pt3dadd( 456.202, 261.722, 31.64, 0.4576 ) }
    dend_36 { pt3dadd( 456.494, 261.327, 31.36, 0.5338 ) }
    dend_36 { pt3dadd( 456.951, 260.984, 31.36, 0.5084 ) }
    dend_36 { pt3dadd( 457.244, 260.591, 31.08, 0.5084 ) }
    dend_36 { pt3dadd( 457.587, 260.069, 30.9243, 0.3304 ) }
    dend_36 { pt3dadd( 457.689, 259.993, 31.3289, 0.2542 ) }
    dend_36 { pt3dadd( 457.841, 259.663, 31.5468, 0.2542 ) }
    dend_36 { pt3dadd( 458.172, 259.421, 31.1732, 0.3814 ) }
    dend_36 { pt3dadd( 458.54, 259.039, 31.1111, 0.4576 ) }
    dend_36 { pt3dadd( 459.062, 258.442, 31.4532, 0.4576 ) }
    dend_36 { pt3dadd( 459.393, 258.163, 31.64, 0.4322 ) }
    dend_36 { pt3dadd( 459.684, 257.895, 31.3289, 0.305 ) }
    dend_36 { pt3dadd( 459.824, 257.667, 30.8311, 0.2542 ) }
    dend_36 { pt3dadd( 460.117, 257.54, 31.4222, 0.356 ) }
    dend_36 { pt3dadd( 460.447, 257.387, 31.64, 0.356 ) }
    dend_36 { pt3dadd( 460.778, 257.069, 31.7332, 0.356 ) }
    dend_36 { pt3dadd( 461.045, 256.942, 31.3911, 0.3814 ) }
    dend_36 { pt3dadd( 461.337, 256.676, 31.36, 0.3814 ) }
    dend_36 { pt3dadd( 461.808, 256.116, 31.36, 0.4068 ) }
    dend_36 { pt3dadd( 462.099, 255.734, 31.6089, 0.4576 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 97/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 432.037, 292.865, 33.8481, 0.6102 ) }
    dend_35 { pt3dadd( 433.077, 292.871, 34.9938, 0.661 ) }
    dend_35 { pt3dadd( 434.209, 292.912, 35.2887, 0.7626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_35 { pt3dadd( 435.317, 293.155, 35.3402, 0.8136 ) }
    dend_35 { pt3dadd( 436.384, 292.969, 35.7076, 0.7626 ) }
    dend_35 { pt3dadd( 437.071, 292.477, 37.4489, 0.7118 ) }
    dend_35 { pt3dadd( 438.128, 292.698, 37.9733, 0.661 ) }
    dend_35 { pt3dadd( 439.031, 292.587, 39.4475, 0.6356 ) }
    dend_35 { pt3dadd( 439.703, 291.701, 39.9353, 0.5848 ) }
    dend_35 { pt3dadd( 440.06, 290.704, 40.7823, 0.6356 ) }
    dend_35 { pt3dadd( 439.766, 289.948, 42.6157, 0.6864 ) }
    dend_35 { pt3dadd( 439.106, 289.064, 43.2062, 0.788 ) }
    dend_35 { pt3dadd( 438.595, 288.072, 43.6103, 0.7118 ) }
    dend_35 { pt3dadd( 438.743, 286.996, 44.2523, 0.5848 ) }
    dend_35 { pt3dadd( 438.596, 285.892, 44.4732, 0.4322 ) }
    dend_35 { pt3dadd( 438.027, 285.087, 45.6666, 0.4068 ) }
    dend_35 { pt3dadd( 438.281, 284.154, 46.94, 0.4322 ) }
    dend_35 { pt3dadd( 439.121, 283.448, 47.6022, 0.4322 ) }
    dend_35 { pt3dadd( 439.813, 282.592, 47.8349, 0.3814 ) }
    dend_35 { pt3dadd( 440.491, 281.845, 48.7659, 0.3814 ) }
    dend_35 { pt3dadd( 441.449, 281.374, 49.4712, 0.4576 ) }
    dend_35 { pt3dadd( 442.366, 280.996, 50.7088, 0.5592 ) }
    dend_35 { pt3dadd( 443.401, 280.566, 51.0905, 0.5592 ) }
    dend_35 { pt3dadd( 444.499, 280.553, 51.7616, 0.483 ) }
    dend_35 { pt3dadd( 445.245, 280.966, 50.96, 0.4322 ) }
    dend_35 { pt3dadd( 445.041, 280.547, 51.8932, 0.4322 ) }
    dend_35 { pt3dadd( 445.168, 280.432, 52.92, 0.3304 ) }
    dend_35 { pt3dadd( 445.715, 280.28, 52.9511, 0.2288 ) }
    dend_35 { pt3dadd( 445.995, 280.28, 52.7957, 0.2542 ) }
    dend_35 { pt3dadd( 446.351, 280.013, 52.36, 0.483 ) }
    dend_35 { pt3dadd( 446.986, 279.848, 52.36, 0.5848 ) }
    dend_35 { pt3dadd( 447.304, 279.606, 51.8311, 0.305 ) }
    dend_35 { pt3dadd( 447.304, 279.594, 52.36, 0.2288 ) }
    dend_35 { pt3dadd( 447.418, 279.581, 53.1689, 0.483 ) }
    dend_35 { pt3dadd( 447.889, 279.517, 52.7643, 0.483 ) }
    dend_35 { pt3dadd( 448.105, 279.937, 52.92, 0.356 ) }
    dend_35 { pt3dadd( 448.512, 280.166, 52.7957, 0.3814 ) }
    dend_35 { pt3dadd( 448.791, 280.166, 52.36, 0.4068 ) }
    dend_35 { pt3dadd( 449.02, 279.873, 52.4843, 0.3814 ) }
    dend_35 { pt3dadd( 449.122, 279.67, 53.1378, 0.4576 ) }
    dend_35 { pt3dadd( 449.313, 279.581, 54.1332, 0.5338 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 359.754, 321.124, 10.6168, 0.7118 ) }
    dend_23 { pt3dadd( 359.946, 321.796, 9.6656, 0.5848 ) }
    dend_23 { pt3dadd( 360.501, 322.703, 10.5414, 0.7118 ) }
    dend_23 { pt3dadd( 361.297, 323.521, 10.6319, 0.7118 ) }
    dend_23 { pt3dadd( 362.139, 324.295, 10.6058, 0.6356 ) }
    dend_23 { pt3dadd( 363.048, 324.976, 10.4286, 0.5084 ) }
    dend_23 { pt3dadd( 363.151, 325.844, 9.3159, 0.4576 ) }
    dend_23 { pt3dadd( 362.44, 326.637, 8.4972, 0.4322 ) }
    dend_23 { pt3dadd( 361.828, 327.573, 8.6442, 0.4576 ) }
    dend_23 { pt3dadd( 361.867, 328.659, 9.3794, 0.4068 ) }
    dend_23 { pt3dadd( 362.457, 329.601, 9.2431, 0.3814 ) }
    dend_23 { pt3dadd( 363.364, 330.158, 8.3238, 0.3814 ) }
    dend_23 { pt3dadd( 364.286, 330.537, 6.977, 0.483 ) }
    dend_23 { pt3dadd( 365.174, 331.141, 6.2149, 0.5338 ) }
    dend_23 { pt3dadd( 365.924, 332.001, 6.1888, 0.5848 ) }
    dend_23 { pt3dadd( 366.223, 333.07, 6.3417, 0.5848 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 54/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 359.754, 321.124, 10.6168, 0.7118 ) }
    dend_22 { pt3dadd( 358.757, 321.573, 10.2074, 0.4576 ) }
    dend_22 { pt3dadd( 358.083, 321.118, 8.3258, 0.3814 ) }
    dend_22 { pt3dadd( 357.286, 320.799, 6.7413, 0.4068 ) }
    dend_22 { pt3dadd( 356.372, 320.884, 8.2261, 0.5084 ) }
    dend_22 { pt3dadd( 355.443, 321.363, 9.263, 0.5848 ) }
    dend_22 { pt3dadd( 354.519, 322.012, 9.5264, 0.6102 ) }
    dend_22 { pt3dadd( 353.636, 322.738, 9.5497, 0.6356 ) }
    dend_22 { pt3dadd( 352.552, 322.948, 9.7303, 0.6356 ) }
    dend_22 { pt3dadd( 351.798, 322.281, 10.7492, 0.5848 ) }
    dend_22 { pt3dadd( 351.267, 321.368, 11.5382, 0.483 ) }
    dend_22 { pt3dadd( 350.57, 320.609, 10.5602, 0.4322 ) }
    dend_22 { pt3dadd( 349.811, 320.907, 8.8407, 0.4576 ) }
    dend_22 { pt3dadd( 349.013, 321.383, 7.2951, 0.5338 ) }
    dend_22 { pt3dadd( 348.184, 322.05, 6.3994, 0.5848 ) }
    dend_22 { pt3dadd( 347.528, 322.971, 6.1916, 0.6102 ) }
    dend_22 { pt3dadd( 346.614, 323.63, 6.3893, 0.6102 ) }
    dend_22 { pt3dadd( 345.715, 323.346, 7.3651, 0.5592 ) }
    dend_22 { pt3dadd( 345.293, 322.36, 8.0909, 0.5084 ) }
    dend_22 { pt3dadd( 345.335, 321.243, 7.9442, 0.4322 ) }
    dend_22 { pt3dadd( 345.729, 320.193, 8.2701, 0.4322 ) }
    dend_22 { pt3dadd( 346.45, 319.337, 7.9654, 0.4576 ) }
    dend_22 { pt3dadd( 346.775, 318.397, 6.6346, 0.483 ) }
    dend_22 { pt3dadd( 346.658, 317.565, 7.0686, 0.4576 ) }
    dend_22 { pt3dadd( 345.544, 317.383, 7.1568, 0.356 ) }
    dend_22 { pt3dadd( 344.466, 317.078, 6.7508, 0.305 ) }
    dend_22 { pt3dadd( 343.827, 316.737, 8.6486, 0.305 ) }
    dend_22 { pt3dadd( 343.32, 315.848, 8.9981, 0.356 ) }
    dend_22 { pt3dadd( 342.622, 315.268, 7.5023, 0.3814 ) }
    dend_22 { pt3dadd( 342.924, 314.34, 6.1986, 0.356 ) }
    dend_22 { pt3dadd( 343.04, 313.236, 5.5829, 0.3304 ) }
    dend_22 { pt3dadd( 343.447, 312.342, 6.6542, 0.2796 ) }
    dend_22 { pt3dadd( 344.109, 311.455, 6.5279, 0.2542 ) }
    dend_22 { pt3dadd( 344.667, 310.474, 6.526, 0.2796 ) }
    dend_22 { pt3dadd( 344.764, 309.516, 7.9184, 0.3304 ) }
    dend_22 { pt3dadd( 344.597, 308.628, 9.604, 0.4068 ) }
    dend_22 { pt3dadd( 343.692, 308.318, 11.0429, 0.4068 ) }
    dend_22 { pt3dadd( 342.896, 307.888, 12.6647, 0.4322 ) }
    dend_22 { pt3dadd( 341.983, 307.717, 13.7178, 0.4322 ) }
    dend_22 { pt3dadd( 341.066, 308.3, 13.0432, 0.4322 ) }
    dend_22 { pt3dadd( 340.656, 309.277, 12.2192, 0.3814 ) }
    dend_22 { pt3dadd( 340.485, 310.381, 11.802, 0.305 ) }
    dend_22 { pt3dadd( 341.105, 311.224, 12.0439, 0.2796 ) }
    dend_22 { pt3dadd( 341.926, 311.875, 12.8192, 0.3304 ) }
    dend_22 { pt3dadd( 342.056, 312.998, 12.88, 0.483 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 99/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 347.101, 297.1, 11.7891, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_20 { pt3dadd( 345.971, 296.279, 11.984, 0.5592 ) }
    dend_20 { pt3dadd( 345.179, 295.553, 12.7658, 0.483 ) }
    dend_20 { pt3dadd( 344.109, 295.238, 12.8887, 0.4068 ) }
    dend_20 { pt3dadd( 343.068, 294.77, 12.9284, 0.4322 ) }
    dend_20 { pt3dadd( 341.947, 294.629, 13.2163, 0.5338 ) }
    dend_20 { pt3dadd( 340.876, 294.364, 13.6458, 0.661 ) }
    dend_20 { pt3dadd( 339.761, 294.404, 13.9535, 0.6864 ) }
    dend_20 { pt3dadd( 338.777, 294.943, 14.4197, 0.6102 ) }
    dend_20 { pt3dadd( 337.745, 295.027, 15.5078, 0.5084 ) }
    dend_20 { pt3dadd( 336.772, 294.55, 16.1935, 0.5084 ) }
    dend_20 { pt3dadd( 335.756, 294.035, 16.2932, 0.5848 ) }
    dend_20 { pt3dadd( 334.65, 294.018, 16.5922, 0.6356 ) }
    dend_20 { pt3dadd( 333.588, 293.826, 17.2833, 0.6356 ) }
    dend_20 { pt3dadd( 332.537, 293.399, 17.2385, 0.5592 ) }
    dend_20 { pt3dadd( 331.846, 292.602, 16.5724, 0.5338 ) }
    dend_20 { pt3dadd( 331.073, 292.017, 17.7262, 0.483 ) }
    dend_20 { pt3dadd( 329.984, 291.961, 17.6739, 0.5084 ) }
    dend_20 { pt3dadd( 328.854, 292.039, 17.5291, 0.483 ) }
    dend_20 { pt3dadd( 328.026, 292.623, 18.4923, 0.4576 ) }
    dend_20 { pt3dadd( 327.279, 293.35, 19.502, 0.4322 ) }
    dend_20 { pt3dadd( 326.277, 293.876, 19.6045, 0.4576 ) }
    dend_20 { pt3dadd( 325.262, 294.389, 19.6244, 0.5592 ) }
    dend_20 { pt3dadd( 324.175, 294.685, 19.7495, 0.6102 ) }
    dend_20 { pt3dadd( 323.078, 294.638, 20.4501, 0.6356 ) }
    dend_20 { pt3dadd( 321.965, 294.46, 20.7211, 0.6102 ) }
    dend_20 { pt3dadd( 320.954, 294.97, 20.7253, 0.6102 ) }
    dend_20 { pt3dadd( 319.848, 295.237, 20.7564, 0.6102 ) }
    dend_20 { pt3dadd( 318.756, 295.547, 20.9468, 0.6102 ) }
    dend_20 { pt3dadd( 317.787, 295.54, 22.2443, 0.661 ) }
    dend_20 { pt3dadd( 316.981, 295.189, 23.8661, 0.661 ) }
    dend_20 { pt3dadd( 316.107, 294.465, 24.0856, 0.661 ) }
    dend_20 { pt3dadd( 315.134, 293.895, 24.1083, 0.6102 ) }
    dend_20 { pt3dadd( 314.043, 294.094, 24.2822, 0.661 ) }
    dend_20 { pt3dadd( 313.314, 294.896, 25.0342, 0.7118 ) }
    dend_20 { pt3dadd( 312.427, 295.541, 25.6102, 0.7626 ) }
    dend_20 { pt3dadd( 311.314, 295.747, 25.468, 0.7372 ) }
    dend_20 { pt3dadd( 309.818, 295.319, 26.236, 0.7118 ) }
    dend_20 { pt3dadd( 308.719, 295.112, 26.7159, 0.661 ) }
    dend_20 { pt3dadd( 307.638, 294.882, 27.1964, 0.6102 ) }
    dend_20 { pt3dadd( 306.595, 294.53, 26.5868, 0.5592 ) }
    dend_20 { pt3dadd( 305.56, 294.393, 27.3473, 0.5338 ) }
    dend_20 { pt3dadd( 304.46, 294.674, 27.44, 0.5592 ) }
    dend_20 { pt3dadd( 303.317, 294.675, 27.44, 0.5848 ) }
    dend_20 { pt3dadd( 302.18, 294.563, 27.44, 0.6102 ) }
    dend_20 { pt3dadd( 301.165, 294.054, 27.44, 0.6356 ) }
    dend_20 { pt3dadd( 300.522, 293.131, 27.4403, 0.6864 ) }
    dend_20 { pt3dadd( 300.442, 292.03, 27.4411, 0.7118 ) }
    dend_20 { pt3dadd( 300.546, 290.901, 27.4481, 0.661 ) }
    dend_20 { pt3dadd( 300.138, 289.843, 27.4879, 0.5848 ) }
    dend_20 { pt3dadd( 299.523, 288.884, 27.6688, 0.5338 ) }
    dend_20 { pt3dadd( 299.0, 287.916, 28.3732, 0.5338 ) }
    dend_20 { pt3dadd( 298.68, 286.827, 28.4908, 0.5084 ) }
    dend_20 { pt3dadd( 298.466, 285.737, 28.0613, 0.483 ) }
    dend_20 { pt3dadd( 298.781, 284.68, 27.806, 0.5084 ) }
    dend_20 { pt3dadd( 298.896, 283.609, 28.5678, 0.5848 ) }
    dend_20 { pt3dadd( 299.255, 282.533, 28.6076, 0.661 ) }
    dend_20 { pt3dadd( 299.643, 281.467, 28.8179, 0.6864 ) }
    dend_20 { pt3dadd( 299.577, 280.386, 29.5887, 0.6356 ) }
    dend_20 { pt3dadd( 299.341, 279.279, 29.6794, 0.5848 ) }
    dend_20 { pt3dadd( 299.629, 278.189, 29.6769, 0.5084 ) }
    dend_20 { pt3dadd( 300.021, 277.751, 29.2132, 0.4322 ) }
    dend_20 { pt3dadd( 300.109, 277.013, 29.3689, 0.483 ) }
    dend_20 { pt3dadd( 300.325, 276.53, 29.4, 0.4576 ) }
    dend_20 { pt3dadd( 300.414, 276.06, 29.7111, 0.4322 ) }
    dend_20 { pt3dadd( 300.631, 275.704, 29.9289, 0.305 ) }
    dend_20 { pt3dadd( 300.643, 275.132, 29.68, 0.2796 ) }
    dend_20 { pt3dadd( 300.822, 274.751, 29.7111, 0.3304 ) }
    dend_20 { pt3dadd( 301.215, 274.204, 30.4889, 0.3304 ) }
    dend_20 { pt3dadd( 301.177, 273.721, 30.8, 0.4068 ) }
    dend_20 { pt3dadd( 301.101, 273.123, 30.6757, 0.5338 ) }
    dend_20 { pt3dadd( 300.758, 272.272, 30.8, 0.6356 ) }
    dend_20 { pt3dadd( 300.427, 271.802, 30.8, 0.5848 ) }
    dend_20 { pt3dadd( 299.944, 271.255, 30.52, 0.6102 ) }
    dend_20 { pt3dadd( 299.651, 270.442, 30.9868, 0.5848 ) }
    dend_20 { pt3dadd( 299.27, 270.111, 30.8311, 0.5338 ) }
    dend_20 { pt3dadd( 298.991, 269.691, 30.52, 0.5084 ) }
    dend_20 { pt3dadd( 298.47, 269.641, 30.52, 0.5338 ) }
    dend_20 { pt3dadd( 298.076, 269.119, 31.08, 0.6102 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 78/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 347.101, 297.1, 11.7891, 0.661 ) }
    dend_19 { pt3dadd( 346.3, 296.151, 11.7698, 0.6356 ) }
    dend_19 { pt3dadd( 345.597, 295.25, 11.814, 0.6102 ) }
    dend_19 { pt3dadd( 345.558, 294.169, 12.0954, 0.6102 ) }
    dend_19 { pt3dadd( 345.639, 293.081, 12.812, 0.6102 ) }
    dend_19 { pt3dadd( 345.247, 292.03, 12.8229, 0.5592 ) }
    dend_19 { pt3dadd( 344.442, 291.225, 12.6358, 0.5338 ) }
    dend_19 { pt3dadd( 343.543, 290.59, 11.9361, 0.483 ) }
    dend_19 { pt3dadd( 342.75, 289.774, 11.76, 0.5338 ) }
    dend_19 { pt3dadd( 342.168, 288.793, 11.76, 0.5848 ) }
    dend_19 { pt3dadd( 341.633, 287.786, 11.76, 0.6864 ) }
    dend_19 { pt3dadd( 340.993, 286.847, 11.76, 0.7118 ) }
    dend_19 { pt3dadd( 340.136, 286.095, 11.76, 0.6864 ) }
    dend_19 { pt3dadd( 339.133, 285.55, 11.7594, 0.6356 ) }
    dend_19 { pt3dadd( 338.134, 284.998, 11.7564, 0.6356 ) }
    dend_19 { pt3dadd( 337.33, 284.208, 11.7407, 0.6864 ) }
    dend_19 { pt3dadd( 336.568, 283.36, 11.6626, 0.6864 ) }
    dend_19 { pt3dadd( 335.614, 282.974, 11.0222, 0.661 ) }
    dend_19 { pt3dadd( 334.711, 282.852, 9.5609, 0.5848 ) }
    dend_19 { pt3dadd( 333.723, 282.647, 8.9149, 0.5592 ) }
    dend_19 { pt3dadd( 332.72, 283.115, 8.4232, 0.5084 ) }
    dend_19 { pt3dadd( 331.588, 283.127, 8.5529, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_19 { pt3dadd( 330.577, 282.717, 9.2711, 0.4576 ) }
    dend_19 { pt3dadd( 329.567, 282.379, 10.1844, 0.483 ) }
    dend_19 { pt3dadd( 328.5, 282.377, 9.6074, 0.5338 ) }
    dend_19 { pt3dadd( 327.724, 282.589, 7.6941, 0.5338 ) }
    dend_19 { pt3dadd( 326.809, 283.233, 7.219, 0.5084 ) }
    dend_19 { pt3dadd( 325.794, 283.314, 6.8664, 0.483 ) }
    dend_19 { pt3dadd( 325.564, 282.45, 5.2648, 0.4322 ) }
    dend_19 { pt3dadd( 325.439, 281.327, 5.0487, 0.4322 ) }
    dend_19 { pt3dadd( 324.654, 280.625, 5.108, 0.4068 ) }
    dend_19 { pt3dadd( 323.639, 280.963, 5.7014, 0.3814 ) }
    dend_19 { pt3dadd( 322.634, 280.953, 6.1043, 0.356 ) }
    dend_19 { pt3dadd( 322.293, 279.9, 5.7431, 0.4068 ) }
    dend_19 { pt3dadd( 321.95, 278.855, 5.1069, 0.5084 ) }
    dend_19 { pt3dadd( 321.516, 277.806, 5.1769, 0.5338 ) }
    dend_19 { pt3dadd( 321.117, 276.841, 5.9478, 0.483 ) }
    dend_19 { pt3dadd( 321.464, 275.933, 5.04, 0.4322 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 333.015, 270.574, 19.8982, 0.8136 ) }
    dend_11 { pt3dadd( 331.564, 270.487, 20.1541, 0.5592 ) }
    dend_11 { pt3dadd( 330.496, 270.775, 19.8139, 0.5338 ) }
    dend_11 { pt3dadd( 329.793, 271.639, 19.5978, 0.5084 ) }
    dend_11 { pt3dadd( 329.575, 272.758, 19.5838, 0.4322 ) }
    dend_11 { pt3dadd( 328.861, 273.554, 19.4757, 0.483 ) }
    dend_11 { pt3dadd( 327.766, 273.583, 18.8244, 0.6102 ) }
    dend_11 { pt3dadd( 326.67, 273.331, 18.522, 0.7626 ) }
    dend_11 { pt3dadd( 325.578, 273.52, 18.7284, 0.8136 ) }
    dend_11 { pt3dadd( 324.541, 273.909, 19.2265, 0.7626 ) }
    dend_11 { pt3dadd( 323.876, 274.517, 17.7159, 0.6864 ) }
    dend_11 { pt3dadd( 322.852, 274.933, 17.3306, 0.6102 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 28/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 333.015, 270.574, 19.8982, 0.8136 ) }
    dend_10 { pt3dadd( 332.299, 269.965, 20.7883, 0.5592 ) }
    dend_10 { pt3dadd( 331.305, 269.54, 21.5317, 0.5338 ) }
    dend_10 { pt3dadd( 330.174, 269.449, 21.5732, 0.5084 ) }
    dend_10 { pt3dadd( 329.163, 269.064, 20.8172, 0.483 ) }
    dend_10 { pt3dadd( 328.369, 268.285, 20.7777, 0.4322 ) }
    dend_10 { pt3dadd( 327.949, 267.24, 21.0916, 0.4322 ) }
    dend_10 { pt3dadd( 327.446, 266.337, 22.2116, 0.4322 ) }
    dend_10 { pt3dadd( 327.128, 265.264, 21.9682, 0.483 ) }
    dend_10 { pt3dadd( 326.454, 264.345, 22.0405, 0.5084 ) }
    dend_10 { pt3dadd( 325.891, 263.411, 22.7497, 0.5084 ) }
    dend_10 { pt3dadd( 325.579, 262.368, 23.5186, 0.5084 ) }
    dend_10 { pt3dadd( 325.453, 261.262, 24.08, 0.483 ) }
    dend_10 { pt3dadd( 325.1, 260.178, 24.08, 0.4576 ) }
    dend_10 { pt3dadd( 324.768, 259.097, 24.08, 0.356 ) }
    dend_10 { pt3dadd( 324.125, 258.162, 24.08, 0.305 ) }
    dend_10 { pt3dadd( 323.242, 257.439, 24.0797, 0.305 ) }
    dend_10 { pt3dadd( 322.643, 256.477, 24.0789, 0.3814 ) }
    dend_10 { pt3dadd( 322.32, 255.388, 24.0741, 0.4322 ) }
    dend_10 { pt3dadd( 322.197, 254.268, 24.0391, 0.483 ) }
    dend_10 { pt3dadd( 321.914, 253.176, 23.8389, 0.5084 ) }
    dend_10 { pt3dadd( 321.442, 252.194, 23.0843, 0.5848 ) }
    dend_10 { pt3dadd( 320.653, 251.376, 22.8382, 0.6356 ) }
    dend_10 { pt3dadd( 319.776, 250.687, 22.381, 0.7118 ) }
    dend_10 { pt3dadd( 318.888, 250.003, 21.891, 0.7118 ) }
    dend_10 { pt3dadd( 318.066, 249.208, 21.8599, 0.7372 ) }
    dend_10 { pt3dadd( 317.243, 248.415, 21.919, 0.7372 ) }
    dend_10 { pt3dadd( 316.377, 247.682, 22.1651, 0.7118 ) }
    dend_10 { pt3dadd( 315.398, 247.174, 22.8701, 0.6102 ) }
    dend_10 { pt3dadd( 314.368, 246.701, 22.96, 0.4576 ) }
    dend_10 { pt3dadd( 313.665, 245.822, 22.96, 0.3814 ) }
    dend_10 { pt3dadd( 313.093, 244.848, 22.96, 0.3814 ) }
    dend_10 { pt3dadd( 312.082, 244.382, 22.96, 0.483 ) }
    dend_10 { pt3dadd( 310.939, 244.358, 22.96, 0.5848 ) }
    dend_10 { pt3dadd( 310.24, 244.167, 22.8043, 0.661 ) }
    dend_10 { pt3dadd( 309.452, 244.003, 22.6489, 0.5848 ) }
    dend_10 { pt3dadd( 308.982, 243.888, 23.24, 0.5592 ) }
    dend_10 { pt3dadd( 308.194, 243.558, 23.24, 0.5338 ) }
    dend_10 { pt3dadd( 307.736, 243.138, 23.6132, 0.5084 ) }
    dend_10 { pt3dadd( 307.316, 242.833, 23.24, 0.5084 ) }
    dend_10 { pt3dadd( 306.923, 242.35, 22.5868, 0.483 ) }
    dend_10 { pt3dadd( 306.478, 242.083, 22.9289, 0.4068 ) }
    dend_10 { pt3dadd( 306.097, 242.07, 22.8668, 0.4576 ) }
    dend_10 { pt3dadd( 305.753, 241.715, 23.6757, 0.305 ) }
    dend_10 { pt3dadd( 305.448, 241.27, 24.08, 0.2796 ) }
    dend_10 { pt3dadd( 304.94, 241.091, 24.64, 0.305 ) }
    dend_10 { pt3dadd( 304.431, 240.914, 24.64, 0.4322 ) }
    dend_10 { pt3dadd( 303.846, 240.253, 24.6089, 0.5084 ) }
    dend_10 { pt3dadd( 303.618, 239.718, 24.7643, 0.4576 ) }
    dend_10 { pt3dadd( 303.274, 239.21, 25.1378, 0.4576 ) }
    dend_10 { pt3dadd( 303.16, 238.626, 24.6711, 0.4576 ) }
    dend_10 { pt3dadd( 303.173, 238.092, 25.0132, 0.5338 ) }
    dend_10 { pt3dadd( 302.842, 237.469, 25.48, 0.6356 ) }
    dend_10 { pt3dadd( 302.029, 236.922, 26.0711, 0.5084 ) }
    dend_10 { pt3dadd( 301.406, 236.694, 26.2268, 0.5848 ) }
    dend_10 { pt3dadd( 300.974, 236.477, 26.6, 0.483 ) }
    dend_10 { pt3dadd( 300.414, 236.236, 25.76, 0.6864 ) }
    dend_10 { pt3dadd( 299.728, 235.905, 26.0711, 0.6864 ) }
    dend_10 { pt3dadd( 299.385, 235.333, 26.5689, 0.7372 ) }
    dend_10 { pt3dadd( 299.143, 234.749, 25.5111, 0.5592 ) }
    dend_10 { pt3dadd( 298.915, 234.177, 26.5689, 0.5848 ) }
    dend_10 { pt3dadd( 298.279, 233.58, 26.3511, 0.4576 ) }
    dend_10 { pt3dadd( 298.241, 233.224, 27.3468, 0.356 ) }
    dend_10 { pt3dadd( 298.241, 232.69, 27.72, 0.3814 ) }
    dend_10 { pt3dadd( 298.114, 232.245, 27.72, 0.4322 ) }
    dend_10 { pt3dadd( 297.898, 231.889, 28.0, 0.4576 ) }
    dend_10 { pt3dadd( 297.186, 231.66, 27.7822, 0.4576 ) }
    dend_10 { pt3dadd( 296.563, 231.546, 28.4668, 0.483 ) }
    dend_10 { pt3dadd( 295.61, 231.583, 28.3732, 0.6864 ) }
    dend_10 { pt3dadd( 295.254, 231.66, 27.4711, 0.305 ) }
    dend_10 { pt3dadd( 294.821, 231.673, 26.88, 0.5084 ) }
    dend_10 { pt3dadd( 294.53, 232.067, 26.6, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_10 { pt3dadd( 294.224, 232.118, 25.7911, 0.3814 ) }
    dend_10 { pt3dadd( 293.767, 231.901, 25.2, 0.4576 ) }
    dend_10 { pt3dadd( 293.08, 231.889, 24.8889, 0.305 ) }
    dend_10 { pt3dadd( 292.292, 231.698, 24.8268, 0.2288 ) }
    dend_10 { pt3dadd( 291.936, 231.431, 24.3911, 0.2542 ) }
    dend_10 { pt3dadd( 291.643, 231.088, 24.1732, 0.2796 ) }
    dend_10 { pt3dadd( 291.377, 230.745, 24.08, 0.3304 ) }
    dend_10 { pt3dadd( 291.11, 230.439, 23.52, 0.356 ) }
    dend_10 { pt3dadd( 290.576, 230.173, 23.8, 0.4576 ) }
    dend_10 { pt3dadd( 290.131, 230.16, 23.52, 0.4576 ) }
    dend_10 { pt3dadd( 288.974, 230.058, 23.52, 0.305 ) }
    dend_10 { pt3dadd( 288.174, 230.058, 23.52, 0.2542 ) }
    dend_10 { pt3dadd( 287.373, 230.058, 23.52, 0.2288 ) }
    dend_10 { pt3dadd( 286.724, 229.906, 23.52, 0.2288 ) }
    dend_10 { pt3dadd( 286.204, 229.792, 23.4889, 0.2288 ) }
    dend_10 { pt3dadd( 285.784, 229.83, 23.2089, 0.3814 ) }
    dend_10 { pt3dadd( 285.657, 230.046, 22.3689, 0.483 ) }
    dend_10 { pt3dadd( 285.339, 230.096, 21.8089, 0.2542 ) }
    dend_10 { pt3dadd( 284.729, 230.275, 22.12, 0.3304 ) }
    dend_10 { pt3dadd( 284.207, 230.516, 22.0268, 0.3814 ) }
    dend_10 { pt3dadd( 283.725, 230.529, 22.12, 0.4322 ) }
    dend_10 { pt3dadd( 283.369, 230.745, 21.84, 0.356 ) }
    dend_10 { pt3dadd( 282.975, 230.961, 21.4668, 0.4068 ) }
    dend_10 { pt3dadd( 282.518, 231.165, 21.5289, 0.3814 ) }
    dend_10 { pt3dadd( 282.073, 231.279, 21.0, 0.4068 ) }
    dend_10 { pt3dadd( 281.36, 231.355, 20.9689, 0.4068 ) }
    dend_10 { pt3dadd( 280.979, 231.444, 20.72, 0.3814 ) }
    dend_10 { pt3dadd( 280.725, 231.66, 20.9689, 0.4576 ) }
    dend_10 { pt3dadd( 280.242, 231.851, 21.56, 0.4068 ) }
    dend_10 { pt3dadd( 279.822, 232.13, 21.5289, 0.4068 ) }
    dend_10 { pt3dadd( 279.581, 232.346, 21.8089, 0.4576 ) }
    dend_10 { pt3dadd( 279.174, 233.172, 21.5911, 0.4576 ) }
    dend_10 { pt3dadd( 278.831, 233.528, 21.84, 0.4322 ) }
    dend_10 { pt3dadd( 278.564, 233.834, 22.12, 0.305 ) }
    dend_10 { pt3dadd( 278.373, 233.986, 22.12, 0.2542 ) }
    dend_10 { pt3dadd( 278.335, 234.291, 22.12, 0.2288 ) }
    dend_10 { pt3dadd( 278.335, 234.52, 22.12, 0.2288 ) }
    dend_10 { pt3dadd( 278.323, 234.851, 22.12, 0.2288 ) }
    dend_10 { pt3dadd( 278.106, 234.978, 22.12, 0.2288 ) }
    dend_10 { pt3dadd( 277.776, 234.99, 22.12, 0.2288 ) }
    dend_10 { pt3dadd( 277.522, 235.079, 22.12, 0.2288 ) }
    dend_10 { pt3dadd( 277.153, 235.283, 22.12, 0.2288 ) }
    dend_10 { pt3dadd( 277.026, 235.423, 21.9332, 0.2288 ) }
    dend_10 { pt3dadd( 276.798, 235.614, 21.84, 0.2288 ) }
    dend_10 { pt3dadd( 276.607, 235.702, 22.2757, 0.2288 ) }
    dend_10 { pt3dadd( 276.251, 235.982, 22.12, 0.2542 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 46/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 433.73, 333.13, 22.9704, 0.661 ) }
    dend_6 { pt3dadd( 433.69, 333.476, 22.12, 0.4068 ) }
    dend_6 { pt3dadd( 433.69, 333.921, 22.7111, 0.4322 ) }
    dend_6 { pt3dadd( 433.551, 334.137, 23.24, 0.483 ) }
    dend_6 { pt3dadd( 433.462, 334.506, 23.8, 0.5338 ) }
    dend_6 { pt3dadd( 433.424, 335.256, 23.7689, 0.5848 ) }
    dend_6 { pt3dadd( 433.526, 335.421, 22.2757, 0.6102 ) }
    dend_6 { pt3dadd( 433.69, 335.929, 22.5557, 0.6102 ) }
    dend_6 { pt3dadd( 433.805, 336.323, 22.7111, 0.4322 ) }
    dend_6 { pt3dadd( 433.919, 336.781, 22.6489, 0.5592 ) }
    dend_6 { pt3dadd( 434.148, 337.239, 22.4311, 0.6864 ) }
    dend_6 { pt3dadd( 434.568, 337.747, 22.96, 0.6356 ) }
    dend_6 { pt3dadd( 434.872, 338.129, 23.1778, 0.5592 ) }
    dend_6 { pt3dadd( 434.961, 338.637, 22.12, 0.3814 ) }
    dend_6 { pt3dadd( 434.949, 338.967, 22.12, 0.356 ) }
    dend_6 { pt3dadd( 435.025, 339.348, 22.12, 0.2542 ) }
    dend_6 { pt3dadd( 435.063, 339.654, 22.12, 0.2796 ) }
    dend_6 { pt3dadd( 435.356, 339.933, 21.84, 0.4322 ) }
    dend_6 { pt3dadd( 435.406, 340.454, 21.84, 0.4322 ) }
    dend_6 { pt3dadd( 435.635, 340.899, 21.5289, 0.4322 ) }
    dend_6 { pt3dadd( 435.75, 341.319, 20.8757, 0.6102 ) }
    dend_6 { pt3dadd( 435.953, 341.827, 20.72, 0.5338 ) }
    dend_6 { pt3dadd( 436.093, 342.247, 20.9068, 0.5084 ) }
    dend_6 { pt3dadd( 435.877, 342.641, 20.72, 0.4068 ) }
    dend_6 { pt3dadd( 435.8, 342.933, 21.2489, 0.4322 ) }
    dend_6 { pt3dadd( 435.941, 343.454, 21.0311, 0.6356 ) }
    dend_6 { pt3dadd( 435.978, 344.001, 21.0622, 0.5592 ) }
    dend_6 { pt3dadd( 435.483, 344.357, 21.1243, 0.661 ) }
    dend_6 { pt3dadd( 435.521, 345.03, 21.0, 0.5848 ) }
    dend_6 { pt3dadd( 435.305, 345.297, 20.2222, 0.4068 ) }
    dend_6 { pt3dadd( 435.063, 345.628, 20.0978, 0.4576 ) }
    dend_6 { pt3dadd( 434.733, 346.149, 20.6268, 0.5848 ) }
    dend_6 { pt3dadd( 434.593, 346.632, 20.1289, 0.6356 ) }
    dend_6 { pt3dadd( 434.516, 347.077, 20.2532, 0.483 ) }
    dend_6 { pt3dadd( 434.275, 347.217, 21.28, 0.4322 ) }
    dend_6 { pt3dadd( 434.186, 347.687, 21.2489, 0.305 ) }
    dend_6 { pt3dadd( 434.262, 347.903, 20.4711, 0.4576 ) }
    dend_6 { pt3dadd( 434.377, 348.462, 20.44, 0.483 ) }
    dend_6 { pt3dadd( 434.453, 349.124, 20.6889, 0.661 ) }
    dend_6 { pt3dadd( 434.606, 349.619, 20.1911, 0.6356 ) }
    dend_6 { pt3dadd( 434.72, 350.077, 20.1289, 0.305 ) }
    dend_6 { pt3dadd( 434.872, 350.865, 20.6268, 0.4068 ) }
    dend_6 { pt3dadd( 435.101, 351.183, 20.9689, 0.4322 ) }
    dend_6 { pt3dadd( 435.178, 351.437, 21.0, 0.4322 ) }
    dend_6 { pt3dadd( 435.178, 351.78, 21.0, 0.483 ) }
    dend_6 { pt3dadd( 435.33, 352.25, 20.8443, 0.5084 ) }
    dend_6 { pt3dadd( 435.521, 352.645, 20.8757, 0.4576 ) }
    dend_6 { pt3dadd( 435.737, 353.051, 19.88, 0.4576 ) }
    dend_6 { pt3dadd( 435.889, 353.458, 20.4089, 0.4068 ) }
    dend_6 { pt3dadd( 435.978, 353.725, 20.16, 0.3304 ) }
    dend_6 { pt3dadd( 436.029, 354.246, 20.44, 0.4068 ) }
    dend_6 { pt3dadd( 436.398, 354.526, 20.3468, 0.6356 ) }
    dend_6 { pt3dadd( 436.359, 355.021, 19.88, 0.483 ) }
    dend_6 { pt3dadd( 436.398, 355.555, 19.6932, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_6 { pt3dadd( 436.322, 355.975, 19.7868, 0.3814 ) }
    dend_6 { pt3dadd( 436.245, 356.369, 19.2578, 0.356 ) }
    dend_6 { pt3dadd( 435.864, 356.801, 19.0711, 0.4576 ) }
    dend_6 { pt3dadd( 435.648, 357.132, 19.5068, 0.5338 ) }
    dend_6 { pt3dadd( 435.699, 357.716, 19.4132, 0.5848 ) }
    dend_6 { pt3dadd( 435.292, 358.072, 18.76, 0.5084 ) }
    dend_6 { pt3dadd( 435.063, 358.682, 18.8532, 0.6356 ) }
    dend_6 { pt3dadd( 434.949, 359.293, 18.8532, 0.5338 ) }
    dend_6 { pt3dadd( 434.987, 359.648, 19.3511, 0.3814 ) }
    dend_6 { pt3dadd( 434.987, 360.017, 19.5068, 0.3814 ) }
    dend_6 { pt3dadd( 435.051, 360.41, 18.8532, 0.483 ) }
    dend_6 { pt3dadd( 435.254, 360.868, 19.0089, 0.5592 ) }
    dend_6 { pt3dadd( 435.305, 361.644, 19.1332, 0.6356 ) }
    dend_6 { pt3dadd( 435.419, 362.063, 18.76, 0.5338 ) }
    dend_6 { pt3dadd( 435.521, 362.432, 19.2889, 0.4576 ) }
    dend_6 { pt3dadd( 435.75, 362.953, 18.3868, 0.483 ) }
    dend_6 { pt3dadd( 436.093, 363.436, 18.7911, 0.6356 ) }
    dend_6 { pt3dadd( 436.322, 363.919, 18.5111, 0.3304 ) }
    dend_6 { pt3dadd( 436.322, 364.287, 18.2932, 0.2796 ) }
    dend_6 { pt3dadd( 436.322, 364.593, 18.2, 0.2796 ) }
    dend_6 { pt3dadd( 436.588, 364.898, 18.2, 0.305 ) }
    dend_6 { pt3dadd( 436.779, 364.936, 18.2, 0.2288 ) }
    dend_6 { pt3dadd( 437.008, 364.936, 18.2, 0.2288 ) }
    dend_6 { pt3dadd( 437.237, 364.936, 18.2, 0.2542 ) }
    dend_6 { pt3dadd( 437.58, 364.936, 18.2, 0.2796 ) }
    dend_6 { pt3dadd( 437.961, 365.063, 18.6357, 0.3304 ) }
    dend_6 { pt3dadd( 438.304, 365.241, 19.5378, 0.4322 ) }
    dend_6 { pt3dadd( 438.724, 365.737, 19.32, 0.6102 ) }
    dend_6 { pt3dadd( 439.042, 366.22, 19.32, 0.5338 ) }
    dend_6 { pt3dadd( 439.296, 366.5, 19.6932, 0.4576 ) }
    dend_6 { pt3dadd( 439.741, 366.665, 19.32, 0.5338 ) }
    dend_6 { pt3dadd( 440.173, 366.843, 18.76, 0.5338 ) }
    dend_6 { pt3dadd( 440.363, 367.072, 18.2, 0.483 ) }
    dend_6 { pt3dadd( 440.898, 367.224, 18.48, 0.661 ) }
    dend_6 { pt3dadd( 441.343, 367.338, 18.5111, 0.4068 ) }
    dend_6 { pt3dadd( 441.559, 367.465, 18.1068, 0.3814 ) }
    dend_6 { pt3dadd( 441.813, 367.453, 17.92, 0.4576 ) }
    dend_6 { pt3dadd( 442.194, 367.669, 18.4178, 0.4576 ) }
    dend_6 { pt3dadd( 442.41, 367.758, 19.0089, 0.4576 ) }
    dend_6 { pt3dadd( 442.728, 368.025, 18.76, 0.2542 ) }
    dend_6 { pt3dadd( 442.842, 368.254, 18.76, 0.2288 ) }
    dend_6 { pt3dadd( 443.059, 368.381, 18.76, 0.2288 ) }
    dend_6 { pt3dadd( 443.173, 368.445, 18.8843, 0.2288 ) }
    dend_6 { pt3dadd( 443.186, 368.482, 19.32, 0.2288 ) }
    dend_6 { pt3dadd( 443.3, 368.597, 20.16, 0.3814 ) }
    dend_6 { pt3dadd( 443.567, 368.915, 19.6311, 0.4576 ) }
    dend_6 { pt3dadd( 443.758, 369.181, 20.1289, 0.4576 ) }
    dend_6 { pt3dadd( 444.051, 369.779, 20.1289, 0.4576 ) }
    dend_6 { pt3dadd( 444.342, 370.109, 20.0668, 0.4576 ) }
    dend_6 { pt3dadd( 444.431, 370.758, 20.16, 0.4322 ) }
    dend_6 { pt3dadd( 444.406, 371.266, 19.88, 0.3814 ) }
    dend_6 { pt3dadd( 444.673, 371.457, 19.04, 0.4322 ) }
    dend_6 { pt3dadd( 444.825, 371.8, 19.4132, 0.5084 ) }
    dend_6 { pt3dadd( 444.825, 372.118, 20.1289, 0.4322 ) }
    dend_6 { pt3dadd( 444.939, 372.334, 20.16, 0.3814 ) }
    dend_6 { pt3dadd( 445.003, 372.601, 19.6311, 0.5084 ) }
    dend_6 { pt3dadd( 445.118, 373.071, 20.44, 0.305 ) }
    dend_6 { pt3dadd( 445.13, 373.402, 20.44, 0.2542 ) }
    dend_6 { pt3dadd( 445.13, 374.317, 20.44, 0.2796 ) }
    dend_6 { pt3dadd( 445.13, 374.66, 20.44, 0.3814 ) }
    dend_6 { pt3dadd( 445.257, 375.105, 20.72, 0.6102 ) }
    dend_6 { pt3dadd( 445.817, 375.69, 20.72, 0.5338 ) }
    dend_6 { pt3dadd( 446.147, 376.008, 20.6268, 0.5338 ) }
    dend_6 { pt3dadd( 446.262, 376.426, 20.2532, 0.4322 ) }
    dend_6 { pt3dadd( 446.274, 376.732, 19.9111, 0.4576 ) }
    dend_6 { pt3dadd( 446.325, 377.241, 19.88, 0.305 ) }
    dend_6 { pt3dadd( 446.503, 377.291, 19.88, 0.2542 ) }
    dend_6 { pt3dadd( 446.757, 377.368, 19.9111, 0.2288 ) }
    dend_6 { pt3dadd( 446.961, 377.52, 20.44, 0.2288 ) }
    dend_6 { pt3dadd( 447.368, 378.054, 19.8489, 0.4068 ) }
    dend_6 { pt3dadd( 447.469, 378.271, 19.32, 0.356 ) }
    dend_6 { pt3dadd( 447.685, 378.397, 19.88, 0.4322 ) }
    dend_6 { pt3dadd( 447.876, 378.55, 20.16, 0.3304 ) }
    dend_6 { pt3dadd( 448.194, 378.918, 19.32, 0.4576 ) }
    dend_6 { pt3dadd( 448.562, 379.236, 19.6, 0.305 ) }
    dend_6 { pt3dadd( 448.868, 379.465, 19.7868, 0.2288 ) }
    dend_6 { pt3dadd( 448.982, 379.617, 19.6, 0.2542 ) }
    dend_6 { pt3dadd( 449.097, 379.948, 19.9111, 0.2796 ) }
    dend_6 { pt3dadd( 449.236, 380.482, 20.16, 0.356 ) }
    dend_6 { pt3dadd( 449.249, 380.85, 19.6311, 0.3814 ) }
    dend_6 { pt3dadd( 449.249, 381.181, 19.6, 0.4068 ) }
    dend_6 { pt3dadd( 449.579, 381.537, 19.6, 0.4576 ) }
    dend_6 { pt3dadd( 450.151, 381.982, 19.6311, 0.483 ) }
    dend_6 { pt3dadd( 450.495, 382.452, 19.6, 0.5592 ) }
    dend_6 { pt3dadd( 450.863, 382.77, 19.6, 0.3304 ) }
    dend_6 { pt3dadd( 451.194, 382.782, 19.6, 0.2542 ) }
    dend_6 { pt3dadd( 451.842, 383.011, 19.5068, 0.2542 ) }
    dend_6 { pt3dadd( 452.173, 383.278, 19.6311, 0.305 ) }
    dend_6 { pt3dadd( 452.414, 383.634, 19.6311, 0.3814 ) }
    dend_6 { pt3dadd( 452.529, 384.028, 19.7557, 0.4322 ) }
    dend_6 { pt3dadd( 452.668, 384.232, 19.6622, 0.3814 ) }
    dend_6 { pt3dadd( 452.719, 384.575, 19.9422, 0.5084 ) }
    dend_6 { pt3dadd( 452.757, 384.994, 19.88, 0.4322 ) }
    dend_6 { pt3dadd( 452.922, 385.401, 19.6, 0.3814 ) }
    dend_6 { pt3dadd( 453.253, 385.642, 19.88, 0.4068 ) }
    dend_6 { pt3dadd( 453.71, 385.986, 20.16, 0.305 ) }
    dend_6 { pt3dadd( 454.193, 386.291, 20.1911, 0.4068 ) }
    dend_6 { pt3dadd( 454.486, 386.443, 20.0978, 0.4576 ) }
    dend_6 { pt3dadd( 454.892, 386.443, 20.0668, 0.356 ) }
    dend_6 { pt3dadd( 455.376, 386.456, 19.9732, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 455.591, 386.659, 20.6268, 0.4576 ) }
    dend_6 { pt3dadd( 455.884, 386.863, 20.6268, 0.483 ) }
    dend_6 { pt3dadd( 456.316, 387.384, 19.88, 0.5338 ) }
    dend_6 { pt3dadd( 456.672, 387.739, 19.6622, 0.4576 ) }
    dend_6 { pt3dadd( 456.849, 387.918, 19.1332, 0.2796 ) }
    dend_6 { pt3dadd( 457.13, 387.93, 19.0711, 0.4322 ) }
    dend_6 { pt3dadd( 457.333, 387.943, 19.6622, 0.4576 ) }
    dend_6 { pt3dadd( 457.714, 387.943, 19.5689, 0.4576 ) }
    dend_6 { pt3dadd( 458.147, 387.676, 19.04, 0.305 ) }
    dend_6 { pt3dadd( 458.63, 387.473, 19.04, 0.356 ) }
    dend_6 { pt3dadd( 458.973, 387.714, 18.5111, 0.6864 ) }
    dend_6 { pt3dadd( 459.684, 388.121, 18.4489, 0.5592 ) }
    dend_6 { pt3dadd( 460.346, 388.159, 18.2, 0.483 ) }
    dend_6 { pt3dadd( 461.032, 388.197, 18.3868, 0.4322 ) }
    dend_6 { pt3dadd( 461.566, 388.236, 18.2, 0.5084 ) }
    dend_6 { pt3dadd( 462.062, 388.147, 18.1689, 0.5338 ) }
    dend_6 { pt3dadd( 462.519, 388.032, 18.7289, 0.5338 ) }
    dend_6 { pt3dadd( 462.964, 387.93, 19.0711, 0.483 ) }
    dend_6 { pt3dadd( 463.307, 387.739, 19.1957, 0.5338 ) }
    dend_6 { pt3dadd( 463.333, 387.702, 17.9511, 0.483 ) }
    dend_6 { pt3dadd( 463.74, 387.549, 18.48, 0.4576 ) }
    dend_6 { pt3dadd( 464.044, 387.244, 18.8532, 0.5084 ) }
    dend_6 { pt3dadd( 464.273, 387.028, 17.9822, 0.4322 ) }
    dend_6 { pt3dadd( 464.541, 386.786, 16.9868, 0.483 ) }
    dend_6 { pt3dadd( 464.757, 386.622, 16.52, 0.2542 ) }
    dend_6 { pt3dadd( 464.922, 386.456, 16.7689, 0.2288 ) }
    dend_6 { pt3dadd( 465.113, 386.532, 16.8932, 0.2288 ) }
    dend_6 { pt3dadd( 465.685, 386.329, 17.4532, 0.3814 ) }
    dend_6 { pt3dadd( 466.053, 386.341, 18.2, 0.4576 ) }
    dend_6 { pt3dadd( 466.485, 386.329, 18.2932, 0.4322 ) }
    dend_6 { pt3dadd( 466.752, 385.986, 17.92, 0.5084 ) }
    dend_6 { pt3dadd( 466.981, 385.464, 17.7643, 0.5084 ) }
    dend_6 { pt3dadd( 467.476, 385.337, 18.48, 0.356 ) }
    dend_6 { pt3dadd( 467.896, 385.083, 18.1689, 0.2796 ) }
    dend_6 { pt3dadd( 468.481, 384.956, 16.8311, 0.356 ) }
    dend_6 { pt3dadd( 468.747, 384.727, 16.0843, 0.4576 ) }
    dend_6 { pt3dadd( 469.154, 384.536, 15.5868, 0.483 ) }
    dend_6 { pt3dadd( 469.955, 384.27, 14.84, 0.5592 ) }
    dend_6 { pt3dadd( 470.578, 384.079, 14.8711, 0.483 ) }
    dend_6 { pt3dadd( 471.087, 384.028, 15.12, 0.3814 ) }
    dend_6 { pt3dadd( 471.353, 383.837, 15.12, 0.356 ) }
    dend_6 { pt3dadd( 471.748, 383.812, 14.4668, 0.2796 ) }
    dend_6 { pt3dadd( 472.002, 383.621, 14.4043, 0.2542 ) }
    dend_6 { pt3dadd( 472.052, 383.66, 14.84, 0.2542 ) }
    dend_6 { pt3dadd( 472.332, 383.481, 15.2132, 0.483 ) }
    dend_6 { pt3dadd( 472.586, 383.812, 15.4, 0.3304 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 46/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 433.73, 333.13, 22.9704, 0.661 ) }
    dend_5 { pt3dadd( 434.408, 333.884, 22.472, 0.4068 ) }
    dend_5 { pt3dadd( 435.206, 334.604, 21.8386, 0.483 ) }
    dend_5 { pt3dadd( 436.247, 335.07, 21.8313, 0.5338 ) }
    dend_5 { pt3dadd( 437.207, 335.667, 21.7941, 0.5338 ) }
    dend_5 { pt3dadd( 437.971, 336.51, 21.6247, 0.5084 ) }
    dend_5 { pt3dadd( 438.782, 337.235, 20.8816, 0.5084 ) }
    dend_5 { pt3dadd( 439.646, 337.979, 20.7295, 0.483 ) }
    dend_5 { pt3dadd( 440.556, 338.668, 20.7673, 0.483 ) }
    dend_5 { pt3dadd( 441.087, 339.642, 21.0123, 0.4576 ) }
    dend_5 { pt3dadd( 441.13, 340.75, 21.236, 0.4576 ) }
    dend_5 { pt3dadd( 441.146, 341.87, 20.7186, 0.4576 ) }
    dend_5 { pt3dadd( 441.283, 342.999, 20.7099, 0.4322 ) }
    dend_5 { pt3dadd( 441.368, 344.129, 20.6564, 0.3814 ) }
    dend_5 { pt3dadd( 441.944, 345.099, 20.379, 0.3304 ) }
    dend_5 { pt3dadd( 442.5, 346.053, 19.6907, 0.305 ) }
    dend_5 { pt3dadd( 443.175, 346.963, 19.6, 0.356 ) }
    dend_5 { pt3dadd( 444.104, 347.619, 19.5997, 0.4322 ) }
    dend_5 { pt3dadd( 445.033, 348.285, 19.598, 0.5338 ) }
    dend_5 { pt3dadd( 445.9, 349.024, 19.5894, 0.5592 ) }
    dend_5 { pt3dadd( 446.49, 349.998, 19.5446, 0.5592 ) }
    dend_5 { pt3dadd( 446.986, 350.996, 19.1414, 0.5084 ) }
    dend_5 { pt3dadd( 447.19, 351.767, 18.7289, 0.4068 ) }
    dend_5 { pt3dadd( 447.202, 352.123, 18.7289, 0.4068 ) }
    dend_5 { pt3dadd( 447.304, 352.619, 19.2268, 0.4576 ) }
    dend_5 { pt3dadd( 447.533, 352.924, 19.5378, 0.5084 ) }
    dend_5 { pt3dadd( 447.647, 353.394, 19.0711, 0.4322 ) }
    dend_5 { pt3dadd( 447.812, 353.789, 18.76, 0.356 ) }
    dend_5 { pt3dadd( 448.105, 353.954, 19.04, 0.356 ) }
    dend_5 { pt3dadd( 448.398, 354.182, 18.8843, 0.4322 ) }
    dend_5 { pt3dadd( 448.639, 354.309, 19.6622, 0.4576 ) }
    dend_5 { pt3dadd( 449.097, 354.665, 20.1911, 0.483 ) }
    dend_5 { pt3dadd( 449.605, 354.945, 20.0978, 0.661 ) }
    dend_5 { pt3dadd( 450.05, 355.212, 19.88, 0.6102 ) }
    dend_5 { pt3dadd( 450.177, 355.809, 20.2532, 0.5338 ) }
    dend_5 { pt3dadd( 450.431, 356.115, 19.7243, 0.3304 ) }
    dend_5 { pt3dadd( 450.761, 356.013, 19.8178, 0.4576 ) }
    dend_5 { pt3dadd( 451.003, 356.127, 20.6268, 0.4322 ) }
    dend_5 { pt3dadd( 451.27, 356.356, 20.6268, 0.4068 ) }
    dend_5 { pt3dadd( 451.537, 356.394, 21.1868, 0.6864 ) }
    dend_5 { pt3dadd( 452.134, 356.242, 20.2222, 0.5338 ) }
    dend_5 { pt3dadd( 452.529, 356.127, 20.5332, 0.4068 ) }
    dend_5 { pt3dadd( 452.833, 356.318, 21.0, 0.483 ) }
    dend_5 { pt3dadd( 453.482, 356.356, 20.72, 0.5338 ) }
    dend_5 { pt3dadd( 454.054, 356.445, 21.0, 0.4322 ) }
    dend_5 { pt3dadd( 454.486, 356.254, 21.1868, 0.4322 ) }
    dend_5 { pt3dadd( 454.854, 356.242, 21.0, 0.5592 ) }
    dend_5 { pt3dadd( 455.362, 355.949, 21.56, 0.5592 ) }
    dend_5 { pt3dadd( 456.049, 355.707, 21.3111, 0.4322 ) }
    dend_5 { pt3dadd( 456.723, 355.746, 21.28, 0.3304 ) }
    dend_5 { pt3dadd( 457.486, 355.784, 21.28, 0.2542 ) }
    dend_5 { pt3dadd( 458.286, 355.784, 21.28, 0.2288 ) }
    dend_5 { pt3dadd( 458.515, 355.784, 21.28, 0.2288 ) }
    dend_5 { pt3dadd( 458.744, 355.784, 21.28, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_5 { pt3dadd( 459.037, 355.834, 21.28, 0.2288 ) }
    dend_5 { pt3dadd( 459.087, 356.013, 21.28, 0.2288 ) }
    dend_5 { pt3dadd( 459.087, 356.242, 21.28, 0.2288 ) }
    dend_5 { pt3dadd( 459.138, 356.534, 21.28, 0.2288 ) }
    dend_5 { pt3dadd( 459.316, 356.585, 21.28, 0.2288 ) }
    dend_5 { pt3dadd( 459.659, 356.699, 21.28, 0.3814 ) }
    dend_5 { pt3dadd( 460.015, 356.966, 20.8443, 0.4322 ) }
    dend_5 { pt3dadd( 460.269, 357.246, 20.1911, 0.2542 ) }
    dend_5 { pt3dadd( 460.396, 357.373, 20.3468, 0.2542 ) }
    dend_5 { pt3dadd( 460.689, 357.386, 20.44, 0.2796 ) }
    dend_5 { pt3dadd( 461.019, 357.513, 20.16, 0.305 ) }
    dend_5 { pt3dadd( 461.4, 357.805, 19.9111, 0.3304 ) }
    dend_5 { pt3dadd( 461.629, 357.843, 20.3778, 0.483 ) }
    dend_5 { pt3dadd( 461.935, 357.958, 20.9689, 0.5338 ) }
    dend_5 { pt3dadd( 462.253, 358.11, 20.44, 0.3814 ) }
    dend_5 { pt3dadd( 462.405, 358.301, 20.72, 0.3814 ) }
    dend_5 { pt3dadd( 462.748, 358.631, 21.3111, 0.4576 ) }
    dend_5 { pt3dadd( 462.952, 358.911, 22.0889, 0.483 ) }
    dend_5 { pt3dadd( 463.447, 359.33, 21.8089, 0.5338 ) }
    dend_5 { pt3dadd( 463.815, 359.661, 21.6222, 0.5338 ) }
    dend_5 { pt3dadd( 464.171, 359.865, 21.5289, 0.5084 ) }
    dend_5 { pt3dadd( 464.655, 360.169, 21.56, 0.483 ) }
    // Section: apic_24, id: apic_24, parent: apic_8 (entry count 22/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 363.519, 323.066, 20.736, 0.7118 ) }
    apic_24 { pt3dadd( 361.823, 323.464, 20.7144, 0.6864 ) }
    apic_24 { pt3dadd( 360.7, 323.59, 20.6816, 0.6102 ) }
    apic_24 { pt3dadd( 359.709, 323.04, 20.5142, 0.5338 ) }
    apic_24 { pt3dadd( 358.694, 322.812, 19.7218, 0.5338 ) }
    apic_24 { pt3dadd( 357.952, 323.655, 19.3844, 0.5338 ) }
    apic_24 { pt3dadd( 357.275, 324.503, 18.5951, 0.5084 ) }
    apic_24 { pt3dadd( 356.28, 324.812, 17.9917, 0.483 ) }
    apic_24 { pt3dadd( 355.299, 324.334, 17.918, 0.4068 ) }
    apic_24 { pt3dadd( 354.3, 323.918, 18.4744, 0.356 ) }
    apic_24 { pt3dadd( 353.194, 323.66, 18.4439, 0.356 ) }
    apic_24 { pt3dadd( 352.102, 323.859, 18.2308, 0.4322 ) }
    apic_24 { pt3dadd( 351.198, 324.136, 16.7941, 0.5084 ) }
    apic_24 { pt3dadd( 350.27, 324.682, 15.9468, 0.483 ) }
    apic_24 { pt3dadd( 349.198, 324.849, 15.1964, 0.4576 ) }
    apic_24 { pt3dadd( 348.073, 324.699, 15.1256, 0.4576 ) }
    apic_24 { pt3dadd( 347.122, 325.3, 15.148, 0.483 ) }
    apic_24 { pt3dadd( 346.272, 326.063, 15.2426, 0.4576 ) }
    apic_24 { pt3dadd( 345.307, 326.572, 15.7889, 0.4322 ) }
    apic_24 { pt3dadd( 344.272, 326.228, 16.2232, 0.5084 ) }
    apic_24 { pt3dadd( 343.318, 325.614, 16.1549, 0.6102 ) }
    apic_24 { pt3dadd( 342.253, 325.803, 15.682, 0.661 ) }
    apic_24 { pt3dadd( 341.232, 326.213, 14.9775, 0.6102 ) }
    apic_24 { pt3dadd( 340.179, 326.366, 14.0638, 0.5848 ) }
    apic_24 { pt3dadd( 339.408, 326.823, 12.4331, 0.5848 ) }
    apic_24 { pt3dadd( 338.609, 327.542, 12.2511, 0.5848 ) }
    apic_24 { pt3dadd( 337.547, 327.849, 12.866, 0.5848 ) }
    apic_24 { pt3dadd( 336.812, 328.684, 12.7966, 0.6102 ) }
    apic_24 { pt3dadd( 337.108, 329.685, 12.1635, 0.6356 ) }
    apic_24 { pt3dadd( 337.348, 330.734, 11.7631, 0.5592 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 52/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 363.519, 323.066, 20.736, 0.7118 ) }
    apic_9 { pt3dadd( 362.647, 324.016, 20.8012, 0.4576 ) }
    apic_9 { pt3dadd( 361.892, 324.87, 21.0395, 0.6356 ) }
    apic_9 { pt3dadd( 361.348, 325.799, 21.9618, 0.839 ) }
    apic_9 { pt3dadd( 360.791, 326.725, 22.7746, 0.966 ) }
    // Section: apic_7, id: apic_7, parent: apic_1 (entry count 57/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 374.546, 322.319, 24.2967, 0.6864 ) }
    apic_7 { pt3dadd( 375.116, 322.054, 26.0014, 0.661 ) }
    apic_7 { pt3dadd( 375.622, 321.279, 27.4193, 0.5592 ) }
    apic_7 { pt3dadd( 375.485, 320.206, 28.2425, 0.5592 ) }
    apic_7 { pt3dadd( 375.477, 319.106, 28.6412, 0.5848 ) }
    apic_7 { pt3dadd( 376.147, 318.201, 28.9643, 0.7118 ) }
    apic_7 { pt3dadd( 376.725, 317.602, 30.6701, 0.788 ) }
    apic_7 { pt3dadd( 377.742, 317.574, 31.8721, 0.8136 ) }
    apic_7 { pt3dadd( 378.845, 317.576, 32.5307, 0.7118 ) }
    apic_7 { pt3dadd( 379.802, 317.581, 33.9945, 0.6102 ) }
    apic_7 { pt3dadd( 380.819, 317.627, 35.24, 0.5338 ) }
    apic_7 { pt3dadd( 381.801, 317.96, 36.2494, 0.5592 ) }
    apic_7 { pt3dadd( 382.869, 318.12, 36.9978, 0.5592 ) }
    apic_7 { pt3dadd( 383.799, 318.217, 36.6948, 0.5338 ) }
    apic_7 { pt3dadd( 384.506, 317.363, 36.7794, 0.5338 ) }
    apic_7 { pt3dadd( 384.663, 316.525, 38.5594, 0.6102 ) }
    apic_7 { pt3dadd( 384.858, 315.537, 39.6992, 0.7118 ) }
    apic_7 { pt3dadd( 384.572, 314.452, 39.8017, 0.7372 ) }
    apic_7 { pt3dadd( 384.143, 313.405, 40.0378, 0.661 ) }
    apic_7 { pt3dadd( 383.741, 312.694, 41.6332, 0.6102 ) }
    apic_7 { pt3dadd( 383.212, 313.376, 43.0217, 0.6356 ) }
    apic_7 { pt3dadd( 382.936, 314.411, 43.706, 0.7372 ) }
    apic_7 { pt3dadd( 382.342, 315.275, 44.7401, 0.788 ) }
    apic_7 { pt3dadd( 382.043, 316.363, 44.6925, 0.7118 ) }
    apic_7 { pt3dadd( 381.453, 317.029, 46.2092, 0.5848 ) }
    apic_7 { pt3dadd( 380.685, 317.138, 48.2518, 0.483 ) }
    apic_7 { pt3dadd( 379.879, 317.211, 50.227, 0.4322 ) }
    apic_7 { pt3dadd( 379.122, 317.574, 52.08, 0.3814 ) }
    apic_7 { pt3dadd( 378.702, 316.863, 52.3911, 0.3304 ) }
    apic_7 { pt3dadd( 378.308, 316.545, 53.1689, 0.4322 ) }
    apic_7 { pt3dadd( 378.206, 316.545, 53.76, 0.483 ) }
    apic_7 { pt3dadd( 377.761, 316.583, 54.7243, 0.5084 ) }
    apic_7 { pt3dadd( 377.406, 316.443, 55.4711, 0.4068 ) }
    apic_7 { pt3dadd( 376.91, 316.43, 55.9068, 0.3814 ) }
    apic_7 { pt3dadd( 376.376, 316.202, 55.72, 0.4068 ) }
    apic_7 { pt3dadd( 376.033, 316.202, 55.72, 0.3814 ) }
    apic_7 { pt3dadd( 375.448, 316.202, 55.9689, 0.5338 ) }
    apic_7 { pt3dadd( 375.232, 315.858, 56.84, 0.7372 ) }
    apic_7 { pt3dadd( 374.889, 315.401, 57.4, 0.5592 ) }
    apic_7 { pt3dadd( 374.495, 315.108, 57.4, 0.4068 ) }
    apic_7 { pt3dadd( 374.317, 314.791, 57.8668, 0.3814 ) }
    apic_7 { pt3dadd( 374.24, 314.282, 57.9911, 0.4322 ) }
    apic_7 { pt3dadd( 374.355, 313.685, 58.4268, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_7 { pt3dadd( 374.533, 313.329, 58.8, 0.4576 ) }
    apic_7 { pt3dadd( 374.546, 313.036, 59.7332, 0.2796 ) }
    apic_7 { pt3dadd( 374.596, 312.782, 60.3868, 0.2288 ) }
    apic_7 { pt3dadd( 374.762, 312.643, 60.48, 0.2542 ) }
    apic_7 { pt3dadd( 374.774, 312.198, 60.48, 0.4068 ) }
    apic_7 { pt3dadd( 374.927, 311.765, 60.7289, 0.5338 ) }
    apic_7 { pt3dadd( 375.232, 311.32, 60.5732, 0.483 ) }
    apic_7 { pt3dadd( 375.346, 310.748, 61.9732, 0.4576 ) }
    apic_7 { pt3dadd( 375.448, 310.634, 62.7822, 0.2288 ) }
    apic_7 { pt3dadd( 375.346, 310.469, 63.2489, 0.2288 ) }
    apic_7 { pt3dadd( 375.346, 310.138, 63.28, 0.2288 ) }
    apic_7 { pt3dadd( 375.27, 309.185, 63.28, 0.483 ) }
    apic_7 { pt3dadd( 375.118, 308.537, 63.84, 0.2796 ) }
    apic_7 { pt3dadd( 374.876, 308.422, 64.3689, 0.2288 ) }
    apic_7 { pt3dadd( 374.673, 308.385, 64.6178, 0.2288 ) }
    apic_7 { pt3dadd( 374.571, 308.308, 65.0222, 0.2288 ) }
    apic_7 { pt3dadd( 374.317, 308.308, 65.24, 0.2288 ) }
    apic_7 { pt3dadd( 374.101, 308.258, 65.0532, 0.2288 ) }
    apic_7 { pt3dadd( 373.974, 307.965, 64.68, 0.2288 ) }
    apic_7 { pt3dadd( 373.529, 307.838, 64.4, 0.2288 ) }
    apic_7 { pt3dadd( 372.639, 307.545, 64.68, 0.4322 ) }
    apic_7 { pt3dadd( 372.029, 307.622, 64.4, 0.5338 ) }
    apic_7 { pt3dadd( 371.444, 307.622, 64.1511, 0.6356 ) }
    apic_7 { pt3dadd( 370.618, 308.283, 64.6489, 0.5084 ) }
    apic_7 { pt3dadd( 370.389, 308.639, 64.4932, 0.4576 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 25/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 374.546, 322.319, 24.2967, 0.6864 ) }
    apic_2 { pt3dadd( 375.267, 322.726, 23.9221, 0.661 ) }
    apic_2 { pt3dadd( 376.297, 323.058, 23.1585, 0.661 ) }
    apic_2 { pt3dadd( 377.435, 323.067, 23.1409, 0.6356 ) }
    apic_2 { pt3dadd( 378.531, 323.074, 23.8753, 0.6356 ) }
    apic_2 { pt3dadd( 379.667, 323.116, 24.0783, 0.661 ) }
    apic_2 { pt3dadd( 380.76, 323.402, 24.0699, 0.6864 ) }
    apic_2 { pt3dadd( 381.716, 324.025, 24.0299, 0.6864 ) }
    apic_2 { pt3dadd( 382.666, 324.657, 23.8459, 0.661 ) }
    apic_2 { pt3dadd( 383.637, 325.174, 23.1344, 0.6356 ) }
    apic_2 { pt3dadd( 384.741, 325.444, 23.0622, 0.5848 ) }
    apic_2 { pt3dadd( 385.765, 325.827, 23.662, 0.5592 ) }
    apic_2 { pt3dadd( 386.677, 326.261, 24.817, 0.5338 ) }
    apic_2 { pt3dadd( 387.772, 326.388, 24.463, 0.5592 ) }
    apic_2 { pt3dadd( 388.804, 326.764, 23.7216, 0.6102 ) }
    apic_2 { pt3dadd( 389.826, 327.148, 22.9435, 0.661 ) }
    apic_2 { pt3dadd( 390.85, 327.581, 22.4059, 0.7372 ) }
    apic_2 { pt3dadd( 391.929, 327.857, 21.8386, 0.788 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 43/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 382.325, 274.928, 44.8, 0.6864 ) }
    dend_52 { pt3dadd( 382.034, 275.018, 46.4766, 0.6102 ) }
    dend_52 { pt3dadd( 381.422, 274.98, 46.5422, 0.661 ) }
    dend_52 { pt3dadd( 380.952, 274.522, 46.1068, 0.5848 ) }
    dend_52 { pt3dadd( 380.571, 274.458, 46.9157, 0.483 ) }
    dend_52 { pt3dadd( 380.33, 274.738, 47.6, 0.483 ) }
    dend_52 { pt3dadd( 379.744, 274.916, 47.6932, 0.6356 ) }
    dend_52 { pt3dadd( 379.045, 275.246, 47.5068, 0.7626 ) }
    dend_52 { pt3dadd( 378.333, 275.602, 47.88, 0.6864 ) }
    dend_52 { pt3dadd( 377.597, 276.111, 48.6889, 0.661 ) }
    dend_52 { pt3dadd( 377.139, 276.353, 48.44, 0.3304 ) }
    dend_52 { pt3dadd( 376.846, 276.632, 48.72, 0.3814 ) }
    dend_52 { pt3dadd( 376.948, 277.039, 49.6532, 0.5338 ) }
    dend_52 { pt3dadd( 376.846, 277.318, 50.68, 0.5848 ) }
    dend_52 { pt3dadd( 376.91, 277.751, 51.1778, 0.5084 ) }
    dend_52 { pt3dadd( 376.147, 277.878, 52.08, 0.2796 ) }
    dend_52 { pt3dadd( 376.033, 277.89, 52.6089, 0.2542 ) }
    dend_52 { pt3dadd( 375.944, 278.017, 52.92, 0.2288 ) }
    dend_52 { pt3dadd( 375.69, 278.106, 52.92, 0.2288 ) }
    dend_52 { pt3dadd( 375.346, 278.106, 52.92, 0.2288 ) }
    dend_52 { pt3dadd( 375.118, 278.106, 52.92, 0.2288 ) }
    dend_52 { pt3dadd( 374.317, 278.106, 52.92, 0.2288 ) }
    dend_52 { pt3dadd( 373.516, 278.106, 52.92, 0.2288 ) }
    dend_52 { pt3dadd( 372.842, 278.233, 52.92, 0.2288 ) }
    dend_52 { pt3dadd( 372.22, 278.335, 53.1068, 0.2288 ) }
    dend_52 { pt3dadd( 371.686, 278.221, 53.48, 0.2796 ) }
    dend_52 { pt3dadd( 371.178, 278.042, 53.76, 0.356 ) }
    dend_52 { pt3dadd( 370.542, 277.878, 53.76, 0.483 ) }
    dend_52 { pt3dadd( 369.487, 277.649, 54.5378, 0.6864 ) }
    dend_52 { pt3dadd( 369.054, 277.28, 54.1022, 0.305 ) }
    dend_52 { pt3dadd( 368.724, 277.064, 54.04, 0.5084 ) }
    dend_52 { pt3dadd( 368.254, 276.848, 54.88, 0.5592 ) }
    dend_52 { pt3dadd( 367.974, 276.95, 56.1868, 0.6102 ) }
    dend_52 { pt3dadd( 367.758, 276.848, 57.3068, 0.5084 ) }
    dend_52 { pt3dadd( 367.644, 276.848, 58.4268, 0.5338 ) }
    dend_52 { pt3dadd( 367.465, 276.53, 59.1732, 0.3814 ) }
    dend_52 { pt3dadd( 367.453, 276.162, 59.36, 0.5084 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 80/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 382.325, 274.928, 44.8, 0.6864 ) }
    dend_51 { pt3dadd( 382.604, 275.018, 46.3557, 0.7626 ) }
    dend_51 { pt3dadd( 383.138, 275.132, 45.6711, 0.5338 ) }
    dend_51 { pt3dadd( 383.558, 275.17, 47.0089, 0.8136 ) }
    dend_51 { pt3dadd( 383.926, 275.552, 46.9468, 0.3304 ) }
    dend_51 { pt3dadd( 384.282, 275.59, 46.2311, 0.4576 ) }
    dend_51 { pt3dadd( 384.879, 276.009, 46.2, 0.6102 ) }
    dend_51 { pt3dadd( 385.68, 275.818, 46.6668, 0.7372 ) }
    dend_51 { pt3dadd( 386.316, 275.717, 46.76, 0.6864 ) }
    dend_51 { pt3dadd( 387.015, 275.818, 46.76, 0.6356 ) }
    dend_51 { pt3dadd( 387.473, 275.818, 46.76, 0.5338 ) }
    dend_51 { pt3dadd( 387.93, 276.009, 47.6932, 0.661 ) }
    dend_51 { pt3dadd( 388.286, 276.276, 48.9689, 0.8898 ) }
    dend_51 { pt3dadd( 389.494, 276.314, 49.28, 0.7118 ) }
    dend_51 { pt3dadd( 390.206, 276.276, 49.5911, 0.6864 ) }
    dend_51 { pt3dadd( 390.651, 276.416, 50.4, 0.483 ) }
    dend_51 { pt3dadd( 391.134, 276.39, 50.12, 0.4068 ) }
    dend_51 { pt3dadd( 391.616, 276.301, 49.56, 0.305 ) }
    dend_51 { pt3dadd( 391.795, 276.174, 49.4668, 0.2542 ) }
    dend_51 { pt3dadd( 392.087, 276.162, 49.0932, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_51 { pt3dadd( 392.481, 276.162, 49.6222, 0.3814 ) }
    dend_51 { pt3dadd( 393.078, 276.047, 50.12, 0.6102 ) }
    dend_51 { pt3dadd( 393.638, 275.971, 50.5243, 0.5848 ) }
    dend_51 { pt3dadd( 393.79, 275.513, 50.3689, 0.483 ) }
    dend_51 { pt3dadd( 394.222, 275.361, 50.12, 0.4068 ) }
    dend_51 { pt3dadd( 394.451, 275.654, 50.5243, 0.4322 ) }
    dend_51 { pt3dadd( 394.54, 275.742, 51.2089, 0.3304 ) }
    dend_51 { pt3dadd( 394.871, 275.781, 51.52, 0.661 ) }
    dend_51 { pt3dadd( 395.595, 275.704, 50.96, 0.6864 ) }
    dend_51 { pt3dadd( 396.307, 276.06, 51.1468, 0.661 ) }
    dend_51 { pt3dadd( 396.854, 276.174, 50.9289, 0.5592 ) }
    dend_51 { pt3dadd( 397.12, 275.933, 51.4268, 0.4068 ) }
    dend_51 { pt3dadd( 397.388, 275.781, 51.52, 0.483 ) }
    dend_51 { pt3dadd( 398.074, 275.552, 50.96, 0.7118 ) }
    dend_51 { pt3dadd( 398.595, 275.17, 51.8311, 0.6102 ) }
    dend_51 { pt3dadd( 399.129, 275.018, 52.6711, 0.5592 ) }
    dend_51 { pt3dadd( 399.37, 275.018, 53.2, 0.2542 ) }
    dend_51 { pt3dadd( 399.676, 274.98, 53.2, 0.2288 ) }
    dend_51 { pt3dadd( 399.942, 274.801, 52.8889, 0.4068 ) }
    dend_51 { pt3dadd( 400.095, 274.369, 52.92, 0.4576 ) }
    dend_51 { pt3dadd( 400.768, 273.911, 53.1689, 0.5848 ) }
    dend_51 { pt3dadd( 401.201, 273.759, 52.64, 0.4322 ) }
    dend_51 { pt3dadd( 401.646, 273.797, 52.8578, 0.356 ) }
    dend_51 { pt3dadd( 401.658, 273.683, 53.8532, 0.5338 ) }
    dend_51 { pt3dadd( 401.875, 273.632, 54.88, 0.5084 ) }
    dend_51 { pt3dadd( 402.65, 273.302, 55.0668, 0.6864 ) }
    dend_51 { pt3dadd( 403.337, 273.035, 55.16, 0.6102 ) }
    dend_51 { pt3dadd( 404.188, 273.073, 55.1289, 0.7626 ) }
    dend_51 { pt3dadd( 404.874, 273.187, 56.2489, 0.7118 ) }
    dend_51 { pt3dadd( 405.662, 273.302, 56.28, 0.6356 ) }
    dend_51 { pt3dadd( 406.324, 273.403, 56.9332, 0.661 ) }
    dend_51 { pt3dadd( 406.806, 273.721, 57.2132, 0.5338 ) }
    dend_51 { pt3dadd( 407.264, 273.988, 57.4, 0.6102 ) }
    dend_51 { pt3dadd( 407.632, 274.306, 58.24, 0.6102 ) }
    dend_51 { pt3dadd( 407.823, 275.018, 57.9289, 0.8898 ) }
    dend_51 { pt3dadd( 408.421, 275.729, 57.5868, 0.7118 ) }
    dend_51 { pt3dadd( 408.866, 276.353, 58.0532, 0.5848 ) }
    dend_51 { pt3dadd( 409.171, 276.886, 58.52, 0.6356 ) }
    dend_51 { pt3dadd( 409.59, 277.268, 58.8, 0.483 ) }
    dend_51 { pt3dadd( 410.022, 277.42, 59.0489, 0.4576 ) }
    dend_51 { pt3dadd( 410.48, 277.636, 59.64, 0.5084 ) }
    dend_51 { pt3dadd( 410.912, 278.005, 59.64, 0.4322 ) }
    dend_51 { pt3dadd( 411.154, 278.437, 59.6089, 0.3304 ) }
    dend_51 { pt3dadd( 411.573, 278.602, 58.8, 0.305 ) }
    dend_51 { pt3dadd( 411.776, 278.857, 58.8, 0.3304 ) }
    dend_51 { pt3dadd( 412.107, 279.213, 58.8, 0.356 ) }
    dend_51 { pt3dadd( 412.183, 279.479, 58.8, 0.305 ) }
    dend_51 { pt3dadd( 412.183, 279.822, 58.8, 0.2796 ) }
    dend_51 { pt3dadd( 412.387, 280.191, 58.8, 0.3304 ) }
    dend_51 { pt3dadd( 412.743, 280.521, 59.08, 0.5338 ) }
    dend_51 { pt3dadd( 412.857, 281.576, 59.2978, 0.6102 ) }
    dend_51 { pt3dadd( 413.061, 282.034, 59.64, 0.6102 ) }
    dend_51 { pt3dadd( 413.442, 282.466, 60.1689, 0.6864 ) }
    dend_51 { pt3dadd( 413.823, 283.102, 59.64, 0.5592 ) }
    dend_51 { pt3dadd( 414.205, 283.598, 59.7332, 0.6102 ) }
    dend_51 { pt3dadd( 414.433, 284.182, 60.2622, 0.5592 ) }
    dend_51 { pt3dadd( 414.891, 284.436, 60.76, 0.5338 ) }
    dend_51 { pt3dadd( 415.145, 284.831, 60.3868, 0.483 ) }
    dend_51 { pt3dadd( 415.272, 285.199, 60.2, 0.483 ) }
    dend_51 { pt3dadd( 415.463, 285.873, 60.0443, 0.839 ) }
    dend_51 { pt3dadd( 415.882, 286.305, 60.76, 0.661 ) }
    dend_51 { pt3dadd( 416.391, 286.495, 60.5111, 0.483 ) }
    dend_51 { pt3dadd( 416.645, 286.776, 60.1378, 0.4322 ) }
    dend_51 { pt3dadd( 416.657, 287.131, 60.2, 0.661 ) }
    dend_51 { pt3dadd( 416.975, 287.385, 60.76, 0.4576 ) }
    dend_51 { pt3dadd( 417.471, 287.92, 61.32, 0.4576 ) }
    dend_51 { pt3dadd( 417.916, 288.275, 61.32, 0.4322 ) }
    dend_51 { pt3dadd( 418.488, 288.504, 61.32, 0.4068 ) }
    dend_51 { pt3dadd( 418.933, 288.631, 61.04, 0.483 ) }
    dend_51 { pt3dadd( 419.301, 289.165, 61.0711, 0.661 ) }
    dend_51 { pt3dadd( 419.734, 289.432, 61.32, 0.6356 ) }
    dend_51 { pt3dadd( 420.306, 289.584, 61.1332, 0.6356 ) }
    dend_51 { pt3dadd( 420.84, 289.775, 61.1332, 0.6864 ) }
    dend_51 { pt3dadd( 421.577, 289.89, 62.4089, 0.7372 ) }
    dend_51 { pt3dadd( 422.098, 290.054, 63.2489, 0.661 ) }
    dend_51 { pt3dadd( 422.708, 290.347, 63.28, 0.6102 ) }
    dend_51 { pt3dadd( 423.255, 290.69, 63.9022, 0.5338 ) }
    dend_51 { pt3dadd( 423.673, 290.983, 64.12, 0.5084 ) }
    dend_51 { pt3dadd( 424.335, 291.237, 64.12, 0.4322 ) }
    dend_51 { pt3dadd( 424.653, 291.491, 63.84, 0.2542 ) }
    dend_51 { pt3dadd( 424.818, 291.67, 63.84, 0.2288 ) }
    dend_51 { pt3dadd( 425.073, 291.72, 63.9332, 0.2288 ) }
    dend_51 { pt3dadd( 425.237, 291.72, 64.0889, 0.2288 ) }
    dend_51 { pt3dadd( 425.555, 291.733, 64.12, 0.2288 ) }
    dend_51 { pt3dadd( 425.797, 291.834, 64.12, 0.2288 ) }
    dend_51 { pt3dadd( 425.949, 292.025, 64.12, 0.2288 ) }
    dend_51 { pt3dadd( 426.076, 292.242, 64.12, 0.2542 ) }
    dend_51 { pt3dadd( 426.725, 292.623, 64.12, 0.305 ) }
    dend_51 { pt3dadd( 427.08, 292.826, 64.3689, 0.2796 ) }
    dend_51 { pt3dadd( 427.411, 292.978, 63.8711, 0.4068 ) }
    dend_51 { pt3dadd( 427.779, 293.157, 63.8711, 0.5084 ) }
    dend_51 { pt3dadd( 428.428, 293.627, 64.2132, 0.6102 ) }
    dend_51 { pt3dadd( 428.86, 293.919, 64.4, 0.5592 ) }
    dend_51 { pt3dadd( 429.343, 294.199, 64.3068, 0.5338 ) }
    dend_51 { pt3dadd( 429.903, 294.58, 64.1511, 0.661 ) }
    dend_51 { pt3dadd( 430.067, 295.229, 64.4, 0.6864 ) }
    dend_51 { pt3dadd( 430.5, 295.635, 63.6532, 0.305 ) }
    dend_51 { pt3dadd( 430.729, 295.838, 63.8089, 0.2542 ) }
    dend_51 { pt3dadd( 430.945, 296.144, 64.2132, 0.3814 ) }
    dend_51 { pt3dadd( 431.059, 296.436, 64.4622, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_51 { pt3dadd( 431.288, 296.525, 63.0, 0.6102 ) }
    dend_51 { pt3dadd( 431.835, 296.754, 63.0622, 0.3814 ) }
    dend_51 { pt3dadd( 432.165, 296.982, 63.6532, 0.3304 ) }
    dend_51 { pt3dadd( 432.254, 297.173, 64.3689, 0.4322 ) }
    dend_51 { pt3dadd( 432.546, 297.211, 64.4, 0.305 ) }
    dend_51 { pt3dadd( 432.763, 297.288, 64.2757, 0.2288 ) }
    dend_51 { pt3dadd( 432.775, 297.554, 63.84, 0.305 ) }
    dend_51 { pt3dadd( 433.029, 297.898, 63.6222, 0.356 ) }
    dend_51 { pt3dadd( 433.081, 298.317, 63.28, 0.3814 ) }
    dend_51 { pt3dadd( 433.093, 298.736, 63.5289, 0.305 ) }
    dend_51 { pt3dadd( 433.245, 298.8, 63.56, 0.2288 ) }
    dend_51 { pt3dadd( 433.449, 298.825, 63.56, 0.2288 ) }
    dend_51 { pt3dadd( 433.576, 298.927, 63.56, 0.2288 ) }
    dend_51 { pt3dadd( 433.728, 299.118, 63.56, 0.2288 ) }
    dend_51 { pt3dadd( 433.907, 299.206, 63.7468, 0.2288 ) }
    dend_51 { pt3dadd( 433.932, 299.487, 63.84, 0.2288 ) }
    dend_51 { pt3dadd( 434.059, 299.614, 63.6222, 0.2288 ) }
    dend_51 { pt3dadd( 434.262, 299.83, 63.3111, 0.2288 ) }
    dend_51 { pt3dadd( 434.504, 299.842, 63.5289, 0.2288 ) }
    dend_51 { pt3dadd( 434.797, 299.855, 63.9022, 0.2288 ) }
    dend_51 { pt3dadd( 434.949, 299.957, 64.12, 0.2288 ) }
    dend_51 { pt3dadd( 435.14, 300.109, 64.12, 0.2288 ) }
    dend_51 { pt3dadd( 435.178, 300.377, 64.0268, 0.2288 ) }
    dend_51 { pt3dadd( 435.521, 300.529, 63.84, 0.2542 ) }
    dend_51 { pt3dadd( 435.889, 300.567, 63.2489, 0.4576 ) }
    dend_51 { pt3dadd( 436.322, 300.897, 62.9378, 0.6864 ) }
    dend_51 { pt3dadd( 436.843, 301.253, 63.5289, 0.483 ) }
    dend_51 { pt3dadd( 437.021, 301.698, 63.1868, 0.4068 ) }
    dend_51 { pt3dadd( 437.237, 301.902, 63.28, 0.483 ) }
    dend_51 { pt3dadd( 437.63, 302.309, 63.84, 0.7118 ) }
    dend_51 { pt3dadd( 438.343, 302.474, 63.9332, 0.661 ) }
    dend_51 { pt3dadd( 438.724, 302.855, 63.6532, 0.4322 ) }
    dend_51 { pt3dadd( 438.915, 303.083, 63.84, 0.4322 ) }
    dend_51 { pt3dadd( 439.144, 303.401, 64.4622, 0.4322 ) }
    dend_51 { pt3dadd( 439.373, 303.553, 64.9289, 0.305 ) }
    dend_51 { pt3dadd( 439.41, 303.732, 64.96, 0.2288 ) }
    dend_51 { pt3dadd( 439.741, 304.088, 64.68, 0.4068 ) }
    dend_51 { pt3dadd( 439.982, 304.177, 64.7111, 0.3814 ) }
    dend_51 { pt3dadd( 440.211, 304.418, 65.52, 0.4322 ) }
    dend_51 { pt3dadd( 440.44, 304.914, 65.9868, 0.4576 ) }
    dend_51 { pt3dadd( 440.554, 305.473, 65.8622, 0.4322 ) }
    dend_51 { pt3dadd( 440.745, 305.779, 65.9243, 0.3814 ) }
    dend_51 { pt3dadd( 440.999, 306.07, 66.1732, 0.305 ) }
    dend_51 { pt3dadd( 441.164, 306.592, 66.2668, 0.2542 ) }
    dend_51 { pt3dadd( 441.241, 306.808, 66.3289, 0.2288 ) }
    dend_51 { pt3dadd( 441.355, 306.948, 66.1111, 0.2542 ) }
    dend_51 { pt3dadd( 441.724, 307.126, 65.8311, 0.4068 ) }
    dend_51 { pt3dadd( 442.016, 307.164, 66.4222, 0.483 ) }
    dend_51 { pt3dadd( 442.461, 306.948, 66.7643, 0.5084 ) }
    dend_51 { pt3dadd( 442.499, 306.986, 67.9157, 0.4576 ) }
    dend_51 { pt3dadd( 442.651, 307.342, 68.3511, 0.4068 ) }
    dend_51 { pt3dadd( 443.033, 307.393, 68.7868, 0.2542 ) }
    dend_51 { pt3dadd( 443.377, 307.393, 68.6932, 0.2542 ) }
    dend_51 { pt3dadd( 443.758, 307.584, 68.7868, 0.356 ) }
    dend_51 { pt3dadd( 444.139, 307.813, 68.04, 0.4068 ) }
    dend_51 { pt3dadd( 444.38, 308.029, 68.04, 0.356 ) }
    dend_51 { pt3dadd( 444.825, 308.385, 68.04, 0.356 ) }
    dend_51 { pt3dadd( 445.27, 308.728, 68.0711, 0.4068 ) }
    dend_51 { pt3dadd( 445.69, 309.007, 68.32, 0.4322 ) }
    dend_51 { pt3dadd( 446.058, 309.439, 68.32, 0.4576 ) }
    dend_51 { pt3dadd( 446.414, 309.77, 68.04, 0.4322 ) }
    dend_51 { pt3dadd( 446.745, 310.126, 68.04, 0.483 ) }
    dend_51 { pt3dadd( 446.999, 310.673, 67.48, 0.4576 ) }
    dend_51 { pt3dadd( 447.304, 310.71, 67.48, 0.2288 ) }
    dend_51 { pt3dadd( 447.647, 310.71, 67.48, 0.3814 ) }
    dend_51 { pt3dadd( 448.028, 310.914, 67.7289, 0.483 ) }
    dend_51 { pt3dadd( 448.194, 311.168, 68.32, 0.356 ) }
    dend_51 { pt3dadd( 448.105, 311.295, 68.8489, 0.2288 ) }
    dend_51 { pt3dadd( 448.105, 311.461, 69.0043, 0.2288 ) }
    dend_51 { pt3dadd( 448.181, 311.561, 69.4089, 0.2288 ) }
    dend_51 { pt3dadd( 448.257, 311.69, 69.4089, 0.2288 ) }
    dend_51 { pt3dadd( 448.448, 311.753, 69.1911, 0.2288 ) }
    dend_51 { pt3dadd( 449.236, 311.981, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 449.44, 312.108, 69.1289, 0.2288 ) }
    dend_51 { pt3dadd( 449.592, 312.21, 68.9111, 0.2288 ) }
    dend_51 { pt3dadd( 449.897, 312.464, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 449.935, 312.998, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 449.935, 313.342, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 449.935, 313.799, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 450.062, 314.015, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 450.278, 314.142, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 450.507, 314.257, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 450.736, 314.257, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 451.524, 314.269, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 452.109, 314.486, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 452.452, 314.486, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 452.757, 314.523, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 453.011, 314.613, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 453.215, 314.752, 69.16, 0.2288 ) }
    dend_51 { pt3dadd( 453.596, 315.286, 69.44, 0.2288 ) }
    dend_51 { pt3dadd( 453.825, 315.388, 69.4711, 0.2288 ) }
    dend_51 { pt3dadd( 453.952, 315.515, 69.6889, 0.2288 ) }
    dend_51 { pt3dadd( 454.118, 315.68, 69.72, 0.2288 ) }
    dend_51 { pt3dadd( 454.168, 315.973, 69.72, 0.2288 ) }
    dend_51 { pt3dadd( 454.168, 316.202, 69.72, 0.2288 ) }
    dend_51 { pt3dadd( 454.168, 316.545, 69.72, 0.2288 ) }
    dend_51 { pt3dadd( 454.218, 316.838, 69.72, 0.2288 ) }
    dend_51 { pt3dadd( 454.473, 316.926, 69.72, 0.2288 ) }
    dend_51 { pt3dadd( 454.69, 317.053, 69.72, 0.2288 ) }
    dend_51 { pt3dadd( 455.312, 317.346, 70.0, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_51 { pt3dadd( 456.113, 317.346, 70.0, 0.2288 ) }
    dend_51 { pt3dadd( 456.876, 317.383, 70.0, 0.2288 ) }
    dend_51 { pt3dadd( 457.371, 317.689, 70.0, 0.2288 ) }
    dend_51 { pt3dadd( 457.714, 318.146, 70.0, 0.2288 ) }
    dend_51 { pt3dadd( 457.714, 318.49, 70.0, 0.2288 ) }
    dend_51 { pt3dadd( 457.841, 318.706, 70.0, 0.2288 ) }
    dend_51 { pt3dadd( 458.172, 318.718, 70.0, 0.2288 ) }
    dend_51 { pt3dadd( 458.388, 318.845, 70.0, 0.2288 ) }
    dend_51 { pt3dadd( 458.401, 319.049, 69.9689, 0.2288 ) }
    dend_51 { pt3dadd( 458.694, 319.341, 69.44, 0.2288 ) }
    dend_51 { pt3dadd( 459.011, 319.825, 69.44, 0.2288 ) }
    dend_51 { pt3dadd( 459.176, 320.002, 69.44, 0.2288 ) }
    dend_51 { pt3dadd( 459.316, 320.206, 69.44, 0.2542 ) }
    dend_51 { pt3dadd( 459.583, 320.434, 69.9068, 0.305 ) }
    dend_51 { pt3dadd( 459.85, 320.651, 70.1243, 0.356 ) }
    dend_51 { pt3dadd( 460.181, 320.815, 70.5289, 0.5848 ) }
    dend_51 { pt3dadd( 460.587, 321.108, 70.56, 0.6864 ) }
    dend_51 { pt3dadd( 460.994, 321.514, 71.3689, 0.6102 ) }
    dend_51 { pt3dadd( 461.668, 321.693, 70.9957, 0.483 ) }
    dend_51 { pt3dadd( 461.845, 322.215, 70.3732, 0.661 ) }
    dend_51 { pt3dadd( 462.367, 322.494, 70.6532, 0.5084 ) }
    dend_51 { pt3dadd( 462.862, 322.379, 70.84, 0.4322 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 22/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 323.79, 248.743, 51.24, 0.483 ) }
    dend_45 { pt3dadd( 328.178, 243.821, 48.0281, 0.2542 ) }
    dend_45 { pt3dadd( 329.293, 242.464, 48.0281, 0.2288 ) }
    dend_45 { pt3dadd( 329.491, 241.187, 48.0281, 0.2288 ) }
    dend_45 { pt3dadd( 330.292, 233.979, 52.831, 0.2288 ) }
    dend_45 { pt3dadd( 329.064, 230.757, 52.831, 0.2288 ) }
    dend_45 { pt3dadd( 328.378, 228.286, 52.831, 0.2542 ) }
    dend_45 { pt3dadd( 328.966, 222.495, 52.831, 0.305 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 30/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 323.79, 248.743, 51.24, 0.483 ) }
    dend_44 { pt3dadd( 324.095, 248.439, 51.9868, 0.4322 ) }
    dend_44 { pt3dadd( 324.515, 248.21, 52.08, 0.4322 ) }
    dend_44 { pt3dadd( 324.846, 248.121, 51.8932, 0.356 ) }
    dend_44 { pt3dadd( 325.048, 247.828, 52.36, 0.2796 ) }
    dend_44 { pt3dadd( 325.125, 247.295, 53.1068, 0.2542 ) }
    dend_44 { pt3dadd( 324.832, 246.939, 53.48, 0.356 ) }
    dend_44 { pt3dadd( 324.54, 246.43, 53.48, 0.2542 ) }
    dend_44 { pt3dadd( 324.274, 246.087, 53.6668, 0.2542 ) }
    dend_44 { pt3dadd( 323.829, 245.998, 53.76, 0.356 ) }
    dend_44 { pt3dadd( 323.332, 245.731, 54.4132, 0.3814 ) }
    dend_44 { pt3dadd( 323.294, 245.35, 54.7868, 0.305 ) }
    dend_44 { pt3dadd( 323.294, 244.587, 54.88, 0.2542 ) }
    dend_44 { pt3dadd( 323.294, 244.015, 55.44, 0.2288 ) }
    dend_44 { pt3dadd( 323.167, 243.558, 55.9689, 0.2288 ) }
    dend_44 { pt3dadd( 323.066, 242.986, 56.28, 0.2288 ) }
    dend_44 { pt3dadd( 322.722, 242.528, 56.28, 0.2288 ) }
    dend_44 { pt3dadd( 322.506, 242.401, 56.28, 0.2288 ) }
    dend_44 { pt3dadd( 322.341, 241.879, 56.28, 0.2288 ) }
    dend_44 { pt3dadd( 321.922, 241.727, 56.28, 0.2288 ) }
    dend_44 { pt3dadd( 321.591, 241.257, 56.28, 0.2288 ) }
    dend_44 { pt3dadd( 321.121, 240.926, 56.28, 0.2288 ) }
    dend_44 { pt3dadd( 320.879, 240.825, 56.28, 0.2288 ) }
    dend_44 { pt3dadd( 320.384, 240.633, 56.28, 0.2288 ) }
    dend_44 { pt3dadd( 320.206, 240.24, 57.12, 0.2288 ) }
    dend_44 { pt3dadd( 320.206, 240.049, 57.4932, 0.2288 ) }
    dend_44 { pt3dadd( 320.206, 239.897, 58.24, 0.2288 ) }
    dend_44 { pt3dadd( 320.193, 239.757, 58.7068, 0.2288 ) }
    dend_44 { pt3dadd( 319.977, 239.401, 58.9868, 0.305 ) }
    dend_44 { pt3dadd( 319.964, 238.994, 59.36, 0.3814 ) }
    dend_44 { pt3dadd( 319.748, 239.083, 60.1689, 0.3814 ) }
    dend_44 { pt3dadd( 319.494, 238.664, 60.48, 0.5848 ) }
    dend_44 { pt3dadd( 319.024, 238.104, 59.92, 0.6102 ) }
    dend_44 { pt3dadd( 318.617, 237.711, 61.04, 0.4576 ) }
    dend_44 { pt3dadd( 318.375, 236.731, 61.1332, 0.5592 ) }
    dend_44 { pt3dadd( 318.286, 236.315, 61.903, 0.483 ) }
    dend_44 { pt3dadd( 311.987, 227.56, 65.6387, 0.356 ) }
    dend_44 { pt3dadd( 311.193, 225.079, 65.6387, 0.2796 ) }
    dend_44 { pt3dadd( 311.369, 219.188, 68.8405, 0.2288 ) }
    dend_44 { pt3dadd( 310.858, 216.729, 68.8405, 0.2288 ) }
    dend_44 { pt3dadd( 309.443, 215.188, 68.8405, 0.2796 ) }
    dend_44 { pt3dadd( 303.309, 212.829, 78.9799, 0.356 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 72/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 366.223, 333.07, 6.3417, 0.5848 ) }
    dend_25 { pt3dadd( 365.61, 332.777, 3.92, 0.5338 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 366.223, 333.07, 6.3417, 0.5848 ) }
    dend_24 { pt3dadd( 366.741, 333.578, 5.4132, 0.6356 ) }
    dend_24 { pt3dadd( 367.008, 333.883, 5.4132, 0.483 ) }
    dend_24 { pt3dadd( 367.326, 334.2, 5.8178, 0.4576 ) }
    dend_24 { pt3dadd( 367.389, 334.353, 6.6889, 0.4576 ) }
    dend_24 { pt3dadd( 367.707, 334.493, 5.9732, 0.4068 ) }
    dend_24 { pt3dadd( 368.152, 334.175, 6.44, 0.6102 ) }
    dend_24 { pt3dadd( 368.597, 334.162, 6.44, 0.5338 ) }
    dend_24 { pt3dadd( 369.105, 334.162, 5.4443, 0.5848 ) }
    dend_24 { pt3dadd( 369.716, 333.908, 5.6, 0.6864 ) }
    dend_24 { pt3dadd( 370.3, 333.921, 5.88, 0.6102 ) }
    dend_24 { pt3dadd( 370.847, 333.819, 6.2532, 0.4576 ) }
    dend_24 { pt3dadd( 371.114, 333.641, 6.8443, 0.4576 ) }
    dend_24 { pt3dadd( 371.495, 333.514, 7.84, 0.5084 ) }
    dend_24 { pt3dadd( 371.914, 333.934, 8.4, 0.4322 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 322.852, 274.933, 17.3306, 0.6102 ) }
    dend_13 { pt3dadd( 321.975, 275.464, 17.3611, 0.5084 ) }
    dend_13 { pt3dadd( 320.836, 275.381, 17.3701, 0.7118 ) }
    dend_13 { pt3dadd( 319.764, 275.004, 17.4244, 0.839 ) }
    dend_13 { pt3dadd( 318.718, 274.605, 17.8024, 0.8644 ) }
    dend_13 { pt3dadd( 316.855, 274.41, 17.2119, 0.8136 ) }
    dend_13 { pt3dadd( 315.84, 273.978, 16.5668, 0.788 ) }
    dend_13 { pt3dadd( 314.758, 273.685, 16.2834, 0.7372 ) }
    dend_13 { pt3dadd( 313.638, 273.814, 16.5494, 0.7118 ) }
    dend_13 { pt3dadd( 312.858, 274.225, 18.1009, 0.6356 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 99/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 322.852, 274.933, 17.3306, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_12 { pt3dadd( 321.514, 274.56, 16.928, 0.5848 ) }
    dend_12 { pt3dadd( 320.805, 273.74, 16.2058, 0.5592 ) }
    dend_12 { pt3dadd( 319.896, 273.049, 16.0345, 0.5592 ) }
    dend_12 { pt3dadd( 318.976, 272.445, 15.3474, 0.5848 ) }
    dend_12 { pt3dadd( 318.079, 271.759, 14.9153, 0.6356 ) }
    dend_12 { pt3dadd( 317.099, 271.726, 14.1677, 0.7626 ) }
    dend_12 { pt3dadd( 316.0, 271.941, 14.2856, 0.8644 ) }
    dend_12 { pt3dadd( 314.947, 272.363, 13.9919, 0.8898 ) }
    dend_12 { pt3dadd( 313.844, 272.556, 13.9482, 0.8136 ) }
    dend_12 { pt3dadd( 312.871, 271.996, 13.748, 0.7118 ) }
    dend_12 { pt3dadd( 311.973, 271.366, 13.0116, 0.6864 ) }
    dend_12 { pt3dadd( 311.211, 270.529, 12.6924, 0.7372 ) }
    dend_12 { pt3dadd( 310.313, 269.516, 12.8797, 0.788 ) }
    dend_12 { pt3dadd( 309.467, 268.808, 12.8789, 0.7372 ) }
    dend_12 { pt3dadd( 308.361, 269.029, 12.8727, 0.661 ) }
    dend_12 { pt3dadd( 307.22, 269.097, 12.829, 0.6102 ) }
    dend_12 { pt3dadd( 306.137, 269.26, 12.3581, 0.6356 ) }
    dend_12 { pt3dadd( 305.456, 268.478, 11.7516, 0.6102 ) }
    dend_12 { pt3dadd( 305.575, 267.369, 11.7071, 0.6356 ) }
    dend_12 { pt3dadd( 305.557, 266.245, 11.4064, 0.661 ) }
    dend_12 { pt3dadd( 305.07, 265.278, 10.6946, 0.788 ) }
    dend_12 { pt3dadd( 304.312, 264.426, 10.4966, 0.839 ) }
    dend_12 { pt3dadd( 303.678, 263.516, 9.9548, 0.788 ) }
    dend_12 { pt3dadd( 303.052, 262.574, 9.8851, 0.661 ) }
    dend_12 { pt3dadd( 302.579, 261.584, 10.5739, 0.5338 ) }
    dend_12 { pt3dadd( 301.741, 260.831, 10.64, 0.483 ) }
    dend_12 { pt3dadd( 300.73, 260.303, 10.64, 0.4576 ) }
    dend_12 { pt3dadd( 299.734, 259.746, 10.64, 0.4576 ) }
    dend_12 { pt3dadd( 298.873, 258.995, 10.64, 0.5084 ) }
    dend_12 { pt3dadd( 298.218, 258.065, 10.64, 0.5848 ) }
    dend_12 { pt3dadd( 297.594, 257.106, 10.64, 0.7118 ) }
    dend_12 { pt3dadd( 297.195, 256.039, 10.64, 0.7626 ) }
    dend_12 { pt3dadd( 296.711, 255.005, 10.6397, 0.7626 ) }
    dend_12 { pt3dadd( 296.299, 253.939, 10.6386, 0.661 ) }
    dend_12 { pt3dadd( 295.618, 253.025, 10.6336, 0.5848 ) }
    dend_12 { pt3dadd( 294.866, 252.164, 10.6128, 0.5338 ) }
    dend_12 { pt3dadd( 294.342, 251.15, 10.4835, 0.5084 ) }
    dend_12 { pt3dadd( 293.978, 250.113, 9.8143, 0.4576 ) }
    dend_12 { pt3dadd( 293.376, 249.173, 9.7885, 0.4322 ) }
    dend_12 { pt3dadd( 292.805, 248.227, 10.0691, 0.4576 ) }
    dend_12 { pt3dadd( 292.151, 247.318, 9.5819, 0.483 ) }
    dend_12 { pt3dadd( 291.375, 246.48, 9.5396, 0.4576 ) }
    dend_12 { pt3dadd( 290.671, 245.584, 9.6188, 0.3814 ) }
    dend_12 { pt3dadd( 291.11, 244.827, 10.2864, 0.3814 ) }
    dend_12 { pt3dadd( 290.804, 245.059, 9.6709, 0.4322 ) }
    // Section: apic_26, id: apic_26, parent: apic_24 (entry count 45/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 337.348, 330.734, 11.7631, 0.5592 ) }
    apic_26 { pt3dadd( 337.251, 331.366, 11.8843, 0.6864 ) }
    apic_26 { pt3dadd( 336.921, 331.81, 12.1332, 0.483 ) }
    apic_26 { pt3dadd( 336.641, 332.294, 11.76, 0.5084 ) }
    apic_26 { pt3dadd( 336.196, 332.561, 10.9822, 0.5592 ) }
    apic_26 { pt3dadd( 335.853, 332.904, 9.5822, 0.7626 ) }
    apic_26 { pt3dadd( 335.65, 333.578, 8.9911, 0.5848 ) }
    apic_26 { pt3dadd( 335.217, 333.628, 8.9911, 0.356 ) }
    apic_26 { pt3dadd( 334.963, 334.086, 9.1468, 0.4322 ) }
    apic_26 { pt3dadd( 334.849, 334.277, 9.52, 0.5084 ) }
    apic_26 { pt3dadd( 334.213, 334.468, 9.4889, 0.5848 ) }
    apic_26 { pt3dadd( 333.807, 334.391, 8.1511, 0.483 ) }
    apic_26 { pt3dadd( 333.133, 333.934, 8.68, 0.6864 ) }
    apic_26 { pt3dadd( 332.434, 333.489, 8.4, 0.5848 ) }
    apic_26 { pt3dadd( 331.862, 332.879, 8.4932, 0.4576 ) }
    apic_26 { pt3dadd( 331.569, 332.332, 8.4932, 0.4322 ) }
    apic_26 { pt3dadd( 331.455, 331.683, 8.68, 0.5338 ) }
    apic_26 { pt3dadd( 331.531, 331.074, 8.96, 0.483 ) }
    apic_26 { pt3dadd( 331.404, 330.591, 8.2132, 0.3814 ) }
    apic_26 { pt3dadd( 330.997, 330.044, 7.4668, 0.4576 ) }
    apic_26 { pt3dadd( 330.616, 329.917, 5.8489, 0.6356 ) }
    apic_26 { pt3dadd( 330.387, 329.32, 5.7868, 0.5084 ) }
    apic_26 { pt3dadd( 330.082, 328.938, 6.16, 0.4576 ) }
    apic_26 { pt3dadd( 329.815, 328.786, 7.28, 0.5084 ) }
    apic_26 { pt3dadd( 329.828, 328.557, 6.4711, 0.2288 ) }
    apic_26 { pt3dadd( 330.094, 328.557, 5.7243, 0.4576 ) }
    apic_26 { pt3dadd( 330.464, 328.442, 4.9468, 0.5084 ) }
    apic_26 { pt3dadd( 330.768, 327.883, 4.2622, 0.4576 ) }
    apic_26 { pt3dadd( 330.959, 327.527, 3.92, 0.2542 ) }
    apic_26 { pt3dadd( 330.959, 327.146, 4.3868, 0.2288 ) }
    apic_26 { pt3dadd( 331.124, 326.955, 5.4757, 0.3814 ) }
    apic_26 { pt3dadd( 331.417, 326.955, 5.6, 0.5084 ) }
    // Section: apic_25, id: apic_25, parent: apic_24 (entry count 77/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 337.348, 330.734, 11.7631, 0.5592 ) }
    apic_25 { pt3dadd( 338.155, 330.991, 11.5366, 0.5592 ) }
    apic_25 { pt3dadd( 339.015, 331.383, 10.0509, 0.5338 ) }
    apic_25 { pt3dadd( 339.71, 331.779, 8.0959, 0.4576 ) }
    apic_25 { pt3dadd( 340.499, 331.838, 6.3997, 0.3814 ) }
    apic_25 { pt3dadd( 341.367, 331.13, 5.9419, 0.305 ) }
    apic_25 { pt3dadd( 342.287, 330.567, 5.234, 0.2542 ) }
    apic_25 { pt3dadd( 343.203, 330.117, 6.0668, 0.2288 ) }
    apic_25 { pt3dadd( 344.123, 330.362, 7.5947, 0.2288 ) }
    apic_25 { pt3dadd( 345.151, 330.385, 8.7926, 0.2288 ) }
    apic_25 { pt3dadd( 346.185, 330.371, 8.0926, 0.2542 ) }
    apic_25 { pt3dadd( 346.737, 330.428, 5.8061, 0.2796 ) }
    apic_25 { pt3dadd( 347.055, 331.3, 6.8704, 0.356 ) }
    apic_25 { pt3dadd( 346.913, 332.274, 8.0604, 0.3814 ) }
    apic_25 { pt3dadd( 346.471, 333.15, 6.8785, 0.4068 ) }
    apic_25 { pt3dadd( 345.539, 333.643, 6.4613, 0.356 ) }
    apic_25 { pt3dadd( 345.022, 334.25, 8.2121, 0.3304 ) }
    apic_25 { pt3dadd( 344.492, 335.059, 9.4486, 0.3304 ) }
    apic_25 { pt3dadd( 344.479, 335.89, 11.1835, 0.3814 ) }
    apic_25 { pt3dadd( 343.832, 336.438, 13.0068, 0.4576 ) }
    apic_25 { pt3dadd( 343.359, 337.274, 14.1075, 0.5848 ) }
    apic_25 { pt3dadd( 342.971, 338.166, 15.12, 0.6864 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 99/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 360.791, 326.725, 22.7746, 0.966 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    apic_11 { pt3dadd( 360.111, 327.753, 21.0521, 0.6864 ) }
    apic_11 { pt3dadd( 359.376, 328.613, 20.72, 0.6864 ) }
    apic_11 { pt3dadd( 358.548, 329.402, 20.7203, 0.6356 ) }
    apic_11 { pt3dadd( 357.64, 330.091, 20.7214, 0.6356 ) }
    apic_11 { pt3dadd( 356.793, 330.857, 20.7267, 0.6356 ) }
    apic_11 { pt3dadd( 356.278, 331.857, 20.7581, 0.6864 ) }
    apic_11 { pt3dadd( 356.22, 332.996, 20.9647, 0.788 ) }
    apic_11 { pt3dadd( 356.119, 334.076, 21.8028, 0.8644 ) }
    apic_11 { pt3dadd( 355.807, 335.139, 22.3731, 0.839 ) }
    apic_11 { pt3dadd( 355.731, 336.184, 23.4833, 0.7626 ) }
    apic_11 { pt3dadd( 355.459, 337.248, 24.05, 0.661 ) }
    apic_11 { pt3dadd( 355.104, 338.33, 23.8924, 0.6864 ) }
    apic_11 { pt3dadd( 354.633, 339.325, 23.2095, 0.6864 ) }
    apic_11 { pt3dadd( 354.126, 340.337, 22.9362, 0.7372 ) }
    apic_11 { pt3dadd( 353.647, 341.372, 22.8256, 0.7372 ) }
    apic_11 { pt3dadd( 353.418, 342.451, 22.1813, 0.788 ) }
    apic_11 { pt3dadd( 353.113, 343.536, 22.076, 0.8136 ) }
    apic_11 { pt3dadd( 353.001, 344.622, 22.8497, 0.839 ) }
    apic_11 { pt3dadd( 352.767, 345.727, 22.9645, 0.839 ) }
    apic_11 { pt3dadd( 352.231, 346.735, 22.9849, 0.839 ) }
    apic_11 { pt3dadd( 351.626, 347.699, 23.0868, 0.839 ) }
    apic_11 { pt3dadd( 351.166, 348.703, 23.6863, 0.8136 ) }
    apic_11 { pt3dadd( 350.69, 349.717, 24.08, 0.7372 ) }
    apic_11 { pt3dadd( 350.098, 350.693, 24.08, 0.7118 ) }
    apic_11 { pt3dadd( 349.58, 351.709, 24.08, 0.7118 ) }
    apic_11 { pt3dadd( 349.061, 352.724, 24.0803, 0.8136 ) }
    apic_11 { pt3dadd( 348.537, 353.737, 24.0814, 0.839 ) }
    apic_11 { pt3dadd( 347.989, 354.737, 24.0876, 0.8644 ) }
    apic_11 { pt3dadd( 347.534, 355.773, 24.1242, 0.839 ) }
    apic_11 { pt3dadd( 347.277, 356.875, 24.3351, 0.839 ) }
    apic_11 { pt3dadd( 347.106, 357.952, 25.1028, 0.839 ) }
    apic_11 { pt3dadd( 347.197, 359.089, 25.1835, 0.8136 ) }
    apic_11 { pt3dadd( 347.577, 360.162, 25.0902, 0.788 ) }
    apic_11 { pt3dadd( 347.614, 361.402, 25.2843, 0.7626 ) }
    apic_11 { pt3dadd( 347.877, 362.481, 25.7684, 0.7626 ) }
    apic_11 { pt3dadd( 347.755, 363.565, 26.36, 0.7626 ) }
    apic_11 { pt3dadd( 346.939, 364.332, 26.5429, 0.788 ) }
    apic_11 { pt3dadd( 345.893, 364.561, 27.4296, 0.8136 ) }
    apic_11 { pt3dadd( 344.907, 364.921, 28.3741, 0.8136 ) }
    apic_11 { pt3dadd( 344.065, 365.686, 28.5603, 0.7626 ) }
    apic_11 { pt3dadd( 343.277, 366.515, 28.5614, 0.7118 ) }
    apic_11 { pt3dadd( 342.578, 367.413, 28.5662, 0.661 ) }
    apic_11 { pt3dadd( 342.12, 368.456, 28.5953, 0.6356 ) }
    apic_11 { pt3dadd( 341.916, 369.575, 28.7899, 0.6356 ) }
    apic_11 { pt3dadd( 341.614, 370.579, 29.7909, 0.6864 ) }
    apic_11 { pt3dadd( 341.497, 371.628, 30.7535, 0.7372 ) }
    apic_11 { pt3dadd( 341.129, 372.705, 30.8, 0.7626 ) }
    apic_11 { pt3dadd( 340.754, 373.783, 30.8, 0.7626 ) }
    apic_11 { pt3dadd( 340.339, 374.844, 30.8, 0.7626 ) }
    apic_11 { pt3dadd( 339.749, 375.819, 30.8, 0.7118 ) }
    apic_11 { pt3dadd( 339.318, 376.872, 30.8, 0.661 ) }
    apic_11 { pt3dadd( 339.036, 377.972, 30.8, 0.6356 ) }
    apic_11 { pt3dadd( 338.468, 378.96, 30.8, 0.7372 ) }
    apic_11 { pt3dadd( 337.712, 379.817, 30.8, 0.8136 ) }
    apic_11 { pt3dadd( 336.924, 380.647, 30.8, 0.788 ) }
    apic_11 { pt3dadd( 336.219, 381.541, 30.8, 0.6356 ) }
    apic_11 { pt3dadd( 335.769, 382.588, 30.8, 0.5592 ) }
    apic_11 { pt3dadd( 335.134, 383.537, 30.8, 0.6102 ) }
    apic_11 { pt3dadd( 334.461, 384.461, 30.8, 0.6864 ) }
    apic_11 { pt3dadd( 333.763, 385.362, 30.8, 0.6864 ) }
    apic_11 { pt3dadd( 333.085, 386.281, 30.8, 0.6102 ) }
    apic_11 { pt3dadd( 332.348, 387.155, 30.8, 0.5848 ) }
    apic_11 { pt3dadd( 331.939, 388.205, 30.8006, 0.5592 ) }
    apic_11 { pt3dadd( 331.632, 389.297, 30.8036, 0.5592 ) }
    apic_11 { pt3dadd( 331.282, 390.383, 30.823, 0.5338 ) }
    apic_11 { pt3dadd( 330.925, 391.468, 30.9383, 0.5338 ) }
    apic_11 { pt3dadd( 330.435, 392.46, 31.5596, 0.5592 ) }
    apic_11 { pt3dadd( 329.783, 393.384, 31.92, 0.5848 ) }
    apic_11 { pt3dadd( 329.171, 394.348, 31.9208, 0.6102 ) }
    apic_11 { pt3dadd( 328.58, 395.324, 31.9242, 0.6102 ) }
    apic_11 { pt3dadd( 328.053, 396.336, 31.943, 0.6102 ) }
    apic_11 { pt3dadd( 327.497, 397.332, 32.0438, 0.6102 ) }
    apic_11 { pt3dadd( 326.904, 398.27, 32.5702, 0.6102 ) }
    apic_11 { pt3dadd( 326.414, 399.279, 33.0414, 0.6356 ) }
    apic_11 { pt3dadd( 325.996, 400.336, 33.0487, 0.7118 ) }
    apic_11 { pt3dadd( 325.663, 401.427, 33.0929, 0.788 ) }
    apic_11 { pt3dadd( 325.581, 402.553, 33.4023, 0.8136 ) }
    apic_11 { pt3dadd( 325.574, 403.654, 34.1113, 0.788 ) }
    apic_11 { pt3dadd( 325.532, 404.795, 34.1597, 0.7626 ) }
    apic_11 { pt3dadd( 325.244, 405.887, 34.158, 0.7626 ) }
    apic_11 { pt3dadd( 324.544, 406.788, 34.1508, 0.7372 ) }
    apic_11 { pt3dadd( 323.895, 407.725, 34.1155, 0.7118 ) }
    apic_11 { pt3dadd( 323.188, 408.622, 33.9634, 0.7118 ) }
    apic_11 { pt3dadd( 322.614, 409.561, 33.3192, 0.7626 ) }
    apic_11 { pt3dadd( 322.138, 410.59, 33.1643, 0.8136 ) }
    apic_11 { pt3dadd( 321.909, 411.661, 33.8041, 0.8644 ) }
    apic_11 { pt3dadd( 321.844, 412.785, 34.2636, 0.9152 ) }
    apic_11 { pt3dadd( 321.579, 413.857, 34.825, 0.9914 ) }
    apic_11 { pt3dadd( 321.789, 414.944, 35.1968, 0.9914 ) }
    apic_11 { pt3dadd( 321.914, 416.048, 34.6996, 0.9406 ) }
    apic_11 { pt3dadd( 321.872, 417.163, 34.1754, 0.8644 ) }
    apic_11 { pt3dadd( 321.576, 418.25, 34.2689, 0.839 ) }
    apic_11 { pt3dadd( 320.868, 419.087, 34.8645, 0.8644 ) }
    apic_11 { pt3dadd( 320.109, 419.921, 35.28, 0.9152 ) }
    apic_11 { pt3dadd( 319.51, 420.886, 35.28, 1.0168 ) }
    apic_11 { pt3dadd( 319.184, 421.971, 35.28, 1.0932 ) }
    apic_11 { pt3dadd( 319.11, 423.112, 35.28, 1.144 ) }
    apic_11 { pt3dadd( 318.812, 424.208, 35.28, 1.144 ) }
    apic_11 { pt3dadd( 318.652, 425.338, 35.28, 1.144 ) }
    apic_11 { pt3dadd( 318.321, 426.424, 35.28, 1.1694 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    apic_11 { pt3dadd( 317.886, 427.476, 35.28, 1.1694 ) }
    apic_11 { pt3dadd( 317.205, 428.394, 35.28, 1.1694 ) }
    apic_11 { pt3dadd( 316.822, 429.455, 35.2806, 1.144 ) }
    apic_11 { pt3dadd( 316.491, 430.54, 35.2839, 1.1948 ) }
    apic_11 { pt3dadd( 316.055, 431.592, 35.3038, 1.2202 ) }
    apic_11 { pt3dadd( 315.37, 432.505, 35.3931, 1.2202 ) }
    apic_11 { pt3dadd( 314.959, 433.523, 35.947, 1.1694 ) }
    apic_11 { pt3dadd( 314.638, 434.596, 36.4, 1.144 ) }
    apic_11 { pt3dadd( 314.593, 435.738, 36.4, 1.144 ) }
    apic_11 { pt3dadd( 314.555, 436.881, 36.4, 1.0932 ) }
    apic_11 { pt3dadd( 314.296, 437.98, 36.4006, 1.0168 ) }
    apic_11 { pt3dadd( 313.727, 438.969, 36.4025, 0.9406 ) }
    apic_11 { pt3dadd( 312.993, 439.845, 36.4109, 0.9152 ) }
    apic_11 { pt3dadd( 312.39, 440.802, 36.4543, 0.966 ) }
    apic_11 { pt3dadd( 312.263, 441.922, 36.7772, 1.0168 ) }
    apic_11 { pt3dadd( 312.005, 442.98, 37.464, 1.1186 ) }
    apic_11 { pt3dadd( 311.446, 443.973, 37.5197, 1.1948 ) }
    apic_11 { pt3dadd( 311.094, 445.057, 37.5178, 1.1694 ) }
    apic_11 { pt3dadd( 310.948, 446.186, 37.5052, 1.0678 ) }
    apic_11 { pt3dadd( 311.009, 447.327, 37.4125, 0.9406 ) }
    apic_11 { pt3dadd( 309.661, 448.662, 38.2245, 1.0932 ) }
    apic_11 { pt3dadd( 308.994, 449.574, 38.635, 1.0932 ) }
    apic_11 { pt3dadd( 308.446, 450.56, 38.6403, 0.9914 ) }
    apic_11 { pt3dadd( 308.278, 451.691, 38.6414, 0.8898 ) }
    apic_11 { pt3dadd( 307.731, 452.682, 38.6478, 0.8644 ) }
    apic_11 { pt3dadd( 307.156, 453.668, 38.68, 0.7626 ) }
    apic_11 { pt3dadd( 306.611, 454.668, 38.8604, 0.6864 ) }
    apic_11 { pt3dadd( 306.145, 455.62, 39.7538, 0.6102 ) }
    apic_11 { pt3dadd( 305.94, 456.637, 40.805, 0.5848 ) }
    apic_11 { pt3dadd( 305.618, 457.73, 40.88, 0.5592 ) }
    apic_11 { pt3dadd( 305.256, 458.801, 40.88, 0.5338 ) }
    apic_11 { pt3dadd( 304.644, 459.761, 40.88, 0.5848 ) }
    apic_11 { pt3dadd( 303.897, 460.627, 40.88, 0.5848 ) }
    apic_11 { pt3dadd( 303.35, 461.617, 40.88, 0.5848 ) }
    apic_11 { pt3dadd( 303.001, 462.702, 40.88, 0.5338 ) }
    apic_11 { pt3dadd( 302.801, 463.826, 40.88, 0.5848 ) }
    apic_11 { pt3dadd( 302.498, 464.923, 40.88, 0.6356 ) }
    apic_11 { pt3dadd( 302.474, 466.066, 40.88, 0.7372 ) }
    apic_11 { pt3dadd( 302.326, 466.947, 40.878, 0.788 ) }
    apic_11 { pt3dadd( 301.758, 467.919, 40.8702, 0.8644 ) }
    apic_11 { pt3dadd( 300.987, 468.765, 40.8388, 0.8136 ) }
    apic_11 { pt3dadd( 300.329, 469.686, 40.6904, 0.7626 ) }
    apic_11 { pt3dadd( 300.16, 470.764, 39.9742, 0.6356 ) }
    apic_11 { pt3dadd( 300.016, 471.887, 39.9288, 0.6102 ) }
    apic_11 { pt3dadd( 299.648, 472.924, 40.6137, 0.5848 ) }
    apic_11 { pt3dadd( 299.222, 473.972, 40.8806, 0.6356 ) }
    apic_11 { pt3dadd( 298.729, 475.0, 40.8828, 0.661 ) }
    apic_11 { pt3dadd( 298.28, 476.046, 40.8982, 0.7118 ) }
    apic_11 { pt3dadd( 297.779, 477.066, 40.9836, 0.7372 ) }
    apic_11 { pt3dadd( 297.382, 478.095, 41.5036, 0.788 ) }
    apic_11 { pt3dadd( 297.028, 479.144, 42.0, 0.8136 ) }
    apic_11 { pt3dadd( 296.418, 480.106, 42.0, 0.839 ) }
    apic_11 { pt3dadd( 295.663, 480.965, 42.0, 0.788 ) }
    apic_11 { pt3dadd( 295.048, 481.92, 42.0, 0.7118 ) }
    apic_11 { pt3dadd( 294.66, 482.988, 42.0, 0.661 ) }
    apic_11 { pt3dadd( 294.316, 484.066, 42.0, 0.7118 ) }
    apic_11 { pt3dadd( 293.764, 485.064, 42.0, 0.8136 ) }
    apic_11 { pt3dadd( 293.401, 486.145, 42.0, 0.8644 ) }
    apic_11 { pt3dadd( 293.044, 487.228, 42.0, 0.839 ) }
    apic_11 { pt3dadd( 292.68, 488.311, 42.0, 0.7626 ) }
    apic_11 { pt3dadd( 292.136, 489.315, 42.0, 0.7118 ) }
    apic_11 { pt3dadd( 291.396, 490.186, 42.0, 0.661 ) }
    apic_11 { pt3dadd( 290.589, 490.996, 42.0, 0.6356 ) }
    apic_11 { pt3dadd( 289.787, 491.811, 42.0006, 0.6102 ) }
    apic_11 { pt3dadd( 289.004, 492.645, 42.0022, 0.661 ) }
    apic_11 { pt3dadd( 288.346, 493.572, 42.0104, 0.7372 ) }
    apic_11 { pt3dadd( 287.937, 494.635, 42.0588, 0.8136 ) }
    apic_11 { pt3dadd( 287.437, 495.649, 42.3377, 0.839 ) }
    apic_11 { pt3dadd( 286.951, 496.636, 43.0338, 0.8136 ) }
    apic_11 { pt3dadd( 286.45, 497.658, 43.12, 0.8136 ) }
    apic_11 { pt3dadd( 285.948, 498.682, 43.12, 0.788 ) }
    apic_11 { pt3dadd( 285.442, 499.705, 43.12, 0.7372 ) }
    apic_11 { pt3dadd( 284.903, 500.711, 43.1197, 0.5848 ) }
    apic_11 { pt3dadd( 284.302, 501.681, 43.118, 0.483 ) }
    apic_11 { pt3dadd( 283.999, 502.781, 43.1066, 0.4576 ) }
    apic_11 { pt3dadd( 283.397, 503.741, 43.0494, 0.5338 ) }
    apic_11 { pt3dadd( 282.774, 504.674, 42.7132, 0.5592 ) }
    apic_11 { pt3dadd( 282.273, 505.681, 43.0128, 0.6102 ) }
    apic_11 { pt3dadd( 281.512, 506.532, 43.1511, 0.6356 ) }
    apic_11 { pt3dadd( 280.846, 507.453, 43.2841, 0.6864 ) }
    apic_11 { pt3dadd( 280.204, 508.314, 44.1171, 0.661 ) }
    apic_11 { pt3dadd( 279.622, 509.236, 44.8683, 0.661 ) }
    apic_11 { pt3dadd( 279.318, 510.317, 45.1542, 0.661 ) }
    apic_11 { pt3dadd( 279.384, 511.332, 44.1538, 0.6356 ) }
    apic_11 { pt3dadd( 279.139, 512.404, 43.4316, 0.5592 ) }
    apic_11 { pt3dadd( 279.082, 513.506, 43.8911, 0.483 ) }
    apic_11 { pt3dadd( 278.878, 514.603, 44.2627, 0.5338 ) }
    apic_11 { pt3dadd( 278.551, 515.687, 44.3892, 0.6356 ) }
    apic_11 { pt3dadd( 277.865, 516.53, 45.1139, 0.7372 ) }
    apic_11 { pt3dadd( 277.062, 517.334, 45.36, 0.7626 ) }
    apic_11 { pt3dadd( 276.255, 518.145, 45.36, 0.788 ) }
    apic_11 { pt3dadd( 275.458, 518.964, 45.36, 0.8136 ) }
    apic_11 { pt3dadd( 274.69, 519.813, 45.36, 0.8136 ) }
    apic_11 { pt3dadd( 274.05, 520.759, 45.3603, 0.788 ) }
    apic_11 { pt3dadd( 273.279, 521.603, 45.3617, 0.7626 ) }
    apic_11 { pt3dadd( 272.521, 522.46, 45.3678, 0.788 ) }
    apic_11 { pt3dadd( 271.967, 523.458, 45.4009, 0.788 ) }
    apic_11 { pt3dadd( 271.62, 524.538, 45.6565, 0.8136 ) }
    apic_11 { pt3dadd( 271.353, 525.433, 47.1282, 0.8136 ) }
    apic_11 { pt3dadd( 271.328, 526.548, 47.5773, 0.839 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    apic_11 { pt3dadd( 271.17, 527.673, 47.4499, 0.839 ) }
    apic_11 { pt3dadd( 270.658, 528.655, 46.8426, 0.8136 ) }
    apic_11 { pt3dadd( 269.957, 529.55, 46.6511, 0.8136 ) }
    apic_11 { pt3dadd( 269.332, 530.459, 47.2632, 0.8136 ) }
    apic_11 { pt3dadd( 268.707, 531.401, 47.6176, 0.8644 ) }
    apic_11 { pt3dadd( 268.247, 532.443, 47.7047, 0.839 ) }
    apic_11 { pt3dadd( 268.111, 533.539, 48.2961, 0.8136 ) }
    apic_11 { pt3dadd( 267.869, 534.625, 48.7208, 0.7626 ) }
    apic_11 { pt3dadd( 267.201, 535.551, 48.7239, 0.839 ) }
    apic_11 { pt3dadd( 266.692, 536.56, 48.7418, 0.9152 ) }
    apic_11 { pt3dadd( 266.253, 537.612, 48.8482, 1.0168 ) }
    apic_11 { pt3dadd( 265.743, 538.594, 49.4379, 1.0168 ) }
    apic_11 { pt3dadd( 265.127, 539.54, 49.84, 0.9406 ) }
    apic_11 { pt3dadd( 264.754, 540.617, 49.84, 0.8136 ) }
    apic_11 { pt3dadd( 264.444, 541.715, 49.84, 0.7372 ) }
    apic_11 { pt3dadd( 264.127, 542.803, 49.84, 0.8136 ) }
    apic_11 { pt3dadd( 263.716, 543.867, 49.84, 0.8898 ) }
    apic_11 { pt3dadd( 263.097, 544.827, 49.8406, 0.9152 ) }
    apic_11 { pt3dadd( 262.491, 545.795, 49.8425, 0.839 ) }
    apic_11 { pt3dadd( 262.16, 546.878, 49.8548, 0.788 ) }
    apic_11 { pt3dadd( 261.899, 547.977, 49.9408, 0.7372 ) }
    apic_11 { pt3dadd( 261.316, 548.932, 50.3742, 0.7626 ) }
    apic_11 { pt3dadd( 260.884, 549.955, 50.9362, 0.7626 ) }
    apic_11 { pt3dadd( 260.705, 551.084, 50.946, 0.7626 ) }
    apic_11 { pt3dadd( 260.185, 552.082, 50.8822, 0.661 ) }
    apic_11 { pt3dadd( 259.508, 552.986, 50.5854, 0.6356 ) }
    apic_11 { pt3dadd( 259.034, 553.992, 50.4445, 0.661 ) }
    apic_11 { pt3dadd( 258.647, 555.041, 50.9496, 0.788 ) }
    apic_11 { pt3dadd( 258.133, 556.058, 50.9443, 0.8898 ) }
    apic_11 { pt3dadd( 257.572, 557.05, 50.8729, 0.966 ) }
    apic_11 { pt3dadd( 257.122, 558.067, 50.442, 0.9914 ) }
    apic_11 { pt3dadd( 256.754, 559.102, 49.863, 0.966 ) }
    apic_11 { pt3dadd( 256.058, 560.01, 49.84, 0.966 ) }
    apic_11 { pt3dadd( 255.652, 561.069, 49.84, 0.9406 ) }
    apic_11 { pt3dadd( 255.277, 562.147, 49.84, 0.9152 ) }
    apic_11 { pt3dadd( 254.899, 563.224, 49.84, 0.8644 ) }
    apic_11 { pt3dadd( 254.549, 564.31, 49.84, 0.8644 ) }
    apic_11 { pt3dadd( 254.311, 565.428, 49.84, 0.9152 ) }
    apic_11 { pt3dadd( 253.898, 566.488, 49.8403, 0.9406 ) }
    apic_11 { pt3dadd( 253.443, 567.533, 49.8411, 0.8644 ) }
    apic_11 { pt3dadd( 252.946, 568.555, 49.8462, 0.7626 ) }
    apic_11 { pt3dadd( 252.503, 569.598, 49.8744, 0.6864 ) }
    apic_11 { pt3dadd( 252.135, 570.675, 50.0604, 0.6864 ) }
    apic_11 { pt3dadd( 251.817, 571.652, 51.1266, 0.661 ) }
    apic_11 { pt3dadd( 251.19, 572.804, 52.7066, 0.6864 ) }
    apic_11 { pt3dadd( 250.809, 573.856, 52.9875, 0.7372 ) }
    apic_11 { pt3dadd( 250.431, 574.883, 52.26, 0.8644 ) }
    apic_11 { pt3dadd( 249.889, 575.88, 52.08, 0.9406 ) }
    apic_11 { pt3dadd( 249.321, 576.868, 52.08, 1.0424 ) }
    apic_11 { pt3dadd( 248.782, 577.865, 52.08, 1.0932 ) }
    apic_11 { pt3dadd( 248.038, 578.734, 52.08, 1.1186 ) }
    apic_11 { pt3dadd( 247.527, 579.739, 52.0803, 1.0424 ) }
    apic_11 { pt3dadd( 247.162, 580.81, 52.0825, 0.9152 ) }
    apic_11 { pt3dadd( 246.471, 581.719, 52.0915, 0.8136 ) }
    apic_11 { pt3dadd( 246.063, 582.776, 52.145, 0.8136 ) }
    apic_11 { pt3dadd( 245.724, 583.846, 52.5246, 0.9152 ) }
    apic_11 { pt3dadd( 245.481, 584.919, 53.1667, 0.966 ) }
    apic_11 { pt3dadd( 245.238, 586.031, 53.2, 0.9406 ) }
    apic_11 { pt3dadd( 245.02, 587.143, 53.2003, 0.8136 ) }
    apic_11 { pt3dadd( 244.62, 588.215, 53.2014, 0.7118 ) }
    apic_11 { pt3dadd( 243.958, 589.142, 53.2064, 0.661 ) }
    apic_11 { pt3dadd( 243.221, 590.017, 53.2297, 0.6864 ) }
    apic_11 { pt3dadd( 242.838, 591.083, 53.3828, 0.788 ) }
    apic_11 { pt3dadd( 242.552, 592.131, 54.1548, 0.839 ) }
    apic_11 { pt3dadd( 242.519, 593.219, 54.9811, 0.839 ) }
    apic_11 { pt3dadd( 242.463, 594.34, 55.44, 0.788 ) }
    apic_11 { pt3dadd( 242.122, 595.413, 55.44, 0.7626 ) }
    apic_11 { pt3dadd( 241.376, 596.277, 55.44, 0.8136 ) }
    apic_11 { pt3dadd( 240.594, 597.111, 55.44, 0.8898 ) }
    apic_11 { pt3dadd( 239.93, 598.032, 55.4392, 0.9914 ) }
    apic_11 { pt3dadd( 239.76, 599.154, 55.4347, 1.0424 ) }
    apic_11 { pt3dadd( 239.612, 600.282, 55.4022, 1.0424 ) }
    apic_11 { pt3dadd( 239.319, 601.379, 55.2157, 0.9914 ) }
    apic_11 { pt3dadd( 239.197, 602.468, 54.4802, 0.9152 ) }
    apic_11 { pt3dadd( 238.88, 603.555, 54.6179, 0.839 ) }
    apic_11 { pt3dadd( 238.783, 604.568, 55.8253, 0.7626 ) }
    apic_11 { pt3dadd( 238.354, 605.541, 56.5281, 0.7372 ) }
    apic_11 { pt3dadd( 237.478, 606.27, 56.376, 0.7626 ) }
    apic_11 { pt3dadd( 237.003, 607.237, 55.6847, 0.8644 ) }
    apic_11 { pt3dadd( 236.667, 608.308, 55.3406, 0.9406 ) }
    apic_11 { pt3dadd( 236.165, 609.301, 54.8671, 0.9914 ) }
    apic_11 { pt3dadd( 236.076, 610.406, 55.2339, 0.9406 ) }
    apic_11 { pt3dadd( 235.794, 611.469, 55.8488, 0.839 ) }
    apic_11 { pt3dadd( 235.378, 612.315, 57.3745, 0.7118 ) }
    apic_11 { pt3dadd( 234.811, 613.287, 57.6775, 0.6102 ) }
    apic_11 { pt3dadd( 234.078, 614.164, 57.6694, 0.5592 ) }
    apic_11 { pt3dadd( 233.46, 615.112, 57.6282, 0.5848 ) }
    apic_11 { pt3dadd( 233.28, 616.228, 57.3423, 0.6864 ) }
    apic_11 { pt3dadd( 232.865, 617.235, 56.6493, 0.8644 ) }
    apic_11 { pt3dadd( 232.464, 618.287, 56.6101, 1.0424 ) }
    apic_11 { pt3dadd( 232.367, 619.418, 56.8859, 1.1948 ) }
    apic_11 { pt3dadd( 231.954, 620.422, 57.5988, 1.2456 ) }
    apic_11 { pt3dadd( 231.248, 622.566, 57.8071, 1.1948 ) }
    apic_11 { pt3dadd( 230.955, 624.761, 58.1714, 1.144 ) }
    apic_11 { pt3dadd( 230.502, 625.784, 57.6808, 1.0424 ) }
    apic_11 { pt3dadd( 229.896, 626.752, 57.6839, 0.9914 ) }
    apic_11 { pt3dadd( 229.651, 627.862, 57.7072, 0.966 ) }
    apic_11 { pt3dadd( 229.32, 628.94, 57.8421, 0.966 ) }
    apic_11 { pt3dadd( 228.817, 629.904, 58.5514, 0.9152 ) }
    apic_11 { pt3dadd( 228.6, 630.934, 59.5818, 0.839 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    apic_11 { pt3dadd( 228.141, 631.971, 59.8153, 0.788 ) }
    apic_11 { pt3dadd( 227.822, 633.028, 59.2631, 0.7372 ) }
    apic_11 { pt3dadd( 227.468, 634.081, 58.8073, 0.6864 ) }
    apic_11 { pt3dadd( 226.889, 635.063, 58.8392, 0.6356 ) }
    apic_11 { pt3dadd( 226.313, 636.045, 58.9996, 0.6356 ) }
    apic_11 { pt3dadd( 225.899, 637.06, 59.7066, 0.7118 ) }
    apic_11 { pt3dadd( 225.278, 638.004, 59.92, 0.839 ) }
    apic_11 { pt3dadd( 224.533, 638.871, 59.92, 0.8898 ) }
    apic_11 { pt3dadd( 224.057, 639.901, 59.9206, 0.8644 ) }
    apic_11 { pt3dadd( 223.451, 640.867, 59.9228, 0.788 ) }
    apic_11 { pt3dadd( 222.892, 641.864, 59.936, 0.788 ) }
    apic_11 { pt3dadd( 222.32, 642.849, 60.0068, 0.788 ) }
    apic_11 { pt3dadd( 221.807, 643.842, 60.4134, 0.7118 ) }
    apic_11 { pt3dadd( 221.227, 644.782, 60.9801, 0.6102 ) }
    apic_11 { pt3dadd( 220.467, 645.637, 61.0201, 0.5592 ) }
    apic_11 { pt3dadd( 219.852, 646.593, 60.9319, 0.6102 ) }
    apic_11 { pt3dadd( 219.276, 647.511, 60.2706, 0.661 ) }
    apic_11 { pt3dadd( 218.791, 648.527, 59.9726, 0.6864 ) }
    apic_11 { pt3dadd( 218.092, 649.428, 60.1535, 0.7118 ) }
    apic_11 { pt3dadd( 217.625, 650.416, 60.8919, 0.7626 ) }
    apic_11 { pt3dadd( 216.917, 651.3, 61.04, 0.8644 ) }
    apic_11 { pt3dadd( 216.089, 652.064, 61.04, 0.9406 ) }
    apic_11 { pt3dadd( 215.673, 653.123, 61.04, 1.0424 ) }
    apic_11 { pt3dadd( 215.173, 654.148, 61.0403, 1.0424 ) }
    apic_11 { pt3dadd( 214.729, 655.198, 61.042, 1.0678 ) }
    apic_11 { pt3dadd( 214.53, 656.323, 61.052, 1.0424 ) }
    apic_11 { pt3dadd( 214.04, 657.318, 61.126, 1.0932 ) }
    apic_11 { pt3dadd( 213.325, 658.143, 61.6325, 1.0932 ) }
    apic_11 { pt3dadd( 213.157, 659.244, 62.1527, 1.0168 ) }
    apic_11 { pt3dadd( 212.771, 660.309, 62.1141, 0.9152 ) }
    apic_11 { pt3dadd( 212.21, 661.297, 61.9072, 0.8644 ) }
    apic_11 { pt3dadd( 211.427, 662.055, 61.1419, 0.9152 ) }
    apic_11 { pt3dadd( 210.9, 663.043, 61.0604, 0.9914 ) }
    apic_11 { pt3dadd( 210.564, 664.133, 61.1674, 0.9914 ) }
    apic_11 { pt3dadd( 210.487, 665.229, 61.8248, 0.9406 ) }
    apic_11 { pt3dadd( 210.433, 666.358, 62.1639, 0.8898 ) }
    apic_11 { pt3dadd( 210.102, 667.438, 62.1841, 0.839 ) }
    apic_11 { pt3dadd( 209.534, 668.424, 62.2924, 0.8136 ) }
    apic_11 { pt3dadd( 208.999, 669.4, 62.7981, 0.6864 ) }
    apic_11 { pt3dadd( 208.29, 670.217, 62.148, 0.6864 ) }
    apic_11 { pt3dadd( 207.747, 671.155, 61.4516, 0.7118 ) }
    apic_11 { pt3dadd( 207.391, 672.158, 61.7663, 0.8898 ) }
    apic_11 { pt3dadd( 206.903, 673.166, 62.1617, 1.0168 ) }
    apic_11 { pt3dadd( 206.651, 674.281, 62.1709, 1.144 ) }
    apic_11 { pt3dadd( 206.045, 675.247, 62.2188, 1.0678 ) }
    apic_11 { pt3dadd( 205.568, 676.272, 62.5321, 0.8898 ) }
    apic_11 { pt3dadd( 205.462, 677.019, 64.4, 0.6356 ) }
    apic_11 { pt3dadd( 205.234, 677.248, 62.72, 0.5592 ) }
    apic_11 { pt3dadd( 204.853, 677.706, 62.5332, 0.7626 ) }
    apic_11 { pt3dadd( 204.509, 678.735, 63.0932, 0.6864 ) }
    apic_11 { pt3dadd( 203.759, 679.422, 62.4089, 0.8898 ) }
    apic_11 { pt3dadd( 203.555, 680.375, 61.6, 0.839 ) }
    apic_11 { pt3dadd( 202.755, 680.947, 62.16, 0.8136 ) }
    apic_11 { pt3dadd( 202.374, 681.786, 63.1868, 0.6102 ) }
    apic_11 { pt3dadd( 201.903, 682.612, 63.0, 0.6864 ) }
    apic_11 { pt3dadd( 201.687, 683.235, 63.4668, 0.6864 ) }
    apic_11 { pt3dadd( 201.764, 684.189, 63.0, 0.7372 ) }
    apic_11 { pt3dadd( 201.675, 684.977, 62.8132, 0.788 ) }
    apic_11 { pt3dadd( 201.585, 685.815, 63.84, 0.5084 ) }
    apic_11 { pt3dadd( 201.675, 686.311, 64.0268, 0.305 ) }
    apic_11 { pt3dadd( 201.458, 686.731, 64.0889, 0.305 ) }
    apic_11 { pt3dadd( 201.242, 686.82, 63.9643, 0.2542 ) }
    apic_11 { pt3dadd( 201.23, 686.858, 64.4, 0.2288 ) }
    apic_11 { pt3dadd( 201.23, 687.201, 64.96, 0.4576 ) }
    apic_11 { pt3dadd( 201.23, 687.696, 64.7732, 0.4322 ) }
    apic_11 { pt3dadd( 201.115, 688.23, 64.68, 0.305 ) }
    apic_11 { pt3dadd( 200.899, 688.586, 64.96, 0.4068 ) }
    apic_11 { pt3dadd( 200.886, 689.158, 65.7689, 0.6356 ) }
    apic_11 { pt3dadd( 200.62, 689.794, 65.8, 0.6356 ) }
    apic_11 { pt3dadd( 200.543, 690.442, 65.6132, 0.788 ) }
    apic_11 { pt3dadd( 200.2, 691.103, 65.2711, 0.788 ) }
    apic_11 { pt3dadd( 199.971, 691.523, 66.4222, 0.6102 ) }
    apic_11 { pt3dadd( 199.971, 692.234, 66.64, 0.3304 ) }
    apic_11 { pt3dadd( 199.971, 692.578, 66.64, 0.2542 ) }
    apic_11 { pt3dadd( 199.971, 693.035, 66.64, 0.2288 ) }
    apic_11 { pt3dadd( 199.971, 693.378, 66.64, 0.2288 ) }
    apic_11 { pt3dadd( 199.921, 693.671, 66.64, 0.2288 ) }
    apic_11 { pt3dadd( 199.666, 693.759, 66.64, 0.2288 ) }
    apic_11 { pt3dadd( 199.234, 694.358, 66.64, 0.2288 ) }
    apic_11 { pt3dadd( 199.018, 694.485, 66.64, 0.2288 ) }
    apic_11 { pt3dadd( 198.84, 694.649, 66.64, 0.2288 ) }
    apic_11 { pt3dadd( 198.827, 694.98, 66.64, 0.2542 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 82/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 360.791, 326.725, 22.7746, 0.966 ) }
    apic_10 { pt3dadd( 360.217, 327.408, 22.7559, 0.4576 ) }
    apic_10 { pt3dadd( 359.575, 328.306, 22.1122, 0.6102 ) }
    apic_10 { pt3dadd( 358.811, 329.145, 21.8518, 0.7118 ) }
    apic_10 { pt3dadd( 357.93, 329.868, 21.8921, 0.7626 ) }
    apic_10 { pt3dadd( 356.943, 330.435, 22.1189, 0.7118 ) }
    apic_10 { pt3dadd( 355.99, 330.459, 23.2324, 0.661 ) }
    apic_10 { pt3dadd( 355.62, 329.673, 24.9491, 0.5848 ) }
    apic_10 { pt3dadd( 354.892, 328.857, 25.3411, 0.5338 ) }
    apic_10 { pt3dadd( 354.077, 328.125, 25.9888, 0.483 ) }
    apic_10 { pt3dadd( 353.106, 327.579, 25.8353, 0.483 ) }
    apic_10 { pt3dadd( 352.156, 327.092, 26.3987, 0.5592 ) }
    apic_10 { pt3dadd( 351.354, 326.458, 27.4246, 0.6356 ) }
    apic_10 { pt3dadd( 350.477, 325.729, 27.5649, 0.6864 ) }
    apic_10 { pt3dadd( 349.418, 325.468, 27.8177, 0.6864 ) }
    apic_10 { pt3dadd( 348.346, 325.802, 27.998, 0.6864 ) }
    apic_10 { pt3dadd( 347.356, 325.961, 29.3222, 0.6864 ) }
    apic_10 { pt3dadd( 346.401, 326.522, 29.6803, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    apic_10 { pt3dadd( 345.574, 327.311, 29.6806, 0.5848 ) }
    apic_10 { pt3dadd( 344.743, 328.097, 29.682, 0.4576 ) }
    apic_10 { pt3dadd( 343.833, 328.78, 29.6898, 0.356 ) }
    apic_10 { pt3dadd( 342.749, 328.679, 29.7556, 0.305 ) }
    apic_10 { pt3dadd( 341.833, 328.095, 30.1493, 0.356 ) }
    apic_10 { pt3dadd( 340.732, 327.882, 30.4108, 0.4068 ) }
    apic_10 { pt3dadd( 339.968, 327.073, 30.8384, 0.483 ) }
    apic_10 { pt3dadd( 339.205, 326.227, 30.9739, 0.5084 ) }
    apic_10 { pt3dadd( 338.323, 325.564, 31.5935, 0.5592 ) }
    apic_10 { pt3dadd( 337.535, 324.763, 31.9586, 0.5848 ) }
    apic_10 { pt3dadd( 336.93, 323.796, 32.1146, 0.5848 ) }
    apic_10 { pt3dadd( 336.455, 322.809, 32.8031, 0.5592 ) }
    apic_10 { pt3dadd( 335.925, 321.813, 33.0826, 0.5338 ) }
    apic_10 { pt3dadd( 335.584, 320.739, 33.3298, 0.5848 ) }
    apic_10 { pt3dadd( 335.296, 319.89, 34.8922, 0.6356 ) }
    apic_10 { pt3dadd( 335.44, 318.982, 36.3331, 0.6864 ) }
    apic_10 { pt3dadd( 336.125, 318.083, 36.5543, 0.6356 ) }
    apic_10 { pt3dadd( 336.584, 317.136, 37.4674, 0.5338 ) }
    apic_10 { pt3dadd( 336.787, 316.194, 38.5031, 0.4322 ) }
    apic_10 { pt3dadd( 336.704, 315.668, 40.9158, 0.4068 ) }
    apic_10 { pt3dadd( 337.438, 315.07, 42.1196, 0.4322 ) }
    apic_10 { pt3dadd( 338.496, 314.809, 42.7843, 0.5084 ) }
    apic_10 { pt3dadd( 339.619, 314.698, 43.1323, 0.6102 ) }
    apic_10 { pt3dadd( 340.609, 314.158, 43.2104, 0.8136 ) }
    apic_10 { pt3dadd( 341.317, 313.362, 43.9855, 0.8898 ) }
    apic_10 { pt3dadd( 342.009, 312.545, 44.7938, 0.839 ) }
    apic_10 { pt3dadd( 342.595, 311.845, 46.4086, 0.6356 ) }
    apic_10 { pt3dadd( 343.121, 311.162, 48.1874, 0.5592 ) }
    apic_10 { pt3dadd( 343.82, 310.688, 50.01, 0.5592 ) }
    apic_10 { pt3dadd( 344.382, 310.339, 52.2312, 0.5592 ) }
    apic_10 { pt3dadd( 344.802, 309.795, 54.32, 0.4576 ) }
    apic_10 { pt3dadd( 345.195, 309.502, 53.48, 0.2542 ) }
    apic_10 { pt3dadd( 345.475, 309.439, 53.48, 0.2288 ) }
    apic_10 { pt3dadd( 345.64, 309.261, 53.48, 0.2288 ) }
    apic_10 { pt3dadd( 345.819, 308.88, 53.5111, 0.2542 ) }
    apic_10 { pt3dadd( 345.844, 308.321, 54.04, 0.305 ) }
    apic_10 { pt3dadd( 346.251, 308.181, 53.4178, 0.356 ) }
    apic_10 { pt3dadd( 346.594, 307.965, 53.5732, 0.6356 ) }
    apic_10 { pt3dadd( 346.823, 307.85, 54.6932, 0.5084 ) }
    apic_10 { pt3dadd( 347.052, 307.418, 55.4089, 0.661 ) }
    apic_10 { pt3dadd( 347.052, 306.567, 54.5689, 0.6102 ) }
    apic_10 { pt3dadd( 347.395, 306.211, 55.16, 0.5084 ) }
    apic_10 { pt3dadd( 347.712, 305.943, 55.4711, 0.2796 ) }
    apic_10 { pt3dadd( 348.119, 305.766, 55.6578, 0.3814 ) }
    apic_10 { pt3dadd( 348.246, 305.461, 56.28, 0.3814 ) }
    apic_10 { pt3dadd( 348.475, 305.346, 56.56, 0.2542 ) }
    apic_10 { pt3dadd( 348.691, 305.257, 56.4668, 0.2288 ) }
    apic_10 { pt3dadd( 348.843, 305.13, 55.8132, 0.2542 ) }
    apic_10 { pt3dadd( 349.263, 305.232, 55.9689, 0.3814 ) }
    apic_10 { pt3dadd( 349.606, 305.334, 57.12, 0.4322 ) }
    apic_10 { pt3dadd( 349.81, 305.448, 58.3022, 0.305 ) }
    apic_10 { pt3dadd( 350.064, 305.448, 58.52, 0.2542 ) }
    apic_10 { pt3dadd( 350.522, 305.448, 58.52, 0.2542 ) }
    apic_10 { pt3dadd( 350.979, 305.448, 59.08, 0.3814 ) }
    apic_10 { pt3dadd( 351.208, 305.371, 59.8268, 0.483 ) }
    apic_10 { pt3dadd( 351.437, 304.647, 59.64, 0.2542 ) }
    apic_10 { pt3dadd( 351.437, 304.381, 59.8268, 0.2288 ) }
    apic_10 { pt3dadd( 351.335, 304.063, 59.92, 0.2542 ) }
    apic_10 { pt3dadd( 350.865, 303.732, 59.92, 0.305 ) }
    apic_10 { pt3dadd( 350.382, 303.732, 60.1378, 0.305 ) }
    apic_10 { pt3dadd( 350.293, 303.655, 60.8532, 0.2796 ) }
    apic_10 { pt3dadd( 350.242, 303.427, 61.5689, 0.2542 ) }
    apic_10 { pt3dadd( 349.606, 303.274, 61.6, 0.3304 ) }
    // Section: apic_6, id: apic_6, parent: apic_2 (entry count 63/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 391.929, 327.857, 21.8386, 0.788 ) }
    apic_6 { pt3dadd( 392.506, 328.625, 21.8708, 0.5848 ) }
    apic_6 { pt3dadd( 393.541, 329.021, 22.3328, 0.6356 ) }
    apic_6 { pt3dadd( 394.639, 329.202, 22.8841, 0.661 ) }
    apic_6 { pt3dadd( 395.512, 329.896, 22.4804, 0.7118 ) }
    apic_6 { pt3dadd( 396.062, 330.75, 21.2537, 0.7118 ) }
    apic_6 { pt3dadd( 396.533, 331.753, 20.7214, 0.7372 ) }
    apic_6 { pt3dadd( 397.277, 332.623, 20.7208, 0.7372 ) }
    apic_6 { pt3dadd( 397.94, 333.552, 20.7234, 0.7626 ) }
    apic_6 { pt3dadd( 398.799, 334.303, 20.736, 0.7372 ) }
    apic_6 { pt3dadd( 399.902, 334.581, 20.8326, 0.7118 ) }
    apic_6 { pt3dadd( 400.964, 334.861, 21.4323, 0.661 ) }
    apic_6 { pt3dadd( 402.007, 334.857, 22.5324, 0.6356 ) }
    apic_6 { pt3dadd( 403.096, 334.578, 22.7646, 0.6102 ) }
    apic_6 { pt3dadd( 404.159, 334.769, 22.0184, 0.6356 ) }
    apic_6 { pt3dadd( 405.246, 335.089, 21.6891, 0.661 ) }
    apic_6 { pt3dadd( 406.301, 335.385, 21.0146, 0.6864 ) }
    apic_6 { pt3dadd( 407.432, 335.392, 20.7463, 0.661 ) }
    apic_6 { pt3dadd( 408.543, 335.186, 20.9124, 0.6356 ) }
    apic_6 { pt3dadd( 409.487, 334.667, 21.6675, 0.5848 ) }
    apic_6 { pt3dadd( 410.585, 334.694, 21.2268, 0.5592 ) }
    apic_6 { pt3dadd( 411.493, 335.334, 20.7516, 0.5848 ) }
    apic_6 { pt3dadd( 412.275, 336.167, 20.7435, 0.661 ) }
    apic_6 { pt3dadd( 412.948, 337.086, 20.8404, 0.7118 ) }
    apic_6 { pt3dadd( 413.794, 337.804, 21.3354, 0.661 ) }
    apic_6 { pt3dadd( 414.686, 338.484, 21.8047, 0.6102 ) }
    apic_6 { pt3dadd( 415.541, 339.243, 21.8378, 0.6356 ) }
    apic_6 { pt3dadd( 416.506, 339.85, 21.8288, 0.7372 ) }
    apic_6 { pt3dadd( 417.475, 340.449, 21.7829, 0.788 ) }
    apic_6 { pt3dadd( 418.291, 341.245, 21.59, 0.788 ) }
    apic_6 { pt3dadd( 419.008, 342.058, 20.8163, 0.8136 ) }
    apic_6 { pt3dadd( 419.75, 342.922, 20.7248, 0.839 ) }
    apic_6 { pt3dadd( 420.667, 343.564, 20.7463, 0.8644 ) }
    apic_6 { pt3dadd( 421.792, 343.533, 20.9222, 0.7372 ) }
    apic_6 { pt3dadd( 422.613, 343.924, 21.7837, 0.661 ) }
    apic_6 { pt3dadd( 423.175, 344.917, 21.8425, 0.5592 ) }
    apic_6 { pt3dadd( 423.937, 345.764, 21.8523, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    apic_6 { pt3dadd( 424.955, 346.276, 21.9108, 0.5338 ) }
    apic_6 { pt3dadd( 425.536, 346.353, 21.8392, 0.5084 ) }
    apic_6 { pt3dadd( 426.608, 346.704, 21.84, 0.4576 ) }
    apic_6 { pt3dadd( 427.518, 347.396, 21.84, 0.483 ) }
    apic_6 { pt3dadd( 428.515, 347.949, 21.8946, 0.483 ) }
    apic_6 { pt3dadd( 429.553, 348.318, 22.5585, 0.483 ) }
    apic_6 { pt3dadd( 430.563, 348.822, 22.892, 0.483 ) }
    apic_6 { pt3dadd( 431.353, 349.642, 22.9468, 0.5592 ) }
    apic_6 { pt3dadd( 431.857, 350.666, 22.9575, 0.6102 ) }
    apic_6 { pt3dadd( 432.208, 351.755, 22.9597, 0.6102 ) }
    apic_6 { pt3dadd( 432.244, 352.885, 22.9393, 0.5592 ) }
    apic_6 { pt3dadd( 432.546, 353.947, 22.3143, 0.5338 ) }
    apic_6 { pt3dadd( 433.338, 354.714, 21.9114, 0.5338 ) }
    apic_6 { pt3dadd( 434.157, 355.511, 21.8557, 0.483 ) }
    apic_6 { pt3dadd( 434.687, 356.513, 21.8428, 0.4322 ) }
    apic_6 { pt3dadd( 435.273, 357.491, 21.8086, 0.3814 ) }
    apic_6 { pt3dadd( 435.063, 357.475, 22.4622, 0.4576 ) }
    apic_6 { pt3dadd( 435.317, 357.741, 22.8668, 0.4576 ) }
    apic_6 { pt3dadd( 435.775, 358.263, 22.4311, 0.3814 ) }
    apic_6 { pt3dadd( 435.991, 358.631, 22.4, 0.4322 ) }
    apic_6 { pt3dadd( 436.322, 358.987, 22.12, 0.4576 ) }
    apic_6 { pt3dadd( 436.513, 359.559, 22.2132, 0.483 ) }
    apic_6 { pt3dadd( 436.894, 360.004, 22.7111, 0.6356 ) }
    apic_6 { pt3dadd( 437.58, 360.474, 23.24, 0.6356 ) }
    apic_6 { pt3dadd( 438.279, 361.161, 23.2711, 0.6102 ) }
    apic_6 { pt3dadd( 438.737, 361.173, 22.12, 0.5848 ) }
    apic_6 { pt3dadd( 438.965, 361.491, 21.56, 0.3814 ) }
    apic_6 { pt3dadd( 439.194, 361.835, 21.56, 0.483 ) }
    apic_6 { pt3dadd( 439.512, 362.33, 21.4668, 0.6356 ) }
    apic_6 { pt3dadd( 439.525, 362.864, 21.8711, 0.6864 ) }
    apic_6 { pt3dadd( 439.716, 363.245, 22.6489, 0.4322 ) }
    apic_6 { pt3dadd( 440.02, 363.449, 22.5868, 0.4068 ) }
    apic_6 { pt3dadd( 440.847, 363.665, 22.3068, 0.356 ) }
    apic_6 { pt3dadd( 441.228, 363.728, 21.9332, 0.4068 ) }
    apic_6 { pt3dadd( 441.571, 363.919, 21.56, 0.4576 ) }
    apic_6 { pt3dadd( 441.698, 364.25, 21.0, 0.483 ) }
    apic_6 { pt3dadd( 441.825, 364.593, 21.2489, 0.2542 ) }
    apic_6 { pt3dadd( 442.092, 364.822, 20.8443, 0.305 ) }
    apic_6 { pt3dadd( 442.614, 365.152, 20.7511, 0.5084 ) }
    apic_6 { pt3dadd( 442.741, 365.508, 21.5289, 0.4576 ) }
    apic_6 { pt3dadd( 442.537, 365.953, 21.4043, 0.3304 ) }
    apic_6 { pt3dadd( 442.614, 366.194, 22.12, 0.5848 ) }
    apic_6 { pt3dadd( 442.728, 366.754, 21.8089, 0.6864 ) }
    apic_6 { pt3dadd( 443.287, 367.16, 20.9068, 0.5338 ) }
    apic_6 { pt3dadd( 443.529, 367.453, 21.0, 0.3304 ) }
    apic_6 { pt3dadd( 443.732, 367.758, 21.0932, 0.4322 ) }
    apic_6 { pt3dadd( 443.643, 367.809, 21.8089, 0.4322 ) }
    apic_6 { pt3dadd( 443.681, 368.025, 22.3068, 0.5084 ) }
    apic_6 { pt3dadd( 444.33, 368.216, 21.9332, 0.6102 ) }
    apic_6 { pt3dadd( 444.775, 368.482, 22.1511, 0.6102 ) }
    apic_6 { pt3dadd( 445.181, 368.788, 22.1511, 0.661 ) }
    apic_6 { pt3dadd( 445.474, 369.067, 21.8711, 0.5338 ) }
    apic_6 { pt3dadd( 445.715, 369.054, 23.2089, 0.4576 ) }
    apic_6 { pt3dadd( 446.274, 369.283, 22.96, 0.661 ) }
    apic_6 { pt3dadd( 446.643, 369.398, 23.7378, 0.5338 ) }
    apic_6 { pt3dadd( 446.745, 369.398, 24.6089, 0.5338 ) }
    apic_6 { pt3dadd( 447.164, 369.258, 24.92, 0.4322 ) }
    apic_6 { pt3dadd( 447.342, 369.245, 24.36, 0.4068 ) }
    apic_6 { pt3dadd( 447.635, 368.978, 23.9557, 0.3814 ) }
    apic_6 { pt3dadd( 447.876, 368.863, 23.3332, 0.5084 ) }
    apic_6 { pt3dadd( 448.473, 368.699, 23.3332, 0.6356 ) }
    apic_6 { pt3dadd( 449.528, 368.381, 23.7068, 0.6102 ) }
    apic_6 { pt3dadd( 450.012, 368.445, 23.8, 0.5338 ) }
    apic_6 { pt3dadd( 450.736, 368.254, 22.96, 0.305 ) }
    apic_6 { pt3dadd( 451.181, 368.368, 22.9911, 0.2796 ) }
    apic_6 { pt3dadd( 451.308, 368.635, 23.4268, 0.3814 ) }
    apic_6 { pt3dadd( 451.422, 368.89, 23.6443, 0.483 ) }
    apic_6 { pt3dadd( 451.499, 369.169, 24.4532, 0.356 ) }
    apic_6 { pt3dadd( 452.109, 369.398, 24.64, 0.2542 ) }
    apic_6 { pt3dadd( 452.617, 369.181, 24.4532, 0.3814 ) }
    apic_6 { pt3dadd( 452.91, 368.94, 24.8578, 0.4576 ) }
    apic_6 { pt3dadd( 453.825, 369.017, 24.8268, 0.3814 ) }
    apic_6 { pt3dadd( 454.308, 369.181, 24.8268, 0.4068 ) }
    apic_6 { pt3dadd( 454.69, 369.283, 24.7643, 0.483 ) }
    apic_6 { pt3dadd( 455.235, 369.817, 25.2, 0.6102 ) }
    apic_6 { pt3dadd( 455.998, 370.198, 24.92, 0.5084 ) }
    apic_6 { pt3dadd( 456.418, 370.554, 24.2978, 0.483 ) }
    apic_6 { pt3dadd( 456.533, 371.037, 24.64, 0.4576 ) }
    apic_6 { pt3dadd( 456.863, 371.278, 24.64, 0.5338 ) }
    apic_6 { pt3dadd( 457.6, 371.698, 24.8889, 0.5592 ) }
    apic_6 { pt3dadd( 458.083, 372.004, 24.92, 0.5592 ) }
    apic_6 { pt3dadd( 458.477, 372.258, 24.4532, 0.483 ) }
    apic_6 { pt3dadd( 458.935, 372.524, 24.64, 0.4576 ) }
    apic_6 { pt3dadd( 459.1, 372.931, 24.64, 0.3814 ) }
    apic_6 { pt3dadd( 459.545, 372.944, 25.2, 0.3814 ) }
    apic_6 { pt3dadd( 459.888, 372.715, 26.04, 0.483 ) }
    apic_6 { pt3dadd( 460.498, 372.601, 25.8532, 0.4322 ) }
    apic_6 { pt3dadd( 460.943, 372.677, 25.7911, 0.3814 ) }
    apic_6 { pt3dadd( 461.07, 373.021, 26.32, 0.6356 ) }
    apic_6 { pt3dadd( 461.452, 373.262, 25.9468, 0.5338 ) }
    apic_6 { pt3dadd( 462.062, 373.439, 24.8268, 0.483 ) }
    apic_6 { pt3dadd( 462.544, 373.516, 24.5778, 0.4576 ) }
    apic_6 { pt3dadd( 462.837, 373.783, 25.7289, 0.661 ) }
    apic_6 { pt3dadd( 463.345, 373.859, 25.2622, 0.6102 ) }
    apic_6 { pt3dadd( 463.879, 373.974, 24.9511, 0.5592 ) }
    apic_6 { pt3dadd( 464.337, 373.745, 25.4489, 0.4576 ) }
    apic_6 { pt3dadd( 464.782, 373.783, 24.6711, 0.305 ) }
    apic_6 { pt3dadd( 464.998, 373.923, 25.4489, 0.6356 ) }
    apic_6 { pt3dadd( 465.468, 373.897, 26.2889, 0.5848 ) }
    apic_6 { pt3dadd( 466.155, 374.088, 26.3822, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    apic_6 { pt3dadd( 466.459, 374.202, 27.0357, 0.3304 ) }
    apic_6 { pt3dadd( 466.752, 374.202, 27.16, 0.2542 ) }
    apic_6 { pt3dadd( 467.083, 374.202, 27.1289, 0.2288 ) }
    apic_6 { pt3dadd( 467.401, 374.24, 26.6, 0.356 ) }
    apic_6 { pt3dadd( 467.744, 374.482, 26.8489, 0.4322 ) }
    apic_6 { pt3dadd( 467.819, 374.737, 26.88, 0.4322 ) }
    apic_6 { pt3dadd( 467.973, 375.016, 26.5378, 0.4322 ) }
    apic_6 { pt3dadd( 468.112, 375.359, 25.76, 0.356 ) }
    apic_6 { pt3dadd( 468.189, 375.817, 25.8532, 0.3304 ) }
    apic_6 { pt3dadd( 468.239, 376.224, 26.5068, 0.5848 ) }
    apic_6 { pt3dadd( 468.379, 376.694, 26.04, 0.6102 ) }
    apic_6 { pt3dadd( 468.647, 377.113, 26.04, 0.6102 ) }
    apic_6 { pt3dadd( 469.244, 377.558, 26.8489, 0.4322 ) }
    apic_6 { pt3dadd( 469.396, 377.736, 27.16, 0.4576 ) }
    apic_6 { pt3dadd( 469.79, 377.863, 27.3157, 0.4576 ) }
    apic_6 { pt3dadd( 470.082, 377.978, 26.3511, 0.3814 ) }
    apic_6 { pt3dadd( 470.362, 378.194, 26.1332, 0.4576 ) }
    apic_6 { pt3dadd( 470.858, 378.015, 26.7243, 0.5592 ) }
    apic_6 { pt3dadd( 471.214, 377.978, 27.44, 0.6356 ) }
    apic_6 { pt3dadd( 471.875, 378.015, 27.4711, 0.5338 ) }
    apic_6 { pt3dadd( 472.345, 378.257, 27.6268, 0.4068 ) }
    apic_6 { pt3dadd( 472.472, 378.435, 28.0, 0.4068 ) }
    apic_6 { pt3dadd( 472.739, 378.626, 28.56, 0.4576 ) }
    apic_6 { pt3dadd( 473.031, 378.905, 28.28, 0.4576 ) }
    apic_6 { pt3dadd( 473.387, 379.249, 27.7511, 0.4576 ) }
    apic_6 { pt3dadd( 473.82, 379.567, 27.8132, 0.4068 ) }
    apic_6 { pt3dadd( 474.048, 379.617, 28.2489, 0.483 ) }
    apic_6 { pt3dadd( 474.302, 379.808, 28.4978, 0.5084 ) }
    apic_6 { pt3dadd( 474.874, 379.706, 28.0311, 0.483 ) }
    apic_6 { pt3dadd( 475.446, 379.706, 28.3111, 0.6102 ) }
    apic_6 { pt3dadd( 476.108, 379.465, 28.9022, 0.6102 ) }
    apic_6 { pt3dadd( 476.655, 379.452, 29.0268, 0.5592 ) }
    apic_6 { pt3dadd( 477.213, 379.363, 29.5868, 0.5338 ) }
    apic_6 { pt3dadd( 477.468, 379.503, 30.52, 0.5338 ) }
    apic_6 { pt3dadd( 477.722, 379.706, 29.96, 0.5084 ) }
    apic_6 { pt3dadd( 478.396, 380.062, 29.96, 0.5848 ) }
    apic_6 { pt3dadd( 478.841, 380.303, 30.24, 0.5084 ) }
    apic_6 { pt3dadd( 479.552, 380.393, 30.24, 0.4576 ) }
    apic_6 { pt3dadd( 480.022, 380.405, 30.52, 0.5084 ) }
    apic_6 { pt3dadd( 480.709, 380.685, 30.6132, 0.483 ) }
    apic_6 { pt3dadd( 481.166, 380.952, 31.08, 0.305 ) }
    apic_6 { pt3dadd( 481.51, 380.952, 31.08, 0.2542 ) }
    apic_6 { pt3dadd( 482.425, 380.952, 31.08, 0.3304 ) }
    apic_6 { pt3dadd( 482.947, 381.104, 31.0489, 0.483 ) }
    apic_6 { pt3dadd( 483.34, 381.41, 30.24, 0.3814 ) }
    apic_6 { pt3dadd( 483.683, 381.511, 30.5511, 0.3814 ) }
    apic_6 { pt3dadd( 484.091, 381.765, 31.1732, 0.4322 ) }
    apic_6 { pt3dadd( 484.446, 381.905, 31.64, 0.305 ) }
    apic_6 { pt3dadd( 484.7, 381.994, 31.64, 0.2796 ) }
    apic_6 { pt3dadd( 484.967, 382.185, 31.36, 0.4576 ) }
    apic_6 { pt3dadd( 485.361, 382.477, 31.08, 0.5848 ) }
    apic_6 { pt3dadd( 485.793, 382.732, 31.36, 0.661 ) }
    apic_6 { pt3dadd( 486.277, 382.897, 31.2668, 0.5592 ) }
    apic_6 { pt3dadd( 486.722, 383.011, 31.7643, 0.4322 ) }
    apic_6 { pt3dadd( 486.988, 383.24, 32.5111, 0.4576 ) }
    apic_6 { pt3dadd( 487.115, 383.481, 33.2889, 0.4322 ) }
    apic_6 { pt3dadd( 487.267, 383.901, 33.5689, 0.356 ) }
    apic_6 { pt3dadd( 487.471, 384.18, 33.4132, 0.4576 ) }
    apic_6 { pt3dadd( 487.675, 384.575, 33.1957, 0.5084 ) }
    apic_6 { pt3dadd( 488.272, 384.715, 32.76, 0.4322 ) }
    apic_6 { pt3dadd( 488.717, 384.461, 32.5732, 0.4322 ) }
    apic_6 { pt3dadd( 489.022, 384.053, 32.6043, 0.3814 ) }
    apic_6 { pt3dadd( 489.289, 384.041, 33.04, 0.2542 ) }
    apic_6 { pt3dadd( 489.784, 384.041, 33.7868, 0.2542 ) }
    apic_6 { pt3dadd( 490.395, 384.041, 34.2532, 0.2796 ) }
    apic_6 { pt3dadd( 490.789, 384.257, 34.72, 0.356 ) }
    apic_6 { pt3dadd( 491.119, 384.384, 34.72, 0.483 ) }
    apic_6 { pt3dadd( 491.462, 384.384, 35.56, 0.4068 ) }
    apic_6 { pt3dadd( 491.513, 384.307, 36.3689, 0.2542 ) }
    apic_6 { pt3dadd( 491.679, 384.282, 36.4, 0.2288 ) }
    apic_6 { pt3dadd( 491.806, 384.346, 36.3068, 0.2288 ) }
    apic_6 { pt3dadd( 492.111, 384.384, 35.4668, 0.305 ) }
    apic_6 { pt3dadd( 492.365, 384.397, 34.72, 0.4322 ) }
    apic_6 { pt3dadd( 492.823, 384.27, 35.3111, 0.5084 ) }
    apic_6 { pt3dadd( 493.293, 384.384, 35.56, 0.3304 ) }
    apic_6 { pt3dadd( 493.865, 384.613, 35.84, 0.2796 ) }
    apic_6 { pt3dadd( 494.17, 384.575, 35.84, 0.2542 ) }
    apic_6 { pt3dadd( 494.882, 384.498, 35.5911, 0.2288 ) }
    apic_6 { pt3dadd( 495.479, 384.498, 35.5911, 0.2288 ) }
    apic_6 { pt3dadd( 496.038, 384.727, 35.56, 0.2542 ) }
    apic_6 { pt3dadd( 496.598, 384.969, 35.56, 0.305 ) }
    apic_6 { pt3dadd( 497.093, 385.197, 35.3732, 0.356 ) }
    apic_6 { pt3dadd( 497.627, 385.312, 35.28, 0.356 ) }
    apic_6 { pt3dadd( 497.983, 385.528, 35.56, 0.2796 ) }
    apic_6 { pt3dadd( 498.555, 385.986, 35.56, 0.2288 ) }
    apic_6 { pt3dadd( 499.242, 386.1, 35.56, 0.2288 ) }
    apic_6 { pt3dadd( 499.903, 386.24, 35.56, 0.2288 ) }
    apic_6 { pt3dadd( 500.614, 386.329, 35.56, 0.2288 ) }
    apic_6 { pt3dadd( 501.288, 386.329, 35.2489, 0.2288 ) }
    apic_6 { pt3dadd( 501.873, 386.329, 34.72, 0.2288 ) }
    apic_6 { pt3dadd( 502.343, 386.291, 34.8757, 0.2288 ) }
    apic_6 { pt3dadd( 502.813, 386.202, 34.9068, 0.2288 ) }
    apic_6 { pt3dadd( 503.373, 385.998, 35.0, 0.2288 ) }
    apic_6 { pt3dadd( 504.046, 385.871, 35.0, 0.2542 ) }
    apic_6 { pt3dadd( 504.593, 385.769, 35.0932, 0.305 ) }
    apic_6 { pt3dadd( 504.987, 385.948, 35.2489, 0.2542 ) }
    apic_6 { pt3dadd( 505.317, 386.087, 35.0, 0.2542 ) }
    apic_6 { pt3dadd( 506.093, 385.973, 35.84, 0.305 ) }
    apic_6 { pt3dadd( 506.715, 385.871, 35.6532, 0.305 ) }
    apic_6 { pt3dadd( 507.25, 385.757, 35.56, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    apic_6 { pt3dadd( 507.707, 385.859, 35.8711, 0.3304 ) }
    apic_6 { pt3dadd( 508.444, 385.871, 36.5557, 0.2796 ) }
    apic_6 { pt3dadd( 508.724, 385.871, 36.6489, 0.2542 ) }
    apic_6 { pt3dadd( 508.94, 385.909, 36.4311, 0.2542 ) }
    apic_6 { pt3dadd( 509.296, 386.062, 35.9957, 0.3304 ) }
    apic_6 { pt3dadd( 509.639, 386.1, 35.5289, 0.3304 ) }
    apic_6 { pt3dadd( 509.893, 386.1, 35.3111, 0.3304 ) }
    apic_6 { pt3dadd( 510.682, 385.986, 35.28, 0.2542 ) }
    apic_6 { pt3dadd( 511.025, 385.986, 35.28, 0.2542 ) }
    apic_6 { pt3dadd( 511.406, 385.769, 35.4978, 0.3814 ) }
    apic_6 { pt3dadd( 511.89, 385.49, 35.8089, 0.4576 ) }
    apic_6 { pt3dadd( 512.69, 385.172, 35.4668, 0.4576 ) }
    apic_6 { pt3dadd( 513.084, 384.879, 35.3732, 0.4576 ) }
    apic_6 { pt3dadd( 513.567, 384.638, 35.56, 0.4576 ) }
    apic_6 { pt3dadd( 514.126, 384.498, 35.8089, 0.4576 ) }
    apic_6 { pt3dadd( 514.673, 384.498, 35.5911, 0.483 ) }
    apic_6 { pt3dadd( 515.181, 384.613, 36.3068, 0.5084 ) }
    apic_6 { pt3dadd( 515.83, 384.727, 36.4, 0.4068 ) }
    apic_6 { pt3dadd( 516.618, 384.727, 36.4311, 0.3814 ) }
    apic_6 { pt3dadd( 517.19, 384.613, 36.6489, 0.4576 ) }
    apic_6 { pt3dadd( 517.851, 384.613, 36.3068, 0.5338 ) }
    apic_6 { pt3dadd( 518.448, 384.625, 35.84, 0.5338 ) }
    apic_6 { pt3dadd( 519.02, 384.842, 35.8089, 0.4576 ) }
    apic_6 { pt3dadd( 519.426, 384.842, 35.9957, 0.483 ) }
    apic_6 { pt3dadd( 519.884, 384.651, 35.5911, 0.483 ) }
    apic_6 { pt3dadd( 520.495, 384.613, 35.2178, 0.4322 ) }
    apic_6 { pt3dadd( 520.838, 384.461, 34.7511, 0.305 ) }
    apic_6 { pt3dadd( 521.092, 384.384, 34.72, 0.2542 ) }
    apic_6 { pt3dadd( 521.435, 384.384, 34.72, 0.2288 ) }
    apic_6 { pt3dadd( 521.664, 384.384, 34.72, 0.2288 ) }
    apic_6 { pt3dadd( 522.465, 384.384, 34.72, 0.2288 ) }
    apic_6 { pt3dadd( 522.808, 384.384, 34.72, 0.2288 ) }
    apic_6 { pt3dadd( 523.113, 384.346, 34.72, 0.2288 ) }
    apic_6 { pt3dadd( 523.291, 384.18, 34.72, 0.2542 ) }
    apic_6 { pt3dadd( 523.761, 383.926, 34.6268, 0.4576 ) }
    apic_6 { pt3dadd( 524.447, 383.926, 34.9068, 0.6356 ) }
    apic_6 { pt3dadd( 525.096, 383.926, 35.0, 0.6102 ) }
    apic_6 { pt3dadd( 525.325, 383.71, 33.8489, 0.4576 ) }
    apic_6 { pt3dadd( 525.668, 383.583, 33.6, 0.2542 ) }
    apic_6 { pt3dadd( 526.036, 383.66, 33.5689, 0.3814 ) }
    apic_6 { pt3dadd( 526.392, 383.392, 33.04, 0.5084 ) }
    apic_6 { pt3dadd( 526.837, 383.036, 33.32, 0.5592 ) }
    apic_6 { pt3dadd( 527.143, 382.77, 33.88, 0.483 ) }
    apic_6 { pt3dadd( 527.575, 382.325, 34.0668, 0.5592 ) }
    apic_6 { pt3dadd( 527.765, 381.803, 33.6311, 0.5338 ) }
    apic_6 { pt3dadd( 528.261, 381.537, 33.4757, 0.6356 ) }
    apic_6 { pt3dadd( 528.414, 381.474, 32.3243, 0.3304 ) }
    apic_6 { pt3dadd( 528.515, 381.206, 32.2932, 0.2542 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 48/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 391.929, 327.857, 21.8386, 0.788 ) }
    apic_3 { pt3dadd( 392.402, 327.881, 21.8369, 0.4068 ) }
    apic_3 { pt3dadd( 393.403, 327.342, 21.8204, 0.4322 ) }
    apic_3 { pt3dadd( 394.031, 326.423, 21.7258, 0.4576 ) }
    apic_3 { pt3dadd( 393.86, 325.347, 21.1123, 0.483 ) }
    apic_3 { pt3dadd( 394.077, 324.263, 20.6917, 0.4576 ) }
    apic_3 { pt3dadd( 394.777, 323.363, 20.587, 0.483 ) }
    apic_3 { pt3dadd( 395.397, 322.466, 20.0172, 0.4576 ) }
    apic_3 { pt3dadd( 395.098, 321.638, 18.6082, 0.5338 ) }
    apic_3 { pt3dadd( 394.289, 320.857, 18.6259, 0.5848 ) }
    apic_3 { pt3dadd( 393.288, 320.604, 18.5405, 0.661 ) }
    apic_3 { pt3dadd( 392.906, 320.987, 16.4066, 0.7118 ) }
    apic_3 { pt3dadd( 393.107, 321.879, 14.9685, 0.6864 ) }
    apic_3 { pt3dadd( 393.88, 321.551, 13.3109, 0.661 ) }
    apic_3 { pt3dadd( 394.618, 320.718, 12.7271, 0.6102 ) }
    apic_3 { pt3dadd( 395.084, 319.738, 12.1075, 0.661 ) }
    apic_3 { pt3dadd( 395.037, 318.61, 11.9059, 0.7626 ) }
    apic_3 { pt3dadd( 394.706, 317.574, 12.6288, 0.839 ) }
    apic_3 { pt3dadd( 394.416, 316.254, 13.9107, 0.8898 ) }
    apic_3 { pt3dadd( 394.274, 315.182, 13.8692, 0.8898 ) }
    apic_3 { pt3dadd( 394.524, 314.156, 12.9461, 0.9152 ) }
    apic_3 { pt3dadd( 395.13, 313.192, 12.88, 0.8644 ) }
    apic_3 { pt3dadd( 395.649, 312.176, 12.8797, 0.8136 ) }
    apic_3 { pt3dadd( 396.151, 311.152, 12.8786, 0.7372 ) }
    apic_3 { pt3dadd( 396.657, 310.129, 12.8719, 0.7118 ) }
    apic_3 { pt3dadd( 397.085, 309.073, 12.8324, 0.6356 ) }
    apic_3 { pt3dadd( 397.632, 308.079, 12.6423, 0.6356 ) }
    apic_3 { pt3dadd( 398.07, 307.077, 11.9006, 0.6102 ) }
    apic_3 { pt3dadd( 398.706, 306.134, 11.7572, 0.6864 ) }
    apic_3 { pt3dadd( 399.323, 304.94, 11.737, 0.7372 ) }
    apic_3 { pt3dadd( 399.648, 303.849, 11.6203, 0.6864 ) }
    apic_3 { pt3dadd( 399.623, 302.753, 10.9332, 0.6356 ) }
    apic_3 { pt3dadd( 399.271, 301.683, 10.6411, 0.5848 ) }
    apic_3 { pt3dadd( 399.023, 300.591, 10.647, 0.5848 ) }
    apic_3 { pt3dadd( 399.513, 299.561, 10.682, 0.6356 ) }
    apic_3 { pt3dadd( 400.18, 298.638, 10.8576, 0.6356 ) }
    apic_3 { pt3dadd( 400.876, 297.814, 11.664, 0.6102 ) }
    apic_3 { pt3dadd( 401.76, 297.099, 11.7382, 0.5848 ) }
    apic_3 { pt3dadd( 402.577, 296.303, 11.653, 0.6102 ) }
    apic_3 { pt3dadd( 403.086, 295.354, 10.9673, 0.7118 ) }
    apic_3 { pt3dadd( 403.441, 294.291, 10.64, 0.7626 ) }
    apic_3 { pt3dadd( 403.811, 293.222, 10.6397, 0.7372 ) }
    apic_3 { pt3dadd( 404.437, 292.273, 10.6389, 0.6102 ) }
    apic_3 { pt3dadd( 405.253, 291.499, 10.6319, 0.4576 ) }
    apic_3 { pt3dadd( 406.362, 291.237, 10.5773, 0.3304 ) }
    apic_3 { pt3dadd( 407.396, 291.595, 10.1522, 0.305 ) }
    apic_3 { pt3dadd( 408.053, 291.816, 8.1533, 0.356 ) }
    apic_3 { pt3dadd( 408.795, 291.137, 7.814, 0.4576 ) }
    apic_3 { pt3dadd( 409.894, 290.991, 8.1967, 0.5084 ) }
    apic_3 { pt3dadd( 410.939, 290.764, 7.3503, 0.5338 ) }
    apic_3 { pt3dadd( 411.896, 290.258, 6.5498, 0.5592 ) }
    apic_3 { pt3dadd( 412.834, 289.677, 6.9199, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    apic_3 { pt3dadd( 413.853, 289.211, 7.2808, 0.6102 ) }
    apic_3 { pt3dadd( 414.614, 288.568, 7.9416, 0.6102 ) }
    apic_3 { pt3dadd( 414.857, 287.505, 7.7263, 0.6102 ) }
    apic_3 { pt3dadd( 415.191, 286.621, 7.8159, 0.5592 ) }
    apic_3 { pt3dadd( 416.095, 286.691, 9.3148, 0.5084 ) }
    apic_3 { pt3dadd( 417.209, 286.756, 9.52, 0.5084 ) }
    apic_3 { pt3dadd( 418.304, 286.438, 9.5192, 0.4576 ) }
    apic_3 { pt3dadd( 419.416, 286.203, 9.5147, 0.4576 ) }
    apic_3 { pt3dadd( 420.496, 286.38, 9.48, 0.483 ) }
    apic_3 { pt3dadd( 421.207, 287.257, 9.2523, 0.5848 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 10/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 312.858, 274.225, 18.1009, 0.6356 ) }
    dend_15 { pt3dadd( 311.846, 274.571, 16.8613, 0.5848 ) }
    dend_15 { pt3dadd( 310.772, 274.63, 15.9482, 0.661 ) }
    dend_15 { pt3dadd( 309.769, 274.951, 14.9481, 0.7372 ) }
    dend_15 { pt3dadd( 308.824, 275.479, 14.1414, 0.7372 ) }
    dend_15 { pt3dadd( 307.825, 276.017, 14.1758, 0.6102 ) }
    dend_15 { pt3dadd( 306.775, 276.076, 14.8655, 0.4576 ) }
    dend_15 { pt3dadd( 305.784, 275.529, 14.9769, 0.305 ) }
    dend_15 { pt3dadd( 304.957, 274.827, 14.2388, 0.305 ) }
    dend_15 { pt3dadd( 304.032, 274.266, 13.463, 0.356 ) }
    dend_15 { pt3dadd( 302.961, 274.396, 12.8878, 0.483 ) }
    dend_15 { pt3dadd( 301.845, 274.638, 12.878, 0.5592 ) }
    dend_15 { pt3dadd( 300.75, 274.945, 12.8682, 0.6102 ) }
    dend_15 { pt3dadd( 299.614, 275.046, 12.7926, 0.5848 ) }
    dend_15 { pt3dadd( 298.545, 275.236, 12.1352, 0.5084 ) }
    dend_15 { pt3dadd( 298.203, 276.285, 11.6245, 0.4576 ) }
    dend_15 { pt3dadd( 297.483, 277.062, 10.8377, 0.4068 ) }
    dend_15 { pt3dadd( 296.383, 277.16, 10.6369, 0.4322 ) }
    dend_15 { pt3dadd( 296.296, 277.077, 9.24, 0.4068 ) }
    dend_15 { pt3dadd( 295.851, 276.848, 9.2711, 0.4576 ) }
    dend_15 { pt3dadd( 295.317, 276.683, 10.08, 0.661 ) }
    dend_15 { pt3dadd( 294.759, 276.098, 9.52, 0.5848 ) }
    dend_15 { pt3dadd( 294.122, 275.59, 9.24, 0.6102 ) }
    dend_15 { pt3dadd( 293.423, 275.577, 8.96, 0.6102 ) }
    dend_15 { pt3dadd( 292.851, 275.552, 8.5243, 0.5084 ) }
    dend_15 { pt3dadd( 291.847, 275.59, 7.5289, 0.3304 ) }
    dend_15 { pt3dadd( 291.453, 275.59, 7.4668, 0.2542 ) }
    dend_15 { pt3dadd( 291.237, 275.577, 7.7468, 0.2288 ) }
    dend_15 { pt3dadd( 291.148, 275.475, 8.4, 0.4322 ) }
    dend_15 { pt3dadd( 291.046, 275.602, 9.24, 0.4576 ) }
    dend_15 { pt3dadd( 290.589, 275.742, 9.1157, 0.4322 ) }
    dend_15 { pt3dadd( 290.499, 275.717, 8.3378, 0.2288 ) }
    dend_15 { pt3dadd( 290.372, 275.92, 8.2132, 0.2288 ) }
    dend_15 { pt3dadd( 289.979, 275.92, 8.8668, 0.4068 ) }
    dend_15 { pt3dadd( 289.482, 275.945, 8.8668, 0.3814 ) }
    dend_15 { pt3dadd( 288.974, 276.047, 8.4, 0.4322 ) }
    dend_15 { pt3dadd( 288.047, 275.717, 8.4, 0.4576 ) }
    dend_15 { pt3dadd( 287.602, 275.704, 8.68, 0.2288 ) }
    dend_15 { pt3dadd( 287.271, 275.704, 8.3689, 0.4322 ) }
    dend_15 { pt3dadd( 287.094, 275.818, 7.4043, 0.4576 ) }
    dend_15 { pt3dadd( 286.458, 275.742, 7.7468, 0.5084 ) }
    dend_15 { pt3dadd( 285.542, 275.704, 8.12, 0.305 ) }
    dend_15 { pt3dadd( 284.742, 275.704, 8.12, 0.2542 ) }
    dend_15 { pt3dadd( 284.513, 275.704, 8.12, 0.2288 ) }
    dend_15 { pt3dadd( 284.284, 275.704, 8.12, 0.2542 ) }
    dend_15 { pt3dadd( 283.953, 275.742, 8.3378, 0.4576 ) }
    dend_15 { pt3dadd( 284.043, 275.818, 8.9911, 0.2542 ) }
    dend_15 { pt3dadd( 283.75, 276.072, 9.4889, 0.2542 ) }
    dend_15 { pt3dadd( 283.75, 276.441, 8.7111, 0.4322 ) }
    dend_15 { pt3dadd( 283.369, 276.619, 8.12, 0.6864 ) }
    dend_15 { pt3dadd( 282.682, 276.276, 7.28, 0.6864 ) }
    dend_15 { pt3dadd( 281.919, 276.353, 6.16, 0.6102 ) }
    dend_15 { pt3dadd( 281.474, 275.997, 6.16, 0.5338 ) }
    dend_15 { pt3dadd( 281.322, 275.513, 6.5643, 0.4322 ) }
    dend_15 { pt3dadd( 281.31, 275.475, 7.28, 0.2542 ) }
    dend_15 { pt3dadd( 281.31, 275.475, 7.84, 0.2288 ) }
    dend_15 { pt3dadd( 281.31, 275.475, 8.4, 0.2288 ) }
    dend_15 { pt3dadd( 281.386, 275.399, 10.08, 0.305 ) }
    dend_15 { pt3dadd( 281.424, 275.259, 10.8889, 0.356 ) }
    dend_15 { pt3dadd( 281.513, 274.903, 10.9822, 0.305 ) }
    dend_15 { pt3dadd( 281.882, 274.891, 11.4489, 0.2796 ) }
    dend_15 { pt3dadd( 282.2, 274.573, 11.3868, 0.2288 ) }
    dend_15 { pt3dadd( 282.327, 274.522, 10.9822, 0.2288 ) }
    dend_15 { pt3dadd( 282.53, 274.293, 10.64, 0.2542 ) }
    dend_15 { pt3dadd( 282.911, 273.874, 10.64, 0.2796 ) }
    dend_15 { pt3dadd( 283.14, 273.607, 10.1732, 0.2288 ) }
    dend_15 { pt3dadd( 283.14, 273.175, 9.8311, 0.2288 ) }
    dend_15 { pt3dadd( 283.14, 272.844, 9.8, 0.2542 ) }
    dend_15 { pt3dadd( 283.14, 272.501, 9.8, 0.305 ) }
    dend_15 { pt3dadd( 282.988, 272.068, 9.5511, 0.4322 ) }
    dend_15 { pt3dadd( 282.67, 271.852, 8.6178, 0.483 ) }
    dend_15 { pt3dadd( 282.237, 271.23, 8.12, 0.5338 ) }
    dend_15 { pt3dadd( 281.78, 270.772, 7.84, 0.661 ) }
    dend_15 { pt3dadd( 281.424, 270.098, 7.8089, 0.5848 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 84/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 312.858, 274.225, 18.1009, 0.6356 ) }
    dend_14 { pt3dadd( 312.63, 274.126, 20.7701, 0.5338 ) }
    dend_14 { pt3dadd( 311.691, 274.018, 21.6541, 0.5848 ) }
    dend_14 { pt3dadd( 309.944, 273.091, 21.3077, 0.661 ) }
    dend_14 { pt3dadd( 309.093, 272.357, 20.9894, 0.6356 ) }
    dend_14 { pt3dadd( 308.513, 271.424, 21.6866, 0.6356 ) }
    dend_14 { pt3dadd( 307.865, 270.496, 21.8414, 0.5848 ) }
    dend_14 { pt3dadd( 306.877, 269.968, 21.8487, 0.5338 ) }
    dend_14 { pt3dadd( 305.785, 269.665, 21.8935, 0.5084 ) }
    dend_14 { pt3dadd( 304.778, 269.139, 22.1057, 0.5338 ) }
    dend_14 { pt3dadd( 303.846, 268.562, 22.8357, 0.5848 ) }
    dend_14 { pt3dadd( 303.012, 267.783, 22.96, 0.5592 ) }
    dend_14 { pt3dadd( 302.194, 266.982, 22.96, 0.483 ) }
    dend_14 { pt3dadd( 301.353, 266.209, 22.9603, 0.4068 ) }
    dend_14 { pt3dadd( 300.405, 265.574, 22.9611, 0.4322 ) }
    dend_14 { pt3dadd( 299.452, 264.946, 22.965, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_14 { pt3dadd( 298.447, 264.405, 22.9863, 0.5592 ) }
    dend_14 { pt3dadd( 297.495, 263.774, 23.0936, 0.5084 ) }
    dend_14 { pt3dadd( 296.509, 263.296, 23.753, 0.3814 ) }
    dend_14 { pt3dadd( 295.891, 262.382, 24.0892, 0.305 ) }
    dend_14 { pt3dadd( 295.065, 261.643, 24.1405, 0.3304 ) }
    dend_14 { pt3dadd( 293.997, 261.315, 24.4874, 0.483 ) }
    dend_14 { pt3dadd( 292.886, 261.298, 24.5224, 0.6356 ) }
    dend_14 { pt3dadd( 291.757, 261.347, 24.2553, 0.7118 ) }
    dend_14 { pt3dadd( 290.703, 261.636, 24.8839, 0.6356 ) }
    dend_14 { pt3dadd( 289.729, 262.171, 24.556, 0.5084 ) }
    dend_14 { pt3dadd( 288.64, 262.44, 24.169, 0.4322 ) }
    dend_14 { pt3dadd( 287.648, 262.103, 24.845, 0.4322 ) }
    dend_14 { pt3dadd( 286.685, 261.55, 25.4041, 0.483 ) }
    dend_14 { pt3dadd( 285.649, 261.207, 26.1433, 0.5084 ) }
    dend_14 { pt3dadd( 284.758, 260.584, 26.0823, 0.5848 ) }
    dend_14 { pt3dadd( 283.985, 259.828, 25.2913, 0.6102 ) }
    dend_14 { pt3dadd( 283.02, 259.227, 25.247, 0.5848 ) }
    dend_14 { pt3dadd( 282.007, 258.712, 25.468, 0.4576 ) }
    dend_14 { pt3dadd( 280.966, 258.544, 26.32, 0.3304 ) }
    dend_14 { pt3dadd( 280.623, 258.315, 26.04, 0.2542 ) }
    dend_14 { pt3dadd( 280.394, 258.277, 25.8532, 0.2542 ) }
    dend_14 { pt3dadd( 279.987, 258.239, 25.5111, 0.305 ) }
    dend_14 { pt3dadd( 279.25, 258.43, 25.76, 0.2542 ) }
    dend_14 { pt3dadd( 278.666, 258.646, 25.76, 0.2542 ) }
    dend_14 { pt3dadd( 278.132, 258.696, 25.5111, 0.4576 ) }
    dend_14 { pt3dadd( 277.687, 258.48, 25.7289, 0.5338 ) }
    dend_14 { pt3dadd( 277.204, 258.01, 25.3243, 0.4068 ) }
    dend_14 { pt3dadd( 277.077, 257.959, 26.0089, 0.3304 ) }
    dend_14 { pt3dadd( 276.644, 257.718, 26.04, 0.3304 ) }
    dend_14 { pt3dadd( 276.263, 257.375, 25.5732, 0.483 ) }
    dend_14 { pt3dadd( 275.704, 257.171, 24.92, 0.5084 ) }
    dend_14 { pt3dadd( 274.903, 257.057, 25.48, 0.483 ) }
    dend_14 { pt3dadd( 274.229, 257.057, 25.2311, 0.6102 ) }
    dend_14 { pt3dadd( 273.581, 256.942, 25.6043, 0.5084 ) }
    dend_14 { pt3dadd( 272.958, 256.828, 25.76, 0.4576 ) }
    dend_14 { pt3dadd( 272.31, 256.561, 26.04, 0.4576 ) }
    dend_14 { pt3dadd( 271.814, 256.333, 25.8532, 0.4322 ) }
    dend_14 { pt3dadd( 271.395, 256.027, 25.8532, 0.4322 ) }
    dend_14 { pt3dadd( 271.039, 255.773, 25.76, 0.4068 ) }
    dend_14 { pt3dadd( 270.633, 255.379, 25.76, 0.4068 ) }
    dend_14 { pt3dadd( 270.188, 255.035, 25.7911, 0.3304 ) }
    dend_14 { pt3dadd( 269.78, 254.744, 26.04, 0.305 ) }
    dend_14 { pt3dadd( 269.425, 254.49, 26.5068, 0.3304 ) }
    dend_14 { pt3dadd( 269.094, 254.057, 26.6, 0.4322 ) }
    dend_14 { pt3dadd( 268.738, 253.625, 26.5689, 0.5084 ) }
    dend_14 { pt3dadd( 268.306, 253.358, 26.88, 0.483 ) }
    dend_14 { pt3dadd( 267.734, 253.282, 26.4132, 0.5338 ) }
    dend_14 { pt3dadd( 267.099, 253.485, 26.6, 0.4576 ) }
    dend_14 { pt3dadd( 266.323, 253.51, 26.04, 0.483 ) }
    dend_14 { pt3dadd( 265.878, 253.396, 26.2889, 0.356 ) }
    dend_14 { pt3dadd( 265.446, 253.396, 25.1068, 0.305 ) }
    dend_14 { pt3dadd( 264.913, 253.282, 25.1068, 0.4322 ) }
    dend_14 { pt3dadd( 264.607, 253.282, 26.04, 0.5848 ) }
    dend_14 { pt3dadd( 264.112, 253.167, 26.1332, 0.4576 ) }
    dend_14 { pt3dadd( 263.463, 253.053, 25.2, 0.5338 ) }
    dend_14 { pt3dadd( 262.941, 253.053, 25.0757, 0.483 ) }
    dend_14 { pt3dadd( 262.434, 253.053, 24.64, 0.4322 ) }
    dend_14 { pt3dadd( 261.951, 253.244, 24.9511, 0.3304 ) }
    dend_14 { pt3dadd( 261.709, 253.485, 25.4489, 0.2542 ) }
    dend_14 { pt3dadd( 261.366, 253.701, 24.64, 0.2542 ) }
    dend_14 { pt3dadd( 260.718, 253.625, 24.64, 0.305 ) }
    dend_14 { pt3dadd( 259.929, 253.282, 24.3289, 0.3304 ) }
    dend_14 { pt3dadd( 259.243, 253.167, 23.8311, 0.6356 ) }
    dend_14 { pt3dadd( 258.621, 252.989, 24.0489, 0.5338 ) }
    dend_14 { pt3dadd( 257.985, 252.747, 24.2043, 0.6864 ) }
    dend_14 { pt3dadd( 257.323, 252.329, 23.8, 0.6864 ) }
    dend_14 { pt3dadd( 256.599, 251.909, 24.08, 0.4068 ) }
    dend_14 { pt3dadd( 256.218, 251.489, 24.08, 0.356 ) }
    dend_14 { pt3dadd( 255.951, 251.108, 23.7068, 0.3814 ) }
    dend_14 { pt3dadd( 255.761, 250.688, 23.8, 0.4576 ) }
    dend_14 { pt3dadd( 255.48, 250.168, 24.36, 0.483 ) }
    dend_14 { pt3dadd( 255.226, 249.812, 23.6132, 0.2542 ) }
    dend_14 { pt3dadd( 255.112, 249.621, 22.68, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 249.621, 21.84, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 249.621, 21.28, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 249.621, 19.32, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 249.621, 18.76, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 249.621, 18.2, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 249.57, 17.4843, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 249.278, 17.36, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 249.011, 17.1732, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 248.134, 17.08, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 247.79, 17.08, 0.2288 ) }
    dend_14 { pt3dadd( 255.112, 247.447, 17.08, 0.2288 ) }
    dend_14 { pt3dadd( 254.998, 247.218, 17.08, 0.2288 ) }
    dend_14 { pt3dadd( 254.833, 247.04, 17.08, 0.2288 ) }
    dend_14 { pt3dadd( 254.311, 246.99, 17.08, 0.2288 ) }
    dend_14 { pt3dadd( 253.968, 246.99, 17.08, 0.2288 ) }
    dend_14 { pt3dadd( 253.053, 246.99, 17.08, 0.2288 ) }
    dend_14 { pt3dadd( 252.366, 246.99, 16.8, 0.2288 ) }
    dend_14 { pt3dadd( 252.1, 246.913, 16.8, 0.2288 ) }
    dend_14 { pt3dadd( 251.794, 246.875, 16.8, 0.2288 ) }
    dend_14 { pt3dadd( 251.578, 246.761, 16.7689, 0.2288 ) }
    dend_14 { pt3dadd( 251.464, 246.354, 15.8668, 0.305 ) }
    dend_14 { pt3dadd( 251.566, 246.151, 14.9332, 0.2796 ) }
    dend_14 { pt3dadd( 251.312, 245.528, 14.84, 0.2796 ) }
    dend_14 { pt3dadd( 251.07, 245.299, 15.6489, 0.3814 ) }
    dend_14 { pt3dadd( 250.65, 245.172, 15.9289, 0.3814 ) }
    dend_14 { pt3dadd( 250.307, 245.274, 16.24, 0.356 ) }
    // Section: apic_21, id: apic_21, parent: apic_11 (entry count 99/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 198.827, 694.98, 66.64, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    apic_21 { pt3dadd( 198.705, 695.283, 66.7058, 0.2542 ) }
    apic_21 { pt3dadd( 196.075, 695.827, 66.7058, 0.2796 ) }
    apic_21 { pt3dadd( 194.193, 697.883, 66.7058, 0.356 ) }
    apic_21 { pt3dadd( 190.676, 703.037, 68.3068, 0.4322 ) }
    apic_21 { pt3dadd( 188.124, 706.05, 71.5086, 0.5084 ) }
    apic_21 { pt3dadd( 187.645, 708.558, 71.5086, 0.483 ) }
    apic_21 { pt3dadd( 185.31, 711.157, 73.1097, 0.4322 ) }
    apic_21 { pt3dadd( 183.241, 712.68, 75.2441, 0.4068 ) }
    apic_21 { pt3dadd( 180.047, 715.591, 78.4462, 0.4322 ) }
    apic_21 { pt3dadd( 180.33, 717.662, 78.4462, 0.4576 ) }
    apic_21 { pt3dadd( 179.766, 718.509, 78.4462, 0.4322 ) }
    apic_21 { pt3dadd( 176.855, 718.408, 81.1143, 0.4068 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 12/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 198.827, 694.98, 66.64, 0.2542 ) }
    apic_12 { pt3dadd( 198.382, 695.45, 66.64, 0.4576 ) }
    apic_12 { pt3dadd( 197.925, 695.793, 66.64, 0.2288 ) }
    apic_12 { pt3dadd( 197.899, 696.111, 66.64, 0.2288 ) }
    apic_12 { pt3dadd( 197.454, 696.582, 66.64, 0.305 ) }
    apic_12 { pt3dadd( 197.188, 697.103, 66.6711, 0.3814 ) }
    apic_12 { pt3dadd( 196.972, 697.357, 67.2, 0.4576 ) }
    apic_12 { pt3dadd( 196.743, 697.802, 67.1689, 0.4322 ) }
    apic_12 { pt3dadd( 196.577, 697.992, 65.8622, 0.661 ) }
    apic_12 { pt3dadd( 196.527, 698.653, 66.36, 0.8644 ) }
    apic_12 { pt3dadd( 196.082, 699.442, 66.64, 0.839 ) }
    apic_12 { pt3dadd( 195.433, 700.128, 65.8932, 0.5592 ) }
    apic_12 { pt3dadd( 195.09, 700.954, 65.8311, 0.6102 ) }
    apic_12 { pt3dadd( 194.836, 701.476, 65.7068, 0.661 ) }
    apic_12 { pt3dadd( 194.62, 701.882, 64.9911, 0.788 ) }
    apic_12 { pt3dadd( 194.099, 702.848, 65.7689, 0.7626 ) }
    apic_12 { pt3dadd( 193.717, 703.483, 66.08, 0.661 ) }
    apic_12 { pt3dadd( 193.565, 704.03, 65.2711, 0.5592 ) }
    apic_12 { pt3dadd( 193.641, 704.704, 64.7732, 0.6864 ) }
    apic_12 { pt3dadd( 193.527, 705.467, 65.52, 0.5338 ) }
    apic_12 { pt3dadd( 193.298, 705.835, 65.5822, 0.483 ) }
    apic_12 { pt3dadd( 192.98, 706.179, 65.24, 0.356 ) }
    apic_12 { pt3dadd( 192.548, 706.42, 65.2089, 0.4068 ) }
    apic_12 { pt3dadd( 192.179, 706.522, 64.96, 0.4068 ) }
    apic_12 { pt3dadd( 191.772, 706.763, 65.0532, 0.5848 ) }
    apic_12 { pt3dadd( 191.506, 707.412, 66.1732, 0.7372 ) }
    apic_12 { pt3dadd( 191.607, 708.581, 66.92, 0.661 ) }
    apic_12 { pt3dadd( 191.582, 709.064, 66.5778, 0.5848 ) }
    apic_12 { pt3dadd( 191.543, 709.534, 66.1111, 0.5338 ) }
    apic_12 { pt3dadd( 191.2, 710.004, 65.8, 0.6102 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 42/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 421.207, 287.257, 9.2523, 0.5848 ) }
    apic_5 { pt3dadd( 421.793, 286.763, 10.4532, 0.4322 ) }
    apic_5 { pt3dadd( 422.136, 286.343, 10.08, 0.5592 ) }
    apic_5 { pt3dadd( 422.733, 285.53, 9.6132, 0.6864 ) }
    apic_5 { pt3dadd( 423.14, 284.983, 8.7732, 0.661 ) }
    apic_5 { pt3dadd( 423.598, 284.869, 9.6132, 0.5338 ) }
    apic_5 { pt3dadd( 423.852, 284.627, 10.36, 0.356 ) }
    apic_5 { pt3dadd( 424.22, 284.424, 10.64, 0.356 ) }
    apic_5 { pt3dadd( 424.424, 284.17, 10.36, 0.3304 ) }
    apic_5 { pt3dadd( 424.755, 283.941, 9.7689, 0.2796 ) }
    apic_5 { pt3dadd( 424.844, 283.776, 9.2711, 0.2542 ) }
    apic_5 { pt3dadd( 425.11, 283.407, 9.1468, 0.356 ) }
    apic_5 { pt3dadd( 425.568, 283.254, 8.96, 0.305 ) }
    apic_5 { pt3dadd( 425.784, 283.242, 8.68, 0.2542 ) }
    apic_5 { pt3dadd( 425.797, 282.911, 8.4, 0.2542 ) }
    apic_5 { pt3dadd( 425.899, 282.491, 8.2757, 0.5084 ) }
    apic_5 { pt3dadd( 426.229, 282.352, 7.6532, 0.483 ) }
    apic_5 { pt3dadd( 426.941, 281.996, 7.56, 0.5084 ) }
    apic_5 { pt3dadd( 427.488, 281.628, 7.28, 0.3304 ) }
    apic_5 { pt3dadd( 427.856, 281.322, 7.8089, 0.4322 ) }
    apic_5 { pt3dadd( 428.123, 281.488, 7.2489, 0.4576 ) }
    apic_5 { pt3dadd( 428.212, 281.551, 6.16, 0.2542 ) }
    apic_5 { pt3dadd( 428.428, 281.424, 6.16, 0.2288 ) }
    apic_5 { pt3dadd( 428.657, 281.424, 6.16, 0.2288 ) }
    apic_5 { pt3dadd( 428.886, 281.424, 6.16, 0.2288 ) }
    apic_5 { pt3dadd( 429.483, 281.31, 6.3468, 0.788 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 68/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 421.207, 287.257, 9.2523, 0.5848 ) }
    apic_4 { pt3dadd( 421.641, 287.876, 7.4645, 0.483 ) }
    apic_4 { pt3dadd( 421.54, 288.663, 5.8803, 0.4068 ) }
    apic_4 { pt3dadd( 422.446, 289.258, 5.8666, 0.356 ) }
    apic_4 { pt3dadd( 423.246, 289.811, 7.2498, 0.356 ) }
    apic_4 { pt3dadd( 423.91, 290.34, 9.0468, 0.4068 ) }
    apic_4 { pt3dadd( 424.185, 290.749, 11.4635, 0.5338 ) }
    apic_4 { pt3dadd( 423.417, 291.35, 12.7669, 0.6102 ) }
    apic_4 { pt3dadd( 422.301, 291.571, 12.8565, 0.5848 ) }
    apic_4 { pt3dadd( 421.426, 292.157, 12.6756, 0.4576 ) }
    apic_4 { pt3dadd( 421.662, 293.184, 11.9689, 0.3814 ) }
    apic_4 { pt3dadd( 421.678, 294.237, 12.88, 0.356 ) }
    // Section: apic_23, id: apic_23, parent: apic_21 (entry count 80/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 176.855, 718.408, 81.1143, 0.4068 ) }
    apic_23 { pt3dadd( 177.115, 718.528, 81.1143, 0.4068 ) }
    apic_23 { pt3dadd( 180.22, 725.484, 85.9172, 0.3304 ) }
    apic_23 { pt3dadd( 180.339, 731.501, 94.4555, 0.3304 ) }
    apic_23 { pt3dadd( 184.976, 735.939, 99.792, 0.3814 ) }
    apic_23 { pt3dadd( 187.872, 742.258, 106.729, 0.3814 ) }
    apic_23 { pt3dadd( 191.186, 746.955, 113.133, 0.3814 ) }
    apic_23 { pt3dadd( 195.217, 751.383, 114.734, 0.3814 ) }
    apic_23 { pt3dadd( 196.103, 753.45, 114.734, 0.3304 ) }
    apic_23 { pt3dadd( 196.792, 755.516, 114.734, 0.305 ) }
    apic_23 { pt3dadd( 203.394, 760.353, 116.869, 0.2796 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 91/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 176.855, 718.408, 81.1143, 0.4068 ) }
    apic_22 { pt3dadd( 173.843, 718.119, 83.7827, 0.3304 ) }
    apic_22 { pt3dadd( 172.24, 716.797, 83.7827, 0.3304 ) }
    apic_22 { pt3dadd( 171.296, 715.758, 83.7827, 0.356 ) }
    apic_22 { pt3dadd( 165.718, 715.559, 86.4508, 0.356 ) }
    apic_22 { pt3dadd( 162.599, 714.709, 86.4508, 0.3814 ) }
    apic_22 { pt3dadd( 153.479, 713.943, 89.119, 0.356 ) }
    apic_22 { pt3dadd( 150.348, 713.943, 89.119, 0.305 ) }
    apic_22 { pt3dadd( 146.956, 715.117, 89.119, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    apic_22 { pt3dadd( 142.521, 715.509, 89.119, 0.2288 ) }
    apic_22 { pt3dadd( 133.913, 712.516, 91.2537, 0.2288 ) }
    apic_22 { pt3dadd( 124.116, 710.426, 91.2537, 0.2796 ) }
    apic_22 { pt3dadd( 118.629, 709.512, 91.2537, 0.3304 ) }
    apic_22 { pt3dadd( 112.342, 706.771, 92.8547, 0.4322 ) }
    apic_22 { pt3dadd( 109.989, 703.633, 92.8547, 0.4322 ) }
    apic_22 { pt3dadd( 104.015, 700.202, 92.321, 0.4322 ) }
    apic_22 { pt3dadd( 102.054, 698.242, 92.321, 0.3304 ) }
    apic_22 { pt3dadd( 98.7867, 696.282, 92.321, 0.2796 ) }
    apic_22 { pt3dadd( 89.7256, 692.087, 95.5228, 0.2288 ) }
    apic_22 { pt3dadd( 85.4035, 690.514, 95.5228, 0.2288 ) }
    apic_22 { pt3dadd( 79.6302, 687.952, 96.5902, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_12 (entry count 12/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 191.2, 710.004, 65.8, 0.6102 ) }
    apic_18 { pt3dadd( 185.836, 713.801, 64.5714, 0.5084 ) }
    apic_18 { pt3dadd( 183.741, 715.446, 64.5714, 0.4068 ) }
    apic_18 { pt3dadd( 180.659, 716.327, 64.5714, 0.305 ) }
    apic_18 { pt3dadd( 173.738, 717.338, 62.9703, 0.2542 ) }
    apic_18 { pt3dadd( 165.953, 718.558, 61.903, 0.2796 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 18/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 191.2, 710.004, 65.8, 0.6102 ) }
    apic_13 { pt3dadd( 190.807, 710.538, 66.0489, 0.6864 ) }
    apic_13 { pt3dadd( 190.336, 711.2, 66.08, 0.6864 ) }
    apic_13 { pt3dadd( 190.133, 712.0, 66.2978, 0.839 ) }
    apic_13 { pt3dadd( 190.133, 712.598, 66.64, 0.6864 ) }
    apic_13 { pt3dadd( 190.018, 713.411, 66.9511, 0.6102 ) }
    apic_13 { pt3dadd( 190.031, 714.187, 66.92, 0.5592 ) }
    apic_13 { pt3dadd( 190.133, 714.644, 67.1689, 0.4576 ) }
    apic_13 { pt3dadd( 190.26, 714.962, 66.0178, 0.305 ) }
    apic_13 { pt3dadd( 190.73, 715.204, 65.8, 0.305 ) }
    apic_13 { pt3dadd( 191.035, 715.381, 66.5778, 0.4322 ) }
    apic_13 { pt3dadd( 191.048, 715.547, 66.9822, 0.4576 ) }
    apic_13 { pt3dadd( 190.946, 716.042, 67.48, 0.4576 ) }
    apic_13 { pt3dadd( 190.705, 716.602, 67.48, 0.4068 ) }
    apic_13 { pt3dadd( 190.438, 716.843, 67.9157, 0.5084 ) }
    apic_13 { pt3dadd( 190.324, 717.517, 67.8532, 0.788 ) }
    apic_13 { pt3dadd( 190.426, 718.139, 67.2, 0.7626 ) }
    apic_13 { pt3dadd( 190.603, 718.991, 67.2, 0.8644 ) }
    apic_13 { pt3dadd( 190.743, 719.614, 67.76, 0.6102 ) }
    apic_13 { pt3dadd( 190.705, 720.059, 67.9778, 0.483 ) }
    apic_13 { pt3dadd( 190.489, 720.606, 68.0089, 0.6864 ) }
    apic_13 { pt3dadd( 190.133, 721.292, 66.92, 1.0168 ) }
    apic_13 { pt3dadd( 189.904, 722.105, 67.5111, 0.6864 ) }
    // Section: apic_20, id: apic_20, parent: apic_18 (entry count 41/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 165.953, 718.558, 61.903, 0.2796 ) }
    apic_20 { pt3dadd( 155.746, 719.686, 63.504, 0.2796 ) }
    apic_20 { pt3dadd( 151.595, 720.663, 63.504, 0.2542 ) }
    apic_20 { pt3dadd( 139.927, 722.929, 65.105, 0.3304 ) }
    apic_20 { pt3dadd( 134.907, 724.345, 65.105, 0.4068 ) }
    apic_20 { pt3dadd( 126.688, 726.299, 67.2395, 0.4322 ) }
    apic_20 { pt3dadd( 121.978, 728.035, 69.3742, 0.356 ) }
    apic_20 { pt3dadd( 117.397, 730.642, 72.0423, 0.2796 ) }
    // Section: apic_19, id: apic_19, parent: apic_18 (entry count 49/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 165.953, 718.558, 61.903, 0.2796 ) }
    apic_19 { pt3dadd( 161.746, 716.419, 57.6338, 0.2288 ) }
    apic_19 { pt3dadd( 157.472, 716.536, 57.6338, 0.2288 ) }
    apic_19 { pt3dadd( 152.438, 718.172, 57.6338, 0.2542 ) }
    apic_19 { pt3dadd( 149.271, 719.586, 57.6338, 0.305 ) }
    apic_19 { pt3dadd( 147.066, 722.739, 54.9657, 0.356 ) }
    apic_19 { pt3dadd( 144.239, 725.878, 52.831, 0.356 ) }
    apic_19 { pt3dadd( 140.018, 726.853, 50.6965, 0.3304 ) }
    apic_19 { pt3dadd( 138.283, 728.361, 50.6965, 0.305 ) }
    apic_19 { pt3dadd( 134.711, 727.931, 50.6965, 0.3814 ) }
    apic_19 { pt3dadd( 129.763, 729.114, 48.5618, 0.5084 ) }
    apic_19 { pt3dadd( 121.629, 731.897, 46.961, 0.6864 ) }
    apic_19 { pt3dadd( 120.231, 733.074, 46.961, 0.7118 ) }
    apic_19 { pt3dadd( 119.373, 734.573, 46.961, 0.6356 ) }
    apic_19 { pt3dadd( 116.214, 742.017, 45.36, 0.5338 ) }
    apic_19 { pt3dadd( 114.174, 744.8, 45.36, 0.5084 ) }
    apic_19 { pt3dadd( 112.136, 746.3, 45.36, 0.5592 ) }
    apic_19 { pt3dadd( 112.135, 748.009, 45.36, 0.5084 ) }
    apic_19 { pt3dadd( 114.086, 750.684, 43.2253, 0.4576 ) }
    apic_19 { pt3dadd( 114.838, 751.43, 43.2253, 0.356 ) }
    apic_19 { pt3dadd( 115.069, 754.846, 41.0908, 0.4068 ) }
    // Section: apic_17, id: apic_17, parent: apic_13 (entry count 70/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 189.904, 722.105, 67.5111, 0.6864 ) }
    apic_17 { pt3dadd( 190.299, 722.634, 65.6387, 0.305 ) }
    apic_17 { pt3dadd( 190.61, 725.095, 65.6387, 0.356 ) }
    apic_17 { pt3dadd( 192.693, 730.25, 70.4413, 0.4068 ) }
    apic_17 { pt3dadd( 192.247, 737.255, 74.177, 0.4576 ) }
    apic_17 { pt3dadd( 192.839, 739.861, 74.177, 0.3814 ) }
    apic_17 { pt3dadd( 195.24, 746.722, 78.9799, 0.3814 ) }
    apic_17 { pt3dadd( 197.239, 750.149, 78.9799, 0.4322 ) }
    apic_17 { pt3dadd( 198.148, 755.229, 78.9799, 0.5592 ) }
    apic_17 { pt3dadd( 200.019, 762.724, 81.648, 0.5592 ) }
    apic_17 { pt3dadd( 202.042, 768.068, 81.648, 0.4576 ) }
    apic_17 { pt3dadd( 203.805, 774.761, 83.7827, 0.356 ) }
    apic_17 { pt3dadd( 204.826, 777.913, 83.7827, 0.2796 ) }
    apic_17 { pt3dadd( 210.513, 784.298, 85.3835, 0.2542 ) }
    apic_17 { pt3dadd( 214.047, 788.786, 85.3835, 0.2288 ) }
    apic_17 { pt3dadd( 216.753, 793.965, 85.3835, 0.2288 ) }
    apic_17 { pt3dadd( 220.512, 796.922, 83.249, 0.2288 ) }
    apic_17 { pt3dadd( 220.971, 800.063, 83.249, 0.2288 ) }
    apic_17 { pt3dadd( 222.278, 804.833, 83.249, 0.2288 ) }
    apic_17 { pt3dadd( 226.592, 807.496, 83.249, 0.2288 ) }
    apic_17 { pt3dadd( 234.852, 813.517, 84.8498, 0.2288 ) }
    apic_17 { pt3dadd( 239.707, 817.112, 84.8498, 0.2288 ) }
    apic_17 { pt3dadd( 244.684, 820.427, 84.8498, 0.2796 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 93/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 189.904, 722.105, 67.5111, 0.6864 ) }
    apic_14 { pt3dadd( 189.739, 722.767, 68.2268, 0.788 ) }
    apic_14 { pt3dadd( 189.548, 723.237, 68.3511, 0.5084 ) }
    apic_14 { pt3dadd( 189.294, 723.885, 68.32, 0.4322 ) }
    apic_14 { pt3dadd( 189.103, 724.368, 68.6311, 0.483 ) }
    apic_14 { pt3dadd( 188.9, 724.826, 68.9732, 0.483 ) }
    apic_14 { pt3dadd( 188.506, 725.156, 69.16, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    apic_14 { pt3dadd( 188.201, 725.537, 69.16, 0.3814 ) }
    apic_14 { pt3dadd( 188.188, 725.868, 69.16, 0.4322 ) }
    apic_14 { pt3dadd( 188.29, 726.338, 69.16, 0.6356 ) }
    apic_14 { pt3dadd( 188.315, 726.999, 69.44, 0.7118 ) }
    apic_14 { pt3dadd( 188.531, 727.584, 69.44, 0.7626 ) }
    apic_14 { pt3dadd( 188.531, 728.347, 69.5332, 0.7118 ) }
    apic_14 { pt3dadd( 188.531, 728.728, 70.28, 0.5084 ) }
    apic_14 { pt3dadd( 188.531, 729.3, 70.0622, 0.3304 ) }
    apic_14 { pt3dadd( 188.531, 730.024, 70.7468, 0.3814 ) }
    apic_14 { pt3dadd( 188.531, 730.787, 70.84, 0.4068 ) }
    apic_14 { pt3dadd( 188.531, 731.474, 70.56, 0.3814 ) }
    apic_14 { pt3dadd( 188.531, 731.995, 70.4043, 0.2542 ) }
    apic_14 { pt3dadd( 188.531, 732.135, 70.9022, 0.2542 ) }
    apic_14 { pt3dadd( 188.531, 732.389, 71.68, 0.3814 ) }
    apic_14 { pt3dadd( 188.493, 732.809, 72.24, 0.3814 ) }
    apic_14 { pt3dadd( 188.417, 733.075, 72.24, 0.305 ) }
    apic_14 { pt3dadd( 188.417, 733.304, 71.96, 0.2542 ) }
    apic_14 { pt3dadd( 188.417, 733.571, 71.2132, 0.3814 ) }
    apic_14 { pt3dadd( 188.417, 734.143, 70.9332, 0.6356 ) }
    apic_14 { pt3dadd( 188.34, 734.6, 71.68, 0.6102 ) }
    apic_14 { pt3dadd( 188.213, 735.02, 71.96, 0.5084 ) }
    apic_14 { pt3dadd( 188.379, 735.744, 72.24, 0.6356 ) }
    apic_14 { pt3dadd( 188.074, 736.278, 72.24, 0.6102 ) }
    apic_14 { pt3dadd( 187.807, 736.813, 72.24, 0.7372 ) }
    apic_14 { pt3dadd( 187.387, 737.537, 71.68, 1.0424 ) }
    apic_14 { pt3dadd( 187.031, 738.402, 71.8668, 0.9914 ) }
    apic_14 { pt3dadd( 186.332, 739.444, 71.1511, 0.6102 ) }
    apic_14 { pt3dadd( 186.129, 739.939, 71.4, 0.5084 ) }
    apic_14 { pt3dadd( 185.862, 740.359, 71.12, 0.4576 ) }
    apic_14 { pt3dadd( 185.405, 741.045, 71.68, 0.4068 ) }
    apic_14 { pt3dadd( 185.214, 741.337, 72.4578, 0.3814 ) }
    apic_14 { pt3dadd( 184.947, 741.63, 73.0489, 0.3814 ) }
    apic_14 { pt3dadd( 184.87, 741.897, 73.8889, 0.305 ) }
    apic_14 { pt3dadd( 184.87, 742.215, 73.9511, 0.2542 ) }
    apic_14 { pt3dadd( 184.858, 742.456, 74.1689, 0.2288 ) }
    apic_14 { pt3dadd( 184.515, 742.672, 74.2, 0.2288 ) }
    apic_14 { pt3dadd( 184.234, 742.735, 74.2, 0.2288 ) }
    apic_14 { pt3dadd( 184.107, 742.951, 74.2, 0.2288 ) }
    apic_14 { pt3dadd( 183.943, 743.13, 74.2, 0.2542 ) }
    apic_14 { pt3dadd( 183.51, 743.142, 73.8889, 0.5084 ) }
    apic_14 { pt3dadd( 183.498, 743.142, 72.8, 0.2542 ) }
    apic_14 { pt3dadd( 183.498, 743.232, 71.8978, 0.5084 ) }
    apic_14 { pt3dadd( 183.269, 743.677, 72.0532, 0.5848 ) }
    apic_14 { pt3dadd( 182.926, 744.159, 73.9511, 0.5084 ) }
    apic_14 { pt3dadd( 182.684, 744.617, 74.2, 0.2796 ) }
    apic_14 { pt3dadd( 182.545, 744.833, 73.6711, 0.4576 ) }
    apic_14 { pt3dadd( 182.239, 745.316, 73.08, 0.5848 ) }
    apic_14 { pt3dadd( 182.227, 745.952, 73.1732, 0.5338 ) }
    apic_14 { pt3dadd( 181.705, 745.736, 73.64, 0.4576 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 49/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 181.705, 745.736, 73.64, 0.4576 ) }
    apic_16 { pt3dadd( 183.566, 748.242, 73.6434, 0.4322 ) }
    apic_16 { pt3dadd( 186.202, 750.418, 73.6434, 0.4576 ) }
    apic_16 { pt3dadd( 192.843, 757.185, 75.2441, 0.4576 ) }
    apic_16 { pt3dadd( 200.531, 759.837, 77.3788, 0.483 ) }
    apic_16 { pt3dadd( 205.351, 761.214, 77.3788, 0.4576 ) }
    apic_16 { pt3dadd( 210.059, 764.083, 77.3788, 0.4322 ) }
    apic_16 { pt3dadd( 216.972, 770.424, 79.5133, 0.356 ) }
    apic_16 { pt3dadd( 220.306, 775.138, 79.5133, 0.3304 ) }
    apic_16 { pt3dadd( 223.725, 780.263, 81.648, 0.2796 ) }
    apic_16 { pt3dadd( 230.976, 783.256, 81.648, 0.2542 ) }
    apic_16 { pt3dadd( 238.916, 789.239, 81.648, 0.2288 ) }
    apic_16 { pt3dadd( 241.83, 796.396, 84.3161, 0.2288 ) }
    apic_16 { pt3dadd( 244.284, 802.069, 86.4508, 0.2288 ) }
    apic_16 { pt3dadd( 251.364, 808.102, 88.5853, 0.2542 ) }
    apic_16 { pt3dadd( 254.022, 810.991, 88.5853, 0.3304 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 65/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 181.705, 745.736, 73.64, 0.4576 ) }
    apic_15 { pt3dadd( 181.197, 745.99, 74.48, 0.5848 ) }
    apic_15 { pt3dadd( 180.752, 746.219, 74.7911, 0.5084 ) }
    apic_15 { pt3dadd( 180.345, 746.473, 75.1332, 0.3814 ) }
    apic_15 { pt3dadd( 180.001, 746.701, 75.6932, 0.2796 ) }
    apic_15 { pt3dadd( 179.748, 746.943, 76.44, 0.2542 ) }
    apic_15 { pt3dadd( 179.595, 747.261, 76.9689, 0.3814 ) }
    apic_15 { pt3dadd( 179.113, 747.452, 77.0, 0.3814 ) }
    apic_15 { pt3dadd( 178.616, 747.871, 76.72, 0.2796 ) }
    apic_15 { pt3dadd( 178.35, 748.176, 76.44, 0.3814 ) }
    apic_15 { pt3dadd( 177.994, 748.405, 74.7911, 0.6356 ) }
    apic_15 { pt3dadd( 177.422, 749.079, 75.04, 0.8644 ) }
    apic_15 { pt3dadd( 177.129, 749.206, 73.7332, 0.5338 ) }
    apic_15 { pt3dadd( 176.977, 749.358, 74.6668, 0.5084 ) }
    apic_15 { pt3dadd( 176.735, 749.625, 75.6622, 0.661 ) }
    apic_15 { pt3dadd( 176.405, 749.981, 76.5022, 0.4576 ) }
    apic_15 { pt3dadd( 176.099, 750.4, 76.9689, 0.2542 ) }
    apic_15 { pt3dadd( 175.935, 750.566, 77.0, 0.2288 ) }
    apic_15 { pt3dadd( 175.579, 750.668, 77.0, 0.2288 ) }
    apic_15 { pt3dadd( 175.261, 750.959, 77.1868, 0.356 ) }
    apic_15 { pt3dadd( 175.032, 751.265, 77.28, 0.483 ) }
    apic_15 { pt3dadd( 174.549, 751.583, 77.28, 0.483 ) }
    apic_15 { pt3dadd( 174.219, 751.875, 76.2843, 0.483 ) }
    apic_15 { pt3dadd( 174.117, 752.294, 75.6, 0.4322 ) }
    apic_15 { pt3dadd( 174.117, 752.523, 75.6, 0.2542 ) }
    apic_15 { pt3dadd( 174.117, 752.752, 75.6, 0.2542 ) }
    apic_15 { pt3dadd( 173.977, 753.07, 75.6, 0.3814 ) }
    apic_15 { pt3dadd( 173.748, 753.299, 75.6, 0.3814 ) }
    apic_15 { pt3dadd( 173.291, 753.528, 75.6, 0.356 ) }
    apic_15 { pt3dadd( 173.202, 753.782, 75.6, 0.3814 ) }
    apic_15 { pt3dadd( 173.075, 754.303, 75.6932, 0.2796 ) }
    apic_15 { pt3dadd( 172.973, 754.239, 76.44, 0.3304 ) }
    apic_15 { pt3dadd( 173.075, 754.493, 77.4668, 0.6356 ) }
    apic_15 { pt3dadd( 172.846, 755.027, 77.28, 0.661 ) }
    apic_15 { pt3dadd( 172.413, 755.281, 77.28, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    apic_15 { pt3dadd( 171.918, 755.612, 77.3422, 0.5338 ) }
    apic_15 { pt3dadd( 171.714, 755.905, 76.0357, 0.3814 ) }
    apic_15 { pt3dadd( 171.804, 756.298, 75.88, 0.6864 ) }
    apic_15 { pt3dadd( 171.816, 757.099, 76.6889, 0.9406 ) }
    apic_15 { pt3dadd( 171.371, 757.875, 76.0978, 0.7118 ) }
    apic_15 { pt3dadd( 171.232, 758.561, 75.32, 0.6864 ) }
    apic_15 { pt3dadd( 171.371, 759.158, 75.04, 0.661 ) }
    apic_15 { pt3dadd( 171.867, 759.693, 75.04, 0.6356 ) }
    apic_15 { pt3dadd( 172.095, 760.481, 74.5111, 0.5592 ) }
    apic_15 { pt3dadd( 172.185, 760.862, 74.76, 0.3814 ) }
    apic_15 { pt3dadd( 172.249, 761.014, 74.7911, 0.2542 ) }
    apic_15 { pt3dadd( 172.299, 761.218, 75.0089, 0.2542 ) }
    apic_15 { pt3dadd( 172.617, 761.332, 75.0089, 0.2542 ) }
    apic_15 { pt3dadd( 172.744, 761.382, 74.6043, 0.2288 ) }
    apic_15 { pt3dadd( 172.871, 761.663, 74.48, 0.2288 ) }
    apic_15 { pt3dadd( 173.151, 761.726, 74.48, 0.2288 ) }
    apic_15 { pt3dadd( 173.202, 762.018, 74.48, 0.2288 ) }
    apic_15 { pt3dadd( 173.202, 762.362, 74.48, 0.2542 ) }
    apic_15 { pt3dadd( 173.495, 762.641, 74.48, 0.305 ) }
    apic_15 { pt3dadd( 173.647, 762.908, 74.5732, 0.5084 ) }
    apic_15 { pt3dadd( 174.002, 763.277, 74.76, 0.6102 ) }
    apic_15 { pt3dadd( 174.231, 763.836, 75.2889, 0.483 ) }
    apic_15 { pt3dadd( 174.002, 764.294, 74.7289, 0.661 ) }
    apic_15 { pt3dadd( 173.965, 764.764, 74.3868, 0.4068 ) }
    apic_15 { pt3dadd( 173.774, 765.095, 74.4489, 0.4068 ) }
    apic_15 { pt3dadd( 173.52, 765.527, 73.8889, 0.6102 ) }
    apic_15 { pt3dadd( 172.896, 765.794, 73.1732, 0.4068 ) }
    apic_15 { pt3dadd( 172.744, 766.251, 73.64, 0.4576 ) }
    apic_15 { pt3dadd( 172.553, 766.48, 74.9468, 0.4322 ) }
    apic_15 { pt3dadd( 172.617, 766.671, 75.6622, 0.3814 ) }
    apic_15 { pt3dadd( 172.274, 767.039, 75.88, 0.3304 ) }
    apic_15 { pt3dadd( 172.007, 767.268, 76.0668, 0.356 ) }
    apic_15 { pt3dadd( 171.829, 767.395, 76.16, 0.2542 ) }
    apic_15 { pt3dadd( 171.714, 767.701, 75.7868, 0.356 ) }
    apic_15 { pt3dadd( 171.486, 767.955, 73.6089, 0.5848 ) }
    apic_15 { pt3dadd( 171.486, 768.056, 71.8978, 0.5848 ) }
    apic_15 { pt3dadd( 171.232, 768.4, 71.68, 0.3814 ) }
    apic_15 { pt3dadd( 171.142, 768.755, 71.6489, 0.4322 ) }
    apic_15 { pt3dadd( 171.142, 768.972, 71.0578, 0.4576 ) }
    apic_15 { pt3dadd( 171.003, 769.429, 70.84, 0.5338 ) }
    apic_15 { pt3dadd( 168.699, 770.72, 68.8405, 0.3814 ) }
    apic_15 { pt3dadd( 167.57, 771.892, 68.8405, 0.305 ) }
    apic_15 { pt3dadd( 165.946, 772.207, 67.2395, 0.305 ) }
    apic_15 { pt3dadd( 161.694, 769.954, 65.6387, 0.3814 ) }
    apic_15 { pt3dadd( 158.76, 767.665, 64.0377, 0.4068 ) }
    apic_15 { pt3dadd( 156.148, 766.64, 64.0377, 0.3814 ) }
    apic_15 { pt3dadd( 151.752, 764.842, 61.903, 0.305 ) }
    apic_15 { pt3dadd( 148.089, 764.335, 61.903, 0.2542 ) }
    apic_15 { pt3dadd( 144.799, 764.319, 61.903, 0.2288 ) }
    apic_15 { pt3dadd( 140.514, 765.63, 59.7685, 0.2288 ) }
    apic_15 { pt3dadd( 134.893, 768.006, 58.7012, 0.2796 ) }
    apic_15 { pt3dadd( 131.759, 769.139, 56.5667, 0.4068 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_184, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_184 = new SectionList()
    soma_0 ModelViewParmSubset_184.append()
    axon_0 ModelViewParmSubset_184.append()
    axon_1 ModelViewParmSubset_184.append()

    // Group: {name=ModelViewParmSubset_185, groups=[], sections=[dend_46, dend_37, dend_32, dend_29, dend_26, dend_17, dend_8, dend_3, dend_0, apic_0, dend_48, dend_47, dend_41, dend_38, dend_34, dend_33, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_16, dend_9, dend_7, dend_4, dend_2, dend_1, apic_8, apic_1, dend_50, dend_49, dend_43, dend_42, dend_40, dend_39, dend_36, dend_35, dend_23, dend_22, dend_20, dend_19, dend_11, dend_10, dend_6, dend_5, apic_24, apic_9, apic_7, apic_2, dend_52, dend_51, dend_45, dend_44, dend_25, dend_24, dend_13, dend_12, apic_26, apic_25, apic_11, apic_10, apic_6, apic_3, dend_15, dend_14, apic_21, apic_12, apic_5, apic_4, apic_23, apic_22, apic_18, apic_13, apic_20, apic_19, apic_17, apic_14, apic_16, apic_15]}
    ModelViewParmSubset_185 = new SectionList()
    dend_46 ModelViewParmSubset_185.append()
    dend_37 ModelViewParmSubset_185.append()
    dend_32 ModelViewParmSubset_185.append()
    dend_29 ModelViewParmSubset_185.append()
    dend_26 ModelViewParmSubset_185.append()
    dend_17 ModelViewParmSubset_185.append()
    dend_8 ModelViewParmSubset_185.append()
    dend_3 ModelViewParmSubset_185.append()
    dend_0 ModelViewParmSubset_185.append()
    apic_0 ModelViewParmSubset_185.append()
    dend_48 ModelViewParmSubset_185.append()
    dend_47 ModelViewParmSubset_185.append()
    dend_41 ModelViewParmSubset_185.append()
    dend_38 ModelViewParmSubset_185.append()
    dend_34 ModelViewParmSubset_185.append()
    dend_33 ModelViewParmSubset_185.append()
    dend_31 ModelViewParmSubset_185.append()
    dend_30 ModelViewParmSubset_185.append()
    dend_28 ModelViewParmSubset_185.append()
    dend_27 ModelViewParmSubset_185.append()
    dend_21 ModelViewParmSubset_185.append()
    dend_18 ModelViewParmSubset_185.append()
    dend_16 ModelViewParmSubset_185.append()
    dend_9 ModelViewParmSubset_185.append()
    dend_7 ModelViewParmSubset_185.append()
    dend_4 ModelViewParmSubset_185.append()
    dend_2 ModelViewParmSubset_185.append()
    dend_1 ModelViewParmSubset_185.append()
    apic_8 ModelViewParmSubset_185.append()
    apic_1 ModelViewParmSubset_185.append()
    dend_50 ModelViewParmSubset_185.append()
    dend_49 ModelViewParmSubset_185.append()
    dend_43 ModelViewParmSubset_185.append()
    dend_42 ModelViewParmSubset_185.append()
    dend_40 ModelViewParmSubset_185.append()
    dend_39 ModelViewParmSubset_185.append()
    dend_36 ModelViewParmSubset_185.append()
    dend_35 ModelViewParmSubset_185.append()
    dend_23 ModelViewParmSubset_185.append()
    dend_22 ModelViewParmSubset_185.append()
    dend_20 ModelViewParmSubset_185.append()
    dend_19 ModelViewParmSubset_185.append()
    dend_11 ModelViewParmSubset_185.append()
    dend_10 ModelViewParmSubset_185.append()
    dend_6 ModelViewParmSubset_185.append()
    dend_5 ModelViewParmSubset_185.append()
    apic_24 ModelViewParmSubset_185.append()
    apic_9 ModelViewParmSubset_185.append()
    apic_7 ModelViewParmSubset_185.append()
    apic_2 ModelViewParmSubset_185.append()
    dend_52 ModelViewParmSubset_185.append()
    dend_51 ModelViewParmSubset_185.append()
    dend_45 ModelViewParmSubset_185.append()
    dend_44 ModelViewParmSubset_185.append()
    dend_25 ModelViewParmSubset_185.append()
    dend_24 ModelViewParmSubset_185.append()
    dend_13 ModelViewParmSubset_185.append()
    dend_12 ModelViewParmSubset_185.append()
    apic_26 ModelViewParmSubset_185.append()
    apic_25 ModelViewParmSubset_185.append()
    apic_11 ModelViewParmSubset_185.append()
    apic_10 ModelViewParmSubset_185.append()
    apic_6 ModelViewParmSubset_185.append()
    apic_3 ModelViewParmSubset_185.append()
    dend_15 ModelViewParmSubset_185.append()
    dend_14 ModelViewParmSubset_185.append()
    apic_21 ModelViewParmSubset_185.append()
    apic_12 ModelViewParmSubset_185.append()
    apic_5 ModelViewParmSubset_185.append()
    apic_4 ModelViewParmSubset_185.append()
    apic_23 ModelViewParmSubset_185.append()
    apic_22 ModelViewParmSubset_185.append()
    apic_18 ModelViewParmSubset_185.append()
    apic_13 ModelViewParmSubset_185.append()
    apic_20 ModelViewParmSubset_185.append()
    apic_19 ModelViewParmSubset_185.append()
    apic_17 ModelViewParmSubset_185.append()
    apic_14 ModelViewParmSubset_185.append()
    apic_16 ModelViewParmSubset_185.append()
    apic_15 ModelViewParmSubset_185.append()

    // Group: {name=dend, groups=[], sections=[dend_46, dend_37, dend_32, dend_29, dend_26, dend_17, dend_8, dend_3, dend_0, dend_48, dend_47, dend_41, dend_38, dend_34, dend_33, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_16, dend_9, dend_7, dend_4, dend_2, dend_1, dend_50, dend_49, dend_43, dend_42, dend_40, dend_39, dend_36, dend_35, dend_23, dend_22, dend_20, dend_19, dend_11, dend_10, dend_6, dend_5, dend_52, dend_51, dend_45, dend_44, dend_25, dend_24, dend_13, dend_12, dend_15, dend_14]}
    dend = new SectionList()
    dend_46 dend.append()
    dend_37 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_26 dend.append()
    dend_17 dend.append()
    dend_8 dend.append()
    dend_3 dend.append()
    dend_0 dend.append()
    dend_48 dend.append()
    dend_47 dend.append()
    dend_41 dend.append()
    dend_38 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_31 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_21 dend.append()
    dend_18 dend.append()
    dend_16 dend.append()
    dend_9 dend.append()
    dend_7 dend.append()
    dend_4 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_50 dend.append()
    dend_49 dend.append()
    dend_43 dend.append()
    dend_42 dend.append()
    dend_40 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_52 dend.append()
    dend_51 dend.append()
    dend_45 dend.append()
    dend_44 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_8, apic_1, apic_24, apic_9, apic_7, apic_2, apic_26, apic_25, apic_11, apic_10, apic_6, apic_3, apic_21, apic_12, apic_5, apic_4, apic_23, apic_22, apic_18, apic_13, apic_20, apic_19, apic_17, apic_14, apic_16, apic_15]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_8 apic.append()
    apic_1 apic.append()
    apic_24 apic.append()
    apic_9 apic.append()
    apic_7 apic.append()
    apic_2 apic.append()
    apic_26 apic.append()
    apic_25 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()
    apic_6 apic.append()
    apic_3 apic.append()
    apic_21 apic.append()
    apic_12 apic.append()
    apic_5 apic.append()
    apic_4 apic.append()
    apic_23 apic.append()
    apic_22 apic.append()
    apic_18 apic.append()
    apic_13 apic.append()
    apic_20 apic.append()
    apic_19 apic.append()
    apic_17 apic.append()
    apic_14 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_8985, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_8985 = new SectionList()
    soma_0 OneSecGrp_SectionRef_8985.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_8, apic_8, apic_8, apic_8, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_18, apic_18, apic_18, apic_18, apic_18, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 2.14  // units: uF/cm2
    forsec dend cm = 2.14  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 164.37  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 6.7283836E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 3.5441923E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.5744796  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 5.9488895E-5  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.02003826  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 7.31997E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.014248451  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.045994937  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.534947E-4  // units: S cm-2
        e_pas_nml2 = -91.00126  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 4.863672E-4  // units: S cm-2
        e_pas_nml2 = -91.00126  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 9.172918E-6  // units: S cm-2
        e_pas_nml2 = -91.00126  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 5.7642636E-5  // units: S cm-2
        e_pas_nml2 = -91.00126  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 3.2741745E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0068450468  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 3
    dend_47 nseg = 5
    dend_33 nseg = 9
    dend_30 nseg = 3
    dend_16 nseg = 5
    dend_7 nseg = 7
    dend_4 nseg = 3
    dend_1 nseg = 5
    dend_49 nseg = 5
    dend_43 nseg = 3
    dend_42 nseg = 5
    dend_40 nseg = 5
    dend_39 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 3
    dend_22 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 3
    dend_10 nseg = 5
    dend_6 nseg = 5
    dend_5 nseg = 3
    apic_7 nseg = 3
    dend_51 nseg = 7
    dend_44 nseg = 3
    dend_12 nseg = 3
    apic_11 nseg = 23
    apic_10 nseg = 5
    apic_6 nseg = 11
    apic_3 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 5
    apic_23 nseg = 3
    apic_22 nseg = 5
    apic_20 nseg = 3
    apic_19 nseg = 5
    apic_17 nseg = 7
    apic_16 nseg = 5
    apic_15 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473863578


