// Cell: bAC217_L23_DBC_393cc5cca5_0_0
/*
{
  "id" : "bAC217_L23_DBC_393cc5cca5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.250943, 5.15502, -0.455322, 3.76408", "-0.287266, 4.50998, -0.403251, 6.96761", "-0.32359, 3.86493, -0.351181, 8.3161", "-0.359913, 3.21989, -0.299111, 9.45043", "-0.396236, 2.57484, -0.247041, 9.98693", "-0.43256, 1.9298, -0.194971, 10.312", "-0.468883, 1.28475, -0.142901, 10.5326", "-0.505206, 0.639706, -0.0908309, 10.6917", "-0.54153, -0.00533917, -0.0387608, 10.8509", "-0.577853, -0.650384, 0.0133093, 11.01", "-0.614177, -1.29543, 0.0653794, 11.1688", "-0.6505, -1.94047, 0.11745, 11.0157", "-0.686823, -2.58552, 0.16952, 10.5759", "-0.723147, -3.23057, 0.22159, 10.1362", "-0.75947, -3.87561, 0.27366, 9.69643", "-0.795793, -4.52066, 0.32573, 9.25667", "-0.832117, -5.1657, 0.3778, 8.77464", "-0.86844, -5.81075, 0.42987, 7.84202", "-0.904764, -6.45579, 0.48194, 6.36994", "-0.941087, -7.10084, 0.53401, 4.84705", "-0.97741, -7.74588, 0.58608, 2.62404" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.32706, 4.28382, 0.284896, 0.83", "-4.73107, 5.31349, 0.284896, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.73706, -4.26468, 3.5949, 0.28", "-7.24509, -5.28218, 4.15964, 0.28", "-8.65023, -6.17822, 4.61754, 1.38", "-10.9716, -7.70531, 5.33465, 0.83", "-13.9998, -9.69735, 6.2701, 0.28", "-15.4442, -10.6476, 6.71631, 1.38", "-17.7507, -12.1649, 7.42884, 0.28", "-20.0097, -13.635, 8.15392, 0.28", "-21.7598, -14.728, 8.69786, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.50706, -7.16543, 2.1449, 0.55", "-4.97204, -11.6891, 3.0109, 0.55", "-5.14079, -13.1329, 3.28834, 0.83", "-5.37556, -14.8708, 3.60787, 0.55", "-6.03893, -19.0817, 4.53549, 1.11", "-7.12367, -25.8067, 5.9056, 0.28", "-7.41127, -27.5946, 6.20252, 0.83", "-7.64831, -29.0337, 6.40667, 0.28", "-8.05693, -31.5081, 6.64613, 0.83", "-8.83142, -36.4763, 6.90484, 0.28", "-9.36571, -39.7276, 6.89417, 0.55", "-9.86974, -43.0662, 6.67505, 0.28", "-10.0591, -44.4985, 6.53475, 0.55", "-10.2551, -46.4198, 6.27636, 0.28", "-10.4772, -50.1205, 5.48966, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "4.26294, 2.79757, 2.6749, 0.28", "6.51288, 6.18445, 2.6749, 0.28", "7.55711, 7.99907, 2.73005, 0.83", "8.96114, 10.5914, 2.84117, 0.28", "10.0216, 12.7088, 2.9859, 1.11", "11.6471, 16.1432, 3.27013, 0.28", "12.6992, 18.4198, 3.51747, 0.83", "14.3983, 22.5221, 4.07892, 0.28", "15.1094, 24.3452, 4.35717, 0.55", "16.3378, 27.683, 4.97779, 0.28", "16.8681, 29.1455, 5.28396, 0.83", "18.212, 32.7177, 6.22682, 0.55", "19.77, 36.6796, 7.42847, 0.28", "20.4527, 38.3662, 7.98956, 0.83", "21.781, 41.6863, 9.15151, 0.28", "22.3427, 43.1022, 9.62964, 0.83", "23.3826, 45.9356, 10.5792, 0.28", "23.6879, 46.8386, 10.838, 0.55", "23.991, 47.7541, 11.0594, 0.28", "24.4972, 49.2593, 11.2955, 0.55", "25.3242, 51.7255, 11.4672, 0.28", "25.6843, 52.8079, 11.4878, 0.55", "26.4745, 55.2547, 11.3754, 0.28", "26.7964, 56.2029, 11.3376, 0.55", "27.6291, 58.3997, 11.2778, 0.55", "28.4983, 60.4355, 11.2796, 0.28", "29.4665, 62.5034, 11.4094, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.78294, -6.96043, -1.9751, 0.55", "4.41763, -8.28344, -2.38389, 0.55", "7.12262, -10.4727, -3.06031, 1.11", "13.8249, -15.8971, -4.73633, 0.28", "15.3461, -17.1282, -5.11672, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.97741, -7.74588, 0.58608, 0.55", "-1.82074, -22.7222, 0.58608, 0.55", "-2.66408, -37.6984, 0.58608, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-4.73107, 5.31349, 0.284896, 0.28", "-6.51981, 7.26921, 0.856046, 0.28", "-7.78205, 8.64927, 1.25908, 0.55", "-8.77849, 9.7387, 1.57725, 0.28", "-9.77367, 10.8268, 1.89501, 0.55", "-12.3139, 13.6041, 2.70609, 0.28", "-13.3324, 14.7177, 3.0313, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.73107, 5.31349, 0.284896, 0.28", "-4.51699, 7.1698, -0.0716842, 0.28", "-4.26732, 8.82935, -0.453207, 0.83", "-3.66309, 12.236, -1.23219, 0.28", "-3.52253, 12.938, -1.41248, 0.55", "-3.1065, 14.7586, -1.89124, 0.28", "-2.8193, 15.8956, -2.20771, 0.83", "-2.00306, 18.7031, -3.07009, 0.28", "-1.5623, 20.0197, -3.5205, 0.55", "-0.38812, 23.14, -4.68283, 0.28", "0.0795548, 24.3521, -5.11534, 0.83", "0.666507, 25.8277, -5.60229, 0.28", "0.841581, 26.2946, -5.76732, 0.55", "1.26435, 27.5008, -6.18514, 0.28", "1.59533, 28.4096, -6.47667, 0.83", "2.49296, 30.9844, -7.17127, 0.28", "2.92346, 32.2839, -7.49181, 0.83", "3.73481, 34.8081, -8.05488, 0.28", "4.32725, 36.678, -8.45028, 0.28", "4.94578, 38.5454, -8.80913, 0.83", "5.32164, 39.6217, -9.04083, 0.55", "5.42664, 39.8924, -9.10015, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-21.7598, -14.728, 8.69786, 0.28", "-23.4973, -17.4667, 8.65426, 0.28", "-24.1051, -18.5797, 8.66987, 0.55", "-25.4042, -21.1823, 8.77935, 0.28", "-25.9857, -22.3472, 8.82835, 0.83", "-27.7823, -25.9466, 8.97976, 0.28", "-28.585, -27.5547, 9.04741, 0.55", "-29.4837, -29.7603, 9.1294, 0.28", "-30.097, -31.4945, 9.17273, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-21.7598, -14.728, 8.69786, 0.28", "-21.1148, -16.7904, 8.54655, 0.28", "-20.6464, -18.6251, 8.40657, 0.55", "-19.9497, -22.1583, 8.14224, 0.28", "-19.8683, -22.5715, 8.11133, 0.55", "-19.515, -24.363, 7.97729, 0.28", "-19.3336, -25.2831, 7.90846, 0.55", "-19.2021, -26.1672, 7.82652, 0.28", "-19.2172, -27.0929, 7.69491, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-10.4772, -50.1205, 5.48966, 0.28", "-8.24727, -52.7184, 4.90588, 0.28", "-7.42565, -53.9535, 4.71978, 0.55", "-6.78848, -55.2133, 4.62457, 0.28", "-6.34484, -56.2426, 4.57385, 0.55", "-5.78371, -57.8348, 4.54061, 0.28", "-5.55925, -58.5604, 4.54624, 0.83", "-4.99967, -61.108, 4.64404, 0.28", "-4.2788, -65.1998, 4.91795, 0.55", "-4.03075, -66.8395, 5.05604, 0.55", "-3.65064, -69.4924, 5.1236, 0.28", "-3.48758, -70.7448, 5.11723, 0.55", "-3.26403, -72.6267, 5.02689, 0.28", "-3.02632, -74.785, 4.85548, 0.55", "-2.63765, -78.5353, 4.62314, 1.11", "-2.14659, -82.9342, 4.43712, 0.28", "-2.01971, -84.0293, 4.38121, 0.55", "-1.63056, -87.6098, 4.20356, 0.28", "-1.40443, -90.6457, 3.92247, 1.11", "-1.21875, -94.2952, 3.53334, 0.28", "-1.16003, -97.2848, 3.15, 0.83", "-1.14927, -101.386, 2.62713, 0.28", "-1.09984, -103.219, 2.28129, 1.11", "-0.811761, -109.261, 0.81043, 0.28", "-0.762613, -110.336, 0.515615, 0.55", "-0.684429, -112.346, -0.0662446, 0.28", "-0.601666, -113.543, -0.403207, 0.55", "-0.00522642, -119.21, -1.80963, 0.28", "0.436438, -122.529, -2.52074, 1.11", "1.23283, -127.168, -3.28929, 0.28", "1.46618, -128.453, -3.48645, 0.55", "2.33134, -132.971, -4.09843, 0.28", "2.69049, -134.846, -4.32316, 0.55", "3.20274, -137.47, -4.53216, 0.28", "3.55029, -139.126, -4.63786, 0.83", "4.40643, -142.785, -4.75694, 0.28", "4.68858, -144.077, -4.76607, 0.55", "5.43297, -148.263, -4.61817, 0.28", "5.72461, -150.006, -4.5556, 0.55", "6.48789, -154.8, -4.35604, 0.28", "6.62815, -155.887, -4.3012, 0.55", "6.69489, -156.528, -4.25907, 0.55", "6.90452, -159.256, -4.03703, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-10.4772, -50.1205, 5.48966, 0.55", "-11.9547, -51.955, 5.84059, 0.55", "-13.418, -53.7342, 6.18186, 0.28", "-13.9446, -54.4481, 6.31967, 0.55", "-17.0685, -59.0157, 7.24719, 0.28", "-17.5664, -59.7594, 7.35458, 0.83", "-18.904, -61.7969, 7.57279, 0.28", "-19.4653, -62.7213, 7.62325, 0.55", "-23.036, -69.2028, 7.78611, 0.28", "-23.5618, -70.4536, 7.71865, 0.55", "-24.543, -73.7885, 7.3313, 0.28", "-24.7329, -74.6355, 7.20597, 0.55", "-25.0429, -76.6799, 6.86792, 0.28", "-25.1846, -77.4343, 6.72727, 0.55", "-26.7655, -85.4194, 5.16125, 0.28", "-26.9751, -86.2883, 5.01001, 0.55", "-27.4456, -87.9619, 4.71295, 0.28", "-28.1071, -89.9616, 4.31008, 0.55", "-31.1281, -97.8509, 2.68169, 0.28", "-31.6455, -99.0588, 2.39634, 0.83", "-32.4092, -100.621, 1.98963, 0.83", "-34.4211, -104.695, 0.724694, 0.28", "-34.7965, -105.46, 0.446569, 0.55", "-35.4718, -106.966, -0.122708, 0.28", "-36.353, -109.678, -1.06379, 0.55", "-36.5849, -110.478, -1.25193, 0.55", "-37.2898, -113.603, -1.63287, 0.28", "-37.4321, -114.504, -1.68836, 0.55", "-37.8393, -117.767, -1.88393, 0.28", "-37.9955, -119.234, -1.97027, 0.83", "-38.2949, -122.763, -2.06277, 0.28", "-38.4863, -125.424, -2.12935, 0.83", "-38.6962, -130.21, -2.2498, 0.28", "-38.7333, -131.143, -2.28683, 0.55", "-38.817, -133.4, -2.41429, 0.28", "-38.8475, -133.985, -2.43152, 0.55", "-38.9482, -135.421, -2.42365, 0.28", "-39.0274, -136.329, -2.36684, 0.55", "-39.1508, -137.555, -2.26126, 0.28", "-39.3163, -139.267, -2.12527, 1.11", "-39.8473, -144.228, -1.81098, 0.28", "-39.9819, -145.387, -1.75682, 0.83", "-40.2032, -147.184, -1.71444, 0.83", "-40.9768, -152.925, -1.68245, 0.28", "-41.0845, -153.59, -1.70157, 0.55", "-41.4443, -155.516, -1.81464, 0.28", "-41.6527, -156.374, -1.90655, 0.55", "-42.1945, -158.393, -2.17925, 0.28", "-42.6371, -159.761, -2.41033, 0.83", "-43.4298, -161.801, -2.81716, 0.28", "-43.5389, -162.062, -2.89606, 0.55", "-44.2995, -163.96, -3.60464, 0.28", "-44.5144, -164.522, -3.8377, 0.55", "-44.8644, -165.486, -4.29093, 0.55", "-45.2074, -166.735, -5.07326, 0.83", "-45.751, -169.631, -7.14897, 0.28", "-45.8377, -170.276, -8.15913, 0.55", "-45.837, -170.746, -9.40183, 0.28", "-45.7908, -171.026, -10.3687, 0.55", "-45.5165, -171.822, -13.6392, 0.28", "-45.4541, -171.95, -14.2516, 0.83", "-44.5333, -173.5, -22.6153, 0.28", "-44.4796, -173.61, -23.2284, 0.55", "-44.2821, -174.124, -26.0464, 0.28", "-44.2385, -174.421, -27.2797, 0.55", "-44.2575, -174.815, -28.3309, 0.28", "-44.293, -175.194, -29.0722, 0.55", "-44.4665, -176.479, -30.198, 0.28", "-44.6021, -177.152, -30.7664, 0.55", "-45.2132, -179.3, -32.3596, 0.28", "-45.6739, -180.925, -33.5173, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "29.4665, 62.5034, 11.4094, 0.28", "27.3821, 65.1306, 10.9094, 0.28", "26.6621, 66.1036, 10.6988, 0.55", "23.5599, 70.5791, 9.69736, 0.28", "22.7336, 71.8788, 9.39667, 0.55", "18.4509, 79.1011, 7.70638, 0.28", "17.1646, 81.4074, 7.17339, 0.83", "15.6066, 84.5763, 6.46126, 0.28", "14.8699, 86.282, 6.02496, 0.55", "14.2449, 88.3108, 5.45464, 0.28", "14.1187, 88.977, 5.24057, 0.55", "14.1775, 91.1286, 4.40289, 0.28", "14.3028, 92.5649, 3.79343, 0.55", "14.539, 95.5161, 2.68153, 0.28", "14.6564, 97.5844, 1.96068, 0.83", "14.7778, 99.0402, 1.55704, 0.83", "15.175, 101.862, 0.943453, 0.28", "15.3683, 102.998, 0.714865, 0.55", "16.4094, 108.661, -0.242236, 0.28", "16.5531, 109.444, -0.312962, 0.55", "17.4798, 114.547, -0.552109, 0.28", "17.9056, 116.501, -0.56371, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "29.4665, 62.5034, 11.4094, 0.28", "30.4678, 65.339, 11.608, 0.28", "30.566, 65.6981, 11.6507, 0.55", "31.4518, 69.7401, 12.2454, 0.28", "31.6906, 71.132, 12.5138, 0.55", "32.1451, 74.405, 13.216, 0.28", "32.285, 75.5667, 13.483, 0.55", "32.3773, 77.5173, 14.0287, 0.28", "32.4157, 79.6708, 14.5878, 0.83", "32.3588, 82.5057, 15.3006, 0.28", "32.3469, 83.0518, 15.4125, 0.55", "32.309, 85.0309, 15.7668, 0.28", "32.2696, 86.4404, 15.9799, 0.83", "32.1203, 91.4928, 16.5784, 0.28", "32.076, 92.6754, 16.6807, 0.55", "31.9806, 94.6578, 16.8085, 0.28", "31.9474, 95.2645, 16.8499, 0.55", "31.6384, 99.1926, 17.1178, 0.28", "31.6088, 99.5313, 17.1419, 0.55", "31.2874, 102.445, 17.3677, 0.28", "31.2648, 103.186, 17.4059, 0.55", "31.3328, 104.714, 17.4728, 0.28", "31.4402, 106.119, 17.5191, 0.83", "31.7971, 108.789, 17.573, 0.28", "31.8754, 109.263, 17.5797, 0.83", "32.8125, 113.553, 17.575, 0.28", "33.2142, 115.057, 17.5339, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "15.3461, -17.1282, -5.11672, 0.28", "16.3282, -19.2998, -5.48649, 0.28", "16.8616, -20.4793, -5.68733, 0.55", "17.6532, -22.2296, -5.98536, 0.28", "18.6275, -24.3839, -6.35218, 0.83", "19.6893, -26.7318, -6.75197, 0.28", "20.3227, -28.1323, -6.99043, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.3461, -17.1282, -5.11672, 0.28", "18.0858, -18.2281, -5.26612, 0.28", "19.7054, -18.8783, -5.35444, 0.83", "22.7286, -20.0921, -5.51929, 0.28", "24.7992, -20.9233, -5.6322, 1.11", "27.1973, -21.8861, -5.76297, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.66408, -37.6984, 0.58608, 0.28", "-3.50741, -52.6747, 0.58608, 0.28", "-4.35075, -67.651, 0.58608, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-13.3324, 14.7177, 3.0313, 0.28", "-15.4188, 15.0378, 3.8544, 0.28", "-16.6572, 15.2532, 4.37847, 0.55", "-17.7507, 15.4307, 4.84876, 0.28", "-19.472, 15.695, 5.63593, 0.83", "-21.3619, 15.9229, 6.50506, 0.28", "-22.8381, 16.0661, 7.18109, 0.28", "-24.4837, 16.1993, 7.97658, 0.83", "-26.0408, 16.3052, 8.74459, 0.28", "-27.3396, 16.3751, 9.37807, 0.83", "-30.702, 16.5109, 11.0124, 0.28", "-32.8064, 16.5906, 11.9591, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-13.3324, 14.7177, 3.0313, 0.28", "-12.8278, 17.7506, 1.93283, 0.28", "-12.5306, 19.5374, 1.28573, 0.28", "-12.4065, 20.2834, 1.01555, 0.55", "-11.7374, 24.305, -0.440957, 0.28", "-11.4089, 26.2799, -1.15621, 0.83", "-10.7886, 30.0087, -2.50668, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "5.42664, 39.8924, -9.10015, 0.28", "6.59805, 45.6929, -9.78575, 0.28", "6.84722, 46.9135, -9.95112, 0.55", "7.19266, 48.5221, -10.1761, 0.28", "7.46302, 49.7869, -10.3538, 0.55", "8.58087, 55.0161, -11.0883, 0.28", "9.3703, 58.709, -11.607, 0.83", "10.2939, 62.9754, -12.0464, 0.28", "10.6586, 64.6356, -12.2332, 0.55", "10.7586, 65.0755, -12.2866, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "5.42664, 39.8924, -9.10015, 0.28", "9.27028, 45.2288, -12.6662, 0.28", "11.033, 47.7401, -14.3171, 0.55", "13.4969, 51.1839, -16.5486, 0.28", "13.8945, 51.7315, -16.9486, 0.55", "16.6325, 55.539, -19.8291, 0.28", "17.6094, 56.9347, -20.9958, 0.55", "19.3346, 59.6658, -23.3243, 0.28", "19.858, 60.5541, -24.1978, 0.55", "22.1721, 64.7288, -28.7085, 0.28", "22.4796, 65.443, -29.9353, 0.83", "23.0571, 67.4373, -34.712, 0.28", "23.199, 68.0228, -36.4581, 0.55", "23.3682, 68.6377, -38.8642, 0.28", "23.5914, 69.1562, -41.4603, 0.55", "25.3192, 71.5196, -58.0363, 0.28", "25.5108, 71.6486, -59.3795, 0.55", "26.3141, 71.8212, -63.1853, 0.28", "27.1712, 71.7636, -65.9683, 0.55", "29.0625, 71.4311, -70.2076, 0.28", "29.9878, 71.1819, -71.6192, 0.55", "31.6125, 70.6995, -73.0925, 0.28", "34.2887, 69.7197, -75.5099, 0.55", "38.5674, 67.8508, -79.3035, 0.28", "40.167, 67.0364, -80.7298, 0.55", "42.0821, 65.9571, -82.4291, 0.28", "43.7596, 64.9765, -83.9623, 0.55", "46.3698, 63.4511, -86.5706, 0.28", "47.776, 62.6288, -88.187, 0.83", "52.1603, 60.2457, -93.5818, 0.28", "52.9912, 59.9435, -94.5648, 0.55", "55.0295, 59.5245, -96.8902, 0.28", "56.9437, 59.3991, -99.0325, 0.55", "59.5757, 59.5928, -102.069, 0.28", "60.6826, 59.8319, -103.548, 0.55", "67.7416, 62.2424, -113.689, 0.28", "68.9172, 62.6596, -115.5, 0.55", "72.3366, 63.908, -121.016, 0.28", "73.9813, 64.5305, -123.688, 0.55", "77.9393, 66.1732, -130.378, 0.28", "79.0261, 66.6809, -132.507, 0.55", "80.1236, 67.4411, -135.955, 0.28", "80.8162, 67.7852, -138.213, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-30.097, -31.4945, 9.17273, 0.28", "-27.5298, -35.8149, 10.6988, 0.28", "-27.0716, -36.5861, 10.9712, 0.55", "-25.2135, -39.713, 12.0757, 0.28", "-24.5988, -40.7474, 12.4411, 0.83", "-23.0994, -43.2709, 13.3324, 0.28", "-22.3499, -44.5321, 13.7779, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-30.097, -31.4945, 9.17273, 0.28", "-30.6762, -33.5338, 10.7401, 0.28", "-30.7522, -33.8072, 10.9277, 0.83", "-31.1565, -35.1969, 11.8726, 0.28", "-31.2737, -35.6394, 12.1284, 0.83", "-31.6178, -36.8976, 12.7699, 0.28", "-31.7117, -37.2295, 12.9196, 0.55", "-32.1112, -38.5373, 13.3758, 0.28", "-32.6123, -40.0969, 13.8228, 0.83", "-33.3809, -42.3019, 14.3475, 0.28", "-33.8043, -43.4878, 14.5925, 0.83", "-34.3083, -44.8294, 14.8129, 0.28", "-34.8382, -46.098, 14.9802, 0.83", "-35.2639, -47.0088, 15.0453, 0.28", "-35.5742, -47.6338, 15.054, 0.55", "-36.0413, -48.4562, 15.067, 0.28", "-36.4132, -49.1101, 15.077, 0.55", "-37.7798, -51.3797, 15.1152, 0.83", "-38.6147, -52.7572, 15.1483, 0.28", "-39.166, -53.6073, 15.1574, 0.55", "-40.632, -55.7434, 15.1543, 0.28", "-41.4554, -56.9167, 15.1956, 1.11", "-42.9272, -59.0353, 15.3, 0.28", "-43.4444, -59.8333, 15.3799, 0.55", "-44.4317, -61.4986, 15.6036, 0.28", "-44.9151, -62.4028, 15.7315, 0.83", "-46.2672, -65.6833, 16.2305, 0.28", "-46.6436, -66.9596, 16.4374, 0.83", "-47.3102, -70.4104, 17.0196, 0.28", "-47.5145, -72.0644, 17.3135, 1.11", "-47.5714, -73.0543, 17.4977, 1.11", "-47.5989, -75.7864, 18.0621, 0.28", "-47.5138, -78.084, 18.5584, 0.28", "-47.4898, -78.8392, 18.7131, 0.55", "-47.4545, -80.8215, 19.0898, 0.28", "-47.4663, -81.79, 19.2418, 0.83", "-47.5716, -84.371, 19.5739, 0.28", "-47.6332, -85.4026, 19.6813, 0.55", "-47.9712, -90.668, 20.1723, 0.28", "-48.0497, -91.7516, 20.3048, 0.55", "-48.2626, -94.3118, 20.665, 0.28", "-48.3293, -95.0545, 20.7804, 0.55", "-48.7381, -99.1306, 21.4436, 0.28", "-48.9195, -101.309, 21.858, 0.83", "-49.0776, -104.355, 22.5715, 0.28", "-49.1119, -105.307, 22.773, 0.83", "-49.1404, -106.501, 23.0481, 0.28", "-49.139, -107.257, 23.1624, 0.55", "-49.0993, -109.409, 23.3423, 0.28", "-49.0726, -110.181, 23.3916, 0.55", "-48.9147, -113.62, 23.5816, 0.28", "-48.8696, -114.781, 23.6651, 0.55", "-48.6189, -122.516, 24.3663, 0.28", "-48.5833, -123.953, 24.5178, 0.83", "-48.5288, -128.992, 25.1287, 0.28", "-48.5095, -129.866, 25.2396, 0.55", "-48.3226, -134.92, 25.9307, 0.28", "-48.3021, -135.419, 25.9962, 0.55", "-48.1245, -138.338, 26.4433, 0.28", "-48.0841, -138.89, 26.532, 0.83", "-48.0245, -139.862, 26.6914, 0.83", "-47.9528, -141.658, 27.0008, 0.83", "-47.861, -143.971, 27.4368, 0.28", "-47.8179, -145.724, 27.6537, 0.28", "-47.7922, -146.343, 27.6963, 0.55", "-47.6929, -148.322, 27.8007, 0.28", "-47.6371, -149.558, 27.8482, 0.55", "-47.4006, -153.65, 27.9501, 0.28", "-47.2502, -156.203, 27.9942, 0.83", "-46.8054, -163.285, 28.041, 0.28", "-46.7336, -164.179, 28.0369, 0.83", "-46.5872, -165.617, 28.0288, 0.28", "-46.4958, -166.472, 28.0217, 0.83", "-46.1269, -170.017, 27.982, 0.28", "-46.0834, -170.447, 27.9929, 0.55", "-45.8639, -172.848, 28.0138, 0.28", "-45.7396, -174.115, 28.0203, 0.83", "-45.4712, -176.683, 28.0518, 0.28", "-45.346, -177.962, 28.0672, 0.55", "-44.8161, -183.634, 28.137, 0.28", "-44.7773, -184.051, 28.1489, 0.55", "-44.6515, -185.436, 28.2134, 0.28", "-44.4938, -186.937, 28.2926, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.90452, -159.256, -4.03703, 0.28", "9.53739, -160.19, -2.80963, 0.28", "11.2527, -160.799, -2.00996, 0.83", "13.6022, -161.633, -0.914642, 0.28", "15.0176, -162.135, -0.254813, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "6.90452, -159.256, -4.03703, 0.83", "7.02999, -162.395, -4.10108, 0.83", "7.28382, -165.699, -3.95649, 0.28", "7.37886, -166.353, -3.91371, 0.55", "7.72851, -168.541, -3.76562, 0.28", "7.8345, -169.238, -3.71476, 0.55", "8.08177, -171.032, -3.58291, 0.28", "8.2649, -172.569, -3.41959, 0.83", "8.63253, -175.845, -2.94606, 0.28", "8.69214, -176.783, -2.80688, 0.55", "8.7606, -179.557, -2.44536, 0.28", "8.74331, -180.753, -2.33555, 0.55", "8.57778, -183.631, -2.27009, 0.28", "8.45199, -184.951, -2.26557, 0.83", "8.23469, -187.119, -2.1909, 0.83", "8.1155, -188.851, -2.0896, 0.28", "8.05454, -190.347, -1.95769, 0.55", "7.89629, -195.203, -1.44416, 0.28", "7.82864, -196.76, -1.22857, 0.55", "7.61239, -200.168, -0.686681, 0.28", "7.4008, -202.458, -0.244306, 0.55", "6.96474, -205.722, 0.497834, 0.28", "6.5628, -208.058, 1.04992, 0.55", "5.84024, -211.709, 1.95215, 0.28", "5.30363, -214.303, 2.46808, 0.83", "4.44045, -218.312, 3.09931, 0.28", "4.16911, -219.735, 3.29161, 0.55", "3.39842, -224.506, 3.84408, 0.28", "3.16506, -226.507, 4.04094, 0.55", "2.78268, -231.328, 4.37831, 0.28", "2.67006, -234.386, 4.55521, 0.83", "2.67974, -237.409, 4.67724, 0.28", "2.69255, -238.081, 4.6938, 0.55", "2.72876, -240.842, 4.75115, 0.28", "2.71486, -241.799, 4.75102, 0.83", "2.62989, -244.486, 4.77341, 0.28", "2.5313, -245.795, 4.73117, 0.55", "2.14363, -248.778, 4.48853, 0.28", "1.99435, -249.8, 4.30701, 0.55", "1.64739, -252.077, 3.78981, 0.28", "1.57359, -252.561, 3.6783, 0.55", "1.35255, -254.034, 3.33606, 0.28", "1.20801, -255.202, 3.10238, 0.55", "0.379612, -263.15, 1.73059, 0.28", "0.0947403, -266.419, 1.25899, 0.83", "-0.112795, -269.173, 0.945946, 0.28", "-0.199856, -270.782, 0.832885, 0.55", "-0.311636, -278.976, 0.692283, 0.28", "-0.176892, -280.866, 0.793268, 1.11", "0.0590129, -282.226, 1.019, 0.28", "0.332007, -283.265, 1.24732, 0.55", "1.4854, -286.597, 2.20518, 0.28", "2.25165, -288.513, 2.87365, 0.28", "4.68931, -293.678, 5.02985, 0.28", "5.31306, -294.968, 5.57713, 0.83", "6.00719, -296.408, 6.17484, 0.28", "6.89602, -298.337, 6.93456, 0.83", "8.56258, -302.234, 8.31476, 0.28", "8.74177, -302.812, 8.50342, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-45.6739, -180.925, -33.5173, 0.28", "-45.292, -187.999, -33.0748, 0.28", "-45.2423, -190.449, -33.1808, 0.55", "-45.2307, -192.601, -33.3128, 0.28", "-45.2558, -194.02, -33.3912, 0.55", "-45.3494, -196.314, -33.5057, 0.28", "-45.4625, -198.363, -33.5659, 0.55", "-46.0609, -204.648, -33.7231, 0.28", "-46.185, -205.72, -33.7271, 0.55", "-46.4435, -207.855, -33.6312, 0.28", "-46.597, -209.23, -33.4958, 0.55", "-46.781, -211.282, -33.1877, 0.28", "-46.8774, -213.204, -32.8302, 1.94", "-46.9619, -217.003, -31.8816, 0.28", "-46.9643, -219.984, -31.1898, 1.38", "-46.8968, -222.068, -30.7286, 0.28", "-46.8178, -223.419, -30.4409, 0.83", "-46.6285, -225.905, -29.9774, 0.28", "-46.4133, -227.973, -29.5991, 1.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-45.6739, -180.925, -33.5173, 0.55", "-50.5618, -181.924, -34.6808, 0.55", "-53.0715, -182.505, -35.0062, 0.28", "-53.8781, -182.692, -35.1107, 0.55", "-58.3318, -183.723, -35.6881, 0.28", "-60.8663, -184.31, -36.0167, 0.83", "-65.366, -185.352, -36.6, 0.28", "-67.4562, -185.778, -36.4778, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "20.3227, -28.1323, -6.99043, 0.28", "23.2115, -26.5056, -7.82016, 0.28", "24.0237, -26.0805, -8.01557, 0.83", "27.2929, -24.6257, -8.51865, 0.28", "28.3533, -24.1921, -8.69329, 0.55", "30.2624, -23.4115, -9.00773, 0.28", "31.4743, -22.9159, -9.20734, 0.55", "32.7681, -22.4202, -9.372, 0.55", "35.9083, -21.3436, -9.66373, 0.28", "37.8051, -20.8719, -9.66156, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "20.3227, -28.1323, -6.99043, 0.28", "19.4385, -31.5512, -6.6564, 0.28", "19.1133, -33.2858, -6.64138, 0.83", "18.7266, -35.746, -6.6663, 0.28", "18.6624, -36.3282, -6.64524, 0.55", "18.4743, -38.6946, -6.48919, 0.28", "18.3589, -41.7584, -6.29419, 1.11", "18.5223, -45.6658, -6.06973, 0.28", "18.6417, -47.0137, -5.9861, 0.55", "19.1445, -50.7235, -5.73607, 0.28", "19.335, -51.8631, -5.66704, 0.55", "20.2247, -56.0195, -5.42486, 0.28", "20.7386, -58.0683, -5.28648, 0.83", "21.5291, -60.9086, -4.99026, 0.28", "21.95, -62.3567, -4.87648, 0.55", "22.6959, -64.8521, -4.77589, 0.28", "23.2041, -66.4975, -4.68731, 0.55", "23.8792, -68.5293, -4.45429, 0.28", "24.5755, -70.556, -4.17658, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "27.1973, -21.8861, -5.76297, 0.28", "28.1327, -22.157, -4.56345, 0.28", "29.8136, -21.9331, -2.17985, 0.28", "32.0578, -20.8438, 1.23494, 0.28", "32.6864, -20.3175, 2.14377, 0.83", "33.9156, -19.0164, 3.88424, 0.28", "34.5511, -18.3436, 4.78417, 0.83", "35.6595, -16.5242, 6.47379, 0.28", "35.9192, -15.8213, 6.93984, 0.55", "36.5055, -13.5176, 7.83944, 0.28", "36.6295, -13.0051, 8.00921, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "27.1973, -21.8861, -5.76297, 0.55", "27.2293, -22.3728, -5.82963, 0.55", "27.3985, -23.8448, -5.96301, 0.28", "27.5357, -24.7788, -5.97473, 0.28", "27.6186, -25.3436, -5.98182, 0.55", "27.6793, -25.7571, -5.98701, 0.55", "27.874, -27.0831, -6.00365, 0.83", "28.3989, -30.1749, -5.97535, 0.28", "28.6067, -31.2437, -5.90567, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-32.8064, 16.5906, 11.9591, 0.55", "-33.9449, 16.8197, 12.5964, 0.55", "-35.4858, 17.1459, 13.5317, 0.28", "-36.8533, 17.4911, 14.4661, 0.55", "-37.8731, 17.7601, 15.1942, 0.28", "-38.3185, 17.9105, 15.5301, 0.28", "-38.8518, 18.137, 15.9473, 0.55", "-39.7497, 18.5549, 16.7586, 0.55", "-40.5153, 19.0307, 17.5525, 0.28", "-40.7809, 19.2441, 17.8379, 0.55", "-41.5989, 19.9184, 18.6848, 0.28", "-42.0579, 20.3955, 19.2045, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-32.8064, 16.5906, 11.9591, 0.28", "-35.189, 16.2404, 12.474, 0.28", "-35.5033, 16.186, 12.5054, 0.55", "-37.1458, 15.8821, 12.819, 0.28", "-37.8284, 15.7409, 12.9906, 0.55", "-39.0294, 15.5125, 13.4084, 0.28", "-39.9171, 15.3091, 13.8074, 0.55", "-43.459, 14.4462, 15.7689, 0.28", "-45.6898, 13.8871, 17.135, 0.55", "-46.4071, 13.7101, 17.6064, 0.28", "-48.2653, 13.2571, 18.9287, 0.28", "-51.1726, 12.5361, 20.9771, 0.83", "-52.2315, 12.2725, 21.7914, 0.55", "-53.542, 11.9503, 22.9206, 0.28", "-54.6337, 11.6925, 23.7339, 0.55", "-55.9962, 11.3895, 24.6275, 0.28", "-57.9648, 10.9154, 25.6363, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-10.7886, 30.0087, -2.50668, 0.28", "-9.84903, 30.5409, -3.05549, 0.28", "-9.41474, 30.7869, -3.30919, 0.55", "-7.57556, 31.8289, -4.38358, 0.28", "-6.61395, 32.3736, -4.94532, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-10.7886, 30.0087, -2.50668, 0.28", "-10.7289, 32.2399, -2.64501, 0.28", "-10.6819, 33.9945, -2.75379, 0.83" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "10.7586, 65.0755, -12.2866, 0.28", "12.6576, 65.4264, -13.1349, 0.28", "13.0956, 65.4917, -13.3106, 0.55", "13.8553, 65.5675, -13.5738, 0.28", "14.5872, 65.607, -13.8012, 0.55", "15.1989, 65.6308, -13.9937, 0.28", "16.4378, 65.6338, -14.3457, 0.83", "17.7912, 65.604, -14.6644, 0.28", "18.8837, 65.5833, -14.9172, 0.55", "20.6791, 65.5811, -15.3132, 0.28", "21.962, 65.6255, -15.6153, 0.55", "23.8855, 65.7406, -16.0739, 0.28", "25.2028, 65.892, -16.4176, 0.83", "26.6402, 66.152, -16.823, 0.28", "27.2807, 66.3255, -17.0412, 0.55", "28.9848, 66.9286, -17.6953, 0.28", "29.6146, 67.2033, -17.9602, 0.55", "31.3426, 68.0764, -18.7763, 0.28", "32.0409, 68.4623, -19.1351, 0.55", "34.1517, 69.7496, -20.2522, 0.28", "34.7995, 70.1884, -20.6036, 0.83", "35.4984, 70.7457, -20.9739, 0.83", "36.0292, 71.2358, -21.2569, 0.83", "37.3882, 72.7653, -21.9915, 0.28", "38.2201, 73.948, -22.4502, 0.28", "38.4818, 74.4138, -22.5872, 0.55", "39.414, 76.2601, -23.1642, 0.28", "39.6679, 76.7908, -23.3361, 0.55", "40.2461, 78.056, -23.8271, 0.28", "41.1073, 80.0446, -24.6069, 0.28", "41.576, 81.135, -25.0741, 0.83", "42.5745, 83.3755, -26.1262, 0.28", "42.8567, 84.0038, -26.4603, 0.55", "43.817, 85.9647, -27.6195, 0.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "10.7586, 65.0755, -12.2866, 0.28", "9.83536, 66.9499, -12.2124, 0.28", "9.5541, 67.3585, -12.1977, 0.55", "7.24751, 70.2059, -12.0656, 0.28", "6.97277, 70.4998, -12.054, 0.55", "6.19898, 71.2099, -12.0175, 0.28", "5.46354, 71.7696, -11.9854, 0.55", "2.78484, 73.1481, -11.8611, 0.28", "2.40193, 73.2706, -11.8582, 0.55", "1.37723, 73.4784, -11.8532, 0.28", "0.218551, 73.6907, -11.8731, 0.83", "-1.37789, 73.9589, -11.9002, 0.28", "-2.597, 74.1989, -11.8745, 0.83", "-6.9301, 75.1945, -11.7976, 0.28", "-8.50281, 75.6052, -11.7879, 0.55", "-10.1771, 76.0775, -11.777, 0.28", "-11.1923, 76.3936, -11.807, 0.55", "-15.7328, 77.8362, -12.0033, 0.28", "-17.0044, 78.2335, -12.0634, 0.55", "-18.2325, 78.6082, -12.1176, 0.28", "-19.1433, 78.8597, -12.165, 0.55", "-22.2071, 79.6174, -12.3115, 0.28", "-23.7447, 79.9212, -12.4247, 0.28", "-24.9613, 80.0822, -12.5351, 0.55", "-26.1246, 80.2186, -12.6107, 0.28", "-27.3412, 80.3815, -12.6968, 0.83", "-29.5365, 80.7201, -12.8816, 0.28", "-30.844, 80.9466, -12.9895, 0.83", "-34.737, 81.753, -13.4954, 0.28", "-35.9144, 82.0469, -13.7223, 0.55", "-37.5828, 82.558, -14.1232, 0.28", "-37.9501, 82.6675, -14.2335, 0.55", "-38.4026, 82.7932, -14.3885, 0.28", "-39.3519, 83.027, -14.7488, 0.55", "-41.6673, 83.4874, -15.6706, 0.28", "-43.3564, 83.695, -16.207, 0.83", "-48.4438, 84.0351, -17.5421, 0.28", "-49.9726, 84.0778, -17.8754, 0.55", "-51.58, 84.0796, -18.1528, 0.28", "-52.3605, 84.067, -18.2302, 0.55", "-56.3738, 83.9256, -18.3869, 0.28", "-57.5694, 83.8695, -18.382, 0.55", "-59.0835, 83.8235, -18.2454, 0.28", "-60.3722, 83.8124, -18.0733, 0.55", "-62.7975, 83.8518, -17.6666, 0.28", "-63.915, 83.9139, -17.5115, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-22.3499, -44.5321, 13.7779, 0.55", "-20.6754, -44.2028, 14.0559, 0.55", "-19.5246, -43.9764, 14.247, 0.28", "-18.6371, -43.8019, 14.3943, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-22.3499, -44.5321, 13.7779, 0.28", "-22.3822, -47.5643, 14.3274, 0.28", "-22.4186, -48.6932, 14.607, 0.83", "-22.4176, -49.2431, 14.6934, 0.83", "-22.3773, -50.5195, 14.8545, 0.28", "-22.3563, -50.9702, 14.9091, 0.55", "-22.3027, -51.7536, 15.0159, 0.28", "-22.2155, -52.6241, 15.1513, 0.55", "-21.7983, -55.7283, 15.5638, 0.28", "-21.6869, -56.307, 15.6366, 0.55", "-21.3397, -57.6849, 15.7999, 0.28", "-21.1315, -58.4111, 15.8651, 0.55", "-20.8802, -59.2402, 15.9235, 0.28", "-20.5398, -60.3101, 16.0102, 1.38", "-20.3005, -61.0803, 16.1013, 0.83", "-19.9791, -62.2813, 16.2185, 0.83", "-19.6001, -63.9485, 16.3276, 0.28", "-19.5176, -64.5203, 16.3266, 0.55", "-19.4901, -65.0232, 16.3142, 0.28", "-19.5083, -65.8725, 16.2606, 0.55", "-19.6025, -66.7555, 16.2106, 0.28", "-19.7367, -67.6284, 16.1837, 1.38", "-20.0257, -69.1417, 16.1987, 0.55", "-20.2246, -70.2745, 16.2691, 0.28", "-20.3619, -71.041, 16.3446, 0.55", "-20.6156, -72.5903, 16.5439, 0.28", "-20.7385, -73.4631, 16.6707, 1.11", "-20.8589, -74.3227, 16.8303, 1.11", "-21.3732, -78.2724, 17.6616, 0.28", "-21.467, -79.1167, 17.8109, 0.83", "-21.7481, -81.8775, 18.2531, 0.28", "-21.8096, -82.6928, 18.3643, 0.55", "-21.9407, -84.6716, 18.6059, 0.28", "-22.0071, -85.9488, 18.744, 0.83", "-22.0893, -88.0014, 18.9108, 0.28", "-22.1025, -88.5007, 18.9431, 0.83", "-22.1412, -90.6723, 19.0362, 0.28", "-22.1535, -91.6736, 19.0597, 0.83", "-22.1459, -91.8358, 19.0559, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "37.8051, -20.8719, -9.66156, 0.28", "36.8522, -17.1359, -8.89815, 0.28", "36.5748, -16.0484, -8.67593, 0.83", "35.5108, -11.8774, -7.82363, 0.28", "35.136, -10.4079, -7.52334, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "37.8051, -20.8719, -9.66156, 0.28", "40.6878, -18.6113, -9.26504, 0.28", "41.807, -17.6344, -9.16007, 0.83", "43.8047, -15.7696, -9.03601, 0.83", "47.8626, -11.7989, -8.98573, 0.28", "52.2506, -7.39982, -9.05067, 0.28", "53.3124, -6.35486, -9.06915, 0.83", "55.4971, -4.10868, -9.15381, 0.28", "57.3414, -2.19524, -9.28423, 0.83", "60.3976, 0.97607, -9.56277, 0.28", "61.3055, 1.74673, -9.69836, 0.55", "62.9106, 2.71958, -9.90742, 0.28", "63.5567, 3.06081, -9.98329, 0.55", "65.9839, 4.0915, -10.2233, 0.28", "66.7736, 4.36302, -10.2989, 0.83", "76.0741, 6.89178, -11.1437, 0.28", "77.6622, 7.30746, -11.3215, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "24.5755, -70.556, -4.17658, 0.83", "24.5196, -70.7006, -4.22588, 0.83", "23.1406, -73.503, -5.33889, 0.28", "22.0419, -75.5723, -6.14848, 0.83", "20.338, -78.5941, -7.37866, 0.28", "19.607, -79.8613, -7.8841, 0.83", "17.6234, -83.2616, -9.29669, 0.28", "16.4366, -85.1752, -10.1969, 0.28", "15.7845, -86.121, -10.7087, 0.55", "14.7659, -87.6525, -11.6799, 0.28", "14.3473, -88.3965, -12.1612, 0.55", "13.6773, -89.8031, -13.0389, 0.83", "13.1617, -91.3968, -14.0253, 0.28", "13.0348, -91.9047, -14.3866, 0.55", "12.4071, -94.9148, -16.7577, 0.28", "12.2338, -96.2401, -17.8293, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "24.5755, -70.556, -4.17658, 0.28", "25.7777, -71.1368, -3.31504, 0.28", "27.0218, -71.4981, -2.31105, 0.83", "29.8591, -72.1073, 0.00312331, 0.28", "31.2207, -72.3096, 1.06745, 0.83", "33.8669, -72.6042, 3.0625, 0.28", "34.6133, -72.6515, 3.59278, 0.55", "40.0125, -72.5804, 7.25732, 0.28", "40.8599, -72.5249, 7.8225, 0.55", "43.304, -72.2504, 9.36868, 0.28", "44.2261, -72.1363, 9.94813, 0.55", "47.5708, -71.6514, 11.9452, 0.28", "48.6446, -71.4887, 12.531, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "36.6295, -13.0051, 8.00921, 0.28", "37.1215, -10.6861, 9.00604, 0.28", "37.1948, -10.3988, 9.12097, 0.55", "39.0259, -3.49509, 11.8712, 0.28", "39.2777, -2.58648, 12.2888, 0.55", "39.8381, -0.62822, 13.2494, 0.28", "40.1978, 0.62863, 13.866, 0.83", "42.2514, 7.59577, 17.3419, 0.28", "42.597, 8.71143, 17.914, 0.55", "44.4644, 14.3045, 20.9626, 0.28", "44.6803, 14.9362, 21.3149, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "36.6295, -13.0051, 8.00921, 0.28", "37.367, -11.3423, 9.24129, 0.28", "37.6876, -10.6165, 9.77762, 0.55", "38.5315, -8.63389, 11.1426, 0.28", "38.8043, -8.00275, 11.5456, 0.55", "40.639, -3.76187, 14.1544, 0.28", "41.093, -2.72129, 14.7633, 0.83", "42.7823, 1.16431, 16.8885, 0.28", "43.3896, 2.56458, 17.6207, 0.83", "44.2259, 4.4441, 18.5498, 0.28", "44.4197, 4.88137, 18.7493, 0.55", "44.9737, 6.13321, 19.1925, 0.28", "45.3241, 6.90243, 19.4164, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "28.6067, -31.2437, -5.90567, 0.83", "28.5966, -31.4231, -5.83465, 0.83", "28.5703, -33.6309, -4.94026, 0.28", "28.5996, -34.6567, -4.59312, 0.55", "28.7015, -36.7569, -3.80375, 0.28", "28.7725, -38.1534, -3.32953, 0.55", "28.8923, -40.6833, -2.4903, 0.28", "29.0173, -42.3129, -1.98341, 0.55", "29.2424, -44.5814, -1.31371, 0.28", "29.4786, -46.8186, -0.674019, 0.83", "29.7952, -49.9143, 0.0896038, 0.28", "30.0176, -52.1602, 0.690645, 0.83", "30.1746, -53.8328, 1.21072, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "28.6067, -31.2437, -5.90567, 0.28", "26.7075, -31.6753, -4.53544, 0.28", "26.0581, -31.7755, -4.31664, 0.55", "22.9055, -32.2433, -3.442, 0.28", "22.2482, -32.3654, -3.26059, 0.55", "20.1029, -32.8281, -2.62813, 0.28", "18.9259, -33.082, -2.28111, 0.83", "13.3515, -34.0937, -0.877421, 0.28", "12.1214, -34.321, -0.60807, 0.83", "9.98355, -34.7883, -0.273698, 0.28", "8.78639, -35.0672, -0.063272, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-57.9648, 10.9154, 25.6363, 0.55", "-59.5226, 9.7902, 26.1253, 0.55", "-60.9528, 8.71432, 26.4012, 0.28", "-62.1041, 7.82539, 26.5439, 0.28", "-64.598, 5.8423, 26.5507, 0.55", "-65.7165, 4.96143, 26.5054, 0.28", "-65.987, 4.74007, 26.4736, 0.55", "-67.9191, 3.06425, 25.9664, 0.28", "-68.7312, 2.32204, 25.6463, 0.55", "-70.4862, 0.65705, 24.7831, 0.28", "-70.935, 0.204045, 24.5159, 0.55", "-72.5685, -1.54297, 23.5421, 0.28", "-72.7583, -1.78299, 23.4194, 0.83", "-73.8976, -3.46472, 22.6679, 0.28", "-74.3715, -4.33097, 22.3222, 0.55", "-75.5903, -6.9638, 21.5037, 0.28", "-76.0848, -8.23123, 21.1895, 0.83", "-76.8809, -10.6045, 20.7884, 0.28", "-77.0914, -11.3208, 20.7088, 0.55", "-77.9817, -14.7865, 20.5304, 0.28", "-78.5109, -17.0129, 20.4885, 0.83", "-79.0267, -19.3638, 20.5787, 0.28", "-79.3074, -20.6196, 20.6681, 0.55", "-79.6141, -21.8753, 20.8037, 0.28", "-80.105, -23.8063, 21.025, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-57.9648, 10.9154, 25.6363, 0.28", "-60.2425, 10.9671, 24.903, 0.28", "-60.971, 11.0135, 24.6746, 0.55", "-63.3272, 11.2249, 23.9569, 0.28", "-64.8615, 11.4175, 23.6258, 0.55", "-74.4902, 12.4989, 21.549, 0.28", "-75.3398, 12.6068, 21.3863, 0.55", "-78.1989, 13.0401, 20.9205, 0.28", "-78.9449, 13.1456, 20.7736, 0.55", "-86.1825, 14.1655, 19.2075, 0.28", "-90.2275, 14.6317, 18.2123, 0.55", "-93.8723, 14.9867, 17.3053, 0.28", "-95.2175, 15.0567, 16.9221, 0.55", "-101.085, 15.2062, 15.067, 0.28", "-101.703, 15.1707, 14.8088, 0.55", "-103.839, 14.8382, 13.6716, 0.28", "-105.355, 14.486, 12.8049, 0.55", "-109.503, 13.213, 10.1125, 0.28", "-110.197, 12.9768, 9.61908, 0.55", "-115.554, 11.0641, 5.55156, 0.28", "-116.242, 10.8037, 4.96218, 0.55", "-118.122, 9.9986, 2.9946, 0.28", "-119.37, 9.39526, 1.38915, 0.55", "-120.984, 8.61526, -1.1058, 0.28", "-121.508, 8.41938, -1.91801, 0.28", "-121.508, 8.41938, -1.91801, 0.55", "-123.934, 7.72529, -4.74146, 0.28", "-124.788, 7.47837, -5.69868, 0.55", "-128.062, 6.45315, -9.21334, 0.28", "-128.749, 6.23859, -9.90065, 0.55", "-136.369, 3.83889, -17.1735, 0.28", "-139.036, 3.01106, -19.5913, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-10.6819, 33.9945, -2.75379, 0.28", "-8.60788, 35.2483, -6.82403, 0.28", "-7.61914, 35.846, -8.76445, 0.55", "-6.0003, 36.8246, -11.9414, 0.28", "-5.27925, 37.2606, -13.3565, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-10.6819, 33.9945, -2.75379, 0.28", "-12.2885, 36.673, -2.56858, 0.28", "-13.0645, 38.0699, -2.54478, 0.55", "-14.5943, 40.9721, -2.52214, 0.28", "-15.0793, 41.837, -2.55557, 0.55", "-16.4355, 44.0731, -2.79571, 0.28", "-16.5991, 44.3563, -2.83798, 0.55", "-17.7872, 46.5651, -3.38411, 0.28", "-18.2686, 47.4297, -3.57542, 0.55", "-19.3119, 49.309, -3.95456, 0.28", "-20.3447, 51.0994, -4.33255, 0.83", "-21.7697, 53.9173, -4.85856, 0.28", "-22.3511, 55.1642, -5.08028, 0.55", "-25.5027, 62.55, -6.49765, 0.28", "-26.015, 63.8698, -6.76241, 0.83", "-27.5809, 68.5459, -7.73061, 0.28", "-28.9245, 73.0304, -8.7348, 0.28", "-29.5788, 75.6442, -9.47897, 0.83", "-30.1212, 78.6755, -10.5325, 0.28", "-30.2028, 79.9116, -11.0737, 0.55", "-30.28, 82.8048, -12.5172, 0.28", "-30.2717, 84.2373, -13.3113, 0.55", "-30.3169, 88.1923, -15.7613, 0.28", "-30.2383, 89.8219, -16.776, 0.55", "-30.0712, 92.0417, -18.1726, 0.28", "-29.954, 93.4687, -19.1233, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "43.817, 85.9647, -27.6195, 0.28", "45.7269, 85.722, -28.994, 0.28", "46.8701, 85.5236, -29.7875, 0.55", "48.4957, 85.1734, -31.1324, 0.55", "50.5551, 84.7411, -32.9321, 0.28", "51.3919, 84.537, -33.6839, 0.55", "53.2297, 84.0744, -35.3335, 0.28", "54.0392, 83.8735, -36.1033, 0.55", "56.6631, 83.3613, -38.5422, 0.28", "57.5834, 83.1852, -39.4062, 0.55", "59.9814, 82.7581, -41.6081, 0.28", "60.5527, 82.6712, -42.1565, 0.55", "63.2461, 82.3913, -44.6993, 0.28", "64.6586, 82.3169, -45.9619, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "43.817, 85.9647, -27.6195, 0.28", "46.3593, 83.3514, -28.7825, 0.28", "47.0414, 82.6502, -29.0946, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-22.1459, -91.8358, 19.0559, 0.28", "-23.0319, -95.8277, 20.384, 0.28", "-23.2983, -97.1633, 20.833, 0.55", "-24.2699, -103.057, 22.7785, 0.28", "-24.4569, -104.275, 23.1536, 0.83", "-24.7602, -106.358, 23.7705, 0.83", "-25.0165, -108.088, 24.2692, 0.28", "-25.2387, -109.8, 24.7527, 0.55", "-26.0286, -115.49, 26.3845, 0.28", "-26.2723, -116.981, 26.7757, 0.83", "-27.2508, -122.034, 27.984, 0.28", "-27.8403, -124.361, 28.512, 0.83", "-28.6722, -127.15, 29.1222, 0.28", "-29.407, -129.397, 29.6021, 0.83", "-31.1223, -134.014, 30.5619, 0.28", "-32.0817, -136.421, 31.0684, 0.83", "-33.457, -139.451, 31.6217, 0.28", "-34.6735, -141.961, 32.0305, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.1459, -91.8358, 19.0559, 0.28", "-22.139, -93.1987, 19.2856, 0.28", "-22.1362, -96.5551, 19.8572, 0.28", "-22.1751, -100.516, 20.531, 0.28", "-22.2078, -105.294, 21.3502, 0.28", "-22.1664, -109.029, 22.0035, 0.28", "-22.0852, -112.566, 22.6339, 0.28", "-22.0028, -115.915, 23.2462, 0.28", "-21.9664, -117.864, 23.6017, 0.28", "-21.9132, -120.889, 24.1531, 0.28", "-21.5095, -129.535, 25.7642, 0.28", "-21.3572, -131.596, 26.1543, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "12.2338, -96.2401, -17.8293, 0.28", "15.2409, -99.9315, -18.8219, 0.28", "15.7631, -100.572, -18.9943, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "12.2338, -96.2401, -17.8293, 0.28", "10.6698, -98.4107, -17.6231, 0.28", "10.0072, -99.3303, -17.5357, 0.55", "8.83975, -100.95, -17.3818, 0.28", "7.55153, -102.738, -17.2119, 0.83", "4.30857, -107.239, -16.7843, 0.28", "3.46429, -108.411, -16.673, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "30.1746, -53.8328, 1.21072, 0.83", "30.6429, -54.8056, 1.07108, 0.83", "32.1478, -58.499, 0.721819, 0.28", "32.4193, -59.3154, 0.610503, 0.83", "33.2022, -61.9735, 0.210062, 0.28", "33.414, -62.9433, 0.189633, 0.55", "33.6438, -64.3592, 0.279014, 0.28", "33.7148, -65.4109, 0.462758, 0.55", "33.5694, -67.8603, 1.27046, 0.28", "33.4189, -69.5155, 1.86094, 0.83", "32.8972, -73.8619, 3.36028, 0.28", "32.7749, -74.9031, 3.69958, 0.83", "32.6935, -75.7304, 3.9502, 0.83", "32.1505, -81.7113, 5.71791, 0.28", "32.0967, -82.3679, 5.91276, 0.55", "31.6922, -86.8904, 7.02491, 0.28", "31.6374, -87.7121, 7.10351, 0.55", "31.4648, -91.0677, 7.2214, 0.28", "31.452, -91.6166, 7.21432, 0.83", "31.4577, -92.9847, 7.12219, 0.83", "31.4424, -95.3308, 6.97998, 0.83", "31.2613, -103.436, 6.47668, 0.28", "31.1856, -104.204, 6.43823, 0.55", "30.4685, -108.755, 6.25492, 0.28", "30.2868, -109.592, 6.23439, 0.55", "28.246, -116.158, 6.19827, 0.28", "27.4871, -118.0, 6.25889, 0.83", "24.7997, -122.693, 6.72023, 0.28", "24.189, -123.586, 6.81028, 0.55", "23.1815, -124.809, 6.93778, 0.55", "21.1003, -127.125, 7.20205, 0.28", "20.4152, -127.824, 7.28131, 0.55", "19.5229, -128.876, 7.40764, 0.28", "19.1079, -129.519, 7.48684, 0.55", "18.0441, -131.415, 7.72221, 0.28", "17.6498, -132.184, 7.83184, 0.55", "16.2209, -135.15, 8.27977, 0.28", "15.7157, -136.232, 8.46136, 0.55", "15.3806, -136.962, 8.60882, 0.28", "14.9845, -138.079, 8.91541, 0.55", "14.0153, -141.531, 10.1002, 0.28", "13.8162, -142.323, 10.398, 0.83", "13.4693, -144.035, 11.1323, 0.28", "13.3752, -144.669, 11.4155, 0.55", "13.0367, -149.279, 13.623, 0.28", "13.07, -149.761, 13.8724, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "30.1746, -53.8328, 1.21072, 0.28", "31.0773, -52.7874, 0.743272, 0.28", "31.5687, -52.0453, 0.360821, 0.55", "32.8329, -49.8903, -0.712576, 0.28", "33.1761, -48.9054, -1.10755, 0.55", "33.6839, -47.0445, -1.76208, 0.28", "34.084, -45.3964, -2.13808, 0.83", "35.1171, -40.431, -2.95438, 0.28", "35.3, -39.3577, -3.08128, 0.83", "36.5915, -29.9941, -3.82456, 0.28", "36.8722, -27.2849, -4.01925, 0.83", "37.3786, -19.3518, -4.42308, 0.28", "37.428, -18.2427, -4.4578, 0.55", "37.5199, -15.1988, -4.41436, 0.28", "37.5534, -13.7417, -4.37633, 0.83", "37.5717, -9.48599, -4.052, 0.28", "37.4692, -7.64746, -4.03989, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-80.105, -23.8063, 21.025, 0.28", "-83.2814, -23.072, 21.3648, 0.28", "-83.9822, -22.8959, 21.4315, 0.55", "-88.3051, -21.7081, 21.9802, 0.28", "-88.5226, -21.6447, 22.0147, 0.55", "-90.415, -21.101, 22.3887, 0.28", "-91.1345, -20.8885, 22.5583, 0.83", "-92.014, -20.5904, 22.8437, 0.83", "-94.4307, -19.6324, 23.7987, 0.28", "-95.2525, -19.1653, 24.2552, 0.55", "-96.7882, -18.0654, 25.2577, 0.28", "-97.5182, -17.1601, 25.7507, 0.83", "-98.2658, -15.9859, 26.2444, 0.28", "-98.3846, -15.7606, 26.3174, 0.55", "-99.7009, -12.8366, 27.025, 0.28", "-100.211, -11.6439, 27.2374, 0.55", "-103.074, -4.4835, 28.2662, 0.28", "-103.376, -3.72937, 28.3526, 0.83", "-104.47, -1.09389, 28.5819, 0.28", "-104.762, -0.387941, 28.6263, 0.83", "-105.284, 0.87162, 28.6247, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-80.105, -23.8063, 21.025, 0.28", "-81.4843, -29.6159, 19.8236, 0.28", "-81.7806, -30.864, 19.5655, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-81.7806, -30.864, 19.5655, 0.28", "-81.9273, -34.2064, 16.8039, 0.28", "-81.9517, -34.7613, 16.3453, 0.55", "-81.9773, -35.3457, 15.8625, 0.28", "-81.9959, -35.7678, 15.5138, 0.55", "-82.1153, -38.4889, 13.2654, 0.28", "-82.1634, -39.5839, 12.3607, 0.83" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-81.7806, -30.864, 19.5655, 0.28", "-82.9703, -34.35, 20.6225, 0.28", "-83.7503, -35.6363, 20.959, 0.55", "-85.3096, -37.7307, 21.4982, 0.28", "-86.1768, -38.7094, 21.7164, 0.55", "-88.1376, -40.8062, 22.1398, 0.28", "-89.2283, -41.9745, 22.3884, 0.55", "-92.7101, -45.4965, 23.4264, 0.28", "-93.1494, -46.0001, 23.5971, 0.55", "-94.7423, -47.9977, 24.3586, 0.28", "-96.1273, -50.0133, 25.2544, 0.83", "-97.409, -52.2367, 26.4068, 0.28", "-97.7227, -53.0044, 26.8328, 0.55", "-99.1011, -57.9576, 29.8373, 0.28", "-99.3101, -59.0989, 30.5573, 0.83", "-99.5652, -61.6985, 32.2378, 0.28", "-99.5891, -63.0438, 33.0631, 0.55", "-99.4133, -67.1304, 35.4313, 0.28", "-99.3128, -68.163, 35.931, 0.83", "-98.5454, -72.86, 37.917, 0.28", "-98.3786, -73.8899, 38.2859, 0.83", "-97.8096, -77.3293, 39.314, 0.28", "-97.6111, -78.4478, 39.61, 0.83", "-96.5094, -84.3204, 40.9579, 0.28", "-96.2678, -85.8384, 41.2364, 0.55", "-95.828, -90.2571, 41.7545, 0.28", "-95.7666, -91.5702, 41.9133, 0.83" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_29", "dend_22", "dend_19", "dend_0", "dend_46", "dend_39", "dend_31", "dend_30", "dend_26", "dend_23", "dend_21", "dend_20", "dend_10", "dend_1", "dend_52", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_16", "dend_11", "dend_7", "dend_2", "dend_60", "dend_53", "dend_51", "dend_48", "dend_43", "dend_42", "dend_37", "dend_34", "dend_18", "dend_17", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_36", "dend_35", "dend_15", "dend_14", "dend_6", "dend_5", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_29", "dend_22", "dend_19", "dend_0", "dend_46", "dend_39", "dend_31", "dend_30", "dend_26", "dend_23", "dend_21", "dend_20", "dend_10", "dend_1", "dend_52", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_16", "dend_11", "dend_7", "dend_2", "dend_60", "dend_53", "dend_51", "dend_48", "dend_43", "dend_42", "dend_37", "dend_34", "dend_18", "dend_17", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_36", "dend_35", "dend_15", "dend_14", "dend_6", "dend_5", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_DBC_393cc5cca5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.44999992506011677)
    connect dend_29(0), soma_0(0.44999992506011677)
    connect dend_22(0), soma_0(0.44999992506011677)
    connect dend_19(0), soma_0(0.44999992506011677)
    connect dend_0(0), soma_0(0.44999992506011677)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.250943, 5.15502, -0.455322, 3.76408 ) }
    soma_0 { pt3dadd( -0.287266, 4.50998, -0.403251, 6.96761 ) }
    soma_0 { pt3dadd( -0.32359, 3.86493, -0.351181, 8.3161 ) }
    soma_0 { pt3dadd( -0.359913, 3.21989, -0.299111, 9.45043 ) }
    soma_0 { pt3dadd( -0.396236, 2.57484, -0.247041, 9.98693 ) }
    soma_0 { pt3dadd( -0.43256, 1.9298, -0.194971, 10.312 ) }
    soma_0 { pt3dadd( -0.468883, 1.28475, -0.142901, 10.5326 ) }
    soma_0 { pt3dadd( -0.505206, 0.639706, -0.0908309, 10.6917 ) }
    soma_0 { pt3dadd( -0.54153, -0.00533917, -0.0387608, 10.8509 ) }
    soma_0 { pt3dadd( -0.577853, -0.650384, 0.0133093, 11.01 ) }
    soma_0 { pt3dadd( -0.614177, -1.29543, 0.0653794, 11.1688 ) }
    soma_0 { pt3dadd( -0.6505, -1.94047, 0.11745, 11.0157 ) }
    soma_0 { pt3dadd( -0.686823, -2.58552, 0.16952, 10.5759 ) }
    soma_0 { pt3dadd( -0.723147, -3.23057, 0.22159, 10.1362 ) }
    soma_0 { pt3dadd( -0.75947, -3.87561, 0.27366, 9.69643 ) }
    soma_0 { pt3dadd( -0.795793, -4.52066, 0.32573, 9.25667 ) }
    soma_0 { pt3dadd( -0.832117, -5.1657, 0.3778, 8.77464 ) }
    soma_0 { pt3dadd( -0.86844, -5.81075, 0.42987, 7.84202 ) }
    soma_0 { pt3dadd( -0.904764, -6.45579, 0.48194, 6.36994 ) }
    soma_0 { pt3dadd( -0.941087, -7.10084, 0.53401, 4.84705 ) }
    soma_0 { pt3dadd( -0.97741, -7.74588, 0.58608, 2.62404 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.32706, 4.28382, 0.284896, 0.83 ) }
    dend_38 { pt3dadd( -4.73107, 5.31349, 0.284896, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 23/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.73706, -4.26468, 3.5949, 0.28 ) }
    dend_29 { pt3dadd( -7.24509, -5.28218, 4.15964, 0.28 ) }
    dend_29 { pt3dadd( -8.65023, -6.17822, 4.61754, 1.38 ) }
    dend_29 { pt3dadd( -10.9716, -7.70531, 5.33465, 0.83 ) }
    dend_29 { pt3dadd( -13.9998, -9.69735, 6.2701, 0.28 ) }
    dend_29 { pt3dadd( -15.4442, -10.6476, 6.71631, 1.38 ) }
    dend_29 { pt3dadd( -17.7507, -12.1649, 7.42884, 0.28 ) }
    dend_29 { pt3dadd( -20.0097, -13.635, 8.15392, 0.28 ) }
    dend_29 { pt3dadd( -21.7598, -14.728, 8.69786, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 32/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.50706, -7.16543, 2.1449, 0.55 ) }
    dend_22 { pt3dadd( -4.97204, -11.6891, 3.0109, 0.55 ) }
    dend_22 { pt3dadd( -5.14079, -13.1329, 3.28834, 0.83 ) }
    dend_22 { pt3dadd( -5.37556, -14.8708, 3.60787, 0.55 ) }
    dend_22 { pt3dadd( -6.03893, -19.0817, 4.53549, 1.11 ) }
    dend_22 { pt3dadd( -7.12367, -25.8067, 5.9056, 0.28 ) }
    dend_22 { pt3dadd( -7.41127, -27.5946, 6.20252, 0.83 ) }
    dend_22 { pt3dadd( -7.64831, -29.0337, 6.40667, 0.28 ) }
    dend_22 { pt3dadd( -8.05693, -31.5081, 6.64613, 0.83 ) }
    dend_22 { pt3dadd( -8.83142, -36.4763, 6.90484, 0.28 ) }
    dend_22 { pt3dadd( -9.36571, -39.7276, 6.89417, 0.55 ) }
    dend_22 { pt3dadd( -9.86974, -43.0662, 6.67505, 0.28 ) }
    dend_22 { pt3dadd( -10.0591, -44.4985, 6.53475, 0.55 ) }
    dend_22 { pt3dadd( -10.2551, -46.4198, 6.27636, 0.28 ) }
    dend_22 { pt3dadd( -10.4772, -50.1205, 5.48966, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 47/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 4.26294, 2.79757, 2.6749, 0.28 ) }
    dend_19 { pt3dadd( 6.51288, 6.18445, 2.6749, 0.28 ) }
    dend_19 { pt3dadd( 7.55711, 7.99907, 2.73005, 0.83 ) }
    dend_19 { pt3dadd( 8.96114, 10.5914, 2.84117, 0.28 ) }
    dend_19 { pt3dadd( 10.0216, 12.7088, 2.9859, 1.11 ) }
    dend_19 { pt3dadd( 11.6471, 16.1432, 3.27013, 0.28 ) }
    dend_19 { pt3dadd( 12.6992, 18.4198, 3.51747, 0.83 ) }
    dend_19 { pt3dadd( 14.3983, 22.5221, 4.07892, 0.28 ) }
    dend_19 { pt3dadd( 15.1094, 24.3452, 4.35717, 0.55 ) }
    dend_19 { pt3dadd( 16.3378, 27.683, 4.97779, 0.28 ) }
    dend_19 { pt3dadd( 16.8681, 29.1455, 5.28396, 0.83 ) }
    dend_19 { pt3dadd( 18.212, 32.7177, 6.22682, 0.55 ) }
    dend_19 { pt3dadd( 19.77, 36.6796, 7.42847, 0.28 ) }
    dend_19 { pt3dadd( 20.4527, 38.3662, 7.98956, 0.83 ) }
    dend_19 { pt3dadd( 21.781, 41.6863, 9.15151, 0.28 ) }
    dend_19 { pt3dadd( 22.3427, 43.1022, 9.62964, 0.83 ) }
    dend_19 { pt3dadd( 23.3826, 45.9356, 10.5792, 0.28 ) }
    dend_19 { pt3dadd( 23.6879, 46.8386, 10.838, 0.55 ) }
    dend_19 { pt3dadd( 23.991, 47.7541, 11.0594, 0.28 ) }
    dend_19 { pt3dadd( 24.4972, 49.2593, 11.2955, 0.55 ) }
    dend_19 { pt3dadd( 25.3242, 51.7255, 11.4672, 0.28 ) }
    dend_19 { pt3dadd( 25.6843, 52.8079, 11.4878, 0.55 ) }
    dend_19 { pt3dadd( 26.4745, 55.2547, 11.3754, 0.28 ) }
    dend_19 { pt3dadd( 26.7964, 56.2029, 11.3376, 0.55 ) }
    dend_19 { pt3dadd( 27.6291, 58.3997, 11.2778, 0.55 ) }
    dend_19 { pt3dadd( 28.4983, 60.4355, 11.2796, 0.28 ) }
    dend_19 { pt3dadd( 29.4665, 62.5034, 11.4094, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 74/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.78294, -6.96043, -1.9751, 0.55 ) }
    dend_0 { pt3dadd( 4.41763, -8.28344, -2.38389, 0.55 ) }
    dend_0 { pt3dadd( 7.12262, -10.4727, -3.06031, 1.11 ) }
    dend_0 { pt3dadd( 13.8249, -15.8971, -4.73633, 0.28 ) }
    dend_0 { pt3dadd( 15.3461, -17.1282, -5.11672, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 79/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.97741, -7.74588, 0.58608, 0.55 ) }
    axon_0 { pt3dadd( -1.82074, -22.7222, 0.58608, 0.55 ) }
    axon_0 { pt3dadd( -2.66408, -37.6984, 0.58608, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 82/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -4.73107, 5.31349, 0.284896, 0.28 ) }
    dend_46 { pt3dadd( -6.51981, 7.26921, 0.856046, 0.28 ) }
    dend_46 { pt3dadd( -7.78205, 8.64927, 1.25908, 0.55 ) }
    dend_46 { pt3dadd( -8.77849, 9.7387, 1.57725, 0.28 ) }
    dend_46 { pt3dadd( -9.77367, 10.8268, 1.89501, 0.55 ) }
    dend_46 { pt3dadd( -12.3139, 13.6041, 2.70609, 0.28 ) }
    dend_46 { pt3dadd( -13.3324, 14.7177, 3.0313, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.73107, 5.31349, 0.284896, 0.28 ) }
    dend_39 { pt3dadd( -4.51699, 7.1698, -0.0716842, 0.28 ) }
    dend_39 { pt3dadd( -4.26732, 8.82935, -0.453207, 0.83 ) }
    dend_39 { pt3dadd( -3.66309, 12.236, -1.23219, 0.28 ) }
    dend_39 { pt3dadd( -3.52253, 12.938, -1.41248, 0.55 ) }
    dend_39 { pt3dadd( -3.1065, 14.7586, -1.89124, 0.28 ) }
    dend_39 { pt3dadd( -2.8193, 15.8956, -2.20771, 0.83 ) }
    dend_39 { pt3dadd( -2.00306, 18.7031, -3.07009, 0.28 ) }
    dend_39 { pt3dadd( -1.5623, 20.0197, -3.5205, 0.55 ) }
    dend_39 { pt3dadd( -0.38812, 23.14, -4.68283, 0.28 ) }
    dend_39 { pt3dadd( 0.0795548, 24.3521, -5.11534, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 0.666507, 25.8277, -5.60229, 0.28 ) }
    dend_39 { pt3dadd( 0.841581, 26.2946, -5.76732, 0.55 ) }
    dend_39 { pt3dadd( 1.26435, 27.5008, -6.18514, 0.28 ) }
    dend_39 { pt3dadd( 1.59533, 28.4096, -6.47667, 0.83 ) }
    dend_39 { pt3dadd( 2.49296, 30.9844, -7.17127, 0.28 ) }
    dend_39 { pt3dadd( 2.92346, 32.2839, -7.49181, 0.83 ) }
    dend_39 { pt3dadd( 3.73481, 34.8081, -8.05488, 0.28 ) }
    dend_39 { pt3dadd( 4.32725, 36.678, -8.45028, 0.28 ) }
    dend_39 { pt3dadd( 4.94578, 38.5454, -8.80913, 0.83 ) }
    dend_39 { pt3dadd( 5.32164, 39.6217, -9.04083, 0.55 ) }
    dend_39 { pt3dadd( 5.42664, 39.8924, -9.10015, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 11/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -21.7598, -14.728, 8.69786, 0.28 ) }
    dend_31 { pt3dadd( -23.4973, -17.4667, 8.65426, 0.28 ) }
    dend_31 { pt3dadd( -24.1051, -18.5797, 8.66987, 0.55 ) }
    dend_31 { pt3dadd( -25.4042, -21.1823, 8.77935, 0.28 ) }
    dend_31 { pt3dadd( -25.9857, -22.3472, 8.82835, 0.83 ) }
    dend_31 { pt3dadd( -27.7823, -25.9466, 8.97976, 0.28 ) }
    dend_31 { pt3dadd( -28.585, -27.5547, 9.04741, 0.55 ) }
    dend_31 { pt3dadd( -29.4837, -29.7603, 9.1294, 0.28 ) }
    dend_31 { pt3dadd( -30.097, -31.4945, 9.17273, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 20/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -21.7598, -14.728, 8.69786, 0.28 ) }
    dend_30 { pt3dadd( -21.1148, -16.7904, 8.54655, 0.28 ) }
    dend_30 { pt3dadd( -20.6464, -18.6251, 8.40657, 0.55 ) }
    dend_30 { pt3dadd( -19.9497, -22.1583, 8.14224, 0.28 ) }
    dend_30 { pt3dadd( -19.8683, -22.5715, 8.11133, 0.55 ) }
    dend_30 { pt3dadd( -19.515, -24.363, 7.97729, 0.28 ) }
    dend_30 { pt3dadd( -19.3336, -25.2831, 7.90846, 0.55 ) }
    dend_30 { pt3dadd( -19.2021, -26.1672, 7.82652, 0.28 ) }
    dend_30 { pt3dadd( -19.2172, -27.0929, 7.69491, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 29/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -10.4772, -50.1205, 5.48966, 0.28 ) }
    dend_26 { pt3dadd( -8.24727, -52.7184, 4.90588, 0.28 ) }
    dend_26 { pt3dadd( -7.42565, -53.9535, 4.71978, 0.55 ) }
    dend_26 { pt3dadd( -6.78848, -55.2133, 4.62457, 0.28 ) }
    dend_26 { pt3dadd( -6.34484, -56.2426, 4.57385, 0.55 ) }
    dend_26 { pt3dadd( -5.78371, -57.8348, 4.54061, 0.28 ) }
    dend_26 { pt3dadd( -5.55925, -58.5604, 4.54624, 0.83 ) }
    dend_26 { pt3dadd( -4.99967, -61.108, 4.64404, 0.28 ) }
    dend_26 { pt3dadd( -4.2788, -65.1998, 4.91795, 0.55 ) }
    dend_26 { pt3dadd( -4.03075, -66.8395, 5.05604, 0.55 ) }
    dend_26 { pt3dadd( -3.65064, -69.4924, 5.1236, 0.28 ) }
    dend_26 { pt3dadd( -3.48758, -70.7448, 5.11723, 0.55 ) }
    dend_26 { pt3dadd( -3.26403, -72.6267, 5.02689, 0.28 ) }
    dend_26 { pt3dadd( -3.02632, -74.785, 4.85548, 0.55 ) }
    dend_26 { pt3dadd( -2.63765, -78.5353, 4.62314, 1.11 ) }
    dend_26 { pt3dadd( -2.14659, -82.9342, 4.43712, 0.28 ) }
    dend_26 { pt3dadd( -2.01971, -84.0293, 4.38121, 0.55 ) }
    dend_26 { pt3dadd( -1.63056, -87.6098, 4.20356, 0.28 ) }
    dend_26 { pt3dadd( -1.40443, -90.6457, 3.92247, 1.11 ) }
    dend_26 { pt3dadd( -1.21875, -94.2952, 3.53334, 0.28 ) }
    dend_26 { pt3dadd( -1.16003, -97.2848, 3.15, 0.83 ) }
    dend_26 { pt3dadd( -1.14927, -101.386, 2.62713, 0.28 ) }
    dend_26 { pt3dadd( -1.09984, -103.219, 2.28129, 1.11 ) }
    dend_26 { pt3dadd( -0.811761, -109.261, 0.81043, 0.28 ) }
    dend_26 { pt3dadd( -0.762613, -110.336, 0.515615, 0.55 ) }
    dend_26 { pt3dadd( -0.684429, -112.346, -0.0662446, 0.28 ) }
    dend_26 { pt3dadd( -0.601666, -113.543, -0.403207, 0.55 ) }
    dend_26 { pt3dadd( -0.00522642, -119.21, -1.80963, 0.28 ) }
    dend_26 { pt3dadd( 0.436438, -122.529, -2.52074, 1.11 ) }
    dend_26 { pt3dadd( 1.23283, -127.168, -3.28929, 0.28 ) }
    dend_26 { pt3dadd( 1.46618, -128.453, -3.48645, 0.55 ) }
    dend_26 { pt3dadd( 2.33134, -132.971, -4.09843, 0.28 ) }
    dend_26 { pt3dadd( 2.69049, -134.846, -4.32316, 0.55 ) }
    dend_26 { pt3dadd( 3.20274, -137.47, -4.53216, 0.28 ) }
    dend_26 { pt3dadd( 3.55029, -139.126, -4.63786, 0.83 ) }
    dend_26 { pt3dadd( 4.40643, -142.785, -4.75694, 0.28 ) }
    dend_26 { pt3dadd( 4.68858, -144.077, -4.76607, 0.55 ) }
    dend_26 { pt3dadd( 5.43297, -148.263, -4.61817, 0.28 ) }
    dend_26 { pt3dadd( 5.72461, -150.006, -4.5556, 0.55 ) }
    dend_26 { pt3dadd( 6.48789, -154.8, -4.35604, 0.28 ) }
    dend_26 { pt3dadd( 6.62815, -155.887, -4.3012, 0.55 ) }
    dend_26 { pt3dadd( 6.69489, -156.528, -4.25907, 0.55 ) }
    dend_26 { pt3dadd( 6.90452, -159.256, -4.03703, 0.28 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 72/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -10.4772, -50.1205, 5.48966, 0.55 ) }
    dend_23 { pt3dadd( -11.9547, -51.955, 5.84059, 0.55 ) }
    dend_23 { pt3dadd( -13.418, -53.7342, 6.18186, 0.28 ) }
    dend_23 { pt3dadd( -13.9446, -54.4481, 6.31967, 0.55 ) }
    dend_23 { pt3dadd( -17.0685, -59.0157, 7.24719, 0.28 ) }
    dend_23 { pt3dadd( -17.5664, -59.7594, 7.35458, 0.83 ) }
    dend_23 { pt3dadd( -18.904, -61.7969, 7.57279, 0.28 ) }
    dend_23 { pt3dadd( -19.4653, -62.7213, 7.62325, 0.55 ) }
    dend_23 { pt3dadd( -23.036, -69.2028, 7.78611, 0.28 ) }
    dend_23 { pt3dadd( -23.5618, -70.4536, 7.71865, 0.55 ) }
    dend_23 { pt3dadd( -24.543, -73.7885, 7.3313, 0.28 ) }
    dend_23 { pt3dadd( -24.7329, -74.6355, 7.20597, 0.55 ) }
    dend_23 { pt3dadd( -25.0429, -76.6799, 6.86792, 0.28 ) }
    dend_23 { pt3dadd( -25.1846, -77.4343, 6.72727, 0.55 ) }
    dend_23 { pt3dadd( -26.7655, -85.4194, 5.16125, 0.28 ) }
    dend_23 { pt3dadd( -26.9751, -86.2883, 5.01001, 0.55 ) }
    dend_23 { pt3dadd( -27.4456, -87.9619, 4.71295, 0.28 ) }
    dend_23 { pt3dadd( -28.1071, -89.9616, 4.31008, 0.55 ) }
    dend_23 { pt3dadd( -31.1281, -97.8509, 2.68169, 0.28 ) }
    dend_23 { pt3dadd( -31.6455, -99.0588, 2.39634, 0.83 ) }
    dend_23 { pt3dadd( -32.4092, -100.621, 1.98963, 0.83 ) }
    dend_23 { pt3dadd( -34.4211, -104.695, 0.724694, 0.28 ) }
    dend_23 { pt3dadd( -34.7965, -105.46, 0.446569, 0.55 ) }
    dend_23 { pt3dadd( -35.4718, -106.966, -0.122708, 0.28 ) }
    dend_23 { pt3dadd( -36.353, -109.678, -1.06379, 0.55 ) }
    dend_23 { pt3dadd( -36.5849, -110.478, -1.25193, 0.55 ) }
    dend_23 { pt3dadd( -37.2898, -113.603, -1.63287, 0.28 ) }
    dend_23 { pt3dadd( -37.4321, -114.504, -1.68836, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( -37.8393, -117.767, -1.88393, 0.28 ) }
    dend_23 { pt3dadd( -37.9955, -119.234, -1.97027, 0.83 ) }
    dend_23 { pt3dadd( -38.2949, -122.763, -2.06277, 0.28 ) }
    dend_23 { pt3dadd( -38.4863, -125.424, -2.12935, 0.83 ) }
    dend_23 { pt3dadd( -38.6962, -130.21, -2.2498, 0.28 ) }
    dend_23 { pt3dadd( -38.7333, -131.143, -2.28683, 0.55 ) }
    dend_23 { pt3dadd( -38.817, -133.4, -2.41429, 0.28 ) }
    dend_23 { pt3dadd( -38.8475, -133.985, -2.43152, 0.55 ) }
    dend_23 { pt3dadd( -38.9482, -135.421, -2.42365, 0.28 ) }
    dend_23 { pt3dadd( -39.0274, -136.329, -2.36684, 0.55 ) }
    dend_23 { pt3dadd( -39.1508, -137.555, -2.26126, 0.28 ) }
    dend_23 { pt3dadd( -39.3163, -139.267, -2.12527, 1.11 ) }
    dend_23 { pt3dadd( -39.8473, -144.228, -1.81098, 0.28 ) }
    dend_23 { pt3dadd( -39.9819, -145.387, -1.75682, 0.83 ) }
    dend_23 { pt3dadd( -40.2032, -147.184, -1.71444, 0.83 ) }
    dend_23 { pt3dadd( -40.9768, -152.925, -1.68245, 0.28 ) }
    dend_23 { pt3dadd( -41.0845, -153.59, -1.70157, 0.55 ) }
    dend_23 { pt3dadd( -41.4443, -155.516, -1.81464, 0.28 ) }
    dend_23 { pt3dadd( -41.6527, -156.374, -1.90655, 0.55 ) }
    dend_23 { pt3dadd( -42.1945, -158.393, -2.17925, 0.28 ) }
    dend_23 { pt3dadd( -42.6371, -159.761, -2.41033, 0.83 ) }
    dend_23 { pt3dadd( -43.4298, -161.801, -2.81716, 0.28 ) }
    dend_23 { pt3dadd( -43.5389, -162.062, -2.89606, 0.55 ) }
    dend_23 { pt3dadd( -44.2995, -163.96, -3.60464, 0.28 ) }
    dend_23 { pt3dadd( -44.5144, -164.522, -3.8377, 0.55 ) }
    dend_23 { pt3dadd( -44.8644, -165.486, -4.29093, 0.55 ) }
    dend_23 { pt3dadd( -45.2074, -166.735, -5.07326, 0.83 ) }
    dend_23 { pt3dadd( -45.751, -169.631, -7.14897, 0.28 ) }
    dend_23 { pt3dadd( -45.8377, -170.276, -8.15913, 0.55 ) }
    dend_23 { pt3dadd( -45.837, -170.746, -9.40183, 0.28 ) }
    dend_23 { pt3dadd( -45.7908, -171.026, -10.3687, 0.55 ) }
    dend_23 { pt3dadd( -45.5165, -171.822, -13.6392, 0.28 ) }
    dend_23 { pt3dadd( -45.4541, -171.95, -14.2516, 0.83 ) }
    dend_23 { pt3dadd( -44.5333, -173.5, -22.6153, 0.28 ) }
    dend_23 { pt3dadd( -44.4796, -173.61, -23.2284, 0.55 ) }
    dend_23 { pt3dadd( -44.2821, -174.124, -26.0464, 0.28 ) }
    dend_23 { pt3dadd( -44.2385, -174.421, -27.2797, 0.55 ) }
    dend_23 { pt3dadd( -44.2575, -174.815, -28.3309, 0.28 ) }
    dend_23 { pt3dadd( -44.293, -175.194, -29.0722, 0.55 ) }
    dend_23 { pt3dadd( -44.4665, -176.479, -30.198, 0.28 ) }
    dend_23 { pt3dadd( -44.6021, -177.152, -30.7664, 0.55 ) }
    dend_23 { pt3dadd( -45.2132, -179.3, -32.3596, 0.28 ) }
    dend_23 { pt3dadd( -45.6739, -180.925, -33.5173, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 43/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 29.4665, 62.5034, 11.4094, 0.28 ) }
    dend_21 { pt3dadd( 27.3821, 65.1306, 10.9094, 0.28 ) }
    dend_21 { pt3dadd( 26.6621, 66.1036, 10.6988, 0.55 ) }
    dend_21 { pt3dadd( 23.5599, 70.5791, 9.69736, 0.28 ) }
    dend_21 { pt3dadd( 22.7336, 71.8788, 9.39667, 0.55 ) }
    dend_21 { pt3dadd( 18.4509, 79.1011, 7.70638, 0.28 ) }
    dend_21 { pt3dadd( 17.1646, 81.4074, 7.17339, 0.83 ) }
    dend_21 { pt3dadd( 15.6066, 84.5763, 6.46126, 0.28 ) }
    dend_21 { pt3dadd( 14.8699, 86.282, 6.02496, 0.55 ) }
    dend_21 { pt3dadd( 14.2449, 88.3108, 5.45464, 0.28 ) }
    dend_21 { pt3dadd( 14.1187, 88.977, 5.24057, 0.55 ) }
    dend_21 { pt3dadd( 14.1775, 91.1286, 4.40289, 0.28 ) }
    dend_21 { pt3dadd( 14.3028, 92.5649, 3.79343, 0.55 ) }
    dend_21 { pt3dadd( 14.539, 95.5161, 2.68153, 0.28 ) }
    dend_21 { pt3dadd( 14.6564, 97.5844, 1.96068, 0.83 ) }
    dend_21 { pt3dadd( 14.7778, 99.0402, 1.55704, 0.83 ) }
    dend_21 { pt3dadd( 15.175, 101.862, 0.943453, 0.28 ) }
    dend_21 { pt3dadd( 15.3683, 102.998, 0.714865, 0.55 ) }
    dend_21 { pt3dadd( 16.4094, 108.661, -0.242236, 0.28 ) }
    dend_21 { pt3dadd( 16.5531, 109.444, -0.312962, 0.55 ) }
    dend_21 { pt3dadd( 17.4798, 114.547, -0.552109, 0.28 ) }
    dend_21 { pt3dadd( 17.9056, 116.501, -0.56371, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 65/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 29.4665, 62.5034, 11.4094, 0.28 ) }
    dend_20 { pt3dadd( 30.4678, 65.339, 11.608, 0.28 ) }
    dend_20 { pt3dadd( 30.566, 65.6981, 11.6507, 0.55 ) }
    dend_20 { pt3dadd( 31.4518, 69.7401, 12.2454, 0.28 ) }
    dend_20 { pt3dadd( 31.6906, 71.132, 12.5138, 0.55 ) }
    dend_20 { pt3dadd( 32.1451, 74.405, 13.216, 0.28 ) }
    dend_20 { pt3dadd( 32.285, 75.5667, 13.483, 0.55 ) }
    dend_20 { pt3dadd( 32.3773, 77.5173, 14.0287, 0.28 ) }
    dend_20 { pt3dadd( 32.4157, 79.6708, 14.5878, 0.83 ) }
    dend_20 { pt3dadd( 32.3588, 82.5057, 15.3006, 0.28 ) }
    dend_20 { pt3dadd( 32.3469, 83.0518, 15.4125, 0.55 ) }
    dend_20 { pt3dadd( 32.309, 85.0309, 15.7668, 0.28 ) }
    dend_20 { pt3dadd( 32.2696, 86.4404, 15.9799, 0.83 ) }
    dend_20 { pt3dadd( 32.1203, 91.4928, 16.5784, 0.28 ) }
    dend_20 { pt3dadd( 32.076, 92.6754, 16.6807, 0.55 ) }
    dend_20 { pt3dadd( 31.9806, 94.6578, 16.8085, 0.28 ) }
    dend_20 { pt3dadd( 31.9474, 95.2645, 16.8499, 0.55 ) }
    dend_20 { pt3dadd( 31.6384, 99.1926, 17.1178, 0.28 ) }
    dend_20 { pt3dadd( 31.6088, 99.5313, 17.1419, 0.55 ) }
    dend_20 { pt3dadd( 31.2874, 102.445, 17.3677, 0.28 ) }
    dend_20 { pt3dadd( 31.2648, 103.186, 17.4059, 0.55 ) }
    dend_20 { pt3dadd( 31.3328, 104.714, 17.4728, 0.28 ) }
    dend_20 { pt3dadd( 31.4402, 106.119, 17.5191, 0.83 ) }
    dend_20 { pt3dadd( 31.7971, 108.789, 17.573, 0.28 ) }
    dend_20 { pt3dadd( 31.8754, 109.263, 17.5797, 0.83 ) }
    dend_20 { pt3dadd( 32.8125, 113.553, 17.575, 0.28 ) }
    dend_20 { pt3dadd( 33.2142, 115.057, 17.5339, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 92/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 15.3461, -17.1282, -5.11672, 0.28 ) }
    dend_10 { pt3dadd( 16.3282, -19.2998, -5.48649, 0.28 ) }
    dend_10 { pt3dadd( 16.8616, -20.4793, -5.68733, 0.55 ) }
    dend_10 { pt3dadd( 17.6532, -22.2296, -5.98536, 0.28 ) }
    dend_10 { pt3dadd( 18.6275, -24.3839, -6.35218, 0.83 ) }
    dend_10 { pt3dadd( 19.6893, -26.7318, -6.75197, 0.28 ) }
    dend_10 { pt3dadd( 20.3227, -28.1323, -6.99043, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.3461, -17.1282, -5.11672, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 18.0858, -18.2281, -5.26612, 0.28 ) }
    dend_1 { pt3dadd( 19.7054, -18.8783, -5.35444, 0.83 ) }
    dend_1 { pt3dadd( 22.7286, -20.0921, -5.51929, 0.28 ) }
    dend_1 { pt3dadd( 24.7992, -20.9233, -5.6322, 1.11 ) }
    dend_1 { pt3dadd( 27.1973, -21.8861, -5.76297, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 5/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.66408, -37.6984, 0.58608, 0.28 ) }
    axon_1 { pt3dadd( -3.50741, -52.6747, 0.58608, 0.28 ) }
    axon_1 { pt3dadd( -4.35075, -67.651, 0.58608, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 8/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -13.3324, 14.7177, 3.0313, 0.28 ) }
    dend_52 { pt3dadd( -15.4188, 15.0378, 3.8544, 0.28 ) }
    dend_52 { pt3dadd( -16.6572, 15.2532, 4.37847, 0.55 ) }
    dend_52 { pt3dadd( -17.7507, 15.4307, 4.84876, 0.28 ) }
    dend_52 { pt3dadd( -19.472, 15.695, 5.63593, 0.83 ) }
    dend_52 { pt3dadd( -21.3619, 15.9229, 6.50506, 0.28 ) }
    dend_52 { pt3dadd( -22.8381, 16.0661, 7.18109, 0.28 ) }
    dend_52 { pt3dadd( -24.4837, 16.1993, 7.97658, 0.83 ) }
    dend_52 { pt3dadd( -26.0408, 16.3052, 8.74459, 0.28 ) }
    dend_52 { pt3dadd( -27.3396, 16.3751, 9.37807, 0.83 ) }
    dend_52 { pt3dadd( -30.702, 16.5109, 11.0124, 0.28 ) }
    dend_52 { pt3dadd( -32.8064, 16.5906, 11.9591, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -13.3324, 14.7177, 3.0313, 0.28 ) }
    dend_47 { pt3dadd( -12.8278, 17.7506, 1.93283, 0.28 ) }
    dend_47 { pt3dadd( -12.5306, 19.5374, 1.28573, 0.28 ) }
    dend_47 { pt3dadd( -12.4065, 20.2834, 1.01555, 0.55 ) }
    dend_47 { pt3dadd( -11.7374, 24.305, -0.440957, 0.28 ) }
    dend_47 { pt3dadd( -11.4089, 26.2799, -1.15621, 0.83 ) }
    dend_47 { pt3dadd( -10.7886, 30.0087, -2.50668, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 27/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 5.42664, 39.8924, -9.10015, 0.28 ) }
    dend_41 { pt3dadd( 6.59805, 45.6929, -9.78575, 0.28 ) }
    dend_41 { pt3dadd( 6.84722, 46.9135, -9.95112, 0.55 ) }
    dend_41 { pt3dadd( 7.19266, 48.5221, -10.1761, 0.28 ) }
    dend_41 { pt3dadd( 7.46302, 49.7869, -10.3538, 0.55 ) }
    dend_41 { pt3dadd( 8.58087, 55.0161, -11.0883, 0.28 ) }
    dend_41 { pt3dadd( 9.3703, 58.709, -11.607, 0.83 ) }
    dend_41 { pt3dadd( 10.2939, 62.9754, -12.0464, 0.28 ) }
    dend_41 { pt3dadd( 10.6586, 64.6356, -12.2332, 0.55 ) }
    dend_41 { pt3dadd( 10.7586, 65.0755, -12.2866, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 5.42664, 39.8924, -9.10015, 0.28 ) }
    dend_40 { pt3dadd( 9.27028, 45.2288, -12.6662, 0.28 ) }
    dend_40 { pt3dadd( 11.033, 47.7401, -14.3171, 0.55 ) }
    dend_40 { pt3dadd( 13.4969, 51.1839, -16.5486, 0.28 ) }
    dend_40 { pt3dadd( 13.8945, 51.7315, -16.9486, 0.55 ) }
    dend_40 { pt3dadd( 16.6325, 55.539, -19.8291, 0.28 ) }
    dend_40 { pt3dadd( 17.6094, 56.9347, -20.9958, 0.55 ) }
    dend_40 { pt3dadd( 19.3346, 59.6658, -23.3243, 0.28 ) }
    dend_40 { pt3dadd( 19.858, 60.5541, -24.1978, 0.55 ) }
    dend_40 { pt3dadd( 22.1721, 64.7288, -28.7085, 0.28 ) }
    dend_40 { pt3dadd( 22.4796, 65.443, -29.9353, 0.83 ) }
    dend_40 { pt3dadd( 23.0571, 67.4373, -34.712, 0.28 ) }
    dend_40 { pt3dadd( 23.199, 68.0228, -36.4581, 0.55 ) }
    dend_40 { pt3dadd( 23.3682, 68.6377, -38.8642, 0.28 ) }
    dend_40 { pt3dadd( 23.5914, 69.1562, -41.4603, 0.55 ) }
    dend_40 { pt3dadd( 25.3192, 71.5196, -58.0363, 0.28 ) }
    dend_40 { pt3dadd( 25.5108, 71.6486, -59.3795, 0.55 ) }
    dend_40 { pt3dadd( 26.3141, 71.8212, -63.1853, 0.28 ) }
    dend_40 { pt3dadd( 27.1712, 71.7636, -65.9683, 0.55 ) }
    dend_40 { pt3dadd( 29.0625, 71.4311, -70.2076, 0.28 ) }
    dend_40 { pt3dadd( 29.9878, 71.1819, -71.6192, 0.55 ) }
    dend_40 { pt3dadd( 31.6125, 70.6995, -73.0925, 0.28 ) }
    dend_40 { pt3dadd( 34.2887, 69.7197, -75.5099, 0.55 ) }
    dend_40 { pt3dadd( 38.5674, 67.8508, -79.3035, 0.28 ) }
    dend_40 { pt3dadd( 40.167, 67.0364, -80.7298, 0.55 ) }
    dend_40 { pt3dadd( 42.0821, 65.9571, -82.4291, 0.28 ) }
    dend_40 { pt3dadd( 43.7596, 64.9765, -83.9623, 0.55 ) }
    dend_40 { pt3dadd( 46.3698, 63.4511, -86.5706, 0.28 ) }
    dend_40 { pt3dadd( 47.776, 62.6288, -88.187, 0.83 ) }
    dend_40 { pt3dadd( 52.1603, 60.2457, -93.5818, 0.28 ) }
    dend_40 { pt3dadd( 52.9912, 59.9435, -94.5648, 0.55 ) }
    dend_40 { pt3dadd( 55.0295, 59.5245, -96.8902, 0.28 ) }
    dend_40 { pt3dadd( 56.9437, 59.3991, -99.0325, 0.55 ) }
    dend_40 { pt3dadd( 59.5757, 59.5928, -102.069, 0.28 ) }
    dend_40 { pt3dadd( 60.6826, 59.8319, -103.548, 0.55 ) }
    dend_40 { pt3dadd( 67.7416, 62.2424, -113.689, 0.28 ) }
    dend_40 { pt3dadd( 68.9172, 62.6596, -115.5, 0.55 ) }
    dend_40 { pt3dadd( 72.3366, 63.908, -121.016, 0.28 ) }
    dend_40 { pt3dadd( 73.9813, 64.5305, -123.688, 0.55 ) }
    dend_40 { pt3dadd( 77.9393, 66.1732, -130.378, 0.28 ) }
    dend_40 { pt3dadd( 79.0261, 66.6809, -132.507, 0.55 ) }
    dend_40 { pt3dadd( 80.1236, 67.4411, -135.955, 0.28 ) }
    dend_40 { pt3dadd( 80.8162, 67.7852, -138.213, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 80/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -30.097, -31.4945, 9.17273, 0.28 ) }
    dend_33 { pt3dadd( -27.5298, -35.8149, 10.6988, 0.28 ) }
    dend_33 { pt3dadd( -27.0716, -36.5861, 10.9712, 0.55 ) }
    dend_33 { pt3dadd( -25.2135, -39.713, 12.0757, 0.28 ) }
    dend_33 { pt3dadd( -24.5988, -40.7474, 12.4411, 0.83 ) }
    dend_33 { pt3dadd( -23.0994, -43.2709, 13.3324, 0.28 ) }
    dend_33 { pt3dadd( -22.3499, -44.5321, 13.7779, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -30.097, -31.4945, 9.17273, 0.28 ) }
    dend_32 { pt3dadd( -30.6762, -33.5338, 10.7401, 0.28 ) }
    dend_32 { pt3dadd( -30.7522, -33.8072, 10.9277, 0.83 ) }
    dend_32 { pt3dadd( -31.1565, -35.1969, 11.8726, 0.28 ) }
    dend_32 { pt3dadd( -31.2737, -35.6394, 12.1284, 0.83 ) }
    dend_32 { pt3dadd( -31.6178, -36.8976, 12.7699, 0.28 ) }
    dend_32 { pt3dadd( -31.7117, -37.2295, 12.9196, 0.55 ) }
    dend_32 { pt3dadd( -32.1112, -38.5373, 13.3758, 0.28 ) }
    dend_32 { pt3dadd( -32.6123, -40.0969, 13.8228, 0.83 ) }
    dend_32 { pt3dadd( -33.3809, -42.3019, 14.3475, 0.28 ) }
    dend_32 { pt3dadd( -33.8043, -43.4878, 14.5925, 0.83 ) }
    dend_32 { pt3dadd( -34.3083, -44.8294, 14.8129, 0.28 ) }
    dend_32 { pt3dadd( -34.8382, -46.098, 14.9802, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -35.2639, -47.0088, 15.0453, 0.28 ) }
    dend_32 { pt3dadd( -35.5742, -47.6338, 15.054, 0.55 ) }
    dend_32 { pt3dadd( -36.0413, -48.4562, 15.067, 0.28 ) }
    dend_32 { pt3dadd( -36.4132, -49.1101, 15.077, 0.55 ) }
    dend_32 { pt3dadd( -37.7798, -51.3797, 15.1152, 0.83 ) }
    dend_32 { pt3dadd( -38.6147, -52.7572, 15.1483, 0.28 ) }
    dend_32 { pt3dadd( -39.166, -53.6073, 15.1574, 0.55 ) }
    dend_32 { pt3dadd( -40.632, -55.7434, 15.1543, 0.28 ) }
    dend_32 { pt3dadd( -41.4554, -56.9167, 15.1956, 1.11 ) }
    dend_32 { pt3dadd( -42.9272, -59.0353, 15.3, 0.28 ) }
    dend_32 { pt3dadd( -43.4444, -59.8333, 15.3799, 0.55 ) }
    dend_32 { pt3dadd( -44.4317, -61.4986, 15.6036, 0.28 ) }
    dend_32 { pt3dadd( -44.9151, -62.4028, 15.7315, 0.83 ) }
    dend_32 { pt3dadd( -46.2672, -65.6833, 16.2305, 0.28 ) }
    dend_32 { pt3dadd( -46.6436, -66.9596, 16.4374, 0.83 ) }
    dend_32 { pt3dadd( -47.3102, -70.4104, 17.0196, 0.28 ) }
    dend_32 { pt3dadd( -47.5145, -72.0644, 17.3135, 1.11 ) }
    dend_32 { pt3dadd( -47.5714, -73.0543, 17.4977, 1.11 ) }
    dend_32 { pt3dadd( -47.5989, -75.7864, 18.0621, 0.28 ) }
    dend_32 { pt3dadd( -47.5138, -78.084, 18.5584, 0.28 ) }
    dend_32 { pt3dadd( -47.4898, -78.8392, 18.7131, 0.55 ) }
    dend_32 { pt3dadd( -47.4545, -80.8215, 19.0898, 0.28 ) }
    dend_32 { pt3dadd( -47.4663, -81.79, 19.2418, 0.83 ) }
    dend_32 { pt3dadd( -47.5716, -84.371, 19.5739, 0.28 ) }
    dend_32 { pt3dadd( -47.6332, -85.4026, 19.6813, 0.55 ) }
    dend_32 { pt3dadd( -47.9712, -90.668, 20.1723, 0.28 ) }
    dend_32 { pt3dadd( -48.0497, -91.7516, 20.3048, 0.55 ) }
    dend_32 { pt3dadd( -48.2626, -94.3118, 20.665, 0.28 ) }
    dend_32 { pt3dadd( -48.3293, -95.0545, 20.7804, 0.55 ) }
    dend_32 { pt3dadd( -48.7381, -99.1306, 21.4436, 0.28 ) }
    dend_32 { pt3dadd( -48.9195, -101.309, 21.858, 0.83 ) }
    dend_32 { pt3dadd( -49.0776, -104.355, 22.5715, 0.28 ) }
    dend_32 { pt3dadd( -49.1119, -105.307, 22.773, 0.83 ) }
    dend_32 { pt3dadd( -49.1404, -106.501, 23.0481, 0.28 ) }
    dend_32 { pt3dadd( -49.139, -107.257, 23.1624, 0.55 ) }
    dend_32 { pt3dadd( -49.0993, -109.409, 23.3423, 0.28 ) }
    dend_32 { pt3dadd( -49.0726, -110.181, 23.3916, 0.55 ) }
    dend_32 { pt3dadd( -48.9147, -113.62, 23.5816, 0.28 ) }
    dend_32 { pt3dadd( -48.8696, -114.781, 23.6651, 0.55 ) }
    dend_32 { pt3dadd( -48.6189, -122.516, 24.3663, 0.28 ) }
    dend_32 { pt3dadd( -48.5833, -123.953, 24.5178, 0.83 ) }
    dend_32 { pt3dadd( -48.5288, -128.992, 25.1287, 0.28 ) }
    dend_32 { pt3dadd( -48.5095, -129.866, 25.2396, 0.55 ) }
    dend_32 { pt3dadd( -48.3226, -134.92, 25.9307, 0.28 ) }
    dend_32 { pt3dadd( -48.3021, -135.419, 25.9962, 0.55 ) }
    dend_32 { pt3dadd( -48.1245, -138.338, 26.4433, 0.28 ) }
    dend_32 { pt3dadd( -48.0841, -138.89, 26.532, 0.83 ) }
    dend_32 { pt3dadd( -48.0245, -139.862, 26.6914, 0.83 ) }
    dend_32 { pt3dadd( -47.9528, -141.658, 27.0008, 0.83 ) }
    dend_32 { pt3dadd( -47.861, -143.971, 27.4368, 0.28 ) }
    dend_32 { pt3dadd( -47.8179, -145.724, 27.6537, 0.28 ) }
    dend_32 { pt3dadd( -47.7922, -146.343, 27.6963, 0.55 ) }
    dend_32 { pt3dadd( -47.6929, -148.322, 27.8007, 0.28 ) }
    dend_32 { pt3dadd( -47.6371, -149.558, 27.8482, 0.55 ) }
    dend_32 { pt3dadd( -47.4006, -153.65, 27.9501, 0.28 ) }
    dend_32 { pt3dadd( -47.2502, -156.203, 27.9942, 0.83 ) }
    dend_32 { pt3dadd( -46.8054, -163.285, 28.041, 0.28 ) }
    dend_32 { pt3dadd( -46.7336, -164.179, 28.0369, 0.83 ) }
    dend_32 { pt3dadd( -46.5872, -165.617, 28.0288, 0.28 ) }
    dend_32 { pt3dadd( -46.4958, -166.472, 28.0217, 0.83 ) }
    dend_32 { pt3dadd( -46.1269, -170.017, 27.982, 0.28 ) }
    dend_32 { pt3dadd( -46.0834, -170.447, 27.9929, 0.55 ) }
    dend_32 { pt3dadd( -45.8639, -172.848, 28.0138, 0.28 ) }
    dend_32 { pt3dadd( -45.7396, -174.115, 28.0203, 0.83 ) }
    dend_32 { pt3dadd( -45.4712, -176.683, 28.0518, 0.28 ) }
    dend_32 { pt3dadd( -45.346, -177.962, 28.0672, 0.55 ) }
    dend_32 { pt3dadd( -44.8161, -183.634, 28.137, 0.28 ) }
    dend_32 { pt3dadd( -44.7773, -184.051, 28.1489, 0.55 ) }
    dend_32 { pt3dadd( -44.6515, -185.436, 28.2134, 0.28 ) }
    dend_32 { pt3dadd( -44.4938, -186.937, 28.2926, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.90452, -159.256, -4.03703, 0.28 ) }
    dend_28 { pt3dadd( 9.53739, -160.19, -2.80963, 0.28 ) }
    dend_28 { pt3dadd( 11.2527, -160.799, -2.00996, 0.83 ) }
    dend_28 { pt3dadd( 13.6022, -161.633, -0.914642, 0.28 ) }
    dend_28 { pt3dadd( 15.0176, -162.135, -0.254813, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 75/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 6.90452, -159.256, -4.03703, 0.83 ) }
    dend_27 { pt3dadd( 7.02999, -162.395, -4.10108, 0.83 ) }
    dend_27 { pt3dadd( 7.28382, -165.699, -3.95649, 0.28 ) }
    dend_27 { pt3dadd( 7.37886, -166.353, -3.91371, 0.55 ) }
    dend_27 { pt3dadd( 7.72851, -168.541, -3.76562, 0.28 ) }
    dend_27 { pt3dadd( 7.8345, -169.238, -3.71476, 0.55 ) }
    dend_27 { pt3dadd( 8.08177, -171.032, -3.58291, 0.28 ) }
    dend_27 { pt3dadd( 8.2649, -172.569, -3.41959, 0.83 ) }
    dend_27 { pt3dadd( 8.63253, -175.845, -2.94606, 0.28 ) }
    dend_27 { pt3dadd( 8.69214, -176.783, -2.80688, 0.55 ) }
    dend_27 { pt3dadd( 8.7606, -179.557, -2.44536, 0.28 ) }
    dend_27 { pt3dadd( 8.74331, -180.753, -2.33555, 0.55 ) }
    dend_27 { pt3dadd( 8.57778, -183.631, -2.27009, 0.28 ) }
    dend_27 { pt3dadd( 8.45199, -184.951, -2.26557, 0.83 ) }
    dend_27 { pt3dadd( 8.23469, -187.119, -2.1909, 0.83 ) }
    dend_27 { pt3dadd( 8.1155, -188.851, -2.0896, 0.28 ) }
    dend_27 { pt3dadd( 8.05454, -190.347, -1.95769, 0.55 ) }
    dend_27 { pt3dadd( 7.89629, -195.203, -1.44416, 0.28 ) }
    dend_27 { pt3dadd( 7.82864, -196.76, -1.22857, 0.55 ) }
    dend_27 { pt3dadd( 7.61239, -200.168, -0.686681, 0.28 ) }
    dend_27 { pt3dadd( 7.4008, -202.458, -0.244306, 0.55 ) }
    dend_27 { pt3dadd( 6.96474, -205.722, 0.497834, 0.28 ) }
    dend_27 { pt3dadd( 6.5628, -208.058, 1.04992, 0.55 ) }
    dend_27 { pt3dadd( 5.84024, -211.709, 1.95215, 0.28 ) }
    dend_27 { pt3dadd( 5.30363, -214.303, 2.46808, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_27 { pt3dadd( 4.44045, -218.312, 3.09931, 0.28 ) }
    dend_27 { pt3dadd( 4.16911, -219.735, 3.29161, 0.55 ) }
    dend_27 { pt3dadd( 3.39842, -224.506, 3.84408, 0.28 ) }
    dend_27 { pt3dadd( 3.16506, -226.507, 4.04094, 0.55 ) }
    dend_27 { pt3dadd( 2.78268, -231.328, 4.37831, 0.28 ) }
    dend_27 { pt3dadd( 2.67006, -234.386, 4.55521, 0.83 ) }
    dend_27 { pt3dadd( 2.67974, -237.409, 4.67724, 0.28 ) }
    dend_27 { pt3dadd( 2.69255, -238.081, 4.6938, 0.55 ) }
    dend_27 { pt3dadd( 2.72876, -240.842, 4.75115, 0.28 ) }
    dend_27 { pt3dadd( 2.71486, -241.799, 4.75102, 0.83 ) }
    dend_27 { pt3dadd( 2.62989, -244.486, 4.77341, 0.28 ) }
    dend_27 { pt3dadd( 2.5313, -245.795, 4.73117, 0.55 ) }
    dend_27 { pt3dadd( 2.14363, -248.778, 4.48853, 0.28 ) }
    dend_27 { pt3dadd( 1.99435, -249.8, 4.30701, 0.55 ) }
    dend_27 { pt3dadd( 1.64739, -252.077, 3.78981, 0.28 ) }
    dend_27 { pt3dadd( 1.57359, -252.561, 3.6783, 0.55 ) }
    dend_27 { pt3dadd( 1.35255, -254.034, 3.33606, 0.28 ) }
    dend_27 { pt3dadd( 1.20801, -255.202, 3.10238, 0.55 ) }
    dend_27 { pt3dadd( 0.379612, -263.15, 1.73059, 0.28 ) }
    dend_27 { pt3dadd( 0.0947403, -266.419, 1.25899, 0.83 ) }
    dend_27 { pt3dadd( -0.112795, -269.173, 0.945946, 0.28 ) }
    dend_27 { pt3dadd( -0.199856, -270.782, 0.832885, 0.55 ) }
    dend_27 { pt3dadd( -0.311636, -278.976, 0.692283, 0.28 ) }
    dend_27 { pt3dadd( -0.176892, -280.866, 0.793268, 1.11 ) }
    dend_27 { pt3dadd( 0.0590129, -282.226, 1.019, 0.28 ) }
    dend_27 { pt3dadd( 0.332007, -283.265, 1.24732, 0.55 ) }
    dend_27 { pt3dadd( 1.4854, -286.597, 2.20518, 0.28 ) }
    dend_27 { pt3dadd( 2.25165, -288.513, 2.87365, 0.28 ) }
    dend_27 { pt3dadd( 4.68931, -293.678, 5.02985, 0.28 ) }
    dend_27 { pt3dadd( 5.31306, -294.968, 5.57713, 0.83 ) }
    dend_27 { pt3dadd( 6.00719, -296.408, 6.17484, 0.28 ) }
    dend_27 { pt3dadd( 6.89602, -298.337, 6.93456, 0.83 ) }
    dend_27 { pt3dadd( 8.56258, -302.234, 8.31476, 0.28 ) }
    dend_27 { pt3dadd( 8.74177, -302.812, 8.50342, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -45.6739, -180.925, -33.5173, 0.28 ) }
    dend_25 { pt3dadd( -45.292, -187.999, -33.0748, 0.28 ) }
    dend_25 { pt3dadd( -45.2423, -190.449, -33.1808, 0.55 ) }
    dend_25 { pt3dadd( -45.2307, -192.601, -33.3128, 0.28 ) }
    dend_25 { pt3dadd( -45.2558, -194.02, -33.3912, 0.55 ) }
    dend_25 { pt3dadd( -45.3494, -196.314, -33.5057, 0.28 ) }
    dend_25 { pt3dadd( -45.4625, -198.363, -33.5659, 0.55 ) }
    dend_25 { pt3dadd( -46.0609, -204.648, -33.7231, 0.28 ) }
    dend_25 { pt3dadd( -46.185, -205.72, -33.7271, 0.55 ) }
    dend_25 { pt3dadd( -46.4435, -207.855, -33.6312, 0.28 ) }
    dend_25 { pt3dadd( -46.597, -209.23, -33.4958, 0.55 ) }
    dend_25 { pt3dadd( -46.781, -211.282, -33.1877, 0.28 ) }
    dend_25 { pt3dadd( -46.8774, -213.204, -32.8302, 1.94 ) }
    dend_25 { pt3dadd( -46.9619, -217.003, -31.8816, 0.28 ) }
    dend_25 { pt3dadd( -46.9643, -219.984, -31.1898, 1.38 ) }
    dend_25 { pt3dadd( -46.8968, -222.068, -30.7286, 0.28 ) }
    dend_25 { pt3dadd( -46.8178, -223.419, -30.4409, 0.83 ) }
    dend_25 { pt3dadd( -46.6285, -225.905, -29.9774, 0.28 ) }
    dend_25 { pt3dadd( -46.4133, -227.973, -29.5991, 1.94 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 53/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -45.6739, -180.925, -33.5173, 0.55 ) }
    dend_24 { pt3dadd( -50.5618, -181.924, -34.6808, 0.55 ) }
    dend_24 { pt3dadd( -53.0715, -182.505, -35.0062, 0.28 ) }
    dend_24 { pt3dadd( -53.8781, -182.692, -35.1107, 0.55 ) }
    dend_24 { pt3dadd( -58.3318, -183.723, -35.6881, 0.28 ) }
    dend_24 { pt3dadd( -60.8663, -184.31, -36.0167, 0.83 ) }
    dend_24 { pt3dadd( -65.366, -185.352, -36.6, 0.28 ) }
    dend_24 { pt3dadd( -67.4562, -185.778, -36.4778, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 61/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 20.3227, -28.1323, -6.99043, 0.28 ) }
    dend_16 { pt3dadd( 23.2115, -26.5056, -7.82016, 0.28 ) }
    dend_16 { pt3dadd( 24.0237, -26.0805, -8.01557, 0.83 ) }
    dend_16 { pt3dadd( 27.2929, -24.6257, -8.51865, 0.28 ) }
    dend_16 { pt3dadd( 28.3533, -24.1921, -8.69329, 0.55 ) }
    dend_16 { pt3dadd( 30.2624, -23.4115, -9.00773, 0.28 ) }
    dend_16 { pt3dadd( 31.4743, -22.9159, -9.20734, 0.55 ) }
    dend_16 { pt3dadd( 32.7681, -22.4202, -9.372, 0.55 ) }
    dend_16 { pt3dadd( 35.9083, -21.3436, -9.66373, 0.28 ) }
    dend_16 { pt3dadd( 37.8051, -20.8719, -9.66156, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 71/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 20.3227, -28.1323, -6.99043, 0.28 ) }
    dend_11 { pt3dadd( 19.4385, -31.5512, -6.6564, 0.28 ) }
    dend_11 { pt3dadd( 19.1133, -33.2858, -6.64138, 0.83 ) }
    dend_11 { pt3dadd( 18.7266, -35.746, -6.6663, 0.28 ) }
    dend_11 { pt3dadd( 18.6624, -36.3282, -6.64524, 0.55 ) }
    dend_11 { pt3dadd( 18.4743, -38.6946, -6.48919, 0.28 ) }
    dend_11 { pt3dadd( 18.3589, -41.7584, -6.29419, 1.11 ) }
    dend_11 { pt3dadd( 18.5223, -45.6658, -6.06973, 0.28 ) }
    dend_11 { pt3dadd( 18.6417, -47.0137, -5.9861, 0.55 ) }
    dend_11 { pt3dadd( 19.1445, -50.7235, -5.73607, 0.28 ) }
    dend_11 { pt3dadd( 19.335, -51.8631, -5.66704, 0.55 ) }
    dend_11 { pt3dadd( 20.2247, -56.0195, -5.42486, 0.28 ) }
    dend_11 { pt3dadd( 20.7386, -58.0683, -5.28648, 0.83 ) }
    dend_11 { pt3dadd( 21.5291, -60.9086, -4.99026, 0.28 ) }
    dend_11 { pt3dadd( 21.95, -62.3567, -4.87648, 0.55 ) }
    dend_11 { pt3dadd( 22.6959, -64.8521, -4.77589, 0.28 ) }
    dend_11 { pt3dadd( 23.2041, -66.4975, -4.68731, 0.55 ) }
    dend_11 { pt3dadd( 23.8792, -68.5293, -4.45429, 0.28 ) }
    dend_11 { pt3dadd( 24.5755, -70.556, -4.17658, 0.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 90/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 27.1973, -21.8861, -5.76297, 0.28 ) }
    dend_7 { pt3dadd( 28.1327, -22.157, -4.56345, 0.28 ) }
    dend_7 { pt3dadd( 29.8136, -21.9331, -2.17985, 0.28 ) }
    dend_7 { pt3dadd( 32.0578, -20.8438, 1.23494, 0.28 ) }
    dend_7 { pt3dadd( 32.6864, -20.3175, 2.14377, 0.83 ) }
    dend_7 { pt3dadd( 33.9156, -19.0164, 3.88424, 0.28 ) }
    dend_7 { pt3dadd( 34.5511, -18.3436, 4.78417, 0.83 ) }
    dend_7 { pt3dadd( 35.6595, -16.5242, 6.47379, 0.28 ) }
    dend_7 { pt3dadd( 35.9192, -15.8213, 6.93984, 0.55 ) }
    dend_7 { pt3dadd( 36.5055, -13.5176, 7.83944, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( 36.6295, -13.0051, 8.00921, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 1/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 27.1973, -21.8861, -5.76297, 0.55 ) }
    dend_2 { pt3dadd( 27.2293, -22.3728, -5.82963, 0.55 ) }
    dend_2 { pt3dadd( 27.3985, -23.8448, -5.96301, 0.28 ) }
    dend_2 { pt3dadd( 27.5357, -24.7788, -5.97473, 0.28 ) }
    dend_2 { pt3dadd( 27.6186, -25.3436, -5.98182, 0.55 ) }
    dend_2 { pt3dadd( 27.6793, -25.7571, -5.98701, 0.55 ) }
    dend_2 { pt3dadd( 27.874, -27.0831, -6.00365, 0.83 ) }
    dend_2 { pt3dadd( 28.3989, -30.1749, -5.97535, 0.28 ) }
    dend_2 { pt3dadd( 28.6067, -31.2437, -5.90567, 0.28 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 10/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -32.8064, 16.5906, 11.9591, 0.55 ) }
    dend_60 { pt3dadd( -33.9449, 16.8197, 12.5964, 0.55 ) }
    dend_60 { pt3dadd( -35.4858, 17.1459, 13.5317, 0.28 ) }
    dend_60 { pt3dadd( -36.8533, 17.4911, 14.4661, 0.55 ) }
    dend_60 { pt3dadd( -37.8731, 17.7601, 15.1942, 0.28 ) }
    dend_60 { pt3dadd( -38.3185, 17.9105, 15.5301, 0.28 ) }
    dend_60 { pt3dadd( -38.8518, 18.137, 15.9473, 0.55 ) }
    dend_60 { pt3dadd( -39.7497, 18.5549, 16.7586, 0.55 ) }
    dend_60 { pt3dadd( -40.5153, 19.0307, 17.5525, 0.28 ) }
    dend_60 { pt3dadd( -40.7809, 19.2441, 17.8379, 0.55 ) }
    dend_60 { pt3dadd( -41.5989, 19.9184, 18.6848, 0.28 ) }
    dend_60 { pt3dadd( -42.0579, 20.3955, 19.2045, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 22/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -32.8064, 16.5906, 11.9591, 0.28 ) }
    dend_53 { pt3dadd( -35.189, 16.2404, 12.474, 0.28 ) }
    dend_53 { pt3dadd( -35.5033, 16.186, 12.5054, 0.55 ) }
    dend_53 { pt3dadd( -37.1458, 15.8821, 12.819, 0.28 ) }
    dend_53 { pt3dadd( -37.8284, 15.7409, 12.9906, 0.55 ) }
    dend_53 { pt3dadd( -39.0294, 15.5125, 13.4084, 0.28 ) }
    dend_53 { pt3dadd( -39.9171, 15.3091, 13.8074, 0.55 ) }
    dend_53 { pt3dadd( -43.459, 14.4462, 15.7689, 0.28 ) }
    dend_53 { pt3dadd( -45.6898, 13.8871, 17.135, 0.55 ) }
    dend_53 { pt3dadd( -46.4071, 13.7101, 17.6064, 0.28 ) }
    dend_53 { pt3dadd( -48.2653, 13.2571, 18.9287, 0.28 ) }
    dend_53 { pt3dadd( -51.1726, 12.5361, 20.9771, 0.83 ) }
    dend_53 { pt3dadd( -52.2315, 12.2725, 21.7914, 0.55 ) }
    dend_53 { pt3dadd( -53.542, 11.9503, 22.9206, 0.28 ) }
    dend_53 { pt3dadd( -54.6337, 11.6925, 23.7339, 0.55 ) }
    dend_53 { pt3dadd( -55.9962, 11.3895, 24.6275, 0.28 ) }
    dend_53 { pt3dadd( -57.9648, 10.9154, 25.6363, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 39/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -10.7886, 30.0087, -2.50668, 0.28 ) }
    dend_51 { pt3dadd( -9.84903, 30.5409, -3.05549, 0.28 ) }
    dend_51 { pt3dadd( -9.41474, 30.7869, -3.30919, 0.55 ) }
    dend_51 { pt3dadd( -7.57556, 31.8289, -4.38358, 0.28 ) }
    dend_51 { pt3dadd( -6.61395, 32.3736, -4.94532, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 44/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -10.7886, 30.0087, -2.50668, 0.28 ) }
    dend_48 { pt3dadd( -10.7289, 32.2399, -2.64501, 0.28 ) }
    dend_48 { pt3dadd( -10.6819, 33.9945, -2.75379, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 47/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 10.7586, 65.0755, -12.2866, 0.28 ) }
    dend_43 { pt3dadd( 12.6576, 65.4264, -13.1349, 0.28 ) }
    dend_43 { pt3dadd( 13.0956, 65.4917, -13.3106, 0.55 ) }
    dend_43 { pt3dadd( 13.8553, 65.5675, -13.5738, 0.28 ) }
    dend_43 { pt3dadd( 14.5872, 65.607, -13.8012, 0.55 ) }
    dend_43 { pt3dadd( 15.1989, 65.6308, -13.9937, 0.28 ) }
    dend_43 { pt3dadd( 16.4378, 65.6338, -14.3457, 0.83 ) }
    dend_43 { pt3dadd( 17.7912, 65.604, -14.6644, 0.28 ) }
    dend_43 { pt3dadd( 18.8837, 65.5833, -14.9172, 0.55 ) }
    dend_43 { pt3dadd( 20.6791, 65.5811, -15.3132, 0.28 ) }
    dend_43 { pt3dadd( 21.962, 65.6255, -15.6153, 0.55 ) }
    dend_43 { pt3dadd( 23.8855, 65.7406, -16.0739, 0.28 ) }
    dend_43 { pt3dadd( 25.2028, 65.892, -16.4176, 0.83 ) }
    dend_43 { pt3dadd( 26.6402, 66.152, -16.823, 0.28 ) }
    dend_43 { pt3dadd( 27.2807, 66.3255, -17.0412, 0.55 ) }
    dend_43 { pt3dadd( 28.9848, 66.9286, -17.6953, 0.28 ) }
    dend_43 { pt3dadd( 29.6146, 67.2033, -17.9602, 0.55 ) }
    dend_43 { pt3dadd( 31.3426, 68.0764, -18.7763, 0.28 ) }
    dend_43 { pt3dadd( 32.0409, 68.4623, -19.1351, 0.55 ) }
    dend_43 { pt3dadd( 34.1517, 69.7496, -20.2522, 0.28 ) }
    dend_43 { pt3dadd( 34.7995, 70.1884, -20.6036, 0.83 ) }
    dend_43 { pt3dadd( 35.4984, 70.7457, -20.9739, 0.83 ) }
    dend_43 { pt3dadd( 36.0292, 71.2358, -21.2569, 0.83 ) }
    dend_43 { pt3dadd( 37.3882, 72.7653, -21.9915, 0.28 ) }
    dend_43 { pt3dadd( 38.2201, 73.948, -22.4502, 0.28 ) }
    dend_43 { pt3dadd( 38.4818, 74.4138, -22.5872, 0.55 ) }
    dend_43 { pt3dadd( 39.414, 76.2601, -23.1642, 0.28 ) }
    dend_43 { pt3dadd( 39.6679, 76.7908, -23.3361, 0.55 ) }
    dend_43 { pt3dadd( 40.2461, 78.056, -23.8271, 0.28 ) }
    dend_43 { pt3dadd( 41.1073, 80.0446, -24.6069, 0.28 ) }
    dend_43 { pt3dadd( 41.576, 81.135, -25.0741, 0.83 ) }
    dend_43 { pt3dadd( 42.5745, 83.3755, -26.1262, 0.28 ) }
    dend_43 { pt3dadd( 42.8567, 84.0038, -26.4603, 0.55 ) }
    dend_43 { pt3dadd( 43.817, 85.9647, -27.6195, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 81/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 10.7586, 65.0755, -12.2866, 0.28 ) }
    dend_42 { pt3dadd( 9.83536, 66.9499, -12.2124, 0.28 ) }
    dend_42 { pt3dadd( 9.5541, 67.3585, -12.1977, 0.55 ) }
    dend_42 { pt3dadd( 7.24751, 70.2059, -12.0656, 0.28 ) }
    dend_42 { pt3dadd( 6.97277, 70.4998, -12.054, 0.55 ) }
    dend_42 { pt3dadd( 6.19898, 71.2099, -12.0175, 0.28 ) }
    dend_42 { pt3dadd( 5.46354, 71.7696, -11.9854, 0.55 ) }
    dend_42 { pt3dadd( 2.78484, 73.1481, -11.8611, 0.28 ) }
    dend_42 { pt3dadd( 2.40193, 73.2706, -11.8582, 0.55 ) }
    dend_42 { pt3dadd( 1.37723, 73.4784, -11.8532, 0.28 ) }
    dend_42 { pt3dadd( 0.218551, 73.6907, -11.8731, 0.83 ) }
    dend_42 { pt3dadd( -1.37789, 73.9589, -11.9002, 0.28 ) }
    dend_42 { pt3dadd( -2.597, 74.1989, -11.8745, 0.83 ) }
    dend_42 { pt3dadd( -6.9301, 75.1945, -11.7976, 0.28 ) }
    dend_42 { pt3dadd( -8.50281, 75.6052, -11.7879, 0.55 ) }
    dend_42 { pt3dadd( -10.1771, 76.0775, -11.777, 0.28 ) }
    dend_42 { pt3dadd( -11.1923, 76.3936, -11.807, 0.55 ) }
    dend_42 { pt3dadd( -15.7328, 77.8362, -12.0033, 0.28 ) }
    dend_42 { pt3dadd( -17.0044, 78.2335, -12.0634, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_42 { pt3dadd( -18.2325, 78.6082, -12.1176, 0.28 ) }
    dend_42 { pt3dadd( -19.1433, 78.8597, -12.165, 0.55 ) }
    dend_42 { pt3dadd( -22.2071, 79.6174, -12.3115, 0.28 ) }
    dend_42 { pt3dadd( -23.7447, 79.9212, -12.4247, 0.28 ) }
    dend_42 { pt3dadd( -24.9613, 80.0822, -12.5351, 0.55 ) }
    dend_42 { pt3dadd( -26.1246, 80.2186, -12.6107, 0.28 ) }
    dend_42 { pt3dadd( -27.3412, 80.3815, -12.6968, 0.83 ) }
    dend_42 { pt3dadd( -29.5365, 80.7201, -12.8816, 0.28 ) }
    dend_42 { pt3dadd( -30.844, 80.9466, -12.9895, 0.83 ) }
    dend_42 { pt3dadd( -34.737, 81.753, -13.4954, 0.28 ) }
    dend_42 { pt3dadd( -35.9144, 82.0469, -13.7223, 0.55 ) }
    dend_42 { pt3dadd( -37.5828, 82.558, -14.1232, 0.28 ) }
    dend_42 { pt3dadd( -37.9501, 82.6675, -14.2335, 0.55 ) }
    dend_42 { pt3dadd( -38.4026, 82.7932, -14.3885, 0.28 ) }
    dend_42 { pt3dadd( -39.3519, 83.027, -14.7488, 0.55 ) }
    dend_42 { pt3dadd( -41.6673, 83.4874, -15.6706, 0.28 ) }
    dend_42 { pt3dadd( -43.3564, 83.695, -16.207, 0.83 ) }
    dend_42 { pt3dadd( -48.4438, 84.0351, -17.5421, 0.28 ) }
    dend_42 { pt3dadd( -49.9726, 84.0778, -17.8754, 0.55 ) }
    dend_42 { pt3dadd( -51.58, 84.0796, -18.1528, 0.28 ) }
    dend_42 { pt3dadd( -52.3605, 84.067, -18.2302, 0.55 ) }
    dend_42 { pt3dadd( -56.3738, 83.9256, -18.3869, 0.28 ) }
    dend_42 { pt3dadd( -57.5694, 83.8695, -18.382, 0.55 ) }
    dend_42 { pt3dadd( -59.0835, 83.8235, -18.2454, 0.28 ) }
    dend_42 { pt3dadd( -60.3722, 83.8124, -18.0733, 0.55 ) }
    dend_42 { pt3dadd( -62.7975, 83.8518, -17.6666, 0.28 ) }
    dend_42 { pt3dadd( -63.915, 83.9139, -17.5115, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 27/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -22.3499, -44.5321, 13.7779, 0.55 ) }
    dend_37 { pt3dadd( -20.6754, -44.2028, 14.0559, 0.55 ) }
    dend_37 { pt3dadd( -19.5246, -43.9764, 14.247, 0.28 ) }
    dend_37 { pt3dadd( -18.6371, -43.8019, 14.3943, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 31/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -22.3499, -44.5321, 13.7779, 0.28 ) }
    dend_34 { pt3dadd( -22.3822, -47.5643, 14.3274, 0.28 ) }
    dend_34 { pt3dadd( -22.4186, -48.6932, 14.607, 0.83 ) }
    dend_34 { pt3dadd( -22.4176, -49.2431, 14.6934, 0.83 ) }
    dend_34 { pt3dadd( -22.3773, -50.5195, 14.8545, 0.28 ) }
    dend_34 { pt3dadd( -22.3563, -50.9702, 14.9091, 0.55 ) }
    dend_34 { pt3dadd( -22.3027, -51.7536, 15.0159, 0.28 ) }
    dend_34 { pt3dadd( -22.2155, -52.6241, 15.1513, 0.55 ) }
    dend_34 { pt3dadd( -21.7983, -55.7283, 15.5638, 0.28 ) }
    dend_34 { pt3dadd( -21.6869, -56.307, 15.6366, 0.55 ) }
    dend_34 { pt3dadd( -21.3397, -57.6849, 15.7999, 0.28 ) }
    dend_34 { pt3dadd( -21.1315, -58.4111, 15.8651, 0.55 ) }
    dend_34 { pt3dadd( -20.8802, -59.2402, 15.9235, 0.28 ) }
    dend_34 { pt3dadd( -20.5398, -60.3101, 16.0102, 1.38 ) }
    dend_34 { pt3dadd( -20.3005, -61.0803, 16.1013, 0.83 ) }
    dend_34 { pt3dadd( -19.9791, -62.2813, 16.2185, 0.83 ) }
    dend_34 { pt3dadd( -19.6001, -63.9485, 16.3276, 0.28 ) }
    dend_34 { pt3dadd( -19.5176, -64.5203, 16.3266, 0.55 ) }
    dend_34 { pt3dadd( -19.4901, -65.0232, 16.3142, 0.28 ) }
    dend_34 { pt3dadd( -19.5083, -65.8725, 16.2606, 0.55 ) }
    dend_34 { pt3dadd( -19.6025, -66.7555, 16.2106, 0.28 ) }
    dend_34 { pt3dadd( -19.7367, -67.6284, 16.1837, 1.38 ) }
    dend_34 { pt3dadd( -20.0257, -69.1417, 16.1987, 0.55 ) }
    dend_34 { pt3dadd( -20.2246, -70.2745, 16.2691, 0.28 ) }
    dend_34 { pt3dadd( -20.3619, -71.041, 16.3446, 0.55 ) }
    dend_34 { pt3dadd( -20.6156, -72.5903, 16.5439, 0.28 ) }
    dend_34 { pt3dadd( -20.7385, -73.4631, 16.6707, 1.11 ) }
    dend_34 { pt3dadd( -20.8589, -74.3227, 16.8303, 1.11 ) }
    dend_34 { pt3dadd( -21.3732, -78.2724, 17.6616, 0.28 ) }
    dend_34 { pt3dadd( -21.467, -79.1167, 17.8109, 0.83 ) }
    dend_34 { pt3dadd( -21.7481, -81.8775, 18.2531, 0.28 ) }
    dend_34 { pt3dadd( -21.8096, -82.6928, 18.3643, 0.55 ) }
    dend_34 { pt3dadd( -21.9407, -84.6716, 18.6059, 0.28 ) }
    dend_34 { pt3dadd( -22.0071, -85.9488, 18.744, 0.83 ) }
    dend_34 { pt3dadd( -22.0893, -88.0014, 18.9108, 0.28 ) }
    dend_34 { pt3dadd( -22.1025, -88.5007, 18.9431, 0.83 ) }
    dend_34 { pt3dadd( -22.1412, -90.6723, 19.0362, 0.28 ) }
    dend_34 { pt3dadd( -22.1535, -91.6736, 19.0597, 0.83 ) }
    dend_34 { pt3dadd( -22.1459, -91.8358, 19.0559, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 70/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 37.8051, -20.8719, -9.66156, 0.28 ) }
    dend_18 { pt3dadd( 36.8522, -17.1359, -8.89815, 0.28 ) }
    dend_18 { pt3dadd( 36.5748, -16.0484, -8.67593, 0.83 ) }
    dend_18 { pt3dadd( 35.5108, -11.8774, -7.82363, 0.28 ) }
    dend_18 { pt3dadd( 35.136, -10.4079, -7.52334, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 75/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 37.8051, -20.8719, -9.66156, 0.28 ) }
    dend_17 { pt3dadd( 40.6878, -18.6113, -9.26504, 0.28 ) }
    dend_17 { pt3dadd( 41.807, -17.6344, -9.16007, 0.83 ) }
    dend_17 { pt3dadd( 43.8047, -15.7696, -9.03601, 0.83 ) }
    dend_17 { pt3dadd( 47.8626, -11.7989, -8.98573, 0.28 ) }
    dend_17 { pt3dadd( 52.2506, -7.39982, -9.05067, 0.28 ) }
    dend_17 { pt3dadd( 53.3124, -6.35486, -9.06915, 0.83 ) }
    dend_17 { pt3dadd( 55.4971, -4.10868, -9.15381, 0.28 ) }
    dend_17 { pt3dadd( 57.3414, -2.19524, -9.28423, 0.83 ) }
    dend_17 { pt3dadd( 60.3976, 0.97607, -9.56277, 0.28 ) }
    dend_17 { pt3dadd( 61.3055, 1.74673, -9.69836, 0.55 ) }
    dend_17 { pt3dadd( 62.9106, 2.71958, -9.90742, 0.28 ) }
    dend_17 { pt3dadd( 63.5567, 3.06081, -9.98329, 0.55 ) }
    dend_17 { pt3dadd( 65.9839, 4.0915, -10.2233, 0.28 ) }
    dend_17 { pt3dadd( 66.7736, 4.36302, -10.2989, 0.83 ) }
    dend_17 { pt3dadd( 76.0741, 6.89178, -11.1437, 0.28 ) }
    dend_17 { pt3dadd( 77.6622, 7.30746, -11.3215, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 92/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 24.5755, -70.556, -4.17658, 0.83 ) }
    dend_13 { pt3dadd( 24.5196, -70.7006, -4.22588, 0.83 ) }
    dend_13 { pt3dadd( 23.1406, -73.503, -5.33889, 0.28 ) }
    dend_13 { pt3dadd( 22.0419, -75.5723, -6.14848, 0.83 ) }
    dend_13 { pt3dadd( 20.338, -78.5941, -7.37866, 0.28 ) }
    dend_13 { pt3dadd( 19.607, -79.8613, -7.8841, 0.83 ) }
    dend_13 { pt3dadd( 17.6234, -83.2616, -9.29669, 0.28 ) }
    dend_13 { pt3dadd( 16.4366, -85.1752, -10.1969, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_13 { pt3dadd( 15.7845, -86.121, -10.7087, 0.55 ) }
    dend_13 { pt3dadd( 14.7659, -87.6525, -11.6799, 0.28 ) }
    dend_13 { pt3dadd( 14.3473, -88.3965, -12.1612, 0.55 ) }
    dend_13 { pt3dadd( 13.6773, -89.8031, -13.0389, 0.83 ) }
    dend_13 { pt3dadd( 13.1617, -91.3968, -14.0253, 0.28 ) }
    dend_13 { pt3dadd( 13.0348, -91.9047, -14.3866, 0.55 ) }
    dend_13 { pt3dadd( 12.4071, -94.9148, -16.7577, 0.28 ) }
    dend_13 { pt3dadd( 12.2338, -96.2401, -17.8293, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 8/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 24.5755, -70.556, -4.17658, 0.28 ) }
    dend_12 { pt3dadd( 25.7777, -71.1368, -3.31504, 0.28 ) }
    dend_12 { pt3dadd( 27.0218, -71.4981, -2.31105, 0.83 ) }
    dend_12 { pt3dadd( 29.8591, -72.1073, 0.00312331, 0.28 ) }
    dend_12 { pt3dadd( 31.2207, -72.3096, 1.06745, 0.83 ) }
    dend_12 { pt3dadd( 33.8669, -72.6042, 3.0625, 0.28 ) }
    dend_12 { pt3dadd( 34.6133, -72.6515, 3.59278, 0.55 ) }
    dend_12 { pt3dadd( 40.0125, -72.5804, 7.25732, 0.28 ) }
    dend_12 { pt3dadd( 40.8599, -72.5249, 7.8225, 0.55 ) }
    dend_12 { pt3dadd( 43.304, -72.2504, 9.36868, 0.28 ) }
    dend_12 { pt3dadd( 44.2261, -72.1363, 9.94813, 0.55 ) }
    dend_12 { pt3dadd( 47.5708, -71.6514, 11.9452, 0.28 ) }
    dend_12 { pt3dadd( 48.6446, -71.4887, 12.531, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 36.6295, -13.0051, 8.00921, 0.28 ) }
    dend_9 { pt3dadd( 37.1215, -10.6861, 9.00604, 0.28 ) }
    dend_9 { pt3dadd( 37.1948, -10.3988, 9.12097, 0.55 ) }
    dend_9 { pt3dadd( 39.0259, -3.49509, 11.8712, 0.28 ) }
    dend_9 { pt3dadd( 39.2777, -2.58648, 12.2888, 0.55 ) }
    dend_9 { pt3dadd( 39.8381, -0.62822, 13.2494, 0.28 ) }
    dend_9 { pt3dadd( 40.1978, 0.62863, 13.866, 0.83 ) }
    dend_9 { pt3dadd( 42.2514, 7.59577, 17.3419, 0.28 ) }
    dend_9 { pt3dadd( 42.597, 8.71143, 17.914, 0.55 ) }
    dend_9 { pt3dadd( 44.4644, 14.3045, 20.9626, 0.28 ) }
    dend_9 { pt3dadd( 44.6803, 14.9362, 21.3149, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 36.6295, -13.0051, 8.00921, 0.28 ) }
    dend_8 { pt3dadd( 37.367, -11.3423, 9.24129, 0.28 ) }
    dend_8 { pt3dadd( 37.6876, -10.6165, 9.77762, 0.55 ) }
    dend_8 { pt3dadd( 38.5315, -8.63389, 11.1426, 0.28 ) }
    dend_8 { pt3dadd( 38.8043, -8.00275, 11.5456, 0.55 ) }
    dend_8 { pt3dadd( 40.639, -3.76187, 14.1544, 0.28 ) }
    dend_8 { pt3dadd( 41.093, -2.72129, 14.7633, 0.83 ) }
    dend_8 { pt3dadd( 42.7823, 1.16431, 16.8885, 0.28 ) }
    dend_8 { pt3dadd( 43.3896, 2.56458, 17.6207, 0.83 ) }
    dend_8 { pt3dadd( 44.2259, 4.4441, 18.5498, 0.28 ) }
    dend_8 { pt3dadd( 44.4197, 4.88137, 18.7493, 0.55 ) }
    dend_8 { pt3dadd( 44.9737, 6.13321, 19.1925, 0.28 ) }
    dend_8 { pt3dadd( 45.3241, 6.90243, 19.4164, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 28.6067, -31.2437, -5.90567, 0.83 ) }
    dend_4 { pt3dadd( 28.5966, -31.4231, -5.83465, 0.83 ) }
    dend_4 { pt3dadd( 28.5703, -33.6309, -4.94026, 0.28 ) }
    dend_4 { pt3dadd( 28.5996, -34.6567, -4.59312, 0.55 ) }
    dend_4 { pt3dadd( 28.7015, -36.7569, -3.80375, 0.28 ) }
    dend_4 { pt3dadd( 28.7725, -38.1534, -3.32953, 0.55 ) }
    dend_4 { pt3dadd( 28.8923, -40.6833, -2.4903, 0.28 ) }
    dend_4 { pt3dadd( 29.0173, -42.3129, -1.98341, 0.55 ) }
    dend_4 { pt3dadd( 29.2424, -44.5814, -1.31371, 0.28 ) }
    dend_4 { pt3dadd( 29.4786, -46.8186, -0.674019, 0.83 ) }
    dend_4 { pt3dadd( 29.7952, -49.9143, 0.0896038, 0.28 ) }
    dend_4 { pt3dadd( 30.0176, -52.1602, 0.690645, 0.83 ) }
    dend_4 { pt3dadd( 30.1746, -53.8328, 1.21072, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 58/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 28.6067, -31.2437, -5.90567, 0.28 ) }
    dend_3 { pt3dadd( 26.7075, -31.6753, -4.53544, 0.28 ) }
    dend_3 { pt3dadd( 26.0581, -31.7755, -4.31664, 0.55 ) }
    dend_3 { pt3dadd( 22.9055, -32.2433, -3.442, 0.28 ) }
    dend_3 { pt3dadd( 22.2482, -32.3654, -3.26059, 0.55 ) }
    dend_3 { pt3dadd( 20.1029, -32.8281, -2.62813, 0.28 ) }
    dend_3 { pt3dadd( 18.9259, -33.082, -2.28111, 0.83 ) }
    dend_3 { pt3dadd( 13.3515, -34.0937, -0.877421, 0.28 ) }
    dend_3 { pt3dadd( 12.1214, -34.321, -0.60807, 0.83 ) }
    dend_3 { pt3dadd( 9.98355, -34.7883, -0.273698, 0.28 ) }
    dend_3 { pt3dadd( 8.78639, -35.0672, -0.063272, 0.83 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 69/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -57.9648, 10.9154, 25.6363, 0.55 ) }
    dend_55 { pt3dadd( -59.5226, 9.7902, 26.1253, 0.55 ) }
    dend_55 { pt3dadd( -60.9528, 8.71432, 26.4012, 0.28 ) }
    dend_55 { pt3dadd( -62.1041, 7.82539, 26.5439, 0.28 ) }
    dend_55 { pt3dadd( -64.598, 5.8423, 26.5507, 0.55 ) }
    dend_55 { pt3dadd( -65.7165, 4.96143, 26.5054, 0.28 ) }
    dend_55 { pt3dadd( -65.987, 4.74007, 26.4736, 0.55 ) }
    dend_55 { pt3dadd( -67.9191, 3.06425, 25.9664, 0.28 ) }
    dend_55 { pt3dadd( -68.7312, 2.32204, 25.6463, 0.55 ) }
    dend_55 { pt3dadd( -70.4862, 0.65705, 24.7831, 0.28 ) }
    dend_55 { pt3dadd( -70.935, 0.204045, 24.5159, 0.55 ) }
    dend_55 { pt3dadd( -72.5685, -1.54297, 23.5421, 0.28 ) }
    dend_55 { pt3dadd( -72.7583, -1.78299, 23.4194, 0.83 ) }
    dend_55 { pt3dadd( -73.8976, -3.46472, 22.6679, 0.28 ) }
    dend_55 { pt3dadd( -74.3715, -4.33097, 22.3222, 0.55 ) }
    dend_55 { pt3dadd( -75.5903, -6.9638, 21.5037, 0.28 ) }
    dend_55 { pt3dadd( -76.0848, -8.23123, 21.1895, 0.83 ) }
    dend_55 { pt3dadd( -76.8809, -10.6045, 20.7884, 0.28 ) }
    dend_55 { pt3dadd( -77.0914, -11.3208, 20.7088, 0.55 ) }
    dend_55 { pt3dadd( -77.9817, -14.7865, 20.5304, 0.28 ) }
    dend_55 { pt3dadd( -78.5109, -17.0129, 20.4885, 0.83 ) }
    dend_55 { pt3dadd( -79.0267, -19.3638, 20.5787, 0.28 ) }
    dend_55 { pt3dadd( -79.3074, -20.6196, 20.6681, 0.55 ) }
    dend_55 { pt3dadd( -79.6141, -21.8753, 20.8037, 0.28 ) }
    dend_55 { pt3dadd( -80.105, -23.8063, 21.025, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -57.9648, 10.9154, 25.6363, 0.28 ) }
    dend_54 { pt3dadd( -60.2425, 10.9671, 24.903, 0.28 ) }
    dend_54 { pt3dadd( -60.971, 11.0135, 24.6746, 0.55 ) }
    dend_54 { pt3dadd( -63.3272, 11.2249, 23.9569, 0.28 ) }
    dend_54 { pt3dadd( -64.8615, 11.4175, 23.6258, 0.55 ) }
    dend_54 { pt3dadd( -74.4902, 12.4989, 21.549, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_54 { pt3dadd( -75.3398, 12.6068, 21.3863, 0.55 ) }
    dend_54 { pt3dadd( -78.1989, 13.0401, 20.9205, 0.28 ) }
    dend_54 { pt3dadd( -78.9449, 13.1456, 20.7736, 0.55 ) }
    dend_54 { pt3dadd( -86.1825, 14.1655, 19.2075, 0.28 ) }
    dend_54 { pt3dadd( -90.2275, 14.6317, 18.2123, 0.55 ) }
    dend_54 { pt3dadd( -93.8723, 14.9867, 17.3053, 0.28 ) }
    dend_54 { pt3dadd( -95.2175, 15.0567, 16.9221, 0.55 ) }
    dend_54 { pt3dadd( -101.085, 15.2062, 15.067, 0.28 ) }
    dend_54 { pt3dadd( -101.703, 15.1707, 14.8088, 0.55 ) }
    dend_54 { pt3dadd( -103.839, 14.8382, 13.6716, 0.28 ) }
    dend_54 { pt3dadd( -105.355, 14.486, 12.8049, 0.55 ) }
    dend_54 { pt3dadd( -109.503, 13.213, 10.1125, 0.28 ) }
    dend_54 { pt3dadd( -110.197, 12.9768, 9.61908, 0.55 ) }
    dend_54 { pt3dadd( -115.554, 11.0641, 5.55156, 0.28 ) }
    dend_54 { pt3dadd( -116.242, 10.8037, 4.96218, 0.55 ) }
    dend_54 { pt3dadd( -118.122, 9.9986, 2.9946, 0.28 ) }
    dend_54 { pt3dadd( -119.37, 9.39526, 1.38915, 0.55 ) }
    dend_54 { pt3dadd( -120.984, 8.61526, -1.1058, 0.28 ) }
    dend_54 { pt3dadd( -121.508, 8.41938, -1.91801, 0.28 ) }
    dend_54 { pt3dadd( -121.508, 8.41938, -1.91801, 0.55 ) }
    dend_54 { pt3dadd( -123.934, 7.72529, -4.74146, 0.28 ) }
    dend_54 { pt3dadd( -124.788, 7.47837, -5.69868, 0.55 ) }
    dend_54 { pt3dadd( -128.062, 6.45315, -9.21334, 0.28 ) }
    dend_54 { pt3dadd( -128.749, 6.23859, -9.90065, 0.55 ) }
    dend_54 { pt3dadd( -136.369, 3.83889, -17.1735, 0.28 ) }
    dend_54 { pt3dadd( -139.036, 3.01106, -19.5913, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 26/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -10.6819, 33.9945, -2.75379, 0.28 ) }
    dend_50 { pt3dadd( -8.60788, 35.2483, -6.82403, 0.28 ) }
    dend_50 { pt3dadd( -7.61914, 35.846, -8.76445, 0.55 ) }
    dend_50 { pt3dadd( -6.0003, 36.8246, -11.9414, 0.28 ) }
    dend_50 { pt3dadd( -5.27925, 37.2606, -13.3565, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 31/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -10.6819, 33.9945, -2.75379, 0.28 ) }
    dend_49 { pt3dadd( -12.2885, 36.673, -2.56858, 0.28 ) }
    dend_49 { pt3dadd( -13.0645, 38.0699, -2.54478, 0.55 ) }
    dend_49 { pt3dadd( -14.5943, 40.9721, -2.52214, 0.28 ) }
    dend_49 { pt3dadd( -15.0793, 41.837, -2.55557, 0.55 ) }
    dend_49 { pt3dadd( -16.4355, 44.0731, -2.79571, 0.28 ) }
    dend_49 { pt3dadd( -16.5991, 44.3563, -2.83798, 0.55 ) }
    dend_49 { pt3dadd( -17.7872, 46.5651, -3.38411, 0.28 ) }
    dend_49 { pt3dadd( -18.2686, 47.4297, -3.57542, 0.55 ) }
    dend_49 { pt3dadd( -19.3119, 49.309, -3.95456, 0.28 ) }
    dend_49 { pt3dadd( -20.3447, 51.0994, -4.33255, 0.83 ) }
    dend_49 { pt3dadd( -21.7697, 53.9173, -4.85856, 0.28 ) }
    dend_49 { pt3dadd( -22.3511, 55.1642, -5.08028, 0.55 ) }
    dend_49 { pt3dadd( -25.5027, 62.55, -6.49765, 0.28 ) }
    dend_49 { pt3dadd( -26.015, 63.8698, -6.76241, 0.83 ) }
    dend_49 { pt3dadd( -27.5809, 68.5459, -7.73061, 0.28 ) }
    dend_49 { pt3dadd( -28.9245, 73.0304, -8.7348, 0.28 ) }
    dend_49 { pt3dadd( -29.5788, 75.6442, -9.47897, 0.83 ) }
    dend_49 { pt3dadd( -30.1212, 78.6755, -10.5325, 0.28 ) }
    dend_49 { pt3dadd( -30.2028, 79.9116, -11.0737, 0.55 ) }
    dend_49 { pt3dadd( -30.28, 82.8048, -12.5172, 0.28 ) }
    dend_49 { pt3dadd( -30.2717, 84.2373, -13.3113, 0.55 ) }
    dend_49 { pt3dadd( -30.3169, 88.1923, -15.7613, 0.28 ) }
    dend_49 { pt3dadd( -30.2383, 89.8219, -16.776, 0.55 ) }
    dend_49 { pt3dadd( -30.0712, 92.0417, -18.1726, 0.28 ) }
    dend_49 { pt3dadd( -29.954, 93.4687, -19.1233, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 57/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 43.817, 85.9647, -27.6195, 0.28 ) }
    dend_45 { pt3dadd( 45.7269, 85.722, -28.994, 0.28 ) }
    dend_45 { pt3dadd( 46.8701, 85.5236, -29.7875, 0.55 ) }
    dend_45 { pt3dadd( 48.4957, 85.1734, -31.1324, 0.55 ) }
    dend_45 { pt3dadd( 50.5551, 84.7411, -32.9321, 0.28 ) }
    dend_45 { pt3dadd( 51.3919, 84.537, -33.6839, 0.55 ) }
    dend_45 { pt3dadd( 53.2297, 84.0744, -35.3335, 0.28 ) }
    dend_45 { pt3dadd( 54.0392, 83.8735, -36.1033, 0.55 ) }
    dend_45 { pt3dadd( 56.6631, 83.3613, -38.5422, 0.28 ) }
    dend_45 { pt3dadd( 57.5834, 83.1852, -39.4062, 0.55 ) }
    dend_45 { pt3dadd( 59.9814, 82.7581, -41.6081, 0.28 ) }
    dend_45 { pt3dadd( 60.5527, 82.6712, -42.1565, 0.55 ) }
    dend_45 { pt3dadd( 63.2461, 82.3913, -44.6993, 0.28 ) }
    dend_45 { pt3dadd( 64.6586, 82.3169, -45.9619, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 71/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 43.817, 85.9647, -27.6195, 0.28 ) }
    dend_44 { pt3dadd( 46.3593, 83.3514, -28.7825, 0.28 ) }
    dend_44 { pt3dadd( 47.0414, 82.6502, -29.0946, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 74/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -22.1459, -91.8358, 19.0559, 0.28 ) }
    dend_36 { pt3dadd( -23.0319, -95.8277, 20.384, 0.28 ) }
    dend_36 { pt3dadd( -23.2983, -97.1633, 20.833, 0.55 ) }
    dend_36 { pt3dadd( -24.2699, -103.057, 22.7785, 0.28 ) }
    dend_36 { pt3dadd( -24.4569, -104.275, 23.1536, 0.83 ) }
    dend_36 { pt3dadd( -24.7602, -106.358, 23.7705, 0.83 ) }
    dend_36 { pt3dadd( -25.0165, -108.088, 24.2692, 0.28 ) }
    dend_36 { pt3dadd( -25.2387, -109.8, 24.7527, 0.55 ) }
    dend_36 { pt3dadd( -26.0286, -115.49, 26.3845, 0.28 ) }
    dend_36 { pt3dadd( -26.2723, -116.981, 26.7757, 0.83 ) }
    dend_36 { pt3dadd( -27.2508, -122.034, 27.984, 0.28 ) }
    dend_36 { pt3dadd( -27.8403, -124.361, 28.512, 0.83 ) }
    dend_36 { pt3dadd( -28.6722, -127.15, 29.1222, 0.28 ) }
    dend_36 { pt3dadd( -29.407, -129.397, 29.6021, 0.83 ) }
    dend_36 { pt3dadd( -31.1223, -134.014, 30.5619, 0.28 ) }
    dend_36 { pt3dadd( -32.0817, -136.421, 31.0684, 0.83 ) }
    dend_36 { pt3dadd( -33.457, -139.451, 31.6217, 0.28 ) }
    dend_36 { pt3dadd( -34.6735, -141.961, 32.0305, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.1459, -91.8358, 19.0559, 0.28 ) }
    dend_35 { pt3dadd( -22.139, -93.1987, 19.2856, 0.28 ) }
    dend_35 { pt3dadd( -22.1362, -96.5551, 19.8572, 0.28 ) }
    dend_35 { pt3dadd( -22.1751, -100.516, 20.531, 0.28 ) }
    dend_35 { pt3dadd( -22.2078, -105.294, 21.3502, 0.28 ) }
    dend_35 { pt3dadd( -22.1664, -109.029, 22.0035, 0.28 ) }
    dend_35 { pt3dadd( -22.0852, -112.566, 22.6339, 0.28 ) }
    dend_35 { pt3dadd( -22.0028, -115.915, 23.2462, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( -21.9664, -117.864, 23.6017, 0.28 ) }
    dend_35 { pt3dadd( -21.9132, -120.889, 24.1531, 0.28 ) }
    dend_35 { pt3dadd( -21.5095, -129.535, 25.7642, 0.28 ) }
    dend_35 { pt3dadd( -21.3572, -131.596, 26.1543, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 12.2338, -96.2401, -17.8293, 0.28 ) }
    dend_15 { pt3dadd( 15.2409, -99.9315, -18.8219, 0.28 ) }
    dend_15 { pt3dadd( 15.7631, -100.572, -18.9943, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 7/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 12.2338, -96.2401, -17.8293, 0.28 ) }
    dend_14 { pt3dadd( 10.6698, -98.4107, -17.6231, 0.28 ) }
    dend_14 { pt3dadd( 10.0072, -99.3303, -17.5357, 0.55 ) }
    dend_14 { pt3dadd( 8.83975, -100.95, -17.3818, 0.28 ) }
    dend_14 { pt3dadd( 7.55153, -102.738, -17.2119, 0.83 ) }
    dend_14 { pt3dadd( 4.30857, -107.239, -16.7843, 0.28 ) }
    dend_14 { pt3dadd( 3.46429, -108.411, -16.673, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 14/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 30.1746, -53.8328, 1.21072, 0.83 ) }
    dend_6 { pt3dadd( 30.6429, -54.8056, 1.07108, 0.83 ) }
    dend_6 { pt3dadd( 32.1478, -58.499, 0.721819, 0.28 ) }
    dend_6 { pt3dadd( 32.4193, -59.3154, 0.610503, 0.83 ) }
    dend_6 { pt3dadd( 33.2022, -61.9735, 0.210062, 0.28 ) }
    dend_6 { pt3dadd( 33.414, -62.9433, 0.189633, 0.55 ) }
    dend_6 { pt3dadd( 33.6438, -64.3592, 0.279014, 0.28 ) }
    dend_6 { pt3dadd( 33.7148, -65.4109, 0.462758, 0.55 ) }
    dend_6 { pt3dadd( 33.5694, -67.8603, 1.27046, 0.28 ) }
    dend_6 { pt3dadd( 33.4189, -69.5155, 1.86094, 0.83 ) }
    dend_6 { pt3dadd( 32.8972, -73.8619, 3.36028, 0.28 ) }
    dend_6 { pt3dadd( 32.7749, -74.9031, 3.69958, 0.83 ) }
    dend_6 { pt3dadd( 32.6935, -75.7304, 3.9502, 0.83 ) }
    dend_6 { pt3dadd( 32.1505, -81.7113, 5.71791, 0.28 ) }
    dend_6 { pt3dadd( 32.0967, -82.3679, 5.91276, 0.55 ) }
    dend_6 { pt3dadd( 31.6922, -86.8904, 7.02491, 0.28 ) }
    dend_6 { pt3dadd( 31.6374, -87.7121, 7.10351, 0.55 ) }
    dend_6 { pt3dadd( 31.4648, -91.0677, 7.2214, 0.28 ) }
    dend_6 { pt3dadd( 31.452, -91.6166, 7.21432, 0.83 ) }
    dend_6 { pt3dadd( 31.4577, -92.9847, 7.12219, 0.83 ) }
    dend_6 { pt3dadd( 31.4424, -95.3308, 6.97998, 0.83 ) }
    dend_6 { pt3dadd( 31.2613, -103.436, 6.47668, 0.28 ) }
    dend_6 { pt3dadd( 31.1856, -104.204, 6.43823, 0.55 ) }
    dend_6 { pt3dadd( 30.4685, -108.755, 6.25492, 0.28 ) }
    dend_6 { pt3dadd( 30.2868, -109.592, 6.23439, 0.55 ) }
    dend_6 { pt3dadd( 28.246, -116.158, 6.19827, 0.28 ) }
    dend_6 { pt3dadd( 27.4871, -118.0, 6.25889, 0.83 ) }
    dend_6 { pt3dadd( 24.7997, -122.693, 6.72023, 0.28 ) }
    dend_6 { pt3dadd( 24.189, -123.586, 6.81028, 0.55 ) }
    dend_6 { pt3dadd( 23.1815, -124.809, 6.93778, 0.55 ) }
    dend_6 { pt3dadd( 21.1003, -127.125, 7.20205, 0.28 ) }
    dend_6 { pt3dadd( 20.4152, -127.824, 7.28131, 0.55 ) }
    dend_6 { pt3dadd( 19.5229, -128.876, 7.40764, 0.28 ) }
    dend_6 { pt3dadd( 19.1079, -129.519, 7.48684, 0.55 ) }
    dend_6 { pt3dadd( 18.0441, -131.415, 7.72221, 0.28 ) }
    dend_6 { pt3dadd( 17.6498, -132.184, 7.83184, 0.55 ) }
    dend_6 { pt3dadd( 16.2209, -135.15, 8.27977, 0.28 ) }
    dend_6 { pt3dadd( 15.7157, -136.232, 8.46136, 0.55 ) }
    dend_6 { pt3dadd( 15.3806, -136.962, 8.60882, 0.28 ) }
    dend_6 { pt3dadd( 14.9845, -138.079, 8.91541, 0.55 ) }
    dend_6 { pt3dadd( 14.0153, -141.531, 10.1002, 0.28 ) }
    dend_6 { pt3dadd( 13.8162, -142.323, 10.398, 0.83 ) }
    dend_6 { pt3dadd( 13.4693, -144.035, 11.1323, 0.28 ) }
    dend_6 { pt3dadd( 13.3752, -144.669, 11.4155, 0.55 ) }
    dend_6 { pt3dadd( 13.0367, -149.279, 13.623, 0.28 ) }
    dend_6 { pt3dadd( 13.07, -149.761, 13.8724, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 30.1746, -53.8328, 1.21072, 0.28 ) }
    dend_5 { pt3dadd( 31.0773, -52.7874, 0.743272, 0.28 ) }
    dend_5 { pt3dadd( 31.5687, -52.0453, 0.360821, 0.55 ) }
    dend_5 { pt3dadd( 32.8329, -49.8903, -0.712576, 0.28 ) }
    dend_5 { pt3dadd( 33.1761, -48.9054, -1.10755, 0.55 ) }
    dend_5 { pt3dadd( 33.6839, -47.0445, -1.76208, 0.28 ) }
    dend_5 { pt3dadd( 34.084, -45.3964, -2.13808, 0.83 ) }
    dend_5 { pt3dadd( 35.1171, -40.431, -2.95438, 0.28 ) }
    dend_5 { pt3dadd( 35.3, -39.3577, -3.08128, 0.83 ) }
    dend_5 { pt3dadd( 36.5915, -29.9941, -3.82456, 0.28 ) }
    dend_5 { pt3dadd( 36.8722, -27.2849, -4.01925, 0.83 ) }
    dend_5 { pt3dadd( 37.3786, -19.3518, -4.42308, 0.28 ) }
    dend_5 { pt3dadd( 37.428, -18.2427, -4.4578, 0.55 ) }
    dend_5 { pt3dadd( 37.5199, -15.1988, -4.41436, 0.28 ) }
    dend_5 { pt3dadd( 37.5534, -13.7417, -4.37633, 0.83 ) }
    dend_5 { pt3dadd( 37.5717, -9.48599, -4.052, 0.28 ) }
    dend_5 { pt3dadd( 37.4692, -7.64746, -4.03989, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 77/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -80.105, -23.8063, 21.025, 0.28 ) }
    dend_59 { pt3dadd( -83.2814, -23.072, 21.3648, 0.28 ) }
    dend_59 { pt3dadd( -83.9822, -22.8959, 21.4315, 0.55 ) }
    dend_59 { pt3dadd( -88.3051, -21.7081, 21.9802, 0.28 ) }
    dend_59 { pt3dadd( -88.5226, -21.6447, 22.0147, 0.55 ) }
    dend_59 { pt3dadd( -90.415, -21.101, 22.3887, 0.28 ) }
    dend_59 { pt3dadd( -91.1345, -20.8885, 22.5583, 0.83 ) }
    dend_59 { pt3dadd( -92.014, -20.5904, 22.8437, 0.83 ) }
    dend_59 { pt3dadd( -94.4307, -19.6324, 23.7987, 0.28 ) }
    dend_59 { pt3dadd( -95.2525, -19.1653, 24.2552, 0.55 ) }
    dend_59 { pt3dadd( -96.7882, -18.0654, 25.2577, 0.28 ) }
    dend_59 { pt3dadd( -97.5182, -17.1601, 25.7507, 0.83 ) }
    dend_59 { pt3dadd( -98.2658, -15.9859, 26.2444, 0.28 ) }
    dend_59 { pt3dadd( -98.3846, -15.7606, 26.3174, 0.55 ) }
    dend_59 { pt3dadd( -99.7009, -12.8366, 27.025, 0.28 ) }
    dend_59 { pt3dadd( -100.211, -11.6439, 27.2374, 0.55 ) }
    dend_59 { pt3dadd( -103.074, -4.4835, 28.2662, 0.28 ) }
    dend_59 { pt3dadd( -103.376, -3.72937, 28.3526, 0.83 ) }
    dend_59 { pt3dadd( -104.47, -1.09389, 28.5819, 0.28 ) }
    dend_59 { pt3dadd( -104.762, -0.387941, 28.6263, 0.83 ) }
    dend_59 { pt3dadd( -105.284, 0.87162, 28.6247, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 98/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -80.105, -23.8063, 21.025, 0.28 ) }
    dend_56 { pt3dadd( -81.4843, -29.6159, 19.8236, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_56 { pt3dadd( -81.7806, -30.864, 19.5655, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 1/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -81.7806, -30.864, 19.5655, 0.28 ) }
    dend_58 { pt3dadd( -81.9273, -34.2064, 16.8039, 0.28 ) }
    dend_58 { pt3dadd( -81.9517, -34.7613, 16.3453, 0.55 ) }
    dend_58 { pt3dadd( -81.9773, -35.3457, 15.8625, 0.28 ) }
    dend_58 { pt3dadd( -81.9959, -35.7678, 15.5138, 0.55 ) }
    dend_58 { pt3dadd( -82.1153, -38.4889, 13.2654, 0.28 ) }
    dend_58 { pt3dadd( -82.1634, -39.5839, 12.3607, 0.83 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 8/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -81.7806, -30.864, 19.5655, 0.28 ) }
    dend_57 { pt3dadd( -82.9703, -34.35, 20.6225, 0.28 ) }
    dend_57 { pt3dadd( -83.7503, -35.6363, 20.959, 0.55 ) }
    dend_57 { pt3dadd( -85.3096, -37.7307, 21.4982, 0.28 ) }
    dend_57 { pt3dadd( -86.1768, -38.7094, 21.7164, 0.55 ) }
    dend_57 { pt3dadd( -88.1376, -40.8062, 22.1398, 0.28 ) }
    dend_57 { pt3dadd( -89.2283, -41.9745, 22.3884, 0.55 ) }
    dend_57 { pt3dadd( -92.7101, -45.4965, 23.4264, 0.28 ) }
    dend_57 { pt3dadd( -93.1494, -46.0001, 23.5971, 0.55 ) }
    dend_57 { pt3dadd( -94.7423, -47.9977, 24.3586, 0.28 ) }
    dend_57 { pt3dadd( -96.1273, -50.0133, 25.2544, 0.83 ) }
    dend_57 { pt3dadd( -97.409, -52.2367, 26.4068, 0.28 ) }
    dend_57 { pt3dadd( -97.7227, -53.0044, 26.8328, 0.55 ) }
    dend_57 { pt3dadd( -99.1011, -57.9576, 29.8373, 0.28 ) }
    dend_57 { pt3dadd( -99.3101, -59.0989, 30.5573, 0.83 ) }
    dend_57 { pt3dadd( -99.5652, -61.6985, 32.2378, 0.28 ) }
    dend_57 { pt3dadd( -99.5891, -63.0438, 33.0631, 0.55 ) }
    dend_57 { pt3dadd( -99.4133, -67.1304, 35.4313, 0.28 ) }
    dend_57 { pt3dadd( -99.3128, -68.163, 35.931, 0.83 ) }
    dend_57 { pt3dadd( -98.5454, -72.86, 37.917, 0.28 ) }
    dend_57 { pt3dadd( -98.3786, -73.8899, 38.2859, 0.83 ) }
    dend_57 { pt3dadd( -97.8096, -77.3293, 39.314, 0.28 ) }
    dend_57 { pt3dadd( -97.6111, -78.4478, 39.61, 0.83 ) }
    dend_57 { pt3dadd( -96.5094, -84.3204, 40.9579, 0.28 ) }
    dend_57 { pt3dadd( -96.2678, -85.8384, 41.2364, 0.55 ) }
    dend_57 { pt3dadd( -95.828, -90.2571, 41.7545, 0.28 ) }
    dend_57 { pt3dadd( -95.7666, -91.5702, 41.9133, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_19 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_20 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_25 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_43 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_49 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_36 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_35 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_6 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_5 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_57 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_46 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_10 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_30 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_48 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_52 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_51 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_39 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_31 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_50 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_60 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_33 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_37 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_3 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_4 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_41 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_53 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_15 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_44 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_56 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_58 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_45 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_59 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_35 all.append()
    dend_35 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_22 nseg = 3
    dend_19 nseg = 3
    dend_26 nseg = 5
    dend_23 nseg = 7
    dend_21 nseg = 3
    dend_20 nseg = 3
    dend_40 nseg = 9
    dend_32 nseg = 9
    dend_27 nseg = 7
    dend_25 nseg = 3
    dend_11 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 5
    dend_34 nseg = 3
    dend_17 nseg = 3
    dend_55 nseg = 3
    dend_54 nseg = 5
    dend_49 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 3
    dend_57 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_DBC_393cc5cca5_0_0


