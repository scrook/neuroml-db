// Cell: cACint209_L5_NBC_3bb78a3daa_0_0
/*
{
  "id" : "cACint209_L5_NBC_3bb78a3daa_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "8.74623, 0.781591, -3.68865, 4.22508", "7.81482, 0.663318, -3.30056, 7.44205", "6.88342, 0.545045, -2.91248, 9.35369", "5.95201, 0.426772, -2.52439, 10.2251", "5.0206, 0.308499, -2.13631, 11.1132", "4.0892, 0.190226, -1.74822, 11.7231", "3.15779, 0.071953, -1.36013, 12.5249", "2.22638, -0.04632, -0.972048, 13.4858", "1.29497, -0.164593, -0.583961, 14.2705", "0.363568, -0.282866, -0.195875, 14.5976", "-0.567839, -0.401139, 0.192211, 14.6055", "-1.49925, -0.519412, 0.580297, 14.5425", "-2.43065, -0.637685, 0.968383, 14.4419", "-3.36206, -0.755958, 1.35647, 14.3453", "-4.29347, -0.874231, 1.74456, 13.9568", "-5.22487, -0.992504, 2.13264, 13.5861", "-6.15628, -1.11078, 2.52073, 12.6466", "-7.08769, -1.22905, 2.90881, 10.6767", "-8.01909, -1.34732, 3.2969, 8.182", "-8.9505, -1.4656, 3.68499, 5.29833", "-9.88191, -1.58387, 4.07307, 2.95026" ]
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-8.08418, -1.27152, 8.89042, 2.58", "-8.60777, -1.36406, 8.86354, 2.58", "-9.30824, -1.48787, 8.82759, 2.58", "-10.115, -1.63047, 8.78618, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999708133156
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-4.57418, -7.30402, 4.64042, 1.18", "-4.57418, -7.30402, 4.64042, 1.18", "-5.05829, -9.6024, 5.90207, 1.03", "-5.33404, -12.0935, 7.11444, 1.4", "-5.37768, -13.4446, 7.62021, 2.43", "-5.35448, -14.4792, 7.90505, 3.02", "-5.22037, -16.4696, 8.33551, 2.14", "-4.88147, -18.4783, 8.51037, 1.69", "-4.38902, -20.0195, 8.38884, 1.69", "-3.5527, -22.1002, 7.86381, 2.28", "-3.01628, -23.3318, 7.41542, 3.09", "-2.70048, -24.0197, 7.12624, 3.09", "-1.59524, -26.3652, 6.08699, 2.36", "-0.550973, -28.5236, 5.18825, 1.25", "0.543749, -30.731, 4.41952, 0.81", "1.45275, -32.5385, 4.02161, 0.59", "2.0545, -33.7351, 3.91191, 0.59", "2.5222, -34.6525, 3.95209, 0.88", "3.45398, -36.4343, 4.42511, 0.59", "4.01912, -37.4922, 4.92002, 1.47", "4.65668, -38.5958, 5.62123, 2.14", "5.15166, -39.3991, 6.20042, 2.28", "5.74317, -40.4277, 6.88769, 0.96", "6.15306, -41.252, 7.37725, 0.66", "6.68084, -42.469, 7.93587, 0.66", "7.16587, -43.6693, 8.39259, 0.59", "7.71929, -45.0435, 8.7655, 0.52", "8.32891, -46.5558, 9.05787, 0.37", "8.75179, -47.5132, 9.12561, 1.33", "9.52386, -49.0318, 9.08199, 1.47", "10.0071, -49.8517, 8.999, 1.62", "10.638, -50.8206, 8.91361, 1.62", "11.2537, -51.7383, 8.9394, 1.33", "12.3762, -53.4194, 9.21821, 0.74", "12.855, -54.2787, 9.47568, 0.44", "13.4341, -55.8096, 10.1926, 0.44", "13.8369, -57.3649, 11.0391, 0.44", "14.3209, -59.7783, 12.424, 0.37", "14.5287, -61.1274, 13.1796, 0.37", "14.7023, -62.546, 13.8874, 0.37", "14.9293, -63.8754, 14.3561, 0.37", "15.2317, -65.0671, 14.5892, 0.74", "15.767, -66.6489, 14.7, 0.74", "16.1714, -67.6831, 14.713, 0.74", "16.4688, -68.3742, 14.7557, 0.74", "17.055, -69.8053, 14.9143, 0.59", "17.586, -71.303, 15.0912, 0.59", "17.8998, -72.2852, 15.2001, 2.06", "18.202, -73.2764, 15.2616, 3.09", "18.5306, -74.3483, 15.281, 3.32", "18.7254, -75.0602, 15.3427, 3.32", "19.2428, -77.3153, 15.6543, 0.96", "19.7269, -79.5665, 16.1006, 0.44", "20.0677, -81.6038, 16.729, 0.29", "20.2212, -82.9624, 17.2612, 0.29", "20.3388, -85.94, 18.8021, 1.62", "20.2962, -86.9227, 19.47, 2.21", "20.1949, -87.6268, 20.112, 2.5", "19.8138, -89.5561, 22.1884, 0.74", "19.6347, -90.4964, 23.2331, 0.59", "19.4726, -91.8477, 24.5656, 0.81", "19.4813, -92.7087, 25.1937, 0.81", "19.6899, -94.2684, 26.0573, 0.81", "20.1043, -95.842, 26.5823, 0.52", "20.8341, -97.5228, 26.7131, 0.29", "21.916, -99.5299, 26.5692, 0.29", "22.8977, -101.205, 26.4502, 0.66", "23.6375, -102.412, 26.4379, 0.66", "24.2057, -103.338, 26.4622, 1.11", "24.6375, -104.146, 26.7318, 1.18", "24.6131, -104.78, 27.7365, 0.96", "24.014, -106.449, 31.0583, 0.52", "23.686, -107.008, 32.3636, 0.81", "23.4996, -107.278, 33.0147, 0.81", "22.8141, -108.309, 35.2535, 0.52", "22.5447, -108.797, 36.1495, 0.52", "22.0534, -110.065, 37.9172, 0.96", "21.8946, -111.011, 38.7833, 1.25", "21.8764, -112.236, 39.6425, 1.25", "21.9805, -113.669, 40.5467, 0.88", "22.1302, -114.77, 41.205, 1.47", "22.3369, -116.0, 41.9149, 1.18", "22.5155, -117.072, 42.481, 0.88", "22.7394, -118.563, 43.2278, 0.74", "23.0482, -120.952, 44.3949, 1.11", "23.2332, -122.664, 45.2351, 1.55", "23.3267, -123.859, 45.7997, 1.33", "23.4271, -125.143, 46.3803, 0.74", "23.5321, -126.176, 46.7608, 0.96", "23.7341, -127.64, 47.1584, 0.96", "24.0367, -129.038, 47.2568, 0.74", "24.3346, -130.068, 47.1924, 0.44", "24.8654, -131.66, 47.0071, 0.29", "25.6825, -133.741, 46.5805, 0.88", "25.9625, -134.395, 46.4616, 1.11", "27.1216, -136.929, 46.098, 0.44", "27.8526, -138.464, 46.0105, 0.44", "28.305, -139.39, 46.115, 0.88", "28.65, -140.124, 46.3637, 0.88", "29.791, -142.618, 47.4184, 0.59", "30.2191, -143.568, 47.8107, 0.88", "30.7557, -144.844, 48.2858, 1.11", "31.3388, -146.34, 48.5655, 0.22", "31.7285, -147.509, 48.6966, 0.22", "32.4522, -150.635, 48.9352, 1.18", "32.5699, -151.648, 48.9432, 1.84", "32.584, -153.79, 49.0536, 0.52", "32.4988, -155.308, 49.1477, 0.52", "32.2722, -157.825, 49.3894, 0.74", "32.1558, -159.662, 49.6738, 0.52", "32.1478, -161.44, 50.1071, 0.52", "32.4638, -164.175, 50.6911, 1.47", "32.7684, -165.383, 50.8905, 2.21", "33.1481, -166.369, 50.9609, 2.36", "34.1183, -168.283, 50.9091, 0.37", "35.119, -169.916, 50.7532, 0.37", "36.3683, -171.747, 50.4953, 0.37", "36.9796, -172.671, 50.3408, 0.59", "37.5996, -173.701, 50.1893, 0.74", "38.1717, -174.793, 50.036, 0.74", "38.8138, -176.238, 49.8495, 0.44", "39.4074, -177.811, 49.6991, 0.37", "39.9854, -179.737, 49.6484, 0.37", "40.2962, -180.98, 49.6674, 0.29", "40.6024, -182.506, 49.8291, 1.4", "40.7516, -183.578, 50.0164, 2.28", "40.8046, -184.214, 50.1922, 2.28", "40.8975, -186.425, 50.9794, 0.52", "40.9007, -187.279, 51.3268, 0.52", "40.8037, -189.212, 52.1183, 0.29", "40.6864, -190.876, 52.9006, 0.44", "40.5859, -192.192, 53.5057, 1.11", "40.535, -192.806, 53.771, 1.47", "40.4114, -194.255, 54.4158, 0.74", "40.2931, -195.72, 55.033, 0.29", "40.1651, -197.546, 55.6798, 0.29", "40.0978, -199.345, 56.2689, 0.29", "40.0722, -201.46, 56.8091, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999708133156,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "0.845822, 7.11698, 0.39042, 2.06", "0.918976, 7.9815, 0.429617, 1.55", "1.09069, 9.91377, 0.590281, 1.33", "1.26523, 11.6337, 0.781055, 1.33", "1.43911, 13.1133, 0.977348, 1.33", "1.65919, 14.4504, 1.16473, 1.33", "1.95246, 15.7443, 1.32519, 1.18", "2.36428, 17.0165, 1.47097, 1.47", "2.71959, 17.7468, 1.54516, 1.47", "3.50562, 18.831, 1.59505, 0.88", "4.7837, 20.1066, 1.31187, 1.03", "5.85166, 20.9877, 0.705961, 1.25", "6.50892, 21.5314, 0.00981897, 1.25", "7.1666, 22.1213, -1.1721, 0.96", "7.84494, 22.7512, -2.69199, 0.81", "9.13624, 24.0322, -6.0387, 1.11", "9.92515, 24.8996, -8.29217, 1.33", "10.747, 25.9257, -10.7983, 2.06", "11.8665, 27.4742, -14.2734, 0.66", "12.391, 28.2918, -15.9109, 0.81", "12.695, 28.804, -16.7438, 1.4", "13.2481, 29.6763, -17.7991, 1.47", "13.8745, 30.5776, -18.6599, 1.18", "14.4356, 31.3303, -19.2346, 0.88", "15.0172, 32.1957, -19.7275, 0.88", "15.5693, 33.1572, -20.2891, 1.62", "16.4142, 34.7233, -21.3077, 2.73", "16.6316, 35.1959, -21.6405, 3.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999708133156,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.46418, 5.43548, -5.42958, 1.92", "-4.46418, 5.43548, -5.42958, 1.92", "-5.00196, 6.74123, -5.48809, 1.69", "-5.60316, 8.34546, -5.55391, 1.25", "-5.96657, 9.38202, -5.53631, 1.47", "-6.4348, 10.7977, -5.48338, 1.47", "-7.06425, 12.788, -5.40383, 1.62", "-7.42778, 14.119, -5.36091, 1.62", "-7.5961, 14.9352, -5.34059, 1.84", "-7.80534, 16.3795, -5.32368, 1.92", "-7.8916, 17.1548, -5.36545, 2.21", "-7.95724, 17.8877, -5.43066, 2.5", "-8.04737, 19.0771, -5.61741, 2.5", "-8.08874, 19.7598, -5.78626, 2.28", "-8.1223, 20.6381, -6.09967, 2.28", "-8.14995, 21.6879, -6.63289, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999708133156
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "8.05583, -2.01252, -4.73958, 3.76", "8.05583, -2.01252, -4.73958, 3.76", "9.28428, -2.65259, -5.31682, 3.46", "9.88418, -2.96516, -5.5987, 3.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999708133156
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-9.88191, -1.58387, 4.07307, 0.524843", "-24.7624, -3.47344, 4.07307, 0.524843", "-39.6429, -5.36302, 4.07307, 0.524843" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-10.115, -1.63047, 8.78618, 1.69", "-10.8819, -0.164299, 11.4183, 1.69", "-11.1621, 0.371361, 12.38, 1.69", "-11.7002, 1.40009, 14.2268, 2.58", "-12.2096, 2.37393, 15.9751, 3.54" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-10.115, -1.63047, 8.78618, 1.11", "-10.0526, -4.35827, 10.1819, 1.11", "-10.2762, -7.18374, 11.3618, 0.59", "-10.5054, -8.522, 11.7843, 0.59", "-10.9644, -10.0664, 12.0351, 0.74", "-11.6535, -11.5741, 12.0839, 1.62", "-11.9914, -12.1346, 12.0545, 1.99", "-12.5776, -12.832, 11.8573, 2.28", "-13.278, -13.5889, 11.5592, 2.28", "-14.4976, -14.9654, 10.9464, 1.55", "-15.4755, -16.2978, 10.3437, 1.25", "-16.0584, -17.4175, 9.83594, 1.47", "-16.6221, -19.0453, 9.2784, 0.88", "-16.8623, -20.3569, 8.93972, 0.88", "-16.9261, -22.5773, 8.57851, 0.74", "-16.7445, -24.3677, 8.43135, 0.74", "-16.3984, -26.4605, 8.34289, 0.74", "-15.8943, -29.3447, 8.29332, 1.4", "-15.7595, -30.2249, 8.31767, 1.62", "-15.6253, -31.736, 8.4325, 1.11", "-15.7903, -33.0511, 8.62832, 0.59", "-16.5635, -33.9804, 8.64845, 0.59", "-17.83, -34.6893, 8.39931, 0.96", "-18.5981, -35.0201, 8.10636, 0.96", "-19.6392, -35.4803, 7.59591, 0.37", "-20.7602, -36.0195, 6.92809, 0.37", "-21.9794, -36.7967, 6.02528, 0.81", "-22.6562, -37.4434, 5.3716, 0.81", "-23.3382, -38.4901, 4.48877, 0.66", "-23.9069, -39.9853, 3.44595, 0.52", "-24.0883, -40.8724, 2.92998, 1.25", "-24.2175, -41.9998, 2.33706, 1.92", "-24.2625, -42.6083, 2.05239, 1.92", "-24.3653, -43.9889, 1.44483, 1.18", "-24.5386, -45.9668, 0.602572, 0.52", "-24.7502, -47.7031, -0.126693, 1.11", "-24.9767, -49.0741, -0.721988, 1.77", "-25.1512, -49.7985, -0.981476, 1.92", "-25.4424, -50.6765, -1.23402, 1.92", "-26.1082, -52.0705, -1.53817, 0.88", "-26.6941, -53.1025, -1.71866, 0.59", "-27.5515, -54.478, -1.84955, 0.59", "-29.0886, -56.8356, -1.84514, 1.25", "-29.7292, -57.7613, -1.78188, 1.25", "-30.8827, -59.2967, -1.5228, 1.25" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "16.6316, 35.1959, -21.6405, 1.77", "18.0897, 36.6841, -21.7004, 1.77", "19.9916, 38.4421, -21.5222, 0.74", "21.0543, 39.3647, -21.1973, 0.59", "21.9804, 40.1659, -20.8396, 1.33", "22.5842, 40.7087, -20.6041, 1.33", "23.6822, 41.7357, -20.2212, 1.11", "24.6276, 42.6535, -19.827, 0.96", "26.1086, 44.1145, -19.2038, 0.52", "26.8083, 45.0241, -19.1757, 0.52", "27.3545, 46.0137, -19.6136, 0.96", "27.7804, 46.9149, -20.198, 0.96", "28.3151, 48.1054, -21.1527, 0.96", "28.6113, 48.8273, -21.7583, 1.03", "29.0216, 49.7966, -22.5672, 0.52", "29.3657, 50.6142, -23.1225, 0.52", "29.7736, 51.6182, -23.6493, 0.88", "30.2182, 52.7845, -24.1236, 1.18", "30.5524, 53.7244, -24.4336, 1.55", "30.8924, 54.7647, -24.7516, 1.55", "31.3175, 56.2958, -25.1557, 0.52", "31.5581, 57.2898, -25.3586, 0.52", "31.9155, 58.7935, -25.5094, 1.25", "32.1263, 59.6397, -25.5033, 1.84", "32.4191, 60.6766, -25.4087, 1.84", "33.044, 62.7304, -25.0488, 0.37", "33.517, 64.1541, -24.7004, 0.29", "34.1052, 65.791, -24.2436, 0.29", "34.468, 66.7405, -23.9618, 0.52", "35.0133, 68.054, -23.6117, 0.81", "35.5481, 69.2633, -23.3433, 0.81", "35.9482, 70.1395, -23.2185, 1.25", "36.2129, 70.7387, -23.1716, 1.25", "36.7511, 72.0685, -23.1709, 1.18", "37.4938, 74.1408, -23.2494, 0.59", "37.8636, 75.4028, -23.3576, 0.88", "38.161, 76.6601, -23.546, 1.33", "38.3271, 77.5138, -23.7285, 0.81", "38.5961, 79.2271, -24.1976, 0.37", "38.7438, 80.517, -24.6517, 0.37", "38.84, 81.6672, -25.1532, 0.29", "38.9304, 82.6422, -25.6213, 0.29", "39.0563, 83.4587, -26.0515, 0.29", "39.1598, 83.9167, -26.2911, 0.29", "39.6233, 85.5022, -27.1366, 1.25", "39.8922, 86.379, -27.5804, 1.55", "40.1659, 87.3052, -28.0171, 1.55", "40.6132, 89.0943, -28.8857, 0.88", "40.8045, 90.1635, -29.4564, 0.29", "40.896, 91.0192, -29.9386, 0.29", "40.955, 92.0502, -30.573, 0.81", "40.9656, 92.6384, -30.9606, 1.18", "40.9395, 93.9565, -31.8538, 0.96", "40.8917, 95.3207, -32.7222, 0.59", "40.9509, 96.8466, -33.7506, 1.11", "41.0082, 97.4709, -34.166, 1.47", "41.0988, 98.198, -34.6404, 1.69", "41.2174, 99.1016, -35.1929, 0.74", "41.4385, 100.516, -36.0135, 0.29", "41.8009, 102.344, -37.0679, 0.52", "42.0227, 103.237, -37.5687, 0.52", "42.3449, 104.334, -38.1723, 0.52", "42.5426, 104.924, -38.4923, 0.74", "43.1592, 106.466, -39.3783, 0.29", "43.7403, 107.706, -40.09, 0.29", "44.7385, 109.552, -40.9922, 1.84", "45.5331, 110.737, -41.5167, 2.43", "45.7024, 110.955, -41.6077, 2.8", "46.3376, 111.749, -41.9161, 2.8", "46.8984, 112.456, -42.1705, 1.92", "48.04, 113.944, -42.7341, 0.52", "48.7994, 115.003, -43.1668, 0.52", "49.7315, 116.453, -43.7933, 0.52", "50.5486, 117.71, -44.3731, 0.66", "51.076, 118.537, -44.7894, 0.66", "51.503, 119.214, -45.1741, 0.44", "52.1901, 120.3, -45.8594, 0.29", "52.7308, 121.142, -46.3925, 0.29", "53.5331, 122.252, -47.0304, 0.29", "54.1248, 122.943, -47.4239, 0.29", "54.9887, 123.889, -47.9566, 0.88", "55.3988, 124.341, -48.1983, 1.33", "55.9775, 125.008, -48.535, 1.33", "56.5996, 125.79, -48.9524, 0.81", "57.7547, 127.443, -49.9417, 0.29", "58.298, 128.23, -50.4307, 0.29", "58.8701, 129.151, -51.0317, 0.88", "59.1616, 129.704, -51.399, 1.18", "59.5881, 130.713, -52.0397, 0.81", "60.0154, 132.04, -52.8508, 0.29", "60.1949, 132.804, -53.2844, 0.29", "60.4513, 134.098, -54.0033, 0.29", "60.6657, 135.326, -54.6678, 0.37", "60.86, 136.461, -55.2791, 0.37", "61.0447, 137.467, -55.7849, 1.03", "61.3536, 139.112, -56.5926, 2.21", "61.544, 140.064, -57.0595, 2.8", "61.7514, 140.92, -57.4531, 2.95", "62.178, 142.319, -58.0454, 1.92", "62.6871, 143.732, -58.6191, 0.37", "63.105, 144.733, -58.9637, 0.37", "63.5391, 145.642, -59.2282, 1.03", "63.9631, 146.475, -59.4281, 1.03", "64.4714, 147.393, -59.6159, 0.29", "64.9713, 148.288, -59.7559, 0.29", "65.8012, 149.733, -59.9945, 0.29", "66.6975, 151.338, -60.2514, 2.28", "67.0808, 152.065, -60.3741, 2.5", "67.7702, 153.467, -60.6301, 1.33", "68.4641, 154.944, -60.9327, 0.22", "69.3255, 156.756, -61.3205, 0.22", "70.0674, 158.283, -61.7529, 0.81", "70.4363, 159.038, -62.0196, 0.81", "71.2374, 160.667, -62.7085, 0.29", "71.734, 161.689, -63.1934, 0.81", "72.1762, 162.51, -63.6618, 1.03", "73.3434, 164.578, -64.9456, 0.22", "73.769, 165.307, -65.4104, 0.22", "74.7034, 166.872, -66.4103, 2.14", "75.0634, 167.488, -66.7766, 2.43", "76.3865, 169.777, -68.0473, 0.22", "76.9105, 170.692, -68.5145, 0.44", "77.5153, 171.749, -68.9788, 0.15", "78.3911, 173.261, -69.5801, 0.29", "79.308, 174.858, -70.1608, 0.22", "80.0156, 176.139, -70.5677, 0.74", "80.374, 176.847, -70.7563, 0.74", "81.5618, 179.341, -71.3641, 0.22", "82.0013, 180.336, -71.5795, 0.66", "83.1544, 183.256, -72.1069, 0.22", "83.6004, 184.508, -72.2983, 1.62", "83.9235, 185.548, -72.4245, 1.92", "84.5286, 187.794, -72.667, 0.15", "84.7087, 188.66, -72.7424, 0.52", "84.8325, 189.436, -72.8081, 0.52", "85.1377, 192.011, -73.0185, 0.22", "85.2346, 192.795, -73.0962, 0.66", "85.3541, 193.671, -73.1856, 0.66", "85.5729, 195.256, -73.3198, 0.22", "85.7305, 196.295, -73.3748, 1.03", "85.8018, 196.682, -73.3816, 1.03", "86.1945, 198.364, -73.3447, 0.37", "86.4761, 199.375, -73.2936, 0.22", "86.9821, 200.994, -73.1793, 0.37", "87.3279, 202.021, -73.104, 0.37", "87.6882, 203.067, -73.0334, 0.29", "88.4163, 205.24, -72.8477, 0.22", "88.5755, 205.725, -72.7964, 0.74", "89.0414, 207.132, -72.6321, 0.22", "89.6555, 208.858, -72.4884, 0.59", "90.1202, 210.101, -72.4057, 0.96", "90.6888, 211.556, -72.316, 2.06", "91.0156, 212.338, -72.2728, 2.43", "91.3149, 212.984, -72.2385, 2.43", "92.3343, 214.951, -72.1338, 0.29", "93.0267, 216.154, -72.0712, 0.22", "93.3246, 216.646, -72.0652, 0.66", "94.4857, 218.506, -72.1079, 0.29", "95.2946, 219.811, -72.1443, 0.96", "95.7653, 220.585, -72.1535, 0.96", "96.267, 221.45, -72.1463, 0.66", "97.5456, 223.854, -72.2366, 0.29", "97.9837, 224.775, -72.3065, 0.29", "98.3626, 225.653, -72.4206, 0.88", "98.6388, 226.365, -72.5332, 1.11", "98.8469, 226.961, -72.6417, 1.11", "99.6069, 229.489, -73.1717, 0.22", "99.8742, 230.569, -73.4315, 1.18", "100.024, 231.247, -73.6205, 1.18" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "16.6316, 35.1959, -21.6405, 0.37", "15.2348, 36.9529, -22.3479, 0.37", "14.6828, 37.682, -22.6179, 0.37", "13.9745, 38.6941, -22.9613, 0.37", "13.4627, 39.4591, -23.201, 0.37", "12.6331, 40.8071, -23.5908, 1.69", "12.1931, 41.575, -23.7993, 2.65", "11.8507, 42.2878, -23.9554, 3.02", "11.4581, 43.1687, -24.1423, 3.02", "10.5048, 45.3719, -24.7328, 0.66", "10.0457, 46.4862, -25.0878, 0.81", "9.68307, 47.4376, -25.4323, 0.81", "9.44014, 48.1448, -25.6258, 0.37", "9.20816, 48.9103, -25.7663, 0.37", "8.72177, 50.5563, -25.8776, 0.37", "8.34395, 51.7563, -25.853, 0.96", "7.8936, 52.9684, -25.806, 1.18", "6.82625, 55.8563, -25.6832, 1.11", "6.39174, 57.1736, -25.6067, 0.81", "5.93871, 58.7959, -25.5056, 0.59", "5.6919, 59.8435, -25.4563, 0.52", "5.47885, 60.9702, -25.4118, 0.52", "5.22481, 62.3631, -25.4551, 0.81", "4.99215, 64.143, -25.7616, 2.5", "4.9462, 64.9331, -25.8967, 3.61", "5.0057, 65.9592, -26.0632, 3.98", "5.36671, 68.6711, -26.2612, 1.99" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.14995, 21.6879, -6.63289, 1.33", "-8.10542, 22.9245, -6.63647, 1.33", "-8.05698, 24.2696, -6.64036, 1.33", "-8.00854, 25.6148, -6.64426, 1.33", "-7.96967, 26.6943, -6.64739, 1.47", "-7.93626, 27.6216, -6.65008, 1.92" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-8.14995, 21.6879, -6.63289, 0.29", "-9.49092, 21.7588, -7.67595, 0.29", "-11.1985, 21.9789, -9.09779, 0.29", "-12.434, 22.2236, -10.1201, 0.52", "-13.0609, 22.3624, -10.6177, 0.81", "-15.0254, 22.7143, -12.15, 0.74", "-16.9704, 22.9094, -13.6778, 0.29", "-17.6869, 22.9122, -14.3042, 0.37", "-18.2844, 22.9185, -14.9057, 0.37", "-18.9705, 22.9567, -15.6792, 0.37", "-20.1685, 23.0728, -17.0705, 0.59", "-21.4233, 23.2377, -18.4793, 1.4", "-23.4354, 23.4028, -20.5579, 1.11", "-24.6157, 23.5078, -21.7014, 0.44", "-25.125, 23.5739, -22.1573, 0.44", "-25.6945, 23.6966, -22.5953, 1.11", "-26.146, 23.8371, -22.8342, 1.47", "-26.8066, 24.0456, -23.0022, 1.47", "-28.4572, 24.4396, -23.0159, 0.29", "-29.0991, 24.5796, -22.9774, 0.29", "-29.59, 24.6832, -22.9495, 0.81", "-30.3044, 24.8405, -22.916, 0.96", "-31.0854, 25.0234, -22.8835, 0.59", "-32.1058, 25.3066, -22.9087, 0.22", "-32.6915, 25.4982, -22.9746, 0.22", "-33.4552, 25.7722, -23.1406, 0.44", "-34.5615, 26.1251, -23.4837, 0.44", "-36.1972, 26.5767, -24.0598, 0.29", "-38.1747, 26.988, -24.8315, 1.62", "-39.4813, 27.1738, -25.4798, 2.8", "-40.5075, 27.2632, -26.0366, 3.09", "-43.3124, 27.372, -27.6138, 0.52", "-43.8972, 27.3551, -27.9524, 1.11", "-45.367, 27.2256, -28.8004, 0.96", "-48.6384, 26.7888, -30.5376, 0.29", "-50.2163, 26.531, -31.325, 0.29", "-51.4255, 26.3172, -31.8623, 0.59", "-54.0345, 25.8159, -32.8726, 1.92", "-54.5644, 25.7082, -33.035, 2.87", "-55.4635, 25.5208, -33.1891, 2.87", "-56.5968, 25.2687, -33.1896, 2.28", "-58.4276, 24.8813, -33.0655, 0.37", "-59.9119, 24.5967, -32.8617, 0.29", "-61.0681, 24.3929, -32.6042, 0.29", "-62.3745, 24.1955, -32.3283, 0.22", "-64.2306, 23.9328, -32.0146, 0.22", "-64.7355, 23.8751, -31.9412, 0.96", "-65.5624, 23.8069, -31.865, 1.03", "-66.3279, 23.7737, -31.8217, 1.03", "-68.4918, 23.707, -31.7873, 0.22", "-69.9794, 23.6473, -31.845, 0.37", "-70.9542, 23.6039, -31.9445, 0.22", "-71.7782, 23.5687, -32.0539, 1.18", "-72.4082, 23.5434, -32.1611, 1.69" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "9.88418, -2.96516, -5.5987, 0.96", "10.4773, -3.77461, -6.95258, 0.96", "11.0447, -4.78673, -8.42734, 0.88", "11.4244, -5.56429, -9.40112, 1.18", "11.9678, -6.75295, -10.7303, 1.69", "12.4137, -7.70928, -11.7289, 2.8", "12.9679, -8.766, -12.7824, 3.32", "13.6673, -10.0666, -13.9781, 3.02", "14.4076, -11.231, -15.0173, 1.99", "15.2204, -12.2417, -15.9113, 1.55", "16.4278, -13.366, -16.934, 1.4", "17.5906, -14.0477, -17.779, 1.47", "18.3968, -14.207, -18.3589, 1.47", "19.1847, -14.007, -19.0884, 1.47", "19.7853, -13.594, -20.0704, 1.4", "20.2645, -13.14, -20.9775, 1.25", "20.8981, -12.3265, -22.4698, 1.25", "21.361, -11.5548, -23.9243, 1.84", "21.9163, -10.4052, -26.2244, 2.65", "22.6148, -8.57317, -30.2632, 3.61" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.88418, -2.96516, -5.5987, 1.55", "11.0144, -4.50382, -4.97984, 1.55", "11.9936, -5.71055, -4.51536, 1.25", "12.9533, -6.8038, -4.11833, 1.25", "13.6134, -7.5137, -3.87188, 1.25", "14.8597, -8.80484, -3.45428, 1.25", "16.2179, -10.1794, -3.08726, 1.25", "17.0867, -11.0112, -2.8955, 1.55", "18.1804, -11.9675, -2.70377, 1.84", "18.8103, -12.4802, -2.61425, 1.84", "19.6473, -13.1428, -2.53484, 1.84", "21.0285, -14.2329, -2.55272, 1.69" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-39.6429, -5.36302, 4.07307, 0.379497", "-54.5234, -7.25259, 4.07307, 0.379497", "-69.4039, -9.14217, 4.07307, 0.379497" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-12.2096, 2.37393, 15.9751, 2.73", "-11.5818, 3.54834, 15.8154, 2.73", "-11.2419, 4.18404, 15.7289, 3.09" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-12.2096, 2.37393, 15.9751, 0.52", "-12.0583, 1.40607, 15.5541, 0.52", "-11.8964, 0.36127, 15.4007, 0.52", "-11.7826, -0.637396, 15.3931, 1.11", "-11.7335, -1.37154, 15.4358, 1.11", "-11.7307, -2.36411, 15.5237, 0.74", "-11.8052, -3.38773, 15.624, 1.03", "-12.2798, -6.14739, 16.0352, 0.29", "-12.5138, -6.70265, 16.1347, 0.29", "-12.7391, -7.05267, 16.1933, 0.66", "-13.1562, -7.64975, 16.2636, 0.66", "-13.5836, -8.22621, 16.2851, 0.37", "-14.2881, -9.16975, 16.1478, 0.37", "-14.9551, -10.0925, 15.8129, 0.74", "-15.2883, -10.6043, 15.6164, 0.74", "-15.8431, -11.5796, 15.2346, 0.37", "-16.2094, -12.2906, 14.9528, 0.37", "-16.8569, -13.4963, 14.4529, 0.81", "-17.1444, -13.9357, 14.256, 1.33", "-17.7598, -14.5871, 13.9521, 0.96", "-18.027, -14.8076, 13.8505, 1.69", "-18.3321, -15.0292, 13.7531, 1.69", "-19.2768, -15.7581, 13.4773, 0.37", "-20.0949, -16.4673, 13.265, 0.37", "-21.3348, -17.7007, 12.9316, 0.37", "-21.8746, -18.2861, 12.7772, 0.37", "-22.4003, -18.9738, 12.6071, 0.37", "-22.8843, -19.8353, 12.3996, 0.74", "-23.2257, -20.7541, 12.1866, 0.37", "-23.367, -21.3422, 12.0523, 0.29", "-23.5369, -22.2629, 11.8591, 0.29", "-23.8278, -23.4087, 11.6352, 0.29", "-24.1059, -24.1784, 11.4887, 1.92", "-24.3233, -24.6306, 11.4015, 2.14", "-24.5619, -25.0555, 11.3192, 2.14", "-25.115, -26.0179, 11.135, 0.22", "-25.4935, -26.6833, 11.0102, 0.22", "-25.701, -27.0061, 10.9511, 0.59", "-25.9039, -27.3361, 10.8776, 0.66", "-26.303, -28.0324, 10.6774, 0.22", "-26.6849, -28.7452, 10.4218, 0.22", "-27.0642, -29.4972, 10.1053, 0.52", "-27.2101, -29.7885, 9.97998, 0.74", "-27.684, -30.6483, 9.59225, 0.29", "-27.9485, -31.07, 9.39303, 0.29", "-28.3398, -31.5891, 9.14059, 0.29", "-28.6023, -31.8936, 8.99121, 0.66", "-29.3104, -32.7317, 8.6061, 0.22", "-29.6146, -33.1166, 8.44949, 0.96", "-29.9267, -33.5503, 8.32387, 0.88", "-30.3545, -34.2092, 8.17573, 0.22", "-30.6387, -34.6899, 8.08605, 0.22", "-31.0313, -35.4573, 7.95971, 0.44", "-31.1373, -35.7113, 7.92227, 0.44", "-31.4322, -36.6132, 7.82698, 0.29", "-31.5757, -37.174, 7.78145, 0.88", "-31.65, -37.5264, 7.7575, 1.18", "-31.9029, -38.4395, 7.70411, 0.37", "-32.1459, -39.0682, 7.69324, 0.37", "-32.4972, -39.8364, 7.67976, 1.62", "-32.6503, -40.1608, 7.66228, 1.99", "-33.225, -41.283, 7.58375, 0.29", "-33.7914, -42.2102, 7.50406, 0.29", "-34.648, -43.356, 7.37763, 0.37", "-35.3737, -44.2618, 7.25132, 0.37", "-35.9055, -44.9397, 7.12714, 0.37", "-36.4252, -45.6713, 6.96962, 0.29", "-36.9956, -46.6016, 6.76985, 0.29", "-37.3937, -47.5095, 6.60521, 0.29", "-37.6199, -48.1649, 6.5083, 0.37", "-37.8259, -48.8168, 6.46086, 0.37", "-38.1204, -49.7294, 6.45058, 0.37", "-38.3882, -50.5559, 6.43858, 0.37", "-38.7711, -51.6614, 6.41813, 0.37", "-39.2613, -52.846, 6.47876, 0.44", "-39.5786, -53.4237, 6.5436, 0.59", "-40.1473, -54.2711, 6.6726, 0.59", "-40.7385, -55.0405, 6.82428, 0.37", "-41.1482, -55.5398, 6.92357, 0.37", "-42.1026, -56.6891, 7.17212, 0.74", "-42.4594, -57.1545, 7.27992, 0.74", "-42.9031, -57.7965, 7.41294, 0.37", "-43.2283, -58.3168, 7.4941, 1.47", "-43.3948, -58.6042, 7.5213, 1.47", "-44.1198, -59.8677, 7.46149, 0.29", "-44.4645, -60.4711, 7.3515, 0.59", "-44.811, -61.1101, 7.20126, 0.59", "-45.2721, -62.0122, 6.92195, 3.17", "-45.5781, -62.6812, 6.65536, 3.54", "-46.1294, -64.1246, 5.97522, 0.59", "-46.3127, -64.7553, 5.61818, 0.44", "-46.4579, -65.4656, 5.18036, 0.44", "-46.5806, -66.2216, 4.68495, 0.74", "-46.6911, -66.931, 4.18449, 0.52", "-46.8267, -67.7707, 3.59786, 0.52", "-46.9217, -68.3386, 3.2186, 0.74", "-47.0377, -68.818, 2.93083, 0.74", "-47.3101, -69.6011, 2.51197, 0.37", "-47.5765, -70.184, 2.25201, 0.37", "-48.203, -71.3778, 1.77702, 0.37", "-48.4175, -71.7891, 1.61847, 0.37", "-48.9589, -72.9245, 1.2004, 0.37", "-49.2036, -73.5092, 0.990555, 0.37", "-49.583, -74.5239, 0.645443, 0.37", "-49.7553, -74.9766, 0.518241, 1.03", "-50.1405, -75.9839, 0.280685, 0.74", "-50.3735, -76.6538, 0.137646, 1.18", "-50.6415, -77.5408, -0.033895, 0.37", "-50.8829, -78.4301, -0.210537, 0.37", "-51.3184, -80.0678, -0.557924, 0.29", "-51.5508, -80.8391, -0.727104, 0.29", "-51.898, -81.856, -0.95371, 0.37", "-52.0841, -82.3883, -1.08271, 0.66", "-52.4147, -83.3109, -1.333, 0.44", "-52.8237, -84.3813, -1.66767, 0.44", "-53.1295, -85.0817, -1.93843, 0.44", "-53.4929, -85.7373, -2.24019, 0.29", "-53.7343, -86.131, -2.42753, 0.29", "-54.0885, -86.6823, -2.70584, 0.29", "-54.5121, -87.3381, -3.05821, 1.47", "-54.8019, -87.7678, -3.32231, 1.84", "-55.5838, -88.8883, -4.14142, 0.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-30.8827, -59.2967, -1.5228, 0.52", "-31.7516, -60.8432, -1.66011, 0.52", "-32.4494, -61.8651, -1.60973, 0.52", "-33.6496, -63.3894, -1.41701, 0.52", "-34.8743, -64.9613, -1.32287, 0.52", "-35.9757, -66.387, -1.37634, 0.52", "-36.8754, -67.5459, -1.55394, 0.74", "-37.835, -68.6722, -1.78441, 0.96", "-38.5701, -69.4456, -1.95112, 0.44", "-40.2164, -70.9052, -2.27681, 0.44", "-41.218, -71.8433, -2.70034, 0.66", "-41.856, -72.6792, -3.63586, 1.18" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-30.8827, -59.2967, -1.5228, 0.44", "-31.3511, -60.6238, -2.66892, 0.44", "-31.6837, -61.9204, -3.47831, 0.44", "-31.9224, -63.0971, -4.008, 1.03", "-32.0241, -63.6142, -4.18758, 1.4", "-32.2007, -64.377, -4.49117, 1.4", "-32.4626, -65.3711, -4.94464, 0.88", "-32.7743, -66.6561, -5.56621, 0.59", "-33.0618, -67.6981, -6.11179, 0.44", "-33.362, -68.6616, -6.6868, 0.44", "-33.9349, -70.4347, -7.84904, 0.66", "-34.2315, -71.2763, -8.43182, 0.96", "-34.6707, -72.3532, -9.19619, 0.44", "-35.0516, -73.1744, -9.78664, 0.44", "-35.5632, -74.1697, -10.4959, 0.44", "-36.0371, -74.9864, -11.0444, 0.52", "-36.5909, -75.7961, -11.5351, 0.52", "-37.5953, -76.9656, -12.2584, 1.18", "-38.2097, -77.5177, -12.6389, 1.92", "-39.1989, -78.1872, -13.202, 2.36", "-39.8883, -78.5601, -13.593, 2.36", "-41.0076, -79.1025, -14.2425, 1.18", "-41.8006, -79.5119, -14.7238, 0.52", "-42.5001, -79.9276, -15.1825, 0.52", "-43.4228, -80.614, -15.8163, 0.52", "-43.9044, -81.1265, -16.1728, 0.66", "-44.4191, -81.9682, -16.6493, 0.66", "-44.8688, -83.0967, -17.1548, 0.96", "-45.0328, -83.6398, -17.379, 1.47", "-45.2349, -84.3479, -17.6767, 1.47", "-45.5901, -85.4259, -18.147, 0.44", "-45.9532, -86.2472, -18.5214, 0.44", "-46.6347, -87.3874, -19.0852, 0.44", "-47.4897, -88.4803, -19.6543, 1.84", "-48.3552, -89.4628, -20.0809, 1.84", "-49.3129, -90.501, -20.3281, 1.77", "-50.1044, -91.3641, -20.3762, 1.33", "-50.9758, -92.3994, -20.2245, 0.66", "-51.8791, -93.6142, -19.8901, 0.37", "-52.8514, -95.0868, -19.3997, 0.59", "-54.3425, -97.621, -18.5572, 0.52", "-54.6634, -98.2196, -18.3914, 0.52", "-55.1972, -99.2081, -18.2103, 0.52", "-56.0523, -100.62, -18.0712, 0.81", "-56.9186, -101.743, -18.0851, 0.81", "-57.5564, -102.433, -18.1713, 0.59", "-58.2517, -103.124, -18.2855, 0.44", "-58.9951, -103.865, -18.3301, 0.44", "-60.0294, -104.955, -18.2978, 0.37", "-60.7366, -105.787, -18.1836, 0.59", "-61.5846, -106.84, -18.0438, 0.37", "-62.2843, -107.717, -17.9746, 0.37", "-62.9897, -108.579, -17.9745, 0.44", "-63.4745, -109.168, -18.0262, 0.44", "-64.3157, -110.161, -18.2094, 0.37", "-65.5049, -111.532, -18.5208, 0.37", "-66.0737, -112.157, -18.6753, 1.62", "-66.7298, -112.888, -18.8428, 2.06", "-67.0762, -113.306, -18.9289, 2.06", "-67.8749, -114.453, -19.1563, 0.59", "-68.5869, -115.837, -19.4428, 0.44", "-68.8006, -116.606, -19.6255, 1.18", "-68.8705, -117.311, -19.8363, 1.47", "-68.8428, -117.978, -20.0808, 1.4", "-68.6965, -119.101, -20.5425, 0.66", "-68.5473, -119.821, -20.8576, 0.52", "-68.3092, -120.806, -21.2776, 0.52", "-68.1042, -121.741, -21.6062, 0.59", "-67.9098, -122.799, -21.8921, 0.52", "-67.7308, -124.111, -22.1544, 0.52", "-67.6257, -125.188, -22.2742, 0.88", "-67.5692, -125.982, -22.3058, 1.11", "-67.4917, -127.284, -22.303, 1.47", "-67.4517, -128.17, -22.3054, 0.66", "-67.4337, -129.265, -22.3569, 0.44", "-67.4698, -130.778, -22.5534, 0.37", "-67.5416, -131.73, -22.7541, 0.37", "-67.6666, -132.713, -23.0518, 0.88", "-67.8697, -133.793, -23.4682, 0.81", "-68.3084, -135.367, -24.1198, 0.52", "-68.6895, -136.381, -24.5286, 1.4", "-69.0451, -137.138, -24.8191, 2.14", "-69.3354, -137.673, -24.9972, 2.43", "-69.9527, -138.699, -25.2688, 2.14", "-70.9491, -140.244, -25.5828, 0.74", "-71.8232, -141.531, -25.7894, 0.59", "-72.3573, -142.36, -25.9031, 1.11", "-72.619, -142.809, -25.962, 1.33", "-73.0161, -143.59, -26.0802, 1.33", "-73.507, -144.77, -26.2873, 0.52", "-73.8054, -145.718, -26.4861, 0.37", "-74.0956, -146.844, -26.7678, 0.37", "-74.219, -147.402, -26.8913, 0.37", "-74.4338, -148.43, -27.0922, 0.37", "-74.7536, -149.865, -27.336, 1.03", "-74.9091, -150.459, -27.4197, 1.4", "-75.1802, -151.323, -27.54, 1.4", "-75.6033, -152.568, -27.7105, 0.37", "-75.796, -153.209, -27.8089, 0.37", "-75.9352, -153.885, -27.906, 0.96", "-75.98, -154.394, -27.995, 0.96", "-75.9728, -155.647, -28.1901, 0.29", "-75.877, -156.594, -28.3007, 0.29", "-75.7167, -157.509, -28.383, 0.59", "-75.4648, -158.595, -28.4285, 0.37", "-75.2384, -159.47, -28.4304, 0.66", "-75.0492, -160.162, -28.4063, 0.96", "-74.8497, -160.925, -28.3309, 0.96", "-74.7033, -161.622, -28.2431, 0.37", "-74.3653, -163.272, -28.0035, 0.37", "-74.2603, -163.785, -27.9436, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.36671, 68.6711, -26.2612, 0.52", "7.43161, 69.6142, -31.2698, 0.52", "7.77692, 69.8224, -32.0756, 0.74", "8.82978, 70.6076, -34.3184, 0.52", "9.24187, 70.9702, -35.1046, 0.29", "9.6443, 71.3574, -35.7867, 0.29", "10.0051, 71.7207, -36.3314, 0.88", "10.3111, 72.1621, -36.6448, 0.88", "10.763, 72.851, -37.114, 0.29", "11.1573, 73.4918, -37.4965, 0.81", "11.4802, 74.0144, -37.8343, 0.81", "12.0374, 74.9839, -38.4946, 0.22", "12.4415, 75.8806, -39.1255, 1.25", "12.6353, 76.5242, -39.5872, 1.55", "12.7742, 77.4013, -40.2197, 0.29", "12.7561, 77.8531, -40.5287, 0.22", "12.6527, 78.3871, -40.8624, 0.22", "12.425, 79.1308, -41.2854, 1.84", "12.1986, 79.7412, -41.6133, 2.14", "12.0066, 80.2046, -41.8682, 2.87", "11.287, 81.828, -42.7929, 0.44", "10.9828, 82.5052, -43.1356, 0.44", "10.597, 83.3696, -43.5217, 1.55", "10.4275, 83.7418, -43.6757, 2.28", "10.2843, 84.0533, -43.7912, 2.43", "10.0456, 84.5837, -43.971, 2.43", "9.45372, 85.9567, -44.3668, 0.29", "9.05989, 86.8313, -44.6103, 0.29", "8.77059, 87.4193, -44.7807, 0.59", "8.42373, 88.1022, -44.9936, 0.59", "8.13701, 88.6506, -45.1711, 0.37", "7.82882, 89.2379, -45.3771, 0.37", "7.52722, 89.8076, -45.6662, 0.37", "7.28464, 90.3166, -45.9295, 0.37", "7.04717, 90.9435, -46.2405, 0.66", "6.94155, 91.2857, -46.4024, 0.88", "6.8453, 91.6458, -46.5601, 0.88", "6.55979, 92.9189, -47.0716, 0.29", "6.44551, 93.587, -47.3202, 0.29", "6.24237, 95.2568, -47.8923, 0.29", "6.15327, 96.1949, -48.1961, 0.52", "6.08772, 96.999, -48.4309, 0.59", "6.06844, 97.3111, -48.5166, 0.59", "6.04441, 97.9425, -48.6687, 0.29", "6.00462, 99.0939, -49.012, 1.77", "5.99424, 99.5236, -49.1652, 3.09", "5.9566, 100.784, -49.66, 0.29", "5.91388, 101.604, -49.9991, 0.59", "5.85575, 102.172, -50.2414, 0.74", "5.71045, 103.138, -50.6773, 0.22", "5.58756, 103.771, -50.9987, 0.22", "5.44319, 104.366, -51.3844, 0.22", "5.33305, 104.725, -51.6853, 0.22", "5.14953, 105.259, -52.2155, 1.11", "5.03399, 105.579, -52.5815, 1.4", "4.9611, 105.794, -52.8492, 1.4", "4.66272, 106.845, -54.2708, 0.22", "4.54992, 107.349, -54.968, 0.22", "4.49045, 107.858, -55.6483, 0.74", "4.47986, 108.193, -56.0677, 0.74", "4.50263, 109.144, -57.1104, 0.29", "4.57758, 110.092, -58.022, 0.59", "4.6285, 110.454, -58.3147, 0.22", "4.82471, 111.527, -59.1193, 0.22", "4.89369, 111.894, -59.3727, 0.22", "5.04756, 112.651, -59.8472, 1.47", "5.09998, 112.941, -60.0115, 1.77", "5.17428, 113.492, -60.2965, 1.77", "5.28397, 114.714, -60.9119, 0.29", "5.31945, 115.448, -61.2799, 0.29", "5.3487, 116.184, -61.6842, 0.29", "5.36731, 116.749, -62.0035, 0.29", "5.41619, 117.707, -62.527, 0.66", "5.45065, 118.143, -62.7515, 0.66", "5.54026, 119.008, -63.1602, 0.66", "5.63806, 119.728, -63.4896, 0.37", "5.75273, 120.417, -63.7691, 0.29", "5.99004, 121.664, -64.2111, 2.28", "6.10286, 122.239, -64.3883, 2.65", "6.34523, 123.527, -64.7153, 0.29", "6.47915, 124.291, -64.8629, 0.52", "6.73738, 125.852, -65.1031, 0.22", "6.80442, 126.258, -65.1577, 0.44", "6.89938, 126.86, -65.2249, 0.44", "7.07578, 127.945, -65.3365, 0.22", "7.27575, 129.092, -65.4397, 0.22", "7.42413, 129.91, -65.5076, 0.22", "7.76249, 131.698, -65.643, 0.22", "7.95921, 132.67, -65.7104, 0.88", "8.03887, 133.054, -65.7348, 1.25", "8.09484, 133.316, -65.7504, 1.25", "8.27537, 134.199, -65.8073, 0.15", "8.44389, 135.067, -65.8755, 0.15", "8.63186, 136.043, -66.037, 0.15", "8.75798, 136.692, -66.1928, 0.74", "9.0508, 138.166, -66.6223, 0.22", "9.19786, 138.862, -66.8558, 0.88", "9.29281, 139.272, -67.0169, 0.88", "9.87594, 141.568, -68.0494, 0.22", "10.0514, 142.209, -68.3754, 1.11", "10.2476, 142.877, -68.7509, 1.47", "10.5222, 143.766, -69.3163, 0.22", "10.712, 144.366, -69.7139, 0.96", "10.8531, 144.837, -70.0132, 0.96", "11.0949, 145.666, -70.5187, 0.29", "11.2252, 146.15, -70.8013, 0.66", "11.4009, 146.843, -71.1949, 0.66", "11.8685, 148.612, -72.251, 0.22", "12.189, 149.748, -72.93, 0.22", "12.4608, 150.612, -73.4521, 0.22", "12.694, 151.251, -73.8577, 1.4", "12.9001, 151.756, -74.1979, 1.62", "13.6345, 153.326, -75.3756, 0.22", "13.9458, 153.798, -75.9105, 0.44", "14.3202, 154.272, -76.5437, 0.22", "14.7892, 154.826, -77.3244, 0.88", "15.0962, 155.188, -77.8411, 1.4", "15.5004, 155.689, -78.5419, 1.4", "16.7884, 157.549, -81.0455, 1.4", "17.3013, 158.472, -82.2313, 0.22", "17.5918, 159.141, -83.0314, 0.22", "17.7376, 159.619, -83.5442, 1.18", "17.8533, 160.211, -84.094, 1.18", "17.9649, 161.263, -84.9354, 0.22", "17.9492, 162.003, -85.411, 0.96", "17.9276, 162.357, -85.6922, 0.96", "17.8366, 163.29, -86.4508, 0.59", "17.791, 163.838, -86.9013, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "5.36671, 68.6711, -26.2612, 0.81", "3.24407, 70.368, -24.3128, 0.81", "2.54814, 70.981, -23.6992, 0.44", "1.81822, 71.6586, -23.1281, 0.44", "1.00408, 72.4445, -22.5643, 0.44", "-0.442333, 73.9529, -21.6679, 0.81", "-0.956369, 74.53, -21.3544, 0.81", "-1.4744, 75.2459, -21.0868, 0.52", "-1.9523, 76.0461, -20.7664, 0.52", "-2.1724, 76.5361, -20.564, 0.52", "-2.45684, 77.4599, -20.2039, 0.66", "-2.69993, 78.5723, -19.8398, 0.52", "-2.93932, 79.8252, -19.3658, 0.44", "-3.04609, 80.6528, -19.0387, 0.29", "-3.12822, 81.5596, -18.6979, 0.29", "-3.16437, 82.2304, -18.5218, 0.88", "-3.17596, 82.6443, -18.4788, 1.25", "-3.18424, 83.1562, -18.5187, 1.25", "-3.19515, 83.8968, -18.6747, 1.03", "-3.25004, 84.7035, -18.8182, 0.66", "-3.34349, 85.8008, -18.9886, 0.59", "-3.44535, 86.4693, -19.0309, 0.59", "-3.71155, 87.667, -18.9701, 1.18", "-3.96803, 88.6084, -18.8313, 1.18", "-4.4987, 90.1739, -18.4011, 0.81", "-4.757, 90.8161, -18.1599, 0.52", "-5.44042, 92.2689, -17.5186, 0.52", "-5.9176, 93.1963, -17.103, 0.81", "-6.30989, 93.9444, -16.8, 0.44", "-6.92649, 95.1945, -16.3965, 1.25", "-7.23469, 95.9147, -16.2612, 1.92", "-7.45662, 96.4898, -16.1882, 2.14", "-7.80322, 97.5445, -16.1845, 1.03", "-8.24301, 99.0193, -16.3026, 0.66", "-8.51115, 99.9745, -16.4513, 0.74", "-8.75223, 100.949, -16.6958, 0.74", "-8.94746, 101.822, -16.9619, 0.59", "-9.10484, 102.652, -17.2407, 0.59", "-9.18097, 103.265, -17.4835, 0.81", "-9.22375, 103.97, -17.8029, 0.81", "-9.19739, 104.937, -18.2696, 0.52", "-9.0779, 105.988, -18.7877, 0.52", "-8.91175, 107.186, -19.3976, 0.52", "-8.75047, 108.27, -19.9051, 1.03", "-8.6709, 108.743, -20.1087, 1.03", "-8.50414, 109.735, -20.4819, 0.29", "-8.39929, 110.46, -20.7085, 0.29", "-8.3091, 111.518, -20.9898, 0.29", "-8.32396, 112.386, -21.1747, 0.37", "-8.42529, 113.293, -21.3337, 0.37", "-8.54495, 113.988, -21.4597, 0.52", "-8.74977, 114.822, -21.6261, 0.74", "-8.87134, 115.32, -21.7259, 0.74", "-9.01562, 116.078, -21.8689, 0.29", "-9.10551, 116.54, -21.9611, 0.52", "-9.18028, 116.975, -22.0425, 0.52", "-9.29618, 117.79, -22.1857, 0.29", "-9.37155, 118.331, -22.2844, 0.29", "-9.44523, 118.985, -22.3977, 0.37", "-9.48778, 119.465, -22.4975, 0.37", "-9.54331, 120.305, -22.6855, 0.29", "-9.67758, 121.348, -22.8738, 0.29", "-9.80058, 121.981, -22.9809, 0.29", "-10.1099, 123.177, -23.1887, 0.29", "-10.3901, 124.216, -23.3524, 1.55", "-10.4832, 124.572, -23.3908, 2.14", "-11.0749, 127.024, -23.5265, 0.22", "-11.2742, 128.062, -23.5079, 0.52", "-11.4148, 128.97, -23.4409, 0.22", "-11.5726, 130.173, -23.2946, 0.22", "-11.6756, 131.227, -23.1268, 0.74", "-11.6888, 131.562, -23.0737, 0.74", "-11.611, 132.538, -22.9217, 0.29", "-11.5509, 133.082, -22.8355, 0.59", "-11.5022, 133.574, -22.7647, 0.59", "-11.4666, 134.326, -22.7057, 0.22", "-11.4447, 134.95, -22.7092, 0.22", "-11.4253, 135.705, -22.7349, 0.96", "-11.4024, 136.332, -22.7808, 0.96" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "5.36671, 68.6711, -26.2612, 0.44", "5.45096, 70.2076, -25.8811, 0.44", "5.47646, 71.407, -25.4969, 0.37", "5.49022, 72.6951, -25.0479, 0.37", "5.50778, 73.9725, -24.5932, 0.37", "5.50546, 74.7149, -24.3107, 0.37", "5.5058, 75.902, -23.8035, 0.96", "5.498, 76.5887, -23.4219, 1.25", "5.48999, 76.9563, -23.1877, 1.55", "5.47886, 77.5017, -22.8225, 1.55", "5.46415, 78.7852, -21.9941, 0.74", "5.41023, 80.3169, -21.0732, 0.52", "5.33737, 81.5193, -20.4242, 0.52", "5.26292, 82.7491, -19.7632, 0.52", "5.16438, 84.0719, -19.048, 0.52", "5.07808, 85.0319, -18.5401, 0.52", "4.97241, 86.1082, -18.0341, 0.52", "4.79794, 87.2262, -17.6206, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.93626, 27.6216, -6.65008, 0.59", "-7.43256, 27.8284, -7.3281, 0.59", "-7.01574, 28.062, -7.85547, 1.11", "-5.7319, 28.9972, -9.30491, 0.66", "-4.96339, 29.7368, -10.0471, 0.52", "-4.2805, 30.5557, -10.5864, 0.66", "-3.99027, 30.9671, -10.7674, 0.88", "-3.70508, 31.4611, -10.8692, 1.18", "-3.26147, 32.3193, -10.8855, 0.96", "-2.8264, 33.1954, -10.7853, 0.74", "-2.47156, 33.8443, -10.6731, 0.74", "-1.9789, 34.5452, -10.535, 1.18", "-1.52046, 35.0603, -10.4419, 0.81", "-0.648916, 35.9046, -10.3408, 0.44", "-0.109723, 36.3556, -10.334, 0.59", "0.564112, 36.8716, -10.37, 0.59", "1.05586, 37.2517, -10.4041, 0.44", "1.28722, 37.4527, -10.4193, 0.44", "1.87628, 38.0874, -10.4628, 0.44", "2.27438, 38.6482, -10.4902, 0.81", "2.70467, 39.3336, -10.5661, 1.11", "3.04092, 39.8801, -10.6633, 1.11", "3.56537, 40.6433, -10.8498, 0.66", "4.08618, 41.3023, -11.0624, 0.59", "4.91705, 42.1486, -11.357, 0.44", "5.98798, 43.0025, -11.6542, 0.74", "6.56454, 43.3663, -11.7838, 1.03", "7.53496, 43.8172, -11.958, 1.77", "8.57802, 44.1551, -12.0877, 3.09", "10.0546, 44.483, -12.1763, 3.09", "11.9495, 44.7677, -12.1696, 0.37", "12.5447, 44.8353, -12.1226, 0.52", "13.661, 44.9376, -11.9873, 0.29", "14.1701, 44.9672, -11.9067, 0.88", "14.6419, 44.979, -11.822, 0.88", "15.3558, 45.0069, -11.7455, 0.29", "16.0284, 45.0713, -11.7255, 0.59", "16.5495, 45.1875, -11.706, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.93626, 27.6216, -6.65008, 0.74", "-9.63492, 27.1393, -6.31976, 0.74", "-10.3068, 27.0008, -6.15729, 0.37", "-11.1008, 26.9072, -5.95496, 0.37", "-11.7687, 26.8698, -5.78311, 0.74", "-12.5543, 26.8689, -5.58382, 0.74", "-13.5089, 26.9429, -5.35047, 0.37", "-14.6004, 27.0917, -5.08693, 1.03", "-15.3484, 27.2793, -4.91489, 1.55", "-15.8197, 27.4567, -4.81337, 1.84", "-16.5205, 27.8043, -4.67488, 1.47", "-17.5502, 28.4563, -4.48901, 0.74", "-18.4555, 29.1327, -4.3726, 0.44", "-18.8567, 29.458, -4.34327, 0.74", "-19.4483, 29.9764, -4.31053, 0.37", "-20.5101, 30.9816, -4.26845, 0.29", "-21.1761, 31.6427, -4.24872, 0.29", "-21.6895, 32.1948, -4.17496, 0.22", "-22.055, 32.6486, -4.04718, 1.03", "-22.3723, 33.0896, -3.88606, 1.47", "-22.7575, 33.6599, -3.65311, 1.47", "-23.3391, 34.5182, -3.27075, 0.52", "-24.2364, 35.7423, -2.73914, 0.52", "-24.9036, 36.6678, -2.38655, 0.37", "-25.2759, 37.1898, -2.26022, 0.29", "-25.7411, 37.7759, -2.19514, 0.29", "-26.1673, 38.248, -2.23888, 0.74", "-26.6931, 38.8033, -2.3243, 0.88", "-27.1848, 39.3058, -2.41599, 0.88", "-27.7724, 39.9468, -2.45746, 0.81", "-28.4552, 40.9166, -2.34673, 0.52", "-28.9344, 41.9329, -2.12209, 0.52", "-29.3302, 43.4865, -1.74937, 0.96", "-29.4353, 44.2895, -1.5535, 1.4", "-29.5335, 45.3513, -1.29221, 1.4", "-29.661, 46.6161, -0.988138, 0.66", "-29.773, 47.596, -0.772552, 0.52", "-30.0224, 48.9002, -0.503093, 0.37", "-30.3216, 49.7517, -0.399187, 0.37", "-30.891, 50.6882, -0.298332, 0.52", "-31.744, 51.5351, -0.204525, 0.88", "-32.0278, 51.745, -0.184634, 1.18", "-32.6023, 52.1271, -0.177442, 1.18", "-33.2341, 52.5714, -0.207452, 0.96", "-33.8605, 53.1442, -0.325147, 0.52", "-34.4406, 53.9378, -0.594967, 0.29", "-34.9904, 55.0076, -1.08182, 0.74", "-35.393, 56.0086, -1.54625, 0.96", "-35.6958, 57.0158, -2.04998, 0.81", "-35.9293, 57.8396, -2.52605, 1.4", "-36.2938, 59.0007, -3.27536, 1.99", "-36.5866, 59.7522, -3.74377, 1.99", "-36.9878, 60.4553, -4.13242, 1.77", "-37.9868, 61.7207, -4.80015, 0.52", "-39.1475, 62.8106, -5.4274, 0.37", "-39.9247, 63.3981, -5.81999, 0.37", "-41.3879, 64.3783, -6.54368, 0.37", "-42.1979, 64.9175, -6.94296, 0.37", "-43.0266, 65.4806, -7.40272, 0.59", "-43.7413, 65.992, -7.78909, 0.66", "-44.8023, 66.8457, -8.4223, 0.44", "-45.5867, 67.5105, -8.97044, 0.59", "-46.1707, 67.9842, -9.42809, 0.88", "-46.7875, 68.4501, -9.85582, 1.03", "-47.3847, 68.858, -10.2125, 0.88", "-48.5631, 69.5616, -10.8505, 0.59", "-49.4229, 69.9864, -11.2394, 0.74", "-50.7198, 70.536, -11.7511, 0.59", "-52.3134, 71.1911, -12.2872, 0.29", "-53.1602, 71.5653, -12.504, 0.29", "-54.08, 72.0145, -12.6732, 0.29", "-55.4377, 72.8463, -12.7096, 0.52", "-56.311, 73.5321, -12.7002, 0.52", "-57.1293, 74.3417, -12.6828, 1.11", "-57.7057, 75.0236, -12.6944, 1.4", "-57.9743, 75.3648, -12.7152, 1.69", "-58.594, 76.1864, -12.8159, 1.69", "-59.9103, 77.9131, -13.2714, 0.96", "-60.365, 78.4516, -13.5092, 1.11", "-60.9949, 79.1028, -13.8941, 1.33", "-61.5961, 79.6053, -14.3364, 1.33", "-62.2906, 80.097, -14.9405, 1.11", "-63.405, 80.7819, -16.0639, 0.81", "-64.4739, 81.3616, -17.2483, 0.59", "-65.0092, 81.6462, -17.9324, 0.29", "-66.2306, 82.3328, -19.6527, 0.44", "-66.9596, 82.7349, -20.7598, 0.96", "-67.4789, 83.059, -21.5927, 1.18", "-67.8604, 83.3602, -22.2382, 1.18", "-68.9137, 84.3353, -24.1184, 0.29", "-69.2497, 84.7055, -24.7403, 0.29", "-70.3462, 86.0814, -26.6939, 0.29", "-70.8837, 86.7544, -27.5941, 0.29", "-71.3397, 87.3242, -28.3187, 0.29", "-72.592, 88.8753, -30.2641, 0.74", "-73.0969, 89.5132, -31.0076, 0.29", "-73.4082, 89.9311, -31.479, 0.29", "-73.8636, 90.6201, -32.1686, 0.81", "-74.2118, 91.1423, -32.6934, 1.18", "-74.9563, 92.3166, -33.8286, 1.18", "-75.4966, 93.3242, -34.66, 0.37", "-75.9507, 94.1539, -35.3307, 0.37", "-76.2591, 94.6973, -35.7342, 0.66", "-76.4846, 95.046, -35.9751, 0.74", "-76.8598, 95.5457, -36.3006, 0.74", "-77.5738, 96.3287, -36.8073, 0.29", "-78.2006, 96.8184, -37.233, 0.29", "-78.9265, 97.2849, -37.8148, 1.25", "-79.9715, 97.9112, -38.7377, 2.36", "-80.5003, 98.2304, -39.2256, 2.65", "-81.021, 98.5509, -39.7135, 2.65", "-82.3477, 99.3921, -40.918, 1.18", "-84.0283, 100.569, -42.4037, 0.52", "-84.4742, 100.91, -42.7805, 0.52", "-85.2174, 101.526, -43.3564, 0.52", "-85.7798, 102.026, -43.7299, 0.52", "-86.8998, 103.089, -44.382, 0.52", "-87.7801, 104.001, -44.8564, 1.55", "-88.1853, 104.432, -45.0533, 2.06", "-88.7463, 105.061, -45.354, 2.06", "-89.5528, 106.028, -45.8223, 1.11", "-90.3604, 107.067, -46.3171, 0.52", "-91.1734, 108.19, -46.871, 0.52", "-91.6305, 108.829, -47.1705, 0.88", "-92.0461, 109.417, -47.4389, 0.88", "-92.2783, 109.731, -47.6172, 0.88", "-92.9925, 110.624, -48.274, 0.37", "-93.8599, 111.581, -49.1187, 1.11", "-94.2883, 112.003, -49.5416, 1.69", "-94.7863, 112.457, -50.0468, 1.99", "-96.5547, 114.058, -52.0396, 0.74", "-97.2772, 114.68, -52.8804, 0.74", "-97.9844, 115.24, -53.7004, 0.29", "-98.4287, 115.555, -54.1947, 0.81", "-98.9565, 115.898, -54.741, 1.11", "-100.542, 116.827, -56.1842, 0.22", "-101.341, 117.25, -56.8166, 0.22", "-102.282, 117.721, -57.5064, 0.22", "-102.941, 118.021, -57.938, 1.11", "-103.728, 118.349, -58.3992, 1.84", "-104.35, 118.603, -58.7207, 2.06", "-106.242, 119.421, -59.5422, 0.37", "-106.885, 119.75, -59.8336, 0.29", "-108.106, 120.427, -60.3985, 0.29", "-108.514, 120.658, -60.578, 0.22", "-109.159, 121.069, -60.8865, 0.22", "-109.962, 121.655, -61.285, 0.88", "-110.539, 122.139, -61.6091, 0.88", "-111.27, 122.787, -62.0972, 0.44", "-111.917, 123.342, -62.5499, 0.37", "-112.908, 124.084, -63.2254, 0.29", "-113.375, 124.379, -63.5244, 0.81", "-114.219, 124.845, -64.0696, 0.81", "-114.831, 125.078, -64.5351, 0.37", "-115.478, 125.23, -65.0543, 0.37", "-116.142, 125.303, -65.6054, 1.33", "-117.049, 125.348, -66.34, 1.69", "-117.763, 125.409, -66.908, 1.99", "-120.889, 125.8, -69.3794, 0.52", "-121.811, 125.987, -70.113, 0.44", "-122.606, 126.216, -70.7201, 0.44", "-123.616, 126.616, -71.4568, 0.52", "-125.008, 127.346, -72.3986, 2.14", "-126.007, 128.013, -72.9994, 2.95", "-128.172, 129.768, -74.1913, 0.29", "-129.206, 130.643, -74.7329, 0.29", "-130.262, 131.517, -75.2228, 0.29", "-131.417, 132.391, -75.7216, 1.4", "-132.031, 132.805, -75.9675, 1.69", "-133.078, 133.511, -76.3353, 1.69", "-134.868, 134.649, -76.8617, 0.22", "-136.042, 135.293, -77.1985, 0.22", "-137.063, 135.738, -77.4545, 0.81", "-137.53, 135.906, -77.5766, 0.81" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "22.6148, -8.57317, -30.2632, 1.11", "20.7557, -6.45225, -39.2973, 1.11", "20.3502, -5.97421, -41.0848, 0.74", "19.9782, -5.51247, -42.5074, 0.59", "19.5406, -5.033, -43.8667, 0.88", "18.9837, -4.52495, -45.3026, 1.18", "18.4053, -4.05111, -46.6477, 1.62", "16.3478, -2.58141, -50.3272, 0.96", "15.4995, -1.86996, -51.8998, 1.18", "14.6031, -0.974406, -53.6364, 1.18", "13.5323, 0.189661, -55.7387, 0.81", "12.2275, 1.7126, -58.2657, 0.59", "11.8258, 2.24539, -59.0509, 0.88", "11.2758, 3.20648, -60.1637, 0.88", "10.594, 5.00483, -61.8566, 0.37", "10.4894, 5.74702, -62.2932, 0.29", "10.462, 6.92585, -62.7232, 0.29", "10.4544, 7.51685, -62.9233, 0.29", "10.4223, 8.414, -63.3649, 0.81", "10.3789, 9.25947, -63.8474, 0.81", "10.2992, 10.7515, -64.8251, 1.4", "10.2332, 12.5712, -66.1393, 1.99", "10.1968, 14.9517, -68.0196, 2.65", "10.1834, 17.7481, -70.3033, 0.29", "10.2103, 19.5233, -71.8338, 0.29", "10.2424, 20.8801, -73.0437, 0.29", "10.2702, 22.0515, -74.1097, 0.88", "10.3182, 22.9265, -74.853, 1.33", "10.4626, 24.6239, -76.1806, 1.77", "10.6342, 26.7536, -77.8536, 1.4" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "22.6148, -8.57317, -30.2632, 1.84", "23.4408, -9.5386, -31.1725, 1.84", "24.5066, -10.8307, -32.3997, 0.74", "25.3107, -11.8652, -33.4016, 0.74", "26.0378, -12.8007, -34.3075, 2.21", "26.8728, -13.875, -35.3478, 3.09", "27.1294, -14.2051, -35.6675, 3.83", "27.4934, -14.7323, -36.2318, 4.35", "27.9314, -15.482, -37.0704, 4.27" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "21.0285, -14.2329, -2.55272, 0.96", "20.6382, -15.7151, -0.347145, 0.96", "20.5778, -16.4055, 0.837552, 1.18", "20.6133, -17.0692, 1.96273, 1.18", "20.8009, -17.96, 3.405, 0.81", "21.3131, -19.4174, 5.62338, 0.59", "21.899, -20.4551, 7.046, 0.37", "22.3878, -20.8984, 7.83346, 0.74", "23.3851, -21.047, 7.96852, 0.74", "24.7099, -21.1077, 7.97328, 0.96", "25.8299, -21.1256, 7.92307, 1.03", "26.7503, -21.1347, 7.83407, 0.88", "27.7293, -21.1942, 7.81432, 0.59", "28.803, -21.3127, 7.99319, 0.37", "30.4373, -21.4907, 8.52748, 1.18", "31.2916, -21.6278, 8.88252, 1.84", "31.8515, -21.7612, 9.13896, 1.84", "32.9559, -22.1499, 9.6744, 0.66", "33.8426, -22.5884, 10.1335, 0.29", "34.5399, -23.0437, 10.481, 0.29", "35.548, -23.7305, 10.8367, 0.29", "36.3302, -24.2361, 11.0389, 0.29", "37.2773, -24.7846, 11.2, 0.66", "38.1183, -25.1836, 11.2243, 1.03", "39.3044, -25.5987, 11.2484, 0.29", "40.7229, -25.9756, 11.3473, 0.52", "41.6472, -26.08, 11.4733, 0.52", "42.3982, -26.1298, 11.5872, 0.44", "43.1517, -26.1924, 11.7759, 0.44", "44.6588, -26.4039, 12.3103, 0.81", "45.2334, -26.5122, 12.607, 0.96", "45.8211, -26.6559, 12.9696, 1.11", "46.9316, -26.9746, 13.7062, 0.29", "48.402, -27.4691, 14.7519, 1.55", "49.0885, -27.7133, 15.2843, 2.65", "50.0945, -28.0533, 16.0731, 3.24", "50.8258, -28.2708, 16.6671, 2.87", "52.1584, -28.6489, 17.7942, 0.59", "53.0754, -28.9191, 18.6011, 0.44", "53.8939, -29.2045, 19.3094, 0.44", "54.5949, -29.5082, 19.9017, 0.44", "55.0953, -29.7977, 20.2784, 0.37", "55.697, -30.2494, 20.7175, 0.59", "56.1443, -30.6161, 20.9805, 0.59", "56.6299, -30.9972, 21.1858, 0.59", "57.1823, -31.384, 21.477, 0.37", "57.7606, -31.7588, 21.9031, 1.11", "58.1509, -31.9747, 22.2488, 1.11", "59.1619, -32.3762, 23.2516, 0.37", "59.737, -32.5393, 23.8455, 0.37", "61.452, -32.8563, 25.6656, 1.55", "62.4157, -32.9322, 26.7045, 2.21", "63.0022, -32.9294, 27.3323, 1.77", "64.2386, -32.8317, 28.639, 0.74", "64.9329, -32.7448, 29.401, 0.37", "65.3578, -32.6712, 29.8567, 0.88", "66.2088, -32.487, 30.6202, 1.11", "67.3492, -32.183, 31.5217, 0.88", "68.1385, -31.9205, 32.1266, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "21.0285, -14.2329, -2.55272, 0.74", "20.3873, -15.3774, -2.91883, 0.74", "20.1077, -15.9429, -3.09354, 1.18", "19.9203, -16.3887, -3.22777, 1.18", "19.724, -16.9651, -3.39808, 1.11", "19.5698, -17.5255, -3.56419, 0.88", "19.3847, -18.3615, -3.80359, 0.74", "19.3241, -18.8732, -3.93488, 1.03", "19.3261, -19.4756, -4.06251, 1.03", "19.406, -20.1932, -4.1697, 0.59", "19.5256, -20.8192, -4.22662, 1.03", "19.6403, -21.31, -4.24099, 1.33", "19.7682, -21.8733, -4.19999, 1.33", "19.9569, -22.8741, -4.07045, 0.74", "20.083, -23.7092, -3.92612, 1.03", "20.1256, -24.0713, -3.87057, 1.4", "20.1701, -24.5899, -3.81938, 1.4", "20.2183, -25.3988, -3.79373, 0.81", "20.2499, -26.0217, -3.83711, 0.59", "20.2906, -26.6178, -3.9463, 1.11", "20.4106, -27.5742, -4.20596, 1.11", "20.5207, -28.1063, -4.4049, 1.03", "20.6461, -28.5277, -4.59914, 1.62", "20.9085, -29.1916, -4.96425, 1.47", "21.1258, -29.6118, -5.2088, 1.18", "21.5913, -30.3136, -5.61695, 0.74", "22.0826, -30.8888, -5.93024, 0.66", "22.307, -31.1162, -6.04852, 0.81", "22.5531, -31.3513, -6.13589, 0.81", "23.023, -31.7939, -6.21246, 0.52", "23.4344, -32.2333, -6.19464, 0.52", "23.6427, -32.6659, -5.99968, 0.59", "23.645, -33.0381, -5.77581, 0.59", "23.4008, -34.2877, -5.12748, 0.59", "23.2756, -34.7692, -4.92078, 0.59", "23.0848, -35.4458, -4.696, 0.59", "22.9112, -36.0917, -4.53273, 0.59", "22.801, -36.5978, -4.44343, 0.59", "22.6866, -37.5361, -4.37533, 0.59", "22.6789, -38.3159, -4.41217, 1.33", "22.7313, -38.8656, -4.43772, 1.92", "22.7979, -39.2336, -4.45433, 2.14", "22.8969, -39.6412, -4.45492, 1.62", "23.0854, -40.2693, -4.39531, 0.81", "23.3149, -40.8896, -4.23683, 0.66", "23.565, -41.481, -4.00653, 0.59", "23.6974, -41.7914, -3.85141, 0.88", "23.9809, -42.4695, -3.50071, 0.88", "24.1702, -42.9281, -3.25827, 0.59", "24.4798, -43.6938, -2.87139, 0.52", "24.6717, -44.215, -2.67612, 0.52", "24.8621, -44.7934, -2.5832, 0.52", "25.0743, -45.5198, -2.60066, 1.33", "25.1512, -45.8416, -2.66446, 1.84", "25.2412, -46.3272, -2.80265, 2.06", "25.3759, -47.116, -3.02388, 0.81", "25.5022, -47.7627, -3.14494, 0.59", "25.5766, -48.0707, -3.16661, 0.88", "25.7258, -48.5925, -3.1146, 0.52", "26.0424, -49.5353, -2.90303, 0.52", "26.3588, -50.3662, -2.64531, 0.66", "26.6182, -50.9974, -2.42556, 0.88", "26.8432, -51.5303, -2.26254, 0.88", "27.089, -52.1255, -2.16724, 0.59", "27.2859, -52.655, -2.17995, 0.29", "27.4402, -53.2167, -2.30695, 0.96", "27.5268, -53.728, -2.48882, 1.11", "27.5835, -54.3744, -2.75145, 0.88", "27.5979, -55.2488, -3.11163, 0.59", "27.5698, -55.9223, -3.36732, 0.59", "27.5221, -56.5659, -3.57677, 0.59", "27.4807, -57.1496, -3.74567, 0.74", "27.4594, -57.5386, -3.84414, 0.81", "27.4372, -58.0045, -3.94465, 0.59", "27.413, -58.7547, -4.0893, 0.52", "27.4041, -59.4697, -4.246, 2.28", "27.4121, -60.3238, -4.46881, 2.95", "27.4194, -60.5745, -4.54888, 2.95" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-11.2419, 4.18404, 15.7289, 1.84", "-10.6413, 6.10918, 15.7704, 1.84", "-10.3714, 6.91265, 15.7425, 2.06", "-9.85167, 8.49514, 15.6295, 1.33", "-9.45212, 9.83439, 15.4863, 0.88", "-9.07409, 11.2495, 15.3332, 0.88", "-8.79374, 12.5517, 15.224, 1.4", "-8.66284, 13.3056, 15.1382, 1.4", "-8.61705, 14.2254, 15.0731, 1.4", "-8.79951, 15.3346, 15.0821, 1.4", "-9.06548, 15.9614, 15.1579, 1.25", "-9.73368, 17.1141, 15.4072, 1.55", "-10.1912, 17.8742, 15.6369, 1.33", "-10.6717, 18.7094, 15.9205, 0.66", "-10.9934, 19.3444, 16.14, 0.52", "-11.3686, 20.2762, 16.4436, 0.88", "-11.6636, 21.2943, 16.7324, 0.37", "-11.8608, 22.3777, 16.9995, 1.25", "-11.9217, 22.9194, 17.1257, 1.25", "-11.9807, 23.8436, 17.341, 0.88", "-12.0132, 24.4343, 17.4953, 0.66", "-12.082, 25.5024, 17.8141, 0.81", "-12.1572, 26.0922, 18.0104, 1.55", "-12.2157, 26.422, 18.1192, 1.92" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-11.2419, 4.18404, 15.7289, 1.62", "-10.7224, 2.90218, 15.9594, 1.62", "-10.1432, 1.65993, 16.1655, 1.18", "-9.34109, 0.118164, 16.4042, 0.88", "-8.72216, -1.10624, 16.5818, 0.59", "-8.18101, -2.33282, 16.7582, 0.44", "-7.71294, -3.5426, 16.93, 0.44", "-7.43623, -4.77788, 17.0777, 0.37", "-7.40326, -5.58832, 17.1807, 0.37", "-7.566, -6.50524, 17.2779, 0.37", "-8.03745, -7.84103, 17.4074, 0.52", "-8.25371, -8.233, 17.4483, 0.81", "-9.26221, -9.60314, 17.5633, 0.52", "-10.2195, -10.7822, 17.6239, 0.52", "-10.6468, -11.3295, 17.6388, 0.52", "-10.9246, -11.7806, 17.6362, 0.88", "-11.2926, -12.6707, 17.5984, 0.29", "-11.4791, -13.5979, 17.5313, 0.29", "-11.0321, -14.0192, 17.4845, 0.52", "-10.0396, -14.5753, 17.3672, 0.29", "-9.07166, -15.1369, 17.1811, 0.29", "-8.28958, -15.6, 16.9967, 0.29", "-7.24846, -16.2471, 16.6958, 0.29", "-6.42185, -16.766, 16.4444, 0.29", "-5.61806, -17.4811, 15.9584, 0.29", "-5.76405, -18.2605, 15.1568, 0.59", "-6.00959, -18.9095, 14.4733, 0.29", "-6.205, -19.4317, 13.9568, 0.29", "-6.51477, -20.2517, 13.1664, 0.74", "-7.14734, -21.7059, 11.7327, 0.44", "-7.44866, -22.4955, 10.9694, 0.44", "-7.59097, -23.3523, 10.136, 0.29", "-7.56755, -23.9982, 9.50505, 1.33", "-7.49913, -24.3429, 9.16641, 1.47" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-74.2603, -163.785, -27.9436, 0.44", "-74.4826, -165.209, -28.8907, 0.44", "-74.7238, -166.293, -29.5451, 0.44", "-75.1351, -167.667, -30.2828, 1.11", "-75.4181, -168.689, -30.7035, 1.4", "-75.7785, -170.006, -31.159, 1.25", "-76.162, -171.314, -31.589, 0.66", "-76.627, -172.564, -31.951, 0.44", "-77.5818, -174.575, -32.5504, 0.44", "-78.6169, -176.377, -33.1118, 0.22", "-79.0394, -177.02, -33.3257, 0.22", "-79.712, -177.933, -33.6607, 0.88", "-80.7191, -179.118, -34.1843, 0.88", "-81.8741, -180.334, -34.842, 0.29", "-82.7761, -181.226, -35.381, 0.29", "-83.5399, -181.969, -35.8659, 1.25", "-84.0996, -182.554, -36.2251, 1.99", "-84.7752, -183.324, -36.6632, 2.14", "-85.8046, -184.675, -37.3507, 0.52", "-86.7863, -186.145, -38.0522, 0.52", "-87.6651, -187.681, -38.7232, 0.44", "-88.2341, -188.902, -39.1926, 0.44", "-88.7482, -190.324, -39.6728, 0.37", "-89.1277, -191.754, -40.0873, 0.37", "-89.2553, -192.53, -40.255, 0.96", "-89.3796, -193.763, -40.4559, 1.18", "-89.5225, -195.233, -40.6162, 0.44", "-89.684, -196.474, -40.7595, 0.29", "-89.8912, -197.544, -40.9274, 1.03", "-90.1589, -198.596, -41.1479, 1.25", "-90.6817, -200.473, -41.6286, 0.29", "-91.2256, -202.397, -42.2024, 0.29", "-91.6731, -204.11, -42.7552, 1.33", "-91.9067, -205.184, -43.1207, 1.92", "-92.1033, -206.407, -43.5651, 1.62", "-92.2995, -208.421, -44.3482, 0.29", "-92.3125, -209.76, -44.883, 0.29", "-92.2049, -210.852, -45.2019, 0.52", "-92.0824, -211.672, -45.3386, 0.52", "-91.8481, -212.911, -45.4255, 0.29", "-91.5327, -214.505, -45.4676, 0.44", "-91.3136, -215.498, -45.4224, 0.44", "-90.4965, -219.039, -45.0336, 0.44", "-90.1955, -220.235, -44.8083, 1.18", "-89.9997, -220.929, -44.6142, 1.18" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-74.2603, -163.785, -27.9436, 0.37", "-75.0702, -163.203, -27.1531, 0.37", "-75.7297, -162.754, -26.5427, 0.29", "-76.3196, -162.376, -26.0217, 1.03", "-77.0131, -161.932, -25.409, 1.18", "-78.1884, -161.179, -24.3708, 0.29", "-78.6875, -160.859, -23.9299, 0.29", "-79.1286, -160.587, -23.5544, 1.03", "-79.552, -160.366, -23.2424, 1.18" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "17.791, 163.838, -86.9013, 1.18", "19.2467, 165.101, -88.467, 1.18", "19.7565, 165.59, -89.0245, 1.18", "21.1143, 167.058, -90.5275, 0.29", "21.63, 167.679, -91.0863, 0.66", "22.1804, 168.408, -91.6592, 0.66", "22.7093, 169.151, -92.1748, 0.29", "23.2874, 170.129, -92.6716, 0.66", "23.8993, 171.226, -93.2093, 0.66", "24.3881, 172.154, -93.6302, 0.29", "24.9245, 173.119, -94.0883, 1.69", "25.4068, 173.927, -94.4577, 2.5", "25.7071, 174.391, -94.6596, 2.5", "27.2251, 176.578, -95.5618, 0.44", "28.0631, 177.586, -96.0457, 0.44", "29.7498, 179.191, -96.9264, 0.15", "31.0251, 180.184, -97.5425, 0.15", "32.2231, 180.947, -98.0488, 1.11", "32.8859, 181.281, -98.2783, 1.47", "35.4936, 182.217, -98.947, 0.22", "37.6594, 182.721, -99.4421, 0.22", "38.4769, 182.825, -99.611, 0.52", "39.7056, 182.89, -99.849, 0.22", "40.4884, 182.881, -100.021, 0.59", "41.1015, 182.873, -100.155, 0.59", "42.4669, 182.903, -100.465, 0.22", "43.7915, 182.981, -100.843, 0.88", "45.269, 183.071, -101.296, 0.88", "47.9514, 183.261, -102.241, 0.29", "49.0769, 183.361, -102.68, 0.29", "49.9905, 183.457, -103.068, 0.59", "50.3493, 183.499, -103.234, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "17.791, 163.838, -86.9013, 0.15", "17.7342, 165.976, -86.5444, 0.15", "17.635, 168.441, -86.125, 0.15", "17.544, 170.218, -85.8228, 0.88", "17.4863, 171.512, -85.6019, 1.11", "17.4355, 172.844, -85.3826, 0.22", "17.4137, 173.598, -85.2637, 0.22", "17.3729, 174.446, -85.1013, 0.52", "17.3537, 174.892, -85.0205, 0.52", "17.3134, 176.03, -84.8686, 0.22", "17.3211, 176.847, -84.785, 0.52", "17.3482, 177.391, -84.7417, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "27.9314, -15.482, -37.0704, 1.47", "29.1239, -15.745, -37.0448, 1.47", "30.204, -15.8063, -37.0281, 0.88", "31.2834, -15.6686, -37.0111, 0.74", "31.8429, -15.5783, -37.1013, 0.88", "32.5049, -15.4921, -37.3657, 1.03", "33.1186, -15.4479, -37.6774, 0.74", "33.687, -15.4062, -38.0715, 0.52", "34.4629, -15.381, -38.6781, 1.03", "36.0716, -15.4777, -40.0306, 1.18", "37.2577, -15.6863, -41.0143, 0.81", "38.0908, -15.9241, -41.6705, 1.18", "38.7043, -16.1459, -42.1546, 1.77", "39.2311, -16.3433, -42.5431, 1.77", "39.6016, -16.4698, -42.7703, 1.4", "40.2433, -16.6049, -43.0092, 1.03", "40.7364, -16.6508, -43.1345, 0.59", "42.1118, -16.61, -43.4227, 0.59", "42.952, -16.5239, -43.4978, 0.81", "43.7234, -16.4428, -43.5162, 0.88", "44.2479, -16.4028, -43.5048, 0.88", "44.7058, -16.3951, -43.4863, 0.88", "45.4432, -16.4641, -43.4502, 0.44", "46.3929, -16.6582, -43.3985, 0.44", "47.5322, -16.9794, -43.4291, 1.47", "48.1002, -17.1501, -43.4948, 2.43", "48.8289, -17.3636, -43.6263, 2.8", "50.0159, -17.6616, -43.9502, 0.37", "50.5178, -17.754, -44.1252, 0.37", "51.657, -17.892, -44.5565, 0.96", "52.3364, -17.9333, -44.7906, 0.96", "52.9042, -17.9438, -44.9851, 0.96", "53.8186, -17.9186, -45.308, 0.59", "54.6258, -17.8769, -45.6501, 0.37", "55.4235, -17.8526, -46.0475, 0.22", "55.8161, -17.8677, -46.2678, 0.22", "56.7655, -17.9464, -46.8191, 1.4", "57.3526, -18.0003, -47.1593, 1.69", "58.0494, -18.0594, -47.5517, 1.99", "58.7037, -18.0971, -47.9439, 2.21", "60.0213, -18.1128, -48.7956, 0.37", "60.3732, -18.106, -49.017, 0.29", "60.9038, -18.0754, -49.2994, 0.29", "61.4842, -18.0148, -49.565, 0.88", "62.3231, -17.8957, -49.8911, 1.11", "63.5989, -17.6713, -50.3257, 0.29", "64.179, -17.5453, -50.5017, 0.29", "65.5181, -17.2107, -50.8909, 2.14", "66.2391, -16.998, -51.0887, 2.87", "66.7027, -16.8295, -51.1964, 2.87", "67.2901, -16.5721, -51.3051, 2.58", "68.5065, -15.9585, -51.5452, 0.59", "69.3208, -15.5039, -51.7815, 0.59", "69.9814, -15.1128, -52.0253, 0.59", "70.6436, -14.7111, -52.3488, 1.11", "71.187, -14.3677, -52.6653, 1.11", "72.102, -13.7672, -53.2705, 0.81", "73.0982, -13.0982, -53.984, 0.52", "73.5587, -12.7717, -54.3331, 0.37", "74.5113, -12.0422, -55.1218, 0.74", "74.9803, -11.6625, -55.5332, 0.88", "75.4016, -11.2912, -55.8944, 0.52", "75.8511, -10.8644, -56.2447, 0.29", "76.3934, -10.3017, -56.6407, 0.29", "77.4138, -9.25597, -57.2703, 1.03", "77.9243, -8.76043, -57.5388, 1.55", "78.5243, -8.21757, -57.8454, 2.14", "79.0682, -7.76105, -58.1132, 2.21", "80.127, -6.93225, -58.6088, 0.29", "81.1772, -6.18592, -59.0536, 0.29", "82.0939, -5.56242, -59.4041, 0.29", "82.9794, -5.00599, -59.7245, 1.4", "83.4996, -4.71344, -59.9024, 1.99", "83.7949, -4.56457, -59.9929, 2.21", "84.4546, -4.28171, -60.1526, 1.77", "85.1628, -3.99237, -60.2799, 0.52", "85.9603, -3.66549, -60.363, 0.44", "86.6781, -3.34627, -60.4093, 0.52", "87.3338, -3.03577, -60.4403, 0.74", "87.9061, -2.74849, -60.4906, 0.74", "88.7137, -2.30483, -60.6249, 0.22", "89.5316, -1.78256, -60.8209, 1.62", "89.9724, -1.45849, -60.9613, 1.99", "90.1138, -1.35351, -61.0162, 2.43", "91.1907, -0.576476, -61.4793, 0.52", "92.0744, 0.0150215, -61.8669, 0.29", "92.8365, 0.471168, -62.2121, 0.22", "93.2677, 0.69923, -62.3979, 0.22", "93.8887, 0.963853, -62.6412, 0.22", "94.6068, 1.20918, -62.891, 0.22", "95.3229, 1.38156, -63.0869, 0.88", "95.9592, 1.47585, -63.232, 1.18", "96.6339, 1.54245, -63.3847, 1.18", "97.5395, 1.62659, -63.6075, 0.29", "98.4499, 1.71522, -63.8472, 0.29", "99.3966, 1.80002, -64.1097, 0.29", "100.562, 1.91562, -64.4906, 0.29", "101.638, 2.03349, -64.8604, 1.92", "102.435, 2.12552, -65.1481, 2.87", "102.879, 2.19003, -65.3046, 3.17", "103.702, 2.32244, -65.5764, 2.5", "105.65, 2.66891, -66.1876, 0.37", "106.373, 2.80082, -66.3982, 1.03", "106.947, 2.90741, -66.5408, 1.03", "108.423, 3.19361, -66.8453, 0.29", "109.277, 3.3623, -67.0067, 0.81", "109.797, 3.46145, -67.0981, 0.81", "110.892, 3.65871, -67.2706, 0.29", "111.34, 3.7294, -67.3522, 0.37", "112.218, 3.85667, -67.5421, 0.37", "113.098, 3.97144, -67.7566, 0.81", "113.512, 4.0274, -67.8588, 0.81", "114.691, 4.20326, -68.1387, 0.29", "115.799, 4.33974, -68.3698, 0.29", "116.534, 4.40618, -68.5406, 1.47", "117.049, 4.44963, -68.6823, 1.84", "117.551, 4.49858, -68.851, 2.14", "119.762, 4.75099, -69.7517, 0.22", "121.084, 4.95855, -70.4011, 0.22", "122.444, 5.2589, -71.2095, 0.81", "123.156, 5.41897, -71.7148, 0.81", "124.237, 5.66523, -72.5785, 0.22", "124.751, 5.79549, -73.0216, 0.37", "125.452, 6.00322, -73.7188, 0.29", "126.26, 6.26063, -74.6135, 1.4", "127.893, 6.74351, -76.4546, 0.22", "128.684, 6.95996, -77.3568, 0.22", "129.271, 7.11289, -78.0272, 0.59", "130.483, 7.40229, -79.3872, 1.69", "131.505, 7.61965, -80.5168, 2.65", "131.882, 7.70206, -80.929, 2.87", "133.403, 8.13426, -82.5576, 0.22", "133.856, 8.25059, -83.01, 0.29", "134.29, 8.33246, -83.3743, 0.22", "134.594, 8.37282, -83.5615, 0.88", "135.252, 8.4264, -83.8835, 1.11", "136.476, 8.44914, -84.4321, 0.29", "137.225, 8.4128, -84.741, 0.22", "138.017, 8.37201, -85.0829, 0.22", "139.002, 8.31496, -85.4946, 1.33", "139.556, 8.29712, -85.7265, 1.33", "140.633, 8.27609, -86.1949, 0.52", "141.668, 8.2722, -86.6819, 0.44", "142.786, 8.3051, -87.2481, 0.29", "143.714, 8.36495, -87.7212, 0.29", "144.592, 8.44211, -88.1407, 0.29", "145.818, 8.58759, -88.7041, 0.29", "146.385, 8.67254, -88.9295, 1.69", "147.28, 8.84694, -89.2252, 1.92", "148.818, 9.18449, -89.6359, 0.22", "149.589, 9.37494, -89.8153, 0.74", "150.248, 9.53786, -89.9387, 0.74", "151.843, 9.97829, -90.1619, 0.22", "153.08, 10.3402, -90.3053, 0.22", "154.27, 10.7076, -90.4613, 0.22", "155.269, 11.0302, -90.6207, 1.62", "155.534, 11.1161, -90.6736, 2.28", "156.208, 11.3254, -90.8422, 0.81", "156.694, 11.4729, -91.0102, 0.37", "158.157, 11.8977, -91.5628, 0.22", "158.583, 12.0283, -91.7394, 0.59", "158.733, 12.0687, -91.8018, 0.59", "159.736, 12.3123, -92.2344, 0.29", "160.184, 12.406, -92.4346, 0.66", "161.651, 12.695, -93.0884, 0.22", "162.506, 12.8548, -93.4505, 0.66", "163.497, 13.0334, -93.8855, 0.22", "164.255, 13.1681, -94.2231, 1.25", "164.658, 13.2307, -94.4037, 1.25" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "27.9314, -15.482, -37.0704, 2.87", "29.4612, -20.9118, -46.318, 2.87", "29.5793, -21.3152, -46.9167, 2.87", "30.4439, -24.0319, -50.5767, 0.37", "31.0821, -25.9267, -52.8896, 0.29", "31.5637, -27.3226, -54.4553, 0.66", "31.7268, -27.7873, -54.9368, 0.66", "32.0415, -28.661, -55.4726, 0.29", "32.6101, -30.1878, -56.3959, 1.18", "33.0272, -31.3311, -57.0401, 1.18", "33.6182, -33.1428, -58.0795, 0.44", "33.9749, -34.4921, -58.8719, 0.66", "34.2376, -35.7059, -59.6348, 0.29", "34.5482, -37.5102, -60.8284, 2.21", "34.6347, -38.3251, -61.3811, 3.39", "34.6998, -40.2533, -62.8728, 0.74", "34.618, -41.6584, -64.0913, 0.29", "34.4821, -42.6525, -65.0645, 1.03", "34.3925, -43.0526, -65.5129, 1.03", "34.1495, -43.8562, -66.5713, 0.81", "33.616, -45.43, -68.8949, 0.29", "33.2187, -46.5427, -70.7732, 0.59", "33.1202, -46.8455, -71.2807, 0.59", "32.6266, -48.4609, -73.9151, 0.22", "32.2688, -49.6692, -75.8467, 1.47", "32.1233, -50.207, -76.6665, 1.84", "31.6661, -51.7989, -78.9515, 0.29", "31.1758, -53.3869, -81.1007, 0.22", "30.9678, -54.0032, -81.8842, 0.81", "30.799, -54.466, -82.412, 0.81", "29.9293, -56.6028, -84.5951, 0.22", "29.3535, -57.8694, -85.8063, 0.96", "29.0024, -58.5558, -86.4354, 0.96", "28.5793, -59.3255, -87.1707, 0.96", "28.0336, -60.3304, -88.0939, 0.22", "27.7927, -60.8341, -88.4945, 0.22", "27.1457, -62.4125, -89.5708, 2.21", "26.8975, -63.1421, -90.017, 2.87", "26.6712, -63.9076, -90.4512, 3.39", "26.1061, -66.1085, -91.6074, 0.37", "25.7124, -67.9017, -92.5065, 0.37", "25.5276, -68.9801, -93.0194, 0.44", "25.4791, -69.3872, -93.194, 0.44", "25.3785, -70.525, -93.666, 0.22", "25.3685, -70.9929, -93.8705, 0.66", "25.411, -71.4954, -94.1046, 0.66", "25.6452, -73.1325, -94.8573, 0.22", "25.7813, -73.8124, -95.1462, 0.52", "25.8888, -74.2619, -95.3375, 0.52", "26.333, -76.0018, -95.9588, 0.22", "26.5518, -76.8413, -96.2113, 0.22", "26.7484, -77.545, -96.3859, 0.88", "26.9358, -78.2514, -96.5191, 1.18", "27.1081, -78.9791, -96.6473, 1.18", "27.5618, -81.0302, -97.0188, 0.22", "27.7161, -81.7965, -97.1612, 0.52", "27.8368, -82.4329, -97.2928, 0.52", "28.3151, -84.9713, -97.9214, 0.22", "28.6606, -86.7688, -98.4775, 0.22", "28.7971, -87.4399, -98.73, 0.37", "29.0816, -88.8129, -99.3847, 0.37", "29.309, -89.9146, -99.9672, 0.37", "29.5648, -91.2372, -100.72, 1.69", "29.7849, -92.4675, -101.494, 2.28", "29.8809, -93.0709, -101.89, 2.28", "30.18, -95.2615, -103.38, 0.22", "30.2708, -96.0494, -103.941, 0.37", "30.3296, -96.7818, -104.493, 0.22", "30.3455, -97.7367, -105.206, 0.22", "30.3028, -98.8086, -105.998, 1.18", "30.2189, -99.5987, -106.59, 1.55", "30.1566, -99.9279, -106.852, 1.55", "29.6999, -101.875, -108.432, 0.22", "29.4041, -102.995, -109.373, 0.22", "29.3108, -103.311, -109.677, 0.59", "29.0443, -104.085, -110.484, 0.59", "28.694, -105.09, -111.635, 0.22", "28.5142, -105.631, -112.304, 0.81", "28.3319, -106.169, -113.028, 0.81", "27.7864, -107.886, -115.589, 0.22", "27.5703, -108.603, -116.727, 0.22", "27.3373, -109.449, -118.184, 0.81", "27.2784, -109.677, -118.592, 0.81" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "27.4194, -60.5745, -4.54888, 0.29", "25.8484, -63.0454, -7.68632, 0.29", "25.6698, -63.3285, -8.01621, 0.44", "25.2489, -64.0109, -8.78398, 0.29", "24.9129, -64.4996, -9.30565, 0.29", "24.5871, -64.9438, -9.75976, 0.81", "24.3499, -65.2555, -10.0415, 0.96", "24.0265, -65.6631, -10.2815, 0.96", "23.096, -66.8514, -10.8759, 0.52", "22.381, -67.7898, -11.2625, 0.29", "22.001, -68.2885, -11.4434, 0.29", "21.2268, -69.3039, -11.7441, 0.37", "20.7572, -69.9208, -11.9038, 0.66", "20.3648, -70.4363, -12.0064, 0.66", "19.7622, -71.2276, -12.1178, 0.29", "19.3132, -71.8509, -12.22, 0.96", "18.9257, -72.393, -12.3372, 1.25", "18.7881, -72.5861, -12.3938, 1.25", "18.3099, -73.295, -12.6146, 0.74", "17.829, -74.0873, -12.8622, 0.29", "17.6453, -74.4282, -12.9736, 0.29", "17.2601, -75.2177, -13.249, 0.81", "17.1088, -75.5454, -13.3639, 1.11", "16.5963, -76.7411, -13.7656, 0.29", "16.1923, -77.8102, -14.1044, 0.59", "15.9933, -78.4069, -14.2726, 0.74", "15.8543, -78.8497, -14.384, 0.52", "15.6548, -79.55, -14.5365, 0.29", "15.4895, -80.2081, -14.6675, 0.29", "15.4153, -80.5407, -14.7232, 0.29", "15.2754, -81.2621, -14.8172, 0.44", "15.0884, -82.326, -14.9259, 0.44", "14.8097, -83.5678, -15.0468, 1.33", "14.6785, -84.0952, -15.1018, 1.77", "14.4998, -84.7608, -15.1995, 1.99", "14.0594, -86.3317, -15.4615, 0.37", "13.762, -87.3899, -15.6673, 0.29", "13.3083, -89.0857, -16.035, 0.29", "13.0747, -89.983, -16.2414, 0.29", "12.7777, -91.2779, -16.6067, 0.29", "12.5313, -92.5251, -17.0055, 0.29", "12.4021, -93.2443, -17.26, 1.33", "12.2946, -93.9291, -17.5096, 1.77", "12.2357, -94.5818, -17.7515, 1.77", "12.0767, -96.6251, -18.4889, 0.29", "12.0285, -97.3728, -18.7626, 0.66", "12.0058, -97.8924, -18.9695, 0.81", "11.9773, -98.4662, -19.1972, 0.81", "11.879, -99.8595, -19.7642, 0.29", "11.8032, -100.617, -20.1028, 0.88", "11.668, -101.444, -20.4818, 0.59", "11.4157, -102.599, -21.0973, 0.29", "11.2883, -103.072, -21.3755, 0.81", "11.0632, -103.736, -21.8055, 0.81", "10.6555, -104.682, -22.428, 0.29", "10.3119, -105.37, -22.9082, 0.22", "9.47063, -106.865, -23.9743, 1.77", "9.15276, -107.371, -24.3555, 2.36", "8.33657, -108.656, -25.3414, 0.52", "7.86582, -109.381, -25.8968, 0.88", "7.03098, -110.623, -26.8135, 0.29", "6.72282, -111.054, -27.1448, 0.88", "6.43151, -111.405, -27.4016, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "27.4194, -60.5745, -4.54888, 0.44", "28.8998, -61.9871, -4.426, 0.44", "29.8144, -62.9118, -4.3385, 0.44", "30.721, -63.9758, -4.31675, 0.66", "30.9406, -64.2805, -4.32052, 0.66", "31.3402, -64.994, -4.34425, 0.29", "31.7362, -65.8939, -4.40341, 0.29", "31.9227, -66.5144, -4.49166, 0.37", "32.1927, -67.9143, -4.75647, 0.37", "32.3401, -68.7162, -4.94004, 0.37", "32.6001, -69.6011, -5.16606, 0.37", "33.0552, -70.5456, -5.45275, 0.37", "33.7437, -71.5385, -5.76612, 0.74", "34.1849, -72.0184, -5.91302, 0.74", "34.7382, -72.5212, -6.05475, 0.59", "35.4208, -73.0772, -6.22774, 0.37", "36.361, -73.7807, -6.46015, 0.29", "36.6609, -73.9921, -6.51119, 1.03", "37.3442, -74.4325, -6.55427, 1.33", "37.8191, -74.7127, -6.55938, 1.33", "38.4505, -75.0458, -6.55322, 1.03", "39.1012, -75.3682, -6.53326, 0.52", "40.163, -75.8587, -6.48893, 0.37", "41.1426, -76.3564, -6.47361, 0.29", "42.1352, -76.9484, -6.50496, 1.11", "42.7659, -77.346, -6.55449, 1.62", "43.3902, -77.7429, -6.63853, 1.62", "44.0788, -78.2082, -6.73412, 1.11", "45.186, -79.0771, -6.90516, 0.29", "46.1639, -79.9686, -6.87895, 0.29", "46.6454, -80.416, -6.66944, 0.22", "47.1192, -80.8443, -6.27733, 0.22", "47.9977, -81.5556, -5.33488, 0.59", "48.488, -81.8866, -4.73997, 0.59", "49.6494, -82.5921, -3.28133, 0.37", "50.6504, -83.2302, -1.99783, 1.33", "51.1709, -83.6093, -1.27572, 1.69", "51.6011, -83.9447, -0.600841, 1.69", "52.4519, -84.6051, 0.93437, 0.52", "52.768, -84.8733, 1.64465, 0.37", "52.9881, -85.1448, 2.35065, 0.37", "53.3342, -85.9632, 4.16255, 0.37", "53.4998, -86.6354, 5.39669, 0.37", "53.5593, -87.1079, 6.15129, 0.29", "53.6188, -87.6449, 6.79242, 0.29", "53.823, -88.4142, 7.39354, 0.29", "54.2297, -89.4685, 7.83146, 0.29", "54.5773, -90.2586, 7.9986, 0.74", "54.8627, -90.8801, 8.08353, 0.81", "55.4163, -92.0897, 8.25058, 0.44", "55.9518, -93.3514, 8.4688, 0.44", "56.3808, -94.5707, 8.77999, 0.44", "56.5149, -95.1188, 9.02339, 0.88", "56.5721, -95.5732, 9.34682, 0.88", "56.4856, -96.3135, 10.4817, 0.37", "56.3024, -96.64, 11.4564, 0.59", "56.0934, -96.8167, 12.3119, 0.59", "55.6229, -97.0435, 13.9383, 0.81", "55.3223, -97.1349, 14.8184, 0.81", "54.2243, -97.3335, 17.4599, 0.29", "53.8289, -97.3892, 18.2591, 0.66", "53.6013, -97.4329, 18.6534, 0.81", "53.3352, -97.5143, 19.0522, 0.81", "52.8861, -97.682, 19.6251, 0.52", "52.177, -98.0104, 20.3826, 0.37", "51.1958, -98.4956, 21.0814, 0.66", "50.7317, -98.7456, 21.4156, 0.96", "50.1517, -99.074, 21.8801, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_24", "dend_16", "dend_11", "dend_0", "dend_31", "dend_26", "dend_23", "dend_17", "dend_13", "dend_12", "dend_6", "dend_1", "dend_33", "dend_32", "dend_30", "dend_27", "dend_20", "dend_19", "dend_18", "dend_15", "dend_14", "dend_10", "dend_7", "dend_5", "dend_2", "dend_35", "dend_34", "dend_29", "dend_28", "dend_22", "dend_21", "dend_9", "dend_8", "dend_4", "dend_3" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_25", "dend_24", "dend_16", "dend_11", "dend_0", "dend_31", "dend_26", "dend_23", "dend_17", "dend_13", "dend_12", "dend_6", "dend_1", "dend_33", "dend_32", "dend_30", "dend_27", "dend_20", "dend_19", "dend_18", "dend_15", "dend_14", "dend_10", "dend_7", "dend_5", "dend_2", "dend_35", "dend_34", "dend_29", "dend_28", "dend_22", "dend_21", "dend_9", "dend_8", "dend_4", "dend_3" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_24", "dend_16", "dend_11", "dend_0", "axon_0", "dend_31", "dend_26", "dend_23", "dend_17", "dend_13", "dend_12", "dend_6", "dend_1", "axon_1", "dend_33", "dend_32", "dend_30", "dend_27", "dend_20", "dend_19", "dend_18", "dend_15", "dend_14", "dend_10", "dend_7", "dend_5", "dend_2", "dend_35", "dend_34", "dend_29", "dend_28", "dend_22", "dend_21", "dend_9", "dend_8", "dend_4", "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_NBC_3bb78a3daa_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_16
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_17
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_24, dend_16, dend_11, dend_0, dend_31, dend_26, dend_23, dend_17, dend_13, dend_12, dend_6, dend_1, dend_33, dend_32, dend_30, dend_27, dend_20, dend_19, dend_18, dend_15, dend_14, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_29, dend_28, dend_22, dend_21, dend_9, dend_8, dend_4, dend_3]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_24, dend_16, dend_11, dend_0, dend_31, dend_26, dend_23, dend_17, dend_13, dend_12, dend_6, dend_1, dend_33, dend_32, dend_30, dend_27, dend_20, dend_19, dend_18, dend_15, dend_14, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_29, dend_28, dend_22, dend_21, dend_9, dend_8, dend_4, dend_3]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_25, dend_24, dend_16, dend_11, dend_0, axon_0, dend_31, dend_26, dend_23, dend_17, dend_13, dend_12, dend_6, dend_1, axon_1, dend_33, dend_32, dend_30, dend_27, dend_20, dend_19, dend_18, dend_15, dend_14, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_29, dend_28, dend_22, dend_21, dend_9, dend_8, dend_4, dend_3]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_25(0), soma_0(0.4999999708133156)
    connect dend_24(0), soma_0(0.4999999708133156)
    connect dend_16(0), soma_0(0.4999999708133156)
    connect dend_11(0), soma_0(0.4999999708133156)
    connect dend_0(0), soma_0(0.4999999708133156)
    connect axon_0(0), soma_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_17(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 8.74623, 0.781591, -3.68865, 4.22508 ) }
    soma_0 { pt3dadd( 7.81482, 0.663318, -3.30056, 7.44205 ) }
    soma_0 { pt3dadd( 6.88342, 0.545045, -2.91248, 9.35369 ) }
    soma_0 { pt3dadd( 5.95201, 0.426772, -2.52439, 10.2251 ) }
    soma_0 { pt3dadd( 5.0206, 0.308499, -2.13631, 11.1132 ) }
    soma_0 { pt3dadd( 4.0892, 0.190226, -1.74822, 11.7231 ) }
    soma_0 { pt3dadd( 3.15779, 0.071953, -1.36013, 12.5249 ) }
    soma_0 { pt3dadd( 2.22638, -0.04632, -0.972048, 13.4858 ) }
    soma_0 { pt3dadd( 1.29497, -0.164593, -0.583961, 14.2705 ) }
    soma_0 { pt3dadd( 0.363568, -0.282866, -0.195875, 14.5976 ) }
    soma_0 { pt3dadd( -0.567839, -0.401139, 0.192211, 14.6055 ) }
    soma_0 { pt3dadd( -1.49925, -0.519412, 0.580297, 14.5425 ) }
    soma_0 { pt3dadd( -2.43065, -0.637685, 0.968383, 14.4419 ) }
    soma_0 { pt3dadd( -3.36206, -0.755958, 1.35647, 14.3453 ) }
    soma_0 { pt3dadd( -4.29347, -0.874231, 1.74456, 13.9568 ) }
    soma_0 { pt3dadd( -5.22487, -0.992504, 2.13264, 13.5861 ) }
    soma_0 { pt3dadd( -6.15628, -1.11078, 2.52073, 12.6466 ) }
    soma_0 { pt3dadd( -7.08769, -1.22905, 2.90881, 10.6767 ) }
    soma_0 { pt3dadd( -8.01909, -1.34732, 3.2969, 8.182 ) }
    soma_0 { pt3dadd( -8.9505, -1.4656, 3.68499, 5.29833 ) }
    soma_0 { pt3dadd( -9.88191, -1.58387, 4.07307, 2.95026 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 21/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -8.08418, -1.27152, 8.89042, 2.58 ) }
    dend_25 { pt3dadd( -8.60777, -1.36406, 8.86354, 2.58 ) }
    dend_25 { pt3dadd( -9.30824, -1.48787, 8.82759, 2.58 ) }
    dend_25 { pt3dadd( -10.115, -1.63047, 8.78618, 2.95 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 25/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -4.57418, -7.30402, 4.64042, 1.18 ) }
    dend_24 { pt3dadd( -4.57418, -7.30402, 4.64042, 1.18 ) }
    dend_24 { pt3dadd( -5.05829, -9.6024, 5.90207, 1.03 ) }
    dend_24 { pt3dadd( -5.33404, -12.0935, 7.11444, 1.4 ) }
    dend_24 { pt3dadd( -5.37768, -13.4446, 7.62021, 2.43 ) }
    dend_24 { pt3dadd( -5.35448, -14.4792, 7.90505, 3.02 ) }
    dend_24 { pt3dadd( -5.22037, -16.4696, 8.33551, 2.14 ) }
    dend_24 { pt3dadd( -4.88147, -18.4783, 8.51037, 1.69 ) }
    dend_24 { pt3dadd( -4.38902, -20.0195, 8.38884, 1.69 ) }
    dend_24 { pt3dadd( -3.5527, -22.1002, 7.86381, 2.28 ) }
    dend_24 { pt3dadd( -3.01628, -23.3318, 7.41542, 3.09 ) }
    dend_24 { pt3dadd( -2.70048, -24.0197, 7.12624, 3.09 ) }
    dend_24 { pt3dadd( -1.59524, -26.3652, 6.08699, 2.36 ) }
    dend_24 { pt3dadd( -0.550973, -28.5236, 5.18825, 1.25 ) }
    dend_24 { pt3dadd( 0.543749, -30.731, 4.41952, 0.81 ) }
    dend_24 { pt3dadd( 1.45275, -32.5385, 4.02161, 0.59 ) }
    dend_24 { pt3dadd( 2.0545, -33.7351, 3.91191, 0.59 ) }
    dend_24 { pt3dadd( 2.5222, -34.6525, 3.95209, 0.88 ) }
    dend_24 { pt3dadd( 3.45398, -36.4343, 4.42511, 0.59 ) }
    dend_24 { pt3dadd( 4.01912, -37.4922, 4.92002, 1.47 ) }
    dend_24 { pt3dadd( 4.65668, -38.5958, 5.62123, 2.14 ) }
    dend_24 { pt3dadd( 5.15166, -39.3991, 6.20042, 2.28 ) }
    dend_24 { pt3dadd( 5.74317, -40.4277, 6.88769, 0.96 ) }
    dend_24 { pt3dadd( 6.15306, -41.252, 7.37725, 0.66 ) }
    dend_24 { pt3dadd( 6.68084, -42.469, 7.93587, 0.66 ) }
    dend_24 { pt3dadd( 7.16587, -43.6693, 8.39259, 0.59 ) }
    dend_24 { pt3dadd( 7.71929, -45.0435, 8.7655, 0.52 ) }
    dend_24 { pt3dadd( 8.32891, -46.5558, 9.05787, 0.37 ) }
    dend_24 { pt3dadd( 8.75179, -47.5132, 9.12561, 1.33 ) }
    dend_24 { pt3dadd( 9.52386, -49.0318, 9.08199, 1.47 ) }
    dend_24 { pt3dadd( 10.0071, -49.8517, 8.999, 1.62 ) }
    dend_24 { pt3dadd( 10.638, -50.8206, 8.91361, 1.62 ) }
    dend_24 { pt3dadd( 11.2537, -51.7383, 8.9394, 1.33 ) }
    dend_24 { pt3dadd( 12.3762, -53.4194, 9.21821, 0.74 ) }
    dend_24 { pt3dadd( 12.855, -54.2787, 9.47568, 0.44 ) }
    dend_24 { pt3dadd( 13.4341, -55.8096, 10.1926, 0.44 ) }
    dend_24 { pt3dadd( 13.8369, -57.3649, 11.0391, 0.44 ) }
    dend_24 { pt3dadd( 14.3209, -59.7783, 12.424, 0.37 ) }
    dend_24 { pt3dadd( 14.5287, -61.1274, 13.1796, 0.37 ) }
    dend_24 { pt3dadd( 14.7023, -62.546, 13.8874, 0.37 ) }
    dend_24 { pt3dadd( 14.9293, -63.8754, 14.3561, 0.37 ) }
    dend_24 { pt3dadd( 15.2317, -65.0671, 14.5892, 0.74 ) }
    dend_24 { pt3dadd( 15.767, -66.6489, 14.7, 0.74 ) }
    dend_24 { pt3dadd( 16.1714, -67.6831, 14.713, 0.74 ) }
    dend_24 { pt3dadd( 16.4688, -68.3742, 14.7557, 0.74 ) }
    dend_24 { pt3dadd( 17.055, -69.8053, 14.9143, 0.59 ) }
    dend_24 { pt3dadd( 17.586, -71.303, 15.0912, 0.59 ) }
    dend_24 { pt3dadd( 17.8998, -72.2852, 15.2001, 2.06 ) }
    dend_24 { pt3dadd( 18.202, -73.2764, 15.2616, 3.09 ) }
    dend_24 { pt3dadd( 18.5306, -74.3483, 15.281, 3.32 ) }
    dend_24 { pt3dadd( 18.7254, -75.0602, 15.3427, 3.32 ) }
    dend_24 { pt3dadd( 19.2428, -77.3153, 15.6543, 0.96 ) }
    dend_24 { pt3dadd( 19.7269, -79.5665, 16.1006, 0.44 ) }
    dend_24 { pt3dadd( 20.0677, -81.6038, 16.729, 0.29 ) }
    dend_24 { pt3dadd( 20.2212, -82.9624, 17.2612, 0.29 ) }
    dend_24 { pt3dadd( 20.3388, -85.94, 18.8021, 1.62 ) }
    dend_24 { pt3dadd( 20.2962, -86.9227, 19.47, 2.21 ) }
    dend_24 { pt3dadd( 20.1949, -87.6268, 20.112, 2.5 ) }
    dend_24 { pt3dadd( 19.8138, -89.5561, 22.1884, 0.74 ) }
    dend_24 { pt3dadd( 19.6347, -90.4964, 23.2331, 0.59 ) }
    dend_24 { pt3dadd( 19.4726, -91.8477, 24.5656, 0.81 ) }
    dend_24 { pt3dadd( 19.4813, -92.7087, 25.1937, 0.81 ) }
    dend_24 { pt3dadd( 19.6899, -94.2684, 26.0573, 0.81 ) }
    dend_24 { pt3dadd( 20.1043, -95.842, 26.5823, 0.52 ) }
    dend_24 { pt3dadd( 20.8341, -97.5228, 26.7131, 0.29 ) }
    dend_24 { pt3dadd( 21.916, -99.5299, 26.5692, 0.29 ) }
    dend_24 { pt3dadd( 22.8977, -101.205, 26.4502, 0.66 ) }
    dend_24 { pt3dadd( 23.6375, -102.412, 26.4379, 0.66 ) }
    dend_24 { pt3dadd( 24.2057, -103.338, 26.4622, 1.11 ) }
    dend_24 { pt3dadd( 24.6375, -104.146, 26.7318, 1.18 ) }
    dend_24 { pt3dadd( 24.6131, -104.78, 27.7365, 0.96 ) }
    dend_24 { pt3dadd( 24.014, -106.449, 31.0583, 0.52 ) }
    dend_24 { pt3dadd( 23.686, -107.008, 32.3636, 0.81 ) }
    dend_24 { pt3dadd( 23.4996, -107.278, 33.0147, 0.81 ) }
    dend_24 { pt3dadd( 22.8141, -108.309, 35.2535, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_24 { pt3dadd( 22.5447, -108.797, 36.1495, 0.52 ) }
    dend_24 { pt3dadd( 22.0534, -110.065, 37.9172, 0.96 ) }
    dend_24 { pt3dadd( 21.8946, -111.011, 38.7833, 1.25 ) }
    dend_24 { pt3dadd( 21.8764, -112.236, 39.6425, 1.25 ) }
    dend_24 { pt3dadd( 21.9805, -113.669, 40.5467, 0.88 ) }
    dend_24 { pt3dadd( 22.1302, -114.77, 41.205, 1.47 ) }
    dend_24 { pt3dadd( 22.3369, -116.0, 41.9149, 1.18 ) }
    dend_24 { pt3dadd( 22.5155, -117.072, 42.481, 0.88 ) }
    dend_24 { pt3dadd( 22.7394, -118.563, 43.2278, 0.74 ) }
    dend_24 { pt3dadd( 23.0482, -120.952, 44.3949, 1.11 ) }
    dend_24 { pt3dadd( 23.2332, -122.664, 45.2351, 1.55 ) }
    dend_24 { pt3dadd( 23.3267, -123.859, 45.7997, 1.33 ) }
    dend_24 { pt3dadd( 23.4271, -125.143, 46.3803, 0.74 ) }
    dend_24 { pt3dadd( 23.5321, -126.176, 46.7608, 0.96 ) }
    dend_24 { pt3dadd( 23.7341, -127.64, 47.1584, 0.96 ) }
    dend_24 { pt3dadd( 24.0367, -129.038, 47.2568, 0.74 ) }
    dend_24 { pt3dadd( 24.3346, -130.068, 47.1924, 0.44 ) }
    dend_24 { pt3dadd( 24.8654, -131.66, 47.0071, 0.29 ) }
    dend_24 { pt3dadd( 25.6825, -133.741, 46.5805, 0.88 ) }
    dend_24 { pt3dadd( 25.9625, -134.395, 46.4616, 1.11 ) }
    dend_24 { pt3dadd( 27.1216, -136.929, 46.098, 0.44 ) }
    dend_24 { pt3dadd( 27.8526, -138.464, 46.0105, 0.44 ) }
    dend_24 { pt3dadd( 28.305, -139.39, 46.115, 0.88 ) }
    dend_24 { pt3dadd( 28.65, -140.124, 46.3637, 0.88 ) }
    dend_24 { pt3dadd( 29.791, -142.618, 47.4184, 0.59 ) }
    dend_24 { pt3dadd( 30.2191, -143.568, 47.8107, 0.88 ) }
    dend_24 { pt3dadd( 30.7557, -144.844, 48.2858, 1.11 ) }
    dend_24 { pt3dadd( 31.3388, -146.34, 48.5655, 0.22 ) }
    dend_24 { pt3dadd( 31.7285, -147.509, 48.6966, 0.22 ) }
    dend_24 { pt3dadd( 32.4522, -150.635, 48.9352, 1.18 ) }
    dend_24 { pt3dadd( 32.5699, -151.648, 48.9432, 1.84 ) }
    dend_24 { pt3dadd( 32.584, -153.79, 49.0536, 0.52 ) }
    dend_24 { pt3dadd( 32.4988, -155.308, 49.1477, 0.52 ) }
    dend_24 { pt3dadd( 32.2722, -157.825, 49.3894, 0.74 ) }
    dend_24 { pt3dadd( 32.1558, -159.662, 49.6738, 0.52 ) }
    dend_24 { pt3dadd( 32.1478, -161.44, 50.1071, 0.52 ) }
    dend_24 { pt3dadd( 32.4638, -164.175, 50.6911, 1.47 ) }
    dend_24 { pt3dadd( 32.7684, -165.383, 50.8905, 2.21 ) }
    dend_24 { pt3dadd( 33.1481, -166.369, 50.9609, 2.36 ) }
    dend_24 { pt3dadd( 34.1183, -168.283, 50.9091, 0.37 ) }
    dend_24 { pt3dadd( 35.119, -169.916, 50.7532, 0.37 ) }
    dend_24 { pt3dadd( 36.3683, -171.747, 50.4953, 0.37 ) }
    dend_24 { pt3dadd( 36.9796, -172.671, 50.3408, 0.59 ) }
    dend_24 { pt3dadd( 37.5996, -173.701, 50.1893, 0.74 ) }
    dend_24 { pt3dadd( 38.1717, -174.793, 50.036, 0.74 ) }
    dend_24 { pt3dadd( 38.8138, -176.238, 49.8495, 0.44 ) }
    dend_24 { pt3dadd( 39.4074, -177.811, 49.6991, 0.37 ) }
    dend_24 { pt3dadd( 39.9854, -179.737, 49.6484, 0.37 ) }
    dend_24 { pt3dadd( 40.2962, -180.98, 49.6674, 0.29 ) }
    dend_24 { pt3dadd( 40.6024, -182.506, 49.8291, 1.4 ) }
    dend_24 { pt3dadd( 40.7516, -183.578, 50.0164, 2.28 ) }
    dend_24 { pt3dadd( 40.8046, -184.214, 50.1922, 2.28 ) }
    dend_24 { pt3dadd( 40.8975, -186.425, 50.9794, 0.52 ) }
    dend_24 { pt3dadd( 40.9007, -187.279, 51.3268, 0.52 ) }
    dend_24 { pt3dadd( 40.8037, -189.212, 52.1183, 0.29 ) }
    dend_24 { pt3dadd( 40.6864, -190.876, 52.9006, 0.44 ) }
    dend_24 { pt3dadd( 40.5859, -192.192, 53.5057, 1.11 ) }
    dend_24 { pt3dadd( 40.535, -192.806, 53.771, 1.47 ) }
    dend_24 { pt3dadd( 40.4114, -194.255, 54.4158, 0.74 ) }
    dend_24 { pt3dadd( 40.2931, -195.72, 55.033, 0.29 ) }
    dend_24 { pt3dadd( 40.1651, -197.546, 55.6798, 0.29 ) }
    dend_24 { pt3dadd( 40.0978, -199.345, 56.2689, 0.29 ) }
    dend_24 { pt3dadd( 40.0722, -201.46, 56.8091, 1.03 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 63/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 0.845822, 7.11698, 0.39042, 2.06 ) }
    dend_16 { pt3dadd( 0.918976, 7.9815, 0.429617, 1.55 ) }
    dend_16 { pt3dadd( 1.09069, 9.91377, 0.590281, 1.33 ) }
    dend_16 { pt3dadd( 1.26523, 11.6337, 0.781055, 1.33 ) }
    dend_16 { pt3dadd( 1.43911, 13.1133, 0.977348, 1.33 ) }
    dend_16 { pt3dadd( 1.65919, 14.4504, 1.16473, 1.33 ) }
    dend_16 { pt3dadd( 1.95246, 15.7443, 1.32519, 1.18 ) }
    dend_16 { pt3dadd( 2.36428, 17.0165, 1.47097, 1.47 ) }
    dend_16 { pt3dadd( 2.71959, 17.7468, 1.54516, 1.47 ) }
    dend_16 { pt3dadd( 3.50562, 18.831, 1.59505, 0.88 ) }
    dend_16 { pt3dadd( 4.7837, 20.1066, 1.31187, 1.03 ) }
    dend_16 { pt3dadd( 5.85166, 20.9877, 0.705961, 1.25 ) }
    dend_16 { pt3dadd( 6.50892, 21.5314, 0.00981897, 1.25 ) }
    dend_16 { pt3dadd( 7.1666, 22.1213, -1.1721, 0.96 ) }
    dend_16 { pt3dadd( 7.84494, 22.7512, -2.69199, 0.81 ) }
    dend_16 { pt3dadd( 9.13624, 24.0322, -6.0387, 1.11 ) }
    dend_16 { pt3dadd( 9.92515, 24.8996, -8.29217, 1.33 ) }
    dend_16 { pt3dadd( 10.747, 25.9257, -10.7983, 2.06 ) }
    dend_16 { pt3dadd( 11.8665, 27.4742, -14.2734, 0.66 ) }
    dend_16 { pt3dadd( 12.391, 28.2918, -15.9109, 0.81 ) }
    dend_16 { pt3dadd( 12.695, 28.804, -16.7438, 1.4 ) }
    dend_16 { pt3dadd( 13.2481, 29.6763, -17.7991, 1.47 ) }
    dend_16 { pt3dadd( 13.8745, 30.5776, -18.6599, 1.18 ) }
    dend_16 { pt3dadd( 14.4356, 31.3303, -19.2346, 0.88 ) }
    dend_16 { pt3dadd( 15.0172, 32.1957, -19.7275, 0.88 ) }
    dend_16 { pt3dadd( 15.5693, 33.1572, -20.2891, 1.62 ) }
    dend_16 { pt3dadd( 16.4142, 34.7233, -21.3077, 2.73 ) }
    dend_16 { pt3dadd( 16.6316, 35.1959, -21.6405, 3.39 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 91/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.46418, 5.43548, -5.42958, 1.92 ) }
    dend_11 { pt3dadd( -4.46418, 5.43548, -5.42958, 1.92 ) }
    dend_11 { pt3dadd( -5.00196, 6.74123, -5.48809, 1.69 ) }
    dend_11 { pt3dadd( -5.60316, 8.34546, -5.55391, 1.25 ) }
    dend_11 { pt3dadd( -5.96657, 9.38202, -5.53631, 1.47 ) }
    dend_11 { pt3dadd( -6.4348, 10.7977, -5.48338, 1.47 ) }
    dend_11 { pt3dadd( -7.06425, 12.788, -5.40383, 1.62 ) }
    dend_11 { pt3dadd( -7.42778, 14.119, -5.36091, 1.62 ) }
    dend_11 { pt3dadd( -7.5961, 14.9352, -5.34059, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_11 { pt3dadd( -7.80534, 16.3795, -5.32368, 1.92 ) }
    dend_11 { pt3dadd( -7.8916, 17.1548, -5.36545, 2.21 ) }
    dend_11 { pt3dadd( -7.95724, 17.8877, -5.43066, 2.5 ) }
    dend_11 { pt3dadd( -8.04737, 19.0771, -5.61741, 2.5 ) }
    dend_11 { pt3dadd( -8.08874, 19.7598, -5.78626, 2.28 ) }
    dend_11 { pt3dadd( -8.1223, 20.6381, -6.09967, 2.28 ) }
    dend_11 { pt3dadd( -8.14995, 21.6879, -6.63289, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 7/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 8.05583, -2.01252, -4.73958, 3.76 ) }
    dend_0 { pt3dadd( 8.05583, -2.01252, -4.73958, 3.76 ) }
    dend_0 { pt3dadd( 9.28428, -2.65259, -5.31682, 3.46 ) }
    dend_0 { pt3dadd( 9.88418, -2.96516, -5.5987, 3.46 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 11/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -9.88191, -1.58387, 4.07307, 0.524843 ) }
    axon_0 { pt3dadd( -24.7624, -3.47344, 4.07307, 0.524843 ) }
    axon_0 { pt3dadd( -39.6429, -5.36302, 4.07307, 0.524843 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 14/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -10.115, -1.63047, 8.78618, 1.69 ) }
    dend_31 { pt3dadd( -10.8819, -0.164299, 11.4183, 1.69 ) }
    dend_31 { pt3dadd( -11.1621, 0.371361, 12.38, 1.69 ) }
    dend_31 { pt3dadd( -11.7002, 1.40009, 14.2268, 2.58 ) }
    dend_31 { pt3dadd( -12.2096, 2.37393, 15.9751, 3.54 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 19/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -10.115, -1.63047, 8.78618, 1.11 ) }
    dend_26 { pt3dadd( -10.0526, -4.35827, 10.1819, 1.11 ) }
    dend_26 { pt3dadd( -10.2762, -7.18374, 11.3618, 0.59 ) }
    dend_26 { pt3dadd( -10.5054, -8.522, 11.7843, 0.59 ) }
    dend_26 { pt3dadd( -10.9644, -10.0664, 12.0351, 0.74 ) }
    dend_26 { pt3dadd( -11.6535, -11.5741, 12.0839, 1.62 ) }
    dend_26 { pt3dadd( -11.9914, -12.1346, 12.0545, 1.99 ) }
    dend_26 { pt3dadd( -12.5776, -12.832, 11.8573, 2.28 ) }
    dend_26 { pt3dadd( -13.278, -13.5889, 11.5592, 2.28 ) }
    dend_26 { pt3dadd( -14.4976, -14.9654, 10.9464, 1.55 ) }
    dend_26 { pt3dadd( -15.4755, -16.2978, 10.3437, 1.25 ) }
    dend_26 { pt3dadd( -16.0584, -17.4175, 9.83594, 1.47 ) }
    dend_26 { pt3dadd( -16.6221, -19.0453, 9.2784, 0.88 ) }
    dend_26 { pt3dadd( -16.8623, -20.3569, 8.93972, 0.88 ) }
    dend_26 { pt3dadd( -16.9261, -22.5773, 8.57851, 0.74 ) }
    dend_26 { pt3dadd( -16.7445, -24.3677, 8.43135, 0.74 ) }
    dend_26 { pt3dadd( -16.3984, -26.4605, 8.34289, 0.74 ) }
    dend_26 { pt3dadd( -15.8943, -29.3447, 8.29332, 1.4 ) }
    dend_26 { pt3dadd( -15.7595, -30.2249, 8.31767, 1.62 ) }
    dend_26 { pt3dadd( -15.6253, -31.736, 8.4325, 1.11 ) }
    dend_26 { pt3dadd( -15.7903, -33.0511, 8.62832, 0.59 ) }
    dend_26 { pt3dadd( -16.5635, -33.9804, 8.64845, 0.59 ) }
    dend_26 { pt3dadd( -17.83, -34.6893, 8.39931, 0.96 ) }
    dend_26 { pt3dadd( -18.5981, -35.0201, 8.10636, 0.96 ) }
    dend_26 { pt3dadd( -19.6392, -35.4803, 7.59591, 0.37 ) }
    dend_26 { pt3dadd( -20.7602, -36.0195, 6.92809, 0.37 ) }
    dend_26 { pt3dadd( -21.9794, -36.7967, 6.02528, 0.81 ) }
    dend_26 { pt3dadd( -22.6562, -37.4434, 5.3716, 0.81 ) }
    dend_26 { pt3dadd( -23.3382, -38.4901, 4.48877, 0.66 ) }
    dend_26 { pt3dadd( -23.9069, -39.9853, 3.44595, 0.52 ) }
    dend_26 { pt3dadd( -24.0883, -40.8724, 2.92998, 1.25 ) }
    dend_26 { pt3dadd( -24.2175, -41.9998, 2.33706, 1.92 ) }
    dend_26 { pt3dadd( -24.2625, -42.6083, 2.05239, 1.92 ) }
    dend_26 { pt3dadd( -24.3653, -43.9889, 1.44483, 1.18 ) }
    dend_26 { pt3dadd( -24.5386, -45.9668, 0.602572, 0.52 ) }
    dend_26 { pt3dadd( -24.7502, -47.7031, -0.126693, 1.11 ) }
    dend_26 { pt3dadd( -24.9767, -49.0741, -0.721988, 1.77 ) }
    dend_26 { pt3dadd( -25.1512, -49.7985, -0.981476, 1.92 ) }
    dend_26 { pt3dadd( -25.4424, -50.6765, -1.23402, 1.92 ) }
    dend_26 { pt3dadd( -26.1082, -52.0705, -1.53817, 0.88 ) }
    dend_26 { pt3dadd( -26.6941, -53.1025, -1.71866, 0.59 ) }
    dend_26 { pt3dadd( -27.5515, -54.478, -1.84955, 0.59 ) }
    dend_26 { pt3dadd( -29.0886, -56.8356, -1.84514, 1.25 ) }
    dend_26 { pt3dadd( -29.7292, -57.7613, -1.78188, 1.25 ) }
    dend_26 { pt3dadd( -30.8827, -59.2967, -1.5228, 1.25 ) }
    // Section: dend_23, id: dend_23, parent: dend_16 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 16.6316, 35.1959, -21.6405, 1.77 ) }
    dend_23 { pt3dadd( 18.0897, 36.6841, -21.7004, 1.77 ) }
    dend_23 { pt3dadd( 19.9916, 38.4421, -21.5222, 0.74 ) }
    dend_23 { pt3dadd( 21.0543, 39.3647, -21.1973, 0.59 ) }
    dend_23 { pt3dadd( 21.9804, 40.1659, -20.8396, 1.33 ) }
    dend_23 { pt3dadd( 22.5842, 40.7087, -20.6041, 1.33 ) }
    dend_23 { pt3dadd( 23.6822, 41.7357, -20.2212, 1.11 ) }
    dend_23 { pt3dadd( 24.6276, 42.6535, -19.827, 0.96 ) }
    dend_23 { pt3dadd( 26.1086, 44.1145, -19.2038, 0.52 ) }
    dend_23 { pt3dadd( 26.8083, 45.0241, -19.1757, 0.52 ) }
    dend_23 { pt3dadd( 27.3545, 46.0137, -19.6136, 0.96 ) }
    dend_23 { pt3dadd( 27.7804, 46.9149, -20.198, 0.96 ) }
    dend_23 { pt3dadd( 28.3151, 48.1054, -21.1527, 0.96 ) }
    dend_23 { pt3dadd( 28.6113, 48.8273, -21.7583, 1.03 ) }
    dend_23 { pt3dadd( 29.0216, 49.7966, -22.5672, 0.52 ) }
    dend_23 { pt3dadd( 29.3657, 50.6142, -23.1225, 0.52 ) }
    dend_23 { pt3dadd( 29.7736, 51.6182, -23.6493, 0.88 ) }
    dend_23 { pt3dadd( 30.2182, 52.7845, -24.1236, 1.18 ) }
    dend_23 { pt3dadd( 30.5524, 53.7244, -24.4336, 1.55 ) }
    dend_23 { pt3dadd( 30.8924, 54.7647, -24.7516, 1.55 ) }
    dend_23 { pt3dadd( 31.3175, 56.2958, -25.1557, 0.52 ) }
    dend_23 { pt3dadd( 31.5581, 57.2898, -25.3586, 0.52 ) }
    dend_23 { pt3dadd( 31.9155, 58.7935, -25.5094, 1.25 ) }
    dend_23 { pt3dadd( 32.1263, 59.6397, -25.5033, 1.84 ) }
    dend_23 { pt3dadd( 32.4191, 60.6766, -25.4087, 1.84 ) }
    dend_23 { pt3dadd( 33.044, 62.7304, -25.0488, 0.37 ) }
    dend_23 { pt3dadd( 33.517, 64.1541, -24.7004, 0.29 ) }
    dend_23 { pt3dadd( 34.1052, 65.791, -24.2436, 0.29 ) }
    dend_23 { pt3dadd( 34.468, 66.7405, -23.9618, 0.52 ) }
    dend_23 { pt3dadd( 35.0133, 68.054, -23.6117, 0.81 ) }
    dend_23 { pt3dadd( 35.5481, 69.2633, -23.3433, 0.81 ) }
    dend_23 { pt3dadd( 35.9482, 70.1395, -23.2185, 1.25 ) }
    dend_23 { pt3dadd( 36.2129, 70.7387, -23.1716, 1.25 ) }
    dend_23 { pt3dadd( 36.7511, 72.0685, -23.1709, 1.18 ) }
    dend_23 { pt3dadd( 37.4938, 74.1408, -23.2494, 0.59 ) }
    dend_23 { pt3dadd( 37.8636, 75.4028, -23.3576, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_23 { pt3dadd( 38.161, 76.6601, -23.546, 1.33 ) }
    dend_23 { pt3dadd( 38.3271, 77.5138, -23.7285, 0.81 ) }
    dend_23 { pt3dadd( 38.5961, 79.2271, -24.1976, 0.37 ) }
    dend_23 { pt3dadd( 38.7438, 80.517, -24.6517, 0.37 ) }
    dend_23 { pt3dadd( 38.84, 81.6672, -25.1532, 0.29 ) }
    dend_23 { pt3dadd( 38.9304, 82.6422, -25.6213, 0.29 ) }
    dend_23 { pt3dadd( 39.0563, 83.4587, -26.0515, 0.29 ) }
    dend_23 { pt3dadd( 39.1598, 83.9167, -26.2911, 0.29 ) }
    dend_23 { pt3dadd( 39.6233, 85.5022, -27.1366, 1.25 ) }
    dend_23 { pt3dadd( 39.8922, 86.379, -27.5804, 1.55 ) }
    dend_23 { pt3dadd( 40.1659, 87.3052, -28.0171, 1.55 ) }
    dend_23 { pt3dadd( 40.6132, 89.0943, -28.8857, 0.88 ) }
    dend_23 { pt3dadd( 40.8045, 90.1635, -29.4564, 0.29 ) }
    dend_23 { pt3dadd( 40.896, 91.0192, -29.9386, 0.29 ) }
    dend_23 { pt3dadd( 40.955, 92.0502, -30.573, 0.81 ) }
    dend_23 { pt3dadd( 40.9656, 92.6384, -30.9606, 1.18 ) }
    dend_23 { pt3dadd( 40.9395, 93.9565, -31.8538, 0.96 ) }
    dend_23 { pt3dadd( 40.8917, 95.3207, -32.7222, 0.59 ) }
    dend_23 { pt3dadd( 40.9509, 96.8466, -33.7506, 1.11 ) }
    dend_23 { pt3dadd( 41.0082, 97.4709, -34.166, 1.47 ) }
    dend_23 { pt3dadd( 41.0988, 98.198, -34.6404, 1.69 ) }
    dend_23 { pt3dadd( 41.2174, 99.1016, -35.1929, 0.74 ) }
    dend_23 { pt3dadd( 41.4385, 100.516, -36.0135, 0.29 ) }
    dend_23 { pt3dadd( 41.8009, 102.344, -37.0679, 0.52 ) }
    dend_23 { pt3dadd( 42.0227, 103.237, -37.5687, 0.52 ) }
    dend_23 { pt3dadd( 42.3449, 104.334, -38.1723, 0.52 ) }
    dend_23 { pt3dadd( 42.5426, 104.924, -38.4923, 0.74 ) }
    dend_23 { pt3dadd( 43.1592, 106.466, -39.3783, 0.29 ) }
    dend_23 { pt3dadd( 43.7403, 107.706, -40.09, 0.29 ) }
    dend_23 { pt3dadd( 44.7385, 109.552, -40.9922, 1.84 ) }
    dend_23 { pt3dadd( 45.5331, 110.737, -41.5167, 2.43 ) }
    dend_23 { pt3dadd( 45.7024, 110.955, -41.6077, 2.8 ) }
    dend_23 { pt3dadd( 46.3376, 111.749, -41.9161, 2.8 ) }
    dend_23 { pt3dadd( 46.8984, 112.456, -42.1705, 1.92 ) }
    dend_23 { pt3dadd( 48.04, 113.944, -42.7341, 0.52 ) }
    dend_23 { pt3dadd( 48.7994, 115.003, -43.1668, 0.52 ) }
    dend_23 { pt3dadd( 49.7315, 116.453, -43.7933, 0.52 ) }
    dend_23 { pt3dadd( 50.5486, 117.71, -44.3731, 0.66 ) }
    dend_23 { pt3dadd( 51.076, 118.537, -44.7894, 0.66 ) }
    dend_23 { pt3dadd( 51.503, 119.214, -45.1741, 0.44 ) }
    dend_23 { pt3dadd( 52.1901, 120.3, -45.8594, 0.29 ) }
    dend_23 { pt3dadd( 52.7308, 121.142, -46.3925, 0.29 ) }
    dend_23 { pt3dadd( 53.5331, 122.252, -47.0304, 0.29 ) }
    dend_23 { pt3dadd( 54.1248, 122.943, -47.4239, 0.29 ) }
    dend_23 { pt3dadd( 54.9887, 123.889, -47.9566, 0.88 ) }
    dend_23 { pt3dadd( 55.3988, 124.341, -48.1983, 1.33 ) }
    dend_23 { pt3dadd( 55.9775, 125.008, -48.535, 1.33 ) }
    dend_23 { pt3dadd( 56.5996, 125.79, -48.9524, 0.81 ) }
    dend_23 { pt3dadd( 57.7547, 127.443, -49.9417, 0.29 ) }
    dend_23 { pt3dadd( 58.298, 128.23, -50.4307, 0.29 ) }
    dend_23 { pt3dadd( 58.8701, 129.151, -51.0317, 0.88 ) }
    dend_23 { pt3dadd( 59.1616, 129.704, -51.399, 1.18 ) }
    dend_23 { pt3dadd( 59.5881, 130.713, -52.0397, 0.81 ) }
    dend_23 { pt3dadd( 60.0154, 132.04, -52.8508, 0.29 ) }
    dend_23 { pt3dadd( 60.1949, 132.804, -53.2844, 0.29 ) }
    dend_23 { pt3dadd( 60.4513, 134.098, -54.0033, 0.29 ) }
    dend_23 { pt3dadd( 60.6657, 135.326, -54.6678, 0.37 ) }
    dend_23 { pt3dadd( 60.86, 136.461, -55.2791, 0.37 ) }
    dend_23 { pt3dadd( 61.0447, 137.467, -55.7849, 1.03 ) }
    dend_23 { pt3dadd( 61.3536, 139.112, -56.5926, 2.21 ) }
    dend_23 { pt3dadd( 61.544, 140.064, -57.0595, 2.8 ) }
    dend_23 { pt3dadd( 61.7514, 140.92, -57.4531, 2.95 ) }
    dend_23 { pt3dadd( 62.178, 142.319, -58.0454, 1.92 ) }
    dend_23 { pt3dadd( 62.6871, 143.732, -58.6191, 0.37 ) }
    dend_23 { pt3dadd( 63.105, 144.733, -58.9637, 0.37 ) }
    dend_23 { pt3dadd( 63.5391, 145.642, -59.2282, 1.03 ) }
    dend_23 { pt3dadd( 63.9631, 146.475, -59.4281, 1.03 ) }
    dend_23 { pt3dadd( 64.4714, 147.393, -59.6159, 0.29 ) }
    dend_23 { pt3dadd( 64.9713, 148.288, -59.7559, 0.29 ) }
    dend_23 { pt3dadd( 65.8012, 149.733, -59.9945, 0.29 ) }
    dend_23 { pt3dadd( 66.6975, 151.338, -60.2514, 2.28 ) }
    dend_23 { pt3dadd( 67.0808, 152.065, -60.3741, 2.5 ) }
    dend_23 { pt3dadd( 67.7702, 153.467, -60.6301, 1.33 ) }
    dend_23 { pt3dadd( 68.4641, 154.944, -60.9327, 0.22 ) }
    dend_23 { pt3dadd( 69.3255, 156.756, -61.3205, 0.22 ) }
    dend_23 { pt3dadd( 70.0674, 158.283, -61.7529, 0.81 ) }
    dend_23 { pt3dadd( 70.4363, 159.038, -62.0196, 0.81 ) }
    dend_23 { pt3dadd( 71.2374, 160.667, -62.7085, 0.29 ) }
    dend_23 { pt3dadd( 71.734, 161.689, -63.1934, 0.81 ) }
    dend_23 { pt3dadd( 72.1762, 162.51, -63.6618, 1.03 ) }
    dend_23 { pt3dadd( 73.3434, 164.578, -64.9456, 0.22 ) }
    dend_23 { pt3dadd( 73.769, 165.307, -65.4104, 0.22 ) }
    dend_23 { pt3dadd( 74.7034, 166.872, -66.4103, 2.14 ) }
    dend_23 { pt3dadd( 75.0634, 167.488, -66.7766, 2.43 ) }
    dend_23 { pt3dadd( 76.3865, 169.777, -68.0473, 0.22 ) }
    dend_23 { pt3dadd( 76.9105, 170.692, -68.5145, 0.44 ) }
    dend_23 { pt3dadd( 77.5153, 171.749, -68.9788, 0.15 ) }
    dend_23 { pt3dadd( 78.3911, 173.261, -69.5801, 0.29 ) }
    dend_23 { pt3dadd( 79.308, 174.858, -70.1608, 0.22 ) }
    dend_23 { pt3dadd( 80.0156, 176.139, -70.5677, 0.74 ) }
    dend_23 { pt3dadd( 80.374, 176.847, -70.7563, 0.74 ) }
    dend_23 { pt3dadd( 81.5618, 179.341, -71.3641, 0.22 ) }
    dend_23 { pt3dadd( 82.0013, 180.336, -71.5795, 0.66 ) }
    dend_23 { pt3dadd( 83.1544, 183.256, -72.1069, 0.22 ) }
    dend_23 { pt3dadd( 83.6004, 184.508, -72.2983, 1.62 ) }
    dend_23 { pt3dadd( 83.9235, 185.548, -72.4245, 1.92 ) }
    dend_23 { pt3dadd( 84.5286, 187.794, -72.667, 0.15 ) }
    dend_23 { pt3dadd( 84.7087, 188.66, -72.7424, 0.52 ) }
    dend_23 { pt3dadd( 84.8325, 189.436, -72.8081, 0.52 ) }
    dend_23 { pt3dadd( 85.1377, 192.011, -73.0185, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_23 { pt3dadd( 85.2346, 192.795, -73.0962, 0.66 ) }
    dend_23 { pt3dadd( 85.3541, 193.671, -73.1856, 0.66 ) }
    dend_23 { pt3dadd( 85.5729, 195.256, -73.3198, 0.22 ) }
    dend_23 { pt3dadd( 85.7305, 196.295, -73.3748, 1.03 ) }
    dend_23 { pt3dadd( 85.8018, 196.682, -73.3816, 1.03 ) }
    dend_23 { pt3dadd( 86.1945, 198.364, -73.3447, 0.37 ) }
    dend_23 { pt3dadd( 86.4761, 199.375, -73.2936, 0.22 ) }
    dend_23 { pt3dadd( 86.9821, 200.994, -73.1793, 0.37 ) }
    dend_23 { pt3dadd( 87.3279, 202.021, -73.104, 0.37 ) }
    dend_23 { pt3dadd( 87.6882, 203.067, -73.0334, 0.29 ) }
    dend_23 { pt3dadd( 88.4163, 205.24, -72.8477, 0.22 ) }
    dend_23 { pt3dadd( 88.5755, 205.725, -72.7964, 0.74 ) }
    dend_23 { pt3dadd( 89.0414, 207.132, -72.6321, 0.22 ) }
    dend_23 { pt3dadd( 89.6555, 208.858, -72.4884, 0.59 ) }
    dend_23 { pt3dadd( 90.1202, 210.101, -72.4057, 0.96 ) }
    dend_23 { pt3dadd( 90.6888, 211.556, -72.316, 2.06 ) }
    dend_23 { pt3dadd( 91.0156, 212.338, -72.2728, 2.43 ) }
    dend_23 { pt3dadd( 91.3149, 212.984, -72.2385, 2.43 ) }
    dend_23 { pt3dadd( 92.3343, 214.951, -72.1338, 0.29 ) }
    dend_23 { pt3dadd( 93.0267, 216.154, -72.0712, 0.22 ) }
    dend_23 { pt3dadd( 93.3246, 216.646, -72.0652, 0.66 ) }
    dend_23 { pt3dadd( 94.4857, 218.506, -72.1079, 0.29 ) }
    dend_23 { pt3dadd( 95.2946, 219.811, -72.1443, 0.96 ) }
    dend_23 { pt3dadd( 95.7653, 220.585, -72.1535, 0.96 ) }
    dend_23 { pt3dadd( 96.267, 221.45, -72.1463, 0.66 ) }
    dend_23 { pt3dadd( 97.5456, 223.854, -72.2366, 0.29 ) }
    dend_23 { pt3dadd( 97.9837, 224.775, -72.3065, 0.29 ) }
    dend_23 { pt3dadd( 98.3626, 225.653, -72.4206, 0.88 ) }
    dend_23 { pt3dadd( 98.6388, 226.365, -72.5332, 1.11 ) }
    dend_23 { pt3dadd( 98.8469, 226.961, -72.6417, 1.11 ) }
    dend_23 { pt3dadd( 99.6069, 229.489, -73.1717, 0.22 ) }
    dend_23 { pt3dadd( 99.8742, 230.569, -73.4315, 1.18 ) }
    dend_23 { pt3dadd( 100.024, 231.247, -73.6205, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 16.6316, 35.1959, -21.6405, 0.37 ) }
    dend_17 { pt3dadd( 15.2348, 36.9529, -22.3479, 0.37 ) }
    dend_17 { pt3dadd( 14.6828, 37.682, -22.6179, 0.37 ) }
    dend_17 { pt3dadd( 13.9745, 38.6941, -22.9613, 0.37 ) }
    dend_17 { pt3dadd( 13.4627, 39.4591, -23.201, 0.37 ) }
    dend_17 { pt3dadd( 12.6331, 40.8071, -23.5908, 1.69 ) }
    dend_17 { pt3dadd( 12.1931, 41.575, -23.7993, 2.65 ) }
    dend_17 { pt3dadd( 11.8507, 42.2878, -23.9554, 3.02 ) }
    dend_17 { pt3dadd( 11.4581, 43.1687, -24.1423, 3.02 ) }
    dend_17 { pt3dadd( 10.5048, 45.3719, -24.7328, 0.66 ) }
    dend_17 { pt3dadd( 10.0457, 46.4862, -25.0878, 0.81 ) }
    dend_17 { pt3dadd( 9.68307, 47.4376, -25.4323, 0.81 ) }
    dend_17 { pt3dadd( 9.44014, 48.1448, -25.6258, 0.37 ) }
    dend_17 { pt3dadd( 9.20816, 48.9103, -25.7663, 0.37 ) }
    dend_17 { pt3dadd( 8.72177, 50.5563, -25.8776, 0.37 ) }
    dend_17 { pt3dadd( 8.34395, 51.7563, -25.853, 0.96 ) }
    dend_17 { pt3dadd( 7.8936, 52.9684, -25.806, 1.18 ) }
    dend_17 { pt3dadd( 6.82625, 55.8563, -25.6832, 1.11 ) }
    dend_17 { pt3dadd( 6.39174, 57.1736, -25.6067, 0.81 ) }
    dend_17 { pt3dadd( 5.93871, 58.7959, -25.5056, 0.59 ) }
    dend_17 { pt3dadd( 5.6919, 59.8435, -25.4563, 0.52 ) }
    dend_17 { pt3dadd( 5.47885, 60.9702, -25.4118, 0.52 ) }
    dend_17 { pt3dadd( 5.22481, 62.3631, -25.4551, 0.81 ) }
    dend_17 { pt3dadd( 4.99215, 64.143, -25.7616, 2.5 ) }
    dend_17 { pt3dadd( 4.9462, 64.9331, -25.8967, 3.61 ) }
    dend_17 { pt3dadd( 5.0057, 65.9592, -26.0632, 3.98 ) }
    dend_17 { pt3dadd( 5.36671, 68.6711, -26.2612, 1.99 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 60/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.14995, 21.6879, -6.63289, 1.33 ) }
    dend_13 { pt3dadd( -8.10542, 22.9245, -6.63647, 1.33 ) }
    dend_13 { pt3dadd( -8.05698, 24.2696, -6.64036, 1.33 ) }
    dend_13 { pt3dadd( -8.00854, 25.6148, -6.64426, 1.33 ) }
    dend_13 { pt3dadd( -7.96967, 26.6943, -6.64739, 1.47 ) }
    dend_13 { pt3dadd( -7.93626, 27.6216, -6.65008, 1.92 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 66/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -8.14995, 21.6879, -6.63289, 0.29 ) }
    dend_12 { pt3dadd( -9.49092, 21.7588, -7.67595, 0.29 ) }
    dend_12 { pt3dadd( -11.1985, 21.9789, -9.09779, 0.29 ) }
    dend_12 { pt3dadd( -12.434, 22.2236, -10.1201, 0.52 ) }
    dend_12 { pt3dadd( -13.0609, 22.3624, -10.6177, 0.81 ) }
    dend_12 { pt3dadd( -15.0254, 22.7143, -12.15, 0.74 ) }
    dend_12 { pt3dadd( -16.9704, 22.9094, -13.6778, 0.29 ) }
    dend_12 { pt3dadd( -17.6869, 22.9122, -14.3042, 0.37 ) }
    dend_12 { pt3dadd( -18.2844, 22.9185, -14.9057, 0.37 ) }
    dend_12 { pt3dadd( -18.9705, 22.9567, -15.6792, 0.37 ) }
    dend_12 { pt3dadd( -20.1685, 23.0728, -17.0705, 0.59 ) }
    dend_12 { pt3dadd( -21.4233, 23.2377, -18.4793, 1.4 ) }
    dend_12 { pt3dadd( -23.4354, 23.4028, -20.5579, 1.11 ) }
    dend_12 { pt3dadd( -24.6157, 23.5078, -21.7014, 0.44 ) }
    dend_12 { pt3dadd( -25.125, 23.5739, -22.1573, 0.44 ) }
    dend_12 { pt3dadd( -25.6945, 23.6966, -22.5953, 1.11 ) }
    dend_12 { pt3dadd( -26.146, 23.8371, -22.8342, 1.47 ) }
    dend_12 { pt3dadd( -26.8066, 24.0456, -23.0022, 1.47 ) }
    dend_12 { pt3dadd( -28.4572, 24.4396, -23.0159, 0.29 ) }
    dend_12 { pt3dadd( -29.0991, 24.5796, -22.9774, 0.29 ) }
    dend_12 { pt3dadd( -29.59, 24.6832, -22.9495, 0.81 ) }
    dend_12 { pt3dadd( -30.3044, 24.8405, -22.916, 0.96 ) }
    dend_12 { pt3dadd( -31.0854, 25.0234, -22.8835, 0.59 ) }
    dend_12 { pt3dadd( -32.1058, 25.3066, -22.9087, 0.22 ) }
    dend_12 { pt3dadd( -32.6915, 25.4982, -22.9746, 0.22 ) }
    dend_12 { pt3dadd( -33.4552, 25.7722, -23.1406, 0.44 ) }
    dend_12 { pt3dadd( -34.5615, 26.1251, -23.4837, 0.44 ) }
    dend_12 { pt3dadd( -36.1972, 26.5767, -24.0598, 0.29 ) }
    dend_12 { pt3dadd( -38.1747, 26.988, -24.8315, 1.62 ) }
    dend_12 { pt3dadd( -39.4813, 27.1738, -25.4798, 2.8 ) }
    dend_12 { pt3dadd( -40.5075, 27.2632, -26.0366, 3.09 ) }
    dend_12 { pt3dadd( -43.3124, 27.372, -27.6138, 0.52 ) }
    dend_12 { pt3dadd( -43.8972, 27.3551, -27.9524, 1.11 ) }
    dend_12 { pt3dadd( -45.367, 27.2256, -28.8004, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -48.6384, 26.7888, -30.5376, 0.29 ) }
    dend_12 { pt3dadd( -50.2163, 26.531, -31.325, 0.29 ) }
    dend_12 { pt3dadd( -51.4255, 26.3172, -31.8623, 0.59 ) }
    dend_12 { pt3dadd( -54.0345, 25.8159, -32.8726, 1.92 ) }
    dend_12 { pt3dadd( -54.5644, 25.7082, -33.035, 2.87 ) }
    dend_12 { pt3dadd( -55.4635, 25.5208, -33.1891, 2.87 ) }
    dend_12 { pt3dadd( -56.5968, 25.2687, -33.1896, 2.28 ) }
    dend_12 { pt3dadd( -58.4276, 24.8813, -33.0655, 0.37 ) }
    dend_12 { pt3dadd( -59.9119, 24.5967, -32.8617, 0.29 ) }
    dend_12 { pt3dadd( -61.0681, 24.3929, -32.6042, 0.29 ) }
    dend_12 { pt3dadd( -62.3745, 24.1955, -32.3283, 0.22 ) }
    dend_12 { pt3dadd( -64.2306, 23.9328, -32.0146, 0.22 ) }
    dend_12 { pt3dadd( -64.7355, 23.8751, -31.9412, 0.96 ) }
    dend_12 { pt3dadd( -65.5624, 23.8069, -31.865, 1.03 ) }
    dend_12 { pt3dadd( -66.3279, 23.7737, -31.8217, 1.03 ) }
    dend_12 { pt3dadd( -68.4918, 23.707, -31.7873, 0.22 ) }
    dend_12 { pt3dadd( -69.9794, 23.6473, -31.845, 0.37 ) }
    dend_12 { pt3dadd( -70.9542, 23.6039, -31.9445, 0.22 ) }
    dend_12 { pt3dadd( -71.7782, 23.5687, -32.0539, 1.18 ) }
    dend_12 { pt3dadd( -72.4082, 23.5434, -32.1611, 1.69 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 9.88418, -2.96516, -5.5987, 0.96 ) }
    dend_6 { pt3dadd( 10.4773, -3.77461, -6.95258, 0.96 ) }
    dend_6 { pt3dadd( 11.0447, -4.78673, -8.42734, 0.88 ) }
    dend_6 { pt3dadd( 11.4244, -5.56429, -9.40112, 1.18 ) }
    dend_6 { pt3dadd( 11.9678, -6.75295, -10.7303, 1.69 ) }
    dend_6 { pt3dadd( 12.4137, -7.70928, -11.7289, 2.8 ) }
    dend_6 { pt3dadd( 12.9679, -8.766, -12.7824, 3.32 ) }
    dend_6 { pt3dadd( 13.6673, -10.0666, -13.9781, 3.02 ) }
    dend_6 { pt3dadd( 14.4076, -11.231, -15.0173, 1.99 ) }
    dend_6 { pt3dadd( 15.2204, -12.2417, -15.9113, 1.55 ) }
    dend_6 { pt3dadd( 16.4278, -13.366, -16.934, 1.4 ) }
    dend_6 { pt3dadd( 17.5906, -14.0477, -17.779, 1.47 ) }
    dend_6 { pt3dadd( 18.3968, -14.207, -18.3589, 1.47 ) }
    dend_6 { pt3dadd( 19.1847, -14.007, -19.0884, 1.47 ) }
    dend_6 { pt3dadd( 19.7853, -13.594, -20.0704, 1.4 ) }
    dend_6 { pt3dadd( 20.2645, -13.14, -20.9775, 1.25 ) }
    dend_6 { pt3dadd( 20.8981, -12.3265, -22.4698, 1.25 ) }
    dend_6 { pt3dadd( 21.361, -11.5548, -23.9243, 1.84 ) }
    dend_6 { pt3dadd( 21.9163, -10.4052, -26.2244, 2.65 ) }
    dend_6 { pt3dadd( 22.6148, -8.57317, -30.2632, 3.61 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.88418, -2.96516, -5.5987, 1.55 ) }
    dend_1 { pt3dadd( 11.0144, -4.50382, -4.97984, 1.55 ) }
    dend_1 { pt3dadd( 11.9936, -5.71055, -4.51536, 1.25 ) }
    dend_1 { pt3dadd( 12.9533, -6.8038, -4.11833, 1.25 ) }
    dend_1 { pt3dadd( 13.6134, -7.5137, -3.87188, 1.25 ) }
    dend_1 { pt3dadd( 14.8597, -8.80484, -3.45428, 1.25 ) }
    dend_1 { pt3dadd( 16.2179, -10.1794, -3.08726, 1.25 ) }
    dend_1 { pt3dadd( 17.0867, -11.0112, -2.8955, 1.55 ) }
    dend_1 { pt3dadd( 18.1804, -11.9675, -2.70377, 1.84 ) }
    dend_1 { pt3dadd( 18.8103, -12.4802, -2.61425, 1.84 ) }
    dend_1 { pt3dadd( 19.6473, -13.1428, -2.53484, 1.84 ) }
    dend_1 { pt3dadd( 21.0285, -14.2329, -2.55272, 1.69 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 52/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -39.6429, -5.36302, 4.07307, 0.379497 ) }
    axon_1 { pt3dadd( -54.5234, -7.25259, 4.07307, 0.379497 ) }
    axon_1 { pt3dadd( -69.4039, -9.14217, 4.07307, 0.379497 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 55/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -12.2096, 2.37393, 15.9751, 2.73 ) }
    dend_33 { pt3dadd( -11.5818, 3.54834, 15.8154, 2.73 ) }
    dend_33 { pt3dadd( -11.2419, 4.18404, 15.7289, 3.09 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 58/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -12.2096, 2.37393, 15.9751, 0.52 ) }
    dend_32 { pt3dadd( -12.0583, 1.40607, 15.5541, 0.52 ) }
    dend_32 { pt3dadd( -11.8964, 0.36127, 15.4007, 0.52 ) }
    dend_32 { pt3dadd( -11.7826, -0.637396, 15.3931, 1.11 ) }
    dend_32 { pt3dadd( -11.7335, -1.37154, 15.4358, 1.11 ) }
    dend_32 { pt3dadd( -11.7307, -2.36411, 15.5237, 0.74 ) }
    dend_32 { pt3dadd( -11.8052, -3.38773, 15.624, 1.03 ) }
    dend_32 { pt3dadd( -12.2798, -6.14739, 16.0352, 0.29 ) }
    dend_32 { pt3dadd( -12.5138, -6.70265, 16.1347, 0.29 ) }
    dend_32 { pt3dadd( -12.7391, -7.05267, 16.1933, 0.66 ) }
    dend_32 { pt3dadd( -13.1562, -7.64975, 16.2636, 0.66 ) }
    dend_32 { pt3dadd( -13.5836, -8.22621, 16.2851, 0.37 ) }
    dend_32 { pt3dadd( -14.2881, -9.16975, 16.1478, 0.37 ) }
    dend_32 { pt3dadd( -14.9551, -10.0925, 15.8129, 0.74 ) }
    dend_32 { pt3dadd( -15.2883, -10.6043, 15.6164, 0.74 ) }
    dend_32 { pt3dadd( -15.8431, -11.5796, 15.2346, 0.37 ) }
    dend_32 { pt3dadd( -16.2094, -12.2906, 14.9528, 0.37 ) }
    dend_32 { pt3dadd( -16.8569, -13.4963, 14.4529, 0.81 ) }
    dend_32 { pt3dadd( -17.1444, -13.9357, 14.256, 1.33 ) }
    dend_32 { pt3dadd( -17.7598, -14.5871, 13.9521, 0.96 ) }
    dend_32 { pt3dadd( -18.027, -14.8076, 13.8505, 1.69 ) }
    dend_32 { pt3dadd( -18.3321, -15.0292, 13.7531, 1.69 ) }
    dend_32 { pt3dadd( -19.2768, -15.7581, 13.4773, 0.37 ) }
    dend_32 { pt3dadd( -20.0949, -16.4673, 13.265, 0.37 ) }
    dend_32 { pt3dadd( -21.3348, -17.7007, 12.9316, 0.37 ) }
    dend_32 { pt3dadd( -21.8746, -18.2861, 12.7772, 0.37 ) }
    dend_32 { pt3dadd( -22.4003, -18.9738, 12.6071, 0.37 ) }
    dend_32 { pt3dadd( -22.8843, -19.8353, 12.3996, 0.74 ) }
    dend_32 { pt3dadd( -23.2257, -20.7541, 12.1866, 0.37 ) }
    dend_32 { pt3dadd( -23.367, -21.3422, 12.0523, 0.29 ) }
    dend_32 { pt3dadd( -23.5369, -22.2629, 11.8591, 0.29 ) }
    dend_32 { pt3dadd( -23.8278, -23.4087, 11.6352, 0.29 ) }
    dend_32 { pt3dadd( -24.1059, -24.1784, 11.4887, 1.92 ) }
    dend_32 { pt3dadd( -24.3233, -24.6306, 11.4015, 2.14 ) }
    dend_32 { pt3dadd( -24.5619, -25.0555, 11.3192, 2.14 ) }
    dend_32 { pt3dadd( -25.115, -26.0179, 11.135, 0.22 ) }
    dend_32 { pt3dadd( -25.4935, -26.6833, 11.0102, 0.22 ) }
    dend_32 { pt3dadd( -25.701, -27.0061, 10.9511, 0.59 ) }
    dend_32 { pt3dadd( -25.9039, -27.3361, 10.8776, 0.66 ) }
    dend_32 { pt3dadd( -26.303, -28.0324, 10.6774, 0.22 ) }
    dend_32 { pt3dadd( -26.6849, -28.7452, 10.4218, 0.22 ) }
    dend_32 { pt3dadd( -27.0642, -29.4972, 10.1053, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( -27.2101, -29.7885, 9.97998, 0.74 ) }
    dend_32 { pt3dadd( -27.684, -30.6483, 9.59225, 0.29 ) }
    dend_32 { pt3dadd( -27.9485, -31.07, 9.39303, 0.29 ) }
    dend_32 { pt3dadd( -28.3398, -31.5891, 9.14059, 0.29 ) }
    dend_32 { pt3dadd( -28.6023, -31.8936, 8.99121, 0.66 ) }
    dend_32 { pt3dadd( -29.3104, -32.7317, 8.6061, 0.22 ) }
    dend_32 { pt3dadd( -29.6146, -33.1166, 8.44949, 0.96 ) }
    dend_32 { pt3dadd( -29.9267, -33.5503, 8.32387, 0.88 ) }
    dend_32 { pt3dadd( -30.3545, -34.2092, 8.17573, 0.22 ) }
    dend_32 { pt3dadd( -30.6387, -34.6899, 8.08605, 0.22 ) }
    dend_32 { pt3dadd( -31.0313, -35.4573, 7.95971, 0.44 ) }
    dend_32 { pt3dadd( -31.1373, -35.7113, 7.92227, 0.44 ) }
    dend_32 { pt3dadd( -31.4322, -36.6132, 7.82698, 0.29 ) }
    dend_32 { pt3dadd( -31.5757, -37.174, 7.78145, 0.88 ) }
    dend_32 { pt3dadd( -31.65, -37.5264, 7.7575, 1.18 ) }
    dend_32 { pt3dadd( -31.9029, -38.4395, 7.70411, 0.37 ) }
    dend_32 { pt3dadd( -32.1459, -39.0682, 7.69324, 0.37 ) }
    dend_32 { pt3dadd( -32.4972, -39.8364, 7.67976, 1.62 ) }
    dend_32 { pt3dadd( -32.6503, -40.1608, 7.66228, 1.99 ) }
    dend_32 { pt3dadd( -33.225, -41.283, 7.58375, 0.29 ) }
    dend_32 { pt3dadd( -33.7914, -42.2102, 7.50406, 0.29 ) }
    dend_32 { pt3dadd( -34.648, -43.356, 7.37763, 0.37 ) }
    dend_32 { pt3dadd( -35.3737, -44.2618, 7.25132, 0.37 ) }
    dend_32 { pt3dadd( -35.9055, -44.9397, 7.12714, 0.37 ) }
    dend_32 { pt3dadd( -36.4252, -45.6713, 6.96962, 0.29 ) }
    dend_32 { pt3dadd( -36.9956, -46.6016, 6.76985, 0.29 ) }
    dend_32 { pt3dadd( -37.3937, -47.5095, 6.60521, 0.29 ) }
    dend_32 { pt3dadd( -37.6199, -48.1649, 6.5083, 0.37 ) }
    dend_32 { pt3dadd( -37.8259, -48.8168, 6.46086, 0.37 ) }
    dend_32 { pt3dadd( -38.1204, -49.7294, 6.45058, 0.37 ) }
    dend_32 { pt3dadd( -38.3882, -50.5559, 6.43858, 0.37 ) }
    dend_32 { pt3dadd( -38.7711, -51.6614, 6.41813, 0.37 ) }
    dend_32 { pt3dadd( -39.2613, -52.846, 6.47876, 0.44 ) }
    dend_32 { pt3dadd( -39.5786, -53.4237, 6.5436, 0.59 ) }
    dend_32 { pt3dadd( -40.1473, -54.2711, 6.6726, 0.59 ) }
    dend_32 { pt3dadd( -40.7385, -55.0405, 6.82428, 0.37 ) }
    dend_32 { pt3dadd( -41.1482, -55.5398, 6.92357, 0.37 ) }
    dend_32 { pt3dadd( -42.1026, -56.6891, 7.17212, 0.74 ) }
    dend_32 { pt3dadd( -42.4594, -57.1545, 7.27992, 0.74 ) }
    dend_32 { pt3dadd( -42.9031, -57.7965, 7.41294, 0.37 ) }
    dend_32 { pt3dadd( -43.2283, -58.3168, 7.4941, 1.47 ) }
    dend_32 { pt3dadd( -43.3948, -58.6042, 7.5213, 1.47 ) }
    dend_32 { pt3dadd( -44.1198, -59.8677, 7.46149, 0.29 ) }
    dend_32 { pt3dadd( -44.4645, -60.4711, 7.3515, 0.59 ) }
    dend_32 { pt3dadd( -44.811, -61.1101, 7.20126, 0.59 ) }
    dend_32 { pt3dadd( -45.2721, -62.0122, 6.92195, 3.17 ) }
    dend_32 { pt3dadd( -45.5781, -62.6812, 6.65536, 3.54 ) }
    dend_32 { pt3dadd( -46.1294, -64.1246, 5.97522, 0.59 ) }
    dend_32 { pt3dadd( -46.3127, -64.7553, 5.61818, 0.44 ) }
    dend_32 { pt3dadd( -46.4579, -65.4656, 5.18036, 0.44 ) }
    dend_32 { pt3dadd( -46.5806, -66.2216, 4.68495, 0.74 ) }
    dend_32 { pt3dadd( -46.6911, -66.931, 4.18449, 0.52 ) }
    dend_32 { pt3dadd( -46.8267, -67.7707, 3.59786, 0.52 ) }
    dend_32 { pt3dadd( -46.9217, -68.3386, 3.2186, 0.74 ) }
    dend_32 { pt3dadd( -47.0377, -68.818, 2.93083, 0.74 ) }
    dend_32 { pt3dadd( -47.3101, -69.6011, 2.51197, 0.37 ) }
    dend_32 { pt3dadd( -47.5765, -70.184, 2.25201, 0.37 ) }
    dend_32 { pt3dadd( -48.203, -71.3778, 1.77702, 0.37 ) }
    dend_32 { pt3dadd( -48.4175, -71.7891, 1.61847, 0.37 ) }
    dend_32 { pt3dadd( -48.9589, -72.9245, 1.2004, 0.37 ) }
    dend_32 { pt3dadd( -49.2036, -73.5092, 0.990555, 0.37 ) }
    dend_32 { pt3dadd( -49.583, -74.5239, 0.645443, 0.37 ) }
    dend_32 { pt3dadd( -49.7553, -74.9766, 0.518241, 1.03 ) }
    dend_32 { pt3dadd( -50.1405, -75.9839, 0.280685, 0.74 ) }
    dend_32 { pt3dadd( -50.3735, -76.6538, 0.137646, 1.18 ) }
    dend_32 { pt3dadd( -50.6415, -77.5408, -0.033895, 0.37 ) }
    dend_32 { pt3dadd( -50.8829, -78.4301, -0.210537, 0.37 ) }
    dend_32 { pt3dadd( -51.3184, -80.0678, -0.557924, 0.29 ) }
    dend_32 { pt3dadd( -51.5508, -80.8391, -0.727104, 0.29 ) }
    dend_32 { pt3dadd( -51.898, -81.856, -0.95371, 0.37 ) }
    dend_32 { pt3dadd( -52.0841, -82.3883, -1.08271, 0.66 ) }
    dend_32 { pt3dadd( -52.4147, -83.3109, -1.333, 0.44 ) }
    dend_32 { pt3dadd( -52.8237, -84.3813, -1.66767, 0.44 ) }
    dend_32 { pt3dadd( -53.1295, -85.0817, -1.93843, 0.44 ) }
    dend_32 { pt3dadd( -53.4929, -85.7373, -2.24019, 0.29 ) }
    dend_32 { pt3dadd( -53.7343, -86.131, -2.42753, 0.29 ) }
    dend_32 { pt3dadd( -54.0885, -86.6823, -2.70584, 0.29 ) }
    dend_32 { pt3dadd( -54.5121, -87.3381, -3.05821, 1.47 ) }
    dend_32 { pt3dadd( -54.8019, -87.7678, -3.32231, 1.84 ) }
    dend_32 { pt3dadd( -55.5838, -88.8883, -4.14142, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -30.8827, -59.2967, -1.5228, 0.52 ) }
    dend_30 { pt3dadd( -31.7516, -60.8432, -1.66011, 0.52 ) }
    dend_30 { pt3dadd( -32.4494, -61.8651, -1.60973, 0.52 ) }
    dend_30 { pt3dadd( -33.6496, -63.3894, -1.41701, 0.52 ) }
    dend_30 { pt3dadd( -34.8743, -64.9613, -1.32287, 0.52 ) }
    dend_30 { pt3dadd( -35.9757, -66.387, -1.37634, 0.52 ) }
    dend_30 { pt3dadd( -36.8754, -67.5459, -1.55394, 0.74 ) }
    dend_30 { pt3dadd( -37.835, -68.6722, -1.78441, 0.96 ) }
    dend_30 { pt3dadd( -38.5701, -69.4456, -1.95112, 0.44 ) }
    dend_30 { pt3dadd( -40.2164, -70.9052, -2.27681, 0.44 ) }
    dend_30 { pt3dadd( -41.218, -71.8433, -2.70034, 0.66 ) }
    dend_30 { pt3dadd( -41.856, -72.6792, -3.63586, 1.18 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -30.8827, -59.2967, -1.5228, 0.44 ) }
    dend_27 { pt3dadd( -31.3511, -60.6238, -2.66892, 0.44 ) }
    dend_27 { pt3dadd( -31.6837, -61.9204, -3.47831, 0.44 ) }
    dend_27 { pt3dadd( -31.9224, -63.0971, -4.008, 1.03 ) }
    dend_27 { pt3dadd( -32.0241, -63.6142, -4.18758, 1.4 ) }
    dend_27 { pt3dadd( -32.2007, -64.377, -4.49117, 1.4 ) }
    dend_27 { pt3dadd( -32.4626, -65.3711, -4.94464, 0.88 ) }
    dend_27 { pt3dadd( -32.7743, -66.6561, -5.56621, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_27 { pt3dadd( -33.0618, -67.6981, -6.11179, 0.44 ) }
    dend_27 { pt3dadd( -33.362, -68.6616, -6.6868, 0.44 ) }
    dend_27 { pt3dadd( -33.9349, -70.4347, -7.84904, 0.66 ) }
    dend_27 { pt3dadd( -34.2315, -71.2763, -8.43182, 0.96 ) }
    dend_27 { pt3dadd( -34.6707, -72.3532, -9.19619, 0.44 ) }
    dend_27 { pt3dadd( -35.0516, -73.1744, -9.78664, 0.44 ) }
    dend_27 { pt3dadd( -35.5632, -74.1697, -10.4959, 0.44 ) }
    dend_27 { pt3dadd( -36.0371, -74.9864, -11.0444, 0.52 ) }
    dend_27 { pt3dadd( -36.5909, -75.7961, -11.5351, 0.52 ) }
    dend_27 { pt3dadd( -37.5953, -76.9656, -12.2584, 1.18 ) }
    dend_27 { pt3dadd( -38.2097, -77.5177, -12.6389, 1.92 ) }
    dend_27 { pt3dadd( -39.1989, -78.1872, -13.202, 2.36 ) }
    dend_27 { pt3dadd( -39.8883, -78.5601, -13.593, 2.36 ) }
    dend_27 { pt3dadd( -41.0076, -79.1025, -14.2425, 1.18 ) }
    dend_27 { pt3dadd( -41.8006, -79.5119, -14.7238, 0.52 ) }
    dend_27 { pt3dadd( -42.5001, -79.9276, -15.1825, 0.52 ) }
    dend_27 { pt3dadd( -43.4228, -80.614, -15.8163, 0.52 ) }
    dend_27 { pt3dadd( -43.9044, -81.1265, -16.1728, 0.66 ) }
    dend_27 { pt3dadd( -44.4191, -81.9682, -16.6493, 0.66 ) }
    dend_27 { pt3dadd( -44.8688, -83.0967, -17.1548, 0.96 ) }
    dend_27 { pt3dadd( -45.0328, -83.6398, -17.379, 1.47 ) }
    dend_27 { pt3dadd( -45.2349, -84.3479, -17.6767, 1.47 ) }
    dend_27 { pt3dadd( -45.5901, -85.4259, -18.147, 0.44 ) }
    dend_27 { pt3dadd( -45.9532, -86.2472, -18.5214, 0.44 ) }
    dend_27 { pt3dadd( -46.6347, -87.3874, -19.0852, 0.44 ) }
    dend_27 { pt3dadd( -47.4897, -88.4803, -19.6543, 1.84 ) }
    dend_27 { pt3dadd( -48.3552, -89.4628, -20.0809, 1.84 ) }
    dend_27 { pt3dadd( -49.3129, -90.501, -20.3281, 1.77 ) }
    dend_27 { pt3dadd( -50.1044, -91.3641, -20.3762, 1.33 ) }
    dend_27 { pt3dadd( -50.9758, -92.3994, -20.2245, 0.66 ) }
    dend_27 { pt3dadd( -51.8791, -93.6142, -19.8901, 0.37 ) }
    dend_27 { pt3dadd( -52.8514, -95.0868, -19.3997, 0.59 ) }
    dend_27 { pt3dadd( -54.3425, -97.621, -18.5572, 0.52 ) }
    dend_27 { pt3dadd( -54.6634, -98.2196, -18.3914, 0.52 ) }
    dend_27 { pt3dadd( -55.1972, -99.2081, -18.2103, 0.52 ) }
    dend_27 { pt3dadd( -56.0523, -100.62, -18.0712, 0.81 ) }
    dend_27 { pt3dadd( -56.9186, -101.743, -18.0851, 0.81 ) }
    dend_27 { pt3dadd( -57.5564, -102.433, -18.1713, 0.59 ) }
    dend_27 { pt3dadd( -58.2517, -103.124, -18.2855, 0.44 ) }
    dend_27 { pt3dadd( -58.9951, -103.865, -18.3301, 0.44 ) }
    dend_27 { pt3dadd( -60.0294, -104.955, -18.2978, 0.37 ) }
    dend_27 { pt3dadd( -60.7366, -105.787, -18.1836, 0.59 ) }
    dend_27 { pt3dadd( -61.5846, -106.84, -18.0438, 0.37 ) }
    dend_27 { pt3dadd( -62.2843, -107.717, -17.9746, 0.37 ) }
    dend_27 { pt3dadd( -62.9897, -108.579, -17.9745, 0.44 ) }
    dend_27 { pt3dadd( -63.4745, -109.168, -18.0262, 0.44 ) }
    dend_27 { pt3dadd( -64.3157, -110.161, -18.2094, 0.37 ) }
    dend_27 { pt3dadd( -65.5049, -111.532, -18.5208, 0.37 ) }
    dend_27 { pt3dadd( -66.0737, -112.157, -18.6753, 1.62 ) }
    dend_27 { pt3dadd( -66.7298, -112.888, -18.8428, 2.06 ) }
    dend_27 { pt3dadd( -67.0762, -113.306, -18.9289, 2.06 ) }
    dend_27 { pt3dadd( -67.8749, -114.453, -19.1563, 0.59 ) }
    dend_27 { pt3dadd( -68.5869, -115.837, -19.4428, 0.44 ) }
    dend_27 { pt3dadd( -68.8006, -116.606, -19.6255, 1.18 ) }
    dend_27 { pt3dadd( -68.8705, -117.311, -19.8363, 1.47 ) }
    dend_27 { pt3dadd( -68.8428, -117.978, -20.0808, 1.4 ) }
    dend_27 { pt3dadd( -68.6965, -119.101, -20.5425, 0.66 ) }
    dend_27 { pt3dadd( -68.5473, -119.821, -20.8576, 0.52 ) }
    dend_27 { pt3dadd( -68.3092, -120.806, -21.2776, 0.52 ) }
    dend_27 { pt3dadd( -68.1042, -121.741, -21.6062, 0.59 ) }
    dend_27 { pt3dadd( -67.9098, -122.799, -21.8921, 0.52 ) }
    dend_27 { pt3dadd( -67.7308, -124.111, -22.1544, 0.52 ) }
    dend_27 { pt3dadd( -67.6257, -125.188, -22.2742, 0.88 ) }
    dend_27 { pt3dadd( -67.5692, -125.982, -22.3058, 1.11 ) }
    dend_27 { pt3dadd( -67.4917, -127.284, -22.303, 1.47 ) }
    dend_27 { pt3dadd( -67.4517, -128.17, -22.3054, 0.66 ) }
    dend_27 { pt3dadd( -67.4337, -129.265, -22.3569, 0.44 ) }
    dend_27 { pt3dadd( -67.4698, -130.778, -22.5534, 0.37 ) }
    dend_27 { pt3dadd( -67.5416, -131.73, -22.7541, 0.37 ) }
    dend_27 { pt3dadd( -67.6666, -132.713, -23.0518, 0.88 ) }
    dend_27 { pt3dadd( -67.8697, -133.793, -23.4682, 0.81 ) }
    dend_27 { pt3dadd( -68.3084, -135.367, -24.1198, 0.52 ) }
    dend_27 { pt3dadd( -68.6895, -136.381, -24.5286, 1.4 ) }
    dend_27 { pt3dadd( -69.0451, -137.138, -24.8191, 2.14 ) }
    dend_27 { pt3dadd( -69.3354, -137.673, -24.9972, 2.43 ) }
    dend_27 { pt3dadd( -69.9527, -138.699, -25.2688, 2.14 ) }
    dend_27 { pt3dadd( -70.9491, -140.244, -25.5828, 0.74 ) }
    dend_27 { pt3dadd( -71.8232, -141.531, -25.7894, 0.59 ) }
    dend_27 { pt3dadd( -72.3573, -142.36, -25.9031, 1.11 ) }
    dend_27 { pt3dadd( -72.619, -142.809, -25.962, 1.33 ) }
    dend_27 { pt3dadd( -73.0161, -143.59, -26.0802, 1.33 ) }
    dend_27 { pt3dadd( -73.507, -144.77, -26.2873, 0.52 ) }
    dend_27 { pt3dadd( -73.8054, -145.718, -26.4861, 0.37 ) }
    dend_27 { pt3dadd( -74.0956, -146.844, -26.7678, 0.37 ) }
    dend_27 { pt3dadd( -74.219, -147.402, -26.8913, 0.37 ) }
    dend_27 { pt3dadd( -74.4338, -148.43, -27.0922, 0.37 ) }
    dend_27 { pt3dadd( -74.7536, -149.865, -27.336, 1.03 ) }
    dend_27 { pt3dadd( -74.9091, -150.459, -27.4197, 1.4 ) }
    dend_27 { pt3dadd( -75.1802, -151.323, -27.54, 1.4 ) }
    dend_27 { pt3dadd( -75.6033, -152.568, -27.7105, 0.37 ) }
    dend_27 { pt3dadd( -75.796, -153.209, -27.8089, 0.37 ) }
    dend_27 { pt3dadd( -75.9352, -153.885, -27.906, 0.96 ) }
    dend_27 { pt3dadd( -75.98, -154.394, -27.995, 0.96 ) }
    dend_27 { pt3dadd( -75.9728, -155.647, -28.1901, 0.29 ) }
    dend_27 { pt3dadd( -75.877, -156.594, -28.3007, 0.29 ) }
    dend_27 { pt3dadd( -75.7167, -157.509, -28.383, 0.59 ) }
    dend_27 { pt3dadd( -75.4648, -158.595, -28.4285, 0.37 ) }
    dend_27 { pt3dadd( -75.2384, -159.47, -28.4304, 0.66 ) }
    dend_27 { pt3dadd( -75.0492, -160.162, -28.4063, 0.96 ) }
    dend_27 { pt3dadd( -74.8497, -160.925, -28.3309, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_27 { pt3dadd( -74.7033, -161.622, -28.2431, 0.37 ) }
    dend_27 { pt3dadd( -74.3653, -163.272, -28.0035, 0.37 ) }
    dend_27 { pt3dadd( -74.2603, -163.785, -27.9436, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_17 (entry count 3/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.36671, 68.6711, -26.2612, 0.52 ) }
    dend_20 { pt3dadd( 7.43161, 69.6142, -31.2698, 0.52 ) }
    dend_20 { pt3dadd( 7.77692, 69.8224, -32.0756, 0.74 ) }
    dend_20 { pt3dadd( 8.82978, 70.6076, -34.3184, 0.52 ) }
    dend_20 { pt3dadd( 9.24187, 70.9702, -35.1046, 0.29 ) }
    dend_20 { pt3dadd( 9.6443, 71.3574, -35.7867, 0.29 ) }
    dend_20 { pt3dadd( 10.0051, 71.7207, -36.3314, 0.88 ) }
    dend_20 { pt3dadd( 10.3111, 72.1621, -36.6448, 0.88 ) }
    dend_20 { pt3dadd( 10.763, 72.851, -37.114, 0.29 ) }
    dend_20 { pt3dadd( 11.1573, 73.4918, -37.4965, 0.81 ) }
    dend_20 { pt3dadd( 11.4802, 74.0144, -37.8343, 0.81 ) }
    dend_20 { pt3dadd( 12.0374, 74.9839, -38.4946, 0.22 ) }
    dend_20 { pt3dadd( 12.4415, 75.8806, -39.1255, 1.25 ) }
    dend_20 { pt3dadd( 12.6353, 76.5242, -39.5872, 1.55 ) }
    dend_20 { pt3dadd( 12.7742, 77.4013, -40.2197, 0.29 ) }
    dend_20 { pt3dadd( 12.7561, 77.8531, -40.5287, 0.22 ) }
    dend_20 { pt3dadd( 12.6527, 78.3871, -40.8624, 0.22 ) }
    dend_20 { pt3dadd( 12.425, 79.1308, -41.2854, 1.84 ) }
    dend_20 { pt3dadd( 12.1986, 79.7412, -41.6133, 2.14 ) }
    dend_20 { pt3dadd( 12.0066, 80.2046, -41.8682, 2.87 ) }
    dend_20 { pt3dadd( 11.287, 81.828, -42.7929, 0.44 ) }
    dend_20 { pt3dadd( 10.9828, 82.5052, -43.1356, 0.44 ) }
    dend_20 { pt3dadd( 10.597, 83.3696, -43.5217, 1.55 ) }
    dend_20 { pt3dadd( 10.4275, 83.7418, -43.6757, 2.28 ) }
    dend_20 { pt3dadd( 10.2843, 84.0533, -43.7912, 2.43 ) }
    dend_20 { pt3dadd( 10.0456, 84.5837, -43.971, 2.43 ) }
    dend_20 { pt3dadd( 9.45372, 85.9567, -44.3668, 0.29 ) }
    dend_20 { pt3dadd( 9.05989, 86.8313, -44.6103, 0.29 ) }
    dend_20 { pt3dadd( 8.77059, 87.4193, -44.7807, 0.59 ) }
    dend_20 { pt3dadd( 8.42373, 88.1022, -44.9936, 0.59 ) }
    dend_20 { pt3dadd( 8.13701, 88.6506, -45.1711, 0.37 ) }
    dend_20 { pt3dadd( 7.82882, 89.2379, -45.3771, 0.37 ) }
    dend_20 { pt3dadd( 7.52722, 89.8076, -45.6662, 0.37 ) }
    dend_20 { pt3dadd( 7.28464, 90.3166, -45.9295, 0.37 ) }
    dend_20 { pt3dadd( 7.04717, 90.9435, -46.2405, 0.66 ) }
    dend_20 { pt3dadd( 6.94155, 91.2857, -46.4024, 0.88 ) }
    dend_20 { pt3dadd( 6.8453, 91.6458, -46.5601, 0.88 ) }
    dend_20 { pt3dadd( 6.55979, 92.9189, -47.0716, 0.29 ) }
    dend_20 { pt3dadd( 6.44551, 93.587, -47.3202, 0.29 ) }
    dend_20 { pt3dadd( 6.24237, 95.2568, -47.8923, 0.29 ) }
    dend_20 { pt3dadd( 6.15327, 96.1949, -48.1961, 0.52 ) }
    dend_20 { pt3dadd( 6.08772, 96.999, -48.4309, 0.59 ) }
    dend_20 { pt3dadd( 6.06844, 97.3111, -48.5166, 0.59 ) }
    dend_20 { pt3dadd( 6.04441, 97.9425, -48.6687, 0.29 ) }
    dend_20 { pt3dadd( 6.00462, 99.0939, -49.012, 1.77 ) }
    dend_20 { pt3dadd( 5.99424, 99.5236, -49.1652, 3.09 ) }
    dend_20 { pt3dadd( 5.9566, 100.784, -49.66, 0.29 ) }
    dend_20 { pt3dadd( 5.91388, 101.604, -49.9991, 0.59 ) }
    dend_20 { pt3dadd( 5.85575, 102.172, -50.2414, 0.74 ) }
    dend_20 { pt3dadd( 5.71045, 103.138, -50.6773, 0.22 ) }
    dend_20 { pt3dadd( 5.58756, 103.771, -50.9987, 0.22 ) }
    dend_20 { pt3dadd( 5.44319, 104.366, -51.3844, 0.22 ) }
    dend_20 { pt3dadd( 5.33305, 104.725, -51.6853, 0.22 ) }
    dend_20 { pt3dadd( 5.14953, 105.259, -52.2155, 1.11 ) }
    dend_20 { pt3dadd( 5.03399, 105.579, -52.5815, 1.4 ) }
    dend_20 { pt3dadd( 4.9611, 105.794, -52.8492, 1.4 ) }
    dend_20 { pt3dadd( 4.66272, 106.845, -54.2708, 0.22 ) }
    dend_20 { pt3dadd( 4.54992, 107.349, -54.968, 0.22 ) }
    dend_20 { pt3dadd( 4.49045, 107.858, -55.6483, 0.74 ) }
    dend_20 { pt3dadd( 4.47986, 108.193, -56.0677, 0.74 ) }
    dend_20 { pt3dadd( 4.50263, 109.144, -57.1104, 0.29 ) }
    dend_20 { pt3dadd( 4.57758, 110.092, -58.022, 0.59 ) }
    dend_20 { pt3dadd( 4.6285, 110.454, -58.3147, 0.22 ) }
    dend_20 { pt3dadd( 4.82471, 111.527, -59.1193, 0.22 ) }
    dend_20 { pt3dadd( 4.89369, 111.894, -59.3727, 0.22 ) }
    dend_20 { pt3dadd( 5.04756, 112.651, -59.8472, 1.47 ) }
    dend_20 { pt3dadd( 5.09998, 112.941, -60.0115, 1.77 ) }
    dend_20 { pt3dadd( 5.17428, 113.492, -60.2965, 1.77 ) }
    dend_20 { pt3dadd( 5.28397, 114.714, -60.9119, 0.29 ) }
    dend_20 { pt3dadd( 5.31945, 115.448, -61.2799, 0.29 ) }
    dend_20 { pt3dadd( 5.3487, 116.184, -61.6842, 0.29 ) }
    dend_20 { pt3dadd( 5.36731, 116.749, -62.0035, 0.29 ) }
    dend_20 { pt3dadd( 5.41619, 117.707, -62.527, 0.66 ) }
    dend_20 { pt3dadd( 5.45065, 118.143, -62.7515, 0.66 ) }
    dend_20 { pt3dadd( 5.54026, 119.008, -63.1602, 0.66 ) }
    dend_20 { pt3dadd( 5.63806, 119.728, -63.4896, 0.37 ) }
    dend_20 { pt3dadd( 5.75273, 120.417, -63.7691, 0.29 ) }
    dend_20 { pt3dadd( 5.99004, 121.664, -64.2111, 2.28 ) }
    dend_20 { pt3dadd( 6.10286, 122.239, -64.3883, 2.65 ) }
    dend_20 { pt3dadd( 6.34523, 123.527, -64.7153, 0.29 ) }
    dend_20 { pt3dadd( 6.47915, 124.291, -64.8629, 0.52 ) }
    dend_20 { pt3dadd( 6.73738, 125.852, -65.1031, 0.22 ) }
    dend_20 { pt3dadd( 6.80442, 126.258, -65.1577, 0.44 ) }
    dend_20 { pt3dadd( 6.89938, 126.86, -65.2249, 0.44 ) }
    dend_20 { pt3dadd( 7.07578, 127.945, -65.3365, 0.22 ) }
    dend_20 { pt3dadd( 7.27575, 129.092, -65.4397, 0.22 ) }
    dend_20 { pt3dadd( 7.42413, 129.91, -65.5076, 0.22 ) }
    dend_20 { pt3dadd( 7.76249, 131.698, -65.643, 0.22 ) }
    dend_20 { pt3dadd( 7.95921, 132.67, -65.7104, 0.88 ) }
    dend_20 { pt3dadd( 8.03887, 133.054, -65.7348, 1.25 ) }
    dend_20 { pt3dadd( 8.09484, 133.316, -65.7504, 1.25 ) }
    dend_20 { pt3dadd( 8.27537, 134.199, -65.8073, 0.15 ) }
    dend_20 { pt3dadd( 8.44389, 135.067, -65.8755, 0.15 ) }
    dend_20 { pt3dadd( 8.63186, 136.043, -66.037, 0.15 ) }
    dend_20 { pt3dadd( 8.75798, 136.692, -66.1928, 0.74 ) }
    dend_20 { pt3dadd( 9.0508, 138.166, -66.6223, 0.22 ) }
    dend_20 { pt3dadd( 9.19786, 138.862, -66.8558, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_20 { pt3dadd( 9.29281, 139.272, -67.0169, 0.88 ) }
    dend_20 { pt3dadd( 9.87594, 141.568, -68.0494, 0.22 ) }
    dend_20 { pt3dadd( 10.0514, 142.209, -68.3754, 1.11 ) }
    dend_20 { pt3dadd( 10.2476, 142.877, -68.7509, 1.47 ) }
    dend_20 { pt3dadd( 10.5222, 143.766, -69.3163, 0.22 ) }
    dend_20 { pt3dadd( 10.712, 144.366, -69.7139, 0.96 ) }
    dend_20 { pt3dadd( 10.8531, 144.837, -70.0132, 0.96 ) }
    dend_20 { pt3dadd( 11.0949, 145.666, -70.5187, 0.29 ) }
    dend_20 { pt3dadd( 11.2252, 146.15, -70.8013, 0.66 ) }
    dend_20 { pt3dadd( 11.4009, 146.843, -71.1949, 0.66 ) }
    dend_20 { pt3dadd( 11.8685, 148.612, -72.251, 0.22 ) }
    dend_20 { pt3dadd( 12.189, 149.748, -72.93, 0.22 ) }
    dend_20 { pt3dadd( 12.4608, 150.612, -73.4521, 0.22 ) }
    dend_20 { pt3dadd( 12.694, 151.251, -73.8577, 1.4 ) }
    dend_20 { pt3dadd( 12.9001, 151.756, -74.1979, 1.62 ) }
    dend_20 { pt3dadd( 13.6345, 153.326, -75.3756, 0.22 ) }
    dend_20 { pt3dadd( 13.9458, 153.798, -75.9105, 0.44 ) }
    dend_20 { pt3dadd( 14.3202, 154.272, -76.5437, 0.22 ) }
    dend_20 { pt3dadd( 14.7892, 154.826, -77.3244, 0.88 ) }
    dend_20 { pt3dadd( 15.0962, 155.188, -77.8411, 1.4 ) }
    dend_20 { pt3dadd( 15.5004, 155.689, -78.5419, 1.4 ) }
    dend_20 { pt3dadd( 16.7884, 157.549, -81.0455, 1.4 ) }
    dend_20 { pt3dadd( 17.3013, 158.472, -82.2313, 0.22 ) }
    dend_20 { pt3dadd( 17.5918, 159.141, -83.0314, 0.22 ) }
    dend_20 { pt3dadd( 17.7376, 159.619, -83.5442, 1.18 ) }
    dend_20 { pt3dadd( 17.8533, 160.211, -84.094, 1.18 ) }
    dend_20 { pt3dadd( 17.9649, 161.263, -84.9354, 0.22 ) }
    dend_20 { pt3dadd( 17.9492, 162.003, -85.411, 0.96 ) }
    dend_20 { pt3dadd( 17.9276, 162.357, -85.6922, 0.96 ) }
    dend_20 { pt3dadd( 17.8366, 163.29, -86.4508, 0.59 ) }
    dend_20 { pt3dadd( 17.791, 163.838, -86.9013, 0.81 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 5.36671, 68.6711, -26.2612, 0.81 ) }
    dend_19 { pt3dadd( 3.24407, 70.368, -24.3128, 0.81 ) }
    dend_19 { pt3dadd( 2.54814, 70.981, -23.6992, 0.44 ) }
    dend_19 { pt3dadd( 1.81822, 71.6586, -23.1281, 0.44 ) }
    dend_19 { pt3dadd( 1.00408, 72.4445, -22.5643, 0.44 ) }
    dend_19 { pt3dadd( -0.442333, 73.9529, -21.6679, 0.81 ) }
    dend_19 { pt3dadd( -0.956369, 74.53, -21.3544, 0.81 ) }
    dend_19 { pt3dadd( -1.4744, 75.2459, -21.0868, 0.52 ) }
    dend_19 { pt3dadd( -1.9523, 76.0461, -20.7664, 0.52 ) }
    dend_19 { pt3dadd( -2.1724, 76.5361, -20.564, 0.52 ) }
    dend_19 { pt3dadd( -2.45684, 77.4599, -20.2039, 0.66 ) }
    dend_19 { pt3dadd( -2.69993, 78.5723, -19.8398, 0.52 ) }
    dend_19 { pt3dadd( -2.93932, 79.8252, -19.3658, 0.44 ) }
    dend_19 { pt3dadd( -3.04609, 80.6528, -19.0387, 0.29 ) }
    dend_19 { pt3dadd( -3.12822, 81.5596, -18.6979, 0.29 ) }
    dend_19 { pt3dadd( -3.16437, 82.2304, -18.5218, 0.88 ) }
    dend_19 { pt3dadd( -3.17596, 82.6443, -18.4788, 1.25 ) }
    dend_19 { pt3dadd( -3.18424, 83.1562, -18.5187, 1.25 ) }
    dend_19 { pt3dadd( -3.19515, 83.8968, -18.6747, 1.03 ) }
    dend_19 { pt3dadd( -3.25004, 84.7035, -18.8182, 0.66 ) }
    dend_19 { pt3dadd( -3.34349, 85.8008, -18.9886, 0.59 ) }
    dend_19 { pt3dadd( -3.44535, 86.4693, -19.0309, 0.59 ) }
    dend_19 { pt3dadd( -3.71155, 87.667, -18.9701, 1.18 ) }
    dend_19 { pt3dadd( -3.96803, 88.6084, -18.8313, 1.18 ) }
    dend_19 { pt3dadd( -4.4987, 90.1739, -18.4011, 0.81 ) }
    dend_19 { pt3dadd( -4.757, 90.8161, -18.1599, 0.52 ) }
    dend_19 { pt3dadd( -5.44042, 92.2689, -17.5186, 0.52 ) }
    dend_19 { pt3dadd( -5.9176, 93.1963, -17.103, 0.81 ) }
    dend_19 { pt3dadd( -6.30989, 93.9444, -16.8, 0.44 ) }
    dend_19 { pt3dadd( -6.92649, 95.1945, -16.3965, 1.25 ) }
    dend_19 { pt3dadd( -7.23469, 95.9147, -16.2612, 1.92 ) }
    dend_19 { pt3dadd( -7.45662, 96.4898, -16.1882, 2.14 ) }
    dend_19 { pt3dadd( -7.80322, 97.5445, -16.1845, 1.03 ) }
    dend_19 { pt3dadd( -8.24301, 99.0193, -16.3026, 0.66 ) }
    dend_19 { pt3dadd( -8.51115, 99.9745, -16.4513, 0.74 ) }
    dend_19 { pt3dadd( -8.75223, 100.949, -16.6958, 0.74 ) }
    dend_19 { pt3dadd( -8.94746, 101.822, -16.9619, 0.59 ) }
    dend_19 { pt3dadd( -9.10484, 102.652, -17.2407, 0.59 ) }
    dend_19 { pt3dadd( -9.18097, 103.265, -17.4835, 0.81 ) }
    dend_19 { pt3dadd( -9.22375, 103.97, -17.8029, 0.81 ) }
    dend_19 { pt3dadd( -9.19739, 104.937, -18.2696, 0.52 ) }
    dend_19 { pt3dadd( -9.0779, 105.988, -18.7877, 0.52 ) }
    dend_19 { pt3dadd( -8.91175, 107.186, -19.3976, 0.52 ) }
    dend_19 { pt3dadd( -8.75047, 108.27, -19.9051, 1.03 ) }
    dend_19 { pt3dadd( -8.6709, 108.743, -20.1087, 1.03 ) }
    dend_19 { pt3dadd( -8.50414, 109.735, -20.4819, 0.29 ) }
    dend_19 { pt3dadd( -8.39929, 110.46, -20.7085, 0.29 ) }
    dend_19 { pt3dadd( -8.3091, 111.518, -20.9898, 0.29 ) }
    dend_19 { pt3dadd( -8.32396, 112.386, -21.1747, 0.37 ) }
    dend_19 { pt3dadd( -8.42529, 113.293, -21.3337, 0.37 ) }
    dend_19 { pt3dadd( -8.54495, 113.988, -21.4597, 0.52 ) }
    dend_19 { pt3dadd( -8.74977, 114.822, -21.6261, 0.74 ) }
    dend_19 { pt3dadd( -8.87134, 115.32, -21.7259, 0.74 ) }
    dend_19 { pt3dadd( -9.01562, 116.078, -21.8689, 0.29 ) }
    dend_19 { pt3dadd( -9.10551, 116.54, -21.9611, 0.52 ) }
    dend_19 { pt3dadd( -9.18028, 116.975, -22.0425, 0.52 ) }
    dend_19 { pt3dadd( -9.29618, 117.79, -22.1857, 0.29 ) }
    dend_19 { pt3dadd( -9.37155, 118.331, -22.2844, 0.29 ) }
    dend_19 { pt3dadd( -9.44523, 118.985, -22.3977, 0.37 ) }
    dend_19 { pt3dadd( -9.48778, 119.465, -22.4975, 0.37 ) }
    dend_19 { pt3dadd( -9.54331, 120.305, -22.6855, 0.29 ) }
    dend_19 { pt3dadd( -9.67758, 121.348, -22.8738, 0.29 ) }
    dend_19 { pt3dadd( -9.80058, 121.981, -22.9809, 0.29 ) }
    dend_19 { pt3dadd( -10.1099, 123.177, -23.1887, 0.29 ) }
    dend_19 { pt3dadd( -10.3901, 124.216, -23.3524, 1.55 ) }
    dend_19 { pt3dadd( -10.4832, 124.572, -23.3908, 2.14 ) }
    dend_19 { pt3dadd( -11.0749, 127.024, -23.5265, 0.22 ) }
    dend_19 { pt3dadd( -11.2742, 128.062, -23.5079, 0.52 ) }
    dend_19 { pt3dadd( -11.4148, 128.97, -23.4409, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_19 { pt3dadd( -11.5726, 130.173, -23.2946, 0.22 ) }
    dend_19 { pt3dadd( -11.6756, 131.227, -23.1268, 0.74 ) }
    dend_19 { pt3dadd( -11.6888, 131.562, -23.0737, 0.74 ) }
    dend_19 { pt3dadd( -11.611, 132.538, -22.9217, 0.29 ) }
    dend_19 { pt3dadd( -11.5509, 133.082, -22.8355, 0.59 ) }
    dend_19 { pt3dadd( -11.5022, 133.574, -22.7647, 0.59 ) }
    dend_19 { pt3dadd( -11.4666, 134.326, -22.7057, 0.22 ) }
    dend_19 { pt3dadd( -11.4447, 134.95, -22.7092, 0.22 ) }
    dend_19 { pt3dadd( -11.4253, 135.705, -22.7349, 0.96 ) }
    dend_19 { pt3dadd( -11.4024, 136.332, -22.7808, 0.96 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 10/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 5.36671, 68.6711, -26.2612, 0.44 ) }
    dend_18 { pt3dadd( 5.45096, 70.2076, -25.8811, 0.44 ) }
    dend_18 { pt3dadd( 5.47646, 71.407, -25.4969, 0.37 ) }
    dend_18 { pt3dadd( 5.49022, 72.6951, -25.0479, 0.37 ) }
    dend_18 { pt3dadd( 5.50778, 73.9725, -24.5932, 0.37 ) }
    dend_18 { pt3dadd( 5.50546, 74.7149, -24.3107, 0.37 ) }
    dend_18 { pt3dadd( 5.5058, 75.902, -23.8035, 0.96 ) }
    dend_18 { pt3dadd( 5.498, 76.5887, -23.4219, 1.25 ) }
    dend_18 { pt3dadd( 5.48999, 76.9563, -23.1877, 1.55 ) }
    dend_18 { pt3dadd( 5.47886, 77.5017, -22.8225, 1.55 ) }
    dend_18 { pt3dadd( 5.46415, 78.7852, -21.9941, 0.74 ) }
    dend_18 { pt3dadd( 5.41023, 80.3169, -21.0732, 0.52 ) }
    dend_18 { pt3dadd( 5.33737, 81.5193, -20.4242, 0.52 ) }
    dend_18 { pt3dadd( 5.26292, 82.7491, -19.7632, 0.52 ) }
    dend_18 { pt3dadd( 5.16438, 84.0719, -19.048, 0.52 ) }
    dend_18 { pt3dadd( 5.07808, 85.0319, -18.5401, 0.52 ) }
    dend_18 { pt3dadd( 4.97241, 86.1082, -18.0341, 0.52 ) }
    dend_18 { pt3dadd( 4.79794, 87.2262, -17.6206, 0.52 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 28/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.93626, 27.6216, -6.65008, 0.59 ) }
    dend_15 { pt3dadd( -7.43256, 27.8284, -7.3281, 0.59 ) }
    dend_15 { pt3dadd( -7.01574, 28.062, -7.85547, 1.11 ) }
    dend_15 { pt3dadd( -5.7319, 28.9972, -9.30491, 0.66 ) }
    dend_15 { pt3dadd( -4.96339, 29.7368, -10.0471, 0.52 ) }
    dend_15 { pt3dadd( -4.2805, 30.5557, -10.5864, 0.66 ) }
    dend_15 { pt3dadd( -3.99027, 30.9671, -10.7674, 0.88 ) }
    dend_15 { pt3dadd( -3.70508, 31.4611, -10.8692, 1.18 ) }
    dend_15 { pt3dadd( -3.26147, 32.3193, -10.8855, 0.96 ) }
    dend_15 { pt3dadd( -2.8264, 33.1954, -10.7853, 0.74 ) }
    dend_15 { pt3dadd( -2.47156, 33.8443, -10.6731, 0.74 ) }
    dend_15 { pt3dadd( -1.9789, 34.5452, -10.535, 1.18 ) }
    dend_15 { pt3dadd( -1.52046, 35.0603, -10.4419, 0.81 ) }
    dend_15 { pt3dadd( -0.648916, 35.9046, -10.3408, 0.44 ) }
    dend_15 { pt3dadd( -0.109723, 36.3556, -10.334, 0.59 ) }
    dend_15 { pt3dadd( 0.564112, 36.8716, -10.37, 0.59 ) }
    dend_15 { pt3dadd( 1.05586, 37.2517, -10.4041, 0.44 ) }
    dend_15 { pt3dadd( 1.28722, 37.4527, -10.4193, 0.44 ) }
    dend_15 { pt3dadd( 1.87628, 38.0874, -10.4628, 0.44 ) }
    dend_15 { pt3dadd( 2.27438, 38.6482, -10.4902, 0.81 ) }
    dend_15 { pt3dadd( 2.70467, 39.3336, -10.5661, 1.11 ) }
    dend_15 { pt3dadd( 3.04092, 39.8801, -10.6633, 1.11 ) }
    dend_15 { pt3dadd( 3.56537, 40.6433, -10.8498, 0.66 ) }
    dend_15 { pt3dadd( 4.08618, 41.3023, -11.0624, 0.59 ) }
    dend_15 { pt3dadd( 4.91705, 42.1486, -11.357, 0.44 ) }
    dend_15 { pt3dadd( 5.98798, 43.0025, -11.6542, 0.74 ) }
    dend_15 { pt3dadd( 6.56454, 43.3663, -11.7838, 1.03 ) }
    dend_15 { pt3dadd( 7.53496, 43.8172, -11.958, 1.77 ) }
    dend_15 { pt3dadd( 8.57802, 44.1551, -12.0877, 3.09 ) }
    dend_15 { pt3dadd( 10.0546, 44.483, -12.1763, 3.09 ) }
    dend_15 { pt3dadd( 11.9495, 44.7677, -12.1696, 0.37 ) }
    dend_15 { pt3dadd( 12.5447, 44.8353, -12.1226, 0.52 ) }
    dend_15 { pt3dadd( 13.661, 44.9376, -11.9873, 0.29 ) }
    dend_15 { pt3dadd( 14.1701, 44.9672, -11.9067, 0.88 ) }
    dend_15 { pt3dadd( 14.6419, 44.979, -11.822, 0.88 ) }
    dend_15 { pt3dadd( 15.3558, 45.0069, -11.7455, 0.29 ) }
    dend_15 { pt3dadd( 16.0284, 45.0713, -11.7255, 0.59 ) }
    dend_15 { pt3dadd( 16.5495, 45.1875, -11.706, 0.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.93626, 27.6216, -6.65008, 0.74 ) }
    dend_14 { pt3dadd( -9.63492, 27.1393, -6.31976, 0.74 ) }
    dend_14 { pt3dadd( -10.3068, 27.0008, -6.15729, 0.37 ) }
    dend_14 { pt3dadd( -11.1008, 26.9072, -5.95496, 0.37 ) }
    dend_14 { pt3dadd( -11.7687, 26.8698, -5.78311, 0.74 ) }
    dend_14 { pt3dadd( -12.5543, 26.8689, -5.58382, 0.74 ) }
    dend_14 { pt3dadd( -13.5089, 26.9429, -5.35047, 0.37 ) }
    dend_14 { pt3dadd( -14.6004, 27.0917, -5.08693, 1.03 ) }
    dend_14 { pt3dadd( -15.3484, 27.2793, -4.91489, 1.55 ) }
    dend_14 { pt3dadd( -15.8197, 27.4567, -4.81337, 1.84 ) }
    dend_14 { pt3dadd( -16.5205, 27.8043, -4.67488, 1.47 ) }
    dend_14 { pt3dadd( -17.5502, 28.4563, -4.48901, 0.74 ) }
    dend_14 { pt3dadd( -18.4555, 29.1327, -4.3726, 0.44 ) }
    dend_14 { pt3dadd( -18.8567, 29.458, -4.34327, 0.74 ) }
    dend_14 { pt3dadd( -19.4483, 29.9764, -4.31053, 0.37 ) }
    dend_14 { pt3dadd( -20.5101, 30.9816, -4.26845, 0.29 ) }
    dend_14 { pt3dadd( -21.1761, 31.6427, -4.24872, 0.29 ) }
    dend_14 { pt3dadd( -21.6895, 32.1948, -4.17496, 0.22 ) }
    dend_14 { pt3dadd( -22.055, 32.6486, -4.04718, 1.03 ) }
    dend_14 { pt3dadd( -22.3723, 33.0896, -3.88606, 1.47 ) }
    dend_14 { pt3dadd( -22.7575, 33.6599, -3.65311, 1.47 ) }
    dend_14 { pt3dadd( -23.3391, 34.5182, -3.27075, 0.52 ) }
    dend_14 { pt3dadd( -24.2364, 35.7423, -2.73914, 0.52 ) }
    dend_14 { pt3dadd( -24.9036, 36.6678, -2.38655, 0.37 ) }
    dend_14 { pt3dadd( -25.2759, 37.1898, -2.26022, 0.29 ) }
    dend_14 { pt3dadd( -25.7411, 37.7759, -2.19514, 0.29 ) }
    dend_14 { pt3dadd( -26.1673, 38.248, -2.23888, 0.74 ) }
    dend_14 { pt3dadd( -26.6931, 38.8033, -2.3243, 0.88 ) }
    dend_14 { pt3dadd( -27.1848, 39.3058, -2.41599, 0.88 ) }
    dend_14 { pt3dadd( -27.7724, 39.9468, -2.45746, 0.81 ) }
    dend_14 { pt3dadd( -28.4552, 40.9166, -2.34673, 0.52 ) }
    dend_14 { pt3dadd( -28.9344, 41.9329, -2.12209, 0.52 ) }
    dend_14 { pt3dadd( -29.3302, 43.4865, -1.74937, 0.96 ) }
    dend_14 { pt3dadd( -29.4353, 44.2895, -1.5535, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_14 { pt3dadd( -29.5335, 45.3513, -1.29221, 1.4 ) }
    dend_14 { pt3dadd( -29.661, 46.6161, -0.988138, 0.66 ) }
    dend_14 { pt3dadd( -29.773, 47.596, -0.772552, 0.52 ) }
    dend_14 { pt3dadd( -30.0224, 48.9002, -0.503093, 0.37 ) }
    dend_14 { pt3dadd( -30.3216, 49.7517, -0.399187, 0.37 ) }
    dend_14 { pt3dadd( -30.891, 50.6882, -0.298332, 0.52 ) }
    dend_14 { pt3dadd( -31.744, 51.5351, -0.204525, 0.88 ) }
    dend_14 { pt3dadd( -32.0278, 51.745, -0.184634, 1.18 ) }
    dend_14 { pt3dadd( -32.6023, 52.1271, -0.177442, 1.18 ) }
    dend_14 { pt3dadd( -33.2341, 52.5714, -0.207452, 0.96 ) }
    dend_14 { pt3dadd( -33.8605, 53.1442, -0.325147, 0.52 ) }
    dend_14 { pt3dadd( -34.4406, 53.9378, -0.594967, 0.29 ) }
    dend_14 { pt3dadd( -34.9904, 55.0076, -1.08182, 0.74 ) }
    dend_14 { pt3dadd( -35.393, 56.0086, -1.54625, 0.96 ) }
    dend_14 { pt3dadd( -35.6958, 57.0158, -2.04998, 0.81 ) }
    dend_14 { pt3dadd( -35.9293, 57.8396, -2.52605, 1.4 ) }
    dend_14 { pt3dadd( -36.2938, 59.0007, -3.27536, 1.99 ) }
    dend_14 { pt3dadd( -36.5866, 59.7522, -3.74377, 1.99 ) }
    dend_14 { pt3dadd( -36.9878, 60.4553, -4.13242, 1.77 ) }
    dend_14 { pt3dadd( -37.9868, 61.7207, -4.80015, 0.52 ) }
    dend_14 { pt3dadd( -39.1475, 62.8106, -5.4274, 0.37 ) }
    dend_14 { pt3dadd( -39.9247, 63.3981, -5.81999, 0.37 ) }
    dend_14 { pt3dadd( -41.3879, 64.3783, -6.54368, 0.37 ) }
    dend_14 { pt3dadd( -42.1979, 64.9175, -6.94296, 0.37 ) }
    dend_14 { pt3dadd( -43.0266, 65.4806, -7.40272, 0.59 ) }
    dend_14 { pt3dadd( -43.7413, 65.992, -7.78909, 0.66 ) }
    dend_14 { pt3dadd( -44.8023, 66.8457, -8.4223, 0.44 ) }
    dend_14 { pt3dadd( -45.5867, 67.5105, -8.97044, 0.59 ) }
    dend_14 { pt3dadd( -46.1707, 67.9842, -9.42809, 0.88 ) }
    dend_14 { pt3dadd( -46.7875, 68.4501, -9.85582, 1.03 ) }
    dend_14 { pt3dadd( -47.3847, 68.858, -10.2125, 0.88 ) }
    dend_14 { pt3dadd( -48.5631, 69.5616, -10.8505, 0.59 ) }
    dend_14 { pt3dadd( -49.4229, 69.9864, -11.2394, 0.74 ) }
    dend_14 { pt3dadd( -50.7198, 70.536, -11.7511, 0.59 ) }
    dend_14 { pt3dadd( -52.3134, 71.1911, -12.2872, 0.29 ) }
    dend_14 { pt3dadd( -53.1602, 71.5653, -12.504, 0.29 ) }
    dend_14 { pt3dadd( -54.08, 72.0145, -12.6732, 0.29 ) }
    dend_14 { pt3dadd( -55.4377, 72.8463, -12.7096, 0.52 ) }
    dend_14 { pt3dadd( -56.311, 73.5321, -12.7002, 0.52 ) }
    dend_14 { pt3dadd( -57.1293, 74.3417, -12.6828, 1.11 ) }
    dend_14 { pt3dadd( -57.7057, 75.0236, -12.6944, 1.4 ) }
    dend_14 { pt3dadd( -57.9743, 75.3648, -12.7152, 1.69 ) }
    dend_14 { pt3dadd( -58.594, 76.1864, -12.8159, 1.69 ) }
    dend_14 { pt3dadd( -59.9103, 77.9131, -13.2714, 0.96 ) }
    dend_14 { pt3dadd( -60.365, 78.4516, -13.5092, 1.11 ) }
    dend_14 { pt3dadd( -60.9949, 79.1028, -13.8941, 1.33 ) }
    dend_14 { pt3dadd( -61.5961, 79.6053, -14.3364, 1.33 ) }
    dend_14 { pt3dadd( -62.2906, 80.097, -14.9405, 1.11 ) }
    dend_14 { pt3dadd( -63.405, 80.7819, -16.0639, 0.81 ) }
    dend_14 { pt3dadd( -64.4739, 81.3616, -17.2483, 0.59 ) }
    dend_14 { pt3dadd( -65.0092, 81.6462, -17.9324, 0.29 ) }
    dend_14 { pt3dadd( -66.2306, 82.3328, -19.6527, 0.44 ) }
    dend_14 { pt3dadd( -66.9596, 82.7349, -20.7598, 0.96 ) }
    dend_14 { pt3dadd( -67.4789, 83.059, -21.5927, 1.18 ) }
    dend_14 { pt3dadd( -67.8604, 83.3602, -22.2382, 1.18 ) }
    dend_14 { pt3dadd( -68.9137, 84.3353, -24.1184, 0.29 ) }
    dend_14 { pt3dadd( -69.2497, 84.7055, -24.7403, 0.29 ) }
    dend_14 { pt3dadd( -70.3462, 86.0814, -26.6939, 0.29 ) }
    dend_14 { pt3dadd( -70.8837, 86.7544, -27.5941, 0.29 ) }
    dend_14 { pt3dadd( -71.3397, 87.3242, -28.3187, 0.29 ) }
    dend_14 { pt3dadd( -72.592, 88.8753, -30.2641, 0.74 ) }
    dend_14 { pt3dadd( -73.0969, 89.5132, -31.0076, 0.29 ) }
    dend_14 { pt3dadd( -73.4082, 89.9311, -31.479, 0.29 ) }
    dend_14 { pt3dadd( -73.8636, 90.6201, -32.1686, 0.81 ) }
    dend_14 { pt3dadd( -74.2118, 91.1423, -32.6934, 1.18 ) }
    dend_14 { pt3dadd( -74.9563, 92.3166, -33.8286, 1.18 ) }
    dend_14 { pt3dadd( -75.4966, 93.3242, -34.66, 0.37 ) }
    dend_14 { pt3dadd( -75.9507, 94.1539, -35.3307, 0.37 ) }
    dend_14 { pt3dadd( -76.2591, 94.6973, -35.7342, 0.66 ) }
    dend_14 { pt3dadd( -76.4846, 95.046, -35.9751, 0.74 ) }
    dend_14 { pt3dadd( -76.8598, 95.5457, -36.3006, 0.74 ) }
    dend_14 { pt3dadd( -77.5738, 96.3287, -36.8073, 0.29 ) }
    dend_14 { pt3dadd( -78.2006, 96.8184, -37.233, 0.29 ) }
    dend_14 { pt3dadd( -78.9265, 97.2849, -37.8148, 1.25 ) }
    dend_14 { pt3dadd( -79.9715, 97.9112, -38.7377, 2.36 ) }
    dend_14 { pt3dadd( -80.5003, 98.2304, -39.2256, 2.65 ) }
    dend_14 { pt3dadd( -81.021, 98.5509, -39.7135, 2.65 ) }
    dend_14 { pt3dadd( -82.3477, 99.3921, -40.918, 1.18 ) }
    dend_14 { pt3dadd( -84.0283, 100.569, -42.4037, 0.52 ) }
    dend_14 { pt3dadd( -84.4742, 100.91, -42.7805, 0.52 ) }
    dend_14 { pt3dadd( -85.2174, 101.526, -43.3564, 0.52 ) }
    dend_14 { pt3dadd( -85.7798, 102.026, -43.7299, 0.52 ) }
    dend_14 { pt3dadd( -86.8998, 103.089, -44.382, 0.52 ) }
    dend_14 { pt3dadd( -87.7801, 104.001, -44.8564, 1.55 ) }
    dend_14 { pt3dadd( -88.1853, 104.432, -45.0533, 2.06 ) }
    dend_14 { pt3dadd( -88.7463, 105.061, -45.354, 2.06 ) }
    dend_14 { pt3dadd( -89.5528, 106.028, -45.8223, 1.11 ) }
    dend_14 { pt3dadd( -90.3604, 107.067, -46.3171, 0.52 ) }
    dend_14 { pt3dadd( -91.1734, 108.19, -46.871, 0.52 ) }
    dend_14 { pt3dadd( -91.6305, 108.829, -47.1705, 0.88 ) }
    dend_14 { pt3dadd( -92.0461, 109.417, -47.4389, 0.88 ) }
    dend_14 { pt3dadd( -92.2783, 109.731, -47.6172, 0.88 ) }
    dend_14 { pt3dadd( -92.9925, 110.624, -48.274, 0.37 ) }
    dend_14 { pt3dadd( -93.8599, 111.581, -49.1187, 1.11 ) }
    dend_14 { pt3dadd( -94.2883, 112.003, -49.5416, 1.69 ) }
    dend_14 { pt3dadd( -94.7863, 112.457, -50.0468, 1.99 ) }
    dend_14 { pt3dadd( -96.5547, 114.058, -52.0396, 0.74 ) }
    dend_14 { pt3dadd( -97.2772, 114.68, -52.8804, 0.74 ) }
    dend_14 { pt3dadd( -97.9844, 115.24, -53.7004, 0.29 ) }
    dend_14 { pt3dadd( -98.4287, 115.555, -54.1947, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( -98.9565, 115.898, -54.741, 1.11 ) }
    dend_14 { pt3dadd( -100.542, 116.827, -56.1842, 0.22 ) }
    dend_14 { pt3dadd( -101.341, 117.25, -56.8166, 0.22 ) }
    dend_14 { pt3dadd( -102.282, 117.721, -57.5064, 0.22 ) }
    dend_14 { pt3dadd( -102.941, 118.021, -57.938, 1.11 ) }
    dend_14 { pt3dadd( -103.728, 118.349, -58.3992, 1.84 ) }
    dend_14 { pt3dadd( -104.35, 118.603, -58.7207, 2.06 ) }
    dend_14 { pt3dadd( -106.242, 119.421, -59.5422, 0.37 ) }
    dend_14 { pt3dadd( -106.885, 119.75, -59.8336, 0.29 ) }
    dend_14 { pt3dadd( -108.106, 120.427, -60.3985, 0.29 ) }
    dend_14 { pt3dadd( -108.514, 120.658, -60.578, 0.22 ) }
    dend_14 { pt3dadd( -109.159, 121.069, -60.8865, 0.22 ) }
    dend_14 { pt3dadd( -109.962, 121.655, -61.285, 0.88 ) }
    dend_14 { pt3dadd( -110.539, 122.139, -61.6091, 0.88 ) }
    dend_14 { pt3dadd( -111.27, 122.787, -62.0972, 0.44 ) }
    dend_14 { pt3dadd( -111.917, 123.342, -62.5499, 0.37 ) }
    dend_14 { pt3dadd( -112.908, 124.084, -63.2254, 0.29 ) }
    dend_14 { pt3dadd( -113.375, 124.379, -63.5244, 0.81 ) }
    dend_14 { pt3dadd( -114.219, 124.845, -64.0696, 0.81 ) }
    dend_14 { pt3dadd( -114.831, 125.078, -64.5351, 0.37 ) }
    dend_14 { pt3dadd( -115.478, 125.23, -65.0543, 0.37 ) }
    dend_14 { pt3dadd( -116.142, 125.303, -65.6054, 1.33 ) }
    dend_14 { pt3dadd( -117.049, 125.348, -66.34, 1.69 ) }
    dend_14 { pt3dadd( -117.763, 125.409, -66.908, 1.99 ) }
    dend_14 { pt3dadd( -120.889, 125.8, -69.3794, 0.52 ) }
    dend_14 { pt3dadd( -121.811, 125.987, -70.113, 0.44 ) }
    dend_14 { pt3dadd( -122.606, 126.216, -70.7201, 0.44 ) }
    dend_14 { pt3dadd( -123.616, 126.616, -71.4568, 0.52 ) }
    dend_14 { pt3dadd( -125.008, 127.346, -72.3986, 2.14 ) }
    dend_14 { pt3dadd( -126.007, 128.013, -72.9994, 2.95 ) }
    dend_14 { pt3dadd( -128.172, 129.768, -74.1913, 0.29 ) }
    dend_14 { pt3dadd( -129.206, 130.643, -74.7329, 0.29 ) }
    dend_14 { pt3dadd( -130.262, 131.517, -75.2228, 0.29 ) }
    dend_14 { pt3dadd( -131.417, 132.391, -75.7216, 1.4 ) }
    dend_14 { pt3dadd( -132.031, 132.805, -75.9675, 1.69 ) }
    dend_14 { pt3dadd( -133.078, 133.511, -76.3353, 1.69 ) }
    dend_14 { pt3dadd( -134.868, 134.649, -76.8617, 0.22 ) }
    dend_14 { pt3dadd( -136.042, 135.293, -77.1985, 0.22 ) }
    dend_14 { pt3dadd( -137.063, 135.738, -77.4545, 0.81 ) }
    dend_14 { pt3dadd( -137.53, 135.906, -77.5766, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 40/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 22.6148, -8.57317, -30.2632, 1.11 ) }
    dend_10 { pt3dadd( 20.7557, -6.45225, -39.2973, 1.11 ) }
    dend_10 { pt3dadd( 20.3502, -5.97421, -41.0848, 0.74 ) }
    dend_10 { pt3dadd( 19.9782, -5.51247, -42.5074, 0.59 ) }
    dend_10 { pt3dadd( 19.5406, -5.033, -43.8667, 0.88 ) }
    dend_10 { pt3dadd( 18.9837, -4.52495, -45.3026, 1.18 ) }
    dend_10 { pt3dadd( 18.4053, -4.05111, -46.6477, 1.62 ) }
    dend_10 { pt3dadd( 16.3478, -2.58141, -50.3272, 0.96 ) }
    dend_10 { pt3dadd( 15.4995, -1.86996, -51.8998, 1.18 ) }
    dend_10 { pt3dadd( 14.6031, -0.974406, -53.6364, 1.18 ) }
    dend_10 { pt3dadd( 13.5323, 0.189661, -55.7387, 0.81 ) }
    dend_10 { pt3dadd( 12.2275, 1.7126, -58.2657, 0.59 ) }
    dend_10 { pt3dadd( 11.8258, 2.24539, -59.0509, 0.88 ) }
    dend_10 { pt3dadd( 11.2758, 3.20648, -60.1637, 0.88 ) }
    dend_10 { pt3dadd( 10.594, 5.00483, -61.8566, 0.37 ) }
    dend_10 { pt3dadd( 10.4894, 5.74702, -62.2932, 0.29 ) }
    dend_10 { pt3dadd( 10.462, 6.92585, -62.7232, 0.29 ) }
    dend_10 { pt3dadd( 10.4544, 7.51685, -62.9233, 0.29 ) }
    dend_10 { pt3dadd( 10.4223, 8.414, -63.3649, 0.81 ) }
    dend_10 { pt3dadd( 10.3789, 9.25947, -63.8474, 0.81 ) }
    dend_10 { pt3dadd( 10.2992, 10.7515, -64.8251, 1.4 ) }
    dend_10 { pt3dadd( 10.2332, 12.5712, -66.1393, 1.99 ) }
    dend_10 { pt3dadd( 10.1968, 14.9517, -68.0196, 2.65 ) }
    dend_10 { pt3dadd( 10.1834, 17.7481, -70.3033, 0.29 ) }
    dend_10 { pt3dadd( 10.2103, 19.5233, -71.8338, 0.29 ) }
    dend_10 { pt3dadd( 10.2424, 20.8801, -73.0437, 0.29 ) }
    dend_10 { pt3dadd( 10.2702, 22.0515, -74.1097, 0.88 ) }
    dend_10 { pt3dadd( 10.3182, 22.9265, -74.853, 1.33 ) }
    dend_10 { pt3dadd( 10.4626, 24.6239, -76.1806, 1.77 ) }
    dend_10 { pt3dadd( 10.6342, 26.7536, -77.8536, 1.4 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 70/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 22.6148, -8.57317, -30.2632, 1.84 ) }
    dend_7 { pt3dadd( 23.4408, -9.5386, -31.1725, 1.84 ) }
    dend_7 { pt3dadd( 24.5066, -10.8307, -32.3997, 0.74 ) }
    dend_7 { pt3dadd( 25.3107, -11.8652, -33.4016, 0.74 ) }
    dend_7 { pt3dadd( 26.0378, -12.8007, -34.3075, 2.21 ) }
    dend_7 { pt3dadd( 26.8728, -13.875, -35.3478, 3.09 ) }
    dend_7 { pt3dadd( 27.1294, -14.2051, -35.6675, 3.83 ) }
    dend_7 { pt3dadd( 27.4934, -14.7323, -36.2318, 4.35 ) }
    dend_7 { pt3dadd( 27.9314, -15.482, -37.0704, 4.27 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 79/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 21.0285, -14.2329, -2.55272, 0.96 ) }
    dend_5 { pt3dadd( 20.6382, -15.7151, -0.347145, 0.96 ) }
    dend_5 { pt3dadd( 20.5778, -16.4055, 0.837552, 1.18 ) }
    dend_5 { pt3dadd( 20.6133, -17.0692, 1.96273, 1.18 ) }
    dend_5 { pt3dadd( 20.8009, -17.96, 3.405, 0.81 ) }
    dend_5 { pt3dadd( 21.3131, -19.4174, 5.62338, 0.59 ) }
    dend_5 { pt3dadd( 21.899, -20.4551, 7.046, 0.37 ) }
    dend_5 { pt3dadd( 22.3878, -20.8984, 7.83346, 0.74 ) }
    dend_5 { pt3dadd( 23.3851, -21.047, 7.96852, 0.74 ) }
    dend_5 { pt3dadd( 24.7099, -21.1077, 7.97328, 0.96 ) }
    dend_5 { pt3dadd( 25.8299, -21.1256, 7.92307, 1.03 ) }
    dend_5 { pt3dadd( 26.7503, -21.1347, 7.83407, 0.88 ) }
    dend_5 { pt3dadd( 27.7293, -21.1942, 7.81432, 0.59 ) }
    dend_5 { pt3dadd( 28.803, -21.3127, 7.99319, 0.37 ) }
    dend_5 { pt3dadd( 30.4373, -21.4907, 8.52748, 1.18 ) }
    dend_5 { pt3dadd( 31.2916, -21.6278, 8.88252, 1.84 ) }
    dend_5 { pt3dadd( 31.8515, -21.7612, 9.13896, 1.84 ) }
    dend_5 { pt3dadd( 32.9559, -22.1499, 9.6744, 0.66 ) }
    dend_5 { pt3dadd( 33.8426, -22.5884, 10.1335, 0.29 ) }
    dend_5 { pt3dadd( 34.5399, -23.0437, 10.481, 0.29 ) }
    dend_5 { pt3dadd( 35.548, -23.7305, 10.8367, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 36.3302, -24.2361, 11.0389, 0.29 ) }
    dend_5 { pt3dadd( 37.2773, -24.7846, 11.2, 0.66 ) }
    dend_5 { pt3dadd( 38.1183, -25.1836, 11.2243, 1.03 ) }
    dend_5 { pt3dadd( 39.3044, -25.5987, 11.2484, 0.29 ) }
    dend_5 { pt3dadd( 40.7229, -25.9756, 11.3473, 0.52 ) }
    dend_5 { pt3dadd( 41.6472, -26.08, 11.4733, 0.52 ) }
    dend_5 { pt3dadd( 42.3982, -26.1298, 11.5872, 0.44 ) }
    dend_5 { pt3dadd( 43.1517, -26.1924, 11.7759, 0.44 ) }
    dend_5 { pt3dadd( 44.6588, -26.4039, 12.3103, 0.81 ) }
    dend_5 { pt3dadd( 45.2334, -26.5122, 12.607, 0.96 ) }
    dend_5 { pt3dadd( 45.8211, -26.6559, 12.9696, 1.11 ) }
    dend_5 { pt3dadd( 46.9316, -26.9746, 13.7062, 0.29 ) }
    dend_5 { pt3dadd( 48.402, -27.4691, 14.7519, 1.55 ) }
    dend_5 { pt3dadd( 49.0885, -27.7133, 15.2843, 2.65 ) }
    dend_5 { pt3dadd( 50.0945, -28.0533, 16.0731, 3.24 ) }
    dend_5 { pt3dadd( 50.8258, -28.2708, 16.6671, 2.87 ) }
    dend_5 { pt3dadd( 52.1584, -28.6489, 17.7942, 0.59 ) }
    dend_5 { pt3dadd( 53.0754, -28.9191, 18.6011, 0.44 ) }
    dend_5 { pt3dadd( 53.8939, -29.2045, 19.3094, 0.44 ) }
    dend_5 { pt3dadd( 54.5949, -29.5082, 19.9017, 0.44 ) }
    dend_5 { pt3dadd( 55.0953, -29.7977, 20.2784, 0.37 ) }
    dend_5 { pt3dadd( 55.697, -30.2494, 20.7175, 0.59 ) }
    dend_5 { pt3dadd( 56.1443, -30.6161, 20.9805, 0.59 ) }
    dend_5 { pt3dadd( 56.6299, -30.9972, 21.1858, 0.59 ) }
    dend_5 { pt3dadd( 57.1823, -31.384, 21.477, 0.37 ) }
    dend_5 { pt3dadd( 57.7606, -31.7588, 21.9031, 1.11 ) }
    dend_5 { pt3dadd( 58.1509, -31.9747, 22.2488, 1.11 ) }
    dend_5 { pt3dadd( 59.1619, -32.3762, 23.2516, 0.37 ) }
    dend_5 { pt3dadd( 59.737, -32.5393, 23.8455, 0.37 ) }
    dend_5 { pt3dadd( 61.452, -32.8563, 25.6656, 1.55 ) }
    dend_5 { pt3dadd( 62.4157, -32.9322, 26.7045, 2.21 ) }
    dend_5 { pt3dadd( 63.0022, -32.9294, 27.3323, 1.77 ) }
    dend_5 { pt3dadd( 64.2386, -32.8317, 28.639, 0.74 ) }
    dend_5 { pt3dadd( 64.9329, -32.7448, 29.401, 0.37 ) }
    dend_5 { pt3dadd( 65.3578, -32.6712, 29.8567, 0.88 ) }
    dend_5 { pt3dadd( 66.2088, -32.487, 30.6202, 1.11 ) }
    dend_5 { pt3dadd( 67.3492, -32.183, 31.5217, 0.88 ) }
    dend_5 { pt3dadd( 68.1385, -31.9205, 32.1266, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 21.0285, -14.2329, -2.55272, 0.74 ) }
    dend_2 { pt3dadd( 20.3873, -15.3774, -2.91883, 0.74 ) }
    dend_2 { pt3dadd( 20.1077, -15.9429, -3.09354, 1.18 ) }
    dend_2 { pt3dadd( 19.9203, -16.3887, -3.22777, 1.18 ) }
    dend_2 { pt3dadd( 19.724, -16.9651, -3.39808, 1.11 ) }
    dend_2 { pt3dadd( 19.5698, -17.5255, -3.56419, 0.88 ) }
    dend_2 { pt3dadd( 19.3847, -18.3615, -3.80359, 0.74 ) }
    dend_2 { pt3dadd( 19.3241, -18.8732, -3.93488, 1.03 ) }
    dend_2 { pt3dadd( 19.3261, -19.4756, -4.06251, 1.03 ) }
    dend_2 { pt3dadd( 19.406, -20.1932, -4.1697, 0.59 ) }
    dend_2 { pt3dadd( 19.5256, -20.8192, -4.22662, 1.03 ) }
    dend_2 { pt3dadd( 19.6403, -21.31, -4.24099, 1.33 ) }
    dend_2 { pt3dadd( 19.7682, -21.8733, -4.19999, 1.33 ) }
    dend_2 { pt3dadd( 19.9569, -22.8741, -4.07045, 0.74 ) }
    dend_2 { pt3dadd( 20.083, -23.7092, -3.92612, 1.03 ) }
    dend_2 { pt3dadd( 20.1256, -24.0713, -3.87057, 1.4 ) }
    dend_2 { pt3dadd( 20.1701, -24.5899, -3.81938, 1.4 ) }
    dend_2 { pt3dadd( 20.2183, -25.3988, -3.79373, 0.81 ) }
    dend_2 { pt3dadd( 20.2499, -26.0217, -3.83711, 0.59 ) }
    dend_2 { pt3dadd( 20.2906, -26.6178, -3.9463, 1.11 ) }
    dend_2 { pt3dadd( 20.4106, -27.5742, -4.20596, 1.11 ) }
    dend_2 { pt3dadd( 20.5207, -28.1063, -4.4049, 1.03 ) }
    dend_2 { pt3dadd( 20.6461, -28.5277, -4.59914, 1.62 ) }
    dend_2 { pt3dadd( 20.9085, -29.1916, -4.96425, 1.47 ) }
    dend_2 { pt3dadd( 21.1258, -29.6118, -5.2088, 1.18 ) }
    dend_2 { pt3dadd( 21.5913, -30.3136, -5.61695, 0.74 ) }
    dend_2 { pt3dadd( 22.0826, -30.8888, -5.93024, 0.66 ) }
    dend_2 { pt3dadd( 22.307, -31.1162, -6.04852, 0.81 ) }
    dend_2 { pt3dadd( 22.5531, -31.3513, -6.13589, 0.81 ) }
    dend_2 { pt3dadd( 23.023, -31.7939, -6.21246, 0.52 ) }
    dend_2 { pt3dadd( 23.4344, -32.2333, -6.19464, 0.52 ) }
    dend_2 { pt3dadd( 23.6427, -32.6659, -5.99968, 0.59 ) }
    dend_2 { pt3dadd( 23.645, -33.0381, -5.77581, 0.59 ) }
    dend_2 { pt3dadd( 23.4008, -34.2877, -5.12748, 0.59 ) }
    dend_2 { pt3dadd( 23.2756, -34.7692, -4.92078, 0.59 ) }
    dend_2 { pt3dadd( 23.0848, -35.4458, -4.696, 0.59 ) }
    dend_2 { pt3dadd( 22.9112, -36.0917, -4.53273, 0.59 ) }
    dend_2 { pt3dadd( 22.801, -36.5978, -4.44343, 0.59 ) }
    dend_2 { pt3dadd( 22.6866, -37.5361, -4.37533, 0.59 ) }
    dend_2 { pt3dadd( 22.6789, -38.3159, -4.41217, 1.33 ) }
    dend_2 { pt3dadd( 22.7313, -38.8656, -4.43772, 1.92 ) }
    dend_2 { pt3dadd( 22.7979, -39.2336, -4.45433, 2.14 ) }
    dend_2 { pt3dadd( 22.8969, -39.6412, -4.45492, 1.62 ) }
    dend_2 { pt3dadd( 23.0854, -40.2693, -4.39531, 0.81 ) }
    dend_2 { pt3dadd( 23.3149, -40.8896, -4.23683, 0.66 ) }
    dend_2 { pt3dadd( 23.565, -41.481, -4.00653, 0.59 ) }
    dend_2 { pt3dadd( 23.6974, -41.7914, -3.85141, 0.88 ) }
    dend_2 { pt3dadd( 23.9809, -42.4695, -3.50071, 0.88 ) }
    dend_2 { pt3dadd( 24.1702, -42.9281, -3.25827, 0.59 ) }
    dend_2 { pt3dadd( 24.4798, -43.6938, -2.87139, 0.52 ) }
    dend_2 { pt3dadd( 24.6717, -44.215, -2.67612, 0.52 ) }
    dend_2 { pt3dadd( 24.8621, -44.7934, -2.5832, 0.52 ) }
    dend_2 { pt3dadd( 25.0743, -45.5198, -2.60066, 1.33 ) }
    dend_2 { pt3dadd( 25.1512, -45.8416, -2.66446, 1.84 ) }
    dend_2 { pt3dadd( 25.2412, -46.3272, -2.80265, 2.06 ) }
    dend_2 { pt3dadd( 25.3759, -47.116, -3.02388, 0.81 ) }
    dend_2 { pt3dadd( 25.5022, -47.7627, -3.14494, 0.59 ) }
    dend_2 { pt3dadd( 25.5766, -48.0707, -3.16661, 0.88 ) }
    dend_2 { pt3dadd( 25.7258, -48.5925, -3.1146, 0.52 ) }
    dend_2 { pt3dadd( 26.0424, -49.5353, -2.90303, 0.52 ) }
    dend_2 { pt3dadd( 26.3588, -50.3662, -2.64531, 0.66 ) }
    dend_2 { pt3dadd( 26.6182, -50.9974, -2.42556, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 26.8432, -51.5303, -2.26254, 0.88 ) }
    dend_2 { pt3dadd( 27.089, -52.1255, -2.16724, 0.59 ) }
    dend_2 { pt3dadd( 27.2859, -52.655, -2.17995, 0.29 ) }
    dend_2 { pt3dadd( 27.4402, -53.2167, -2.30695, 0.96 ) }
    dend_2 { pt3dadd( 27.5268, -53.728, -2.48882, 1.11 ) }
    dend_2 { pt3dadd( 27.5835, -54.3744, -2.75145, 0.88 ) }
    dend_2 { pt3dadd( 27.5979, -55.2488, -3.11163, 0.59 ) }
    dend_2 { pt3dadd( 27.5698, -55.9223, -3.36732, 0.59 ) }
    dend_2 { pt3dadd( 27.5221, -56.5659, -3.57677, 0.59 ) }
    dend_2 { pt3dadd( 27.4807, -57.1496, -3.74567, 0.74 ) }
    dend_2 { pt3dadd( 27.4594, -57.5386, -3.84414, 0.81 ) }
    dend_2 { pt3dadd( 27.4372, -58.0045, -3.94465, 0.59 ) }
    dend_2 { pt3dadd( 27.413, -58.7547, -4.0893, 0.52 ) }
    dend_2 { pt3dadd( 27.4041, -59.4697, -4.246, 2.28 ) }
    dend_2 { pt3dadd( 27.4121, -60.3238, -4.46881, 2.95 ) }
    dend_2 { pt3dadd( 27.4194, -60.5745, -4.54888, 2.95 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -11.2419, 4.18404, 15.7289, 1.84 ) }
    dend_35 { pt3dadd( -10.6413, 6.10918, 15.7704, 1.84 ) }
    dend_35 { pt3dadd( -10.3714, 6.91265, 15.7425, 2.06 ) }
    dend_35 { pt3dadd( -9.85167, 8.49514, 15.6295, 1.33 ) }
    dend_35 { pt3dadd( -9.45212, 9.83439, 15.4863, 0.88 ) }
    dend_35 { pt3dadd( -9.07409, 11.2495, 15.3332, 0.88 ) }
    dend_35 { pt3dadd( -8.79374, 12.5517, 15.224, 1.4 ) }
    dend_35 { pt3dadd( -8.66284, 13.3056, 15.1382, 1.4 ) }
    dend_35 { pt3dadd( -8.61705, 14.2254, 15.0731, 1.4 ) }
    dend_35 { pt3dadd( -8.79951, 15.3346, 15.0821, 1.4 ) }
    dend_35 { pt3dadd( -9.06548, 15.9614, 15.1579, 1.25 ) }
    dend_35 { pt3dadd( -9.73368, 17.1141, 15.4072, 1.55 ) }
    dend_35 { pt3dadd( -10.1912, 17.8742, 15.6369, 1.33 ) }
    dend_35 { pt3dadd( -10.6717, 18.7094, 15.9205, 0.66 ) }
    dend_35 { pt3dadd( -10.9934, 19.3444, 16.14, 0.52 ) }
    dend_35 { pt3dadd( -11.3686, 20.2762, 16.4436, 0.88 ) }
    dend_35 { pt3dadd( -11.6636, 21.2943, 16.7324, 0.37 ) }
    dend_35 { pt3dadd( -11.8608, 22.3777, 16.9995, 1.25 ) }
    dend_35 { pt3dadd( -11.9217, 22.9194, 17.1257, 1.25 ) }
    dend_35 { pt3dadd( -11.9807, 23.8436, 17.341, 0.88 ) }
    dend_35 { pt3dadd( -12.0132, 24.4343, 17.4953, 0.66 ) }
    dend_35 { pt3dadd( -12.082, 25.5024, 17.8141, 0.81 ) }
    dend_35 { pt3dadd( -12.1572, 26.0922, 18.0104, 1.55 ) }
    dend_35 { pt3dadd( -12.2157, 26.422, 18.1192, 1.92 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 40/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -11.2419, 4.18404, 15.7289, 1.62 ) }
    dend_34 { pt3dadd( -10.7224, 2.90218, 15.9594, 1.62 ) }
    dend_34 { pt3dadd( -10.1432, 1.65993, 16.1655, 1.18 ) }
    dend_34 { pt3dadd( -9.34109, 0.118164, 16.4042, 0.88 ) }
    dend_34 { pt3dadd( -8.72216, -1.10624, 16.5818, 0.59 ) }
    dend_34 { pt3dadd( -8.18101, -2.33282, 16.7582, 0.44 ) }
    dend_34 { pt3dadd( -7.71294, -3.5426, 16.93, 0.44 ) }
    dend_34 { pt3dadd( -7.43623, -4.77788, 17.0777, 0.37 ) }
    dend_34 { pt3dadd( -7.40326, -5.58832, 17.1807, 0.37 ) }
    dend_34 { pt3dadd( -7.566, -6.50524, 17.2779, 0.37 ) }
    dend_34 { pt3dadd( -8.03745, -7.84103, 17.4074, 0.52 ) }
    dend_34 { pt3dadd( -8.25371, -8.233, 17.4483, 0.81 ) }
    dend_34 { pt3dadd( -9.26221, -9.60314, 17.5633, 0.52 ) }
    dend_34 { pt3dadd( -10.2195, -10.7822, 17.6239, 0.52 ) }
    dend_34 { pt3dadd( -10.6468, -11.3295, 17.6388, 0.52 ) }
    dend_34 { pt3dadd( -10.9246, -11.7806, 17.6362, 0.88 ) }
    dend_34 { pt3dadd( -11.2926, -12.6707, 17.5984, 0.29 ) }
    dend_34 { pt3dadd( -11.4791, -13.5979, 17.5313, 0.29 ) }
    dend_34 { pt3dadd( -11.0321, -14.0192, 17.4845, 0.52 ) }
    dend_34 { pt3dadd( -10.0396, -14.5753, 17.3672, 0.29 ) }
    dend_34 { pt3dadd( -9.07166, -15.1369, 17.1811, 0.29 ) }
    dend_34 { pt3dadd( -8.28958, -15.6, 16.9967, 0.29 ) }
    dend_34 { pt3dadd( -7.24846, -16.2471, 16.6958, 0.29 ) }
    dend_34 { pt3dadd( -6.42185, -16.766, 16.4444, 0.29 ) }
    dend_34 { pt3dadd( -5.61806, -17.4811, 15.9584, 0.29 ) }
    dend_34 { pt3dadd( -5.76405, -18.2605, 15.1568, 0.59 ) }
    dend_34 { pt3dadd( -6.00959, -18.9095, 14.4733, 0.29 ) }
    dend_34 { pt3dadd( -6.205, -19.4317, 13.9568, 0.29 ) }
    dend_34 { pt3dadd( -6.51477, -20.2517, 13.1664, 0.74 ) }
    dend_34 { pt3dadd( -7.14734, -21.7059, 11.7327, 0.44 ) }
    dend_34 { pt3dadd( -7.44866, -22.4955, 10.9694, 0.44 ) }
    dend_34 { pt3dadd( -7.59097, -23.3523, 10.136, 0.29 ) }
    dend_34 { pt3dadd( -7.56755, -23.9982, 9.50505, 1.33 ) }
    dend_34 { pt3dadd( -7.49913, -24.3429, 9.16641, 1.47 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 74/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -74.2603, -163.785, -27.9436, 0.44 ) }
    dend_29 { pt3dadd( -74.4826, -165.209, -28.8907, 0.44 ) }
    dend_29 { pt3dadd( -74.7238, -166.293, -29.5451, 0.44 ) }
    dend_29 { pt3dadd( -75.1351, -167.667, -30.2828, 1.11 ) }
    dend_29 { pt3dadd( -75.4181, -168.689, -30.7035, 1.4 ) }
    dend_29 { pt3dadd( -75.7785, -170.006, -31.159, 1.25 ) }
    dend_29 { pt3dadd( -76.162, -171.314, -31.589, 0.66 ) }
    dend_29 { pt3dadd( -76.627, -172.564, -31.951, 0.44 ) }
    dend_29 { pt3dadd( -77.5818, -174.575, -32.5504, 0.44 ) }
    dend_29 { pt3dadd( -78.6169, -176.377, -33.1118, 0.22 ) }
    dend_29 { pt3dadd( -79.0394, -177.02, -33.3257, 0.22 ) }
    dend_29 { pt3dadd( -79.712, -177.933, -33.6607, 0.88 ) }
    dend_29 { pt3dadd( -80.7191, -179.118, -34.1843, 0.88 ) }
    dend_29 { pt3dadd( -81.8741, -180.334, -34.842, 0.29 ) }
    dend_29 { pt3dadd( -82.7761, -181.226, -35.381, 0.29 ) }
    dend_29 { pt3dadd( -83.5399, -181.969, -35.8659, 1.25 ) }
    dend_29 { pt3dadd( -84.0996, -182.554, -36.2251, 1.99 ) }
    dend_29 { pt3dadd( -84.7752, -183.324, -36.6632, 2.14 ) }
    dend_29 { pt3dadd( -85.8046, -184.675, -37.3507, 0.52 ) }
    dend_29 { pt3dadd( -86.7863, -186.145, -38.0522, 0.52 ) }
    dend_29 { pt3dadd( -87.6651, -187.681, -38.7232, 0.44 ) }
    dend_29 { pt3dadd( -88.2341, -188.902, -39.1926, 0.44 ) }
    dend_29 { pt3dadd( -88.7482, -190.324, -39.6728, 0.37 ) }
    dend_29 { pt3dadd( -89.1277, -191.754, -40.0873, 0.37 ) }
    dend_29 { pt3dadd( -89.2553, -192.53, -40.255, 0.96 ) }
    dend_29 { pt3dadd( -89.3796, -193.763, -40.4559, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_29 { pt3dadd( -89.5225, -195.233, -40.6162, 0.44 ) }
    dend_29 { pt3dadd( -89.684, -196.474, -40.7595, 0.29 ) }
    dend_29 { pt3dadd( -89.8912, -197.544, -40.9274, 1.03 ) }
    dend_29 { pt3dadd( -90.1589, -198.596, -41.1479, 1.25 ) }
    dend_29 { pt3dadd( -90.6817, -200.473, -41.6286, 0.29 ) }
    dend_29 { pt3dadd( -91.2256, -202.397, -42.2024, 0.29 ) }
    dend_29 { pt3dadd( -91.6731, -204.11, -42.7552, 1.33 ) }
    dend_29 { pt3dadd( -91.9067, -205.184, -43.1207, 1.92 ) }
    dend_29 { pt3dadd( -92.1033, -206.407, -43.5651, 1.62 ) }
    dend_29 { pt3dadd( -92.2995, -208.421, -44.3482, 0.29 ) }
    dend_29 { pt3dadd( -92.3125, -209.76, -44.883, 0.29 ) }
    dend_29 { pt3dadd( -92.2049, -210.852, -45.2019, 0.52 ) }
    dend_29 { pt3dadd( -92.0824, -211.672, -45.3386, 0.52 ) }
    dend_29 { pt3dadd( -91.8481, -212.911, -45.4255, 0.29 ) }
    dend_29 { pt3dadd( -91.5327, -214.505, -45.4676, 0.44 ) }
    dend_29 { pt3dadd( -91.3136, -215.498, -45.4224, 0.44 ) }
    dend_29 { pt3dadd( -90.4965, -219.039, -45.0336, 0.44 ) }
    dend_29 { pt3dadd( -90.1955, -220.235, -44.8083, 1.18 ) }
    dend_29 { pt3dadd( -89.9997, -220.929, -44.6142, 1.18 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -74.2603, -163.785, -27.9436, 0.37 ) }
    dend_28 { pt3dadd( -75.0702, -163.203, -27.1531, 0.37 ) }
    dend_28 { pt3dadd( -75.7297, -162.754, -26.5427, 0.29 ) }
    dend_28 { pt3dadd( -76.3196, -162.376, -26.0217, 1.03 ) }
    dend_28 { pt3dadd( -77.0131, -161.932, -25.409, 1.18 ) }
    dend_28 { pt3dadd( -78.1884, -161.179, -24.3708, 0.29 ) }
    dend_28 { pt3dadd( -78.6875, -160.859, -23.9299, 0.29 ) }
    dend_28 { pt3dadd( -79.1286, -160.587, -23.5544, 1.03 ) }
    dend_28 { pt3dadd( -79.552, -160.366, -23.2424, 1.18 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 28/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 17.791, 163.838, -86.9013, 1.18 ) }
    dend_22 { pt3dadd( 19.2467, 165.101, -88.467, 1.18 ) }
    dend_22 { pt3dadd( 19.7565, 165.59, -89.0245, 1.18 ) }
    dend_22 { pt3dadd( 21.1143, 167.058, -90.5275, 0.29 ) }
    dend_22 { pt3dadd( 21.63, 167.679, -91.0863, 0.66 ) }
    dend_22 { pt3dadd( 22.1804, 168.408, -91.6592, 0.66 ) }
    dend_22 { pt3dadd( 22.7093, 169.151, -92.1748, 0.29 ) }
    dend_22 { pt3dadd( 23.2874, 170.129, -92.6716, 0.66 ) }
    dend_22 { pt3dadd( 23.8993, 171.226, -93.2093, 0.66 ) }
    dend_22 { pt3dadd( 24.3881, 172.154, -93.6302, 0.29 ) }
    dend_22 { pt3dadd( 24.9245, 173.119, -94.0883, 1.69 ) }
    dend_22 { pt3dadd( 25.4068, 173.927, -94.4577, 2.5 ) }
    dend_22 { pt3dadd( 25.7071, 174.391, -94.6596, 2.5 ) }
    dend_22 { pt3dadd( 27.2251, 176.578, -95.5618, 0.44 ) }
    dend_22 { pt3dadd( 28.0631, 177.586, -96.0457, 0.44 ) }
    dend_22 { pt3dadd( 29.7498, 179.191, -96.9264, 0.15 ) }
    dend_22 { pt3dadd( 31.0251, 180.184, -97.5425, 0.15 ) }
    dend_22 { pt3dadd( 32.2231, 180.947, -98.0488, 1.11 ) }
    dend_22 { pt3dadd( 32.8859, 181.281, -98.2783, 1.47 ) }
    dend_22 { pt3dadd( 35.4936, 182.217, -98.947, 0.22 ) }
    dend_22 { pt3dadd( 37.6594, 182.721, -99.4421, 0.22 ) }
    dend_22 { pt3dadd( 38.4769, 182.825, -99.611, 0.52 ) }
    dend_22 { pt3dadd( 39.7056, 182.89, -99.849, 0.22 ) }
    dend_22 { pt3dadd( 40.4884, 182.881, -100.021, 0.59 ) }
    dend_22 { pt3dadd( 41.1015, 182.873, -100.155, 0.59 ) }
    dend_22 { pt3dadd( 42.4669, 182.903, -100.465, 0.22 ) }
    dend_22 { pt3dadd( 43.7915, 182.981, -100.843, 0.88 ) }
    dend_22 { pt3dadd( 45.269, 183.071, -101.296, 0.88 ) }
    dend_22 { pt3dadd( 47.9514, 183.261, -102.241, 0.29 ) }
    dend_22 { pt3dadd( 49.0769, 183.361, -102.68, 0.29 ) }
    dend_22 { pt3dadd( 49.9905, 183.457, -103.068, 0.59 ) }
    dend_22 { pt3dadd( 50.3493, 183.499, -103.234, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 60/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 17.791, 163.838, -86.9013, 0.15 ) }
    dend_21 { pt3dadd( 17.7342, 165.976, -86.5444, 0.15 ) }
    dend_21 { pt3dadd( 17.635, 168.441, -86.125, 0.15 ) }
    dend_21 { pt3dadd( 17.544, 170.218, -85.8228, 0.88 ) }
    dend_21 { pt3dadd( 17.4863, 171.512, -85.6019, 1.11 ) }
    dend_21 { pt3dadd( 17.4355, 172.844, -85.3826, 0.22 ) }
    dend_21 { pt3dadd( 17.4137, 173.598, -85.2637, 0.22 ) }
    dend_21 { pt3dadd( 17.3729, 174.446, -85.1013, 0.52 ) }
    dend_21 { pt3dadd( 17.3537, 174.892, -85.0205, 0.52 ) }
    dend_21 { pt3dadd( 17.3134, 176.03, -84.8686, 0.22 ) }
    dend_21 { pt3dadd( 17.3211, 176.847, -84.785, 0.52 ) }
    dend_21 { pt3dadd( 17.3482, 177.391, -84.7417, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 72/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 27.9314, -15.482, -37.0704, 1.47 ) }
    dend_9 { pt3dadd( 29.1239, -15.745, -37.0448, 1.47 ) }
    dend_9 { pt3dadd( 30.204, -15.8063, -37.0281, 0.88 ) }
    dend_9 { pt3dadd( 31.2834, -15.6686, -37.0111, 0.74 ) }
    dend_9 { pt3dadd( 31.8429, -15.5783, -37.1013, 0.88 ) }
    dend_9 { pt3dadd( 32.5049, -15.4921, -37.3657, 1.03 ) }
    dend_9 { pt3dadd( 33.1186, -15.4479, -37.6774, 0.74 ) }
    dend_9 { pt3dadd( 33.687, -15.4062, -38.0715, 0.52 ) }
    dend_9 { pt3dadd( 34.4629, -15.381, -38.6781, 1.03 ) }
    dend_9 { pt3dadd( 36.0716, -15.4777, -40.0306, 1.18 ) }
    dend_9 { pt3dadd( 37.2577, -15.6863, -41.0143, 0.81 ) }
    dend_9 { pt3dadd( 38.0908, -15.9241, -41.6705, 1.18 ) }
    dend_9 { pt3dadd( 38.7043, -16.1459, -42.1546, 1.77 ) }
    dend_9 { pt3dadd( 39.2311, -16.3433, -42.5431, 1.77 ) }
    dend_9 { pt3dadd( 39.6016, -16.4698, -42.7703, 1.4 ) }
    dend_9 { pt3dadd( 40.2433, -16.6049, -43.0092, 1.03 ) }
    dend_9 { pt3dadd( 40.7364, -16.6508, -43.1345, 0.59 ) }
    dend_9 { pt3dadd( 42.1118, -16.61, -43.4227, 0.59 ) }
    dend_9 { pt3dadd( 42.952, -16.5239, -43.4978, 0.81 ) }
    dend_9 { pt3dadd( 43.7234, -16.4428, -43.5162, 0.88 ) }
    dend_9 { pt3dadd( 44.2479, -16.4028, -43.5048, 0.88 ) }
    dend_9 { pt3dadd( 44.7058, -16.3951, -43.4863, 0.88 ) }
    dend_9 { pt3dadd( 45.4432, -16.4641, -43.4502, 0.44 ) }
    dend_9 { pt3dadd( 46.3929, -16.6582, -43.3985, 0.44 ) }
    dend_9 { pt3dadd( 47.5322, -16.9794, -43.4291, 1.47 ) }
    dend_9 { pt3dadd( 48.1002, -17.1501, -43.4948, 2.43 ) }
    dend_9 { pt3dadd( 48.8289, -17.3636, -43.6263, 2.8 ) }
    dend_9 { pt3dadd( 50.0159, -17.6616, -43.9502, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_9 { pt3dadd( 50.5178, -17.754, -44.1252, 0.37 ) }
    dend_9 { pt3dadd( 51.657, -17.892, -44.5565, 0.96 ) }
    dend_9 { pt3dadd( 52.3364, -17.9333, -44.7906, 0.96 ) }
    dend_9 { pt3dadd( 52.9042, -17.9438, -44.9851, 0.96 ) }
    dend_9 { pt3dadd( 53.8186, -17.9186, -45.308, 0.59 ) }
    dend_9 { pt3dadd( 54.6258, -17.8769, -45.6501, 0.37 ) }
    dend_9 { pt3dadd( 55.4235, -17.8526, -46.0475, 0.22 ) }
    dend_9 { pt3dadd( 55.8161, -17.8677, -46.2678, 0.22 ) }
    dend_9 { pt3dadd( 56.7655, -17.9464, -46.8191, 1.4 ) }
    dend_9 { pt3dadd( 57.3526, -18.0003, -47.1593, 1.69 ) }
    dend_9 { pt3dadd( 58.0494, -18.0594, -47.5517, 1.99 ) }
    dend_9 { pt3dadd( 58.7037, -18.0971, -47.9439, 2.21 ) }
    dend_9 { pt3dadd( 60.0213, -18.1128, -48.7956, 0.37 ) }
    dend_9 { pt3dadd( 60.3732, -18.106, -49.017, 0.29 ) }
    dend_9 { pt3dadd( 60.9038, -18.0754, -49.2994, 0.29 ) }
    dend_9 { pt3dadd( 61.4842, -18.0148, -49.565, 0.88 ) }
    dend_9 { pt3dadd( 62.3231, -17.8957, -49.8911, 1.11 ) }
    dend_9 { pt3dadd( 63.5989, -17.6713, -50.3257, 0.29 ) }
    dend_9 { pt3dadd( 64.179, -17.5453, -50.5017, 0.29 ) }
    dend_9 { pt3dadd( 65.5181, -17.2107, -50.8909, 2.14 ) }
    dend_9 { pt3dadd( 66.2391, -16.998, -51.0887, 2.87 ) }
    dend_9 { pt3dadd( 66.7027, -16.8295, -51.1964, 2.87 ) }
    dend_9 { pt3dadd( 67.2901, -16.5721, -51.3051, 2.58 ) }
    dend_9 { pt3dadd( 68.5065, -15.9585, -51.5452, 0.59 ) }
    dend_9 { pt3dadd( 69.3208, -15.5039, -51.7815, 0.59 ) }
    dend_9 { pt3dadd( 69.9814, -15.1128, -52.0253, 0.59 ) }
    dend_9 { pt3dadd( 70.6436, -14.7111, -52.3488, 1.11 ) }
    dend_9 { pt3dadd( 71.187, -14.3677, -52.6653, 1.11 ) }
    dend_9 { pt3dadd( 72.102, -13.7672, -53.2705, 0.81 ) }
    dend_9 { pt3dadd( 73.0982, -13.0982, -53.984, 0.52 ) }
    dend_9 { pt3dadd( 73.5587, -12.7717, -54.3331, 0.37 ) }
    dend_9 { pt3dadd( 74.5113, -12.0422, -55.1218, 0.74 ) }
    dend_9 { pt3dadd( 74.9803, -11.6625, -55.5332, 0.88 ) }
    dend_9 { pt3dadd( 75.4016, -11.2912, -55.8944, 0.52 ) }
    dend_9 { pt3dadd( 75.8511, -10.8644, -56.2447, 0.29 ) }
    dend_9 { pt3dadd( 76.3934, -10.3017, -56.6407, 0.29 ) }
    dend_9 { pt3dadd( 77.4138, -9.25597, -57.2703, 1.03 ) }
    dend_9 { pt3dadd( 77.9243, -8.76043, -57.5388, 1.55 ) }
    dend_9 { pt3dadd( 78.5243, -8.21757, -57.8454, 2.14 ) }
    dend_9 { pt3dadd( 79.0682, -7.76105, -58.1132, 2.21 ) }
    dend_9 { pt3dadd( 80.127, -6.93225, -58.6088, 0.29 ) }
    dend_9 { pt3dadd( 81.1772, -6.18592, -59.0536, 0.29 ) }
    dend_9 { pt3dadd( 82.0939, -5.56242, -59.4041, 0.29 ) }
    dend_9 { pt3dadd( 82.9794, -5.00599, -59.7245, 1.4 ) }
    dend_9 { pt3dadd( 83.4996, -4.71344, -59.9024, 1.99 ) }
    dend_9 { pt3dadd( 83.7949, -4.56457, -59.9929, 2.21 ) }
    dend_9 { pt3dadd( 84.4546, -4.28171, -60.1526, 1.77 ) }
    dend_9 { pt3dadd( 85.1628, -3.99237, -60.2799, 0.52 ) }
    dend_9 { pt3dadd( 85.9603, -3.66549, -60.363, 0.44 ) }
    dend_9 { pt3dadd( 86.6781, -3.34627, -60.4093, 0.52 ) }
    dend_9 { pt3dadd( 87.3338, -3.03577, -60.4403, 0.74 ) }
    dend_9 { pt3dadd( 87.9061, -2.74849, -60.4906, 0.74 ) }
    dend_9 { pt3dadd( 88.7137, -2.30483, -60.6249, 0.22 ) }
    dend_9 { pt3dadd( 89.5316, -1.78256, -60.8209, 1.62 ) }
    dend_9 { pt3dadd( 89.9724, -1.45849, -60.9613, 1.99 ) }
    dend_9 { pt3dadd( 90.1138, -1.35351, -61.0162, 2.43 ) }
    dend_9 { pt3dadd( 91.1907, -0.576476, -61.4793, 0.52 ) }
    dend_9 { pt3dadd( 92.0744, 0.0150215, -61.8669, 0.29 ) }
    dend_9 { pt3dadd( 92.8365, 0.471168, -62.2121, 0.22 ) }
    dend_9 { pt3dadd( 93.2677, 0.69923, -62.3979, 0.22 ) }
    dend_9 { pt3dadd( 93.8887, 0.963853, -62.6412, 0.22 ) }
    dend_9 { pt3dadd( 94.6068, 1.20918, -62.891, 0.22 ) }
    dend_9 { pt3dadd( 95.3229, 1.38156, -63.0869, 0.88 ) }
    dend_9 { pt3dadd( 95.9592, 1.47585, -63.232, 1.18 ) }
    dend_9 { pt3dadd( 96.6339, 1.54245, -63.3847, 1.18 ) }
    dend_9 { pt3dadd( 97.5395, 1.62659, -63.6075, 0.29 ) }
    dend_9 { pt3dadd( 98.4499, 1.71522, -63.8472, 0.29 ) }
    dend_9 { pt3dadd( 99.3966, 1.80002, -64.1097, 0.29 ) }
    dend_9 { pt3dadd( 100.562, 1.91562, -64.4906, 0.29 ) }
    dend_9 { pt3dadd( 101.638, 2.03349, -64.8604, 1.92 ) }
    dend_9 { pt3dadd( 102.435, 2.12552, -65.1481, 2.87 ) }
    dend_9 { pt3dadd( 102.879, 2.19003, -65.3046, 3.17 ) }
    dend_9 { pt3dadd( 103.702, 2.32244, -65.5764, 2.5 ) }
    dend_9 { pt3dadd( 105.65, 2.66891, -66.1876, 0.37 ) }
    dend_9 { pt3dadd( 106.373, 2.80082, -66.3982, 1.03 ) }
    dend_9 { pt3dadd( 106.947, 2.90741, -66.5408, 1.03 ) }
    dend_9 { pt3dadd( 108.423, 3.19361, -66.8453, 0.29 ) }
    dend_9 { pt3dadd( 109.277, 3.3623, -67.0067, 0.81 ) }
    dend_9 { pt3dadd( 109.797, 3.46145, -67.0981, 0.81 ) }
    dend_9 { pt3dadd( 110.892, 3.65871, -67.2706, 0.29 ) }
    dend_9 { pt3dadd( 111.34, 3.7294, -67.3522, 0.37 ) }
    dend_9 { pt3dadd( 112.218, 3.85667, -67.5421, 0.37 ) }
    dend_9 { pt3dadd( 113.098, 3.97144, -67.7566, 0.81 ) }
    dend_9 { pt3dadd( 113.512, 4.0274, -67.8588, 0.81 ) }
    dend_9 { pt3dadd( 114.691, 4.20326, -68.1387, 0.29 ) }
    dend_9 { pt3dadd( 115.799, 4.33974, -68.3698, 0.29 ) }
    dend_9 { pt3dadd( 116.534, 4.40618, -68.5406, 1.47 ) }
    dend_9 { pt3dadd( 117.049, 4.44963, -68.6823, 1.84 ) }
    dend_9 { pt3dadd( 117.551, 4.49858, -68.851, 2.14 ) }
    dend_9 { pt3dadd( 119.762, 4.75099, -69.7517, 0.22 ) }
    dend_9 { pt3dadd( 121.084, 4.95855, -70.4011, 0.22 ) }
    dend_9 { pt3dadd( 122.444, 5.2589, -71.2095, 0.81 ) }
    dend_9 { pt3dadd( 123.156, 5.41897, -71.7148, 0.81 ) }
    dend_9 { pt3dadd( 124.237, 5.66523, -72.5785, 0.22 ) }
    dend_9 { pt3dadd( 124.751, 5.79549, -73.0216, 0.37 ) }
    dend_9 { pt3dadd( 125.452, 6.00322, -73.7188, 0.29 ) }
    dend_9 { pt3dadd( 126.26, 6.26063, -74.6135, 1.4 ) }
    dend_9 { pt3dadd( 127.893, 6.74351, -76.4546, 0.22 ) }
    dend_9 { pt3dadd( 128.684, 6.95996, -77.3568, 0.22 ) }
    dend_9 { pt3dadd( 129.271, 7.11289, -78.0272, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_9 { pt3dadd( 130.483, 7.40229, -79.3872, 1.69 ) }
    dend_9 { pt3dadd( 131.505, 7.61965, -80.5168, 2.65 ) }
    dend_9 { pt3dadd( 131.882, 7.70206, -80.929, 2.87 ) }
    dend_9 { pt3dadd( 133.403, 8.13426, -82.5576, 0.22 ) }
    dend_9 { pt3dadd( 133.856, 8.25059, -83.01, 0.29 ) }
    dend_9 { pt3dadd( 134.29, 8.33246, -83.3743, 0.22 ) }
    dend_9 { pt3dadd( 134.594, 8.37282, -83.5615, 0.88 ) }
    dend_9 { pt3dadd( 135.252, 8.4264, -83.8835, 1.11 ) }
    dend_9 { pt3dadd( 136.476, 8.44914, -84.4321, 0.29 ) }
    dend_9 { pt3dadd( 137.225, 8.4128, -84.741, 0.22 ) }
    dend_9 { pt3dadd( 138.017, 8.37201, -85.0829, 0.22 ) }
    dend_9 { pt3dadd( 139.002, 8.31496, -85.4946, 1.33 ) }
    dend_9 { pt3dadd( 139.556, 8.29712, -85.7265, 1.33 ) }
    dend_9 { pt3dadd( 140.633, 8.27609, -86.1949, 0.52 ) }
    dend_9 { pt3dadd( 141.668, 8.2722, -86.6819, 0.44 ) }
    dend_9 { pt3dadd( 142.786, 8.3051, -87.2481, 0.29 ) }
    dend_9 { pt3dadd( 143.714, 8.36495, -87.7212, 0.29 ) }
    dend_9 { pt3dadd( 144.592, 8.44211, -88.1407, 0.29 ) }
    dend_9 { pt3dadd( 145.818, 8.58759, -88.7041, 0.29 ) }
    dend_9 { pt3dadd( 146.385, 8.67254, -88.9295, 1.69 ) }
    dend_9 { pt3dadd( 147.28, 8.84694, -89.2252, 1.92 ) }
    dend_9 { pt3dadd( 148.818, 9.18449, -89.6359, 0.22 ) }
    dend_9 { pt3dadd( 149.589, 9.37494, -89.8153, 0.74 ) }
    dend_9 { pt3dadd( 150.248, 9.53786, -89.9387, 0.74 ) }
    dend_9 { pt3dadd( 151.843, 9.97829, -90.1619, 0.22 ) }
    dend_9 { pt3dadd( 153.08, 10.3402, -90.3053, 0.22 ) }
    dend_9 { pt3dadd( 154.27, 10.7076, -90.4613, 0.22 ) }
    dend_9 { pt3dadd( 155.269, 11.0302, -90.6207, 1.62 ) }
    dend_9 { pt3dadd( 155.534, 11.1161, -90.6736, 2.28 ) }
    dend_9 { pt3dadd( 156.208, 11.3254, -90.8422, 0.81 ) }
    dend_9 { pt3dadd( 156.694, 11.4729, -91.0102, 0.37 ) }
    dend_9 { pt3dadd( 158.157, 11.8977, -91.5628, 0.22 ) }
    dend_9 { pt3dadd( 158.583, 12.0283, -91.7394, 0.59 ) }
    dend_9 { pt3dadd( 158.733, 12.0687, -91.8018, 0.59 ) }
    dend_9 { pt3dadd( 159.736, 12.3123, -92.2344, 0.29 ) }
    dend_9 { pt3dadd( 160.184, 12.406, -92.4346, 0.66 ) }
    dend_9 { pt3dadd( 161.651, 12.695, -93.0884, 0.22 ) }
    dend_9 { pt3dadd( 162.506, 12.8548, -93.4505, 0.66 ) }
    dend_9 { pt3dadd( 163.497, 13.0334, -93.8855, 0.22 ) }
    dend_9 { pt3dadd( 164.255, 13.1681, -94.2231, 1.25 ) }
    dend_9 { pt3dadd( 164.658, 13.2307, -94.4037, 1.25 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 41/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 27.9314, -15.482, -37.0704, 2.87 ) }
    dend_8 { pt3dadd( 29.4612, -20.9118, -46.318, 2.87 ) }
    dend_8 { pt3dadd( 29.5793, -21.3152, -46.9167, 2.87 ) }
    dend_8 { pt3dadd( 30.4439, -24.0319, -50.5767, 0.37 ) }
    dend_8 { pt3dadd( 31.0821, -25.9267, -52.8896, 0.29 ) }
    dend_8 { pt3dadd( 31.5637, -27.3226, -54.4553, 0.66 ) }
    dend_8 { pt3dadd( 31.7268, -27.7873, -54.9368, 0.66 ) }
    dend_8 { pt3dadd( 32.0415, -28.661, -55.4726, 0.29 ) }
    dend_8 { pt3dadd( 32.6101, -30.1878, -56.3959, 1.18 ) }
    dend_8 { pt3dadd( 33.0272, -31.3311, -57.0401, 1.18 ) }
    dend_8 { pt3dadd( 33.6182, -33.1428, -58.0795, 0.44 ) }
    dend_8 { pt3dadd( 33.9749, -34.4921, -58.8719, 0.66 ) }
    dend_8 { pt3dadd( 34.2376, -35.7059, -59.6348, 0.29 ) }
    dend_8 { pt3dadd( 34.5482, -37.5102, -60.8284, 2.21 ) }
    dend_8 { pt3dadd( 34.6347, -38.3251, -61.3811, 3.39 ) }
    dend_8 { pt3dadd( 34.6998, -40.2533, -62.8728, 0.74 ) }
    dend_8 { pt3dadd( 34.618, -41.6584, -64.0913, 0.29 ) }
    dend_8 { pt3dadd( 34.4821, -42.6525, -65.0645, 1.03 ) }
    dend_8 { pt3dadd( 34.3925, -43.0526, -65.5129, 1.03 ) }
    dend_8 { pt3dadd( 34.1495, -43.8562, -66.5713, 0.81 ) }
    dend_8 { pt3dadd( 33.616, -45.43, -68.8949, 0.29 ) }
    dend_8 { pt3dadd( 33.2187, -46.5427, -70.7732, 0.59 ) }
    dend_8 { pt3dadd( 33.1202, -46.8455, -71.2807, 0.59 ) }
    dend_8 { pt3dadd( 32.6266, -48.4609, -73.9151, 0.22 ) }
    dend_8 { pt3dadd( 32.2688, -49.6692, -75.8467, 1.47 ) }
    dend_8 { pt3dadd( 32.1233, -50.207, -76.6665, 1.84 ) }
    dend_8 { pt3dadd( 31.6661, -51.7989, -78.9515, 0.29 ) }
    dend_8 { pt3dadd( 31.1758, -53.3869, -81.1007, 0.22 ) }
    dend_8 { pt3dadd( 30.9678, -54.0032, -81.8842, 0.81 ) }
    dend_8 { pt3dadd( 30.799, -54.466, -82.412, 0.81 ) }
    dend_8 { pt3dadd( 29.9293, -56.6028, -84.5951, 0.22 ) }
    dend_8 { pt3dadd( 29.3535, -57.8694, -85.8063, 0.96 ) }
    dend_8 { pt3dadd( 29.0024, -58.5558, -86.4354, 0.96 ) }
    dend_8 { pt3dadd( 28.5793, -59.3255, -87.1707, 0.96 ) }
    dend_8 { pt3dadd( 28.0336, -60.3304, -88.0939, 0.22 ) }
    dend_8 { pt3dadd( 27.7927, -60.8341, -88.4945, 0.22 ) }
    dend_8 { pt3dadd( 27.1457, -62.4125, -89.5708, 2.21 ) }
    dend_8 { pt3dadd( 26.8975, -63.1421, -90.017, 2.87 ) }
    dend_8 { pt3dadd( 26.6712, -63.9076, -90.4512, 3.39 ) }
    dend_8 { pt3dadd( 26.1061, -66.1085, -91.6074, 0.37 ) }
    dend_8 { pt3dadd( 25.7124, -67.9017, -92.5065, 0.37 ) }
    dend_8 { pt3dadd( 25.5276, -68.9801, -93.0194, 0.44 ) }
    dend_8 { pt3dadd( 25.4791, -69.3872, -93.194, 0.44 ) }
    dend_8 { pt3dadd( 25.3785, -70.525, -93.666, 0.22 ) }
    dend_8 { pt3dadd( 25.3685, -70.9929, -93.8705, 0.66 ) }
    dend_8 { pt3dadd( 25.411, -71.4954, -94.1046, 0.66 ) }
    dend_8 { pt3dadd( 25.6452, -73.1325, -94.8573, 0.22 ) }
    dend_8 { pt3dadd( 25.7813, -73.8124, -95.1462, 0.52 ) }
    dend_8 { pt3dadd( 25.8888, -74.2619, -95.3375, 0.52 ) }
    dend_8 { pt3dadd( 26.333, -76.0018, -95.9588, 0.22 ) }
    dend_8 { pt3dadd( 26.5518, -76.8413, -96.2113, 0.22 ) }
    dend_8 { pt3dadd( 26.7484, -77.545, -96.3859, 0.88 ) }
    dend_8 { pt3dadd( 26.9358, -78.2514, -96.5191, 1.18 ) }
    dend_8 { pt3dadd( 27.1081, -78.9791, -96.6473, 1.18 ) }
    dend_8 { pt3dadd( 27.5618, -81.0302, -97.0188, 0.22 ) }
    dend_8 { pt3dadd( 27.7161, -81.7965, -97.1612, 0.52 ) }
    dend_8 { pt3dadd( 27.8368, -82.4329, -97.2928, 0.52 ) }
    dend_8 { pt3dadd( 28.3151, -84.9713, -97.9214, 0.22 ) }
    dend_8 { pt3dadd( 28.6606, -86.7688, -98.4775, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( 28.7971, -87.4399, -98.73, 0.37 ) }
    dend_8 { pt3dadd( 29.0816, -88.8129, -99.3847, 0.37 ) }
    dend_8 { pt3dadd( 29.309, -89.9146, -99.9672, 0.37 ) }
    dend_8 { pt3dadd( 29.5648, -91.2372, -100.72, 1.69 ) }
    dend_8 { pt3dadd( 29.7849, -92.4675, -101.494, 2.28 ) }
    dend_8 { pt3dadd( 29.8809, -93.0709, -101.89, 2.28 ) }
    dend_8 { pt3dadd( 30.18, -95.2615, -103.38, 0.22 ) }
    dend_8 { pt3dadd( 30.2708, -96.0494, -103.941, 0.37 ) }
    dend_8 { pt3dadd( 30.3296, -96.7818, -104.493, 0.22 ) }
    dend_8 { pt3dadd( 30.3455, -97.7367, -105.206, 0.22 ) }
    dend_8 { pt3dadd( 30.3028, -98.8086, -105.998, 1.18 ) }
    dend_8 { pt3dadd( 30.2189, -99.5987, -106.59, 1.55 ) }
    dend_8 { pt3dadd( 30.1566, -99.9279, -106.852, 1.55 ) }
    dend_8 { pt3dadd( 29.6999, -101.875, -108.432, 0.22 ) }
    dend_8 { pt3dadd( 29.4041, -102.995, -109.373, 0.22 ) }
    dend_8 { pt3dadd( 29.3108, -103.311, -109.677, 0.59 ) }
    dend_8 { pt3dadd( 29.0443, -104.085, -110.484, 0.59 ) }
    dend_8 { pt3dadd( 28.694, -105.09, -111.635, 0.22 ) }
    dend_8 { pt3dadd( 28.5142, -105.631, -112.304, 0.81 ) }
    dend_8 { pt3dadd( 28.3319, -106.169, -113.028, 0.81 ) }
    dend_8 { pt3dadd( 27.7864, -107.886, -115.589, 0.22 ) }
    dend_8 { pt3dadd( 27.5703, -108.603, -116.727, 0.22 ) }
    dend_8 { pt3dadd( 27.3373, -109.449, -118.184, 0.81 ) }
    dend_8 { pt3dadd( 27.2784, -109.677, -118.592, 0.81 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 24/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 27.4194, -60.5745, -4.54888, 0.29 ) }
    dend_4 { pt3dadd( 25.8484, -63.0454, -7.68632, 0.29 ) }
    dend_4 { pt3dadd( 25.6698, -63.3285, -8.01621, 0.44 ) }
    dend_4 { pt3dadd( 25.2489, -64.0109, -8.78398, 0.29 ) }
    dend_4 { pt3dadd( 24.9129, -64.4996, -9.30565, 0.29 ) }
    dend_4 { pt3dadd( 24.5871, -64.9438, -9.75976, 0.81 ) }
    dend_4 { pt3dadd( 24.3499, -65.2555, -10.0415, 0.96 ) }
    dend_4 { pt3dadd( 24.0265, -65.6631, -10.2815, 0.96 ) }
    dend_4 { pt3dadd( 23.096, -66.8514, -10.8759, 0.52 ) }
    dend_4 { pt3dadd( 22.381, -67.7898, -11.2625, 0.29 ) }
    dend_4 { pt3dadd( 22.001, -68.2885, -11.4434, 0.29 ) }
    dend_4 { pt3dadd( 21.2268, -69.3039, -11.7441, 0.37 ) }
    dend_4 { pt3dadd( 20.7572, -69.9208, -11.9038, 0.66 ) }
    dend_4 { pt3dadd( 20.3648, -70.4363, -12.0064, 0.66 ) }
    dend_4 { pt3dadd( 19.7622, -71.2276, -12.1178, 0.29 ) }
    dend_4 { pt3dadd( 19.3132, -71.8509, -12.22, 0.96 ) }
    dend_4 { pt3dadd( 18.9257, -72.393, -12.3372, 1.25 ) }
    dend_4 { pt3dadd( 18.7881, -72.5861, -12.3938, 1.25 ) }
    dend_4 { pt3dadd( 18.3099, -73.295, -12.6146, 0.74 ) }
    dend_4 { pt3dadd( 17.829, -74.0873, -12.8622, 0.29 ) }
    dend_4 { pt3dadd( 17.6453, -74.4282, -12.9736, 0.29 ) }
    dend_4 { pt3dadd( 17.2601, -75.2177, -13.249, 0.81 ) }
    dend_4 { pt3dadd( 17.1088, -75.5454, -13.3639, 1.11 ) }
    dend_4 { pt3dadd( 16.5963, -76.7411, -13.7656, 0.29 ) }
    dend_4 { pt3dadd( 16.1923, -77.8102, -14.1044, 0.59 ) }
    dend_4 { pt3dadd( 15.9933, -78.4069, -14.2726, 0.74 ) }
    dend_4 { pt3dadd( 15.8543, -78.8497, -14.384, 0.52 ) }
    dend_4 { pt3dadd( 15.6548, -79.55, -14.5365, 0.29 ) }
    dend_4 { pt3dadd( 15.4895, -80.2081, -14.6675, 0.29 ) }
    dend_4 { pt3dadd( 15.4153, -80.5407, -14.7232, 0.29 ) }
    dend_4 { pt3dadd( 15.2754, -81.2621, -14.8172, 0.44 ) }
    dend_4 { pt3dadd( 15.0884, -82.326, -14.9259, 0.44 ) }
    dend_4 { pt3dadd( 14.8097, -83.5678, -15.0468, 1.33 ) }
    dend_4 { pt3dadd( 14.6785, -84.0952, -15.1018, 1.77 ) }
    dend_4 { pt3dadd( 14.4998, -84.7608, -15.1995, 1.99 ) }
    dend_4 { pt3dadd( 14.0594, -86.3317, -15.4615, 0.37 ) }
    dend_4 { pt3dadd( 13.762, -87.3899, -15.6673, 0.29 ) }
    dend_4 { pt3dadd( 13.3083, -89.0857, -16.035, 0.29 ) }
    dend_4 { pt3dadd( 13.0747, -89.983, -16.2414, 0.29 ) }
    dend_4 { pt3dadd( 12.7777, -91.2779, -16.6067, 0.29 ) }
    dend_4 { pt3dadd( 12.5313, -92.5251, -17.0055, 0.29 ) }
    dend_4 { pt3dadd( 12.4021, -93.2443, -17.26, 1.33 ) }
    dend_4 { pt3dadd( 12.2946, -93.9291, -17.5096, 1.77 ) }
    dend_4 { pt3dadd( 12.2357, -94.5818, -17.7515, 1.77 ) }
    dend_4 { pt3dadd( 12.0767, -96.6251, -18.4889, 0.29 ) }
    dend_4 { pt3dadd( 12.0285, -97.3728, -18.7626, 0.66 ) }
    dend_4 { pt3dadd( 12.0058, -97.8924, -18.9695, 0.81 ) }
    dend_4 { pt3dadd( 11.9773, -98.4662, -19.1972, 0.81 ) }
    dend_4 { pt3dadd( 11.879, -99.8595, -19.7642, 0.29 ) }
    dend_4 { pt3dadd( 11.8032, -100.617, -20.1028, 0.88 ) }
    dend_4 { pt3dadd( 11.668, -101.444, -20.4818, 0.59 ) }
    dend_4 { pt3dadd( 11.4157, -102.599, -21.0973, 0.29 ) }
    dend_4 { pt3dadd( 11.2883, -103.072, -21.3755, 0.81 ) }
    dend_4 { pt3dadd( 11.0632, -103.736, -21.8055, 0.81 ) }
    dend_4 { pt3dadd( 10.6555, -104.682, -22.428, 0.29 ) }
    dend_4 { pt3dadd( 10.3119, -105.37, -22.9082, 0.22 ) }
    dend_4 { pt3dadd( 9.47063, -106.865, -23.9743, 1.77 ) }
    dend_4 { pt3dadd( 9.15276, -107.371, -24.3555, 2.36 ) }
    dend_4 { pt3dadd( 8.33657, -108.656, -25.3414, 0.52 ) }
    dend_4 { pt3dadd( 7.86582, -109.381, -25.8968, 0.88 ) }
    dend_4 { pt3dadd( 7.03098, -110.623, -26.8135, 0.29 ) }
    dend_4 { pt3dadd( 6.72282, -111.054, -27.1448, 0.88 ) }
    dend_4 { pt3dadd( 6.43151, -111.405, -27.4016, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 27.4194, -60.5745, -4.54888, 0.44 ) }
    dend_3 { pt3dadd( 28.8998, -61.9871, -4.426, 0.44 ) }
    dend_3 { pt3dadd( 29.8144, -62.9118, -4.3385, 0.44 ) }
    dend_3 { pt3dadd( 30.721, -63.9758, -4.31675, 0.66 ) }
    dend_3 { pt3dadd( 30.9406, -64.2805, -4.32052, 0.66 ) }
    dend_3 { pt3dadd( 31.3402, -64.994, -4.34425, 0.29 ) }
    dend_3 { pt3dadd( 31.7362, -65.8939, -4.40341, 0.29 ) }
    dend_3 { pt3dadd( 31.9227, -66.5144, -4.49166, 0.37 ) }
    dend_3 { pt3dadd( 32.1927, -67.9143, -4.75647, 0.37 ) }
    dend_3 { pt3dadd( 32.3401, -68.7162, -4.94004, 0.37 ) }
    dend_3 { pt3dadd( 32.6001, -69.6011, -5.16606, 0.37 ) }
    dend_3 { pt3dadd( 33.0552, -70.5456, -5.45275, 0.37 ) }
    dend_3 { pt3dadd( 33.7437, -71.5385, -5.76612, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_3 { pt3dadd( 34.1849, -72.0184, -5.91302, 0.74 ) }
    dend_3 { pt3dadd( 34.7382, -72.5212, -6.05475, 0.59 ) }
    dend_3 { pt3dadd( 35.4208, -73.0772, -6.22774, 0.37 ) }
    dend_3 { pt3dadd( 36.361, -73.7807, -6.46015, 0.29 ) }
    dend_3 { pt3dadd( 36.6609, -73.9921, -6.51119, 1.03 ) }
    dend_3 { pt3dadd( 37.3442, -74.4325, -6.55427, 1.33 ) }
    dend_3 { pt3dadd( 37.8191, -74.7127, -6.55938, 1.33 ) }
    dend_3 { pt3dadd( 38.4505, -75.0458, -6.55322, 1.03 ) }
    dend_3 { pt3dadd( 39.1012, -75.3682, -6.53326, 0.52 ) }
    dend_3 { pt3dadd( 40.163, -75.8587, -6.48893, 0.37 ) }
    dend_3 { pt3dadd( 41.1426, -76.3564, -6.47361, 0.29 ) }
    dend_3 { pt3dadd( 42.1352, -76.9484, -6.50496, 1.11 ) }
    dend_3 { pt3dadd( 42.7659, -77.346, -6.55449, 1.62 ) }
    dend_3 { pt3dadd( 43.3902, -77.7429, -6.63853, 1.62 ) }
    dend_3 { pt3dadd( 44.0788, -78.2082, -6.73412, 1.11 ) }
    dend_3 { pt3dadd( 45.186, -79.0771, -6.90516, 0.29 ) }
    dend_3 { pt3dadd( 46.1639, -79.9686, -6.87895, 0.29 ) }
    dend_3 { pt3dadd( 46.6454, -80.416, -6.66944, 0.22 ) }
    dend_3 { pt3dadd( 47.1192, -80.8443, -6.27733, 0.22 ) }
    dend_3 { pt3dadd( 47.9977, -81.5556, -5.33488, 0.59 ) }
    dend_3 { pt3dadd( 48.488, -81.8866, -4.73997, 0.59 ) }
    dend_3 { pt3dadd( 49.6494, -82.5921, -3.28133, 0.37 ) }
    dend_3 { pt3dadd( 50.6504, -83.2302, -1.99783, 1.33 ) }
    dend_3 { pt3dadd( 51.1709, -83.6093, -1.27572, 1.69 ) }
    dend_3 { pt3dadd( 51.6011, -83.9447, -0.600841, 1.69 ) }
    dend_3 { pt3dadd( 52.4519, -84.6051, 0.93437, 0.52 ) }
    dend_3 { pt3dadd( 52.768, -84.8733, 1.64465, 0.37 ) }
    dend_3 { pt3dadd( 52.9881, -85.1448, 2.35065, 0.37 ) }
    dend_3 { pt3dadd( 53.3342, -85.9632, 4.16255, 0.37 ) }
    dend_3 { pt3dadd( 53.4998, -86.6354, 5.39669, 0.37 ) }
    dend_3 { pt3dadd( 53.5593, -87.1079, 6.15129, 0.29 ) }
    dend_3 { pt3dadd( 53.6188, -87.6449, 6.79242, 0.29 ) }
    dend_3 { pt3dadd( 53.823, -88.4142, 7.39354, 0.29 ) }
    dend_3 { pt3dadd( 54.2297, -89.4685, 7.83146, 0.29 ) }
    dend_3 { pt3dadd( 54.5773, -90.2586, 7.9986, 0.74 ) }
    dend_3 { pt3dadd( 54.8627, -90.8801, 8.08353, 0.81 ) }
    dend_3 { pt3dadd( 55.4163, -92.0897, 8.25058, 0.44 ) }
    dend_3 { pt3dadd( 55.9518, -93.3514, 8.4688, 0.44 ) }
    dend_3 { pt3dadd( 56.3808, -94.5707, 8.77999, 0.44 ) }
    dend_3 { pt3dadd( 56.5149, -95.1188, 9.02339, 0.88 ) }
    dend_3 { pt3dadd( 56.5721, -95.5732, 9.34682, 0.88 ) }
    dend_3 { pt3dadd( 56.4856, -96.3135, 10.4817, 0.37 ) }
    dend_3 { pt3dadd( 56.3024, -96.64, 11.4564, 0.59 ) }
    dend_3 { pt3dadd( 56.0934, -96.8167, 12.3119, 0.59 ) }
    dend_3 { pt3dadd( 55.6229, -97.0435, 13.9383, 0.81 ) }
    dend_3 { pt3dadd( 55.3223, -97.1349, 14.8184, 0.81 ) }
    dend_3 { pt3dadd( 54.2243, -97.3335, 17.4599, 0.29 ) }
    dend_3 { pt3dadd( 53.8289, -97.3892, 18.2591, 0.66 ) }
    dend_3 { pt3dadd( 53.6013, -97.4329, 18.6534, 0.81 ) }
    dend_3 { pt3dadd( 53.3352, -97.5143, 19.0522, 0.81 ) }
    dend_3 { pt3dadd( 52.8861, -97.682, 19.6251, 0.52 ) }
    dend_3 { pt3dadd( 52.177, -98.0104, 20.3826, 0.37 ) }
    dend_3 { pt3dadd( 51.1958, -98.4956, 21.0814, 0.66 ) }
    dend_3 { pt3dadd( 50.7317, -98.7456, 21.4156, 0.96 ) }
    dend_3 { pt3dadd( 50.1517, -99.074, 21.8801, 0.96 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_24, dend_16, dend_11, dend_0, dend_31, dend_26, dend_23, dend_17, dend_13, dend_12, dend_6, dend_1, dend_33, dend_32, dend_30, dend_27, dend_20, dend_19, dend_18, dend_15, dend_14, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_29, dend_28, dend_22, dend_21, dend_9, dend_8, dend_4, dend_3]}
    ModelViewParmSubset_2 = new SectionList()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_24, dend_16, dend_11, dend_0, dend_31, dend_26, dend_23, dend_17, dend_13, dend_12, dend_6, dend_1, dend_33, dend_32, dend_30, dend_27, dend_20, dend_19, dend_18, dend_15, dend_14, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_29, dend_28, dend_22, dend_21, dend_9, dend_8, dend_4, dend_3]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_25, dend_24, dend_16, dend_11, dend_0, axon_0, dend_31, dend_26, dend_23, dend_17, dend_13, dend_12, dend_6, dend_1, axon_1, dend_33, dend_32, dend_30, dend_27, dend_20, dend_19, dend_18, dend_15, dend_14, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_29, dend_28, dend_22, dend_21, dend_9, dend_8, dend_4, dend_3]}
    ModelViewParmSubset_5 = new SectionList()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_16 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_23 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_12 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_32 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_19 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_14 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_10 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_29 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_22 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_9 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_25 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_31 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_33 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_13 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_35 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_34 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_17 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_28 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_24 nseg = 11
    dend_16 nseg = 3
    dend_26 nseg = 3
    dend_23 nseg = 11
    dend_12 nseg = 3
    dend_32 nseg = 5
    dend_27 nseg = 7
    dend_20 nseg = 7
    dend_19 nseg = 3
    dend_14 nseg = 11
    dend_10 nseg = 3
    dend_5 nseg = 3
    dend_2 nseg = 3
    dend_29 nseg = 3
    dend_22 nseg = 3
    dend_9 nseg = 7
    dend_8 nseg = 7
    dend_4 nseg = 3
    dend_3 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_NBC_3bb78a3daa_0_0


