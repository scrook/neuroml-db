// Cell: dNAC222_L23_NBC_df01e73cd3_0_0
/*
{
  "id" : "dNAC222_L23_NBC_df01e73cd3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.36225, -9.19447, -1.05898, 3.37379", "-7.5192, -8.3328, -0.983264, 5.59841", "-6.67615, -7.47114, -0.907549, 5.3333", "-5.8331, -6.60947, -0.831834, 5.68073", "-4.99005, -5.7478, -0.756119, 6.02816", "-4.147, -4.88613, -0.680404, 6.37559", "-3.30395, -4.02446, -0.604689, 6.72117", "-2.46089, -3.16279, -0.528974, 6.8656", "-1.61784, -2.30113, -0.453259, 6.93412", "-0.774793, -1.43946, -0.377544, 6.84096", "0.0682572, -0.577789, -0.301829, 6.68704", "0.911308, 0.28388, -0.226114, 6.6716", "1.75436, 1.14555, -0.150399, 6.90842", "2.59741, 2.00722, -0.0746836, 7.45096", "3.44046, 2.86888, 0.00103138, 8.43414", "4.28351, 3.73055, 0.0767464, 9.41614", "5.12656, 4.59222, 0.152461, 10.0048", "5.96961, 5.45389, 0.228176, 10.3326", "6.81266, 6.31556, 0.303891, 9.50982", "7.65571, 7.17723, 0.379606, 7.06842", "8.49876, 8.03889, 0.455321, 3.91086" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "7.80497, 1.15205, 15.3717, 0.83", "8.90457, -1.46911, 15.9566, 0.83", "9.91006, -3.80104, 16.5447, 0.83", "10.8042, -5.69601, 17.0415, 0.83", "12.7294, -9.33561, 18.0262, 1.38", "14.4862, -12.3404, 18.8107, 0.83", "16.1305, -14.9705, 19.432, 0.83", "17.6779, -17.3087, 19.9524, 0.55", "19.452, -19.621, 20.4198, 1.11", "21.2539, -21.5105, 20.6951, 0.55", "22.9638, -22.9071, 20.7081, 0.55", "25.1225, -24.3326, 20.4981, 0.55", "27.1783, -25.4943, 20.0786, 0.55", "28.8603, -26.3531, 19.5323, 0.55", "30.5805, -27.1201, 18.6686, 0.55", "32.5668, -27.9913, 17.3091, 0.55", "33.6891, -28.5271, 16.4014, 1.11", "35.5296, -29.5561, 14.7521, 0.28", "36.6466, -30.3071, 13.6517, 0.55", "39.3524, -32.4155, 10.8687, 0.55", "40.9979, -33.8363, 9.23789, 0.55", "43.0526, -35.7614, 7.28381, 0.28", "44.5001, -37.1989, 6.07434, 0.83", "47.0799, -39.8925, 3.86691, 0.28", "47.8934, -40.7893, 3.16232, 0.55", "49.2406, -42.2507, 2.03034, 0.28", "50.5415, -43.5173, 0.913056, 0.28", "51.5523, -44.41, -0.0635203, 0.83", "55.3007, -47.5626, -3.86577, 0.28", "56.0901, -48.2465, -4.68059, 1.11", "57.7948, -49.7554, -6.46418, 0.28", "58.9767, -50.8644, -7.7701, 0.83", "62.13, -53.8898, -11.173, 0.28", "63.1113, -54.9745, -12.2527, 0.55", "64.2024, -56.4246, -13.3441, 0.28", "64.9485, -57.5473, -14.1455, 1.11", "66.0978, -59.4895, -15.5194, 0.28", "66.736, -60.6388, -16.3538, 0.83", "68.8282, -64.4142, -19.2214, 0.28", "70.7532, -67.7286, -21.9407, 0.28", "71.5744, -69.0772, -23.0568, 0.55", "72.7415, -70.9303, -24.5464, 0.28", "73.1078, -71.5002, -24.9502, 0.55", "74.3233, -73.3384, -26.1076, 0.28", "75.283, -74.7085, -26.7935, 0.83", "76.9797, -77.1154, -27.7304, 0.28", "77.3956, -77.7245, -27.9047, 0.55", "79.2405, -80.4881, -28.4437, 0.28", "80.2111, -81.9752, -28.6794, 0.55", "80.7724, -82.8716, -28.755, 0.28", "81.616, -84.2328, -28.8745, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "10.135, 1.60055, 1.42168, 0.83", "12.047, 0.938987, -0.315568, 0.83", "14.8349, -1.19146, -3.76355, 1.11", "16.8239, -2.93979, -6.22147, 1.11", "20.5304, -6.06588, -10.6215, 1.38", "23.9286, -8.55495, -14.142, 1.11", "26.1739, -10.1616, -16.2628, 1.66", "29.6967, -13.2387, -19.7855, 0.83", "31.2478, -15.045, -21.6023, 0.83", "32.5458, -16.9873, -23.4295, 1.11", "34.8074, -21.3036, -27.4222, 1.11", "35.924, -23.3557, -29.5477, 1.11", "37.5765, -26.5306, -32.9615, 0.83", "38.968, -29.7186, -36.3913, 0.83", "39.8614, -32.7006, -39.6119, 0.83", "40.5398, -36.742, -43.9183, 0.83", "40.6864, -42.9469, -50.9065, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "8.38497, 9.1958, 2.58168, 2.49", "9.86136, 12.0651, 1.66634, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.93503, -6.60895, -4.25832, 0.83", "-12.515, -5.70393, -4.2919, 0.83", "-16.4809, -3.64955, -4.32567, 0.83", "-18.788, -2.10518, -4.36419, 0.55", "-21.9456, 0.251662, -4.42885, 0.83", "-23.8066, 1.76835, -4.46886, 0.83", "-26.6587, 4.23072, -4.52853, 1.11", "-29.0503, 6.61771, -4.579, 0.83", "-30.7364, 8.40351, -4.61059, 0.83", "-32.1238, 9.80169, -4.63122, 1.11", "-35.0523, 12.4385, -4.66808, 0.83", "-37.7264, 14.8848, -4.72283, 0.83", "-40.517, 17.4792, -4.94624, 0.83", "-43.7674, 20.4209, -5.35032, 1.11", "-46.5569, 23.0312, -5.73278, 0.83", "-48.2649, 24.7324, -5.97043, 0.83", "-52.0605, 28.7625, -6.50387, 0.83", "-55.0805, 32.1657, -6.91038, 0.55", "-58.0092, 35.6695, -7.15834, 0.55", "-60.3491, 38.5145, -7.16444, 0.83", "-62.9754, 41.6475, -6.85778, 0.83", "-64.785, 43.7127, -6.54189, 0.55", "-66.6494, 45.6343, -6.06279, 0.83", "-68.6561, 47.8307, -5.27275, 0.55", "-70.9764, 50.6022, -4.20192, 0.55", "-73.7785, 53.6936, -2.90683, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.47503, -10.0702, -6.25832, 2.49", "-7.52058, -15.1666, -6.17909, 2.49", "-8.13043, -18.1392, -6.13288, 1.66", "-8.71889, -21.0076, -6.08829, 2.77", "-9.23385, -23.5177, -6.04926, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.49876, 8.03889, 0.455321, 0.55", "18.9889, 18.7607, 0.455321, 0.55", "29.479, 29.4825, 0.455321, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "40.6864, -42.9469, -50.9065, 0.55", "41.532, -43.4264, -51.8097, 0.55", "42.4077, -44.0585, -52.7548, 0.55", "45.1951, -46.3408, -55.8071, 0.55", "46.3107, -47.2486, -56.9645, 0.55", "47.2906, -47.9713, -57.9079, 0.55", "48.9737, -49.1494, -59.4504, 0.83", "50.6183, -50.2004, -60.8748, 0.83", "52.0315, -51.1094, -62.0997, 0.55", "52.7733, -51.6217, -62.7762, 0.55", "54.0918, -52.437, -64.1868, 0.55", "55.0205, -52.9373, -65.2378, 0.83", "55.654, -53.2913, -66.0226, 0.28", "56.7649, -53.9728, -67.5229, 0.55", "58.2756, -55.0739, -69.7557, 0.83", "59.6325, -56.2383, -71.7737, 0.55", "60.3676, -56.9559, -72.7896, 0.55", "61.4397, -57.9736, -74.009, 0.55", "62.5237, -58.9456, -74.9648, 0.28", "63.26, -59.5578, -75.4275, 0.83", "65.4959, -61.2889, -76.3921, 0.55", "66.9321, -62.2674, -76.8323, 0.28", "68.7798, -63.299, -77.3488, 0.55", "69.8465, -63.8016, -77.6022, 0.28", "70.8362, -64.2436, -77.7952, 0.55", "72.1238, -64.7418, -78.088, 0.28", "73.3579, -65.1519, -78.424, 0.55", "75.3194, -65.7363, -79.0615, 0.28", "76.3949, -66.0633, -79.5177, 0.55", "77.4666, -66.4461, -80.0903, 0.55", "78.8199, -66.798, -81.3662, 0.28", "79.2947, -66.8809, -81.9018, 0.28", "79.9218, -66.9723, -82.7289, 0.55", "81.3097, -67.1511, -84.7423, 0.28", "82.4615, -67.2781, -86.5063, 0.83", "87.0942, -67.737, -93.7737, 0.28", "87.5945, -67.7728, -94.5893, 0.55", "88.6203, -67.8128, -96.2866, 0.55", "89.6469, -67.8457, -98.0163, 0.28", "90.4256, -67.8704, -99.2838, 0.55", "93.0107, -67.986, -103.286, 0.55", "95.2378, -68.3226, -106.4, 0.55", "96.3067, -68.4962, -107.847, 0.28", "97.0501, -68.6078, -108.795, 0.55", "97.7182, -68.7305, -109.639, 0.28", "98.6296, -69.0091, -110.779, 0.55", "99.3665, -69.3811, -111.712, 0.28", "100.157, -69.8859, -112.755, 0.55", "100.826, -70.2896, -113.747, 0.55", "101.831, -70.831, -115.273, 0.28", "102.869, -71.4135, -116.868, 0.55", "104.138, -72.1491, -118.886, 0.28", "104.978, -72.66, -120.241, 0.55", "106.536, -73.7639, -122.828, 0.28", "106.928, -74.0491, -123.418, 0.55", "107.832, -74.6945, -124.643, 0.28", "109.165, -75.6907, -126.288, 0.55", "110.151, -76.4869, -127.37, 0.28", "111.114, -77.3278, -128.388, 0.55", "111.957, -78.1291, -129.287, 0.28", "112.862, -78.9977, -130.332, 0.55", "113.267, -79.3591, -130.847, 0.28", "113.848, -79.779, -131.698, 0.55", "114.614, -80.2936, -133.072, 0.28", "114.898, -80.4692, -133.612, 0.55", "115.11, -80.6011, -134.042, 0.28", "115.905, -81.1438, -135.762, 0.55", "117.859, -82.6113, -140.407, 0.28", "118.25, -82.9295, -141.442, 0.55", "118.592, -83.2811, -142.463, 0.28", "118.847, -83.5905, -143.212, 0.28", "119.191, -84.0573, -144.193, 0.55", "119.869, -85.2223, -146.043, 0.28", "120.451, -86.2374, -147.381, 0.55", "121.057, -87.2186, -148.537, 0.28", "121.856, -88.5018, -149.852, 0.28", "122.884, -90.2568, -151.166, 0.83", "123.706, -91.7706, -151.936, 0.28", "124.98, -94.7029, -152.754, 0.55", "125.74, -96.9721, -153.1, 0.28", "126.005, -97.9344, -153.18, 0.55", "126.655, -101.354, -153.222, 0.28", "126.858, -102.915, -153.163, 0.55", "127.089, -105.165, -153.087, 0.28", "127.173, -106.251, -153.05, 0.28", "127.282, -107.286, -153.122, 0.55", "127.588, -109.214, -153.373, 0.28", "128.067, -111.162, -153.828, 0.28", "128.348, -112.118, -154.089, 0.55", "129.078, -114.18, -154.732, 0.28", "129.709, -115.823, -155.267, 0.55", "130.433, -117.673, -155.936, 0.28", "130.99, -118.847, -156.499, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "40.6864, -42.9469, -50.9065, 1.11", "41.2998, -45.2732, -51.6224, 1.11", "42.1122, -47.854, -52.4861, 0.55", "42.7217, -49.646, -53.0993, 0.55", "43.4927, -51.7929, -53.8082, 0.55", "44.1284, -53.5751, -54.3347, 0.55", "44.8513, -55.5787, -54.9127, 0.83", "45.5715, -57.5116, -55.4335, 0.55", "46.13, -58.8924, -55.7189, 0.28", "46.6286, -60.1046, -55.9276, 0.55", "47.3633, -62.0178, -56.1431, 0.28", "47.7863, -63.1608, -56.2209, 0.55", "48.511, -65.0588, -56.4222, 0.55", "49.1055, -66.3422, -56.6138, 0.28", "49.4244, -66.8852, -56.754, 0.55", "50.2946, -68.1636, -57.2071, 0.28", "51.9339, -70.2789, -58.0412, 0.55", "53.7047, -72.3209, -58.8345, 0.28", "55.0458, -73.6895, -59.4223, 0.83", "56.9578, -75.4836, -60.1734, 0.28", "58.67, -77.0714, -60.856, 0.55", "59.9747, -78.2688, -61.3634, 0.28", "61.8154, -80.0154, -61.9859, 0.55", "63.0501, -81.2326, -62.358, 0.55", "64.6729, -82.9513, -62.876, 0.55", "66.0257, -84.4938, -63.3118, 0.28", "67.1218, -85.802, -63.6591, 0.55", "67.7612, -86.6501, -63.8892, 0.28", "68.4367, -87.6082, -64.1069, 0.55", "68.971, -88.3792, -64.2088, 0.28", "69.8905, -89.6536, -64.2667, 0.55", "70.875, -90.967, -64.182, 0.28", "72.2639, -92.8029, -63.9779, 0.55", "73.3723, -94.2446, -63.755, 0.55", "74.6538, -95.9066, -63.4407, 0.28", "75.6493, -97.2634, -63.1787, 0.55", "76.6234, -98.6501, -62.8999, 0.28", "77.3786, -99.7706, -62.7127, 0.55", "77.7843, -100.413, -62.6048, 0.28", "78.0007, -100.782, -62.5746, 0.55", "78.7935, -102.136, -62.5761, 0.28", "79.8322, -103.875, -62.7374, 0.55", "80.4803, -104.877, -62.8715, 0.28", "81.2116, -105.924, -63.0198, 0.55", "82.2853, -107.356, -63.2368, 0.28", "82.9794, -108.241, -63.2686, 0.55", "83.735, -109.149, -63.2761, 0.28", "84.6544, -110.274, -63.2793, 0.55", "85.5987, -111.39, -63.2717, 0.28", "86.1975, -112.059, -63.2725, 0.83", "88.3537, -114.376, -63.2124, 0.28", "89.9437, -116.017, -63.1746, 0.28", "90.8239, -116.897, -63.1508, 0.55", "91.51, -117.523, -63.1891, 0.28", "92.9579, -118.678, -63.4033, 0.55", "93.9911, -119.378, -63.6002, 0.28", "95.3346, -120.082, -63.905, 0.55", "96.6165, -120.603, -64.1288, 0.28", "98.0952, -121.066, -64.36, 0.55", "99.8649, -121.504, -64.7061, 0.28", "100.971, -121.707, -64.9535, 0.55", "102.96, -121.993, -65.4624, 0.28", "104.382, -122.141, -65.8272, 0.55", "105.547, -122.227, -66.101, 0.28", "107.354, -122.384, -66.3785, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "9.86136, 12.0651, 1.66634, 1.38", "9.54996, 13.1211, -0.379994, 1.38", "9.32209, 14.6955, -3.75335, 1.38", "9.48332, 15.6699, -6.39033, 1.38", "9.80991, 16.9667, -9.86237, 1.11", "10.0571, 17.9346, -12.4277, 1.11", "10.1623, 18.7433, -14.6872, 0.83", "10.1952, 19.3772, -17.0475, 0.83", "9.89826, 20.6626, -22.2545, 1.66", "9.62089, 21.2336, -24.0315, 0.55", "9.46525, 21.5572, -24.6965, 0.55", "8.36423, 23.4418, -27.754, 0.55", "7.76061, 24.2768, -28.9156, 0.28", "6.21558, 26.4027, -31.3326, 0.83", "3.84493, 30.1242, -34.6835, 0.55", "2.91292, 32.0181, -36.2112, 0.55", "2.33693, 33.8064, -37.424, 0.55", "2.19281, 34.7011, -37.9185, 0.55", "2.06776, 36.1755, -38.5505, 0.83", "2.09328, 38.1387, -39.1477, 0.55", "2.19178, 39.5731, -39.3578, 0.55", "2.41613, 41.5741, -39.7006, 0.55", "2.58037, 42.7059, -39.92, 0.55", "2.81392, 44.7051, -40.4029, 0.55", "2.90965, 45.9786, -40.7649, 0.55", "2.99614, 47.6171, -41.4173, 0.83", "3.028, 49.4647, -42.3224, 0.28", "2.99181, 50.7212, -43.0329, 0.83", "2.91912, 52.6206, -44.1537, 0.28", "2.88327, 53.9592, -44.9639, 0.83", "2.80848, 56.7042, -46.6076, 0.28", "2.80332, 57.7651, -47.2541, 0.28", "2.81681, 58.7166, -47.8258, 0.55", "2.96118, 60.9027, -49.2065, 0.83", "3.08165, 62.1059, -49.9576, 0.28", "3.14208, 62.7321, -50.3549, 0.55", "3.32973, 64.8421, -51.6284, 0.28", "3.42624, 66.1341, -52.5017, 0.83", "3.45031, 67.416, -53.4609, 0.28", "3.33868, 68.4202, -54.2967, 0.55", "3.12198, 69.6068, -55.3175, 0.28", "3.01567, 70.0816, -55.7089, 0.55", "2.7012, 71.3012, -56.6473, 0.28", "2.5672, 71.9455, -57.1558, 0.55", "2.21504, 74.1669, -58.847, 0.83", "2.09921, 75.3829, -59.7582, 0.55", "2.11356, 76.6583, -60.6829, 0.28", "2.20216, 77.6495, -61.3883, 0.83", "2.60334, 79.8557, -62.9819, 0.55", "2.87322, 80.9303, -63.7817, 0.28", "3.07052, 81.4661, -64.1842, 0.55", "3.68758, 83.0144, -65.3379, 0.28", "3.84599, 83.3663, -65.5958, 0.55", "4.67726, 85.1612, -66.7901, 0.28", "5.10057, 86.1033, -67.3699, 0.83", "5.94339, 88.0319, -68.4933, 0.28", "6.28871, 88.9045, -68.9286, 0.55", "6.82764, 90.479, -69.5917, 0.28", "7.23104, 91.7125, -70.043, 0.55", "7.8771, 93.9345, -70.7203, 0.28", "8.41071, 95.5386, -71.7, 0.55", "8.96127, 97.1552, -73.051, 0.55", "9.69948, 99.1713, -75.067, 0.28", "10.1057, 100.214, -76.2406, 0.55", "10.5888, 101.385, -77.6843, 0.55", "13.5576, 108.25, -86.7553, 0.55", "13.9444, 109.1, -87.9553, 0.28", "14.1759, 109.584, -88.6658, 0.55", "14.5157, 110.315, -89.7345, 0.28", "14.7286, 110.817, -90.3985, 0.55", "15.1064, 111.903, -91.3566, 0.55", "15.3067, 112.894, -91.5576, 0.28", "15.5704, 114.135, -91.8922, 0.55", "15.7563, 115.1, -92.2113, 0.55", "15.846, 115.658, -92.4464, 0.28", "16.0561, 117.253, -93.245, 0.55", "16.1839, 118.521, -94.0113, 0.55", "16.268, 119.313, -94.5085, 0.28", "16.3201, 119.693, -94.7517, 0.55", "16.5116, 120.939, -95.509, 0.28", "16.6065, 121.682, -95.9258, 0.55", "16.7772, 122.965, -96.6153, 0.28", "17.0771, 125.043, -97.6831, 0.55", "17.5003, 127.623, -98.9567, 0.28", "17.8019, 129.392, -99.7602, 0.55", "18.0329, 130.713, -100.311, 0.55", "18.3427, 132.475, -101.001, 0.55", "18.5893, 133.873, -101.479, 0.28", "18.8529, 135.534, -101.978, 0.55", "19.1631, 137.31, -102.385, 0.55", "19.2215, 137.589, -102.437, 0.28", "19.4034, 138.302, -102.561, 0.28", "20.037, 140.529, -102.918, 0.55", "20.5803, 142.057, -103.235, 0.83", "21.1346, 143.409, -103.494, 0.28", "21.6347, 144.454, -103.676, 0.55", "22.6918, 146.418, -103.777, 0.28", "23.6373, 147.944, -103.68, 0.55", "25.0037, 149.806, -103.328, 0.28", "26.5868, 151.649, -102.764, 0.55", "27.7378, 152.789, -102.299, 0.55", "30.2812, 155.135, -101.081, 0.28", "31.1706, 155.887, -100.561, 0.28", "31.9258, 156.468, -100.069, 0.55", "33.1278, 157.31, -99.2386, 0.28", "35.1537, 158.506, -98.2137, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "9.86136, 12.0651, 1.66634, 0.83", "11.2737, 15.0967, 0.056102, 0.83", "12.8951, 17.8795, -1.44538, 0.83", "15.113, 20.725, -3.10688, 0.83", "17.234, 23.0115, -4.70997, 1.38", "18.7966, 24.6721, -5.9826, 0.83", "20.1277, 26.0339, -7.25233, 0.55", "22.3913, 28.1723, -9.70788, 0.55", "24.784, 30.2355, -12.3239, 0.83", "27.3527, 32.1418, -15.095, 0.83", "29.6131, 33.6043, -17.6059, 0.83", "33.2715, 35.9157, -21.9064, 0.55", "33.9423, 36.4029, -22.8544, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-73.7785, 53.6936, -2.90683, 0.55", "-75.1503, 55.364, -3.80057, 0.55", "-76.489, 57.0355, -4.82431, 0.55", "-77.4359, 58.1326, -5.6932, 0.55", "-78.8776, 59.7156, -7.21855, 0.55", "-79.7296, 60.637, -8.19791, 0.28", "-80.637, 61.5972, -9.22225, 0.83", "-82.3174, 63.2456, -11.3729, 0.55", "-83.5349, 64.4601, -13.1404, 0.55", "-84.409, 65.3597, -14.4924, 0.28", "-85.2064, 66.2014, -15.7108, 0.55", "-86.2857, 67.3478, -17.2205, 0.55", "-87.7679, 69.0499, -19.2338, 0.55", "-88.7736, 70.4323, -20.4978, 0.28", "-89.6018, 71.805, -21.4031, 0.55", "-90.2894, 73.0776, -22.043, 0.28", "-90.9953, 74.5621, -22.6385, 0.55", "-91.2816, 75.2064, -22.8382, 0.55", "-91.7565, 76.2555, -23.0796, 0.55", "-92.4251, 77.6584, -23.4101, 0.28", "-93.0697, 79.0102, -23.7772, 0.55", "-93.6968, 80.2383, -24.1591, 0.28", "-94.8484, 82.2394, -24.8946, 0.55", "-95.6165, 83.4381, -25.3868, 0.28", "-95.7615, 83.6475, -25.4936, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-73.7785, 53.6936, -2.90683, 0.55", "-75.6222, 55.916, -1.95981, 0.55", "-76.8743, 57.2681, -1.43853, 0.55", "-79.6468, 59.8377, -0.415458, 0.55", "-81.2449, 61.1116, 0.0704242, 0.83", "-83.0169, 62.296, 0.548605, 0.55", "-85.661, 64.0634, 1.26216, 0.55", "-87.2005, 65.0751, 1.70871, 0.55", "-90.349, 66.8632, 2.5414, 0.83", "-93.0904, 68.0429, 3.10481, 0.83", "-96.585, 69.3962, 3.61332, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.23385, -23.5177, -6.04926, 2.49", "-8.50736, -26.3617, -6.2241, 2.49", "-7.93174, -28.615, -6.36263, 1.38", "-7.84723, -28.9458, -6.38297, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.23385, -23.5177, -6.04926, 1.38", "-8.75853, -28.1118, -0.426591, 1.38", "-8.57379, -29.8974, 1.75873, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "29.479, 29.4825, 0.455321, 0.524975", "39.9692, 40.2043, 0.455321, 0.524975", "50.4593, 50.9261, 0.455321, 0.524975" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "33.9423, 36.4029, -22.8544, 0.55", "34.6158, 37.8397, -23.0329, 0.55", "35.5745, 39.849, -23.3831, 0.83", "36.4165, 41.5688, -23.8179, 0.55", "37.6709, 43.9896, -24.4885, 0.28", "39.0129, 46.5073, -25.1961, 0.55", "40.845, 49.8016, -26.1249, 0.55", "43.2872, 53.8444, -27.3038, 0.55", "45.2697, 56.8885, -28.1777, 0.55", "46.4457, 58.5764, -28.634, 0.83", "47.5164, 59.9524, -28.963, 0.28", "48.2834, 60.8834, -29.1643, 0.28", "49.9962, 62.7176, -29.4659, 0.55", "52.1905, 64.5805, -29.5909, 0.83", "53.9432, 65.9363, -29.5883, 0.83", "55.6449, 67.1817, -29.5869, 0.28", "56.7687, 68.0099, -29.593, 0.55", "58.7618, 69.5462, -29.6431, 0.55", "61.4781, 71.67, -29.7587, 0.55", "63.8895, 73.6684, -29.895, 0.83", "66.2513, 75.8906, -30.1415, 0.28", "68.2003, 78.0244, -30.431, 0.55", "68.9719, 78.9796, -30.5978, 0.55", "70.2709, 80.8176, -30.9616, 0.55", "72.1565, 83.7593, -31.5731, 0.83", "73.8133, 86.3573, -32.1807, 0.28", "74.9801, 88.1692, -32.614, 0.55", "77.2662, 91.5096, -33.4683, 0.55", "78.3974, 93.1078, -33.8943, 0.55", "80.1671, 95.5527, -34.6341, 0.83", "82.5452, 98.691, -35.6683, 0.28", "84.5993, 101.244, -36.5208, 0.55", "87.0491, 104.208, -37.5549, 0.28", "88.3209, 105.8, -38.1425, 0.55", "89.6259, 107.433, -38.8047, 0.28", "89.8873, 107.749, -38.946, 0.55", "90.9145, 108.953, -39.5203, 0.28", "91.8923, 110.055, -40.0742, 0.55", "93.2342, 111.53, -40.7418, 0.28", "94.5952, 112.959, -41.3135, 0.55", "96.6839, 115.029, -42.0433, 0.55", "98.1799, 116.515, -42.5266, 0.28", "99.3341, 117.69, -42.8472, 0.55", "100.468, 118.875, -43.0938, 0.28", "102.005, 120.54, -43.3383, 0.55", "104.216, 123.011, -43.4985, 0.28", "105.242, 124.227, -43.488, 0.28", "107.464, 126.994, -43.298, 0.55", "108.981, 128.887, -43.1538, 0.28", "110.335, 130.564, -43.0873, 0.55", "111.785, 132.372, -43.0588, 0.28", "112.599, 133.398, -43.062, 0.55", "113.543, 134.562, -43.1111, 0.28", "115.158, 136.665, -43.3696, 0.55", "116.44, 138.455, -43.6665, 0.28", "118.098, 141.022, -44.2133, 0.55", "118.975, 142.535, -44.6054, 0.28", "119.714, 143.854, -44.963, 0.55", "120.804, 145.907, -45.5102, 0.28", "121.874, 148.065, -46.0275, 0.55", "122.925, 150.217, -46.4814, 0.28", "123.688, 151.731, -46.8219, 0.55", "124.799, 153.799, -47.2726, 0.28", "125.371, 154.755, -47.4328, 0.55", "126.712, 156.922, -47.738, 0.55", "128.239, 159.428, -47.9114, 0.55", "129.696, 161.751, -47.9955, 0.28", "130.765, 163.441, -48.0119, 0.55", "133.323, 167.639, -47.9158, 0.28", "134.337, 169.282, -47.8444, 0.55", "136.201, 172.325, -47.5615, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "33.9423, 36.4029, -22.8544, 0.55", "35.0422, 37.7334, -23.541, 0.55", "35.9173, 38.8215, -24.0273, 0.55", "36.3383, 39.3531, -24.3605, 0.28", "36.6124, 39.7449, -24.6471, 0.83", "37.1966, 40.6703, -25.3306, 0.55", "37.487, 41.2122, -25.7376, 0.28", "38.1879, 42.9071, -27.0516, 0.83", "39.0359, 45.2012, -29.0156, 0.55", "39.4197, 46.237, -29.9649, 0.28", "39.5722, 46.7146, -30.4991, 0.83", "39.9462, 48.0195, -32.0919, 0.55", "40.2902, 49.4167, -33.796, 0.55", "40.4611, 50.3919, -34.9623, 0.28", "40.5822, 51.1457, -35.8085, 0.83", "41.1957, 54.5188, -39.4099, 0.55", "41.3675, 55.4214, -40.325, 0.55", "41.5492, 56.3551, -41.1712, 0.83", "41.8546, 58.1176, -42.5347, 0.55", "42.0158, 59.0282, -43.1498, 0.83", "42.2637, 60.2682, -43.8744, 0.28", "42.4504, 61.0604, -44.1931, 0.55", "42.7906, 62.5415, -44.8011, 0.28", "42.9539, 63.198, -45.079, 0.55", "43.2971, 64.4121, -45.555, 0.28", "43.5083, 65.1075, -45.8572, 0.55", "43.901, 66.3497, -46.419, 0.28", "44.3636, 67.6916, -47.103, 0.83", "45.1109, 69.6481, -48.1795, 0.28", "45.45, 70.4484, -48.6659, 0.83", "46.2327, 72.1437, -49.7625, 0.28", "46.3521, 72.3918, -49.932, 0.55", "47.0034, 73.5052, -50.7257, 0.28", "47.3047, 73.997, -51.116, 0.83", "48.0122, 75.1421, -52.1202, 0.28", "48.5225, 75.9468, -52.8873, 0.55", "49.3677, 77.2673, -54.18, 0.28", "50.2792, 78.6952, -55.5753, 0.28", "51.5333, 80.6792, -57.5107, 0.83", "52.5101, 82.1545, -58.9258, 0.55", "53.2668, 83.2497, -59.9293, 0.28", "53.6389, 83.7474, -60.375, 0.55", "54.3914, 84.7169, -61.2039, 0.28", "54.7565, 85.2236, -61.6378, 0.55", "55.8873, 86.8752, -63.0723, 0.28", "56.6543, 87.9861, -64.1492, 0.55", "57.7592, 89.546, -65.8366, 0.28", "58.2581, 90.2353, -66.6615, 0.55", "59.7816, 92.379, -69.421, 1.38", "61.1006, 94.2533, -71.9173, 0.28", "61.8138, 95.2675, -73.3281, 0.55", "62.437, 96.1349, -74.5415, 0.28", "62.9294, 96.8476, -75.4675, 0.28", "63.2716, 97.3438, -76.0563, 0.55", "63.7629, 98.0723, -76.774, 0.55", "64.3658, 99.1507, -77.7182, 0.28", "64.604, 99.7092, -78.2131, 0.55", "65.1207, 101.133, -79.4453, 0.28", "65.4284, 102.029, -80.2212, 0.55", "65.8077, 103.286, -81.3364, 0.28", "66.0669, 104.313, -82.2181, 0.55", "66.4996, 106.455, -83.9461, 0.28", "66.7439, 107.716, -84.8801, 0.28", "67.0924, 109.348, -86.0177, 0.55", "67.4882, 111.096, -87.1758, 0.28", "67.7164, 112.157, -87.8682, 0.28", "68.0025, 113.199, -88.5285, 0.28", "68.3197, 114.225, -89.1628, 0.55", "68.7209, 115.314, -89.8706, 0.55", "69.4339, 116.948, -90.948, 0.28", "69.8973, 117.796, -91.5255, 0.83", "70.9039, 119.367, -92.5877, 0.55", "71.619, 120.376, -93.2206, 0.28", "72.2198, 121.204, -93.7092, 0.55", "73.1273, 122.414, -94.2947, 0.28", "74.1034, 123.527, -94.7517, 0.55", "75.2035, 124.65, -95.1562, 0.28", "76.0454, 125.409, -95.4163, 0.55", "77.4058, 126.496, -95.7659, 0.28", "78.3827, 127.186, -95.9764, 0.55", "80.2238, 128.328, -96.2845, 0.28", "80.7439, 128.604, -96.3692, 0.55", "82.9694, 129.529, -96.7505, 0.28", "83.5267, 129.723, -96.8364, 0.55", "84.716, 130.052, -96.9922, 0.28", "85.278, 130.182, -97.0918, 0.55", "86.1693, 130.317, -97.2403, 0.28", "87.1234, 130.376, -97.4142, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-95.7615, 83.6475, -25.4936, 0.28", "-95.9499, 85.2072, -25.3763, 0.28", "-96.2568, 87.12, -25.2104, 0.83", "-96.6527, 90.0708, -24.9964, 0.28", "-96.7221, 90.7311, -24.9932, 0.55", "-96.8275, 91.8889, -25.0276, 0.28", "-96.9121, 92.8626, -25.0779, 0.55", "-96.9977, 94.027, -25.2174, 0.28", "-97.0789, 95.6613, -25.4916, 0.55", "-97.1996, 97.6207, -25.9346, 0.55", "-97.3172, 99.0769, -26.3106, 0.28", "-97.713, 102.822, -27.24, 0.55", "-98.07, 105.178, -27.7464, 0.28", "-98.1983, 105.792, -27.8512, 0.55", "-98.9148, 108.484, -28.1515, 0.28", "-99.4803, 110.399, -28.2363, 0.55", "-100.089, 112.371, -28.2236, 0.28", "-100.864, 114.849, -28.1152, 0.55", "-101.449, 116.885, -27.9471, 0.28", "-101.721, 118.032, -27.8501, 0.55", "-101.951, 119.182, -27.7592, 0.28", "-102.181, 120.806, -27.7716, 0.55", "-102.482, 123.845, -28.0494, 0.28", "-102.622, 125.527, -28.351, 0.55", "-102.855, 127.808, -28.8708, 0.28", "-103.019, 128.831, -29.1373, 0.55", "-103.662, 131.618, -29.9833, 0.28", "-103.809, 132.105, -30.1389, 0.55", "-104.537, 134.123, -30.7942, 0.28", "-105.007, 135.275, -31.1379, 1.11", "-106.076, 137.675, -31.6245, 0.28", "-107.016, 139.676, -31.8272, 0.28", "-107.574, 140.746, -31.831, 0.55", "-108.58, 142.693, -31.7435, 0.28", "-109.342, 144.13, -31.5921, 0.55", "-110.488, 146.228, -31.3398, 0.28", "-111.079, 147.232, -31.1775, 0.55", "-111.854, 148.488, -30.9289, 0.28", "-112.259, 149.11, -30.8267, 0.55", "-112.814, 149.924, -30.7445, 0.28", "-113.225, 150.557, -30.8104, 0.55", "-113.988, 151.753, -31.0605, 0.28", "-114.469, 152.547, -31.2666, 0.55", "-114.715, 152.999, -31.4052, 0.28", "-115.08, 153.716, -31.6525, 0.55", "-115.647, 154.9, -32.1172, 0.28", "-116.497, 156.628, -32.8142, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-95.7615, 83.6475, -25.4936, 0.55", "-96.854, 84.8194, -26.667, 0.55", "-97.8931, 85.9849, -27.8385, 0.28", "-98.978, 87.2333, -29.1889, 0.83", "-100.363, 88.884, -31.0477, 0.83", "-101.538, 90.2971, -32.6431, 0.55", "-102.653, 91.6372, -34.1353, 0.28", "-103.282, 92.4538, -35.0426, 0.55", "-104.277, 93.7601, -36.4577, 0.28", "-104.62, 94.2102, -36.9297, 0.55", "-105.471, 95.2548, -37.8926, 0.28", "-105.89, 95.7637, -38.2461, 0.55", "-106.822, 96.8727, -38.7798, 0.28", "-107.143, 97.2686, -38.9267, 0.55", "-108.18, 98.6282, -39.2751, 0.28", "-108.313, 98.8132, -39.3224, 0.55", "-108.977, 99.8388, -39.6039, 0.28", "-109.429, 100.636, -39.8737, 0.55", "-110.418, 102.432, -40.4599, 0.28", "-110.722, 103.035, -40.6641, 0.55", "-111.172, 103.953, -40.9763, 0.28", "-111.268, 104.151, -41.0595, 0.55", "-112.136, 105.781, -41.7417, 0.28", "-112.754, 106.908, -42.1812, 0.55", "-113.255, 107.838, -42.5427, 0.28", "-114.078, 109.445, -43.1939, 0.55", "-115.828, 113.296, -44.9328, 0.28", "-116.798, 115.565, -45.9931, 0.28", "-117.207, 116.612, -46.4776, 0.55", "-117.813, 118.399, -47.3223, 0.28", "-118.093, 119.28, -47.7218, 0.55", "-118.982, 122.144, -48.8832, 0.28", "-119.443, 123.665, -49.3973, 0.28", "-119.781, 124.742, -49.7426, 0.55", "-121.071, 128.336, -50.7415, 0.28", "-121.412, 129.217, -50.9518, 0.55", "-123.194, 133.517, -51.8798, 0.28", "-123.41, 133.987, -51.9562, 0.55", "-123.931, 135.11, -52.156, 0.28", "-124.57, 136.348, -52.3734, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-96.585, 69.3962, 3.61332, 0.83", "-98.1487, 70.0761, 3.6044, 0.83", "-99.7014, 70.8867, 3.52854, 0.28", "-101.033, 71.5942, 3.37194, 0.55", "-102.01, 72.0961, 3.23625, 0.55", "-102.846, 72.5475, 3.13836, 0.28", "-103.9, 73.088, 3.0948, 0.55", "-104.755, 73.6212, 3.11772, 0.28", "-106.032, 74.4637, 3.22495, 0.55", "-106.774, 74.9684, 3.3643, 0.83", "-108.324, 76.0679, 3.79387, 0.83", "-110.531, 77.5189, 4.56264, 0.55", "-112.703, 78.8417, 5.40495, 0.55", "-114.149, 79.6931, 6.02132, 0.55", "-116.123, 80.8704, 6.93905, 0.55", "-117.661, 81.7527, 7.64014, 0.55", "-119.23, 82.6222, 8.31821, 0.55", "-120.554, 83.3408, 8.80088, 0.55", "-121.306, 83.6957, 9.05481, 0.28", "-121.709, 83.8938, 9.18822, 0.55", "-122.752, 84.3842, 9.43383, 0.55", "-124.403, 85.2576, 9.76459, 0.55", "-127.494, 87.2986, 10.3325, 0.55", "-133.522, 92.1149, 13.7586, 0.55", "-139.373, 97.2081, 17.0709, 0.55", "-145.944, 101.558, 20.1512, 0.55", "-151.347, 107.119, 23.4303, 0.55", "-156.688, 112.279, 27.4066, 0.55", "-161.653, 117.251, 32.0507, 0.55", "-167.295, 120.83, 37.2432, 0.55", "-171.951, 125.157, 42.7872, 0.55", "-175.611, 128.653, 49.5522, 0.55", "-178.222, 131.705, 56.9947, 0.55", "-181.371, 134.79, 64.2124, 0.55", "-185.188, 138.317, 70.8744, 0.55", "-188.763, 140.81, 78.1418, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-96.585, 69.3962, 3.61332, 0.83", "-98.6175, 71.5088, 4.11244, 0.83", "-100.446, 73.3957, 4.52607, 0.83", "-102.177, 75.2577, 4.9312, 0.83", "-103.067, 76.2209, 5.1338, 0.55", "-104.548, 77.8339, 5.46439, 0.83", "-106.111, 79.4769, 5.79667, 0.55", "-107.769, 81.1557, 6.13536, 0.55", "-109.907, 83.2799, 6.60752, 0.83", "-111.392, 84.7362, 6.93263, 0.55", "-113.109, 86.4222, 7.29182, 0.55", "-114.372, 87.5988, 7.51806, 0.55", "-116.944, 89.8228, 7.87077, 0.83", "-118.455, 90.9991, 7.98282, 0.55", "-119.498, 91.7225, 7.99249, 1.11", "-120.769, 92.4766, 7.96287, 0.55", "-122.282, 93.1808, 7.93258, 0.55", "-124.663, 94.0678, 7.92239, 0.83", "-126.618, 94.5863, 7.90759, 0.55", "-128.574, 95.0669, 8.01668, 0.55", "-130.757, 95.6103, 8.26458, 0.55", "-134.267, 96.4018, 8.80263, 0.83", "-135.961, 96.7806, 9.10892, 0.55", "-138.32, 97.2594, 9.52281, 0.55", "-141.329, 97.9867, 10.0399, 0.55", "-142.611, 98.3541, 10.2229, 0.55", "-145.265, 99.2921, 10.4932, 0.28", "-146.388, 99.7244, 10.5598, 0.83", "-148.656, 100.579, 10.5949, 0.28", "-151.223, 101.599, 10.4498, 0.28", "-152.679, 102.188, 10.241, 0.28", "-153.612, 102.639, 10.052, 0.28", "-154.007, 102.878, 9.94286, 0.55", "-155.938, 104.106, 9.2961, 0.28", "-157.486, 105.197, 8.69208, 0.28", "-158.883, 106.16, 8.05543, 0.55", "-160.326, 107.19, 7.39763, 0.28", "-160.976, 107.639, 7.11925, 0.55", "-161.919, 108.246, 6.76735, 0.28", "-162.612, 108.692, 6.57459, 0.55", "-163.477, 109.116, 6.43383, 0.28", "-164.416, 109.533, 6.20375, 0.55", "-165.328, 109.93, 5.99755, 0.28", "-166.022, 110.248, 5.82668, 0.55", "-166.889, 110.653, 5.61052, 0.28", "-167.584, 110.999, 5.4505, 0.55", "-170.073, 112.378, 4.85774, 0.28", "-171.589, 113.143, 4.53649, 0.55", "-172.622, 113.674, 4.31274, 1.11", "-174.063, 114.428, 4.00427, 0.55", "-175.378, 115.086, 3.73897, 0.55", "-177.762, 116.263, 3.3372, 0.55", "-179.557, 117.027, 3.26223, 0.55", "-187.457, 120.19, 3.73721, 0.55", "-194.764, 124.538, 3.61036, 0.55", "-201.238, 130.003, 3.6727, 0.55", "-207.718, 135.242, 1.99619, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-7.84723, -28.9458, -6.38297, 0.83", "-7.94136, -31.2378, -7.45599, 0.83", "-8.03117, -33.4246, -8.47972, 0.83", "-8.20865, -37.7459, -10.5027, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-7.84723, -28.9458, -6.38297, 0.55", "-7.74072, -31.2336, -5.24147, 0.55", "-7.80175, -34.7446, -3.5349, 0.55", "-8.22353, -40.1782, -1.0666, 0.55", "-8.4801, -42.8499, 0.167414, 0.55", "-8.7236, -47.9709, 2.79264, 0.83", "-8.82213, -50.5059, 4.22184, 0.55", "-8.85869, -52.5389, 5.46283, 0.55", "-8.92945, -54.7854, 6.82928, 0.55", "-9.25854, -58.8713, 9.3163, 0.83", "-9.73547, -64.9342, 13.0937, 0.55", "-9.99657, -68.0005, 14.9915, 0.55", "-10.238, -71.0532, 16.9438, 0.55", "-10.6285, -76.2148, 20.1752, 0.55", "-11.0349, -80.8267, 23.0456, 0.55", "-11.3968, -83.576, 24.6917, 0.83", "-12.4399, -89.0814, 27.7682, 0.55", "-12.9752, -91.6992, 29.2011, 0.55", "-14.1041, -96.984, 32.1465, 0.55", "-14.9713, -100.838, 34.3315, 0.28", "-15.614, -103.511, 35.7593, 0.28", "-16.9385, -108.175, 38.2528, 0.28", "-17.826, -110.837, 39.5675, 0.55", "-20.1446, -121.851, 44.1163, 0.55", "-25.1191, -132.219, 48.0979, 0.55", "-32.6433, -141.372, 51.0627, 0.55", "-41.6982, -149.379, 53.0461, 0.55", "-51.3467, -156.017, 56.7808, 0.55", "-60.0998, -163.257, 61.447, 0.55", "-70.2329, -169.57, 64.3943, 0.55", "-79.8365, -175.754, 68.9699, 0.55", "-88.9648, -183.606, 71.249, 0.55", "-99.8643, -189.146, 72.6734, 0.55", "-111.833, -192.131, 73.1093, 0.55", "-123.999, -192.959, 75.0854, 0.55", "-135.487, -194.653, 79.2992, 0.55", "-146.842, -197.069, 83.5128, 0.55", "-158.864, -198.336, 86.0577, 0.55", "-170.126, -200.833, 90.4688, 0.55", "-181.277, -202.407, 95.5464, 0.55", "-191.668, -202.967, 102.198, 0.55", "-200.357, -202.117, 110.915, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.57379, -29.8974, 1.75873, 0.83", "-11.7825, -31.0785, -1.09568, 0.83", "-13.1524, -31.5827, -2.31432, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-8.57379, -29.8974, 1.75873, 0.55", "-8.51538, -31.7956, -0.170955, 0.55", "-8.51596, -34.9825, -2.68674, 0.55", "-8.51647, -36.0556, -3.55295, 0.55", "-8.56177, -36.7949, -4.30227, 0.55", "-8.73224, -38.092, -5.75974, 0.55", "-9.08726, -39.618, -7.65321, 0.55", "-9.62105, -40.7758, -9.23423, 0.28", "-10.157, -41.7065, -10.5745, 0.83", "-11.5848, -44.0327, -14.2403, 0.55", "-12.1765, -45.0685, -15.8585, 0.83", "-12.9325, -46.4273, -17.8989, 0.55", "-13.5888, -47.7636, -19.78, 0.55", "-13.8499, -48.4505, -20.6863, 0.55", "-14.1663, -49.7099, -22.1456, 0.83", "-14.5529, -52.4555, -24.9759, 0.83", "-14.7649, -54.3259, -26.9014, 0.55", "-14.7861, -55.2571, -27.7064, 0.55", "-14.7265, -57.2284, -29.1673, 0.83", "-14.7025, -58.0601, -29.6881, 0.55", "-14.6764, -59.747, -30.7069, 0.83", "-14.6536, -63.0251, -32.702, 0.55", "-14.627, -67.7149, -35.2556, 0.55", "-14.6659, -68.7933, -35.7514, 0.83", "-14.8453, -70.8541, -36.5041, 0.83", "-15.2233, -73.6353, -37.5932, 0.83", "-15.4142, -75.4132, -38.3964, 0.55", "-15.7004, -77.2303, -39.6671, 0.55", "-16.0846, -78.5234, -41.0332, 0.83", "-16.446, -79.5618, -42.281, 0.28", "-16.9575, -80.9599, -44.1042, 0.55", "-17.5113, -82.1745, -45.8737, 0.55", "-18.5799, -84.3915, -49.3593, 0.55", "-19.3111, -85.7684, -51.7729, 0.28", "-19.6201, -86.3399, -52.7787, 0.55", "-20.6038, -88.0766, -55.7012, 0.83", "-22.057, -90.5382, -59.368, 0.28", "-22.7248, -91.6501, -60.8216, 0.55", "-23.5587, -93.3851, -62.6713, 0.28", "-23.955, -94.4354, -63.6655, 0.83", "-24.3101, -95.7239, -64.7499, 0.28", "-24.458, -96.9212, -65.6162, 0.83", "-24.4547, -98.3791, -66.6871, 0.83", "-24.3707, -100.394, -68.3482, 0.28", "-24.2553, -101.64, -69.4979, 1.66", "-24.0545, -102.909, -70.8866, 0.28", "-23.7915, -104.095, -72.2773, 0.55", "-23.2495, -106.316, -75.432, 0.28", "-23.0481, -107.214, -76.987, 0.55", "-22.8643, -108.324, -79.2585, 0.28", "-22.7454, -109.109, -81.0167, 0.55", "-22.6109, -110.105, -83.3982, 0.55", "-22.3699, -111.491, -86.8359, 0.83", "-22.0338, -112.706, -89.8169, 0.83", "-21.7172, -113.535, -92.0184, 0.28", "-21.5654, -113.845, -92.9407, 0.55", "-21.2627, -114.365, -94.6624, 0.28", "-21.0296, -114.623, -95.6588, 0.28", "-20.4266, -115.06, -97.2212, 0.28", "-19.8345, -115.397, -98.5826, 0.83", "-18.4792, -116.044, -101.624, 0.28", "-18.2706, -116.141, -102.093, 0.55", "-17.7831, -116.384, -103.3, 0.28", "-17.3605, -116.657, -104.482, 0.55", "-16.3951, -117.444, -107.78, 0.28", "-16.1694, -117.695, -108.697, 0.28", "-15.8488, -118.183, -110.102, 0.55", "-15.4835, -119.059, -112.414, 0.28", "-15.3666, -119.638, -113.716, 0.55", "-15.2723, -120.947, -116.233, 0.28", "-15.2951, -122.639, -118.696, 0.55", "-15.4704, -123.555, -119.864, 0.55", "-15.8575, -124.605, -121.073, 0.55", "-16.5789, -126.033, -122.499, 0.28", "-16.9144, -126.505, -122.972, 0.28", "-18.8209, -128.809, -125.242, 0.55", "-21.1295, -131.237, -127.691, 0.55", "-22.3671, -132.534, -129.01, 0.28", "-23.9188, -134.272, -130.748, 0.83", "-25.994, -136.705, -133.06, 0.28", "-27.0863, -138.092, -134.3, 0.55", "-28.3315, -139.931, -135.791, 0.55", "-29.6238, -142.541, -137.604, 0.55", "-30.7752, -145.674, -139.556, 0.28", "-31.3976, -147.687, -140.672, 0.55", "-31.6581, -148.706, -141.173, 0.28", "-32.0274, -150.209, -141.859, 0.55", "-32.5342, -152.608, -142.94, 0.28", "-32.851, -153.759, -143.509, 0.83", "-33.6671, -155.994, -144.758, 0.28", "-34.2116, -157.182, -145.62, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "136.201, 172.325, -47.5615, 0.28", "140.152, 173.288, -45.8751, 0.28", "141.419, 173.597, -45.3345, 0.55", "144.573, 174.366, -43.9882, 0.28", "145.735, 174.65, -43.4924, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "136.201, 172.325, -47.5615, 0.28", "137.458, 173.474, -46.6544, 0.28", "138.154, 174.109, -46.1457, 0.55", "140.08, 175.881, -44.756, 0.28", "141.078, 176.755, -44.0246, 0.55", "143.714, 178.936, -42.1254, 0.28", "144.804, 179.749, -41.4318, 0.55", "145.843, 180.402, -40.7189, 0.28", "146.494, 180.777, -40.2648, 0.55", "147.822, 181.411, -39.3813, 0.28", "148.434, 181.634, -38.9969, 0.55", "151.453, 181.796, -38.1775, 0.28", "154.003, 181.134, -37.6443, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.20865, -37.7459, -10.5027, 0.55", "-7.71459, -39.6917, -10.5583, 0.55", "-7.2973, -41.1638, -10.599, 0.83", "-6.47199, -43.6936, -10.668, 0.83", "-5.84537, -45.4378, -10.8061, 0.55", "-5.25885, -47.0512, -11.006, 0.83", "-4.85667, -48.1123, -11.1436, 0.28", "-3.86255, -50.644, -11.556, 0.55", "-3.43411, -51.6658, -11.7095, 0.28", "-2.66347, -53.4778, -11.9492, 0.83", "-1.781, -55.44, -12.1216, 0.83", "-1.12636, -56.9215, -12.124, 0.28", "-0.647314, -58.1248, -12.0294, 0.55", "-0.00230163, -60.0489, -11.7333, 0.28", "0.578767, -62.0255, -11.2878, 0.83", "1.0908, -63.8165, -10.7716, 0.83", "1.53365, -65.3894, -10.3446, 0.83", "1.79354, -66.4474, -10.1342, 1.11", "2.11537, -67.7461, -9.93418, 1.11", "2.64021, -69.9116, -9.77704, 0.55", "2.91042, -71.0004, -9.73725, 0.83", "3.41508, -72.8504, -9.75653, 0.55", "4.14668, -75.349, -9.84791, 0.28", "4.50114, -76.5157, -9.88644, 0.55", "5.14729, -78.5341, -9.98538, 0.55", "5.4247, -79.39, -10.0523, 0.28", "6.25728, -81.9948, -10.3069, 0.55", "6.93882, -84.0037, -10.4543, 0.28", "7.5676, -85.6787, -10.5418, 0.55", "8.1869, -87.267, -10.5663, 0.28", "8.59583, -88.3347, -10.522, 0.55", "9.0465, -89.5899, -10.3941, 0.28", "9.67317, -91.3723, -10.0883, 0.55", "10.1343, -92.5677, -9.83117, 0.28", "10.7751, -94.2081, -9.51739, 0.55", "11.9748, -97.1504, -9.05844, 0.28", "12.6363, -98.6592, -8.84521, 0.55", "14.1736, -101.956, -8.56704, 0.28", "14.8799, -103.453, -8.58896, 0.55", "15.9429, -105.646, -8.67197, 0.28", "16.6971, -107.18, -8.75929, 0.28", "17.6115, -109.033, -8.8832, 0.28", "18.2577, -110.553, -9.06701, 0.55", "19.1409, -113.131, -9.47154, 0.28", "19.7906, -115.513, -9.90173, 0.55", "20.4325, -118.638, -10.4697, 0.28", "20.6021, -119.861, -10.7264, 0.55", "20.8432, -123.149, -11.4721, 0.28", "20.8426, -124.616, -11.8148, 0.55", "20.7224, -126.396, -12.3082, 0.28", "20.5698, -127.566, -12.7266, 0.55", "20.2673, -129.274, -13.3251, 0.28", "19.9545, -131.061, -13.8489, 0.55", "19.5178, -133.656, -14.4907, 0.28", "19.3881, -134.593, -14.7067, 0.55", "19.2638, -135.995, -14.9835, 0.28", "19.1705, -137.643, -15.326, 0.55", "19.1241, -140.037, -15.8478, 0.28", "19.2415, -141.338, -16.1378, 0.55", "19.5195, -142.414, -16.2426, 0.28", "19.8345, -143.345, -16.2757, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-8.20865, -37.7459, -10.5027, 0.55", "-9.6637, -39.7317, -12.2095, 0.55", "-10.0944, -40.3458, -12.74, 0.55", "-11.371, -42.2563, -14.3383, 0.55", "-13.6407, -45.7757, -17.2298, 0.55", "-15.7558, -49.2167, -19.9059, 0.83", "-17.7924, -52.395, -22.2994, 0.55", "-18.7759, -53.9594, -23.4944, 0.55", "-19.4849, -55.1681, -24.391, 0.28", "-20.9888, -58.0213, -26.3464, 0.55", "-22.2916, -60.9222, -27.9988, 0.55", "-23.5551, -63.7867, -29.3677, 0.55", "-24.8754, -67.1388, -30.7983, 0.55", "-26.2523, -71.0113, -32.3452, 0.55", "-27.099, -73.77, -33.3093, 0.83", "-27.7051, -76.2318, -34.0122, 0.83", "-28.0687, -78.2088, -34.4617, 0.55", "-28.2558, -79.4951, -34.6833, 0.55", "-28.5975, -81.494, -34.93, 0.83", "-29.3104, -85.0483, -35.3913, 0.55", "-29.816, -87.2977, -35.8232, 0.28", "-30.1583, -88.666, -36.1413, 0.83", "-30.8402, -90.9442, -36.6828, 0.55", "-31.5193, -92.7915, -37.2461, 0.28", "-32.6199, -95.6065, -38.2612, 0.55", "-33.5748, -98.1327, -39.4175, 0.28", "-34.1222, -99.7289, -40.2428, 0.28", "-34.7628, -101.911, -41.4926, 0.83", "-35.5082, -105.068, -43.4105, 0.28", "-36.0334, -107.738, -45.0747, 0.83", "-36.4465, -110.378, -46.7058, 0.28", "-36.5179, -111.269, -47.2201, 0.83", "-36.5921, -113.591, -48.5101, 0.55", "-36.5764, -115.114, -49.2866, 0.28", "-36.4875, -117.555, -50.2833, 0.55", "-36.411, -119.866, -51.0933, 0.28", "-36.3782, -122.043, -51.6625, 0.55", "-36.3713, -124.292, -52.2068, 0.28", "-36.3706, -125.867, -52.6038, 0.55", "-36.346, -126.969, -52.9566, 0.28", "-36.3244, -127.568, -53.1885, 0.55", "-36.2274, -130.336, -54.6797, 0.28", "-35.8766, -133.369, -55.8513, 0.83", "-35.3748, -135.866, -56.587, 0.28", "-34.4238, -139.191, -57.489, 0.28", "-33.7737, -140.964, -57.9752, 0.83", "-31.9401, -144.805, -58.9374, 0.28", "-24.9744, -156.183, -60.8897, 0.83", "-22.8146, -159.435, -61.3418, 0.55", "-21.1584, -161.864, -61.8146, 0.55", "-20.571, -162.872, -62.4401, 0.55", "-20.309, -163.491, -63.1483, 0.28", "-19.802, -164.789, -64.8031, 0.55", "-18.9561, -166.853, -67.4611, 0.28", "-18.4014, -168.288, -69.0295, 0.55", "-17.6424, -170.546, -71.2759, 0.28", "-17.1019, -172.577, -73.2999, 0.83", "-16.7501, -174.601, -75.4093, 0.28", "-16.6724, -176.437, -77.4206, 0.55", "-16.9137, -179.677, -80.8477, 0.28", "-17.1573, -180.799, -81.9975, 0.55", "-18.3582, -184.191, -85.3412, 0.28", "-19.4296, -186.11, -87.3819, 0.55", "-21.3047, -188.634, -90.1176, 0.28", "-22.1582, -189.591, -91.1209, 0.55", "-23.2846, -190.688, -92.1958, 0.28", "-24.3777, -191.592, -93.0684, 0.55", "-27.4228, -193.67, -95.0555, 0.28", "-28.7094, -194.435, -95.8132, 0.55", "-30.4654, -195.356, -96.7825, 0.55", "-33.3596, -196.878, -98.4246, 0.28", "-35.1215, -197.876, -99.4806, 0.83", "-36.8586, -198.962, -100.558, 0.28", "-37.5918, -199.492, -101.031, 0.55", "-39.5051, -201.076, -102.361, 0.28", "-41.0959, -202.587, -103.556, 0.55", "-43.0035, -204.772, -105.078, 0.28", "-43.452, -205.351, -105.466, 0.55", "-44.9943, -207.498, -106.838, 0.28", "-46.052, -209.007, -107.785, 0.55", "-48.7505, -212.76, -110.049, 0.28", "-49.9145, -214.279, -110.92, 0.55", "-50.5458, -215.13, -111.332, 0.28", "-50.8054, -215.474, -111.498, 0.55", "-52.0735, -217.115, -112.184, 0.28", "-53.083, -218.234, -112.813, 0.55", "-54.0147, -219.193, -113.367, 0.28", "-54.9867, -220.164, -114.093, 0.55", "-56.9088, -222.271, -115.691, 0.28", "-57.8499, -223.281, -116.652, 0.55", "-60.8887, -226.513, -120.204, 0.28", "-62.1933, -227.938, -121.963, 0.28", "-63.9411, -229.961, -124.645, 0.28", "-64.9758, -231.287, -126.444, 0.55", "-66.9617, -234.557, -130.575, 0.55", "-67.3301, -235.369, -131.548, 0.28", "-67.6021, -236.268, -132.549, 0.55", "-67.8902, -237.211, -133.649, 0.28", "-68.2317, -238.093, -134.596, 0.55", "-68.6826, -239.222, -135.701, 0.28", "-69.0779, -240.417, -136.599, 0.55", "-70.5979, -245.017, -139.924, 0.28", "-70.9869, -246.114, -140.715, 0.55", "-72.9369, -251.197, -144.42, 0.28", "-73.4948, -252.604, -145.453, 0.55", "-75.6956, -258.165, -149.476, 0.28", "-76.2524, -259.738, -150.528, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.1524, -31.5827, -2.31432, 0.83", "-16.4738, -29.9001, -2.21659, 0.83", "-20.578, -28.3949, -2.54542, 0.83", "-24.151, -27.4111, -3.05004, 0.83", "-27.3607, -26.8093, -3.70162, 0.83", "-32.4868, -26.31, -5.11704, 0.83", "-37.4841, -26.2814, -6.76831, 0.83", "-41.5878, -26.9045, -8.48398, 0.55", "-44.2557, -27.5314, -9.67404, 0.55", "-46.6255, -28.1683, -10.7352, 0.83", "-49.4055, -28.9048, -11.8845, 0.55", "-52.0083, -29.4863, -12.6283, 0.55", "-56.3327, -30.0062, -13.4299, 0.55", "-59.2666, -29.8657, -13.4853, 0.55", "-62.4709, -29.3627, -13.2517, 0.55", "-64.2488, -28.8776, -13.1638, 0.55", "-66.1073, -28.3147, -13.1016, 0.55", "-69.1489, -27.4591, -13.1591, 0.55", "-71.3134, -27.1093, -13.3532, 1.11", "-72.994, -27.0793, -13.5944, 1.11", "-81.1708, -27.7568, -15.1978, 0.55", "-83.8952, -28.1212, -15.8114, 0.55", "-86.2297, -28.5151, -16.3962, 0.55", "-90.2702, -29.2285, -17.5107, 0.55", "-94.0237, -29.6432, -18.8098, 0.55", "-97.3836, -29.6144, -20.381, 0.55", "-98.9767, -29.483, -21.3025, 0.28", "-100.219, -29.2638, -22.1602, 0.83", "-103.207, -28.5176, -24.3807, 0.83", "-107.13, -27.2458, -27.5261, 0.83", "-111.666, -25.4783, -31.5684, 0.55", "-113.609, -24.6837, -33.3753, 0.55", "-116.094, -23.7543, -35.6558, 0.28", "-117.292, -23.3519, -36.6977, 0.83", "-119.618, -22.5423, -38.6147, 0.55", "-121.983, -21.3705, -40.3612, 0.55", "-125.121, -19.3749, -42.5406, 0.28", "-126.805, -18.3113, -43.653, 1.11", "-128.141, -17.5373, -44.587, 0.83", "-131.253, -15.9339, -46.8524, 0.83", "-135.148, -14.2358, -49.893, 0.83", "-141.339, -11.8619, -54.798, 0.28", "-143.395, -11.1635, -56.5066, 0.83", "-149.533, -9.16579, -61.8363, 0.28", "-152.265, -8.37676, -64.3107, 0.83", "-157.657, -7.17464, -69.3855, 0.28", "-158.479, -7.05409, -70.2372, 0.28", "-159.95, -6.90267, -71.8899, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-13.1524, -31.5827, -2.31432, 1.11", "-13.8633, -33.7596, -1.1369, 1.11", "-15.1212, -36.2146, 0.476954, 1.11", "-16.0928, -37.9274, 1.59193, 1.11", "-17.2967, -40.5268, 3.35259, 1.11", "-18.2932, -43.2792, 5.24616, 0.83", "-18.9504, -45.2362, 6.62114, 0.83", "-19.8348, -47.5312, 8.4422, 0.83", "-21.1245, -50.238, 10.8088, 0.83", "-23.0378, -53.8191, 13.9534, 1.11", "-24.1738, -55.6314, 15.5021, 0.83", "-25.181, -57.0929, 16.7605, 0.83", "-26.9442, -59.3241, 18.7384, 0.83", "-29.1412, -61.664, 20.8173, 0.83", "-31.2165, -63.4455, 22.4224, 0.83", "-33.8495, -65.4925, 24.117, 0.83", "-36.033, -67.1188, 25.4387, 0.83", "-37.8244, -68.5165, 26.5157, 0.83", "-39.2725, -69.7207, 27.3704, 1.11", "-41.1106, -71.3303, 28.4061, 0.83", "-43.0142, -73.0392, 29.4672, 1.11" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-159.95, -6.90267, -71.8899, 0.28", "-162.547, -7.27122, -73.3701, 0.28", "-163.21, -7.36604, -73.7272, 0.55", "-164.456, -7.50995, -74.3274, 0.28", "-165.415, -7.51682, -74.7675, 0.28", "-166.77, -7.46759, -75.3848, 0.55", "-168.868, -7.38299, -76.295, 0.28", "-169.516, -7.35988, -76.6035, 0.55", "-170.761, -7.30659, -77.2281, 1.11", "-173.362, -7.21438, -78.6077, 0.28", "-174.778, -7.20799, -79.44, 0.55", "-176.431, -7.24706, -80.4725, 0.55", "-179.177, -7.517, -82.4316, 0.55", "-180.377, -7.70713, -83.3718, 0.55", "-181.833, -8.01936, -84.5873, 0.55", "-182.872, -8.32321, -85.5006, 0.55", "-184.723, -8.89385, -87.2062, 0.55", "-186.754, -9.55187, -89.1812, 0.55", "-188.79, -10.2564, -91.0483, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-159.95, -6.90267, -71.8899, 0.55", "-159.821, -8.15887, -73.6568, 0.55", "-159.641, -9.9185, -76.1319, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-43.0142, -73.0392, 29.4672, 0.55", "-44.2739, -75.1288, 30.2822, 0.55", "-45.2417, -76.6731, 30.832, 0.55", "-46.4252, -78.2469, 31.4893, 0.55", "-48.1468, -80.2731, 32.4394, 0.55", "-49.3702, -81.5213, 33.1245, 0.55", "-52.0123, -84.0277, 34.5958, 0.55", "-54.5054, -86.3887, 35.9378, 0.55", "-57.0619, -88.9107, 37.227, 0.55", "-58.5793, -90.417, 38.0663, 0.55", "-60.5988, -92.416, 39.2396, 0.55", "-62.5562, -94.4296, 40.486, 0.55", "-64.0647, -95.9292, 41.5409, 0.55", "-67.6736, -99.4072, 44.2547, 0.55", "-70.3227, -102.008, 46.4816, 0.55", "-71.2629, -103.022, 47.4019, 0.83", "-72.6282, -104.716, 48.9782, 0.55", "-73.8684, -106.297, 50.6674, 0.55", "-75.1031, -107.953, 52.5651, 0.55", "-76.288, -109.609, 54.4593, 0.55", "-77.8779, -112.257, 56.9512, 0.55", "-79.3309, -114.807, 59.2543, 0.55", "-80.7545, -117.365, 61.4469, 0.55", "-81.8451, -119.338, 63.1433, 0.55", "-83.6998, -122.406, 65.9963, 0.55", "-85.3729, -124.551, 68.2083, 0.55", "-86.8835, -126.045, 70.0094, 0.55", "-88.2395, -127.183, 71.5351, 0.55", "-89.8238, -128.476, 73.2324, 0.55", "-91.7456, -130.065, 75.3443, 0.83", "-93.5929, -131.719, 77.3869, 0.55", "-94.9982, -133.004, 78.8052, 0.55", "-96.7363, -134.779, 80.4299, 0.55", "-97.712, -135.843, 81.2578, 0.55", "-99.588, -137.921, 82.6547, 0.55", "-101.318, -140.014, 83.8006, 0.55", "-103.058, -142.077, 84.9452, 0.55", "-103.862, -142.986, 85.4414, 0.83", "-106.067, -145.275, 86.6535, 0.55", "-107.69, -146.804, 87.4606, 0.55", "-112.157, -150.833, 89.3942, 0.55", "-114.555, -152.875, 90.4996, 0.55", "-117.716, -155.333, 92.0814, 0.55", "-119.44, -156.578, 93.1109, 0.55", "-121.117, -157.627, 94.3309, 1.38", "-124.063, -159.218, 96.9357, 0.55", "-126.766, -160.415, 99.9421, 0.55", "-128.72, -161.413, 102.748, 0.55", "-130.608, -162.329, 105.993, 0.55", "-132.179, -163.108, 109.031, 0.55", "-133.279, -163.671, 111.425, 0.55", "-134.632, -164.457, 114.75, 0.55", "-136.492, -165.941, 119.784, 0.55", "-137.27, -166.69, 122.037, 0.55", "-137.592, -167.016, 122.917, 0.55", "-138.209, -167.662, 124.473, 0.28", "-138.857, -168.238, 125.906, 0.83", "-140.643, -169.344, 128.641, 0.28", "-141.683, -169.721, 129.879, 0.28", "-143.145, -170.093, 131.507, 0.55", "-145.684, -170.625, 134.135, 0.55", "-149.101, -171.282, 137.428, 0.28", "-152.203, -171.878, 140.299, 0.28", "-154.942, -172.413, 142.66, 0.55", "-156.253, -172.659, 143.801, 0.55", "-158.174, -173.073, 145.467, 0.55", "-160.174, -173.56, 147.305, 0.28", "-160.945, -173.755, 147.879, 0.55", "-162.248, -174.149, 148.794, 0.28", "-162.641, -174.289, 149.015, 0.55", "-164.947, -174.943, 150.154, 0.28", "-166.444, -175.27, 150.853, 0.83", "-168.873, -175.751, 151.882, 0.28", "-170.995, -176.177, 152.743, 0.28", "-173.799, -176.79, 153.809, 0.28", "-176.364, -177.318, 154.715, 0.28", "-184.542, -183.882, 160.057, 0.28", "-191.053, -191.507, 166.179, 0.28", "-197.275, -198.577, 173.232, 0.28", "-203.152, -205.885, 180.331, 0.28" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-43.0142, -73.0392, 29.4672, 0.55", "-43.683, -75.7, 28.4877, 0.55", "-44.2321, -77.84, 27.5393, 0.55", "-44.5406, -78.9706, 26.9564, 0.55", "-44.9983, -80.4696, 26.1861, 0.83", "-46.0187, -83.5694, 24.7052, 0.83", "-46.7831, -85.916, 23.6701, 0.55", "-47.2958, -87.3512, 23.093, 0.83", "-48.0131, -89.3127, 22.3774, 0.55", "-48.6373, -90.9433, 21.821, 0.55", "-49.6849, -93.5176, 21.0666, 0.55", "-50.92, -96.4464, 20.3576, 0.55", "-52.3739, -100.023, 19.6473, 0.55", "-52.8313, -101.151, 19.4453, 0.55", "-54.2534, -104.762, 18.8497, 0.55", "-54.97, -106.66, 18.4579, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-188.79, -10.2564, -91.0483, 0.55", "-194.923, -9.69539, -94.8025, 0.55", "-197.395, -9.58733, -96.222, 0.55", "-201.645, -9.40793, -98.411, 0.55", "-203.393, -9.34661, -99.207, 0.55", "-207.331, -9.26702, -100.907, 0.55", "-212.765, -9.19524, -103.183, 0.55", "-215.53, -9.17986, -104.087, 0.55", "-217.716, -9.18896, -104.742, 0.55", "-219.823, -9.34818, -105.275, 0.55", "-222.234, -9.55453, -105.847, 0.55", "-224.055, -9.7007, -106.091, 0.55", "-225.65, -9.73586, -106.158, 0.28", "-227.887, -9.76512, -106.276, 0.55", "-232.44, -9.79147, -107.004, 0.28", "-233.202, -9.83892, -107.215, 0.28", "-234.166, -9.94325, -107.55, 0.55", "-236.834, -10.3411, -108.645, 0.55", "-238.677, -10.7053, -109.539, 0.55", "-244.08, -12.0977, -112.727, 0.55", "-247.951, -13.2799, -115.183, 0.55", "-249.765, -13.8951, -116.424, 0.55", "-251.634, -14.6065, -117.856, 0.55", "-253.073, -15.2686, -119.14, 0.55", "-255.276, -16.4399, -121.353, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-188.79, -10.2564, -91.0483, 0.55", "-188.362, -7.59573, -90.2722, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-54.97, -106.66, 18.4579, 0.55", "-56.4356, -108.816, 18.5272, 0.55", "-57.6368, -110.232, 18.5215, 0.28", "-58.8731, -111.376, 18.6378, 0.55", "-61.0, -112.793, 18.6507, 0.55", "-62.9215, -113.703, 18.5682, 0.28", "-63.7309, -114.051, 18.4927, 0.83", "-66.6777, -115.135, 18.2011, 0.55", "-69.5369, -116.078, 17.9766, 0.55", "-74.0114, -117.225, 17.5916, 0.55", "-78.1342, -118.138, 17.2712, 0.55", "-82.6833, -119.129, 16.9247, 0.55", "-84.0556, -119.438, 16.8367, 0.55", "-86.3051, -119.993, 16.712, 0.55", "-89.0126, -120.689, 16.6593, 0.55", "-93.0951, -121.715, 16.7659, 0.55", "-95.0823, -122.132, 16.746, 0.55", "-98.8683, -122.879, 16.5118, 0.55", "-101.555, -123.451, 16.1803, 0.28", "-104.754, -124.217, 15.6277, 0.55", "-108.799, -125.33, 14.8332, 0.55", "-114.167, -126.841, 13.6676, 0.55", "-117.677, -127.926, 12.8734, 0.55", "-119.392, -128.532, 12.4015, 0.28", "-121.55, -129.351, 11.721, 0.55", "-124.999, -130.723, 10.5454, 0.28", "-125.932, -131.102, 10.264, 0.28", "-126.845, -131.459, 10.0012, 0.28", "-130.037, -132.547, 9.18088, 1.38", "-133.673, -133.779, 8.33212, 0.55", "-135.605, -134.424, 7.90508, 0.28", "-136.466, -134.732, 7.69658, 0.55", "-138.632, -135.634, 7.13244, 0.28", "-139.947, -136.313, 6.78359, 0.55", "-141.258, -137.66, 6.45244, 0.28", "-141.518, -138.031, 6.3952, 0.55", "-142.589, -139.799, 6.13433, 0.28", "-143.343, -141.161, 5.95315, 0.55", "-144.198, -142.828, 5.76174, 0.28", "-147.722, -149.916, 4.91504, 0.55", "-148.63, -151.8, 4.69596, 0.28", "-149.231, -153.05, 4.5709, 0.55", "-149.894, -154.463, 4.49206, 0.28", "-150.154, -155.029, 4.44865, 0.55", "-150.634, -156.174, 4.3617, 0.28", "-151.147, -157.449, 4.21878, 0.55", "-151.782, -158.917, 4.05731, 0.28", "-152.77, -161.135, 3.8367, 0.83", "-153.758, -163.337, 3.66001, 0.28", "-154.509, -165.043, 3.53229, 0.28", "-155.663, -167.757, 3.35282, 0.55", "-156.843, -170.482, 3.15419, 0.28", "-157.932, -173.278, 2.98163, 0.28", "-158.184, -173.937, 2.94898, 0.55", "-158.953, -176.035, 2.92881, 0.28", "-159.402, -177.269, 2.87872, 0.55", "-160.111, -179.501, 2.7738, 0.28", "-160.693, -182.21, 2.55047, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-54.97, -106.66, 18.4579, 0.28", "-54.0105, -107.941, 17.7489, 0.28", "-53.3052, -108.839, 17.2719, 0.28", "-52.9762, -109.257, 17.0494, 0.55", "-52.4861, -109.881, 16.7179, 0.28", "-52.0972, -110.376, 16.4549, 0.55", "-50.7954, -112.033, 15.5744, 0.28", "-49.7882, -113.327, 15.055, 0.55", "-44.8821, -118.451, 12.4916, 0.55", "-40.3045, -123.289, 8.95623, 0.55", "-35.7104, -128.019, 5.29471, 0.55", "-31.1685, -132.729, 1.54416, 0.55", "-25.408, -135.906, -2.24176, 0.55", "-20.4249, -139.217, -6.89059, 0.55", "-15.6249, -143.717, -10.5937, 0.55", "-12.1743, -148.649, -15.1025, 0.55", "-8.52914, -154.244, -18.5398, 0.55", "-4.97451, -160.081, -21.6428, 0.55", "-1.00778, -165.36, -25.2441, 0.55", "3.25043, -170.197, -29.1494, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-255.276, -16.4399, -121.353, 0.28", "-257.225, -17.202, -121.172, 0.28", "-259.681, -17.5173, -121.945, 0.28", "-262.105, -17.7158, -122.81, 0.28", "-264.443, -17.8431, -123.609, 0.28", "-267.139, -17.8833, -124.447, 0.28", "-270.213, -17.6559, -126.315, 0.28", "-275.774, -16.9367, -130.772, 0.28", "-276.974, -16.7314, -131.93, 0.55", "-277.986, -16.5122, -133.01, 0.28", "-279.001, -16.3151, -134.104, 0.55", "-287.388, -15.2646, -143.063, 0.55", "-288.312, -15.1844, -143.965, 0.28", "-290.226, -15.2224, -145.732, 0.55", "-292.079, -15.3118, -147.34, 0.55", "-294.382, -15.6273, -149.225, 0.55", "-296.333, -16.1294, -150.564, 0.55", "-298.424, -16.9312, -151.453, 0.55", "-300.874, -17.8708, -152.602, 0.83", "-301.557, -18.1788, -152.935, 0.83", "-303.914, -19.396, -154.219, 0.28", "-306.341, -20.6417, -155.509, 0.55", "-308.991, -21.8116, -156.603, 0.28", "-310.07, -22.3281, -157.002, 0.55", "-311.811, -23.1519, -157.606, 0.28", "-312.844, -23.5974, -157.942, 0.28", "-314.429, -24.073, -158.275, 0.55", "-317.836, -24.9676, -158.525, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-255.276, -16.4399, -121.353, 0.55", "-254.739, -17.8274, -122.103, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_35", "dend_28", "dend_21", "dend_0", "dend_37", "dend_36", "dend_34", "dend_29", "dend_25", "dend_22", "dend_16", "dend_1", "dend_31", "dend_30", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_17", "dend_3", "dend_2", "dend_33", "dend_32", "dend_20", "dend_19", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_13", "dend_12", "dend_7", "dend_6", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_35", "dend_28", "dend_21", "dend_0", "dend_37", "dend_36", "dend_34", "dend_29", "dend_25", "dend_22", "dend_16", "dend_1", "dend_31", "dend_30", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_17", "dend_3", "dend_2", "dend_33", "dend_32", "dend_20", "dend_19", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_13", "dend_12", "dend_7", "dend_6", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "axon_1", "axon_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_NBC_df01e73cd3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.4500000145978539)
    connect dend_35(0), soma_0(0.4500000145978539)
    connect dend_28(0), soma_0(0.4500000145978539)
    connect dend_21(0), soma_0(0.4500000145978539)
    connect dend_0(0), soma_0(0.4500000145978539)
    connect axon_0(0), soma_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.36225, -9.19447, -1.05898, 3.37379 ) }
    soma_0 { pt3dadd( -7.5192, -8.3328, -0.983264, 5.59841 ) }
    soma_0 { pt3dadd( -6.67615, -7.47114, -0.907549, 5.3333 ) }
    soma_0 { pt3dadd( -5.8331, -6.60947, -0.831834, 5.68073 ) }
    soma_0 { pt3dadd( -4.99005, -5.7478, -0.756119, 6.02816 ) }
    soma_0 { pt3dadd( -4.147, -4.88613, -0.680404, 6.37559 ) }
    soma_0 { pt3dadd( -3.30395, -4.02446, -0.604689, 6.72117 ) }
    soma_0 { pt3dadd( -2.46089, -3.16279, -0.528974, 6.8656 ) }
    soma_0 { pt3dadd( -1.61784, -2.30113, -0.453259, 6.93412 ) }
    soma_0 { pt3dadd( -0.774793, -1.43946, -0.377544, 6.84096 ) }
    soma_0 { pt3dadd( 0.0682572, -0.577789, -0.301829, 6.68704 ) }
    soma_0 { pt3dadd( 0.911308, 0.28388, -0.226114, 6.6716 ) }
    soma_0 { pt3dadd( 1.75436, 1.14555, -0.150399, 6.90842 ) }
    soma_0 { pt3dadd( 2.59741, 2.00722, -0.0746836, 7.45096 ) }
    soma_0 { pt3dadd( 3.44046, 2.86888, 0.00103138, 8.43414 ) }
    soma_0 { pt3dadd( 4.28351, 3.73055, 0.0767464, 9.41614 ) }
    soma_0 { pt3dadd( 5.12656, 4.59222, 0.152461, 10.0048 ) }
    soma_0 { pt3dadd( 5.96961, 5.45389, 0.228176, 10.3326 ) }
    soma_0 { pt3dadd( 6.81266, 6.31556, 0.303891, 9.50982 ) }
    soma_0 { pt3dadd( 7.65571, 7.17723, 0.379606, 7.06842 ) }
    soma_0 { pt3dadd( 8.49876, 8.03889, 0.455321, 3.91086 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 7.80497, 1.15205, 15.3717, 0.83 ) }
    dend_38 { pt3dadd( 8.90457, -1.46911, 15.9566, 0.83 ) }
    dend_38 { pt3dadd( 9.91006, -3.80104, 16.5447, 0.83 ) }
    dend_38 { pt3dadd( 10.8042, -5.69601, 17.0415, 0.83 ) }
    dend_38 { pt3dadd( 12.7294, -9.33561, 18.0262, 1.38 ) }
    dend_38 { pt3dadd( 14.4862, -12.3404, 18.8107, 0.83 ) }
    dend_38 { pt3dadd( 16.1305, -14.9705, 19.432, 0.83 ) }
    dend_38 { pt3dadd( 17.6779, -17.3087, 19.9524, 0.55 ) }
    dend_38 { pt3dadd( 19.452, -19.621, 20.4198, 1.11 ) }
    dend_38 { pt3dadd( 21.2539, -21.5105, 20.6951, 0.55 ) }
    dend_38 { pt3dadd( 22.9638, -22.9071, 20.7081, 0.55 ) }
    dend_38 { pt3dadd( 25.1225, -24.3326, 20.4981, 0.55 ) }
    dend_38 { pt3dadd( 27.1783, -25.4943, 20.0786, 0.55 ) }
    dend_38 { pt3dadd( 28.8603, -26.3531, 19.5323, 0.55 ) }
    dend_38 { pt3dadd( 30.5805, -27.1201, 18.6686, 0.55 ) }
    dend_38 { pt3dadd( 32.5668, -27.9913, 17.3091, 0.55 ) }
    dend_38 { pt3dadd( 33.6891, -28.5271, 16.4014, 1.11 ) }
    dend_38 { pt3dadd( 35.5296, -29.5561, 14.7521, 0.28 ) }
    dend_38 { pt3dadd( 36.6466, -30.3071, 13.6517, 0.55 ) }
    dend_38 { pt3dadd( 39.3524, -32.4155, 10.8687, 0.55 ) }
    dend_38 { pt3dadd( 40.9979, -33.8363, 9.23789, 0.55 ) }
    dend_38 { pt3dadd( 43.0526, -35.7614, 7.28381, 0.28 ) }
    dend_38 { pt3dadd( 44.5001, -37.1989, 6.07434, 0.83 ) }
    dend_38 { pt3dadd( 47.0799, -39.8925, 3.86691, 0.28 ) }
    dend_38 { pt3dadd( 47.8934, -40.7893, 3.16232, 0.55 ) }
    dend_38 { pt3dadd( 49.2406, -42.2507, 2.03034, 0.28 ) }
    dend_38 { pt3dadd( 50.5415, -43.5173, 0.913056, 0.28 ) }
    dend_38 { pt3dadd( 51.5523, -44.41, -0.0635203, 0.83 ) }
    dend_38 { pt3dadd( 55.3007, -47.5626, -3.86577, 0.28 ) }
    dend_38 { pt3dadd( 56.0901, -48.2465, -4.68059, 1.11 ) }
    dend_38 { pt3dadd( 57.7948, -49.7554, -6.46418, 0.28 ) }
    dend_38 { pt3dadd( 58.9767, -50.8644, -7.7701, 0.83 ) }
    dend_38 { pt3dadd( 62.13, -53.8898, -11.173, 0.28 ) }
    dend_38 { pt3dadd( 63.1113, -54.9745, -12.2527, 0.55 ) }
    dend_38 { pt3dadd( 64.2024, -56.4246, -13.3441, 0.28 ) }
    dend_38 { pt3dadd( 64.9485, -57.5473, -14.1455, 1.11 ) }
    dend_38 { pt3dadd( 66.0978, -59.4895, -15.5194, 0.28 ) }
    dend_38 { pt3dadd( 66.736, -60.6388, -16.3538, 0.83 ) }
    dend_38 { pt3dadd( 68.8282, -64.4142, -19.2214, 0.28 ) }
    dend_38 { pt3dadd( 70.7532, -67.7286, -21.9407, 0.28 ) }
    dend_38 { pt3dadd( 71.5744, -69.0772, -23.0568, 0.55 ) }
    dend_38 { pt3dadd( 72.7415, -70.9303, -24.5464, 0.28 ) }
    dend_38 { pt3dadd( 73.1078, -71.5002, -24.9502, 0.55 ) }
    dend_38 { pt3dadd( 74.3233, -73.3384, -26.1076, 0.28 ) }
    dend_38 { pt3dadd( 75.283, -74.7085, -26.7935, 0.83 ) }
    dend_38 { pt3dadd( 76.9797, -77.1154, -27.7304, 0.28 ) }
    dend_38 { pt3dadd( 77.3956, -77.7245, -27.9047, 0.55 ) }
    dend_38 { pt3dadd( 79.2405, -80.4881, -28.4437, 0.28 ) }
    dend_38 { pt3dadd( 80.2111, -81.9752, -28.6794, 0.55 ) }
    dend_38 { pt3dadd( 80.7724, -82.8716, -28.755, 0.28 ) }
    dend_38 { pt3dadd( 81.616, -84.2328, -28.8745, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 72/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 10.135, 1.60055, 1.42168, 0.83 ) }
    dend_35 { pt3dadd( 12.047, 0.938987, -0.315568, 0.83 ) }
    dend_35 { pt3dadd( 14.8349, -1.19146, -3.76355, 1.11 ) }
    dend_35 { pt3dadd( 16.8239, -2.93979, -6.22147, 1.11 ) }
    dend_35 { pt3dadd( 20.5304, -6.06588, -10.6215, 1.38 ) }
    dend_35 { pt3dadd( 23.9286, -8.55495, -14.142, 1.11 ) }
    dend_35 { pt3dadd( 26.1739, -10.1616, -16.2628, 1.66 ) }
    dend_35 { pt3dadd( 29.6967, -13.2387, -19.7855, 0.83 ) }
    dend_35 { pt3dadd( 31.2478, -15.045, -21.6023, 0.83 ) }
    dend_35 { pt3dadd( 32.5458, -16.9873, -23.4295, 1.11 ) }
    dend_35 { pt3dadd( 34.8074, -21.3036, -27.4222, 1.11 ) }
    dend_35 { pt3dadd( 35.924, -23.3557, -29.5477, 1.11 ) }
    dend_35 { pt3dadd( 37.5765, -26.5306, -32.9615, 0.83 ) }
    dend_35 { pt3dadd( 38.968, -29.7186, -36.3913, 0.83 ) }
    dend_35 { pt3dadd( 39.8614, -32.7006, -39.6119, 0.83 ) }
    dend_35 { pt3dadd( 40.5398, -36.742, -43.9183, 0.83 ) }
    dend_35 { pt3dadd( 40.6864, -42.9469, -50.9065, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 8.38497, 9.1958, 2.58168, 2.49 ) }
    dend_28 { pt3dadd( 9.86136, 12.0651, 1.66634, 2.49 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 91/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.93503, -6.60895, -4.25832, 0.83 ) }
    dend_21 { pt3dadd( -12.515, -5.70393, -4.2919, 0.83 ) }
    dend_21 { pt3dadd( -16.4809, -3.64955, -4.32567, 0.83 ) }
    dend_21 { pt3dadd( -18.788, -2.10518, -4.36419, 0.55 ) }
    dend_21 { pt3dadd( -21.9456, 0.251662, -4.42885, 0.83 ) }
    dend_21 { pt3dadd( -23.8066, 1.76835, -4.46886, 0.83 ) }
    dend_21 { pt3dadd( -26.6587, 4.23072, -4.52853, 1.11 ) }
    dend_21 { pt3dadd( -29.0503, 6.61771, -4.579, 0.83 ) }
    dend_21 { pt3dadd( -30.7364, 8.40351, -4.61059, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( -32.1238, 9.80169, -4.63122, 1.11 ) }
    dend_21 { pt3dadd( -35.0523, 12.4385, -4.66808, 0.83 ) }
    dend_21 { pt3dadd( -37.7264, 14.8848, -4.72283, 0.83 ) }
    dend_21 { pt3dadd( -40.517, 17.4792, -4.94624, 0.83 ) }
    dend_21 { pt3dadd( -43.7674, 20.4209, -5.35032, 1.11 ) }
    dend_21 { pt3dadd( -46.5569, 23.0312, -5.73278, 0.83 ) }
    dend_21 { pt3dadd( -48.2649, 24.7324, -5.97043, 0.83 ) }
    dend_21 { pt3dadd( -52.0605, 28.7625, -6.50387, 0.83 ) }
    dend_21 { pt3dadd( -55.0805, 32.1657, -6.91038, 0.55 ) }
    dend_21 { pt3dadd( -58.0092, 35.6695, -7.15834, 0.55 ) }
    dend_21 { pt3dadd( -60.3491, 38.5145, -7.16444, 0.83 ) }
    dend_21 { pt3dadd( -62.9754, 41.6475, -6.85778, 0.83 ) }
    dend_21 { pt3dadd( -64.785, 43.7127, -6.54189, 0.55 ) }
    dend_21 { pt3dadd( -66.6494, 45.6343, -6.06279, 0.83 ) }
    dend_21 { pt3dadd( -68.6561, 47.8307, -5.27275, 0.55 ) }
    dend_21 { pt3dadd( -70.9764, 50.6022, -4.20192, 0.55 ) }
    dend_21 { pt3dadd( -73.7785, 53.6936, -2.90683, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 17/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.47503, -10.0702, -6.25832, 2.49 ) }
    dend_0 { pt3dadd( -7.52058, -15.1666, -6.17909, 2.49 ) }
    dend_0 { pt3dadd( -8.13043, -18.1392, -6.13288, 1.66 ) }
    dend_0 { pt3dadd( -8.71889, -21.0076, -6.08829, 2.77 ) }
    dend_0 { pt3dadd( -9.23385, -23.5177, -6.04926, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 22/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.49876, 8.03889, 0.455321, 0.55 ) }
    axon_0 { pt3dadd( 18.9889, 18.7607, 0.455321, 0.55 ) }
    axon_0 { pt3dadd( 29.479, 29.4825, 0.455321, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 25/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 40.6864, -42.9469, -50.9065, 0.55 ) }
    dend_37 { pt3dadd( 41.532, -43.4264, -51.8097, 0.55 ) }
    dend_37 { pt3dadd( 42.4077, -44.0585, -52.7548, 0.55 ) }
    dend_37 { pt3dadd( 45.1951, -46.3408, -55.8071, 0.55 ) }
    dend_37 { pt3dadd( 46.3107, -47.2486, -56.9645, 0.55 ) }
    dend_37 { pt3dadd( 47.2906, -47.9713, -57.9079, 0.55 ) }
    dend_37 { pt3dadd( 48.9737, -49.1494, -59.4504, 0.83 ) }
    dend_37 { pt3dadd( 50.6183, -50.2004, -60.8748, 0.83 ) }
    dend_37 { pt3dadd( 52.0315, -51.1094, -62.0997, 0.55 ) }
    dend_37 { pt3dadd( 52.7733, -51.6217, -62.7762, 0.55 ) }
    dend_37 { pt3dadd( 54.0918, -52.437, -64.1868, 0.55 ) }
    dend_37 { pt3dadd( 55.0205, -52.9373, -65.2378, 0.83 ) }
    dend_37 { pt3dadd( 55.654, -53.2913, -66.0226, 0.28 ) }
    dend_37 { pt3dadd( 56.7649, -53.9728, -67.5229, 0.55 ) }
    dend_37 { pt3dadd( 58.2756, -55.0739, -69.7557, 0.83 ) }
    dend_37 { pt3dadd( 59.6325, -56.2383, -71.7737, 0.55 ) }
    dend_37 { pt3dadd( 60.3676, -56.9559, -72.7896, 0.55 ) }
    dend_37 { pt3dadd( 61.4397, -57.9736, -74.009, 0.55 ) }
    dend_37 { pt3dadd( 62.5237, -58.9456, -74.9648, 0.28 ) }
    dend_37 { pt3dadd( 63.26, -59.5578, -75.4275, 0.83 ) }
    dend_37 { pt3dadd( 65.4959, -61.2889, -76.3921, 0.55 ) }
    dend_37 { pt3dadd( 66.9321, -62.2674, -76.8323, 0.28 ) }
    dend_37 { pt3dadd( 68.7798, -63.299, -77.3488, 0.55 ) }
    dend_37 { pt3dadd( 69.8465, -63.8016, -77.6022, 0.28 ) }
    dend_37 { pt3dadd( 70.8362, -64.2436, -77.7952, 0.55 ) }
    dend_37 { pt3dadd( 72.1238, -64.7418, -78.088, 0.28 ) }
    dend_37 { pt3dadd( 73.3579, -65.1519, -78.424, 0.55 ) }
    dend_37 { pt3dadd( 75.3194, -65.7363, -79.0615, 0.28 ) }
    dend_37 { pt3dadd( 76.3949, -66.0633, -79.5177, 0.55 ) }
    dend_37 { pt3dadd( 77.4666, -66.4461, -80.0903, 0.55 ) }
    dend_37 { pt3dadd( 78.8199, -66.798, -81.3662, 0.28 ) }
    dend_37 { pt3dadd( 79.2947, -66.8809, -81.9018, 0.28 ) }
    dend_37 { pt3dadd( 79.9218, -66.9723, -82.7289, 0.55 ) }
    dend_37 { pt3dadd( 81.3097, -67.1511, -84.7423, 0.28 ) }
    dend_37 { pt3dadd( 82.4615, -67.2781, -86.5063, 0.83 ) }
    dend_37 { pt3dadd( 87.0942, -67.737, -93.7737, 0.28 ) }
    dend_37 { pt3dadd( 87.5945, -67.7728, -94.5893, 0.55 ) }
    dend_37 { pt3dadd( 88.6203, -67.8128, -96.2866, 0.55 ) }
    dend_37 { pt3dadd( 89.6469, -67.8457, -98.0163, 0.28 ) }
    dend_37 { pt3dadd( 90.4256, -67.8704, -99.2838, 0.55 ) }
    dend_37 { pt3dadd( 93.0107, -67.986, -103.286, 0.55 ) }
    dend_37 { pt3dadd( 95.2378, -68.3226, -106.4, 0.55 ) }
    dend_37 { pt3dadd( 96.3067, -68.4962, -107.847, 0.28 ) }
    dend_37 { pt3dadd( 97.0501, -68.6078, -108.795, 0.55 ) }
    dend_37 { pt3dadd( 97.7182, -68.7305, -109.639, 0.28 ) }
    dend_37 { pt3dadd( 98.6296, -69.0091, -110.779, 0.55 ) }
    dend_37 { pt3dadd( 99.3665, -69.3811, -111.712, 0.28 ) }
    dend_37 { pt3dadd( 100.157, -69.8859, -112.755, 0.55 ) }
    dend_37 { pt3dadd( 100.826, -70.2896, -113.747, 0.55 ) }
    dend_37 { pt3dadd( 101.831, -70.831, -115.273, 0.28 ) }
    dend_37 { pt3dadd( 102.869, -71.4135, -116.868, 0.55 ) }
    dend_37 { pt3dadd( 104.138, -72.1491, -118.886, 0.28 ) }
    dend_37 { pt3dadd( 104.978, -72.66, -120.241, 0.55 ) }
    dend_37 { pt3dadd( 106.536, -73.7639, -122.828, 0.28 ) }
    dend_37 { pt3dadd( 106.928, -74.0491, -123.418, 0.55 ) }
    dend_37 { pt3dadd( 107.832, -74.6945, -124.643, 0.28 ) }
    dend_37 { pt3dadd( 109.165, -75.6907, -126.288, 0.55 ) }
    dend_37 { pt3dadd( 110.151, -76.4869, -127.37, 0.28 ) }
    dend_37 { pt3dadd( 111.114, -77.3278, -128.388, 0.55 ) }
    dend_37 { pt3dadd( 111.957, -78.1291, -129.287, 0.28 ) }
    dend_37 { pt3dadd( 112.862, -78.9977, -130.332, 0.55 ) }
    dend_37 { pt3dadd( 113.267, -79.3591, -130.847, 0.28 ) }
    dend_37 { pt3dadd( 113.848, -79.779, -131.698, 0.55 ) }
    dend_37 { pt3dadd( 114.614, -80.2936, -133.072, 0.28 ) }
    dend_37 { pt3dadd( 114.898, -80.4692, -133.612, 0.55 ) }
    dend_37 { pt3dadd( 115.11, -80.6011, -134.042, 0.28 ) }
    dend_37 { pt3dadd( 115.905, -81.1438, -135.762, 0.55 ) }
    dend_37 { pt3dadd( 117.859, -82.6113, -140.407, 0.28 ) }
    dend_37 { pt3dadd( 118.25, -82.9295, -141.442, 0.55 ) }
    dend_37 { pt3dadd( 118.592, -83.2811, -142.463, 0.28 ) }
    dend_37 { pt3dadd( 118.847, -83.5905, -143.212, 0.28 ) }
    dend_37 { pt3dadd( 119.191, -84.0573, -144.193, 0.55 ) }
    dend_37 { pt3dadd( 119.869, -85.2223, -146.043, 0.28 ) }
    dend_37 { pt3dadd( 120.451, -86.2374, -147.381, 0.55 ) }
    dend_37 { pt3dadd( 121.057, -87.2186, -148.537, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( 121.856, -88.5018, -149.852, 0.28 ) }
    dend_37 { pt3dadd( 122.884, -90.2568, -151.166, 0.83 ) }
    dend_37 { pt3dadd( 123.706, -91.7706, -151.936, 0.28 ) }
    dend_37 { pt3dadd( 124.98, -94.7029, -152.754, 0.55 ) }
    dend_37 { pt3dadd( 125.74, -96.9721, -153.1, 0.28 ) }
    dend_37 { pt3dadd( 126.005, -97.9344, -153.18, 0.55 ) }
    dend_37 { pt3dadd( 126.655, -101.354, -153.222, 0.28 ) }
    dend_37 { pt3dadd( 126.858, -102.915, -153.163, 0.55 ) }
    dend_37 { pt3dadd( 127.089, -105.165, -153.087, 0.28 ) }
    dend_37 { pt3dadd( 127.173, -106.251, -153.05, 0.28 ) }
    dend_37 { pt3dadd( 127.282, -107.286, -153.122, 0.55 ) }
    dend_37 { pt3dadd( 127.588, -109.214, -153.373, 0.28 ) }
    dend_37 { pt3dadd( 128.067, -111.162, -153.828, 0.28 ) }
    dend_37 { pt3dadd( 128.348, -112.118, -154.089, 0.55 ) }
    dend_37 { pt3dadd( 129.078, -114.18, -154.732, 0.28 ) }
    dend_37 { pt3dadd( 129.709, -115.823, -155.267, 0.55 ) }
    dend_37 { pt3dadd( 130.433, -117.673, -155.936, 0.28 ) }
    dend_37 { pt3dadd( 130.99, -118.847, -156.499, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 18/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 40.6864, -42.9469, -50.9065, 1.11 ) }
    dend_36 { pt3dadd( 41.2998, -45.2732, -51.6224, 1.11 ) }
    dend_36 { pt3dadd( 42.1122, -47.854, -52.4861, 0.55 ) }
    dend_36 { pt3dadd( 42.7217, -49.646, -53.0993, 0.55 ) }
    dend_36 { pt3dadd( 43.4927, -51.7929, -53.8082, 0.55 ) }
    dend_36 { pt3dadd( 44.1284, -53.5751, -54.3347, 0.55 ) }
    dend_36 { pt3dadd( 44.8513, -55.5787, -54.9127, 0.83 ) }
    dend_36 { pt3dadd( 45.5715, -57.5116, -55.4335, 0.55 ) }
    dend_36 { pt3dadd( 46.13, -58.8924, -55.7189, 0.28 ) }
    dend_36 { pt3dadd( 46.6286, -60.1046, -55.9276, 0.55 ) }
    dend_36 { pt3dadd( 47.3633, -62.0178, -56.1431, 0.28 ) }
    dend_36 { pt3dadd( 47.7863, -63.1608, -56.2209, 0.55 ) }
    dend_36 { pt3dadd( 48.511, -65.0588, -56.4222, 0.55 ) }
    dend_36 { pt3dadd( 49.1055, -66.3422, -56.6138, 0.28 ) }
    dend_36 { pt3dadd( 49.4244, -66.8852, -56.754, 0.55 ) }
    dend_36 { pt3dadd( 50.2946, -68.1636, -57.2071, 0.28 ) }
    dend_36 { pt3dadd( 51.9339, -70.2789, -58.0412, 0.55 ) }
    dend_36 { pt3dadd( 53.7047, -72.3209, -58.8345, 0.28 ) }
    dend_36 { pt3dadd( 55.0458, -73.6895, -59.4223, 0.83 ) }
    dend_36 { pt3dadd( 56.9578, -75.4836, -60.1734, 0.28 ) }
    dend_36 { pt3dadd( 58.67, -77.0714, -60.856, 0.55 ) }
    dend_36 { pt3dadd( 59.9747, -78.2688, -61.3634, 0.28 ) }
    dend_36 { pt3dadd( 61.8154, -80.0154, -61.9859, 0.55 ) }
    dend_36 { pt3dadd( 63.0501, -81.2326, -62.358, 0.55 ) }
    dend_36 { pt3dadd( 64.6729, -82.9513, -62.876, 0.55 ) }
    dend_36 { pt3dadd( 66.0257, -84.4938, -63.3118, 0.28 ) }
    dend_36 { pt3dadd( 67.1218, -85.802, -63.6591, 0.55 ) }
    dend_36 { pt3dadd( 67.7612, -86.6501, -63.8892, 0.28 ) }
    dend_36 { pt3dadd( 68.4367, -87.6082, -64.1069, 0.55 ) }
    dend_36 { pt3dadd( 68.971, -88.3792, -64.2088, 0.28 ) }
    dend_36 { pt3dadd( 69.8905, -89.6536, -64.2667, 0.55 ) }
    dend_36 { pt3dadd( 70.875, -90.967, -64.182, 0.28 ) }
    dend_36 { pt3dadd( 72.2639, -92.8029, -63.9779, 0.55 ) }
    dend_36 { pt3dadd( 73.3723, -94.2446, -63.755, 0.55 ) }
    dend_36 { pt3dadd( 74.6538, -95.9066, -63.4407, 0.28 ) }
    dend_36 { pt3dadd( 75.6493, -97.2634, -63.1787, 0.55 ) }
    dend_36 { pt3dadd( 76.6234, -98.6501, -62.8999, 0.28 ) }
    dend_36 { pt3dadd( 77.3786, -99.7706, -62.7127, 0.55 ) }
    dend_36 { pt3dadd( 77.7843, -100.413, -62.6048, 0.28 ) }
    dend_36 { pt3dadd( 78.0007, -100.782, -62.5746, 0.55 ) }
    dend_36 { pt3dadd( 78.7935, -102.136, -62.5761, 0.28 ) }
    dend_36 { pt3dadd( 79.8322, -103.875, -62.7374, 0.55 ) }
    dend_36 { pt3dadd( 80.4803, -104.877, -62.8715, 0.28 ) }
    dend_36 { pt3dadd( 81.2116, -105.924, -63.0198, 0.55 ) }
    dend_36 { pt3dadd( 82.2853, -107.356, -63.2368, 0.28 ) }
    dend_36 { pt3dadd( 82.9794, -108.241, -63.2686, 0.55 ) }
    dend_36 { pt3dadd( 83.735, -109.149, -63.2761, 0.28 ) }
    dend_36 { pt3dadd( 84.6544, -110.274, -63.2793, 0.55 ) }
    dend_36 { pt3dadd( 85.5987, -111.39, -63.2717, 0.28 ) }
    dend_36 { pt3dadd( 86.1975, -112.059, -63.2725, 0.83 ) }
    dend_36 { pt3dadd( 88.3537, -114.376, -63.2124, 0.28 ) }
    dend_36 { pt3dadd( 89.9437, -116.017, -63.1746, 0.28 ) }
    dend_36 { pt3dadd( 90.8239, -116.897, -63.1508, 0.55 ) }
    dend_36 { pt3dadd( 91.51, -117.523, -63.1891, 0.28 ) }
    dend_36 { pt3dadd( 92.9579, -118.678, -63.4033, 0.55 ) }
    dend_36 { pt3dadd( 93.9911, -119.378, -63.6002, 0.28 ) }
    dend_36 { pt3dadd( 95.3346, -120.082, -63.905, 0.55 ) }
    dend_36 { pt3dadd( 96.6165, -120.603, -64.1288, 0.28 ) }
    dend_36 { pt3dadd( 98.0952, -121.066, -64.36, 0.55 ) }
    dend_36 { pt3dadd( 99.8649, -121.504, -64.7061, 0.28 ) }
    dend_36 { pt3dadd( 100.971, -121.707, -64.9535, 0.55 ) }
    dend_36 { pt3dadd( 102.96, -121.993, -65.4624, 0.28 ) }
    dend_36 { pt3dadd( 104.382, -122.141, -65.8272, 0.55 ) }
    dend_36 { pt3dadd( 105.547, -122.227, -66.101, 0.28 ) }
    dend_36 { pt3dadd( 107.354, -122.384, -66.3785, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 9.86136, 12.0651, 1.66634, 1.38 ) }
    dend_34 { pt3dadd( 9.54996, 13.1211, -0.379994, 1.38 ) }
    dend_34 { pt3dadd( 9.32209, 14.6955, -3.75335, 1.38 ) }
    dend_34 { pt3dadd( 9.48332, 15.6699, -6.39033, 1.38 ) }
    dend_34 { pt3dadd( 9.80991, 16.9667, -9.86237, 1.11 ) }
    dend_34 { pt3dadd( 10.0571, 17.9346, -12.4277, 1.11 ) }
    dend_34 { pt3dadd( 10.1623, 18.7433, -14.6872, 0.83 ) }
    dend_34 { pt3dadd( 10.1952, 19.3772, -17.0475, 0.83 ) }
    dend_34 { pt3dadd( 9.89826, 20.6626, -22.2545, 1.66 ) }
    dend_34 { pt3dadd( 9.62089, 21.2336, -24.0315, 0.55 ) }
    dend_34 { pt3dadd( 9.46525, 21.5572, -24.6965, 0.55 ) }
    dend_34 { pt3dadd( 8.36423, 23.4418, -27.754, 0.55 ) }
    dend_34 { pt3dadd( 7.76061, 24.2768, -28.9156, 0.28 ) }
    dend_34 { pt3dadd( 6.21558, 26.4027, -31.3326, 0.83 ) }
    dend_34 { pt3dadd( 3.84493, 30.1242, -34.6835, 0.55 ) }
    dend_34 { pt3dadd( 2.91292, 32.0181, -36.2112, 0.55 ) }
    dend_34 { pt3dadd( 2.33693, 33.8064, -37.424, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( 2.19281, 34.7011, -37.9185, 0.55 ) }
    dend_34 { pt3dadd( 2.06776, 36.1755, -38.5505, 0.83 ) }
    dend_34 { pt3dadd( 2.09328, 38.1387, -39.1477, 0.55 ) }
    dend_34 { pt3dadd( 2.19178, 39.5731, -39.3578, 0.55 ) }
    dend_34 { pt3dadd( 2.41613, 41.5741, -39.7006, 0.55 ) }
    dend_34 { pt3dadd( 2.58037, 42.7059, -39.92, 0.55 ) }
    dend_34 { pt3dadd( 2.81392, 44.7051, -40.4029, 0.55 ) }
    dend_34 { pt3dadd( 2.90965, 45.9786, -40.7649, 0.55 ) }
    dend_34 { pt3dadd( 2.99614, 47.6171, -41.4173, 0.83 ) }
    dend_34 { pt3dadd( 3.028, 49.4647, -42.3224, 0.28 ) }
    dend_34 { pt3dadd( 2.99181, 50.7212, -43.0329, 0.83 ) }
    dend_34 { pt3dadd( 2.91912, 52.6206, -44.1537, 0.28 ) }
    dend_34 { pt3dadd( 2.88327, 53.9592, -44.9639, 0.83 ) }
    dend_34 { pt3dadd( 2.80848, 56.7042, -46.6076, 0.28 ) }
    dend_34 { pt3dadd( 2.80332, 57.7651, -47.2541, 0.28 ) }
    dend_34 { pt3dadd( 2.81681, 58.7166, -47.8258, 0.55 ) }
    dend_34 { pt3dadd( 2.96118, 60.9027, -49.2065, 0.83 ) }
    dend_34 { pt3dadd( 3.08165, 62.1059, -49.9576, 0.28 ) }
    dend_34 { pt3dadd( 3.14208, 62.7321, -50.3549, 0.55 ) }
    dend_34 { pt3dadd( 3.32973, 64.8421, -51.6284, 0.28 ) }
    dend_34 { pt3dadd( 3.42624, 66.1341, -52.5017, 0.83 ) }
    dend_34 { pt3dadd( 3.45031, 67.416, -53.4609, 0.28 ) }
    dend_34 { pt3dadd( 3.33868, 68.4202, -54.2967, 0.55 ) }
    dend_34 { pt3dadd( 3.12198, 69.6068, -55.3175, 0.28 ) }
    dend_34 { pt3dadd( 3.01567, 70.0816, -55.7089, 0.55 ) }
    dend_34 { pt3dadd( 2.7012, 71.3012, -56.6473, 0.28 ) }
    dend_34 { pt3dadd( 2.5672, 71.9455, -57.1558, 0.55 ) }
    dend_34 { pt3dadd( 2.21504, 74.1669, -58.847, 0.83 ) }
    dend_34 { pt3dadd( 2.09921, 75.3829, -59.7582, 0.55 ) }
    dend_34 { pt3dadd( 2.11356, 76.6583, -60.6829, 0.28 ) }
    dend_34 { pt3dadd( 2.20216, 77.6495, -61.3883, 0.83 ) }
    dend_34 { pt3dadd( 2.60334, 79.8557, -62.9819, 0.55 ) }
    dend_34 { pt3dadd( 2.87322, 80.9303, -63.7817, 0.28 ) }
    dend_34 { pt3dadd( 3.07052, 81.4661, -64.1842, 0.55 ) }
    dend_34 { pt3dadd( 3.68758, 83.0144, -65.3379, 0.28 ) }
    dend_34 { pt3dadd( 3.84599, 83.3663, -65.5958, 0.55 ) }
    dend_34 { pt3dadd( 4.67726, 85.1612, -66.7901, 0.28 ) }
    dend_34 { pt3dadd( 5.10057, 86.1033, -67.3699, 0.83 ) }
    dend_34 { pt3dadd( 5.94339, 88.0319, -68.4933, 0.28 ) }
    dend_34 { pt3dadd( 6.28871, 88.9045, -68.9286, 0.55 ) }
    dend_34 { pt3dadd( 6.82764, 90.479, -69.5917, 0.28 ) }
    dend_34 { pt3dadd( 7.23104, 91.7125, -70.043, 0.55 ) }
    dend_34 { pt3dadd( 7.8771, 93.9345, -70.7203, 0.28 ) }
    dend_34 { pt3dadd( 8.41071, 95.5386, -71.7, 0.55 ) }
    dend_34 { pt3dadd( 8.96127, 97.1552, -73.051, 0.55 ) }
    dend_34 { pt3dadd( 9.69948, 99.1713, -75.067, 0.28 ) }
    dend_34 { pt3dadd( 10.1057, 100.214, -76.2406, 0.55 ) }
    dend_34 { pt3dadd( 10.5888, 101.385, -77.6843, 0.55 ) }
    dend_34 { pt3dadd( 13.5576, 108.25, -86.7553, 0.55 ) }
    dend_34 { pt3dadd( 13.9444, 109.1, -87.9553, 0.28 ) }
    dend_34 { pt3dadd( 14.1759, 109.584, -88.6658, 0.55 ) }
    dend_34 { pt3dadd( 14.5157, 110.315, -89.7345, 0.28 ) }
    dend_34 { pt3dadd( 14.7286, 110.817, -90.3985, 0.55 ) }
    dend_34 { pt3dadd( 15.1064, 111.903, -91.3566, 0.55 ) }
    dend_34 { pt3dadd( 15.3067, 112.894, -91.5576, 0.28 ) }
    dend_34 { pt3dadd( 15.5704, 114.135, -91.8922, 0.55 ) }
    dend_34 { pt3dadd( 15.7563, 115.1, -92.2113, 0.55 ) }
    dend_34 { pt3dadd( 15.846, 115.658, -92.4464, 0.28 ) }
    dend_34 { pt3dadd( 16.0561, 117.253, -93.245, 0.55 ) }
    dend_34 { pt3dadd( 16.1839, 118.521, -94.0113, 0.55 ) }
    dend_34 { pt3dadd( 16.268, 119.313, -94.5085, 0.28 ) }
    dend_34 { pt3dadd( 16.3201, 119.693, -94.7517, 0.55 ) }
    dend_34 { pt3dadd( 16.5116, 120.939, -95.509, 0.28 ) }
    dend_34 { pt3dadd( 16.6065, 121.682, -95.9258, 0.55 ) }
    dend_34 { pt3dadd( 16.7772, 122.965, -96.6153, 0.28 ) }
    dend_34 { pt3dadd( 17.0771, 125.043, -97.6831, 0.55 ) }
    dend_34 { pt3dadd( 17.5003, 127.623, -98.9567, 0.28 ) }
    dend_34 { pt3dadd( 17.8019, 129.392, -99.7602, 0.55 ) }
    dend_34 { pt3dadd( 18.0329, 130.713, -100.311, 0.55 ) }
    dend_34 { pt3dadd( 18.3427, 132.475, -101.001, 0.55 ) }
    dend_34 { pt3dadd( 18.5893, 133.873, -101.479, 0.28 ) }
    dend_34 { pt3dadd( 18.8529, 135.534, -101.978, 0.55 ) }
    dend_34 { pt3dadd( 19.1631, 137.31, -102.385, 0.55 ) }
    dend_34 { pt3dadd( 19.2215, 137.589, -102.437, 0.28 ) }
    dend_34 { pt3dadd( 19.4034, 138.302, -102.561, 0.28 ) }
    dend_34 { pt3dadd( 20.037, 140.529, -102.918, 0.55 ) }
    dend_34 { pt3dadd( 20.5803, 142.057, -103.235, 0.83 ) }
    dend_34 { pt3dadd( 21.1346, 143.409, -103.494, 0.28 ) }
    dend_34 { pt3dadd( 21.6347, 144.454, -103.676, 0.55 ) }
    dend_34 { pt3dadd( 22.6918, 146.418, -103.777, 0.28 ) }
    dend_34 { pt3dadd( 23.6373, 147.944, -103.68, 0.55 ) }
    dend_34 { pt3dadd( 25.0037, 149.806, -103.328, 0.28 ) }
    dend_34 { pt3dadd( 26.5868, 151.649, -102.764, 0.55 ) }
    dend_34 { pt3dadd( 27.7378, 152.789, -102.299, 0.55 ) }
    dend_34 { pt3dadd( 30.2812, 155.135, -101.081, 0.28 ) }
    dend_34 { pt3dadd( 31.1706, 155.887, -100.561, 0.28 ) }
    dend_34 { pt3dadd( 31.9258, 156.468, -100.069, 0.55 ) }
    dend_34 { pt3dadd( 33.1278, 157.31, -99.2386, 0.28 ) }
    dend_34 { pt3dadd( 35.1537, 158.506, -98.2137, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 9.86136, 12.0651, 1.66634, 0.83 ) }
    dend_29 { pt3dadd( 11.2737, 15.0967, 0.056102, 0.83 ) }
    dend_29 { pt3dadd( 12.8951, 17.8795, -1.44538, 0.83 ) }
    dend_29 { pt3dadd( 15.113, 20.725, -3.10688, 0.83 ) }
    dend_29 { pt3dadd( 17.234, 23.0115, -4.70997, 1.38 ) }
    dend_29 { pt3dadd( 18.7966, 24.6721, -5.9826, 0.83 ) }
    dend_29 { pt3dadd( 20.1277, 26.0339, -7.25233, 0.55 ) }
    dend_29 { pt3dadd( 22.3913, 28.1723, -9.70788, 0.55 ) }
    dend_29 { pt3dadd( 24.784, 30.2355, -12.3239, 0.83 ) }
    dend_29 { pt3dadd( 27.3527, 32.1418, -15.095, 0.83 ) }
    dend_29 { pt3dadd( 29.6131, 33.6043, -17.6059, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_29 { pt3dadd( 33.2715, 35.9157, -21.9064, 0.55 ) }
    dend_29 { pt3dadd( 33.9423, 36.4029, -22.8544, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -73.7785, 53.6936, -2.90683, 0.55 ) }
    dend_25 { pt3dadd( -75.1503, 55.364, -3.80057, 0.55 ) }
    dend_25 { pt3dadd( -76.489, 57.0355, -4.82431, 0.55 ) }
    dend_25 { pt3dadd( -77.4359, 58.1326, -5.6932, 0.55 ) }
    dend_25 { pt3dadd( -78.8776, 59.7156, -7.21855, 0.55 ) }
    dend_25 { pt3dadd( -79.7296, 60.637, -8.19791, 0.28 ) }
    dend_25 { pt3dadd( -80.637, 61.5972, -9.22225, 0.83 ) }
    dend_25 { pt3dadd( -82.3174, 63.2456, -11.3729, 0.55 ) }
    dend_25 { pt3dadd( -83.5349, 64.4601, -13.1404, 0.55 ) }
    dend_25 { pt3dadd( -84.409, 65.3597, -14.4924, 0.28 ) }
    dend_25 { pt3dadd( -85.2064, 66.2014, -15.7108, 0.55 ) }
    dend_25 { pt3dadd( -86.2857, 67.3478, -17.2205, 0.55 ) }
    dend_25 { pt3dadd( -87.7679, 69.0499, -19.2338, 0.55 ) }
    dend_25 { pt3dadd( -88.7736, 70.4323, -20.4978, 0.28 ) }
    dend_25 { pt3dadd( -89.6018, 71.805, -21.4031, 0.55 ) }
    dend_25 { pt3dadd( -90.2894, 73.0776, -22.043, 0.28 ) }
    dend_25 { pt3dadd( -90.9953, 74.5621, -22.6385, 0.55 ) }
    dend_25 { pt3dadd( -91.2816, 75.2064, -22.8382, 0.55 ) }
    dend_25 { pt3dadd( -91.7565, 76.2555, -23.0796, 0.55 ) }
    dend_25 { pt3dadd( -92.4251, 77.6584, -23.4101, 0.28 ) }
    dend_25 { pt3dadd( -93.0697, 79.0102, -23.7772, 0.55 ) }
    dend_25 { pt3dadd( -93.6968, 80.2383, -24.1591, 0.28 ) }
    dend_25 { pt3dadd( -94.8484, 82.2394, -24.8946, 0.55 ) }
    dend_25 { pt3dadd( -95.6165, 83.4381, -25.3868, 0.28 ) }
    dend_25 { pt3dadd( -95.7615, 83.6475, -25.4936, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 27/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -73.7785, 53.6936, -2.90683, 0.55 ) }
    dend_22 { pt3dadd( -75.6222, 55.916, -1.95981, 0.55 ) }
    dend_22 { pt3dadd( -76.8743, 57.2681, -1.43853, 0.55 ) }
    dend_22 { pt3dadd( -79.6468, 59.8377, -0.415458, 0.55 ) }
    dend_22 { pt3dadd( -81.2449, 61.1116, 0.0704242, 0.83 ) }
    dend_22 { pt3dadd( -83.0169, 62.296, 0.548605, 0.55 ) }
    dend_22 { pt3dadd( -85.661, 64.0634, 1.26216, 0.55 ) }
    dend_22 { pt3dadd( -87.2005, 65.0751, 1.70871, 0.55 ) }
    dend_22 { pt3dadd( -90.349, 66.8632, 2.5414, 0.83 ) }
    dend_22 { pt3dadd( -93.0904, 68.0429, 3.10481, 0.83 ) }
    dend_22 { pt3dadd( -96.585, 69.3962, 3.61332, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.23385, -23.5177, -6.04926, 2.49 ) }
    dend_16 { pt3dadd( -8.50736, -26.3617, -6.2241, 2.49 ) }
    dend_16 { pt3dadd( -7.93174, -28.615, -6.36263, 1.38 ) }
    dend_16 { pt3dadd( -7.84723, -28.9458, -6.38297, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 42/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.23385, -23.5177, -6.04926, 1.38 ) }
    dend_1 { pt3dadd( -8.75853, -28.1118, -0.426591, 1.38 ) }
    dend_1 { pt3dadd( -8.57379, -29.8974, 1.75873, 1.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 45/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 29.479, 29.4825, 0.455321, 0.524975 ) }
    axon_1 { pt3dadd( 39.9692, 40.2043, 0.455321, 0.524975 ) }
    axon_1 { pt3dadd( 50.4593, 50.9261, 0.455321, 0.524975 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 48/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 33.9423, 36.4029, -22.8544, 0.55 ) }
    dend_31 { pt3dadd( 34.6158, 37.8397, -23.0329, 0.55 ) }
    dend_31 { pt3dadd( 35.5745, 39.849, -23.3831, 0.83 ) }
    dend_31 { pt3dadd( 36.4165, 41.5688, -23.8179, 0.55 ) }
    dend_31 { pt3dadd( 37.6709, 43.9896, -24.4885, 0.28 ) }
    dend_31 { pt3dadd( 39.0129, 46.5073, -25.1961, 0.55 ) }
    dend_31 { pt3dadd( 40.845, 49.8016, -26.1249, 0.55 ) }
    dend_31 { pt3dadd( 43.2872, 53.8444, -27.3038, 0.55 ) }
    dend_31 { pt3dadd( 45.2697, 56.8885, -28.1777, 0.55 ) }
    dend_31 { pt3dadd( 46.4457, 58.5764, -28.634, 0.83 ) }
    dend_31 { pt3dadd( 47.5164, 59.9524, -28.963, 0.28 ) }
    dend_31 { pt3dadd( 48.2834, 60.8834, -29.1643, 0.28 ) }
    dend_31 { pt3dadd( 49.9962, 62.7176, -29.4659, 0.55 ) }
    dend_31 { pt3dadd( 52.1905, 64.5805, -29.5909, 0.83 ) }
    dend_31 { pt3dadd( 53.9432, 65.9363, -29.5883, 0.83 ) }
    dend_31 { pt3dadd( 55.6449, 67.1817, -29.5869, 0.28 ) }
    dend_31 { pt3dadd( 56.7687, 68.0099, -29.593, 0.55 ) }
    dend_31 { pt3dadd( 58.7618, 69.5462, -29.6431, 0.55 ) }
    dend_31 { pt3dadd( 61.4781, 71.67, -29.7587, 0.55 ) }
    dend_31 { pt3dadd( 63.8895, 73.6684, -29.895, 0.83 ) }
    dend_31 { pt3dadd( 66.2513, 75.8906, -30.1415, 0.28 ) }
    dend_31 { pt3dadd( 68.2003, 78.0244, -30.431, 0.55 ) }
    dend_31 { pt3dadd( 68.9719, 78.9796, -30.5978, 0.55 ) }
    dend_31 { pt3dadd( 70.2709, 80.8176, -30.9616, 0.55 ) }
    dend_31 { pt3dadd( 72.1565, 83.7593, -31.5731, 0.83 ) }
    dend_31 { pt3dadd( 73.8133, 86.3573, -32.1807, 0.28 ) }
    dend_31 { pt3dadd( 74.9801, 88.1692, -32.614, 0.55 ) }
    dend_31 { pt3dadd( 77.2662, 91.5096, -33.4683, 0.55 ) }
    dend_31 { pt3dadd( 78.3974, 93.1078, -33.8943, 0.55 ) }
    dend_31 { pt3dadd( 80.1671, 95.5527, -34.6341, 0.83 ) }
    dend_31 { pt3dadd( 82.5452, 98.691, -35.6683, 0.28 ) }
    dend_31 { pt3dadd( 84.5993, 101.244, -36.5208, 0.55 ) }
    dend_31 { pt3dadd( 87.0491, 104.208, -37.5549, 0.28 ) }
    dend_31 { pt3dadd( 88.3209, 105.8, -38.1425, 0.55 ) }
    dend_31 { pt3dadd( 89.6259, 107.433, -38.8047, 0.28 ) }
    dend_31 { pt3dadd( 89.8873, 107.749, -38.946, 0.55 ) }
    dend_31 { pt3dadd( 90.9145, 108.953, -39.5203, 0.28 ) }
    dend_31 { pt3dadd( 91.8923, 110.055, -40.0742, 0.55 ) }
    dend_31 { pt3dadd( 93.2342, 111.53, -40.7418, 0.28 ) }
    dend_31 { pt3dadd( 94.5952, 112.959, -41.3135, 0.55 ) }
    dend_31 { pt3dadd( 96.6839, 115.029, -42.0433, 0.55 ) }
    dend_31 { pt3dadd( 98.1799, 116.515, -42.5266, 0.28 ) }
    dend_31 { pt3dadd( 99.3341, 117.69, -42.8472, 0.55 ) }
    dend_31 { pt3dadd( 100.468, 118.875, -43.0938, 0.28 ) }
    dend_31 { pt3dadd( 102.005, 120.54, -43.3383, 0.55 ) }
    dend_31 { pt3dadd( 104.216, 123.011, -43.4985, 0.28 ) }
    dend_31 { pt3dadd( 105.242, 124.227, -43.488, 0.28 ) }
    dend_31 { pt3dadd( 107.464, 126.994, -43.298, 0.55 ) }
    dend_31 { pt3dadd( 108.981, 128.887, -43.1538, 0.28 ) }
    dend_31 { pt3dadd( 110.335, 130.564, -43.0873, 0.55 ) }
    dend_31 { pt3dadd( 111.785, 132.372, -43.0588, 0.28 ) }
    dend_31 { pt3dadd( 112.599, 133.398, -43.062, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_31 { pt3dadd( 113.543, 134.562, -43.1111, 0.28 ) }
    dend_31 { pt3dadd( 115.158, 136.665, -43.3696, 0.55 ) }
    dend_31 { pt3dadd( 116.44, 138.455, -43.6665, 0.28 ) }
    dend_31 { pt3dadd( 118.098, 141.022, -44.2133, 0.55 ) }
    dend_31 { pt3dadd( 118.975, 142.535, -44.6054, 0.28 ) }
    dend_31 { pt3dadd( 119.714, 143.854, -44.963, 0.55 ) }
    dend_31 { pt3dadd( 120.804, 145.907, -45.5102, 0.28 ) }
    dend_31 { pt3dadd( 121.874, 148.065, -46.0275, 0.55 ) }
    dend_31 { pt3dadd( 122.925, 150.217, -46.4814, 0.28 ) }
    dend_31 { pt3dadd( 123.688, 151.731, -46.8219, 0.55 ) }
    dend_31 { pt3dadd( 124.799, 153.799, -47.2726, 0.28 ) }
    dend_31 { pt3dadd( 125.371, 154.755, -47.4328, 0.55 ) }
    dend_31 { pt3dadd( 126.712, 156.922, -47.738, 0.55 ) }
    dend_31 { pt3dadd( 128.239, 159.428, -47.9114, 0.55 ) }
    dend_31 { pt3dadd( 129.696, 161.751, -47.9955, 0.28 ) }
    dend_31 { pt3dadd( 130.765, 163.441, -48.0119, 0.55 ) }
    dend_31 { pt3dadd( 133.323, 167.639, -47.9158, 0.28 ) }
    dend_31 { pt3dadd( 134.337, 169.282, -47.8444, 0.55 ) }
    dend_31 { pt3dadd( 136.201, 172.325, -47.5615, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 19/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 33.9423, 36.4029, -22.8544, 0.55 ) }
    dend_30 { pt3dadd( 35.0422, 37.7334, -23.541, 0.55 ) }
    dend_30 { pt3dadd( 35.9173, 38.8215, -24.0273, 0.55 ) }
    dend_30 { pt3dadd( 36.3383, 39.3531, -24.3605, 0.28 ) }
    dend_30 { pt3dadd( 36.6124, 39.7449, -24.6471, 0.83 ) }
    dend_30 { pt3dadd( 37.1966, 40.6703, -25.3306, 0.55 ) }
    dend_30 { pt3dadd( 37.487, 41.2122, -25.7376, 0.28 ) }
    dend_30 { pt3dadd( 38.1879, 42.9071, -27.0516, 0.83 ) }
    dend_30 { pt3dadd( 39.0359, 45.2012, -29.0156, 0.55 ) }
    dend_30 { pt3dadd( 39.4197, 46.237, -29.9649, 0.28 ) }
    dend_30 { pt3dadd( 39.5722, 46.7146, -30.4991, 0.83 ) }
    dend_30 { pt3dadd( 39.9462, 48.0195, -32.0919, 0.55 ) }
    dend_30 { pt3dadd( 40.2902, 49.4167, -33.796, 0.55 ) }
    dend_30 { pt3dadd( 40.4611, 50.3919, -34.9623, 0.28 ) }
    dend_30 { pt3dadd( 40.5822, 51.1457, -35.8085, 0.83 ) }
    dend_30 { pt3dadd( 41.1957, 54.5188, -39.4099, 0.55 ) }
    dend_30 { pt3dadd( 41.3675, 55.4214, -40.325, 0.55 ) }
    dend_30 { pt3dadd( 41.5492, 56.3551, -41.1712, 0.83 ) }
    dend_30 { pt3dadd( 41.8546, 58.1176, -42.5347, 0.55 ) }
    dend_30 { pt3dadd( 42.0158, 59.0282, -43.1498, 0.83 ) }
    dend_30 { pt3dadd( 42.2637, 60.2682, -43.8744, 0.28 ) }
    dend_30 { pt3dadd( 42.4504, 61.0604, -44.1931, 0.55 ) }
    dend_30 { pt3dadd( 42.7906, 62.5415, -44.8011, 0.28 ) }
    dend_30 { pt3dadd( 42.9539, 63.198, -45.079, 0.55 ) }
    dend_30 { pt3dadd( 43.2971, 64.4121, -45.555, 0.28 ) }
    dend_30 { pt3dadd( 43.5083, 65.1075, -45.8572, 0.55 ) }
    dend_30 { pt3dadd( 43.901, 66.3497, -46.419, 0.28 ) }
    dend_30 { pt3dadd( 44.3636, 67.6916, -47.103, 0.83 ) }
    dend_30 { pt3dadd( 45.1109, 69.6481, -48.1795, 0.28 ) }
    dend_30 { pt3dadd( 45.45, 70.4484, -48.6659, 0.83 ) }
    dend_30 { pt3dadd( 46.2327, 72.1437, -49.7625, 0.28 ) }
    dend_30 { pt3dadd( 46.3521, 72.3918, -49.932, 0.55 ) }
    dend_30 { pt3dadd( 47.0034, 73.5052, -50.7257, 0.28 ) }
    dend_30 { pt3dadd( 47.3047, 73.997, -51.116, 0.83 ) }
    dend_30 { pt3dadd( 48.0122, 75.1421, -52.1202, 0.28 ) }
    dend_30 { pt3dadd( 48.5225, 75.9468, -52.8873, 0.55 ) }
    dend_30 { pt3dadd( 49.3677, 77.2673, -54.18, 0.28 ) }
    dend_30 { pt3dadd( 50.2792, 78.6952, -55.5753, 0.28 ) }
    dend_30 { pt3dadd( 51.5333, 80.6792, -57.5107, 0.83 ) }
    dend_30 { pt3dadd( 52.5101, 82.1545, -58.9258, 0.55 ) }
    dend_30 { pt3dadd( 53.2668, 83.2497, -59.9293, 0.28 ) }
    dend_30 { pt3dadd( 53.6389, 83.7474, -60.375, 0.55 ) }
    dend_30 { pt3dadd( 54.3914, 84.7169, -61.2039, 0.28 ) }
    dend_30 { pt3dadd( 54.7565, 85.2236, -61.6378, 0.55 ) }
    dend_30 { pt3dadd( 55.8873, 86.8752, -63.0723, 0.28 ) }
    dend_30 { pt3dadd( 56.6543, 87.9861, -64.1492, 0.55 ) }
    dend_30 { pt3dadd( 57.7592, 89.546, -65.8366, 0.28 ) }
    dend_30 { pt3dadd( 58.2581, 90.2353, -66.6615, 0.55 ) }
    dend_30 { pt3dadd( 59.7816, 92.379, -69.421, 1.38 ) }
    dend_30 { pt3dadd( 61.1006, 94.2533, -71.9173, 0.28 ) }
    dend_30 { pt3dadd( 61.8138, 95.2675, -73.3281, 0.55 ) }
    dend_30 { pt3dadd( 62.437, 96.1349, -74.5415, 0.28 ) }
    dend_30 { pt3dadd( 62.9294, 96.8476, -75.4675, 0.28 ) }
    dend_30 { pt3dadd( 63.2716, 97.3438, -76.0563, 0.55 ) }
    dend_30 { pt3dadd( 63.7629, 98.0723, -76.774, 0.55 ) }
    dend_30 { pt3dadd( 64.3658, 99.1507, -77.7182, 0.28 ) }
    dend_30 { pt3dadd( 64.604, 99.7092, -78.2131, 0.55 ) }
    dend_30 { pt3dadd( 65.1207, 101.133, -79.4453, 0.28 ) }
    dend_30 { pt3dadd( 65.4284, 102.029, -80.2212, 0.55 ) }
    dend_30 { pt3dadd( 65.8077, 103.286, -81.3364, 0.28 ) }
    dend_30 { pt3dadd( 66.0669, 104.313, -82.2181, 0.55 ) }
    dend_30 { pt3dadd( 66.4996, 106.455, -83.9461, 0.28 ) }
    dend_30 { pt3dadd( 66.7439, 107.716, -84.8801, 0.28 ) }
    dend_30 { pt3dadd( 67.0924, 109.348, -86.0177, 0.55 ) }
    dend_30 { pt3dadd( 67.4882, 111.096, -87.1758, 0.28 ) }
    dend_30 { pt3dadd( 67.7164, 112.157, -87.8682, 0.28 ) }
    dend_30 { pt3dadd( 68.0025, 113.199, -88.5285, 0.28 ) }
    dend_30 { pt3dadd( 68.3197, 114.225, -89.1628, 0.55 ) }
    dend_30 { pt3dadd( 68.7209, 115.314, -89.8706, 0.55 ) }
    dend_30 { pt3dadd( 69.4339, 116.948, -90.948, 0.28 ) }
    dend_30 { pt3dadd( 69.8973, 117.796, -91.5255, 0.83 ) }
    dend_30 { pt3dadd( 70.9039, 119.367, -92.5877, 0.55 ) }
    dend_30 { pt3dadd( 71.619, 120.376, -93.2206, 0.28 ) }
    dend_30 { pt3dadd( 72.2198, 121.204, -93.7092, 0.55 ) }
    dend_30 { pt3dadd( 73.1273, 122.414, -94.2947, 0.28 ) }
    dend_30 { pt3dadd( 74.1034, 123.527, -94.7517, 0.55 ) }
    dend_30 { pt3dadd( 75.2035, 124.65, -95.1562, 0.28 ) }
    dend_30 { pt3dadd( 76.0454, 125.409, -95.4163, 0.55 ) }
    dend_30 { pt3dadd( 77.4058, 126.496, -95.7659, 0.28 ) }
    dend_30 { pt3dadd( 78.3827, 127.186, -95.9764, 0.55 ) }
    dend_30 { pt3dadd( 80.2238, 128.328, -96.2845, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( 80.7439, 128.604, -96.3692, 0.55 ) }
    dend_30 { pt3dadd( 82.9694, 129.529, -96.7505, 0.28 ) }
    dend_30 { pt3dadd( 83.5267, 129.723, -96.8364, 0.55 ) }
    dend_30 { pt3dadd( 84.716, 130.052, -96.9922, 0.28 ) }
    dend_30 { pt3dadd( 85.278, 130.182, -97.0918, 0.55 ) }
    dend_30 { pt3dadd( 86.1693, 130.317, -97.2403, 0.28 ) }
    dend_30 { pt3dadd( 87.1234, 130.376, -97.4142, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 7/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -95.7615, 83.6475, -25.4936, 0.28 ) }
    dend_27 { pt3dadd( -95.9499, 85.2072, -25.3763, 0.28 ) }
    dend_27 { pt3dadd( -96.2568, 87.12, -25.2104, 0.83 ) }
    dend_27 { pt3dadd( -96.6527, 90.0708, -24.9964, 0.28 ) }
    dend_27 { pt3dadd( -96.7221, 90.7311, -24.9932, 0.55 ) }
    dend_27 { pt3dadd( -96.8275, 91.8889, -25.0276, 0.28 ) }
    dend_27 { pt3dadd( -96.9121, 92.8626, -25.0779, 0.55 ) }
    dend_27 { pt3dadd( -96.9977, 94.027, -25.2174, 0.28 ) }
    dend_27 { pt3dadd( -97.0789, 95.6613, -25.4916, 0.55 ) }
    dend_27 { pt3dadd( -97.1996, 97.6207, -25.9346, 0.55 ) }
    dend_27 { pt3dadd( -97.3172, 99.0769, -26.3106, 0.28 ) }
    dend_27 { pt3dadd( -97.713, 102.822, -27.24, 0.55 ) }
    dend_27 { pt3dadd( -98.07, 105.178, -27.7464, 0.28 ) }
    dend_27 { pt3dadd( -98.1983, 105.792, -27.8512, 0.55 ) }
    dend_27 { pt3dadd( -98.9148, 108.484, -28.1515, 0.28 ) }
    dend_27 { pt3dadd( -99.4803, 110.399, -28.2363, 0.55 ) }
    dend_27 { pt3dadd( -100.089, 112.371, -28.2236, 0.28 ) }
    dend_27 { pt3dadd( -100.864, 114.849, -28.1152, 0.55 ) }
    dend_27 { pt3dadd( -101.449, 116.885, -27.9471, 0.28 ) }
    dend_27 { pt3dadd( -101.721, 118.032, -27.8501, 0.55 ) }
    dend_27 { pt3dadd( -101.951, 119.182, -27.7592, 0.28 ) }
    dend_27 { pt3dadd( -102.181, 120.806, -27.7716, 0.55 ) }
    dend_27 { pt3dadd( -102.482, 123.845, -28.0494, 0.28 ) }
    dend_27 { pt3dadd( -102.622, 125.527, -28.351, 0.55 ) }
    dend_27 { pt3dadd( -102.855, 127.808, -28.8708, 0.28 ) }
    dend_27 { pt3dadd( -103.019, 128.831, -29.1373, 0.55 ) }
    dend_27 { pt3dadd( -103.662, 131.618, -29.9833, 0.28 ) }
    dend_27 { pt3dadd( -103.809, 132.105, -30.1389, 0.55 ) }
    dend_27 { pt3dadd( -104.537, 134.123, -30.7942, 0.28 ) }
    dend_27 { pt3dadd( -105.007, 135.275, -31.1379, 1.11 ) }
    dend_27 { pt3dadd( -106.076, 137.675, -31.6245, 0.28 ) }
    dend_27 { pt3dadd( -107.016, 139.676, -31.8272, 0.28 ) }
    dend_27 { pt3dadd( -107.574, 140.746, -31.831, 0.55 ) }
    dend_27 { pt3dadd( -108.58, 142.693, -31.7435, 0.28 ) }
    dend_27 { pt3dadd( -109.342, 144.13, -31.5921, 0.55 ) }
    dend_27 { pt3dadd( -110.488, 146.228, -31.3398, 0.28 ) }
    dend_27 { pt3dadd( -111.079, 147.232, -31.1775, 0.55 ) }
    dend_27 { pt3dadd( -111.854, 148.488, -30.9289, 0.28 ) }
    dend_27 { pt3dadd( -112.259, 149.11, -30.8267, 0.55 ) }
    dend_27 { pt3dadd( -112.814, 149.924, -30.7445, 0.28 ) }
    dend_27 { pt3dadd( -113.225, 150.557, -30.8104, 0.55 ) }
    dend_27 { pt3dadd( -113.988, 151.753, -31.0605, 0.28 ) }
    dend_27 { pt3dadd( -114.469, 152.547, -31.2666, 0.55 ) }
    dend_27 { pt3dadd( -114.715, 152.999, -31.4052, 0.28 ) }
    dend_27 { pt3dadd( -115.08, 153.716, -31.6525, 0.55 ) }
    dend_27 { pt3dadd( -115.647, 154.9, -32.1172, 0.28 ) }
    dend_27 { pt3dadd( -116.497, 156.628, -32.8142, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 54/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -95.7615, 83.6475, -25.4936, 0.55 ) }
    dend_26 { pt3dadd( -96.854, 84.8194, -26.667, 0.55 ) }
    dend_26 { pt3dadd( -97.8931, 85.9849, -27.8385, 0.28 ) }
    dend_26 { pt3dadd( -98.978, 87.2333, -29.1889, 0.83 ) }
    dend_26 { pt3dadd( -100.363, 88.884, -31.0477, 0.83 ) }
    dend_26 { pt3dadd( -101.538, 90.2971, -32.6431, 0.55 ) }
    dend_26 { pt3dadd( -102.653, 91.6372, -34.1353, 0.28 ) }
    dend_26 { pt3dadd( -103.282, 92.4538, -35.0426, 0.55 ) }
    dend_26 { pt3dadd( -104.277, 93.7601, -36.4577, 0.28 ) }
    dend_26 { pt3dadd( -104.62, 94.2102, -36.9297, 0.55 ) }
    dend_26 { pt3dadd( -105.471, 95.2548, -37.8926, 0.28 ) }
    dend_26 { pt3dadd( -105.89, 95.7637, -38.2461, 0.55 ) }
    dend_26 { pt3dadd( -106.822, 96.8727, -38.7798, 0.28 ) }
    dend_26 { pt3dadd( -107.143, 97.2686, -38.9267, 0.55 ) }
    dend_26 { pt3dadd( -108.18, 98.6282, -39.2751, 0.28 ) }
    dend_26 { pt3dadd( -108.313, 98.8132, -39.3224, 0.55 ) }
    dend_26 { pt3dadd( -108.977, 99.8388, -39.6039, 0.28 ) }
    dend_26 { pt3dadd( -109.429, 100.636, -39.8737, 0.55 ) }
    dend_26 { pt3dadd( -110.418, 102.432, -40.4599, 0.28 ) }
    dend_26 { pt3dadd( -110.722, 103.035, -40.6641, 0.55 ) }
    dend_26 { pt3dadd( -111.172, 103.953, -40.9763, 0.28 ) }
    dend_26 { pt3dadd( -111.268, 104.151, -41.0595, 0.55 ) }
    dend_26 { pt3dadd( -112.136, 105.781, -41.7417, 0.28 ) }
    dend_26 { pt3dadd( -112.754, 106.908, -42.1812, 0.55 ) }
    dend_26 { pt3dadd( -113.255, 107.838, -42.5427, 0.28 ) }
    dend_26 { pt3dadd( -114.078, 109.445, -43.1939, 0.55 ) }
    dend_26 { pt3dadd( -115.828, 113.296, -44.9328, 0.28 ) }
    dend_26 { pt3dadd( -116.798, 115.565, -45.9931, 0.28 ) }
    dend_26 { pt3dadd( -117.207, 116.612, -46.4776, 0.55 ) }
    dend_26 { pt3dadd( -117.813, 118.399, -47.3223, 0.28 ) }
    dend_26 { pt3dadd( -118.093, 119.28, -47.7218, 0.55 ) }
    dend_26 { pt3dadd( -118.982, 122.144, -48.8832, 0.28 ) }
    dend_26 { pt3dadd( -119.443, 123.665, -49.3973, 0.28 ) }
    dend_26 { pt3dadd( -119.781, 124.742, -49.7426, 0.55 ) }
    dend_26 { pt3dadd( -121.071, 128.336, -50.7415, 0.28 ) }
    dend_26 { pt3dadd( -121.412, 129.217, -50.9518, 0.55 ) }
    dend_26 { pt3dadd( -123.194, 133.517, -51.8798, 0.28 ) }
    dend_26 { pt3dadd( -123.41, 133.987, -51.9562, 0.55 ) }
    dend_26 { pt3dadd( -123.931, 135.11, -52.156, 0.28 ) }
    dend_26 { pt3dadd( -124.57, 136.348, -52.3734, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 94/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -96.585, 69.3962, 3.61332, 0.83 ) }
    dend_24 { pt3dadd( -98.1487, 70.0761, 3.6044, 0.83 ) }
    dend_24 { pt3dadd( -99.7014, 70.8867, 3.52854, 0.28 ) }
    dend_24 { pt3dadd( -101.033, 71.5942, 3.37194, 0.55 ) }
    dend_24 { pt3dadd( -102.01, 72.0961, 3.23625, 0.55 ) }
    dend_24 { pt3dadd( -102.846, 72.5475, 3.13836, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -103.9, 73.088, 3.0948, 0.55 ) }
    dend_24 { pt3dadd( -104.755, 73.6212, 3.11772, 0.28 ) }
    dend_24 { pt3dadd( -106.032, 74.4637, 3.22495, 0.55 ) }
    dend_24 { pt3dadd( -106.774, 74.9684, 3.3643, 0.83 ) }
    dend_24 { pt3dadd( -108.324, 76.0679, 3.79387, 0.83 ) }
    dend_24 { pt3dadd( -110.531, 77.5189, 4.56264, 0.55 ) }
    dend_24 { pt3dadd( -112.703, 78.8417, 5.40495, 0.55 ) }
    dend_24 { pt3dadd( -114.149, 79.6931, 6.02132, 0.55 ) }
    dend_24 { pt3dadd( -116.123, 80.8704, 6.93905, 0.55 ) }
    dend_24 { pt3dadd( -117.661, 81.7527, 7.64014, 0.55 ) }
    dend_24 { pt3dadd( -119.23, 82.6222, 8.31821, 0.55 ) }
    dend_24 { pt3dadd( -120.554, 83.3408, 8.80088, 0.55 ) }
    dend_24 { pt3dadd( -121.306, 83.6957, 9.05481, 0.28 ) }
    dend_24 { pt3dadd( -121.709, 83.8938, 9.18822, 0.55 ) }
    dend_24 { pt3dadd( -122.752, 84.3842, 9.43383, 0.55 ) }
    dend_24 { pt3dadd( -124.403, 85.2576, 9.76459, 0.55 ) }
    dend_24 { pt3dadd( -127.494, 87.2986, 10.3325, 0.55 ) }
    dend_24 { pt3dadd( -133.522, 92.1149, 13.7586, 0.55 ) }
    dend_24 { pt3dadd( -139.373, 97.2081, 17.0709, 0.55 ) }
    dend_24 { pt3dadd( -145.944, 101.558, 20.1512, 0.55 ) }
    dend_24 { pt3dadd( -151.347, 107.119, 23.4303, 0.55 ) }
    dend_24 { pt3dadd( -156.688, 112.279, 27.4066, 0.55 ) }
    dend_24 { pt3dadd( -161.653, 117.251, 32.0507, 0.55 ) }
    dend_24 { pt3dadd( -167.295, 120.83, 37.2432, 0.55 ) }
    dend_24 { pt3dadd( -171.951, 125.157, 42.7872, 0.55 ) }
    dend_24 { pt3dadd( -175.611, 128.653, 49.5522, 0.55 ) }
    dend_24 { pt3dadd( -178.222, 131.705, 56.9947, 0.55 ) }
    dend_24 { pt3dadd( -181.371, 134.79, 64.2124, 0.55 ) }
    dend_24 { pt3dadd( -185.188, 138.317, 70.8744, 0.55 ) }
    dend_24 { pt3dadd( -188.763, 140.81, 78.1418, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 30/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -96.585, 69.3962, 3.61332, 0.83 ) }
    dend_23 { pt3dadd( -98.6175, 71.5088, 4.11244, 0.83 ) }
    dend_23 { pt3dadd( -100.446, 73.3957, 4.52607, 0.83 ) }
    dend_23 { pt3dadd( -102.177, 75.2577, 4.9312, 0.83 ) }
    dend_23 { pt3dadd( -103.067, 76.2209, 5.1338, 0.55 ) }
    dend_23 { pt3dadd( -104.548, 77.8339, 5.46439, 0.83 ) }
    dend_23 { pt3dadd( -106.111, 79.4769, 5.79667, 0.55 ) }
    dend_23 { pt3dadd( -107.769, 81.1557, 6.13536, 0.55 ) }
    dend_23 { pt3dadd( -109.907, 83.2799, 6.60752, 0.83 ) }
    dend_23 { pt3dadd( -111.392, 84.7362, 6.93263, 0.55 ) }
    dend_23 { pt3dadd( -113.109, 86.4222, 7.29182, 0.55 ) }
    dend_23 { pt3dadd( -114.372, 87.5988, 7.51806, 0.55 ) }
    dend_23 { pt3dadd( -116.944, 89.8228, 7.87077, 0.83 ) }
    dend_23 { pt3dadd( -118.455, 90.9991, 7.98282, 0.55 ) }
    dend_23 { pt3dadd( -119.498, 91.7225, 7.99249, 1.11 ) }
    dend_23 { pt3dadd( -120.769, 92.4766, 7.96287, 0.55 ) }
    dend_23 { pt3dadd( -122.282, 93.1808, 7.93258, 0.55 ) }
    dend_23 { pt3dadd( -124.663, 94.0678, 7.92239, 0.83 ) }
    dend_23 { pt3dadd( -126.618, 94.5863, 7.90759, 0.55 ) }
    dend_23 { pt3dadd( -128.574, 95.0669, 8.01668, 0.55 ) }
    dend_23 { pt3dadd( -130.757, 95.6103, 8.26458, 0.55 ) }
    dend_23 { pt3dadd( -134.267, 96.4018, 8.80263, 0.83 ) }
    dend_23 { pt3dadd( -135.961, 96.7806, 9.10892, 0.55 ) }
    dend_23 { pt3dadd( -138.32, 97.2594, 9.52281, 0.55 ) }
    dend_23 { pt3dadd( -141.329, 97.9867, 10.0399, 0.55 ) }
    dend_23 { pt3dadd( -142.611, 98.3541, 10.2229, 0.55 ) }
    dend_23 { pt3dadd( -145.265, 99.2921, 10.4932, 0.28 ) }
    dend_23 { pt3dadd( -146.388, 99.7244, 10.5598, 0.83 ) }
    dend_23 { pt3dadd( -148.656, 100.579, 10.5949, 0.28 ) }
    dend_23 { pt3dadd( -151.223, 101.599, 10.4498, 0.28 ) }
    dend_23 { pt3dadd( -152.679, 102.188, 10.241, 0.28 ) }
    dend_23 { pt3dadd( -153.612, 102.639, 10.052, 0.28 ) }
    dend_23 { pt3dadd( -154.007, 102.878, 9.94286, 0.55 ) }
    dend_23 { pt3dadd( -155.938, 104.106, 9.2961, 0.28 ) }
    dend_23 { pt3dadd( -157.486, 105.197, 8.69208, 0.28 ) }
    dend_23 { pt3dadd( -158.883, 106.16, 8.05543, 0.55 ) }
    dend_23 { pt3dadd( -160.326, 107.19, 7.39763, 0.28 ) }
    dend_23 { pt3dadd( -160.976, 107.639, 7.11925, 0.55 ) }
    dend_23 { pt3dadd( -161.919, 108.246, 6.76735, 0.28 ) }
    dend_23 { pt3dadd( -162.612, 108.692, 6.57459, 0.55 ) }
    dend_23 { pt3dadd( -163.477, 109.116, 6.43383, 0.28 ) }
    dend_23 { pt3dadd( -164.416, 109.533, 6.20375, 0.55 ) }
    dend_23 { pt3dadd( -165.328, 109.93, 5.99755, 0.28 ) }
    dend_23 { pt3dadd( -166.022, 110.248, 5.82668, 0.55 ) }
    dend_23 { pt3dadd( -166.889, 110.653, 5.61052, 0.28 ) }
    dend_23 { pt3dadd( -167.584, 110.999, 5.4505, 0.55 ) }
    dend_23 { pt3dadd( -170.073, 112.378, 4.85774, 0.28 ) }
    dend_23 { pt3dadd( -171.589, 113.143, 4.53649, 0.55 ) }
    dend_23 { pt3dadd( -172.622, 113.674, 4.31274, 1.11 ) }
    dend_23 { pt3dadd( -174.063, 114.428, 4.00427, 0.55 ) }
    dend_23 { pt3dadd( -175.378, 115.086, 3.73897, 0.55 ) }
    dend_23 { pt3dadd( -177.762, 116.263, 3.3372, 0.55 ) }
    dend_23 { pt3dadd( -179.557, 117.027, 3.26223, 0.55 ) }
    dend_23 { pt3dadd( -187.457, 120.19, 3.73721, 0.55 ) }
    dend_23 { pt3dadd( -194.764, 124.538, 3.61036, 0.55 ) }
    dend_23 { pt3dadd( -201.238, 130.003, 3.6727, 0.55 ) }
    dend_23 { pt3dadd( -207.718, 135.242, 1.99619, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 87/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -7.84723, -28.9458, -6.38297, 0.83 ) }
    dend_18 { pt3dadd( -7.94136, -31.2378, -7.45599, 0.83 ) }
    dend_18 { pt3dadd( -8.03117, -33.4246, -8.47972, 0.83 ) }
    dend_18 { pt3dadd( -8.20865, -37.7459, -10.5027, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 91/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -7.84723, -28.9458, -6.38297, 0.55 ) }
    dend_17 { pt3dadd( -7.74072, -31.2336, -5.24147, 0.55 ) }
    dend_17 { pt3dadd( -7.80175, -34.7446, -3.5349, 0.55 ) }
    dend_17 { pt3dadd( -8.22353, -40.1782, -1.0666, 0.55 ) }
    dend_17 { pt3dadd( -8.4801, -42.8499, 0.167414, 0.55 ) }
    dend_17 { pt3dadd( -8.7236, -47.9709, 2.79264, 0.83 ) }
    dend_17 { pt3dadd( -8.82213, -50.5059, 4.22184, 0.55 ) }
    dend_17 { pt3dadd( -8.85869, -52.5389, 5.46283, 0.55 ) }
    dend_17 { pt3dadd( -8.92945, -54.7854, 6.82928, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -9.25854, -58.8713, 9.3163, 0.83 ) }
    dend_17 { pt3dadd( -9.73547, -64.9342, 13.0937, 0.55 ) }
    dend_17 { pt3dadd( -9.99657, -68.0005, 14.9915, 0.55 ) }
    dend_17 { pt3dadd( -10.238, -71.0532, 16.9438, 0.55 ) }
    dend_17 { pt3dadd( -10.6285, -76.2148, 20.1752, 0.55 ) }
    dend_17 { pt3dadd( -11.0349, -80.8267, 23.0456, 0.55 ) }
    dend_17 { pt3dadd( -11.3968, -83.576, 24.6917, 0.83 ) }
    dend_17 { pt3dadd( -12.4399, -89.0814, 27.7682, 0.55 ) }
    dend_17 { pt3dadd( -12.9752, -91.6992, 29.2011, 0.55 ) }
    dend_17 { pt3dadd( -14.1041, -96.984, 32.1465, 0.55 ) }
    dend_17 { pt3dadd( -14.9713, -100.838, 34.3315, 0.28 ) }
    dend_17 { pt3dadd( -15.614, -103.511, 35.7593, 0.28 ) }
    dend_17 { pt3dadd( -16.9385, -108.175, 38.2528, 0.28 ) }
    dend_17 { pt3dadd( -17.826, -110.837, 39.5675, 0.55 ) }
    dend_17 { pt3dadd( -20.1446, -121.851, 44.1163, 0.55 ) }
    dend_17 { pt3dadd( -25.1191, -132.219, 48.0979, 0.55 ) }
    dend_17 { pt3dadd( -32.6433, -141.372, 51.0627, 0.55 ) }
    dend_17 { pt3dadd( -41.6982, -149.379, 53.0461, 0.55 ) }
    dend_17 { pt3dadd( -51.3467, -156.017, 56.7808, 0.55 ) }
    dend_17 { pt3dadd( -60.0998, -163.257, 61.447, 0.55 ) }
    dend_17 { pt3dadd( -70.2329, -169.57, 64.3943, 0.55 ) }
    dend_17 { pt3dadd( -79.8365, -175.754, 68.9699, 0.55 ) }
    dend_17 { pt3dadd( -88.9648, -183.606, 71.249, 0.55 ) }
    dend_17 { pt3dadd( -99.8643, -189.146, 72.6734, 0.55 ) }
    dend_17 { pt3dadd( -111.833, -192.131, 73.1093, 0.55 ) }
    dend_17 { pt3dadd( -123.999, -192.959, 75.0854, 0.55 ) }
    dend_17 { pt3dadd( -135.487, -194.653, 79.2992, 0.55 ) }
    dend_17 { pt3dadd( -146.842, -197.069, 83.5128, 0.55 ) }
    dend_17 { pt3dadd( -158.864, -198.336, 86.0577, 0.55 ) }
    dend_17 { pt3dadd( -170.126, -200.833, 90.4688, 0.55 ) }
    dend_17 { pt3dadd( -181.277, -202.407, 95.5464, 0.55 ) }
    dend_17 { pt3dadd( -191.668, -202.967, 102.198, 0.55 ) }
    dend_17 { pt3dadd( -200.357, -202.117, 110.915, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.57379, -29.8974, 1.75873, 0.83 ) }
    dend_3 { pt3dadd( -11.7825, -31.0785, -1.09568, 0.83 ) }
    dend_3 { pt3dadd( -13.1524, -31.5827, -2.31432, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -8.57379, -29.8974, 1.75873, 0.55 ) }
    dend_2 { pt3dadd( -8.51538, -31.7956, -0.170955, 0.55 ) }
    dend_2 { pt3dadd( -8.51596, -34.9825, -2.68674, 0.55 ) }
    dend_2 { pt3dadd( -8.51647, -36.0556, -3.55295, 0.55 ) }
    dend_2 { pt3dadd( -8.56177, -36.7949, -4.30227, 0.55 ) }
    dend_2 { pt3dadd( -8.73224, -38.092, -5.75974, 0.55 ) }
    dend_2 { pt3dadd( -9.08726, -39.618, -7.65321, 0.55 ) }
    dend_2 { pt3dadd( -9.62105, -40.7758, -9.23423, 0.28 ) }
    dend_2 { pt3dadd( -10.157, -41.7065, -10.5745, 0.83 ) }
    dend_2 { pt3dadd( -11.5848, -44.0327, -14.2403, 0.55 ) }
    dend_2 { pt3dadd( -12.1765, -45.0685, -15.8585, 0.83 ) }
    dend_2 { pt3dadd( -12.9325, -46.4273, -17.8989, 0.55 ) }
    dend_2 { pt3dadd( -13.5888, -47.7636, -19.78, 0.55 ) }
    dend_2 { pt3dadd( -13.8499, -48.4505, -20.6863, 0.55 ) }
    dend_2 { pt3dadd( -14.1663, -49.7099, -22.1456, 0.83 ) }
    dend_2 { pt3dadd( -14.5529, -52.4555, -24.9759, 0.83 ) }
    dend_2 { pt3dadd( -14.7649, -54.3259, -26.9014, 0.55 ) }
    dend_2 { pt3dadd( -14.7861, -55.2571, -27.7064, 0.55 ) }
    dend_2 { pt3dadd( -14.7265, -57.2284, -29.1673, 0.83 ) }
    dend_2 { pt3dadd( -14.7025, -58.0601, -29.6881, 0.55 ) }
    dend_2 { pt3dadd( -14.6764, -59.747, -30.7069, 0.83 ) }
    dend_2 { pt3dadd( -14.6536, -63.0251, -32.702, 0.55 ) }
    dend_2 { pt3dadd( -14.627, -67.7149, -35.2556, 0.55 ) }
    dend_2 { pt3dadd( -14.6659, -68.7933, -35.7514, 0.83 ) }
    dend_2 { pt3dadd( -14.8453, -70.8541, -36.5041, 0.83 ) }
    dend_2 { pt3dadd( -15.2233, -73.6353, -37.5932, 0.83 ) }
    dend_2 { pt3dadd( -15.4142, -75.4132, -38.3964, 0.55 ) }
    dend_2 { pt3dadd( -15.7004, -77.2303, -39.6671, 0.55 ) }
    dend_2 { pt3dadd( -16.0846, -78.5234, -41.0332, 0.83 ) }
    dend_2 { pt3dadd( -16.446, -79.5618, -42.281, 0.28 ) }
    dend_2 { pt3dadd( -16.9575, -80.9599, -44.1042, 0.55 ) }
    dend_2 { pt3dadd( -17.5113, -82.1745, -45.8737, 0.55 ) }
    dend_2 { pt3dadd( -18.5799, -84.3915, -49.3593, 0.55 ) }
    dend_2 { pt3dadd( -19.3111, -85.7684, -51.7729, 0.28 ) }
    dend_2 { pt3dadd( -19.6201, -86.3399, -52.7787, 0.55 ) }
    dend_2 { pt3dadd( -20.6038, -88.0766, -55.7012, 0.83 ) }
    dend_2 { pt3dadd( -22.057, -90.5382, -59.368, 0.28 ) }
    dend_2 { pt3dadd( -22.7248, -91.6501, -60.8216, 0.55 ) }
    dend_2 { pt3dadd( -23.5587, -93.3851, -62.6713, 0.28 ) }
    dend_2 { pt3dadd( -23.955, -94.4354, -63.6655, 0.83 ) }
    dend_2 { pt3dadd( -24.3101, -95.7239, -64.7499, 0.28 ) }
    dend_2 { pt3dadd( -24.458, -96.9212, -65.6162, 0.83 ) }
    dend_2 { pt3dadd( -24.4547, -98.3791, -66.6871, 0.83 ) }
    dend_2 { pt3dadd( -24.3707, -100.394, -68.3482, 0.28 ) }
    dend_2 { pt3dadd( -24.2553, -101.64, -69.4979, 1.66 ) }
    dend_2 { pt3dadd( -24.0545, -102.909, -70.8866, 0.28 ) }
    dend_2 { pt3dadd( -23.7915, -104.095, -72.2773, 0.55 ) }
    dend_2 { pt3dadd( -23.2495, -106.316, -75.432, 0.28 ) }
    dend_2 { pt3dadd( -23.0481, -107.214, -76.987, 0.55 ) }
    dend_2 { pt3dadd( -22.8643, -108.324, -79.2585, 0.28 ) }
    dend_2 { pt3dadd( -22.7454, -109.109, -81.0167, 0.55 ) }
    dend_2 { pt3dadd( -22.6109, -110.105, -83.3982, 0.55 ) }
    dend_2 { pt3dadd( -22.3699, -111.491, -86.8359, 0.83 ) }
    dend_2 { pt3dadd( -22.0338, -112.706, -89.8169, 0.83 ) }
    dend_2 { pt3dadd( -21.7172, -113.535, -92.0184, 0.28 ) }
    dend_2 { pt3dadd( -21.5654, -113.845, -92.9407, 0.55 ) }
    dend_2 { pt3dadd( -21.2627, -114.365, -94.6624, 0.28 ) }
    dend_2 { pt3dadd( -21.0296, -114.623, -95.6588, 0.28 ) }
    dend_2 { pt3dadd( -20.4266, -115.06, -97.2212, 0.28 ) }
    dend_2 { pt3dadd( -19.8345, -115.397, -98.5826, 0.83 ) }
    dend_2 { pt3dadd( -18.4792, -116.044, -101.624, 0.28 ) }
    dend_2 { pt3dadd( -18.2706, -116.141, -102.093, 0.55 ) }
    dend_2 { pt3dadd( -17.7831, -116.384, -103.3, 0.28 ) }
    dend_2 { pt3dadd( -17.3605, -116.657, -104.482, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_2 { pt3dadd( -16.3951, -117.444, -107.78, 0.28 ) }
    dend_2 { pt3dadd( -16.1694, -117.695, -108.697, 0.28 ) }
    dend_2 { pt3dadd( -15.8488, -118.183, -110.102, 0.55 ) }
    dend_2 { pt3dadd( -15.4835, -119.059, -112.414, 0.28 ) }
    dend_2 { pt3dadd( -15.3666, -119.638, -113.716, 0.55 ) }
    dend_2 { pt3dadd( -15.2723, -120.947, -116.233, 0.28 ) }
    dend_2 { pt3dadd( -15.2951, -122.639, -118.696, 0.55 ) }
    dend_2 { pt3dadd( -15.4704, -123.555, -119.864, 0.55 ) }
    dend_2 { pt3dadd( -15.8575, -124.605, -121.073, 0.55 ) }
    dend_2 { pt3dadd( -16.5789, -126.033, -122.499, 0.28 ) }
    dend_2 { pt3dadd( -16.9144, -126.505, -122.972, 0.28 ) }
    dend_2 { pt3dadd( -18.8209, -128.809, -125.242, 0.55 ) }
    dend_2 { pt3dadd( -21.1295, -131.237, -127.691, 0.55 ) }
    dend_2 { pt3dadd( -22.3671, -132.534, -129.01, 0.28 ) }
    dend_2 { pt3dadd( -23.9188, -134.272, -130.748, 0.83 ) }
    dend_2 { pt3dadd( -25.994, -136.705, -133.06, 0.28 ) }
    dend_2 { pt3dadd( -27.0863, -138.092, -134.3, 0.55 ) }
    dend_2 { pt3dadd( -28.3315, -139.931, -135.791, 0.55 ) }
    dend_2 { pt3dadd( -29.6238, -142.541, -137.604, 0.55 ) }
    dend_2 { pt3dadd( -30.7752, -145.674, -139.556, 0.28 ) }
    dend_2 { pt3dadd( -31.3976, -147.687, -140.672, 0.55 ) }
    dend_2 { pt3dadd( -31.6581, -148.706, -141.173, 0.28 ) }
    dend_2 { pt3dadd( -32.0274, -150.209, -141.859, 0.55 ) }
    dend_2 { pt3dadd( -32.5342, -152.608, -142.94, 0.28 ) }
    dend_2 { pt3dadd( -32.851, -153.759, -143.509, 0.83 ) }
    dend_2 { pt3dadd( -33.6671, -155.994, -144.758, 0.28 ) }
    dend_2 { pt3dadd( -34.2116, -157.182, -145.62, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 136.201, 172.325, -47.5615, 0.28 ) }
    dend_33 { pt3dadd( 140.152, 173.288, -45.8751, 0.28 ) }
    dend_33 { pt3dadd( 141.419, 173.597, -45.3345, 0.55 ) }
    dend_33 { pt3dadd( 144.573, 174.366, -43.9882, 0.28 ) }
    dend_33 { pt3dadd( 145.735, 174.65, -43.4924, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 32/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 136.201, 172.325, -47.5615, 0.28 ) }
    dend_32 { pt3dadd( 137.458, 173.474, -46.6544, 0.28 ) }
    dend_32 { pt3dadd( 138.154, 174.109, -46.1457, 0.55 ) }
    dend_32 { pt3dadd( 140.08, 175.881, -44.756, 0.28 ) }
    dend_32 { pt3dadd( 141.078, 176.755, -44.0246, 0.55 ) }
    dend_32 { pt3dadd( 143.714, 178.936, -42.1254, 0.28 ) }
    dend_32 { pt3dadd( 144.804, 179.749, -41.4318, 0.55 ) }
    dend_32 { pt3dadd( 145.843, 180.402, -40.7189, 0.28 ) }
    dend_32 { pt3dadd( 146.494, 180.777, -40.2648, 0.55 ) }
    dend_32 { pt3dadd( 147.822, 181.411, -39.3813, 0.28 ) }
    dend_32 { pt3dadd( 148.434, 181.634, -38.9969, 0.55 ) }
    dend_32 { pt3dadd( 151.453, 181.796, -38.1775, 0.28 ) }
    dend_32 { pt3dadd( 154.003, 181.134, -37.6443, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 45/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.20865, -37.7459, -10.5027, 0.55 ) }
    dend_20 { pt3dadd( -7.71459, -39.6917, -10.5583, 0.55 ) }
    dend_20 { pt3dadd( -7.2973, -41.1638, -10.599, 0.83 ) }
    dend_20 { pt3dadd( -6.47199, -43.6936, -10.668, 0.83 ) }
    dend_20 { pt3dadd( -5.84537, -45.4378, -10.8061, 0.55 ) }
    dend_20 { pt3dadd( -5.25885, -47.0512, -11.006, 0.83 ) }
    dend_20 { pt3dadd( -4.85667, -48.1123, -11.1436, 0.28 ) }
    dend_20 { pt3dadd( -3.86255, -50.644, -11.556, 0.55 ) }
    dend_20 { pt3dadd( -3.43411, -51.6658, -11.7095, 0.28 ) }
    dend_20 { pt3dadd( -2.66347, -53.4778, -11.9492, 0.83 ) }
    dend_20 { pt3dadd( -1.781, -55.44, -12.1216, 0.83 ) }
    dend_20 { pt3dadd( -1.12636, -56.9215, -12.124, 0.28 ) }
    dend_20 { pt3dadd( -0.647314, -58.1248, -12.0294, 0.55 ) }
    dend_20 { pt3dadd( -0.00230163, -60.0489, -11.7333, 0.28 ) }
    dend_20 { pt3dadd( 0.578767, -62.0255, -11.2878, 0.83 ) }
    dend_20 { pt3dadd( 1.0908, -63.8165, -10.7716, 0.83 ) }
    dend_20 { pt3dadd( 1.53365, -65.3894, -10.3446, 0.83 ) }
    dend_20 { pt3dadd( 1.79354, -66.4474, -10.1342, 1.11 ) }
    dend_20 { pt3dadd( 2.11537, -67.7461, -9.93418, 1.11 ) }
    dend_20 { pt3dadd( 2.64021, -69.9116, -9.77704, 0.55 ) }
    dend_20 { pt3dadd( 2.91042, -71.0004, -9.73725, 0.83 ) }
    dend_20 { pt3dadd( 3.41508, -72.8504, -9.75653, 0.55 ) }
    dend_20 { pt3dadd( 4.14668, -75.349, -9.84791, 0.28 ) }
    dend_20 { pt3dadd( 4.50114, -76.5157, -9.88644, 0.55 ) }
    dend_20 { pt3dadd( 5.14729, -78.5341, -9.98538, 0.55 ) }
    dend_20 { pt3dadd( 5.4247, -79.39, -10.0523, 0.28 ) }
    dend_20 { pt3dadd( 6.25728, -81.9948, -10.3069, 0.55 ) }
    dend_20 { pt3dadd( 6.93882, -84.0037, -10.4543, 0.28 ) }
    dend_20 { pt3dadd( 7.5676, -85.6787, -10.5418, 0.55 ) }
    dend_20 { pt3dadd( 8.1869, -87.267, -10.5663, 0.28 ) }
    dend_20 { pt3dadd( 8.59583, -88.3347, -10.522, 0.55 ) }
    dend_20 { pt3dadd( 9.0465, -89.5899, -10.3941, 0.28 ) }
    dend_20 { pt3dadd( 9.67317, -91.3723, -10.0883, 0.55 ) }
    dend_20 { pt3dadd( 10.1343, -92.5677, -9.83117, 0.28 ) }
    dend_20 { pt3dadd( 10.7751, -94.2081, -9.51739, 0.55 ) }
    dend_20 { pt3dadd( 11.9748, -97.1504, -9.05844, 0.28 ) }
    dend_20 { pt3dadd( 12.6363, -98.6592, -8.84521, 0.55 ) }
    dend_20 { pt3dadd( 14.1736, -101.956, -8.56704, 0.28 ) }
    dend_20 { pt3dadd( 14.8799, -103.453, -8.58896, 0.55 ) }
    dend_20 { pt3dadd( 15.9429, -105.646, -8.67197, 0.28 ) }
    dend_20 { pt3dadd( 16.6971, -107.18, -8.75929, 0.28 ) }
    dend_20 { pt3dadd( 17.6115, -109.033, -8.8832, 0.28 ) }
    dend_20 { pt3dadd( 18.2577, -110.553, -9.06701, 0.55 ) }
    dend_20 { pt3dadd( 19.1409, -113.131, -9.47154, 0.28 ) }
    dend_20 { pt3dadd( 19.7906, -115.513, -9.90173, 0.55 ) }
    dend_20 { pt3dadd( 20.4325, -118.638, -10.4697, 0.28 ) }
    dend_20 { pt3dadd( 20.6021, -119.861, -10.7264, 0.55 ) }
    dend_20 { pt3dadd( 20.8432, -123.149, -11.4721, 0.28 ) }
    dend_20 { pt3dadd( 20.8426, -124.616, -11.8148, 0.55 ) }
    dend_20 { pt3dadd( 20.7224, -126.396, -12.3082, 0.28 ) }
    dend_20 { pt3dadd( 20.5698, -127.566, -12.7266, 0.55 ) }
    dend_20 { pt3dadd( 20.2673, -129.274, -13.3251, 0.28 ) }
    dend_20 { pt3dadd( 19.9545, -131.061, -13.8489, 0.55 ) }
    dend_20 { pt3dadd( 19.5178, -133.656, -14.4907, 0.28 ) }
    dend_20 { pt3dadd( 19.3881, -134.593, -14.7067, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 19.2638, -135.995, -14.9835, 0.28 ) }
    dend_20 { pt3dadd( 19.1705, -137.643, -15.326, 0.55 ) }
    dend_20 { pt3dadd( 19.1241, -140.037, -15.8478, 0.28 ) }
    dend_20 { pt3dadd( 19.2415, -141.338, -16.1378, 0.55 ) }
    dend_20 { pt3dadd( 19.5195, -142.414, -16.2426, 0.28 ) }
    dend_20 { pt3dadd( 19.8345, -143.345, -16.2757, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -8.20865, -37.7459, -10.5027, 0.55 ) }
    dend_19 { pt3dadd( -9.6637, -39.7317, -12.2095, 0.55 ) }
    dend_19 { pt3dadd( -10.0944, -40.3458, -12.74, 0.55 ) }
    dend_19 { pt3dadd( -11.371, -42.2563, -14.3383, 0.55 ) }
    dend_19 { pt3dadd( -13.6407, -45.7757, -17.2298, 0.55 ) }
    dend_19 { pt3dadd( -15.7558, -49.2167, -19.9059, 0.83 ) }
    dend_19 { pt3dadd( -17.7924, -52.395, -22.2994, 0.55 ) }
    dend_19 { pt3dadd( -18.7759, -53.9594, -23.4944, 0.55 ) }
    dend_19 { pt3dadd( -19.4849, -55.1681, -24.391, 0.28 ) }
    dend_19 { pt3dadd( -20.9888, -58.0213, -26.3464, 0.55 ) }
    dend_19 { pt3dadd( -22.2916, -60.9222, -27.9988, 0.55 ) }
    dend_19 { pt3dadd( -23.5551, -63.7867, -29.3677, 0.55 ) }
    dend_19 { pt3dadd( -24.8754, -67.1388, -30.7983, 0.55 ) }
    dend_19 { pt3dadd( -26.2523, -71.0113, -32.3452, 0.55 ) }
    dend_19 { pt3dadd( -27.099, -73.77, -33.3093, 0.83 ) }
    dend_19 { pt3dadd( -27.7051, -76.2318, -34.0122, 0.83 ) }
    dend_19 { pt3dadd( -28.0687, -78.2088, -34.4617, 0.55 ) }
    dend_19 { pt3dadd( -28.2558, -79.4951, -34.6833, 0.55 ) }
    dend_19 { pt3dadd( -28.5975, -81.494, -34.93, 0.83 ) }
    dend_19 { pt3dadd( -29.3104, -85.0483, -35.3913, 0.55 ) }
    dend_19 { pt3dadd( -29.816, -87.2977, -35.8232, 0.28 ) }
    dend_19 { pt3dadd( -30.1583, -88.666, -36.1413, 0.83 ) }
    dend_19 { pt3dadd( -30.8402, -90.9442, -36.6828, 0.55 ) }
    dend_19 { pt3dadd( -31.5193, -92.7915, -37.2461, 0.28 ) }
    dend_19 { pt3dadd( -32.6199, -95.6065, -38.2612, 0.55 ) }
    dend_19 { pt3dadd( -33.5748, -98.1327, -39.4175, 0.28 ) }
    dend_19 { pt3dadd( -34.1222, -99.7289, -40.2428, 0.28 ) }
    dend_19 { pt3dadd( -34.7628, -101.911, -41.4926, 0.83 ) }
    dend_19 { pt3dadd( -35.5082, -105.068, -43.4105, 0.28 ) }
    dend_19 { pt3dadd( -36.0334, -107.738, -45.0747, 0.83 ) }
    dend_19 { pt3dadd( -36.4465, -110.378, -46.7058, 0.28 ) }
    dend_19 { pt3dadd( -36.5179, -111.269, -47.2201, 0.83 ) }
    dend_19 { pt3dadd( -36.5921, -113.591, -48.5101, 0.55 ) }
    dend_19 { pt3dadd( -36.5764, -115.114, -49.2866, 0.28 ) }
    dend_19 { pt3dadd( -36.4875, -117.555, -50.2833, 0.55 ) }
    dend_19 { pt3dadd( -36.411, -119.866, -51.0933, 0.28 ) }
    dend_19 { pt3dadd( -36.3782, -122.043, -51.6625, 0.55 ) }
    dend_19 { pt3dadd( -36.3713, -124.292, -52.2068, 0.28 ) }
    dend_19 { pt3dadd( -36.3706, -125.867, -52.6038, 0.55 ) }
    dend_19 { pt3dadd( -36.346, -126.969, -52.9566, 0.28 ) }
    dend_19 { pt3dadd( -36.3244, -127.568, -53.1885, 0.55 ) }
    dend_19 { pt3dadd( -36.2274, -130.336, -54.6797, 0.28 ) }
    dend_19 { pt3dadd( -35.8766, -133.369, -55.8513, 0.83 ) }
    dend_19 { pt3dadd( -35.3748, -135.866, -56.587, 0.28 ) }
    dend_19 { pt3dadd( -34.4238, -139.191, -57.489, 0.28 ) }
    dend_19 { pt3dadd( -33.7737, -140.964, -57.9752, 0.83 ) }
    dend_19 { pt3dadd( -31.9401, -144.805, -58.9374, 0.28 ) }
    dend_19 { pt3dadd( -24.9744, -156.183, -60.8897, 0.83 ) }
    dend_19 { pt3dadd( -22.8146, -159.435, -61.3418, 0.55 ) }
    dend_19 { pt3dadd( -21.1584, -161.864, -61.8146, 0.55 ) }
    dend_19 { pt3dadd( -20.571, -162.872, -62.4401, 0.55 ) }
    dend_19 { pt3dadd( -20.309, -163.491, -63.1483, 0.28 ) }
    dend_19 { pt3dadd( -19.802, -164.789, -64.8031, 0.55 ) }
    dend_19 { pt3dadd( -18.9561, -166.853, -67.4611, 0.28 ) }
    dend_19 { pt3dadd( -18.4014, -168.288, -69.0295, 0.55 ) }
    dend_19 { pt3dadd( -17.6424, -170.546, -71.2759, 0.28 ) }
    dend_19 { pt3dadd( -17.1019, -172.577, -73.2999, 0.83 ) }
    dend_19 { pt3dadd( -16.7501, -174.601, -75.4093, 0.28 ) }
    dend_19 { pt3dadd( -16.6724, -176.437, -77.4206, 0.55 ) }
    dend_19 { pt3dadd( -16.9137, -179.677, -80.8477, 0.28 ) }
    dend_19 { pt3dadd( -17.1573, -180.799, -81.9975, 0.55 ) }
    dend_19 { pt3dadd( -18.3582, -184.191, -85.3412, 0.28 ) }
    dend_19 { pt3dadd( -19.4296, -186.11, -87.3819, 0.55 ) }
    dend_19 { pt3dadd( -21.3047, -188.634, -90.1176, 0.28 ) }
    dend_19 { pt3dadd( -22.1582, -189.591, -91.1209, 0.55 ) }
    dend_19 { pt3dadd( -23.2846, -190.688, -92.1958, 0.28 ) }
    dend_19 { pt3dadd( -24.3777, -191.592, -93.0684, 0.55 ) }
    dend_19 { pt3dadd( -27.4228, -193.67, -95.0555, 0.28 ) }
    dend_19 { pt3dadd( -28.7094, -194.435, -95.8132, 0.55 ) }
    dend_19 { pt3dadd( -30.4654, -195.356, -96.7825, 0.55 ) }
    dend_19 { pt3dadd( -33.3596, -196.878, -98.4246, 0.28 ) }
    dend_19 { pt3dadd( -35.1215, -197.876, -99.4806, 0.83 ) }
    dend_19 { pt3dadd( -36.8586, -198.962, -100.558, 0.28 ) }
    dend_19 { pt3dadd( -37.5918, -199.492, -101.031, 0.55 ) }
    dend_19 { pt3dadd( -39.5051, -201.076, -102.361, 0.28 ) }
    dend_19 { pt3dadd( -41.0959, -202.587, -103.556, 0.55 ) }
    dend_19 { pt3dadd( -43.0035, -204.772, -105.078, 0.28 ) }
    dend_19 { pt3dadd( -43.452, -205.351, -105.466, 0.55 ) }
    dend_19 { pt3dadd( -44.9943, -207.498, -106.838, 0.28 ) }
    dend_19 { pt3dadd( -46.052, -209.007, -107.785, 0.55 ) }
    dend_19 { pt3dadd( -48.7505, -212.76, -110.049, 0.28 ) }
    dend_19 { pt3dadd( -49.9145, -214.279, -110.92, 0.55 ) }
    dend_19 { pt3dadd( -50.5458, -215.13, -111.332, 0.28 ) }
    dend_19 { pt3dadd( -50.8054, -215.474, -111.498, 0.55 ) }
    dend_19 { pt3dadd( -52.0735, -217.115, -112.184, 0.28 ) }
    dend_19 { pt3dadd( -53.083, -218.234, -112.813, 0.55 ) }
    dend_19 { pt3dadd( -54.0147, -219.193, -113.367, 0.28 ) }
    dend_19 { pt3dadd( -54.9867, -220.164, -114.093, 0.55 ) }
    dend_19 { pt3dadd( -56.9088, -222.271, -115.691, 0.28 ) }
    dend_19 { pt3dadd( -57.8499, -223.281, -116.652, 0.55 ) }
    dend_19 { pt3dadd( -60.8887, -226.513, -120.204, 0.28 ) }
    dend_19 { pt3dadd( -62.1933, -227.938, -121.963, 0.28 ) }
    dend_19 { pt3dadd( -63.9411, -229.961, -124.645, 0.28 ) }
    dend_19 { pt3dadd( -64.9758, -231.287, -126.444, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_19 { pt3dadd( -66.9617, -234.557, -130.575, 0.55 ) }
    dend_19 { pt3dadd( -67.3301, -235.369, -131.548, 0.28 ) }
    dend_19 { pt3dadd( -67.6021, -236.268, -132.549, 0.55 ) }
    dend_19 { pt3dadd( -67.8902, -237.211, -133.649, 0.28 ) }
    dend_19 { pt3dadd( -68.2317, -238.093, -134.596, 0.55 ) }
    dend_19 { pt3dadd( -68.6826, -239.222, -135.701, 0.28 ) }
    dend_19 { pt3dadd( -69.0779, -240.417, -136.599, 0.55 ) }
    dend_19 { pt3dadd( -70.5979, -245.017, -139.924, 0.28 ) }
    dend_19 { pt3dadd( -70.9869, -246.114, -140.715, 0.55 ) }
    dend_19 { pt3dadd( -72.9369, -251.197, -144.42, 0.28 ) }
    dend_19 { pt3dadd( -73.4948, -252.604, -145.453, 0.55 ) }
    dend_19 { pt3dadd( -75.6956, -258.165, -149.476, 0.28 ) }
    dend_19 { pt3dadd( -76.2524, -259.738, -150.528, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.1524, -31.5827, -2.31432, 0.83 ) }
    dend_9 { pt3dadd( -16.4738, -29.9001, -2.21659, 0.83 ) }
    dend_9 { pt3dadd( -20.578, -28.3949, -2.54542, 0.83 ) }
    dend_9 { pt3dadd( -24.151, -27.4111, -3.05004, 0.83 ) }
    dend_9 { pt3dadd( -27.3607, -26.8093, -3.70162, 0.83 ) }
    dend_9 { pt3dadd( -32.4868, -26.31, -5.11704, 0.83 ) }
    dend_9 { pt3dadd( -37.4841, -26.2814, -6.76831, 0.83 ) }
    dend_9 { pt3dadd( -41.5878, -26.9045, -8.48398, 0.55 ) }
    dend_9 { pt3dadd( -44.2557, -27.5314, -9.67404, 0.55 ) }
    dend_9 { pt3dadd( -46.6255, -28.1683, -10.7352, 0.83 ) }
    dend_9 { pt3dadd( -49.4055, -28.9048, -11.8845, 0.55 ) }
    dend_9 { pt3dadd( -52.0083, -29.4863, -12.6283, 0.55 ) }
    dend_9 { pt3dadd( -56.3327, -30.0062, -13.4299, 0.55 ) }
    dend_9 { pt3dadd( -59.2666, -29.8657, -13.4853, 0.55 ) }
    dend_9 { pt3dadd( -62.4709, -29.3627, -13.2517, 0.55 ) }
    dend_9 { pt3dadd( -64.2488, -28.8776, -13.1638, 0.55 ) }
    dend_9 { pt3dadd( -66.1073, -28.3147, -13.1016, 0.55 ) }
    dend_9 { pt3dadd( -69.1489, -27.4591, -13.1591, 0.55 ) }
    dend_9 { pt3dadd( -71.3134, -27.1093, -13.3532, 1.11 ) }
    dend_9 { pt3dadd( -72.994, -27.0793, -13.5944, 1.11 ) }
    dend_9 { pt3dadd( -81.1708, -27.7568, -15.1978, 0.55 ) }
    dend_9 { pt3dadd( -83.8952, -28.1212, -15.8114, 0.55 ) }
    dend_9 { pt3dadd( -86.2297, -28.5151, -16.3962, 0.55 ) }
    dend_9 { pt3dadd( -90.2702, -29.2285, -17.5107, 0.55 ) }
    dend_9 { pt3dadd( -94.0237, -29.6432, -18.8098, 0.55 ) }
    dend_9 { pt3dadd( -97.3836, -29.6144, -20.381, 0.55 ) }
    dend_9 { pt3dadd( -98.9767, -29.483, -21.3025, 0.28 ) }
    dend_9 { pt3dadd( -100.219, -29.2638, -22.1602, 0.83 ) }
    dend_9 { pt3dadd( -103.207, -28.5176, -24.3807, 0.83 ) }
    dend_9 { pt3dadd( -107.13, -27.2458, -27.5261, 0.83 ) }
    dend_9 { pt3dadd( -111.666, -25.4783, -31.5684, 0.55 ) }
    dend_9 { pt3dadd( -113.609, -24.6837, -33.3753, 0.55 ) }
    dend_9 { pt3dadd( -116.094, -23.7543, -35.6558, 0.28 ) }
    dend_9 { pt3dadd( -117.292, -23.3519, -36.6977, 0.83 ) }
    dend_9 { pt3dadd( -119.618, -22.5423, -38.6147, 0.55 ) }
    dend_9 { pt3dadd( -121.983, -21.3705, -40.3612, 0.55 ) }
    dend_9 { pt3dadd( -125.121, -19.3749, -42.5406, 0.28 ) }
    dend_9 { pt3dadd( -126.805, -18.3113, -43.653, 1.11 ) }
    dend_9 { pt3dadd( -128.141, -17.5373, -44.587, 0.83 ) }
    dend_9 { pt3dadd( -131.253, -15.9339, -46.8524, 0.83 ) }
    dend_9 { pt3dadd( -135.148, -14.2358, -49.893, 0.83 ) }
    dend_9 { pt3dadd( -141.339, -11.8619, -54.798, 0.28 ) }
    dend_9 { pt3dadd( -143.395, -11.1635, -56.5066, 0.83 ) }
    dend_9 { pt3dadd( -149.533, -9.16579, -61.8363, 0.28 ) }
    dend_9 { pt3dadd( -152.265, -8.37676, -64.3107, 0.83 ) }
    dend_9 { pt3dadd( -157.657, -7.17464, -69.3855, 0.28 ) }
    dend_9 { pt3dadd( -158.479, -7.05409, -70.2372, 0.28 ) }
    dend_9 { pt3dadd( -159.95, -6.90267, -71.8899, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 61/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -13.1524, -31.5827, -2.31432, 1.11 ) }
    dend_4 { pt3dadd( -13.8633, -33.7596, -1.1369, 1.11 ) }
    dend_4 { pt3dadd( -15.1212, -36.2146, 0.476954, 1.11 ) }
    dend_4 { pt3dadd( -16.0928, -37.9274, 1.59193, 1.11 ) }
    dend_4 { pt3dadd( -17.2967, -40.5268, 3.35259, 1.11 ) }
    dend_4 { pt3dadd( -18.2932, -43.2792, 5.24616, 0.83 ) }
    dend_4 { pt3dadd( -18.9504, -45.2362, 6.62114, 0.83 ) }
    dend_4 { pt3dadd( -19.8348, -47.5312, 8.4422, 0.83 ) }
    dend_4 { pt3dadd( -21.1245, -50.238, 10.8088, 0.83 ) }
    dend_4 { pt3dadd( -23.0378, -53.8191, 13.9534, 1.11 ) }
    dend_4 { pt3dadd( -24.1738, -55.6314, 15.5021, 0.83 ) }
    dend_4 { pt3dadd( -25.181, -57.0929, 16.7605, 0.83 ) }
    dend_4 { pt3dadd( -26.9442, -59.3241, 18.7384, 0.83 ) }
    dend_4 { pt3dadd( -29.1412, -61.664, 20.8173, 0.83 ) }
    dend_4 { pt3dadd( -31.2165, -63.4455, 22.4224, 0.83 ) }
    dend_4 { pt3dadd( -33.8495, -65.4925, 24.117, 0.83 ) }
    dend_4 { pt3dadd( -36.033, -67.1188, 25.4387, 0.83 ) }
    dend_4 { pt3dadd( -37.8244, -68.5165, 26.5157, 0.83 ) }
    dend_4 { pt3dadd( -39.2725, -69.7207, 27.3704, 1.11 ) }
    dend_4 { pt3dadd( -41.1106, -71.3303, 28.4061, 0.83 ) }
    dend_4 { pt3dadd( -43.0142, -73.0392, 29.4672, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 82/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -159.95, -6.90267, -71.8899, 0.28 ) }
    dend_11 { pt3dadd( -162.547, -7.27122, -73.3701, 0.28 ) }
    dend_11 { pt3dadd( -163.21, -7.36604, -73.7272, 0.55 ) }
    dend_11 { pt3dadd( -164.456, -7.50995, -74.3274, 0.28 ) }
    dend_11 { pt3dadd( -165.415, -7.51682, -74.7675, 0.28 ) }
    dend_11 { pt3dadd( -166.77, -7.46759, -75.3848, 0.55 ) }
    dend_11 { pt3dadd( -168.868, -7.38299, -76.295, 0.28 ) }
    dend_11 { pt3dadd( -169.516, -7.35988, -76.6035, 0.55 ) }
    dend_11 { pt3dadd( -170.761, -7.30659, -77.2281, 1.11 ) }
    dend_11 { pt3dadd( -173.362, -7.21438, -78.6077, 0.28 ) }
    dend_11 { pt3dadd( -174.778, -7.20799, -79.44, 0.55 ) }
    dend_11 { pt3dadd( -176.431, -7.24706, -80.4725, 0.55 ) }
    dend_11 { pt3dadd( -179.177, -7.517, -82.4316, 0.55 ) }
    dend_11 { pt3dadd( -180.377, -7.70713, -83.3718, 0.55 ) }
    dend_11 { pt3dadd( -181.833, -8.01936, -84.5873, 0.55 ) }
    dend_11 { pt3dadd( -182.872, -8.32321, -85.5006, 0.55 ) }
    dend_11 { pt3dadd( -184.723, -8.89385, -87.2062, 0.55 ) }
    dend_11 { pt3dadd( -186.754, -9.55187, -89.1812, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -188.79, -10.2564, -91.0483, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 1/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -159.95, -6.90267, -71.8899, 0.55 ) }
    dend_10 { pt3dadd( -159.821, -8.15887, -73.6568, 0.55 ) }
    dend_10 { pt3dadd( -159.641, -9.9185, -76.1319, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 4/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -43.0142, -73.0392, 29.4672, 0.55 ) }
    dend_8 { pt3dadd( -44.2739, -75.1288, 30.2822, 0.55 ) }
    dend_8 { pt3dadd( -45.2417, -76.6731, 30.832, 0.55 ) }
    dend_8 { pt3dadd( -46.4252, -78.2469, 31.4893, 0.55 ) }
    dend_8 { pt3dadd( -48.1468, -80.2731, 32.4394, 0.55 ) }
    dend_8 { pt3dadd( -49.3702, -81.5213, 33.1245, 0.55 ) }
    dend_8 { pt3dadd( -52.0123, -84.0277, 34.5958, 0.55 ) }
    dend_8 { pt3dadd( -54.5054, -86.3887, 35.9378, 0.55 ) }
    dend_8 { pt3dadd( -57.0619, -88.9107, 37.227, 0.55 ) }
    dend_8 { pt3dadd( -58.5793, -90.417, 38.0663, 0.55 ) }
    dend_8 { pt3dadd( -60.5988, -92.416, 39.2396, 0.55 ) }
    dend_8 { pt3dadd( -62.5562, -94.4296, 40.486, 0.55 ) }
    dend_8 { pt3dadd( -64.0647, -95.9292, 41.5409, 0.55 ) }
    dend_8 { pt3dadd( -67.6736, -99.4072, 44.2547, 0.55 ) }
    dend_8 { pt3dadd( -70.3227, -102.008, 46.4816, 0.55 ) }
    dend_8 { pt3dadd( -71.2629, -103.022, 47.4019, 0.83 ) }
    dend_8 { pt3dadd( -72.6282, -104.716, 48.9782, 0.55 ) }
    dend_8 { pt3dadd( -73.8684, -106.297, 50.6674, 0.55 ) }
    dend_8 { pt3dadd( -75.1031, -107.953, 52.5651, 0.55 ) }
    dend_8 { pt3dadd( -76.288, -109.609, 54.4593, 0.55 ) }
    dend_8 { pt3dadd( -77.8779, -112.257, 56.9512, 0.55 ) }
    dend_8 { pt3dadd( -79.3309, -114.807, 59.2543, 0.55 ) }
    dend_8 { pt3dadd( -80.7545, -117.365, 61.4469, 0.55 ) }
    dend_8 { pt3dadd( -81.8451, -119.338, 63.1433, 0.55 ) }
    dend_8 { pt3dadd( -83.6998, -122.406, 65.9963, 0.55 ) }
    dend_8 { pt3dadd( -85.3729, -124.551, 68.2083, 0.55 ) }
    dend_8 { pt3dadd( -86.8835, -126.045, 70.0094, 0.55 ) }
    dend_8 { pt3dadd( -88.2395, -127.183, 71.5351, 0.55 ) }
    dend_8 { pt3dadd( -89.8238, -128.476, 73.2324, 0.55 ) }
    dend_8 { pt3dadd( -91.7456, -130.065, 75.3443, 0.83 ) }
    dend_8 { pt3dadd( -93.5929, -131.719, 77.3869, 0.55 ) }
    dend_8 { pt3dadd( -94.9982, -133.004, 78.8052, 0.55 ) }
    dend_8 { pt3dadd( -96.7363, -134.779, 80.4299, 0.55 ) }
    dend_8 { pt3dadd( -97.712, -135.843, 81.2578, 0.55 ) }
    dend_8 { pt3dadd( -99.588, -137.921, 82.6547, 0.55 ) }
    dend_8 { pt3dadd( -101.318, -140.014, 83.8006, 0.55 ) }
    dend_8 { pt3dadd( -103.058, -142.077, 84.9452, 0.55 ) }
    dend_8 { pt3dadd( -103.862, -142.986, 85.4414, 0.83 ) }
    dend_8 { pt3dadd( -106.067, -145.275, 86.6535, 0.55 ) }
    dend_8 { pt3dadd( -107.69, -146.804, 87.4606, 0.55 ) }
    dend_8 { pt3dadd( -112.157, -150.833, 89.3942, 0.55 ) }
    dend_8 { pt3dadd( -114.555, -152.875, 90.4996, 0.55 ) }
    dend_8 { pt3dadd( -117.716, -155.333, 92.0814, 0.55 ) }
    dend_8 { pt3dadd( -119.44, -156.578, 93.1109, 0.55 ) }
    dend_8 { pt3dadd( -121.117, -157.627, 94.3309, 1.38 ) }
    dend_8 { pt3dadd( -124.063, -159.218, 96.9357, 0.55 ) }
    dend_8 { pt3dadd( -126.766, -160.415, 99.9421, 0.55 ) }
    dend_8 { pt3dadd( -128.72, -161.413, 102.748, 0.55 ) }
    dend_8 { pt3dadd( -130.608, -162.329, 105.993, 0.55 ) }
    dend_8 { pt3dadd( -132.179, -163.108, 109.031, 0.55 ) }
    dend_8 { pt3dadd( -133.279, -163.671, 111.425, 0.55 ) }
    dend_8 { pt3dadd( -134.632, -164.457, 114.75, 0.55 ) }
    dend_8 { pt3dadd( -136.492, -165.941, 119.784, 0.55 ) }
    dend_8 { pt3dadd( -137.27, -166.69, 122.037, 0.55 ) }
    dend_8 { pt3dadd( -137.592, -167.016, 122.917, 0.55 ) }
    dend_8 { pt3dadd( -138.209, -167.662, 124.473, 0.28 ) }
    dend_8 { pt3dadd( -138.857, -168.238, 125.906, 0.83 ) }
    dend_8 { pt3dadd( -140.643, -169.344, 128.641, 0.28 ) }
    dend_8 { pt3dadd( -141.683, -169.721, 129.879, 0.28 ) }
    dend_8 { pt3dadd( -143.145, -170.093, 131.507, 0.55 ) }
    dend_8 { pt3dadd( -145.684, -170.625, 134.135, 0.55 ) }
    dend_8 { pt3dadd( -149.101, -171.282, 137.428, 0.28 ) }
    dend_8 { pt3dadd( -152.203, -171.878, 140.299, 0.28 ) }
    dend_8 { pt3dadd( -154.942, -172.413, 142.66, 0.55 ) }
    dend_8 { pt3dadd( -156.253, -172.659, 143.801, 0.55 ) }
    dend_8 { pt3dadd( -158.174, -173.073, 145.467, 0.55 ) }
    dend_8 { pt3dadd( -160.174, -173.56, 147.305, 0.28 ) }
    dend_8 { pt3dadd( -160.945, -173.755, 147.879, 0.55 ) }
    dend_8 { pt3dadd( -162.248, -174.149, 148.794, 0.28 ) }
    dend_8 { pt3dadd( -162.641, -174.289, 149.015, 0.55 ) }
    dend_8 { pt3dadd( -164.947, -174.943, 150.154, 0.28 ) }
    dend_8 { pt3dadd( -166.444, -175.27, 150.853, 0.83 ) }
    dend_8 { pt3dadd( -168.873, -175.751, 151.882, 0.28 ) }
    dend_8 { pt3dadd( -170.995, -176.177, 152.743, 0.28 ) }
    dend_8 { pt3dadd( -173.799, -176.79, 153.809, 0.28 ) }
    dend_8 { pt3dadd( -176.364, -177.318, 154.715, 0.28 ) }
    dend_8 { pt3dadd( -184.542, -183.882, 160.057, 0.28 ) }
    dend_8 { pt3dadd( -191.053, -191.507, 166.179, 0.28 ) }
    dend_8 { pt3dadd( -197.275, -198.577, 173.232, 0.28 ) }
    dend_8 { pt3dadd( -203.152, -205.885, 180.331, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -43.0142, -73.0392, 29.4672, 0.55 ) }
    dend_5 { pt3dadd( -43.683, -75.7, 28.4877, 0.55 ) }
    dend_5 { pt3dadd( -44.2321, -77.84, 27.5393, 0.55 ) }
    dend_5 { pt3dadd( -44.5406, -78.9706, 26.9564, 0.55 ) }
    dend_5 { pt3dadd( -44.9983, -80.4696, 26.1861, 0.83 ) }
    dend_5 { pt3dadd( -46.0187, -83.5694, 24.7052, 0.83 ) }
    dend_5 { pt3dadd( -46.7831, -85.916, 23.6701, 0.55 ) }
    dend_5 { pt3dadd( -47.2958, -87.3512, 23.093, 0.83 ) }
    dend_5 { pt3dadd( -48.0131, -89.3127, 22.3774, 0.55 ) }
    dend_5 { pt3dadd( -48.6373, -90.9433, 21.821, 0.55 ) }
    dend_5 { pt3dadd( -49.6849, -93.5176, 21.0666, 0.55 ) }
    dend_5 { pt3dadd( -50.92, -96.4464, 20.3576, 0.55 ) }
    dend_5 { pt3dadd( -52.3739, -100.023, 19.6473, 0.55 ) }
    dend_5 { pt3dadd( -52.8313, -101.151, 19.4453, 0.55 ) }
    dend_5 { pt3dadd( -54.2534, -104.762, 18.8497, 0.55 ) }
    dend_5 { pt3dadd( -54.97, -106.66, 18.4579, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 0/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -188.79, -10.2564, -91.0483, 0.55 ) }
    dend_13 { pt3dadd( -194.923, -9.69539, -94.8025, 0.55 ) }
    dend_13 { pt3dadd( -197.395, -9.58733, -96.222, 0.55 ) }
    dend_13 { pt3dadd( -201.645, -9.40793, -98.411, 0.55 ) }
    dend_13 { pt3dadd( -203.393, -9.34661, -99.207, 0.55 ) }
    dend_13 { pt3dadd( -207.331, -9.26702, -100.907, 0.55 ) }
    dend_13 { pt3dadd( -212.765, -9.19524, -103.183, 0.55 ) }
    dend_13 { pt3dadd( -215.53, -9.17986, -104.087, 0.55 ) }
    dend_13 { pt3dadd( -217.716, -9.18896, -104.742, 0.55 ) }
    dend_13 { pt3dadd( -219.823, -9.34818, -105.275, 0.55 ) }
    dend_13 { pt3dadd( -222.234, -9.55453, -105.847, 0.55 ) }
    dend_13 { pt3dadd( -224.055, -9.7007, -106.091, 0.55 ) }
    dend_13 { pt3dadd( -225.65, -9.73586, -106.158, 0.28 ) }
    dend_13 { pt3dadd( -227.887, -9.76512, -106.276, 0.55 ) }
    dend_13 { pt3dadd( -232.44, -9.79147, -107.004, 0.28 ) }
    dend_13 { pt3dadd( -233.202, -9.83892, -107.215, 0.28 ) }
    dend_13 { pt3dadd( -234.166, -9.94325, -107.55, 0.55 ) }
    dend_13 { pt3dadd( -236.834, -10.3411, -108.645, 0.55 ) }
    dend_13 { pt3dadd( -238.677, -10.7053, -109.539, 0.55 ) }
    dend_13 { pt3dadd( -244.08, -12.0977, -112.727, 0.55 ) }
    dend_13 { pt3dadd( -247.951, -13.2799, -115.183, 0.55 ) }
    dend_13 { pt3dadd( -249.765, -13.8951, -116.424, 0.55 ) }
    dend_13 { pt3dadd( -251.634, -14.6065, -117.856, 0.55 ) }
    dend_13 { pt3dadd( -253.073, -15.2686, -119.14, 0.55 ) }
    dend_13 { pt3dadd( -255.276, -16.4399, -121.353, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -188.79, -10.2564, -91.0483, 0.55 ) }
    dend_12 { pt3dadd( -188.362, -7.59573, -90.2722, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 27/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -54.97, -106.66, 18.4579, 0.55 ) }
    dend_7 { pt3dadd( -56.4356, -108.816, 18.5272, 0.55 ) }
    dend_7 { pt3dadd( -57.6368, -110.232, 18.5215, 0.28 ) }
    dend_7 { pt3dadd( -58.8731, -111.376, 18.6378, 0.55 ) }
    dend_7 { pt3dadd( -61.0, -112.793, 18.6507, 0.55 ) }
    dend_7 { pt3dadd( -62.9215, -113.703, 18.5682, 0.28 ) }
    dend_7 { pt3dadd( -63.7309, -114.051, 18.4927, 0.83 ) }
    dend_7 { pt3dadd( -66.6777, -115.135, 18.2011, 0.55 ) }
    dend_7 { pt3dadd( -69.5369, -116.078, 17.9766, 0.55 ) }
    dend_7 { pt3dadd( -74.0114, -117.225, 17.5916, 0.55 ) }
    dend_7 { pt3dadd( -78.1342, -118.138, 17.2712, 0.55 ) }
    dend_7 { pt3dadd( -82.6833, -119.129, 16.9247, 0.55 ) }
    dend_7 { pt3dadd( -84.0556, -119.438, 16.8367, 0.55 ) }
    dend_7 { pt3dadd( -86.3051, -119.993, 16.712, 0.55 ) }
    dend_7 { pt3dadd( -89.0126, -120.689, 16.6593, 0.55 ) }
    dend_7 { pt3dadd( -93.0951, -121.715, 16.7659, 0.55 ) }
    dend_7 { pt3dadd( -95.0823, -122.132, 16.746, 0.55 ) }
    dend_7 { pt3dadd( -98.8683, -122.879, 16.5118, 0.55 ) }
    dend_7 { pt3dadd( -101.555, -123.451, 16.1803, 0.28 ) }
    dend_7 { pt3dadd( -104.754, -124.217, 15.6277, 0.55 ) }
    dend_7 { pt3dadd( -108.799, -125.33, 14.8332, 0.55 ) }
    dend_7 { pt3dadd( -114.167, -126.841, 13.6676, 0.55 ) }
    dend_7 { pt3dadd( -117.677, -127.926, 12.8734, 0.55 ) }
    dend_7 { pt3dadd( -119.392, -128.532, 12.4015, 0.28 ) }
    dend_7 { pt3dadd( -121.55, -129.351, 11.721, 0.55 ) }
    dend_7 { pt3dadd( -124.999, -130.723, 10.5454, 0.28 ) }
    dend_7 { pt3dadd( -125.932, -131.102, 10.264, 0.28 ) }
    dend_7 { pt3dadd( -126.845, -131.459, 10.0012, 0.28 ) }
    dend_7 { pt3dadd( -130.037, -132.547, 9.18088, 1.38 ) }
    dend_7 { pt3dadd( -133.673, -133.779, 8.33212, 0.55 ) }
    dend_7 { pt3dadd( -135.605, -134.424, 7.90508, 0.28 ) }
    dend_7 { pt3dadd( -136.466, -134.732, 7.69658, 0.55 ) }
    dend_7 { pt3dadd( -138.632, -135.634, 7.13244, 0.28 ) }
    dend_7 { pt3dadd( -139.947, -136.313, 6.78359, 0.55 ) }
    dend_7 { pt3dadd( -141.258, -137.66, 6.45244, 0.28 ) }
    dend_7 { pt3dadd( -141.518, -138.031, 6.3952, 0.55 ) }
    dend_7 { pt3dadd( -142.589, -139.799, 6.13433, 0.28 ) }
    dend_7 { pt3dadd( -143.343, -141.161, 5.95315, 0.55 ) }
    dend_7 { pt3dadd( -144.198, -142.828, 5.76174, 0.28 ) }
    dend_7 { pt3dadd( -147.722, -149.916, 4.91504, 0.55 ) }
    dend_7 { pt3dadd( -148.63, -151.8, 4.69596, 0.28 ) }
    dend_7 { pt3dadd( -149.231, -153.05, 4.5709, 0.55 ) }
    dend_7 { pt3dadd( -149.894, -154.463, 4.49206, 0.28 ) }
    dend_7 { pt3dadd( -150.154, -155.029, 4.44865, 0.55 ) }
    dend_7 { pt3dadd( -150.634, -156.174, 4.3617, 0.28 ) }
    dend_7 { pt3dadd( -151.147, -157.449, 4.21878, 0.55 ) }
    dend_7 { pt3dadd( -151.782, -158.917, 4.05731, 0.28 ) }
    dend_7 { pt3dadd( -152.77, -161.135, 3.8367, 0.83 ) }
    dend_7 { pt3dadd( -153.758, -163.337, 3.66001, 0.28 ) }
    dend_7 { pt3dadd( -154.509, -165.043, 3.53229, 0.28 ) }
    dend_7 { pt3dadd( -155.663, -167.757, 3.35282, 0.55 ) }
    dend_7 { pt3dadd( -156.843, -170.482, 3.15419, 0.28 ) }
    dend_7 { pt3dadd( -157.932, -173.278, 2.98163, 0.28 ) }
    dend_7 { pt3dadd( -158.184, -173.937, 2.94898, 0.55 ) }
    dend_7 { pt3dadd( -158.953, -176.035, 2.92881, 0.28 ) }
    dend_7 { pt3dadd( -159.402, -177.269, 2.87872, 0.55 ) }
    dend_7 { pt3dadd( -160.111, -179.501, 2.7738, 0.28 ) }
    dend_7 { pt3dadd( -160.693, -182.21, 2.55047, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -54.97, -106.66, 18.4579, 0.28 ) }
    dend_6 { pt3dadd( -54.0105, -107.941, 17.7489, 0.28 ) }
    dend_6 { pt3dadd( -53.3052, -108.839, 17.2719, 0.28 ) }
    dend_6 { pt3dadd( -52.9762, -109.257, 17.0494, 0.55 ) }
    dend_6 { pt3dadd( -52.4861, -109.881, 16.7179, 0.28 ) }
    dend_6 { pt3dadd( -52.0972, -110.376, 16.4549, 0.55 ) }
    dend_6 { pt3dadd( -50.7954, -112.033, 15.5744, 0.28 ) }
    dend_6 { pt3dadd( -49.7882, -113.327, 15.055, 0.55 ) }
    dend_6 { pt3dadd( -44.8821, -118.451, 12.4916, 0.55 ) }
    dend_6 { pt3dadd( -40.3045, -123.289, 8.95623, 0.55 ) }
    dend_6 { pt3dadd( -35.7104, -128.019, 5.29471, 0.55 ) }
    dend_6 { pt3dadd( -31.1685, -132.729, 1.54416, 0.55 ) }
    dend_6 { pt3dadd( -25.408, -135.906, -2.24176, 0.55 ) }
    dend_6 { pt3dadd( -20.4249, -139.217, -6.89059, 0.55 ) }
    dend_6 { pt3dadd( -15.6249, -143.717, -10.5937, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -12.1743, -148.649, -15.1025, 0.55 ) }
    dend_6 { pt3dadd( -8.52914, -154.244, -18.5398, 0.55 ) }
    dend_6 { pt3dadd( -4.97451, -160.081, -21.6428, 0.55 ) }
    dend_6 { pt3dadd( -1.00778, -165.36, -25.2441, 0.55 ) }
    dend_6 { pt3dadd( 3.25043, -170.197, -29.1494, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 5/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -255.276, -16.4399, -121.353, 0.28 ) }
    dend_15 { pt3dadd( -257.225, -17.202, -121.172, 0.28 ) }
    dend_15 { pt3dadd( -259.681, -17.5173, -121.945, 0.28 ) }
    dend_15 { pt3dadd( -262.105, -17.7158, -122.81, 0.28 ) }
    dend_15 { pt3dadd( -264.443, -17.8431, -123.609, 0.28 ) }
    dend_15 { pt3dadd( -267.139, -17.8833, -124.447, 0.28 ) }
    dend_15 { pt3dadd( -270.213, -17.6559, -126.315, 0.28 ) }
    dend_15 { pt3dadd( -275.774, -16.9367, -130.772, 0.28 ) }
    dend_15 { pt3dadd( -276.974, -16.7314, -131.93, 0.55 ) }
    dend_15 { pt3dadd( -277.986, -16.5122, -133.01, 0.28 ) }
    dend_15 { pt3dadd( -279.001, -16.3151, -134.104, 0.55 ) }
    dend_15 { pt3dadd( -287.388, -15.2646, -143.063, 0.55 ) }
    dend_15 { pt3dadd( -288.312, -15.1844, -143.965, 0.28 ) }
    dend_15 { pt3dadd( -290.226, -15.2224, -145.732, 0.55 ) }
    dend_15 { pt3dadd( -292.079, -15.3118, -147.34, 0.55 ) }
    dend_15 { pt3dadd( -294.382, -15.6273, -149.225, 0.55 ) }
    dend_15 { pt3dadd( -296.333, -16.1294, -150.564, 0.55 ) }
    dend_15 { pt3dadd( -298.424, -16.9312, -151.453, 0.55 ) }
    dend_15 { pt3dadd( -300.874, -17.8708, -152.602, 0.83 ) }
    dend_15 { pt3dadd( -301.557, -18.1788, -152.935, 0.83 ) }
    dend_15 { pt3dadd( -303.914, -19.396, -154.219, 0.28 ) }
    dend_15 { pt3dadd( -306.341, -20.6417, -155.509, 0.55 ) }
    dend_15 { pt3dadd( -308.991, -21.8116, -156.603, 0.28 ) }
    dend_15 { pt3dadd( -310.07, -22.3281, -157.002, 0.55 ) }
    dend_15 { pt3dadd( -311.811, -23.1519, -157.606, 0.28 ) }
    dend_15 { pt3dadd( -312.844, -23.5974, -157.942, 0.28 ) }
    dend_15 { pt3dadd( -314.429, -24.073, -158.275, 0.55 ) }
    dend_15 { pt3dadd( -317.836, -24.9676, -158.525, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -255.276, -16.4399, -121.353, 0.55 ) }
    dend_14 { pt3dadd( -254.739, -17.8274, -122.103, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_21 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_37 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_34 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_29 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_25 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_31 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_30 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_27 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_26 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_23 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_17 OneSecGrp_SectionRef_24.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_20 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_9 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_15 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_28 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_16 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_22 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_5 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_10 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_14 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 7
    dend_35 nseg = 3
    dend_21 nseg = 5
    dend_37 nseg = 9
    dend_36 nseg = 5
    dend_34 nseg = 11
    dend_29 nseg = 3
    dend_25 nseg = 3
    dend_31 nseg = 9
    dend_30 nseg = 7
    dend_27 nseg = 3
    dend_26 nseg = 3
    dend_24 nseg = 7
    dend_23 nseg = 7
    dend_17 nseg = 17
    dend_2 nseg = 11
    dend_20 nseg = 5
    dend_19 nseg = 15
    dend_9 nseg = 9
    dend_4 nseg = 3
    dend_8 nseg = 13
    dend_13 nseg = 3
    dend_7 nseg = 7
    dend_6 nseg = 5
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_NBC_df01e73cd3_0_0


