// Cell: Cell_472440759
/*
{
  "id" : "Cell_472440759",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "346.315, 288.974, 21.84, 10.2436", "351.437, 288.974, 21.84, 10.2436", "356.559, 288.974, 21.84, 10.2436" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "351.437, 288.974, 21.84, 1.0", "357.278, 302.79, 21.84, 1.0", "363.12, 316.606, 21.84, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "348.864, 291.943, 18.4904, 0.5084", "348.502, 293.015, 18.8299, 0.6102", "348.155, 294.064, 19.0266, 0.6356", "347.685, 295.096, 19.2409, 0.7372", "347.02, 296.023, 19.4197, 0.788", "346.196, 296.809, 19.5709, 0.7626", "345.277, 297.459, 19.712, 0.661", "344.37, 298.146, 19.7874, 0.5592", "343.66, 299.038, 19.7457, 0.5338", "343.048, 299.99, 19.5538, 0.5592", "342.232, 300.667, 19.1554, 0.5338", "341.19, 300.895, 18.6115, 0.5592", "340.101, 301.117, 18.0237, 0.5592", "339.15, 301.728, 17.4777, 0.6356", "338.648, 302.709, 16.9474, 0.6356", "338.223, 303.706, 16.4264, 0.5848", "337.819, 304.767, 16.0175, 0.5338", "337.475, 305.841, 15.8093, 0.5338", "336.927, 306.839, 15.7183, 0.6102", "336.286, 307.767, 15.5969, 0.6102", "335.619, 308.683, 15.4605, 0.5338", "335.121, 309.713, 15.3654, 0.4322", "334.906, 310.81, 15.3535, 0.4576", "334.555, 311.896, 15.2821, 0.5338", "334.017, 312.868, 15.1025, 0.661", "333.602, 313.885, 14.8425, 0.6864", "333.261, 314.971, 14.5987, 0.7626", "332.846, 316.037, 14.4094, 0.6864", "332.689, 317.169, 14.2889, 0.6102", "332.668, 318.29, 14.3083, 0.483", "332.623, 319.432, 14.3334, 0.5084", "332.355, 320.527, 14.3034, 0.5592", "332.016, 321.62, 14.2984, 0.6102", "331.66, 322.707, 14.3144, 0.5848", "331.219, 323.762, 14.3482, 0.6102", "330.817, 324.833, 14.4005, 0.5848", "330.513, 325.935, 14.4959, 0.6102", "330.845, 326.955, 15.12, 0.5084" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "347.368, 288.853, 28.8207, 0.788", "346.288, 288.658, 28.8291, 0.9152", "345.173, 288.415, 28.8277, 0.839", "344.051, 288.332, 28.7148, 0.7372", "343.01, 288.672, 28.4906, 0.7626", "342.072, 289.29, 28.1842, 0.839", "341.073, 289.723, 27.7932, 0.788", "339.984, 289.799, 27.3573, 0.7372", "338.863, 289.659, 26.9817, 0.7626", "337.732, 289.496, 26.7169, 0.8898", "336.593, 289.378, 26.558, 0.9152", "335.467, 289.193, 26.487, 0.8644", "334.373, 288.862, 26.4862, 0.7118", "333.296, 288.477, 26.5269, 0.5592", "332.174, 288.344, 26.592, 0.4576", "331.244, 288.879, 26.7326, 0.4322", "330.842, 289.893, 26.9643, 0.5084", "330.472, 290.967, 27.2215, 0.5592", "329.667, 291.75, 27.4652, 0.7118", "328.586, 292.09, 27.6957, 0.839", "327.447, 292.172, 27.9199, 0.9406", "326.305, 292.194, 28.1576, 0.8898", "325.208, 292.273, 28.4894, 0.7626", "324.242, 292.604, 28.9624, 0.661", "323.365, 293.25, 29.4666, 0.6356", "322.49, 293.98, 29.8575, 0.7118", "321.55, 294.609, 30.0826, 0.788", "320.555, 295.16, 30.1949, 0.8136", "319.595, 295.78, 30.2786, 0.7626", "318.709, 296.487, 30.4016, 0.7372", "317.775, 297.145, 30.5343, 0.788", "316.742, 297.626, 30.716, 0.9152", "315.714, 298.052, 30.9991, 0.9914", "314.704, 298.542, 31.3233, 0.966", "313.702, 299.087, 31.6106, 0.8136", "312.752, 299.726, 31.8354, 0.6864", "311.759, 300.293, 32.0104, 0.6356", "310.734, 300.8, 32.156, 0.6356", "309.832, 301.461, 32.3492, 0.6356", "309.101, 302.339, 32.5136, 0.5848", "308.085, 302.804, 32.578, 0.5848", "306.976, 303.086, 32.6617, 0.6102", "305.869, 303.179, 32.8619, 0.7118", "304.744, 303.337, 33.1047, 0.8644", "303.631, 303.589, 33.3662, 0.9152", "302.502, 303.772, 33.6146, 0.8644", "301.419, 304.042, 33.9528, 0.661", "300.303, 304.234, 34.3137, 0.5338", "299.298, 304.717, 34.7175, 0.4322", "298.455, 305.477, 35.1254, 0.4068", "297.536, 306.157, 35.4922, 0.4322", "296.393, 306.188, 35.8364, 0.483" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "350.542, 293.387, 24.3316, 0.4322", "350.581, 294.455, 25.2918, 0.6356", "350.86, 295.563, 26.0324, 0.788", "350.977, 296.701, 26.5367, 0.9406", "350.98, 297.844, 26.8116, 1.0424", "350.983, 298.965, 26.813, 1.1186", "351.002, 300.093, 26.6, 1.0932", "351.121, 301.231, 26.3844, 0.9914", "351.616, 302.262, 26.1876, 0.788", "352.352, 303.138, 26.0063, 0.6356" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "354.895, 287.03, 29.4893, 0.5848", "355.693, 286.212, 29.0242, 0.661", "356.53, 285.508, 28.7806, 0.8136", "357.446, 284.96, 28.4206, 0.9914", "358.472, 284.466, 28.1025, 1.0932", "359.542, 284.06, 27.8718, 1.0168", "360.68, 283.949, 27.7296, 0.9152", "361.824, 283.927, 27.6724, 0.8644", "362.965, 283.853, 27.6959, 0.9152", "364.061, 283.526, 27.7784, 0.9152", "365.125, 283.121, 27.9261, 0.8644", "366.119, 282.612, 28.1602, 0.788", "367.05, 281.95, 28.3884, 0.788", "367.811, 281.097, 28.5886, 0.788", "368.458, 280.155, 28.7792, 0.7118", "369.059, 279.208, 29.0186, 0.6102", "369.765, 278.316, 29.164, 0.5084", "370.574, 277.507, 29.2701, 0.5084", "371.365, 276.736, 29.4638, 0.5592", "372.426, 276.42, 29.7139, 0.6102", "373.362, 275.763, 29.9023, 0.6102" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "351.473, 284.738, 22.9424, 0.9152", "351.683, 283.614, 22.7894, 1.144", "351.845, 282.482, 22.7384, 1.322", "351.611, 281.365, 22.6611, 1.3728", "350.819, 279.266, 22.4655, 1.2966", "350.488, 278.172, 22.3164, 1.1694", "350.168, 277.077, 22.1886, 0.9914" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "355.749, 290.589, 20.9126, 0.5592", "356.876, 290.718, 20.4691, 0.7118", "358.004, 290.597, 20.2896, 0.8898", "359.072, 290.237, 20.0491, 1.0168", "360.056, 289.697, 19.755, 1.0424", "360.973, 289.049, 19.433, 0.966", "361.904, 288.406, 19.1209, 0.8136", "362.965, 288.018, 18.868, 0.7118", "364.068, 288.181, 18.6929, 0.7118", "365.05, 288.746, 18.5885, 0.8644", "365.969, 289.427, 18.5385, 0.966", "366.877, 290.123, 18.5257, 1.0168", "367.829, 290.757, 18.5347, 0.966", "368.792, 291.373, 18.5557, 0.9152", "369.702, 292.065, 18.5864, 0.8898", "370.617, 292.752, 18.6287, 0.8898", "371.562, 293.396, 18.6848, 0.8898", "372.504, 294.045, 18.7653, 0.7626", "373.47, 294.638, 18.8913, 0.5592", "374.464, 295.17, 19.0616, 0.3814", "375.306, 295.922, 19.2306, 0.356", "375.869, 296.907, 19.3336, 0.4576", "376.391, 297.907, 19.3339, 0.5338", "376.876, 298.928, 19.2638, 0.5592", "377.384, 299.95, 19.2238, 0.5338", "378.108, 300.808, 19.268, 0.6102", "379.02, 301.486, 19.3547, 0.6864", "379.968, 302.125, 19.4485, 0.7626", "380.871, 302.827, 19.5391, 0.7372", "381.761, 303.546, 19.6177, 0.7118", "382.653, 304.262, 19.6767, 0.6864", "383.515, 305.009, 19.7049, 0.6864", "384.41, 305.718, 19.7428, 0.661", "385.364, 306.338, 19.8555, 0.6356", "386.296, 306.971, 20.0607, 0.5848", "387.195, 307.631, 20.3484, 0.5848", "388.066, 308.325, 20.6891, 0.5848", "388.859, 309.13, 21.0224, 0.6356", "389.572, 310.019, 21.2497, 0.661", "390.286, 310.901, 21.3505, 0.7118", "390.987, 311.802, 21.4191, 0.7626", "391.612, 312.748, 21.5134, 0.8136", "392.272, 313.677, 21.6101, 0.839", "393.025, 314.537, 21.6917, 0.8136", "393.808, 315.371, 21.7626, 0.7626", "394.53, 316.258, 21.8216, 0.7118", "395.095, 317.251, 21.8605, 0.6864", "395.52, 318.309, 21.8647, 0.7118", "395.862, 319.399, 21.8695, 0.7118", "396.353, 320.427, 21.9364, 0.7372", "397.056, 321.323, 22.0604, 0.6864", "397.809, 322.182, 22.2262, 0.661", "398.359, 323.164, 22.4757, 0.6102", "398.592, 324.269, 22.78, 0.6864", "398.813, 325.39, 23.0812, 0.7372", "398.984, 326.522, 23.3702, 0.7626", "399.08, 327.652, 23.6955, 0.7118", "399.392, 328.724, 24.0812, 0.7118", "400.176, 329.49, 24.5257, 0.7372", "401.148, 329.964, 25.0298, 0.7372", "402.085, 330.577, 25.5158, 0.7118", "402.942, 331.332, 25.9018, 0.6864", "403.774, 332.116, 26.1763, 0.661", "404.676, 332.81, 26.3907, 0.5848", "405.523, 333.568, 26.5622, 0.483", "406.041, 334.564, 26.5886, 0.4068", "406.685, 335.508, 26.5773, 0.4068", "407.435, 336.371, 26.5761, 0.4068", "407.978, 337.378, 26.5966, 0.4576", "407.819, 338.509, 26.6472, 0.483", "407.505, 339.609, 26.7432, 0.5848", "407.485, 340.753, 26.9025, 0.6102", "407.909, 341.815, 27.1275, 0.7118", "408.221, 342.889, 27.4826, 0.7372", "408.551, 343.963, 27.93, 0.7626", "409.054, 344.895, 28.5214, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "363.12, 316.606, 21.84, 1.0", "368.961, 330.422, 21.84, 1.0", "374.802, 344.238, 21.84, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "296.393, 306.188, 35.8364, 0.483", "295.512, 307.117, 36.4451, 0.3814", "294.988, 308.028, 37.7611, 0.356", "294.208, 308.85, 38.2402, 0.3304", "293.223, 308.861, 38.9116, 0.4068", "292.121, 308.731, 39.6018, 0.483", "291.086, 308.699, 40.3455, 0.5338", "290.273, 309.307, 41.099, 0.483", "289.173, 309.192, 41.657, 0.4322", "288.131, 309.172, 41.9994, 0.356", "287.019, 309.26, 42.3696, 0.3814", "286.181, 309.688, 42.8476, 0.4068", "285.518, 310.375, 43.4552, 0.4576", "284.629, 310.979, 44.0706, 0.4576", "283.749, 311.663, 44.5256, 0.483", "282.764, 312.154, 44.9414, 0.5084", "281.897, 312.684, 45.1161, 0.5592", "280.869, 313.09, 45.2525, 0.6102", "279.933, 313.62, 45.5179, 0.6356", "279.043, 314.007, 45.9934, 0.5592", "277.93, 314.056, 46.4876, 0.4322", "276.816, 314.074, 46.8331, 0.3814", "275.919, 313.529, 47.3004, 0.4322", "274.94, 313.066, 47.5989, 0.483", "273.94, 313.146, 48.0357, 0.4322", "272.908, 313.521, 48.475, 0.3814", "271.781, 313.457, 48.8222, 0.4068", "270.678, 313.224, 49.2058, 0.483", "269.584, 313.148, 49.6185, 0.483", "268.601, 313.324, 50.1396, 0.3814", "267.593, 313.445, 50.6512, 0.305", "266.478, 313.323, 50.9894, 0.3304", "265.47, 313.041, 51.0835, 0.4322", "264.51, 312.576, 51.1283, 0.483", "263.577, 312.008, 51.1336, 0.4322", "262.879, 311.166, 51.221, 0.356", "261.907, 310.661, 51.4458, 0.356", "260.944, 310.104, 51.8675, 0.4068", "260.042, 309.487, 52.4899, 0.4576", "259.043, 309.383, 53.3098, 0.483", "257.967, 309.552, 54.1873, 0.5084", "257.199, 309.6, 55.2384, 0.5084", "256.806, 309.795, 56.4281, 0.4068", "255.668, 309.794, 57.3538, 0.356", "254.535, 309.755, 57.988, 0.3304", "253.502, 309.45, 58.2884, 0.4068", "252.447, 309.124, 58.4424, 0.4322", "251.455, 309.556, 58.5782, 0.4576", "250.673, 310.209, 58.9176, 0.4576", "249.66, 310.426, 59.4051, 0.4068", "248.726, 310.536, 59.9936, 0.356", "247.93, 310.893, 60.8191, 0.2796", "246.948, 311.346, 61.5863, 0.2796", "245.988, 311.924, 62.26, 0.2796", "245.143, 312.533, 63.0053, 0.305", "244.448, 312.991, 63.9167, 0.2796", "243.346, 313.219, 64.7013, 0.2542", "242.663, 313.983, 65.5116, 0.2288", "241.816, 314.621, 66.3012, 0.2288", "240.938, 315.349, 66.9306, 0.2288", "240.1, 316.126, 67.4094, 0.2288", "239.229, 316.802, 67.8415, 0.2288", "238.344, 317.395, 68.3068, 0.2542", "237.555, 318.214, 68.6767, 0.2796", "236.703, 318.817, 69.071, 0.305", "235.666, 319.183, 69.4184, 0.2796", "234.688, 319.746, 69.6245, 0.2542", "233.731, 320.318, 69.7533, 0.2542", "232.732, 320.751, 69.8102, 0.305", "231.705, 321.149, 69.6562, 0.3814", "230.622, 321.397, 69.2712, 0.4068", "229.816, 321.819, 68.6073, 0.3814", "229.164, 322.246, 67.69, 0.3304", "228.342, 322.494, 65.24, 0.305" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "296.393, 306.188, 35.8364, 0.483", "295.547, 307.118, 36.2449, 0.4576", "295.113, 308.124, 36.7273, 0.661", "294.691, 309.159, 37.2333, 0.788", "294.363, 310.249, 37.7068, 0.8644", "294.089, 311.34, 38.19, 0.7372", "293.909, 312.417, 38.712, 0.6356", "293.974, 313.534, 39.2126, 0.5084", "293.995, 314.677, 39.6301, 0.5084", "293.75, 315.79, 39.9524, 0.5338", "293.333, 316.846, 40.2634, 0.6102", "292.633, 317.663, 40.654, 0.7372", "292.451, 318.683, 41.1631, 0.788", "292.158, 319.717, 41.7077, 0.7626", "292.043, 320.712, 42.3181, 0.5592", "291.957, 321.851, 42.7941, 0.4322", "291.862, 322.827, 43.3378, 0.3304", "291.88, 323.921, 43.7539, 0.3304", "291.906, 325.064, 44.0124, 0.305", "291.654, 326.172, 44.151, 0.356", "290.945, 326.967, 44.3444, 0.4068", "290.09, 327.702, 44.5211, 0.4322", "289.482, 328.186, 44.3307, 0.4068", "288.653, 328.956, 44.137, 0.4068", "287.881, 329.713, 44.1213, 0.4576", "287.199, 330.602, 44.1815, 0.483", "286.535, 331.53, 44.1879, 0.483", "285.838, 332.427, 44.1664, 0.4322", "285.202, 333.323, 44.07, 0.3814", "284.557, 334.247, 43.9986, 0.305", "283.817, 335.058, 44.0401, 0.2796", "282.987, 335.819, 44.091, 0.356", "281.965, 336.328, 44.1277, 0.5084", "280.937, 336.782, 44.1804, 0.6102", "279.833, 337.01, 44.2277, 0.5848", "278.752, 337.313, 44.2084, 0.5084", "277.655, 337.576, 44.2442, 0.4576", "276.545, 337.587, 44.3083, 0.4576", "275.425, 337.379, 44.3344, 0.4322", "274.297, 337.346, 44.3576, 0.4576", "273.187, 337.605, 44.3817, 0.4576", "272.106, 337.954, 44.4293, 0.5084", "270.995, 338.161, 44.5094, 0.5338", "269.87, 338.33, 44.5592, 0.6102", "268.789, 338.102, 44.6034, 0.6102", "267.68, 337.947, 44.6908, 0.5084", "266.641, 337.923, 44.6446, 0.3814", "265.541, 337.871, 44.618, 0.305", "264.544, 338.039, 44.7958, 0.305", "263.462, 338.263, 44.8941, 0.3304", "262.349, 338.443, 45.0369, 0.4322", "261.316, 338.642, 45.3004, 0.5848", "260.182, 338.745, 45.4608, 0.661", "259.111, 338.876, 45.4619, 0.5848", "258.197, 339.412, 45.4888, 0.4068", "257.296, 339.945, 45.3446, 0.305", "256.201, 340.274, 45.1993, 0.2796", "255.121, 340.631, 45.0733, 0.305", "254.074, 341.053, 44.9778, 0.2796", "252.954, 341.264, 44.8501, 0.2542", "251.862, 341.543, 44.7342, 0.2796", "250.796, 341.636, 44.6471, 0.3304", "249.84, 341.347, 44.343, 0.3814", "249.389, 342.273, 43.9496, 0.3304", "248.339, 342.104, 43.5288, 0.305", "247.265, 342.399, 43.2152, 0.2796", "246.36, 343.079, 42.9492, 0.3304", "245.645, 343.955, 42.7689, 0.3304", "244.889, 344.736, 42.6586, 0.3304", "243.955, 345.035, 42.6975, 0.2796", "243.033, 345.477, 42.8274, 0.305", "242.189, 346.012, 42.7448, 0.3304", "241.297, 346.622, 42.5816, 0.3814", "240.238, 346.85, 42.52, 0.3304", "239.121, 347.024, 42.5149, 0.305", "238.018, 347.303, 42.4746, 0.305", "236.891, 347.458, 42.4248, 0.356", "235.842, 347.877, 42.4222, 0.356", "234.924, 348.548, 42.4066, 0.305", "233.923, 349.091, 42.3822, 0.2542", "232.803, 349.301, 42.3679, 0.2288", "231.683, 349.531, 42.3704, 0.2288", "230.542, 349.604, 42.3836, 0.2288", "229.413, 349.773, 42.4206, 0.2288", "228.571, 350.522, 42.56, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "352.352, 303.138, 26.0063, 0.6356", "352.993, 303.305, 26.9223, 0.5592", "354.086, 303.46, 27.2225, 0.5338", "355.209, 303.321, 27.3319, 0.5084", "356.324, 303.112, 27.4275, 0.4068", "357.293, 303.508, 27.4909, 0.3814", "357.963, 304.41, 27.5406, 0.3814", "358.563, 305.366, 27.6714, 0.4576", "359.346, 306.144, 27.9222, 0.483", "360.274, 306.763, 28.2792, 0.483", "361.16, 307.436, 28.7109, 0.4576", "362.021, 308.148, 29.1894, 0.5592", "362.835, 308.93, 29.6528, 0.6864", "363.431, 309.891, 30.0546, 0.8136", "363.976, 310.887, 30.4301, 0.788", "364.551, 311.865, 30.8034, 0.6864", "364.962, 312.919, 31.1671, 0.5592", "365.012, 314.038, 31.5549, 0.4322", "364.842, 315.153, 31.9936, 0.3814", "365.079, 316.222, 32.473, 0.4322", "365.987, 316.78, 33.0137, 0.5848", "367.039, 316.989, 33.6484, 0.7626", "368.055, 317.315, 34.3636, 0.839", "369.006, 317.899, 35.0647, 0.8898", "369.924, 318.579, 35.7034, 0.8644", "370.806, 319.293, 36.3219, 0.8644", "371.625, 319.989, 37.0093, 0.7626", "372.411, 320.567, 37.819, 0.661", "373.181, 321.226, 38.694, 0.5592", "373.947, 322.014, 39.531, 0.5848", "374.845, 322.685, 40.2884, 0.661", "375.75, 323.373, 40.9293, 0.6864", "376.607, 324.099, 41.4994, 0.661", "377.447, 324.803, 42.0582, 0.5848", "378.233, 325.624, 42.5496, 0.6102", "378.912, 326.54, 42.9534, 0.6102", "379.508, 327.496, 43.4014, 0.6356", "379.909, 328.542, 43.9116, 0.5592", "380.168, 329.6, 44.5138, 0.483", "380.269, 330.293, 45.3751, 0.4068", "380.45, 331.37, 46.2109, 0.4576", "381.152, 332.259, 46.853, 0.5592", "382.024, 332.948, 47.4715, 0.661", "382.622, 333.811, 48.1228, 0.661", "383.108, 334.845, 48.6212, 0.6356", "383.619, 335.843, 49.0907, 0.6102", "384.231, 336.724, 49.6308, 0.6356", "384.862, 337.599, 50.2074, 0.6864", "385.712, 338.363, 50.6621, 0.7626", "386.544, 339.148, 51.0152, 0.7626", "387.368, 339.926, 51.338, 0.7372", "388.034, 340.707, 51.7096, 0.6102", "388.769, 341.495, 51.863, 0.5592", "389.455, 342.374, 52.0691, 0.4576", "390.345, 343.068, 52.3356, 0.483", "390.72, 344.15, 52.596, 0.483", "391.211, 345.178, 52.8486, 0.5848", "391.972, 346.018, 53.1555, 0.5848", "392.554, 346.886, 53.6432, 0.5338", "393.161, 347.673, 54.2668, 0.3814", "393.958, 348.238, 54.9072, 0.2796", "394.32, 349.054, 55.2395, 0.2542", "395.179, 349.626, 55.638, 0.2796", "396.174, 349.929, 56.1061, 0.305", "396.982, 350.581, 56.4785, 0.305", "397.756, 351.29, 56.688, 0.3304", "398.669, 351.869, 57.0172, 0.356", "399.566, 352.441, 57.5008, 0.356", "400.351, 353.146, 58.0647, 0.3304", "401.163, 353.87, 58.6373, 0.356", "401.945, 354.687, 59.1514, 0.4322", "402.42, 355.71, 59.584, 0.5084", "403.046, 356.471, 60.0463, 0.483", "403.943, 356.653, 60.6099, 0.4068", "404.874, 357.219, 61.0887, 0.305", "405.621, 358.053, 61.3491, 0.305", "406.606, 358.256, 61.3368, 0.3814", "407.725, 358.363, 61.2352, 0.483", "408.74, 358.796, 61.2419, 0.483", "409.693, 359.41, 61.2492, 0.3814", "410.426, 360.273, 61.2878, 0.2796", "411.164, 361.056, 61.4435, 0.2542", "412.196, 361.275, 61.7831, 0.2796", "412.919, 361.684, 62.4067, 0.305", "413.594, 362.282, 63.1025, 0.2796", "414.379, 363.029, 63.5625, 0.2542", "414.874, 364.006, 63.9187, 0.2288", "415.271, 365.034, 64.3168, 0.2288", "415.344, 365.985, 64.8469, 0.2542", "415.012, 366.969, 65.4284, 0.3304", "414.711, 368.037, 65.886, 0.4068", "414.781, 369.101, 66.383, 0.4576", "414.914, 370.21, 66.8755, 0.4068", "414.933, 371.349, 67.2496, 0.3814", "414.965, 372.466, 67.6239, 0.3304", "415.061, 373.602, 67.968, 0.3304", "415.135, 374.742, 68.2912, 0.2796", "415.185, 375.78, 68.7411, 0.2542", "415.254, 376.903, 69.1925, 0.2288", "415.271, 378.047, 69.5904, 0.2288", "415.272, 379.185, 70.0146, 0.2288", "415.267, 380.325, 70.4444, 0.2796", "415.186, 381.466, 70.8403, 0.3814", "415.203, 382.597, 71.2533, 0.483", "415.722, 383.416, 71.8385, 0.5592", "416.187, 384.155, 73.64, 0.5592" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "352.352, 303.138, 26.0063, 0.6356", "353.334, 304.004, 25.8201, 0.788", "354.341, 304.472, 25.5632, 0.8898", "355.452, 304.634, 25.2748, 0.9152", "356.462, 305.091, 24.9469, 0.9406", "357.287, 305.88, 24.6845, 0.8898", "357.957, 306.808, 24.5162, 0.8898", "358.577, 307.763, 24.4699, 0.966", "359.011, 308.797, 24.5681, 1.0424", "359.534, 309.801, 24.6304, 1.0424", "359.668, 310.856, 24.5772, 0.9406", "359.676, 312.0, 24.5977, 0.8898", "359.689, 313.01, 24.8701, 0.839", "359.765, 314.142, 25.1933, 0.7118" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "373.362, 275.763, 29.9023, 0.6102", "374.726, 275.201, 30.7149, 0.5848", "375.822, 274.987, 30.2501, 0.5592", "376.882, 275.402, 30.0516, 0.5592", "377.965, 275.751, 29.913, 0.5848", "379.053, 276.1, 29.7738, 0.6102", "380.093, 276.534, 29.5453, 0.6356", "381.024, 277.198, 29.3045, 0.661", "381.841, 277.998, 29.0461, 0.6864", "382.614, 278.803, 28.6885, 0.661", "383.261, 279.689, 28.2316, 0.6356", "383.669, 280.559, 27.6205, 0.661", "383.846, 281.681, 27.0984, 0.6864" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "373.362, 275.763, 29.9023, 0.6102", "374.233, 274.928, 29.9048, 0.5592", "374.67, 273.872, 29.8766, 0.5338", "375.104, 272.815, 29.8385, 0.5338", "375.281, 271.719, 29.8558, 0.6356", "375.578, 270.616, 29.804, 0.7118", "375.925, 269.564, 29.6178, 0.7372", "376.407, 268.529, 29.4081, 0.7118", "376.811, 267.487, 29.1021, 0.7372", "377.491, 266.584, 28.7498, 0.7626", "378.3, 265.776, 28.4222, 0.7118" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "350.168, 277.077, 22.1886, 0.9914", "349.263, 276.103, 22.3548, 0.7626", "348.77, 275.312, 22.4365, 0.661", "347.805, 274.882, 22.4228, 0.6102", "346.964, 274.5, 22.4052, 0.5592", "346.322, 273.744, 22.5201, 0.5592", "345.703, 273.105, 22.6065, 0.6102", "344.837, 272.473, 22.729, 0.6356", "344.481, 272.034, 23.1932, 0.6356", "343.973, 272.172, 23.8954, 0.6356", "343.178, 272.851, 24.4914, 0.661", "342.637, 273.626, 25.0697, 0.661", "341.968, 274.384, 25.3734, 0.6102", "341.387, 275.121, 25.44, 0.5592", "340.876, 275.704, 25.5144, 0.5592", "340.3, 276.39, 25.6556, 0.5848", "339.492, 275.797, 25.8632, 0.6356", "338.666, 275.163, 26.002, 0.661", "337.984, 274.321, 26.1313, 0.6864", "337.175, 274.724, 26.3218, 0.661", "336.582, 275.437, 26.6271, 0.5848", "335.953, 276.156, 26.8472, 0.4576", "335.322, 276.18, 27.1758, 0.356", "334.618, 276.734, 27.3187, 0.4576" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "350.168, 277.077, 22.1886, 0.9914", "350.259, 275.259, 21.7588, 1.1186", "350.588, 274.171, 21.0813, 0.966", "350.991, 273.14, 20.7762, 0.788", "351.418, 272.163, 20.3573, 0.7372", "352.114, 271.324, 19.9035, 0.7372", "353.057, 270.714, 19.489, 0.7626", "354.1, 270.255, 19.188, 0.7626", "355.114, 269.778, 19.0614, 0.7372", "355.988, 269.096, 19.0634, 0.7118", "356.776, 268.294, 19.0198, 0.661", "357.529, 267.46, 18.9287, 0.661", "358.272, 266.593, 18.8485, 0.6864", "359.022, 265.729, 18.7926, 0.7118", "359.645, 264.789, 18.7845, 0.6864", "360.043, 263.732, 18.8382, 0.6102", "360.591, 262.775, 18.8868, 0.5592", "361.414, 261.991, 18.9958, 0.5592", "362.317, 261.381, 19.2089, 0.5592", "363.435, 261.342, 19.4754, 0.5592", "364.491, 261.322, 19.8576, 0.5338", "365.319, 260.808, 20.4216, 0.5084", "366.165, 260.133, 21.0339, 0.5084", "367.198, 259.834, 21.6473, 0.5338", "368.26, 259.761, 22.0806, 0.661", "369.352, 259.573, 22.4321, 0.7118", "370.461, 259.409, 22.8183, 0.7118", "370.953, 258.773, 23.3923, 0.6102", "371.926, 258.758, 24.0705, 0.5848", "373.012, 258.775, 24.6073, 0.5848", "374.03, 258.749, 25.0988, 0.5848", "375.068, 258.989, 25.642, 0.5848", "375.819, 259.72, 26.1032, 0.5338", "376.651, 260.426, 26.4851, 0.5084", "377.711, 260.445, 26.9142, 0.4322", "378.725, 260.175, 27.4206, 0.4322", "379.464, 260.952, 28.0389, 0.4068", "380.092, 261.84, 28.7101, 0.4322", "381.061, 262.251, 29.4025, 0.4068", "382.153, 262.039, 30.1501, 0.4322", "383.209, 261.744, 30.9422, 0.3814", "384.045, 261.101, 31.7999, 0.4068", "384.441, 260.194, 32.7494, 0.3814", "384.314, 259.593, 33.8615, 0.4068", "383.82, 259.967, 35.1058, 0.3304", "382.947, 259.672, 36.1847, 0.2796", "382.6, 258.659, 37.0656, 0.2288", "383.326, 257.821, 37.7695, 0.2542", "384.112, 257.005, 38.2354, 0.3304", "384.576, 256.024, 38.5913, 0.4322", "384.774, 254.919, 38.7061, 0.5084", "385.121, 253.912, 38.617, 0.5338", "385.509, 252.876, 38.5927, 0.5084", "385.912, 251.834, 38.5218, 0.4576", "386.631, 251.028, 38.3155, 0.356", "387.531, 250.364, 38.0769, 0.305", "388.485, 249.85, 37.826, 0.2796", "389.563, 249.488, 37.7012, 0.305", "390.597, 249.067, 37.7502, 0.2796", "391.507, 248.513, 37.9142, 0.2542", "392.268, 247.865, 38.2581, 0.2288", "393.228, 247.434, 38.7248, 0.2542", "394.34, 247.219, 39.1815, 0.2796", "395.405, 247.104, 39.7208, 0.305", "396.189, 247.512, 40.4082, 0.2796", "397.083, 247.439, 41.1788, 0.2542", "397.678, 246.715, 41.9667, 0.2288", "398.666, 246.244, 42.597, 0.2288", "399.485, 246.189, 42.56, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "409.054, 344.895, 28.5214, 0.4576", "409.603, 344.843, 29.5002, 0.7118", "410.574, 344.773, 31.061, 0.5084", "411.643, 344.85, 31.6778, 0.4068", "412.571, 344.86, 32.4643, 0.4576", "413.418, 344.422, 33.3578, 0.483", "414.494, 344.413, 34.1793, 0.483", "415.502, 344.87, 34.9546, 0.4322", "416.548, 345.204, 35.7042, 0.4576", "417.518, 344.938, 36.2141, 0.483", "418.418, 344.629, 36.8878, 0.5338", "419.298, 344.284, 37.6869, 0.483", "419.88, 343.583, 38.5916, 0.3814", "420.512, 342.81, 39.45, 0.356", "421.557, 342.682, 40.1047, 0.3814", "422.54, 343.178, 40.4998, 0.483", "423.513, 343.743, 40.7893, 0.4322", "424.506, 344.245, 41.0712, 0.4068", "425.465, 344.823, 41.2594, 0.3304", "426.32, 345.306, 41.5391, 0.356", "427.164, 345.707, 42.0638, 0.3304", "427.801, 346.603, 42.5631, 0.3814", "428.72, 346.823, 43.1785, 0.4068", "429.798, 347.126, 43.7133, 0.5084", "430.716, 347.776, 44.24, 0.5848" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "409.054, 344.895, 28.5214, 0.4576", "409.833, 344.935, 29.2354, 0.4576", "410.912, 344.742, 29.9429, 0.5338", "411.965, 344.305, 30.5323, 0.6356", "412.856, 343.612, 31.0335, 0.6102", "413.79, 343.105, 31.535, 0.5338", "414.93, 343.018, 31.8668, 0.483", "416.043, 343.266, 32.1006, 0.5338", "417.153, 343.42, 32.1625, 0.7118", "418.297, 343.439, 32.1854, 0.8136", "419.44, 343.496, 32.1947, 0.839", "420.548, 343.772, 32.2227, 0.788", "421.672, 343.823, 32.3431, 0.7372", "422.762, 343.558, 32.3792, 0.661", "423.901, 343.467, 32.4587, 0.5848", "424.985, 343.661, 32.65, 0.5592", "425.972, 344.237, 32.8205, 0.5848", "427.044, 344.637, 32.9571, 0.5338" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "359.765, 314.142, 25.1933, 0.7118", "359.389, 315.135, 23.7034, 0.6864", "358.872, 316.109, 23.4755, 0.7626", "358.361, 317.129, 23.3877, 0.7372", "357.976, 318.205, 23.3478, 0.6356", "357.834, 319.326, 23.3805, 0.5848", "357.717, 320.442, 23.492, 0.5338", "357.399, 321.533, 23.5925, 0.5592", "356.938, 322.579, 23.6518, 0.5084", "356.697, 323.691, 23.6477, 0.5084", "356.997, 324.774, 23.5611, 0.5338", "357.476, 325.787, 23.371, 0.5592", "357.742, 326.867, 23.1043, 0.5084", "357.711, 327.993, 22.8323, 0.4576", "357.744, 329.13, 22.6589, 0.483", "358.241, 330.133, 22.6025, 0.6102", "358.925, 331.047, 22.5776, 0.7118", "359.592, 331.976, 22.551, 0.7626", "360.243, 332.914, 22.4895, 0.7626", "360.798, 333.899, 22.353, 0.7626", "361.31, 334.905, 22.1487, 0.7118", "361.727, 335.963, 21.9352, 0.6864", "362.03, 337.065, 21.7528, 0.6864", "362.307, 338.171, 21.6495, 0.788", "362.657, 339.258, 21.6018, 0.788", "363.087, 340.318, 21.5677, 0.7626", "363.535, 341.371, 21.5216, 0.6356", "363.741, 342.486, 21.4238, 0.6356", "363.66, 343.611, 21.2692, 0.6356", "363.457, 344.733, 21.1149, 0.6864", "363.308, 345.867, 21.0081, 0.6864", "363.348, 347.009, 20.948, 0.661", "363.538, 348.138, 20.9355, 0.661", "363.906, 349.22, 20.9715, 0.6356", "364.312, 350.289, 21.0493, 0.5848", "364.617, 351.389, 21.1816, 0.483", "364.87, 352.487, 21.3915, 0.4322", "365.295, 353.538, 21.6387, 0.483", "365.94, 354.483, 21.8676, 0.5848", "366.646, 355.384, 22.08, 0.661", "367.241, 356.353, 22.3116, 0.6356", "367.712, 357.374, 22.5794, 0.5848", "368.129, 358.434, 22.8335, 0.5084", "368.558, 359.486, 23.0775, 0.5338", "368.974, 360.532, 23.3313, 0.5338", "369.38, 361.597, 23.5342, 0.5848", "369.895, 362.618, 23.6449, 0.5592", "370.555, 363.552, 23.6697, 0.5592", "371.299, 364.42, 23.6153, 0.5338", "372.096, 365.223, 23.4542, 0.5592", "372.907, 366.002, 23.2043, 0.5848", "373.786, 366.732, 22.9555, 0.6102", "374.731, 367.362, 22.6976, 0.6102", "375.613, 368.059, 22.422, 0.5848", "376.267, 368.99, 22.1916, 0.5592", "376.665, 370.062, 22.0355, 0.5084", "377.088, 371.125, 21.9387, 0.5084", "377.662, 372.115, 21.8831, 0.483", "378.185, 373.132, 21.8611, 0.4576", "378.687, 374.16, 21.8611, 0.4322", "379.182, 375.191, 21.8693, 0.4576", "379.641, 376.239, 21.8806, 0.5338", "380.024, 377.316, 21.8967, 0.5338", "380.315, 378.423, 21.9204, 0.4576", "380.552, 379.541, 21.9535, 0.3304", "380.714, 380.673, 21.9971, 0.305", "380.712, 381.815, 22.0416, 0.3304", "380.641, 382.943, 22.1494, 0.3814", "380.907, 384.042, 22.3103, 0.3304", "380.945, 385.172, 22.4419, 0.2796", "380.581, 386.244, 22.5571, 0.2542", "380.753, 387.333, 22.6529, 0.2796", "381.583, 388.063, 22.8535, 0.3304", "382.574, 388.484, 23.1532, 0.3814", "383.126, 389.323, 23.568, 0.483", "383.42, 390.407, 23.9747, 0.5592", "383.881, 391.414, 24.3189, 0.5592", "384.519, 392.331, 24.4698, 0.483", "385.231, 393.205, 24.485, 0.4068", "385.797, 394.156, 24.5256, 0.4068", "386.099, 395.234, 24.61, 0.4322", "386.959, 395.848, 24.5645, 0.4576", "387.885, 396.485, 24.5914, 0.4576", "388.693, 397.276, 24.5917, 0.483", "389.478, 398.104, 24.6325, 0.5338", "390.069, 399.079, 24.7064, 0.6102", "390.625, 400.078, 24.7897, 0.6356", "390.994, 401.159, 24.9181, 0.6356", "391.548, 402.158, 25.0438, 0.5592", "392.184, 403.107, 25.1831, 0.483", "392.724, 404.061, 25.4203, 0.356", "393.211, 405.096, 25.611, 0.2796", "393.677, 406.139, 25.7764, 0.2796", "394.345, 407.064, 25.9454, 0.356", "395.11, 407.911, 26.087, 0.4576", "395.763, 408.848, 26.2372, 0.5084", "396.401, 409.786, 26.4384, 0.5084", "397.072, 410.687, 26.701, 0.483", "397.988, 411.345, 26.9884, 0.4068", "398.75, 412.112, 27.2027, 0.4068", "399.027, 413.165, 27.5419, 0.4322", "399.485, 414.193, 27.9149, 0.5592", "399.956, 415.209, 28.2892, 0.5848", "400.105, 416.303, 28.7123, 0.5338", "400.392, 417.395, 29.0948, 0.3814", "400.924, 418.397, 29.4739, 0.3304", "401.466, 419.372, 29.8236, 0.3304", "402.342, 420.072, 30.2022, 0.3814", "403.148, 420.755, 30.6578, 0.3304", "403.845, 421.531, 31.1646, 0.2796", "404.722, 422.233, 31.6075, 0.2288", "405.276, 423.183, 31.9822, 0.2288", "405.532, 424.275, 32.2742, 0.2288", "405.66, 425.392, 32.4204, 0.2288", "405.641, 426.527, 32.5119, 0.2542", "405.494, 427.636, 32.6634, 0.2796", "405.474, 428.743, 32.8602, 0.305", "405.979, 429.578, 33.173, 0.2796", "406.464, 430.505, 33.5328, 0.2796", "406.904, 431.548, 33.7786, 0.2796", "407.428, 432.557, 33.9478, 0.305", "407.725, 433.639, 34.0138, 0.305", "407.629, 434.761, 34.0844, 0.305", "408.077, 435.77, 34.1916, 0.3304", "408.267, 436.86, 34.1813, 0.3304", "408.633, 437.939, 34.1695, 0.3304", "409.102, 438.878, 34.2625, 0.2796", "408.683, 439.925, 34.3092, 0.2542", "408.275, 440.971, 34.3521, 0.2288", "407.882, 442.03, 34.3249, 0.2288", "407.43, 443.014, 34.2353, 0.2288", "406.945, 443.929, 34.1225, 0.2542", "406.801, 445.021, 34.0939, 0.2796", "406.58, 446.12, 34.0544, 0.305", "406.199, 447.159, 33.927, 0.305", "406.003, 448.228, 33.8086, 0.3304", "406.007, 449.349, 33.775, 0.356", "405.582, 450.32, 33.5846, 0.356", "405.255, 451.401, 33.3875, 0.305", "404.763, 452.391, 33.2864, 0.2542", "404.438, 453.458, 33.0974, 0.2288", "404.014, 454.446, 32.7911, 0.2542", "403.466, 455.371, 32.4411, 0.2796", "402.912, 456.351, 32.2526, 0.305", "402.141, 457.193, 32.1272, 0.3304", "401.268, 457.926, 32.0715, 0.356", "400.351, 458.601, 32.0522, 0.4068", "399.407, 459.223, 32.1157, 0.3814", "398.415, 459.731, 32.2311, 0.3814", "397.452, 460.264, 32.3042, 0.3304", "396.393, 460.622, 32.4643, 0.3304", "395.41, 461.175, 32.655, 0.305", "394.492, 461.819, 32.8381, 0.305", "393.494, 462.234, 33.031, 0.305", "392.392, 462.405, 33.6, 0.305" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "359.765, 314.142, 25.1933, 0.7118", "360.417, 315.417, 25.543, 0.8644", "361.009, 316.353, 25.9927, 0.9406", "361.707, 317.253, 26.4388, 0.9406", "362.124, 318.287, 26.8967, 0.9406", "362.601, 319.313, 27.3148, 1.0168", "363.118, 320.331, 27.6903, 1.0678", "363.621, 321.319, 28.103, 1.0678", "364.144, 322.333, 28.467, 1.0168", "364.695, 323.336, 28.7773, 0.9914", "365.176, 324.371, 29.0671, 0.9914", "365.493, 325.43, 29.4356, 0.9406", "366.102, 326.395, 29.797, 0.8644", "366.993, 327.11, 30.1378, 0.7626" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "383.846, 281.681, 27.0984, 0.6864", "383.462, 282.33, 26.5132, 0.5592", "383.27, 283.373, 26.7523, 0.6102", "383.407, 284.398, 26.9555, 0.661", "383.804, 285.307, 27.3368, 0.6356", "384.034, 286.422, 27.6805, 0.6102", "384.247, 287.542, 27.9536, 0.5338", "384.293, 288.681, 28.1403, 0.5338", "384.274, 289.806, 28.2601, 0.5084", "384.43, 290.903, 28.1781, 0.5338", "384.728, 291.989, 27.9996, 0.483", "384.866, 293.029, 27.7145, 0.4068", "384.901, 294.076, 27.419, 0.4068", "385.041, 294.991, 27.4186, 0.5592", "385.281, 295.904, 27.5957, 0.7626", "385.368, 297.032, 27.7932, 0.8644", "385.33, 298.103, 28.1313, 0.7626", "385.326, 299.221, 28.4452, 0.6356", "385.388, 300.349, 28.7524, 0.5084", "385.213, 301.468, 29.0237, 0.5084", "385.085, 302.591, 29.2886, 0.4576", "385.678, 303.52, 29.4347, 0.4068", "386.424, 304.384, 29.542, 0.305", "387.242, 305.081, 29.7643, 0.305", "388.056, 305.718, 29.9734, 0.3304", "388.736, 306.533, 30.0261, 0.3814", "389.395, 307.453, 30.0684, 0.3304", "390.08, 308.345, 30.0698, 0.3304", "390.845, 308.951, 30.2184, 0.3304", "391.837, 309.222, 30.3635, 0.3814", "392.706, 309.879, 30.5035, 0.3814", "393.721, 310.349, 30.6594, 0.4322", "394.575, 311.028, 30.8694, 0.5592", "395.319, 311.878, 30.9761, 0.6356", "396.121, 312.647, 30.914, 0.6102", "396.841, 313.525, 30.8616, 0.483", "397.479, 314.46, 30.7482, 0.4322", "398.17, 315.371, 30.6334, 0.483", "398.835, 316.257, 30.4419, 0.5338", "399.187, 317.336, 30.3582, 0.5338", "399.6, 318.399, 30.3573, 0.4322", "400.208, 319.368, 30.3814, 0.3304", "400.844, 320.319, 30.429, 0.2542", "401.481, 321.268, 30.4945, 0.305", "402.117, 322.219, 30.5799, 0.4322", "402.754, 323.17, 30.6729, 0.5848", "403.609, 323.929, 30.7832, 0.6356", "404.501, 324.643, 30.9341, 0.5848", "405.378, 325.3, 31.2164, 0.483", "406.225, 326.01, 31.5731, 0.356", "407.015, 326.831, 31.9127, 0.2796", "407.799, 327.658, 32.216, 0.2288", "408.657, 328.414, 32.4512, 0.2542", "409.523, 329.162, 32.6228, 0.2796", "410.362, 329.939, 32.7583, 0.305", "411.196, 330.72, 32.8846, 0.2796", "412.031, 331.5, 33.0212, 0.2542", "412.865, 332.282, 33.1775, 0.2796", "413.516, 333.222, 33.3547, 0.356", "413.94, 334.284, 33.5507, 0.483", "414.381, 335.338, 33.7935, 0.5338", "414.858, 336.37, 34.1093, 0.5592", "415.433, 337.323, 34.5422, 0.483", "416.048, 338.232, 35.089, 0.4322", "416.999, 338.777, 35.7165, 0.3814", "418.054, 339.109, 36.3994, 0.3814", "419.024, 339.634, 37.0992, 0.356", "419.843, 340.374, 37.7801, 0.305", "420.664, 341.115, 38.4188, 0.305", "421.483, 341.855, 39.0046, 0.3814", "422.303, 342.595, 40.14, 0.5084" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "383.846, 281.681, 27.0984, 0.6864", "383.486, 282.88, 26.703, 0.5848", "383.472, 283.999, 26.4224, 0.5848", "383.894, 285.044, 26.2408, 0.5848", "384.583, 285.95, 26.1198, 0.6356", "385.313, 286.813, 25.9967, 0.6356", "386.005, 287.703, 25.8822, 0.6102", "386.742, 288.564, 25.8335, 0.5084", "387.537, 289.38, 25.8024, 0.4576", "388.346, 290.186, 25.733, 0.4322", "389.155, 290.971, 25.5835, 0.4576", "390.011, 291.702, 25.3778, 0.4068", "390.976, 292.303, 25.1586, 0.3814", "392.005, 292.767, 24.9043, 0.3814", "393.027, 293.244, 24.6359, 0.4322", "393.933, 293.924, 24.4331, 0.4322", "394.903, 294.511, 24.297, 0.4068", "395.912, 295.044, 24.2285, 0.3814", "396.808, 295.658, 24.0962, 0.356", "397.686, 296.344, 23.9989, 0.305", "398.694, 296.86, 23.9547, 0.2542", "399.803, 297.122, 23.9351, 0.2796", "400.671, 297.793, 23.9756, 0.3304", "401.559, 298.51, 24.0281, 0.3814", "402.609, 298.922, 24.0464, 0.3814", "403.734, 299.095, 24.0785, 0.3814", "404.833, 299.357, 24.1595, 0.3814", "405.968, 299.368, 24.2396, 0.3304", "407.108, 299.291, 24.2899, 0.2796", "408.252, 299.272, 24.3158, 0.2542", "409.354, 299.301, 24.2245, 0.2796", "410.486, 299.365, 24.0961, 0.3304", "411.628, 299.384, 23.9901, 0.356", "412.77, 299.385, 23.8978, 0.3814", "413.715, 299.831, 23.99, 0.4068", "414.684, 299.796, 24.274, 0.4576", "415.565, 299.148, 24.3526, 0.5338", "416.566, 298.881, 24.1973, 0.5338", "417.618, 298.435, 24.0137, 0.4576", "418.652, 297.951, 23.823, 0.3814", "419.577, 297.303, 23.5683, 0.3814", "420.647, 296.929, 23.3685, 0.483", "421.585, 296.329, 23.1394, 0.5084", "422.467, 295.615, 22.9243, 0.5084", "423.448, 295.05, 22.6891, 0.4576", "424.442, 294.59, 22.5235, 0.483", "425.496, 294.324, 22.4784, 0.5084", "426.554, 294.134, 22.3302, 0.5084", "427.601, 293.943, 22.0971, 0.5084", "428.732, 293.892, 21.9324, 0.5084", "429.865, 294.009, 21.8215, 0.5084", "430.94, 294.216, 21.8337, 0.4576", "431.884, 294.419, 21.6901, 0.4068", "432.91, 294.339, 21.6942, 0.4322", "433.988, 294.005, 21.7332, 0.483", "434.863, 293.301, 21.6985, 0.5338", "435.873, 292.806, 21.6061, 0.483", "436.932, 292.467, 21.641, 0.483", "438.046, 292.631, 21.622, 0.4576", "439.14, 292.771, 21.6288, 0.5084", "440.068, 292.65, 21.8233, 0.4322", "441.169, 292.867, 21.9386, 0.4322", "442.283, 292.926, 22.0365, 0.4322", "443.298, 293.241, 21.97, 0.5338", "444.267, 293.554, 21.7689, 0.5338", "445.35, 293.605, 21.4573, 0.4576", "446.445, 293.617, 21.1003, 0.356", "447.502, 293.278, 20.9028, 0.3304", "448.592, 293.041, 20.8962, 0.356", "449.651, 293.126, 21.1091, 0.4068", "450.554, 292.766, 21.2169, 0.4068", "451.483, 292.196, 21.4248, 0.4322", "452.482, 291.652, 21.6655, 0.4068", "453.594, 291.725, 21.9512, 0.4068", "454.616, 292.205, 22.2321, 0.356", "455.64, 292.704, 22.4816, 0.305", "456.633, 293.26, 22.7162, 0.2542", "457.632, 293.791, 22.914, 0.2796", "458.694, 294.15, 22.9905, 0.4068", "459.454, 294.884, 22.883, 0.5848", "460.263, 295.642, 22.8197, 0.661", "461.344, 295.92, 22.816, 0.6102", "462.461, 295.976, 22.8087, 0.4576", "463.561, 296.043, 22.9081, 0.3814", "464.66, 296.321, 23.0181, 0.3304", "465.717, 296.755, 23.1071, 0.3304", "466.786, 297.159, 23.1294, 0.2796", "467.774, 297.696, 23.0567, 0.305", "468.738, 298.246, 22.9014, 0.3304", "469.672, 298.833, 22.7548, 0.4322", "470.47, 299.596, 22.5798, 0.4322", "471.302, 300.331, 22.3664, 0.4322", "472.163, 301.078, 22.2053, 0.3304", "473.187, 301.509, 22.1012, 0.305", "474.251, 301.884, 22.0403, 0.2796", "475.048, 302.636, 21.9595, 0.305", "475.278, 303.594, 22.009, 0.356", "476.247, 303.961, 22.4, 0.4576" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "378.3, 265.776, 28.4222, 0.7118", "378.285, 264.763, 29.2594, 0.661", "377.724, 264.005, 30.3187, 0.661", "377.729, 263.071, 30.788, 0.6102", "378.038, 261.99, 31.1242, 0.6102", "378.171, 260.865, 31.3832, 0.5592", "378.296, 259.73, 31.6352, 0.483", "378.478, 258.65, 31.9586, 0.4322", "378.653, 257.553, 32.3036, 0.3304", "378.752, 256.458, 32.5447, 0.3814", "379.59, 256.367, 32.9756, 0.4576", "380.585, 256.031, 33.5087, 0.6356", "381.499, 255.364, 33.9007, 0.6356", "382.389, 254.66, 34.1729, 0.6102", "383.066, 254.146, 34.6844, 0.5592", "383.934, 253.427, 35.1442, 0.5592", "384.629, 252.571, 35.4217, 0.5592", "385.251, 251.616, 35.6804, 0.4576", "385.791, 250.677, 36.029, 0.4322", "386.568, 250.229, 36.631, 0.3814", "387.165, 249.683, 37.3822, 0.4068", "387.759, 248.734, 38.0848, 0.3814", "388.517, 247.883, 38.6952, 0.4068", "389.337, 247.123, 39.2344, 0.4322", "390.26, 246.514, 39.7281, 0.4068", "391.218, 245.912, 40.1206, 0.3304", "392.068, 245.167, 40.4544, 0.2796", "392.876, 244.592, 40.6129, 0.2796", "393.585, 244.236, 40.9212, 0.356", "394.277, 243.424, 41.2476, 0.3814", "395.054, 242.598, 41.5372, 0.4322", "395.862, 241.909, 41.8874, 0.4068", "396.729, 241.177, 42.1008, 0.4068", "397.808, 240.887, 42.1392, 0.4068", "398.913, 241.041, 41.72, 0.4322" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "378.3, 265.776, 28.4222, 0.7118", "378.725, 265.363, 28.1056, 0.5592", "379.576, 264.628, 27.7874, 0.5084", "380.549, 264.056, 27.4789, 0.5592", "381.658, 263.912, 27.1748, 0.5848", "382.774, 264.152, 26.9594, 0.7118", "383.869, 264.41, 26.8783, 0.7626", "384.988, 264.635, 26.7988, 0.7626", "386.13, 264.573, 26.7496, 0.6864", "387.247, 264.342, 26.7219, 0.661", "388.372, 264.322, 26.5934, 0.6102", "389.469, 264.557, 26.3706, 0.5592", "390.573, 264.632, 26.0604, 0.4576", "391.634, 264.208, 25.8283, 0.4576", "392.701, 263.811, 25.6794, 0.483", "393.809, 263.715, 25.4693, 0.5592", "394.911, 263.406, 25.3099, 0.5848", "396.054, 263.353, 25.1922, 0.6356", "397.198, 263.369, 25.0973, 0.661", "398.335, 263.492, 25.0018, 0.6864", "399.335, 264.042, 24.892, 0.6864", "400.252, 264.667, 24.7152, 0.6864", "401.092, 265.439, 24.5579, 0.661", "401.862, 266.285, 24.4602, 0.661", "402.466, 267.257, 24.423, 0.6356" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "334.618, 276.734, 27.3187, 0.4576", "335.278, 276.365, 27.4861, 0.5848", "336.207, 276.263, 27.4869, 0.5592", "336.891, 276.347, 27.5699, 0.661", "337.442, 277.199, 27.8153, 0.788", "337.987, 278.2, 28.1319, 0.788", "338.449, 279.229, 28.5544, 0.661", "338.789, 280.239, 29.1119, 0.5084", "338.813, 281.21, 29.8245, 0.4322", "338.272, 282.1, 30.5376, 0.5084", "337.446, 282.876, 31.11, 0.6102", "336.612, 283.658, 31.526, 0.6356", "335.777, 284.441, 31.806, 0.5848", "334.867, 285.133, 31.9707, 0.5338", "333.864, 285.655, 32.0211, 0.6102", "332.878, 286.23, 32.0908, 0.6102", "332.119, 287.029, 32.293, 0.661", "331.585, 287.992, 32.6018, 0.5592", "330.54, 288.412, 32.8933, 0.5848", "329.431, 288.143, 33.1542, 0.5338", "328.338, 288.477, 33.4085, 0.5848", "327.262, 288.789, 33.7243, 0.5338" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "334.618, 276.734, 27.3187, 0.4576", "334.018, 276.885, 26.6087, 0.4576", "332.922, 277.116, 26.6025, 0.3814", "331.817, 277.063, 26.6595, 0.4068", "330.737, 276.831, 26.7655, 0.483", "329.646, 276.744, 26.7558, 0.483", "328.599, 276.564, 26.641, 0.3814", "327.496, 276.31, 26.6041, 0.305", "326.382, 276.164, 26.7076, 0.3304", "325.266, 276.107, 26.9245, 0.4322", "324.174, 276.065, 27.2738, 0.483", "323.077, 275.976, 27.7104, 0.4576", "321.951, 275.949, 28.128, 0.4576", "320.868, 276.165, 28.4004, 0.5338", "319.852, 276.541, 28.5555, 0.7118", "318.785, 276.706, 28.7605, 0.788", "317.669, 276.621, 28.9965, 0.839", "316.544, 276.521, 29.2023, 0.7626", "315.414, 276.359, 29.3625, 0.788", "314.305, 276.094, 29.5075, 0.7372", "313.298, 275.582, 29.6285, 0.7372", "312.323, 274.999, 29.7618, 0.6102", "311.421, 274.555, 30.0504, 0.5848", "310.455, 274.163, 30.4279, 0.5848", "309.429, 274.037, 30.6051, 0.6864", "308.349, 273.803, 30.6726, 0.7372", "307.255, 273.477, 30.7392, 0.6864", "306.212, 273.206, 30.9126, 0.5848", "305.134, 272.893, 31.1063, 0.4576", "304.052, 272.615, 31.341, 0.483", "302.978, 272.727, 31.4003, 0.6102", "301.892, 272.852, 31.3765, 0.7626", "301.086, 272.383, 31.5081, 0.788", "300.044, 272.158, 31.4591, 0.7372", "298.941, 271.938, 31.4448, 0.6864", "297.831, 271.947, 31.4605, 0.7118", "296.754, 271.873, 31.5302, 0.7118", "295.714, 271.599, 31.6694, 0.661", "294.725, 271.05, 31.7699, 0.6102", "293.761, 270.45, 31.9446, 0.5592", "292.754, 270.0, 32.2258, 0.5592", "291.831, 269.784, 32.695, 0.483", "290.753, 269.754, 33.1755, 0.4068", "289.704, 269.506, 33.4208, 0.3814", "288.673, 269.029, 33.6146, 0.4322", "287.54, 269.066, 33.7604, 0.5338", "286.536, 268.689, 33.9685, 0.5338", "285.859, 267.78, 34.0752, 0.483", "285.256, 266.835, 34.137, 0.4068", "284.754, 265.948, 34.2202, 0.4068", "283.699, 265.815, 34.468, 0.4322", "282.685, 266.084, 34.8678, 0.483", "281.736, 266.424, 35.3811, 0.5338", "280.859, 266.883, 35.9554, 0.6356", "279.867, 267.316, 36.3182, 0.661", "278.879, 267.624, 36.5884, 0.6356", "277.872, 268.092, 36.7892, 0.483", "276.809, 268.483, 36.9522, 0.3814", "276.007, 269.232, 37.1437, 0.305", "275.222, 269.539, 37.0437, 0.356", "274.123, 269.659, 37.0812, 0.4322", "273.16, 270.137, 37.242, 0.483", "272.179, 270.664, 37.3344, 0.4322", "271.424, 271.495, 37.4875, 0.3814", "270.875, 272.494, 37.6664, 0.4068", "270.307, 273.472, 37.8736, 0.483", "269.741, 274.418, 38.1461, 0.483", "268.874, 275.117, 38.5036, 0.4068", "268.055, 275.683, 39.0477, 0.3304", "267.244, 276.35, 39.6379, 0.3304", "266.639, 277.301, 40.1752, 0.3304", "266.027, 278.24, 40.6851, 0.356", "265.432, 279.207, 41.1048, 0.356", "265.058, 280.274, 41.4019, 0.4068", "264.508, 281.09, 41.8074, 0.4322", "263.79, 281.934, 42.1786, 0.4322", "262.825, 282.474, 42.5754, 0.3814", "261.764, 282.527, 43.0461, 0.305", "260.636, 282.592, 43.4798, 0.2542", "259.61, 283.019, 43.8852, 0.2542", "258.903, 283.643, 44.0642, 0.2796", "258.068, 283.959, 44.3626, 0.305", "256.971, 284.178, 44.5575, 0.2796", "255.852, 284.079, 44.7622, 0.2542", "254.737, 283.888, 44.977, 0.2542", "253.598, 283.855, 45.1716, 0.2796", "252.462, 283.841, 45.379, 0.305", "251.324, 283.778, 45.5588, 0.2796", "250.196, 283.844, 45.7458, 0.2542", "249.068, 283.932, 45.9281, 0.2288", "247.938, 283.816, 46.0673, 0.2288", "246.832, 283.53, 46.1751, 0.2542", "245.713, 283.353, 46.2605, 0.2796", "244.578, 283.236, 46.3156, 0.305", "243.458, 283.059, 46.3686, 0.305", "242.343, 282.894, 46.3848, 0.305", "241.222, 282.805, 46.2952, 0.305", "240.097, 282.859, 46.1252, 0.2796", "238.963, 282.911, 45.9561, 0.2542", "237.82, 282.911, 45.8186, 0.2288", "236.678, 282.932, 45.68, 0.2288", "235.538, 282.926, 45.5291, 0.2288", "234.411, 282.765, 45.3788, 0.2796", "233.299, 282.828, 45.2231, 0.3814", "232.229, 283.178, 45.0892, 0.483", "231.252, 283.624, 44.8535, 0.483", "230.254, 284.111, 44.5354, 0.4068", "229.24, 284.585, 44.1678, 0.3304", "228.246, 285.133, 43.8819, 0.4322", "227.656, 285.886, 42.84, 0.5848" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "427.044, 344.637, 32.9571, 0.5338", "427.854, 344.949, 32.6054, 0.661", "428.979, 345.115, 32.3319, 0.6864", "430.104, 345.058, 32.212, 0.6102", "431.168, 344.907, 31.9841, 0.5592", "432.231, 344.633, 31.7254, 0.5084", "433.314, 344.309, 31.5689, 0.5338", "434.241, 343.811, 31.6092, 0.483", "435.025, 343.385, 31.9119, 0.4322", "435.78, 342.74, 32.2358, 0.4068", "436.522, 342.145, 32.2498, 0.4322", "437.364, 341.712, 32.023, 0.483", "438.264, 341.222, 31.8164, 0.5084", "438.985, 340.499, 31.4104, 0.5592", "439.82, 339.871, 31.0078, 0.5084", "440.807, 339.548, 30.5169, 0.483", "441.804, 339.11, 30.0446, 0.4322", "442.752, 338.61, 29.5893, 0.4576", "443.823, 338.256, 29.2572, 0.4322", "444.945, 338.242, 28.9848, 0.4068", "446.02, 338.542, 28.7078, 0.3814", "447.092, 338.85, 28.5121, 0.356", "447.978, 339.406, 28.4883, 0.305", "448.86, 340.104, 28.3884, 0.2542", "449.769, 340.651, 28.093, 0.2288", "450.537, 341.392, 27.6714, 0.2796", "451.022, 342.006, 27.0291, 0.3304", "451.779, 342.721, 26.6357, 0.4068", "452.31, 343.352, 26.4255, 0.3814", "453.022, 343.879, 26.0574, 0.4068", "453.922, 344.425, 25.7655, 0.3814", "454.849, 344.966, 25.7422, 0.4576", "455.802, 345.436, 25.9151, 0.5084", "456.717, 346.031, 26.0282, 0.6102", "457.695, 346.591, 26.0949, 0.661", "458.618, 347.242, 26.1251, 0.661", "459.485, 347.975, 26.0565, 0.661", "460.258, 348.744, 25.8359, 0.6356", "461.221, 349.225, 25.6673, 0.6102", "462.143, 349.87, 25.5844, 0.5084", "463.131, 350.404, 25.4731, 0.4322", "463.891, 351.221, 25.415, 0.356", "464.415, 352.227, 25.3491, 0.3304", "465.12, 353.066, 25.3854, 0.2796", "466.159, 353.479, 25.3408, 0.2542", "467.082, 354.129, 25.2152, 0.2796", "467.782, 354.983, 24.64, 0.4068" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "427.044, 344.637, 32.9571, 0.5338", "427.454, 344.815, 33.0702, 0.5848", "428.529, 345.188, 33.178, 0.7118", "429.645, 345.435, 33.2632, 0.7372", "430.695, 345.866, 33.3273, 0.6864", "431.651, 346.397, 33.4916, 0.6356", "432.634, 346.883, 33.6658, 0.6102", "433.635, 347.416, 33.7851, 0.6356", "434.522, 347.973, 34.039, 0.6356", "435.493, 348.507, 34.3101, 0.6356", "436.475, 348.979, 34.4294, 0.5848", "437.305, 349.522, 34.6926, 0.5848", "438.175, 350.264, 34.9042, 0.6102", "439.123, 350.896, 35.0969, 0.6864", "440.064, 351.493, 35.3175, 0.6864", "441.027, 352.096, 35.506, 0.5848", "442.073, 352.542, 35.6499, 0.4068", "443.125, 352.956, 35.6392, 0.2796", "444.141, 353.462, 35.5404, 0.2542", "445.078, 354.084, 35.3704, 0.2796", "445.887, 354.629, 35.121, 0.305", "446.848, 354.999, 35.0235, 0.305", "447.752, 355.652, 34.8905, 0.305", "448.623, 356.295, 34.6752, 0.3304", "449.494, 356.931, 34.4033, 0.356", "450.316, 357.616, 34.3008, 0.3814", "451.202, 358.28, 34.3717, 0.3814", "452.102, 358.826, 34.622, 0.4322", "452.757, 359.574, 34.7175, 0.5084", "453.523, 360.31, 34.9412, 0.5848", "454.033, 361.318, 35.1492, 0.5592", "454.846, 362.028, 35.4046, 0.483", "455.91, 362.409, 35.5197, 0.4322", "456.966, 362.777, 35.5533, 0.4576", "457.863, 363.441, 35.6843, 0.5084", "458.604, 364.283, 35.8462, 0.483", "459.377, 365.122, 35.9444, 0.4068", "460.124, 365.982, 35.9999, 0.356", "460.837, 366.868, 36.1029, 0.3814", "461.495, 367.766, 36.2513, 0.4576", "462.221, 368.586, 36.3006, 0.483", "463.083, 369.287, 36.4666, 0.4576", "463.979, 369.902, 36.7469, 0.356", "464.967, 370.447, 36.9634, 0.3304", "465.846, 371.09, 37.1277, 0.3304", "466.607, 371.893, 37.4052, 0.3814", "467.327, 372.756, 37.7474, 0.356", "468.122, 373.538, 38.0918, 0.3304", "469.102, 374.106, 38.4292, 0.305", "470.108, 374.524, 38.8601, 0.2796", "471.164, 374.785, 39.3462, 0.2542", "472.292, 374.883, 39.774, 0.2288", "473.431, 374.959, 40.1324, 0.2542", "474.527, 375.235, 40.4606, 0.2796", "475.492, 375.778, 40.8072, 0.3304", "476.458, 376.305, 41.1662, 0.3814", "477.487, 376.736, 41.428, 0.483", "478.535, 377.051, 41.6508, 0.5592", "479.62, 377.24, 41.9706, 0.6356", "480.696, 377.38, 42.3755, 0.6102", "481.816, 377.461, 42.7683, 0.5848", "482.856, 377.828, 43.0534, 0.4576", "483.848, 378.176, 43.4056, 0.3814", "484.81, 378.681, 43.8046, 0.3304", "485.903, 378.898, 44.1347, 0.356", "487.033, 379.064, 44.4189, 0.4068", "487.981, 379.603, 44.7684, 0.4322", "488.941, 380.1, 45.0316, 0.4576", "489.912, 380.696, 45.3312, 0.4576", "490.771, 381.428, 45.6716, 0.4322", "491.528, 382.181, 46.1367, 0.4068", "492.352, 382.48, 46.8409, 0.3814", "493.337, 382.455, 47.5955, 0.3814", "494.351, 382.15, 48.3392, 0.4068", "495.361, 381.788, 49.0731, 0.4068", "496.472, 381.653, 49.719, 0.3814", "497.606, 381.585, 50.253, 0.305", "498.738, 381.484, 50.6929, 0.2542", "499.878, 381.422, 51.0754, 0.2542", "501.021, 381.409, 51.4136, 0.305", "502.104, 381.435, 51.8232, 0.4068", "502.952, 381.947, 52.1609, 0.4576", "503.803, 381.48, 52.6434, 0.4576", "504.458, 381.126, 53.3646, 0.356", "505.508, 380.842, 54.047, 0.2796", "506.625, 380.675, 54.5258, 0.2288", "507.333, 380.093, 54.9427, 0.2288", "507.804, 379.115, 55.3563, 0.2288", "508.27, 378.327, 55.4896, 0.2542", "508.966, 377.623, 55.5663, 0.305", "509.511, 377.318, 56.0132, 0.3814", "510.322, 376.997, 56.6782, 0.4068", "511.397, 376.827, 57.1654, 0.3814", "512.414, 376.319, 57.5386, 0.356", "513.313, 375.804, 58.52, 0.356" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "366.993, 327.11, 30.1378, 0.7626", "366.879, 328.066, 30.6079, 0.3814", "366.496, 329.129, 31.0484, 0.5338", "365.903, 330.095, 31.2309, 0.661", "365.364, 331.073, 31.4776, 0.6864", "364.889, 332.094, 31.736, 0.5848", "364.274, 333.045, 31.9192, 0.5592", "363.405, 333.77, 32.0149, 0.5592", "362.407, 334.326, 32.069, 0.6356", "361.434, 334.929, 32.1034, 0.661", "360.456, 335.52, 32.1322, 0.6356", "359.433, 336.025, 32.1871, 0.5848", "358.369, 336.421, 32.3044, 0.5848", "357.289, 336.76, 32.4548, 0.6864", "356.195, 337.081, 32.5545, 0.7626", "355.165, 337.535, 32.6581, 0.7372", "354.282, 338.234, 32.8143, 0.6356", "353.454, 339.022, 32.9647, 0.5338", "352.574, 339.742, 33.0938, 0.4576", "351.548, 340.229, 33.2153, 0.3814", "350.443, 340.513, 33.3558, 0.3304", "349.322, 340.675, 33.5328, 0.3304", "348.184, 340.683, 33.7162, 0.356", "347.043, 340.687, 33.8859, 0.4068", "345.918, 340.708, 34.1132, 0.3814", "344.819, 340.808, 34.4142, 0.4068", "343.735, 341.104, 34.7074, 0.4068", "342.666, 341.384, 34.9675, 0.5084", "341.547, 341.413, 35.2346, 0.5592", "340.478, 341.601, 35.3662, 0.6356", "339.421, 341.919, 35.371, 0.661", "338.442, 342.453, 35.4035, 0.661", "337.504, 343.01, 35.369, 0.6356", "336.518, 343.525, 35.3161, 0.5848", "335.507, 343.977, 35.3808, 0.5338", "334.575, 344.429, 35.373, 0.4322", "333.76, 345.133, 35.292, 0.3814", "332.994, 345.828, 35.4021, 0.4322", "332.117, 346.511, 35.5709, 0.5592", "331.227, 347.187, 35.8218, 0.6102", "330.361, 347.864, 36.1603, 0.5338", "329.564, 348.668, 36.4801, 0.4068", "328.759, 349.482, 36.7363, 0.3814", "327.85, 350.172, 36.9183, 0.4068", "326.937, 350.793, 37.149, 0.483", "326.093, 351.485, 37.2322, 0.483", "325.121, 352.071, 37.3038, 0.483", "324.094, 352.532, 37.4433, 0.4576", "323.089, 353.073, 37.5662, 0.4576", "322.169, 353.698, 37.7614, 0.4576", "321.322, 354.463, 37.8994, 0.483", "320.335, 355.035, 38.0299, 0.5592", "319.289, 355.497, 38.1111, 0.661", "318.3, 356.056, 38.2057, 0.7372", "317.285, 356.582, 38.2749, 0.7372", "316.378, 357.272, 38.2791, 0.661", "315.516, 358.011, 38.2444, 0.5848", "314.641, 358.703, 38.3023, 0.5338", "313.628, 359.189, 38.2886, 0.5338", "312.664, 359.724, 38.2858, 0.5084", "311.666, 359.878, 38.4779, 0.5084", "310.536, 359.743, 38.6224, 0.5084", "309.438, 359.698, 38.7299, 0.5084", "308.348, 359.942, 38.9096, 0.4322", "307.245, 360.188, 39.0986, 0.3814", "306.132, 360.413, 39.2381, 0.356", "304.996, 360.48, 39.3677, 0.3814", "303.866, 360.544, 39.4559, 0.356", "302.749, 360.535, 39.459, 0.3304", "301.663, 360.217, 39.4492, 0.3304", "300.632, 360.145, 39.5441, 0.3814", "299.544, 360.17, 39.6858, 0.483", "298.425, 359.995, 39.7379, 0.5338", "297.313, 360.082, 39.6992, 0.5592", "296.201, 360.212, 39.5679, 0.483", "295.104, 360.482, 39.401, 0.4068", "293.997, 360.751, 39.228, 0.305", "292.989, 361.267, 39.0774, 0.2796", "291.888, 361.547, 39.0074, 0.2796", "290.846, 361.97, 39.0589, 0.305", "289.767, 362.301, 39.198, 0.305", "288.638, 362.463, 39.345, 0.356", "287.58, 362.741, 39.3551, 0.4322", "286.509, 362.702, 39.4876, 0.483", "285.401, 362.883, 39.5086, 0.483", "284.27, 362.988, 39.5623, 0.483", "283.188, 363.212, 39.6936, 0.5338", "282.134, 363.58, 39.7614, 0.5848", "281.09, 363.681, 39.6914, 0.6102", "280.087, 363.666, 39.6567, 0.6356", "279.137, 363.964, 39.7558, 0.661", "278.011, 363.924, 39.7662, 0.6356", "276.905, 363.807, 39.7023, 0.5338", "275.79, 363.562, 39.6687, 0.3814", "274.674, 363.321, 39.6939, 0.3304", "273.549, 363.229, 39.7606, 0.356", "272.428, 363.34, 39.8924, 0.483", "271.341, 363.198, 40.0568, 0.5338", "270.289, 362.754, 40.2058, 0.5592", "269.22, 362.356, 40.329, 0.483", "268.11, 362.092, 40.4118, 0.4322", "267.029, 361.944, 40.5686, 0.356", "266.016, 362.28, 40.7277, 0.356", "265.009, 362.574, 40.724, 0.356", "263.943, 362.662, 40.8268, 0.3814", "262.937, 362.904, 41.0967, 0.356", "261.878, 363.278, 41.3143, 0.356", "260.762, 363.525, 41.4624, 0.356", "259.672, 363.853, 41.5388, 0.4322", "258.569, 364.142, 41.6178, 0.483", "257.502, 364.521, 41.7026, 0.5338", "256.487, 364.783, 41.6016, 0.5084", "255.482, 365.181, 41.6424, 0.4322", "254.378, 365.186, 41.7441, 0.3814", "253.296, 365.156, 41.7497, 0.3814", "252.171, 365.167, 41.7962, 0.483", "251.047, 364.991, 41.806, 0.5338", "249.942, 364.966, 41.8292, 0.5084", "248.848, 365.171, 41.9244, 0.3814", "247.778, 364.968, 42.1159, 0.2796", "246.9, 364.309, 42.2848, 0.2288", "246.167, 363.625, 42.4878, 0.2288", "245.158, 363.449, 42.7316, 0.2288", "244.014, 363.449, 42.8896, 0.2542", "242.907, 363.469, 42.8865, 0.305", "241.804, 363.657, 42.817, 0.356", "240.714, 363.998, 42.7638, 0.3814", "240.027, 364.81, 42.7468, 0.356", "239.351, 365.721, 42.768, 0.3304", "239.101, 366.528, 42.5625, 0.3304", "238.982, 367.453, 42.84, 0.356" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "366.993, 327.11, 30.1378, 0.7626", "368.368, 327.445, 30.5634, 0.3814", "369.2, 328.176, 30.9996, 0.4322", "369.593, 329.209, 31.4583, 0.4576", "369.566, 330.305, 31.9645, 0.5592", "369.312, 331.402, 32.4822, 0.5592", "369.263, 332.531, 32.9888, 0.6102", "369.742, 333.535, 33.4953, 0.661", "370.553, 334.296, 34.041, 0.7372", "371.41, 334.969, 34.659, 0.7372", "372.237, 335.676, 35.3349, 0.7372", "372.998, 336.518, 35.9778, 0.7372", "373.742, 337.371, 36.6125, 0.7626", "374.511, 338.06, 37.3531, 0.7626", "375.31, 338.743, 38.1472, 0.788", "376.254, 339.247, 38.9438, 0.788", "377.243, 339.638, 39.7342, 0.7626", "378.109, 340.301, 40.4776, 0.6864", "378.67, 341.275, 41.1174, 0.6102", "379.139, 342.313, 41.5542, 0.5338", "379.45, 343.397, 41.8197, 0.483", "379.832, 344.457, 42.0479, 0.483", "380.522, 345.04, 42.499, 0.5084", "380.926, 345.851, 43.0769, 0.483", "381.4, 346.888, 43.5534, 0.4576", "381.974, 347.823, 43.9474, 0.4068", "382.953, 348.361, 44.2159, 0.4576", "383.829, 348.999, 44.431, 0.483", "384.418, 349.973, 44.6286, 0.5338", "384.925, 350.931, 44.9229, 0.5084", "385.298, 351.945, 45.3236, 0.4576", "385.414, 353.064, 45.7296, 0.4576", "385.487, 354.2, 46.1076, 0.5084", "385.701, 355.311, 46.4562, 0.6102", "386.117, 356.361, 46.7704, 0.6102", "386.751, 357.269, 47.0786, 0.5338", "387.413, 358.184, 47.3323, 0.4068", "388.256, 358.913, 47.4536, 0.3304", "389.104, 359.667, 47.4995, 0.305", "390.043, 360.282, 47.5594, 0.2796", "391.083, 360.742, 47.6034, 0.2542", "392.12, 361.221, 47.5919, 0.2542", "393.192, 361.591, 47.5261, 0.2796", "394.291, 361.894, 47.4421, 0.305", "395.386, 362.217, 47.3511, 0.2796", "396.458, 362.611, 47.2679, 0.2542", "397.426, 363.209, 47.2416, 0.2288", "398.391, 363.822, 47.2648, 0.2288", "399.497, 364.044, 47.3273, 0.2288", "400.628, 364.215, 47.4368, 0.2288", "401.681, 364.52, 47.6734, 0.2288", "402.783, 364.792, 47.8982, 0.2288", "403.894, 365.065, 48.1074, 0.2288", "404.963, 365.468, 48.3165, 0.2796", "406.06, 365.786, 48.5439, 0.356", "406.972, 366.162, 48.9728, 0.4576", "407.889, 366.772, 49.3058, 0.483", "408.969, 367.095, 49.677, 0.5084", "409.853, 367.612, 50.2354, 0.483", "410.772, 368.259, 50.8239, 0.5084", "411.705, 368.886, 51.4147, 0.4576", "412.44, 369.677, 52.0324, 0.483", "413.005, 370.234, 52.8508, 0.4576", "413.813, 371.017, 53.5377, 0.5084", "414.731, 371.664, 54.04, 0.483", "415.422, 372.476, 54.5446, 0.4576", "415.857, 373.3, 55.2126, 0.4068", "416.485, 374.081, 55.8922, 0.3814", "417.218, 374.832, 56.5608, 0.4068", "417.945, 375.631, 57.136, 0.4068", "418.774, 376.407, 57.5912, 0.3814", "419.139, 377.345, 58.1006, 0.305", "419.468, 378.356, 58.6401, 0.305", "420.071, 379.294, 59.0472, 0.356", "420.777, 380.19, 59.3648, 0.4322", "421.428, 381.0, 59.8139, 0.4322", "421.928, 381.996, 60.2818, 0.4068", "422.639, 382.883, 60.6987, 0.4068", "423.134, 383.906, 61.0982, 0.4576", "423.631, 384.91, 61.5535, 0.5338", "424.251, 385.844, 62.0354, 0.5592", "425.015, 386.603, 62.575, 0.5338", "425.88, 387.278, 63.1397, 0.4322", "426.855, 387.855, 63.658, 0.356", "427.768, 388.532, 64.1122, 0.305", "428.569, 389.348, 64.4602, 0.3304", "429.285, 390.177, 64.8323, 0.3814", "430.274, 390.747, 65.1154, 0.4068", "431.033, 391.572, 65.3968, 0.3814", "431.724, 392.479, 65.6048, 0.356", "432.318, 393.399, 65.6586, 0.356", "432.577, 394.501, 65.7546, 0.4068", "433.023, 395.52, 65.8272, 0.4068", "433.951, 396.182, 65.8756, 0.4068", "434.796, 396.788, 65.994, 0.356", "435.242, 397.479, 66.3566, 0.305", "435.904, 398.403, 66.6224, 0.2542", "436.638, 399.275, 66.8234, 0.2288", "437.373, 400.146, 67.018, 0.2796", "437.974, 401.118, 67.1866, 0.4068", "438.491, 402.137, 67.3498, 0.5338", "439.075, 403.102, 67.5466, 0.5848", "439.836, 403.94, 67.8185, 0.5084", "440.605, 404.776, 68.1302, 0.4322", "441.417, 405.561, 68.4774, 0.3814", "442.225, 406.343, 68.8517, 0.356", "442.91, 407.211, 69.2572, 0.3304", "443.487, 408.147, 69.6732, 0.2796", "444.135, 409.061, 69.979, 0.2542", "445.047, 409.659, 70.1548, 0.2288", "446.155, 409.901, 70.3105, 0.2288", "447.286, 410.065, 70.4172, 0.2288", "448.234, 410.538, 70.4782, 0.2288", "449.015, 411.357, 70.5244, 0.2542", "449.919, 412.048, 70.5334, 0.2796", "450.824, 412.736, 70.4934, 0.305", "451.6, 413.555, 70.4371, 0.2796", "452.363, 414.38, 70.3735, 0.2796", "453.236, 415.112, 70.3245, 0.3304", "453.987, 415.957, 70.2565, 0.4322", "454.715, 416.826, 70.1795, 0.483", "455.605, 417.489, 70.2052, 0.4322", "456.48, 418.204, 70.2892, 0.3304", "457.134, 419.128, 70.399, 0.2542", "457.662, 420.142, 70.4833, 0.2542", "458.504, 420.884, 70.492, 0.2796", "459.163, 421.806, 70.4511, 0.305", "459.834, 422.731, 70.3956, 0.305", "460.341, 423.754, 70.3447, 0.3304", "460.848, 424.77, 70.2635, 0.356", "461.302, 425.816, 70.2288, 0.356", "461.567, 426.922, 70.2705, 0.305", "461.781, 428.047, 70.3273, 0.2542", "461.919, 429.18, 70.4155, 0.2288", "461.947, 430.323, 70.5138, 0.2288", "461.947, 431.466, 70.6087, 0.2288", "461.947, 432.611, 70.6955, 0.2288", "461.954, 433.754, 70.7809, 0.2542", "462.866, 434.429, 70.8814, 0.305", "463.591, 435.279, 71.0318, 0.3814", "464.114, 436.213, 71.2216, 0.4068", "464.81, 436.958, 71.4524, 0.3814", "465.28, 437.97, 71.7223, 0.305", "465.889, 438.938, 71.9617, 0.2542", "466.383, 439.956, 72.1888, 0.2288", "466.902, 440.915, 72.469, 0.2542", "467.484, 441.859, 72.7222, 0.305", "468.151, 442.778, 72.8848, 0.3814", "469.057, 443.424, 72.9574, 0.4322", "469.995, 444.054, 72.9826, 0.4322", "470.875, 444.762, 73.0542, 0.3814", "471.694, 445.538, 73.1783, 0.305", "472.589, 446.23, 73.3337, 0.2542", "472.944, 447.239, 73.4835, 0.2288", "473.154, 448.363, 73.612, 0.2288", "473.345, 449.491, 73.7103, 0.2288", "473.344, 450.63, 73.7859, 0.2288", "473.063, 451.711, 73.9001, 0.2288", "472.334, 452.533, 74.0463, 0.2288", "471.879, 453.515, 74.0636, 0.2288", "471.9, 454.647, 74.0328, 0.2288", "471.9, 455.739, 73.9144, 0.2288", "471.915, 456.87, 73.813, 0.2288", "472.134, 457.967, 73.8408, 0.2542", "472.466, 458.759, 74.1863, 0.3304", "472.538, 459.354, 74.8177, 0.4576", "473.354, 460.108, 75.2441, 0.5338", "473.886, 461.003, 75.3981, 0.5084", "474.17, 461.935, 75.2895, 0.3814", "474.568, 462.878, 75.1663, 0.2796", "474.73, 463.95, 75.1747, 0.2542", "474.461, 464.964, 75.3894, 0.305", "474.489, 466.011, 75.7851, 0.356", "474.594, 467.008, 76.347, 0.356", "474.685, 467.729, 77.086, 0.356", "474.534, 468.82, 77.5732, 0.4068", "474.236, 469.747, 77.5967, 0.5084", "474.663, 470.739, 77.3444, 0.5338", "475.018, 471.765, 76.9899, 0.4576", "474.855, 472.438, 76.3454, 0.3304", "475.012, 473.324, 75.7173, 0.2542", "475.358, 474.337, 75.4838, 0.2288", "475.83, 475.318, 75.4519, 0.2542", "476.253, 475.489, 75.9273, 0.2796", "476.531, 476.107, 76.7225, 0.305", "477.3, 476.787, 77.5502, 0.2796", "477.852, 477.786, 78.1679, 0.2542", "478.341, 478.814, 78.524, 0.2288", "478.743, 479.862, 78.6374, 0.2288", "479.155, 480.87, 78.5047, 0.2542", "479.724, 481.812, 78.2648, 0.3304", "480.248, 482.73, 78.111, 0.5084", "480.529, 483.68, 78.2284, 0.7372", "481.241, 484.518, 78.4826, 0.8898", "481.67, 485.555, 78.8071, 0.8898", "481.953, 486.627, 79.2291, 0.7118", "482.285, 487.685, 79.5614, 0.5592", "482.394, 488.785, 79.8168, 0.4576", "482.352, 489.835, 80.1931, 0.5338", "482.652, 490.773, 80.7428, 0.6102", "483.012, 491.809, 81.3333, 0.661", "483.339, 492.898, 81.9022, 0.5848", "483.619, 494.005, 82.4219, 0.5338", "483.962, 495.004, 83.0113, 0.5338", "483.4, 495.703, 83.6912, 0.5848", "483.684, 496.749, 84.3094, 0.6102", "484.388, 497.622, 84.8868, 0.5592", "484.896, 498.63, 85.4154, 0.5084", "485.364, 499.636, 85.9158, 0.4068", "485.987, 500.586, 86.2837, 0.4068", "486.452, 501.605, 86.5589, 0.4322", "487.129, 502.496, 86.9154, 0.5592", "487.721, 503.454, 87.337, 0.6356", "488.236, 504.411, 87.7836, 0.6356", "488.439, 505.403, 88.3414, 0.5592", "488.956, 505.833, 89.2144, 0.483", "489.643, 505.728, 90.2955, 0.483", "490.654, 505.769, 91.3419, 0.5338", "491.604, 506.329, 92.2468, 0.5848", "492.516, 506.974, 93.0138, 0.5848", "493.523, 507.493, 93.6233, 0.5338", "494.589, 507.377, 94.1226, 0.4576", "495.376, 506.783, 94.6641, 0.4576", "496.153, 505.991, 95.76, 0.5338" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "402.466, 267.257, 24.423, 0.6356", "403.328, 267.722, 23.1272, 0.483", "404.456, 267.594, 22.9862, 0.4576", "405.57, 267.479, 22.9161, 0.3814", "406.7, 267.498, 22.835, 0.305", "407.759, 267.13, 22.72, 0.2796", "408.7, 266.507, 22.524, 0.2796", "409.589, 265.811, 22.2752, 0.3304", "410.427, 265.036, 22.0379, 0.3304", "411.139, 264.194, 21.7481, 0.3304", "411.839, 263.346, 21.4072, 0.2796", "412.684, 262.583, 21.1, 0.305", "413.535, 261.832, 20.8087, 0.3304", "414.467, 261.204, 20.5251, 0.4322", "415.464, 260.697, 20.2283, 0.483", "416.363, 260.03, 19.9768, 0.5848", "417.056, 259.137, 19.8368, 0.5848", "417.844, 258.343, 19.7565, 0.5338", "418.732, 257.625, 19.7112, 0.4576", "419.484, 256.79, 19.6751, 0.4576", "420.21, 255.915, 19.688, 0.5592", "421.074, 255.223, 19.8318, 0.5592", "422.071, 254.819, 20.1249, 0.5592", "423.156, 254.63, 20.5024, 0.483", "424.287, 254.519, 20.8708, 0.5338", "425.416, 254.367, 21.2136, 0.5338", "426.451, 253.941, 21.4697, 0.5592", "427.348, 253.26, 21.6253, 0.5338", "428.179, 252.514, 21.8376, 0.5084", "429.042, 251.805, 22.1464, 0.4576", "429.895, 251.108, 22.5615, 0.356", "430.834, 250.547, 23.0525, 0.305", "431.528, 249.91, 23.679, 0.2796", "432.315, 249.161, 24.1835, 0.305", "433.156, 248.392, 24.5496, 0.305", "434.056, 247.69, 24.7721, 0.3304", "435.036, 247.102, 24.8655, 0.356", "436.025, 246.588, 24.7708, 0.356", "436.961, 246.111, 24.7356, 0.305", "437.994, 245.864, 24.6448, 0.2796", "438.973, 245.722, 24.3116, 0.2796", "439.876, 245.248, 23.8847, 0.305", "440.803, 244.609, 23.4974, 0.2796", "441.823, 244.092, 23.1917, 0.2542", "442.874, 243.645, 22.9533, 0.2288", "443.39, 242.795, 22.7245, 0.2796", "443.927, 241.863, 22.4773, 0.3304", "444.56, 241.046, 22.416, 0.4068", "445.279, 240.271, 22.5247, 0.4068", "445.931, 239.344, 22.5744, 0.4068", "446.354, 238.32, 22.5022, 0.3814", "447.304, 237.723, 22.12, 0.4068" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "402.466, 267.257, 24.423, 0.6356", "402.61, 267.56, 24.4465, 0.4322", "403.087, 268.594, 24.5568, 0.4322", "403.58, 269.608, 24.759, 0.356", "404.165, 270.583, 24.9859, 0.305", "404.668, 271.608, 25.1904, 0.305", "405.071, 272.678, 25.3723, 0.3814", "405.484, 273.744, 25.5477, 0.4068", "405.909, 274.798, 25.7503, 0.4322", "406.319, 275.849, 25.9978, 0.4068", "406.77, 276.896, 26.2489, 0.4322", "407.273, 277.922, 26.484, 0.4068", "407.888, 278.885, 26.7186, 0.4576", "408.548, 279.805, 26.9907, 0.4576", "409.289, 280.651, 27.3094, 0.483", "410.145, 281.401, 27.6193, 0.4576", "411.07, 282.057, 27.9486, 0.5084", "411.967, 282.721, 28.3248, 0.6102", "412.793, 283.49, 28.6983, 0.7118", "413.492, 284.369, 29.0707, 0.788", "414.22, 285.246, 29.3896, 0.788", "414.939, 286.134, 29.6408, 0.788", "415.7, 286.988, 29.8365, 0.6864", "416.586, 287.693, 30.0227, 0.5848", "417.525, 288.306, 30.2327, 0.483", "418.433, 288.995, 30.3895, 0.5084", "419.228, 289.815, 30.4881, 0.5848", "419.937, 290.712, 30.5329, 0.6356", "420.584, 291.648, 30.504, 0.661", "421.248, 292.559, 30.3892, 0.661", "422.009, 293.41, 30.2842, 0.6864", "422.811, 294.204, 30.2742, 0.6356", "423.656, 294.959, 30.3355, 0.5848", "424.628, 295.493, 30.3752, 0.5084", "425.193, 296.357, 30.2758, 0.483", "425.5, 297.453, 30.2576, 0.4068", "425.925, 298.474, 30.3414, 0.4068", "426.637, 299.365, 30.4517, 0.4068", "427.353, 300.246, 30.5836, 0.483", "428.147, 301.041, 30.7838, 0.5084", "428.817, 301.896, 31.0156, 0.5592", "429.233, 302.932, 31.1847, 0.6102", "429.736, 303.936, 31.2197, 0.6356", "430.089, 305.005, 31.1534, 0.6356", "430.565, 306.02, 31.0453, 0.5848", "431.169, 306.989, 30.9742, 0.5848", "431.838, 307.911, 30.9154, 0.6102", "432.616, 308.742, 30.9002, 0.6864", "433.339, 309.598, 30.9907, 0.7372", "434.076, 310.428, 31.1564, 0.7372", "434.993, 311.108, 31.3155, 0.7118", "435.919, 311.75, 31.4958, 0.6356", "436.801, 312.423, 31.7531, 0.5848", "437.616, 313.207, 32.0186, 0.5084", "438.389, 314.036, 32.2059, 0.5084", "438.97, 314.989, 32.3786, 0.5338", "439.294, 316.071, 32.5441, 0.5592", "439.589, 317.173, 32.6732, 0.5338", "439.966, 318.23, 32.8608, 0.4576", "440.006, 319.241, 33.2156, 0.4322", "439.774, 320.295, 33.4757, 0.4576", "439.576, 321.4, 33.7548, 0.4576", "439.528, 322.519, 34.0931, 0.4068", "439.734, 323.604, 34.487, 0.3304", "440.032, 324.679, 34.8992, 0.305", "440.53, 325.664, 35.1445, 0.305", "441.274, 326.403, 35.5068, 0.305", "441.925, 327.337, 35.8075, 0.3304", "442.472, 328.339, 36.0702, 0.4068", "443.276, 329.111, 36.3745, 0.483", "443.954, 330.002, 36.563, 0.5338", "444.773, 330.716, 36.8542, 0.5338", "445.596, 331.5, 37.0941, 0.5084", "446.242, 332.321, 37.3937, 0.5084", "446.43, 333.404, 37.6513, 0.483", "447.162, 334.275, 37.8297, 0.5084", "447.995, 335.047, 37.8972, 0.4576", "448.783, 335.844, 37.8983, 0.4068", "449.63, 336.551, 37.9456, 0.3304", "450.513, 337.252, 37.9344, 0.356", "451.34, 338.006, 37.9142, 0.4576", "452.256, 338.63, 37.8137, 0.5338", "453.284, 339.121, 37.7269, 0.5084", "454.209, 339.766, 37.5962, 0.3814", "454.817, 340.47, 37.2697, 0.2796", "455.203, 341.39, 36.913, 0.2288", "455.883, 342.268, 36.6677, 0.2288", "456.872, 342.797, 36.5574, 0.2288", "457.682, 343.528, 36.6279, 0.2288", "458.107, 344.572, 36.8547, 0.2288", "458.592, 345.552, 37.2848, 0.2796", "459.128, 345.959, 38.0542, 0.3304", "459.909, 346.344, 38.9928, 0.4322", "460.862, 346.929, 39.8401, 0.4576", "461.808, 347.568, 40.4911, 0.5338", "462.809, 348.111, 41.0446, 0.5084", "463.574, 348.951, 41.4859, 0.483", "464.14, 349.888, 41.9317, 0.356", "465.209, 350.198, 42.3464, 0.2796", "466.185, 350.358, 42.8551, 0.2288", "466.507, 350.709, 43.7755, 0.2542", "466.759, 350.653, 45.0296, 0.2796", "467.568, 350.885, 46.4318, 0.305", "468.27, 351.254, 47.9248, 0.2796", "468.984, 351.718, 49.3951, 0.2542", "469.803, 352.363, 50.6834, 0.2288", "470.728, 352.861, 51.7493, 0.2288", "471.703, 353.368, 52.5358, 0.2288", "472.621, 354.045, 53.0354, 0.2542", "473.553, 354.648, 53.4033, 0.305", "474.601, 355.006, 53.6318, 0.356", "475.699, 355.277, 53.783, 0.356", "476.8, 355.571, 53.9151, 0.305", "477.726, 356.179, 54.0053, 0.2542", "478.762, 356.461, 54.0828, 0.2288", "479.903, 356.513, 54.1652, 0.2288", "480.896, 356.956, 54.32, 0.2288", "481.647, 357.708, 54.5969, 0.2288", "482.771, 357.843, 54.8377, 0.2288", "483.907, 357.843, 55.0547, 0.2288", "485.049, 357.849, 55.1827, 0.2542", "486.115, 358.015, 55.1023, 0.2796", "487.227, 358.08, 54.9643, 0.3304", "488.211, 358.24, 54.978, 0.3304", "489.241, 358.231, 54.8024, 0.3304", "490.25, 358.009, 54.591, 0.2796", "491.229, 357.779, 54.6174, 0.2542", "492.335, 357.725, 54.7081, 0.2288", "493.475, 357.689, 54.7126, 0.2542", "494.567, 357.526, 54.5686, 0.2796", "495.536, 357.215, 54.2394, 0.305", "496.512, 356.939, 53.776, 0.2796", "497.563, 356.607, 53.3624, 0.2542", "498.416, 355.889, 53.132, 0.2542", "499.27, 355.207, 53.0496, 0.2796", "500.258, 354.642, 52.9976, 0.3304", "501.188, 353.997, 53.0258, 0.3304", "502.015, 353.353, 52.988, 0.3304", "502.964, 352.949, 52.8811, 0.2796", "503.774, 352.694, 53.0256, 0.305", "504.758, 352.173, 53.0734, 0.3304", "505.632, 351.449, 53.0474, 0.4576", "506.678, 351.094, 52.64, 0.483" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "327.262, 288.789, 33.7243, 0.5338", "326.591, 288.989, 33.8943, 0.4322", "325.524, 289.274, 34.2076, 0.356", "324.548, 289.717, 34.6987, 0.3304", "323.697, 290.364, 35.2327, 0.3304", "322.883, 290.99, 35.8434, 0.3304", "321.891, 291.307, 36.5714, 0.3814", "321.419, 291.822, 37.4965, 0.4068", "321.558, 292.914, 38.3186, 0.4576", "321.033, 293.41, 39.1667, 0.483", "320.16, 293.874, 39.8065, 0.5338", "319.551, 294.581, 40.4421, 0.6864", "318.916, 295.402, 40.9618, 0.7626", "318.28, 296.348, 41.3445, 0.7626", "317.423, 297.088, 41.7343, 0.5848", "316.497, 297.423, 42.3027, 0.483", "315.379, 297.392, 42.8831, 0.483", "314.49, 297.909, 43.3888, 0.5848", "313.604, 298.225, 44.1154, 0.6356", "312.587, 298.377, 44.9618, 0.5848", "311.722, 298.246, 45.9486, 0.5084", "311.035, 297.537, 46.909, 0.4322", "310.078, 297.025, 47.7582, 0.4322", "309.117, 296.638, 48.6366, 0.3814", "308.02, 296.541, 49.4284, 0.4068", "307.126, 297.059, 50.2197, 0.3814" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "327.262, 288.789, 33.7243, 0.5338", "326.575, 288.36, 33.98, 0.4068", "325.588, 287.799, 35.0238, 0.6102", "324.576, 287.342, 35.4508, 0.7118", "323.675, 286.859, 36.0581, 0.7372", "322.934, 286.233, 36.822, 0.6864", "322.224, 285.433, 37.595, 0.7118", "321.646, 284.452, 38.2505, 0.661", "321.225, 283.395, 38.7713, 0.6102", "321.022, 282.28, 39.2101, 0.5592", "320.828, 281.2, 39.6491, 0.6356", "320.385, 280.181, 40.0968, 0.661", "320.023, 279.127, 40.5499, 0.6102", "319.88, 277.994, 40.9615, 0.483", "319.854, 276.853, 41.3504, 0.3814", "319.814, 275.717, 41.7516, 0.3814", "319.67, 274.587, 42.1644, 0.483", "319.445, 273.478, 42.6381, 0.661", "319.348, 272.361, 43.2166, 0.8136", "319.182, 271.303, 43.9516, 0.8136", "318.944, 270.35, 44.8706, 0.7118", "318.675, 269.522, 45.9603, 0.5084", "317.952, 268.962, 47.1019, 0.4322", "316.893, 268.816, 48.1771, 0.5084", "315.844, 268.829, 49.1806, 0.661", "314.745, 268.961, 50.0506, 0.7626", "313.625, 268.952, 50.7657, 0.7118", "312.671, 268.467, 51.2238, 0.6864", "311.92, 267.918, 51.7619, 0.6356", "311.383, 267.281, 52.472, 0.5848", "310.348, 267.059, 52.9385, 0.5084", "309.252, 267.036, 53.429, 0.4576", "308.124, 267.211, 53.8555, 0.483", "307.051, 267.49, 54.1436, 0.5338", "305.973, 267.607, 54.5462, 0.5592", "305.005, 268.029, 55.0738, 0.5848", "304.192, 268.789, 55.6301, 0.6102", "303.205, 269.051, 56.3528, 0.6356", "302.134, 269.004, 57.1771, 0.5848", "301.08, 269.092, 58.032, 0.4322", "300.218, 269.396, 58.8756, 0.305", "299.592, 269.015, 59.8948, 0.2796", "298.687, 268.692, 60.8947, 0.3814", "297.645, 268.318, 61.6263, 0.483", "296.69, 267.848, 62.1849, 0.5084", "295.7, 267.547, 62.7939, 0.4322", "294.669, 267.236, 63.3724, 0.356", "293.576, 266.939, 63.7949, 0.2796", "292.528, 266.582, 64.1788, 0.2542", "291.509, 266.426, 64.6666, 0.2542", "290.534, 266.875, 65.1526, 0.305", "289.494, 266.815, 65.581, 0.356", "288.539, 266.245, 65.863, 0.4068", "287.771, 266.415, 66.3452, 0.4068", "286.675, 266.669, 66.7047, 0.4068", "285.58, 266.629, 67.0015, 0.3304", "284.569, 266.159, 67.2888, 0.305", "283.555, 265.701, 67.7015, 0.2796", "282.732, 265.621, 68.3948, 0.305", "282.257, 265.327, 69.3806, 0.305", "281.506, 264.7, 70.392, 0.356", "281.112, 263.695, 71.2043, 0.5084", "280.901, 262.81, 72.1204, 0.7118", "280.802, 261.808, 73.0486, 0.8136", "280.394, 260.755, 73.8301, 0.7372" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "307.126, 297.059, 50.2197, 0.3814", "306.86, 297.744, 51.0152, 0.483", "306.464, 298.727, 51.7194, 0.4322", "305.81, 299.633, 52.204, 0.4068", "305.314, 300.631, 52.5375, 0.4322", "305.085, 301.603, 52.9284, 0.356", "304.56, 302.538, 53.2039, 0.2796", "304.052, 303.459, 53.2272, 0.2288", "303.797, 304.537, 53.3201, 0.2288", "303.279, 305.511, 53.4624, 0.2288", "302.988, 306.593, 53.48, 0.2288", "302.734, 307.608, 53.3764, 0.2288", "302.144, 308.446, 53.2372, 0.2288", "301.891, 309.548, 53.2076, 0.2796", "301.622, 310.603, 53.3229, 0.3304", "301.431, 311.6, 53.6701, 0.3814", "300.931, 312.483, 54.1968, 0.3814", "300.54, 313.469, 54.7537, 0.3814", "300.015, 314.418, 55.2031, 0.3814", "299.592, 315.418, 55.4582, 0.3304", "299.505, 316.545, 55.6052, 0.2796", "299.398, 317.682, 55.7102, 0.2288", "298.981, 318.731, 55.8113, 0.2288", "298.424, 319.71, 55.9978, 0.2288", "297.864, 320.512, 56.394, 0.2288", "297.204, 321.329, 56.8828, 0.2288", "296.985, 322.414, 57.2762, 0.2288", "296.394, 323.372, 57.5151, 0.2542", "295.592, 324.178, 57.6475, 0.2796", "295.575, 325.261, 57.5369, 0.305", "294.895, 326.162, 57.3818, 0.2796", "294.51, 327.226, 57.0816, 0.2542", "294.317, 328.246, 56.5628, 0.2288", "294.07, 329.342, 55.9714, 0.2288", "293.817, 330.43, 55.3798, 0.2288", "293.509, 331.307, 54.635, 0.2288", "292.97, 332.135, 53.8798, 0.2288", "292.435, 332.846, 52.9469, 0.2288", "292.282, 333.397, 51.8182, 0.2288", "292.218, 334.191, 50.6764, 0.2288", "292.308, 335.267, 49.6703, 0.2288", "292.642, 336.293, 48.8116, 0.2288", "292.526, 337.347, 48.2182, 0.2288", "291.884, 338.23, 47.9735, 0.2542", "291.137, 339.077, 47.945, 0.2796", "290.701, 339.761, 47.7532, 0.305", "289.926, 340.452, 47.5258, 0.2796", "289.255, 341.297, 47.5608, 0.2796", "288.509, 341.843, 47.8276, 0.2796", "287.691, 342.398, 48.2182, 0.305", "287.067, 343.082, 48.8076, 0.305", "286.228, 343.67, 49.331, 0.3304", "285.596, 343.963, 49.4441, 0.3814", "285.142, 344.694, 49.3083, 0.4068", "284.674, 344.767, 49.5239, 0.3814", "283.839, 345.433, 49.7832, 0.3304", "283.28, 346.415, 50.041, 0.305", "282.794, 347.44, 50.3098, 0.305", "282.374, 348.373, 50.6892, 0.2796", "282.289, 349.505, 50.9062, 0.305", "282.069, 350.55, 50.7746, 0.3304", "281.939, 351.619, 50.4224, 0.4068", "281.642, 352.673, 49.9542, 0.4322", "280.922, 353.537, 49.4816, 0.4576", "280.047, 354.142, 48.9266, 0.4322", "279.339, 354.976, 48.4226, 0.3814", "278.943, 356.044, 48.0547, 0.3814", "278.531, 357.11, 47.8416, 0.4322", "278.057, 358.146, 47.7238, 0.483", "277.538, 359.145, 47.6174, 0.4576", "277.134, 360.165, 47.5796, 0.3814", "276.962, 361.201, 47.7596, 0.3304", "276.894, 362.282, 48.0298, 0.3304", "276.789, 363.417, 48.2278, 0.356", "276.543, 364.53, 48.3406, 0.3814", "276.347, 365.634, 48.4252, 0.3304", "276.389, 366.761, 48.501, 0.2796", "276.367, 367.898, 48.4798, 0.2288", "276.147, 368.965, 48.3392, 0.2288", "276.078, 369.849, 48.0847, 0.2288", "276.727, 370.754, 47.8979, 0.2288", "277.191, 371.738, 47.8884, 0.2288", "277.45, 372.846, 47.9074, 0.2288", "277.995, 373.827, 47.8867, 0.2288", "278.279, 374.93, 47.9301, 0.2542", "278.761, 375.968, 48.001, 0.2796", "279.036, 377.077, 48.0536, 0.305", "279.087, 378.211, 48.1552, 0.2796", "279.134, 379.34, 48.3162, 0.2796", "279.007, 380.338, 48.3832, 0.305", "278.823, 381.276, 48.5764, 0.356", "278.619, 382.382, 48.6962, 0.356", "278.435, 383.503, 48.8099, 0.305", "278.086, 384.59, 48.8849, 0.2796", "277.709, 385.669, 48.9294, 0.2796", "277.471, 386.783, 48.9706, 0.305", "277.41, 387.922, 48.9941, 0.2796", "277.438, 389.065, 49.0344, 0.2542", "277.532, 390.185, 49.1417, 0.2288", "277.768, 391.274, 49.3178, 0.2288", "278.013, 392.385, 49.4796, 0.2288", "278.223, 393.507, 49.5956, 0.2288", "278.843, 394.377, 49.6678, 0.2288", "279.826, 394.958, 49.6989, 0.2288", "280.867, 395.403, 49.656, 0.2288", "281.928, 395.811, 49.5746, 0.2288", "282.965, 396.292, 49.5118, 0.2288", "284.038, 396.672, 49.4782, 0.2288", "285.158, 396.895, 49.4718, 0.2288", "286.175, 397.341, 49.534, 0.2288", "287.105, 397.995, 49.6376, 0.2288", "287.707, 398.93, 49.7336, 0.2288", "288.378, 399.839, 49.7938, 0.2288", "289.163, 400.663, 49.8708, 0.2288", "289.93, 401.509, 49.9548, 0.2288", "290.348, 402.547, 49.9705, 0.2288", "290.792, 403.571, 50.0466, 0.2288", "291.019, 404.682, 50.1147, 0.2288", "291.196, 405.811, 50.1542, 0.2542", "291.674, 406.804, 50.0836, 0.2796", "292.105, 407.855, 50.0242, 0.305", "292.37, 408.966, 50.0063, 0.2796", "292.418, 410.106, 50.0013, 0.2542", "292.604, 411.231, 50.0195, 0.2288", "293.2, 412.159, 50.1183, 0.2288", "293.671, 413.157, 50.274, 0.2288", "294.337, 414.051, 50.4151, 0.2542", "294.899, 415.001, 50.3348, 0.305", "295.369, 415.827, 49.9582, 0.356", "296.097, 416.607, 49.4421, 0.356", "296.741, 417.528, 48.9191, 0.305", "297.466, 418.342, 48.5814, 0.2542", "298.187, 419.212, 48.3174, 0.2542", "299.059, 419.936, 48.0469, 0.3304", "299.703, 420.851, 47.64, 0.4576", "300.261, 421.651, 46.9966, 0.5592", "300.521, 422.554, 46.1628, 0.6356", "300.594, 423.389, 45.0954, 0.6102", "300.489, 423.875, 43.7786, 0.6356", "300.599, 424.678, 42.4264, 0.5848", "301.231, 425.543, 41.2586, 0.5848", "301.837, 426.46, 40.3287, 0.5084", "301.626, 427.572, 39.7046, 0.5084", "301.22, 428.6, 39.2442, 0.5084", "301.217, 429.645, 39.032, 0.5084", "300.95, 430.576, 38.8979, 0.4322", "300.601, 431.304, 38.5154, 0.356", "300.04, 432.181, 38.1805, 0.305", "299.837, 433.284, 37.9319, 0.3304", "299.744, 434.396, 37.704, 0.3814", "298.855, 435.011, 37.6037, 0.4322", "298.349, 435.909, 37.7826, 0.4322", "298.355, 437.008, 38.64, 0.3814" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "307.126, 297.059, 50.2197, 0.3814", "306.261, 297.59, 50.6878, 0.356", "305.172, 297.519, 52.2463, 0.356", "304.381, 296.962, 52.9612, 0.3814", "303.484, 296.492, 53.8364, 0.356", "302.619, 296.02, 54.824, 0.356", "301.886, 295.32, 55.8146, 0.3814", "301.609, 294.315, 56.7722, 0.4322", "301.278, 293.268, 57.5893, 0.4322", "300.621, 292.429, 58.2336, 0.3814", "299.953, 291.696, 58.7818, 0.3304", "299.706, 290.597, 59.1119, 0.356", "299.043, 289.744, 59.3538, 0.4322", "298.235, 289.0, 59.416, 0.483", "297.173, 288.765, 59.4832, 0.4322", "296.079, 288.898, 59.619, 0.3814", "295.065, 289.395, 59.7341, 0.356", "293.984, 289.758, 59.7946, 0.4322", "292.864, 289.89, 59.64, 0.4322" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "280.394, 260.755, 73.8301, 0.7372", "279.755, 259.778, 74.6021, 0.3304", "279.469, 258.754, 75.3024, 0.2796", "279.584, 257.664, 75.9668, 0.2288", "279.6, 256.535, 76.4744, 0.2796", "279.993, 255.552, 76.9454, 0.3814", "280.451, 254.524, 77.3447, 0.483", "281.241, 253.708, 77.6278, 0.483", "281.631, 252.656, 77.7736, 0.3814", "281.767, 251.527, 77.8484, 0.305", "281.916, 250.396, 77.9576, 0.3304", "282.162, 249.28, 78.0825, 0.4068", "282.28, 248.277, 78.393, 0.4576", "283.043, 247.46, 78.7052, 0.4322", "283.312, 246.471, 79.114, 0.4576", "283.521, 245.357, 79.3523, 0.4576", "283.958, 244.339, 79.4069, 0.483", "284.681, 243.466, 79.4184, 0.4576", "285.535, 242.758, 79.2926, 0.4576", "286.594, 242.409, 79.0821, 0.4576", "287.618, 241.996, 78.8869, 0.4322", "288.662, 241.689, 78.5809, 0.483", "289.788, 241.742, 78.2421, 0.5338", "290.894, 241.996, 77.8736, 0.6356", "291.956, 242.226, 77.4155, 0.5848", "293.004, 242.436, 76.8961, 0.5084", "294.104, 242.561, 76.5047, 0.4068", "295.041, 242.823, 76.1398, 0.4322", "295.922, 243.275, 75.619, 0.483", "296.798, 243.473, 74.9459, 0.483", "297.731, 243.677, 74.226, 0.4068", "298.819, 243.968, 73.6781, 0.3304", "299.896, 244.196, 73.381, 0.305", "300.905, 244.62, 73.3065, 0.2796", "301.985, 244.948, 73.2928, 0.305", "303.014, 245.322, 73.1615, 0.3814", "303.988, 245.883, 72.9618, 0.5084", "304.885, 246.555, 72.8062, 0.5592", "305.967, 246.873, 72.6312, 0.5338", "307.106, 246.972, 72.4338, 0.5084", "307.393, 247.333, 71.12, 0.483" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "280.394, 260.755, 73.8301, 0.7372", "279.74, 259.862, 74.6032, 0.4322", "278.982, 259.07, 75.7481, 0.4068", "278.208, 258.328, 76.2678, 0.356", "277.227, 257.835, 76.8527, 0.305", "276.175, 257.566, 77.5379, 0.2542", "275.099, 257.301, 78.2824, 0.2288", "274.216, 256.634, 79.004, 0.2542", "273.812, 255.622, 79.7684, 0.305", "273.839, 254.793, 80.7604, 0.356", "273.97, 253.858, 81.8832, 0.3814", "274.013, 253.374, 83.2073, 0.4068", "273.426, 252.923, 84.5897, 0.4576", "272.973, 251.895, 85.7181, 0.5338", "272.493, 250.884, 86.6491, 0.5592", "272.115, 250.487, 87.1282, 0.5338", "271.628, 249.798, 87.7685, 0.4322", "270.929, 249.028, 88.4153, 0.3304", "270.057, 248.305, 88.996, 0.2542", "269.284, 247.511, 89.6042, 0.2288", "268.381, 246.988, 90.3297, 0.2288", "267.562, 246.351, 91.1047, 0.2288", "267.135, 245.318, 91.8224, 0.2542", "266.775, 244.48, 92.6867, 0.2796", "266.293, 243.551, 93.5962, 0.3304", "265.885, 242.491, 94.4516, 0.3814", "265.731, 241.39, 95.2921, 0.4322", "265.703, 240.641, 96.3158, 0.4322", "265.66, 239.972, 97.48, 0.356", "265.216, 239.039, 98.5337, 0.2796", "265.522, 237.952, 100.24, 0.2796" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_35", "dend_32", "dend_25", "dend_16", "dend_5", "dend_0", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_17", "dend_7", "dend_6", "dend_4", "dend_1", "dend_30", "dend_27", "dend_24", "dend_23", "dend_21", "dend_18", "dend_9", "dend_8", "dend_3", "dend_2", "dend_29", "dend_28", "dend_20", "dend_19", "dend_13", "dend_10", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_593",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.6804514"
  }, {
    "group" : "axon",
    "value" : "1.6804514"
  }, {
    "group" : "dend",
    "value" : "1.6804514"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "150.29338"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.3966157E-8",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.09525637",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.1617255E-6",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0026980801",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.25846925",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.4600746E-8",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0017580192",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.001559901",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.6592015E-6",
    "erev" : "-88.47498"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "7.267633E-4",
    "erev" : "-88.47498"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "7.0026426E-6",
    "erev" : "-88.47498"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "7.280526E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "6.676238E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_472440759",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472440759

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_35, dend_32, dend_25, dend_16, dend_5, dend_0, dend_34, dend_33, dend_31, dend_26, dend_22, dend_17, dend_7, dend_6, dend_4, dend_1, dend_30, dend_27, dend_24, dend_23, dend_21, dend_18, dend_9, dend_8, dend_3, dend_2, dend_29, dend_28, dend_20, dend_19, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_593, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_593
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472440759
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_35(0), soma_0(0.5)
    connect dend_32(0), soma_0(0.5)
    connect dend_25(0), soma_0(0.5)
    connect dend_16(0), soma_0(0.5)
    connect dend_5(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 346.315, 288.974, 21.84, 10.2436 ) }
    soma_0 { pt3dadd( 351.437, 288.974, 21.84, 10.2436 ) }
    soma_0 { pt3dadd( 356.559, 288.974, 21.84, 10.2436 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 351.437, 288.974, 21.84, 1.0 ) }
    axon_0 { pt3dadd( 357.278, 302.79, 21.84, 1.0 ) }
    axon_0 { pt3dadd( 363.12, 316.606, 21.84, 1.0 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 348.864, 291.943, 18.4904, 0.5084 ) }
    dend_35 { pt3dadd( 348.502, 293.015, 18.8299, 0.6102 ) }
    dend_35 { pt3dadd( 348.155, 294.064, 19.0266, 0.6356 ) }
    dend_35 { pt3dadd( 347.685, 295.096, 19.2409, 0.7372 ) }
    dend_35 { pt3dadd( 347.02, 296.023, 19.4197, 0.788 ) }
    dend_35 { pt3dadd( 346.196, 296.809, 19.5709, 0.7626 ) }
    dend_35 { pt3dadd( 345.277, 297.459, 19.712, 0.661 ) }
    dend_35 { pt3dadd( 344.37, 298.146, 19.7874, 0.5592 ) }
    dend_35 { pt3dadd( 343.66, 299.038, 19.7457, 0.5338 ) }
    dend_35 { pt3dadd( 343.048, 299.99, 19.5538, 0.5592 ) }
    dend_35 { pt3dadd( 342.232, 300.667, 19.1554, 0.5338 ) }
    dend_35 { pt3dadd( 341.19, 300.895, 18.6115, 0.5592 ) }
    dend_35 { pt3dadd( 340.101, 301.117, 18.0237, 0.5592 ) }
    dend_35 { pt3dadd( 339.15, 301.728, 17.4777, 0.6356 ) }
    dend_35 { pt3dadd( 338.648, 302.709, 16.9474, 0.6356 ) }
    dend_35 { pt3dadd( 338.223, 303.706, 16.4264, 0.5848 ) }
    dend_35 { pt3dadd( 337.819, 304.767, 16.0175, 0.5338 ) }
    dend_35 { pt3dadd( 337.475, 305.841, 15.8093, 0.5338 ) }
    dend_35 { pt3dadd( 336.927, 306.839, 15.7183, 0.6102 ) }
    dend_35 { pt3dadd( 336.286, 307.767, 15.5969, 0.6102 ) }
    dend_35 { pt3dadd( 335.619, 308.683, 15.4605, 0.5338 ) }
    dend_35 { pt3dadd( 335.121, 309.713, 15.3654, 0.4322 ) }
    dend_35 { pt3dadd( 334.906, 310.81, 15.3535, 0.4576 ) }
    dend_35 { pt3dadd( 334.555, 311.896, 15.2821, 0.5338 ) }
    dend_35 { pt3dadd( 334.017, 312.868, 15.1025, 0.661 ) }
    dend_35 { pt3dadd( 333.602, 313.885, 14.8425, 0.6864 ) }
    dend_35 { pt3dadd( 333.261, 314.971, 14.5987, 0.7626 ) }
    dend_35 { pt3dadd( 332.846, 316.037, 14.4094, 0.6864 ) }
    dend_35 { pt3dadd( 332.689, 317.169, 14.2889, 0.6102 ) }
    dend_35 { pt3dadd( 332.668, 318.29, 14.3083, 0.483 ) }
    dend_35 { pt3dadd( 332.623, 319.432, 14.3334, 0.5084 ) }
    dend_35 { pt3dadd( 332.355, 320.527, 14.3034, 0.5592 ) }
    dend_35 { pt3dadd( 332.016, 321.62, 14.2984, 0.6102 ) }
    dend_35 { pt3dadd( 331.66, 322.707, 14.3144, 0.5848 ) }
    dend_35 { pt3dadd( 331.219, 323.762, 14.3482, 0.6102 ) }
    dend_35 { pt3dadd( 330.817, 324.833, 14.4005, 0.5848 ) }
    dend_35 { pt3dadd( 330.513, 325.935, 14.4959, 0.6102 ) }
    dend_35 { pt3dadd( 330.845, 326.955, 15.12, 0.5084 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 44/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 347.368, 288.853, 28.8207, 0.788 ) }
    dend_32 { pt3dadd( 346.288, 288.658, 28.8291, 0.9152 ) }
    dend_32 { pt3dadd( 345.173, 288.415, 28.8277, 0.839 ) }
    dend_32 { pt3dadd( 344.051, 288.332, 28.7148, 0.7372 ) }
    dend_32 { pt3dadd( 343.01, 288.672, 28.4906, 0.7626 ) }
    dend_32 { pt3dadd( 342.072, 289.29, 28.1842, 0.839 ) }
    dend_32 { pt3dadd( 341.073, 289.723, 27.7932, 0.788 ) }
    dend_32 { pt3dadd( 339.984, 289.799, 27.3573, 0.7372 ) }
    dend_32 { pt3dadd( 338.863, 289.659, 26.9817, 0.7626 ) }
    dend_32 { pt3dadd( 337.732, 289.496, 26.7169, 0.8898 ) }
    dend_32 { pt3dadd( 336.593, 289.378, 26.558, 0.9152 ) }
    dend_32 { pt3dadd( 335.467, 289.193, 26.487, 0.8644 ) }
    dend_32 { pt3dadd( 334.373, 288.862, 26.4862, 0.7118 ) }
    dend_32 { pt3dadd( 333.296, 288.477, 26.5269, 0.5592 ) }
    dend_32 { pt3dadd( 332.174, 288.344, 26.592, 0.4576 ) }
    dend_32 { pt3dadd( 331.244, 288.879, 26.7326, 0.4322 ) }
    dend_32 { pt3dadd( 330.842, 289.893, 26.9643, 0.5084 ) }
    dend_32 { pt3dadd( 330.472, 290.967, 27.2215, 0.5592 ) }
    dend_32 { pt3dadd( 329.667, 291.75, 27.4652, 0.7118 ) }
    dend_32 { pt3dadd( 328.586, 292.09, 27.6957, 0.839 ) }
    dend_32 { pt3dadd( 327.447, 292.172, 27.9199, 0.9406 ) }
    dend_32 { pt3dadd( 326.305, 292.194, 28.1576, 0.8898 ) }
    dend_32 { pt3dadd( 325.208, 292.273, 28.4894, 0.7626 ) }
    dend_32 { pt3dadd( 324.242, 292.604, 28.9624, 0.661 ) }
    dend_32 { pt3dadd( 323.365, 293.25, 29.4666, 0.6356 ) }
    dend_32 { pt3dadd( 322.49, 293.98, 29.8575, 0.7118 ) }
    dend_32 { pt3dadd( 321.55, 294.609, 30.0826, 0.788 ) }
    dend_32 { pt3dadd( 320.555, 295.16, 30.1949, 0.8136 ) }
    dend_32 { pt3dadd( 319.595, 295.78, 30.2786, 0.7626 ) }
    dend_32 { pt3dadd( 318.709, 296.487, 30.4016, 0.7372 ) }
    dend_32 { pt3dadd( 317.775, 297.145, 30.5343, 0.788 ) }
    dend_32 { pt3dadd( 316.742, 297.626, 30.716, 0.9152 ) }
    dend_32 { pt3dadd( 315.714, 298.052, 30.9991, 0.9914 ) }
    dend_32 { pt3dadd( 314.704, 298.542, 31.3233, 0.966 ) }
    dend_32 { pt3dadd( 313.702, 299.087, 31.6106, 0.8136 ) }
    dend_32 { pt3dadd( 312.752, 299.726, 31.8354, 0.6864 ) }
    dend_32 { pt3dadd( 311.759, 300.293, 32.0104, 0.6356 ) }
    dend_32 { pt3dadd( 310.734, 300.8, 32.156, 0.6356 ) }
    dend_32 { pt3dadd( 309.832, 301.461, 32.3492, 0.6356 ) }
    dend_32 { pt3dadd( 309.101, 302.339, 32.5136, 0.5848 ) }
    dend_32 { pt3dadd( 308.085, 302.804, 32.578, 0.5848 ) }
    dend_32 { pt3dadd( 306.976, 303.086, 32.6617, 0.6102 ) }
    dend_32 { pt3dadd( 305.869, 303.179, 32.8619, 0.7118 ) }
    dend_32 { pt3dadd( 304.744, 303.337, 33.1047, 0.8644 ) }
    dend_32 { pt3dadd( 303.631, 303.589, 33.3662, 0.9152 ) }
    dend_32 { pt3dadd( 302.502, 303.772, 33.6146, 0.8644 ) }
    dend_32 { pt3dadd( 301.419, 304.042, 33.9528, 0.661 ) }
    dend_32 { pt3dadd( 300.303, 304.234, 34.3137, 0.5338 ) }
    dend_32 { pt3dadd( 299.298, 304.717, 34.7175, 0.4322 ) }
    dend_32 { pt3dadd( 298.455, 305.477, 35.1254, 0.4068 ) }
    dend_32 { pt3dadd( 297.536, 306.157, 35.4922, 0.4322 ) }
    dend_32 { pt3dadd( 296.393, 306.188, 35.8364, 0.483 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 350.542, 293.387, 24.3316, 0.4322 ) }
    dend_25 { pt3dadd( 350.581, 294.455, 25.2918, 0.6356 ) }
    dend_25 { pt3dadd( 350.86, 295.563, 26.0324, 0.788 ) }
    dend_25 { pt3dadd( 350.977, 296.701, 26.5367, 0.9406 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( 350.98, 297.844, 26.8116, 1.0424 ) }
    dend_25 { pt3dadd( 350.983, 298.965, 26.813, 1.1186 ) }
    dend_25 { pt3dadd( 351.002, 300.093, 26.6, 1.0932 ) }
    dend_25 { pt3dadd( 351.121, 301.231, 26.3844, 0.9914 ) }
    dend_25 { pt3dadd( 351.616, 302.262, 26.1876, 0.788 ) }
    dend_25 { pt3dadd( 352.352, 303.138, 26.0063, 0.6356 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 6/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 354.895, 287.03, 29.4893, 0.5848 ) }
    dend_16 { pt3dadd( 355.693, 286.212, 29.0242, 0.661 ) }
    dend_16 { pt3dadd( 356.53, 285.508, 28.7806, 0.8136 ) }
    dend_16 { pt3dadd( 357.446, 284.96, 28.4206, 0.9914 ) }
    dend_16 { pt3dadd( 358.472, 284.466, 28.1025, 1.0932 ) }
    dend_16 { pt3dadd( 359.542, 284.06, 27.8718, 1.0168 ) }
    dend_16 { pt3dadd( 360.68, 283.949, 27.7296, 0.9152 ) }
    dend_16 { pt3dadd( 361.824, 283.927, 27.6724, 0.8644 ) }
    dend_16 { pt3dadd( 362.965, 283.853, 27.6959, 0.9152 ) }
    dend_16 { pt3dadd( 364.061, 283.526, 27.7784, 0.9152 ) }
    dend_16 { pt3dadd( 365.125, 283.121, 27.9261, 0.8644 ) }
    dend_16 { pt3dadd( 366.119, 282.612, 28.1602, 0.788 ) }
    dend_16 { pt3dadd( 367.05, 281.95, 28.3884, 0.788 ) }
    dend_16 { pt3dadd( 367.811, 281.097, 28.5886, 0.788 ) }
    dend_16 { pt3dadd( 368.458, 280.155, 28.7792, 0.7118 ) }
    dend_16 { pt3dadd( 369.059, 279.208, 29.0186, 0.6102 ) }
    dend_16 { pt3dadd( 369.765, 278.316, 29.164, 0.5084 ) }
    dend_16 { pt3dadd( 370.574, 277.507, 29.2701, 0.5084 ) }
    dend_16 { pt3dadd( 371.365, 276.736, 29.4638, 0.5592 ) }
    dend_16 { pt3dadd( 372.426, 276.42, 29.7139, 0.6102 ) }
    dend_16 { pt3dadd( 373.362, 275.763, 29.9023, 0.6102 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 27/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 351.473, 284.738, 22.9424, 0.9152 ) }
    dend_5 { pt3dadd( 351.683, 283.614, 22.7894, 1.144 ) }
    dend_5 { pt3dadd( 351.845, 282.482, 22.7384, 1.322 ) }
    dend_5 { pt3dadd( 351.611, 281.365, 22.6611, 1.3728 ) }
    dend_5 { pt3dadd( 350.819, 279.266, 22.4655, 1.2966 ) }
    dend_5 { pt3dadd( 350.488, 278.172, 22.3164, 1.1694 ) }
    dend_5 { pt3dadd( 350.168, 277.077, 22.1886, 0.9914 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 34/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 355.749, 290.589, 20.9126, 0.5592 ) }
    dend_0 { pt3dadd( 356.876, 290.718, 20.4691, 0.7118 ) }
    dend_0 { pt3dadd( 358.004, 290.597, 20.2896, 0.8898 ) }
    dend_0 { pt3dadd( 359.072, 290.237, 20.0491, 1.0168 ) }
    dend_0 { pt3dadd( 360.056, 289.697, 19.755, 1.0424 ) }
    dend_0 { pt3dadd( 360.973, 289.049, 19.433, 0.966 ) }
    dend_0 { pt3dadd( 361.904, 288.406, 19.1209, 0.8136 ) }
    dend_0 { pt3dadd( 362.965, 288.018, 18.868, 0.7118 ) }
    dend_0 { pt3dadd( 364.068, 288.181, 18.6929, 0.7118 ) }
    dend_0 { pt3dadd( 365.05, 288.746, 18.5885, 0.8644 ) }
    dend_0 { pt3dadd( 365.969, 289.427, 18.5385, 0.966 ) }
    dend_0 { pt3dadd( 366.877, 290.123, 18.5257, 1.0168 ) }
    dend_0 { pt3dadd( 367.829, 290.757, 18.5347, 0.966 ) }
    dend_0 { pt3dadd( 368.792, 291.373, 18.5557, 0.9152 ) }
    dend_0 { pt3dadd( 369.702, 292.065, 18.5864, 0.8898 ) }
    dend_0 { pt3dadd( 370.617, 292.752, 18.6287, 0.8898 ) }
    dend_0 { pt3dadd( 371.562, 293.396, 18.6848, 0.8898 ) }
    dend_0 { pt3dadd( 372.504, 294.045, 18.7653, 0.7626 ) }
    dend_0 { pt3dadd( 373.47, 294.638, 18.8913, 0.5592 ) }
    dend_0 { pt3dadd( 374.464, 295.17, 19.0616, 0.3814 ) }
    dend_0 { pt3dadd( 375.306, 295.922, 19.2306, 0.356 ) }
    dend_0 { pt3dadd( 375.869, 296.907, 19.3336, 0.4576 ) }
    dend_0 { pt3dadd( 376.391, 297.907, 19.3339, 0.5338 ) }
    dend_0 { pt3dadd( 376.876, 298.928, 19.2638, 0.5592 ) }
    dend_0 { pt3dadd( 377.384, 299.95, 19.2238, 0.5338 ) }
    dend_0 { pt3dadd( 378.108, 300.808, 19.268, 0.6102 ) }
    dend_0 { pt3dadd( 379.02, 301.486, 19.3547, 0.6864 ) }
    dend_0 { pt3dadd( 379.968, 302.125, 19.4485, 0.7626 ) }
    dend_0 { pt3dadd( 380.871, 302.827, 19.5391, 0.7372 ) }
    dend_0 { pt3dadd( 381.761, 303.546, 19.6177, 0.7118 ) }
    dend_0 { pt3dadd( 382.653, 304.262, 19.6767, 0.6864 ) }
    dend_0 { pt3dadd( 383.515, 305.009, 19.7049, 0.6864 ) }
    dend_0 { pt3dadd( 384.41, 305.718, 19.7428, 0.661 ) }
    dend_0 { pt3dadd( 385.364, 306.338, 19.8555, 0.6356 ) }
    dend_0 { pt3dadd( 386.296, 306.971, 20.0607, 0.5848 ) }
    dend_0 { pt3dadd( 387.195, 307.631, 20.3484, 0.5848 ) }
    dend_0 { pt3dadd( 388.066, 308.325, 20.6891, 0.5848 ) }
    dend_0 { pt3dadd( 388.859, 309.13, 21.0224, 0.6356 ) }
    dend_0 { pt3dadd( 389.572, 310.019, 21.2497, 0.661 ) }
    dend_0 { pt3dadd( 390.286, 310.901, 21.3505, 0.7118 ) }
    dend_0 { pt3dadd( 390.987, 311.802, 21.4191, 0.7626 ) }
    dend_0 { pt3dadd( 391.612, 312.748, 21.5134, 0.8136 ) }
    dend_0 { pt3dadd( 392.272, 313.677, 21.6101, 0.839 ) }
    dend_0 { pt3dadd( 393.025, 314.537, 21.6917, 0.8136 ) }
    dend_0 { pt3dadd( 393.808, 315.371, 21.7626, 0.7626 ) }
    dend_0 { pt3dadd( 394.53, 316.258, 21.8216, 0.7118 ) }
    dend_0 { pt3dadd( 395.095, 317.251, 21.8605, 0.6864 ) }
    dend_0 { pt3dadd( 395.52, 318.309, 21.8647, 0.7118 ) }
    dend_0 { pt3dadd( 395.862, 319.399, 21.8695, 0.7118 ) }
    dend_0 { pt3dadd( 396.353, 320.427, 21.9364, 0.7372 ) }
    dend_0 { pt3dadd( 397.056, 321.323, 22.0604, 0.6864 ) }
    dend_0 { pt3dadd( 397.809, 322.182, 22.2262, 0.661 ) }
    dend_0 { pt3dadd( 398.359, 323.164, 22.4757, 0.6102 ) }
    dend_0 { pt3dadd( 398.592, 324.269, 22.78, 0.6864 ) }
    dend_0 { pt3dadd( 398.813, 325.39, 23.0812, 0.7372 ) }
    dend_0 { pt3dadd( 398.984, 326.522, 23.3702, 0.7626 ) }
    dend_0 { pt3dadd( 399.08, 327.652, 23.6955, 0.7118 ) }
    dend_0 { pt3dadd( 399.392, 328.724, 24.0812, 0.7118 ) }
    dend_0 { pt3dadd( 400.176, 329.49, 24.5257, 0.7372 ) }
    dend_0 { pt3dadd( 401.148, 329.964, 25.0298, 0.7372 ) }
    dend_0 { pt3dadd( 402.085, 330.577, 25.5158, 0.7118 ) }
    dend_0 { pt3dadd( 402.942, 331.332, 25.9018, 0.6864 ) }
    dend_0 { pt3dadd( 403.774, 332.116, 26.1763, 0.661 ) }
    dend_0 { pt3dadd( 404.676, 332.81, 26.3907, 0.5848 ) }
    dend_0 { pt3dadd( 405.523, 333.568, 26.5622, 0.483 ) }
    dend_0 { pt3dadd( 406.041, 334.564, 26.5886, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 406.685, 335.508, 26.5773, 0.4068 ) }
    dend_0 { pt3dadd( 407.435, 336.371, 26.5761, 0.4068 ) }
    dend_0 { pt3dadd( 407.978, 337.378, 26.5966, 0.4576 ) }
    dend_0 { pt3dadd( 407.819, 338.509, 26.6472, 0.483 ) }
    dend_0 { pt3dadd( 407.505, 339.609, 26.7432, 0.5848 ) }
    dend_0 { pt3dadd( 407.485, 340.753, 26.9025, 0.6102 ) }
    dend_0 { pt3dadd( 407.909, 341.815, 27.1275, 0.7118 ) }
    dend_0 { pt3dadd( 408.221, 342.889, 27.4826, 0.7372 ) }
    dend_0 { pt3dadd( 408.551, 343.963, 27.93, 0.7626 ) }
    dend_0 { pt3dadd( 409.054, 344.895, 28.5214, 0.4576 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 10/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 363.12, 316.606, 21.84, 1.0 ) }
    axon_1 { pt3dadd( 368.961, 330.422, 21.84, 1.0 ) }
    axon_1 { pt3dadd( 374.802, 344.238, 21.84, 1.0 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 13/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 296.393, 306.188, 35.8364, 0.483 ) }
    dend_34 { pt3dadd( 295.512, 307.117, 36.4451, 0.3814 ) }
    dend_34 { pt3dadd( 294.988, 308.028, 37.7611, 0.356 ) }
    dend_34 { pt3dadd( 294.208, 308.85, 38.2402, 0.3304 ) }
    dend_34 { pt3dadd( 293.223, 308.861, 38.9116, 0.4068 ) }
    dend_34 { pt3dadd( 292.121, 308.731, 39.6018, 0.483 ) }
    dend_34 { pt3dadd( 291.086, 308.699, 40.3455, 0.5338 ) }
    dend_34 { pt3dadd( 290.273, 309.307, 41.099, 0.483 ) }
    dend_34 { pt3dadd( 289.173, 309.192, 41.657, 0.4322 ) }
    dend_34 { pt3dadd( 288.131, 309.172, 41.9994, 0.356 ) }
    dend_34 { pt3dadd( 287.019, 309.26, 42.3696, 0.3814 ) }
    dend_34 { pt3dadd( 286.181, 309.688, 42.8476, 0.4068 ) }
    dend_34 { pt3dadd( 285.518, 310.375, 43.4552, 0.4576 ) }
    dend_34 { pt3dadd( 284.629, 310.979, 44.0706, 0.4576 ) }
    dend_34 { pt3dadd( 283.749, 311.663, 44.5256, 0.483 ) }
    dend_34 { pt3dadd( 282.764, 312.154, 44.9414, 0.5084 ) }
    dend_34 { pt3dadd( 281.897, 312.684, 45.1161, 0.5592 ) }
    dend_34 { pt3dadd( 280.869, 313.09, 45.2525, 0.6102 ) }
    dend_34 { pt3dadd( 279.933, 313.62, 45.5179, 0.6356 ) }
    dend_34 { pt3dadd( 279.043, 314.007, 45.9934, 0.5592 ) }
    dend_34 { pt3dadd( 277.93, 314.056, 46.4876, 0.4322 ) }
    dend_34 { pt3dadd( 276.816, 314.074, 46.8331, 0.3814 ) }
    dend_34 { pt3dadd( 275.919, 313.529, 47.3004, 0.4322 ) }
    dend_34 { pt3dadd( 274.94, 313.066, 47.5989, 0.483 ) }
    dend_34 { pt3dadd( 273.94, 313.146, 48.0357, 0.4322 ) }
    dend_34 { pt3dadd( 272.908, 313.521, 48.475, 0.3814 ) }
    dend_34 { pt3dadd( 271.781, 313.457, 48.8222, 0.4068 ) }
    dend_34 { pt3dadd( 270.678, 313.224, 49.2058, 0.483 ) }
    dend_34 { pt3dadd( 269.584, 313.148, 49.6185, 0.483 ) }
    dend_34 { pt3dadd( 268.601, 313.324, 50.1396, 0.3814 ) }
    dend_34 { pt3dadd( 267.593, 313.445, 50.6512, 0.305 ) }
    dend_34 { pt3dadd( 266.478, 313.323, 50.9894, 0.3304 ) }
    dend_34 { pt3dadd( 265.47, 313.041, 51.0835, 0.4322 ) }
    dend_34 { pt3dadd( 264.51, 312.576, 51.1283, 0.483 ) }
    dend_34 { pt3dadd( 263.577, 312.008, 51.1336, 0.4322 ) }
    dend_34 { pt3dadd( 262.879, 311.166, 51.221, 0.356 ) }
    dend_34 { pt3dadd( 261.907, 310.661, 51.4458, 0.356 ) }
    dend_34 { pt3dadd( 260.944, 310.104, 51.8675, 0.4068 ) }
    dend_34 { pt3dadd( 260.042, 309.487, 52.4899, 0.4576 ) }
    dend_34 { pt3dadd( 259.043, 309.383, 53.3098, 0.483 ) }
    dend_34 { pt3dadd( 257.967, 309.552, 54.1873, 0.5084 ) }
    dend_34 { pt3dadd( 257.199, 309.6, 55.2384, 0.5084 ) }
    dend_34 { pt3dadd( 256.806, 309.795, 56.4281, 0.4068 ) }
    dend_34 { pt3dadd( 255.668, 309.794, 57.3538, 0.356 ) }
    dend_34 { pt3dadd( 254.535, 309.755, 57.988, 0.3304 ) }
    dend_34 { pt3dadd( 253.502, 309.45, 58.2884, 0.4068 ) }
    dend_34 { pt3dadd( 252.447, 309.124, 58.4424, 0.4322 ) }
    dend_34 { pt3dadd( 251.455, 309.556, 58.5782, 0.4576 ) }
    dend_34 { pt3dadd( 250.673, 310.209, 58.9176, 0.4576 ) }
    dend_34 { pt3dadd( 249.66, 310.426, 59.4051, 0.4068 ) }
    dend_34 { pt3dadd( 248.726, 310.536, 59.9936, 0.356 ) }
    dend_34 { pt3dadd( 247.93, 310.893, 60.8191, 0.2796 ) }
    dend_34 { pt3dadd( 246.948, 311.346, 61.5863, 0.2796 ) }
    dend_34 { pt3dadd( 245.988, 311.924, 62.26, 0.2796 ) }
    dend_34 { pt3dadd( 245.143, 312.533, 63.0053, 0.305 ) }
    dend_34 { pt3dadd( 244.448, 312.991, 63.9167, 0.2796 ) }
    dend_34 { pt3dadd( 243.346, 313.219, 64.7013, 0.2542 ) }
    dend_34 { pt3dadd( 242.663, 313.983, 65.5116, 0.2288 ) }
    dend_34 { pt3dadd( 241.816, 314.621, 66.3012, 0.2288 ) }
    dend_34 { pt3dadd( 240.938, 315.349, 66.9306, 0.2288 ) }
    dend_34 { pt3dadd( 240.1, 316.126, 67.4094, 0.2288 ) }
    dend_34 { pt3dadd( 239.229, 316.802, 67.8415, 0.2288 ) }
    dend_34 { pt3dadd( 238.344, 317.395, 68.3068, 0.2542 ) }
    dend_34 { pt3dadd( 237.555, 318.214, 68.6767, 0.2796 ) }
    dend_34 { pt3dadd( 236.703, 318.817, 69.071, 0.305 ) }
    dend_34 { pt3dadd( 235.666, 319.183, 69.4184, 0.2796 ) }
    dend_34 { pt3dadd( 234.688, 319.746, 69.6245, 0.2542 ) }
    dend_34 { pt3dadd( 233.731, 320.318, 69.7533, 0.2542 ) }
    dend_34 { pt3dadd( 232.732, 320.751, 69.8102, 0.305 ) }
    dend_34 { pt3dadd( 231.705, 321.149, 69.6562, 0.3814 ) }
    dend_34 { pt3dadd( 230.622, 321.397, 69.2712, 0.4068 ) }
    dend_34 { pt3dadd( 229.816, 321.819, 68.6073, 0.3814 ) }
    dend_34 { pt3dadd( 229.164, 322.246, 67.69, 0.3304 ) }
    dend_34 { pt3dadd( 228.342, 322.494, 65.24, 0.305 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 296.393, 306.188, 35.8364, 0.483 ) }
    dend_33 { pt3dadd( 295.547, 307.118, 36.2449, 0.4576 ) }
    dend_33 { pt3dadd( 295.113, 308.124, 36.7273, 0.661 ) }
    dend_33 { pt3dadd( 294.691, 309.159, 37.2333, 0.788 ) }
    dend_33 { pt3dadd( 294.363, 310.249, 37.7068, 0.8644 ) }
    dend_33 { pt3dadd( 294.089, 311.34, 38.19, 0.7372 ) }
    dend_33 { pt3dadd( 293.909, 312.417, 38.712, 0.6356 ) }
    dend_33 { pt3dadd( 293.974, 313.534, 39.2126, 0.5084 ) }
    dend_33 { pt3dadd( 293.995, 314.677, 39.6301, 0.5084 ) }
    dend_33 { pt3dadd( 293.75, 315.79, 39.9524, 0.5338 ) }
    dend_33 { pt3dadd( 293.333, 316.846, 40.2634, 0.6102 ) }
    dend_33 { pt3dadd( 292.633, 317.663, 40.654, 0.7372 ) }
    dend_33 { pt3dadd( 292.451, 318.683, 41.1631, 0.788 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_33 { pt3dadd( 292.158, 319.717, 41.7077, 0.7626 ) }
    dend_33 { pt3dadd( 292.043, 320.712, 42.3181, 0.5592 ) }
    dend_33 { pt3dadd( 291.957, 321.851, 42.7941, 0.4322 ) }
    dend_33 { pt3dadd( 291.862, 322.827, 43.3378, 0.3304 ) }
    dend_33 { pt3dadd( 291.88, 323.921, 43.7539, 0.3304 ) }
    dend_33 { pt3dadd( 291.906, 325.064, 44.0124, 0.305 ) }
    dend_33 { pt3dadd( 291.654, 326.172, 44.151, 0.356 ) }
    dend_33 { pt3dadd( 290.945, 326.967, 44.3444, 0.4068 ) }
    dend_33 { pt3dadd( 290.09, 327.702, 44.5211, 0.4322 ) }
    dend_33 { pt3dadd( 289.482, 328.186, 44.3307, 0.4068 ) }
    dend_33 { pt3dadd( 288.653, 328.956, 44.137, 0.4068 ) }
    dend_33 { pt3dadd( 287.881, 329.713, 44.1213, 0.4576 ) }
    dend_33 { pt3dadd( 287.199, 330.602, 44.1815, 0.483 ) }
    dend_33 { pt3dadd( 286.535, 331.53, 44.1879, 0.483 ) }
    dend_33 { pt3dadd( 285.838, 332.427, 44.1664, 0.4322 ) }
    dend_33 { pt3dadd( 285.202, 333.323, 44.07, 0.3814 ) }
    dend_33 { pt3dadd( 284.557, 334.247, 43.9986, 0.305 ) }
    dend_33 { pt3dadd( 283.817, 335.058, 44.0401, 0.2796 ) }
    dend_33 { pt3dadd( 282.987, 335.819, 44.091, 0.356 ) }
    dend_33 { pt3dadd( 281.965, 336.328, 44.1277, 0.5084 ) }
    dend_33 { pt3dadd( 280.937, 336.782, 44.1804, 0.6102 ) }
    dend_33 { pt3dadd( 279.833, 337.01, 44.2277, 0.5848 ) }
    dend_33 { pt3dadd( 278.752, 337.313, 44.2084, 0.5084 ) }
    dend_33 { pt3dadd( 277.655, 337.576, 44.2442, 0.4576 ) }
    dend_33 { pt3dadd( 276.545, 337.587, 44.3083, 0.4576 ) }
    dend_33 { pt3dadd( 275.425, 337.379, 44.3344, 0.4322 ) }
    dend_33 { pt3dadd( 274.297, 337.346, 44.3576, 0.4576 ) }
    dend_33 { pt3dadd( 273.187, 337.605, 44.3817, 0.4576 ) }
    dend_33 { pt3dadd( 272.106, 337.954, 44.4293, 0.5084 ) }
    dend_33 { pt3dadd( 270.995, 338.161, 44.5094, 0.5338 ) }
    dend_33 { pt3dadd( 269.87, 338.33, 44.5592, 0.6102 ) }
    dend_33 { pt3dadd( 268.789, 338.102, 44.6034, 0.6102 ) }
    dend_33 { pt3dadd( 267.68, 337.947, 44.6908, 0.5084 ) }
    dend_33 { pt3dadd( 266.641, 337.923, 44.6446, 0.3814 ) }
    dend_33 { pt3dadd( 265.541, 337.871, 44.618, 0.305 ) }
    dend_33 { pt3dadd( 264.544, 338.039, 44.7958, 0.305 ) }
    dend_33 { pt3dadd( 263.462, 338.263, 44.8941, 0.3304 ) }
    dend_33 { pt3dadd( 262.349, 338.443, 45.0369, 0.4322 ) }
    dend_33 { pt3dadd( 261.316, 338.642, 45.3004, 0.5848 ) }
    dend_33 { pt3dadd( 260.182, 338.745, 45.4608, 0.661 ) }
    dend_33 { pt3dadd( 259.111, 338.876, 45.4619, 0.5848 ) }
    dend_33 { pt3dadd( 258.197, 339.412, 45.4888, 0.4068 ) }
    dend_33 { pt3dadd( 257.296, 339.945, 45.3446, 0.305 ) }
    dend_33 { pt3dadd( 256.201, 340.274, 45.1993, 0.2796 ) }
    dend_33 { pt3dadd( 255.121, 340.631, 45.0733, 0.305 ) }
    dend_33 { pt3dadd( 254.074, 341.053, 44.9778, 0.2796 ) }
    dend_33 { pt3dadd( 252.954, 341.264, 44.8501, 0.2542 ) }
    dend_33 { pt3dadd( 251.862, 341.543, 44.7342, 0.2796 ) }
    dend_33 { pt3dadd( 250.796, 341.636, 44.6471, 0.3304 ) }
    dend_33 { pt3dadd( 249.84, 341.347, 44.343, 0.3814 ) }
    dend_33 { pt3dadd( 249.389, 342.273, 43.9496, 0.3304 ) }
    dend_33 { pt3dadd( 248.339, 342.104, 43.5288, 0.305 ) }
    dend_33 { pt3dadd( 247.265, 342.399, 43.2152, 0.2796 ) }
    dend_33 { pt3dadd( 246.36, 343.079, 42.9492, 0.3304 ) }
    dend_33 { pt3dadd( 245.645, 343.955, 42.7689, 0.3304 ) }
    dend_33 { pt3dadd( 244.889, 344.736, 42.6586, 0.3304 ) }
    dend_33 { pt3dadd( 243.955, 345.035, 42.6975, 0.2796 ) }
    dend_33 { pt3dadd( 243.033, 345.477, 42.8274, 0.305 ) }
    dend_33 { pt3dadd( 242.189, 346.012, 42.7448, 0.3304 ) }
    dend_33 { pt3dadd( 241.297, 346.622, 42.5816, 0.3814 ) }
    dend_33 { pt3dadd( 240.238, 346.85, 42.52, 0.3304 ) }
    dend_33 { pt3dadd( 239.121, 347.024, 42.5149, 0.305 ) }
    dend_33 { pt3dadd( 238.018, 347.303, 42.4746, 0.305 ) }
    dend_33 { pt3dadd( 236.891, 347.458, 42.4248, 0.356 ) }
    dend_33 { pt3dadd( 235.842, 347.877, 42.4222, 0.356 ) }
    dend_33 { pt3dadd( 234.924, 348.548, 42.4066, 0.305 ) }
    dend_33 { pt3dadd( 233.923, 349.091, 42.3822, 0.2542 ) }
    dend_33 { pt3dadd( 232.803, 349.301, 42.3679, 0.2288 ) }
    dend_33 { pt3dadd( 231.683, 349.531, 42.3704, 0.2288 ) }
    dend_33 { pt3dadd( 230.542, 349.604, 42.3836, 0.2288 ) }
    dend_33 { pt3dadd( 229.413, 349.773, 42.4206, 0.2288 ) }
    dend_33 { pt3dadd( 228.571, 350.522, 42.56, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 72/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 352.352, 303.138, 26.0063, 0.6356 ) }
    dend_31 { pt3dadd( 352.993, 303.305, 26.9223, 0.5592 ) }
    dend_31 { pt3dadd( 354.086, 303.46, 27.2225, 0.5338 ) }
    dend_31 { pt3dadd( 355.209, 303.321, 27.3319, 0.5084 ) }
    dend_31 { pt3dadd( 356.324, 303.112, 27.4275, 0.4068 ) }
    dend_31 { pt3dadd( 357.293, 303.508, 27.4909, 0.3814 ) }
    dend_31 { pt3dadd( 357.963, 304.41, 27.5406, 0.3814 ) }
    dend_31 { pt3dadd( 358.563, 305.366, 27.6714, 0.4576 ) }
    dend_31 { pt3dadd( 359.346, 306.144, 27.9222, 0.483 ) }
    dend_31 { pt3dadd( 360.274, 306.763, 28.2792, 0.483 ) }
    dend_31 { pt3dadd( 361.16, 307.436, 28.7109, 0.4576 ) }
    dend_31 { pt3dadd( 362.021, 308.148, 29.1894, 0.5592 ) }
    dend_31 { pt3dadd( 362.835, 308.93, 29.6528, 0.6864 ) }
    dend_31 { pt3dadd( 363.431, 309.891, 30.0546, 0.8136 ) }
    dend_31 { pt3dadd( 363.976, 310.887, 30.4301, 0.788 ) }
    dend_31 { pt3dadd( 364.551, 311.865, 30.8034, 0.6864 ) }
    dend_31 { pt3dadd( 364.962, 312.919, 31.1671, 0.5592 ) }
    dend_31 { pt3dadd( 365.012, 314.038, 31.5549, 0.4322 ) }
    dend_31 { pt3dadd( 364.842, 315.153, 31.9936, 0.3814 ) }
    dend_31 { pt3dadd( 365.079, 316.222, 32.473, 0.4322 ) }
    dend_31 { pt3dadd( 365.987, 316.78, 33.0137, 0.5848 ) }
    dend_31 { pt3dadd( 367.039, 316.989, 33.6484, 0.7626 ) }
    dend_31 { pt3dadd( 368.055, 317.315, 34.3636, 0.839 ) }
    dend_31 { pt3dadd( 369.006, 317.899, 35.0647, 0.8898 ) }
    dend_31 { pt3dadd( 369.924, 318.579, 35.7034, 0.8644 ) }
    dend_31 { pt3dadd( 370.806, 319.293, 36.3219, 0.8644 ) }
    dend_31 { pt3dadd( 371.625, 319.989, 37.0093, 0.7626 ) }
    dend_31 { pt3dadd( 372.411, 320.567, 37.819, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_31 { pt3dadd( 373.181, 321.226, 38.694, 0.5592 ) }
    dend_31 { pt3dadd( 373.947, 322.014, 39.531, 0.5848 ) }
    dend_31 { pt3dadd( 374.845, 322.685, 40.2884, 0.661 ) }
    dend_31 { pt3dadd( 375.75, 323.373, 40.9293, 0.6864 ) }
    dend_31 { pt3dadd( 376.607, 324.099, 41.4994, 0.661 ) }
    dend_31 { pt3dadd( 377.447, 324.803, 42.0582, 0.5848 ) }
    dend_31 { pt3dadd( 378.233, 325.624, 42.5496, 0.6102 ) }
    dend_31 { pt3dadd( 378.912, 326.54, 42.9534, 0.6102 ) }
    dend_31 { pt3dadd( 379.508, 327.496, 43.4014, 0.6356 ) }
    dend_31 { pt3dadd( 379.909, 328.542, 43.9116, 0.5592 ) }
    dend_31 { pt3dadd( 380.168, 329.6, 44.5138, 0.483 ) }
    dend_31 { pt3dadd( 380.269, 330.293, 45.3751, 0.4068 ) }
    dend_31 { pt3dadd( 380.45, 331.37, 46.2109, 0.4576 ) }
    dend_31 { pt3dadd( 381.152, 332.259, 46.853, 0.5592 ) }
    dend_31 { pt3dadd( 382.024, 332.948, 47.4715, 0.661 ) }
    dend_31 { pt3dadd( 382.622, 333.811, 48.1228, 0.661 ) }
    dend_31 { pt3dadd( 383.108, 334.845, 48.6212, 0.6356 ) }
    dend_31 { pt3dadd( 383.619, 335.843, 49.0907, 0.6102 ) }
    dend_31 { pt3dadd( 384.231, 336.724, 49.6308, 0.6356 ) }
    dend_31 { pt3dadd( 384.862, 337.599, 50.2074, 0.6864 ) }
    dend_31 { pt3dadd( 385.712, 338.363, 50.6621, 0.7626 ) }
    dend_31 { pt3dadd( 386.544, 339.148, 51.0152, 0.7626 ) }
    dend_31 { pt3dadd( 387.368, 339.926, 51.338, 0.7372 ) }
    dend_31 { pt3dadd( 388.034, 340.707, 51.7096, 0.6102 ) }
    dend_31 { pt3dadd( 388.769, 341.495, 51.863, 0.5592 ) }
    dend_31 { pt3dadd( 389.455, 342.374, 52.0691, 0.4576 ) }
    dend_31 { pt3dadd( 390.345, 343.068, 52.3356, 0.483 ) }
    dend_31 { pt3dadd( 390.72, 344.15, 52.596, 0.483 ) }
    dend_31 { pt3dadd( 391.211, 345.178, 52.8486, 0.5848 ) }
    dend_31 { pt3dadd( 391.972, 346.018, 53.1555, 0.5848 ) }
    dend_31 { pt3dadd( 392.554, 346.886, 53.6432, 0.5338 ) }
    dend_31 { pt3dadd( 393.161, 347.673, 54.2668, 0.3814 ) }
    dend_31 { pt3dadd( 393.958, 348.238, 54.9072, 0.2796 ) }
    dend_31 { pt3dadd( 394.32, 349.054, 55.2395, 0.2542 ) }
    dend_31 { pt3dadd( 395.179, 349.626, 55.638, 0.2796 ) }
    dend_31 { pt3dadd( 396.174, 349.929, 56.1061, 0.305 ) }
    dend_31 { pt3dadd( 396.982, 350.581, 56.4785, 0.305 ) }
    dend_31 { pt3dadd( 397.756, 351.29, 56.688, 0.3304 ) }
    dend_31 { pt3dadd( 398.669, 351.869, 57.0172, 0.356 ) }
    dend_31 { pt3dadd( 399.566, 352.441, 57.5008, 0.356 ) }
    dend_31 { pt3dadd( 400.351, 353.146, 58.0647, 0.3304 ) }
    dend_31 { pt3dadd( 401.163, 353.87, 58.6373, 0.356 ) }
    dend_31 { pt3dadd( 401.945, 354.687, 59.1514, 0.4322 ) }
    dend_31 { pt3dadd( 402.42, 355.71, 59.584, 0.5084 ) }
    dend_31 { pt3dadd( 403.046, 356.471, 60.0463, 0.483 ) }
    dend_31 { pt3dadd( 403.943, 356.653, 60.6099, 0.4068 ) }
    dend_31 { pt3dadd( 404.874, 357.219, 61.0887, 0.305 ) }
    dend_31 { pt3dadd( 405.621, 358.053, 61.3491, 0.305 ) }
    dend_31 { pt3dadd( 406.606, 358.256, 61.3368, 0.3814 ) }
    dend_31 { pt3dadd( 407.725, 358.363, 61.2352, 0.483 ) }
    dend_31 { pt3dadd( 408.74, 358.796, 61.2419, 0.483 ) }
    dend_31 { pt3dadd( 409.693, 359.41, 61.2492, 0.3814 ) }
    dend_31 { pt3dadd( 410.426, 360.273, 61.2878, 0.2796 ) }
    dend_31 { pt3dadd( 411.164, 361.056, 61.4435, 0.2542 ) }
    dend_31 { pt3dadd( 412.196, 361.275, 61.7831, 0.2796 ) }
    dend_31 { pt3dadd( 412.919, 361.684, 62.4067, 0.305 ) }
    dend_31 { pt3dadd( 413.594, 362.282, 63.1025, 0.2796 ) }
    dend_31 { pt3dadd( 414.379, 363.029, 63.5625, 0.2542 ) }
    dend_31 { pt3dadd( 414.874, 364.006, 63.9187, 0.2288 ) }
    dend_31 { pt3dadd( 415.271, 365.034, 64.3168, 0.2288 ) }
    dend_31 { pt3dadd( 415.344, 365.985, 64.8469, 0.2542 ) }
    dend_31 { pt3dadd( 415.012, 366.969, 65.4284, 0.3304 ) }
    dend_31 { pt3dadd( 414.711, 368.037, 65.886, 0.4068 ) }
    dend_31 { pt3dadd( 414.781, 369.101, 66.383, 0.4576 ) }
    dend_31 { pt3dadd( 414.914, 370.21, 66.8755, 0.4068 ) }
    dend_31 { pt3dadd( 414.933, 371.349, 67.2496, 0.3814 ) }
    dend_31 { pt3dadd( 414.965, 372.466, 67.6239, 0.3304 ) }
    dend_31 { pt3dadd( 415.061, 373.602, 67.968, 0.3304 ) }
    dend_31 { pt3dadd( 415.135, 374.742, 68.2912, 0.2796 ) }
    dend_31 { pt3dadd( 415.185, 375.78, 68.7411, 0.2542 ) }
    dend_31 { pt3dadd( 415.254, 376.903, 69.1925, 0.2288 ) }
    dend_31 { pt3dadd( 415.271, 378.047, 69.5904, 0.2288 ) }
    dend_31 { pt3dadd( 415.272, 379.185, 70.0146, 0.2288 ) }
    dend_31 { pt3dadd( 415.267, 380.325, 70.4444, 0.2796 ) }
    dend_31 { pt3dadd( 415.186, 381.466, 70.8403, 0.3814 ) }
    dend_31 { pt3dadd( 415.203, 382.597, 71.2533, 0.483 ) }
    dend_31 { pt3dadd( 415.722, 383.416, 71.8385, 0.5592 ) }
    dend_31 { pt3dadd( 416.187, 384.155, 73.64, 0.5592 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 78/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 352.352, 303.138, 26.0063, 0.6356 ) }
    dend_26 { pt3dadd( 353.334, 304.004, 25.8201, 0.788 ) }
    dend_26 { pt3dadd( 354.341, 304.472, 25.5632, 0.8898 ) }
    dend_26 { pt3dadd( 355.452, 304.634, 25.2748, 0.9152 ) }
    dend_26 { pt3dadd( 356.462, 305.091, 24.9469, 0.9406 ) }
    dend_26 { pt3dadd( 357.287, 305.88, 24.6845, 0.8898 ) }
    dend_26 { pt3dadd( 357.957, 306.808, 24.5162, 0.8898 ) }
    dend_26 { pt3dadd( 358.577, 307.763, 24.4699, 0.966 ) }
    dend_26 { pt3dadd( 359.011, 308.797, 24.5681, 1.0424 ) }
    dend_26 { pt3dadd( 359.534, 309.801, 24.6304, 1.0424 ) }
    dend_26 { pt3dadd( 359.668, 310.856, 24.5772, 0.9406 ) }
    dend_26 { pt3dadd( 359.676, 312.0, 24.5977, 0.8898 ) }
    dend_26 { pt3dadd( 359.689, 313.01, 24.8701, 0.839 ) }
    dend_26 { pt3dadd( 359.765, 314.142, 25.1933, 0.7118 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 92/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 373.362, 275.763, 29.9023, 0.6102 ) }
    dend_22 { pt3dadd( 374.726, 275.201, 30.7149, 0.5848 ) }
    dend_22 { pt3dadd( 375.822, 274.987, 30.2501, 0.5592 ) }
    dend_22 { pt3dadd( 376.882, 275.402, 30.0516, 0.5592 ) }
    dend_22 { pt3dadd( 377.965, 275.751, 29.913, 0.5848 ) }
    dend_22 { pt3dadd( 379.053, 276.1, 29.7738, 0.6102 ) }
    dend_22 { pt3dadd( 380.093, 276.534, 29.5453, 0.6356 ) }
    dend_22 { pt3dadd( 381.024, 277.198, 29.3045, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 381.841, 277.998, 29.0461, 0.6864 ) }
    dend_22 { pt3dadd( 382.614, 278.803, 28.6885, 0.661 ) }
    dend_22 { pt3dadd( 383.261, 279.689, 28.2316, 0.6356 ) }
    dend_22 { pt3dadd( 383.669, 280.559, 27.6205, 0.661 ) }
    dend_22 { pt3dadd( 383.846, 281.681, 27.0984, 0.6864 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 373.362, 275.763, 29.9023, 0.6102 ) }
    dend_17 { pt3dadd( 374.233, 274.928, 29.9048, 0.5592 ) }
    dend_17 { pt3dadd( 374.67, 273.872, 29.8766, 0.5338 ) }
    dend_17 { pt3dadd( 375.104, 272.815, 29.8385, 0.5338 ) }
    dend_17 { pt3dadd( 375.281, 271.719, 29.8558, 0.6356 ) }
    dend_17 { pt3dadd( 375.578, 270.616, 29.804, 0.7118 ) }
    dend_17 { pt3dadd( 375.925, 269.564, 29.6178, 0.7372 ) }
    dend_17 { pt3dadd( 376.407, 268.529, 29.4081, 0.7118 ) }
    dend_17 { pt3dadd( 376.811, 267.487, 29.1021, 0.7372 ) }
    dend_17 { pt3dadd( 377.491, 266.584, 28.7498, 0.7626 ) }
    dend_17 { pt3dadd( 378.3, 265.776, 28.4222, 0.7118 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 16/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 350.168, 277.077, 22.1886, 0.9914 ) }
    dend_7 { pt3dadd( 349.263, 276.103, 22.3548, 0.7626 ) }
    dend_7 { pt3dadd( 348.77, 275.312, 22.4365, 0.661 ) }
    dend_7 { pt3dadd( 347.805, 274.882, 22.4228, 0.6102 ) }
    dend_7 { pt3dadd( 346.964, 274.5, 22.4052, 0.5592 ) }
    dend_7 { pt3dadd( 346.322, 273.744, 22.5201, 0.5592 ) }
    dend_7 { pt3dadd( 345.703, 273.105, 22.6065, 0.6102 ) }
    dend_7 { pt3dadd( 344.837, 272.473, 22.729, 0.6356 ) }
    dend_7 { pt3dadd( 344.481, 272.034, 23.1932, 0.6356 ) }
    dend_7 { pt3dadd( 343.973, 272.172, 23.8954, 0.6356 ) }
    dend_7 { pt3dadd( 343.178, 272.851, 24.4914, 0.661 ) }
    dend_7 { pt3dadd( 342.637, 273.626, 25.0697, 0.661 ) }
    dend_7 { pt3dadd( 341.968, 274.384, 25.3734, 0.6102 ) }
    dend_7 { pt3dadd( 341.387, 275.121, 25.44, 0.5592 ) }
    dend_7 { pt3dadd( 340.876, 275.704, 25.5144, 0.5592 ) }
    dend_7 { pt3dadd( 340.3, 276.39, 25.6556, 0.5848 ) }
    dend_7 { pt3dadd( 339.492, 275.797, 25.8632, 0.6356 ) }
    dend_7 { pt3dadd( 338.666, 275.163, 26.002, 0.661 ) }
    dend_7 { pt3dadd( 337.984, 274.321, 26.1313, 0.6864 ) }
    dend_7 { pt3dadd( 337.175, 274.724, 26.3218, 0.661 ) }
    dend_7 { pt3dadd( 336.582, 275.437, 26.6271, 0.5848 ) }
    dend_7 { pt3dadd( 335.953, 276.156, 26.8472, 0.4576 ) }
    dend_7 { pt3dadd( 335.322, 276.18, 27.1758, 0.356 ) }
    dend_7 { pt3dadd( 334.618, 276.734, 27.3187, 0.4576 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 350.168, 277.077, 22.1886, 0.9914 ) }
    dend_6 { pt3dadd( 350.259, 275.259, 21.7588, 1.1186 ) }
    dend_6 { pt3dadd( 350.588, 274.171, 21.0813, 0.966 ) }
    dend_6 { pt3dadd( 350.991, 273.14, 20.7762, 0.788 ) }
    dend_6 { pt3dadd( 351.418, 272.163, 20.3573, 0.7372 ) }
    dend_6 { pt3dadd( 352.114, 271.324, 19.9035, 0.7372 ) }
    dend_6 { pt3dadd( 353.057, 270.714, 19.489, 0.7626 ) }
    dend_6 { pt3dadd( 354.1, 270.255, 19.188, 0.7626 ) }
    dend_6 { pt3dadd( 355.114, 269.778, 19.0614, 0.7372 ) }
    dend_6 { pt3dadd( 355.988, 269.096, 19.0634, 0.7118 ) }
    dend_6 { pt3dadd( 356.776, 268.294, 19.0198, 0.661 ) }
    dend_6 { pt3dadd( 357.529, 267.46, 18.9287, 0.661 ) }
    dend_6 { pt3dadd( 358.272, 266.593, 18.8485, 0.6864 ) }
    dend_6 { pt3dadd( 359.022, 265.729, 18.7926, 0.7118 ) }
    dend_6 { pt3dadd( 359.645, 264.789, 18.7845, 0.6864 ) }
    dend_6 { pt3dadd( 360.043, 263.732, 18.8382, 0.6102 ) }
    dend_6 { pt3dadd( 360.591, 262.775, 18.8868, 0.5592 ) }
    dend_6 { pt3dadd( 361.414, 261.991, 18.9958, 0.5592 ) }
    dend_6 { pt3dadd( 362.317, 261.381, 19.2089, 0.5592 ) }
    dend_6 { pt3dadd( 363.435, 261.342, 19.4754, 0.5592 ) }
    dend_6 { pt3dadd( 364.491, 261.322, 19.8576, 0.5338 ) }
    dend_6 { pt3dadd( 365.319, 260.808, 20.4216, 0.5084 ) }
    dend_6 { pt3dadd( 366.165, 260.133, 21.0339, 0.5084 ) }
    dend_6 { pt3dadd( 367.198, 259.834, 21.6473, 0.5338 ) }
    dend_6 { pt3dadd( 368.26, 259.761, 22.0806, 0.661 ) }
    dend_6 { pt3dadd( 369.352, 259.573, 22.4321, 0.7118 ) }
    dend_6 { pt3dadd( 370.461, 259.409, 22.8183, 0.7118 ) }
    dend_6 { pt3dadd( 370.953, 258.773, 23.3923, 0.6102 ) }
    dend_6 { pt3dadd( 371.926, 258.758, 24.0705, 0.5848 ) }
    dend_6 { pt3dadd( 373.012, 258.775, 24.6073, 0.5848 ) }
    dend_6 { pt3dadd( 374.03, 258.749, 25.0988, 0.5848 ) }
    dend_6 { pt3dadd( 375.068, 258.989, 25.642, 0.5848 ) }
    dend_6 { pt3dadd( 375.819, 259.72, 26.1032, 0.5338 ) }
    dend_6 { pt3dadd( 376.651, 260.426, 26.4851, 0.5084 ) }
    dend_6 { pt3dadd( 377.711, 260.445, 26.9142, 0.4322 ) }
    dend_6 { pt3dadd( 378.725, 260.175, 27.4206, 0.4322 ) }
    dend_6 { pt3dadd( 379.464, 260.952, 28.0389, 0.4068 ) }
    dend_6 { pt3dadd( 380.092, 261.84, 28.7101, 0.4322 ) }
    dend_6 { pt3dadd( 381.061, 262.251, 29.4025, 0.4068 ) }
    dend_6 { pt3dadd( 382.153, 262.039, 30.1501, 0.4322 ) }
    dend_6 { pt3dadd( 383.209, 261.744, 30.9422, 0.3814 ) }
    dend_6 { pt3dadd( 384.045, 261.101, 31.7999, 0.4068 ) }
    dend_6 { pt3dadd( 384.441, 260.194, 32.7494, 0.3814 ) }
    dend_6 { pt3dadd( 384.314, 259.593, 33.8615, 0.4068 ) }
    dend_6 { pt3dadd( 383.82, 259.967, 35.1058, 0.3304 ) }
    dend_6 { pt3dadd( 382.947, 259.672, 36.1847, 0.2796 ) }
    dend_6 { pt3dadd( 382.6, 258.659, 37.0656, 0.2288 ) }
    dend_6 { pt3dadd( 383.326, 257.821, 37.7695, 0.2542 ) }
    dend_6 { pt3dadd( 384.112, 257.005, 38.2354, 0.3304 ) }
    dend_6 { pt3dadd( 384.576, 256.024, 38.5913, 0.4322 ) }
    dend_6 { pt3dadd( 384.774, 254.919, 38.7061, 0.5084 ) }
    dend_6 { pt3dadd( 385.121, 253.912, 38.617, 0.5338 ) }
    dend_6 { pt3dadd( 385.509, 252.876, 38.5927, 0.5084 ) }
    dend_6 { pt3dadd( 385.912, 251.834, 38.5218, 0.4576 ) }
    dend_6 { pt3dadd( 386.631, 251.028, 38.3155, 0.356 ) }
    dend_6 { pt3dadd( 387.531, 250.364, 38.0769, 0.305 ) }
    dend_6 { pt3dadd( 388.485, 249.85, 37.826, 0.2796 ) }
    dend_6 { pt3dadd( 389.563, 249.488, 37.7012, 0.305 ) }
    dend_6 { pt3dadd( 390.597, 249.067, 37.7502, 0.2796 ) }
    dend_6 { pt3dadd( 391.507, 248.513, 37.9142, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_6 { pt3dadd( 392.268, 247.865, 38.2581, 0.2288 ) }
    dend_6 { pt3dadd( 393.228, 247.434, 38.7248, 0.2542 ) }
    dend_6 { pt3dadd( 394.34, 247.219, 39.1815, 0.2796 ) }
    dend_6 { pt3dadd( 395.405, 247.104, 39.7208, 0.305 ) }
    dend_6 { pt3dadd( 396.189, 247.512, 40.4082, 0.2796 ) }
    dend_6 { pt3dadd( 397.083, 247.439, 41.1788, 0.2542 ) }
    dend_6 { pt3dadd( 397.678, 246.715, 41.9667, 0.2288 ) }
    dend_6 { pt3dadd( 398.666, 246.244, 42.597, 0.2288 ) }
    dend_6 { pt3dadd( 399.485, 246.189, 42.56, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 9/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 409.054, 344.895, 28.5214, 0.4576 ) }
    dend_4 { pt3dadd( 409.603, 344.843, 29.5002, 0.7118 ) }
    dend_4 { pt3dadd( 410.574, 344.773, 31.061, 0.5084 ) }
    dend_4 { pt3dadd( 411.643, 344.85, 31.6778, 0.4068 ) }
    dend_4 { pt3dadd( 412.571, 344.86, 32.4643, 0.4576 ) }
    dend_4 { pt3dadd( 413.418, 344.422, 33.3578, 0.483 ) }
    dend_4 { pt3dadd( 414.494, 344.413, 34.1793, 0.483 ) }
    dend_4 { pt3dadd( 415.502, 344.87, 34.9546, 0.4322 ) }
    dend_4 { pt3dadd( 416.548, 345.204, 35.7042, 0.4576 ) }
    dend_4 { pt3dadd( 417.518, 344.938, 36.2141, 0.483 ) }
    dend_4 { pt3dadd( 418.418, 344.629, 36.8878, 0.5338 ) }
    dend_4 { pt3dadd( 419.298, 344.284, 37.6869, 0.483 ) }
    dend_4 { pt3dadd( 419.88, 343.583, 38.5916, 0.3814 ) }
    dend_4 { pt3dadd( 420.512, 342.81, 39.45, 0.356 ) }
    dend_4 { pt3dadd( 421.557, 342.682, 40.1047, 0.3814 ) }
    dend_4 { pt3dadd( 422.54, 343.178, 40.4998, 0.483 ) }
    dend_4 { pt3dadd( 423.513, 343.743, 40.7893, 0.4322 ) }
    dend_4 { pt3dadd( 424.506, 344.245, 41.0712, 0.4068 ) }
    dend_4 { pt3dadd( 425.465, 344.823, 41.2594, 0.3304 ) }
    dend_4 { pt3dadd( 426.32, 345.306, 41.5391, 0.356 ) }
    dend_4 { pt3dadd( 427.164, 345.707, 42.0638, 0.3304 ) }
    dend_4 { pt3dadd( 427.801, 346.603, 42.5631, 0.3814 ) }
    dend_4 { pt3dadd( 428.72, 346.823, 43.1785, 0.4068 ) }
    dend_4 { pt3dadd( 429.798, 347.126, 43.7133, 0.5084 ) }
    dend_4 { pt3dadd( 430.716, 347.776, 44.24, 0.5848 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 34/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 409.054, 344.895, 28.5214, 0.4576 ) }
    dend_1 { pt3dadd( 409.833, 344.935, 29.2354, 0.4576 ) }
    dend_1 { pt3dadd( 410.912, 344.742, 29.9429, 0.5338 ) }
    dend_1 { pt3dadd( 411.965, 344.305, 30.5323, 0.6356 ) }
    dend_1 { pt3dadd( 412.856, 343.612, 31.0335, 0.6102 ) }
    dend_1 { pt3dadd( 413.79, 343.105, 31.535, 0.5338 ) }
    dend_1 { pt3dadd( 414.93, 343.018, 31.8668, 0.483 ) }
    dend_1 { pt3dadd( 416.043, 343.266, 32.1006, 0.5338 ) }
    dend_1 { pt3dadd( 417.153, 343.42, 32.1625, 0.7118 ) }
    dend_1 { pt3dadd( 418.297, 343.439, 32.1854, 0.8136 ) }
    dend_1 { pt3dadd( 419.44, 343.496, 32.1947, 0.839 ) }
    dend_1 { pt3dadd( 420.548, 343.772, 32.2227, 0.788 ) }
    dend_1 { pt3dadd( 421.672, 343.823, 32.3431, 0.7372 ) }
    dend_1 { pt3dadd( 422.762, 343.558, 32.3792, 0.661 ) }
    dend_1 { pt3dadd( 423.901, 343.467, 32.4587, 0.5848 ) }
    dend_1 { pt3dadd( 424.985, 343.661, 32.65, 0.5592 ) }
    dend_1 { pt3dadd( 425.972, 344.237, 32.8205, 0.5848 ) }
    dend_1 { pt3dadd( 427.044, 344.637, 32.9571, 0.5338 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 52/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 359.765, 314.142, 25.1933, 0.7118 ) }
    dend_30 { pt3dadd( 359.389, 315.135, 23.7034, 0.6864 ) }
    dend_30 { pt3dadd( 358.872, 316.109, 23.4755, 0.7626 ) }
    dend_30 { pt3dadd( 358.361, 317.129, 23.3877, 0.7372 ) }
    dend_30 { pt3dadd( 357.976, 318.205, 23.3478, 0.6356 ) }
    dend_30 { pt3dadd( 357.834, 319.326, 23.3805, 0.5848 ) }
    dend_30 { pt3dadd( 357.717, 320.442, 23.492, 0.5338 ) }
    dend_30 { pt3dadd( 357.399, 321.533, 23.5925, 0.5592 ) }
    dend_30 { pt3dadd( 356.938, 322.579, 23.6518, 0.5084 ) }
    dend_30 { pt3dadd( 356.697, 323.691, 23.6477, 0.5084 ) }
    dend_30 { pt3dadd( 356.997, 324.774, 23.5611, 0.5338 ) }
    dend_30 { pt3dadd( 357.476, 325.787, 23.371, 0.5592 ) }
    dend_30 { pt3dadd( 357.742, 326.867, 23.1043, 0.5084 ) }
    dend_30 { pt3dadd( 357.711, 327.993, 22.8323, 0.4576 ) }
    dend_30 { pt3dadd( 357.744, 329.13, 22.6589, 0.483 ) }
    dend_30 { pt3dadd( 358.241, 330.133, 22.6025, 0.6102 ) }
    dend_30 { pt3dadd( 358.925, 331.047, 22.5776, 0.7118 ) }
    dend_30 { pt3dadd( 359.592, 331.976, 22.551, 0.7626 ) }
    dend_30 { pt3dadd( 360.243, 332.914, 22.4895, 0.7626 ) }
    dend_30 { pt3dadd( 360.798, 333.899, 22.353, 0.7626 ) }
    dend_30 { pt3dadd( 361.31, 334.905, 22.1487, 0.7118 ) }
    dend_30 { pt3dadd( 361.727, 335.963, 21.9352, 0.6864 ) }
    dend_30 { pt3dadd( 362.03, 337.065, 21.7528, 0.6864 ) }
    dend_30 { pt3dadd( 362.307, 338.171, 21.6495, 0.788 ) }
    dend_30 { pt3dadd( 362.657, 339.258, 21.6018, 0.788 ) }
    dend_30 { pt3dadd( 363.087, 340.318, 21.5677, 0.7626 ) }
    dend_30 { pt3dadd( 363.535, 341.371, 21.5216, 0.6356 ) }
    dend_30 { pt3dadd( 363.741, 342.486, 21.4238, 0.6356 ) }
    dend_30 { pt3dadd( 363.66, 343.611, 21.2692, 0.6356 ) }
    dend_30 { pt3dadd( 363.457, 344.733, 21.1149, 0.6864 ) }
    dend_30 { pt3dadd( 363.308, 345.867, 21.0081, 0.6864 ) }
    dend_30 { pt3dadd( 363.348, 347.009, 20.948, 0.661 ) }
    dend_30 { pt3dadd( 363.538, 348.138, 20.9355, 0.661 ) }
    dend_30 { pt3dadd( 363.906, 349.22, 20.9715, 0.6356 ) }
    dend_30 { pt3dadd( 364.312, 350.289, 21.0493, 0.5848 ) }
    dend_30 { pt3dadd( 364.617, 351.389, 21.1816, 0.483 ) }
    dend_30 { pt3dadd( 364.87, 352.487, 21.3915, 0.4322 ) }
    dend_30 { pt3dadd( 365.295, 353.538, 21.6387, 0.483 ) }
    dend_30 { pt3dadd( 365.94, 354.483, 21.8676, 0.5848 ) }
    dend_30 { pt3dadd( 366.646, 355.384, 22.08, 0.661 ) }
    dend_30 { pt3dadd( 367.241, 356.353, 22.3116, 0.6356 ) }
    dend_30 { pt3dadd( 367.712, 357.374, 22.5794, 0.5848 ) }
    dend_30 { pt3dadd( 368.129, 358.434, 22.8335, 0.5084 ) }
    dend_30 { pt3dadd( 368.558, 359.486, 23.0775, 0.5338 ) }
    dend_30 { pt3dadd( 368.974, 360.532, 23.3313, 0.5338 ) }
    dend_30 { pt3dadd( 369.38, 361.597, 23.5342, 0.5848 ) }
    dend_30 { pt3dadd( 369.895, 362.618, 23.6449, 0.5592 ) }
    dend_30 { pt3dadd( 370.555, 363.552, 23.6697, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_30 { pt3dadd( 371.299, 364.42, 23.6153, 0.5338 ) }
    dend_30 { pt3dadd( 372.096, 365.223, 23.4542, 0.5592 ) }
    dend_30 { pt3dadd( 372.907, 366.002, 23.2043, 0.5848 ) }
    dend_30 { pt3dadd( 373.786, 366.732, 22.9555, 0.6102 ) }
    dend_30 { pt3dadd( 374.731, 367.362, 22.6976, 0.6102 ) }
    dend_30 { pt3dadd( 375.613, 368.059, 22.422, 0.5848 ) }
    dend_30 { pt3dadd( 376.267, 368.99, 22.1916, 0.5592 ) }
    dend_30 { pt3dadd( 376.665, 370.062, 22.0355, 0.5084 ) }
    dend_30 { pt3dadd( 377.088, 371.125, 21.9387, 0.5084 ) }
    dend_30 { pt3dadd( 377.662, 372.115, 21.8831, 0.483 ) }
    dend_30 { pt3dadd( 378.185, 373.132, 21.8611, 0.4576 ) }
    dend_30 { pt3dadd( 378.687, 374.16, 21.8611, 0.4322 ) }
    dend_30 { pt3dadd( 379.182, 375.191, 21.8693, 0.4576 ) }
    dend_30 { pt3dadd( 379.641, 376.239, 21.8806, 0.5338 ) }
    dend_30 { pt3dadd( 380.024, 377.316, 21.8967, 0.5338 ) }
    dend_30 { pt3dadd( 380.315, 378.423, 21.9204, 0.4576 ) }
    dend_30 { pt3dadd( 380.552, 379.541, 21.9535, 0.3304 ) }
    dend_30 { pt3dadd( 380.714, 380.673, 21.9971, 0.305 ) }
    dend_30 { pt3dadd( 380.712, 381.815, 22.0416, 0.3304 ) }
    dend_30 { pt3dadd( 380.641, 382.943, 22.1494, 0.3814 ) }
    dend_30 { pt3dadd( 380.907, 384.042, 22.3103, 0.3304 ) }
    dend_30 { pt3dadd( 380.945, 385.172, 22.4419, 0.2796 ) }
    dend_30 { pt3dadd( 380.581, 386.244, 22.5571, 0.2542 ) }
    dend_30 { pt3dadd( 380.753, 387.333, 22.6529, 0.2796 ) }
    dend_30 { pt3dadd( 381.583, 388.063, 22.8535, 0.3304 ) }
    dend_30 { pt3dadd( 382.574, 388.484, 23.1532, 0.3814 ) }
    dend_30 { pt3dadd( 383.126, 389.323, 23.568, 0.483 ) }
    dend_30 { pt3dadd( 383.42, 390.407, 23.9747, 0.5592 ) }
    dend_30 { pt3dadd( 383.881, 391.414, 24.3189, 0.5592 ) }
    dend_30 { pt3dadd( 384.519, 392.331, 24.4698, 0.483 ) }
    dend_30 { pt3dadd( 385.231, 393.205, 24.485, 0.4068 ) }
    dend_30 { pt3dadd( 385.797, 394.156, 24.5256, 0.4068 ) }
    dend_30 { pt3dadd( 386.099, 395.234, 24.61, 0.4322 ) }
    dend_30 { pt3dadd( 386.959, 395.848, 24.5645, 0.4576 ) }
    dend_30 { pt3dadd( 387.885, 396.485, 24.5914, 0.4576 ) }
    dend_30 { pt3dadd( 388.693, 397.276, 24.5917, 0.483 ) }
    dend_30 { pt3dadd( 389.478, 398.104, 24.6325, 0.5338 ) }
    dend_30 { pt3dadd( 390.069, 399.079, 24.7064, 0.6102 ) }
    dend_30 { pt3dadd( 390.625, 400.078, 24.7897, 0.6356 ) }
    dend_30 { pt3dadd( 390.994, 401.159, 24.9181, 0.6356 ) }
    dend_30 { pt3dadd( 391.548, 402.158, 25.0438, 0.5592 ) }
    dend_30 { pt3dadd( 392.184, 403.107, 25.1831, 0.483 ) }
    dend_30 { pt3dadd( 392.724, 404.061, 25.4203, 0.356 ) }
    dend_30 { pt3dadd( 393.211, 405.096, 25.611, 0.2796 ) }
    dend_30 { pt3dadd( 393.677, 406.139, 25.7764, 0.2796 ) }
    dend_30 { pt3dadd( 394.345, 407.064, 25.9454, 0.356 ) }
    dend_30 { pt3dadd( 395.11, 407.911, 26.087, 0.4576 ) }
    dend_30 { pt3dadd( 395.763, 408.848, 26.2372, 0.5084 ) }
    dend_30 { pt3dadd( 396.401, 409.786, 26.4384, 0.5084 ) }
    dend_30 { pt3dadd( 397.072, 410.687, 26.701, 0.483 ) }
    dend_30 { pt3dadd( 397.988, 411.345, 26.9884, 0.4068 ) }
    dend_30 { pt3dadd( 398.75, 412.112, 27.2027, 0.4068 ) }
    dend_30 { pt3dadd( 399.027, 413.165, 27.5419, 0.4322 ) }
    dend_30 { pt3dadd( 399.485, 414.193, 27.9149, 0.5592 ) }
    dend_30 { pt3dadd( 399.956, 415.209, 28.2892, 0.5848 ) }
    dend_30 { pt3dadd( 400.105, 416.303, 28.7123, 0.5338 ) }
    dend_30 { pt3dadd( 400.392, 417.395, 29.0948, 0.3814 ) }
    dend_30 { pt3dadd( 400.924, 418.397, 29.4739, 0.3304 ) }
    dend_30 { pt3dadd( 401.466, 419.372, 29.8236, 0.3304 ) }
    dend_30 { pt3dadd( 402.342, 420.072, 30.2022, 0.3814 ) }
    dend_30 { pt3dadd( 403.148, 420.755, 30.6578, 0.3304 ) }
    dend_30 { pt3dadd( 403.845, 421.531, 31.1646, 0.2796 ) }
    dend_30 { pt3dadd( 404.722, 422.233, 31.6075, 0.2288 ) }
    dend_30 { pt3dadd( 405.276, 423.183, 31.9822, 0.2288 ) }
    dend_30 { pt3dadd( 405.532, 424.275, 32.2742, 0.2288 ) }
    dend_30 { pt3dadd( 405.66, 425.392, 32.4204, 0.2288 ) }
    dend_30 { pt3dadd( 405.641, 426.527, 32.5119, 0.2542 ) }
    dend_30 { pt3dadd( 405.494, 427.636, 32.6634, 0.2796 ) }
    dend_30 { pt3dadd( 405.474, 428.743, 32.8602, 0.305 ) }
    dend_30 { pt3dadd( 405.979, 429.578, 33.173, 0.2796 ) }
    dend_30 { pt3dadd( 406.464, 430.505, 33.5328, 0.2796 ) }
    dend_30 { pt3dadd( 406.904, 431.548, 33.7786, 0.2796 ) }
    dend_30 { pt3dadd( 407.428, 432.557, 33.9478, 0.305 ) }
    dend_30 { pt3dadd( 407.725, 433.639, 34.0138, 0.305 ) }
    dend_30 { pt3dadd( 407.629, 434.761, 34.0844, 0.305 ) }
    dend_30 { pt3dadd( 408.077, 435.77, 34.1916, 0.3304 ) }
    dend_30 { pt3dadd( 408.267, 436.86, 34.1813, 0.3304 ) }
    dend_30 { pt3dadd( 408.633, 437.939, 34.1695, 0.3304 ) }
    dend_30 { pt3dadd( 409.102, 438.878, 34.2625, 0.2796 ) }
    dend_30 { pt3dadd( 408.683, 439.925, 34.3092, 0.2542 ) }
    dend_30 { pt3dadd( 408.275, 440.971, 34.3521, 0.2288 ) }
    dend_30 { pt3dadd( 407.882, 442.03, 34.3249, 0.2288 ) }
    dend_30 { pt3dadd( 407.43, 443.014, 34.2353, 0.2288 ) }
    dend_30 { pt3dadd( 406.945, 443.929, 34.1225, 0.2542 ) }
    dend_30 { pt3dadd( 406.801, 445.021, 34.0939, 0.2796 ) }
    dend_30 { pt3dadd( 406.58, 446.12, 34.0544, 0.305 ) }
    dend_30 { pt3dadd( 406.199, 447.159, 33.927, 0.305 ) }
    dend_30 { pt3dadd( 406.003, 448.228, 33.8086, 0.3304 ) }
    dend_30 { pt3dadd( 406.007, 449.349, 33.775, 0.356 ) }
    dend_30 { pt3dadd( 405.582, 450.32, 33.5846, 0.356 ) }
    dend_30 { pt3dadd( 405.255, 451.401, 33.3875, 0.305 ) }
    dend_30 { pt3dadd( 404.763, 452.391, 33.2864, 0.2542 ) }
    dend_30 { pt3dadd( 404.438, 453.458, 33.0974, 0.2288 ) }
    dend_30 { pt3dadd( 404.014, 454.446, 32.7911, 0.2542 ) }
    dend_30 { pt3dadd( 403.466, 455.371, 32.4411, 0.2796 ) }
    dend_30 { pt3dadd( 402.912, 456.351, 32.2526, 0.305 ) }
    dend_30 { pt3dadd( 402.141, 457.193, 32.1272, 0.3304 ) }
    dend_30 { pt3dadd( 401.268, 457.926, 32.0715, 0.356 ) }
    dend_30 { pt3dadd( 400.351, 458.601, 32.0522, 0.4068 ) }
    dend_30 { pt3dadd( 399.407, 459.223, 32.1157, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( 398.415, 459.731, 32.2311, 0.3814 ) }
    dend_30 { pt3dadd( 397.452, 460.264, 32.3042, 0.3304 ) }
    dend_30 { pt3dadd( 396.393, 460.622, 32.4643, 0.3304 ) }
    dend_30 { pt3dadd( 395.41, 461.175, 32.655, 0.305 ) }
    dend_30 { pt3dadd( 394.492, 461.819, 32.8381, 0.305 ) }
    dend_30 { pt3dadd( 393.494, 462.234, 33.031, 0.305 ) }
    dend_30 { pt3dadd( 392.392, 462.405, 33.6, 0.305 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 7/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 359.765, 314.142, 25.1933, 0.7118 ) }
    dend_27 { pt3dadd( 360.417, 315.417, 25.543, 0.8644 ) }
    dend_27 { pt3dadd( 361.009, 316.353, 25.9927, 0.9406 ) }
    dend_27 { pt3dadd( 361.707, 317.253, 26.4388, 0.9406 ) }
    dend_27 { pt3dadd( 362.124, 318.287, 26.8967, 0.9406 ) }
    dend_27 { pt3dadd( 362.601, 319.313, 27.3148, 1.0168 ) }
    dend_27 { pt3dadd( 363.118, 320.331, 27.6903, 1.0678 ) }
    dend_27 { pt3dadd( 363.621, 321.319, 28.103, 1.0678 ) }
    dend_27 { pt3dadd( 364.144, 322.333, 28.467, 1.0168 ) }
    dend_27 { pt3dadd( 364.695, 323.336, 28.7773, 0.9914 ) }
    dend_27 { pt3dadd( 365.176, 324.371, 29.0671, 0.9914 ) }
    dend_27 { pt3dadd( 365.493, 325.43, 29.4356, 0.9406 ) }
    dend_27 { pt3dadd( 366.102, 326.395, 29.797, 0.8644 ) }
    dend_27 { pt3dadd( 366.993, 327.11, 30.1378, 0.7626 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 383.846, 281.681, 27.0984, 0.6864 ) }
    dend_24 { pt3dadd( 383.462, 282.33, 26.5132, 0.5592 ) }
    dend_24 { pt3dadd( 383.27, 283.373, 26.7523, 0.6102 ) }
    dend_24 { pt3dadd( 383.407, 284.398, 26.9555, 0.661 ) }
    dend_24 { pt3dadd( 383.804, 285.307, 27.3368, 0.6356 ) }
    dend_24 { pt3dadd( 384.034, 286.422, 27.6805, 0.6102 ) }
    dend_24 { pt3dadd( 384.247, 287.542, 27.9536, 0.5338 ) }
    dend_24 { pt3dadd( 384.293, 288.681, 28.1403, 0.5338 ) }
    dend_24 { pt3dadd( 384.274, 289.806, 28.2601, 0.5084 ) }
    dend_24 { pt3dadd( 384.43, 290.903, 28.1781, 0.5338 ) }
    dend_24 { pt3dadd( 384.728, 291.989, 27.9996, 0.483 ) }
    dend_24 { pt3dadd( 384.866, 293.029, 27.7145, 0.4068 ) }
    dend_24 { pt3dadd( 384.901, 294.076, 27.419, 0.4068 ) }
    dend_24 { pt3dadd( 385.041, 294.991, 27.4186, 0.5592 ) }
    dend_24 { pt3dadd( 385.281, 295.904, 27.5957, 0.7626 ) }
    dend_24 { pt3dadd( 385.368, 297.032, 27.7932, 0.8644 ) }
    dend_24 { pt3dadd( 385.33, 298.103, 28.1313, 0.7626 ) }
    dend_24 { pt3dadd( 385.326, 299.221, 28.4452, 0.6356 ) }
    dend_24 { pt3dadd( 385.388, 300.349, 28.7524, 0.5084 ) }
    dend_24 { pt3dadd( 385.213, 301.468, 29.0237, 0.5084 ) }
    dend_24 { pt3dadd( 385.085, 302.591, 29.2886, 0.4576 ) }
    dend_24 { pt3dadd( 385.678, 303.52, 29.4347, 0.4068 ) }
    dend_24 { pt3dadd( 386.424, 304.384, 29.542, 0.305 ) }
    dend_24 { pt3dadd( 387.242, 305.081, 29.7643, 0.305 ) }
    dend_24 { pt3dadd( 388.056, 305.718, 29.9734, 0.3304 ) }
    dend_24 { pt3dadd( 388.736, 306.533, 30.0261, 0.3814 ) }
    dend_24 { pt3dadd( 389.395, 307.453, 30.0684, 0.3304 ) }
    dend_24 { pt3dadd( 390.08, 308.345, 30.0698, 0.3304 ) }
    dend_24 { pt3dadd( 390.845, 308.951, 30.2184, 0.3304 ) }
    dend_24 { pt3dadd( 391.837, 309.222, 30.3635, 0.3814 ) }
    dend_24 { pt3dadd( 392.706, 309.879, 30.5035, 0.3814 ) }
    dend_24 { pt3dadd( 393.721, 310.349, 30.6594, 0.4322 ) }
    dend_24 { pt3dadd( 394.575, 311.028, 30.8694, 0.5592 ) }
    dend_24 { pt3dadd( 395.319, 311.878, 30.9761, 0.6356 ) }
    dend_24 { pt3dadd( 396.121, 312.647, 30.914, 0.6102 ) }
    dend_24 { pt3dadd( 396.841, 313.525, 30.8616, 0.483 ) }
    dend_24 { pt3dadd( 397.479, 314.46, 30.7482, 0.4322 ) }
    dend_24 { pt3dadd( 398.17, 315.371, 30.6334, 0.483 ) }
    dend_24 { pt3dadd( 398.835, 316.257, 30.4419, 0.5338 ) }
    dend_24 { pt3dadd( 399.187, 317.336, 30.3582, 0.5338 ) }
    dend_24 { pt3dadd( 399.6, 318.399, 30.3573, 0.4322 ) }
    dend_24 { pt3dadd( 400.208, 319.368, 30.3814, 0.3304 ) }
    dend_24 { pt3dadd( 400.844, 320.319, 30.429, 0.2542 ) }
    dend_24 { pt3dadd( 401.481, 321.268, 30.4945, 0.305 ) }
    dend_24 { pt3dadd( 402.117, 322.219, 30.5799, 0.4322 ) }
    dend_24 { pt3dadd( 402.754, 323.17, 30.6729, 0.5848 ) }
    dend_24 { pt3dadd( 403.609, 323.929, 30.7832, 0.6356 ) }
    dend_24 { pt3dadd( 404.501, 324.643, 30.9341, 0.5848 ) }
    dend_24 { pt3dadd( 405.378, 325.3, 31.2164, 0.483 ) }
    dend_24 { pt3dadd( 406.225, 326.01, 31.5731, 0.356 ) }
    dend_24 { pt3dadd( 407.015, 326.831, 31.9127, 0.2796 ) }
    dend_24 { pt3dadd( 407.799, 327.658, 32.216, 0.2288 ) }
    dend_24 { pt3dadd( 408.657, 328.414, 32.4512, 0.2542 ) }
    dend_24 { pt3dadd( 409.523, 329.162, 32.6228, 0.2796 ) }
    dend_24 { pt3dadd( 410.362, 329.939, 32.7583, 0.305 ) }
    dend_24 { pt3dadd( 411.196, 330.72, 32.8846, 0.2796 ) }
    dend_24 { pt3dadd( 412.031, 331.5, 33.0212, 0.2542 ) }
    dend_24 { pt3dadd( 412.865, 332.282, 33.1775, 0.2796 ) }
    dend_24 { pt3dadd( 413.516, 333.222, 33.3547, 0.356 ) }
    dend_24 { pt3dadd( 413.94, 334.284, 33.5507, 0.483 ) }
    dend_24 { pt3dadd( 414.381, 335.338, 33.7935, 0.5338 ) }
    dend_24 { pt3dadd( 414.858, 336.37, 34.1093, 0.5592 ) }
    dend_24 { pt3dadd( 415.433, 337.323, 34.5422, 0.483 ) }
    dend_24 { pt3dadd( 416.048, 338.232, 35.089, 0.4322 ) }
    dend_24 { pt3dadd( 416.999, 338.777, 35.7165, 0.3814 ) }
    dend_24 { pt3dadd( 418.054, 339.109, 36.3994, 0.3814 ) }
    dend_24 { pt3dadd( 419.024, 339.634, 37.0992, 0.356 ) }
    dend_24 { pt3dadd( 419.843, 340.374, 37.7801, 0.305 ) }
    dend_24 { pt3dadd( 420.664, 341.115, 38.4188, 0.305 ) }
    dend_24 { pt3dadd( 421.483, 341.855, 39.0046, 0.3814 ) }
    dend_24 { pt3dadd( 422.303, 342.595, 40.14, 0.5084 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 92/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 383.846, 281.681, 27.0984, 0.6864 ) }
    dend_23 { pt3dadd( 383.486, 282.88, 26.703, 0.5848 ) }
    dend_23 { pt3dadd( 383.472, 283.999, 26.4224, 0.5848 ) }
    dend_23 { pt3dadd( 383.894, 285.044, 26.2408, 0.5848 ) }
    dend_23 { pt3dadd( 384.583, 285.95, 26.1198, 0.6356 ) }
    dend_23 { pt3dadd( 385.313, 286.813, 25.9967, 0.6356 ) }
    dend_23 { pt3dadd( 386.005, 287.703, 25.8822, 0.6102 ) }
    dend_23 { pt3dadd( 386.742, 288.564, 25.8335, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( 387.537, 289.38, 25.8024, 0.4576 ) }
    dend_23 { pt3dadd( 388.346, 290.186, 25.733, 0.4322 ) }
    dend_23 { pt3dadd( 389.155, 290.971, 25.5835, 0.4576 ) }
    dend_23 { pt3dadd( 390.011, 291.702, 25.3778, 0.4068 ) }
    dend_23 { pt3dadd( 390.976, 292.303, 25.1586, 0.3814 ) }
    dend_23 { pt3dadd( 392.005, 292.767, 24.9043, 0.3814 ) }
    dend_23 { pt3dadd( 393.027, 293.244, 24.6359, 0.4322 ) }
    dend_23 { pt3dadd( 393.933, 293.924, 24.4331, 0.4322 ) }
    dend_23 { pt3dadd( 394.903, 294.511, 24.297, 0.4068 ) }
    dend_23 { pt3dadd( 395.912, 295.044, 24.2285, 0.3814 ) }
    dend_23 { pt3dadd( 396.808, 295.658, 24.0962, 0.356 ) }
    dend_23 { pt3dadd( 397.686, 296.344, 23.9989, 0.305 ) }
    dend_23 { pt3dadd( 398.694, 296.86, 23.9547, 0.2542 ) }
    dend_23 { pt3dadd( 399.803, 297.122, 23.9351, 0.2796 ) }
    dend_23 { pt3dadd( 400.671, 297.793, 23.9756, 0.3304 ) }
    dend_23 { pt3dadd( 401.559, 298.51, 24.0281, 0.3814 ) }
    dend_23 { pt3dadd( 402.609, 298.922, 24.0464, 0.3814 ) }
    dend_23 { pt3dadd( 403.734, 299.095, 24.0785, 0.3814 ) }
    dend_23 { pt3dadd( 404.833, 299.357, 24.1595, 0.3814 ) }
    dend_23 { pt3dadd( 405.968, 299.368, 24.2396, 0.3304 ) }
    dend_23 { pt3dadd( 407.108, 299.291, 24.2899, 0.2796 ) }
    dend_23 { pt3dadd( 408.252, 299.272, 24.3158, 0.2542 ) }
    dend_23 { pt3dadd( 409.354, 299.301, 24.2245, 0.2796 ) }
    dend_23 { pt3dadd( 410.486, 299.365, 24.0961, 0.3304 ) }
    dend_23 { pt3dadd( 411.628, 299.384, 23.9901, 0.356 ) }
    dend_23 { pt3dadd( 412.77, 299.385, 23.8978, 0.3814 ) }
    dend_23 { pt3dadd( 413.715, 299.831, 23.99, 0.4068 ) }
    dend_23 { pt3dadd( 414.684, 299.796, 24.274, 0.4576 ) }
    dend_23 { pt3dadd( 415.565, 299.148, 24.3526, 0.5338 ) }
    dend_23 { pt3dadd( 416.566, 298.881, 24.1973, 0.5338 ) }
    dend_23 { pt3dadd( 417.618, 298.435, 24.0137, 0.4576 ) }
    dend_23 { pt3dadd( 418.652, 297.951, 23.823, 0.3814 ) }
    dend_23 { pt3dadd( 419.577, 297.303, 23.5683, 0.3814 ) }
    dend_23 { pt3dadd( 420.647, 296.929, 23.3685, 0.483 ) }
    dend_23 { pt3dadd( 421.585, 296.329, 23.1394, 0.5084 ) }
    dend_23 { pt3dadd( 422.467, 295.615, 22.9243, 0.5084 ) }
    dend_23 { pt3dadd( 423.448, 295.05, 22.6891, 0.4576 ) }
    dend_23 { pt3dadd( 424.442, 294.59, 22.5235, 0.483 ) }
    dend_23 { pt3dadd( 425.496, 294.324, 22.4784, 0.5084 ) }
    dend_23 { pt3dadd( 426.554, 294.134, 22.3302, 0.5084 ) }
    dend_23 { pt3dadd( 427.601, 293.943, 22.0971, 0.5084 ) }
    dend_23 { pt3dadd( 428.732, 293.892, 21.9324, 0.5084 ) }
    dend_23 { pt3dadd( 429.865, 294.009, 21.8215, 0.5084 ) }
    dend_23 { pt3dadd( 430.94, 294.216, 21.8337, 0.4576 ) }
    dend_23 { pt3dadd( 431.884, 294.419, 21.6901, 0.4068 ) }
    dend_23 { pt3dadd( 432.91, 294.339, 21.6942, 0.4322 ) }
    dend_23 { pt3dadd( 433.988, 294.005, 21.7332, 0.483 ) }
    dend_23 { pt3dadd( 434.863, 293.301, 21.6985, 0.5338 ) }
    dend_23 { pt3dadd( 435.873, 292.806, 21.6061, 0.483 ) }
    dend_23 { pt3dadd( 436.932, 292.467, 21.641, 0.483 ) }
    dend_23 { pt3dadd( 438.046, 292.631, 21.622, 0.4576 ) }
    dend_23 { pt3dadd( 439.14, 292.771, 21.6288, 0.5084 ) }
    dend_23 { pt3dadd( 440.068, 292.65, 21.8233, 0.4322 ) }
    dend_23 { pt3dadd( 441.169, 292.867, 21.9386, 0.4322 ) }
    dend_23 { pt3dadd( 442.283, 292.926, 22.0365, 0.4322 ) }
    dend_23 { pt3dadd( 443.298, 293.241, 21.97, 0.5338 ) }
    dend_23 { pt3dadd( 444.267, 293.554, 21.7689, 0.5338 ) }
    dend_23 { pt3dadd( 445.35, 293.605, 21.4573, 0.4576 ) }
    dend_23 { pt3dadd( 446.445, 293.617, 21.1003, 0.356 ) }
    dend_23 { pt3dadd( 447.502, 293.278, 20.9028, 0.3304 ) }
    dend_23 { pt3dadd( 448.592, 293.041, 20.8962, 0.356 ) }
    dend_23 { pt3dadd( 449.651, 293.126, 21.1091, 0.4068 ) }
    dend_23 { pt3dadd( 450.554, 292.766, 21.2169, 0.4068 ) }
    dend_23 { pt3dadd( 451.483, 292.196, 21.4248, 0.4322 ) }
    dend_23 { pt3dadd( 452.482, 291.652, 21.6655, 0.4068 ) }
    dend_23 { pt3dadd( 453.594, 291.725, 21.9512, 0.4068 ) }
    dend_23 { pt3dadd( 454.616, 292.205, 22.2321, 0.356 ) }
    dend_23 { pt3dadd( 455.64, 292.704, 22.4816, 0.305 ) }
    dend_23 { pt3dadd( 456.633, 293.26, 22.7162, 0.2542 ) }
    dend_23 { pt3dadd( 457.632, 293.791, 22.914, 0.2796 ) }
    dend_23 { pt3dadd( 458.694, 294.15, 22.9905, 0.4068 ) }
    dend_23 { pt3dadd( 459.454, 294.884, 22.883, 0.5848 ) }
    dend_23 { pt3dadd( 460.263, 295.642, 22.8197, 0.661 ) }
    dend_23 { pt3dadd( 461.344, 295.92, 22.816, 0.6102 ) }
    dend_23 { pt3dadd( 462.461, 295.976, 22.8087, 0.4576 ) }
    dend_23 { pt3dadd( 463.561, 296.043, 22.9081, 0.3814 ) }
    dend_23 { pt3dadd( 464.66, 296.321, 23.0181, 0.3304 ) }
    dend_23 { pt3dadd( 465.717, 296.755, 23.1071, 0.3304 ) }
    dend_23 { pt3dadd( 466.786, 297.159, 23.1294, 0.2796 ) }
    dend_23 { pt3dadd( 467.774, 297.696, 23.0567, 0.305 ) }
    dend_23 { pt3dadd( 468.738, 298.246, 22.9014, 0.3304 ) }
    dend_23 { pt3dadd( 469.672, 298.833, 22.7548, 0.4322 ) }
    dend_23 { pt3dadd( 470.47, 299.596, 22.5798, 0.4322 ) }
    dend_23 { pt3dadd( 471.302, 300.331, 22.3664, 0.4322 ) }
    dend_23 { pt3dadd( 472.163, 301.078, 22.2053, 0.3304 ) }
    dend_23 { pt3dadd( 473.187, 301.509, 22.1012, 0.305 ) }
    dend_23 { pt3dadd( 474.251, 301.884, 22.0403, 0.2796 ) }
    dend_23 { pt3dadd( 475.048, 302.636, 21.9595, 0.305 ) }
    dend_23 { pt3dadd( 475.278, 303.594, 22.009, 0.356 ) }
    dend_23 { pt3dadd( 476.247, 303.961, 22.4, 0.4576 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 90/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 378.3, 265.776, 28.4222, 0.7118 ) }
    dend_21 { pt3dadd( 378.285, 264.763, 29.2594, 0.661 ) }
    dend_21 { pt3dadd( 377.724, 264.005, 30.3187, 0.661 ) }
    dend_21 { pt3dadd( 377.729, 263.071, 30.788, 0.6102 ) }
    dend_21 { pt3dadd( 378.038, 261.99, 31.1242, 0.6102 ) }
    dend_21 { pt3dadd( 378.171, 260.865, 31.3832, 0.5592 ) }
    dend_21 { pt3dadd( 378.296, 259.73, 31.6352, 0.483 ) }
    dend_21 { pt3dadd( 378.478, 258.65, 31.9586, 0.4322 ) }
    dend_21 { pt3dadd( 378.653, 257.553, 32.3036, 0.3304 ) }
    dend_21 { pt3dadd( 378.752, 256.458, 32.5447, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 379.59, 256.367, 32.9756, 0.4576 ) }
    dend_21 { pt3dadd( 380.585, 256.031, 33.5087, 0.6356 ) }
    dend_21 { pt3dadd( 381.499, 255.364, 33.9007, 0.6356 ) }
    dend_21 { pt3dadd( 382.389, 254.66, 34.1729, 0.6102 ) }
    dend_21 { pt3dadd( 383.066, 254.146, 34.6844, 0.5592 ) }
    dend_21 { pt3dadd( 383.934, 253.427, 35.1442, 0.5592 ) }
    dend_21 { pt3dadd( 384.629, 252.571, 35.4217, 0.5592 ) }
    dend_21 { pt3dadd( 385.251, 251.616, 35.6804, 0.4576 ) }
    dend_21 { pt3dadd( 385.791, 250.677, 36.029, 0.4322 ) }
    dend_21 { pt3dadd( 386.568, 250.229, 36.631, 0.3814 ) }
    dend_21 { pt3dadd( 387.165, 249.683, 37.3822, 0.4068 ) }
    dend_21 { pt3dadd( 387.759, 248.734, 38.0848, 0.3814 ) }
    dend_21 { pt3dadd( 388.517, 247.883, 38.6952, 0.4068 ) }
    dend_21 { pt3dadd( 389.337, 247.123, 39.2344, 0.4322 ) }
    dend_21 { pt3dadd( 390.26, 246.514, 39.7281, 0.4068 ) }
    dend_21 { pt3dadd( 391.218, 245.912, 40.1206, 0.3304 ) }
    dend_21 { pt3dadd( 392.068, 245.167, 40.4544, 0.2796 ) }
    dend_21 { pt3dadd( 392.876, 244.592, 40.6129, 0.2796 ) }
    dend_21 { pt3dadd( 393.585, 244.236, 40.9212, 0.356 ) }
    dend_21 { pt3dadd( 394.277, 243.424, 41.2476, 0.3814 ) }
    dend_21 { pt3dadd( 395.054, 242.598, 41.5372, 0.4322 ) }
    dend_21 { pt3dadd( 395.862, 241.909, 41.8874, 0.4068 ) }
    dend_21 { pt3dadd( 396.729, 241.177, 42.1008, 0.4068 ) }
    dend_21 { pt3dadd( 397.808, 240.887, 42.1392, 0.4068 ) }
    dend_21 { pt3dadd( 398.913, 241.041, 41.72, 0.4322 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 25/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 378.3, 265.776, 28.4222, 0.7118 ) }
    dend_18 { pt3dadd( 378.725, 265.363, 28.1056, 0.5592 ) }
    dend_18 { pt3dadd( 379.576, 264.628, 27.7874, 0.5084 ) }
    dend_18 { pt3dadd( 380.549, 264.056, 27.4789, 0.5592 ) }
    dend_18 { pt3dadd( 381.658, 263.912, 27.1748, 0.5848 ) }
    dend_18 { pt3dadd( 382.774, 264.152, 26.9594, 0.7118 ) }
    dend_18 { pt3dadd( 383.869, 264.41, 26.8783, 0.7626 ) }
    dend_18 { pt3dadd( 384.988, 264.635, 26.7988, 0.7626 ) }
    dend_18 { pt3dadd( 386.13, 264.573, 26.7496, 0.6864 ) }
    dend_18 { pt3dadd( 387.247, 264.342, 26.7219, 0.661 ) }
    dend_18 { pt3dadd( 388.372, 264.322, 26.5934, 0.6102 ) }
    dend_18 { pt3dadd( 389.469, 264.557, 26.3706, 0.5592 ) }
    dend_18 { pt3dadd( 390.573, 264.632, 26.0604, 0.4576 ) }
    dend_18 { pt3dadd( 391.634, 264.208, 25.8283, 0.4576 ) }
    dend_18 { pt3dadd( 392.701, 263.811, 25.6794, 0.483 ) }
    dend_18 { pt3dadd( 393.809, 263.715, 25.4693, 0.5592 ) }
    dend_18 { pt3dadd( 394.911, 263.406, 25.3099, 0.5848 ) }
    dend_18 { pt3dadd( 396.054, 263.353, 25.1922, 0.6356 ) }
    dend_18 { pt3dadd( 397.198, 263.369, 25.0973, 0.661 ) }
    dend_18 { pt3dadd( 398.335, 263.492, 25.0018, 0.6864 ) }
    dend_18 { pt3dadd( 399.335, 264.042, 24.892, 0.6864 ) }
    dend_18 { pt3dadd( 400.252, 264.667, 24.7152, 0.6864 ) }
    dend_18 { pt3dadd( 401.092, 265.439, 24.5579, 0.661 ) }
    dend_18 { pt3dadd( 401.862, 266.285, 24.4602, 0.661 ) }
    dend_18 { pt3dadd( 402.466, 267.257, 24.423, 0.6356 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 334.618, 276.734, 27.3187, 0.4576 ) }
    dend_9 { pt3dadd( 335.278, 276.365, 27.4861, 0.5848 ) }
    dend_9 { pt3dadd( 336.207, 276.263, 27.4869, 0.5592 ) }
    dend_9 { pt3dadd( 336.891, 276.347, 27.5699, 0.661 ) }
    dend_9 { pt3dadd( 337.442, 277.199, 27.8153, 0.788 ) }
    dend_9 { pt3dadd( 337.987, 278.2, 28.1319, 0.788 ) }
    dend_9 { pt3dadd( 338.449, 279.229, 28.5544, 0.661 ) }
    dend_9 { pt3dadd( 338.789, 280.239, 29.1119, 0.5084 ) }
    dend_9 { pt3dadd( 338.813, 281.21, 29.8245, 0.4322 ) }
    dend_9 { pt3dadd( 338.272, 282.1, 30.5376, 0.5084 ) }
    dend_9 { pt3dadd( 337.446, 282.876, 31.11, 0.6102 ) }
    dend_9 { pt3dadd( 336.612, 283.658, 31.526, 0.6356 ) }
    dend_9 { pt3dadd( 335.777, 284.441, 31.806, 0.5848 ) }
    dend_9 { pt3dadd( 334.867, 285.133, 31.9707, 0.5338 ) }
    dend_9 { pt3dadd( 333.864, 285.655, 32.0211, 0.6102 ) }
    dend_9 { pt3dadd( 332.878, 286.23, 32.0908, 0.6102 ) }
    dend_9 { pt3dadd( 332.119, 287.029, 32.293, 0.661 ) }
    dend_9 { pt3dadd( 331.585, 287.992, 32.6018, 0.5592 ) }
    dend_9 { pt3dadd( 330.54, 288.412, 32.8933, 0.5848 ) }
    dend_9 { pt3dadd( 329.431, 288.143, 33.1542, 0.5338 ) }
    dend_9 { pt3dadd( 328.338, 288.477, 33.4085, 0.5848 ) }
    dend_9 { pt3dadd( 327.262, 288.789, 33.7243, 0.5338 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 72/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 334.618, 276.734, 27.3187, 0.4576 ) }
    dend_8 { pt3dadd( 334.018, 276.885, 26.6087, 0.4576 ) }
    dend_8 { pt3dadd( 332.922, 277.116, 26.6025, 0.3814 ) }
    dend_8 { pt3dadd( 331.817, 277.063, 26.6595, 0.4068 ) }
    dend_8 { pt3dadd( 330.737, 276.831, 26.7655, 0.483 ) }
    dend_8 { pt3dadd( 329.646, 276.744, 26.7558, 0.483 ) }
    dend_8 { pt3dadd( 328.599, 276.564, 26.641, 0.3814 ) }
    dend_8 { pt3dadd( 327.496, 276.31, 26.6041, 0.305 ) }
    dend_8 { pt3dadd( 326.382, 276.164, 26.7076, 0.3304 ) }
    dend_8 { pt3dadd( 325.266, 276.107, 26.9245, 0.4322 ) }
    dend_8 { pt3dadd( 324.174, 276.065, 27.2738, 0.483 ) }
    dend_8 { pt3dadd( 323.077, 275.976, 27.7104, 0.4576 ) }
    dend_8 { pt3dadd( 321.951, 275.949, 28.128, 0.4576 ) }
    dend_8 { pt3dadd( 320.868, 276.165, 28.4004, 0.5338 ) }
    dend_8 { pt3dadd( 319.852, 276.541, 28.5555, 0.7118 ) }
    dend_8 { pt3dadd( 318.785, 276.706, 28.7605, 0.788 ) }
    dend_8 { pt3dadd( 317.669, 276.621, 28.9965, 0.839 ) }
    dend_8 { pt3dadd( 316.544, 276.521, 29.2023, 0.7626 ) }
    dend_8 { pt3dadd( 315.414, 276.359, 29.3625, 0.788 ) }
    dend_8 { pt3dadd( 314.305, 276.094, 29.5075, 0.7372 ) }
    dend_8 { pt3dadd( 313.298, 275.582, 29.6285, 0.7372 ) }
    dend_8 { pt3dadd( 312.323, 274.999, 29.7618, 0.6102 ) }
    dend_8 { pt3dadd( 311.421, 274.555, 30.0504, 0.5848 ) }
    dend_8 { pt3dadd( 310.455, 274.163, 30.4279, 0.5848 ) }
    dend_8 { pt3dadd( 309.429, 274.037, 30.6051, 0.6864 ) }
    dend_8 { pt3dadd( 308.349, 273.803, 30.6726, 0.7372 ) }
    dend_8 { pt3dadd( 307.255, 273.477, 30.7392, 0.6864 ) }
    dend_8 { pt3dadd( 306.212, 273.206, 30.9126, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( 305.134, 272.893, 31.1063, 0.4576 ) }
    dend_8 { pt3dadd( 304.052, 272.615, 31.341, 0.483 ) }
    dend_8 { pt3dadd( 302.978, 272.727, 31.4003, 0.6102 ) }
    dend_8 { pt3dadd( 301.892, 272.852, 31.3765, 0.7626 ) }
    dend_8 { pt3dadd( 301.086, 272.383, 31.5081, 0.788 ) }
    dend_8 { pt3dadd( 300.044, 272.158, 31.4591, 0.7372 ) }
    dend_8 { pt3dadd( 298.941, 271.938, 31.4448, 0.6864 ) }
    dend_8 { pt3dadd( 297.831, 271.947, 31.4605, 0.7118 ) }
    dend_8 { pt3dadd( 296.754, 271.873, 31.5302, 0.7118 ) }
    dend_8 { pt3dadd( 295.714, 271.599, 31.6694, 0.661 ) }
    dend_8 { pt3dadd( 294.725, 271.05, 31.7699, 0.6102 ) }
    dend_8 { pt3dadd( 293.761, 270.45, 31.9446, 0.5592 ) }
    dend_8 { pt3dadd( 292.754, 270.0, 32.2258, 0.5592 ) }
    dend_8 { pt3dadd( 291.831, 269.784, 32.695, 0.483 ) }
    dend_8 { pt3dadd( 290.753, 269.754, 33.1755, 0.4068 ) }
    dend_8 { pt3dadd( 289.704, 269.506, 33.4208, 0.3814 ) }
    dend_8 { pt3dadd( 288.673, 269.029, 33.6146, 0.4322 ) }
    dend_8 { pt3dadd( 287.54, 269.066, 33.7604, 0.5338 ) }
    dend_8 { pt3dadd( 286.536, 268.689, 33.9685, 0.5338 ) }
    dend_8 { pt3dadd( 285.859, 267.78, 34.0752, 0.483 ) }
    dend_8 { pt3dadd( 285.256, 266.835, 34.137, 0.4068 ) }
    dend_8 { pt3dadd( 284.754, 265.948, 34.2202, 0.4068 ) }
    dend_8 { pt3dadd( 283.699, 265.815, 34.468, 0.4322 ) }
    dend_8 { pt3dadd( 282.685, 266.084, 34.8678, 0.483 ) }
    dend_8 { pt3dadd( 281.736, 266.424, 35.3811, 0.5338 ) }
    dend_8 { pt3dadd( 280.859, 266.883, 35.9554, 0.6356 ) }
    dend_8 { pt3dadd( 279.867, 267.316, 36.3182, 0.661 ) }
    dend_8 { pt3dadd( 278.879, 267.624, 36.5884, 0.6356 ) }
    dend_8 { pt3dadd( 277.872, 268.092, 36.7892, 0.483 ) }
    dend_8 { pt3dadd( 276.809, 268.483, 36.9522, 0.3814 ) }
    dend_8 { pt3dadd( 276.007, 269.232, 37.1437, 0.305 ) }
    dend_8 { pt3dadd( 275.222, 269.539, 37.0437, 0.356 ) }
    dend_8 { pt3dadd( 274.123, 269.659, 37.0812, 0.4322 ) }
    dend_8 { pt3dadd( 273.16, 270.137, 37.242, 0.483 ) }
    dend_8 { pt3dadd( 272.179, 270.664, 37.3344, 0.4322 ) }
    dend_8 { pt3dadd( 271.424, 271.495, 37.4875, 0.3814 ) }
    dend_8 { pt3dadd( 270.875, 272.494, 37.6664, 0.4068 ) }
    dend_8 { pt3dadd( 270.307, 273.472, 37.8736, 0.483 ) }
    dend_8 { pt3dadd( 269.741, 274.418, 38.1461, 0.483 ) }
    dend_8 { pt3dadd( 268.874, 275.117, 38.5036, 0.4068 ) }
    dend_8 { pt3dadd( 268.055, 275.683, 39.0477, 0.3304 ) }
    dend_8 { pt3dadd( 267.244, 276.35, 39.6379, 0.3304 ) }
    dend_8 { pt3dadd( 266.639, 277.301, 40.1752, 0.3304 ) }
    dend_8 { pt3dadd( 266.027, 278.24, 40.6851, 0.356 ) }
    dend_8 { pt3dadd( 265.432, 279.207, 41.1048, 0.356 ) }
    dend_8 { pt3dadd( 265.058, 280.274, 41.4019, 0.4068 ) }
    dend_8 { pt3dadd( 264.508, 281.09, 41.8074, 0.4322 ) }
    dend_8 { pt3dadd( 263.79, 281.934, 42.1786, 0.4322 ) }
    dend_8 { pt3dadd( 262.825, 282.474, 42.5754, 0.3814 ) }
    dend_8 { pt3dadd( 261.764, 282.527, 43.0461, 0.305 ) }
    dend_8 { pt3dadd( 260.636, 282.592, 43.4798, 0.2542 ) }
    dend_8 { pt3dadd( 259.61, 283.019, 43.8852, 0.2542 ) }
    dend_8 { pt3dadd( 258.903, 283.643, 44.0642, 0.2796 ) }
    dend_8 { pt3dadd( 258.068, 283.959, 44.3626, 0.305 ) }
    dend_8 { pt3dadd( 256.971, 284.178, 44.5575, 0.2796 ) }
    dend_8 { pt3dadd( 255.852, 284.079, 44.7622, 0.2542 ) }
    dend_8 { pt3dadd( 254.737, 283.888, 44.977, 0.2542 ) }
    dend_8 { pt3dadd( 253.598, 283.855, 45.1716, 0.2796 ) }
    dend_8 { pt3dadd( 252.462, 283.841, 45.379, 0.305 ) }
    dend_8 { pt3dadd( 251.324, 283.778, 45.5588, 0.2796 ) }
    dend_8 { pt3dadd( 250.196, 283.844, 45.7458, 0.2542 ) }
    dend_8 { pt3dadd( 249.068, 283.932, 45.9281, 0.2288 ) }
    dend_8 { pt3dadd( 247.938, 283.816, 46.0673, 0.2288 ) }
    dend_8 { pt3dadd( 246.832, 283.53, 46.1751, 0.2542 ) }
    dend_8 { pt3dadd( 245.713, 283.353, 46.2605, 0.2796 ) }
    dend_8 { pt3dadd( 244.578, 283.236, 46.3156, 0.305 ) }
    dend_8 { pt3dadd( 243.458, 283.059, 46.3686, 0.305 ) }
    dend_8 { pt3dadd( 242.343, 282.894, 46.3848, 0.305 ) }
    dend_8 { pt3dadd( 241.222, 282.805, 46.2952, 0.305 ) }
    dend_8 { pt3dadd( 240.097, 282.859, 46.1252, 0.2796 ) }
    dend_8 { pt3dadd( 238.963, 282.911, 45.9561, 0.2542 ) }
    dend_8 { pt3dadd( 237.82, 282.911, 45.8186, 0.2288 ) }
    dend_8 { pt3dadd( 236.678, 282.932, 45.68, 0.2288 ) }
    dend_8 { pt3dadd( 235.538, 282.926, 45.5291, 0.2288 ) }
    dend_8 { pt3dadd( 234.411, 282.765, 45.3788, 0.2796 ) }
    dend_8 { pt3dadd( 233.299, 282.828, 45.2231, 0.3814 ) }
    dend_8 { pt3dadd( 232.229, 283.178, 45.0892, 0.483 ) }
    dend_8 { pt3dadd( 231.252, 283.624, 44.8535, 0.483 ) }
    dend_8 { pt3dadd( 230.254, 284.111, 44.5354, 0.4068 ) }
    dend_8 { pt3dadd( 229.24, 284.585, 44.1678, 0.3304 ) }
    dend_8 { pt3dadd( 228.246, 285.133, 43.8819, 0.4322 ) }
    dend_8 { pt3dadd( 227.656, 285.886, 42.84, 0.5848 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 82/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 427.044, 344.637, 32.9571, 0.5338 ) }
    dend_3 { pt3dadd( 427.854, 344.949, 32.6054, 0.661 ) }
    dend_3 { pt3dadd( 428.979, 345.115, 32.3319, 0.6864 ) }
    dend_3 { pt3dadd( 430.104, 345.058, 32.212, 0.6102 ) }
    dend_3 { pt3dadd( 431.168, 344.907, 31.9841, 0.5592 ) }
    dend_3 { pt3dadd( 432.231, 344.633, 31.7254, 0.5084 ) }
    dend_3 { pt3dadd( 433.314, 344.309, 31.5689, 0.5338 ) }
    dend_3 { pt3dadd( 434.241, 343.811, 31.6092, 0.483 ) }
    dend_3 { pt3dadd( 435.025, 343.385, 31.9119, 0.4322 ) }
    dend_3 { pt3dadd( 435.78, 342.74, 32.2358, 0.4068 ) }
    dend_3 { pt3dadd( 436.522, 342.145, 32.2498, 0.4322 ) }
    dend_3 { pt3dadd( 437.364, 341.712, 32.023, 0.483 ) }
    dend_3 { pt3dadd( 438.264, 341.222, 31.8164, 0.5084 ) }
    dend_3 { pt3dadd( 438.985, 340.499, 31.4104, 0.5592 ) }
    dend_3 { pt3dadd( 439.82, 339.871, 31.0078, 0.5084 ) }
    dend_3 { pt3dadd( 440.807, 339.548, 30.5169, 0.483 ) }
    dend_3 { pt3dadd( 441.804, 339.11, 30.0446, 0.4322 ) }
    dend_3 { pt3dadd( 442.752, 338.61, 29.5893, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( 443.823, 338.256, 29.2572, 0.4322 ) }
    dend_3 { pt3dadd( 444.945, 338.242, 28.9848, 0.4068 ) }
    dend_3 { pt3dadd( 446.02, 338.542, 28.7078, 0.3814 ) }
    dend_3 { pt3dadd( 447.092, 338.85, 28.5121, 0.356 ) }
    dend_3 { pt3dadd( 447.978, 339.406, 28.4883, 0.305 ) }
    dend_3 { pt3dadd( 448.86, 340.104, 28.3884, 0.2542 ) }
    dend_3 { pt3dadd( 449.769, 340.651, 28.093, 0.2288 ) }
    dend_3 { pt3dadd( 450.537, 341.392, 27.6714, 0.2796 ) }
    dend_3 { pt3dadd( 451.022, 342.006, 27.0291, 0.3304 ) }
    dend_3 { pt3dadd( 451.779, 342.721, 26.6357, 0.4068 ) }
    dend_3 { pt3dadd( 452.31, 343.352, 26.4255, 0.3814 ) }
    dend_3 { pt3dadd( 453.022, 343.879, 26.0574, 0.4068 ) }
    dend_3 { pt3dadd( 453.922, 344.425, 25.7655, 0.3814 ) }
    dend_3 { pt3dadd( 454.849, 344.966, 25.7422, 0.4576 ) }
    dend_3 { pt3dadd( 455.802, 345.436, 25.9151, 0.5084 ) }
    dend_3 { pt3dadd( 456.717, 346.031, 26.0282, 0.6102 ) }
    dend_3 { pt3dadd( 457.695, 346.591, 26.0949, 0.661 ) }
    dend_3 { pt3dadd( 458.618, 347.242, 26.1251, 0.661 ) }
    dend_3 { pt3dadd( 459.485, 347.975, 26.0565, 0.661 ) }
    dend_3 { pt3dadd( 460.258, 348.744, 25.8359, 0.6356 ) }
    dend_3 { pt3dadd( 461.221, 349.225, 25.6673, 0.6102 ) }
    dend_3 { pt3dadd( 462.143, 349.87, 25.5844, 0.5084 ) }
    dend_3 { pt3dadd( 463.131, 350.404, 25.4731, 0.4322 ) }
    dend_3 { pt3dadd( 463.891, 351.221, 25.415, 0.356 ) }
    dend_3 { pt3dadd( 464.415, 352.227, 25.3491, 0.3304 ) }
    dend_3 { pt3dadd( 465.12, 353.066, 25.3854, 0.2796 ) }
    dend_3 { pt3dadd( 466.159, 353.479, 25.3408, 0.2542 ) }
    dend_3 { pt3dadd( 467.082, 354.129, 25.2152, 0.2796 ) }
    dend_3 { pt3dadd( 467.782, 354.983, 24.64, 0.4068 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 29/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 427.044, 344.637, 32.9571, 0.5338 ) }
    dend_2 { pt3dadd( 427.454, 344.815, 33.0702, 0.5848 ) }
    dend_2 { pt3dadd( 428.529, 345.188, 33.178, 0.7118 ) }
    dend_2 { pt3dadd( 429.645, 345.435, 33.2632, 0.7372 ) }
    dend_2 { pt3dadd( 430.695, 345.866, 33.3273, 0.6864 ) }
    dend_2 { pt3dadd( 431.651, 346.397, 33.4916, 0.6356 ) }
    dend_2 { pt3dadd( 432.634, 346.883, 33.6658, 0.6102 ) }
    dend_2 { pt3dadd( 433.635, 347.416, 33.7851, 0.6356 ) }
    dend_2 { pt3dadd( 434.522, 347.973, 34.039, 0.6356 ) }
    dend_2 { pt3dadd( 435.493, 348.507, 34.3101, 0.6356 ) }
    dend_2 { pt3dadd( 436.475, 348.979, 34.4294, 0.5848 ) }
    dend_2 { pt3dadd( 437.305, 349.522, 34.6926, 0.5848 ) }
    dend_2 { pt3dadd( 438.175, 350.264, 34.9042, 0.6102 ) }
    dend_2 { pt3dadd( 439.123, 350.896, 35.0969, 0.6864 ) }
    dend_2 { pt3dadd( 440.064, 351.493, 35.3175, 0.6864 ) }
    dend_2 { pt3dadd( 441.027, 352.096, 35.506, 0.5848 ) }
    dend_2 { pt3dadd( 442.073, 352.542, 35.6499, 0.4068 ) }
    dend_2 { pt3dadd( 443.125, 352.956, 35.6392, 0.2796 ) }
    dend_2 { pt3dadd( 444.141, 353.462, 35.5404, 0.2542 ) }
    dend_2 { pt3dadd( 445.078, 354.084, 35.3704, 0.2796 ) }
    dend_2 { pt3dadd( 445.887, 354.629, 35.121, 0.305 ) }
    dend_2 { pt3dadd( 446.848, 354.999, 35.0235, 0.305 ) }
    dend_2 { pt3dadd( 447.752, 355.652, 34.8905, 0.305 ) }
    dend_2 { pt3dadd( 448.623, 356.295, 34.6752, 0.3304 ) }
    dend_2 { pt3dadd( 449.494, 356.931, 34.4033, 0.356 ) }
    dend_2 { pt3dadd( 450.316, 357.616, 34.3008, 0.3814 ) }
    dend_2 { pt3dadd( 451.202, 358.28, 34.3717, 0.3814 ) }
    dend_2 { pt3dadd( 452.102, 358.826, 34.622, 0.4322 ) }
    dend_2 { pt3dadd( 452.757, 359.574, 34.7175, 0.5084 ) }
    dend_2 { pt3dadd( 453.523, 360.31, 34.9412, 0.5848 ) }
    dend_2 { pt3dadd( 454.033, 361.318, 35.1492, 0.5592 ) }
    dend_2 { pt3dadd( 454.846, 362.028, 35.4046, 0.483 ) }
    dend_2 { pt3dadd( 455.91, 362.409, 35.5197, 0.4322 ) }
    dend_2 { pt3dadd( 456.966, 362.777, 35.5533, 0.4576 ) }
    dend_2 { pt3dadd( 457.863, 363.441, 35.6843, 0.5084 ) }
    dend_2 { pt3dadd( 458.604, 364.283, 35.8462, 0.483 ) }
    dend_2 { pt3dadd( 459.377, 365.122, 35.9444, 0.4068 ) }
    dend_2 { pt3dadd( 460.124, 365.982, 35.9999, 0.356 ) }
    dend_2 { pt3dadd( 460.837, 366.868, 36.1029, 0.3814 ) }
    dend_2 { pt3dadd( 461.495, 367.766, 36.2513, 0.4576 ) }
    dend_2 { pt3dadd( 462.221, 368.586, 36.3006, 0.483 ) }
    dend_2 { pt3dadd( 463.083, 369.287, 36.4666, 0.4576 ) }
    dend_2 { pt3dadd( 463.979, 369.902, 36.7469, 0.356 ) }
    dend_2 { pt3dadd( 464.967, 370.447, 36.9634, 0.3304 ) }
    dend_2 { pt3dadd( 465.846, 371.09, 37.1277, 0.3304 ) }
    dend_2 { pt3dadd( 466.607, 371.893, 37.4052, 0.3814 ) }
    dend_2 { pt3dadd( 467.327, 372.756, 37.7474, 0.356 ) }
    dend_2 { pt3dadd( 468.122, 373.538, 38.0918, 0.3304 ) }
    dend_2 { pt3dadd( 469.102, 374.106, 38.4292, 0.305 ) }
    dend_2 { pt3dadd( 470.108, 374.524, 38.8601, 0.2796 ) }
    dend_2 { pt3dadd( 471.164, 374.785, 39.3462, 0.2542 ) }
    dend_2 { pt3dadd( 472.292, 374.883, 39.774, 0.2288 ) }
    dend_2 { pt3dadd( 473.431, 374.959, 40.1324, 0.2542 ) }
    dend_2 { pt3dadd( 474.527, 375.235, 40.4606, 0.2796 ) }
    dend_2 { pt3dadd( 475.492, 375.778, 40.8072, 0.3304 ) }
    dend_2 { pt3dadd( 476.458, 376.305, 41.1662, 0.3814 ) }
    dend_2 { pt3dadd( 477.487, 376.736, 41.428, 0.483 ) }
    dend_2 { pt3dadd( 478.535, 377.051, 41.6508, 0.5592 ) }
    dend_2 { pt3dadd( 479.62, 377.24, 41.9706, 0.6356 ) }
    dend_2 { pt3dadd( 480.696, 377.38, 42.3755, 0.6102 ) }
    dend_2 { pt3dadd( 481.816, 377.461, 42.7683, 0.5848 ) }
    dend_2 { pt3dadd( 482.856, 377.828, 43.0534, 0.4576 ) }
    dend_2 { pt3dadd( 483.848, 378.176, 43.4056, 0.3814 ) }
    dend_2 { pt3dadd( 484.81, 378.681, 43.8046, 0.3304 ) }
    dend_2 { pt3dadd( 485.903, 378.898, 44.1347, 0.356 ) }
    dend_2 { pt3dadd( 487.033, 379.064, 44.4189, 0.4068 ) }
    dend_2 { pt3dadd( 487.981, 379.603, 44.7684, 0.4322 ) }
    dend_2 { pt3dadd( 488.941, 380.1, 45.0316, 0.4576 ) }
    dend_2 { pt3dadd( 489.912, 380.696, 45.3312, 0.4576 ) }
    dend_2 { pt3dadd( 490.771, 381.428, 45.6716, 0.4322 ) }
    dend_2 { pt3dadd( 491.528, 382.181, 46.1367, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 492.352, 382.48, 46.8409, 0.3814 ) }
    dend_2 { pt3dadd( 493.337, 382.455, 47.5955, 0.3814 ) }
    dend_2 { pt3dadd( 494.351, 382.15, 48.3392, 0.4068 ) }
    dend_2 { pt3dadd( 495.361, 381.788, 49.0731, 0.4068 ) }
    dend_2 { pt3dadd( 496.472, 381.653, 49.719, 0.3814 ) }
    dend_2 { pt3dadd( 497.606, 381.585, 50.253, 0.305 ) }
    dend_2 { pt3dadd( 498.738, 381.484, 50.6929, 0.2542 ) }
    dend_2 { pt3dadd( 499.878, 381.422, 51.0754, 0.2542 ) }
    dend_2 { pt3dadd( 501.021, 381.409, 51.4136, 0.305 ) }
    dend_2 { pt3dadd( 502.104, 381.435, 51.8232, 0.4068 ) }
    dend_2 { pt3dadd( 502.952, 381.947, 52.1609, 0.4576 ) }
    dend_2 { pt3dadd( 503.803, 381.48, 52.6434, 0.4576 ) }
    dend_2 { pt3dadd( 504.458, 381.126, 53.3646, 0.356 ) }
    dend_2 { pt3dadd( 505.508, 380.842, 54.047, 0.2796 ) }
    dend_2 { pt3dadd( 506.625, 380.675, 54.5258, 0.2288 ) }
    dend_2 { pt3dadd( 507.333, 380.093, 54.9427, 0.2288 ) }
    dend_2 { pt3dadd( 507.804, 379.115, 55.3563, 0.2288 ) }
    dend_2 { pt3dadd( 508.27, 378.327, 55.4896, 0.2542 ) }
    dend_2 { pt3dadd( 508.966, 377.623, 55.5663, 0.305 ) }
    dend_2 { pt3dadd( 509.511, 377.318, 56.0132, 0.3814 ) }
    dend_2 { pt3dadd( 510.322, 376.997, 56.6782, 0.4068 ) }
    dend_2 { pt3dadd( 511.397, 376.827, 57.1654, 0.3814 ) }
    dend_2 { pt3dadd( 512.414, 376.319, 57.5386, 0.356 ) }
    dend_2 { pt3dadd( 513.313, 375.804, 58.52, 0.356 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 366.993, 327.11, 30.1378, 0.7626 ) }
    dend_29 { pt3dadd( 366.879, 328.066, 30.6079, 0.3814 ) }
    dend_29 { pt3dadd( 366.496, 329.129, 31.0484, 0.5338 ) }
    dend_29 { pt3dadd( 365.903, 330.095, 31.2309, 0.661 ) }
    dend_29 { pt3dadd( 365.364, 331.073, 31.4776, 0.6864 ) }
    dend_29 { pt3dadd( 364.889, 332.094, 31.736, 0.5848 ) }
    dend_29 { pt3dadd( 364.274, 333.045, 31.9192, 0.5592 ) }
    dend_29 { pt3dadd( 363.405, 333.77, 32.0149, 0.5592 ) }
    dend_29 { pt3dadd( 362.407, 334.326, 32.069, 0.6356 ) }
    dend_29 { pt3dadd( 361.434, 334.929, 32.1034, 0.661 ) }
    dend_29 { pt3dadd( 360.456, 335.52, 32.1322, 0.6356 ) }
    dend_29 { pt3dadd( 359.433, 336.025, 32.1871, 0.5848 ) }
    dend_29 { pt3dadd( 358.369, 336.421, 32.3044, 0.5848 ) }
    dend_29 { pt3dadd( 357.289, 336.76, 32.4548, 0.6864 ) }
    dend_29 { pt3dadd( 356.195, 337.081, 32.5545, 0.7626 ) }
    dend_29 { pt3dadd( 355.165, 337.535, 32.6581, 0.7372 ) }
    dend_29 { pt3dadd( 354.282, 338.234, 32.8143, 0.6356 ) }
    dend_29 { pt3dadd( 353.454, 339.022, 32.9647, 0.5338 ) }
    dend_29 { pt3dadd( 352.574, 339.742, 33.0938, 0.4576 ) }
    dend_29 { pt3dadd( 351.548, 340.229, 33.2153, 0.3814 ) }
    dend_29 { pt3dadd( 350.443, 340.513, 33.3558, 0.3304 ) }
    dend_29 { pt3dadd( 349.322, 340.675, 33.5328, 0.3304 ) }
    dend_29 { pt3dadd( 348.184, 340.683, 33.7162, 0.356 ) }
    dend_29 { pt3dadd( 347.043, 340.687, 33.8859, 0.4068 ) }
    dend_29 { pt3dadd( 345.918, 340.708, 34.1132, 0.3814 ) }
    dend_29 { pt3dadd( 344.819, 340.808, 34.4142, 0.4068 ) }
    dend_29 { pt3dadd( 343.735, 341.104, 34.7074, 0.4068 ) }
    dend_29 { pt3dadd( 342.666, 341.384, 34.9675, 0.5084 ) }
    dend_29 { pt3dadd( 341.547, 341.413, 35.2346, 0.5592 ) }
    dend_29 { pt3dadd( 340.478, 341.601, 35.3662, 0.6356 ) }
    dend_29 { pt3dadd( 339.421, 341.919, 35.371, 0.661 ) }
    dend_29 { pt3dadd( 338.442, 342.453, 35.4035, 0.661 ) }
    dend_29 { pt3dadd( 337.504, 343.01, 35.369, 0.6356 ) }
    dend_29 { pt3dadd( 336.518, 343.525, 35.3161, 0.5848 ) }
    dend_29 { pt3dadd( 335.507, 343.977, 35.3808, 0.5338 ) }
    dend_29 { pt3dadd( 334.575, 344.429, 35.373, 0.4322 ) }
    dend_29 { pt3dadd( 333.76, 345.133, 35.292, 0.3814 ) }
    dend_29 { pt3dadd( 332.994, 345.828, 35.4021, 0.4322 ) }
    dend_29 { pt3dadd( 332.117, 346.511, 35.5709, 0.5592 ) }
    dend_29 { pt3dadd( 331.227, 347.187, 35.8218, 0.6102 ) }
    dend_29 { pt3dadd( 330.361, 347.864, 36.1603, 0.5338 ) }
    dend_29 { pt3dadd( 329.564, 348.668, 36.4801, 0.4068 ) }
    dend_29 { pt3dadd( 328.759, 349.482, 36.7363, 0.3814 ) }
    dend_29 { pt3dadd( 327.85, 350.172, 36.9183, 0.4068 ) }
    dend_29 { pt3dadd( 326.937, 350.793, 37.149, 0.483 ) }
    dend_29 { pt3dadd( 326.093, 351.485, 37.2322, 0.483 ) }
    dend_29 { pt3dadd( 325.121, 352.071, 37.3038, 0.483 ) }
    dend_29 { pt3dadd( 324.094, 352.532, 37.4433, 0.4576 ) }
    dend_29 { pt3dadd( 323.089, 353.073, 37.5662, 0.4576 ) }
    dend_29 { pt3dadd( 322.169, 353.698, 37.7614, 0.4576 ) }
    dend_29 { pt3dadd( 321.322, 354.463, 37.8994, 0.483 ) }
    dend_29 { pt3dadd( 320.335, 355.035, 38.0299, 0.5592 ) }
    dend_29 { pt3dadd( 319.289, 355.497, 38.1111, 0.661 ) }
    dend_29 { pt3dadd( 318.3, 356.056, 38.2057, 0.7372 ) }
    dend_29 { pt3dadd( 317.285, 356.582, 38.2749, 0.7372 ) }
    dend_29 { pt3dadd( 316.378, 357.272, 38.2791, 0.661 ) }
    dend_29 { pt3dadd( 315.516, 358.011, 38.2444, 0.5848 ) }
    dend_29 { pt3dadd( 314.641, 358.703, 38.3023, 0.5338 ) }
    dend_29 { pt3dadd( 313.628, 359.189, 38.2886, 0.5338 ) }
    dend_29 { pt3dadd( 312.664, 359.724, 38.2858, 0.5084 ) }
    dend_29 { pt3dadd( 311.666, 359.878, 38.4779, 0.5084 ) }
    dend_29 { pt3dadd( 310.536, 359.743, 38.6224, 0.5084 ) }
    dend_29 { pt3dadd( 309.438, 359.698, 38.7299, 0.5084 ) }
    dend_29 { pt3dadd( 308.348, 359.942, 38.9096, 0.4322 ) }
    dend_29 { pt3dadd( 307.245, 360.188, 39.0986, 0.3814 ) }
    dend_29 { pt3dadd( 306.132, 360.413, 39.2381, 0.356 ) }
    dend_29 { pt3dadd( 304.996, 360.48, 39.3677, 0.3814 ) }
    dend_29 { pt3dadd( 303.866, 360.544, 39.4559, 0.356 ) }
    dend_29 { pt3dadd( 302.749, 360.535, 39.459, 0.3304 ) }
    dend_29 { pt3dadd( 301.663, 360.217, 39.4492, 0.3304 ) }
    dend_29 { pt3dadd( 300.632, 360.145, 39.5441, 0.3814 ) }
    dend_29 { pt3dadd( 299.544, 360.17, 39.6858, 0.483 ) }
    dend_29 { pt3dadd( 298.425, 359.995, 39.7379, 0.5338 ) }
    dend_29 { pt3dadd( 297.313, 360.082, 39.6992, 0.5592 ) }
    dend_29 { pt3dadd( 296.201, 360.212, 39.5679, 0.483 ) }
    dend_29 { pt3dadd( 295.104, 360.482, 39.401, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_29 { pt3dadd( 293.997, 360.751, 39.228, 0.305 ) }
    dend_29 { pt3dadd( 292.989, 361.267, 39.0774, 0.2796 ) }
    dend_29 { pt3dadd( 291.888, 361.547, 39.0074, 0.2796 ) }
    dend_29 { pt3dadd( 290.846, 361.97, 39.0589, 0.305 ) }
    dend_29 { pt3dadd( 289.767, 362.301, 39.198, 0.305 ) }
    dend_29 { pt3dadd( 288.638, 362.463, 39.345, 0.356 ) }
    dend_29 { pt3dadd( 287.58, 362.741, 39.3551, 0.4322 ) }
    dend_29 { pt3dadd( 286.509, 362.702, 39.4876, 0.483 ) }
    dend_29 { pt3dadd( 285.401, 362.883, 39.5086, 0.483 ) }
    dend_29 { pt3dadd( 284.27, 362.988, 39.5623, 0.483 ) }
    dend_29 { pt3dadd( 283.188, 363.212, 39.6936, 0.5338 ) }
    dend_29 { pt3dadd( 282.134, 363.58, 39.7614, 0.5848 ) }
    dend_29 { pt3dadd( 281.09, 363.681, 39.6914, 0.6102 ) }
    dend_29 { pt3dadd( 280.087, 363.666, 39.6567, 0.6356 ) }
    dend_29 { pt3dadd( 279.137, 363.964, 39.7558, 0.661 ) }
    dend_29 { pt3dadd( 278.011, 363.924, 39.7662, 0.6356 ) }
    dend_29 { pt3dadd( 276.905, 363.807, 39.7023, 0.5338 ) }
    dend_29 { pt3dadd( 275.79, 363.562, 39.6687, 0.3814 ) }
    dend_29 { pt3dadd( 274.674, 363.321, 39.6939, 0.3304 ) }
    dend_29 { pt3dadd( 273.549, 363.229, 39.7606, 0.356 ) }
    dend_29 { pt3dadd( 272.428, 363.34, 39.8924, 0.483 ) }
    dend_29 { pt3dadd( 271.341, 363.198, 40.0568, 0.5338 ) }
    dend_29 { pt3dadd( 270.289, 362.754, 40.2058, 0.5592 ) }
    dend_29 { pt3dadd( 269.22, 362.356, 40.329, 0.483 ) }
    dend_29 { pt3dadd( 268.11, 362.092, 40.4118, 0.4322 ) }
    dend_29 { pt3dadd( 267.029, 361.944, 40.5686, 0.356 ) }
    dend_29 { pt3dadd( 266.016, 362.28, 40.7277, 0.356 ) }
    dend_29 { pt3dadd( 265.009, 362.574, 40.724, 0.356 ) }
    dend_29 { pt3dadd( 263.943, 362.662, 40.8268, 0.3814 ) }
    dend_29 { pt3dadd( 262.937, 362.904, 41.0967, 0.356 ) }
    dend_29 { pt3dadd( 261.878, 363.278, 41.3143, 0.356 ) }
    dend_29 { pt3dadd( 260.762, 363.525, 41.4624, 0.356 ) }
    dend_29 { pt3dadd( 259.672, 363.853, 41.5388, 0.4322 ) }
    dend_29 { pt3dadd( 258.569, 364.142, 41.6178, 0.483 ) }
    dend_29 { pt3dadd( 257.502, 364.521, 41.7026, 0.5338 ) }
    dend_29 { pt3dadd( 256.487, 364.783, 41.6016, 0.5084 ) }
    dend_29 { pt3dadd( 255.482, 365.181, 41.6424, 0.4322 ) }
    dend_29 { pt3dadd( 254.378, 365.186, 41.7441, 0.3814 ) }
    dend_29 { pt3dadd( 253.296, 365.156, 41.7497, 0.3814 ) }
    dend_29 { pt3dadd( 252.171, 365.167, 41.7962, 0.483 ) }
    dend_29 { pt3dadd( 251.047, 364.991, 41.806, 0.5338 ) }
    dend_29 { pt3dadd( 249.942, 364.966, 41.8292, 0.5084 ) }
    dend_29 { pt3dadd( 248.848, 365.171, 41.9244, 0.3814 ) }
    dend_29 { pt3dadd( 247.778, 364.968, 42.1159, 0.2796 ) }
    dend_29 { pt3dadd( 246.9, 364.309, 42.2848, 0.2288 ) }
    dend_29 { pt3dadd( 246.167, 363.625, 42.4878, 0.2288 ) }
    dend_29 { pt3dadd( 245.158, 363.449, 42.7316, 0.2288 ) }
    dend_29 { pt3dadd( 244.014, 363.449, 42.8896, 0.2542 ) }
    dend_29 { pt3dadd( 242.907, 363.469, 42.8865, 0.305 ) }
    dend_29 { pt3dadd( 241.804, 363.657, 42.817, 0.356 ) }
    dend_29 { pt3dadd( 240.714, 363.998, 42.7638, 0.3814 ) }
    dend_29 { pt3dadd( 240.027, 364.81, 42.7468, 0.356 ) }
    dend_29 { pt3dadd( 239.351, 365.721, 42.768, 0.3304 ) }
    dend_29 { pt3dadd( 239.101, 366.528, 42.5625, 0.3304 ) }
    dend_29 { pt3dadd( 238.982, 367.453, 42.84, 0.356 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 366.993, 327.11, 30.1378, 0.7626 ) }
    dend_28 { pt3dadd( 368.368, 327.445, 30.5634, 0.3814 ) }
    dend_28 { pt3dadd( 369.2, 328.176, 30.9996, 0.4322 ) }
    dend_28 { pt3dadd( 369.593, 329.209, 31.4583, 0.4576 ) }
    dend_28 { pt3dadd( 369.566, 330.305, 31.9645, 0.5592 ) }
    dend_28 { pt3dadd( 369.312, 331.402, 32.4822, 0.5592 ) }
    dend_28 { pt3dadd( 369.263, 332.531, 32.9888, 0.6102 ) }
    dend_28 { pt3dadd( 369.742, 333.535, 33.4953, 0.661 ) }
    dend_28 { pt3dadd( 370.553, 334.296, 34.041, 0.7372 ) }
    dend_28 { pt3dadd( 371.41, 334.969, 34.659, 0.7372 ) }
    dend_28 { pt3dadd( 372.237, 335.676, 35.3349, 0.7372 ) }
    dend_28 { pt3dadd( 372.998, 336.518, 35.9778, 0.7372 ) }
    dend_28 { pt3dadd( 373.742, 337.371, 36.6125, 0.7626 ) }
    dend_28 { pt3dadd( 374.511, 338.06, 37.3531, 0.7626 ) }
    dend_28 { pt3dadd( 375.31, 338.743, 38.1472, 0.788 ) }
    dend_28 { pt3dadd( 376.254, 339.247, 38.9438, 0.788 ) }
    dend_28 { pt3dadd( 377.243, 339.638, 39.7342, 0.7626 ) }
    dend_28 { pt3dadd( 378.109, 340.301, 40.4776, 0.6864 ) }
    dend_28 { pt3dadd( 378.67, 341.275, 41.1174, 0.6102 ) }
    dend_28 { pt3dadd( 379.139, 342.313, 41.5542, 0.5338 ) }
    dend_28 { pt3dadd( 379.45, 343.397, 41.8197, 0.483 ) }
    dend_28 { pt3dadd( 379.832, 344.457, 42.0479, 0.483 ) }
    dend_28 { pt3dadd( 380.522, 345.04, 42.499, 0.5084 ) }
    dend_28 { pt3dadd( 380.926, 345.851, 43.0769, 0.483 ) }
    dend_28 { pt3dadd( 381.4, 346.888, 43.5534, 0.4576 ) }
    dend_28 { pt3dadd( 381.974, 347.823, 43.9474, 0.4068 ) }
    dend_28 { pt3dadd( 382.953, 348.361, 44.2159, 0.4576 ) }
    dend_28 { pt3dadd( 383.829, 348.999, 44.431, 0.483 ) }
    dend_28 { pt3dadd( 384.418, 349.973, 44.6286, 0.5338 ) }
    dend_28 { pt3dadd( 384.925, 350.931, 44.9229, 0.5084 ) }
    dend_28 { pt3dadd( 385.298, 351.945, 45.3236, 0.4576 ) }
    dend_28 { pt3dadd( 385.414, 353.064, 45.7296, 0.4576 ) }
    dend_28 { pt3dadd( 385.487, 354.2, 46.1076, 0.5084 ) }
    dend_28 { pt3dadd( 385.701, 355.311, 46.4562, 0.6102 ) }
    dend_28 { pt3dadd( 386.117, 356.361, 46.7704, 0.6102 ) }
    dend_28 { pt3dadd( 386.751, 357.269, 47.0786, 0.5338 ) }
    dend_28 { pt3dadd( 387.413, 358.184, 47.3323, 0.4068 ) }
    dend_28 { pt3dadd( 388.256, 358.913, 47.4536, 0.3304 ) }
    dend_28 { pt3dadd( 389.104, 359.667, 47.4995, 0.305 ) }
    dend_28 { pt3dadd( 390.043, 360.282, 47.5594, 0.2796 ) }
    dend_28 { pt3dadd( 391.083, 360.742, 47.6034, 0.2542 ) }
    dend_28 { pt3dadd( 392.12, 361.221, 47.5919, 0.2542 ) }
    dend_28 { pt3dadd( 393.192, 361.591, 47.5261, 0.2796 ) }
    dend_28 { pt3dadd( 394.291, 361.894, 47.4421, 0.305 ) }
    dend_28 { pt3dadd( 395.386, 362.217, 47.3511, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_28 { pt3dadd( 396.458, 362.611, 47.2679, 0.2542 ) }
    dend_28 { pt3dadd( 397.426, 363.209, 47.2416, 0.2288 ) }
    dend_28 { pt3dadd( 398.391, 363.822, 47.2648, 0.2288 ) }
    dend_28 { pt3dadd( 399.497, 364.044, 47.3273, 0.2288 ) }
    dend_28 { pt3dadd( 400.628, 364.215, 47.4368, 0.2288 ) }
    dend_28 { pt3dadd( 401.681, 364.52, 47.6734, 0.2288 ) }
    dend_28 { pt3dadd( 402.783, 364.792, 47.8982, 0.2288 ) }
    dend_28 { pt3dadd( 403.894, 365.065, 48.1074, 0.2288 ) }
    dend_28 { pt3dadd( 404.963, 365.468, 48.3165, 0.2796 ) }
    dend_28 { pt3dadd( 406.06, 365.786, 48.5439, 0.356 ) }
    dend_28 { pt3dadd( 406.972, 366.162, 48.9728, 0.4576 ) }
    dend_28 { pt3dadd( 407.889, 366.772, 49.3058, 0.483 ) }
    dend_28 { pt3dadd( 408.969, 367.095, 49.677, 0.5084 ) }
    dend_28 { pt3dadd( 409.853, 367.612, 50.2354, 0.483 ) }
    dend_28 { pt3dadd( 410.772, 368.259, 50.8239, 0.5084 ) }
    dend_28 { pt3dadd( 411.705, 368.886, 51.4147, 0.4576 ) }
    dend_28 { pt3dadd( 412.44, 369.677, 52.0324, 0.483 ) }
    dend_28 { pt3dadd( 413.005, 370.234, 52.8508, 0.4576 ) }
    dend_28 { pt3dadd( 413.813, 371.017, 53.5377, 0.5084 ) }
    dend_28 { pt3dadd( 414.731, 371.664, 54.04, 0.483 ) }
    dend_28 { pt3dadd( 415.422, 372.476, 54.5446, 0.4576 ) }
    dend_28 { pt3dadd( 415.857, 373.3, 55.2126, 0.4068 ) }
    dend_28 { pt3dadd( 416.485, 374.081, 55.8922, 0.3814 ) }
    dend_28 { pt3dadd( 417.218, 374.832, 56.5608, 0.4068 ) }
    dend_28 { pt3dadd( 417.945, 375.631, 57.136, 0.4068 ) }
    dend_28 { pt3dadd( 418.774, 376.407, 57.5912, 0.3814 ) }
    dend_28 { pt3dadd( 419.139, 377.345, 58.1006, 0.305 ) }
    dend_28 { pt3dadd( 419.468, 378.356, 58.6401, 0.305 ) }
    dend_28 { pt3dadd( 420.071, 379.294, 59.0472, 0.356 ) }
    dend_28 { pt3dadd( 420.777, 380.19, 59.3648, 0.4322 ) }
    dend_28 { pt3dadd( 421.428, 381.0, 59.8139, 0.4322 ) }
    dend_28 { pt3dadd( 421.928, 381.996, 60.2818, 0.4068 ) }
    dend_28 { pt3dadd( 422.639, 382.883, 60.6987, 0.4068 ) }
    dend_28 { pt3dadd( 423.134, 383.906, 61.0982, 0.4576 ) }
    dend_28 { pt3dadd( 423.631, 384.91, 61.5535, 0.5338 ) }
    dend_28 { pt3dadd( 424.251, 385.844, 62.0354, 0.5592 ) }
    dend_28 { pt3dadd( 425.015, 386.603, 62.575, 0.5338 ) }
    dend_28 { pt3dadd( 425.88, 387.278, 63.1397, 0.4322 ) }
    dend_28 { pt3dadd( 426.855, 387.855, 63.658, 0.356 ) }
    dend_28 { pt3dadd( 427.768, 388.532, 64.1122, 0.305 ) }
    dend_28 { pt3dadd( 428.569, 389.348, 64.4602, 0.3304 ) }
    dend_28 { pt3dadd( 429.285, 390.177, 64.8323, 0.3814 ) }
    dend_28 { pt3dadd( 430.274, 390.747, 65.1154, 0.4068 ) }
    dend_28 { pt3dadd( 431.033, 391.572, 65.3968, 0.3814 ) }
    dend_28 { pt3dadd( 431.724, 392.479, 65.6048, 0.356 ) }
    dend_28 { pt3dadd( 432.318, 393.399, 65.6586, 0.356 ) }
    dend_28 { pt3dadd( 432.577, 394.501, 65.7546, 0.4068 ) }
    dend_28 { pt3dadd( 433.023, 395.52, 65.8272, 0.4068 ) }
    dend_28 { pt3dadd( 433.951, 396.182, 65.8756, 0.4068 ) }
    dend_28 { pt3dadd( 434.796, 396.788, 65.994, 0.356 ) }
    dend_28 { pt3dadd( 435.242, 397.479, 66.3566, 0.305 ) }
    dend_28 { pt3dadd( 435.904, 398.403, 66.6224, 0.2542 ) }
    dend_28 { pt3dadd( 436.638, 399.275, 66.8234, 0.2288 ) }
    dend_28 { pt3dadd( 437.373, 400.146, 67.018, 0.2796 ) }
    dend_28 { pt3dadd( 437.974, 401.118, 67.1866, 0.4068 ) }
    dend_28 { pt3dadd( 438.491, 402.137, 67.3498, 0.5338 ) }
    dend_28 { pt3dadd( 439.075, 403.102, 67.5466, 0.5848 ) }
    dend_28 { pt3dadd( 439.836, 403.94, 67.8185, 0.5084 ) }
    dend_28 { pt3dadd( 440.605, 404.776, 68.1302, 0.4322 ) }
    dend_28 { pt3dadd( 441.417, 405.561, 68.4774, 0.3814 ) }
    dend_28 { pt3dadd( 442.225, 406.343, 68.8517, 0.356 ) }
    dend_28 { pt3dadd( 442.91, 407.211, 69.2572, 0.3304 ) }
    dend_28 { pt3dadd( 443.487, 408.147, 69.6732, 0.2796 ) }
    dend_28 { pt3dadd( 444.135, 409.061, 69.979, 0.2542 ) }
    dend_28 { pt3dadd( 445.047, 409.659, 70.1548, 0.2288 ) }
    dend_28 { pt3dadd( 446.155, 409.901, 70.3105, 0.2288 ) }
    dend_28 { pt3dadd( 447.286, 410.065, 70.4172, 0.2288 ) }
    dend_28 { pt3dadd( 448.234, 410.538, 70.4782, 0.2288 ) }
    dend_28 { pt3dadd( 449.015, 411.357, 70.5244, 0.2542 ) }
    dend_28 { pt3dadd( 449.919, 412.048, 70.5334, 0.2796 ) }
    dend_28 { pt3dadd( 450.824, 412.736, 70.4934, 0.305 ) }
    dend_28 { pt3dadd( 451.6, 413.555, 70.4371, 0.2796 ) }
    dend_28 { pt3dadd( 452.363, 414.38, 70.3735, 0.2796 ) }
    dend_28 { pt3dadd( 453.236, 415.112, 70.3245, 0.3304 ) }
    dend_28 { pt3dadd( 453.987, 415.957, 70.2565, 0.4322 ) }
    dend_28 { pt3dadd( 454.715, 416.826, 70.1795, 0.483 ) }
    dend_28 { pt3dadd( 455.605, 417.489, 70.2052, 0.4322 ) }
    dend_28 { pt3dadd( 456.48, 418.204, 70.2892, 0.3304 ) }
    dend_28 { pt3dadd( 457.134, 419.128, 70.399, 0.2542 ) }
    dend_28 { pt3dadd( 457.662, 420.142, 70.4833, 0.2542 ) }
    dend_28 { pt3dadd( 458.504, 420.884, 70.492, 0.2796 ) }
    dend_28 { pt3dadd( 459.163, 421.806, 70.4511, 0.305 ) }
    dend_28 { pt3dadd( 459.834, 422.731, 70.3956, 0.305 ) }
    dend_28 { pt3dadd( 460.341, 423.754, 70.3447, 0.3304 ) }
    dend_28 { pt3dadd( 460.848, 424.77, 70.2635, 0.356 ) }
    dend_28 { pt3dadd( 461.302, 425.816, 70.2288, 0.356 ) }
    dend_28 { pt3dadd( 461.567, 426.922, 70.2705, 0.305 ) }
    dend_28 { pt3dadd( 461.781, 428.047, 70.3273, 0.2542 ) }
    dend_28 { pt3dadd( 461.919, 429.18, 70.4155, 0.2288 ) }
    dend_28 { pt3dadd( 461.947, 430.323, 70.5138, 0.2288 ) }
    dend_28 { pt3dadd( 461.947, 431.466, 70.6087, 0.2288 ) }
    dend_28 { pt3dadd( 461.947, 432.611, 70.6955, 0.2288 ) }
    dend_28 { pt3dadd( 461.954, 433.754, 70.7809, 0.2542 ) }
    dend_28 { pt3dadd( 462.866, 434.429, 70.8814, 0.305 ) }
    dend_28 { pt3dadd( 463.591, 435.279, 71.0318, 0.3814 ) }
    dend_28 { pt3dadd( 464.114, 436.213, 71.2216, 0.4068 ) }
    dend_28 { pt3dadd( 464.81, 436.958, 71.4524, 0.3814 ) }
    dend_28 { pt3dadd( 465.28, 437.97, 71.7223, 0.305 ) }
    dend_28 { pt3dadd( 465.889, 438.938, 71.9617, 0.2542 ) }
    dend_28 { pt3dadd( 466.383, 439.956, 72.1888, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_28 { pt3dadd( 466.902, 440.915, 72.469, 0.2542 ) }
    dend_28 { pt3dadd( 467.484, 441.859, 72.7222, 0.305 ) }
    dend_28 { pt3dadd( 468.151, 442.778, 72.8848, 0.3814 ) }
    dend_28 { pt3dadd( 469.057, 443.424, 72.9574, 0.4322 ) }
    dend_28 { pt3dadd( 469.995, 444.054, 72.9826, 0.4322 ) }
    dend_28 { pt3dadd( 470.875, 444.762, 73.0542, 0.3814 ) }
    dend_28 { pt3dadd( 471.694, 445.538, 73.1783, 0.305 ) }
    dend_28 { pt3dadd( 472.589, 446.23, 73.3337, 0.2542 ) }
    dend_28 { pt3dadd( 472.944, 447.239, 73.4835, 0.2288 ) }
    dend_28 { pt3dadd( 473.154, 448.363, 73.612, 0.2288 ) }
    dend_28 { pt3dadd( 473.345, 449.491, 73.7103, 0.2288 ) }
    dend_28 { pt3dadd( 473.344, 450.63, 73.7859, 0.2288 ) }
    dend_28 { pt3dadd( 473.063, 451.711, 73.9001, 0.2288 ) }
    dend_28 { pt3dadd( 472.334, 452.533, 74.0463, 0.2288 ) }
    dend_28 { pt3dadd( 471.879, 453.515, 74.0636, 0.2288 ) }
    dend_28 { pt3dadd( 471.9, 454.647, 74.0328, 0.2288 ) }
    dend_28 { pt3dadd( 471.9, 455.739, 73.9144, 0.2288 ) }
    dend_28 { pt3dadd( 471.915, 456.87, 73.813, 0.2288 ) }
    dend_28 { pt3dadd( 472.134, 457.967, 73.8408, 0.2542 ) }
    dend_28 { pt3dadd( 472.466, 458.759, 74.1863, 0.3304 ) }
    dend_28 { pt3dadd( 472.538, 459.354, 74.8177, 0.4576 ) }
    dend_28 { pt3dadd( 473.354, 460.108, 75.2441, 0.5338 ) }
    dend_28 { pt3dadd( 473.886, 461.003, 75.3981, 0.5084 ) }
    dend_28 { pt3dadd( 474.17, 461.935, 75.2895, 0.3814 ) }
    dend_28 { pt3dadd( 474.568, 462.878, 75.1663, 0.2796 ) }
    dend_28 { pt3dadd( 474.73, 463.95, 75.1747, 0.2542 ) }
    dend_28 { pt3dadd( 474.461, 464.964, 75.3894, 0.305 ) }
    dend_28 { pt3dadd( 474.489, 466.011, 75.7851, 0.356 ) }
    dend_28 { pt3dadd( 474.594, 467.008, 76.347, 0.356 ) }
    dend_28 { pt3dadd( 474.685, 467.729, 77.086, 0.356 ) }
    dend_28 { pt3dadd( 474.534, 468.82, 77.5732, 0.4068 ) }
    dend_28 { pt3dadd( 474.236, 469.747, 77.5967, 0.5084 ) }
    dend_28 { pt3dadd( 474.663, 470.739, 77.3444, 0.5338 ) }
    dend_28 { pt3dadd( 475.018, 471.765, 76.9899, 0.4576 ) }
    dend_28 { pt3dadd( 474.855, 472.438, 76.3454, 0.3304 ) }
    dend_28 { pt3dadd( 475.012, 473.324, 75.7173, 0.2542 ) }
    dend_28 { pt3dadd( 475.358, 474.337, 75.4838, 0.2288 ) }
    dend_28 { pt3dadd( 475.83, 475.318, 75.4519, 0.2542 ) }
    dend_28 { pt3dadd( 476.253, 475.489, 75.9273, 0.2796 ) }
    dend_28 { pt3dadd( 476.531, 476.107, 76.7225, 0.305 ) }
    dend_28 { pt3dadd( 477.3, 476.787, 77.5502, 0.2796 ) }
    dend_28 { pt3dadd( 477.852, 477.786, 78.1679, 0.2542 ) }
    dend_28 { pt3dadd( 478.341, 478.814, 78.524, 0.2288 ) }
    dend_28 { pt3dadd( 478.743, 479.862, 78.6374, 0.2288 ) }
    dend_28 { pt3dadd( 479.155, 480.87, 78.5047, 0.2542 ) }
    dend_28 { pt3dadd( 479.724, 481.812, 78.2648, 0.3304 ) }
    dend_28 { pt3dadd( 480.248, 482.73, 78.111, 0.5084 ) }
    dend_28 { pt3dadd( 480.529, 483.68, 78.2284, 0.7372 ) }
    dend_28 { pt3dadd( 481.241, 484.518, 78.4826, 0.8898 ) }
    dend_28 { pt3dadd( 481.67, 485.555, 78.8071, 0.8898 ) }
    dend_28 { pt3dadd( 481.953, 486.627, 79.2291, 0.7118 ) }
    dend_28 { pt3dadd( 482.285, 487.685, 79.5614, 0.5592 ) }
    dend_28 { pt3dadd( 482.394, 488.785, 79.8168, 0.4576 ) }
    dend_28 { pt3dadd( 482.352, 489.835, 80.1931, 0.5338 ) }
    dend_28 { pt3dadd( 482.652, 490.773, 80.7428, 0.6102 ) }
    dend_28 { pt3dadd( 483.012, 491.809, 81.3333, 0.661 ) }
    dend_28 { pt3dadd( 483.339, 492.898, 81.9022, 0.5848 ) }
    dend_28 { pt3dadd( 483.619, 494.005, 82.4219, 0.5338 ) }
    dend_28 { pt3dadd( 483.962, 495.004, 83.0113, 0.5338 ) }
    dend_28 { pt3dadd( 483.4, 495.703, 83.6912, 0.5848 ) }
    dend_28 { pt3dadd( 483.684, 496.749, 84.3094, 0.6102 ) }
    dend_28 { pt3dadd( 484.388, 497.622, 84.8868, 0.5592 ) }
    dend_28 { pt3dadd( 484.896, 498.63, 85.4154, 0.5084 ) }
    dend_28 { pt3dadd( 485.364, 499.636, 85.9158, 0.4068 ) }
    dend_28 { pt3dadd( 485.987, 500.586, 86.2837, 0.4068 ) }
    dend_28 { pt3dadd( 486.452, 501.605, 86.5589, 0.4322 ) }
    dend_28 { pt3dadd( 487.129, 502.496, 86.9154, 0.5592 ) }
    dend_28 { pt3dadd( 487.721, 503.454, 87.337, 0.6356 ) }
    dend_28 { pt3dadd( 488.236, 504.411, 87.7836, 0.6356 ) }
    dend_28 { pt3dadd( 488.439, 505.403, 88.3414, 0.5592 ) }
    dend_28 { pt3dadd( 488.956, 505.833, 89.2144, 0.483 ) }
    dend_28 { pt3dadd( 489.643, 505.728, 90.2955, 0.483 ) }
    dend_28 { pt3dadd( 490.654, 505.769, 91.3419, 0.5338 ) }
    dend_28 { pt3dadd( 491.604, 506.329, 92.2468, 0.5848 ) }
    dend_28 { pt3dadd( 492.516, 506.974, 93.0138, 0.5848 ) }
    dend_28 { pt3dadd( 493.523, 507.493, 93.6233, 0.5338 ) }
    dend_28 { pt3dadd( 494.589, 507.377, 94.1226, 0.4576 ) }
    dend_28 { pt3dadd( 495.376, 506.783, 94.6641, 0.4576 ) }
    dend_28 { pt3dadd( 496.153, 505.991, 95.76, 0.5338 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 402.466, 267.257, 24.423, 0.6356 ) }
    dend_20 { pt3dadd( 403.328, 267.722, 23.1272, 0.483 ) }
    dend_20 { pt3dadd( 404.456, 267.594, 22.9862, 0.4576 ) }
    dend_20 { pt3dadd( 405.57, 267.479, 22.9161, 0.3814 ) }
    dend_20 { pt3dadd( 406.7, 267.498, 22.835, 0.305 ) }
    dend_20 { pt3dadd( 407.759, 267.13, 22.72, 0.2796 ) }
    dend_20 { pt3dadd( 408.7, 266.507, 22.524, 0.2796 ) }
    dend_20 { pt3dadd( 409.589, 265.811, 22.2752, 0.3304 ) }
    dend_20 { pt3dadd( 410.427, 265.036, 22.0379, 0.3304 ) }
    dend_20 { pt3dadd( 411.139, 264.194, 21.7481, 0.3304 ) }
    dend_20 { pt3dadd( 411.839, 263.346, 21.4072, 0.2796 ) }
    dend_20 { pt3dadd( 412.684, 262.583, 21.1, 0.305 ) }
    dend_20 { pt3dadd( 413.535, 261.832, 20.8087, 0.3304 ) }
    dend_20 { pt3dadd( 414.467, 261.204, 20.5251, 0.4322 ) }
    dend_20 { pt3dadd( 415.464, 260.697, 20.2283, 0.483 ) }
    dend_20 { pt3dadd( 416.363, 260.03, 19.9768, 0.5848 ) }
    dend_20 { pt3dadd( 417.056, 259.137, 19.8368, 0.5848 ) }
    dend_20 { pt3dadd( 417.844, 258.343, 19.7565, 0.5338 ) }
    dend_20 { pt3dadd( 418.732, 257.625, 19.7112, 0.4576 ) }
    dend_20 { pt3dadd( 419.484, 256.79, 19.6751, 0.4576 ) }
    dend_20 { pt3dadd( 420.21, 255.915, 19.688, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_20 { pt3dadd( 421.074, 255.223, 19.8318, 0.5592 ) }
    dend_20 { pt3dadd( 422.071, 254.819, 20.1249, 0.5592 ) }
    dend_20 { pt3dadd( 423.156, 254.63, 20.5024, 0.483 ) }
    dend_20 { pt3dadd( 424.287, 254.519, 20.8708, 0.5338 ) }
    dend_20 { pt3dadd( 425.416, 254.367, 21.2136, 0.5338 ) }
    dend_20 { pt3dadd( 426.451, 253.941, 21.4697, 0.5592 ) }
    dend_20 { pt3dadd( 427.348, 253.26, 21.6253, 0.5338 ) }
    dend_20 { pt3dadd( 428.179, 252.514, 21.8376, 0.5084 ) }
    dend_20 { pt3dadd( 429.042, 251.805, 22.1464, 0.4576 ) }
    dend_20 { pt3dadd( 429.895, 251.108, 22.5615, 0.356 ) }
    dend_20 { pt3dadd( 430.834, 250.547, 23.0525, 0.305 ) }
    dend_20 { pt3dadd( 431.528, 249.91, 23.679, 0.2796 ) }
    dend_20 { pt3dadd( 432.315, 249.161, 24.1835, 0.305 ) }
    dend_20 { pt3dadd( 433.156, 248.392, 24.5496, 0.305 ) }
    dend_20 { pt3dadd( 434.056, 247.69, 24.7721, 0.3304 ) }
    dend_20 { pt3dadd( 435.036, 247.102, 24.8655, 0.356 ) }
    dend_20 { pt3dadd( 436.025, 246.588, 24.7708, 0.356 ) }
    dend_20 { pt3dadd( 436.961, 246.111, 24.7356, 0.305 ) }
    dend_20 { pt3dadd( 437.994, 245.864, 24.6448, 0.2796 ) }
    dend_20 { pt3dadd( 438.973, 245.722, 24.3116, 0.2796 ) }
    dend_20 { pt3dadd( 439.876, 245.248, 23.8847, 0.305 ) }
    dend_20 { pt3dadd( 440.803, 244.609, 23.4974, 0.2796 ) }
    dend_20 { pt3dadd( 441.823, 244.092, 23.1917, 0.2542 ) }
    dend_20 { pt3dadd( 442.874, 243.645, 22.9533, 0.2288 ) }
    dend_20 { pt3dadd( 443.39, 242.795, 22.7245, 0.2796 ) }
    dend_20 { pt3dadd( 443.927, 241.863, 22.4773, 0.3304 ) }
    dend_20 { pt3dadd( 444.56, 241.046, 22.416, 0.4068 ) }
    dend_20 { pt3dadd( 445.279, 240.271, 22.5247, 0.4068 ) }
    dend_20 { pt3dadd( 445.931, 239.344, 22.5744, 0.4068 ) }
    dend_20 { pt3dadd( 446.354, 238.32, 22.5022, 0.3814 ) }
    dend_20 { pt3dadd( 447.304, 237.723, 22.12, 0.4068 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 402.466, 267.257, 24.423, 0.6356 ) }
    dend_19 { pt3dadd( 402.61, 267.56, 24.4465, 0.4322 ) }
    dend_19 { pt3dadd( 403.087, 268.594, 24.5568, 0.4322 ) }
    dend_19 { pt3dadd( 403.58, 269.608, 24.759, 0.356 ) }
    dend_19 { pt3dadd( 404.165, 270.583, 24.9859, 0.305 ) }
    dend_19 { pt3dadd( 404.668, 271.608, 25.1904, 0.305 ) }
    dend_19 { pt3dadd( 405.071, 272.678, 25.3723, 0.3814 ) }
    dend_19 { pt3dadd( 405.484, 273.744, 25.5477, 0.4068 ) }
    dend_19 { pt3dadd( 405.909, 274.798, 25.7503, 0.4322 ) }
    dend_19 { pt3dadd( 406.319, 275.849, 25.9978, 0.4068 ) }
    dend_19 { pt3dadd( 406.77, 276.896, 26.2489, 0.4322 ) }
    dend_19 { pt3dadd( 407.273, 277.922, 26.484, 0.4068 ) }
    dend_19 { pt3dadd( 407.888, 278.885, 26.7186, 0.4576 ) }
    dend_19 { pt3dadd( 408.548, 279.805, 26.9907, 0.4576 ) }
    dend_19 { pt3dadd( 409.289, 280.651, 27.3094, 0.483 ) }
    dend_19 { pt3dadd( 410.145, 281.401, 27.6193, 0.4576 ) }
    dend_19 { pt3dadd( 411.07, 282.057, 27.9486, 0.5084 ) }
    dend_19 { pt3dadd( 411.967, 282.721, 28.3248, 0.6102 ) }
    dend_19 { pt3dadd( 412.793, 283.49, 28.6983, 0.7118 ) }
    dend_19 { pt3dadd( 413.492, 284.369, 29.0707, 0.788 ) }
    dend_19 { pt3dadd( 414.22, 285.246, 29.3896, 0.788 ) }
    dend_19 { pt3dadd( 414.939, 286.134, 29.6408, 0.788 ) }
    dend_19 { pt3dadd( 415.7, 286.988, 29.8365, 0.6864 ) }
    dend_19 { pt3dadd( 416.586, 287.693, 30.0227, 0.5848 ) }
    dend_19 { pt3dadd( 417.525, 288.306, 30.2327, 0.483 ) }
    dend_19 { pt3dadd( 418.433, 288.995, 30.3895, 0.5084 ) }
    dend_19 { pt3dadd( 419.228, 289.815, 30.4881, 0.5848 ) }
    dend_19 { pt3dadd( 419.937, 290.712, 30.5329, 0.6356 ) }
    dend_19 { pt3dadd( 420.584, 291.648, 30.504, 0.661 ) }
    dend_19 { pt3dadd( 421.248, 292.559, 30.3892, 0.661 ) }
    dend_19 { pt3dadd( 422.009, 293.41, 30.2842, 0.6864 ) }
    dend_19 { pt3dadd( 422.811, 294.204, 30.2742, 0.6356 ) }
    dend_19 { pt3dadd( 423.656, 294.959, 30.3355, 0.5848 ) }
    dend_19 { pt3dadd( 424.628, 295.493, 30.3752, 0.5084 ) }
    dend_19 { pt3dadd( 425.193, 296.357, 30.2758, 0.483 ) }
    dend_19 { pt3dadd( 425.5, 297.453, 30.2576, 0.4068 ) }
    dend_19 { pt3dadd( 425.925, 298.474, 30.3414, 0.4068 ) }
    dend_19 { pt3dadd( 426.637, 299.365, 30.4517, 0.4068 ) }
    dend_19 { pt3dadd( 427.353, 300.246, 30.5836, 0.483 ) }
    dend_19 { pt3dadd( 428.147, 301.041, 30.7838, 0.5084 ) }
    dend_19 { pt3dadd( 428.817, 301.896, 31.0156, 0.5592 ) }
    dend_19 { pt3dadd( 429.233, 302.932, 31.1847, 0.6102 ) }
    dend_19 { pt3dadd( 429.736, 303.936, 31.2197, 0.6356 ) }
    dend_19 { pt3dadd( 430.089, 305.005, 31.1534, 0.6356 ) }
    dend_19 { pt3dadd( 430.565, 306.02, 31.0453, 0.5848 ) }
    dend_19 { pt3dadd( 431.169, 306.989, 30.9742, 0.5848 ) }
    dend_19 { pt3dadd( 431.838, 307.911, 30.9154, 0.6102 ) }
    dend_19 { pt3dadd( 432.616, 308.742, 30.9002, 0.6864 ) }
    dend_19 { pt3dadd( 433.339, 309.598, 30.9907, 0.7372 ) }
    dend_19 { pt3dadd( 434.076, 310.428, 31.1564, 0.7372 ) }
    dend_19 { pt3dadd( 434.993, 311.108, 31.3155, 0.7118 ) }
    dend_19 { pt3dadd( 435.919, 311.75, 31.4958, 0.6356 ) }
    dend_19 { pt3dadd( 436.801, 312.423, 31.7531, 0.5848 ) }
    dend_19 { pt3dadd( 437.616, 313.207, 32.0186, 0.5084 ) }
    dend_19 { pt3dadd( 438.389, 314.036, 32.2059, 0.5084 ) }
    dend_19 { pt3dadd( 438.97, 314.989, 32.3786, 0.5338 ) }
    dend_19 { pt3dadd( 439.294, 316.071, 32.5441, 0.5592 ) }
    dend_19 { pt3dadd( 439.589, 317.173, 32.6732, 0.5338 ) }
    dend_19 { pt3dadd( 439.966, 318.23, 32.8608, 0.4576 ) }
    dend_19 { pt3dadd( 440.006, 319.241, 33.2156, 0.4322 ) }
    dend_19 { pt3dadd( 439.774, 320.295, 33.4757, 0.4576 ) }
    dend_19 { pt3dadd( 439.576, 321.4, 33.7548, 0.4576 ) }
    dend_19 { pt3dadd( 439.528, 322.519, 34.0931, 0.4068 ) }
    dend_19 { pt3dadd( 439.734, 323.604, 34.487, 0.3304 ) }
    dend_19 { pt3dadd( 440.032, 324.679, 34.8992, 0.305 ) }
    dend_19 { pt3dadd( 440.53, 325.664, 35.1445, 0.305 ) }
    dend_19 { pt3dadd( 441.274, 326.403, 35.5068, 0.305 ) }
    dend_19 { pt3dadd( 441.925, 327.337, 35.8075, 0.3304 ) }
    dend_19 { pt3dadd( 442.472, 328.339, 36.0702, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_19 { pt3dadd( 443.276, 329.111, 36.3745, 0.483 ) }
    dend_19 { pt3dadd( 443.954, 330.002, 36.563, 0.5338 ) }
    dend_19 { pt3dadd( 444.773, 330.716, 36.8542, 0.5338 ) }
    dend_19 { pt3dadd( 445.596, 331.5, 37.0941, 0.5084 ) }
    dend_19 { pt3dadd( 446.242, 332.321, 37.3937, 0.5084 ) }
    dend_19 { pt3dadd( 446.43, 333.404, 37.6513, 0.483 ) }
    dend_19 { pt3dadd( 447.162, 334.275, 37.8297, 0.5084 ) }
    dend_19 { pt3dadd( 447.995, 335.047, 37.8972, 0.4576 ) }
    dend_19 { pt3dadd( 448.783, 335.844, 37.8983, 0.4068 ) }
    dend_19 { pt3dadd( 449.63, 336.551, 37.9456, 0.3304 ) }
    dend_19 { pt3dadd( 450.513, 337.252, 37.9344, 0.356 ) }
    dend_19 { pt3dadd( 451.34, 338.006, 37.9142, 0.4576 ) }
    dend_19 { pt3dadd( 452.256, 338.63, 37.8137, 0.5338 ) }
    dend_19 { pt3dadd( 453.284, 339.121, 37.7269, 0.5084 ) }
    dend_19 { pt3dadd( 454.209, 339.766, 37.5962, 0.3814 ) }
    dend_19 { pt3dadd( 454.817, 340.47, 37.2697, 0.2796 ) }
    dend_19 { pt3dadd( 455.203, 341.39, 36.913, 0.2288 ) }
    dend_19 { pt3dadd( 455.883, 342.268, 36.6677, 0.2288 ) }
    dend_19 { pt3dadd( 456.872, 342.797, 36.5574, 0.2288 ) }
    dend_19 { pt3dadd( 457.682, 343.528, 36.6279, 0.2288 ) }
    dend_19 { pt3dadd( 458.107, 344.572, 36.8547, 0.2288 ) }
    dend_19 { pt3dadd( 458.592, 345.552, 37.2848, 0.2796 ) }
    dend_19 { pt3dadd( 459.128, 345.959, 38.0542, 0.3304 ) }
    dend_19 { pt3dadd( 459.909, 346.344, 38.9928, 0.4322 ) }
    dend_19 { pt3dadd( 460.862, 346.929, 39.8401, 0.4576 ) }
    dend_19 { pt3dadd( 461.808, 347.568, 40.4911, 0.5338 ) }
    dend_19 { pt3dadd( 462.809, 348.111, 41.0446, 0.5084 ) }
    dend_19 { pt3dadd( 463.574, 348.951, 41.4859, 0.483 ) }
    dend_19 { pt3dadd( 464.14, 349.888, 41.9317, 0.356 ) }
    dend_19 { pt3dadd( 465.209, 350.198, 42.3464, 0.2796 ) }
    dend_19 { pt3dadd( 466.185, 350.358, 42.8551, 0.2288 ) }
    dend_19 { pt3dadd( 466.507, 350.709, 43.7755, 0.2542 ) }
    dend_19 { pt3dadd( 466.759, 350.653, 45.0296, 0.2796 ) }
    dend_19 { pt3dadd( 467.568, 350.885, 46.4318, 0.305 ) }
    dend_19 { pt3dadd( 468.27, 351.254, 47.9248, 0.2796 ) }
    dend_19 { pt3dadd( 468.984, 351.718, 49.3951, 0.2542 ) }
    dend_19 { pt3dadd( 469.803, 352.363, 50.6834, 0.2288 ) }
    dend_19 { pt3dadd( 470.728, 352.861, 51.7493, 0.2288 ) }
    dend_19 { pt3dadd( 471.703, 353.368, 52.5358, 0.2288 ) }
    dend_19 { pt3dadd( 472.621, 354.045, 53.0354, 0.2542 ) }
    dend_19 { pt3dadd( 473.553, 354.648, 53.4033, 0.305 ) }
    dend_19 { pt3dadd( 474.601, 355.006, 53.6318, 0.356 ) }
    dend_19 { pt3dadd( 475.699, 355.277, 53.783, 0.356 ) }
    dend_19 { pt3dadd( 476.8, 355.571, 53.9151, 0.305 ) }
    dend_19 { pt3dadd( 477.726, 356.179, 54.0053, 0.2542 ) }
    dend_19 { pt3dadd( 478.762, 356.461, 54.0828, 0.2288 ) }
    dend_19 { pt3dadd( 479.903, 356.513, 54.1652, 0.2288 ) }
    dend_19 { pt3dadd( 480.896, 356.956, 54.32, 0.2288 ) }
    dend_19 { pt3dadd( 481.647, 357.708, 54.5969, 0.2288 ) }
    dend_19 { pt3dadd( 482.771, 357.843, 54.8377, 0.2288 ) }
    dend_19 { pt3dadd( 483.907, 357.843, 55.0547, 0.2288 ) }
    dend_19 { pt3dadd( 485.049, 357.849, 55.1827, 0.2542 ) }
    dend_19 { pt3dadd( 486.115, 358.015, 55.1023, 0.2796 ) }
    dend_19 { pt3dadd( 487.227, 358.08, 54.9643, 0.3304 ) }
    dend_19 { pt3dadd( 488.211, 358.24, 54.978, 0.3304 ) }
    dend_19 { pt3dadd( 489.241, 358.231, 54.8024, 0.3304 ) }
    dend_19 { pt3dadd( 490.25, 358.009, 54.591, 0.2796 ) }
    dend_19 { pt3dadd( 491.229, 357.779, 54.6174, 0.2542 ) }
    dend_19 { pt3dadd( 492.335, 357.725, 54.7081, 0.2288 ) }
    dend_19 { pt3dadd( 493.475, 357.689, 54.7126, 0.2542 ) }
    dend_19 { pt3dadd( 494.567, 357.526, 54.5686, 0.2796 ) }
    dend_19 { pt3dadd( 495.536, 357.215, 54.2394, 0.305 ) }
    dend_19 { pt3dadd( 496.512, 356.939, 53.776, 0.2796 ) }
    dend_19 { pt3dadd( 497.563, 356.607, 53.3624, 0.2542 ) }
    dend_19 { pt3dadd( 498.416, 355.889, 53.132, 0.2542 ) }
    dend_19 { pt3dadd( 499.27, 355.207, 53.0496, 0.2796 ) }
    dend_19 { pt3dadd( 500.258, 354.642, 52.9976, 0.3304 ) }
    dend_19 { pt3dadd( 501.188, 353.997, 53.0258, 0.3304 ) }
    dend_19 { pt3dadd( 502.015, 353.353, 52.988, 0.3304 ) }
    dend_19 { pt3dadd( 502.964, 352.949, 52.8811, 0.2796 ) }
    dend_19 { pt3dadd( 503.774, 352.694, 53.0256, 0.305 ) }
    dend_19 { pt3dadd( 504.758, 352.173, 53.0734, 0.3304 ) }
    dend_19 { pt3dadd( 505.632, 351.449, 53.0474, 0.4576 ) }
    dend_19 { pt3dadd( 506.678, 351.094, 52.64, 0.483 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 327.262, 288.789, 33.7243, 0.5338 ) }
    dend_13 { pt3dadd( 326.591, 288.989, 33.8943, 0.4322 ) }
    dend_13 { pt3dadd( 325.524, 289.274, 34.2076, 0.356 ) }
    dend_13 { pt3dadd( 324.548, 289.717, 34.6987, 0.3304 ) }
    dend_13 { pt3dadd( 323.697, 290.364, 35.2327, 0.3304 ) }
    dend_13 { pt3dadd( 322.883, 290.99, 35.8434, 0.3304 ) }
    dend_13 { pt3dadd( 321.891, 291.307, 36.5714, 0.3814 ) }
    dend_13 { pt3dadd( 321.419, 291.822, 37.4965, 0.4068 ) }
    dend_13 { pt3dadd( 321.558, 292.914, 38.3186, 0.4576 ) }
    dend_13 { pt3dadd( 321.033, 293.41, 39.1667, 0.483 ) }
    dend_13 { pt3dadd( 320.16, 293.874, 39.8065, 0.5338 ) }
    dend_13 { pt3dadd( 319.551, 294.581, 40.4421, 0.6864 ) }
    dend_13 { pt3dadd( 318.916, 295.402, 40.9618, 0.7626 ) }
    dend_13 { pt3dadd( 318.28, 296.348, 41.3445, 0.7626 ) }
    dend_13 { pt3dadd( 317.423, 297.088, 41.7343, 0.5848 ) }
    dend_13 { pt3dadd( 316.497, 297.423, 42.3027, 0.483 ) }
    dend_13 { pt3dadd( 315.379, 297.392, 42.8831, 0.483 ) }
    dend_13 { pt3dadd( 314.49, 297.909, 43.3888, 0.5848 ) }
    dend_13 { pt3dadd( 313.604, 298.225, 44.1154, 0.6356 ) }
    dend_13 { pt3dadd( 312.587, 298.377, 44.9618, 0.5848 ) }
    dend_13 { pt3dadd( 311.722, 298.246, 45.9486, 0.5084 ) }
    dend_13 { pt3dadd( 311.035, 297.537, 46.909, 0.4322 ) }
    dend_13 { pt3dadd( 310.078, 297.025, 47.7582, 0.4322 ) }
    dend_13 { pt3dadd( 309.117, 296.638, 48.6366, 0.3814 ) }
    dend_13 { pt3dadd( 308.02, 296.541, 49.4284, 0.4068 ) }
    dend_13 { pt3dadd( 307.126, 297.059, 50.2197, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 327.262, 288.789, 33.7243, 0.5338 ) }
    dend_10 { pt3dadd( 326.575, 288.36, 33.98, 0.4068 ) }
    dend_10 { pt3dadd( 325.588, 287.799, 35.0238, 0.6102 ) }
    dend_10 { pt3dadd( 324.576, 287.342, 35.4508, 0.7118 ) }
    dend_10 { pt3dadd( 323.675, 286.859, 36.0581, 0.7372 ) }
    dend_10 { pt3dadd( 322.934, 286.233, 36.822, 0.6864 ) }
    dend_10 { pt3dadd( 322.224, 285.433, 37.595, 0.7118 ) }
    dend_10 { pt3dadd( 321.646, 284.452, 38.2505, 0.661 ) }
    dend_10 { pt3dadd( 321.225, 283.395, 38.7713, 0.6102 ) }
    dend_10 { pt3dadd( 321.022, 282.28, 39.2101, 0.5592 ) }
    dend_10 { pt3dadd( 320.828, 281.2, 39.6491, 0.6356 ) }
    dend_10 { pt3dadd( 320.385, 280.181, 40.0968, 0.661 ) }
    dend_10 { pt3dadd( 320.023, 279.127, 40.5499, 0.6102 ) }
    dend_10 { pt3dadd( 319.88, 277.994, 40.9615, 0.483 ) }
    dend_10 { pt3dadd( 319.854, 276.853, 41.3504, 0.3814 ) }
    dend_10 { pt3dadd( 319.814, 275.717, 41.7516, 0.3814 ) }
    dend_10 { pt3dadd( 319.67, 274.587, 42.1644, 0.483 ) }
    dend_10 { pt3dadd( 319.445, 273.478, 42.6381, 0.661 ) }
    dend_10 { pt3dadd( 319.348, 272.361, 43.2166, 0.8136 ) }
    dend_10 { pt3dadd( 319.182, 271.303, 43.9516, 0.8136 ) }
    dend_10 { pt3dadd( 318.944, 270.35, 44.8706, 0.7118 ) }
    dend_10 { pt3dadd( 318.675, 269.522, 45.9603, 0.5084 ) }
    dend_10 { pt3dadd( 317.952, 268.962, 47.1019, 0.4322 ) }
    dend_10 { pt3dadd( 316.893, 268.816, 48.1771, 0.5084 ) }
    dend_10 { pt3dadd( 315.844, 268.829, 49.1806, 0.661 ) }
    dend_10 { pt3dadd( 314.745, 268.961, 50.0506, 0.7626 ) }
    dend_10 { pt3dadd( 313.625, 268.952, 50.7657, 0.7118 ) }
    dend_10 { pt3dadd( 312.671, 268.467, 51.2238, 0.6864 ) }
    dend_10 { pt3dadd( 311.92, 267.918, 51.7619, 0.6356 ) }
    dend_10 { pt3dadd( 311.383, 267.281, 52.472, 0.5848 ) }
    dend_10 { pt3dadd( 310.348, 267.059, 52.9385, 0.5084 ) }
    dend_10 { pt3dadd( 309.252, 267.036, 53.429, 0.4576 ) }
    dend_10 { pt3dadd( 308.124, 267.211, 53.8555, 0.483 ) }
    dend_10 { pt3dadd( 307.051, 267.49, 54.1436, 0.5338 ) }
    dend_10 { pt3dadd( 305.973, 267.607, 54.5462, 0.5592 ) }
    dend_10 { pt3dadd( 305.005, 268.029, 55.0738, 0.5848 ) }
    dend_10 { pt3dadd( 304.192, 268.789, 55.6301, 0.6102 ) }
    dend_10 { pt3dadd( 303.205, 269.051, 56.3528, 0.6356 ) }
    dend_10 { pt3dadd( 302.134, 269.004, 57.1771, 0.5848 ) }
    dend_10 { pt3dadd( 301.08, 269.092, 58.032, 0.4322 ) }
    dend_10 { pt3dadd( 300.218, 269.396, 58.8756, 0.305 ) }
    dend_10 { pt3dadd( 299.592, 269.015, 59.8948, 0.2796 ) }
    dend_10 { pt3dadd( 298.687, 268.692, 60.8947, 0.3814 ) }
    dend_10 { pt3dadd( 297.645, 268.318, 61.6263, 0.483 ) }
    dend_10 { pt3dadd( 296.69, 267.848, 62.1849, 0.5084 ) }
    dend_10 { pt3dadd( 295.7, 267.547, 62.7939, 0.4322 ) }
    dend_10 { pt3dadd( 294.669, 267.236, 63.3724, 0.356 ) }
    dend_10 { pt3dadd( 293.576, 266.939, 63.7949, 0.2796 ) }
    dend_10 { pt3dadd( 292.528, 266.582, 64.1788, 0.2542 ) }
    dend_10 { pt3dadd( 291.509, 266.426, 64.6666, 0.2542 ) }
    dend_10 { pt3dadd( 290.534, 266.875, 65.1526, 0.305 ) }
    dend_10 { pt3dadd( 289.494, 266.815, 65.581, 0.356 ) }
    dend_10 { pt3dadd( 288.539, 266.245, 65.863, 0.4068 ) }
    dend_10 { pt3dadd( 287.771, 266.415, 66.3452, 0.4068 ) }
    dend_10 { pt3dadd( 286.675, 266.669, 66.7047, 0.4068 ) }
    dend_10 { pt3dadd( 285.58, 266.629, 67.0015, 0.3304 ) }
    dend_10 { pt3dadd( 284.569, 266.159, 67.2888, 0.305 ) }
    dend_10 { pt3dadd( 283.555, 265.701, 67.7015, 0.2796 ) }
    dend_10 { pt3dadd( 282.732, 265.621, 68.3948, 0.305 ) }
    dend_10 { pt3dadd( 282.257, 265.327, 69.3806, 0.305 ) }
    dend_10 { pt3dadd( 281.506, 264.7, 70.392, 0.356 ) }
    dend_10 { pt3dadd( 281.112, 263.695, 71.2043, 0.5084 ) }
    dend_10 { pt3dadd( 280.901, 262.81, 72.1204, 0.7118 ) }
    dend_10 { pt3dadd( 280.802, 261.808, 73.0486, 0.8136 ) }
    dend_10 { pt3dadd( 280.394, 260.755, 73.8301, 0.7372 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 307.126, 297.059, 50.2197, 0.3814 ) }
    dend_15 { pt3dadd( 306.86, 297.744, 51.0152, 0.483 ) }
    dend_15 { pt3dadd( 306.464, 298.727, 51.7194, 0.4322 ) }
    dend_15 { pt3dadd( 305.81, 299.633, 52.204, 0.4068 ) }
    dend_15 { pt3dadd( 305.314, 300.631, 52.5375, 0.4322 ) }
    dend_15 { pt3dadd( 305.085, 301.603, 52.9284, 0.356 ) }
    dend_15 { pt3dadd( 304.56, 302.538, 53.2039, 0.2796 ) }
    dend_15 { pt3dadd( 304.052, 303.459, 53.2272, 0.2288 ) }
    dend_15 { pt3dadd( 303.797, 304.537, 53.3201, 0.2288 ) }
    dend_15 { pt3dadd( 303.279, 305.511, 53.4624, 0.2288 ) }
    dend_15 { pt3dadd( 302.988, 306.593, 53.48, 0.2288 ) }
    dend_15 { pt3dadd( 302.734, 307.608, 53.3764, 0.2288 ) }
    dend_15 { pt3dadd( 302.144, 308.446, 53.2372, 0.2288 ) }
    dend_15 { pt3dadd( 301.891, 309.548, 53.2076, 0.2796 ) }
    dend_15 { pt3dadd( 301.622, 310.603, 53.3229, 0.3304 ) }
    dend_15 { pt3dadd( 301.431, 311.6, 53.6701, 0.3814 ) }
    dend_15 { pt3dadd( 300.931, 312.483, 54.1968, 0.3814 ) }
    dend_15 { pt3dadd( 300.54, 313.469, 54.7537, 0.3814 ) }
    dend_15 { pt3dadd( 300.015, 314.418, 55.2031, 0.3814 ) }
    dend_15 { pt3dadd( 299.592, 315.418, 55.4582, 0.3304 ) }
    dend_15 { pt3dadd( 299.505, 316.545, 55.6052, 0.2796 ) }
    dend_15 { pt3dadd( 299.398, 317.682, 55.7102, 0.2288 ) }
    dend_15 { pt3dadd( 298.981, 318.731, 55.8113, 0.2288 ) }
    dend_15 { pt3dadd( 298.424, 319.71, 55.9978, 0.2288 ) }
    dend_15 { pt3dadd( 297.864, 320.512, 56.394, 0.2288 ) }
    dend_15 { pt3dadd( 297.204, 321.329, 56.8828, 0.2288 ) }
    dend_15 { pt3dadd( 296.985, 322.414, 57.2762, 0.2288 ) }
    dend_15 { pt3dadd( 296.394, 323.372, 57.5151, 0.2542 ) }
    dend_15 { pt3dadd( 295.592, 324.178, 57.6475, 0.2796 ) }
    dend_15 { pt3dadd( 295.575, 325.261, 57.5369, 0.305 ) }
    dend_15 { pt3dadd( 294.895, 326.162, 57.3818, 0.2796 ) }
    dend_15 { pt3dadd( 294.51, 327.226, 57.0816, 0.2542 ) }
    dend_15 { pt3dadd( 294.317, 328.246, 56.5628, 0.2288 ) }
    dend_15 { pt3dadd( 294.07, 329.342, 55.9714, 0.2288 ) }
    dend_15 { pt3dadd( 293.817, 330.43, 55.3798, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_15 { pt3dadd( 293.509, 331.307, 54.635, 0.2288 ) }
    dend_15 { pt3dadd( 292.97, 332.135, 53.8798, 0.2288 ) }
    dend_15 { pt3dadd( 292.435, 332.846, 52.9469, 0.2288 ) }
    dend_15 { pt3dadd( 292.282, 333.397, 51.8182, 0.2288 ) }
    dend_15 { pt3dadd( 292.218, 334.191, 50.6764, 0.2288 ) }
    dend_15 { pt3dadd( 292.308, 335.267, 49.6703, 0.2288 ) }
    dend_15 { pt3dadd( 292.642, 336.293, 48.8116, 0.2288 ) }
    dend_15 { pt3dadd( 292.526, 337.347, 48.2182, 0.2288 ) }
    dend_15 { pt3dadd( 291.884, 338.23, 47.9735, 0.2542 ) }
    dend_15 { pt3dadd( 291.137, 339.077, 47.945, 0.2796 ) }
    dend_15 { pt3dadd( 290.701, 339.761, 47.7532, 0.305 ) }
    dend_15 { pt3dadd( 289.926, 340.452, 47.5258, 0.2796 ) }
    dend_15 { pt3dadd( 289.255, 341.297, 47.5608, 0.2796 ) }
    dend_15 { pt3dadd( 288.509, 341.843, 47.8276, 0.2796 ) }
    dend_15 { pt3dadd( 287.691, 342.398, 48.2182, 0.305 ) }
    dend_15 { pt3dadd( 287.067, 343.082, 48.8076, 0.305 ) }
    dend_15 { pt3dadd( 286.228, 343.67, 49.331, 0.3304 ) }
    dend_15 { pt3dadd( 285.596, 343.963, 49.4441, 0.3814 ) }
    dend_15 { pt3dadd( 285.142, 344.694, 49.3083, 0.4068 ) }
    dend_15 { pt3dadd( 284.674, 344.767, 49.5239, 0.3814 ) }
    dend_15 { pt3dadd( 283.839, 345.433, 49.7832, 0.3304 ) }
    dend_15 { pt3dadd( 283.28, 346.415, 50.041, 0.305 ) }
    dend_15 { pt3dadd( 282.794, 347.44, 50.3098, 0.305 ) }
    dend_15 { pt3dadd( 282.374, 348.373, 50.6892, 0.2796 ) }
    dend_15 { pt3dadd( 282.289, 349.505, 50.9062, 0.305 ) }
    dend_15 { pt3dadd( 282.069, 350.55, 50.7746, 0.3304 ) }
    dend_15 { pt3dadd( 281.939, 351.619, 50.4224, 0.4068 ) }
    dend_15 { pt3dadd( 281.642, 352.673, 49.9542, 0.4322 ) }
    dend_15 { pt3dadd( 280.922, 353.537, 49.4816, 0.4576 ) }
    dend_15 { pt3dadd( 280.047, 354.142, 48.9266, 0.4322 ) }
    dend_15 { pt3dadd( 279.339, 354.976, 48.4226, 0.3814 ) }
    dend_15 { pt3dadd( 278.943, 356.044, 48.0547, 0.3814 ) }
    dend_15 { pt3dadd( 278.531, 357.11, 47.8416, 0.4322 ) }
    dend_15 { pt3dadd( 278.057, 358.146, 47.7238, 0.483 ) }
    dend_15 { pt3dadd( 277.538, 359.145, 47.6174, 0.4576 ) }
    dend_15 { pt3dadd( 277.134, 360.165, 47.5796, 0.3814 ) }
    dend_15 { pt3dadd( 276.962, 361.201, 47.7596, 0.3304 ) }
    dend_15 { pt3dadd( 276.894, 362.282, 48.0298, 0.3304 ) }
    dend_15 { pt3dadd( 276.789, 363.417, 48.2278, 0.356 ) }
    dend_15 { pt3dadd( 276.543, 364.53, 48.3406, 0.3814 ) }
    dend_15 { pt3dadd( 276.347, 365.634, 48.4252, 0.3304 ) }
    dend_15 { pt3dadd( 276.389, 366.761, 48.501, 0.2796 ) }
    dend_15 { pt3dadd( 276.367, 367.898, 48.4798, 0.2288 ) }
    dend_15 { pt3dadd( 276.147, 368.965, 48.3392, 0.2288 ) }
    dend_15 { pt3dadd( 276.078, 369.849, 48.0847, 0.2288 ) }
    dend_15 { pt3dadd( 276.727, 370.754, 47.8979, 0.2288 ) }
    dend_15 { pt3dadd( 277.191, 371.738, 47.8884, 0.2288 ) }
    dend_15 { pt3dadd( 277.45, 372.846, 47.9074, 0.2288 ) }
    dend_15 { pt3dadd( 277.995, 373.827, 47.8867, 0.2288 ) }
    dend_15 { pt3dadd( 278.279, 374.93, 47.9301, 0.2542 ) }
    dend_15 { pt3dadd( 278.761, 375.968, 48.001, 0.2796 ) }
    dend_15 { pt3dadd( 279.036, 377.077, 48.0536, 0.305 ) }
    dend_15 { pt3dadd( 279.087, 378.211, 48.1552, 0.2796 ) }
    dend_15 { pt3dadd( 279.134, 379.34, 48.3162, 0.2796 ) }
    dend_15 { pt3dadd( 279.007, 380.338, 48.3832, 0.305 ) }
    dend_15 { pt3dadd( 278.823, 381.276, 48.5764, 0.356 ) }
    dend_15 { pt3dadd( 278.619, 382.382, 48.6962, 0.356 ) }
    dend_15 { pt3dadd( 278.435, 383.503, 48.8099, 0.305 ) }
    dend_15 { pt3dadd( 278.086, 384.59, 48.8849, 0.2796 ) }
    dend_15 { pt3dadd( 277.709, 385.669, 48.9294, 0.2796 ) }
    dend_15 { pt3dadd( 277.471, 386.783, 48.9706, 0.305 ) }
    dend_15 { pt3dadd( 277.41, 387.922, 48.9941, 0.2796 ) }
    dend_15 { pt3dadd( 277.438, 389.065, 49.0344, 0.2542 ) }
    dend_15 { pt3dadd( 277.532, 390.185, 49.1417, 0.2288 ) }
    dend_15 { pt3dadd( 277.768, 391.274, 49.3178, 0.2288 ) }
    dend_15 { pt3dadd( 278.013, 392.385, 49.4796, 0.2288 ) }
    dend_15 { pt3dadd( 278.223, 393.507, 49.5956, 0.2288 ) }
    dend_15 { pt3dadd( 278.843, 394.377, 49.6678, 0.2288 ) }
    dend_15 { pt3dadd( 279.826, 394.958, 49.6989, 0.2288 ) }
    dend_15 { pt3dadd( 280.867, 395.403, 49.656, 0.2288 ) }
    dend_15 { pt3dadd( 281.928, 395.811, 49.5746, 0.2288 ) }
    dend_15 { pt3dadd( 282.965, 396.292, 49.5118, 0.2288 ) }
    dend_15 { pt3dadd( 284.038, 396.672, 49.4782, 0.2288 ) }
    dend_15 { pt3dadd( 285.158, 396.895, 49.4718, 0.2288 ) }
    dend_15 { pt3dadd( 286.175, 397.341, 49.534, 0.2288 ) }
    dend_15 { pt3dadd( 287.105, 397.995, 49.6376, 0.2288 ) }
    dend_15 { pt3dadd( 287.707, 398.93, 49.7336, 0.2288 ) }
    dend_15 { pt3dadd( 288.378, 399.839, 49.7938, 0.2288 ) }
    dend_15 { pt3dadd( 289.163, 400.663, 49.8708, 0.2288 ) }
    dend_15 { pt3dadd( 289.93, 401.509, 49.9548, 0.2288 ) }
    dend_15 { pt3dadd( 290.348, 402.547, 49.9705, 0.2288 ) }
    dend_15 { pt3dadd( 290.792, 403.571, 50.0466, 0.2288 ) }
    dend_15 { pt3dadd( 291.019, 404.682, 50.1147, 0.2288 ) }
    dend_15 { pt3dadd( 291.196, 405.811, 50.1542, 0.2542 ) }
    dend_15 { pt3dadd( 291.674, 406.804, 50.0836, 0.2796 ) }
    dend_15 { pt3dadd( 292.105, 407.855, 50.0242, 0.305 ) }
    dend_15 { pt3dadd( 292.37, 408.966, 50.0063, 0.2796 ) }
    dend_15 { pt3dadd( 292.418, 410.106, 50.0013, 0.2542 ) }
    dend_15 { pt3dadd( 292.604, 411.231, 50.0195, 0.2288 ) }
    dend_15 { pt3dadd( 293.2, 412.159, 50.1183, 0.2288 ) }
    dend_15 { pt3dadd( 293.671, 413.157, 50.274, 0.2288 ) }
    dend_15 { pt3dadd( 294.337, 414.051, 50.4151, 0.2542 ) }
    dend_15 { pt3dadd( 294.899, 415.001, 50.3348, 0.305 ) }
    dend_15 { pt3dadd( 295.369, 415.827, 49.9582, 0.356 ) }
    dend_15 { pt3dadd( 296.097, 416.607, 49.4421, 0.356 ) }
    dend_15 { pt3dadd( 296.741, 417.528, 48.9191, 0.305 ) }
    dend_15 { pt3dadd( 297.466, 418.342, 48.5814, 0.2542 ) }
    dend_15 { pt3dadd( 298.187, 419.212, 48.3174, 0.2542 ) }
    dend_15 { pt3dadd( 299.059, 419.936, 48.0469, 0.3304 ) }
    dend_15 { pt3dadd( 299.703, 420.851, 47.64, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_15 { pt3dadd( 300.261, 421.651, 46.9966, 0.5592 ) }
    dend_15 { pt3dadd( 300.521, 422.554, 46.1628, 0.6356 ) }
    dend_15 { pt3dadd( 300.594, 423.389, 45.0954, 0.6102 ) }
    dend_15 { pt3dadd( 300.489, 423.875, 43.7786, 0.6356 ) }
    dend_15 { pt3dadd( 300.599, 424.678, 42.4264, 0.5848 ) }
    dend_15 { pt3dadd( 301.231, 425.543, 41.2586, 0.5848 ) }
    dend_15 { pt3dadd( 301.837, 426.46, 40.3287, 0.5084 ) }
    dend_15 { pt3dadd( 301.626, 427.572, 39.7046, 0.5084 ) }
    dend_15 { pt3dadd( 301.22, 428.6, 39.2442, 0.5084 ) }
    dend_15 { pt3dadd( 301.217, 429.645, 39.032, 0.5084 ) }
    dend_15 { pt3dadd( 300.95, 430.576, 38.8979, 0.4322 ) }
    dend_15 { pt3dadd( 300.601, 431.304, 38.5154, 0.356 ) }
    dend_15 { pt3dadd( 300.04, 432.181, 38.1805, 0.305 ) }
    dend_15 { pt3dadd( 299.837, 433.284, 37.9319, 0.3304 ) }
    dend_15 { pt3dadd( 299.744, 434.396, 37.704, 0.3814 ) }
    dend_15 { pt3dadd( 298.855, 435.011, 37.6037, 0.4322 ) }
    dend_15 { pt3dadd( 298.349, 435.909, 37.7826, 0.4322 ) }
    dend_15 { pt3dadd( 298.355, 437.008, 38.64, 0.3814 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 18/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 307.126, 297.059, 50.2197, 0.3814 ) }
    dend_14 { pt3dadd( 306.261, 297.59, 50.6878, 0.356 ) }
    dend_14 { pt3dadd( 305.172, 297.519, 52.2463, 0.356 ) }
    dend_14 { pt3dadd( 304.381, 296.962, 52.9612, 0.3814 ) }
    dend_14 { pt3dadd( 303.484, 296.492, 53.8364, 0.356 ) }
    dend_14 { pt3dadd( 302.619, 296.02, 54.824, 0.356 ) }
    dend_14 { pt3dadd( 301.886, 295.32, 55.8146, 0.3814 ) }
    dend_14 { pt3dadd( 301.609, 294.315, 56.7722, 0.4322 ) }
    dend_14 { pt3dadd( 301.278, 293.268, 57.5893, 0.4322 ) }
    dend_14 { pt3dadd( 300.621, 292.429, 58.2336, 0.3814 ) }
    dend_14 { pt3dadd( 299.953, 291.696, 58.7818, 0.3304 ) }
    dend_14 { pt3dadd( 299.706, 290.597, 59.1119, 0.356 ) }
    dend_14 { pt3dadd( 299.043, 289.744, 59.3538, 0.4322 ) }
    dend_14 { pt3dadd( 298.235, 289.0, 59.416, 0.483 ) }
    dend_14 { pt3dadd( 297.173, 288.765, 59.4832, 0.4322 ) }
    dend_14 { pt3dadd( 296.079, 288.898, 59.619, 0.3814 ) }
    dend_14 { pt3dadd( 295.065, 289.395, 59.7341, 0.356 ) }
    dend_14 { pt3dadd( 293.984, 289.758, 59.7946, 0.4322 ) }
    dend_14 { pt3dadd( 292.864, 289.89, 59.64, 0.4322 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 37/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 280.394, 260.755, 73.8301, 0.7372 ) }
    dend_12 { pt3dadd( 279.755, 259.778, 74.6021, 0.3304 ) }
    dend_12 { pt3dadd( 279.469, 258.754, 75.3024, 0.2796 ) }
    dend_12 { pt3dadd( 279.584, 257.664, 75.9668, 0.2288 ) }
    dend_12 { pt3dadd( 279.6, 256.535, 76.4744, 0.2796 ) }
    dend_12 { pt3dadd( 279.993, 255.552, 76.9454, 0.3814 ) }
    dend_12 { pt3dadd( 280.451, 254.524, 77.3447, 0.483 ) }
    dend_12 { pt3dadd( 281.241, 253.708, 77.6278, 0.483 ) }
    dend_12 { pt3dadd( 281.631, 252.656, 77.7736, 0.3814 ) }
    dend_12 { pt3dadd( 281.767, 251.527, 77.8484, 0.305 ) }
    dend_12 { pt3dadd( 281.916, 250.396, 77.9576, 0.3304 ) }
    dend_12 { pt3dadd( 282.162, 249.28, 78.0825, 0.4068 ) }
    dend_12 { pt3dadd( 282.28, 248.277, 78.393, 0.4576 ) }
    dend_12 { pt3dadd( 283.043, 247.46, 78.7052, 0.4322 ) }
    dend_12 { pt3dadd( 283.312, 246.471, 79.114, 0.4576 ) }
    dend_12 { pt3dadd( 283.521, 245.357, 79.3523, 0.4576 ) }
    dend_12 { pt3dadd( 283.958, 244.339, 79.4069, 0.483 ) }
    dend_12 { pt3dadd( 284.681, 243.466, 79.4184, 0.4576 ) }
    dend_12 { pt3dadd( 285.535, 242.758, 79.2926, 0.4576 ) }
    dend_12 { pt3dadd( 286.594, 242.409, 79.0821, 0.4576 ) }
    dend_12 { pt3dadd( 287.618, 241.996, 78.8869, 0.4322 ) }
    dend_12 { pt3dadd( 288.662, 241.689, 78.5809, 0.483 ) }
    dend_12 { pt3dadd( 289.788, 241.742, 78.2421, 0.5338 ) }
    dend_12 { pt3dadd( 290.894, 241.996, 77.8736, 0.6356 ) }
    dend_12 { pt3dadd( 291.956, 242.226, 77.4155, 0.5848 ) }
    dend_12 { pt3dadd( 293.004, 242.436, 76.8961, 0.5084 ) }
    dend_12 { pt3dadd( 294.104, 242.561, 76.5047, 0.4068 ) }
    dend_12 { pt3dadd( 295.041, 242.823, 76.1398, 0.4322 ) }
    dend_12 { pt3dadd( 295.922, 243.275, 75.619, 0.483 ) }
    dend_12 { pt3dadd( 296.798, 243.473, 74.9459, 0.483 ) }
    dend_12 { pt3dadd( 297.731, 243.677, 74.226, 0.4068 ) }
    dend_12 { pt3dadd( 298.819, 243.968, 73.6781, 0.3304 ) }
    dend_12 { pt3dadd( 299.896, 244.196, 73.381, 0.305 ) }
    dend_12 { pt3dadd( 300.905, 244.62, 73.3065, 0.2796 ) }
    dend_12 { pt3dadd( 301.985, 244.948, 73.2928, 0.305 ) }
    dend_12 { pt3dadd( 303.014, 245.322, 73.1615, 0.3814 ) }
    dend_12 { pt3dadd( 303.988, 245.883, 72.9618, 0.5084 ) }
    dend_12 { pt3dadd( 304.885, 246.555, 72.8062, 0.5592 ) }
    dend_12 { pt3dadd( 305.967, 246.873, 72.6312, 0.5338 ) }
    dend_12 { pt3dadd( 307.106, 246.972, 72.4338, 0.5084 ) }
    dend_12 { pt3dadd( 307.393, 247.333, 71.12, 0.483 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 78/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 280.394, 260.755, 73.8301, 0.7372 ) }
    dend_11 { pt3dadd( 279.74, 259.862, 74.6032, 0.4322 ) }
    dend_11 { pt3dadd( 278.982, 259.07, 75.7481, 0.4068 ) }
    dend_11 { pt3dadd( 278.208, 258.328, 76.2678, 0.356 ) }
    dend_11 { pt3dadd( 277.227, 257.835, 76.8527, 0.305 ) }
    dend_11 { pt3dadd( 276.175, 257.566, 77.5379, 0.2542 ) }
    dend_11 { pt3dadd( 275.099, 257.301, 78.2824, 0.2288 ) }
    dend_11 { pt3dadd( 274.216, 256.634, 79.004, 0.2542 ) }
    dend_11 { pt3dadd( 273.812, 255.622, 79.7684, 0.305 ) }
    dend_11 { pt3dadd( 273.839, 254.793, 80.7604, 0.356 ) }
    dend_11 { pt3dadd( 273.97, 253.858, 81.8832, 0.3814 ) }
    dend_11 { pt3dadd( 274.013, 253.374, 83.2073, 0.4068 ) }
    dend_11 { pt3dadd( 273.426, 252.923, 84.5897, 0.4576 ) }
    dend_11 { pt3dadd( 272.973, 251.895, 85.7181, 0.5338 ) }
    dend_11 { pt3dadd( 272.493, 250.884, 86.6491, 0.5592 ) }
    dend_11 { pt3dadd( 272.115, 250.487, 87.1282, 0.5338 ) }
    dend_11 { pt3dadd( 271.628, 249.798, 87.7685, 0.4322 ) }
    dend_11 { pt3dadd( 270.929, 249.028, 88.4153, 0.3304 ) }
    dend_11 { pt3dadd( 270.057, 248.305, 88.996, 0.2542 ) }
    dend_11 { pt3dadd( 269.284, 247.511, 89.6042, 0.2288 ) }
    dend_11 { pt3dadd( 268.381, 246.988, 90.3297, 0.2288 ) }
    dend_11 { pt3dadd( 267.562, 246.351, 91.1047, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_11 { pt3dadd( 267.135, 245.318, 91.8224, 0.2542 ) }
    dend_11 { pt3dadd( 266.775, 244.48, 92.6867, 0.2796 ) }
    dend_11 { pt3dadd( 266.293, 243.551, 93.5962, 0.3304 ) }
    dend_11 { pt3dadd( 265.885, 242.491, 94.4516, 0.3814 ) }
    dend_11 { pt3dadd( 265.731, 241.39, 95.2921, 0.4322 ) }
    dend_11 { pt3dadd( 265.703, 240.641, 96.3158, 0.4322 ) }
    dend_11 { pt3dadd( 265.66, 239.972, 97.48, 0.356 ) }
    dend_11 { pt3dadd( 265.216, 239.039, 98.5337, 0.2796 ) }
    dend_11 { pt3dadd( 265.522, 237.952, 100.24, 0.2796 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_35, dend_32, dend_25, dend_16, dend_5, dend_0, dend_34, dend_33, dend_31, dend_26, dend_22, dend_17, dend_7, dend_6, dend_4, dend_1, dend_30, dend_27, dend_24, dend_23, dend_21, dend_18, dend_9, dend_8, dend_3, dend_2, dend_29, dend_28, dend_20, dend_19, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
    dend = new SectionList()
    dend_35 dend.append()
    dend_32 dend.append()
    dend_25 dend.append()
    dend_16 dend.append()
    dend_5 dend.append()
    dend_0 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_31 dend.append()
    dend_26 dend.append()
    dend_22 dend.append()
    dend_17 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_30 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_21 dend.append()
    dend_18 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_593, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_593 = new SectionList()
    soma_0 OneSecGrp_SectionRef_593.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.6804514  // units: uF/cm2
    forsec axon cm = 1.6804514  // units: uF/cm2
    forsec dend cm = 1.6804514  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 150.29338  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 4.3966157E-8  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.09525637  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.1617255E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.0026980801  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.25846925  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 2.4600746E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.0017580192  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.001559901  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.6592015E-6  // units: S cm-2
        e_pas_nml2 = -88.47498  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 7.267633E-4  // units: S cm-2
        e_pas_nml2 = -88.47498  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 7.0026426E-6  // units: S cm-2
        e_pas_nml2 = -88.47498  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 7.280526E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 6.676238E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472440759
    forsec soma {
        insert CaDynamics_472440759
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_35 nseg = 3
    dend_32 nseg = 3
    dend_0 nseg = 5
    dend_34 nseg = 5
    dend_33 nseg = 5
    dend_31 nseg = 7
    dend_6 nseg = 5
    dend_30 nseg = 9
    dend_24 nseg = 5
    dend_23 nseg = 5
    dend_8 nseg = 7
    dend_3 nseg = 3
    dend_2 nseg = 5
    dend_29 nseg = 7
    dend_28 nseg = 13
    dend_20 nseg = 3
    dend_19 nseg = 9
    dend_10 nseg = 3
    dend_15 nseg = 9
    dend_12 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472440759


