// Cell: bAC217_L6_DBC_52e1730bbd_0_0
/*
{
  "id" : "bAC217_L6_DBC_52e1730bbd_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.28115, -11.0873, 1.6054, 2.71903", "-3.90555, -10.0189, 1.46271, 4.54351", "-3.52995, -8.95054, 1.32001, 6.06676", "-3.15435, -7.88215, 1.17732, 7.70089", "-2.77875, -6.81375, 1.03462, 9.50221", "-2.40315, -5.74536, 0.891931, 11.4189", "-2.02755, -4.67696, 0.749237, 12.8756", "-1.65195, -3.60857, 0.606544, 14.0093", "-1.27635, -2.54017, 0.46385, 14.551", "-0.900746, -1.47178, 0.321156, 14.6039", "-0.525145, -0.403386, 0.178462, 14.3615", "-0.149545, 0.665008, 0.0357687, 13.9828", "0.226055, 1.7334, -0.106925, 13.3923", "0.601655, 2.8018, -0.249619, 12.9274", "0.977256, 3.87019, -0.392313, 12.1033", "1.35286, 4.93859, -0.535006, 10.4725", "1.72846, 6.00698, -0.6777, 8.96565", "2.10406, 7.07537, -0.820394, 7.72714", "2.47966, 8.14377, -0.963088, 6.28127", "2.85526, 9.21216, -1.10578, 4.62664", "3.23086, 10.2806, -1.24848, 2.72659" ]
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-6.8285, -4.35803, -7.44048, 0.74", "-6.8285, -4.35803, -7.44048, 0.74", "-7.55287, -5.56975, -7.51108, 0.74", "-7.61167, -5.63416, -7.51698, 0.74", "-8.77273, -6.46663, -7.62835, 0.66", "-9.90724, -7.0051, -7.72941, 0.44", "-11.2278, -7.43251, -7.83713, 0.44", "-12.4586, -7.62437, -8.07357, 0.44", "-13.2489, -7.66905, -8.28017, 1.03", "-14.2316, -7.71399, -8.63644, 1.33", "-15.1035, -7.71792, -9.03237, 1.47", "-15.9673, -7.75536, -9.53501, 0.66", "-17.6292, -8.27761, -10.998, 0.37", "-17.997, -8.6202, -11.5685, 0.37", "-18.505, -9.46113, -12.7164, 1.11", "-18.5284, -9.52205, -12.7903, 1.11", "-18.6709, -10.0734, -13.3876, 0.88", "-18.8867, -11.3112, -14.5821, 0.59", "-19.1304, -12.9495, -15.9634, 1.03", "-19.1718, -13.2334, -16.2162, 1.25", "-19.1902, -13.3312, -16.3016, 1.25", "-19.2872, -13.7591, -16.6793, 1.25", "-19.3244, -13.8739, -16.7871, 1.25", "-19.848, -14.9878, -17.8211, 0.52", "-20.4288, -15.8068, -18.6055, 0.22", "-20.7984, -16.0941, -18.9896, 0.22", "-21.0578, -16.2075, -19.2049, 0.22", "-21.6912, -16.3671, -19.6461, 0.88", "-22.1267, -16.4613, -19.8956, 1.25", "-22.805, -16.6185, -20.2298, 1.25", "-24.2254, -17.1004, -21.0137, 0.29", "-24.6302, -17.3181, -21.285, 0.29", "-25.2335, -17.8034, -21.7517, 0.29", "-25.9018, -18.5222, -22.3163, 0.29", "-26.5624, -19.364, -22.9223, 0.29", "-27.1912, -20.2783, -23.521, 0.52", "-27.4386, -20.6861, -23.7576, 0.52", "-27.6552, -21.0053, -23.9502, 0.29", "-27.9829, -21.4443, -24.3283, 0.29", "-28.385, -21.9211, -24.8628, 1.25", "-28.6723, -22.2214, -25.2399, 1.47", "-28.7169, -22.2673, -25.3011, 1.47", "-28.931, -22.5023, -25.6284, 1.47", "-30.1607, -24.0006, -27.8023, 0.22", "-30.3528, -24.2759, -28.1919, 0.81", "-30.588, -24.628, -28.6728, 0.81", "-30.6199, -24.6726, -28.7381, 0.81", "-30.9468, -25.0594, -29.3395, 0.96", "-31.683, -25.8369, -30.6654, 0.29", "-31.7311, -25.8783, -30.7426, 0.29", "-32.0143, -26.1758, -31.2449, 0.29", "-32.8209, -27.3165, -32.7871, 1.92", "-33.2441, -28.0568, -33.637, 2.58", "-33.6572, -28.9064, -34.503, 2.58", "-33.6871, -28.9673, -34.5575, 2.58", "-34.5358, -30.6376, -35.9042, 0.66", "-35.1979, -31.756, -36.7441, 0.22", "-35.3371, -31.947, -36.8665, 0.81", "-36.1579, -32.8916, -37.4827, 0.22", "-37.143, -33.8991, -38.1338, 2.58", "-37.6095, -34.3295, -38.4336, 3.32", "-39.3763, -35.8005, -39.5326, 0.44", "-40.2979, -36.5711, -40.1205, 1.33", "-41.0129, -37.233, -40.5832, 1.47", "-41.7944, -38.1401, -41.1575, 0.22", "-41.8758, -38.2573, -41.2308, 0.22", "-42.367, -39.0211, -41.6969, 0.22", "-42.8538, -39.8756, -42.1647, 1.69", "-43.0392, -40.1802, -42.3339, 2.06", "-44.3591, -42.0178, -43.5734, 0.22", "-44.4059, -42.0735, -43.6191, 0.22", "-44.9805, -42.7609, -44.2414, 0.22", "-45.2694, -43.1084, -44.5803, 0.88", "-45.5473, -43.5126, -45.0078, 1.11", "-46.6991, -45.3757, -46.9723, 0.22", "-46.7323, -45.4391, -47.0404, 0.22", "-47.1243, -46.2914, -47.9653, 1.84", "-47.2945, -46.7312, -48.4331, 1.99", "-48.0305, -48.8094, -50.5375, 0.29", "-48.2527, -49.4145, -51.0968, 0.29", "-49.0092, -51.0717, -52.4931, 0.29", "-49.0965, -51.2367, -52.634, 0.29", "-49.669, -52.1239, -53.4058, 1.11", "-49.9784, -52.5397, -53.8037, 1.47", "-50.7826, -53.4817, -54.7533, 0.29", "-51.8575, -54.6207, -55.9902, 2.43", "-52.7252, -55.4159, -56.9068, 2.43", "-54.058, -56.5064, -58.2968, 0.52", "-55.0487, -57.2246, -59.33, 0.66", "-55.8445, -57.7501, -60.1627, 0.22", "-56.2544, -57.989, -60.5728, 0.59", "-56.6431, -58.1993, -60.9221, 0.59", "-57.5749, -58.7245, -61.6583, 0.22", "-58.2413, -59.1868, -62.1535, 1.18", "-58.5439, -59.4479, -62.3568, 1.33", "-59.7686, -60.7274, -63.2544, 0.37", "-60.4961, -61.5992, -63.8201, 0.22", "-61.0912, -62.3793, -64.285, 0.22", "-61.7824, -63.3673, -64.8104, 1.55", "-62.2334, -64.0599, -65.1477, 2.06", "-63.4058, -66.0084, -66.03, 0.22", "-63.6456, -66.4258, -66.1984, 0.52", "-63.8907, -66.8011, -66.3545, 0.52", "-64.6508, -67.8433, -66.7953, 0.22", "-65.0801, -68.4042, -67.0261, 0.22", "-65.5501, -69.0166, -67.3044, 1.11", "-65.9519, -69.5257, -67.5363, 1.33", "-67.1447, -70.9763, -68.2812, 0.22", "-67.5645, -71.4566, -68.5502, 1.03", "-67.7981, -71.6988, -68.7014, 1.03", "-69.0536, -72.9436, -69.4983, 0.22", "-69.5124, -73.4001, -69.7785, 0.22", "-69.9085, -73.7973, -70.0112, 1.18", "-70.2775, -74.1523, -70.2164, 1.4", "-71.7284, -75.5145, -71.1081, 0.22", "-72.2039, -75.9466, -71.3965, 1.11", "-72.5597, -76.2616, -71.6051, 1.33", "-72.8668, -76.5512, -71.804, 1.18", "-74.0598, -77.7484, -72.6053, 0.15", "-75.08, -78.8176, -73.299, 0.15", "-75.4741, -79.2397, -73.5594, 0.81", "-75.7136, -79.5097, -73.7502, 0.81", "-76.7011, -80.6612, -74.5903, 0.22", "-77.5125, -81.6417, -75.2964, 0.22", "-78.2541, -82.5677, -75.9495, 1.47", "-78.5736, -82.9565, -76.245, 1.84", "-80.2793, -85.0245, -78.0747, 0.15", "-80.6908, -85.4993, -78.5489, 0.15", "-80.9389, -85.7751, -78.8657, 0.74", "-81.0559, -85.899, -79.0225, 0.74", "-81.9794, -86.804, -80.2644, 0.29", "-82.8021, -87.5527, -81.3352, 1.25", "-83.1225, -87.8221, -81.7154, 1.33", "-84.1449, -88.7489, -83.1586, 0.15", "-84.4567, -89.047, -83.6385, 0.74", "-85.1131, -89.6944, -84.6785, 0.22", "-85.1479, -89.7292, -84.7323, 0.22", "-85.4255, -90.0006, -85.1429, 0.88", "-86.9993, -91.5338, -87.4457, 0.22", "-87.0512, -91.5832, -87.5159, 0.22", "-87.205, -91.716, -87.6892, 0.22", "-87.8969, -92.2494, -88.2999, 1.47", "-88.2211, -92.4742, -88.5254, 1.84", "-88.51, -92.6618, -88.6759, 1.84", "-88.8518, -92.8709, -88.7898, 1.84", "-90.3341, -93.932, -89.6203, 0.15", "-90.4273, -93.9992, -89.6848, 0.15", "-91.1737, -94.4939, -90.2665, 0.15", "-91.8119, -94.9207, -90.7865, 0.96", "-92.2034, -95.2001, -91.1148, 0.96", "-94.255, -96.7731, -92.8933, 0.22", "-94.7877, -97.236, -93.3793, 0.22", "-95.4541, -97.8461, -93.9763, 0.22", "-96.2114, -98.5618, -94.6182, 1.11", "-96.719, -99.0624, -95.0247, 1.69", "-96.8869, -99.2444, -95.1468, 1.69", "-98.3685, -101.07, -96.1177, 0.22", "-98.8964, -101.797, -96.484, 0.37", "-99.394, -102.508, -96.8417, 0.22", "-100.075, -103.442, -97.3173, 1.47", "-100.555, -104.066, -97.6798, 1.69", "-101.776, -105.605, -98.6082, 0.22", "-102.812, -106.941, -99.3961, 0.22", "-103.328, -107.616, -99.8139, 1.4", "-103.819, -108.258, -100.225, 1.84", "-105.409, -110.272, -101.573, 0.15", "-105.964, -110.946, -102.056, 0.15", "-106.489, -111.552, -102.518, 1.18", "-106.775, -111.883, -102.78, 1.18", "-106.816, -111.931, -102.818, 1.18", "-108.109, -113.57, -103.988, 0.22", "-108.723, -114.416, -104.487, 1.25", "-109.597, -115.638, -105.228, 0.15", "-109.947, -116.083, -105.526, 0.88", "-110.129, -116.301, -105.674, 1.03", "-110.695, -116.952, -106.105, 0.15", "-111.342, -117.658, -106.55, 0.15", "-111.858, -118.174, -106.923, 0.74", "-112.831, -119.066, -107.629, 0.22", "-113.669, -119.837, -108.236, 0.22", "-114.42, -120.532, -108.777, 1.99", "-114.761, -120.856, -109.02, 2.28", "-116.665, -122.785, -110.335, 0.22", "-116.93, -123.09, -110.515, 0.52", "-117.812, -124.17, -111.072, 0.15", "-117.864, -124.232, -111.104, 0.15", "-118.273, -124.695, -111.327, 0.81", "-118.32, -124.748, -111.348, 0.81", "-119.662, -126.195, -111.742, 0.22", "-120.644, -127.273, -112.095, 0.22", "-120.709, -127.343, -112.12, 0.22", "-121.648, -128.378, -112.487, 0.22", "-122.302, -129.116, -112.784, 0.81", "-122.362, -129.188, -112.813, 0.81", "-123.37, -130.521, -113.375, 0.22", "-123.956, -131.309, -113.726, 1.47", "-124.168, -131.589, -113.849, 1.77", "-125.781, -133.66, -114.768, 0.22", "-126.254, -134.229, -115.028, 0.52", "-127.33, -135.443, -115.574, 0.22", "-128.645, -136.82, -116.178, 0.22", "-129.32, -137.504, -116.49, 1.18", "-129.525, -137.709, -116.582, 1.4", "-131.113, -139.353, -117.395, 0.15", "-131.473, -139.74, -117.602, 0.66", "-133.244, -141.734, -118.722, 0.15", "-134.092, -142.737, -119.34, 1.69", "-134.353, -143.052, -119.541, 1.84", "-136.252, -145.442, -121.079, 0.22", "-136.605, -145.919, -121.395, 0.66", "-136.653, -145.992, -121.447, 0.66", "-137.131, -146.762, -122.046, 0.15", "-137.338, -147.075, -122.299, 0.59", "-137.404, -147.171, -122.378, 0.59", "-138.202, -148.267, -123.268, 0.22", "-138.923, -149.242, -124.109, 1.33", "-139.678, -150.288, -125.023, 0.15", "-140.021, -150.799, -125.472, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.2915, 5.80597, -8.94048, 1.18", "4.33062, 6.92712, -8.59971, 1.18", "4.38143, 8.49708, -8.15338, 1.47", "4.4117, 9.71879, -7.93024, 1.92", "4.42841, 11.3719, -7.7977, 0.81", "4.42331, 12.7448, -7.79974, 0.81", "4.41113, 13.622, -7.86228, 0.74", "4.40468, 13.7654, -7.90199, 0.74", "4.2642, 15.4037, -8.69159, 0.74", "4.17295, 16.3051, -9.31449, 1.11", "4.12283, 16.8453, -9.80451, 1.11", "4.07163, 17.631, -10.6035, 1.11", "4.05258, 19.0789, -12.0284, 1.25", "4.05398, 19.132, -12.0786, 1.25", "4.17311, 20.4318, -13.2419, 1.03", "4.38459, 21.8725, -14.4604, 0.52", "4.68415, 23.3515, -15.611, 0.52", "4.94525, 24.345, -16.2974, 0.81", "4.9657, 24.4076, -16.3304, 0.81", "5.24396, 25.1602, -16.6559, 1.18", "5.39353, 25.4688, -16.7271, 1.18", "5.6261, 25.8579, -16.7288, 1.18", "5.67375, 25.9301, -16.7226, 1.18", "5.84494, 26.2048, -16.705, 1.4", "5.93653, 26.3858, -16.6923, 1.4", "6.20451, 27.0613, -16.6416, 1.4", "6.41807, 27.7654, -16.5811, 0.88", "6.62533, 28.8736, -16.4768, 0.52", "6.66862, 29.8974, -16.4686, 0.37", "6.58316, 30.9811, -16.5859, 0.37", "6.50018, 31.4638, -16.6831, 0.29", "6.27542, 32.3216, -16.9373, 0.29", "6.11941, 32.8236, -17.1608, 0.29", "5.63925, 34.4265, -18.2809, 1.33", "5.37836, 35.3203, -19.0114, 1.92", "5.32829, 35.5426, -19.2134, 2.21", "5.30552, 35.713, -19.3738, 2.21", "5.27697, 36.6466, -20.2716, 2.5", "5.32422, 37.8671, -21.5248, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.6115, 10.468, -2.50048, 3.68", "1.6115, 10.468, -2.50048, 3.68", "1.0119, 12.457, -2.79737, 2.8", "0.971324, 12.5884, -2.82301, 2.8", "0.722074, 13.3884, -2.98973, 2.8", "0.609823, 13.7324, -3.06455, 2.8", "0.35142, 14.5066, -3.2385, 2.8", "-0.0381479, 15.6126, -3.51089, 3.02", "-0.583604, 17.0368, -3.92073, 3.02", "-0.60465, 17.0884, -3.93791, 3.02", "-1.06538, 18.1455, -4.31936, 3.02", "-1.08777, 18.196, -4.33787, 3.02", "-1.60794, 19.3476, -4.77389, 2.87", "-2.09129, 20.4663, -5.14773, 2.87", "-2.11317, 20.5189, -5.16063, 2.87", "-2.56662, 21.6614, -5.37679, 2.73", "-3.03963, 22.8869, -5.54796, 2.58", "-3.0642, 22.9502, -5.55521, 2.58", "-3.74064, 24.6813, -5.70028, 2.36", "-4.41898, 26.3714, -5.81286, 2.06", "-5.03942, 27.8423, -5.90501, 2.06", "-5.44335, 28.7824, -5.96244, 2.65", "-6.16412, 30.4133, -6.05268, 2.73", "-6.75443, 31.7174, -6.12812, 2.95", "-7.30386, 32.8638, -6.20857, 3.17", "-7.80653, 33.8641, -6.29214, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.5085, -11.2565, 0.999524, 4.05", "-3.5085, -11.2565, 0.999524, 4.05", "-4.16179, -12.9714, 0.999524, 3.68", "-4.78641, -14.611, 0.999524, 3.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.23086, 10.2806, -1.24848, 0.532027", "8.20573, 24.4316, -1.24848, 0.532027", "13.1806, 38.5826, -1.24848, 0.532027" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "5.32422, 37.8671, -21.5248, 1.25", "4.93029, 38.9061, -22.2429, 1.25", "4.60431, 39.9207, -22.9433, 1.77", "4.53328, 40.1661, -23.1148, 1.84", "4.25444, 41.474, -24.2433, 0.22", "4.14526, 42.3708, -25.1957, 1.33", "4.1431, 42.4159, -25.2559, 1.33", "4.16112, 42.6248, -25.6054, 1.77", "4.17407, 42.682, -25.7138, 1.77", "4.46568, 43.5487, -27.5598, 1.18", "4.72292, 44.0951, -28.8855, 1.4", "5.05505, 44.7855, -30.8834, 0.29", "5.06352, 44.8045, -30.941, 0.29", "5.30035, 45.3653, -32.6637, 1.55", "5.32599, 45.4416, -32.8797, 1.84", "5.33328, 45.4698, -32.9453, 1.84", "5.65043, 47.0283, -35.9109, 0.52", "5.65981, 47.0715, -35.9716, 0.52", "5.71892, 47.3512, -36.2913, 0.74", "6.13558, 49.4086, -38.2783, 1.47", "6.35129, 50.4133, -39.0807, 0.29", "6.57819, 51.4005, -39.7099, 1.69", "7.07191, 53.6891, -40.8889, 0.15", "7.19922, 54.3888, -41.2378, 0.66", "7.20908, 54.4548, -41.2698, 0.66", "7.35782, 55.7334, -41.901, 0.15", "7.42726, 56.6494, -42.4043, 1.69", "7.53252, 59.3548, -43.9493, 0.22", "7.53043, 60.0288, -44.3648, 0.59", "7.50362, 61.4832, -45.3199, 1.92", "7.43451, 63.7524, -46.8724, 0.15", "7.42901, 63.8728, -46.9587, 0.15", "7.41229, 64.4179, -47.3692, 0.37", "7.39587, 65.2555, -48.0407, 0.22", "7.37673, 66.1435, -48.8588, 1.11", "7.37403, 66.1971, -48.9121, 1.11", "7.347, 66.5667, -49.2916, 1.25", "7.21546, 68.0764, -50.8957, 0.22", "7.11359, 69.1027, -51.9945, 0.96", "6.98617, 70.2429, -53.1448, 0.15", "6.88691, 71.1993, -54.0476, 1.18", "6.86721, 71.3858, -54.2088, 1.47", "6.73427, 72.7515, -55.2293, 0.22", "6.69663, 73.1509, -55.455, 0.44", "6.63475, 73.9348, -55.7856, 0.15", "6.53463, 75.007, -56.1295, 1.11", "6.48713, 75.4676, -56.2522, 1.47", "6.32997, 77.4112, -56.6758, 0.22", "6.28084, 78.1802, -56.806, 0.74", "6.21667, 79.355, -56.9973, 0.15", "6.18105, 80.2648, -57.1411, 1.11", "6.16842, 80.6535, -57.1966, 1.55", "6.08824, 84.1061, -57.6611, 0.15", "6.07893, 84.9003, -57.7529, 0.66", "6.08112, 85.2865, -57.8005, 0.66", "6.13364, 87.5382, -58.0892, 0.15", "6.15901, 88.2499, -58.1755, 0.37", "6.16204, 88.3446, -58.1871, 0.37", "6.16169, 88.7437, -58.2308, 0.37" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "5.32422, 37.8671, -21.5248, 0.37", "5.87203, 39.4031, -21.6677, 0.37", "6.27212, 40.7839, -21.7945, 0.37", "6.55229, 42.009, -21.9036, 0.37", "6.56518, 42.0929, -21.9107, 0.37", "6.60495, 42.6899, -21.9575, 0.37", "6.60557, 42.7634, -21.9658, 0.37", "6.44357, 43.6386, -22.1215, 0.66", "6.33421, 43.9489, -22.1887, 0.81", "6.15715, 44.4652, -22.3079, 0.81", "6.0089, 45.0227, -22.4292, 0.37", "5.84948, 45.904, -22.5928, 0.29", "5.84176, 45.9772, -22.6047, 0.29", "5.80201, 46.8766, -22.7354, 0.29", "5.79685, 48.3278, -22.9125, 1.84", "5.81497, 48.8811, -22.965, 2.36", "5.89213, 50.1336, -23.05, 1.55", "5.99784, 51.5732, -23.1048, 1.92", "6.05259, 52.1329, -23.1227, 2.5", "6.17315, 53.0221, -23.1559, 1.99", "6.3894, 54.2999, -23.2034, 0.22", "6.52725, 55.1248, -23.2453, 0.22", "6.61749, 55.7036, -23.2773, 0.88", "6.68006, 56.1936, -23.3095, 0.59", "6.76896, 57.0944, -23.3768, 0.29", "6.84133, 58.1, -23.4578, 0.29", "6.90653, 59.2738, -23.5538, 0.29", "6.95733, 60.305, -23.6422, 0.29", "7.01322, 61.4106, -23.7328, 1.18", "7.05492, 62.0717, -23.7752, 1.84", "7.11463, 62.7338, -23.8075, 1.4", "7.21184, 63.4523, -23.8413, 0.88", "7.42083, 64.7081, -23.8999, 0.29", "7.61667, 65.7988, -23.9455, 0.29", "7.95621, 67.5769, -23.9997, 2.14", "8.09295, 68.298, -24.0211, 3.09", "8.2191, 68.9779, -24.039, 3.46" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.80653, 33.8641, -6.29214, 1.62", "-8.10333, 35.3867, -6.56943, 1.62", "-8.10949, 35.442, -6.57459, 1.62", "-8.1962, 36.222, -6.64726, 1.62", "-8.21481, 36.3894, -6.66285, 1.62", "-8.29893, 37.146, -6.73334, 1.62", "-8.30443, 37.1955, -6.73796, 1.62", "-8.31629, 38.4107, -6.65456, 1.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-7.80653, 33.8641, -6.29214, 0.66", "-6.66861, 36.5313, -4.90172, 0.66", "-6.19842, 37.4223, -4.63855, 0.59", "-5.72793, 38.2422, -4.47035, 1.03", "-5.63751, 38.4006, -4.44778, 1.03", "-5.43595, 38.7818, -4.41059, 1.18", "-4.73319, 40.3067, -4.33802, 0.81", "-4.26077, 41.3544, -4.46585, 0.66", "-4.22749, 41.4415, -4.47933, 0.66", "-3.94304, 42.4345, -4.58231, 0.66", "-3.70874, 43.5707, -4.63551, 0.88", "-3.52765, 45.112, -4.62486, 1.4", "-3.51429, 45.5029, -4.59945, 1.77", "-3.52862, 46.3567, -4.51198, 2.14", "-3.61018, 47.9979, -4.18998, 1.77", "-3.664, 49.0545, -3.80016, 1.25", "-3.69937, 49.8955, -3.35559, 1.03", "-3.69591, 50.5807, -2.85238, 0.81", "-3.6515, 51.4365, -2.08979, 0.81", "-3.48034, 52.6962, -0.696773, 0.59", "-3.15961, 53.8595, 0.884984, 0.59", "-3.14178, 53.9051, 0.962516, 0.59", "-2.84887, 54.4273, 2.08183, 1.77", "-2.83028, 54.449, 2.14327, 1.77", "-2.59998, 54.584, 2.73973, 1.92", "-2.56189, 54.5874, 2.80844, 1.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.78641, -14.611, 0.999524, 0.37", "-6.72877, -15.7184, 0.305757, 0.37", "-7.91602, -16.6613, 0.14798, 0.37", "-9.41238, -18.3369, 0.476928, 0.37", "-9.95681, -19.3016, 1.00988, 0.66", "-10.2259, -19.9099, 1.4557, 0.96", "-10.2611, -19.9829, 1.52832, 0.96", "-11.0108, -22.0318, 4.23032, 0.59", "-11.027, -22.0767, 4.30526, 0.59", "-11.3046, -22.5813, 5.42938, 1.25", "-11.4274, -22.702, 5.75413, 1.25", "-12.409, -23.3547, 7.5332, 0.59", "-12.8857, -23.641, 8.16618, 0.96", "-12.9666, -23.6847, 8.24116, 0.96", "-13.6803, -24.2535, 9.03291, 0.96", "-14.2226, -24.9148, 9.76352, 0.59", "-14.5804, -25.7183, 10.5024, 0.29", "-14.7588, -26.71, 11.3095, 0.29", "-14.8791, -27.6021, 12.0781, 1.11", "-15.1214, -29.329, 13.6344, 0.22", "-15.189, -29.7534, 14.0296, 1.25", "-15.3881, -30.4227, 14.6945, 1.55", "-15.4592, -30.5468, 14.8255, 1.55", "-16.6892, -31.6276, 16.0377, 0.59", "-17.1476, -31.9349, 16.3464, 0.74", "-17.9207, -32.3789, 16.7437, 0.74", "-19.0053, -33.0022, 17.2774, 0.59", "-19.1637, -33.116, 17.3612, 0.59", "-20.108, -34.2519, 18.0162, 0.59", "-20.3417, -35.0081, 18.4117, 1.11", "-20.4327, -35.6022, 18.7689, 1.18", "-20.4459, -35.7327, 18.853, 1.18", "-20.6514, -37.1482, 19.8614, 0.59", "-20.9453, -38.276, 20.7458, 0.59", "-21.5312, -39.3888, 21.7498, 0.44", "-22.169, -39.9494, 22.4459, 0.74", "-22.8036, -40.2092, 22.9282, 0.88", "-24.2042, -40.4859, 23.7668, 0.44", "-24.9745, -40.5243, 24.106, 0.44", "-25.9204, -40.5298, 24.4299, 0.44", "-26.006, -40.5332, 24.4488, 0.44", "-27.0933, -40.6882, 24.6147, 0.88", "-27.2094, -40.718, 24.631, 0.88", "-28.4952, -41.151, 24.7459, 1.18", "-29.1117, -41.4006, 24.7863, 1.11", "-30.0653, -41.818, 24.8187, 0.59", "-30.96, -42.2356, 24.8185, 0.44", "-31.0393, -42.2748, 24.8148, 0.44", "-32.2368, -42.9785, 24.7595, 0.66", "-33.0317, -43.5947, 24.7296, 0.37", "-33.5036, -44.1192, 24.7276, 1.03", "-33.746, -44.5707, 24.7428, 1.03", "-33.8011, -44.7614, 24.753, 1.03", "-34.1516, -46.5005, 24.8648, 0.37", "-34.2282, -47.5126, 24.9517, 0.44", "-34.224, -48.3058, 25.0343, 0.74", "-34.1839, -48.9559, 25.1117, 0.88", "-34.0832, -50.1438, 25.273, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.78641, -14.611, 0.999524, 3.09", "-4.79722, -14.6574, 0.998324, 3.09", "-5.10008, -15.9938, 0.992024, 2.8", "-5.50173, -17.7817, 0.989454, 2.43", "-5.82535, -19.2223, 0.987384, 2.43", "-5.83999, -19.2874, 0.987294, 2.43", "-6.30328, -21.3497, 0.984324, 2.43", "-6.55146, -22.4696, 0.991394, 2.87", "-6.75251, -23.3864, 1.01541, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "13.1806, 38.5826, -1.24848, 0.532027", "18.1555, 52.7336, -1.24848, 0.532027", "23.1303, 66.8846, -1.24848, 0.532027" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "8.2191, 68.9779, -24.039, 0.29", "9.34589, 71.0557, -24.5755, 0.29", "9.84652, 71.8268, -24.8502, 0.29", "10.3725, 72.6247, -25.1682, 0.37", "10.4224, 72.7005, -25.2001, 0.37", "10.7892, 73.2979, -25.4491, 0.37", "10.8233, 73.356, -25.4735, 0.37", "11.2622, 74.262, -25.9121, 0.22", "11.4784, 74.7857, -26.202, 0.44", "11.4944, 74.8592, -26.246, 0.44", "11.5856, 75.4789, -26.6107, 0.66", "11.596, 75.5415, -26.6445, 0.66", "11.7647, 76.2904, -27.064, 0.96", "11.7844, 76.3731, -27.1332, 0.96", "12.0434, 77.4336, -28.1172, 0.22", "12.0598, 77.5035, -28.1835, 0.22", "12.3046, 78.4929, -29.1176, 1.92", "12.5754, 79.405, -29.9881, 2.36", "13.5693, 82.2795, -32.7552, 0.44", "13.7286, 82.7076, -33.1654, 0.44", "13.8493, 83.0091, -33.4505, 0.44", "14.1124, 83.6662, -34.0367, 0.22", "14.4507, 84.5093, -34.7257, 0.22", "14.8676, 85.4536, -35.3969, 0.74", "14.9071, 85.5291, -35.4457, 0.74", "15.0204, 85.7469, -35.6065, 0.74", "15.5878, 86.8683, -36.5311, 0.22", "16.027, 87.8459, -37.3697, 1.33", "16.3613, 88.6924, -38.0829, 1.77", "16.9591, 90.3209, -39.4313, 0.22", "17.2148, 91.0113, -39.9874, 0.22", "17.5646, 91.9345, -40.7041, 0.22", "17.975, 92.9761, -41.4857, 1.92", "18.1382, 93.3905, -41.7724, 2.28", "19.1926, 95.9, -43.3244, 0.22", "19.6195, 96.8347, -43.8469, 0.22", "19.9342, 97.449, -44.1744, 0.88", "20.0211, 97.5931, -44.2452, 0.88", "20.1229, 97.7323, -44.3115, 0.88", "21.197, 99.0053, -44.9431, 0.22", "21.962, 99.8081, -45.3619, 0.22", "22.0571, 99.9144, -45.4201, 0.22", "22.856, 100.836, -45.9419, 1.33", "23.1812, 101.229, -46.1607, 2.06", "23.6811, 101.868, -46.5323, 2.06", "24.8521, 103.474, -47.4717, 0.15", "25.1614, 103.91, -47.7316, 0.74", "25.2057, 103.972, -47.7677, 0.74", "25.4254, 104.292, -47.9514, 0.74", "26.1341, 105.335, -48.5059, 0.22", "26.5144, 105.887, -48.7653, 0.59", "26.56, 105.952, -48.7935, 0.59", "27.3433, 107.05, -49.3636, 0.15", "27.9634, 107.966, -49.854, 1.55", "28.1187, 108.206, -49.9843, 1.92", "28.1617, 108.273, -50.0188, 1.92", "28.3691, 108.625, -50.2019, 1.92", "29.4631, 110.537, -51.1763, 0.22", "29.7591, 110.991, -51.4251, 0.52", "29.8043, 111.053, -51.4602, 0.52", "30.4964, 111.83, -51.923, 0.22", "31.1002, 112.446, -52.3249, 1.55", "31.5459, 112.777, -52.6071, 1.55", "33.1646, 113.755, -53.5784, 0.15", "33.2212, 113.787, -53.6137, 0.15", "34.3363, 114.375, -54.3193, 0.15", "35.9861, 115.174, -55.3729, 2.21", "38.4449, 116.274, -56.8968, 0.22", "38.7199, 116.398, -57.0658, 0.37", "39.8569, 116.939, -57.7234, 0.22", "40.2654, 117.15, -57.9457, 0.59", "40.542, 117.306, -58.0838, 0.59", "41.4829, 117.896, -58.5134, 0.22", "41.8431, 118.176, -58.6962, 0.66", "42.828, 118.934, -59.245, 0.15", "43.539, 119.495, -59.6649, 1.77", "43.7128, 119.636, -59.779, 1.77", "45.3373, 120.926, -60.9152, 0.22", "45.9454, 121.36, -61.4539, 0.74", "46.5911, 121.772, -62.1255, 0.15", "46.9594, 121.99, -62.5818, 0.74", "47.5553, 122.359, -63.3872, 0.15", "48.0911, 122.712, -64.1453, 2.14", "49.7764, 123.995, -66.7209, 0.37", "50.4555, 124.637, -67.8227, 1.55", "51.6985, 126.02, -69.9549, 0.15", "52.2242, 126.718, -70.9098, 0.15", "52.4711, 127.106, -71.3859, 1.4", "53.2419, 128.533, -73.0638, 0.22", "53.62, 129.268, -73.9317, 1.33", "53.6874, 129.375, -74.0782, 1.62", "54.716, 130.515, -75.9965, 0.15", "55.4175, 131.079, -77.1904, 1.18", "56.6369, 131.822, -79.0977, 0.88", "57.8105, 132.332, -80.7225, 0.44", "58.9224, 132.727, -82.1088, 1.77", "60.1313, 133.097, -83.3936, 0.22", "60.2038, 133.114, -83.4535, 0.22", "60.6822, 133.235, -83.7402, 0.66", "61.7861, 133.566, -84.1508, 0.15", "62.5819, 133.912, -84.3311, 1.11", "63.0763, 134.214, -84.4228, 1.11", "63.1527, 134.269, -84.4355, 1.11", "64.0115, 134.9, -84.5859, 0.22", "64.4067, 135.183, -84.6618, 0.59", "65.4123, 135.893, -84.867, 0.22", "66.2856, 136.5, -85.0722, 1.4", "66.3623, 136.552, -85.0901, 1.4", "66.4902, 136.638, -85.1194, 1.55", "68.1217, 137.668, -85.4791, 0.22", "68.1915, 137.709, -85.496, 0.22", "68.4585, 137.862, -85.5631, 0.22", "69.0178, 138.167, -85.7312, 0.81", "69.0871, 138.206, -85.7547, 0.81", "69.4254, 138.414, -85.8915, 0.81", "71.036, 139.449, -86.6057, 0.22", "71.5863, 139.798, -86.8559, 0.22", "72.7944, 140.548, -87.4132, 1.55", "72.8581, 140.59, -87.4455, 1.55", "74.4256, 141.661, -88.279, 0.22", "75.0208, 142.076, -88.6109, 0.22", "76.0592, 142.807, -89.2007, 1.62", "76.2569, 142.946, -89.3093, 1.99", "78.3093, 144.406, -90.3893, 0.22", "78.3807, 144.455, -90.4263, 0.22", "79.1544, 144.994, -90.8203, 0.74", "79.6241, 145.327, -91.0629, 0.74", "81.9596, 146.982, -92.2467, 0.15", "82.8278, 147.582, -92.667, 1.55", "82.8958, 147.625, -92.6955, 1.55", "83.2818, 147.876, -92.8576, 1.55" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "8.2191, 68.9779, -24.039, 0.29", "7.7069, 71.3858, -24.3795, 0.29", "7.59168, 71.9664, -24.4643, 0.44", "7.35102, 73.1462, -24.6269, 0.22", "7.03451, 74.7059, -24.8343, 1.55", "6.93391, 75.2113, -24.8967, 2.21", "6.78849, 75.9487, -24.9813, 1.84", "6.63463, 76.8836, -25.0767, 0.96", "6.53211, 77.4876, -25.1219, 0.44", "6.51506, 77.579, -25.1251, 0.44", "6.31427, 78.76, -25.1565, 0.29", "6.29378, 78.9277, -25.1597, 0.29", "6.22574, 79.7836, -25.1739, 0.29", "6.17813, 80.6296, -25.188, 0.81", "6.16361, 81.0504, -25.211, 1.11", "6.12832, 81.9005, -25.2926, 0.88", "6.07791, 83.6371, -25.5029, 0.22", "6.06212, 84.4855, -25.6304, 0.81", "6.05634, 85.158, -25.7517, 0.81", "6.03956, 87.174, -26.1519, 0.22", "6.01776, 88.6538, -26.4657, 1.84", "5.99606, 89.4264, -26.6394, 2.21", "5.96521, 90.1, -26.7971, 2.21", "5.86261, 92.6811, -27.359, 0.22", "5.83723, 93.5804, -27.5355, 0.81", "5.82929, 94.0059, -27.6047, 0.88", "5.82012, 94.437, -27.6639, 0.66", "5.76828, 95.7181, -27.8203, 0.22", "5.6796, 97.5071, -27.9995, 1.84", "5.66214, 98.0542, -28.0436, 2.21", "5.65534, 98.6018, -28.0822, 2.21", "5.66505, 100.976, -28.2273, 0.22", "5.68023, 101.821, -28.2764, 0.88", "5.68623, 102.079, -28.2901, 0.88", "5.73029, 103.826, -28.386, 0.22", "5.7836, 105.368, -28.5095, 0.22", "5.82714, 106.179, -28.5876, 1.33", "5.88076, 106.818, -28.6575, 1.62", "5.90181, 107.064, -28.6881, 1.62", "5.90867, 107.203, -28.7119, 1.62", "5.92902, 109.459, -29.1707, 0.22", "5.91271, 111.114, -29.5354, 0.22", "5.88071, 112.251, -29.7913, 1.4", "5.86168, 112.848, -29.9219, 1.69", "5.7719, 115.375, -30.4678, 0.22", "5.72828, 116.229, -30.6303, 0.96", "5.72185, 116.309, -30.642, 0.96", "5.68345, 116.658, -30.6843, 0.81", "5.4712, 118.273, -30.814, 0.22", "5.44668, 118.466, -30.8207, 0.22", "5.31951, 119.592, -30.8211, 0.22", "5.17041, 120.926, -30.8353, 1.69", "5.12257, 121.363, -30.8439, 2.43", "5.02086, 122.286, -30.8685, 2.36", "4.72142, 125.256, -30.9631, 0.22", "4.64363, 126.394, -31.0265, 0.22", "4.63717, 126.57, -31.041, 0.22", "4.62076, 128.021, -31.1753, 0.22", "4.62954, 129.119, -31.2879, 1.11", "4.65513, 129.779, -31.3618, 1.4", "4.79061, 131.66, -31.5917, 0.22", "4.79681, 131.733, -31.6005, 0.22", "4.84895, 132.232, -31.6496, 0.22", "4.958, 133.275, -31.7226, 1.55", "5.00454, 133.812, -31.7437, 1.77", "5.011, 133.894, -31.7446, 1.77", "5.04213, 134.262, -31.7374, 1.77", "5.18531, 135.846, -31.7081, 0.22", "5.26839, 136.938, -31.6896, 0.66", "5.29989, 137.528, -31.6804, 0.66", "5.35306, 139.465, -31.6674, 0.22", "5.35346, 139.642, -31.6666, 0.22", "5.31863, 141.508, -31.6539, 0.22", "5.2479, 142.781, -31.6277, 1.11", "5.17944, 143.542, -31.5937, 1.99", "5.08913, 144.194, -31.5508, 1.55", "4.76859, 145.789, -31.4034, 0.22", "4.72007, 146.002, -31.3807, 0.22", "4.36705, 147.299, -31.2118, 0.22", "4.17491, 148.045, -31.0959, 0.88", "4.11839, 148.278, -31.059, 1.18", "4.10296, 148.356, -31.0409, 1.18", "4.00458, 149.088, -30.8519, 0.66", "3.96051, 149.5, -30.7479, 0.37", "3.83364, 150.575, -30.4919, 0.22", "3.71488, 151.368, -30.31, 0.59", "3.48933, 152.785, -30.0881, 0.52", "3.35572, 153.576, -29.9952, 0.66", "3.25544, 154.177, -29.9413, 0.22", "3.09872, 155.092, -29.8891, 1.47", "3.02285, 155.531, -29.8833, 2.14", "2.59036, 158.191, -29.9257, 0.22", "2.57984, 158.264, -29.9295, 0.22", "2.49578, 159.098, -29.9548, 1.11", "2.48853, 159.274, -29.9596, 1.47", "2.48832, 159.399, -29.9623, 1.47", "2.48802, 160.168, -29.9875, 0.81", "2.48326, 160.803, -30.0251, 0.29", "2.4709, 162.688, -30.1748, 0.22", "2.46006, 163.558, -30.2614, 0.96", "2.45892, 163.723, -30.2784, 0.96", "2.45837, 163.899, -30.2947, 0.96", "2.47395, 165.261, -30.4004, 0.22", "2.47625, 165.342, -30.405, 0.22", "2.51789, 166.177, -30.4343, 0.81", "2.53967, 166.599, -30.4451, 0.81", "2.62949, 168.575, -30.4731, 0.15", "2.66935, 169.914, -30.5007, 1.18", "2.67601, 170.289, -30.5088, 1.47", "2.67832, 170.358, -30.5149, 1.47", "2.69624, 170.695, -30.5691, 1.47", "2.80462, 172.529, -30.9692, 0.22", "2.88201, 173.556, -31.253, 1.11", "2.91806, 173.99, -31.3884, 1.47", "3.17212, 176.374, -32.2464, 0.15", "3.29177, 177.304, -32.6115, 0.81", "3.30331, 177.378, -32.6429, 0.81", "3.3829, 177.801, -32.8396, 0.81", "3.39529, 177.863, -32.8666, 0.81", "3.62363, 179.338, -33.4442, 0.22", "3.6741, 179.83, -33.5994, 0.37", "3.72916, 180.59, -33.8139, 0.22", "3.77474, 181.529, -34.0586, 1.18", "3.78718, 182.089, -34.1945, 1.47", "3.7969, 184.215, -34.6736, 0.22", "3.7831, 185.155, -34.8589, 1.03", "3.77715, 185.479, -34.9226, 1.03", "3.7553, 187.558, -35.3489, 0.22", "3.75235, 188.308, -35.5008, 0.22", "3.75272, 188.388, -35.5165, 0.22", "3.77433, 189.338, -35.658, 0.81", "3.79381, 189.924, -35.7294, 0.81", "3.84423, 191.666, -35.8903, 0.22", "3.86315, 192.858, -35.9247, 1.11", "3.86381, 193.115, -35.9226, 1.11", "3.82717, 195.26, -35.8163, 0.22", "3.79364, 196.207, -35.7373, 0.59", "3.70971, 197.734, -35.5629, 0.22", "3.60384, 199.027, -35.3702, 1.18", "3.55925, 199.526, -35.2922, 1.62", "3.36378, 201.417, -34.9718, 0.22", "3.28852, 202.003, -34.8665, 0.22", "3.19535, 202.653, -34.7409, 0.59", "3.14653, 202.983, -34.6756, 0.59", "3.13231, 203.076, -34.6597, 0.59", "2.96425, 204.108, -34.4661, 0.22", "2.87142, 204.673, -34.3405, 0.52", "2.84765, 204.842, -34.2981, 0.52", "2.83924, 204.92, -34.2768, 0.52", "2.77581, 206.313, -33.9554, 0.22", "2.7682, 207.386, -33.749, 1.11", "2.80373, 207.893, -33.6777, 1.47", "2.82343, 208.055, -33.6558, 1.47", "2.90879, 208.624, -33.5861, 1.47", "3.22695, 210.393, -33.392, 0.22", "3.24156, 210.46, -33.3865, 0.22", "3.52465, 211.778, -33.2951, 0.22", "3.74459, 212.904, -33.2336, 1.11", "3.83534, 213.42, -33.1972, 1.55", "3.91829, 213.921, -33.1564, 1.55", "4.21647, 215.659, -32.9845, 0.22", "4.32968, 216.315, -32.9141, 0.74", "4.37131, 216.57, -32.8818, 0.74", "4.73945, 218.766, -32.5807, 0.22", "4.84644, 219.396, -32.4852, 0.74", "5.14804, 221.275, -32.1118, 0.22", "5.17986, 221.474, -32.0633, 0.22", "5.36152, 222.566, -31.7807, 0.74", "5.38184, 222.694, -31.7455, 0.74", "5.48068, 223.371, -31.5482, 1.03", "5.7989, 225.679, -30.886, 0.15", "5.80848, 225.76, -30.8647, 0.15", "5.97938, 227.177, -30.5433, 0.15", "6.06429, 227.869, -30.4083, 1.03", "6.10995, 228.245, -30.3529, 1.03", "6.22463, 229.375, -30.2548, 0.15", "6.30072, 230.296, -30.2493, 1.11", "6.32654, 230.745, -30.2552, 1.4", "6.32816, 230.815, -30.258, 1.4", "6.32463, 232.482, -30.3743, 0.22", "6.28895, 233.343, -30.4417, 0.59", "6.28298, 233.415, -30.448, 0.59", "6.25241, 233.669, -30.4678, 0.59", "6.11011, 234.695, -30.5494, 0.22", "5.99661, 235.439, -30.6099, 1.18", "5.85816, 236.186, -30.6751, 1.84", "5.77227, 236.61, -30.7179, 1.47", "5.26451, 238.732, -30.9532, 0.22", "5.0436, 239.531, -31.0515, 0.22", "5.02193, 239.596, -31.0605, 0.22", "4.7263, 240.35, -31.194, 0.81", "4.49596, 240.906, -31.3072, 1.62", "4.20387, 241.572, -31.4564, 2.28", "4.09397, 241.822, -31.5152, 2.5", "3.78772, 242.572, -31.6781, 2.14", "3.02675, 244.645, -32.1014, 0.22", "2.80412, 245.346, -32.2375, 0.59", "2.7816, 245.437, -32.253, 0.59", "2.61137, 246.328, -32.3816, 0.22", "2.51357, 246.999, -32.4507, 0.81", "2.50207, 247.108, -32.4576, 0.81", "2.46248, 247.535, -32.464, 0.81", "2.31105, 248.848, -32.4732, 0.22", "2.2185, 249.606, -32.4764, 0.44", "1.97149, 251.436, -32.4755, 0.15", "1.8809, 252.111, -32.4703, 0.15", "1.80146, 252.665, -32.4643, 0.59", "1.74765, 253.012, -32.4579, 0.59" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.31629, 38.4107, -6.65456, 1.55", "-8.05518, 40.3576, -8.42467, 1.55", "-8.04049, 40.4534, -8.50206, 1.55", "-7.80881, 41.7485, -9.38397, 1.47", "-7.79645, 41.8108, -9.41952, 1.47", "-7.61394, 42.6836, -9.8716, 1.25", "-7.30353, 44.1306, -10.5187, 1.25", "-7.2644, 44.3034, -10.5652, 1.25", "-7.00142, 45.3805, -10.806, 0.81", "-6.69816, 46.5999, -11.0135, 1.18", "-6.67002, 46.7179, -11.0309, 1.18", "-6.3531, 48.1461, -11.2099, 1.84", "-6.14189, 49.2241, -11.3243, 2.14", "-5.95648, 50.3093, -11.4372, 2.14", "-5.80071, 51.5553, -11.5746, 2.14", "-5.79661, 51.6181, -11.5813, 2.14", "-5.78964, 52.347, -11.6658, 1.77", "-5.85244, 53.6991, -11.8355, 1.77", "-5.96302, 54.6228, -11.9487, 1.47", "-6.19458, 55.7885, -12.0737, 1.25", "-6.52414, 56.9797, -12.2066, 1.62", "-6.81524, 57.839, -12.3069, 1.84", "-6.84371, 57.909, -12.3156, 1.84", "-7.33763, 58.917, -12.4709, 1.99", "-7.90847, 60.0434, -12.6615, 1.69", "-8.40269, 61.1104, -12.8459, 1.47", "-8.67905, 61.8751, -13.0237, 1.33", "-8.69445, 61.9339, -13.0397, 1.33", "-8.8262, 62.9721, -13.3748, 1.11", "-8.77503, 64.0343, -13.7982, 0.88", "-8.5727, 64.8973, -14.191, 0.96", "-8.12144, 66.1937, -14.7728, 0.81", "-8.08528, 66.2924, -14.8135, 0.81", "-7.87744, 66.9108, -15.0441, 0.66", "-7.82562, 67.0826, -15.1009, 0.66", "-7.70588, 68.0944, -15.3681, 0.66", "-7.75824, 68.9266, -15.5121, 0.96", "-7.9578, 69.8332, -15.5896, 1.69", "-8.07989, 70.2451, -15.6171, 1.99", "-8.2422, 70.6659, -15.6449, 1.99", "-8.64925, 71.6076, -15.7138, 1.84", "-8.6816, 71.6737, -15.719, 1.84", "-9.25768, 72.8148, -15.8357, 2.06", "-9.45323, 73.2231, -15.8847, 2.21", "-9.7652, 73.9461, -15.9737, 2.14", "-10.1898, 75.0237, -16.1036, 1.18", "-10.6398, 76.2919, -16.2479, 1.03", "-10.9509, 77.249, -16.3424, 1.03", "-11.2138, 78.1397, -16.4169, 1.33", "-11.4906, 79.1822, -16.4887, 2.14", "-11.658, 79.9444, -16.5246, 2.65", "-11.8074, 80.7749, -16.5637, 2.65", "-11.9457, 81.7731, -16.6207, 2.65", "-11.9604, 81.9126, -16.6286, 2.65", "-12.0167, 82.6055, -16.6703, 2.36", "-12.0399, 83.4068, -16.7324, 2.06", "-12.0383, 84.4332, -16.8219, 1.4", "-12.0059, 85.5399, -16.9239, 0.81", "-11.8905, 87.3299, -17.0911, 0.66", "-11.7401, 88.8255, -17.2227, 0.66", "-11.5194, 90.4392, -17.3564, 1.11", "-11.5066, 90.5145, -17.3628, 1.11", "-11.3009, 91.5007, -17.4424, 1.55", "-11.0223, 92.6405, -17.5357, 1.84", "-10.6746, 93.9336, -17.6489, 2.28", "-10.5116, 94.5342, -17.7009, 2.58", "-10.3167, 95.306, -17.7828, 2.58", "-10.1912, 95.8668, -17.8541, 2.58", "-10.0404, 96.7762, -18.0005, 2.36", "-9.96091, 97.5608, -18.1555, 1.92", "-9.95701, 97.6455, -18.1737, 1.92", "-9.92665, 98.8969, -18.4379, 0.88", "-9.92003, 100.118, -18.6779, 0.66", "-9.92678, 101.384, -18.9327, 0.66", "-9.93296, 102.202, -19.1097, 0.81", "-9.9243, 103.099, -19.3149, 0.74", "-9.90153, 104.004, -19.528, 0.59", "-9.87314, 104.913, -19.7322, 1.25", "-9.82274, 105.777, -19.9422, 1.84", "-9.70603, 106.989, -20.241, 2.5", "-9.61696, 107.716, -20.4318, 2.65", "-9.59931, 107.834, -20.4698, 2.65" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.31629, 38.4107, -6.65456, 0.52", "-8.17467, 39.9319, -6.30965, 0.52", "-8.17262, 40.0063, -6.29313, 0.52", "-8.23715, 40.7321, -6.15901, 0.52", "-8.51657, 42.0754, -5.97845, 0.52", "-8.53652, 42.1479, -5.97102, 0.52", "-8.6522, 42.4743, -5.95111, 0.66", "-8.7188, 42.5679, -5.94648, 0.66", "-9.15468, 43.0747, -5.96025, 0.52", "-9.52643, 43.4371, -5.99511, 0.66", "-9.59118, 43.4951, -6.00031, 0.66", "-9.99941, 43.8559, -6.00929, 0.59", "-10.6386, 44.4182, -5.99628, 0.29", "-11.1874, 44.9089, -5.94994, 0.29", "-11.2891, 44.9999, -5.93427, 0.29", "-11.9682, 45.619, -5.79172, 0.59", "-12.4227, 46.0401, -5.70309, 0.81", "-12.4792, 46.0917, -5.69506, 0.81", "-12.8616, 46.424, -5.68151, 0.81", "-12.9121, 46.4616, -5.68482, 0.81", "-13.4041, 46.7832, -5.756, 0.81", "-14.2515, 47.3375, -5.90875, 0.37", "-14.8535, 47.7539, -5.96941, 0.37", "-15.3537, 48.1166, -5.97995, 0.59", "-15.7871, 48.4501, -5.94978, 0.81", "-16.5115, 49.026, -5.83492, 0.29", "-17.2349, 49.6179, -5.66826, 0.52", "-18.0478, 50.3123, -5.41434, 1.33", "-18.4161, 50.639, -5.2785, 1.55", "-19.5076, 51.6315, -4.83217, 0.29", "-20.3707, 52.4193, -4.47581, 1.55", "-20.5708, 52.5987, -4.41107, 1.84", "-20.6702, 52.6822, -4.39793, 1.84", "-20.9319, 52.9078, -4.42861, 1.84", "-20.9763, 52.9504, -4.44347, 1.84", "-21.2841, 53.2845, -4.63048, 1.62", "-21.8685, 53.9586, -5.09021, 0.37", "-22.3331, 54.5431, -5.51133, 0.29", "-22.6635, 55.0328, -5.86837, 0.59", "-22.8604, 55.3679, -6.12614, 0.59", "-22.9932, 55.6113, -6.31724, 0.59", "-23.1595, 55.9511, -6.5864, 0.52", "-23.4627, 56.681, -7.09945, 0.29", "-23.654, 57.2347, -7.46433, 0.74", "-23.8905, 57.8915, -7.86995, 0.66", "-24.0308, 58.248, -8.07742, 0.88", "-24.2966, 58.867, -8.41487, 0.66", "-25.0766, 60.4787, -9.23834, 2.14", "-25.3993, 61.0599, -9.52082, 2.14", "-26.103, 62.2135, -10.0602, 0.22", "-26.4967, 62.8157, -10.3238, 0.22", "-26.9282, 63.4464, -10.5837, 0.22", "-27.3818, 64.0328, -10.7908, 0.88", "-27.6357, 64.3168, -10.8724, 1.03", "-27.9663, 64.6522, -10.9474, 0.74", "-28.7888, 65.4582, -11.0848, 0.22", "-29.2972, 65.9358, -11.1445, 0.22", "-29.9773, 66.5817, -11.2237, 0.22", "-30.0682, 66.6695, -11.2346, 0.22", "-30.7122, 67.3231, -11.3129, 0.22", "-31.6554, 68.284, -11.4495, 1.69", "-31.9684, 68.6421, -11.5051, 2.21", "-32.4679, 69.2624, -11.6158, 2.21", "-32.5046, 69.3142, -11.6233, 2.21", "-33.2508, 70.4885, -11.7333, 0.22", "-33.6969, 71.2696, -11.7688, 0.22", "-34.4373, 72.5793, -11.7468, 0.22", "-34.4936, 72.6781, -11.7419, 0.22", "-35.0485, 73.6007, -11.6634, 1.11", "-35.4536, 74.2801, -11.6108, 1.11", "-35.8202, 74.8858, -11.5484, 0.59", "-36.5253, 76.0261, -11.4152, 1.69", "-36.7154, 76.319, -11.3824, 1.77", "-37.9365, 78.2026, -11.214, 0.22", "-38.94, 79.7126, -11.078, 0.22", "-39.3262, 80.2838, -11.0124, 1.03", "-39.6197, 80.7149, -10.9557, 1.03", "-39.8836, 81.099, -10.9019, 0.81", "-40.6674, 82.1025, -10.7195, 0.22", "-41.6328, 83.1844, -10.4852, 1.11", "-41.8251, 83.378, -10.4444, 1.62", "-42.1035, 83.6381, -10.3761, 1.62", "-42.1503, 83.6785, -10.3625, 1.62", "-43.9137, 85.106, -9.77195, 0.22", "-44.576, 85.6198, -9.53701, 0.81", "-44.8719, 85.8471, -9.43416, 0.81", "-46.3027, 86.9419, -8.91796, 0.22", "-46.3584, 86.9849, -8.89616, 0.22", "-47.2938, 87.7213, -8.49302, 1.18", "-47.7308, 88.0853, -8.23048, 1.55", "-53.2746, 97.1953, -9.00102, 1.55", "-59.1449, 106.118, -9.22233, 1.55", "-66.2456, 113.969, -9.89736, 1.55", "-73.6984, 121.479, -9.39064, 1.55", "-82.3013, 127.229, -7.65953, 1.55", "-90.5332, 133.609, -6.12583, 1.55", "-97.294, 141.085, -2.84034, 1.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.56189, 54.5874, 2.80844, 0.88", "-3.88114, 55.2539, 5.83467, 0.88", "-3.96244, 55.2756, 6.01917, 0.88", "-4.95157, 55.3172, 8.11041, 0.88", "-4.99261, 55.3147, 8.19437, 0.88", "-6.54858, 55.1839, 12.948, 0.59", "-6.57913, 55.1831, 13.0527, 0.59", "-6.97239, 55.1643, 14.6022, 1.18", "-7.47336, 55.1792, 16.7221, 1.18", "-7.49171, 55.182, 16.8138, 1.18", "-8.72181, 56.1224, 24.5584, 0.22", "-8.81084, 56.3521, 25.4585, 0.29", "-8.93985, 56.9255, 27.1841, 1.11", "-8.94474, 56.971, 27.289, 1.11", "-8.95174, 57.5433, 28.4261, 1.11", "-8.96098, 58.7547, 30.501, 0.22", "-8.95947, 59.7803, 31.4857, 0.59", "-8.95295, 59.8478, 31.5534, 0.59", "-8.87225, 60.2647, 31.9537, 1.11", "-13.5545, 63.5167, 46.5048, 1.11", "-21.7668, 66.9429, 59.3584, 1.11", "-26.8647, 72.1975, 73.2313, 1.11", "-33.4103, 77.8181, 86.3483, 1.11", "-39.7056, 84.2846, 99.2356, 1.11", "-45.4767, 91.6415, 111.937, 1.11", "-51.9742, 99.5605, 123.965, 1.11", "-57.787, 106.035, 137.073, 1.11", "-61.8908, 112.466, 150.83, 1.11", "-66.4335, 118.672, 164.541, 1.11", "-69.8841, 126.924, 177.582, 1.11", "-73.6734, 135.913, 190.078, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.56189, 54.5874, 2.80844, 0.52", "-2.19107, 55.8844, 3.47702, 0.52", "-1.97871, 57.0078, 4.01871, 0.52", "-1.97601, 57.0631, 4.04266, 0.44", "-2.02111, 57.9992, 4.39368, 0.44", "-2.02865, 58.0766, 4.4175, 0.44", "-2.11033, 58.8087, 4.60191, 0.66", "-2.12528, 58.8769, 4.61678, 0.66", "-2.29009, 59.5754, 4.78274, 0.66", "-2.40579, 60.1449, 4.95347, 0.44", "-2.52884, 60.9763, 5.29399, 0.44", "-2.60348, 61.7165, 5.65207, 0.96", "-2.61912, 62.7733, 6.20618, 0.81", "-2.61079, 62.9318, 6.29193, 0.81", "-2.43801, 64.0227, 6.89011, 0.66", "-2.16073, 65.0295, 7.48524, 0.44", "-2.11071, 65.153, 7.55901, 0.44", "-1.70916, 65.9225, 7.99665, 0.29", "-1.44912, 66.3133, 8.20618, 0.29", "-1.00718, 66.9202, 8.52038, 1.11", "-0.361975, 67.71, 8.91993, 1.47", "0.00387323, 68.1597, 9.16037, 1.47", "0.0368701, 68.2017, 9.18611, 1.47", "0.773773, 69.1524, 9.85832, 0.88", "1.30852, 69.8636, 10.3984, 0.52", "1.33776, 69.9044, 10.4298, 0.52", "1.75891, 70.5053, 10.8652, 0.74", "1.78876, 70.5467, 10.8953, 0.74", "2.09282, 70.9471, 11.149, 0.74", "2.12816, 70.9897, 11.1703, 0.74", "2.4415, 71.3446, 11.3069, 0.74", "3.1539, 72.2106, 11.55, 0.37", "3.51812, 72.7064, 11.6462, 0.37", "3.95439, 73.407, 11.7483, 0.52", "4.26218, 74.0187, 11.8353, 0.37", "4.66288, 75.0288, 11.9751, 0.74", "4.85957, 75.7912, 12.0762, 1.11", "4.95649, 76.521, 12.1646, 0.96", "4.96503, 77.4345, 12.2931, 0.44", "4.86087, 78.502, 12.4667, 0.44", "4.7797, 79.0159, 12.5624, 0.29", "4.63869, 79.7886, 12.7154, 0.29", "4.62779, 79.8581, 12.7285, 0.29", "4.54901, 80.5968, 12.8566, 0.37", "4.5095, 81.516, 12.9868, 0.52", "4.53919, 82.3677, 13.0665, 1.11", "4.60104, 82.9576, 13.1162, 1.69", "4.65678, 83.385, 13.1478, 1.77", "4.70179, 83.8831, 13.1835, 1.69", "4.73005, 84.3846, 13.2179, 1.47", "4.72087, 84.7204, 13.2402, 1.47", "4.70913, 84.793, 13.2446, 1.47", "4.37769, 86.0629, 13.3396, 0.29", "4.19223, 86.6325, 13.3863, 0.66", "4.16958, 86.6996, 13.3944, 0.66", "4.07133, 87.0163, 13.4438, 0.37", "3.90469, 87.6911, 13.5738, 0.29", "3.76048, 88.5018, 13.7473, 0.29", "3.75431, 88.5712, 13.7631, 0.29", "3.74357, 89.445, 13.9469, 1.03", "3.76886, 90.1821, 14.088, 1.69", "3.83633, 90.9689, 14.2138, 2.14", "3.87192, 91.328, 14.2634, 2.28", "3.89861, 91.9028, 14.3166, 1.77", "3.89535, 92.5686, 14.3478, 1.18", "3.84817, 93.2631, 14.3424, 0.52", "3.76913, 93.9326, 14.322, 0.37", "3.68741, 94.3964, 14.2795, 0.37", "3.50266, 95.3637, 14.1683, 0.74", "3.43993, 95.7176, 14.1186, 1.25", "3.34019, 96.2988, 14.0223, 1.4", "3.22168, 97.0996, 13.8778, 0.81", "3.03539, 98.7156, 13.5831, 0.37", "2.97451, 99.6009, 13.4195, 0.37", "2.92592, 101.033, 13.1655, 0.29", "2.91612, 102.126, 12.9744, 1.84", "2.92819, 102.535, 12.9052, 2.28", "2.97627, 103.152, 12.8074, 2.14", "3.14607, 104.476, 12.6507, 0.52", "3.25913, 105.221, 12.5759, 0.74", "3.34278, 105.739, 12.5438, 0.74", "3.4563, 106.465, 12.5226, 0.22", "3.50287, 106.917, 12.5188, 0.22", "3.51779, 107.828, 12.5126, 0.74", "3.4937, 108.062, 12.5077, 0.74", "3.3642, 108.829, 12.4734, 0.22", "3.24479, 109.401, 12.4392, 0.74", "3.13575, 109.876, 12.4037, 0.96", "2.9044, 110.988, 12.3072, 0.37", "2.68034, 112.342, 12.168, 1.25", "2.63374, 112.817, 12.1188, 1.55", "2.62197, 113.191, 12.0903, 1.77", "2.6255, 113.82, 12.0717, 1.77", "2.64847, 114.653, 12.0829, 0.88", "2.67241, 115.2, 12.1161, 0.52", "2.70676, 116.056, 12.2036, 0.44", "2.72873, 117.151, 12.2965, 0.29", "2.71531, 118.491, 12.3954, 1.25", "2.69371, 119.078, 12.4345, 2.21", "2.66916, 119.478, 12.4568, 2.5", "2.60708, 120.31, 12.4906, 2.28", "2.44991, 121.717, 12.478, 0.66", "2.35513, 122.475, 12.4355, 0.52", "2.25157, 123.293, 12.3694, 0.66", "2.17894, 123.884, 12.3162, 0.96", "2.08848, 124.634, 12.2378, 0.96", "1.87752, 126.441, 12.0216, 0.22", "1.81044, 127.192, 11.9385, 1.18", "1.79141, 127.609, 11.8834, 0.88", "1.79197, 128.172, 11.7981, 0.74", "1.83603, 128.9, 11.6818, 0.29", "1.84656, 128.969, 11.6709, 0.29", "2.03267, 129.577, 11.5926, 0.81", "2.05063, 129.645, 11.5811, 0.81", "2.11934, 130.069, 11.5102, 1.03", "2.13868, 130.284, 11.4756, 1.03", "2.1351, 130.575, 11.4346, 1.03", "1.94796, 131.883, 11.2223, 0.29", "1.7072, 132.837, 11.0516, 0.29", "1.53218, 133.433, 10.9429, 0.59", "1.48594, 133.576, 10.9171, 0.59", "1.32103, 134.121, 10.8221, 0.37", "1.08862, 135.08, 10.6718, 0.29", "0.920579, 136.127, 10.5416, 1.11", "0.894154, 136.556, 10.4975, 1.69", "0.895586, 137.024, 10.4557, 1.84", "0.924419, 137.769, 10.4024, 1.62", "1.01278, 138.824, 10.3503, 0.74", "1.13555, 139.824, 10.3351, 0.52", "1.14551, 139.897, 10.3346, 0.52", "1.27259, 140.991, 10.3316, 0.37", "1.27921, 141.072, 10.3309, 0.37", "1.2877, 141.757, 10.325, 1.25", "1.24994, 142.236, 10.2878, 0.96", "1.24142, 142.306, 10.279, 0.96", "1.15324, 142.957, 10.188, 0.74", "1.05447, 143.626, 10.068, 0.59", "0.967983, 144.179, 9.96551, 0.74", "0.709569, 145.637, 9.69608, 0.37", "0.539627, 146.534, 9.53363, 0.74", "0.391, 147.306, 9.39822, 0.52", "0.172292, 148.297, 9.21836, 0.29", "-0.0314819, 149.068, 9.06876, 0.81", "-0.196689, 149.581, 8.95908, 1.18", "-0.220564, 149.638, 8.94641, 1.18", "-0.34796, 149.917, 8.87577, 1.18", "-0.698922, 150.779, 8.67048, 1.18", "-0.95192, 151.519, 8.51801, 0.44", "-1.17477, 152.337, 8.36093, 0.29", "-1.20861, 152.499, 8.33384, 0.29", "-1.36857, 153.634, 8.18062, 0.29", "-1.47096, 155.198, 8.03031, 1.62", "-1.47541, 155.737, 8.00249, 2.65", "-1.47045, 156.275, 7.99258, 2.87", "-1.45833, 156.874, 7.99279, 2.36", "-1.44551, 157.707, 8.00095, 1.69", "-1.44022, 159.019, 8.01353, 0.52", "-1.43379, 160.05, 8.02314, 0.52", "-1.4382, 160.566, 8.02424, 0.81", "-1.45412, 161.306, 8.01761, 0.44", "-1.483, 162.359, 7.99526, 0.44", "-1.5134, 163.141, 7.96982, 0.37", "-1.51519, 163.212, 7.9664, 0.37", "-1.49978, 164.115, 7.90388, 0.37", "-1.49184, 164.246, 7.89336, 0.37", "-1.41141, 165.19, 7.81124, 1.62", "-1.34579, 165.802, 7.76168, 2.36", "-1.28853, 166.273, 7.72889, 2.36", "-1.08903, 167.797, 7.63168, 0.29", "-0.98367, 168.529, 7.58764, 0.29", "-0.870459, 169.282, 7.55166, 0.37", "-0.71381, 170.25, 7.51402, 0.37", "-0.655917, 170.635, 7.48892, 0.59", "-0.608939, 171.035, 7.44661, 0.59", "-0.604342, 171.094, 7.43717, 0.59", "-0.564473, 172.589, 7.14257, 0.29", "-0.567189, 174.428, 6.71562, 0.29", "-0.593034, 175.313, 6.47407, 0.96", "-0.636618, 176.102, 6.2342, 1.18", "-0.69475, 176.711, 6.03892, 0.66", "-0.776908, 177.312, 5.84236, 0.44", "-0.791421, 177.377, 5.81905, 0.44", "-0.98171, 178.1, 5.59501, 0.22", "-1.02038, 178.257, 5.56251, 0.22", "-1.25506, 179.417, 5.41645, 1.47", "-1.34196, 179.925, 5.37783, 2.28", "-1.40613, 180.378, 5.35696, 2.58", "-1.56457, 181.668, 5.33296, 0.29", "-1.64154, 182.376, 5.34316, 0.22", "-1.70569, 183.1, 5.3674, 0.22", "-1.75167, 183.707, 5.39464, 0.22", "-1.83589, 184.711, 5.44722, 1.33", "-1.86184, 184.981, 5.46452, 1.62", "-1.90825, 185.341, 5.47962, 1.62", "-2.05487, 186.15, 5.47729, 0.37", "-2.23057, 186.895, 5.45298, 0.22", "-2.32864, 187.275, 5.4394, 0.22", "-2.43434, 187.655, 5.42553, 0.52", "-2.65444, 188.49, 5.39522, 0.29", "-2.99177, 189.932, 5.34395, 0.29", "-3.15045, 190.729, 5.31829, 1.03", "-3.2185, 191.24, 5.30529, 1.33", "-3.2332, 191.466, 5.30069, 1.33", "-3.23439, 191.938, 5.29614, 1.18", "-3.1968, 192.618, 5.30411, 0.96", "-3.14248, 193.131, 5.30722, 0.37", "-3.02659, 194.034, 5.31115, 0.22", "-2.91957, 194.847, 5.31557, 0.22", "-2.81661, 195.693, 5.32259, 1.11", "-2.7679, 196.164, 5.31585, 1.92", "-2.73531, 196.553, 5.2934, 2.5", "-2.73128, 196.624, 5.28647, 2.5", "-2.72423, 197.064, 5.22183, 2.5", "-2.74034, 197.671, 5.11057, 2.36", "-2.81755, 199.104, 4.80577, 0.29", "-2.87467, 199.862, 4.63497, 0.29", "-2.88628, 199.98, 4.6094, 0.29", "-2.97885, 200.766, 4.43065, 1.33", "-3.03669, 201.223, 4.32828, 1.55", "-3.04502, 201.285, 4.31542, 1.55", "-3.10209, 201.73, 4.24107, 1.25", "-3.14036, 202.455, 4.14577, 0.66", "-3.15704, 203.811, 4.00903, 0.29", "-3.13694, 204.591, 3.94897, 0.88", "-3.1165, 204.993, 3.92337, 1.11", "-3.08596, 205.686, 3.89133, 0.96", "-3.05977, 207.067, 3.90169, 0.29", "-3.07576, 208.55, 3.9793, 0.29", "-3.11857, 209.508, 4.0664, 1.33", "-3.16936, 210.263, 4.13718, 1.92", "-3.24385, 211.093, 4.22433, 2.21", "-3.50423, 213.38, 4.48858, 0.37", "-3.68899, 214.686, 4.65318, 0.37", "-3.87496, 215.929, 4.81285, 0.37", "-4.01692, 216.839, 4.926, 0.22", "-4.16866, 217.841, 5.0416, 1.33", "-4.22078, 218.206, 5.0781, 2.06", "-4.28205, 218.57, 5.10599, 2.21", "-4.45517, 219.436, 5.17894, 1.69", "-4.7716, 220.808, 5.30248, 0.22", "-4.9531, 221.523, 5.36831, 0.81", "-5.05917, 221.95, 5.40007, 0.81", "-5.288, 223.053, 5.45842, 0.22", "-5.40611, 223.786, 5.47811, 0.81", "-5.42376, 223.952, 5.47853, 0.81", "-5.44923, 224.48, 5.46644, 0.81", "-5.44903, 224.932, 5.45145, 0.74", "-5.40121, 226.055, 5.409, 0.22", "-5.34412, 226.895, 5.36531, 0.81", "-5.32262, 227.291, 5.34423, 1.03", "-5.30212, 227.889, 5.31418, 0.44", "-5.29094, 229.004, 5.26428, 0.29", "-5.30134, 229.943, 5.22296, 0.29", "-5.34558, 231.103, 5.18195, 1.55", "-5.35697, 231.464, 5.16725, 1.92", "-5.35891, 231.548, 5.16342, 1.92", "-5.36879, 231.917, 5.14706, 1.92", "-5.45473, 234.17, 5.04813, 0.22", "-5.51726, 235.218, 5.00962, 0.66", "-5.55289, 235.632, 5.00019, 1.03", "-5.62858, 236.252, 4.98799, 1.03", "-5.74298, 236.944, 4.98012, 0.81", "-5.9, 237.671, 4.97937, 0.37", "-5.98425, 237.983, 4.98497, 0.37", "-6.13655, 238.546, 4.99438, 0.37", "-6.34645, 239.34, 5.00642, 0.29", "-6.56963, 240.271, 5.01693, 0.29", "-6.58305, 240.341, 5.01672, 0.29", "-6.77901, 241.598, 5.00995, 0.22", "-6.78893, 241.679, 5.00857, 0.22", "-6.85608, 242.411, 4.98933, 0.22", "-6.86007, 242.495, 4.98383, 0.22", "-6.8645, 243.395, 4.89546, 1.47", "-6.85913, 243.84, 4.83906, 1.84", "-6.85813, 243.9, 4.8303, 1.84", "-6.84907, 244.338, 4.7664, 1.84", "-6.81296, 245.669, 4.57028, 0.22", "-6.78843, 246.94, 4.39431, 0.22", "-6.7766, 247.532, 4.32819, 0.88", "-6.7781, 247.974, 4.29167, 1.18", "-6.79346, 248.428, 4.27126, 0.96", "-6.79948, 248.501, 4.27163, 0.96", "-6.91511, 249.149, 4.32933, 0.37", "-7.03898, 249.687, 4.39581, 0.37", "-7.15454, 250.263, 4.47153, 0.37", "-7.20273, 250.565, 4.50555, 0.29", "-7.27751, 251.217, 4.56496, 0.22", "-7.31089, 251.622, 4.59415, 0.52", "-7.34698, 252.464, 4.6343, 0.22", "-7.35104, 253.121, 4.64684, 0.22", "-7.32721, 253.719, 4.6288, 1.11", "-7.30593, 254.275, 4.57392, 1.47", "-7.30585, 254.356, 4.56211, 1.47", "-7.32051, 254.738, 4.49223, 1.33", "-7.33221, 254.845, 4.46996, 1.33", "-7.48898, 255.777, 4.27732, 0.74", "-7.67637, 256.854, 4.04845, 0.29", "-7.77713, 257.463, 3.92589, 0.37", "-7.78523, 257.525, 3.91435, 0.37", "-7.83518, 258.04, 3.83262, 0.37", "-7.88385, 258.79, 3.73051, 0.22", "-7.9041, 259.68, 3.62845, 1.11", "-7.89387, 260.216, 3.56573, 1.4", "-7.87309, 260.72, 3.49905, 1.18", "-7.8421, 261.399, 3.39947, 0.44", "-7.7822, 262.469, 3.20964, 0.22", "-7.71531, 263.183, 3.07308, 0.74", "-7.66755, 263.619, 2.99614, 1.33", "-7.66035, 263.678, 2.98573, 1.33", "-7.56846, 264.428, 2.86863, 1.62", "-7.51658, 264.836, 2.81445, 1.62", "-7.28792, 266.508, 2.63599, 0.29", "-7.14659, 267.618, 2.54231, 0.29", "-7.13953, 267.689, 2.53706, 0.29", "-7.07033, 268.911, 2.47108, 0.29", "-7.07049, 269.509, 2.45765, 1.03", "-7.07528, 269.592, 2.45783, 1.03", "-7.16011, 270.266, 2.4662, 1.18", "-7.34945, 271.465, 2.4889, 0.29", "-7.50296, 272.419, 2.51145, 0.29", "-7.65259, 273.299, 2.53664, 1.18", "-7.71158, 273.68, 2.54875, 1.47", "-7.79351, 274.251, 2.56919, 1.25", "-7.84746, 274.719, 2.58771, 1.33", "-7.94181, 275.978, 2.64459, 0.22", "-7.94426, 276.133, 2.64904, 0.22", "-7.8654, 277.277, 2.68065, 0.22", "-7.85542, 277.358, 2.68338, 0.22", "-7.73031, 278.148, 2.71584, 0.74", "-7.66376, 278.526, 2.73434, 1.18", "-7.6031, 278.98, 2.76263, 1.18", "-7.4923, 280.325, 2.85426, 0.22", "-7.48857, 280.396, 2.85952, 0.22", "-7.46485, 281.126, 2.91132, 0.66", "-7.45777, 281.508, 2.91691, 0.66", "-7.42611, 282.843, 2.87463, 0.22", "-7.40845, 283.584, 2.82747, 1.25", "-7.39202, 284.235, 2.7673, 1.55", "-7.35944, 284.96, 2.69188, 1.69", "-7.26328, 286.425, 2.51758, 0.29", "-7.15637, 287.863, 2.33942, 0.22", "-7.10511, 288.481, 2.2592, 0.66", "-7.06301, 288.928, 2.20519, 0.81", "-7.05702, 288.998, 2.19797, 0.81", "-6.94203, 290.523, 2.08882, 0.22", "-6.87549, 291.417, 2.0638, 1.03", "-6.86258, 291.645, 2.05481, 1.33", "-6.79575, 293.017, 1.99806, 0.22", "-6.76939, 293.616, 1.97445, 0.81", "-6.75257, 294.131, 1.95715, 1.03", "-6.74379, 294.554, 1.94601, 0.74", "-6.73771, 296.157, 1.90791, 0.22", "-6.75646, 296.919, 1.89543, 0.44", "-6.82031, 297.84, 1.89027, 0.22", "-6.8843, 298.658, 1.89058, 1.11", "-6.92403, 299.099, 1.8945, 1.33", "-6.98644, 299.777, 1.90381, 0.37", "-7.06265, 300.66, 1.92451, 0.15", "-7.10671, 301.325, 1.93125, 0.74", "-7.10545, 301.398, 1.92974, 0.74", "-7.08539, 301.697, 1.91839, 0.74", "-6.96649, 302.866, 1.86071, 0.22", "-6.88574, 303.52, 1.82449, 1.18", "-6.82256, 303.988, 1.79506, 1.62", "-6.55169, 306.09, 1.65693, 0.22", "-6.47342, 306.755, 1.61364, 0.29", "-6.46608, 306.828, 1.60913, 0.29", "-6.39449, 307.715, 1.56071, 0.29", "-6.33766, 308.575, 1.51287, 0.59", "-6.32477, 309.165, 1.47346, 1.11", "-6.32599, 309.266, 1.46649, 1.11", "-6.32364, 309.853, 1.42455, 1.55", "-6.32108, 310.495, 1.38008, 1.55", "-6.32104, 310.555, 1.37615, 1.55", "-6.33768, 312.556, 1.26851, 0.22", "-6.34454, 314.003, 1.20239, 0.22", "-6.30838, 315.008, 1.15777, 1.4", "-6.29308, 315.239, 1.14827, 1.77", "-6.23805, 315.907, 1.12508, 1.4", "-6.14162, 316.713, 1.1022, 0.74", "-5.96586, 317.77, 1.08035, 0.29", "-5.58733, 319.664, 1.02804, 0.22", "-5.42068, 320.417, 1.00402, 0.66", "-5.33319, 320.778, 0.990354, 0.66", "-5.08034, 321.695, 0.950396, 0.22", "-5.05984, 321.765, 0.949002, 0.22", "-4.89669, 322.369, 0.960307, 0.52", "-4.87932, 322.448, 0.965997, 0.52", "-4.80088, 322.814, 0.998694, 0.52", "-4.6724, 323.323, 1.07698, 0.22", "-4.39565, 324.265, 1.26839, 1.03", "-4.21682, 324.755, 1.38658, 1.62", "-4.05046, 325.186, 1.49852, 1.47", "-3.80869, 325.806, 1.67578, 1.33", "-3.23004, 327.291, 2.16175, 0.22", "-2.85015, 328.252, 2.49903, 1.18", "-2.35207, 329.454, 2.93234, 0.22", "-2.13823, 329.959, 3.12335, 0.22", "-1.84542, 330.643, 3.38882, 0.81", "-1.21483, 332.1, 3.95242, 0.22", "-1.19036, 332.162, 3.9758, 0.22", "-1.02375, 332.627, 4.15482, 0.81", "-1.00283, 332.69, 4.17883, 0.81", "-0.890984, 332.967, 4.28279, 1.11", "-0.685409, 333.401, 4.39327, 0.88" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-34.0832, -50.1438, 25.273, 0.29", "-35.1657, -50.1702, 25.8743, 0.29", "-36.3946, -50.2087, 26.7611, 0.29", "-36.9971, -50.287, 27.1676, 0.59", "-37.9719, -50.5431, 27.7437, 0.59", "-38.0706, -50.5786, 27.7899, 0.59", "-39.7044, -51.2554, 28.444, 0.59", "-39.7596, -51.2822, 28.4709, 0.59", "-40.5151, -51.7307, 28.9533, 0.37", "-41.1267, -52.1624, 29.3615, 0.29", "-41.6706, -52.5772, 29.7063, 0.29", "-41.7111, -52.6096, 29.7322, 0.29", "-42.7139, -53.5068, 30.3992, 0.74", "-42.9599, -53.747, 30.6173, 1.03", "-43.5274, -54.3982, 31.2903, 0.29", "-43.5881, -54.4761, 31.3685, 0.29", "-43.9478, -54.9837, 31.8227, 0.37", "-44.2149, -55.3647, 32.1054, 0.52", "-44.436, -55.6896, 32.2705, 0.52", "-44.9511, -56.2286, 32.483, 0.29", "-45.6167, -56.6483, 32.6043, 0.29", "-46.0183, -56.8077, 32.6494, 0.59", "-46.3048, -56.8797, 32.6694, 0.88", "-46.5941, -56.9403, 32.6835, 1.03", "-47.949, -57.2178, 32.8077, 0.29", "-48.7746, -57.3818, 32.926, 0.44", "-49.2545, -57.5148, 33.0322, 0.74", "-49.3423, -57.5527, 33.0562, 0.74", "-49.8544, -57.8127, 33.2171, 0.66", "-50.703, -58.3382, 33.541, 0.66", "-50.7506, -58.3794, 33.5661, 0.66", "-51.1185, -58.7456, 33.7675, 0.29", "-51.8652, -59.5565, 34.216, 0.22", "-58.7497, -64.0729, 39.1731, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-34.0832, -50.1438, 25.273, 0.74", "-35.1477, -49.2153, 26.5842, 0.74", "-36.5103, -48.0418, 28.0418, 0.66", "-36.5968, -47.9672, 28.1344, 0.66", "-37.0003, -47.6198, 28.5659, 0.66", "-37.0482, -47.5785, 28.6172, 0.66", "-37.3565, -47.313, 28.947, 0.52", "-37.6188, -46.9932, 29.1206, 0.52", "-44.9343, -41.9078, 35.8351, 0.52", "-51.4168, -35.7824, 42.6059, 0.52", "-57.5505, -31.5391, 50.8527, 0.52", "-61.7575, -26.0486, 59.6043, 0.52" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.75251, -23.3864, 1.01541, 0.96", "-7.28362, -24.7482, 1.02766, 0.96", "-7.75224, -26.1054, 1.04402, 0.96", "-7.79463, -26.2601, 1.04689, 0.96", "-7.9667, -27.0569, 1.04202, 0.96", "-8.22362, -28.4259, 1.01831, 1.11", "-8.48026, -30.0659, 0.935298, 1.11", "-8.48669, -30.1446, 0.930706, 1.11", "-8.55647, -31.7806, 0.818892, 1.03", "-8.58825, -32.9619, 0.724685, 1.99", "-8.5879, -33.0405, 0.716464, 1.99", "-8.5456, -34.1269, 0.545422, 2.87" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.75251, -23.3864, 1.01541, 1.92", "-6.3194, -25.7311, 1.01416, 1.92", "-5.91766, -27.8408, 1.00026, 1.92", "-5.54661, -29.7592, 0.977687, 1.92", "-5.2136, -31.5364, 0.949917, 2.14", "-4.88953, -33.2033, 0.915078, 1.62", "-4.54054, -34.874, 0.866615, 1.99", "-4.27664, -35.995, 0.803046, 2.73", "-3.9356, -37.2411, 0.72587, 2.36", "-3.49686, -38.6258, 0.672288, 1.99", "-2.85123, -40.4321, 0.6425, 1.92", "-2.4179, -41.5085, 0.646867, 2.28", "-1.95583, -42.5895, 0.694641, 2.5", "-1.50642, -43.6247, 0.789497, 2.58", "-0.786182, -45.3111, 1.06284, 1.69", "-0.760424, -45.3741, 1.07636, 1.69", "-0.248994, -46.8782, 1.44595, 1.47", "0.302968, -48.9918, 1.99548, 1.25", "0.517171, -50.1774, 2.30327, 1.62", "0.642824, -51.4313, 2.60785, 1.62", "0.670853, -52.7752, 2.89212, 1.25", "0.587522, -54.3112, 3.19288, 1.25", "0.334184, -55.7991, 3.45196, 1.77", "0.0916738, -56.624, 3.55578, 1.92", "-0.247937, -57.5525, 3.63095, 1.92", "-0.627016, -58.449, 3.67566, 2.06", "-1.13467, -59.525, 3.72511, 1.92", "-1.80268, -60.8799, 3.77575, 1.77", "-2.51999, -62.3326, 3.81207, 1.55", "-3.37316, -64.1016, 3.85401, 1.4", "-4.02574, -65.5179, 3.91751, 1.4", "-4.54174, -66.7445, 3.99139, 1.84", "-4.87665, -67.7094, 4.08282, 1.77", "-5.2077, -69.027, 4.24881, 1.25", "-5.22063, -69.119, 4.26262, 1.25", "-5.29977, -70.8455, 4.56191, 0.88", "-5.25097, -71.6836, 4.70613, 1.62", "-5.04355, -73.1951, 4.93796, 1.92", "-4.80487, -74.5161, 5.10282, 1.92", "-4.57381, -75.7601, 5.21834, 1.77", "-4.56049, -75.8414, 5.22282, 1.77", "-4.31414, -77.5387, 5.24535, 1.62", "-4.167, -78.9034, 5.20191, 1.33", "-4.06608, -80.1821, 5.10588, 1.18", "-3.99492, -81.4015, 4.99751, 1.18", "-3.93845, -82.783, 4.85826, 1.55", "-3.93089, -84.4807, 4.6583, 1.62", "-3.9964, -85.9565, 4.46535, 2.14", "-4.08724, -87.0738, 4.31673, 2.36", "-4.19631, -88.1316, 4.17667, 2.58", "-4.28106, -88.918, 4.07929, 3.02", "-4.47434, -90.8033, 3.89705, 2.21", "-4.61057, -92.4704, 3.77837, 1.77", "-4.69732, -93.9806, 3.70961, 1.77", "-4.73493, -95.6602, 3.68163, 1.84", "-4.67683, -97.6359, 3.75035, 1.84", "-4.51285, -99.6394, 3.91932, 1.18", "-4.20614, -101.723, 4.20067, 0.96", "-4.18954, -101.804, 4.21868, 0.96", "-3.81458, -103.198, 4.70643, 1.33", "-3.36057, -104.596, 5.34453, 1.84", "-2.99717, -105.681, 5.91528, 1.84", "-2.66417, -106.744, 6.47496, 1.77", "-2.14023, -108.697, 7.41092, 1.69", "-1.74411, -110.563, 8.11291, 0.74", "-1.59032, -111.642, 8.39176, 0.74", "-1.46477, -112.99, 8.60979, 1.18", "-1.40029, -114.262, 8.69655, 1.47", "-1.41201, -115.503, 8.61082, 1.62", "-1.48316, -116.422, 8.39909, 1.92", "-1.57915, -117.152, 8.18618, 1.92", "-1.5893, -117.218, 8.16787, 1.92", "-1.72924, -118.1, 7.95894, 1.92", "-1.94316, -119.379, 7.73312, 1.33", "-2.19057, -120.644, 7.54911, 1.47", "-2.44924, -121.928, 7.38223, 1.92", "-2.62389, -122.874, 7.26692, 1.92", "-2.83145, -124.148, 7.12838, 1.99", "-3.02152, -125.736, 6.9773, 1.99", "-3.1502, -127.57, 6.81593, 1.99", "-3.15717, -128.007, 6.78383, 2.36", "-3.14097, -129.048, 6.70258, 1.62", "-3.09373, -130.15, 6.61617, 1.25", "-3.00296, -131.52, 6.50705, 1.11", "-2.93504, -132.677, 6.41839, 0.81", "-2.87467, -134.186, 6.32541, 0.66", "-2.88999, -135.492, 6.26095, 1.55", "-2.89448, -135.577, 6.25772, 1.55", "-2.94607, -136.276, 6.28539, 2.21", "-3.03633, -137.258, 6.38438, 1.92", "-3.1469, -138.554, 6.56636, 1.62", "-3.23837, -139.757, 6.77497, 1.4", "-3.29304, -141.091, 7.10267, 1.4", "-3.34142, -143.197, 7.71134, 1.33", "-3.32873, -144.235, 8.04102, 0.96", "-3.23504, -145.801, 8.56214, 0.74", "-3.22429, -145.895, 8.59658, 0.74", "-2.83386, -148.044, 9.41715, 0.66", "-2.81039, -148.115, 9.44737, 0.66", "-2.16688, -149.541, 10.0368, 1.69", "-1.77412, -150.334, 10.3712, 2.21", "-1.17397, -151.574, 10.873, 3.02", "-0.824837, -152.385, 11.1658, 3.02", "0.113693, -154.977, 11.947, 0.52", "0.35272, -155.949, 12.1776, 0.52", "0.503594, -157.16, 12.3863, 2.36", "0.526715, -158.301, 12.4965, 3.09", "0.485553, -158.848, 12.5062, 3.24", "0.327508, -159.958, 12.4779, 3.02", "-0.167678, -162.405, 12.3011, 1.11", "-0.405215, -163.686, 12.2084, 0.96", "-0.549618, -164.629, 12.1369, 1.25", "-0.686471, -165.925, 12.064, 1.18", "-0.741011, -166.905, 12.0335, 0.52", "-0.740002, -166.99, 12.034, 0.52", "-0.610813, -167.908, 12.0953, 1.4", "-0.592696, -167.975, 12.0997, 1.4", "-0.147635, -169.102, 12.1464, 2.14", "0.200517, -169.884, 12.1571, 2.14", "0.442468, -170.451, 12.1476, 2.36", "0.853079, -171.516, 12.1134, 1.33", "1.28701, -172.806, 12.0328, 0.81", "1.73689, -174.436, 11.8741, 0.81", "2.06526, -176.015, 11.6727, 0.81", "2.33796, -177.695, 11.4679, 1.62", "2.45749, -178.596, 11.3641, 1.92", "2.61944, -179.988, 11.2624, 1.25", "2.76362, -181.325, 11.2127, 0.96", "2.95831, -183.135, 11.2031, 0.96", "3.17982, -184.704, 11.2429, 0.88", "3.46362, -186.31, 11.3469, 1.62", "3.86369, -188.152, 11.5148, 1.84", "4.10833, -189.15, 11.6856, 1.92", "4.131, -189.238, 11.7068, 1.92", "4.47089, -190.557, 12.0765, 1.62", "4.86113, -192.192, 12.5559, 0.59", "5.14094, -193.467, 12.9268, 0.59", "5.54029, -195.382, 13.4073, 0.52", "5.8049, -196.651, 13.7483, 1.69", "5.97144, -197.472, 13.9783, 2.5", "6.1031, -198.196, 14.2008, 2.5", "6.26304, -199.066, 14.4683, 2.5", "6.50111, -200.376, 14.8105, 1.77" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-9.59931, 107.834, -20.4698, 0.59", "-10.4377, 108.737, -21.056, 0.59", "-11.0687, 109.563, -21.6042, 0.44", "-11.0132, 109.702, -22.2496, 0.74", "-10.9152, 109.934, -23.259, 0.74", "-10.9057, 109.97, -23.4125, 0.74", "-10.8904, 110.169, -24.1908, 0.88", "-10.8883, 110.186, -24.2601, 0.88", "-10.7982, 111.546, -29.7958, 1.62", "-10.8335, 111.927, -31.3639, 1.4", "-10.9495, 112.301, -32.9903, 0.37", "-11.0553, 112.499, -33.8717, 0.74", "-11.3873, 112.93, -35.7082, 0.29", "-11.5685, 113.125, -36.3702, 1.4", "-11.822, 113.351, -36.9129, 1.84", "-12.6873, 114.093, -38.9352, 0.44", "-12.8221, 114.226, -39.2812, 0.29", "-13.0389, 114.437, -39.8598, 0.29", "-13.2525, 114.642, -40.4005, 0.59", "-13.9785, 115.398, -42.3323, 0.44", "-14.2318, 115.696, -42.958, 0.22", "-14.4393, 115.963, -43.3969, 0.74", "-14.7742, 116.446, -44.1893, 0.15", "-14.8268, 116.523, -44.3156, 0.15", "-14.9545, 116.717, -44.6003, 0.15", "-15.4534, 117.491, -45.5361, 1.47", "-15.7149, 117.893, -46.0003, 1.62", "-16.6879, 119.354, -47.7941, 0.22", "-16.7163, 119.397, -47.8484, 0.22", "-17.0713, 119.903, -48.5156, 0.22", "-17.5426, 120.531, -49.3859, 1.25", "-17.7568, 120.831, -49.8391, 1.4", "-18.3982, 121.781, -51.273, 0.22", "-18.4367, 121.847, -51.3704, 0.22", "-18.8993, 122.765, -52.7522, 1.47", "-19.0275, 123.055, -53.1732, 1.99", "-19.6449, 124.701, -55.3758, 0.37", "-19.7898, 125.145, -55.9149, 0.29", "-20.0196, 125.918, -56.759, 1.18", "-20.2705, 126.815, -57.6648, 0.52", "-20.4769, 127.68, -58.4352, 1.55", "-20.5467, 127.993, -58.683, 1.84", "-20.9584, 129.884, -59.8861, 0.22", "-20.9687, 129.946, -59.924, 0.22", "-21.0314, 130.509, -60.2229, 0.22", "-21.0246, 131.189, -60.5352, 1.4", "-21.0178, 131.267, -60.5687, 1.4", "-20.9672, 131.71, -60.7373, 1.4", "-20.6916, 133.384, -61.3381, 0.15", "-20.5694, 134.088, -61.6143, 0.74", "-20.2645, 135.719, -62.2994, 0.15", "-20.1493, 136.291, -62.5491, 0.74", "-20.0829, 136.575, -62.6729, 0.88", "-19.6869, 138.001, -63.2684, 0.15", "-19.6671, 138.055, -63.2934, 0.15", "-19.4878, 138.469, -63.513, 0.37", "-19.4204, 138.562, -63.6066, 0.37", "-18.9671, 138.969, -64.2552, 0.22", "-18.578, 139.268, -64.8146, 0.59", "-17.5193, 139.911, -66.3458, 1.69", "-17.4033, 139.973, -66.5195, 1.69", "-15.5796, 140.712, -69.3995, 0.22", "-15.2334, 140.804, -69.9719, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.59931, 107.834, -20.4698, 2.65", "-9.38728, 108.483, -20.2005, 2.65", "-9.21682, 109.221, -19.9526, 2.06", "-8.99447, 110.535, -19.5754, 1.92", "-8.98901, 110.576, -19.5645, 1.92", "-8.92293, 111.333, -19.3826, 0.74", "-8.85256, 112.433, -19.1337, 0.52", "-8.85631, 113.304, -18.9479, 0.52", "-8.8821, 113.719, -18.8842, 0.52", "-8.89983, 113.893, -18.8774, 0.52", "-8.9447, 114.438, -18.8704, 0.52", "-8.94899, 114.522, -18.8722, 0.52", "-8.94909, 115.142, -18.9117, 0.44", "-8.92483, 115.634, -18.9312, 0.44", "-8.8454, 116.57, -18.9712, 1.84", "-8.76276, 117.337, -18.9844, 2.73", "-8.7126, 117.745, -18.9823, 3.54", "-8.64706, 118.284, -18.9682, 3.9", "-8.59689, 118.715, -18.9463, 4.05", "-8.56042, 119.122, -18.9238, 3.9", "-8.52244, 119.874, -18.8803, 3.61", "-8.5209, 120.403, -18.8412, 2.8", "-8.53955, 120.997, -18.796, 1.69", "-8.57051, 121.695, -18.7411, 1.11", "-8.61719, 122.481, -18.6812, 0.81", "-8.6509, 122.909, -18.6529, 0.66", "-8.73739, 123.813, -18.6204, 0.52", "-8.82633, 124.604, -18.5847, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-58.7497, -64.0729, 39.1731, 0.37", "-65.6478, -68.0112, 43.3439, 0.37", "-71.2108, -73.6798, 47.6937, 0.37", "-77.3513, -77.9516, 52.6681, 0.37", "-82.183, -82.1855, 58.9381, 0.37", "-88.5117, -86.3581, 63.7513, 0.37", "-94.8284, -90.0628, 68.9136, 0.37", "-100.644, -95.6468, 73.0286, 0.37", "-107.958, -99.8677, 76.1019, 0.37", "-116.434, -102.273, 77.5214, 0.37", "-124.953, -104.886, 78.1265, 0.37", "-133.611, -105.906, 79.8963, 0.37", "-142.313, -106.658, 81.5615, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-58.7497, -64.0729, 39.1731, 0.29", "-66.3087, -68.34, 43.4234, 0.37", "-73.0429, -73.1329, 48.4776, 0.37", "-79.8553, -79.0087, 52.221, 0.37", "-86.6764, -85.5164, 54.827, 0.37", "-93.5178, -92.2151, 56.882, 0.37", "-99.8952, -98.7988, 60.3103, 0.37", "-105.584, -106.302, 63.193, 0.37", "-110.747, -114.63, 64.6621, 0.37", "-117.41, -121.852, 64.7594, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-61.7575, -26.0486, 59.6043, 0.37", "-67.9419, -20.1775, 68.8547, 0.37", "-74.9689, -14.2884, 77.4692, 0.37", "-82.577, -6.98278, 84.4419, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-61.7575, -26.0486, 59.6043, 0.29", "-64.5373, -23.3676, 64.3342, 0.37", "-67.055, -20.3467, 69.0198, 0.37", "-68.6626, -18.183, 74.4773, 0.37", "-69.9454, -16.6833, 80.2237, 0.37", "-71.584, -15.9207, 86.0215, 0.37", "-73.8821, -14.8774, 91.546, 0.37", "-76.5696, -13.8217, 96.8899, 0.37", "-79.1611, -12.6094, 102.25, 0.37", "-82.1517, -10.6097, 107.161, 0.37", "-85.2669, -8.60153, 111.992, 0.37", "-88.0233, -6.53432, 117.012, 0.37", "-90.2536, -5.15953, 122.494, 0.37", "-92.6432, -3.40749, 127.805, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.5456, -34.1269, 0.545422, 0.59", "-8.64986, -34.6289, 0.171595, 0.59", "-8.88097, -35.2913, -0.466907, 0.44", "-9.13306, -35.8325, -1.2245, 0.29", "-9.28775, -36.068, -1.63319, 0.22", "-9.49252, -36.3418, -2.13099, 0.29", "-9.75126, -36.6669, -2.71969, 0.29", "-10.1138, -37.0305, -3.43939, 0.29", "-10.5336, -37.4327, -4.25579, 0.29", "-10.8554, -37.7719, -4.88242, 0.29", "-11.2592, -38.2905, -5.69622, 1.25", "-11.3757, -38.4853, -5.93853, 1.77", "-11.5445, -38.8573, -6.30152, 1.77", "-12.0053, -40.0658, -7.2849, 1.11", "-12.2451, -40.8312, -7.81844, 0.52", "-12.3746, -41.4251, -8.20696, 0.37", "-12.4819, -42.2577, -8.73789, 0.37", "-12.5256, -42.8852, -9.12695, 0.37", "-12.5299, -42.9923, -9.19311, 0.37", "-12.5665, -43.8786, -9.73499, 1.25", "-12.5813, -44.42, -10.117, 1.18", "-12.6477, -45.2722, -10.8285, 0.29", "-12.722, -45.591, -11.1549, 0.22", "-12.8784, -45.9759, -11.5752, 0.22", "-13.0357, -46.2676, -11.8784, 0.44", "-13.2342, -46.5475, -12.1615, 0.44", "-13.4715, -46.8305, -12.4243, 0.29", "-13.724, -47.1119, -12.6911, 0.29", "-14.0457, -47.5441, -13.1393, 0.37", "-14.2719, -47.8998, -13.5144, 0.37", "-14.5087, -48.2881, -13.969, 0.29", "-14.8999, -48.9409, -14.8425, 1.18", "-15.1812, -49.4038, -15.4982, 1.99", "-15.4553, -49.8307, -16.1483, 2.28", "-15.6296, -50.0854, -16.5478, 1.99", "-16.0808, -50.7598, -17.5368, 0.59", "-16.3902, -51.276, -18.1662, 0.37", "-16.6179, -51.763, -18.614, 0.37", "-16.8684, -52.3463, -19.0825, 1.11", "-17.0503, -52.763, -19.3953, 1.69", "-17.2431, -53.2294, -19.7301, 1.84", "-17.5101, -53.8634, -20.1602, 1.4", "-17.9896, -54.8664, -20.8722, 0.44", "-18.2475, -55.3558, -21.2576, 0.44", "-18.5822, -55.9271, -21.7359, 0.37", "-18.8826, -56.3893, -22.1614, 1.18", "-19.1479, -56.779, -22.5288, 1.62", "-19.4307, -57.2115, -22.8993, 1.03", "-19.4573, -57.2624, -22.9358, 1.03", "-19.5752, -57.5887, -23.1299, 0.88", "-19.7334, -58.1955, -23.4736, 0.44", "-19.8804, -58.8463, -23.8451, 0.29", "-19.9975, -59.4467, -24.1865, 0.29", "-20.1973, -60.5448, -24.8139, 1.92", "-20.3338, -61.2995, -25.2396, 2.73", "-20.465, -62.0719, -25.6761, 2.65", "-20.7297, -63.5272, -26.5253, 0.66", "-20.7428, -63.5925, -26.566, 0.66", "-20.956, -64.5554, -27.1909, 0.29", "-21.0632, -64.9706, -27.457, 0.29", "-21.1945, -65.4766, -27.7892, 0.29", "-21.3163, -66.0874, -28.2055, 0.29", "-21.4025, -66.657, -28.6182, 1.11", "-21.4114, -66.72, -28.6631, 1.11", "-21.4864, -67.2445, -29.0306, 1.25", "-21.5915, -67.9163, -29.4922, 0.96", "-21.8108, -69.1649, -30.2223, 0.37", "-21.8194, -69.2255, -30.2535, 0.37", "-21.9233, -69.9044, -30.5798, 0.22", "-22.0037, -70.3632, -30.7876, 0.22", "-22.0275, -70.4929, -30.8503, 0.66", "-22.2162, -71.3764, -31.2709, 0.52", "-22.5443, -72.8001, -31.9469, 1.77", "-22.7816, -73.812, -32.4324, 2.58", "-22.9858, -74.6577, -32.8483, 2.58", "-23.3924, -76.272, -33.6462, 0.44", "-23.6236, -77.1034, -34.0567, 0.29", "-23.6463, -77.1723, -34.0908, 0.29", "-23.8486, -77.6838, -34.3212, 0.29", "-24.1753, -78.4732, -34.6481, 1.47", "-24.3628, -78.9119, -34.8077, 1.84", "-24.6125, -79.5109, -34.963, 1.47", "-25.2177, -81.0854, -35.3139, 0.29", "-25.4314, -81.6829, -35.4251, 1.11", "-25.5781, -82.1089, -35.4923, 1.25", "-25.7903, -82.7454, -35.5711, 1.03", "-26.0862, -83.6452, -35.6677, 0.22", "-26.2859, -84.2256, -35.725, 0.22", "-26.4177, -84.5828, -35.755, 0.59", "-26.6183, -85.0767, -35.8145, 0.74", "-26.7478, -85.3737, -35.8715, 0.37", "-27.0026, -85.9248, -36.0067, 0.22", "-27.3717, -86.6733, -36.2238, 1.55", "-27.7115, -87.3673, -36.4299, 2.21", "-27.9048, -87.7607, -36.5472, 1.84", "-28.5165, -88.9945, -36.915, 0.22", "-28.8332, -89.6179, -37.1041, 0.22", "-29.2023, -90.3002, -37.3258, 1.11", "-29.4231, -90.6839, -37.4574, 1.62", "-29.7045, -91.1358, -37.6198, 1.84", "-30.14, -91.8031, -37.8602, 1.11", "-30.3909, -92.1757, -37.9923, 0.66", "-31.0463, -93.1568, -38.3447, 0.29", "-31.3986, -93.6921, -38.5368, 0.59", "-32.236, -95.0156, -38.9661, 0.29", "-32.2718, -95.0742, -38.9834, 0.29", "-32.8511, -96.0523, -39.245, 1.18", "-33.0751, -96.4389, -39.3395, 1.55", "-33.288, -96.8277, -39.4175, 1.55", "-33.8292, -97.9332, -39.6445, 0.52", "-34.2557, -98.9512, -39.8651, 0.37", "-34.279, -99.0169, -39.8803, 0.37", "-34.5296, -99.8627, -40.0742, 0.37", "-34.7188, -100.582, -40.2422, 0.29", "-35.0428, -101.971, -40.5767, 1.99", "-35.1725, -102.61, -40.7352, 2.28", "-35.4662, -104.145, -41.0864, 0.22", "-35.6569, -105.036, -41.2836, 0.22", "-35.7605, -105.44, -41.355, 0.74", "-35.7811, -105.508, -41.3638, 0.74", "-35.9909, -106.113, -41.404, 0.74", "-36.2843, -106.934, -41.4317, 0.22", "-36.6305, -107.861, -41.4635, 0.22", "-37.2, -109.347, -41.5291, 2.14", "-37.3283, -109.684, -41.5448, 2.36", "-37.8073, -110.906, -41.6165, 0.29", "-38.031, -111.44, -41.6521, 0.22", "-38.3395, -112.119, -41.7125, 0.22", "-38.7224, -112.913, -41.7946, 1.4", "-38.9336, -113.342, -41.8451, 1.77", "-39.2388, -113.956, -41.9032, 1.33", "-39.7699, -115.086, -41.9529, 0.37", "-40.1216, -115.896, -41.9667, 0.22", "-40.3347, -116.45, -41.9583, 0.22", "-40.5812, -117.172, -41.9417, 0.81", "-40.7146, -117.595, -41.9308, 0.81", "-40.9808, -118.505, -41.9363, 0.22", "-41.1358, -119.033, -41.9825, 0.22", "-41.3257, -119.612, -42.0718, 1.25", "-41.488, -120.036, -42.1676, 1.77", "-41.6791, -120.495, -42.2906, 1.77", "-42.0956, -121.496, -42.5699, 0.44", "-42.4794, -122.405, -42.8305, 0.29", "-42.7981, -123.189, -43.0552, 1.4", "-42.9858, -123.65, -43.1883, 1.77", "-43.1405, -124.046, -43.2979, 1.77", "-43.5627, -125.168, -43.5884, 0.37", "-43.8681, -126.019, -43.7809, 0.29", "-44.18, -126.915, -43.993, 0.22", "-44.4472, -127.652, -44.2009, 0.22", "-44.779, -128.506, -44.4763, 1.11", "-44.906, -128.812, -44.5854, 1.4", "-45.1656, -129.43, -44.8111, 0.59", "-45.4533, -130.145, -45.0622, 0.22", "-45.7353, -130.874, -45.3033, 0.22", "-46.0194, -131.604, -45.5553, 1.11", "-46.1503, -131.916, -45.6708, 1.55", "-46.345, -132.364, -45.8422, 1.33", "-46.6811, -133.106, -46.1313, 0.59", "-46.9522, -133.707, -46.3375, 0.22", "-47.1303, -134.084, -46.4532, 0.66", "-47.2283, -134.27, -46.5095, 0.66", "-47.3341, -134.453, -46.563, 0.66", "-47.6621, -135.004, -46.7214, 0.22", "-48.0611, -135.594, -46.8629, 0.22", "-48.5882, -136.318, -47.0112, 1.33", "-48.8271, -136.631, -47.0704, 1.62", "-49.0865, -136.961, -47.1315, 1.33", "-49.9169, -137.987, -47.3216, 0.29", "-50.4405, -138.605, -47.4558, 0.29", "-50.8656, -139.066, -47.6015, 0.29", "-51.258, -139.465, -47.7731, 0.88", "-51.5272, -139.728, -47.901, 0.88", "-51.8359, -140.016, -48.0606, 0.66", "-52.3675, -140.515, -48.3609, 0.15", "-52.7957, -141.009, -48.6558, 0.15", "-53.1843, -141.5, -48.9419, 0.15", "-53.3728, -141.744, -49.0936, 0.59", "-53.4164, -141.79, -49.1227, 0.59", "-53.6583, -142.027, -49.2586, 0.59", "-54.0786, -142.441, -49.457, 0.22", "-54.1329, -142.501, -49.4791, 0.22", "-54.7378, -143.182, -49.7211, 0.22", "-55.6516, -144.241, -50.0787, 1.77", "-55.9747, -144.623, -50.2031, 2.14", "-56.3833, -145.116, -50.3687, 1.47", "-57.1192, -146.108, -50.6917, 0.37", "-57.6977, -146.993, -50.9691, 0.22", "-57.9814, -147.534, -51.1201, 0.81", "-58.1174, -147.857, -51.2135, 0.96", "-58.3182, -148.384, -51.3755, 0.96", "-58.6321, -149.34, -51.6721, 0.22", "-58.6504, -149.404, -51.6923, 0.22", "-58.8138, -150.08, -51.8965, 0.22", "-58.9903, -150.843, -52.1122, 0.22", "-59.0849, -151.371, -52.2541, 0.96", "-59.1663, -151.836, -52.3756, 1.33", "-59.2804, -152.42, -52.5392, 1.11", "-59.4457, -153.285, -52.842, 0.22", "-59.528, -153.681, -53.0057, 0.59", "-59.7769, -154.759, -53.4562, 0.22", "-59.9781, -155.545, -53.7849, 1.18", "-60.1143, -156.053, -54.0137, 1.4", "-60.4667, -157.231, -54.5706, 0.22", "-60.6933, -157.867, -54.8859, 0.22", "-60.9716, -158.567, -55.2279, 1.99", "-61.2061, -159.085, -55.4766, 2.5", "-61.4561, -159.631, -55.7318, 2.43", "-62.1399, -161.047, -56.3527, 0.22", "-62.4149, -161.584, -56.5603, 0.29", "-62.8022, -162.332, -56.8437, 0.22", "-63.0267, -162.77, -56.9979, 0.74", "-63.1428, -162.988, -57.0555, 0.74", "-63.5808, -163.803, -57.1864, 0.15", "-63.8893, -164.47, -57.2275, 0.15", "-63.9691, -164.679, -57.235, 0.81", "-64.1953, -165.366, -57.2731, 1.33", "-64.3987, -166.058, -57.3215, 1.33", "-64.4168, -166.124, -57.3272, 1.33", "-64.6408, -167.164, -57.4825, 0.22", "-64.8385, -168.315, -57.6913, 0.22", "-64.9586, -169.228, -57.8747, 1.62", "-65.0278, -169.825, -58.0113, 1.92", "-65.0797, -170.33, -58.1351, 1.92", "-65.2149, -171.683, -58.4479, 0.22", "-65.2916, -172.455, -58.6165, 0.22", "-65.3505, -173.388, -58.8113, 0.22", "-65.3877, -174.197, -58.9795, 1.25", "-65.4167, -174.588, -59.0731, 1.62", "-65.4843, -175.078, -59.2005, 1.62", "-65.5135, -175.219, -59.241, 1.62", "-65.8793, -176.772, -59.7882, 0.22", "-65.9066, -176.909, -59.8416, 0.22", "-66.0302, -177.731, -60.1578, 0.22", "-66.1469, -178.647, -60.5056, 0.22", "-66.2423, -179.335, -60.7718, 1.03", "-66.2927, -179.674, -60.9034, 1.03", "-66.4638, -180.726, -61.3073, 0.22", "-66.5364, -181.207, -61.4882, 0.59", "-66.6256, -181.937, -61.7377, 0.22", "-66.7001, -182.472, -61.9038, 0.22", "-66.8143, -183.175, -62.08, 1.25", "-66.8857, -183.579, -62.1694, 1.62", "-66.9099, -183.702, -62.1938, 1.62", "-67.1482, -184.97, -62.4542, 0.15", "-67.2887, -185.815, -62.6135, 1.25", "-67.3374, -186.16, -62.671, 1.25", "-67.4944, -187.262, -62.8743, 0.22", "-67.5061, -187.328, -62.8915, 0.22", "-67.6323, -187.897, -63.0781, 0.74", "-67.6472, -187.952, -63.1022, 0.74", "-67.7339, -188.21, -63.2181, 0.74", "-68.1056, -189.192, -63.6246, 0.15", "-68.4267, -189.983, -63.9084, 1.11", "-68.4822, -190.125, -63.957, 1.11", "-68.5097, -190.197, -63.9802, 1.11", "-69.2269, -192.001, -64.591, 0.22", "-69.4485, -192.546, -64.7846, 1.03", "-69.6288, -192.979, -64.9409, 1.11", "-70.1762, -194.265, -65.4446, 0.22", "-70.2631, -194.466, -65.53, 0.59", "-70.6875, -195.376, -65.9416, 0.22", "-70.9033, -195.8, -66.1518, 1.33", "-71.0987, -196.146, -66.3213, 1.55", "-71.4294, -196.651, -66.5699, 0.88", "-72.1432, -197.668, -67.0365, 0.22", "-72.4673, -198.127, -67.2378, 0.66", "-72.6062, -198.343, -67.3503, 0.66", "-73.098, -199.148, -67.824, 0.22", "-73.5355, -199.917, -68.3163, 1.62", "-73.8335, -200.494, -68.7198, 2.06", "-74.0715, -200.982, -69.0962, 2.06", "-74.8667, -202.703, -70.4462, 0.22", "-74.8667, -202.703, -70.4462, 0.59", "-74.9203, -202.808, -70.534, 0.59", "-75.2862, -203.429, -71.0695, 0.22", "-75.6874, -203.982, -71.5705, 0.22", "-76.1764, -204.531, -72.0635, 1.77", "-76.4901, -204.815, -72.2995, 2.06", "-77.764, -205.88, -73.141, 0.15", "-78.0298, -206.08, -73.2996, 0.74", "-78.3543, -206.276, -73.4534, 0.74", "-79.1049, -206.661, -73.7294, 0.22", "-79.7829, -206.957, -73.9286, 0.22", "-80.561, -207.257, -74.1088, 1.18", "-80.961, -207.395, -74.166, 1.55", "-82.2598, -207.821, -74.3174, 0.29", "-83.2296, -208.124, -74.4147, 0.22", "-83.6504, -208.237, -74.4706, 0.74", "-83.9832, -208.311, -74.5344, 1.03", "-85.0188, -208.492, -74.8138, 0.15", "-85.3209, -208.537, -74.9343, 0.37", "-85.3801, -208.544, -74.9683, 0.37", "-86.268, -208.607, -75.5911, 0.22", "-86.8675, -208.639, -76.0586, 1.18", "-87.2779, -208.667, -76.4095, 1.55", "-88.2398, -208.755, -77.3053, 0.22", "-88.7091, -208.803, -77.716, 0.22", "-89.3034, -208.874, -78.201, 0.96", "-89.5223, -208.899, -78.3573, 1.33", "-90.6382, -209.008, -79.0804, 0.22", "-91.1196, -209.053, -79.3528, 0.22", "-92.0266, -209.129, -79.8094, 0.96", "-92.2731, -209.148, -79.9184, 1.25", "-93.9099, -209.275, -80.5823, 0.22", "-94.5654, -209.333, -80.8427, 0.22", "-95.8253, -209.453, -81.3274, 1.84", "-96.0839, -209.488, -81.4277, 2.36", "-97.7589, -209.797, -82.1065, 0.22", "-98.2062, -209.894, -82.2843, 0.66", "-98.8742, -210.085, -82.5632, 0.22", "-98.9239, -210.101, -82.5855, 0.22", "-99.5592, -210.328, -82.9333, 0.96", "-99.8459, -210.436, -83.1137, 0.96", "-99.8952, -210.459, -83.1521, 0.96", "-100.646, -210.788, -83.7402, 0.22", "-100.696, -210.809, -83.7795, 0.22", "-101.47, -211.14, -84.3956, 0.22", "-101.526, -211.164, -84.4406, 0.22", "-102.333, -211.547, -85.0483, 0.22", "-102.39, -211.575, -85.0899, 0.22", "-102.759, -211.758, -85.343, 1.11", "-103.137, -211.947, -85.6004, 1.4", "-103.291, -212.025, -85.704, 1.69", "-104.77, -212.765, -86.6953, 0.22", "-105.147, -212.947, -86.9466, 0.66", "-105.324, -213.033, -87.0629, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.5456, -34.1269, 0.545422, 2.58", "-7.96109, -35.4896, 0.547929, 2.58", "-7.45677, -37.0454, 0.432634, 1.11", "-7.08716, -38.3724, 0.326866, 0.66", "-6.81489, -39.4053, 0.23811, 0.59", "-6.37125, -41.0622, 0.0781596, 1.25", "-6.17447, -41.7581, 0.00891292, 1.62", "-5.59633, -43.9376, -0.214404, 1.11", "-5.2232, -45.2347, -0.358088, 1.33", "-4.83175, -46.4071, -0.506677, 1.92", "-4.34582, -47.6496, -0.666412, 1.99", "-3.76507, -48.9311, -0.849075, 1.33", "-3.11669, -50.302, -1.06747, 0.96", "-2.3778, -51.8048, -1.31762, 0.96", "-2.3521, -51.8591, -1.32975, 0.96", "-1.95599, -52.8007, -1.60647, 0.74", "-1.4556, -54.2234, -2.23775, 0.52", "-1.18737, -55.2075, -2.83107, 0.52", "-1.17552, -55.2638, -2.87222, 0.52", "-1.03435, -56.0531, -3.49672, 0.88", "-0.864753, -57.0584, -4.27778, 1.18", "-0.61508, -58.6923, -5.51784, 0.59", "-0.496014, -59.6641, -6.19175, 0.59", "-0.489751, -59.7152, -6.22424, 0.59", "-0.390423, -60.5771, -6.69171, 0.59", "-0.252553, -62.0199, -7.29226, 1.55", "-0.19479, -63.0728, -7.57561, 2.14", "-0.194732, -63.6762, -7.68524, 2.36", "-0.197945, -63.7379, -7.69655, 2.36", "-0.275281, -64.3967, -7.85526, 2.36", "-0.426017, -65.1462, -8.11907, 2.06", "-0.733725, -66.2267, -8.60222, 1.77", "-1.08491, -67.336, -9.15395, 0.74", "-1.26236, -67.8706, -9.4461, 0.52", "-1.58175, -68.7698, -9.98265, 0.44", "-1.99767, -69.8065, -10.706, 0.44", "-2.42819, -70.7671, -11.4948, 2.06" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "6.50111, -200.376, 14.8105, 0.88", "6.3191, -202.007, 14.5983, 0.88", "6.17897, -203.559, 14.2877, 0.88", "6.11888, -204.64, 14.0421, 1.18", "6.08519, -205.34, 13.8621, 1.18", "6.00338, -207.234, 13.3644, 0.52", "5.9663, -208.093, 13.1387, 0.52", "5.9238, -209.776, 12.6433, 1.99", "5.90389, -211.389, 12.1032, 3.09", "5.90402, -212.401, 11.7308, 3.61", "5.90755, -213.592, 11.2862, 3.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.50111, -200.376, 14.8105, 0.74", "7.1576, -201.417, 14.2426, 0.74", "7.87126, -202.727, 13.6197, 0.66", "8.22694, -203.379, 13.3093, 1.11", "8.45561, -203.799, 13.1097, 1.25", "9.50151, -205.718, 12.1969, 0.29", "9.94604, -206.533, 11.8089, 0.29", "10.4568, -207.623, 11.2785, 0.29", "15.273, -216.416, 7.91172, 0.29", "21.2136, -224.909, 5.94359, 0.29", "27.6943, -232.792, 3.44624, 0.29", "33.5368, -241.509, 2.2244, 0.29", "38.869, -250.582, 1.01706, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-15.2334, 140.804, -69.9719, 0.22", "-15.682, 140.068, -71.3488, 0.22", "-15.855, 139.819, -71.9362, 1.18", "-15.9175, 139.739, -72.1284, 1.18", "-16.79, 138.724, -74.6523, 0.22", "-16.9812, 138.512, -75.1939, 0.22", "-17.6064, 137.819, -76.9654, 0.74", "-18.4309, 137.068, -79.2477, 0.22", "-18.6967, 136.85, -79.9834, 1.03", "-18.8026, 136.767, -80.2731, 1.25", "-18.8921, 136.708, -80.488, 1.25" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-15.2334, 140.804, -69.9719, 0.52", "-14.7508, 141.978, -71.2826, 0.52", "-14.4838, 142.702, -72.0622, 0.22", "-14.1561, 143.832, -73.146, 0.88", "-14.1115, 144.025, -73.3135, 1.03", "-13.7945, 145.732, -74.6992, 0.15", "-13.7265, 146.155, -75.0292, 0.52", "-13.7197, 146.319, -75.1393, 0.52", "-13.7282, 147.512, -75.8397, 0.15", "-13.7473, 148.056, -76.1125, 0.81", "-13.786, 148.773, -76.4523, 1.11", "-13.7922, 148.833, -76.4758, 1.11", "-13.9286, 150.217, -77.0326, 0.22", "-13.9826, 150.827, -77.2963, 0.96", "-14.01, 151.213, -77.4894, 1.11" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-8.82633, 124.604, -18.5847, 0.96", "-10.0742, 125.694, -19.1475, 0.96", "-11.3222, 126.798, -19.7086, 1.03", "-11.6042, 127.055, -19.8517, 1.03", "-12.5612, 127.948, -20.3624, 0.29", "-13.2176, 128.642, -20.7468, 1.25", "-13.6228, 129.121, -21.0028, 1.47", "-13.7315, 129.286, -21.0834, 1.47", "-14.5341, 130.804, -21.7169, 0.29", "-14.6022, 130.942, -21.7752, 0.29", "-15.0982, 132.1, -22.2559, 0.29", "-15.2865, 132.532, -22.4566, 0.59", "-15.6996, 133.494, -22.923, 0.44", "-16.2149, 134.712, -23.5209, 2.28", "-16.5174, 135.442, -23.8763, 2.65", "-16.6678, 135.79, -24.0516, 2.65", "-17.7089, 138.064, -25.2252, 0.37", "-18.0146, 138.786, -25.5859, 0.29", "-18.0479, 138.877, -25.6301, 0.29", "-18.1984, 139.397, -25.8595, 0.44", "-18.2648, 139.707, -25.973, 0.44", "-18.4125, 140.637, -26.2534, 0.15", "-18.4722, 141.457, -26.4143, 0.74", "-18.4797, 141.536, -26.4314, 0.74", "-18.5627, 142.016, -26.5541, 0.74", "-18.6478, 142.417, -26.662, 0.52", "-18.8786, 143.355, -26.8988, 0.29", "-19.1874, 144.52, -27.1736, 1.18", "-19.3422, 145.07, -27.2957, 1.69", "-19.9698, 147.021, -27.7656, 0.29", "-20.2303, 147.778, -27.949, 0.29", "-20.7489, 149.215, -28.2806, 1.77", "-20.9005, 149.596, -28.362, 2.73", "-21.0316, 149.897, -28.42, 2.73", "-22.1788, 152.394, -28.8605, 0.29", "-22.5277, 153.126, -28.9725, 0.29", "-22.668, 153.392, -29.0099, 0.59", "-23.1824, 154.281, -29.1201, 0.22", "-23.5626, 154.894, -29.1786, 0.74", "-23.7105, 155.111, -29.1794, 1.03", "-23.7603, 155.17, -29.1664, 1.03", "-24.0935, 155.532, -29.084, 0.81", "-24.1869, 155.641, -29.0625, 0.81", "-25.0182, 156.746, -28.8536, 0.22", "-25.3967, 157.295, -28.7595, 0.59", "-26.0058, 158.213, -28.5978, 0.22", "-26.0976, 158.358, -28.5702, 0.22", "-26.4641, 158.993, -28.4403, 0.22", "-26.866, 159.766, -28.2754, 0.22", "-27.3974, 160.892, -28.0421, 1.62", "-27.7596, 161.708, -27.8813, 2.14", "-28.0635, 162.415, -27.7391, 2.14", "-28.8475, 164.195, -27.3596, 0.29", "-29.0985, 164.754, -27.2343, 0.44", "-29.3803, 165.389, -27.0975, 0.22", "-29.813, 166.402, -26.8948, 0.22", "-30.2105, 167.373, -26.7269, 1.25", "-30.3776, 167.788, -26.6657, 1.62", "-30.4701, 168.025, -26.6449, 1.84", "-31.1503, 169.797, -26.5993, 0.29", "-31.6679, 171.209, -26.6326, 0.29", "-32.0106, 172.175, -26.7293, 0.74", "-32.1561, 172.559, -26.793, 0.74", "-32.6803, 173.89, -27.0722, 0.22", "-33.149, 175.061, -27.3637, 1.62", "-33.1725, 175.122, -27.3815, 1.62", "-33.4825, 175.963, -27.6366, 1.99", "-34.186, 177.985, -28.2518, 0.22", "-34.2069, 178.047, -28.27, 0.22", "-34.5002, 178.995, -28.5062, 0.22", "-34.7933, 180.034, -28.7404, 0.96", "-34.9029, 180.432, -28.8222, 1.25", "-35.3286, 182.257, -29.1446, 0.22", "-35.3411, 182.324, -29.1553, 0.22", "-35.5202, 183.243, -29.2942, 0.74", "-35.5693, 183.492, -29.3279, 0.88", "-35.7059, 184.148, -29.4077, 0.29", "-35.9552, 185.424, -29.5366, 0.22", "-36.0908, 186.251, -29.5997, 0.22", "-36.2075, 187.414, -29.6973, 1.33", "-36.2233, 187.843, -29.7369, 1.92", "-36.2232, 187.912, -29.7426, 1.92", "-36.2083, 188.426, -29.7825, 1.77", "-36.1905, 188.96, -29.8193, 1.69", "-36.118, 190.789, -29.9393, 0.22", "-36.0586, 192.302, -29.9923, 0.22", "-36.016, 193.726, -30.0121, 1.47", "-36.0054, 194.34, -30.0073, 1.99", "-36.0078, 194.75, -29.9927, 1.92", "-36.0289, 195.331, -29.9528, 1.47", "-36.1833, 197.365, -29.7426, 0.22", "-36.2616, 198.188, -29.631, 0.44", "-36.3024, 198.572, -29.5827, 0.44", "-36.4249, 199.656, -29.4583, 0.22", "-36.5699, 200.909, -29.344, 1.18", "-36.6385, 201.506, -29.305, 2.14", "-36.7248, 202.195, -29.281, 1.62", "-36.9958, 204.384, -29.2335, 0.22", "-37.0053, 204.464, -29.2329, 0.22", "-37.1778, 206.213, -29.244, 0.22", "-37.3016, 207.71, -29.2634, 0.22", "-37.3551, 208.689, -29.2696, 1.03", "-37.3656, 209.026, -29.268, 1.62", "-37.3681, 209.364, -29.258, 1.11", "-37.2849, 210.979, -29.2099, 0.22", "-37.2772, 211.047, -29.2077, 0.22", "-37.0627, 212.337, -29.176, 1.47", "-36.9808, 212.755, -29.166, 2.06", "-36.9632, 212.846, -29.1638, 2.06", "-36.6381, 214.8, -29.1323, 0.22", "-36.4887, 215.887, -29.1217, 0.52", "-36.3405, 217.337, -29.1034, 0.22", "-36.2726, 218.303, -29.0898, 1.33", "-36.2574, 218.802, -29.0856, 1.33", "-36.2781, 220.504, -29.0796, 0.22", "-36.3232, 221.157, -29.0846, 0.22", "-36.4014, 222.048, -29.1118, 0.66", "-36.4385, 222.395, -29.1301, 0.66", "-36.6026, 224.032, -29.2592, 0.22", "-36.6085, 224.115, -29.2704, 0.22", "-36.6544, 225.206, -29.4693, 0.22", "-36.6918, 226.232, -29.7027, 0.96", "-36.7078, 226.796, -29.8502, 1.62", "-36.7244, 227.382, -30.0091, 1.4", "-36.822, 229.252, -30.4893, 0.22", "-36.8635, 229.74, -30.6075, 0.22", "-36.9969, 230.91, -30.8711, 1.11", "-37.0194, 231.08, -30.9054, 1.33", "-37.1002, 231.566, -31.001, 1.18", "-37.4879, 233.718, -31.4003, 0.22", "-37.6907, 234.721, -31.576, 1.03", "-37.8076, 235.283, -31.6731, 1.18", "-37.9039, 235.684, -31.752, 1.03", "-38.2658, 237.057, -32.0549, 0.15", "-38.5845, 238.204, -32.336, 0.15", "-38.884, 239.277, -32.6121, 1.33", "-39.0492, 239.873, -32.7602, 1.55", "-39.6503, 241.981, -33.2879, 0.15", "-39.672, 242.059, -33.3063, 0.15", "-39.9265, 243.031, -33.5033, 0.15", "-40.2127, 244.147, -33.7134, 1.11", "-40.2964, 244.531, -33.7791, 1.55", "-40.5946, 246.194, -34.0394, 0.15", "-40.7124, 247.091, -34.1439, 0.74", "-40.8788, 248.42, -34.2796, 0.15", "-40.8887, 248.499, -34.2856, 0.15", "-40.9794, 249.259, -34.3299, 0.15", "-41.0677, 250.173, -34.3645, 0.96", "-41.0972, 250.591, -34.3731, 0.96", "-41.2322, 252.445, -34.4298, 0.15", "-41.2846, 253.232, -34.4636, 0.44", "-41.2925, 253.323, -34.4693, 0.44", "-41.4181, 254.501, -34.5716, 0.15", "-41.5499, 255.633, -34.695, 1.03", "-41.6073, 256.126, -34.7584, 1.33", "-41.6953, 256.894, -34.8869, 0.59", "-41.8417, 258.178, -35.1358, 0.15", "-41.9558, 259.143, -35.3292, 0.88", "-42.0217, 259.699, -35.4445, 1.03", "-42.0861, 260.279, -35.5636, 0.66", "-42.2665, 261.6, -35.9026, 0.15", "-42.4776, 262.983, -36.3015, 0.15", "-42.5856, 263.872, -36.5495, 0.96", "-42.643, 264.384, -36.682, 1.25", "-42.678, 264.725, -36.7643, 1.25", "-42.8841, 266.863, -37.22, 0.15", "-42.9316, 267.436, -37.3134, 0.44", "-43.0196, 268.693, -37.4657, 0.15", "-43.044, 269.284, -37.5148, 0.74", "-43.0529, 269.879, -37.5469, 0.74", "-43.0248, 270.998, -37.5903, 0.15", "-42.9727, 271.93, -37.5972, 0.88", "-42.9472, 272.513, -37.6198, 0.96", "-42.9041, 273.958, -37.7246, 0.15", "-42.8754, 274.723, -37.7761, 0.29", "-42.8167, 276.126, -37.8599, 0.15", "-42.7783, 276.891, -37.9015, 0.96", "-42.7403, 277.555, -37.9441, 1.18", "-42.5929, 279.815, -38.0783, 0.22", "-42.5193, 280.834, -38.1366, 0.22", "-42.4986, 281.089, -38.1497, 0.22", "-42.4818, 281.265, -38.1584, 0.22", "-42.3863, 282.448, -38.2707, 0.15", "-42.3321, 283.438, -38.3971, 1.11", "-42.3143, 283.981, -38.4841, 1.77", "-42.3061, 284.405, -38.5618, 1.77", "-42.306, 284.498, -38.5794, 1.77", "-42.3062, 286.987, -39.0395, 0.22", "-42.3155, 287.807, -39.1746, 0.15", "-42.316, 287.875, -39.1854, 0.15", "-42.314, 288.666, -39.2926, 0.52", "-42.3147, 289.01, -39.3279, 0.59", "-42.3288, 290.923, -39.4503, 0.15", "-42.3197, 291.929, -39.4854, 1.03", "-42.3163, 292.46, -39.5069, 1.77", "-42.3169, 292.971, -39.5289, 1.55", "-42.3642, 295.173, -39.5994, 0.15", "-42.3892, 295.7, -39.6152, 0.29", "-42.4575, 296.6, -39.6435, 0.15", "-42.5449, 297.602, -39.6741, 0.15", "-42.5608, 297.776, -39.6787, 0.15", "-42.7395, 299.55, -39.7335, 0.15", "-42.8745, 300.825, -39.7733, 1.11", "-42.8836, 300.905, -39.7756, 1.11", "-42.972, 301.619, -39.7889, 1.4", "-43.0654, 302.421, -39.8264, 0.59", "-43.2007, 303.703, -39.9122, 0.22", "-43.2866, 304.709, -40.0043, 0.22", "-43.3658, 305.783, -40.1093, 1.03", "-43.4091, 306.443, -40.1863, 1.55", "-43.556, 309.35, -40.5655, 0.15", "-43.5597, 309.433, -40.5762, 0.15", "-43.576, 310.138, -40.6559, 0.44", "-43.5765, 310.567, -40.7004, 0.44", "-43.5602, 312.333, -40.865, 0.15", "-43.5479, 313.352, -40.9504, 1.03", "-43.5345, 314.035, -41.0003, 1.62", "-43.5833, 316.215, -41.2111, 0.15", "-43.7327, 319.024, -41.5171, 0.15", "-43.82, 320.165, -41.6527, 0.15", "-43.898, 320.943, -41.7522, 1.11", "-44.0003, 321.785, -41.8782, 1.4", "-44.3716, 324.569, -42.3678, 0.15", "-44.4949, 325.382, -42.528, 0.15", "-44.6435, 326.364, -42.7237, 0.74", "-44.6877, 326.8, -42.8114, 0.74", "-44.6917, 326.879, -42.8273, 0.74", "-44.7073, 329.081, -43.2575, 0.15", "-44.6404, 330.399, -43.4957, 1.55", "-44.5889, 331.214, -43.6582, 1.92", "-44.4224, 333.613, -44.1505, 0.15", "-44.3644, 334.403, -44.3133, 0.88", "-44.351, 334.572, -44.3492, 0.88", "-44.3009, 335.141, -44.4778, 0.88", "-44.1453, 336.863, -44.8849, 0.15", "-44.0833, 337.523, -45.0284, 0.15", "-44.0092, 338.226, -45.1669, 0.74", "-43.8287, 339.856, -45.4716, 0.15", "-43.8197, 339.934, -45.4841, 0.15", "-43.7704, 340.336, -45.5372, 0.37", "-43.6549, 341.27, -45.6227, 0.22", "-43.5745, 341.873, -45.6602, 0.88", "-43.5653, 341.942, -45.6621, 0.88", "-43.3922, 343.787, -45.7323, 0.15", "-43.3378, 344.569, -45.7761, 0.15", "-43.3333, 344.661, -45.7834, 0.15", "-43.3013, 345.952, -45.9104, 1.25", "-43.3037, 346.275, -45.9512, 1.25", "-43.3896, 348.422, -46.2446, 0.15", "-43.3956, 348.504, -46.2568, 0.15", "-43.4784, 349.286, -46.3867, 1.18", "-43.5083, 349.528, -46.4255, 1.18", "-43.7964, 351.284, -46.7452, 0.15", "-44.0836, 352.576, -46.9825, 0.15", "-44.1697, 352.897, -47.0374, 0.44", "-44.8127, 355.108, -47.4128, 0.15", "-45.3152, 356.692, -47.6817, 1.77", "-45.6375, 357.632, -47.8468, 1.55", "-46.1918, 359.125, -48.1144, 0.22", "-46.4504, 359.748, -48.2344, 0.37", "-46.8907, 360.74, -48.4169, 0.15", "-46.9203, 360.801, -48.4258, 0.15", "-47.2731, 361.485, -48.5252, 0.74", "-47.4535, 361.861, -48.5663, 0.74", "-47.8407, 362.739, -48.66, 0.15", "-48.0834, 363.275, -48.7049, 0.66", "-48.263, 363.676, -48.7267, 1.25", "-49.0666, 365.421, -48.7932, 0.15", "-49.1057, 365.506, -48.7952, 0.15", "-49.5815, 366.569, -48.8165, 0.15", "-49.9944, 367.569, -48.8332, 0.96", "-50.1826, 368.027, -48.8439, 1.55", "-51.1183, 370.413, -48.9133, 0.15", "-51.1408, 370.477, -48.9153, 0.15", "-51.5296, 371.666, -48.9671, 1.18", "-51.748, 372.387, -49.0091, 0.52", "-52.0851, 373.655, -49.0975, 0.15", "-52.2545, 374.391, -49.1486, 0.52", "-52.6627, 376.54, -49.2596, 0.15", "-52.8005, 377.272, -49.2703, 0.15", "-53.0096, 378.353, -49.2389, 0.66", "-53.1372, 379.012, -49.1876, 0.96", "-53.2283, 379.499, -49.1209, 0.96", "-53.5691, 381.263, -48.7157, 0.15", "-53.808, 382.414, -48.3454, 0.52", "-53.913, 382.909, -48.1666, 0.52", "-54.0818, 383.692, -47.8567, 0.15", "-54.2839, 384.613, -47.4705, 1.11", "-54.7743, 386.873, -46.4734, 0.15", "-54.9357, 387.668, -46.1013, 1.18", "-55.0591, 388.264, -45.8279, 0.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-8.82633, 124.604, -18.5847, 0.59", "-8.65373, 125.63, -18.7543, 0.59", "-8.53817, 126.551, -18.9003, 1.18", "-8.46382, 127.444, -19.0444, 1.84", "-8.43262, 127.974, -19.1261, 2.06", "-8.41373, 128.486, -19.1974, 2.06", "-8.40137, 129.141, -19.278, 1.84", "-8.41381, 129.863, -19.3476, 1.55", "-8.47442, 131.16, -19.4472, 0.37", "-8.53022, 131.992, -19.4968, 0.37", "-8.62133, 133.011, -19.5568, 0.96", "-8.72713, 134.026, -19.6127, 1.47", "-8.78446, 134.53, -19.6358, 1.69", "-8.8655, 135.277, -19.6646, 1.55", "-8.93929, 135.956, -19.689, 1.33", "-9.0057, 136.833, -19.738, 0.66", "-9.05237, 137.934, -19.8425, 0.37", "-9.06183, 139.184, -20.0008, 0.29", "-9.03745, 140.246, -20.1606, 0.29", "-9.0324, 140.329, -20.1751, 0.29", "-8.84436, 142.123, -20.5199, 0.29", "-8.72183, 142.98, -20.6889, 0.81", "-8.62225, 143.609, -20.8196, 0.96", "-8.61047, 143.688, -20.8347, 0.96", "-8.54921, 144.193, -20.9179, 0.96", "-8.432, 145.475, -21.0861, 0.29", "-8.39146, 146.237, -21.1589, 0.29", "-8.3511, 147.275, -21.2319, 1.47", "-8.33875, 148.275, -21.3119, 2.06", "-8.33419, 148.642, -21.3483, 2.5", "-8.32946, 149.228, -21.4127, 2.43", "-8.32216, 149.858, -21.4886, 2.14", "-8.31166, 150.579, -21.5818, 1.77", "-8.29578, 151.556, -21.71, 0.66", "-8.27243, 153.04, -21.8966, 0.44", "-8.25709, 154.222, -22.0307, 0.37", "-8.25121, 155.328, -22.1404, 0.37", "-8.26395, 156.44, -22.224, 1.33", "-8.29431, 157.438, -22.2761, 1.77", "-8.33813, 158.38, -22.2991, 2.28", "-8.38682, 158.965, -22.3055, 2.65", "-8.43457, 159.468, -22.311, 2.8", "-8.50534, 160.167, -22.3177, 2.5", "-8.55623, 160.754, -22.3269, 1.99", "-8.5937, 161.249, -22.3398, 1.77", "-8.63696, 162.055, -22.3719, 0.81", "-8.65278, 163.146, -22.433, 0.44", "-8.63879, 164.251, -22.5107, 0.37", "-8.58938, 165.222, -22.594, 0.74", "-8.55437, 165.713, -22.6378, 0.74", "-8.49944, 166.434, -22.6963, 0.74", "-8.40585, 167.885, -22.8051, 0.52", "-8.40245, 167.955, -22.8102, 0.44", "-8.36499, 169.052, -22.8873, 0.44", "-8.34809, 169.971, -22.9467, 0.44", "-8.33874, 171.579, -23.0426, 0.44", "-8.36477, 173.532, -23.1406, 1.55", "-8.39082, 174.472, -23.1815, 2.43", "-8.40786, 175.155, -23.2103, 2.65", "-8.42709, 175.744, -23.2413, 2.87", "-8.4579, 176.602, -23.2917, 2.36", "-8.50256, 177.516, -23.3615, 1.47", "-8.53197, 178.129, -23.4073, 0.96", "-8.60107, 179.338, -23.4941, 0.37", "-8.66672, 180.417, -23.5666, 0.37", "-8.74659, 181.751, -23.651, 0.29", "-8.80219, 182.78, -23.7258, 1.69", "-8.86846, 183.799, -23.8286, 2.28", "-8.90962, 184.253, -23.8813, 2.73", "-8.9604, 184.68, -23.9336, 2.8", "-9.06275, 185.453, -24.0299, 1.99", "-9.22597, 186.539, -24.183, 0.88", "-9.45802, 187.813, -24.3527, 0.29", "-9.65348, 188.673, -24.466, 0.37", "-9.80253, 189.283, -24.5375, 0.44", "-9.88655, 189.613, -24.563, 0.59", "-9.92512, 189.776, -24.5674, 0.59", "-10.026, 190.308, -24.5546, 0.44", "-10.1247, 191.162, -24.5202, 0.37", "-10.1302, 191.243, -24.5184, 0.37", "-10.1668, 192.515, -24.5248, 0.52", "-10.1643, 193.626, -24.551, 0.81", "-10.1484, 194.15, -24.5779, 0.81", "-10.1185, 194.689, -24.62, 0.66", "-10.1146, 194.758, -24.6282, 0.66", "-10.0985, 195.395, -24.7196, 0.44", "-10.0933, 196.583, -24.9251, 0.37", "-10.0961, 197.695, -25.131, 0.37", "-10.0976, 197.763, -25.1463, 0.37", "-10.146, 198.85, -25.445, 1.62", "-10.2069, 199.772, -25.7291, 2.65", "-10.2509, 200.304, -25.9062, 2.65", "-10.357, 201.411, -26.3051, 1.92", "-10.4925, 202.752, -26.799, 0.74", "-10.619, 203.964, -27.2225, 0.37", "-10.7239, 205.042, -27.54, 0.37", "-10.7302, 205.109, -27.5555, 0.37", "-10.8054, 205.811, -27.6628, 0.37", "-10.8249, 205.987, -27.6732, 0.37", "-10.923, 207.004, -27.62, 0.37", "-11.0308, 208.235, -27.4775, 1.03", "-11.1123, 209.233, -27.3467, 1.77", "-11.1554, 209.815, -27.2759, 2.06", "-11.1939, 210.398, -27.2074, 1.92", "-11.2433, 211.255, -27.1237, 1.33", "-11.2726, 211.857, -27.0826, 0.59", "-11.3225, 212.868, -27.054, 0.37", "-11.3313, 213.483, -27.052, 0.59", "-11.3172, 213.907, -27.0659, 0.66", "-11.3, 214.165, -27.0818, 0.66", "-11.2554, 214.763, -27.1266, 0.37", "-11.2145, 215.363, -27.1714, 0.37", "-11.1629, 216.488, -27.2398, 0.37", "-11.131, 217.587, -27.295, 0.37", "-11.1131, 218.61, -27.339, 0.59", "-11.0959, 220.136, -27.3987, 0.52", "-11.0898, 221.065, -27.4323, 1.33", "-11.0942, 221.944, -27.4712, 2.14", "-11.1208, 222.81, -27.5255, 2.36", "-11.1466, 223.571, -27.6, 2.58", "-11.1514, 224.204, -27.6912, 2.36", "-11.134, 225.15, -27.8583, 1.62", "-11.1058, 226.076, -28.0399, 0.81", "-11.0582, 227.24, -28.2777, 0.52", "-10.9992, 228.485, -28.5203, 0.52", "-10.9534, 229.376, -28.6841, 0.44", "-10.8692, 231.046, -28.961, 0.44", "-10.7875, 232.707, -29.1958, 1.11", "-10.7447, 233.639, -29.2918, 1.84", "-10.7166, 234.557, -29.3523, 2.36", "-10.7193, 234.886, -29.3622, 2.5", "-10.7579, 235.651, -29.3601, 2.21", "-10.8165, 236.401, -29.338, 1.55", "-10.8827, 237.084, -29.3031, 0.96", "-10.9511, 237.733, -29.2686, 0.66", "-11.0414, 238.75, -29.2314, 0.37", "-11.0926, 239.657, -29.2137, 0.66", "-11.1129, 240.352, -29.2081, 0.88", "-11.1096, 241.463, -29.2173, 0.37", "-11.087, 242.149, -29.2342, 0.37", "-11.0199, 243.258, -29.275, 0.37", "-10.8943, 244.618, -29.3521, 1.11", "-10.8859, 244.687, -29.3575, 1.11", "-10.7465, 245.621, -29.4663, 1.99", "-10.6299, 246.311, -29.5694, 2.21", "-10.5429, 246.805, -29.6553, 2.36", "-10.3467, 247.951, -29.8642, 1.33", "-10.2142, 248.744, -30.0136, 0.52", "-10.037, 249.935, -30.2276, 0.29", "-9.97241, 250.433, -30.3102, 0.59", "-9.92439, 250.852, -30.3738, 0.59", "-9.83671, 251.688, -30.4893, 0.44", "-9.76296, 252.455, -30.5835, 0.37", "-9.68011, 253.303, -30.6769, 0.37", "-9.5881, 254.253, -30.7812, 1.18", "-9.51532, 254.949, -30.8728, 1.77", "-9.42826, 255.701, -30.9867, 2.06", "-9.34562, 256.374, -31.0991, 1.92", "-9.26395, 257.031, -31.2159, 1.55", "-9.15883, 258.059, -31.3875, 0.37", "-9.0697, 259.184, -31.5613, 0.37", "-9.06709, 259.267, -31.5733, 0.37", "-9.07447, 260.116, -31.6829, 0.37", "-9.07725, 260.199, -31.6925, 0.37", "-9.14218, 261.802, -31.8602, 0.37", "-9.14635, 261.886, -31.8673, 0.37", "-9.24029, 263.383, -32.0, 1.18", "-9.30007, 264.308, -32.0839, 1.62", "-9.32661, 264.814, -32.1335, 1.84", "-9.34841, 265.676, -32.2255, 1.55", "-9.34497, 266.517, -32.3387, 1.11", "-9.32833, 267.346, -32.4574, 0.52", "-9.27886, 268.603, -32.6455, 0.44", "-9.23369, 269.576, -32.8024, 0.37", "-9.16811, 270.807, -33.0061, 0.37", "-9.06664, 272.448, -33.2975, 1.33", "-9.0324, 272.945, -33.3869, 1.84", "-9.01915, 273.121, -33.4175, 1.84", "-8.98031, 273.621, -33.5046, 1.84", "-8.90828, 274.74, -33.6761, 1.25", "-8.8744, 275.411, -33.7763, 0.74", "-8.83118, 276.506, -33.9243, 0.37", "-8.80233, 277.302, -34.0345, 0.44", "-8.77806, 278.176, -34.1637, 0.44", "-8.75412, 279.431, -34.3544, 0.44", "-8.74421, 280.473, -34.5142, 1.03", "-8.74394, 281.406, -34.651, 1.18", "-8.75108, 282.202, -34.7804, 0.74", "-8.76352, 282.792, -34.8778, 0.74", "-8.79056, 283.709, -35.0254, 0.59", "-8.79313, 283.792, -35.0379, 0.59", "-8.80959, 284.47, -35.1225, 0.59", "-8.84591, 285.815, -35.3078, 1.47", "-8.86115, 286.655, -35.4261, 2.21", "-8.8655, 287.331, -35.5214, 2.5", "-8.85747, 287.914, -35.6103, 2.65", "-8.81056, 289.022, -35.7863, 1.55", "-8.72422, 290.145, -35.9727, 0.74", "-8.58961, 291.448, -36.2076, 0.52", "-8.57918, 291.539, -36.2264, 0.52", "-8.44271, 292.591, -36.4678, 0.52", "-8.2435, 293.984, -36.8208, 1.33", "-8.09318, 294.96, -37.0829, 1.4", "-7.92606, 295.991, -37.3678, 1.18", "-7.81461, 296.788, -37.5952, 0.52", "-7.79809, 296.946, -37.6402, 0.52", "-7.73158, 297.882, -37.9039, 0.52", "-7.69546, 298.657, -38.1146, 0.52", "-7.64825, 300.071, -38.4691, 0.74", "-7.61083, 301.317, -38.7416, 0.96", "-7.57967, 302.623, -39.0063, 1.99", "-7.57025, 303.054, -39.0882, 2.58", "-7.54839, 303.66, -39.1968, 2.36", "-7.51114, 304.344, -39.3169, 2.14", "-7.4257, 305.344, -39.4883, 1.03", "-7.29709, 306.412, -39.6808, 0.52", "-7.13105, 307.631, -39.9123, 0.52", "-6.95152, 308.916, -40.1464, 0.52", "-6.85451, 309.605, -40.2659, 0.88", "-6.75974, 310.266, -40.375, 0.52", "-6.60556, 311.347, -40.5391, 0.52", "-6.48763, 312.216, -40.6513, 0.52", "-6.32688, 313.621, -40.8066, 1.4", "-6.25198, 314.4, -40.8816, 1.77", "-6.20716, 314.921, -40.9246, 1.92", "-6.16571, 315.424, -40.9619, 1.62", "-6.09571, 316.287, -41.0194, 1.11", "-6.01144, 317.311, -41.0907, 0.74", "-5.89621, 318.801, -41.2108, 0.59", "-5.76467, 320.587, -41.3497, 0.59", "-5.6648, 321.988, -41.456, 0.44", "-5.62074, 322.584, -41.5018, 0.66", "-5.61436, 322.667, -41.5084, 0.66", "-5.50737, 324.024, -41.6148, 1.33", "-5.42073, 325.126, -41.6998, 2.21", "-5.34361, 325.977, -41.756, 2.73", "-5.27859, 326.778, -41.7977, 2.87", "-5.25224, 327.15, -41.8179, 3.09", "-5.21237, 327.935, -41.8618, 2.36", "-5.18471, 328.87, -41.9128, 1.25", "-5.18166, 329.542, -41.9494, 0.66", "-5.22275, 330.913, -42.0337, 0.37", "-5.28812, 331.961, -42.0997, 0.66", "-5.34727, 332.734, -42.1538, 0.52", "-5.38158, 333.16, -42.1896, 0.66", "-5.44477, 334.003, -42.2732, 0.74", "-5.51235, 334.966, -42.3992, 0.81", "-5.57108, 335.977, -42.5662, 1.25", "-5.59483, 336.616, -42.6897, 1.69", "-5.60222, 337.087, -42.7944, 1.69", "-5.59865, 338.008, -43.0169, 1.4", "-5.57906, 339.014, -43.2756, 1.11", "-5.5422, 339.829, -43.4849, 0.74", "-5.4797, 341.042, -43.7879, 0.59", "-5.47552, 341.133, -43.8093, 0.59", "-5.4366, 342.06, -44.0049, 0.59", "-5.43247, 342.14, -44.0195, 0.59", "-5.33677, 343.736, -44.2337, 0.59", "-5.28497, 344.747, -44.329, 1.11", "-5.28347, 344.828, -44.335, 1.11", "-5.28323, 345.58, -44.3812, 1.77", "-5.29698, 346.286, -44.4196, 2.06", "-5.31849, 346.874, -44.4515, 2.06", "-5.36255, 347.637, -44.4871, 1.77", "-5.39123, 348.159, -44.512, 1.4", "-5.41978, 348.759, -44.5434, 0.81", "-5.48713, 350.119, -44.6183, 0.59", "-5.54892, 351.491, -44.6994, 0.59", "-5.58119, 352.336, -44.7637, 0.96", "-5.60638, 352.924, -44.8102, 0.96", "-5.6143, 353.107, -44.8242, 0.96", "-5.6353, 353.567, -44.862, 0.81", "-5.66815, 354.369, -44.9301, 0.81", "-5.70986, 355.671, -45.0469, 0.37", "-5.74185, 356.945, -45.1675, 0.37", "-5.74949, 358.134, -45.2668, 0.37", "-5.74187, 358.963, -45.3267, 1.25", "-5.70683, 359.817, -45.376, 1.77", "-5.65896, 360.523, -45.4024, 2.28", "-5.58547, 361.192, -45.4176, 2.58", "-5.4675, 362.038, -45.4366, 2.36", "-5.35797, 362.784, -45.4471, 1.92", "-5.22179, 363.704, -45.4589, 0.96", "-5.09917, 364.562, -45.4763, 0.37", "-4.94466, 365.783, -45.5104, 0.37", "-4.85917, 366.645, -45.5522, 0.74", "-4.82513, 367.152, -45.588, 0.74", "-4.79245, 367.891, -45.6472, 0.74", "-4.78707, 368.655, -45.7326, 0.37", "-4.80883, 369.493, -45.8598, 0.29", "-4.84577, 370.136, -45.9831, 0.29", "-4.85191, 370.216, -46.001, 0.29", "-4.9976, 371.785, -46.4106, 0.29", "-5.07502, 372.595, -46.6542, 0.74", "-5.17951, 373.826, -47.0493, 1.84", "-5.21064, 374.282, -47.195, 2.28", "-5.21405, 374.348, -47.2142, 2.28", "-5.24434, 375.085, -47.4106, 2.06", "-5.2725, 376.099, -47.6508, 1.25", "-5.28397, 377.288, -47.8644, 0.15", "-5.27774, 377.968, -47.9578, 0.15", "-5.26132, 378.998, -48.0693, 0.74", "-5.25282, 379.413, -48.1037, 1.03", "-5.24108, 379.933, -48.134, 1.03", "-5.23114, 380.514, -48.1588, 0.74", "-5.23281, 381.329, -48.2251, 0.22", "-5.24239, 382.337, -48.3371, 0.22", "-5.25839, 384.035, -48.5592, 0.88", "-5.26294, 384.713, -48.6522, 1.47", "-5.26711, 385.296, -48.7381, 1.69", "-5.27223, 386.558, -48.9334, 1.03", "-5.27726, 387.842, -49.1355, 0.37", "-5.26166, 389.554, -49.4145, 0.37", "-5.23131, 391.07, -49.6785, 0.29", "-5.18719, 392.624, -49.9424, 1.4", "-5.16609, 393.232, -50.0379, 1.84", "-5.13678, 393.909, -50.1303, 1.69", "-5.10034, 394.836, -50.2627, 0.81", "-5.04153, 396.393, -50.4877, 0.29", "-4.98367, 397.812, -50.691, 0.29", "-4.94634, 398.56, -50.7904, 0.96", "-4.90997, 399.249, -50.8765, 1.33", "-4.86869, 399.894, -50.9515, 1.33", "-4.82865, 400.466, -51.0178, 1.03", "-4.82216, 400.538, -51.0263, 1.03", "-4.68762, 401.842, -51.2028, 0.29", "-4.55801, 403.026, -51.3741, 0.29", "-4.41424, 404.51, -51.6106, 0.88", "-4.32715, 405.593, -51.7861, 1.69", "-4.28515, 406.211, -51.8848, 2.36", "-4.26847, 406.554, -51.9357, 2.58", "-4.24164, 407.429, -52.0592, 2.06", "-4.19589, 409.19, -52.2898, 0.37", "-4.17173, 410.359, -52.4282, 0.37", "-4.14637, 411.639, -52.5573, 0.37", "-4.12329, 412.648, -52.6529, 0.37", "-4.12046, 412.732, -52.6605, 0.37", "-4.01436, 414.679, -52.8323, 0.37", "-4.00816, 414.763, -52.8416, 0.37", "-3.91228, 415.852, -53.0, 0.37", "-3.83097, 416.708, -53.1462, 0.96", "-3.73643, 417.681, -53.3266, 1.25", "-3.64083, 418.671, -53.5176, 0.88", "-3.48397, 420.272, -53.845, 0.29", "-3.47104, 420.394, -53.8704, 0.29", "-3.3661, 421.39, -54.1045, 0.88", "-3.27239, 422.307, -54.3245, 1.62", "-3.21604, 422.856, -54.4534, 1.99", "-3.15203, 423.414, -54.5788, 1.99", "-3.07805, 423.921, -54.6872, 1.69", "-2.91284, 425.017, -54.9506, 0.59", "-2.69102, 426.386, -55.305, 0.29", "-2.56719, 427.218, -55.5323, 0.81", "-2.46574, 427.944, -55.7322, 0.81", "-2.33209, 428.961, -56.0082, 0.29", "-2.19841, 430.052, -56.2909, 0.29", "-2.03163, 431.705, -56.737, 0.29", "-1.91654, 433.341, -57.2056, 1.25", "-1.88275, 433.962, -57.385, 1.69", "-1.85995, 434.458, -57.5272, 1.92", "-1.82294, 435.34, -57.7735, 1.47", "-1.73249, 436.887, -58.1922, 0.29", "-1.66135, 437.807, -58.4534, 0.29", "-1.52708, 439.03, -58.8052, 0.88", "-1.44888, 439.616, -58.9757, 1.18", "-1.35461, 440.198, -59.1454, 0.96", "-1.1961, 441.012, -59.3724, 0.44", "-0.96153, 442.067, -59.6186, 0.29", "-0.939518, 442.18, -59.6477, 0.29", "-0.806635, 443.138, -59.8913, 0.29", "-0.798805, 443.219, -59.9105, 0.29", "-0.759907, 443.806, -60.0475, 0.81", "-0.735275, 444.301, -60.1578, 0.81", "-0.681092, 445.189, -60.3568, 0.66", "-0.585294, 446.436, -60.6436, 0.29", "-0.478528, 447.456, -60.8833, 0.29", "-0.36156, 448.456, -61.1287, 1.11", "-0.252536, 449.342, -61.3427, 1.69", "-0.183061, 449.964, -61.4858, 1.92", "-0.127008, 450.513, -61.6006, 1.92", "-0.0187661, 451.9, -61.8773, 0.74", "0.0411588, 453.0, -62.0783, 0.37", "0.0844257, 454.246, -62.2795, 0.37", "0.105457, 455.707, -62.5024, 0.29", "0.103608, 456.565, -62.6304, 0.29", "0.0980328, 457.323, -62.7484, 0.88", "0.0966019, 457.814, -62.8272, 0.88", "0.114727, 458.434, -62.9288, 0.52", "0.155134, 459.151, -63.0597, 0.29", "0.212515, 459.905, -63.2017, 0.29", "0.278811, 460.896, -63.3793, 0.29", "0.3315, 461.834, -63.5312, 1.55", "0.400011, 462.942, -63.6971, 2.58", "0.438783, 463.471, -63.7678, 2.65", "0.519903, 464.311, -63.8714, 2.21", "0.644763, 465.401, -64.0145, 1.11", "0.770679, 466.396, -64.1563, 0.52", "0.932054, 467.6, -64.343, 0.52", "1.11621, 468.823, -64.5528, 0.74", "1.30839, 469.975, -64.7674, 0.88", "1.52444, 471.085, -64.9983, 1.33", "1.53929, 471.15, -65.0147, 1.33", "1.6988, 471.778, -65.1957, 1.62", "1.8192, 472.214, -65.3333, 1.62", "1.84571, 472.299, -65.3618, 1.62", "1.91541, 472.507, -65.4307, 1.62", "2.35191, 473.738, -65.8249, 0.52", "2.68228, 474.685, -66.12, 0.29", "2.97955, 475.538, -66.3865, 0.29", "3.28222, 476.408, -66.6075, 0.96", "3.48107, 476.99, -66.712, 1.4", "3.50508, 477.068, -66.7195, 1.4", "3.63944, 477.57, -66.7286, 1.4", "3.66277, 477.666, -66.7245, 1.4", "3.93343, 478.91, -66.6319, 1.03", "4.16208, 480.047, -66.534, 0.44", "4.43954, 481.472, -66.423, 0.29", "4.64021, 482.475, -66.3292, 0.29", "4.88572, 483.717, -66.2155, 1.33", "5.01062, 484.373, -66.159, 1.84", "5.1282, 485.044, -66.1114, 1.84", "5.25613, 485.8, -66.058, 1.25", "5.47775, 487.223, -65.9612, 0.37", "5.6758, 488.797, -65.8808, 0.29", "5.68348, 488.878, -65.8773, 0.29", "5.75552, 489.811, -65.8366, 0.44", "5.8261, 491.007, -65.7887, 0.52", "5.86668, 492.182, -65.7486, 0.44", "5.88058, 493.711, -65.7414, 0.44", "5.88133, 495.367, -65.742, 1.11", "5.88008, 496.309, -65.7499, 1.69", "5.87813, 496.924, -65.761, 1.84", "5.87874, 497.584, -65.7829, 1.84", "5.88196, 498.86, -65.8442, 0.66", "5.8845, 500.214, -65.932, 0.37", "5.88452, 500.379, -65.9456, 0.37", "5.89488, 502.0, -66.0774, 0.37", "5.92699, 503.291, -66.1863, 0.96", "5.9357, 503.458, -66.2026, 0.96", "6.00704, 504.31, -66.2967, 1.55", "6.0999, 505.072, -66.409, 1.84", "6.11166, 505.152, -66.4228, 1.84", "6.22641, 505.844, -66.5564, 1.69", "6.39424, 506.84, -66.754, 0.74", "6.58322, 507.904, -66.9306, 0.29", "6.79425, 509.095, -67.0895, 0.29", "6.80755, 509.178, -67.0974, 0.29", "6.97865, 510.352, -67.1718, 0.29", "6.98875, 510.434, -67.1736, 0.29", "7.12949, 511.627, -67.1508, 0.81", "7.20777, 512.376, -67.1189, 1.47", "7.26034, 512.974, -67.0917, 1.77", "7.26869, 513.105, -67.0889, 1.77", "7.30412, 513.777, -67.0955, 1.55", "7.31041, 513.942, -67.1008, 1.55", "7.32617, 514.728, -67.1463, 0.96", "7.36076, 515.593, -67.2072, 0.59", "7.46114, 517.192, -67.3092, 0.29", "7.54335, 518.249, -67.3716, 0.29", "7.55093, 518.333, -67.3763, 0.29", "7.68225, 519.61, -67.4449, 0.59", "7.78182, 520.452, -67.4886, 0.81", "7.93329, 521.53, -67.5517, 1.25", "8.01858, 522.057, -67.5874, 1.62", "8.08071, 522.474, -67.6172, 1.69", "8.10687, 522.654, -67.6327, 1.69", "8.18846, 523.262, -67.6909, 1.25", "8.31041, 524.247, -67.7778, 0.66", "8.4322, 525.266, -67.8691, 0.66", "8.57723, 526.457, -67.9685, 0.66", "8.75235, 527.897, -68.0809, 0.37", "8.8679, 528.918, -68.1511, 0.37", "9.00821, 530.145, -68.2321, 1.62", "9.09091, 530.823, -68.2786, 2.06", "9.15152, 531.281, -68.3136, 2.06", "9.28878, 532.298, -68.3962, 1.47", "9.42519, 533.299, -68.4844, 0.81", "9.58786, 534.424, -68.606, 0.37", "9.78914, 535.765, -68.7835, 0.88", "9.80247, 535.844, -68.7951, 0.88", "9.90427, 536.416, -68.8843, 0.88", "9.91781, 536.487, -68.8962, 0.88", "10.041, 537.186, -69.0152, 1.11", "10.072, 537.385, -69.0499, 1.11", "10.1392, 537.791, -69.0973, 1.11", "10.1539, 537.873, -69.1049, 1.11", "10.2817, 538.542, -69.1533, 0.81", "10.4791, 539.554, -69.2106, 0.66", "10.6691, 540.498, -69.2547, 0.44", "10.9375, 541.794, -69.3131, 0.29", "10.9646, 541.92, -69.3191, 0.29", "11.1222, 542.588, -69.3586, 0.29", "11.1526, 542.708, -69.3678, 0.29", "11.3671, 543.675, -69.4559, 0.81", "11.3859, 543.779, -69.4668, 0.81", "11.4946, 544.418, -69.5267, 0.81", "11.5364, 544.664, -69.5437, 0.81", "11.7631, 545.951, -69.6195, 0.59", "12.0376, 547.536, -69.6971, 0.88", "12.064, 547.699, -69.7038, 0.88", "12.3063, 549.126, -69.7101, 1.62", "12.4112, 549.743, -69.6961, 1.77", "12.5756, 550.69, -69.6618, 1.4", "12.7412, 551.622, -69.6163, 0.88", "13.019, 553.226, -69.5296, 0.52", "13.2261, 554.599, -69.4621, 0.74", "13.3202, 555.453, -69.4252, 1.33", "13.3922, 556.353, -69.37, 1.84", "13.4221, 556.845, -69.3394, 1.99", "13.4582, 557.537, -69.3063, 1.99", "13.5003, 558.446, -69.284, 1.18", "13.5448, 559.651, -69.2874, 0.52", "13.6306, 561.452, -69.3012, 0.44", "13.7029, 562.803, -69.3177, 1.03", "13.7732, 563.844, -69.3437, 1.25", "13.8441, 564.558, -69.382, 1.55", "13.8546, 564.642, -69.3886, 1.55", "13.9659, 565.435, -69.4697, 1.55", "14.1017, 566.443, -69.587, 1.25", "14.2338, 567.552, -69.7052, 0.74", "14.4642, 569.617, -69.9155, 0.29", "14.4726, 569.697, -69.9233, 0.29", "14.6564, 571.566, -70.0982, 0.29", "14.7865, 573.095, -70.2286, 0.29", "14.8846, 574.538, -70.3362, 1.47", "14.929, 575.433, -70.3926, 2.06", "14.9439, 576.022, -70.4209, 2.36", "14.9656, 577.062, -70.4678, 2.06", "14.9964, 578.829, -70.5437, 0.81", "15.0282, 580.451, -70.577, 0.81", "15.0526, 581.493, -70.5791, 0.52", "15.0902, 582.754, -70.5631, 0.81", "15.1416, 583.967, -70.5355, 1.03", "15.1467, 584.049, -70.5328, 1.03", "15.2554, 585.147, -70.4971, 1.03", "15.2858, 585.349, -70.4884, 1.03", "15.4857, 586.469, -70.4459, 0.88", "15.5123, 586.598, -70.4434, 0.88", "15.7644, 587.776, -70.4449, 0.74", "16.0527, 589.084, -70.487, 0.37", "16.4219, 590.756, -70.5961, 1.18", "16.6593, 591.879, -70.6753, 1.92", "16.7917, 592.551, -70.7251, 1.92", "16.934, 593.329, -70.7861, 1.62", "17.1346, 594.556, -70.8898, 0.96", "17.3074, 595.753, -71.0009, 0.74", "17.4764, 597.192, -71.1618, 0.74", "17.5993, 598.465, -71.2945, 0.74", "17.613, 598.63, -71.311, 0.74", "17.7026, 599.884, -71.431, 0.74", "17.7141, 600.08, -71.4505, 0.74", "17.794, 601.468, -71.6017, 0.74", "17.8842, 602.999, -71.7804, 0.96", "17.9058, 603.346, -71.823, 0.96", "18.0003, 604.782, -71.9985, 0.96", "18.058, 605.671, -72.1015, 1.47", "18.0739, 605.928, -72.1285, 1.47", "18.1486, 607.147, -72.2418, 1.69", "18.1552, 607.262, -72.2515, 1.69", "18.1928, 608.036, -72.3263, 1.69", "18.2782, 609.393, -72.4814, 1.11", "18.3192, 609.999, -72.5658, 1.03", "18.3585, 610.579, -72.6557, 1.03", "18.4479, 611.913, -72.8762, 0.59", "18.5776, 613.81, -73.1998, 0.44", "18.7208, 615.842, -73.5631, 0.44", "18.8235, 617.078, -73.7944, 1.11", "18.9341, 618.229, -74.0305, 1.69", "19.0359, 619.058, -74.2139, 1.99", "19.1607, 619.921, -74.414, 1.62", "19.1742, 620.002, -74.4327, 1.62", "19.4019, 621.273, -74.7228, 0.88", "19.7083, 622.97, -75.1095, 0.74", "20.0879, 625.092, -75.6104, 0.74", "20.1018, 625.17, -75.629, 0.74", "20.3306, 626.488, -75.9459, 0.74", "20.6439, 628.158, -76.3032, 0.88", "20.9831, 629.913, -76.6222, 0.66", "21.0018, 630.006, -76.6357, 0.66", "21.3137, 631.549, -76.8297, 0.66", "21.5667, 632.767, -76.9644, 0.66", "21.9057, 634.448, -77.1015, 1.25", "22.0454, 635.204, -77.1346, 1.99", "22.1237, 635.707, -77.1371, 1.99", "22.2219, 636.568, -77.1321, 1.55", "22.2325, 636.743, -77.1279, 1.55", "22.2469, 637.84, -77.1019, 1.33", "22.2154, 639.03, -77.1303, 1.18", "22.2071, 640.059, -77.1792, 0.96", "22.245, 640.925, -77.2195, 0.96", "22.2626, 641.101, -77.2296, 0.96", "22.4044, 642.099, -77.2963, 0.66", "22.6305, 643.276, -77.3941, 0.52", "22.8679, 644.331, -77.4912, 0.52", "23.2456, 645.856, -77.6387, 0.81", "23.5881, 647.127, -77.772, 1.33", "23.6372, 647.296, -77.7899, 1.33", "23.922, 648.254, -77.9144, 1.77", "24.0959, 648.848, -78.0031, 2.28", "24.1145, 648.925, -78.0201, 2.28", "24.2219, 649.685, -78.2377, 2.28", "24.2715, 650.18, -78.3862, 2.28", "24.353, 651.216, -78.6949, 1.92", "24.3577, 651.294, -78.7183, 1.92", "24.4435, 652.964, -79.2093, 0.81", "24.5696, 654.651, -79.6025, 0.81", "24.5852, 654.826, -79.6353, 0.81", "24.6944, 655.856, -79.7765, 0.66", "24.7069, 655.95, -79.7836, 0.66", "24.8802, 657.177, -79.8237, 0.66", "25.1425, 658.797, -79.7715, 0.66", "25.1683, 658.958, -79.7598, 0.66", "25.3099, 659.893, -79.645, 1.18", "25.3291, 660.044, -79.6217, 1.18", "25.4158, 660.889, -79.5023, 1.4", "25.4337, 661.136, -79.4726, 1.4", "25.4629, 661.748, -79.4184, 1.4", "25.5271, 662.954, -79.3212, 1.11", "25.6445, 664.883, -79.1993, 0.88", "25.7292, 666.349, -79.1362, 1.03", "25.8095, 667.794, -79.1084, 1.33", "25.8173, 667.957, -79.1089, 1.33", "25.8398, 668.494, -79.1138, 1.33", "25.8832, 670.066, -79.1495, 0.88", "25.9103, 670.915, -79.1585, 0.88", "25.9691, 672.29, -79.1609, 0.74", "26.0328, 673.3, -79.1633, 0.74", "26.1201, 674.404, -79.1704, 1.33", "26.1287, 674.497, -79.1714, 1.33", "26.2139, 675.455, -79.2186, 1.92", "26.267, 676.203, -79.2844, 2.21", "26.2739, 676.765, -79.3606, 2.21", "26.2312, 677.635, -79.5032, 1.77", "26.1371, 678.723, -79.7025, 1.18", "26.0141, 679.869, -79.908, 0.81", "25.7933, 681.601, -80.2168, 0.74", "25.5526, 683.497, -80.5441, 0.66", "25.3768, 685.116, -80.8111, 0.66", "25.3694, 685.198, -80.8243, 0.66", "25.319, 686.388, -81.0065, 0.66", "25.3243, 686.521, -81.0258, 0.66", "25.5084, 688.247, -81.2993, 0.66", "25.7733, 689.781, -81.547, 0.66", "25.7975, 689.896, -81.5664, 0.66", "26.1081, 691.325, -81.8109, 0.66", "26.601, 693.461, -82.1876, 0.66", "26.6296, 693.581, -82.2093, 0.66", "26.7824, 694.199, -82.3247, 1.25", "26.8046, 694.288, -82.3414, 1.25", "27.1282, 695.634, -82.5869, 1.25", "27.155, 695.754, -82.6076, 1.25", "27.4274, 696.925, -82.7922, 1.25", "27.6663, 697.928, -82.9345, 0.96", "27.9121, 698.928, -83.0503, 0.96", "27.9292, 698.999, -83.057, 0.96", "28.1698, 700.021, -83.1351, 1.11", "28.5702, 701.777, -83.2456, 0.52", "28.8289, 702.935, -83.3104, 1.18", "29.1122, 704.17, -83.3909, 1.92", "29.2962, 704.994, -83.465, 2.43", "29.4586, 705.736, -83.5496, 2.43", "29.6487, 706.63, -83.6707, 2.43", "29.9489, 708.127, -83.9105, 1.25", "30.2331, 709.557, -84.1868, 0.59", "30.495, 711.08, -84.553, 0.74", "30.6422, 712.04, -84.8165, 1.03", "30.6686, 712.273, -84.8866, 1.03", "30.7079, 712.901, -85.088, 1.03", "30.7183, 713.782, -85.3783, 0.59", "30.6726, 715.108, -85.8016, 0.59", "30.6666, 715.241, -85.8401, 0.59", "30.646, 716.475, -86.1998, 0.59", "30.6681, 716.82, -86.2949, 1.03", "30.7818, 717.695, -86.5213, 0.66", "30.8903, 718.26, -86.6543, 0.66", "31.1518, 719.262, -86.8401, 0.66", "31.5358, 720.637, -87.0557, 0.59", "32.0054, 722.264, -87.275, 1.03", "32.1813, 722.873, -87.3482, 1.84", "32.3459, 723.462, -87.41, 1.84", "32.7517, 725.017, -87.5517, 1.18", "33.0485, 726.262, -87.6457, 0.66", "33.2763, 727.453, -87.7074, 0.66", "33.3055, 727.661, -87.7174, 0.66", "33.4886, 729.326, -87.8004, 0.66", "33.5935, 730.629, -87.872, 1.18", "33.6365, 731.522, -87.9296, 1.18", "33.6909, 732.955, -88.0143, 0.66", "33.7223, 734.133, -88.0774, 0.66", "33.7356, 735.25, -88.1293, 1.25", "33.7293, 736.168, -88.1593, 1.99", "33.7182, 736.851, -88.1743, 2.21", "33.68, 738.344, -88.1983, 2.06" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 31
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.42819, -70.7671, -11.4948, 0.44", "-2.85217, -71.1646, -11.773, 0.44", "-2.89069, -71.2011, -11.7972, 0.44", "-3.46741, -71.7641, -12.1454, 1.03", "-4.01976, -72.2928, -12.4829, 1.18", "-4.40615, -72.658, -12.723, 0.59", "-4.44423, -72.6939, -12.7469, 0.59", "-4.81067, -73.0629, -12.9768, 0.22", "-5.1787, -73.4217, -13.2042, 0.22", "-5.55521, -73.7716, -13.4362, 0.59", "-5.80993, -74.0092, -13.5889, 0.59", "-5.8707, -74.0691, -13.6197, 0.59", "-6.3039, -74.5165, -13.8165, 0.22", "-6.65019, -74.8997, -13.9585, 1.18", "-6.99679, -75.3459, -14.0786, 1.25", "-7.03115, -75.396, -14.0885, 1.25", "-7.66335, -76.3479, -14.2015, 0.22", "-7.85011, -76.6424, -14.2235, 0.37", "-7.97146, -76.8443, -14.2204, 0.37", "-8.62825, -77.9649, -14.1259, 0.22", "-8.84916, -78.3498, -14.0767, 0.22", "-9.34359, -79.2123, -13.9476, 1.47", "-9.70623, -79.9072, -13.8424, 2.21", "-10.0566, -80.6147, -13.7328, 2.21", "-10.0831, -80.6666, -13.7243, 2.21", "-10.5554, -81.658, -13.5279, 0.74", "-10.5781, -81.7113, -13.5167, 0.74", "-10.9795, -82.8043, -13.2999, 0.22", "-11.0612, -83.0386, -13.2538, 0.59", "-11.4487, -84.1807, -13.0578, 0.22", "-11.6902, -84.9127, -12.9294, 0.22", "-11.9021, -85.5653, -12.8016, 0.22", "-12.0848, -86.1187, -12.695, 0.52", "-12.1664, -86.3713, -12.6507, 0.52", "-12.4803, -87.43, -12.4881, 0.22", "-12.6554, -88.1121, -12.3935, 0.22", "-12.899, -89.0885, -12.2631, 1.55", "-13.0241, -89.6476, -12.17, 1.69", "-13.3375, -91.1731, -11.8285, 0.22", "-13.4778, -91.9448, -11.6086, 0.22", "-13.5533, -92.4673, -11.4219, 0.52", "-13.5943, -93.0047, -11.2027, 0.52", "-13.5971, -93.8302, -10.8383, 0.22", "-13.5669, -94.4804, -10.536, 1.4", "-13.5149, -95.024, -10.2734, 1.69", "-13.4711, -95.4622, -10.0677, 1.77", "-13.3381, -96.9118, -9.41612, 0.15", "-13.246, -97.9083, -8.99283, 0.22", "-13.1799, -98.5774, -8.73365, 0.74", "-13.1314, -99.163, -8.52896, 0.74", "-13.0934, -99.8977, -8.28616, 0.22", "-13.0933, -100.105, -8.21988, 0.59", "-13.1154, -100.459, -8.10437, 0.59", "-13.1183, -100.525, -8.08335, 0.59", "-13.1566, -101.564, -7.75944, 0.22", "-13.1693, -102.194, -7.58738, 0.74", "-13.1584, -102.902, -7.39837, 0.96", "-13.1436, -103.388, -7.26573, 0.66", "-13.0635, -104.952, -6.83914, 0.29", "-13.0033, -105.818, -6.59755, 0.22", "-12.9223, -106.749, -6.32864, 0.22", "-12.8195, -107.904, -6.00463, 1.55", "-12.7858, -108.251, -5.91018, 1.92", "-12.6952, -109.12, -5.68153, 0.96", "-12.6367, -109.622, -5.56329, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.42819, -70.7671, -11.4948, 2.43", "-2.29632, -72.364, -12.0501, 2.43", "-2.23446, -73.8401, -12.4934, 0.96", "-2.23914, -74.9524, -12.789, 0.52", "-2.26662, -75.9719, -13.0377, 0.52", "-2.31422, -77.2445, -13.328, 0.52", "-2.36601, -78.4856, -13.5944, 0.52", "-2.45785, -79.6074, -13.7683, 0.52", "-2.58417, -80.7721, -13.9069, 0.52", "-2.71559, -81.93, -14.0212, 2.58", "-2.84318, -83.3232, -14.1678, 3.68", "-2.8718, -83.6732, -14.2124, 3.68", "-2.94721, -84.5187, -14.3428, 3.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "5.90755, -213.592, 11.2862, 0.59", "5.47769, -216.241, 10.7698, 0.59", "5.22812, -217.511, 10.54, 0.37", "4.89174, -218.771, 10.3481, 0.37", "4.5773, -219.618, 10.2394, 0.74", "4.16294, -220.551, 10.1339, 0.74", "3.77887, -221.304, 10.0608, 0.96", "3.7266, -221.383, 10.0611, 0.96", "3.08482, -222.226, 10.072, 1.25", "2.39178, -223.131, 10.164, 0.81", "2.34259, -223.212, 10.1765, 0.81", "1.77885, -224.335, 10.3822, 0.59", "1.22649, -225.706, 10.6097, 0.59", "1.20028, -225.783, 10.6206, 0.59", "0.743708, -227.353, 10.8098, 0.44", "0.26506, -229.081, 10.998, 0.44", "0.23942, -229.173, 11.008, 0.44", "-0.22472, -230.759, 11.1806, 2.14", "-0.52028, -231.645, 11.2606, 3.09", "-0.793228, -232.454, 11.3032, 3.61", "-1.11581, -233.387, 11.2489, 3.61", "-5.274, -246.261, 9.45428, 3.61", "-10.6817, -258.196, 5.9197, 3.61", "-16.8311, -269.081, 0.84809, 3.61" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.90755, -213.592, 11.2862, 0.59", "6.47573, -214.413, 10.9852, 0.59", "7.03562, -215.168, 10.7414, 0.37", "7.54505, -215.681, 10.7344, 0.37", "8.27181, -216.247, 10.9346, 0.37", "8.32303, -216.28, 10.9573, 0.37", "9.04275, -216.731, 11.3224, 0.74", "9.08323, -216.753, 11.3567, 0.74", "10.2635, -217.412, 12.5649, 0.74", "10.2896, -217.429, 12.5934, 0.74", "10.654, -217.69, 12.9827, 0.74", "10.9515, -217.963, 13.2732, 0.29", "11.3743, -218.465, 13.6054, 0.29", "11.7018, -218.904, 13.7955, 0.29", "11.9807, -219.342, 13.8609, 0.29", "12.2313, -219.733, 13.9075, 0.81", "12.259, -219.776, 13.9101, 0.81", "12.5154, -220.111, 13.8976, 1.25", "12.7428, -220.341, 13.8451, 1.25", "13.0792, -220.612, 13.7599, 0.59", "18.2282, -225.335, 14.9295, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "33.68, 738.344, -88.1983, 0.44", "30.6002, 740.902, -89.3574, 0.44", "29.4185, 741.999, -89.8298, 0.44", "28.6823, 742.735, -90.1355, 0.74", "28.6386, 742.784, -90.1564, 0.74", "28.0355, 743.592, -90.5024, 0.74", "28.0005, 743.647, -90.5251, 0.74", "27.7396, 744.605, -90.8287, 0.44", "27.7243, 744.676, -90.8648, 0.44", "27.5413, 745.539, -91.368, 0.88", "27.3359, 746.429, -91.8582, 0.96", "27.2077, 746.941, -92.1202, 1.25", "27.19, 747.0, -92.1516, 1.25", "26.757, 748.229, -92.7608, 0.66", "26.3529, 749.2, -93.1937, 0.37", "26.0311, 749.874, -93.4499, 0.74", "25.6941, 750.524, -93.6854, 0.74", "25.2927, 751.269, -93.9318, 0.74", "24.6798, 752.397, -94.26, 0.29", "23.9712, 753.691, -94.5497, 0.29", "23.4817, 754.571, -94.7297, 0.29", "22.7743, 755.85, -95.0015, 1.47", "22.5207, 756.336, -95.0956, 1.69", "22.4839, 756.409, -95.1056, 1.69", "22.0804, 757.129, -95.2223, 1.47", "22.0398, 757.199, -95.2326, 1.47", "20.8477, 759.118, -95.6403, 0.22", "20.4149, 759.806, -95.8132, 0.22", "19.7116, 760.952, -96.1503, 0.22", "18.9098, 762.4, -96.6345, 1.03", "18.5936, 762.978, -96.8642, 1.4", "17.6154, 764.777, -97.6434, 0.22", "17.3398, 765.279, -97.8742, 0.59", "17.0308, 765.846, -98.1476, 0.74", "16.0895, 767.682, -99.0263, 0.29", "15.4162, 769.008, -99.5721, 0.29", "15.3762, 769.077, -99.5975, 0.29", "14.8939, 769.816, -99.8104, 0.44", "14.8416, 769.887, -99.8376, 0.44", "14.404, 770.454, -100.08, 0.44", "13.7434, 771.313, -100.461, 0.22", "12.8127, 772.631, -101.046, 1.92", "12.6223, 772.893, -101.182, 2.5", "10.7697, 775.532, -102.726, 0.15", "10.5133, 775.907, -102.959, 0.15", "9.85706, 776.888, -103.611, 1.4", "9.71098, 777.113, -103.761, 1.69", "8.33265, 779.251, -105.159, 0.15", "7.8744, 779.976, -105.598, 0.15", "7.76128, 780.171, -105.689, 0.15", "7.66897, 780.344, -105.755, 0.15", "7.28215, 781.195, -105.991, 0.96", "7.04194, 781.784, -106.117, 1.47", "6.89219, 782.209, -106.168, 1.62", "6.54233, 783.162, -106.275, 0.88", "5.87056, 785.056, -106.518, 0.22", "5.62366, 785.771, -106.651, 0.22", "5.3734, 786.507, -106.835, 0.74", "5.34937, 786.585, -106.857, 0.74", "5.18081, 787.227, -107.027, 0.74", "5.10975, 787.561, -107.102, 0.74", "4.81536, 789.311, -107.426, 0.29", "4.80204, 789.393, -107.439, 0.29", "4.56335, 790.974, -107.637, 0.29", "4.32559, 792.576, -107.81, 0.29", "4.14967, 793.831, -107.915, 0.29", "4.03057, 794.766, -107.962, 1.47", "3.96641, 795.291, -107.975, 2.06", "3.95576, 795.372, -107.978, 2.06", "3.81455, 796.3, -108.028, 1.18", "3.36367, 798.735, -108.223, 0.22", "3.02107, 800.486, -108.397, 0.22", "2.72297, 801.871, -108.601, 1.47", "2.60839, 802.37, -108.692, 1.18", "2.13347, 804.38, -109.146, 0.22", "1.80366, 805.716, -109.506, 1.11", "1.62762, 806.421, -109.73, 1.33", "0.999299, 808.999, -110.642, 0.22", "0.982551, 809.075, -110.669, 0.22", "0.61638, 810.876, -111.327, 0.22", "0.603415, 810.952, -111.354, 0.22", "0.321186, 812.893, -112.022, 0.22", "0.309579, 812.97, -112.046, 0.22", "0.17854, 814.052, -112.31, 1.55", "0.154176, 814.226, -112.341, 2.14", "0.0562138, 814.828, -112.405, 2.36", "0.043767, 814.896, -112.409, 2.36", "-0.26481, 816.121, -112.4, 1.11", "-0.748911, 817.748, -112.328, 0.22", "-1.20426, 819.136, -112.228, 0.22", "-1.53862, 820.103, -112.142, 1.4", "-1.72141, 820.601, -112.088, 1.4", "-2.64561, 822.954, -111.807, 0.22", "-3.0112, 823.809, -111.69, 0.88", "-3.22364, 824.277, -111.624, 0.59", "-3.26163, 824.364, -111.613, 0.59", "-3.35008, 824.579, -111.587, 0.59", "-3.90541, 826.197, -111.41, 0.22", "-4.18448, 827.202, -111.304, 0.22", "-4.43414, 828.233, -111.21, 1.03", "-4.54562, 828.731, -111.167, 1.4", "-4.64981, 829.364, -111.096, 1.4", "-4.82499, 831.043, -110.892, 0.22", "-4.82924, 831.127, -110.881, 0.22", "-4.87229, 832.999, -110.638, 0.22", "-4.8725, 833.165, -110.62, 0.22", "-4.84107, 835.289, -110.417, 0.22", "-4.80293, 836.498, -110.306, 1.33", "-4.78418, 836.903, -110.269, 1.62", "-4.74462, 837.673, -110.2, 0.81", "-4.61836, 839.721, -110.032, 0.22", "-4.5545, 841.037, -109.961, 1.25" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "33.68, 738.344, -88.1983, 0.59", "33.7427, 739.546, -88.1751, 0.59", "33.8507, 740.822, -88.0816, 0.59", "33.9791, 742.022, -87.9733, 0.81", "34.086, 742.964, -87.8893, 1.25", "34.096, 743.053, -87.8815, 1.25", "34.1538, 743.603, -87.8349, 1.11", "34.269, 744.745, -87.7227, 0.88", "34.3449, 745.567, -87.6557, 0.44", "34.4416, 746.768, -87.5895, 0.37", "34.4649, 747.088, -87.5769, 0.37", "34.5139, 747.961, -87.5568, 0.37", "34.5561, 749.275, -87.5545, 1.47", "34.5504, 750.068, -87.5614, 1.84", "34.5447, 750.383, -87.5614, 1.84", "34.5383, 751.016, -87.5651, 1.84", "34.5375, 752.07, -87.5789, 1.25", "34.5526, 753.825, -87.6153, 0.66", "34.5728, 755.414, -87.6545, 0.66", "34.5753, 755.526, -87.6583, 0.66", "34.6091, 756.67, -87.7059, 0.66", "34.6157, 756.838, -87.7154, 0.66", "34.6615, 757.878, -87.7816, 0.66", "34.6663, 757.967, -87.7884, 0.66", "34.7232, 758.912, -87.8672, 0.66", "34.735, 759.198, -87.8874, 0.66", "34.7652, 760.099, -87.9462, 0.66", "34.7937, 760.811, -87.9959, 0.66", "34.7983, 760.89, -88.0024, 0.66", "34.8844, 762.022, -88.1079, 0.66", "34.8911, 762.09, -88.1153, 0.66", "35.0135, 763.191, -88.2493, 1.18", "35.0291, 763.268, -88.2557, 1.18", "35.2978, 764.248, -88.3061, 1.33", "35.3268, 764.337, -88.308, 1.33", "35.4339, 764.611, -88.3032, 1.33", "35.482, 764.732, -88.299, 1.33", "36.1267, 766.26, -88.2061, 0.81", "36.151, 766.323, -88.204, 0.81", "36.3791, 766.928, -88.2248, 0.81", "36.4045, 767.0, -88.2291, 0.81", "36.6882, 767.839, -88.3071, 0.96", "36.729, 767.964, -88.3232, 0.96", "37.131, 769.286, -88.5603, 0.37", "37.4608, 770.402, -88.7681, 0.37", "37.7222, 771.288, -88.9051, 1.33", "37.9799, 772.096, -89.0043, 2.06", "38.1094, 772.46, -89.0232, 2.36", "38.3286, 773.039, -89.0291, 2.36", "38.6991, 773.962, -88.9844, 1.62", "39.2712, 775.388, -88.8718, 0.52", "39.9381, 776.993, -88.7217, 0.37", "40.5439, 778.415, -88.5419, 1.55", "40.8578, 779.127, -88.4327, 2.21", "41.2087, 779.868, -88.2921, 2.5" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.94721, -84.5187, -14.3428, 0.44", "-3.38783, -86.1054, -13.3572, 0.44", "-3.84971, -87.6333, -12.3407, 0.22", "-3.8746, -87.7079, -12.2832, 0.22", "-4.34623, -88.7623, -11.3155, 0.22", "-4.98968, -90.2397, -9.90419, 1.47", "-5.16422, -90.6822, -9.48694, 1.99", "-5.2276, -90.8294, -9.33901, 1.99", "-5.64301, -91.8975, -8.22663, 1.77", "-6.23018, -93.5892, -6.47879, 0.52", "-6.63124, -94.8689, -5.16529, 0.29", "-6.88008, -95.8589, -4.20008, 0.29", "-6.89658, -95.9265, -4.1366, 0.29", "-7.13174, -96.9709, -3.1956, 1.03", "-7.34886, -98.0832, -2.30449, 1.03", "-7.61847, -99.7662, -1.11527, 0.22", "-7.63162, -99.8331, -1.07223, 0.22", "-7.76261, -100.512, -0.66999, 0.44", "-7.77704, -100.581, -0.629628, 0.44", "-7.98365, -101.481, -0.0734696, 0.44", "-8.12538, -102.161, 0.31187, 0.29", "-8.36068, -103.314, 0.951859, 1.55", "-8.42577, -103.617, 1.1289, 2.21", "-8.72527, -105.008, 2.02229, 2.21", "-8.97893, -106.234, 2.86349, 0.44", "-9.22586, -107.543, 3.87485, 0.29", "-9.31689, -108.071, 4.31749, 0.52", "-9.32924, -108.151, 4.38793, 0.52", "-9.35587, -108.684, 4.86548, 0.22", "-9.33978, -108.75, 4.93425, 0.22", "-9.17242, -109.075, 5.39835, 0.22", "-9.02379, -109.361, 5.87632, 0.74", "-9.00049, -109.419, 5.96479, 0.74", "-8.85596, -109.901, 6.61756, 0.74", "-8.63949, -110.886, 7.78658, 0.29", "-8.56579, -111.585, 8.54439, 0.29", "-8.55209, -112.446, 9.36872, 1.33", "-8.55866, -112.986, 9.84679, 1.92", "-8.56266, -113.278, 10.0933, 1.99", "-8.57752, -113.928, 10.6154, 1.55", "-8.56048, -115.157, 11.5499, 0.66", "-8.49924, -115.961, 12.1302, 0.29", "-8.29303, -117.276, 12.9854, 0.22", "-8.13296, -118.145, 13.4881, 1.03", "-7.9919, -118.844, 13.848, 1.55", "-7.72873, -120.031, 14.3842, 0.88", "-7.47286, -121.102, 14.7883, 0.29", "-7.20478, -122.292, 15.1773, 0.29", "-6.91894, -123.71, 15.5607, 0.22", "-6.79747, -124.366, 15.726, 0.52", "-6.78373, -124.457, 15.7515, 0.52", "-6.71475, -125.301, 16.0394, 0.52", "-6.68571, -126.187, 16.4169, 0.44", "-6.69755, -126.441, 16.5448, 0.66", "-6.75983, -127.099, 16.8923, 0.37", "-6.89886, -128.062, 17.3855, 0.29", "-7.11817, -129.222, 17.9219, 0.29", "-7.13815, -129.295, 17.9516, 0.29", "-7.49108, -130.425, 18.352, 1.25", "-7.66367, -130.962, 18.5153, 1.84", "-7.82455, -131.461, 18.6337, 1.84", "-8.1583, -132.618, 18.8328, 0.81", "-8.51953, -133.977, 19.0244, 0.29", "-8.75187, -134.953, 19.1441, 0.22", "-8.78003, -135.086, 19.1574, 0.22", "-8.98609, -136.233, 19.2178, 0.22", "-9.22068, -137.813, 19.1996, 1.33", "-9.31326, -138.565, 19.145, 1.99", "-9.36627, -139.058, 19.0773, 2.28", "-9.46901, -139.802, 18.9522, 2.28", "-9.76837, -141.708, 18.6077, 0.66", "-9.96371, -142.841, 18.377, 0.22", "-9.98231, -142.935, 18.3568, 0.22", "-10.1387, -143.677, 18.2277, 0.22", "-10.315, -144.436, 18.122, 0.74", "-10.4532, -144.955, 18.0756, 1.03", "-10.5787, -145.335, 18.0616, 1.11", "-10.8336, -146.095, 18.0521, 0.44", "-11.2309, -147.348, 18.0188, 0.22", "-11.2581, -147.439, 18.0148, 0.22", "-11.4553, -148.132, 17.9613, 0.44", "-11.7241, -149.158, 17.9184, 0.29", "-11.7488, -149.251, 17.9137, 0.29", "-12.1386, -150.339, 17.7759, 0.29", "-12.4286, -151.016, 17.6577, 0.22", "-12.4684, -151.105, 17.6427, 0.22", "-13.0453, -152.29, 17.5042, 0.22", "-13.4277, -152.99, 17.5046, 0.22", "-14.5064, -154.95, 17.7038, 2.14", "-14.5444, -155.02, 17.7159, 2.14", "-14.9333, -155.789, 17.8929, 1.99", "-15.464, -156.92, 18.2153, 1.69", "-16.2112, -158.606, 18.78, 0.59", "-16.8047, -160.18, 19.4236, 0.22", "-17.0294, -160.968, 19.7803, 0.37", "-17.1941, -161.815, 20.1285, 0.37", "-17.2929, -162.809, 20.4876, 0.74", "-17.292, -162.901, 20.5152, 0.74", "-17.2217, -163.604, 20.678, 1.11", "-17.0274, -165.009, 20.9417, 0.59", "-16.7892, -166.589, 21.2141, 0.29", "-16.6174, -167.659, 21.3999, 0.29", "-16.5906, -167.808, 21.428, 0.29", "-16.4093, -168.826, 21.6501, 0.29", "-16.3652, -169.09, 21.7236, 0.29", "-16.2193, -170.124, 22.1146, 0.29", "-16.127, -170.969, 22.4963, 1.18", "-16.0668, -171.462, 22.7291, 1.47", "-16.0567, -171.548, 22.77, 1.47", "-15.9173, -172.932, 23.4161, 0.44", "-15.8645, -174.067, 23.8714, 0.37", "-15.8925, -174.924, 24.1268, 0.81", "-15.9336, -175.504, 24.2596, 0.81", "-16.0221, -176.405, 24.4264, 0.59", "-16.0924, -177.031, 24.5187, 0.29", "-16.2701, -178.423, 24.6776, 0.22", "-16.4344, -179.921, 24.8216, 0.22", "-16.5088, -180.801, 24.9102, 0.44", "-16.5265, -181.101, 24.9455, 0.44", "-16.5398, -181.689, 25.0373, 0.44", "-16.5248, -182.803, 25.2631, 0.29", "-16.4853, -183.974, 25.5428, 1.4", "-16.4519, -184.84, 25.7613, 1.69", "-16.4369, -185.604, 25.9469, 1.92", "-16.415, -186.675, 26.1915, 0.74", "-16.4207, -187.98, 26.4179, 0.22", "-16.4584, -189.266, 26.5792, 0.22", "-16.5152, -190.186, 26.6629, 0.88", "-16.5743, -190.888, 26.6928, 0.88", "-16.6969, -192.023, 26.6944, 0.22", "-16.8856, -193.437, 26.6425, 0.22", "-16.9019, -193.545, 26.6369, 0.22", "-17.0778, -194.543, 26.5653, 0.22", "-17.3704, -195.862, 26.4845, 1.03", "-17.5215, -196.437, 26.4502, 1.33", "-17.6363, -196.821, 26.4322, 1.33", "-18.127, -198.538, 26.3569, 0.22", "-18.4368, -199.796, 26.2507, 0.22", "-18.5989, -200.575, 26.1417, 0.88", "-18.6935, -201.121, 26.0436, 1.11", "-18.7572, -201.556, 25.9522, 0.88", "-18.9495, -203.266, 25.5723, 0.22", "-19.0849, -204.661, 25.2199, 0.22", "-19.1509, -205.446, 25.0125, 1.55", "-19.2129, -206.138, 24.8325, 1.77", "-19.2962, -206.896, 24.6485, 1.25", "-19.494, -208.401, 24.3363, 0.22", "-19.7465, -209.913, 24.1138, 0.22", "-19.76, -209.993, 24.1069, 0.22", "-19.938, -211.331, 24.0762, 0.22", "-19.9459, -211.443, 24.0763, 0.22", "-19.9648, -212.675, 24.1263, 0.96", "-19.9631, -213.458, 24.1606, 1.47", "-19.9278, -214.311, 24.191, 0.88", "-19.8886, -215.096, 24.1913, 0.66", "-19.7661, -216.896, 24.146, 0.29", "-19.7209, -217.603, 24.1131, 0.59", "-19.6384, -218.801, 24.0297, 0.59", "-19.5501, -220.04, 23.9415, 0.29", "-19.5406, -220.165, 23.9369, 0.29", "-19.4129, -221.707, 23.9483, 0.29", "-19.4037, -221.801, 23.9552, 0.29", "-19.3085, -222.572, 24.038, 0.74", "-19.205, -223.454, 24.137, 0.88", "-19.0857, -224.857, 24.2566, 0.22", "-19.0235, -225.995, 24.3165, 0.22", "-18.9988, -227.261, 24.3023, 1.99", "-18.9962, -228.179, 24.2451, 2.43", "-19.0432, -230.207, 24.0139, 0.22", "-19.0957, -231.299, 23.8322, 0.44", "-19.1791, -232.642, 23.5559, 0.37", "-19.2866, -234.038, 23.2378, 0.22", "-19.3823, -234.961, 23.0186, 1.03", "-19.4222, -235.506, 22.8894, 1.25", "-19.4423, -236.285, 22.719, 0.96", "-19.4198, -238.06, 22.3896, 0.15", "-19.3812, -238.99, 22.2538, 0.74", "-19.3419, -239.675, 22.1851, 0.96", "-19.2069, -241.798, 22.0295, 0.22", "-19.1921, -242.0, 22.0201, 0.22", "-19.0889, -242.887, 22.0233, 0.22", "-18.9354, -244.068, 22.0838, 0.22", "-18.9241, -244.152, 22.0909, 0.22", "-18.7104, -245.65, 22.2505, 2.5", "-18.6301, -246.233, 22.3273, 2.73", "-18.1722, -249.051, 22.7376, 0.22", "-17.9973, -249.9, 22.8859, 0.52", "-17.8049, -250.694, 23.0537, 0.52", "-17.3982, -252.325, 23.4467, 0.22", "-17.3724, -252.412, 23.4715, 0.22", "-17.1486, -253.12, 23.6862, 0.22", "-16.7733, -254.301, 24.0961, 1.18", "-16.6223, -254.773, 24.2669, 1.69", "-16.3316, -255.744, 24.6308, 1.33", "-15.9965, -257.073, 25.1664, 0.22", "-15.8778, -257.654, 25.3877, 0.22", "-15.7487, -258.537, 25.6764, 1.47", "-15.6862, -259.196, 25.8691, 1.69", "-15.6348, -259.875, 26.041, 1.69", "-15.529, -261.848, 26.4945, 0.29", "-15.5051, -262.796, 26.6956, 0.29", "-15.4697, -263.833, 26.9054, 1.03", "-15.4678, -264.04, 26.9397, 1.33", "-15.512, -265.827, 27.1855, 0.22", "-15.5551, -266.512, 27.2566, 0.22", "-15.6167, -267.001, 27.2889, 1.03", "-15.7201, -267.597, 27.3388, 1.03", "-16.1408, -269.477, 27.4999, 0.22", "-16.4385, -270.563, 27.5661, 1.33", "-16.5781, -270.982, 27.5782, 1.47", "-16.8404, -271.815, 27.5615, 1.55", "-17.4002, -273.67, 27.4614, 0.22", "-17.577, -274.284, 27.4006, 0.22", "-17.8531, -275.311, 27.2601, 0.96", "-18.0488, -276.072, 27.1382, 1.25", "-18.4843, -278.002, 26.7946, 0.22", "-18.5052, -278.107, 26.7747, 0.22", "-18.8658, -280.054, 26.438, 0.22", "-18.9467, -280.491, 26.3718, 0.74", "-19.0171, -280.874, 26.3183, 0.74", "-19.3873, -282.804, 26.0758, 0.22", "-19.7413, -284.463, 25.9054, 0.22", "-20.1779, -286.633, 25.7101, 0.22", "-20.3045, -287.338, 25.6607, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-2.94721, -84.5187, -14.3428, 0.66", "-3.5844, -86.1796, -14.2494, 0.66", "-3.84281, -86.7843, -14.1966, 0.52", "-4.14556, -87.4109, -14.1395, 0.88", "-4.34562, -87.8059, -14.0906, 1.03", "-4.62259, -88.3418, -14.0074, 0.96", "-5.05373, -89.1699, -13.8609, 0.37", "-5.49581, -89.974, -13.648, 0.29", "-5.70492, -90.3876, -13.5276, 0.29", "-6.08741, -91.2687, -13.2201, 0.29", "-6.1884, -91.5541, -13.1122, 0.74", "-6.20996, -91.6339, -13.0832, 0.74", "-6.26995, -91.9518, -12.9852, 0.74", "-6.35139, -92.5651, -12.813, 0.59", "-6.47038, -93.5881, -12.5564, 0.29", "-6.59562, -94.6456, -12.3357, 0.29", "-6.71783, -95.6458, -12.1528, 0.29", "-6.85913, -96.7774, -11.9625, 0.29", "-6.95095, -97.6887, -11.8432, 1.33", "-6.9569, -97.7665, -11.8362, 1.33", "-6.99224, -98.5649, -11.7984, 1.99", "-6.9871, -99.0602, -11.7748, 2.21", "-6.96987, -99.4885, -11.7569, 2.21", "-6.88107, -100.92, -11.704, 0.29", "-6.79397, -102.102, -11.6547, 0.29", "-6.73816, -102.789, -11.6188, 0.29", "-6.69091, -103.269, -11.5868, 0.96", "-6.64262, -103.84, -11.5412, 1.47", "-6.61831, -104.188, -11.5068, 1.84", "-6.5745, -104.884, -11.4042, 0.88", "-6.56592, -104.949, -11.3951, 0.88", "-6.44155, -105.637, -11.3208, 0.29", "-6.30441, -106.311, -11.2682, 0.29", "-6.28718, -106.386, -11.2635, 0.29", "-6.05335, -107.332, -11.2161, 0.52", "-5.77875, -108.398, -11.1722, 0.52", "-5.55136, -109.3, -11.1312, 0.22", "-5.37183, -110.05, -11.0961, 1.47", "-5.23578, -110.677, -11.0623, 2.06", "-5.18134, -111.011, -11.0437, 2.36", "-5.12081, -111.724, -11.0023, 1.69", "-5.11597, -112.834, -10.9309, 0.74", "-5.17316, -113.836, -10.8673, 0.44", "-5.27776, -114.89, -10.8217, 0.44", "-5.36429, -115.525, -10.807, 0.44", "-5.54885, -116.755, -10.7929, 0.29", "-5.63576, -117.382, -10.7894, 0.59", "-5.71579, -118.038, -10.7881, 0.59", "-5.77483, -118.729, -10.7822, 0.29", "-5.77704, -118.806, -10.7814, 0.29", "-5.76969, -119.792, -10.7788, 0.29", "-5.71603, -120.904, -10.7875, 0.29", "-5.71125, -121.039, -10.7908, 0.29", "-5.73136, -121.532, -10.8216, 0.29", "-5.74236, -121.596, -10.8316, 0.29", "-5.88403, -122.216, -11.0309, 0.29", "-5.89772, -122.275, -11.0551, 0.29", "-6.03568, -122.946, -11.3609, 0.29", "-6.20953, -123.962, -11.8294, 2.28", "-6.42609, -125.243, -12.4279, 2.65", "-6.71735, -127.054, -13.2663, 0.29", "-6.86593, -127.979, -13.6824, 0.29", "-6.98378, -128.618, -13.9693, 0.59", "-7.04609, -128.928, -14.1109, 0.22", "-7.22029, -129.608, -14.4395, 0.22", "-7.38667, -130.082, -14.7099, 0.22", "-7.7233, -130.856, -15.2029, 1.03", "-8.04134, -131.529, -15.6732, 1.92", "-8.30391, -132.109, -16.0837, 2.06", "-8.53411, -132.716, -16.5155, 1.92", "-9.07059, -134.637, -17.8185, 0.29", "-9.20484, -135.296, -18.2335, 0.52", "-9.21183, -135.344, -18.2614, 0.52", "-9.26571, -135.856, -18.5044, 0.52", "-9.3508, -136.736, -18.8224, 0.37", "-9.40866, -137.487, -18.9876, 0.29", "-9.45578, -138.328, -19.0665, 0.29", "-9.50371, -138.995, -19.1165, 0.88", "-9.53272, -139.435, -19.1446, 0.88", "-9.5764, -140.563, -19.1922, 0.22", "-9.57959, -141.495, -19.2011, 1.55", "-9.54972, -142.067, -19.1953, 1.84", "-9.49412, -142.58, -19.1766, 1.62", "-9.29986, -143.816, -19.1367, 0.22", "-9.1413, -144.672, -19.109, 0.22", "-9.03582, -145.213, -19.088, 0.22", "-8.95432, -145.769, -19.0682, 0.74", "-8.9095, -146.261, -19.0505, 0.74", "-8.86884, -147.346, -19.0139, 0.29", "-8.89482, -147.975, -18.9905, 0.29", "-9.0037, -148.988, -18.9364, 0.29", "-9.141, -149.962, -18.8637, 1.77", "-9.23405, -150.539, -18.8088, 2.21", "-9.33327, -151.085, -18.7458, 2.21", "-9.52932, -152.031, -18.6127, 0.74", "-9.72509, -152.918, -18.51, 0.22", "-9.97441, -154.005, -18.4143, 0.22", "-10.102, -154.575, -18.3794, 0.88", "-10.2131, -155.115, -18.3556, 1.03", "-10.2389, -155.257, -18.352, 1.03", "-10.3955, -156.289, -18.3555, 0.22", "-10.4931, -156.973, -18.375, 0.22", "-10.5133, -157.106, -18.3787, 0.22", "-10.6278, -157.869, -18.399, 0.22", "-10.7137, -158.375, -18.4071, 0.22", "-10.8735, -159.213, -18.4195, 1.33", "-10.9772, -159.693, -18.4233, 1.77", "-11.1487, -160.42, -18.4168, 1.77", "-11.2848, -160.998, -18.402, 0.88", "-11.5629, -162.153, -18.3611, 0.29", "-11.6448, -162.588, -18.3343, 0.74", "-11.7246, -163.06, -18.3134, 0.74", "-11.8867, -164.175, -18.2813, 0.22", "-11.9493, -164.667, -18.2717, 0.22", "-11.9598, -164.755, -18.2714, 0.22", "-12.0617, -165.651, -18.2939, 0.96", "-12.2315, -166.954, -18.3462, 1.18", "-12.2883, -167.326, -18.3709, 1.47", "-12.3039, -167.412, -18.3791, 1.47", "-12.3975, -167.86, -18.4161, 1.47", "-12.6524, -169.101, -18.4837, 0.22", "-12.7301, -169.511, -18.5, 0.22", "-12.8027, -170.067, -18.4987, 0.74", "-12.8441, -170.335, -18.5033, 0.96", "-12.8696, -170.478, -18.5077, 0.96", "-12.9367, -170.817, -18.5258, 0.96", "-13.1237, -171.764, -18.595, 0.22", "-13.2283, -172.339, -18.6365, 0.29", "-13.319, -173.031, -18.7265, 0.29", "-13.3664, -173.511, -18.8361, 0.29", "-13.4342, -174.374, -19.081, 1.25", "-13.4661, -174.901, -19.2523, 1.69", "-13.4801, -175.307, -19.4042, 1.69", "-13.4889, -176.506, -19.9163, 1.03", "-13.5089, -177.745, -20.4737, 0.22", "-13.5274, -178.244, -20.6962, 0.22", "-13.6014, -179.482, -21.2355, 1.99", "-13.6708, -180.263, -21.558, 2.5", "-13.8498, -181.894, -22.1482, 0.29", "-13.9565, -182.636, -22.3699, 0.22", "-14.083, -183.418, -22.5543, 0.52", "-14.146, -183.755, -22.6209, 0.59", "-14.38, -184.873, -22.7715, 0.22", "-14.5769, -185.793, -22.8272, 0.22", "-14.6984, -186.35, -22.8255, 0.22", "-14.9402, -187.481, -22.8073, 1.33", "-15.067, -188.011, -22.8041, 1.69", "-15.2093, -188.542, -22.8037, 1.47", "-15.4357, -189.269, -22.8226, 0.52", "-15.6291, -189.835, -22.8566, 0.29", "-16.1653, -191.262, -22.9807, 0.29", "-16.5584, -192.199, -23.1002, 1.11", "-16.7862, -192.731, -23.1837, 1.47", "-17.4003, -194.106, -23.4328, 0.22", "-17.6317, -194.637, -23.5355, 1.77", "-17.9405, -195.368, -23.6849, 2.14", "-18.1205, -195.818, -23.7805, 1.69", "-18.5133, -196.94, -23.9916, 0.22", "-18.5319, -197.006, -24.002, 0.22", "-18.6635, -197.584, -24.0803, 0.22", "-18.78, -198.196, -24.1755, 0.52", "-18.8088, -198.383, -24.2071, 0.52", "-18.932, -199.313, -24.3654, 0.22", "-18.9983, -199.884, -24.4694, 0.22", "-19.0659, -200.705, -24.6213, 1.99", "-19.1046, -201.461, -24.7682, 2.5", "-19.0768, -202.51, -25.0007, 0.81", "-19.0406, -203.2, -25.1642, 0.22", "-19.0378, -203.255, -25.1773, 0.22", "-19.0271, -203.628, -25.2647, 0.52", "-19.027, -203.683, -25.2771, 0.52", "-19.1263, -204.777, -25.5424, 0.22", "-19.2915, -205.79, -25.7925, 0.22", "-19.4722, -206.639, -26.0037, 0.22", "-19.6766, -207.387, -26.193, 1.33", "-19.7835, -207.707, -26.2747, 1.33", "-20.2532, -208.928, -26.5903, 0.22", "-20.6568, -209.692, -26.7976, 0.22", "-20.6878, -209.74, -26.8127, 0.22", "-21.5267, -210.82, -27.1913, 2.28", "-21.793, -211.106, -27.3008, 2.73", "-22.0609, -211.36, -27.4075, 2.73", "-23.3965, -212.431, -27.9246, 0.22", "-23.6623, -212.608, -28.0391, 0.74", "-23.935, -212.773, -28.1632, 0.96", "-24.8208, -213.227, -28.6206, 0.22", "-25.2233, -213.411, -28.8561, 1.03", "-25.4561, -213.536, -29.0597, 1.03", "-26.2672, -214.074, -30.1036, 0.22", "-26.2971, -214.099, -30.1549, 0.22", "-26.681, -214.453, -30.9116, 1.4", "-26.7784, -214.553, -31.1288, 1.4", "-27.7127, -215.576, -33.2821, 0.59", "-27.9257, -215.826, -33.7778, 1.03", "-28.5984, -216.652, -35.2346, 0.22", "-28.9552, -217.061, -35.8894, 0.22", "-28.9803, -217.089, -35.9291, 0.22", "-29.311, -217.435, -36.3739, 1.11", "-29.5793, -217.678, -36.6551, 1.25", "-30.5555, -218.562, -37.5983, 0.22", "-30.8823, -218.859, -37.8897, 0.66", "-31.7728, -219.695, -38.7112, 0.22", "-31.8136, -219.733, -38.7479, 0.22", "-32.0914, -219.984, -38.9909, 0.96", "-32.358, -220.204, -39.2074, 1.4", "-32.7828, -220.525, -39.5161, 0.96", "-33.5643, -221.096, -40.0243, 0.22", "-34.0102, -221.421, -40.2774, 1.62", "-34.3749, -221.695, -40.4782, 1.99", "-35.5389, -222.608, -41.0756, 0.22", "-35.8744, -222.895, -41.2399, 0.37", "-36.0494, -223.053, -41.3151, 0.37", "-36.5044, -223.476, -41.4966, 0.22", "-36.8721, -223.847, -41.6491, 0.22", "-37.3985, -224.403, -41.8745, 0.52", "-38.0006, -225.061, -42.1458, 0.22", "-38.3331, -225.416, -42.31, 0.96", "-38.6518, -225.755, -42.5043, 0.96", "-39.4185, -226.612, -43.0407, 0.22", "-39.9586, -227.269, -43.5368, 1.18", "-40.1734, -227.574, -43.8232, 1.55", "-40.1957, -227.609, -43.8597, 1.55", "-40.7857, -228.629, -44.9805, 0.29", "-41.0572, -229.117, -45.5422, 0.29", "-41.5924, -230.06, -46.6958, 1.55", "-42.4105, -231.453, -48.4716, 0.29", "-42.4367, -231.495, -48.5261, 0.29", "-42.6762, -231.868, -48.9991, 1.18", "-43.1082, -232.514, -49.8162, 0.22", "-43.4689, -233.031, -50.4632, 1.25", "-44.0455, -233.886, -51.4249, 0.22", "-44.1399, -234.022, -51.5665, 0.74", "-44.5466, -234.634, -52.1725, 0.22", "-44.5691, -234.672, -52.2062, 0.22", "-44.8968, -235.297, -52.7023, 1.11", "-45.1267, -235.773, -53.0396, 1.47", "-45.6384, -236.868, -53.7196, 0.22", "-45.7761, -237.162, -53.8939, 0.59", "-46.102, -237.843, -54.2716, 1.18", "-46.1281, -237.898, -54.3015, 1.18", "-46.4481, -238.58, -54.6495, 1.18", "-47.04, -239.818, -55.2562, 0.22", "-47.3419, -240.495, -55.5594, 1.25", "-47.4643, -240.762, -55.678, 1.25", "-47.9249, -241.674, -56.113, 0.29", "-48.193, -242.175, -56.3683, 0.96", "-48.8819, -243.445, -56.9424, 0.29", "-49.3786, -244.309, -57.2877, 0.44", "-49.944, -245.224, -57.6152, 0.22", "-50.5095, -246.057, -57.8864, 1.18", "-50.9293, -246.577, -58.0187, 1.77", "-52.0236, -247.713, -58.2229, 0.29", "-52.496, -248.113, -58.2423, 0.29", "-52.8691, -248.358, -58.2164, 0.29", "-53.2245, -248.539, -58.1739, 0.88", "-54.3437, -249.029, -58.028, 0.22", "-55.0631, -249.288, -57.978, 1.03", "-55.4438, -249.401, -57.9793, 1.03", "-56.2137, -249.595, -57.9829, 0.22", "-58.2428, -250.001, -58.0255, 0.22", "-58.3061, -250.011, -58.0283, 0.22", "-59.5738, -250.07, -58.135, 0.81", "-59.8152, -250.063, -58.1663, 1.03", "-60.5284, -249.971, -58.2512, 0.22", "-61.3983, -249.776, -58.3577, 0.22", "-61.4597, -249.757, -58.3615, 0.22", "-62.5177, -249.433, -58.4255, 1.33", "-62.983, -249.307, -58.4647, 1.55", "-64.5447, -248.986, -58.6727, 0.22", "-64.9872, -248.922, -58.7503, 0.59", "-65.6643, -248.863, -58.9185, 0.59", "-66.3734, -248.838, -59.1449, 0.44", "-67.4698, -248.869, -59.5834, 0.22", "-68.1493, -248.899, -59.8925, 1.03", "-68.392, -248.921, -60.0142, 1.03", "-69.4231, -249.0, -60.5075, 0.22", "-69.8719, -249.009, -60.7097, 0.22", "-69.923, -249.006, -60.7279, 0.22", "-70.8957, -248.854, -61.0529, 0.22", "-71.7817, -248.663, -61.3383, 0.22", "-71.8323, -248.65, -61.3545, 0.22", "-72.7459, -248.391, -61.707, 1.11", "-73.0766, -248.303, -61.886, 1.55", "-73.96, -248.086, -62.4662, 0.22", "-74.5882, -247.975, -62.9737, 0.22", "-74.8976, -247.927, -63.2524, 0.66", "-75.7813, -247.834, -64.0927, 0.22", "-76.5563, -247.784, -64.8565, 1.25", "-76.842, -247.779, -65.1668, 1.47", "-77.7589, -247.854, -66.1572, 0.22", "-77.8025, -247.862, -66.2023, 0.22", "-78.1508, -247.962, -66.5402, 1.03", "-78.6976, -248.171, -67.0127, 1.33", "-80.1059, -248.768, -68.1828, 0.22", "-81.1637, -249.254, -69.0625, 0.22", "-81.9729, -249.658, -69.7125, 0.22", "-82.2701, -249.817, -69.9477, 1.03", "-82.646, -250.049, -70.2326, 1.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-4.5545, 841.037, -109.961, 0.88", "-4.67288, 842.509, -109.677, 0.88", "-4.8761, 844.771, -109.266, 0.15", "-5.04697, 846.226, -109.117, 0.15", "-5.0683, 846.376, -109.104, 0.15", "-5.1797, 847.157, -109.039, 1.03", "-5.2299, 847.509, -109.009, 1.4", "-5.29157, 847.838, -109.001, 1.4", "-5.86164, 850.735, -108.952, 0.22", "-6.26614, 852.89, -108.951, 0.22" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-4.5545, 841.037, -109.961, 0.22", "-3.47557, 842.946, -109.971, 0.22", "-2.97231, 843.822, -109.939, 0.81", "-2.81259, 844.098, -109.923, 1.03", "-2.54956, 844.57, -109.889, 0.81", "-1.40706, 846.669, -109.724, 0.22", "-1.23895, 846.999, -109.705, 0.44", "-0.916419, 847.74, -109.649, 0.15", "-0.895382, 847.794, -109.646, 0.15", "-0.619925, 848.61, -109.613, 1.03", "-0.591609, 848.711, -109.61, 1.03", "-0.24329, 850.143, -109.636, 0.15", "-0.161744, 850.489, -109.644, 0.29", "0.21051, 852.087, -109.697, 0.15", "0.34727, 852.646, -109.713, 0.66", "0.367332, 852.721, -109.713, 0.66", "0.738876, 854.071, -109.653, 0.15", "1.01832, 855.016, -109.568, 0.66", "1.26887, 855.834, -109.489, 0.22", "1.29447, 855.909, -109.482, 0.22", "1.58982, 856.728, -109.388, 0.74", "1.66061, 856.929, -109.358, 0.74", "1.71332, 857.106, -109.305, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "41.2087, 779.868, -88.2921, 0.37", "40.4329, 780.615, -87.7521, 0.37", "40.0949, 780.944, -87.5214, 0.37", "40.0637, 780.979, -87.4949, 0.37", "39.8162, 781.282, -87.2574, 0.37", "39.5198, 781.688, -86.9343, 0.88", "39.3624, 781.923, -86.7462, 0.88", "39.3429, 781.962, -86.7129, 0.88", "39.1218, 782.588, -86.1905, 0.88", "39.1141, 782.619, -86.1657, 0.88", "39.0772, 782.905, -85.9539, 1.03", "39.0692, 782.96, -85.9145, 1.03", "39.0111, 783.214, -85.728, 1.03", "38.9902, 783.286, -85.6748, 1.03", "38.8431, 783.688, -85.3746, 0.74", "38.6396, 784.195, -84.9813, 0.29", "38.4364, 784.688, -84.5795, 0.29", "38.2398, 785.206, -84.1593, 0.29", "38.2192, 785.273, -84.1061, 0.29", "38.1385, 785.629, -83.8295, 0.22", "38.1337, 785.678, -83.7918, 0.22", "38.1623, 786.079, -83.5023, 0.52", "38.3286, 786.551, -83.2237, 1.18", "38.5083, 786.933, -83.0346, 1.18", "38.5289, 786.972, -83.0171, 1.18", "38.661, 787.175, -82.9416, 1.18", "38.6844, 787.206, -82.9311, 1.18", "39.1455, 787.687, -82.8334, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "41.2087, 779.868, -88.2921, 0.52", "42.3307, 781.472, -88.8319, 0.52", "43.3406, 782.908, -89.2723, 0.37", "43.3933, 782.983, -89.2944, 0.37", "44.0932, 783.996, -89.5694, 0.37", "44.5945, 784.724, -89.7591, 0.74", "45.3537, 785.856, -90.0338, 0.44", "46.2792, 787.403, -90.3089, 0.37", "46.3205, 787.473, -90.3197, 0.37", "46.6261, 787.985, -90.396, 0.37", "46.6757, 788.068, -90.4071, 0.37", "47.4416, 789.456, -90.5815, 0.88", "47.8904, 790.472, -90.7388, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-6.26614, 852.89, -108.951, 0.22", "-8.39624, 851.665, -108.662, 0.22", "-8.98573, 851.332, -108.603, 1.25", "-11.1803, 850.105, -108.42, 0.22", "-11.9636, 849.678, -108.357, 0.96", "-14.1956, 848.488, -108.16, 0.22", "-14.2899, 848.438, -108.154, 0.22", "-15.9278, 847.573, -108.108, 0.22", "-15.996, 847.536, -108.109, 0.22", "-16.6906, 847.143, -108.164, 0.74", "-17.0101, 846.963, -108.198, 0.88", "-19.0373, 845.803, -108.301, 0.22", "-19.1047, 845.764, -108.3, 0.22", "-20.5143, 844.905, -108.285, 0.22", "-21.3953, 844.347, -108.285, 0.22", "-21.4598, 844.303, -108.287, 0.22", "-22.6893, 843.429, -108.336, 1.11", "-23.5381, 842.825, -108.085, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-6.26614, 852.89, -108.951, 0.96", "-6.4284, 853.589, -108.918, 0.96", "-6.44405, 853.664, -108.914, 0.96", "-6.51967, 854.05, -108.888, 1.18", "-6.66375, 854.819, -108.836, 0.88", "-7.27305, 858.166, -108.62, 0.15", "-7.28679, 858.243, -108.615, 0.15", "-7.61867, 860.126, -108.513, 0.15", "-7.85727, 861.377, -108.476, 0.96", "-7.96591, 861.922, -108.475, 1.33", "-7.98301, 862.008, -108.478, 1.33", "-8.02708, 862.245, -108.5, 1.33", "-8.05404, 862.382, -108.518, 1.33", "-8.45006, 864.412, -108.838, 0.15", "-8.53321, 864.888, -108.911, 0.44", "-8.61057, 865.354, -108.98, 0.44", "-8.87064, 867.027, -109.187, 0.22", "-8.89475, 867.19, -109.202, 0.22", "-9.07244, 868.446, -109.239, 0.81", "-9.22225, 869.57, -109.206, 0.22", "-9.24323, 869.709, -109.197, 0.22", "-9.38987, 870.581, -109.11, 1.18", "-9.46791, 871.023, -109.05, 1.33", "-9.97911, 873.265, -108.648, 0.22", "-10.0191, 873.408, -108.615, 0.22", "-10.1916, 873.971, -108.461, 0.22", "-10.4411, 874.707, -108.223, 1.03", "-10.6518, 875.266, -108.02, 1.33", "-11.2995, 876.812, -107.411, 0.15", "-11.673, 877.562, -107.056, 0.15", "-11.7047, 877.624, -107.026, 0.15", "-12.2258, 878.566, -106.538, 0.15", "-12.2605, 878.624, -106.505, 0.15", "-12.7667, 879.408, -106.013, 1.03", "-13.056, 879.868, -105.699, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "39.1455, 787.687, -82.8334, 0.52", "38.699, 789.582, -83.8627, 0.52", "38.6167, 789.998, -84.0543, 0.52", "38.605, 790.067, -84.0861, 0.52", "38.46, 791.042, -84.5335, 0.37", "38.4517, 791.112, -84.5664, 0.37", "38.3789, 792.109, -85.0713, 0.37", "38.4018, 792.955, -85.466, 1.03", "38.4436, 793.656, -85.8092, 0.88", "38.4495, 793.734, -85.8488, 0.88", "38.5178, 794.523, -86.2519, 0.59", "38.5878, 796.323, -87.2103, 0.22", "38.594, 797.494, -87.8283, 0.22", "38.592, 797.56, -87.8651, 0.22", "38.5307, 798.51, -88.4026, 0.88", "38.4871, 799.123, -88.7422, 1.11", "38.355, 801.073, -89.7726, 0.29", "38.3236, 801.708, -90.0989, 0.22", "38.312, 802.763, -90.7088, 0.22", "38.3144, 802.829, -90.7489, 0.22", "38.4473, 804.266, -91.6083, 0.22", "38.5781, 805.224, -92.1585, 1.33", "38.6642, 805.675, -92.4079, 1.33", "39.0296, 807.634, -93.5117, 0.22", "39.0415, 807.7, -93.5488, 0.22", "39.233, 808.908, -94.2353, 0.22", "39.3353, 809.739, -94.7362, 0.81", "39.5308, 811.484, -95.7676, 0.22", "39.6363, 812.319, -96.2348, 0.81", "39.649, 812.386, -96.2699, 0.81", "39.7116, 812.692, -96.4361, 0.81", "40.0164, 813.948, -97.1862, 0.22", "40.272, 814.84, -97.7295, 1.4", "40.459, 815.402, -98.0452, 1.77", "40.7743, 816.204, -98.5057, 1.18" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "39.1455, 787.687, -82.8334, 0.52", "38.9179, 788.817, -82.3064, 0.52", "38.8932, 788.934, -82.2604, 0.52", "38.7732, 789.482, -82.0777, 0.81", "38.7558, 789.559, -82.0554, 0.81", "38.678, 789.916, -81.964, 0.59", "38.3665, 791.478, -81.5793, 0.29", "38.3382, 791.623, -81.5506, 0.29", "38.2211, 792.339, -81.3845, 1.03", "38.1363, 793.053, -81.189, 0.96", "38.0725, 793.803, -80.9499, 0.59", "38.0518, 794.548, -80.6681, 0.59", "38.0576, 794.664, -80.6129, 0.59", "38.153, 795.434, -80.2274, 0.59", "38.3379, 796.118, -79.8915, 0.29", "38.3574, 796.169, -79.8676, 0.29", "38.5576, 796.635, -79.6676, 0.29", "38.6015, 796.739, -79.6296, 0.29", "38.849, 797.438, -79.4004, 0.59", "39.1654, 798.632, -79.0744, 0.22", "39.1777, 798.698, -79.0563, 0.22", "39.204, 799.444, -78.8244, 0.22", "39.1815, 799.67, -78.7474, 0.22", "38.9875, 800.209, -78.5131, 0.22", "38.5953, 800.518, -78.2663, 0.66", "38.4729, 800.561, -78.2098, 0.66", "37.7497, 800.731, -77.9201, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "47.8904, 790.472, -90.7388, 0.29", "48.474, 791.477, -90.7925, 0.29", "48.5389, 791.603, -90.8028, 0.29", "48.8937, 792.341, -90.8786, 0.88", "49.1865, 792.984, -90.9514, 1.25", "49.417, 793.507, -91.0133, 1.25", "49.7628, 794.297, -91.1147, 0.44", "50.1255, 795.186, -91.2463, 0.29", "50.3649, 795.782, -91.3435, 0.88", "50.517, 796.18, -91.4193, 1.25", "50.5394, 796.24, -91.4331, 1.25", "50.7174, 796.725, -91.551, 0.96", "50.7684, 796.86, -91.5835, 0.96", "50.9808, 797.405, -91.7198, 0.74", "51.3995, 798.478, -91.9912, 0.29", "51.7043, 799.255, -92.1898, 0.52", "51.775, 799.44, -92.2365, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "47.8904, 790.472, -90.7388, 0.22", "47.0461, 791.702, -90.1688, 0.22", "46.9955, 791.769, -90.1379, 0.22", "46.4075, 792.511, -89.7968, 0.22", "46.3608, 792.57, -89.7697, 0.22", "45.4813, 793.682, -89.2594, 0.22", "45.4291, 793.747, -89.2291, 0.22", "44.6353, 794.832, -88.8522, 0.22", "44.2863, 795.282, -88.6855, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "37.7497, 800.731, -77.9201, 0.22", "37.9744, 802.05, -78.2823, 0.22", "38.03, 802.219, -78.2291, 0.22", "38.2441, 802.973, -77.8011, 0.22", "38.3383, 803.382, -77.4471, 0.37", "38.4937, 804.102, -76.7122, 0.37", "38.5134, 804.16, -76.6306, 0.37", "39.045, 805.293, -74.7476, 1.18", "39.2018, 805.612, -74.0843, 1.18", "39.4346, 806.052, -72.951, 0.96", "39.473, 806.136, -72.6866, 0.96", "39.7086, 806.83, -70.1422, 0.52", "39.716, 806.862, -70.0176, 0.52", "39.7426, 807.07, -69.2454, 0.52", "39.754, 807.119, -69.0588, 0.52", "39.7922, 807.396, -67.9876, 0.74", "39.7709, 807.612, -67.1963, 0.88", "39.7535, 807.634, -67.1233, 0.88", "39.5026, 808.034, -65.9754, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "37.7497, 800.731, -77.9201, 0.22", "37.2961, 800.381, -77.5165, 0.22", "37.2529, 800.347, -77.4781, 0.22", "36.7085, 799.927, -76.9938, 0.22", "36.6741, 799.9, -76.9631, 0.22", "36.3294, 799.634, -76.6564, 0.66", "36.162, 799.505, -76.5075, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "51.775, 799.44, -92.2365, 0.15", "52.8689, 799.211, -92.6044, 0.15", "53.4993, 798.902, -92.851, 0.44", "53.552, 798.869, -92.8746, 0.44", "54.0757, 798.476, -93.1569, 0.15", "54.4736, 798.171, -93.3841, 0.96", "54.9095, 797.846, -93.6318, 0.96", "55.7286, 797.16, -94.1317, 0.22", "55.8525, 797.056, -94.2104, 0.22", "56.5154, 796.53, -94.6381, 0.52", "56.9805, 796.179, -94.9409, 0.52", "57.5585, 795.805, -95.3128, 0.59", "57.7123, 795.726, -95.4192, 0.59", "58.429, 795.473, -95.9164, 0.15", "58.4817, 795.457, -95.9531, 0.15", "58.7453, 795.363, -96.2171, 0.15", "58.8398, 795.323, -96.3399, 0.15", "59.3776, 795.097, -97.1524, 0.88", "59.614, 795.0, -97.5341, 1.18", "59.8925, 794.903, -98.0412, 1.18", "60.7878, 794.63, -99.7511, 0.22", "60.8228, 794.619, -99.8171, 0.22", "61.0093, 794.555, -100.146, 0.37", "61.0486, 794.541, -100.211, 0.37", "61.623, 794.374, -101.169, 0.22", "61.6543, 794.364, -101.215, 0.22", "62.1282, 794.265, -101.767, 0.22", "62.3783, 794.204, -102.059, 0.74", "62.6448, 794.124, -102.368, 1.03", "62.7014, 794.106, -102.432, 1.03", "63.8139, 793.725, -103.57, 0.37", "64.4213, 793.531, -104.23, 1.62" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "51.775, 799.44, -92.2365, 0.29", "52.193, 800.824, -92.5646, 0.29", "52.4843, 801.674, -92.7851, 0.29", "52.5112, 801.745, -92.8048, 0.29", "52.8709, 802.699, -93.0685, 0.15", "53.2473, 803.698, -93.3445, 1.18", "53.4602, 804.262, -93.5006, 1.77", "53.7994, 805.038, -93.7474, 1.18", "54.0489, 805.558, -93.9276, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "39.5026, 808.034, -65.9754, 0.59", "39.6274, 809.114, -65.7703, 0.59", "39.6347, 809.206, -65.7575, 0.59", "39.6753, 809.874, -65.6976, 0.59", "39.6846, 809.98, -65.6942, 0.59", "39.7444, 810.408, -65.7192, 0.59", "39.8508, 810.662, -65.6553, 0.59", "40.0819, 810.907, -65.3968, 0.29", "40.3727, 811.215, -65.0293, 0.22", "40.7225, 811.628, -64.511, 0.22", "41.0139, 812.028, -63.9988, 0.74", "42.2675, 813.915, -61.5051, 0.74", "43.4848, 815.963, -58.7645, 0.88", "43.8893, 816.721, -57.7214, 0.22", "44.2348, 817.451, -56.7281, 0.22", "44.435, 818.013, -56.0272, 0.22", "44.4492, 818.085, -55.9515, 0.22", "44.4027, 818.572, -55.6808, 0.22", "44.3841, 818.672, -55.6518, 0.22", "44.3196, 819.64, -55.3629, 0.22", "44.3179, 820.974, -54.9637, 0.81", "44.3134, 821.048, -54.9395, 0.81", "44.1621, 821.907, -54.6532, 0.96", "44.1302, 822.038, -54.6107, 0.96", "43.9515, 822.675, -54.4226, 0.96", "43.6565, 823.633, -54.1748, 0.44", "43.4378, 824.415, -54.0198, 0.44", "43.1355, 825.653, -53.8124, 0.22", "42.8851, 826.891, -53.6318, 0.37", "42.6798, 828.109, -53.4558, 0.37", "42.5504, 829.157, -53.288, 0.37", "42.4608, 830.401, -53.0346, 0.22", "42.4589, 830.491, -53.0119, 0.22", "42.4691, 831.099, -52.7337, 0.22", "42.4811, 831.224, -52.6234, 0.22", "42.6674, 832.057, -51.4569, 0.15", "42.8218, 832.508, -50.7675, 0.44", "42.8369, 832.55, -50.7059, 0.44", "43.2303, 833.857, -49.1493, 0.88", "43.4897, 834.883, -48.1581, 0.88", "43.5739, 835.2, -47.9146, 0.88", "43.9977, 836.711, -46.9992, 0.37", "44.2519, 837.613, -46.6131, 0.22", "44.5328, 838.613, -46.2952, 0.22", "44.7153, 839.163, -46.1999, 0.59", "45.269, 840.634, -46.0015, 0.44", "45.3249, 840.74, -45.9851, 0.44", "46.1102, 841.674, -45.7561, 0.29", "46.2159, 841.749, -45.7396, 0.29", "47.4372, 842.177, -45.7778, 0.29", "47.5112, 842.191, -45.7824, 0.29", "48.6716, 842.495, -45.8178, 0.81", "48.799, 842.546, -45.8154, 0.81", "49.5685, 843.011, -45.7402, 0.81", "50.7196, 844.003, -45.5541, 0.29", "51.8983, 845.312, -45.2886, 0.29", "53.2894, 847.172, -44.9769, 0.52", "54.0101, 848.346, -44.8089, 1.33", "54.8409, 849.862, -44.5852, 0.22", "55.2086, 850.674, -44.4609, 0.74", "55.279, 850.875, -44.4329, 0.74", "55.5997, 852.036, -44.3963, 0.37", "55.7877, 852.699, -44.4553, 1.03" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "39.5026, 808.034, -65.9754, 0.22", "39.3039, 808.64, -65.1917, 0.22", "39.1714, 809.023, -64.6875, 0.15", "38.9775, 809.511, -64.0328, 0.15", "38.7443, 810.098, -63.2453, 0.52", "38.6423, 810.355, -62.9012, 0.52", "38.4999, 810.713, -62.4204, 0.52", "38.46, 810.815, -62.2787, 0.52", "38.2381, 811.381, -61.4611, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "54.0489, 805.558, -93.9276, 0.22", "54.6359, 804.422, -94.4806, 0.22", "54.8038, 804.05, -94.6358, 0.29", "55.0985, 803.286, -94.9096, 0.22", "55.3392, 802.662, -95.1332, 0.44", "55.5716, 802.06, -95.3491, 0.22", "55.5884, 802.017, -95.3646, 0.22", "55.6632, 801.734, -95.3943, 0.44", "55.7092, 801.439, -95.408, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "54.0489, 805.558, -93.9276, 0.29", "54.1627, 805.955, -93.95, 0.29", "54.4912, 806.869, -93.9472, 0.29", "54.8653, 807.803, -93.9173, 0.29", "54.9027, 807.888, -93.9141, 0.29", "55.3277, 808.726, -93.8858, 0.29", "55.415, 808.882, -93.881, 0.81", "55.8856, 809.638, -93.8633, 0.66", "55.9095, 809.673, -93.8636, 0.66", "56.2176, 810.086, -93.8699, 0.52", "57.0067, 811.157, -93.9148, 0.29", "57.5156, 811.852, -93.922, 0.29", "57.7737, 812.234, -93.9261, 1.33", "58.0715, 812.71, -93.9371, 1.55", "58.1019, 812.762, -93.9377, 1.55", "58.4451, 813.365, -93.9083, 1.25", "59.134, 814.627, -93.8168, 0.37", "59.5359, 815.379, -93.745, 0.29", "59.5632, 815.431, -93.7387, 0.29", "59.9983, 816.249, -93.6192, 0.29", "60.7768, 817.705, -93.3949, 1.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "55.7877, 852.699, -44.4553, 0.44", "55.8007, 851.77, -44.5707, 0.44", "55.8122, 850.942, -44.6734, 0.37", "55.8202, 850.368, -44.7447, 0.22", "55.8209, 850.318, -44.7509, 0.22", "55.8339, 849.389, -44.8663, 0.22", "55.8345, 849.339, -44.8725, 0.22", "56.5437, 842.321, -44.64, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "55.7877, 852.699, -44.4553, 0.74", "55.6875, 853.249, -44.409, 0.74", "55.6159, 854.0, -44.4, 0.22", "55.6096, 854.06, -44.4, 0.22", "55.5603, 854.695, -44.3928, 0.22", "55.5478, 854.891, -44.3887, 0.22", "55.5215, 855.523, -44.3699, 0.22", "55.5073, 856.359, -44.3323, 1.4", "55.5539, 857.474, -44.2673, 0.29", "55.625, 858.2, -44.2021, 0.29", "55.6377, 858.285, -44.1923, 0.29", "55.7799, 859.096, -44.0629, 0.29", "55.7921, 859.153, -44.0506, 0.29", "56.04, 860.087, -43.7794, 0.81", "56.2291, 860.639, -43.5933, 1.11", "56.2478, 860.692, -43.5754, 1.11", "56.466, 861.378, -43.3542, 1.11", "56.4928, 861.471, -43.3239, 1.11", "56.5819, 861.928, -43.1843, 1.11", "56.5886, 861.975, -43.168, 1.11", "56.6608, 862.584, -42.9693, 0.22", "56.7338, 863.222, -42.7542, 0.29", "56.7397, 863.278, -42.7343, 0.29", "56.7865, 863.881, -42.5267, 0.22", "56.8286, 864.908, -42.1668, 0.81", "56.9555, 873.208, -40.2644, 0.81" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "60.7768, 817.705, -93.3949, 1.84", "61.5755, 818.314, -94.151, 1.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "60.7768, 817.705, -93.3949, 0.22", "60.728, 819.266, -93.7583, 0.22", "60.7253, 820.106, -93.9379, 0.22", "60.7258, 820.156, -93.9478, 0.22", "60.7459, 821.155, -94.1312, 0.59", "60.7755, 822.178, -94.3109, 0.22", "60.8072, 822.949, -94.4412, 0.66", "60.8185, 823.008, -94.4454, 0.66", "60.8663, 823.187, -94.4545, 0.66", "61.0873, 823.888, -94.4714, 0.15", "61.1076, 823.942, -94.4704, 0.15", "61.3074, 824.42, -94.441, 1.18", "61.8564, 825.53, -94.3525, 0.29", "62.0386, 825.873, -94.3214, 0.52", "62.0681, 825.922, -94.3159, 0.52", "62.2105, 826.125, -94.2846, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "61.5755, 818.314, -94.151, 0.15", "62.6035, 820.577, -94.2688, 0.15", "63.0791, 821.696, -94.3418, 0.15", "63.404, 822.461, -94.3918, 0.29", "63.5189, 822.732, -94.4094, 0.29", "63.809, 823.414, -94.4539, 0.15", "64.0366, 823.95, -94.4889, 0.29", "64.0621, 824.09, -94.5115, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "61.5755, 818.314, -94.151, 0.29", "62.4992, 816.614, -94.228, 0.29", "62.8079, 816.046, -94.2289, 0.29", "63.3125, 815.09, -94.2094, 0.22", "63.4901, 814.764, -94.2114, 0.52", "64.2039, 813.464, -94.2273, 0.22", "64.2359, 813.405, -94.2264, 0.22", "64.4596, 812.959, -94.1963, 0.88", "64.6274, 812.679, -94.1672, 1.03", "65.5837, 811.209, -93.8987, 0.22", "65.6299, 811.132, -93.8792, 0.22", "66.4516, 809.738, -93.4664, 0.22", "66.4848, 809.683, -93.4479, 0.22", "67.2643, 808.44, -93.0576, 0.22", "67.7856, 807.635, -92.8043, 0.22", "68.4689, 806.697, -92.4836, 0.22", "69.4128, 805.542, -92.1547, 0.29", "69.4878, 805.46, -92.1428, 0.29", "70.6999, 804.189, -92.2016, 0.15", "70.746, 804.143, -92.2122, 0.15", "71.9497, 802.996, -92.7168, 0.96", "72.2903, 802.684, -92.9018, 0.96", "73.4152, 801.604, -93.6033, 0.22", "74.3127, 800.735, -94.1935, 0.22", "74.3552, 800.694, -94.2239, 0.22", "75.142, 799.889, -94.8532, 0.22", "76.2346, 798.653, -95.9279, 0.22", "76.7192, 798.1, -96.3848, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "64.0621, 824.09, -94.5115, 0.37", "64.3813, 825.053, -94.5291, 0.37", "64.3975, 825.107, -94.5324, 0.37", "64.4811, 825.438, -94.5572, 0.22", "64.629, 826.169, -94.6345, 0.22", "64.6918, 826.558, -94.6774, 0.66", "64.7021, 826.622, -94.6844, 0.66", "64.7776, 827.295, -94.7937, 0.52", "64.8363, 827.876, -94.8862, 0.52", "64.89, 828.576, -94.9916, 1.33", "64.9175, 829.16, -95.0763, 1.47" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "64.0621, 824.09, -94.5115, 0.29", "65.0734, 824.062, -94.4845, 0.29", "65.1278, 824.066, -94.485, 0.29", "66.7127, 824.225, -94.5197, 0.66", "67.737, 824.353, -94.5437, 0.15", "68.2676, 824.422, -94.5603, 0.88", "68.833, 824.486, -94.5999, 0.88", "69.6911, 824.589, -94.6713, 0.22", "69.7447, 824.594, -94.6795, 0.22", "70.4056, 824.661, -94.865, 0.81", "70.6854, 824.721, -94.9574, 0.81", "71.5958, 824.969, -95.2747, 0.22", "71.8421, 825.031, -95.3666, 0.96", "71.9, 825.047, -95.3905, 0.96", "72.3701, 825.195, -95.6107, 0.52", "73.1742, 825.431, -95.9515, 0.22", "73.2587, 825.454, -95.9804, 0.22", "73.5291, 825.516, -96.0484, 0.22", "73.6119, 825.529, -96.0672, 0.22", "74.4002, 825.614, -96.2344, 0.66", "75.5355, 825.693, -96.4647, 0.15", "75.589, 825.695, -96.4754, 0.15", "76.3069, 825.696, -96.6494, 0.15", "76.8301, 825.691, -96.7684, 0.74", "76.981, 825.691, -96.8027, 0.74", "77.4241, 825.699, -96.9044, 0.74", "77.4855, 825.699, -96.921, 0.74", "78.4324, 825.688, -97.1751, 0.22", "79.7787, 825.625, -97.5182, 0.66", "80.1127, 825.6, -97.5969, 0.66", "80.184, 825.594, -97.6126, 0.66", "80.7619, 825.523, -97.7267, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "64.9175, 829.16, -95.0763, 0.44", "65.3033, 830.581, -94.6241, 0.44", "65.6663, 831.565, -94.3263, 0.29", "66.0658, 832.529, -94.0478, 0.29", "66.7354, 834.039, -93.652, 0.81", "66.9831, 834.571, -93.5294, 1.18", "67.1036, 834.823, -93.4766, 1.18", "67.8801, 836.215, -93.3034, 0.15", "67.9774, 836.361, -93.2942, 0.15", "68.2995, 836.791, -93.3084, 0.66", "68.5663, 837.174, -93.3738, 0.96", "68.6081, 837.243, -93.3811, 0.96", "68.7335, 837.477, -93.3738, 0.96", "69.1989, 838.288, -93.2441, 0.29", "69.2885, 838.431, -93.2126, 0.29", "69.6981, 839.04, -93.0555, 0.29", "70.4464, 840.119, -92.7593, 0.37", "71.0432, 840.978, -92.517, 0.52", "71.9578, 842.284, -92.1308, 0.96", "72.0089, 842.357, -92.1111, 0.96", "72.5197, 843.077, -91.9569, 1.18", "72.6753, 843.3, -91.9303, 1.18", "72.8931, 843.684, -91.9565, 1.18", "72.9429, 843.793, -91.9752, 1.18", "73.3058, 844.798, -92.1687, 1.33", "73.3353, 844.884, -92.186, 1.33", "73.5436, 845.525, -92.3222, 1.25", "74.1056, 847.288, -92.7069, 0.22", "74.4227, 848.362, -92.9341, 0.22", "74.571, 848.932, -93.0418, 0.59", "74.6016, 849.056, -93.0644, 0.59", "74.6804, 849.386, -93.123, 0.59", "74.8925, 850.366, -93.2864, 0.22", "74.9918, 851.124, -93.3799, 0.96", "75.0718, 852.048, -93.4563, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "64.9175, 829.16, -95.0763, 0.15", "65.4616, 831.791, -96.1407, 0.15", "65.4782, 831.898, -96.1753, 0.15", "65.5699, 832.445, -96.3439, 0.15", "65.583, 832.532, -96.368, 0.15", "65.6511, 833.123, -96.522, 0.59", "65.6896, 833.508, -96.616, 0.59", "65.8671, 835.923, -97.1025, 0.22", "65.9212, 836.883, -97.2826, 1.25", "65.9656, 837.563, -97.3997, 0.88", "66.0898, 839.334, -97.6757, 0.15", "66.1413, 840.084, -97.7756, 0.15", "66.1896, 840.913, -97.8645, 0.74", "66.2179, 841.476, -97.906, 1.11", "66.2612, 842.754, -97.9823, 0.15", "66.2878, 843.422, -98.0196, 0.96", "66.315, 844.234, -98.0482, 1.18", "66.3496, 846.53, -98.1253, 0.15", "66.3494, 846.633, -98.1281, 0.15", "66.3206, 847.702, -98.1601, 0.15", "66.316, 847.779, -98.1627, 0.15", "66.2927, 848.434, -98.1885, 0.52", "66.2901, 848.591, -98.1933, 0.52", "66.2865, 848.926, -98.2056, 0.52", "66.2868, 848.992, -98.2095, 0.52", "66.3077, 850.094, -98.2892, 0.22", "66.3237, 850.894, -98.3511, 1.11", "66.355, 851.641, -98.3949, 0.81", "66.4622, 853.611, -98.4849, 0.15", "66.5986, 855.703, -98.5552, 0.15", "66.6635, 856.406, -98.5661, 1.03", "66.7611, 857.191, -98.5537, 0.81", "67.0383, 858.882, -98.4677, 0.22", "67.0515, 858.947, -98.4617, 0.22", "67.3399, 860.025, -98.2862, 0.52", "67.6523, 861.043, -98.065, 0.22", "67.9379, 861.955, -97.8564, 0.74", "68.1016, 862.471, -97.7371, 0.74", "68.1239, 862.544, -97.7205, 0.74", "68.5774, 864.044, -97.4096, 0.22", "68.5961, 864.106, -97.398, 0.22", "68.9174, 865.281, -97.2629, 0.66", "69.0267, 865.685, -97.239, 0.66", "69.0444, 865.749, -97.2383, 0.66", "69.257, 866.471, -97.2805, 0.22", "69.703, 867.625, -97.3992, 1.4", "70.2887, 868.967, -97.5697, 0.15", "70.3606, 869.117, -97.5926, 0.15", "70.7499, 869.883, -97.7113, 0.15", "71.3569, 871.047, -97.8936, 0.15", "72.4558, 873.089, -98.2181, 0.15", "73.0778, 874.157, -98.3854, 1.33", "73.3536, 874.589, -98.4311, 1.47", "74.3604, 876.229, -98.6254, 0.22", "74.4711, 876.418, -98.6487, 0.44", "74.5003, 876.477, -98.6584, 0.44", "74.7886, 877.457, -98.9836, 0.22", "75.2272, 878.721, -99.2636, 0.88", "75.9571, 880.703, -99.4627, 0.59", "76.1233, 881.071, -99.4674, 0.37", "76.6361, 882.052, -99.4295, 0.15", "77.4363, 883.454, -99.3245, 1.62", "79.4091, 886.609, -99.0252, 0.88", "79.8608, 887.256, -98.9405, 1.25", "80.764, 888.408, -98.7176, 0.15", "81.0854, 888.796, -98.6392, 0.66", "81.1434, 888.864, -98.6281, 0.66", "82.1016, 890.031, -98.5615, 0.22", "82.4909, 890.648, -98.6536, 0.88", "82.6385, 890.901, -98.6933, 0.88", "82.6851, 890.99, -98.7055, 0.88", "83.545, 892.732, -98.9128, 0.22", "83.8424, 893.358, -98.9856, 0.66", "84.5535, 894.977, -99.1589, 0.15", "84.8926, 895.785, -99.2432, 0.15", "84.918, 895.85, -99.2495, 0.15", "85.104, 896.389, -99.2926, 0.44", "85.2897, 897.104, -99.3333, 0.22", "85.3984, 897.737, -99.3584, 0.52", "85.3948, 897.829, -99.3563, 0.52", "85.3535, 898.166, -99.3248, 0.52", "85.2857, 898.565, -99.2717, 0.37", "85.2606, 898.65, -99.2513, 0.37", "85.0724, 899.023, -99.0963, 0.22", "84.7152, 899.594, -98.8006, 0.44" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "75.0718, 852.048, -93.4563, 0.22", "75.6342, 853.366, -93.4305, 0.22", "75.9271, 854.034, -93.4077, 0.52", "76.674, 855.716, -93.3365, 0.29", "77.0265, 856.498, -93.2978, 0.88", "77.2888, 857.087, -93.2855, 1.18", "77.4677, 857.507, -93.2864, 1.18", "77.5538, 857.721, -93.2969, 1.18", "77.5538, 857.721, -93.2969, 1.18", "77.5713, 857.776, -93.3043, 1.18", "77.8969, 858.845, -93.4632, 0.22", "78.1521, 859.489, -93.5706, 0.44", "78.5782, 860.417, -93.7223, 0.59", "78.8143, 860.852, -93.8057, 1.11", "79.0798, 861.289, -93.8999, 1.11", "79.1113, 861.335, -93.9107, 1.11", "80.2687, 862.739, -94.2982, 0.22", "80.3133, 862.784, -94.316, 0.22", "80.9244, 863.367, -94.5973, 0.22", "81.2639, 863.686, -94.7453, 0.74", "81.311, 863.73, -94.7655, 0.74", "81.6943, 864.119, -94.9237, 0.52", "82.288, 864.813, -95.157, 0.22", "82.7692, 865.415, -95.2716, 0.74", "83.5918, 866.504, -95.3366, 1.25", "83.6427, 866.578, -95.3353, 1.25", "83.8112, 866.844, -95.3133, 1.11", "84.1919, 867.425, -95.2115, 0.52", "84.8081, 868.285, -95.0284, 0.15", "84.8517, 868.337, -95.0169, 0.15", "85.3315, 868.723, -94.9586, 0.15", "85.429, 868.777, -94.9539, 0.15", "86.6807, 869.296, -94.8654, 0.44", "87.1892, 869.468, -94.8292, 0.66", "87.2513, 869.485, -94.8272, 0.66", "88.7727, 869.858, -94.7776, 0.22", "88.8364, 869.871, -94.7755, 0.22", "90.4279, 870.204, -94.7042, 1.33", "90.6288, 870.251, -94.6842, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "75.0718, 852.048, -93.4563, 0.15", "76.3794, 853.301, -94.6941, 0.15", "76.8542, 853.721, -95.1134, 0.15", "76.9662, 853.812, -95.2081, 0.15", "77.5061, 854.232, -95.6548, 0.44", "77.6267, 854.32, -95.7518, 0.44", "78.4176, 854.881, -96.3843, 0.22", "78.833, 855.156, -96.6949, 0.44", "79.3878, 855.468, -97.1161, 0.15", "79.446, 855.498, -97.1609, 0.15", "80.0204, 855.764, -97.6082, 0.66", "80.0786, 855.789, -97.6543, 0.66", "80.8421, 856.083, -98.2731, 0.22", "81.4546, 856.327, -98.7891, 0.88", "81.5203, 856.353, -98.8452, 0.88", "81.6958, 856.419, -98.9964, 1.11", "81.8103, 856.458, -99.0975, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "90.6288, 870.251, -94.6842, 0.29", "91.6185, 871.496, -94.2775, 0.29", "91.6597, 871.546, -94.2683, 0.29", "92.2539, 872.25, -94.1998, 0.29", "92.3244, 872.328, -94.2014, 0.29", "92.7908, 872.86, -94.242, 0.74", "92.828, 872.903, -94.2467, 0.74", "93.2858, 873.437, -94.289, 0.74", "93.3743, 873.533, -94.2848, 0.74", "93.9748, 874.148, -94.2289, 0.15", "94.2601, 874.434, -94.2039, 0.15", "94.2977, 874.472, -94.1993, 0.15", "95.542, 875.784, -94.0295, 0.15", "95.9282, 876.225, -93.9627, 1.11", "96.2746, 876.665, -93.8992, 1.25", "97.0422, 877.7, -93.7594, 0.22", "97.4833, 878.314, -93.6977, 0.22", "97.513, 878.359, -93.695, 0.22", "97.8605, 879.03, -93.734, 0.29", "98.1696, 879.707, -93.7834, 0.74", "98.3872, 880.184, -93.8159, 1.11", "98.416, 880.244, -93.8221, 1.11", "98.7755, 880.88, -93.9376, 0.66", "99.2462, 881.658, -94.1133, 0.22", "99.5616, 882.111, -94.255, 0.15", "99.9743, 882.645, -94.4639, 1.11", "100.356, 883.136, -94.677, 1.69", "100.389, 883.174, -94.6953, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "90.6288, 870.251, -94.6842, 0.29", "89.9641, 871.474, -94.0928, 0.29", "89.7806, 871.796, -93.94, 0.29", "89.2641, 872.678, -93.5007, 0.15", "89.1536, 872.864, -93.4054, 0.15", "88.803, 873.477, -93.0966, 0.29", "88.2653, 874.436, -92.6213, 0.15", "88.1971, 874.558, -92.5684, 0.15", "87.6438, 875.648, -92.1678, 0.15", "87.5941, 875.764, -92.1396, 0.15", "87.2955, 876.549, -91.9946, 0.15", "87.2251, 876.775, -91.9745, 0.15", "86.8039, 878.269, -91.9398, 0.15", "86.7741, 878.385, -91.9417, 0.15", "86.4674, 879.766, -92.089, 0.15", "86.449, 879.852, -92.101, 0.15", "86.3068, 880.562, -92.2423, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "100.389, 883.174, -94.6953, 0.52", "101.496, 884.614, -93.9764, 0.52", "102.422, 886.009, -93.2541, 0.29", "102.678, 886.511, -93.0196, 0.96", "102.958, 887.132, -92.7404, 1.11", "103.003, 887.236, -92.6912, 1.11", "103.378, 888.119, -92.2623, 0.81", "103.706, 889.082, -91.8087, 1.11", "104.135, 890.437, -91.2554, 0.37", "104.155, 890.493, -91.2343, 0.37", "104.643, 891.734, -90.8485, 0.29", "104.674, 891.798, -90.8325, 0.29", "105.247, 892.582, -90.69, 0.81", "105.635, 892.975, -90.638, 1.03", "105.69, 893.022, -90.6323, 1.03", "106.18, 893.435, -90.5927, 0.96", "107.426, 894.471, -90.5268, 0.66", "108.632, 895.502, -90.4741, 0.52", "109.572, 896.353, -90.4262, 0.44", "110.033, 896.809, -90.3964, 0.44", "110.465, 897.204, -90.351, 0.37", "110.594, 897.312, -90.3373, 0.37", "111.523, 898.01, -90.2759, 0.37", "112.42, 898.702, -90.2192, 0.22", "113.662, 899.599, -90.1458, 1.4", "115.507, 900.816, -89.9982, 0.29", "116.098, 901.165, -89.9347, 0.96", "116.583, 901.412, -89.8681, 0.96", "124.532, 907.769, -89.2351, 0.96" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "100.389, 883.174, -94.6953, 0.22", "99.9833, 884.805, -94.3241, 0.22", "99.6233, 886.25, -93.995, 0.22", "99.5867, 886.398, -93.9615, 0.22", "99.2712, 887.664, -93.673, 0.22", "98.4468, 897.491, -91.1607, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_DBC_52e1730bbd_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_67, id: dend_67, parent: dend_27
create dend_67
public dend_67
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_28
create dend_66
public dend_66
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_61, id: dend_61, parent: dend_29
create dend_61
public dend_61
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_52, id: dend_52, parent: dend_30
create dend_52
public dend_52
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_33
create dend_51
public dend_51
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_50, id: dend_50, parent: dend_34
create dend_50
public dend_50
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_78
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_75(0), soma_0(0.4999985130312626)
    connect dend_70(0), soma_0(0.4999985130312626)
    connect dend_21(0), soma_0(0.4999985130312626)
    connect dend_0(0), soma_0(0.4999985130312626)
    connect axon_0(0), soma_0(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_67(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_61(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_52(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_50(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.28115, -11.0873, 1.6054, 2.71903 ) }
    soma_0 { pt3dadd( -3.90555, -10.0189, 1.46271, 4.54351 ) }
    soma_0 { pt3dadd( -3.52995, -8.95054, 1.32001, 6.06676 ) }
    soma_0 { pt3dadd( -3.15435, -7.88215, 1.17732, 7.70089 ) }
    soma_0 { pt3dadd( -2.77875, -6.81375, 1.03462, 9.50221 ) }
    soma_0 { pt3dadd( -2.40315, -5.74536, 0.891931, 11.4189 ) }
    soma_0 { pt3dadd( -2.02755, -4.67696, 0.749237, 12.8756 ) }
    soma_0 { pt3dadd( -1.65195, -3.60857, 0.606544, 14.0093 ) }
    soma_0 { pt3dadd( -1.27635, -2.54017, 0.46385, 14.551 ) }
    soma_0 { pt3dadd( -0.900746, -1.47178, 0.321156, 14.6039 ) }
    soma_0 { pt3dadd( -0.525145, -0.403386, 0.178462, 14.3615 ) }
    soma_0 { pt3dadd( -0.149545, 0.665008, 0.0357687, 13.9828 ) }
    soma_0 { pt3dadd( 0.226055, 1.7334, -0.106925, 13.3923 ) }
    soma_0 { pt3dadd( 0.601655, 2.8018, -0.249619, 12.9274 ) }
    soma_0 { pt3dadd( 0.977256, 3.87019, -0.392313, 12.1033 ) }
    soma_0 { pt3dadd( 1.35286, 4.93859, -0.535006, 10.4725 ) }
    soma_0 { pt3dadd( 1.72846, 6.00698, -0.6777, 8.96565 ) }
    soma_0 { pt3dadd( 2.10406, 7.07537, -0.820394, 7.72714 ) }
    soma_0 { pt3dadd( 2.47966, 8.14377, -0.963088, 6.28127 ) }
    soma_0 { pt3dadd( 2.85526, 9.21216, -1.10578, 4.62664 ) }
    soma_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 2.72659 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -6.8285, -4.35803, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -6.8285, -4.35803, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -7.55287, -5.56975, -7.51108, 0.74 ) }
    dend_75 { pt3dadd( -7.61167, -5.63416, -7.51698, 0.74 ) }
    dend_75 { pt3dadd( -8.77273, -6.46663, -7.62835, 0.66 ) }
    dend_75 { pt3dadd( -9.90724, -7.0051, -7.72941, 0.44 ) }
    dend_75 { pt3dadd( -11.2278, -7.43251, -7.83713, 0.44 ) }
    dend_75 { pt3dadd( -12.4586, -7.62437, -8.07357, 0.44 ) }
    dend_75 { pt3dadd( -13.2489, -7.66905, -8.28017, 1.03 ) }
    dend_75 { pt3dadd( -14.2316, -7.71399, -8.63644, 1.33 ) }
    dend_75 { pt3dadd( -15.1035, -7.71792, -9.03237, 1.47 ) }
    dend_75 { pt3dadd( -15.9673, -7.75536, -9.53501, 0.66 ) }
    dend_75 { pt3dadd( -17.6292, -8.27761, -10.998, 0.37 ) }
    dend_75 { pt3dadd( -17.997, -8.6202, -11.5685, 0.37 ) }
    dend_75 { pt3dadd( -18.505, -9.46113, -12.7164, 1.11 ) }
    dend_75 { pt3dadd( -18.5284, -9.52205, -12.7903, 1.11 ) }
    dend_75 { pt3dadd( -18.6709, -10.0734, -13.3876, 0.88 ) }
    dend_75 { pt3dadd( -18.8867, -11.3112, -14.5821, 0.59 ) }
    dend_75 { pt3dadd( -19.1304, -12.9495, -15.9634, 1.03 ) }
    dend_75 { pt3dadd( -19.1718, -13.2334, -16.2162, 1.25 ) }
    dend_75 { pt3dadd( -19.1902, -13.3312, -16.3016, 1.25 ) }
    dend_75 { pt3dadd( -19.2872, -13.7591, -16.6793, 1.25 ) }
    dend_75 { pt3dadd( -19.3244, -13.8739, -16.7871, 1.25 ) }
    dend_75 { pt3dadd( -19.848, -14.9878, -17.8211, 0.52 ) }
    dend_75 { pt3dadd( -20.4288, -15.8068, -18.6055, 0.22 ) }
    dend_75 { pt3dadd( -20.7984, -16.0941, -18.9896, 0.22 ) }
    dend_75 { pt3dadd( -21.0578, -16.2075, -19.2049, 0.22 ) }
    dend_75 { pt3dadd( -21.6912, -16.3671, -19.6461, 0.88 ) }
    dend_75 { pt3dadd( -22.1267, -16.4613, -19.8956, 1.25 ) }
    dend_75 { pt3dadd( -22.805, -16.6185, -20.2298, 1.25 ) }
    dend_75 { pt3dadd( -24.2254, -17.1004, -21.0137, 0.29 ) }
    dend_75 { pt3dadd( -24.6302, -17.3181, -21.285, 0.29 ) }
    dend_75 { pt3dadd( -25.2335, -17.8034, -21.7517, 0.29 ) }
    dend_75 { pt3dadd( -25.9018, -18.5222, -22.3163, 0.29 ) }
    dend_75 { pt3dadd( -26.5624, -19.364, -22.9223, 0.29 ) }
    dend_75 { pt3dadd( -27.1912, -20.2783, -23.521, 0.52 ) }
    dend_75 { pt3dadd( -27.4386, -20.6861, -23.7576, 0.52 ) }
    dend_75 { pt3dadd( -27.6552, -21.0053, -23.9502, 0.29 ) }
    dend_75 { pt3dadd( -27.9829, -21.4443, -24.3283, 0.29 ) }
    dend_75 { pt3dadd( -28.385, -21.9211, -24.8628, 1.25 ) }
    dend_75 { pt3dadd( -28.6723, -22.2214, -25.2399, 1.47 ) }
    dend_75 { pt3dadd( -28.7169, -22.2673, -25.3011, 1.47 ) }
    dend_75 { pt3dadd( -28.931, -22.5023, -25.6284, 1.47 ) }
    dend_75 { pt3dadd( -30.1607, -24.0006, -27.8023, 0.22 ) }
    dend_75 { pt3dadd( -30.3528, -24.2759, -28.1919, 0.81 ) }
    dend_75 { pt3dadd( -30.588, -24.628, -28.6728, 0.81 ) }
    dend_75 { pt3dadd( -30.6199, -24.6726, -28.7381, 0.81 ) }
    dend_75 { pt3dadd( -30.9468, -25.0594, -29.3395, 0.96 ) }
    dend_75 { pt3dadd( -31.683, -25.8369, -30.6654, 0.29 ) }
    dend_75 { pt3dadd( -31.7311, -25.8783, -30.7426, 0.29 ) }
    dend_75 { pt3dadd( -32.0143, -26.1758, -31.2449, 0.29 ) }
    dend_75 { pt3dadd( -32.8209, -27.3165, -32.7871, 1.92 ) }
    dend_75 { pt3dadd( -33.2441, -28.0568, -33.637, 2.58 ) }
    dend_75 { pt3dadd( -33.6572, -28.9064, -34.503, 2.58 ) }
    dend_75 { pt3dadd( -33.6871, -28.9673, -34.5575, 2.58 ) }
    dend_75 { pt3dadd( -34.5358, -30.6376, -35.9042, 0.66 ) }
    dend_75 { pt3dadd( -35.1979, -31.756, -36.7441, 0.22 ) }
    dend_75 { pt3dadd( -35.3371, -31.947, -36.8665, 0.81 ) }
    dend_75 { pt3dadd( -36.1579, -32.8916, -37.4827, 0.22 ) }
    dend_75 { pt3dadd( -37.143, -33.8991, -38.1338, 2.58 ) }
    dend_75 { pt3dadd( -37.6095, -34.3295, -38.4336, 3.32 ) }
    dend_75 { pt3dadd( -39.3763, -35.8005, -39.5326, 0.44 ) }
    dend_75 { pt3dadd( -40.2979, -36.5711, -40.1205, 1.33 ) }
    dend_75 { pt3dadd( -41.0129, -37.233, -40.5832, 1.47 ) }
    dend_75 { pt3dadd( -41.7944, -38.1401, -41.1575, 0.22 ) }
    dend_75 { pt3dadd( -41.8758, -38.2573, -41.2308, 0.22 ) }
    dend_75 { pt3dadd( -42.367, -39.0211, -41.6969, 0.22 ) }
    dend_75 { pt3dadd( -42.8538, -39.8756, -42.1647, 1.69 ) }
    dend_75 { pt3dadd( -43.0392, -40.1802, -42.3339, 2.06 ) }
    dend_75 { pt3dadd( -44.3591, -42.0178, -43.5734, 0.22 ) }
    dend_75 { pt3dadd( -44.4059, -42.0735, -43.6191, 0.22 ) }
    dend_75 { pt3dadd( -44.9805, -42.7609, -44.2414, 0.22 ) }
    dend_75 { pt3dadd( -45.2694, -43.1084, -44.5803, 0.88 ) }
    dend_75 { pt3dadd( -45.5473, -43.5126, -45.0078, 1.11 ) }
    dend_75 { pt3dadd( -46.6991, -45.3757, -46.9723, 0.22 ) }
    dend_75 { pt3dadd( -46.7323, -45.4391, -47.0404, 0.22 ) }
    dend_75 { pt3dadd( -47.1243, -46.2914, -47.9653, 1.84 ) }
    dend_75 { pt3dadd( -47.2945, -46.7312, -48.4331, 1.99 ) }
    dend_75 { pt3dadd( -48.0305, -48.8094, -50.5375, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_75 { pt3dadd( -48.2527, -49.4145, -51.0968, 0.29 ) }
    dend_75 { pt3dadd( -49.0092, -51.0717, -52.4931, 0.29 ) }
    dend_75 { pt3dadd( -49.0965, -51.2367, -52.634, 0.29 ) }
    dend_75 { pt3dadd( -49.669, -52.1239, -53.4058, 1.11 ) }
    dend_75 { pt3dadd( -49.9784, -52.5397, -53.8037, 1.47 ) }
    dend_75 { pt3dadd( -50.7826, -53.4817, -54.7533, 0.29 ) }
    dend_75 { pt3dadd( -51.8575, -54.6207, -55.9902, 2.43 ) }
    dend_75 { pt3dadd( -52.7252, -55.4159, -56.9068, 2.43 ) }
    dend_75 { pt3dadd( -54.058, -56.5064, -58.2968, 0.52 ) }
    dend_75 { pt3dadd( -55.0487, -57.2246, -59.33, 0.66 ) }
    dend_75 { pt3dadd( -55.8445, -57.7501, -60.1627, 0.22 ) }
    dend_75 { pt3dadd( -56.2544, -57.989, -60.5728, 0.59 ) }
    dend_75 { pt3dadd( -56.6431, -58.1993, -60.9221, 0.59 ) }
    dend_75 { pt3dadd( -57.5749, -58.7245, -61.6583, 0.22 ) }
    dend_75 { pt3dadd( -58.2413, -59.1868, -62.1535, 1.18 ) }
    dend_75 { pt3dadd( -58.5439, -59.4479, -62.3568, 1.33 ) }
    dend_75 { pt3dadd( -59.7686, -60.7274, -63.2544, 0.37 ) }
    dend_75 { pt3dadd( -60.4961, -61.5992, -63.8201, 0.22 ) }
    dend_75 { pt3dadd( -61.0912, -62.3793, -64.285, 0.22 ) }
    dend_75 { pt3dadd( -61.7824, -63.3673, -64.8104, 1.55 ) }
    dend_75 { pt3dadd( -62.2334, -64.0599, -65.1477, 2.06 ) }
    dend_75 { pt3dadd( -63.4058, -66.0084, -66.03, 0.22 ) }
    dend_75 { pt3dadd( -63.6456, -66.4258, -66.1984, 0.52 ) }
    dend_75 { pt3dadd( -63.8907, -66.8011, -66.3545, 0.52 ) }
    dend_75 { pt3dadd( -64.6508, -67.8433, -66.7953, 0.22 ) }
    dend_75 { pt3dadd( -65.0801, -68.4042, -67.0261, 0.22 ) }
    dend_75 { pt3dadd( -65.5501, -69.0166, -67.3044, 1.11 ) }
    dend_75 { pt3dadd( -65.9519, -69.5257, -67.5363, 1.33 ) }
    dend_75 { pt3dadd( -67.1447, -70.9763, -68.2812, 0.22 ) }
    dend_75 { pt3dadd( -67.5645, -71.4566, -68.5502, 1.03 ) }
    dend_75 { pt3dadd( -67.7981, -71.6988, -68.7014, 1.03 ) }
    dend_75 { pt3dadd( -69.0536, -72.9436, -69.4983, 0.22 ) }
    dend_75 { pt3dadd( -69.5124, -73.4001, -69.7785, 0.22 ) }
    dend_75 { pt3dadd( -69.9085, -73.7973, -70.0112, 1.18 ) }
    dend_75 { pt3dadd( -70.2775, -74.1523, -70.2164, 1.4 ) }
    dend_75 { pt3dadd( -71.7284, -75.5145, -71.1081, 0.22 ) }
    dend_75 { pt3dadd( -72.2039, -75.9466, -71.3965, 1.11 ) }
    dend_75 { pt3dadd( -72.5597, -76.2616, -71.6051, 1.33 ) }
    dend_75 { pt3dadd( -72.8668, -76.5512, -71.804, 1.18 ) }
    dend_75 { pt3dadd( -74.0598, -77.7484, -72.6053, 0.15 ) }
    dend_75 { pt3dadd( -75.08, -78.8176, -73.299, 0.15 ) }
    dend_75 { pt3dadd( -75.4741, -79.2397, -73.5594, 0.81 ) }
    dend_75 { pt3dadd( -75.7136, -79.5097, -73.7502, 0.81 ) }
    dend_75 { pt3dadd( -76.7011, -80.6612, -74.5903, 0.22 ) }
    dend_75 { pt3dadd( -77.5125, -81.6417, -75.2964, 0.22 ) }
    dend_75 { pt3dadd( -78.2541, -82.5677, -75.9495, 1.47 ) }
    dend_75 { pt3dadd( -78.5736, -82.9565, -76.245, 1.84 ) }
    dend_75 { pt3dadd( -80.2793, -85.0245, -78.0747, 0.15 ) }
    dend_75 { pt3dadd( -80.6908, -85.4993, -78.5489, 0.15 ) }
    dend_75 { pt3dadd( -80.9389, -85.7751, -78.8657, 0.74 ) }
    dend_75 { pt3dadd( -81.0559, -85.899, -79.0225, 0.74 ) }
    dend_75 { pt3dadd( -81.9794, -86.804, -80.2644, 0.29 ) }
    dend_75 { pt3dadd( -82.8021, -87.5527, -81.3352, 1.25 ) }
    dend_75 { pt3dadd( -83.1225, -87.8221, -81.7154, 1.33 ) }
    dend_75 { pt3dadd( -84.1449, -88.7489, -83.1586, 0.15 ) }
    dend_75 { pt3dadd( -84.4567, -89.047, -83.6385, 0.74 ) }
    dend_75 { pt3dadd( -85.1131, -89.6944, -84.6785, 0.22 ) }
    dend_75 { pt3dadd( -85.1479, -89.7292, -84.7323, 0.22 ) }
    dend_75 { pt3dadd( -85.4255, -90.0006, -85.1429, 0.88 ) }
    dend_75 { pt3dadd( -86.9993, -91.5338, -87.4457, 0.22 ) }
    dend_75 { pt3dadd( -87.0512, -91.5832, -87.5159, 0.22 ) }
    dend_75 { pt3dadd( -87.205, -91.716, -87.6892, 0.22 ) }
    dend_75 { pt3dadd( -87.8969, -92.2494, -88.2999, 1.47 ) }
    dend_75 { pt3dadd( -88.2211, -92.4742, -88.5254, 1.84 ) }
    dend_75 { pt3dadd( -88.51, -92.6618, -88.6759, 1.84 ) }
    dend_75 { pt3dadd( -88.8518, -92.8709, -88.7898, 1.84 ) }
    dend_75 { pt3dadd( -90.3341, -93.932, -89.6203, 0.15 ) }
    dend_75 { pt3dadd( -90.4273, -93.9992, -89.6848, 0.15 ) }
    dend_75 { pt3dadd( -91.1737, -94.4939, -90.2665, 0.15 ) }
    dend_75 { pt3dadd( -91.8119, -94.9207, -90.7865, 0.96 ) }
    dend_75 { pt3dadd( -92.2034, -95.2001, -91.1148, 0.96 ) }
    dend_75 { pt3dadd( -94.255, -96.7731, -92.8933, 0.22 ) }
    dend_75 { pt3dadd( -94.7877, -97.236, -93.3793, 0.22 ) }
    dend_75 { pt3dadd( -95.4541, -97.8461, -93.9763, 0.22 ) }
    dend_75 { pt3dadd( -96.2114, -98.5618, -94.6182, 1.11 ) }
    dend_75 { pt3dadd( -96.719, -99.0624, -95.0247, 1.69 ) }
    dend_75 { pt3dadd( -96.8869, -99.2444, -95.1468, 1.69 ) }
    dend_75 { pt3dadd( -98.3685, -101.07, -96.1177, 0.22 ) }
    dend_75 { pt3dadd( -98.8964, -101.797, -96.484, 0.37 ) }
    dend_75 { pt3dadd( -99.394, -102.508, -96.8417, 0.22 ) }
    dend_75 { pt3dadd( -100.075, -103.442, -97.3173, 1.47 ) }
    dend_75 { pt3dadd( -100.555, -104.066, -97.6798, 1.69 ) }
    dend_75 { pt3dadd( -101.776, -105.605, -98.6082, 0.22 ) }
    dend_75 { pt3dadd( -102.812, -106.941, -99.3961, 0.22 ) }
    dend_75 { pt3dadd( -103.328, -107.616, -99.8139, 1.4 ) }
    dend_75 { pt3dadd( -103.819, -108.258, -100.225, 1.84 ) }
    dend_75 { pt3dadd( -105.409, -110.272, -101.573, 0.15 ) }
    dend_75 { pt3dadd( -105.964, -110.946, -102.056, 0.15 ) }
    dend_75 { pt3dadd( -106.489, -111.552, -102.518, 1.18 ) }
    dend_75 { pt3dadd( -106.775, -111.883, -102.78, 1.18 ) }
    dend_75 { pt3dadd( -106.816, -111.931, -102.818, 1.18 ) }
    dend_75 { pt3dadd( -108.109, -113.57, -103.988, 0.22 ) }
    dend_75 { pt3dadd( -108.723, -114.416, -104.487, 1.25 ) }
    dend_75 { pt3dadd( -109.597, -115.638, -105.228, 0.15 ) }
    dend_75 { pt3dadd( -109.947, -116.083, -105.526, 0.88 ) }
    dend_75 { pt3dadd( -110.129, -116.301, -105.674, 1.03 ) }
    dend_75 { pt3dadd( -110.695, -116.952, -106.105, 0.15 ) }
    dend_75 { pt3dadd( -111.342, -117.658, -106.55, 0.15 ) }
    dend_75 { pt3dadd( -111.858, -118.174, -106.923, 0.74 ) }
    dend_75 { pt3dadd( -112.831, -119.066, -107.629, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_75 { pt3dadd( -113.669, -119.837, -108.236, 0.22 ) }
    dend_75 { pt3dadd( -114.42, -120.532, -108.777, 1.99 ) }
    dend_75 { pt3dadd( -114.761, -120.856, -109.02, 2.28 ) }
    dend_75 { pt3dadd( -116.665, -122.785, -110.335, 0.22 ) }
    dend_75 { pt3dadd( -116.93, -123.09, -110.515, 0.52 ) }
    dend_75 { pt3dadd( -117.812, -124.17, -111.072, 0.15 ) }
    dend_75 { pt3dadd( -117.864, -124.232, -111.104, 0.15 ) }
    dend_75 { pt3dadd( -118.273, -124.695, -111.327, 0.81 ) }
    dend_75 { pt3dadd( -118.32, -124.748, -111.348, 0.81 ) }
    dend_75 { pt3dadd( -119.662, -126.195, -111.742, 0.22 ) }
    dend_75 { pt3dadd( -120.644, -127.273, -112.095, 0.22 ) }
    dend_75 { pt3dadd( -120.709, -127.343, -112.12, 0.22 ) }
    dend_75 { pt3dadd( -121.648, -128.378, -112.487, 0.22 ) }
    dend_75 { pt3dadd( -122.302, -129.116, -112.784, 0.81 ) }
    dend_75 { pt3dadd( -122.362, -129.188, -112.813, 0.81 ) }
    dend_75 { pt3dadd( -123.37, -130.521, -113.375, 0.22 ) }
    dend_75 { pt3dadd( -123.956, -131.309, -113.726, 1.47 ) }
    dend_75 { pt3dadd( -124.168, -131.589, -113.849, 1.77 ) }
    dend_75 { pt3dadd( -125.781, -133.66, -114.768, 0.22 ) }
    dend_75 { pt3dadd( -126.254, -134.229, -115.028, 0.52 ) }
    dend_75 { pt3dadd( -127.33, -135.443, -115.574, 0.22 ) }
    dend_75 { pt3dadd( -128.645, -136.82, -116.178, 0.22 ) }
    dend_75 { pt3dadd( -129.32, -137.504, -116.49, 1.18 ) }
    dend_75 { pt3dadd( -129.525, -137.709, -116.582, 1.4 ) }
    dend_75 { pt3dadd( -131.113, -139.353, -117.395, 0.15 ) }
    dend_75 { pt3dadd( -131.473, -139.74, -117.602, 0.66 ) }
    dend_75 { pt3dadd( -133.244, -141.734, -118.722, 0.15 ) }
    dend_75 { pt3dadd( -134.092, -142.737, -119.34, 1.69 ) }
    dend_75 { pt3dadd( -134.353, -143.052, -119.541, 1.84 ) }
    dend_75 { pt3dadd( -136.252, -145.442, -121.079, 0.22 ) }
    dend_75 { pt3dadd( -136.605, -145.919, -121.395, 0.66 ) }
    dend_75 { pt3dadd( -136.653, -145.992, -121.447, 0.66 ) }
    dend_75 { pt3dadd( -137.131, -146.762, -122.046, 0.15 ) }
    dend_75 { pt3dadd( -137.338, -147.075, -122.299, 0.59 ) }
    dend_75 { pt3dadd( -137.404, -147.171, -122.378, 0.59 ) }
    dend_75 { pt3dadd( -138.202, -148.267, -123.268, 0.22 ) }
    dend_75 { pt3dadd( -138.923, -149.242, -124.109, 1.33 ) }
    dend_75 { pt3dadd( -139.678, -150.288, -125.023, 0.15 ) }
    dend_75 { pt3dadd( -140.021, -150.799, -125.472, 0.88 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 39/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.2915, 5.80597, -8.94048, 1.18 ) }
    dend_70 { pt3dadd( 4.33062, 6.92712, -8.59971, 1.18 ) }
    dend_70 { pt3dadd( 4.38143, 8.49708, -8.15338, 1.47 ) }
    dend_70 { pt3dadd( 4.4117, 9.71879, -7.93024, 1.92 ) }
    dend_70 { pt3dadd( 4.42841, 11.3719, -7.7977, 0.81 ) }
    dend_70 { pt3dadd( 4.42331, 12.7448, -7.79974, 0.81 ) }
    dend_70 { pt3dadd( 4.41113, 13.622, -7.86228, 0.74 ) }
    dend_70 { pt3dadd( 4.40468, 13.7654, -7.90199, 0.74 ) }
    dend_70 { pt3dadd( 4.2642, 15.4037, -8.69159, 0.74 ) }
    dend_70 { pt3dadd( 4.17295, 16.3051, -9.31449, 1.11 ) }
    dend_70 { pt3dadd( 4.12283, 16.8453, -9.80451, 1.11 ) }
    dend_70 { pt3dadd( 4.07163, 17.631, -10.6035, 1.11 ) }
    dend_70 { pt3dadd( 4.05258, 19.0789, -12.0284, 1.25 ) }
    dend_70 { pt3dadd( 4.05398, 19.132, -12.0786, 1.25 ) }
    dend_70 { pt3dadd( 4.17311, 20.4318, -13.2419, 1.03 ) }
    dend_70 { pt3dadd( 4.38459, 21.8725, -14.4604, 0.52 ) }
    dend_70 { pt3dadd( 4.68415, 23.3515, -15.611, 0.52 ) }
    dend_70 { pt3dadd( 4.94525, 24.345, -16.2974, 0.81 ) }
    dend_70 { pt3dadd( 4.9657, 24.4076, -16.3304, 0.81 ) }
    dend_70 { pt3dadd( 5.24396, 25.1602, -16.6559, 1.18 ) }
    dend_70 { pt3dadd( 5.39353, 25.4688, -16.7271, 1.18 ) }
    dend_70 { pt3dadd( 5.6261, 25.8579, -16.7288, 1.18 ) }
    dend_70 { pt3dadd( 5.67375, 25.9301, -16.7226, 1.18 ) }
    dend_70 { pt3dadd( 5.84494, 26.2048, -16.705, 1.4 ) }
    dend_70 { pt3dadd( 5.93653, 26.3858, -16.6923, 1.4 ) }
    dend_70 { pt3dadd( 6.20451, 27.0613, -16.6416, 1.4 ) }
    dend_70 { pt3dadd( 6.41807, 27.7654, -16.5811, 0.88 ) }
    dend_70 { pt3dadd( 6.62533, 28.8736, -16.4768, 0.52 ) }
    dend_70 { pt3dadd( 6.66862, 29.8974, -16.4686, 0.37 ) }
    dend_70 { pt3dadd( 6.58316, 30.9811, -16.5859, 0.37 ) }
    dend_70 { pt3dadd( 6.50018, 31.4638, -16.6831, 0.29 ) }
    dend_70 { pt3dadd( 6.27542, 32.3216, -16.9373, 0.29 ) }
    dend_70 { pt3dadd( 6.11941, 32.8236, -17.1608, 0.29 ) }
    dend_70 { pt3dadd( 5.63925, 34.4265, -18.2809, 1.33 ) }
    dend_70 { pt3dadd( 5.37836, 35.3203, -19.0114, 1.92 ) }
    dend_70 { pt3dadd( 5.32829, 35.5426, -19.2134, 2.21 ) }
    dend_70 { pt3dadd( 5.30552, 35.713, -19.3738, 2.21 ) }
    dend_70 { pt3dadd( 5.27697, 36.6466, -20.2716, 2.5 ) }
    dend_70 { pt3dadd( 5.32422, 37.8671, -21.5248, 2.14 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 78/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.6115, 10.468, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 1.6115, 10.468, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 1.0119, 12.457, -2.79737, 2.8 ) }
    dend_21 { pt3dadd( 0.971324, 12.5884, -2.82301, 2.8 ) }
    dend_21 { pt3dadd( 0.722074, 13.3884, -2.98973, 2.8 ) }
    dend_21 { pt3dadd( 0.609823, 13.7324, -3.06455, 2.8 ) }
    dend_21 { pt3dadd( 0.35142, 14.5066, -3.2385, 2.8 ) }
    dend_21 { pt3dadd( -0.0381479, 15.6126, -3.51089, 3.02 ) }
    dend_21 { pt3dadd( -0.583604, 17.0368, -3.92073, 3.02 ) }
    dend_21 { pt3dadd( -0.60465, 17.0884, -3.93791, 3.02 ) }
    dend_21 { pt3dadd( -1.06538, 18.1455, -4.31936, 3.02 ) }
    dend_21 { pt3dadd( -1.08777, 18.196, -4.33787, 3.02 ) }
    dend_21 { pt3dadd( -1.60794, 19.3476, -4.77389, 2.87 ) }
    dend_21 { pt3dadd( -2.09129, 20.4663, -5.14773, 2.87 ) }
    dend_21 { pt3dadd( -2.11317, 20.5189, -5.16063, 2.87 ) }
    dend_21 { pt3dadd( -2.56662, 21.6614, -5.37679, 2.73 ) }
    dend_21 { pt3dadd( -3.03963, 22.8869, -5.54796, 2.58 ) }
    dend_21 { pt3dadd( -3.0642, 22.9502, -5.55521, 2.58 ) }
    dend_21 { pt3dadd( -3.74064, 24.6813, -5.70028, 2.36 ) }
    dend_21 { pt3dadd( -4.41898, 26.3714, -5.81286, 2.06 ) }
    dend_21 { pt3dadd( -5.03942, 27.8423, -5.90501, 2.06 ) }
    dend_21 { pt3dadd( -5.44335, 28.7824, -5.96244, 2.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -6.16412, 30.4133, -6.05268, 2.73 ) }
    dend_21 { pt3dadd( -6.75443, 31.7174, -6.12812, 2.95 ) }
    dend_21 { pt3dadd( -7.30386, 32.8638, -6.20857, 3.17 ) }
    dend_21 { pt3dadd( -7.80653, 33.8641, -6.29214, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 4/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.5085, -11.2565, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -3.5085, -11.2565, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -4.16179, -12.9714, 0.999524, 3.68 ) }
    dend_0 { pt3dadd( -4.78641, -14.611, 0.999524, 3.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 8/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 0.532027 ) }
    axon_0 { pt3dadd( 8.20573, 24.4316, -1.24848, 0.532027 ) }
    axon_0 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.532027 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 11/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 5.32422, 37.8671, -21.5248, 1.25 ) }
    dend_74 { pt3dadd( 4.93029, 38.9061, -22.2429, 1.25 ) }
    dend_74 { pt3dadd( 4.60431, 39.9207, -22.9433, 1.77 ) }
    dend_74 { pt3dadd( 4.53328, 40.1661, -23.1148, 1.84 ) }
    dend_74 { pt3dadd( 4.25444, 41.474, -24.2433, 0.22 ) }
    dend_74 { pt3dadd( 4.14526, 42.3708, -25.1957, 1.33 ) }
    dend_74 { pt3dadd( 4.1431, 42.4159, -25.2559, 1.33 ) }
    dend_74 { pt3dadd( 4.16112, 42.6248, -25.6054, 1.77 ) }
    dend_74 { pt3dadd( 4.17407, 42.682, -25.7138, 1.77 ) }
    dend_74 { pt3dadd( 4.46568, 43.5487, -27.5598, 1.18 ) }
    dend_74 { pt3dadd( 4.72292, 44.0951, -28.8855, 1.4 ) }
    dend_74 { pt3dadd( 5.05505, 44.7855, -30.8834, 0.29 ) }
    dend_74 { pt3dadd( 5.06352, 44.8045, -30.941, 0.29 ) }
    dend_74 { pt3dadd( 5.30035, 45.3653, -32.6637, 1.55 ) }
    dend_74 { pt3dadd( 5.32599, 45.4416, -32.8797, 1.84 ) }
    dend_74 { pt3dadd( 5.33328, 45.4698, -32.9453, 1.84 ) }
    dend_74 { pt3dadd( 5.65043, 47.0283, -35.9109, 0.52 ) }
    dend_74 { pt3dadd( 5.65981, 47.0715, -35.9716, 0.52 ) }
    dend_74 { pt3dadd( 5.71892, 47.3512, -36.2913, 0.74 ) }
    dend_74 { pt3dadd( 6.13558, 49.4086, -38.2783, 1.47 ) }
    dend_74 { pt3dadd( 6.35129, 50.4133, -39.0807, 0.29 ) }
    dend_74 { pt3dadd( 6.57819, 51.4005, -39.7099, 1.69 ) }
    dend_74 { pt3dadd( 7.07191, 53.6891, -40.8889, 0.15 ) }
    dend_74 { pt3dadd( 7.19922, 54.3888, -41.2378, 0.66 ) }
    dend_74 { pt3dadd( 7.20908, 54.4548, -41.2698, 0.66 ) }
    dend_74 { pt3dadd( 7.35782, 55.7334, -41.901, 0.15 ) }
    dend_74 { pt3dadd( 7.42726, 56.6494, -42.4043, 1.69 ) }
    dend_74 { pt3dadd( 7.53252, 59.3548, -43.9493, 0.22 ) }
    dend_74 { pt3dadd( 7.53043, 60.0288, -44.3648, 0.59 ) }
    dend_74 { pt3dadd( 7.50362, 61.4832, -45.3199, 1.92 ) }
    dend_74 { pt3dadd( 7.43451, 63.7524, -46.8724, 0.15 ) }
    dend_74 { pt3dadd( 7.42901, 63.8728, -46.9587, 0.15 ) }
    dend_74 { pt3dadd( 7.41229, 64.4179, -47.3692, 0.37 ) }
    dend_74 { pt3dadd( 7.39587, 65.2555, -48.0407, 0.22 ) }
    dend_74 { pt3dadd( 7.37673, 66.1435, -48.8588, 1.11 ) }
    dend_74 { pt3dadd( 7.37403, 66.1971, -48.9121, 1.11 ) }
    dend_74 { pt3dadd( 7.347, 66.5667, -49.2916, 1.25 ) }
    dend_74 { pt3dadd( 7.21546, 68.0764, -50.8957, 0.22 ) }
    dend_74 { pt3dadd( 7.11359, 69.1027, -51.9945, 0.96 ) }
    dend_74 { pt3dadd( 6.98617, 70.2429, -53.1448, 0.15 ) }
    dend_74 { pt3dadd( 6.88691, 71.1993, -54.0476, 1.18 ) }
    dend_74 { pt3dadd( 6.86721, 71.3858, -54.2088, 1.47 ) }
    dend_74 { pt3dadd( 6.73427, 72.7515, -55.2293, 0.22 ) }
    dend_74 { pt3dadd( 6.69663, 73.1509, -55.455, 0.44 ) }
    dend_74 { pt3dadd( 6.63475, 73.9348, -55.7856, 0.15 ) }
    dend_74 { pt3dadd( 6.53463, 75.007, -56.1295, 1.11 ) }
    dend_74 { pt3dadd( 6.48713, 75.4676, -56.2522, 1.47 ) }
    dend_74 { pt3dadd( 6.32997, 77.4112, -56.6758, 0.22 ) }
    dend_74 { pt3dadd( 6.28084, 78.1802, -56.806, 0.74 ) }
    dend_74 { pt3dadd( 6.21667, 79.355, -56.9973, 0.15 ) }
    dend_74 { pt3dadd( 6.18105, 80.2648, -57.1411, 1.11 ) }
    dend_74 { pt3dadd( 6.16842, 80.6535, -57.1966, 1.55 ) }
    dend_74 { pt3dadd( 6.08824, 84.1061, -57.6611, 0.15 ) }
    dend_74 { pt3dadd( 6.07893, 84.9003, -57.7529, 0.66 ) }
    dend_74 { pt3dadd( 6.08112, 85.2865, -57.8005, 0.66 ) }
    dend_74 { pt3dadd( 6.13364, 87.5382, -58.0892, 0.15 ) }
    dend_74 { pt3dadd( 6.15901, 88.2499, -58.1755, 0.37 ) }
    dend_74 { pt3dadd( 6.16204, 88.3446, -58.1871, 0.37 ) }
    dend_74 { pt3dadd( 6.16169, 88.7437, -58.2308, 0.37 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 70/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 5.32422, 37.8671, -21.5248, 0.37 ) }
    dend_71 { pt3dadd( 5.87203, 39.4031, -21.6677, 0.37 ) }
    dend_71 { pt3dadd( 6.27212, 40.7839, -21.7945, 0.37 ) }
    dend_71 { pt3dadd( 6.55229, 42.009, -21.9036, 0.37 ) }
    dend_71 { pt3dadd( 6.56518, 42.0929, -21.9107, 0.37 ) }
    dend_71 { pt3dadd( 6.60495, 42.6899, -21.9575, 0.37 ) }
    dend_71 { pt3dadd( 6.60557, 42.7634, -21.9658, 0.37 ) }
    dend_71 { pt3dadd( 6.44357, 43.6386, -22.1215, 0.66 ) }
    dend_71 { pt3dadd( 6.33421, 43.9489, -22.1887, 0.81 ) }
    dend_71 { pt3dadd( 6.15715, 44.4652, -22.3079, 0.81 ) }
    dend_71 { pt3dadd( 6.0089, 45.0227, -22.4292, 0.37 ) }
    dend_71 { pt3dadd( 5.84948, 45.904, -22.5928, 0.29 ) }
    dend_71 { pt3dadd( 5.84176, 45.9772, -22.6047, 0.29 ) }
    dend_71 { pt3dadd( 5.80201, 46.8766, -22.7354, 0.29 ) }
    dend_71 { pt3dadd( 5.79685, 48.3278, -22.9125, 1.84 ) }
    dend_71 { pt3dadd( 5.81497, 48.8811, -22.965, 2.36 ) }
    dend_71 { pt3dadd( 5.89213, 50.1336, -23.05, 1.55 ) }
    dend_71 { pt3dadd( 5.99784, 51.5732, -23.1048, 1.92 ) }
    dend_71 { pt3dadd( 6.05259, 52.1329, -23.1227, 2.5 ) }
    dend_71 { pt3dadd( 6.17315, 53.0221, -23.1559, 1.99 ) }
    dend_71 { pt3dadd( 6.3894, 54.2999, -23.2034, 0.22 ) }
    dend_71 { pt3dadd( 6.52725, 55.1248, -23.2453, 0.22 ) }
    dend_71 { pt3dadd( 6.61749, 55.7036, -23.2773, 0.88 ) }
    dend_71 { pt3dadd( 6.68006, 56.1936, -23.3095, 0.59 ) }
    dend_71 { pt3dadd( 6.76896, 57.0944, -23.3768, 0.29 ) }
    dend_71 { pt3dadd( 6.84133, 58.1, -23.4578, 0.29 ) }
    dend_71 { pt3dadd( 6.90653, 59.2738, -23.5538, 0.29 ) }
    dend_71 { pt3dadd( 6.95733, 60.305, -23.6422, 0.29 ) }
    dend_71 { pt3dadd( 7.01322, 61.4106, -23.7328, 1.18 ) }
    dend_71 { pt3dadd( 7.05492, 62.0717, -23.7752, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_71 { pt3dadd( 7.11463, 62.7338, -23.8075, 1.4 ) }
    dend_71 { pt3dadd( 7.21184, 63.4523, -23.8413, 0.88 ) }
    dend_71 { pt3dadd( 7.42083, 64.7081, -23.8999, 0.29 ) }
    dend_71 { pt3dadd( 7.61667, 65.7988, -23.9455, 0.29 ) }
    dend_71 { pt3dadd( 7.95621, 67.5769, -23.9997, 2.14 ) }
    dend_71 { pt3dadd( 8.09295, 68.298, -24.0211, 3.09 ) }
    dend_71 { pt3dadd( 8.2191, 68.9779, -24.039, 3.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.80653, 33.8641, -6.29214, 1.62 ) }
    dend_25 { pt3dadd( -8.10333, 35.3867, -6.56943, 1.62 ) }
    dend_25 { pt3dadd( -8.10949, 35.442, -6.57459, 1.62 ) }
    dend_25 { pt3dadd( -8.1962, 36.222, -6.64726, 1.62 ) }
    dend_25 { pt3dadd( -8.21481, 36.3894, -6.66285, 1.62 ) }
    dend_25 { pt3dadd( -8.29893, 37.146, -6.73334, 1.62 ) }
    dend_25 { pt3dadd( -8.30443, 37.1955, -6.73796, 1.62 ) }
    dend_25 { pt3dadd( -8.31629, 38.4107, -6.65456, 1.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 15/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -7.80653, 33.8641, -6.29214, 0.66 ) }
    dend_22 { pt3dadd( -6.66861, 36.5313, -4.90172, 0.66 ) }
    dend_22 { pt3dadd( -6.19842, 37.4223, -4.63855, 0.59 ) }
    dend_22 { pt3dadd( -5.72793, 38.2422, -4.47035, 1.03 ) }
    dend_22 { pt3dadd( -5.63751, 38.4006, -4.44778, 1.03 ) }
    dend_22 { pt3dadd( -5.43595, 38.7818, -4.41059, 1.18 ) }
    dend_22 { pt3dadd( -4.73319, 40.3067, -4.33802, 0.81 ) }
    dend_22 { pt3dadd( -4.26077, 41.3544, -4.46585, 0.66 ) }
    dend_22 { pt3dadd( -4.22749, 41.4415, -4.47933, 0.66 ) }
    dend_22 { pt3dadd( -3.94304, 42.4345, -4.58231, 0.66 ) }
    dend_22 { pt3dadd( -3.70874, 43.5707, -4.63551, 0.88 ) }
    dend_22 { pt3dadd( -3.52765, 45.112, -4.62486, 1.4 ) }
    dend_22 { pt3dadd( -3.51429, 45.5029, -4.59945, 1.77 ) }
    dend_22 { pt3dadd( -3.52862, 46.3567, -4.51198, 2.14 ) }
    dend_22 { pt3dadd( -3.61018, 47.9979, -4.18998, 1.77 ) }
    dend_22 { pt3dadd( -3.664, 49.0545, -3.80016, 1.25 ) }
    dend_22 { pt3dadd( -3.69937, 49.8955, -3.35559, 1.03 ) }
    dend_22 { pt3dadd( -3.69591, 50.5807, -2.85238, 0.81 ) }
    dend_22 { pt3dadd( -3.6515, 51.4365, -2.08979, 0.81 ) }
    dend_22 { pt3dadd( -3.48034, 52.6962, -0.696773, 0.59 ) }
    dend_22 { pt3dadd( -3.15961, 53.8595, 0.884984, 0.59 ) }
    dend_22 { pt3dadd( -3.14178, 53.9051, 0.962516, 0.59 ) }
    dend_22 { pt3dadd( -2.84887, 54.4273, 2.08183, 1.77 ) }
    dend_22 { pt3dadd( -2.83028, 54.449, 2.14327, 1.77 ) }
    dend_22 { pt3dadd( -2.59998, 54.584, 2.73973, 1.92 ) }
    dend_22 { pt3dadd( -2.56189, 54.5874, 2.80844, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.78641, -14.611, 0.999524, 0.37 ) }
    dend_14 { pt3dadd( -6.72877, -15.7184, 0.305757, 0.37 ) }
    dend_14 { pt3dadd( -7.91602, -16.6613, 0.14798, 0.37 ) }
    dend_14 { pt3dadd( -9.41238, -18.3369, 0.476928, 0.37 ) }
    dend_14 { pt3dadd( -9.95681, -19.3016, 1.00988, 0.66 ) }
    dend_14 { pt3dadd( -10.2259, -19.9099, 1.4557, 0.96 ) }
    dend_14 { pt3dadd( -10.2611, -19.9829, 1.52832, 0.96 ) }
    dend_14 { pt3dadd( -11.0108, -22.0318, 4.23032, 0.59 ) }
    dend_14 { pt3dadd( -11.027, -22.0767, 4.30526, 0.59 ) }
    dend_14 { pt3dadd( -11.3046, -22.5813, 5.42938, 1.25 ) }
    dend_14 { pt3dadd( -11.4274, -22.702, 5.75413, 1.25 ) }
    dend_14 { pt3dadd( -12.409, -23.3547, 7.5332, 0.59 ) }
    dend_14 { pt3dadd( -12.8857, -23.641, 8.16618, 0.96 ) }
    dend_14 { pt3dadd( -12.9666, -23.6847, 8.24116, 0.96 ) }
    dend_14 { pt3dadd( -13.6803, -24.2535, 9.03291, 0.96 ) }
    dend_14 { pt3dadd( -14.2226, -24.9148, 9.76352, 0.59 ) }
    dend_14 { pt3dadd( -14.5804, -25.7183, 10.5024, 0.29 ) }
    dend_14 { pt3dadd( -14.7588, -26.71, 11.3095, 0.29 ) }
    dend_14 { pt3dadd( -14.8791, -27.6021, 12.0781, 1.11 ) }
    dend_14 { pt3dadd( -15.1214, -29.329, 13.6344, 0.22 ) }
    dend_14 { pt3dadd( -15.189, -29.7534, 14.0296, 1.25 ) }
    dend_14 { pt3dadd( -15.3881, -30.4227, 14.6945, 1.55 ) }
    dend_14 { pt3dadd( -15.4592, -30.5468, 14.8255, 1.55 ) }
    dend_14 { pt3dadd( -16.6892, -31.6276, 16.0377, 0.59 ) }
    dend_14 { pt3dadd( -17.1476, -31.9349, 16.3464, 0.74 ) }
    dend_14 { pt3dadd( -17.9207, -32.3789, 16.7437, 0.74 ) }
    dend_14 { pt3dadd( -19.0053, -33.0022, 17.2774, 0.59 ) }
    dend_14 { pt3dadd( -19.1637, -33.116, 17.3612, 0.59 ) }
    dend_14 { pt3dadd( -20.108, -34.2519, 18.0162, 0.59 ) }
    dend_14 { pt3dadd( -20.3417, -35.0081, 18.4117, 1.11 ) }
    dend_14 { pt3dadd( -20.4327, -35.6022, 18.7689, 1.18 ) }
    dend_14 { pt3dadd( -20.4459, -35.7327, 18.853, 1.18 ) }
    dend_14 { pt3dadd( -20.6514, -37.1482, 19.8614, 0.59 ) }
    dend_14 { pt3dadd( -20.9453, -38.276, 20.7458, 0.59 ) }
    dend_14 { pt3dadd( -21.5312, -39.3888, 21.7498, 0.44 ) }
    dend_14 { pt3dadd( -22.169, -39.9494, 22.4459, 0.74 ) }
    dend_14 { pt3dadd( -22.8036, -40.2092, 22.9282, 0.88 ) }
    dend_14 { pt3dadd( -24.2042, -40.4859, 23.7668, 0.44 ) }
    dend_14 { pt3dadd( -24.9745, -40.5243, 24.106, 0.44 ) }
    dend_14 { pt3dadd( -25.9204, -40.5298, 24.4299, 0.44 ) }
    dend_14 { pt3dadd( -26.006, -40.5332, 24.4488, 0.44 ) }
    dend_14 { pt3dadd( -27.0933, -40.6882, 24.6147, 0.88 ) }
    dend_14 { pt3dadd( -27.2094, -40.718, 24.631, 0.88 ) }
    dend_14 { pt3dadd( -28.4952, -41.151, 24.7459, 1.18 ) }
    dend_14 { pt3dadd( -29.1117, -41.4006, 24.7863, 1.11 ) }
    dend_14 { pt3dadd( -30.0653, -41.818, 24.8187, 0.59 ) }
    dend_14 { pt3dadd( -30.96, -42.2356, 24.8185, 0.44 ) }
    dend_14 { pt3dadd( -31.0393, -42.2748, 24.8148, 0.44 ) }
    dend_14 { pt3dadd( -32.2368, -42.9785, 24.7595, 0.66 ) }
    dend_14 { pt3dadd( -33.0317, -43.5947, 24.7296, 0.37 ) }
    dend_14 { pt3dadd( -33.5036, -44.1192, 24.7276, 1.03 ) }
    dend_14 { pt3dadd( -33.746, -44.5707, 24.7428, 1.03 ) }
    dend_14 { pt3dadd( -33.8011, -44.7614, 24.753, 1.03 ) }
    dend_14 { pt3dadd( -34.1516, -46.5005, 24.8648, 0.37 ) }
    dend_14 { pt3dadd( -34.2282, -47.5126, 24.9517, 0.44 ) }
    dend_14 { pt3dadd( -34.224, -48.3058, 25.0343, 0.74 ) }
    dend_14 { pt3dadd( -34.1839, -48.9559, 25.1117, 0.88 ) }
    dend_14 { pt3dadd( -34.0832, -50.1438, 25.273, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.78641, -14.611, 0.999524, 3.09 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -4.79722, -14.6574, 0.998324, 3.09 ) }
    dend_1 { pt3dadd( -5.10008, -15.9938, 0.992024, 2.8 ) }
    dend_1 { pt3dadd( -5.50173, -17.7817, 0.989454, 2.43 ) }
    dend_1 { pt3dadd( -5.82535, -19.2223, 0.987384, 2.43 ) }
    dend_1 { pt3dadd( -5.83999, -19.2874, 0.987294, 2.43 ) }
    dend_1 { pt3dadd( -6.30328, -21.3497, 0.984324, 2.43 ) }
    dend_1 { pt3dadd( -6.55146, -22.4696, 0.991394, 2.87 ) }
    dend_1 { pt3dadd( -6.75251, -23.3864, 1.01541, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.532027 ) }
    axon_1 { pt3dadd( 18.1555, 52.7336, -1.24848, 0.532027 ) }
    axon_1 { pt3dadd( 23.1303, 66.8846, -1.24848, 0.532027 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 11/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 8.2191, 68.9779, -24.039, 0.29 ) }
    dend_73 { pt3dadd( 9.34589, 71.0557, -24.5755, 0.29 ) }
    dend_73 { pt3dadd( 9.84652, 71.8268, -24.8502, 0.29 ) }
    dend_73 { pt3dadd( 10.3725, 72.6247, -25.1682, 0.37 ) }
    dend_73 { pt3dadd( 10.4224, 72.7005, -25.2001, 0.37 ) }
    dend_73 { pt3dadd( 10.7892, 73.2979, -25.4491, 0.37 ) }
    dend_73 { pt3dadd( 10.8233, 73.356, -25.4735, 0.37 ) }
    dend_73 { pt3dadd( 11.2622, 74.262, -25.9121, 0.22 ) }
    dend_73 { pt3dadd( 11.4784, 74.7857, -26.202, 0.44 ) }
    dend_73 { pt3dadd( 11.4944, 74.8592, -26.246, 0.44 ) }
    dend_73 { pt3dadd( 11.5856, 75.4789, -26.6107, 0.66 ) }
    dend_73 { pt3dadd( 11.596, 75.5415, -26.6445, 0.66 ) }
    dend_73 { pt3dadd( 11.7647, 76.2904, -27.064, 0.96 ) }
    dend_73 { pt3dadd( 11.7844, 76.3731, -27.1332, 0.96 ) }
    dend_73 { pt3dadd( 12.0434, 77.4336, -28.1172, 0.22 ) }
    dend_73 { pt3dadd( 12.0598, 77.5035, -28.1835, 0.22 ) }
    dend_73 { pt3dadd( 12.3046, 78.4929, -29.1176, 1.92 ) }
    dend_73 { pt3dadd( 12.5754, 79.405, -29.9881, 2.36 ) }
    dend_73 { pt3dadd( 13.5693, 82.2795, -32.7552, 0.44 ) }
    dend_73 { pt3dadd( 13.7286, 82.7076, -33.1654, 0.44 ) }
    dend_73 { pt3dadd( 13.8493, 83.0091, -33.4505, 0.44 ) }
    dend_73 { pt3dadd( 14.1124, 83.6662, -34.0367, 0.22 ) }
    dend_73 { pt3dadd( 14.4507, 84.5093, -34.7257, 0.22 ) }
    dend_73 { pt3dadd( 14.8676, 85.4536, -35.3969, 0.74 ) }
    dend_73 { pt3dadd( 14.9071, 85.5291, -35.4457, 0.74 ) }
    dend_73 { pt3dadd( 15.0204, 85.7469, -35.6065, 0.74 ) }
    dend_73 { pt3dadd( 15.5878, 86.8683, -36.5311, 0.22 ) }
    dend_73 { pt3dadd( 16.027, 87.8459, -37.3697, 1.33 ) }
    dend_73 { pt3dadd( 16.3613, 88.6924, -38.0829, 1.77 ) }
    dend_73 { pt3dadd( 16.9591, 90.3209, -39.4313, 0.22 ) }
    dend_73 { pt3dadd( 17.2148, 91.0113, -39.9874, 0.22 ) }
    dend_73 { pt3dadd( 17.5646, 91.9345, -40.7041, 0.22 ) }
    dend_73 { pt3dadd( 17.975, 92.9761, -41.4857, 1.92 ) }
    dend_73 { pt3dadd( 18.1382, 93.3905, -41.7724, 2.28 ) }
    dend_73 { pt3dadd( 19.1926, 95.9, -43.3244, 0.22 ) }
    dend_73 { pt3dadd( 19.6195, 96.8347, -43.8469, 0.22 ) }
    dend_73 { pt3dadd( 19.9342, 97.449, -44.1744, 0.88 ) }
    dend_73 { pt3dadd( 20.0211, 97.5931, -44.2452, 0.88 ) }
    dend_73 { pt3dadd( 20.1229, 97.7323, -44.3115, 0.88 ) }
    dend_73 { pt3dadd( 21.197, 99.0053, -44.9431, 0.22 ) }
    dend_73 { pt3dadd( 21.962, 99.8081, -45.3619, 0.22 ) }
    dend_73 { pt3dadd( 22.0571, 99.9144, -45.4201, 0.22 ) }
    dend_73 { pt3dadd( 22.856, 100.836, -45.9419, 1.33 ) }
    dend_73 { pt3dadd( 23.1812, 101.229, -46.1607, 2.06 ) }
    dend_73 { pt3dadd( 23.6811, 101.868, -46.5323, 2.06 ) }
    dend_73 { pt3dadd( 24.8521, 103.474, -47.4717, 0.15 ) }
    dend_73 { pt3dadd( 25.1614, 103.91, -47.7316, 0.74 ) }
    dend_73 { pt3dadd( 25.2057, 103.972, -47.7677, 0.74 ) }
    dend_73 { pt3dadd( 25.4254, 104.292, -47.9514, 0.74 ) }
    dend_73 { pt3dadd( 26.1341, 105.335, -48.5059, 0.22 ) }
    dend_73 { pt3dadd( 26.5144, 105.887, -48.7653, 0.59 ) }
    dend_73 { pt3dadd( 26.56, 105.952, -48.7935, 0.59 ) }
    dend_73 { pt3dadd( 27.3433, 107.05, -49.3636, 0.15 ) }
    dend_73 { pt3dadd( 27.9634, 107.966, -49.854, 1.55 ) }
    dend_73 { pt3dadd( 28.1187, 108.206, -49.9843, 1.92 ) }
    dend_73 { pt3dadd( 28.1617, 108.273, -50.0188, 1.92 ) }
    dend_73 { pt3dadd( 28.3691, 108.625, -50.2019, 1.92 ) }
    dend_73 { pt3dadd( 29.4631, 110.537, -51.1763, 0.22 ) }
    dend_73 { pt3dadd( 29.7591, 110.991, -51.4251, 0.52 ) }
    dend_73 { pt3dadd( 29.8043, 111.053, -51.4602, 0.52 ) }
    dend_73 { pt3dadd( 30.4964, 111.83, -51.923, 0.22 ) }
    dend_73 { pt3dadd( 31.1002, 112.446, -52.3249, 1.55 ) }
    dend_73 { pt3dadd( 31.5459, 112.777, -52.6071, 1.55 ) }
    dend_73 { pt3dadd( 33.1646, 113.755, -53.5784, 0.15 ) }
    dend_73 { pt3dadd( 33.2212, 113.787, -53.6137, 0.15 ) }
    dend_73 { pt3dadd( 34.3363, 114.375, -54.3193, 0.15 ) }
    dend_73 { pt3dadd( 35.9861, 115.174, -55.3729, 2.21 ) }
    dend_73 { pt3dadd( 38.4449, 116.274, -56.8968, 0.22 ) }
    dend_73 { pt3dadd( 38.7199, 116.398, -57.0658, 0.37 ) }
    dend_73 { pt3dadd( 39.8569, 116.939, -57.7234, 0.22 ) }
    dend_73 { pt3dadd( 40.2654, 117.15, -57.9457, 0.59 ) }
    dend_73 { pt3dadd( 40.542, 117.306, -58.0838, 0.59 ) }
    dend_73 { pt3dadd( 41.4829, 117.896, -58.5134, 0.22 ) }
    dend_73 { pt3dadd( 41.8431, 118.176, -58.6962, 0.66 ) }
    dend_73 { pt3dadd( 42.828, 118.934, -59.245, 0.15 ) }
    dend_73 { pt3dadd( 43.539, 119.495, -59.6649, 1.77 ) }
    dend_73 { pt3dadd( 43.7128, 119.636, -59.779, 1.77 ) }
    dend_73 { pt3dadd( 45.3373, 120.926, -60.9152, 0.22 ) }
    dend_73 { pt3dadd( 45.9454, 121.36, -61.4539, 0.74 ) }
    dend_73 { pt3dadd( 46.5911, 121.772, -62.1255, 0.15 ) }
    dend_73 { pt3dadd( 46.9594, 121.99, -62.5818, 0.74 ) }
    dend_73 { pt3dadd( 47.5553, 122.359, -63.3872, 0.15 ) }
    dend_73 { pt3dadd( 48.0911, 122.712, -64.1453, 2.14 ) }
    dend_73 { pt3dadd( 49.7764, 123.995, -66.7209, 0.37 ) }
    dend_73 { pt3dadd( 50.4555, 124.637, -67.8227, 1.55 ) }
    dend_73 { pt3dadd( 51.6985, 126.02, -69.9549, 0.15 ) }
    dend_73 { pt3dadd( 52.2242, 126.718, -70.9098, 0.15 ) }
    dend_73 { pt3dadd( 52.4711, 127.106, -71.3859, 1.4 ) }
    dend_73 { pt3dadd( 53.2419, 128.533, -73.0638, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_73 { pt3dadd( 53.62, 129.268, -73.9317, 1.33 ) }
    dend_73 { pt3dadd( 53.6874, 129.375, -74.0782, 1.62 ) }
    dend_73 { pt3dadd( 54.716, 130.515, -75.9965, 0.15 ) }
    dend_73 { pt3dadd( 55.4175, 131.079, -77.1904, 1.18 ) }
    dend_73 { pt3dadd( 56.6369, 131.822, -79.0977, 0.88 ) }
    dend_73 { pt3dadd( 57.8105, 132.332, -80.7225, 0.44 ) }
    dend_73 { pt3dadd( 58.9224, 132.727, -82.1088, 1.77 ) }
    dend_73 { pt3dadd( 60.1313, 133.097, -83.3936, 0.22 ) }
    dend_73 { pt3dadd( 60.2038, 133.114, -83.4535, 0.22 ) }
    dend_73 { pt3dadd( 60.6822, 133.235, -83.7402, 0.66 ) }
    dend_73 { pt3dadd( 61.7861, 133.566, -84.1508, 0.15 ) }
    dend_73 { pt3dadd( 62.5819, 133.912, -84.3311, 1.11 ) }
    dend_73 { pt3dadd( 63.0763, 134.214, -84.4228, 1.11 ) }
    dend_73 { pt3dadd( 63.1527, 134.269, -84.4355, 1.11 ) }
    dend_73 { pt3dadd( 64.0115, 134.9, -84.5859, 0.22 ) }
    dend_73 { pt3dadd( 64.4067, 135.183, -84.6618, 0.59 ) }
    dend_73 { pt3dadd( 65.4123, 135.893, -84.867, 0.22 ) }
    dend_73 { pt3dadd( 66.2856, 136.5, -85.0722, 1.4 ) }
    dend_73 { pt3dadd( 66.3623, 136.552, -85.0901, 1.4 ) }
    dend_73 { pt3dadd( 66.4902, 136.638, -85.1194, 1.55 ) }
    dend_73 { pt3dadd( 68.1217, 137.668, -85.4791, 0.22 ) }
    dend_73 { pt3dadd( 68.1915, 137.709, -85.496, 0.22 ) }
    dend_73 { pt3dadd( 68.4585, 137.862, -85.5631, 0.22 ) }
    dend_73 { pt3dadd( 69.0178, 138.167, -85.7312, 0.81 ) }
    dend_73 { pt3dadd( 69.0871, 138.206, -85.7547, 0.81 ) }
    dend_73 { pt3dadd( 69.4254, 138.414, -85.8915, 0.81 ) }
    dend_73 { pt3dadd( 71.036, 139.449, -86.6057, 0.22 ) }
    dend_73 { pt3dadd( 71.5863, 139.798, -86.8559, 0.22 ) }
    dend_73 { pt3dadd( 72.7944, 140.548, -87.4132, 1.55 ) }
    dend_73 { pt3dadd( 72.8581, 140.59, -87.4455, 1.55 ) }
    dend_73 { pt3dadd( 74.4256, 141.661, -88.279, 0.22 ) }
    dend_73 { pt3dadd( 75.0208, 142.076, -88.6109, 0.22 ) }
    dend_73 { pt3dadd( 76.0592, 142.807, -89.2007, 1.62 ) }
    dend_73 { pt3dadd( 76.2569, 142.946, -89.3093, 1.99 ) }
    dend_73 { pt3dadd( 78.3093, 144.406, -90.3893, 0.22 ) }
    dend_73 { pt3dadd( 78.3807, 144.455, -90.4263, 0.22 ) }
    dend_73 { pt3dadd( 79.1544, 144.994, -90.8203, 0.74 ) }
    dend_73 { pt3dadd( 79.6241, 145.327, -91.0629, 0.74 ) }
    dend_73 { pt3dadd( 81.9596, 146.982, -92.2467, 0.15 ) }
    dend_73 { pt3dadd( 82.8278, 147.582, -92.667, 1.55 ) }
    dend_73 { pt3dadd( 82.8958, 147.625, -92.6955, 1.55 ) }
    dend_73 { pt3dadd( 83.2818, 147.876, -92.8576, 1.55 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 42/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 8.2191, 68.9779, -24.039, 0.29 ) }
    dend_72 { pt3dadd( 7.7069, 71.3858, -24.3795, 0.29 ) }
    dend_72 { pt3dadd( 7.59168, 71.9664, -24.4643, 0.44 ) }
    dend_72 { pt3dadd( 7.35102, 73.1462, -24.6269, 0.22 ) }
    dend_72 { pt3dadd( 7.03451, 74.7059, -24.8343, 1.55 ) }
    dend_72 { pt3dadd( 6.93391, 75.2113, -24.8967, 2.21 ) }
    dend_72 { pt3dadd( 6.78849, 75.9487, -24.9813, 1.84 ) }
    dend_72 { pt3dadd( 6.63463, 76.8836, -25.0767, 0.96 ) }
    dend_72 { pt3dadd( 6.53211, 77.4876, -25.1219, 0.44 ) }
    dend_72 { pt3dadd( 6.51506, 77.579, -25.1251, 0.44 ) }
    dend_72 { pt3dadd( 6.31427, 78.76, -25.1565, 0.29 ) }
    dend_72 { pt3dadd( 6.29378, 78.9277, -25.1597, 0.29 ) }
    dend_72 { pt3dadd( 6.22574, 79.7836, -25.1739, 0.29 ) }
    dend_72 { pt3dadd( 6.17813, 80.6296, -25.188, 0.81 ) }
    dend_72 { pt3dadd( 6.16361, 81.0504, -25.211, 1.11 ) }
    dend_72 { pt3dadd( 6.12832, 81.9005, -25.2926, 0.88 ) }
    dend_72 { pt3dadd( 6.07791, 83.6371, -25.5029, 0.22 ) }
    dend_72 { pt3dadd( 6.06212, 84.4855, -25.6304, 0.81 ) }
    dend_72 { pt3dadd( 6.05634, 85.158, -25.7517, 0.81 ) }
    dend_72 { pt3dadd( 6.03956, 87.174, -26.1519, 0.22 ) }
    dend_72 { pt3dadd( 6.01776, 88.6538, -26.4657, 1.84 ) }
    dend_72 { pt3dadd( 5.99606, 89.4264, -26.6394, 2.21 ) }
    dend_72 { pt3dadd( 5.96521, 90.1, -26.7971, 2.21 ) }
    dend_72 { pt3dadd( 5.86261, 92.6811, -27.359, 0.22 ) }
    dend_72 { pt3dadd( 5.83723, 93.5804, -27.5355, 0.81 ) }
    dend_72 { pt3dadd( 5.82929, 94.0059, -27.6047, 0.88 ) }
    dend_72 { pt3dadd( 5.82012, 94.437, -27.6639, 0.66 ) }
    dend_72 { pt3dadd( 5.76828, 95.7181, -27.8203, 0.22 ) }
    dend_72 { pt3dadd( 5.6796, 97.5071, -27.9995, 1.84 ) }
    dend_72 { pt3dadd( 5.66214, 98.0542, -28.0436, 2.21 ) }
    dend_72 { pt3dadd( 5.65534, 98.6018, -28.0822, 2.21 ) }
    dend_72 { pt3dadd( 5.66505, 100.976, -28.2273, 0.22 ) }
    dend_72 { pt3dadd( 5.68023, 101.821, -28.2764, 0.88 ) }
    dend_72 { pt3dadd( 5.68623, 102.079, -28.2901, 0.88 ) }
    dend_72 { pt3dadd( 5.73029, 103.826, -28.386, 0.22 ) }
    dend_72 { pt3dadd( 5.7836, 105.368, -28.5095, 0.22 ) }
    dend_72 { pt3dadd( 5.82714, 106.179, -28.5876, 1.33 ) }
    dend_72 { pt3dadd( 5.88076, 106.818, -28.6575, 1.62 ) }
    dend_72 { pt3dadd( 5.90181, 107.064, -28.6881, 1.62 ) }
    dend_72 { pt3dadd( 5.90867, 107.203, -28.7119, 1.62 ) }
    dend_72 { pt3dadd( 5.92902, 109.459, -29.1707, 0.22 ) }
    dend_72 { pt3dadd( 5.91271, 111.114, -29.5354, 0.22 ) }
    dend_72 { pt3dadd( 5.88071, 112.251, -29.7913, 1.4 ) }
    dend_72 { pt3dadd( 5.86168, 112.848, -29.9219, 1.69 ) }
    dend_72 { pt3dadd( 5.7719, 115.375, -30.4678, 0.22 ) }
    dend_72 { pt3dadd( 5.72828, 116.229, -30.6303, 0.96 ) }
    dend_72 { pt3dadd( 5.72185, 116.309, -30.642, 0.96 ) }
    dend_72 { pt3dadd( 5.68345, 116.658, -30.6843, 0.81 ) }
    dend_72 { pt3dadd( 5.4712, 118.273, -30.814, 0.22 ) }
    dend_72 { pt3dadd( 5.44668, 118.466, -30.8207, 0.22 ) }
    dend_72 { pt3dadd( 5.31951, 119.592, -30.8211, 0.22 ) }
    dend_72 { pt3dadd( 5.17041, 120.926, -30.8353, 1.69 ) }
    dend_72 { pt3dadd( 5.12257, 121.363, -30.8439, 2.43 ) }
    dend_72 { pt3dadd( 5.02086, 122.286, -30.8685, 2.36 ) }
    dend_72 { pt3dadd( 4.72142, 125.256, -30.9631, 0.22 ) }
    dend_72 { pt3dadd( 4.64363, 126.394, -31.0265, 0.22 ) }
    dend_72 { pt3dadd( 4.63717, 126.57, -31.041, 0.22 ) }
    dend_72 { pt3dadd( 4.62076, 128.021, -31.1753, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_72 { pt3dadd( 4.62954, 129.119, -31.2879, 1.11 ) }
    dend_72 { pt3dadd( 4.65513, 129.779, -31.3618, 1.4 ) }
    dend_72 { pt3dadd( 4.79061, 131.66, -31.5917, 0.22 ) }
    dend_72 { pt3dadd( 4.79681, 131.733, -31.6005, 0.22 ) }
    dend_72 { pt3dadd( 4.84895, 132.232, -31.6496, 0.22 ) }
    dend_72 { pt3dadd( 4.958, 133.275, -31.7226, 1.55 ) }
    dend_72 { pt3dadd( 5.00454, 133.812, -31.7437, 1.77 ) }
    dend_72 { pt3dadd( 5.011, 133.894, -31.7446, 1.77 ) }
    dend_72 { pt3dadd( 5.04213, 134.262, -31.7374, 1.77 ) }
    dend_72 { pt3dadd( 5.18531, 135.846, -31.7081, 0.22 ) }
    dend_72 { pt3dadd( 5.26839, 136.938, -31.6896, 0.66 ) }
    dend_72 { pt3dadd( 5.29989, 137.528, -31.6804, 0.66 ) }
    dend_72 { pt3dadd( 5.35306, 139.465, -31.6674, 0.22 ) }
    dend_72 { pt3dadd( 5.35346, 139.642, -31.6666, 0.22 ) }
    dend_72 { pt3dadd( 5.31863, 141.508, -31.6539, 0.22 ) }
    dend_72 { pt3dadd( 5.2479, 142.781, -31.6277, 1.11 ) }
    dend_72 { pt3dadd( 5.17944, 143.542, -31.5937, 1.99 ) }
    dend_72 { pt3dadd( 5.08913, 144.194, -31.5508, 1.55 ) }
    dend_72 { pt3dadd( 4.76859, 145.789, -31.4034, 0.22 ) }
    dend_72 { pt3dadd( 4.72007, 146.002, -31.3807, 0.22 ) }
    dend_72 { pt3dadd( 4.36705, 147.299, -31.2118, 0.22 ) }
    dend_72 { pt3dadd( 4.17491, 148.045, -31.0959, 0.88 ) }
    dend_72 { pt3dadd( 4.11839, 148.278, -31.059, 1.18 ) }
    dend_72 { pt3dadd( 4.10296, 148.356, -31.0409, 1.18 ) }
    dend_72 { pt3dadd( 4.00458, 149.088, -30.8519, 0.66 ) }
    dend_72 { pt3dadd( 3.96051, 149.5, -30.7479, 0.37 ) }
    dend_72 { pt3dadd( 3.83364, 150.575, -30.4919, 0.22 ) }
    dend_72 { pt3dadd( 3.71488, 151.368, -30.31, 0.59 ) }
    dend_72 { pt3dadd( 3.48933, 152.785, -30.0881, 0.52 ) }
    dend_72 { pt3dadd( 3.35572, 153.576, -29.9952, 0.66 ) }
    dend_72 { pt3dadd( 3.25544, 154.177, -29.9413, 0.22 ) }
    dend_72 { pt3dadd( 3.09872, 155.092, -29.8891, 1.47 ) }
    dend_72 { pt3dadd( 3.02285, 155.531, -29.8833, 2.14 ) }
    dend_72 { pt3dadd( 2.59036, 158.191, -29.9257, 0.22 ) }
    dend_72 { pt3dadd( 2.57984, 158.264, -29.9295, 0.22 ) }
    dend_72 { pt3dadd( 2.49578, 159.098, -29.9548, 1.11 ) }
    dend_72 { pt3dadd( 2.48853, 159.274, -29.9596, 1.47 ) }
    dend_72 { pt3dadd( 2.48832, 159.399, -29.9623, 1.47 ) }
    dend_72 { pt3dadd( 2.48802, 160.168, -29.9875, 0.81 ) }
    dend_72 { pt3dadd( 2.48326, 160.803, -30.0251, 0.29 ) }
    dend_72 { pt3dadd( 2.4709, 162.688, -30.1748, 0.22 ) }
    dend_72 { pt3dadd( 2.46006, 163.558, -30.2614, 0.96 ) }
    dend_72 { pt3dadd( 2.45892, 163.723, -30.2784, 0.96 ) }
    dend_72 { pt3dadd( 2.45837, 163.899, -30.2947, 0.96 ) }
    dend_72 { pt3dadd( 2.47395, 165.261, -30.4004, 0.22 ) }
    dend_72 { pt3dadd( 2.47625, 165.342, -30.405, 0.22 ) }
    dend_72 { pt3dadd( 2.51789, 166.177, -30.4343, 0.81 ) }
    dend_72 { pt3dadd( 2.53967, 166.599, -30.4451, 0.81 ) }
    dend_72 { pt3dadd( 2.62949, 168.575, -30.4731, 0.15 ) }
    dend_72 { pt3dadd( 2.66935, 169.914, -30.5007, 1.18 ) }
    dend_72 { pt3dadd( 2.67601, 170.289, -30.5088, 1.47 ) }
    dend_72 { pt3dadd( 2.67832, 170.358, -30.5149, 1.47 ) }
    dend_72 { pt3dadd( 2.69624, 170.695, -30.5691, 1.47 ) }
    dend_72 { pt3dadd( 2.80462, 172.529, -30.9692, 0.22 ) }
    dend_72 { pt3dadd( 2.88201, 173.556, -31.253, 1.11 ) }
    dend_72 { pt3dadd( 2.91806, 173.99, -31.3884, 1.47 ) }
    dend_72 { pt3dadd( 3.17212, 176.374, -32.2464, 0.15 ) }
    dend_72 { pt3dadd( 3.29177, 177.304, -32.6115, 0.81 ) }
    dend_72 { pt3dadd( 3.30331, 177.378, -32.6429, 0.81 ) }
    dend_72 { pt3dadd( 3.3829, 177.801, -32.8396, 0.81 ) }
    dend_72 { pt3dadd( 3.39529, 177.863, -32.8666, 0.81 ) }
    dend_72 { pt3dadd( 3.62363, 179.338, -33.4442, 0.22 ) }
    dend_72 { pt3dadd( 3.6741, 179.83, -33.5994, 0.37 ) }
    dend_72 { pt3dadd( 3.72916, 180.59, -33.8139, 0.22 ) }
    dend_72 { pt3dadd( 3.77474, 181.529, -34.0586, 1.18 ) }
    dend_72 { pt3dadd( 3.78718, 182.089, -34.1945, 1.47 ) }
    dend_72 { pt3dadd( 3.7969, 184.215, -34.6736, 0.22 ) }
    dend_72 { pt3dadd( 3.7831, 185.155, -34.8589, 1.03 ) }
    dend_72 { pt3dadd( 3.77715, 185.479, -34.9226, 1.03 ) }
    dend_72 { pt3dadd( 3.7553, 187.558, -35.3489, 0.22 ) }
    dend_72 { pt3dadd( 3.75235, 188.308, -35.5008, 0.22 ) }
    dend_72 { pt3dadd( 3.75272, 188.388, -35.5165, 0.22 ) }
    dend_72 { pt3dadd( 3.77433, 189.338, -35.658, 0.81 ) }
    dend_72 { pt3dadd( 3.79381, 189.924, -35.7294, 0.81 ) }
    dend_72 { pt3dadd( 3.84423, 191.666, -35.8903, 0.22 ) }
    dend_72 { pt3dadd( 3.86315, 192.858, -35.9247, 1.11 ) }
    dend_72 { pt3dadd( 3.86381, 193.115, -35.9226, 1.11 ) }
    dend_72 { pt3dadd( 3.82717, 195.26, -35.8163, 0.22 ) }
    dend_72 { pt3dadd( 3.79364, 196.207, -35.7373, 0.59 ) }
    dend_72 { pt3dadd( 3.70971, 197.734, -35.5629, 0.22 ) }
    dend_72 { pt3dadd( 3.60384, 199.027, -35.3702, 1.18 ) }
    dend_72 { pt3dadd( 3.55925, 199.526, -35.2922, 1.62 ) }
    dend_72 { pt3dadd( 3.36378, 201.417, -34.9718, 0.22 ) }
    dend_72 { pt3dadd( 3.28852, 202.003, -34.8665, 0.22 ) }
    dend_72 { pt3dadd( 3.19535, 202.653, -34.7409, 0.59 ) }
    dend_72 { pt3dadd( 3.14653, 202.983, -34.6756, 0.59 ) }
    dend_72 { pt3dadd( 3.13231, 203.076, -34.6597, 0.59 ) }
    dend_72 { pt3dadd( 2.96425, 204.108, -34.4661, 0.22 ) }
    dend_72 { pt3dadd( 2.87142, 204.673, -34.3405, 0.52 ) }
    dend_72 { pt3dadd( 2.84765, 204.842, -34.2981, 0.52 ) }
    dend_72 { pt3dadd( 2.83924, 204.92, -34.2768, 0.52 ) }
    dend_72 { pt3dadd( 2.77581, 206.313, -33.9554, 0.22 ) }
    dend_72 { pt3dadd( 2.7682, 207.386, -33.749, 1.11 ) }
    dend_72 { pt3dadd( 2.80373, 207.893, -33.6777, 1.47 ) }
    dend_72 { pt3dadd( 2.82343, 208.055, -33.6558, 1.47 ) }
    dend_72 { pt3dadd( 2.90879, 208.624, -33.5861, 1.47 ) }
    dend_72 { pt3dadd( 3.22695, 210.393, -33.392, 0.22 ) }
    dend_72 { pt3dadd( 3.24156, 210.46, -33.3865, 0.22 ) }
    dend_72 { pt3dadd( 3.52465, 211.778, -33.2951, 0.22 ) }
    dend_72 { pt3dadd( 3.74459, 212.904, -33.2336, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_72 { pt3dadd( 3.83534, 213.42, -33.1972, 1.55 ) }
    dend_72 { pt3dadd( 3.91829, 213.921, -33.1564, 1.55 ) }
    dend_72 { pt3dadd( 4.21647, 215.659, -32.9845, 0.22 ) }
    dend_72 { pt3dadd( 4.32968, 216.315, -32.9141, 0.74 ) }
    dend_72 { pt3dadd( 4.37131, 216.57, -32.8818, 0.74 ) }
    dend_72 { pt3dadd( 4.73945, 218.766, -32.5807, 0.22 ) }
    dend_72 { pt3dadd( 4.84644, 219.396, -32.4852, 0.74 ) }
    dend_72 { pt3dadd( 5.14804, 221.275, -32.1118, 0.22 ) }
    dend_72 { pt3dadd( 5.17986, 221.474, -32.0633, 0.22 ) }
    dend_72 { pt3dadd( 5.36152, 222.566, -31.7807, 0.74 ) }
    dend_72 { pt3dadd( 5.38184, 222.694, -31.7455, 0.74 ) }
    dend_72 { pt3dadd( 5.48068, 223.371, -31.5482, 1.03 ) }
    dend_72 { pt3dadd( 5.7989, 225.679, -30.886, 0.15 ) }
    dend_72 { pt3dadd( 5.80848, 225.76, -30.8647, 0.15 ) }
    dend_72 { pt3dadd( 5.97938, 227.177, -30.5433, 0.15 ) }
    dend_72 { pt3dadd( 6.06429, 227.869, -30.4083, 1.03 ) }
    dend_72 { pt3dadd( 6.10995, 228.245, -30.3529, 1.03 ) }
    dend_72 { pt3dadd( 6.22463, 229.375, -30.2548, 0.15 ) }
    dend_72 { pt3dadd( 6.30072, 230.296, -30.2493, 1.11 ) }
    dend_72 { pt3dadd( 6.32654, 230.745, -30.2552, 1.4 ) }
    dend_72 { pt3dadd( 6.32816, 230.815, -30.258, 1.4 ) }
    dend_72 { pt3dadd( 6.32463, 232.482, -30.3743, 0.22 ) }
    dend_72 { pt3dadd( 6.28895, 233.343, -30.4417, 0.59 ) }
    dend_72 { pt3dadd( 6.28298, 233.415, -30.448, 0.59 ) }
    dend_72 { pt3dadd( 6.25241, 233.669, -30.4678, 0.59 ) }
    dend_72 { pt3dadd( 6.11011, 234.695, -30.5494, 0.22 ) }
    dend_72 { pt3dadd( 5.99661, 235.439, -30.6099, 1.18 ) }
    dend_72 { pt3dadd( 5.85816, 236.186, -30.6751, 1.84 ) }
    dend_72 { pt3dadd( 5.77227, 236.61, -30.7179, 1.47 ) }
    dend_72 { pt3dadd( 5.26451, 238.732, -30.9532, 0.22 ) }
    dend_72 { pt3dadd( 5.0436, 239.531, -31.0515, 0.22 ) }
    dend_72 { pt3dadd( 5.02193, 239.596, -31.0605, 0.22 ) }
    dend_72 { pt3dadd( 4.7263, 240.35, -31.194, 0.81 ) }
    dend_72 { pt3dadd( 4.49596, 240.906, -31.3072, 1.62 ) }
    dend_72 { pt3dadd( 4.20387, 241.572, -31.4564, 2.28 ) }
    dend_72 { pt3dadd( 4.09397, 241.822, -31.5152, 2.5 ) }
    dend_72 { pt3dadd( 3.78772, 242.572, -31.6781, 2.14 ) }
    dend_72 { pt3dadd( 3.02675, 244.645, -32.1014, 0.22 ) }
    dend_72 { pt3dadd( 2.80412, 245.346, -32.2375, 0.59 ) }
    dend_72 { pt3dadd( 2.7816, 245.437, -32.253, 0.59 ) }
    dend_72 { pt3dadd( 2.61137, 246.328, -32.3816, 0.22 ) }
    dend_72 { pt3dadd( 2.51357, 246.999, -32.4507, 0.81 ) }
    dend_72 { pt3dadd( 2.50207, 247.108, -32.4576, 0.81 ) }
    dend_72 { pt3dadd( 2.46248, 247.535, -32.464, 0.81 ) }
    dend_72 { pt3dadd( 2.31105, 248.848, -32.4732, 0.22 ) }
    dend_72 { pt3dadd( 2.2185, 249.606, -32.4764, 0.44 ) }
    dend_72 { pt3dadd( 1.97149, 251.436, -32.4755, 0.15 ) }
    dend_72 { pt3dadd( 1.8809, 252.111, -32.4703, 0.15 ) }
    dend_72 { pt3dadd( 1.80146, 252.665, -32.4643, 0.59 ) }
    dend_72 { pt3dadd( 1.74765, 253.012, -32.4579, 0.59 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 50/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.31629, 38.4107, -6.65456, 1.55 ) }
    dend_27 { pt3dadd( -8.05518, 40.3576, -8.42467, 1.55 ) }
    dend_27 { pt3dadd( -8.04049, 40.4534, -8.50206, 1.55 ) }
    dend_27 { pt3dadd( -7.80881, 41.7485, -9.38397, 1.47 ) }
    dend_27 { pt3dadd( -7.79645, 41.8108, -9.41952, 1.47 ) }
    dend_27 { pt3dadd( -7.61394, 42.6836, -9.8716, 1.25 ) }
    dend_27 { pt3dadd( -7.30353, 44.1306, -10.5187, 1.25 ) }
    dend_27 { pt3dadd( -7.2644, 44.3034, -10.5652, 1.25 ) }
    dend_27 { pt3dadd( -7.00142, 45.3805, -10.806, 0.81 ) }
    dend_27 { pt3dadd( -6.69816, 46.5999, -11.0135, 1.18 ) }
    dend_27 { pt3dadd( -6.67002, 46.7179, -11.0309, 1.18 ) }
    dend_27 { pt3dadd( -6.3531, 48.1461, -11.2099, 1.84 ) }
    dend_27 { pt3dadd( -6.14189, 49.2241, -11.3243, 2.14 ) }
    dend_27 { pt3dadd( -5.95648, 50.3093, -11.4372, 2.14 ) }
    dend_27 { pt3dadd( -5.80071, 51.5553, -11.5746, 2.14 ) }
    dend_27 { pt3dadd( -5.79661, 51.6181, -11.5813, 2.14 ) }
    dend_27 { pt3dadd( -5.78964, 52.347, -11.6658, 1.77 ) }
    dend_27 { pt3dadd( -5.85244, 53.6991, -11.8355, 1.77 ) }
    dend_27 { pt3dadd( -5.96302, 54.6228, -11.9487, 1.47 ) }
    dend_27 { pt3dadd( -6.19458, 55.7885, -12.0737, 1.25 ) }
    dend_27 { pt3dadd( -6.52414, 56.9797, -12.2066, 1.62 ) }
    dend_27 { pt3dadd( -6.81524, 57.839, -12.3069, 1.84 ) }
    dend_27 { pt3dadd( -6.84371, 57.909, -12.3156, 1.84 ) }
    dend_27 { pt3dadd( -7.33763, 58.917, -12.4709, 1.99 ) }
    dend_27 { pt3dadd( -7.90847, 60.0434, -12.6615, 1.69 ) }
    dend_27 { pt3dadd( -8.40269, 61.1104, -12.8459, 1.47 ) }
    dend_27 { pt3dadd( -8.67905, 61.8751, -13.0237, 1.33 ) }
    dend_27 { pt3dadd( -8.69445, 61.9339, -13.0397, 1.33 ) }
    dend_27 { pt3dadd( -8.8262, 62.9721, -13.3748, 1.11 ) }
    dend_27 { pt3dadd( -8.77503, 64.0343, -13.7982, 0.88 ) }
    dend_27 { pt3dadd( -8.5727, 64.8973, -14.191, 0.96 ) }
    dend_27 { pt3dadd( -8.12144, 66.1937, -14.7728, 0.81 ) }
    dend_27 { pt3dadd( -8.08528, 66.2924, -14.8135, 0.81 ) }
    dend_27 { pt3dadd( -7.87744, 66.9108, -15.0441, 0.66 ) }
    dend_27 { pt3dadd( -7.82562, 67.0826, -15.1009, 0.66 ) }
    dend_27 { pt3dadd( -7.70588, 68.0944, -15.3681, 0.66 ) }
    dend_27 { pt3dadd( -7.75824, 68.9266, -15.5121, 0.96 ) }
    dend_27 { pt3dadd( -7.9578, 69.8332, -15.5896, 1.69 ) }
    dend_27 { pt3dadd( -8.07989, 70.2451, -15.6171, 1.99 ) }
    dend_27 { pt3dadd( -8.2422, 70.6659, -15.6449, 1.99 ) }
    dend_27 { pt3dadd( -8.64925, 71.6076, -15.7138, 1.84 ) }
    dend_27 { pt3dadd( -8.6816, 71.6737, -15.719, 1.84 ) }
    dend_27 { pt3dadd( -9.25768, 72.8148, -15.8357, 2.06 ) }
    dend_27 { pt3dadd( -9.45323, 73.2231, -15.8847, 2.21 ) }
    dend_27 { pt3dadd( -9.7652, 73.9461, -15.9737, 2.14 ) }
    dend_27 { pt3dadd( -10.1898, 75.0237, -16.1036, 1.18 ) }
    dend_27 { pt3dadd( -10.6398, 76.2919, -16.2479, 1.03 ) }
    dend_27 { pt3dadd( -10.9509, 77.249, -16.3424, 1.03 ) }
    dend_27 { pt3dadd( -11.2138, 78.1397, -16.4169, 1.33 ) }
    dend_27 { pt3dadd( -11.4906, 79.1822, -16.4887, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -11.658, 79.9444, -16.5246, 2.65 ) }
    dend_27 { pt3dadd( -11.8074, 80.7749, -16.5637, 2.65 ) }
    dend_27 { pt3dadd( -11.9457, 81.7731, -16.6207, 2.65 ) }
    dend_27 { pt3dadd( -11.9604, 81.9126, -16.6286, 2.65 ) }
    dend_27 { pt3dadd( -12.0167, 82.6055, -16.6703, 2.36 ) }
    dend_27 { pt3dadd( -12.0399, 83.4068, -16.7324, 2.06 ) }
    dend_27 { pt3dadd( -12.0383, 84.4332, -16.8219, 1.4 ) }
    dend_27 { pt3dadd( -12.0059, 85.5399, -16.9239, 0.81 ) }
    dend_27 { pt3dadd( -11.8905, 87.3299, -17.0911, 0.66 ) }
    dend_27 { pt3dadd( -11.7401, 88.8255, -17.2227, 0.66 ) }
    dend_27 { pt3dadd( -11.5194, 90.4392, -17.3564, 1.11 ) }
    dend_27 { pt3dadd( -11.5066, 90.5145, -17.3628, 1.11 ) }
    dend_27 { pt3dadd( -11.3009, 91.5007, -17.4424, 1.55 ) }
    dend_27 { pt3dadd( -11.0223, 92.6405, -17.5357, 1.84 ) }
    dend_27 { pt3dadd( -10.6746, 93.9336, -17.6489, 2.28 ) }
    dend_27 { pt3dadd( -10.5116, 94.5342, -17.7009, 2.58 ) }
    dend_27 { pt3dadd( -10.3167, 95.306, -17.7828, 2.58 ) }
    dend_27 { pt3dadd( -10.1912, 95.8668, -17.8541, 2.58 ) }
    dend_27 { pt3dadd( -10.0404, 96.7762, -18.0005, 2.36 ) }
    dend_27 { pt3dadd( -9.96091, 97.5608, -18.1555, 1.92 ) }
    dend_27 { pt3dadd( -9.95701, 97.6455, -18.1737, 1.92 ) }
    dend_27 { pt3dadd( -9.92665, 98.8969, -18.4379, 0.88 ) }
    dend_27 { pt3dadd( -9.92003, 100.118, -18.6779, 0.66 ) }
    dend_27 { pt3dadd( -9.92678, 101.384, -18.9327, 0.66 ) }
    dend_27 { pt3dadd( -9.93296, 102.202, -19.1097, 0.81 ) }
    dend_27 { pt3dadd( -9.9243, 103.099, -19.3149, 0.74 ) }
    dend_27 { pt3dadd( -9.90153, 104.004, -19.528, 0.59 ) }
    dend_27 { pt3dadd( -9.87314, 104.913, -19.7322, 1.25 ) }
    dend_27 { pt3dadd( -9.82274, 105.777, -19.9422, 1.84 ) }
    dend_27 { pt3dadd( -9.70603, 106.989, -20.241, 2.5 ) }
    dend_27 { pt3dadd( -9.61696, 107.716, -20.4318, 2.65 ) }
    dend_27 { pt3dadd( -9.59931, 107.834, -20.4698, 2.65 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.31629, 38.4107, -6.65456, 0.52 ) }
    dend_26 { pt3dadd( -8.17467, 39.9319, -6.30965, 0.52 ) }
    dend_26 { pt3dadd( -8.17262, 40.0063, -6.29313, 0.52 ) }
    dend_26 { pt3dadd( -8.23715, 40.7321, -6.15901, 0.52 ) }
    dend_26 { pt3dadd( -8.51657, 42.0754, -5.97845, 0.52 ) }
    dend_26 { pt3dadd( -8.53652, 42.1479, -5.97102, 0.52 ) }
    dend_26 { pt3dadd( -8.6522, 42.4743, -5.95111, 0.66 ) }
    dend_26 { pt3dadd( -8.7188, 42.5679, -5.94648, 0.66 ) }
    dend_26 { pt3dadd( -9.15468, 43.0747, -5.96025, 0.52 ) }
    dend_26 { pt3dadd( -9.52643, 43.4371, -5.99511, 0.66 ) }
    dend_26 { pt3dadd( -9.59118, 43.4951, -6.00031, 0.66 ) }
    dend_26 { pt3dadd( -9.99941, 43.8559, -6.00929, 0.59 ) }
    dend_26 { pt3dadd( -10.6386, 44.4182, -5.99628, 0.29 ) }
    dend_26 { pt3dadd( -11.1874, 44.9089, -5.94994, 0.29 ) }
    dend_26 { pt3dadd( -11.2891, 44.9999, -5.93427, 0.29 ) }
    dend_26 { pt3dadd( -11.9682, 45.619, -5.79172, 0.59 ) }
    dend_26 { pt3dadd( -12.4227, 46.0401, -5.70309, 0.81 ) }
    dend_26 { pt3dadd( -12.4792, 46.0917, -5.69506, 0.81 ) }
    dend_26 { pt3dadd( -12.8616, 46.424, -5.68151, 0.81 ) }
    dend_26 { pt3dadd( -12.9121, 46.4616, -5.68482, 0.81 ) }
    dend_26 { pt3dadd( -13.4041, 46.7832, -5.756, 0.81 ) }
    dend_26 { pt3dadd( -14.2515, 47.3375, -5.90875, 0.37 ) }
    dend_26 { pt3dadd( -14.8535, 47.7539, -5.96941, 0.37 ) }
    dend_26 { pt3dadd( -15.3537, 48.1166, -5.97995, 0.59 ) }
    dend_26 { pt3dadd( -15.7871, 48.4501, -5.94978, 0.81 ) }
    dend_26 { pt3dadd( -16.5115, 49.026, -5.83492, 0.29 ) }
    dend_26 { pt3dadd( -17.2349, 49.6179, -5.66826, 0.52 ) }
    dend_26 { pt3dadd( -18.0478, 50.3123, -5.41434, 1.33 ) }
    dend_26 { pt3dadd( -18.4161, 50.639, -5.2785, 1.55 ) }
    dend_26 { pt3dadd( -19.5076, 51.6315, -4.83217, 0.29 ) }
    dend_26 { pt3dadd( -20.3707, 52.4193, -4.47581, 1.55 ) }
    dend_26 { pt3dadd( -20.5708, 52.5987, -4.41107, 1.84 ) }
    dend_26 { pt3dadd( -20.6702, 52.6822, -4.39793, 1.84 ) }
    dend_26 { pt3dadd( -20.9319, 52.9078, -4.42861, 1.84 ) }
    dend_26 { pt3dadd( -20.9763, 52.9504, -4.44347, 1.84 ) }
    dend_26 { pt3dadd( -21.2841, 53.2845, -4.63048, 1.62 ) }
    dend_26 { pt3dadd( -21.8685, 53.9586, -5.09021, 0.37 ) }
    dend_26 { pt3dadd( -22.3331, 54.5431, -5.51133, 0.29 ) }
    dend_26 { pt3dadd( -22.6635, 55.0328, -5.86837, 0.59 ) }
    dend_26 { pt3dadd( -22.8604, 55.3679, -6.12614, 0.59 ) }
    dend_26 { pt3dadd( -22.9932, 55.6113, -6.31724, 0.59 ) }
    dend_26 { pt3dadd( -23.1595, 55.9511, -6.5864, 0.52 ) }
    dend_26 { pt3dadd( -23.4627, 56.681, -7.09945, 0.29 ) }
    dend_26 { pt3dadd( -23.654, 57.2347, -7.46433, 0.74 ) }
    dend_26 { pt3dadd( -23.8905, 57.8915, -7.86995, 0.66 ) }
    dend_26 { pt3dadd( -24.0308, 58.248, -8.07742, 0.88 ) }
    dend_26 { pt3dadd( -24.2966, 58.867, -8.41487, 0.66 ) }
    dend_26 { pt3dadd( -25.0766, 60.4787, -9.23834, 2.14 ) }
    dend_26 { pt3dadd( -25.3993, 61.0599, -9.52082, 2.14 ) }
    dend_26 { pt3dadd( -26.103, 62.2135, -10.0602, 0.22 ) }
    dend_26 { pt3dadd( -26.4967, 62.8157, -10.3238, 0.22 ) }
    dend_26 { pt3dadd( -26.9282, 63.4464, -10.5837, 0.22 ) }
    dend_26 { pt3dadd( -27.3818, 64.0328, -10.7908, 0.88 ) }
    dend_26 { pt3dadd( -27.6357, 64.3168, -10.8724, 1.03 ) }
    dend_26 { pt3dadd( -27.9663, 64.6522, -10.9474, 0.74 ) }
    dend_26 { pt3dadd( -28.7888, 65.4582, -11.0848, 0.22 ) }
    dend_26 { pt3dadd( -29.2972, 65.9358, -11.1445, 0.22 ) }
    dend_26 { pt3dadd( -29.9773, 66.5817, -11.2237, 0.22 ) }
    dend_26 { pt3dadd( -30.0682, 66.6695, -11.2346, 0.22 ) }
    dend_26 { pt3dadd( -30.7122, 67.3231, -11.3129, 0.22 ) }
    dend_26 { pt3dadd( -31.6554, 68.284, -11.4495, 1.69 ) }
    dend_26 { pt3dadd( -31.9684, 68.6421, -11.5051, 2.21 ) }
    dend_26 { pt3dadd( -32.4679, 69.2624, -11.6158, 2.21 ) }
    dend_26 { pt3dadd( -32.5046, 69.3142, -11.6233, 2.21 ) }
    dend_26 { pt3dadd( -33.2508, 70.4885, -11.7333, 0.22 ) }
    dend_26 { pt3dadd( -33.6969, 71.2696, -11.7688, 0.22 ) }
    dend_26 { pt3dadd( -34.4373, 72.5793, -11.7468, 0.22 ) }
    dend_26 { pt3dadd( -34.4936, 72.6781, -11.7419, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -35.0485, 73.6007, -11.6634, 1.11 ) }
    dend_26 { pt3dadd( -35.4536, 74.2801, -11.6108, 1.11 ) }
    dend_26 { pt3dadd( -35.8202, 74.8858, -11.5484, 0.59 ) }
    dend_26 { pt3dadd( -36.5253, 76.0261, -11.4152, 1.69 ) }
    dend_26 { pt3dadd( -36.7154, 76.319, -11.3824, 1.77 ) }
    dend_26 { pt3dadd( -37.9365, 78.2026, -11.214, 0.22 ) }
    dend_26 { pt3dadd( -38.94, 79.7126, -11.078, 0.22 ) }
    dend_26 { pt3dadd( -39.3262, 80.2838, -11.0124, 1.03 ) }
    dend_26 { pt3dadd( -39.6197, 80.7149, -10.9557, 1.03 ) }
    dend_26 { pt3dadd( -39.8836, 81.099, -10.9019, 0.81 ) }
    dend_26 { pt3dadd( -40.6674, 82.1025, -10.7195, 0.22 ) }
    dend_26 { pt3dadd( -41.6328, 83.1844, -10.4852, 1.11 ) }
    dend_26 { pt3dadd( -41.8251, 83.378, -10.4444, 1.62 ) }
    dend_26 { pt3dadd( -42.1035, 83.6381, -10.3761, 1.62 ) }
    dend_26 { pt3dadd( -42.1503, 83.6785, -10.3625, 1.62 ) }
    dend_26 { pt3dadd( -43.9137, 85.106, -9.77195, 0.22 ) }
    dend_26 { pt3dadd( -44.576, 85.6198, -9.53701, 0.81 ) }
    dend_26 { pt3dadd( -44.8719, 85.8471, -9.43416, 0.81 ) }
    dend_26 { pt3dadd( -46.3027, 86.9419, -8.91796, 0.22 ) }
    dend_26 { pt3dadd( -46.3584, 86.9849, -8.89616, 0.22 ) }
    dend_26 { pt3dadd( -47.2938, 87.7213, -8.49302, 1.18 ) }
    dend_26 { pt3dadd( -47.7308, 88.0853, -8.23048, 1.55 ) }
    dend_26 { pt3dadd( -53.2746, 97.1953, -9.00102, 1.55 ) }
    dend_26 { pt3dadd( -59.1449, 106.118, -9.22233, 1.55 ) }
    dend_26 { pt3dadd( -66.2456, 113.969, -9.89736, 1.55 ) }
    dend_26 { pt3dadd( -73.6984, 121.479, -9.39064, 1.55 ) }
    dend_26 { pt3dadd( -82.3013, 127.229, -7.65953, 1.55 ) }
    dend_26 { pt3dadd( -90.5332, 133.609, -6.12583, 1.55 ) }
    dend_26 { pt3dadd( -97.294, 141.085, -2.84034, 1.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.56189, 54.5874, 2.80844, 0.88 ) }
    dend_24 { pt3dadd( -3.88114, 55.2539, 5.83467, 0.88 ) }
    dend_24 { pt3dadd( -3.96244, 55.2756, 6.01917, 0.88 ) }
    dend_24 { pt3dadd( -4.95157, 55.3172, 8.11041, 0.88 ) }
    dend_24 { pt3dadd( -4.99261, 55.3147, 8.19437, 0.88 ) }
    dend_24 { pt3dadd( -6.54858, 55.1839, 12.948, 0.59 ) }
    dend_24 { pt3dadd( -6.57913, 55.1831, 13.0527, 0.59 ) }
    dend_24 { pt3dadd( -6.97239, 55.1643, 14.6022, 1.18 ) }
    dend_24 { pt3dadd( -7.47336, 55.1792, 16.7221, 1.18 ) }
    dend_24 { pt3dadd( -7.49171, 55.182, 16.8138, 1.18 ) }
    dend_24 { pt3dadd( -8.72181, 56.1224, 24.5584, 0.22 ) }
    dend_24 { pt3dadd( -8.81084, 56.3521, 25.4585, 0.29 ) }
    dend_24 { pt3dadd( -8.93985, 56.9255, 27.1841, 1.11 ) }
    dend_24 { pt3dadd( -8.94474, 56.971, 27.289, 1.11 ) }
    dend_24 { pt3dadd( -8.95174, 57.5433, 28.4261, 1.11 ) }
    dend_24 { pt3dadd( -8.96098, 58.7547, 30.501, 0.22 ) }
    dend_24 { pt3dadd( -8.95947, 59.7803, 31.4857, 0.59 ) }
    dend_24 { pt3dadd( -8.95295, 59.8478, 31.5534, 0.59 ) }
    dend_24 { pt3dadd( -8.87225, 60.2647, 31.9537, 1.11 ) }
    dend_24 { pt3dadd( -13.5545, 63.5167, 46.5048, 1.11 ) }
    dend_24 { pt3dadd( -21.7668, 66.9429, 59.3584, 1.11 ) }
    dend_24 { pt3dadd( -26.8647, 72.1975, 73.2313, 1.11 ) }
    dend_24 { pt3dadd( -33.4103, 77.8181, 86.3483, 1.11 ) }
    dend_24 { pt3dadd( -39.7056, 84.2846, 99.2356, 1.11 ) }
    dend_24 { pt3dadd( -45.4767, 91.6415, 111.937, 1.11 ) }
    dend_24 { pt3dadd( -51.9742, 99.5605, 123.965, 1.11 ) }
    dend_24 { pt3dadd( -57.787, 106.035, 137.073, 1.11 ) }
    dend_24 { pt3dadd( -61.8908, 112.466, 150.83, 1.11 ) }
    dend_24 { pt3dadd( -66.4335, 118.672, 164.541, 1.11 ) }
    dend_24 { pt3dadd( -69.8841, 126.924, 177.582, 1.11 ) }
    dend_24 { pt3dadd( -73.6734, 135.913, 190.078, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 60/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.56189, 54.5874, 2.80844, 0.52 ) }
    dend_23 { pt3dadd( -2.19107, 55.8844, 3.47702, 0.52 ) }
    dend_23 { pt3dadd( -1.97871, 57.0078, 4.01871, 0.52 ) }
    dend_23 { pt3dadd( -1.97601, 57.0631, 4.04266, 0.44 ) }
    dend_23 { pt3dadd( -2.02111, 57.9992, 4.39368, 0.44 ) }
    dend_23 { pt3dadd( -2.02865, 58.0766, 4.4175, 0.44 ) }
    dend_23 { pt3dadd( -2.11033, 58.8087, 4.60191, 0.66 ) }
    dend_23 { pt3dadd( -2.12528, 58.8769, 4.61678, 0.66 ) }
    dend_23 { pt3dadd( -2.29009, 59.5754, 4.78274, 0.66 ) }
    dend_23 { pt3dadd( -2.40579, 60.1449, 4.95347, 0.44 ) }
    dend_23 { pt3dadd( -2.52884, 60.9763, 5.29399, 0.44 ) }
    dend_23 { pt3dadd( -2.60348, 61.7165, 5.65207, 0.96 ) }
    dend_23 { pt3dadd( -2.61912, 62.7733, 6.20618, 0.81 ) }
    dend_23 { pt3dadd( -2.61079, 62.9318, 6.29193, 0.81 ) }
    dend_23 { pt3dadd( -2.43801, 64.0227, 6.89011, 0.66 ) }
    dend_23 { pt3dadd( -2.16073, 65.0295, 7.48524, 0.44 ) }
    dend_23 { pt3dadd( -2.11071, 65.153, 7.55901, 0.44 ) }
    dend_23 { pt3dadd( -1.70916, 65.9225, 7.99665, 0.29 ) }
    dend_23 { pt3dadd( -1.44912, 66.3133, 8.20618, 0.29 ) }
    dend_23 { pt3dadd( -1.00718, 66.9202, 8.52038, 1.11 ) }
    dend_23 { pt3dadd( -0.361975, 67.71, 8.91993, 1.47 ) }
    dend_23 { pt3dadd( 0.00387323, 68.1597, 9.16037, 1.47 ) }
    dend_23 { pt3dadd( 0.0368701, 68.2017, 9.18611, 1.47 ) }
    dend_23 { pt3dadd( 0.773773, 69.1524, 9.85832, 0.88 ) }
    dend_23 { pt3dadd( 1.30852, 69.8636, 10.3984, 0.52 ) }
    dend_23 { pt3dadd( 1.33776, 69.9044, 10.4298, 0.52 ) }
    dend_23 { pt3dadd( 1.75891, 70.5053, 10.8652, 0.74 ) }
    dend_23 { pt3dadd( 1.78876, 70.5467, 10.8953, 0.74 ) }
    dend_23 { pt3dadd( 2.09282, 70.9471, 11.149, 0.74 ) }
    dend_23 { pt3dadd( 2.12816, 70.9897, 11.1703, 0.74 ) }
    dend_23 { pt3dadd( 2.4415, 71.3446, 11.3069, 0.74 ) }
    dend_23 { pt3dadd( 3.1539, 72.2106, 11.55, 0.37 ) }
    dend_23 { pt3dadd( 3.51812, 72.7064, 11.6462, 0.37 ) }
    dend_23 { pt3dadd( 3.95439, 73.407, 11.7483, 0.52 ) }
    dend_23 { pt3dadd( 4.26218, 74.0187, 11.8353, 0.37 ) }
    dend_23 { pt3dadd( 4.66288, 75.0288, 11.9751, 0.74 ) }
    dend_23 { pt3dadd( 4.85957, 75.7912, 12.0762, 1.11 ) }
    dend_23 { pt3dadd( 4.95649, 76.521, 12.1646, 0.96 ) }
    dend_23 { pt3dadd( 4.96503, 77.4345, 12.2931, 0.44 ) }
    dend_23 { pt3dadd( 4.86087, 78.502, 12.4667, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_23 { pt3dadd( 4.7797, 79.0159, 12.5624, 0.29 ) }
    dend_23 { pt3dadd( 4.63869, 79.7886, 12.7154, 0.29 ) }
    dend_23 { pt3dadd( 4.62779, 79.8581, 12.7285, 0.29 ) }
    dend_23 { pt3dadd( 4.54901, 80.5968, 12.8566, 0.37 ) }
    dend_23 { pt3dadd( 4.5095, 81.516, 12.9868, 0.52 ) }
    dend_23 { pt3dadd( 4.53919, 82.3677, 13.0665, 1.11 ) }
    dend_23 { pt3dadd( 4.60104, 82.9576, 13.1162, 1.69 ) }
    dend_23 { pt3dadd( 4.65678, 83.385, 13.1478, 1.77 ) }
    dend_23 { pt3dadd( 4.70179, 83.8831, 13.1835, 1.69 ) }
    dend_23 { pt3dadd( 4.73005, 84.3846, 13.2179, 1.47 ) }
    dend_23 { pt3dadd( 4.72087, 84.7204, 13.2402, 1.47 ) }
    dend_23 { pt3dadd( 4.70913, 84.793, 13.2446, 1.47 ) }
    dend_23 { pt3dadd( 4.37769, 86.0629, 13.3396, 0.29 ) }
    dend_23 { pt3dadd( 4.19223, 86.6325, 13.3863, 0.66 ) }
    dend_23 { pt3dadd( 4.16958, 86.6996, 13.3944, 0.66 ) }
    dend_23 { pt3dadd( 4.07133, 87.0163, 13.4438, 0.37 ) }
    dend_23 { pt3dadd( 3.90469, 87.6911, 13.5738, 0.29 ) }
    dend_23 { pt3dadd( 3.76048, 88.5018, 13.7473, 0.29 ) }
    dend_23 { pt3dadd( 3.75431, 88.5712, 13.7631, 0.29 ) }
    dend_23 { pt3dadd( 3.74357, 89.445, 13.9469, 1.03 ) }
    dend_23 { pt3dadd( 3.76886, 90.1821, 14.088, 1.69 ) }
    dend_23 { pt3dadd( 3.83633, 90.9689, 14.2138, 2.14 ) }
    dend_23 { pt3dadd( 3.87192, 91.328, 14.2634, 2.28 ) }
    dend_23 { pt3dadd( 3.89861, 91.9028, 14.3166, 1.77 ) }
    dend_23 { pt3dadd( 3.89535, 92.5686, 14.3478, 1.18 ) }
    dend_23 { pt3dadd( 3.84817, 93.2631, 14.3424, 0.52 ) }
    dend_23 { pt3dadd( 3.76913, 93.9326, 14.322, 0.37 ) }
    dend_23 { pt3dadd( 3.68741, 94.3964, 14.2795, 0.37 ) }
    dend_23 { pt3dadd( 3.50266, 95.3637, 14.1683, 0.74 ) }
    dend_23 { pt3dadd( 3.43993, 95.7176, 14.1186, 1.25 ) }
    dend_23 { pt3dadd( 3.34019, 96.2988, 14.0223, 1.4 ) }
    dend_23 { pt3dadd( 3.22168, 97.0996, 13.8778, 0.81 ) }
    dend_23 { pt3dadd( 3.03539, 98.7156, 13.5831, 0.37 ) }
    dend_23 { pt3dadd( 2.97451, 99.6009, 13.4195, 0.37 ) }
    dend_23 { pt3dadd( 2.92592, 101.033, 13.1655, 0.29 ) }
    dend_23 { pt3dadd( 2.91612, 102.126, 12.9744, 1.84 ) }
    dend_23 { pt3dadd( 2.92819, 102.535, 12.9052, 2.28 ) }
    dend_23 { pt3dadd( 2.97627, 103.152, 12.8074, 2.14 ) }
    dend_23 { pt3dadd( 3.14607, 104.476, 12.6507, 0.52 ) }
    dend_23 { pt3dadd( 3.25913, 105.221, 12.5759, 0.74 ) }
    dend_23 { pt3dadd( 3.34278, 105.739, 12.5438, 0.74 ) }
    dend_23 { pt3dadd( 3.4563, 106.465, 12.5226, 0.22 ) }
    dend_23 { pt3dadd( 3.50287, 106.917, 12.5188, 0.22 ) }
    dend_23 { pt3dadd( 3.51779, 107.828, 12.5126, 0.74 ) }
    dend_23 { pt3dadd( 3.4937, 108.062, 12.5077, 0.74 ) }
    dend_23 { pt3dadd( 3.3642, 108.829, 12.4734, 0.22 ) }
    dend_23 { pt3dadd( 3.24479, 109.401, 12.4392, 0.74 ) }
    dend_23 { pt3dadd( 3.13575, 109.876, 12.4037, 0.96 ) }
    dend_23 { pt3dadd( 2.9044, 110.988, 12.3072, 0.37 ) }
    dend_23 { pt3dadd( 2.68034, 112.342, 12.168, 1.25 ) }
    dend_23 { pt3dadd( 2.63374, 112.817, 12.1188, 1.55 ) }
    dend_23 { pt3dadd( 2.62197, 113.191, 12.0903, 1.77 ) }
    dend_23 { pt3dadd( 2.6255, 113.82, 12.0717, 1.77 ) }
    dend_23 { pt3dadd( 2.64847, 114.653, 12.0829, 0.88 ) }
    dend_23 { pt3dadd( 2.67241, 115.2, 12.1161, 0.52 ) }
    dend_23 { pt3dadd( 2.70676, 116.056, 12.2036, 0.44 ) }
    dend_23 { pt3dadd( 2.72873, 117.151, 12.2965, 0.29 ) }
    dend_23 { pt3dadd( 2.71531, 118.491, 12.3954, 1.25 ) }
    dend_23 { pt3dadd( 2.69371, 119.078, 12.4345, 2.21 ) }
    dend_23 { pt3dadd( 2.66916, 119.478, 12.4568, 2.5 ) }
    dend_23 { pt3dadd( 2.60708, 120.31, 12.4906, 2.28 ) }
    dend_23 { pt3dadd( 2.44991, 121.717, 12.478, 0.66 ) }
    dend_23 { pt3dadd( 2.35513, 122.475, 12.4355, 0.52 ) }
    dend_23 { pt3dadd( 2.25157, 123.293, 12.3694, 0.66 ) }
    dend_23 { pt3dadd( 2.17894, 123.884, 12.3162, 0.96 ) }
    dend_23 { pt3dadd( 2.08848, 124.634, 12.2378, 0.96 ) }
    dend_23 { pt3dadd( 1.87752, 126.441, 12.0216, 0.22 ) }
    dend_23 { pt3dadd( 1.81044, 127.192, 11.9385, 1.18 ) }
    dend_23 { pt3dadd( 1.79141, 127.609, 11.8834, 0.88 ) }
    dend_23 { pt3dadd( 1.79197, 128.172, 11.7981, 0.74 ) }
    dend_23 { pt3dadd( 1.83603, 128.9, 11.6818, 0.29 ) }
    dend_23 { pt3dadd( 1.84656, 128.969, 11.6709, 0.29 ) }
    dend_23 { pt3dadd( 2.03267, 129.577, 11.5926, 0.81 ) }
    dend_23 { pt3dadd( 2.05063, 129.645, 11.5811, 0.81 ) }
    dend_23 { pt3dadd( 2.11934, 130.069, 11.5102, 1.03 ) }
    dend_23 { pt3dadd( 2.13868, 130.284, 11.4756, 1.03 ) }
    dend_23 { pt3dadd( 2.1351, 130.575, 11.4346, 1.03 ) }
    dend_23 { pt3dadd( 1.94796, 131.883, 11.2223, 0.29 ) }
    dend_23 { pt3dadd( 1.7072, 132.837, 11.0516, 0.29 ) }
    dend_23 { pt3dadd( 1.53218, 133.433, 10.9429, 0.59 ) }
    dend_23 { pt3dadd( 1.48594, 133.576, 10.9171, 0.59 ) }
    dend_23 { pt3dadd( 1.32103, 134.121, 10.8221, 0.37 ) }
    dend_23 { pt3dadd( 1.08862, 135.08, 10.6718, 0.29 ) }
    dend_23 { pt3dadd( 0.920579, 136.127, 10.5416, 1.11 ) }
    dend_23 { pt3dadd( 0.894154, 136.556, 10.4975, 1.69 ) }
    dend_23 { pt3dadd( 0.895586, 137.024, 10.4557, 1.84 ) }
    dend_23 { pt3dadd( 0.924419, 137.769, 10.4024, 1.62 ) }
    dend_23 { pt3dadd( 1.01278, 138.824, 10.3503, 0.74 ) }
    dend_23 { pt3dadd( 1.13555, 139.824, 10.3351, 0.52 ) }
    dend_23 { pt3dadd( 1.14551, 139.897, 10.3346, 0.52 ) }
    dend_23 { pt3dadd( 1.27259, 140.991, 10.3316, 0.37 ) }
    dend_23 { pt3dadd( 1.27921, 141.072, 10.3309, 0.37 ) }
    dend_23 { pt3dadd( 1.2877, 141.757, 10.325, 1.25 ) }
    dend_23 { pt3dadd( 1.24994, 142.236, 10.2878, 0.96 ) }
    dend_23 { pt3dadd( 1.24142, 142.306, 10.279, 0.96 ) }
    dend_23 { pt3dadd( 1.15324, 142.957, 10.188, 0.74 ) }
    dend_23 { pt3dadd( 1.05447, 143.626, 10.068, 0.59 ) }
    dend_23 { pt3dadd( 0.967983, 144.179, 9.96551, 0.74 ) }
    dend_23 { pt3dadd( 0.709569, 145.637, 9.69608, 0.37 ) }
    dend_23 { pt3dadd( 0.539627, 146.534, 9.53363, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 0.391, 147.306, 9.39822, 0.52 ) }
    dend_23 { pt3dadd( 0.172292, 148.297, 9.21836, 0.29 ) }
    dend_23 { pt3dadd( -0.0314819, 149.068, 9.06876, 0.81 ) }
    dend_23 { pt3dadd( -0.196689, 149.581, 8.95908, 1.18 ) }
    dend_23 { pt3dadd( -0.220564, 149.638, 8.94641, 1.18 ) }
    dend_23 { pt3dadd( -0.34796, 149.917, 8.87577, 1.18 ) }
    dend_23 { pt3dadd( -0.698922, 150.779, 8.67048, 1.18 ) }
    dend_23 { pt3dadd( -0.95192, 151.519, 8.51801, 0.44 ) }
    dend_23 { pt3dadd( -1.17477, 152.337, 8.36093, 0.29 ) }
    dend_23 { pt3dadd( -1.20861, 152.499, 8.33384, 0.29 ) }
    dend_23 { pt3dadd( -1.36857, 153.634, 8.18062, 0.29 ) }
    dend_23 { pt3dadd( -1.47096, 155.198, 8.03031, 1.62 ) }
    dend_23 { pt3dadd( -1.47541, 155.737, 8.00249, 2.65 ) }
    dend_23 { pt3dadd( -1.47045, 156.275, 7.99258, 2.87 ) }
    dend_23 { pt3dadd( -1.45833, 156.874, 7.99279, 2.36 ) }
    dend_23 { pt3dadd( -1.44551, 157.707, 8.00095, 1.69 ) }
    dend_23 { pt3dadd( -1.44022, 159.019, 8.01353, 0.52 ) }
    dend_23 { pt3dadd( -1.43379, 160.05, 8.02314, 0.52 ) }
    dend_23 { pt3dadd( -1.4382, 160.566, 8.02424, 0.81 ) }
    dend_23 { pt3dadd( -1.45412, 161.306, 8.01761, 0.44 ) }
    dend_23 { pt3dadd( -1.483, 162.359, 7.99526, 0.44 ) }
    dend_23 { pt3dadd( -1.5134, 163.141, 7.96982, 0.37 ) }
    dend_23 { pt3dadd( -1.51519, 163.212, 7.9664, 0.37 ) }
    dend_23 { pt3dadd( -1.49978, 164.115, 7.90388, 0.37 ) }
    dend_23 { pt3dadd( -1.49184, 164.246, 7.89336, 0.37 ) }
    dend_23 { pt3dadd( -1.41141, 165.19, 7.81124, 1.62 ) }
    dend_23 { pt3dadd( -1.34579, 165.802, 7.76168, 2.36 ) }
    dend_23 { pt3dadd( -1.28853, 166.273, 7.72889, 2.36 ) }
    dend_23 { pt3dadd( -1.08903, 167.797, 7.63168, 0.29 ) }
    dend_23 { pt3dadd( -0.98367, 168.529, 7.58764, 0.29 ) }
    dend_23 { pt3dadd( -0.870459, 169.282, 7.55166, 0.37 ) }
    dend_23 { pt3dadd( -0.71381, 170.25, 7.51402, 0.37 ) }
    dend_23 { pt3dadd( -0.655917, 170.635, 7.48892, 0.59 ) }
    dend_23 { pt3dadd( -0.608939, 171.035, 7.44661, 0.59 ) }
    dend_23 { pt3dadd( -0.604342, 171.094, 7.43717, 0.59 ) }
    dend_23 { pt3dadd( -0.564473, 172.589, 7.14257, 0.29 ) }
    dend_23 { pt3dadd( -0.567189, 174.428, 6.71562, 0.29 ) }
    dend_23 { pt3dadd( -0.593034, 175.313, 6.47407, 0.96 ) }
    dend_23 { pt3dadd( -0.636618, 176.102, 6.2342, 1.18 ) }
    dend_23 { pt3dadd( -0.69475, 176.711, 6.03892, 0.66 ) }
    dend_23 { pt3dadd( -0.776908, 177.312, 5.84236, 0.44 ) }
    dend_23 { pt3dadd( -0.791421, 177.377, 5.81905, 0.44 ) }
    dend_23 { pt3dadd( -0.98171, 178.1, 5.59501, 0.22 ) }
    dend_23 { pt3dadd( -1.02038, 178.257, 5.56251, 0.22 ) }
    dend_23 { pt3dadd( -1.25506, 179.417, 5.41645, 1.47 ) }
    dend_23 { pt3dadd( -1.34196, 179.925, 5.37783, 2.28 ) }
    dend_23 { pt3dadd( -1.40613, 180.378, 5.35696, 2.58 ) }
    dend_23 { pt3dadd( -1.56457, 181.668, 5.33296, 0.29 ) }
    dend_23 { pt3dadd( -1.64154, 182.376, 5.34316, 0.22 ) }
    dend_23 { pt3dadd( -1.70569, 183.1, 5.3674, 0.22 ) }
    dend_23 { pt3dadd( -1.75167, 183.707, 5.39464, 0.22 ) }
    dend_23 { pt3dadd( -1.83589, 184.711, 5.44722, 1.33 ) }
    dend_23 { pt3dadd( -1.86184, 184.981, 5.46452, 1.62 ) }
    dend_23 { pt3dadd( -1.90825, 185.341, 5.47962, 1.62 ) }
    dend_23 { pt3dadd( -2.05487, 186.15, 5.47729, 0.37 ) }
    dend_23 { pt3dadd( -2.23057, 186.895, 5.45298, 0.22 ) }
    dend_23 { pt3dadd( -2.32864, 187.275, 5.4394, 0.22 ) }
    dend_23 { pt3dadd( -2.43434, 187.655, 5.42553, 0.52 ) }
    dend_23 { pt3dadd( -2.65444, 188.49, 5.39522, 0.29 ) }
    dend_23 { pt3dadd( -2.99177, 189.932, 5.34395, 0.29 ) }
    dend_23 { pt3dadd( -3.15045, 190.729, 5.31829, 1.03 ) }
    dend_23 { pt3dadd( -3.2185, 191.24, 5.30529, 1.33 ) }
    dend_23 { pt3dadd( -3.2332, 191.466, 5.30069, 1.33 ) }
    dend_23 { pt3dadd( -3.23439, 191.938, 5.29614, 1.18 ) }
    dend_23 { pt3dadd( -3.1968, 192.618, 5.30411, 0.96 ) }
    dend_23 { pt3dadd( -3.14248, 193.131, 5.30722, 0.37 ) }
    dend_23 { pt3dadd( -3.02659, 194.034, 5.31115, 0.22 ) }
    dend_23 { pt3dadd( -2.91957, 194.847, 5.31557, 0.22 ) }
    dend_23 { pt3dadd( -2.81661, 195.693, 5.32259, 1.11 ) }
    dend_23 { pt3dadd( -2.7679, 196.164, 5.31585, 1.92 ) }
    dend_23 { pt3dadd( -2.73531, 196.553, 5.2934, 2.5 ) }
    dend_23 { pt3dadd( -2.73128, 196.624, 5.28647, 2.5 ) }
    dend_23 { pt3dadd( -2.72423, 197.064, 5.22183, 2.5 ) }
    dend_23 { pt3dadd( -2.74034, 197.671, 5.11057, 2.36 ) }
    dend_23 { pt3dadd( -2.81755, 199.104, 4.80577, 0.29 ) }
    dend_23 { pt3dadd( -2.87467, 199.862, 4.63497, 0.29 ) }
    dend_23 { pt3dadd( -2.88628, 199.98, 4.6094, 0.29 ) }
    dend_23 { pt3dadd( -2.97885, 200.766, 4.43065, 1.33 ) }
    dend_23 { pt3dadd( -3.03669, 201.223, 4.32828, 1.55 ) }
    dend_23 { pt3dadd( -3.04502, 201.285, 4.31542, 1.55 ) }
    dend_23 { pt3dadd( -3.10209, 201.73, 4.24107, 1.25 ) }
    dend_23 { pt3dadd( -3.14036, 202.455, 4.14577, 0.66 ) }
    dend_23 { pt3dadd( -3.15704, 203.811, 4.00903, 0.29 ) }
    dend_23 { pt3dadd( -3.13694, 204.591, 3.94897, 0.88 ) }
    dend_23 { pt3dadd( -3.1165, 204.993, 3.92337, 1.11 ) }
    dend_23 { pt3dadd( -3.08596, 205.686, 3.89133, 0.96 ) }
    dend_23 { pt3dadd( -3.05977, 207.067, 3.90169, 0.29 ) }
    dend_23 { pt3dadd( -3.07576, 208.55, 3.9793, 0.29 ) }
    dend_23 { pt3dadd( -3.11857, 209.508, 4.0664, 1.33 ) }
    dend_23 { pt3dadd( -3.16936, 210.263, 4.13718, 1.92 ) }
    dend_23 { pt3dadd( -3.24385, 211.093, 4.22433, 2.21 ) }
    dend_23 { pt3dadd( -3.50423, 213.38, 4.48858, 0.37 ) }
    dend_23 { pt3dadd( -3.68899, 214.686, 4.65318, 0.37 ) }
    dend_23 { pt3dadd( -3.87496, 215.929, 4.81285, 0.37 ) }
    dend_23 { pt3dadd( -4.01692, 216.839, 4.926, 0.22 ) }
    dend_23 { pt3dadd( -4.16866, 217.841, 5.0416, 1.33 ) }
    dend_23 { pt3dadd( -4.22078, 218.206, 5.0781, 2.06 ) }
    dend_23 { pt3dadd( -4.28205, 218.57, 5.10599, 2.21 ) }
    dend_23 { pt3dadd( -4.45517, 219.436, 5.17894, 1.69 ) }
    dend_23 { pt3dadd( -4.7716, 220.808, 5.30248, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_23 { pt3dadd( -4.9531, 221.523, 5.36831, 0.81 ) }
    dend_23 { pt3dadd( -5.05917, 221.95, 5.40007, 0.81 ) }
    dend_23 { pt3dadd( -5.288, 223.053, 5.45842, 0.22 ) }
    dend_23 { pt3dadd( -5.40611, 223.786, 5.47811, 0.81 ) }
    dend_23 { pt3dadd( -5.42376, 223.952, 5.47853, 0.81 ) }
    dend_23 { pt3dadd( -5.44923, 224.48, 5.46644, 0.81 ) }
    dend_23 { pt3dadd( -5.44903, 224.932, 5.45145, 0.74 ) }
    dend_23 { pt3dadd( -5.40121, 226.055, 5.409, 0.22 ) }
    dend_23 { pt3dadd( -5.34412, 226.895, 5.36531, 0.81 ) }
    dend_23 { pt3dadd( -5.32262, 227.291, 5.34423, 1.03 ) }
    dend_23 { pt3dadd( -5.30212, 227.889, 5.31418, 0.44 ) }
    dend_23 { pt3dadd( -5.29094, 229.004, 5.26428, 0.29 ) }
    dend_23 { pt3dadd( -5.30134, 229.943, 5.22296, 0.29 ) }
    dend_23 { pt3dadd( -5.34558, 231.103, 5.18195, 1.55 ) }
    dend_23 { pt3dadd( -5.35697, 231.464, 5.16725, 1.92 ) }
    dend_23 { pt3dadd( -5.35891, 231.548, 5.16342, 1.92 ) }
    dend_23 { pt3dadd( -5.36879, 231.917, 5.14706, 1.92 ) }
    dend_23 { pt3dadd( -5.45473, 234.17, 5.04813, 0.22 ) }
    dend_23 { pt3dadd( -5.51726, 235.218, 5.00962, 0.66 ) }
    dend_23 { pt3dadd( -5.55289, 235.632, 5.00019, 1.03 ) }
    dend_23 { pt3dadd( -5.62858, 236.252, 4.98799, 1.03 ) }
    dend_23 { pt3dadd( -5.74298, 236.944, 4.98012, 0.81 ) }
    dend_23 { pt3dadd( -5.9, 237.671, 4.97937, 0.37 ) }
    dend_23 { pt3dadd( -5.98425, 237.983, 4.98497, 0.37 ) }
    dend_23 { pt3dadd( -6.13655, 238.546, 4.99438, 0.37 ) }
    dend_23 { pt3dadd( -6.34645, 239.34, 5.00642, 0.29 ) }
    dend_23 { pt3dadd( -6.56963, 240.271, 5.01693, 0.29 ) }
    dend_23 { pt3dadd( -6.58305, 240.341, 5.01672, 0.29 ) }
    dend_23 { pt3dadd( -6.77901, 241.598, 5.00995, 0.22 ) }
    dend_23 { pt3dadd( -6.78893, 241.679, 5.00857, 0.22 ) }
    dend_23 { pt3dadd( -6.85608, 242.411, 4.98933, 0.22 ) }
    dend_23 { pt3dadd( -6.86007, 242.495, 4.98383, 0.22 ) }
    dend_23 { pt3dadd( -6.8645, 243.395, 4.89546, 1.47 ) }
    dend_23 { pt3dadd( -6.85913, 243.84, 4.83906, 1.84 ) }
    dend_23 { pt3dadd( -6.85813, 243.9, 4.8303, 1.84 ) }
    dend_23 { pt3dadd( -6.84907, 244.338, 4.7664, 1.84 ) }
    dend_23 { pt3dadd( -6.81296, 245.669, 4.57028, 0.22 ) }
    dend_23 { pt3dadd( -6.78843, 246.94, 4.39431, 0.22 ) }
    dend_23 { pt3dadd( -6.7766, 247.532, 4.32819, 0.88 ) }
    dend_23 { pt3dadd( -6.7781, 247.974, 4.29167, 1.18 ) }
    dend_23 { pt3dadd( -6.79346, 248.428, 4.27126, 0.96 ) }
    dend_23 { pt3dadd( -6.79948, 248.501, 4.27163, 0.96 ) }
    dend_23 { pt3dadd( -6.91511, 249.149, 4.32933, 0.37 ) }
    dend_23 { pt3dadd( -7.03898, 249.687, 4.39581, 0.37 ) }
    dend_23 { pt3dadd( -7.15454, 250.263, 4.47153, 0.37 ) }
    dend_23 { pt3dadd( -7.20273, 250.565, 4.50555, 0.29 ) }
    dend_23 { pt3dadd( -7.27751, 251.217, 4.56496, 0.22 ) }
    dend_23 { pt3dadd( -7.31089, 251.622, 4.59415, 0.52 ) }
    dend_23 { pt3dadd( -7.34698, 252.464, 4.6343, 0.22 ) }
    dend_23 { pt3dadd( -7.35104, 253.121, 4.64684, 0.22 ) }
    dend_23 { pt3dadd( -7.32721, 253.719, 4.6288, 1.11 ) }
    dend_23 { pt3dadd( -7.30593, 254.275, 4.57392, 1.47 ) }
    dend_23 { pt3dadd( -7.30585, 254.356, 4.56211, 1.47 ) }
    dend_23 { pt3dadd( -7.32051, 254.738, 4.49223, 1.33 ) }
    dend_23 { pt3dadd( -7.33221, 254.845, 4.46996, 1.33 ) }
    dend_23 { pt3dadd( -7.48898, 255.777, 4.27732, 0.74 ) }
    dend_23 { pt3dadd( -7.67637, 256.854, 4.04845, 0.29 ) }
    dend_23 { pt3dadd( -7.77713, 257.463, 3.92589, 0.37 ) }
    dend_23 { pt3dadd( -7.78523, 257.525, 3.91435, 0.37 ) }
    dend_23 { pt3dadd( -7.83518, 258.04, 3.83262, 0.37 ) }
    dend_23 { pt3dadd( -7.88385, 258.79, 3.73051, 0.22 ) }
    dend_23 { pt3dadd( -7.9041, 259.68, 3.62845, 1.11 ) }
    dend_23 { pt3dadd( -7.89387, 260.216, 3.56573, 1.4 ) }
    dend_23 { pt3dadd( -7.87309, 260.72, 3.49905, 1.18 ) }
    dend_23 { pt3dadd( -7.8421, 261.399, 3.39947, 0.44 ) }
    dend_23 { pt3dadd( -7.7822, 262.469, 3.20964, 0.22 ) }
    dend_23 { pt3dadd( -7.71531, 263.183, 3.07308, 0.74 ) }
    dend_23 { pt3dadd( -7.66755, 263.619, 2.99614, 1.33 ) }
    dend_23 { pt3dadd( -7.66035, 263.678, 2.98573, 1.33 ) }
    dend_23 { pt3dadd( -7.56846, 264.428, 2.86863, 1.62 ) }
    dend_23 { pt3dadd( -7.51658, 264.836, 2.81445, 1.62 ) }
    dend_23 { pt3dadd( -7.28792, 266.508, 2.63599, 0.29 ) }
    dend_23 { pt3dadd( -7.14659, 267.618, 2.54231, 0.29 ) }
    dend_23 { pt3dadd( -7.13953, 267.689, 2.53706, 0.29 ) }
    dend_23 { pt3dadd( -7.07033, 268.911, 2.47108, 0.29 ) }
    dend_23 { pt3dadd( -7.07049, 269.509, 2.45765, 1.03 ) }
    dend_23 { pt3dadd( -7.07528, 269.592, 2.45783, 1.03 ) }
    dend_23 { pt3dadd( -7.16011, 270.266, 2.4662, 1.18 ) }
    dend_23 { pt3dadd( -7.34945, 271.465, 2.4889, 0.29 ) }
    dend_23 { pt3dadd( -7.50296, 272.419, 2.51145, 0.29 ) }
    dend_23 { pt3dadd( -7.65259, 273.299, 2.53664, 1.18 ) }
    dend_23 { pt3dadd( -7.71158, 273.68, 2.54875, 1.47 ) }
    dend_23 { pt3dadd( -7.79351, 274.251, 2.56919, 1.25 ) }
    dend_23 { pt3dadd( -7.84746, 274.719, 2.58771, 1.33 ) }
    dend_23 { pt3dadd( -7.94181, 275.978, 2.64459, 0.22 ) }
    dend_23 { pt3dadd( -7.94426, 276.133, 2.64904, 0.22 ) }
    dend_23 { pt3dadd( -7.8654, 277.277, 2.68065, 0.22 ) }
    dend_23 { pt3dadd( -7.85542, 277.358, 2.68338, 0.22 ) }
    dend_23 { pt3dadd( -7.73031, 278.148, 2.71584, 0.74 ) }
    dend_23 { pt3dadd( -7.66376, 278.526, 2.73434, 1.18 ) }
    dend_23 { pt3dadd( -7.6031, 278.98, 2.76263, 1.18 ) }
    dend_23 { pt3dadd( -7.4923, 280.325, 2.85426, 0.22 ) }
    dend_23 { pt3dadd( -7.48857, 280.396, 2.85952, 0.22 ) }
    dend_23 { pt3dadd( -7.46485, 281.126, 2.91132, 0.66 ) }
    dend_23 { pt3dadd( -7.45777, 281.508, 2.91691, 0.66 ) }
    dend_23 { pt3dadd( -7.42611, 282.843, 2.87463, 0.22 ) }
    dend_23 { pt3dadd( -7.40845, 283.584, 2.82747, 1.25 ) }
    dend_23 { pt3dadd( -7.39202, 284.235, 2.7673, 1.55 ) }
    dend_23 { pt3dadd( -7.35944, 284.96, 2.69188, 1.69 ) }
    dend_23 { pt3dadd( -7.26328, 286.425, 2.51758, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_23 { pt3dadd( -7.15637, 287.863, 2.33942, 0.22 ) }
    dend_23 { pt3dadd( -7.10511, 288.481, 2.2592, 0.66 ) }
    dend_23 { pt3dadd( -7.06301, 288.928, 2.20519, 0.81 ) }
    dend_23 { pt3dadd( -7.05702, 288.998, 2.19797, 0.81 ) }
    dend_23 { pt3dadd( -6.94203, 290.523, 2.08882, 0.22 ) }
    dend_23 { pt3dadd( -6.87549, 291.417, 2.0638, 1.03 ) }
    dend_23 { pt3dadd( -6.86258, 291.645, 2.05481, 1.33 ) }
    dend_23 { pt3dadd( -6.79575, 293.017, 1.99806, 0.22 ) }
    dend_23 { pt3dadd( -6.76939, 293.616, 1.97445, 0.81 ) }
    dend_23 { pt3dadd( -6.75257, 294.131, 1.95715, 1.03 ) }
    dend_23 { pt3dadd( -6.74379, 294.554, 1.94601, 0.74 ) }
    dend_23 { pt3dadd( -6.73771, 296.157, 1.90791, 0.22 ) }
    dend_23 { pt3dadd( -6.75646, 296.919, 1.89543, 0.44 ) }
    dend_23 { pt3dadd( -6.82031, 297.84, 1.89027, 0.22 ) }
    dend_23 { pt3dadd( -6.8843, 298.658, 1.89058, 1.11 ) }
    dend_23 { pt3dadd( -6.92403, 299.099, 1.8945, 1.33 ) }
    dend_23 { pt3dadd( -6.98644, 299.777, 1.90381, 0.37 ) }
    dend_23 { pt3dadd( -7.06265, 300.66, 1.92451, 0.15 ) }
    dend_23 { pt3dadd( -7.10671, 301.325, 1.93125, 0.74 ) }
    dend_23 { pt3dadd( -7.10545, 301.398, 1.92974, 0.74 ) }
    dend_23 { pt3dadd( -7.08539, 301.697, 1.91839, 0.74 ) }
    dend_23 { pt3dadd( -6.96649, 302.866, 1.86071, 0.22 ) }
    dend_23 { pt3dadd( -6.88574, 303.52, 1.82449, 1.18 ) }
    dend_23 { pt3dadd( -6.82256, 303.988, 1.79506, 1.62 ) }
    dend_23 { pt3dadd( -6.55169, 306.09, 1.65693, 0.22 ) }
    dend_23 { pt3dadd( -6.47342, 306.755, 1.61364, 0.29 ) }
    dend_23 { pt3dadd( -6.46608, 306.828, 1.60913, 0.29 ) }
    dend_23 { pt3dadd( -6.39449, 307.715, 1.56071, 0.29 ) }
    dend_23 { pt3dadd( -6.33766, 308.575, 1.51287, 0.59 ) }
    dend_23 { pt3dadd( -6.32477, 309.165, 1.47346, 1.11 ) }
    dend_23 { pt3dadd( -6.32599, 309.266, 1.46649, 1.11 ) }
    dend_23 { pt3dadd( -6.32364, 309.853, 1.42455, 1.55 ) }
    dend_23 { pt3dadd( -6.32108, 310.495, 1.38008, 1.55 ) }
    dend_23 { pt3dadd( -6.32104, 310.555, 1.37615, 1.55 ) }
    dend_23 { pt3dadd( -6.33768, 312.556, 1.26851, 0.22 ) }
    dend_23 { pt3dadd( -6.34454, 314.003, 1.20239, 0.22 ) }
    dend_23 { pt3dadd( -6.30838, 315.008, 1.15777, 1.4 ) }
    dend_23 { pt3dadd( -6.29308, 315.239, 1.14827, 1.77 ) }
    dend_23 { pt3dadd( -6.23805, 315.907, 1.12508, 1.4 ) }
    dend_23 { pt3dadd( -6.14162, 316.713, 1.1022, 0.74 ) }
    dend_23 { pt3dadd( -5.96586, 317.77, 1.08035, 0.29 ) }
    dend_23 { pt3dadd( -5.58733, 319.664, 1.02804, 0.22 ) }
    dend_23 { pt3dadd( -5.42068, 320.417, 1.00402, 0.66 ) }
    dend_23 { pt3dadd( -5.33319, 320.778, 0.990354, 0.66 ) }
    dend_23 { pt3dadd( -5.08034, 321.695, 0.950396, 0.22 ) }
    dend_23 { pt3dadd( -5.05984, 321.765, 0.949002, 0.22 ) }
    dend_23 { pt3dadd( -4.89669, 322.369, 0.960307, 0.52 ) }
    dend_23 { pt3dadd( -4.87932, 322.448, 0.965997, 0.52 ) }
    dend_23 { pt3dadd( -4.80088, 322.814, 0.998694, 0.52 ) }
    dend_23 { pt3dadd( -4.6724, 323.323, 1.07698, 0.22 ) }
    dend_23 { pt3dadd( -4.39565, 324.265, 1.26839, 1.03 ) }
    dend_23 { pt3dadd( -4.21682, 324.755, 1.38658, 1.62 ) }
    dend_23 { pt3dadd( -4.05046, 325.186, 1.49852, 1.47 ) }
    dend_23 { pt3dadd( -3.80869, 325.806, 1.67578, 1.33 ) }
    dend_23 { pt3dadd( -3.23004, 327.291, 2.16175, 0.22 ) }
    dend_23 { pt3dadd( -2.85015, 328.252, 2.49903, 1.18 ) }
    dend_23 { pt3dadd( -2.35207, 329.454, 2.93234, 0.22 ) }
    dend_23 { pt3dadd( -2.13823, 329.959, 3.12335, 0.22 ) }
    dend_23 { pt3dadd( -1.84542, 330.643, 3.38882, 0.81 ) }
    dend_23 { pt3dadd( -1.21483, 332.1, 3.95242, 0.22 ) }
    dend_23 { pt3dadd( -1.19036, 332.162, 3.9758, 0.22 ) }
    dend_23 { pt3dadd( -1.02375, 332.627, 4.15482, 0.81 ) }
    dend_23 { pt3dadd( -1.00283, 332.69, 4.17883, 0.81 ) }
    dend_23 { pt3dadd( -0.890984, 332.967, 4.28279, 1.11 ) }
    dend_23 { pt3dadd( -0.685409, 333.401, 4.39327, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -34.0832, -50.1438, 25.273, 0.29 ) }
    dend_18 { pt3dadd( -35.1657, -50.1702, 25.8743, 0.29 ) }
    dend_18 { pt3dadd( -36.3946, -50.2087, 26.7611, 0.29 ) }
    dend_18 { pt3dadd( -36.9971, -50.287, 27.1676, 0.59 ) }
    dend_18 { pt3dadd( -37.9719, -50.5431, 27.7437, 0.59 ) }
    dend_18 { pt3dadd( -38.0706, -50.5786, 27.7899, 0.59 ) }
    dend_18 { pt3dadd( -39.7044, -51.2554, 28.444, 0.59 ) }
    dend_18 { pt3dadd( -39.7596, -51.2822, 28.4709, 0.59 ) }
    dend_18 { pt3dadd( -40.5151, -51.7307, 28.9533, 0.37 ) }
    dend_18 { pt3dadd( -41.1267, -52.1624, 29.3615, 0.29 ) }
    dend_18 { pt3dadd( -41.6706, -52.5772, 29.7063, 0.29 ) }
    dend_18 { pt3dadd( -41.7111, -52.6096, 29.7322, 0.29 ) }
    dend_18 { pt3dadd( -42.7139, -53.5068, 30.3992, 0.74 ) }
    dend_18 { pt3dadd( -42.9599, -53.747, 30.6173, 1.03 ) }
    dend_18 { pt3dadd( -43.5274, -54.3982, 31.2903, 0.29 ) }
    dend_18 { pt3dadd( -43.5881, -54.4761, 31.3685, 0.29 ) }
    dend_18 { pt3dadd( -43.9478, -54.9837, 31.8227, 0.37 ) }
    dend_18 { pt3dadd( -44.2149, -55.3647, 32.1054, 0.52 ) }
    dend_18 { pt3dadd( -44.436, -55.6896, 32.2705, 0.52 ) }
    dend_18 { pt3dadd( -44.9511, -56.2286, 32.483, 0.29 ) }
    dend_18 { pt3dadd( -45.6167, -56.6483, 32.6043, 0.29 ) }
    dend_18 { pt3dadd( -46.0183, -56.8077, 32.6494, 0.59 ) }
    dend_18 { pt3dadd( -46.3048, -56.8797, 32.6694, 0.88 ) }
    dend_18 { pt3dadd( -46.5941, -56.9403, 32.6835, 1.03 ) }
    dend_18 { pt3dadd( -47.949, -57.2178, 32.8077, 0.29 ) }
    dend_18 { pt3dadd( -48.7746, -57.3818, 32.926, 0.44 ) }
    dend_18 { pt3dadd( -49.2545, -57.5148, 33.0322, 0.74 ) }
    dend_18 { pt3dadd( -49.3423, -57.5527, 33.0562, 0.74 ) }
    dend_18 { pt3dadd( -49.8544, -57.8127, 33.2171, 0.66 ) }
    dend_18 { pt3dadd( -50.703, -58.3382, 33.541, 0.66 ) }
    dend_18 { pt3dadd( -50.7506, -58.3794, 33.5661, 0.66 ) }
    dend_18 { pt3dadd( -51.1185, -58.7456, 33.7675, 0.29 ) }
    dend_18 { pt3dadd( -51.8652, -59.5565, 34.216, 0.22 ) }
    dend_18 { pt3dadd( -58.7497, -64.0729, 39.1731, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -34.0832, -50.1438, 25.273, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -35.1477, -49.2153, 26.5842, 0.74 ) }
    dend_15 { pt3dadd( -36.5103, -48.0418, 28.0418, 0.66 ) }
    dend_15 { pt3dadd( -36.5968, -47.9672, 28.1344, 0.66 ) }
    dend_15 { pt3dadd( -37.0003, -47.6198, 28.5659, 0.66 ) }
    dend_15 { pt3dadd( -37.0482, -47.5785, 28.6172, 0.66 ) }
    dend_15 { pt3dadd( -37.3565, -47.313, 28.947, 0.52 ) }
    dend_15 { pt3dadd( -37.6188, -46.9932, 29.1206, 0.52 ) }
    dend_15 { pt3dadd( -44.9343, -41.9078, 35.8351, 0.52 ) }
    dend_15 { pt3dadd( -51.4168, -35.7824, 42.6059, 0.52 ) }
    dend_15 { pt3dadd( -57.5505, -31.5391, 50.8527, 0.52 ) }
    dend_15 { pt3dadd( -61.7575, -26.0486, 59.6043, 0.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.75251, -23.3864, 1.01541, 0.96 ) }
    dend_7 { pt3dadd( -7.28362, -24.7482, 1.02766, 0.96 ) }
    dend_7 { pt3dadd( -7.75224, -26.1054, 1.04402, 0.96 ) }
    dend_7 { pt3dadd( -7.79463, -26.2601, 1.04689, 0.96 ) }
    dend_7 { pt3dadd( -7.9667, -27.0569, 1.04202, 0.96 ) }
    dend_7 { pt3dadd( -8.22362, -28.4259, 1.01831, 1.11 ) }
    dend_7 { pt3dadd( -8.48026, -30.0659, 0.935298, 1.11 ) }
    dend_7 { pt3dadd( -8.48669, -30.1446, 0.930706, 1.11 ) }
    dend_7 { pt3dadd( -8.55647, -31.7806, 0.818892, 1.03 ) }
    dend_7 { pt3dadd( -8.58825, -32.9619, 0.724685, 1.99 ) }
    dend_7 { pt3dadd( -8.5879, -33.0405, 0.716464, 1.99 ) }
    dend_7 { pt3dadd( -8.5456, -34.1269, 0.545422, 2.87 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 23/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.75251, -23.3864, 1.01541, 1.92 ) }
    dend_2 { pt3dadd( -6.3194, -25.7311, 1.01416, 1.92 ) }
    dend_2 { pt3dadd( -5.91766, -27.8408, 1.00026, 1.92 ) }
    dend_2 { pt3dadd( -5.54661, -29.7592, 0.977687, 1.92 ) }
    dend_2 { pt3dadd( -5.2136, -31.5364, 0.949917, 2.14 ) }
    dend_2 { pt3dadd( -4.88953, -33.2033, 0.915078, 1.62 ) }
    dend_2 { pt3dadd( -4.54054, -34.874, 0.866615, 1.99 ) }
    dend_2 { pt3dadd( -4.27664, -35.995, 0.803046, 2.73 ) }
    dend_2 { pt3dadd( -3.9356, -37.2411, 0.72587, 2.36 ) }
    dend_2 { pt3dadd( -3.49686, -38.6258, 0.672288, 1.99 ) }
    dend_2 { pt3dadd( -2.85123, -40.4321, 0.6425, 1.92 ) }
    dend_2 { pt3dadd( -2.4179, -41.5085, 0.646867, 2.28 ) }
    dend_2 { pt3dadd( -1.95583, -42.5895, 0.694641, 2.5 ) }
    dend_2 { pt3dadd( -1.50642, -43.6247, 0.789497, 2.58 ) }
    dend_2 { pt3dadd( -0.786182, -45.3111, 1.06284, 1.69 ) }
    dend_2 { pt3dadd( -0.760424, -45.3741, 1.07636, 1.69 ) }
    dend_2 { pt3dadd( -0.248994, -46.8782, 1.44595, 1.47 ) }
    dend_2 { pt3dadd( 0.302968, -48.9918, 1.99548, 1.25 ) }
    dend_2 { pt3dadd( 0.517171, -50.1774, 2.30327, 1.62 ) }
    dend_2 { pt3dadd( 0.642824, -51.4313, 2.60785, 1.62 ) }
    dend_2 { pt3dadd( 0.670853, -52.7752, 2.89212, 1.25 ) }
    dend_2 { pt3dadd( 0.587522, -54.3112, 3.19288, 1.25 ) }
    dend_2 { pt3dadd( 0.334184, -55.7991, 3.45196, 1.77 ) }
    dend_2 { pt3dadd( 0.0916738, -56.624, 3.55578, 1.92 ) }
    dend_2 { pt3dadd( -0.247937, -57.5525, 3.63095, 1.92 ) }
    dend_2 { pt3dadd( -0.627016, -58.449, 3.67566, 2.06 ) }
    dend_2 { pt3dadd( -1.13467, -59.525, 3.72511, 1.92 ) }
    dend_2 { pt3dadd( -1.80268, -60.8799, 3.77575, 1.77 ) }
    dend_2 { pt3dadd( -2.51999, -62.3326, 3.81207, 1.55 ) }
    dend_2 { pt3dadd( -3.37316, -64.1016, 3.85401, 1.4 ) }
    dend_2 { pt3dadd( -4.02574, -65.5179, 3.91751, 1.4 ) }
    dend_2 { pt3dadd( -4.54174, -66.7445, 3.99139, 1.84 ) }
    dend_2 { pt3dadd( -4.87665, -67.7094, 4.08282, 1.77 ) }
    dend_2 { pt3dadd( -5.2077, -69.027, 4.24881, 1.25 ) }
    dend_2 { pt3dadd( -5.22063, -69.119, 4.26262, 1.25 ) }
    dend_2 { pt3dadd( -5.29977, -70.8455, 4.56191, 0.88 ) }
    dend_2 { pt3dadd( -5.25097, -71.6836, 4.70613, 1.62 ) }
    dend_2 { pt3dadd( -5.04355, -73.1951, 4.93796, 1.92 ) }
    dend_2 { pt3dadd( -4.80487, -74.5161, 5.10282, 1.92 ) }
    dend_2 { pt3dadd( -4.57381, -75.7601, 5.21834, 1.77 ) }
    dend_2 { pt3dadd( -4.56049, -75.8414, 5.22282, 1.77 ) }
    dend_2 { pt3dadd( -4.31414, -77.5387, 5.24535, 1.62 ) }
    dend_2 { pt3dadd( -4.167, -78.9034, 5.20191, 1.33 ) }
    dend_2 { pt3dadd( -4.06608, -80.1821, 5.10588, 1.18 ) }
    dend_2 { pt3dadd( -3.99492, -81.4015, 4.99751, 1.18 ) }
    dend_2 { pt3dadd( -3.93845, -82.783, 4.85826, 1.55 ) }
    dend_2 { pt3dadd( -3.93089, -84.4807, 4.6583, 1.62 ) }
    dend_2 { pt3dadd( -3.9964, -85.9565, 4.46535, 2.14 ) }
    dend_2 { pt3dadd( -4.08724, -87.0738, 4.31673, 2.36 ) }
    dend_2 { pt3dadd( -4.19631, -88.1316, 4.17667, 2.58 ) }
    dend_2 { pt3dadd( -4.28106, -88.918, 4.07929, 3.02 ) }
    dend_2 { pt3dadd( -4.47434, -90.8033, 3.89705, 2.21 ) }
    dend_2 { pt3dadd( -4.61057, -92.4704, 3.77837, 1.77 ) }
    dend_2 { pt3dadd( -4.69732, -93.9806, 3.70961, 1.77 ) }
    dend_2 { pt3dadd( -4.73493, -95.6602, 3.68163, 1.84 ) }
    dend_2 { pt3dadd( -4.67683, -97.6359, 3.75035, 1.84 ) }
    dend_2 { pt3dadd( -4.51285, -99.6394, 3.91932, 1.18 ) }
    dend_2 { pt3dadd( -4.20614, -101.723, 4.20067, 0.96 ) }
    dend_2 { pt3dadd( -4.18954, -101.804, 4.21868, 0.96 ) }
    dend_2 { pt3dadd( -3.81458, -103.198, 4.70643, 1.33 ) }
    dend_2 { pt3dadd( -3.36057, -104.596, 5.34453, 1.84 ) }
    dend_2 { pt3dadd( -2.99717, -105.681, 5.91528, 1.84 ) }
    dend_2 { pt3dadd( -2.66417, -106.744, 6.47496, 1.77 ) }
    dend_2 { pt3dadd( -2.14023, -108.697, 7.41092, 1.69 ) }
    dend_2 { pt3dadd( -1.74411, -110.563, 8.11291, 0.74 ) }
    dend_2 { pt3dadd( -1.59032, -111.642, 8.39176, 0.74 ) }
    dend_2 { pt3dadd( -1.46477, -112.99, 8.60979, 1.18 ) }
    dend_2 { pt3dadd( -1.40029, -114.262, 8.69655, 1.47 ) }
    dend_2 { pt3dadd( -1.41201, -115.503, 8.61082, 1.62 ) }
    dend_2 { pt3dadd( -1.48316, -116.422, 8.39909, 1.92 ) }
    dend_2 { pt3dadd( -1.57915, -117.152, 8.18618, 1.92 ) }
    dend_2 { pt3dadd( -1.5893, -117.218, 8.16787, 1.92 ) }
    dend_2 { pt3dadd( -1.72924, -118.1, 7.95894, 1.92 ) }
    dend_2 { pt3dadd( -1.94316, -119.379, 7.73312, 1.33 ) }
    dend_2 { pt3dadd( -2.19057, -120.644, 7.54911, 1.47 ) }
    dend_2 { pt3dadd( -2.44924, -121.928, 7.38223, 1.92 ) }
    dend_2 { pt3dadd( -2.62389, -122.874, 7.26692, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -2.83145, -124.148, 7.12838, 1.99 ) }
    dend_2 { pt3dadd( -3.02152, -125.736, 6.9773, 1.99 ) }
    dend_2 { pt3dadd( -3.1502, -127.57, 6.81593, 1.99 ) }
    dend_2 { pt3dadd( -3.15717, -128.007, 6.78383, 2.36 ) }
    dend_2 { pt3dadd( -3.14097, -129.048, 6.70258, 1.62 ) }
    dend_2 { pt3dadd( -3.09373, -130.15, 6.61617, 1.25 ) }
    dend_2 { pt3dadd( -3.00296, -131.52, 6.50705, 1.11 ) }
    dend_2 { pt3dadd( -2.93504, -132.677, 6.41839, 0.81 ) }
    dend_2 { pt3dadd( -2.87467, -134.186, 6.32541, 0.66 ) }
    dend_2 { pt3dadd( -2.88999, -135.492, 6.26095, 1.55 ) }
    dend_2 { pt3dadd( -2.89448, -135.577, 6.25772, 1.55 ) }
    dend_2 { pt3dadd( -2.94607, -136.276, 6.28539, 2.21 ) }
    dend_2 { pt3dadd( -3.03633, -137.258, 6.38438, 1.92 ) }
    dend_2 { pt3dadd( -3.1469, -138.554, 6.56636, 1.62 ) }
    dend_2 { pt3dadd( -3.23837, -139.757, 6.77497, 1.4 ) }
    dend_2 { pt3dadd( -3.29304, -141.091, 7.10267, 1.4 ) }
    dend_2 { pt3dadd( -3.34142, -143.197, 7.71134, 1.33 ) }
    dend_2 { pt3dadd( -3.32873, -144.235, 8.04102, 0.96 ) }
    dend_2 { pt3dadd( -3.23504, -145.801, 8.56214, 0.74 ) }
    dend_2 { pt3dadd( -3.22429, -145.895, 8.59658, 0.74 ) }
    dend_2 { pt3dadd( -2.83386, -148.044, 9.41715, 0.66 ) }
    dend_2 { pt3dadd( -2.81039, -148.115, 9.44737, 0.66 ) }
    dend_2 { pt3dadd( -2.16688, -149.541, 10.0368, 1.69 ) }
    dend_2 { pt3dadd( -1.77412, -150.334, 10.3712, 2.21 ) }
    dend_2 { pt3dadd( -1.17397, -151.574, 10.873, 3.02 ) }
    dend_2 { pt3dadd( -0.824837, -152.385, 11.1658, 3.02 ) }
    dend_2 { pt3dadd( 0.113693, -154.977, 11.947, 0.52 ) }
    dend_2 { pt3dadd( 0.35272, -155.949, 12.1776, 0.52 ) }
    dend_2 { pt3dadd( 0.503594, -157.16, 12.3863, 2.36 ) }
    dend_2 { pt3dadd( 0.526715, -158.301, 12.4965, 3.09 ) }
    dend_2 { pt3dadd( 0.485553, -158.848, 12.5062, 3.24 ) }
    dend_2 { pt3dadd( 0.327508, -159.958, 12.4779, 3.02 ) }
    dend_2 { pt3dadd( -0.167678, -162.405, 12.3011, 1.11 ) }
    dend_2 { pt3dadd( -0.405215, -163.686, 12.2084, 0.96 ) }
    dend_2 { pt3dadd( -0.549618, -164.629, 12.1369, 1.25 ) }
    dend_2 { pt3dadd( -0.686471, -165.925, 12.064, 1.18 ) }
    dend_2 { pt3dadd( -0.741011, -166.905, 12.0335, 0.52 ) }
    dend_2 { pt3dadd( -0.740002, -166.99, 12.034, 0.52 ) }
    dend_2 { pt3dadd( -0.610813, -167.908, 12.0953, 1.4 ) }
    dend_2 { pt3dadd( -0.592696, -167.975, 12.0997, 1.4 ) }
    dend_2 { pt3dadd( -0.147635, -169.102, 12.1464, 2.14 ) }
    dend_2 { pt3dadd( 0.200517, -169.884, 12.1571, 2.14 ) }
    dend_2 { pt3dadd( 0.442468, -170.451, 12.1476, 2.36 ) }
    dend_2 { pt3dadd( 0.853079, -171.516, 12.1134, 1.33 ) }
    dend_2 { pt3dadd( 1.28701, -172.806, 12.0328, 0.81 ) }
    dend_2 { pt3dadd( 1.73689, -174.436, 11.8741, 0.81 ) }
    dend_2 { pt3dadd( 2.06526, -176.015, 11.6727, 0.81 ) }
    dend_2 { pt3dadd( 2.33796, -177.695, 11.4679, 1.62 ) }
    dend_2 { pt3dadd( 2.45749, -178.596, 11.3641, 1.92 ) }
    dend_2 { pt3dadd( 2.61944, -179.988, 11.2624, 1.25 ) }
    dend_2 { pt3dadd( 2.76362, -181.325, 11.2127, 0.96 ) }
    dend_2 { pt3dadd( 2.95831, -183.135, 11.2031, 0.96 ) }
    dend_2 { pt3dadd( 3.17982, -184.704, 11.2429, 0.88 ) }
    dend_2 { pt3dadd( 3.46362, -186.31, 11.3469, 1.62 ) }
    dend_2 { pt3dadd( 3.86369, -188.152, 11.5148, 1.84 ) }
    dend_2 { pt3dadd( 4.10833, -189.15, 11.6856, 1.92 ) }
    dend_2 { pt3dadd( 4.131, -189.238, 11.7068, 1.92 ) }
    dend_2 { pt3dadd( 4.47089, -190.557, 12.0765, 1.62 ) }
    dend_2 { pt3dadd( 4.86113, -192.192, 12.5559, 0.59 ) }
    dend_2 { pt3dadd( 5.14094, -193.467, 12.9268, 0.59 ) }
    dend_2 { pt3dadd( 5.54029, -195.382, 13.4073, 0.52 ) }
    dend_2 { pt3dadd( 5.8049, -196.651, 13.7483, 1.69 ) }
    dend_2 { pt3dadd( 5.97144, -197.472, 13.9783, 2.5 ) }
    dend_2 { pt3dadd( 6.1031, -198.196, 14.2008, 2.5 ) }
    dend_2 { pt3dadd( 6.26304, -199.066, 14.4683, 2.5 ) }
    dend_2 { pt3dadd( 6.50111, -200.376, 14.8105, 1.77 ) }
    // Section: dend_67, id: dend_67, parent: dend_27 (entry count 66/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -9.59931, 107.834, -20.4698, 0.59 ) }
    dend_67 { pt3dadd( -10.4377, 108.737, -21.056, 0.59 ) }
    dend_67 { pt3dadd( -11.0687, 109.563, -21.6042, 0.44 ) }
    dend_67 { pt3dadd( -11.0132, 109.702, -22.2496, 0.74 ) }
    dend_67 { pt3dadd( -10.9152, 109.934, -23.259, 0.74 ) }
    dend_67 { pt3dadd( -10.9057, 109.97, -23.4125, 0.74 ) }
    dend_67 { pt3dadd( -10.8904, 110.169, -24.1908, 0.88 ) }
    dend_67 { pt3dadd( -10.8883, 110.186, -24.2601, 0.88 ) }
    dend_67 { pt3dadd( -10.7982, 111.546, -29.7958, 1.62 ) }
    dend_67 { pt3dadd( -10.8335, 111.927, -31.3639, 1.4 ) }
    dend_67 { pt3dadd( -10.9495, 112.301, -32.9903, 0.37 ) }
    dend_67 { pt3dadd( -11.0553, 112.499, -33.8717, 0.74 ) }
    dend_67 { pt3dadd( -11.3873, 112.93, -35.7082, 0.29 ) }
    dend_67 { pt3dadd( -11.5685, 113.125, -36.3702, 1.4 ) }
    dend_67 { pt3dadd( -11.822, 113.351, -36.9129, 1.84 ) }
    dend_67 { pt3dadd( -12.6873, 114.093, -38.9352, 0.44 ) }
    dend_67 { pt3dadd( -12.8221, 114.226, -39.2812, 0.29 ) }
    dend_67 { pt3dadd( -13.0389, 114.437, -39.8598, 0.29 ) }
    dend_67 { pt3dadd( -13.2525, 114.642, -40.4005, 0.59 ) }
    dend_67 { pt3dadd( -13.9785, 115.398, -42.3323, 0.44 ) }
    dend_67 { pt3dadd( -14.2318, 115.696, -42.958, 0.22 ) }
    dend_67 { pt3dadd( -14.4393, 115.963, -43.3969, 0.74 ) }
    dend_67 { pt3dadd( -14.7742, 116.446, -44.1893, 0.15 ) }
    dend_67 { pt3dadd( -14.8268, 116.523, -44.3156, 0.15 ) }
    dend_67 { pt3dadd( -14.9545, 116.717, -44.6003, 0.15 ) }
    dend_67 { pt3dadd( -15.4534, 117.491, -45.5361, 1.47 ) }
    dend_67 { pt3dadd( -15.7149, 117.893, -46.0003, 1.62 ) }
    dend_67 { pt3dadd( -16.6879, 119.354, -47.7941, 0.22 ) }
    dend_67 { pt3dadd( -16.7163, 119.397, -47.8484, 0.22 ) }
    dend_67 { pt3dadd( -17.0713, 119.903, -48.5156, 0.22 ) }
    dend_67 { pt3dadd( -17.5426, 120.531, -49.3859, 1.25 ) }
    dend_67 { pt3dadd( -17.7568, 120.831, -49.8391, 1.4 ) }
    dend_67 { pt3dadd( -18.3982, 121.781, -51.273, 0.22 ) }
    dend_67 { pt3dadd( -18.4367, 121.847, -51.3704, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_67 { pt3dadd( -18.8993, 122.765, -52.7522, 1.47 ) }
    dend_67 { pt3dadd( -19.0275, 123.055, -53.1732, 1.99 ) }
    dend_67 { pt3dadd( -19.6449, 124.701, -55.3758, 0.37 ) }
    dend_67 { pt3dadd( -19.7898, 125.145, -55.9149, 0.29 ) }
    dend_67 { pt3dadd( -20.0196, 125.918, -56.759, 1.18 ) }
    dend_67 { pt3dadd( -20.2705, 126.815, -57.6648, 0.52 ) }
    dend_67 { pt3dadd( -20.4769, 127.68, -58.4352, 1.55 ) }
    dend_67 { pt3dadd( -20.5467, 127.993, -58.683, 1.84 ) }
    dend_67 { pt3dadd( -20.9584, 129.884, -59.8861, 0.22 ) }
    dend_67 { pt3dadd( -20.9687, 129.946, -59.924, 0.22 ) }
    dend_67 { pt3dadd( -21.0314, 130.509, -60.2229, 0.22 ) }
    dend_67 { pt3dadd( -21.0246, 131.189, -60.5352, 1.4 ) }
    dend_67 { pt3dadd( -21.0178, 131.267, -60.5687, 1.4 ) }
    dend_67 { pt3dadd( -20.9672, 131.71, -60.7373, 1.4 ) }
    dend_67 { pt3dadd( -20.6916, 133.384, -61.3381, 0.15 ) }
    dend_67 { pt3dadd( -20.5694, 134.088, -61.6143, 0.74 ) }
    dend_67 { pt3dadd( -20.2645, 135.719, -62.2994, 0.15 ) }
    dend_67 { pt3dadd( -20.1493, 136.291, -62.5491, 0.74 ) }
    dend_67 { pt3dadd( -20.0829, 136.575, -62.6729, 0.88 ) }
    dend_67 { pt3dadd( -19.6869, 138.001, -63.2684, 0.15 ) }
    dend_67 { pt3dadd( -19.6671, 138.055, -63.2934, 0.15 ) }
    dend_67 { pt3dadd( -19.4878, 138.469, -63.513, 0.37 ) }
    dend_67 { pt3dadd( -19.4204, 138.562, -63.6066, 0.37 ) }
    dend_67 { pt3dadd( -18.9671, 138.969, -64.2552, 0.22 ) }
    dend_67 { pt3dadd( -18.578, 139.268, -64.8146, 0.59 ) }
    dend_67 { pt3dadd( -17.5193, 139.911, -66.3458, 1.69 ) }
    dend_67 { pt3dadd( -17.4033, 139.973, -66.5195, 1.69 ) }
    dend_67 { pt3dadd( -15.5796, 140.712, -69.3995, 0.22 ) }
    dend_67 { pt3dadd( -15.2334, 140.804, -69.9719, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.59931, 107.834, -20.4698, 2.65 ) }
    dend_28 { pt3dadd( -9.38728, 108.483, -20.2005, 2.65 ) }
    dend_28 { pt3dadd( -9.21682, 109.221, -19.9526, 2.06 ) }
    dend_28 { pt3dadd( -8.99447, 110.535, -19.5754, 1.92 ) }
    dend_28 { pt3dadd( -8.98901, 110.576, -19.5645, 1.92 ) }
    dend_28 { pt3dadd( -8.92293, 111.333, -19.3826, 0.74 ) }
    dend_28 { pt3dadd( -8.85256, 112.433, -19.1337, 0.52 ) }
    dend_28 { pt3dadd( -8.85631, 113.304, -18.9479, 0.52 ) }
    dend_28 { pt3dadd( -8.8821, 113.719, -18.8842, 0.52 ) }
    dend_28 { pt3dadd( -8.89983, 113.893, -18.8774, 0.52 ) }
    dend_28 { pt3dadd( -8.9447, 114.438, -18.8704, 0.52 ) }
    dend_28 { pt3dadd( -8.94899, 114.522, -18.8722, 0.52 ) }
    dend_28 { pt3dadd( -8.94909, 115.142, -18.9117, 0.44 ) }
    dend_28 { pt3dadd( -8.92483, 115.634, -18.9312, 0.44 ) }
    dend_28 { pt3dadd( -8.8454, 116.57, -18.9712, 1.84 ) }
    dend_28 { pt3dadd( -8.76276, 117.337, -18.9844, 2.73 ) }
    dend_28 { pt3dadd( -8.7126, 117.745, -18.9823, 3.54 ) }
    dend_28 { pt3dadd( -8.64706, 118.284, -18.9682, 3.9 ) }
    dend_28 { pt3dadd( -8.59689, 118.715, -18.9463, 4.05 ) }
    dend_28 { pt3dadd( -8.56042, 119.122, -18.9238, 3.9 ) }
    dend_28 { pt3dadd( -8.52244, 119.874, -18.8803, 3.61 ) }
    dend_28 { pt3dadd( -8.5209, 120.403, -18.8412, 2.8 ) }
    dend_28 { pt3dadd( -8.53955, 120.997, -18.796, 1.69 ) }
    dend_28 { pt3dadd( -8.57051, 121.695, -18.7411, 1.11 ) }
    dend_28 { pt3dadd( -8.61719, 122.481, -18.6812, 0.81 ) }
    dend_28 { pt3dadd( -8.6509, 122.909, -18.6529, 0.66 ) }
    dend_28 { pt3dadd( -8.73739, 123.813, -18.6204, 0.52 ) }
    dend_28 { pt3dadd( -8.82633, 124.604, -18.5847, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 57/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -58.7497, -64.0729, 39.1731, 0.37 ) }
    dend_20 { pt3dadd( -65.6478, -68.0112, 43.3439, 0.37 ) }
    dend_20 { pt3dadd( -71.2108, -73.6798, 47.6937, 0.37 ) }
    dend_20 { pt3dadd( -77.3513, -77.9516, 52.6681, 0.37 ) }
    dend_20 { pt3dadd( -82.183, -82.1855, 58.9381, 0.37 ) }
    dend_20 { pt3dadd( -88.5117, -86.3581, 63.7513, 0.37 ) }
    dend_20 { pt3dadd( -94.8284, -90.0628, 68.9136, 0.37 ) }
    dend_20 { pt3dadd( -100.644, -95.6468, 73.0286, 0.37 ) }
    dend_20 { pt3dadd( -107.958, -99.8677, 76.1019, 0.37 ) }
    dend_20 { pt3dadd( -116.434, -102.273, 77.5214, 0.37 ) }
    dend_20 { pt3dadd( -124.953, -104.886, 78.1265, 0.37 ) }
    dend_20 { pt3dadd( -133.611, -105.906, 79.8963, 0.37 ) }
    dend_20 { pt3dadd( -142.313, -106.658, 81.5615, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 70/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -58.7497, -64.0729, 39.1731, 0.29 ) }
    dend_19 { pt3dadd( -66.3087, -68.34, 43.4234, 0.37 ) }
    dend_19 { pt3dadd( -73.0429, -73.1329, 48.4776, 0.37 ) }
    dend_19 { pt3dadd( -79.8553, -79.0087, 52.221, 0.37 ) }
    dend_19 { pt3dadd( -86.6764, -85.5164, 54.827, 0.37 ) }
    dend_19 { pt3dadd( -93.5178, -92.2151, 56.882, 0.37 ) }
    dend_19 { pt3dadd( -99.8952, -98.7988, 60.3103, 0.37 ) }
    dend_19 { pt3dadd( -105.584, -106.302, 63.193, 0.37 ) }
    dend_19 { pt3dadd( -110.747, -114.63, 64.6621, 0.37 ) }
    dend_19 { pt3dadd( -117.41, -121.852, 64.7594, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -61.7575, -26.0486, 59.6043, 0.37 ) }
    dend_17 { pt3dadd( -67.9419, -20.1775, 68.8547, 0.37 ) }
    dend_17 { pt3dadd( -74.9689, -14.2884, 77.4692, 0.37 ) }
    dend_17 { pt3dadd( -82.577, -6.98278, 84.4419, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 84/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -61.7575, -26.0486, 59.6043, 0.29 ) }
    dend_16 { pt3dadd( -64.5373, -23.3676, 64.3342, 0.37 ) }
    dend_16 { pt3dadd( -67.055, -20.3467, 69.0198, 0.37 ) }
    dend_16 { pt3dadd( -68.6626, -18.183, 74.4773, 0.37 ) }
    dend_16 { pt3dadd( -69.9454, -16.6833, 80.2237, 0.37 ) }
    dend_16 { pt3dadd( -71.584, -15.9207, 86.0215, 0.37 ) }
    dend_16 { pt3dadd( -73.8821, -14.8774, 91.546, 0.37 ) }
    dend_16 { pt3dadd( -76.5696, -13.8217, 96.8899, 0.37 ) }
    dend_16 { pt3dadd( -79.1611, -12.6094, 102.25, 0.37 ) }
    dend_16 { pt3dadd( -82.1517, -10.6097, 107.161, 0.37 ) }
    dend_16 { pt3dadd( -85.2669, -8.60153, 111.992, 0.37 ) }
    dend_16 { pt3dadd( -88.0233, -6.53432, 117.012, 0.37 ) }
    dend_16 { pt3dadd( -90.2536, -5.15953, 122.494, 0.37 ) }
    dend_16 { pt3dadd( -92.6432, -3.40749, 127.805, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 98/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.5456, -34.1269, 0.545422, 0.59 ) }
    dend_13 { pt3dadd( -8.64986, -34.6289, 0.171595, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( -8.88097, -35.2913, -0.466907, 0.44 ) }
    dend_13 { pt3dadd( -9.13306, -35.8325, -1.2245, 0.29 ) }
    dend_13 { pt3dadd( -9.28775, -36.068, -1.63319, 0.22 ) }
    dend_13 { pt3dadd( -9.49252, -36.3418, -2.13099, 0.29 ) }
    dend_13 { pt3dadd( -9.75126, -36.6669, -2.71969, 0.29 ) }
    dend_13 { pt3dadd( -10.1138, -37.0305, -3.43939, 0.29 ) }
    dend_13 { pt3dadd( -10.5336, -37.4327, -4.25579, 0.29 ) }
    dend_13 { pt3dadd( -10.8554, -37.7719, -4.88242, 0.29 ) }
    dend_13 { pt3dadd( -11.2592, -38.2905, -5.69622, 1.25 ) }
    dend_13 { pt3dadd( -11.3757, -38.4853, -5.93853, 1.77 ) }
    dend_13 { pt3dadd( -11.5445, -38.8573, -6.30152, 1.77 ) }
    dend_13 { pt3dadd( -12.0053, -40.0658, -7.2849, 1.11 ) }
    dend_13 { pt3dadd( -12.2451, -40.8312, -7.81844, 0.52 ) }
    dend_13 { pt3dadd( -12.3746, -41.4251, -8.20696, 0.37 ) }
    dend_13 { pt3dadd( -12.4819, -42.2577, -8.73789, 0.37 ) }
    dend_13 { pt3dadd( -12.5256, -42.8852, -9.12695, 0.37 ) }
    dend_13 { pt3dadd( -12.5299, -42.9923, -9.19311, 0.37 ) }
    dend_13 { pt3dadd( -12.5665, -43.8786, -9.73499, 1.25 ) }
    dend_13 { pt3dadd( -12.5813, -44.42, -10.117, 1.18 ) }
    dend_13 { pt3dadd( -12.6477, -45.2722, -10.8285, 0.29 ) }
    dend_13 { pt3dadd( -12.722, -45.591, -11.1549, 0.22 ) }
    dend_13 { pt3dadd( -12.8784, -45.9759, -11.5752, 0.22 ) }
    dend_13 { pt3dadd( -13.0357, -46.2676, -11.8784, 0.44 ) }
    dend_13 { pt3dadd( -13.2342, -46.5475, -12.1615, 0.44 ) }
    dend_13 { pt3dadd( -13.4715, -46.8305, -12.4243, 0.29 ) }
    dend_13 { pt3dadd( -13.724, -47.1119, -12.6911, 0.29 ) }
    dend_13 { pt3dadd( -14.0457, -47.5441, -13.1393, 0.37 ) }
    dend_13 { pt3dadd( -14.2719, -47.8998, -13.5144, 0.37 ) }
    dend_13 { pt3dadd( -14.5087, -48.2881, -13.969, 0.29 ) }
    dend_13 { pt3dadd( -14.8999, -48.9409, -14.8425, 1.18 ) }
    dend_13 { pt3dadd( -15.1812, -49.4038, -15.4982, 1.99 ) }
    dend_13 { pt3dadd( -15.4553, -49.8307, -16.1483, 2.28 ) }
    dend_13 { pt3dadd( -15.6296, -50.0854, -16.5478, 1.99 ) }
    dend_13 { pt3dadd( -16.0808, -50.7598, -17.5368, 0.59 ) }
    dend_13 { pt3dadd( -16.3902, -51.276, -18.1662, 0.37 ) }
    dend_13 { pt3dadd( -16.6179, -51.763, -18.614, 0.37 ) }
    dend_13 { pt3dadd( -16.8684, -52.3463, -19.0825, 1.11 ) }
    dend_13 { pt3dadd( -17.0503, -52.763, -19.3953, 1.69 ) }
    dend_13 { pt3dadd( -17.2431, -53.2294, -19.7301, 1.84 ) }
    dend_13 { pt3dadd( -17.5101, -53.8634, -20.1602, 1.4 ) }
    dend_13 { pt3dadd( -17.9896, -54.8664, -20.8722, 0.44 ) }
    dend_13 { pt3dadd( -18.2475, -55.3558, -21.2576, 0.44 ) }
    dend_13 { pt3dadd( -18.5822, -55.9271, -21.7359, 0.37 ) }
    dend_13 { pt3dadd( -18.8826, -56.3893, -22.1614, 1.18 ) }
    dend_13 { pt3dadd( -19.1479, -56.779, -22.5288, 1.62 ) }
    dend_13 { pt3dadd( -19.4307, -57.2115, -22.8993, 1.03 ) }
    dend_13 { pt3dadd( -19.4573, -57.2624, -22.9358, 1.03 ) }
    dend_13 { pt3dadd( -19.5752, -57.5887, -23.1299, 0.88 ) }
    dend_13 { pt3dadd( -19.7334, -58.1955, -23.4736, 0.44 ) }
    dend_13 { pt3dadd( -19.8804, -58.8463, -23.8451, 0.29 ) }
    dend_13 { pt3dadd( -19.9975, -59.4467, -24.1865, 0.29 ) }
    dend_13 { pt3dadd( -20.1973, -60.5448, -24.8139, 1.92 ) }
    dend_13 { pt3dadd( -20.3338, -61.2995, -25.2396, 2.73 ) }
    dend_13 { pt3dadd( -20.465, -62.0719, -25.6761, 2.65 ) }
    dend_13 { pt3dadd( -20.7297, -63.5272, -26.5253, 0.66 ) }
    dend_13 { pt3dadd( -20.7428, -63.5925, -26.566, 0.66 ) }
    dend_13 { pt3dadd( -20.956, -64.5554, -27.1909, 0.29 ) }
    dend_13 { pt3dadd( -21.0632, -64.9706, -27.457, 0.29 ) }
    dend_13 { pt3dadd( -21.1945, -65.4766, -27.7892, 0.29 ) }
    dend_13 { pt3dadd( -21.3163, -66.0874, -28.2055, 0.29 ) }
    dend_13 { pt3dadd( -21.4025, -66.657, -28.6182, 1.11 ) }
    dend_13 { pt3dadd( -21.4114, -66.72, -28.6631, 1.11 ) }
    dend_13 { pt3dadd( -21.4864, -67.2445, -29.0306, 1.25 ) }
    dend_13 { pt3dadd( -21.5915, -67.9163, -29.4922, 0.96 ) }
    dend_13 { pt3dadd( -21.8108, -69.1649, -30.2223, 0.37 ) }
    dend_13 { pt3dadd( -21.8194, -69.2255, -30.2535, 0.37 ) }
    dend_13 { pt3dadd( -21.9233, -69.9044, -30.5798, 0.22 ) }
    dend_13 { pt3dadd( -22.0037, -70.3632, -30.7876, 0.22 ) }
    dend_13 { pt3dadd( -22.0275, -70.4929, -30.8503, 0.66 ) }
    dend_13 { pt3dadd( -22.2162, -71.3764, -31.2709, 0.52 ) }
    dend_13 { pt3dadd( -22.5443, -72.8001, -31.9469, 1.77 ) }
    dend_13 { pt3dadd( -22.7816, -73.812, -32.4324, 2.58 ) }
    dend_13 { pt3dadd( -22.9858, -74.6577, -32.8483, 2.58 ) }
    dend_13 { pt3dadd( -23.3924, -76.272, -33.6462, 0.44 ) }
    dend_13 { pt3dadd( -23.6236, -77.1034, -34.0567, 0.29 ) }
    dend_13 { pt3dadd( -23.6463, -77.1723, -34.0908, 0.29 ) }
    dend_13 { pt3dadd( -23.8486, -77.6838, -34.3212, 0.29 ) }
    dend_13 { pt3dadd( -24.1753, -78.4732, -34.6481, 1.47 ) }
    dend_13 { pt3dadd( -24.3628, -78.9119, -34.8077, 1.84 ) }
    dend_13 { pt3dadd( -24.6125, -79.5109, -34.963, 1.47 ) }
    dend_13 { pt3dadd( -25.2177, -81.0854, -35.3139, 0.29 ) }
    dend_13 { pt3dadd( -25.4314, -81.6829, -35.4251, 1.11 ) }
    dend_13 { pt3dadd( -25.5781, -82.1089, -35.4923, 1.25 ) }
    dend_13 { pt3dadd( -25.7903, -82.7454, -35.5711, 1.03 ) }
    dend_13 { pt3dadd( -26.0862, -83.6452, -35.6677, 0.22 ) }
    dend_13 { pt3dadd( -26.2859, -84.2256, -35.725, 0.22 ) }
    dend_13 { pt3dadd( -26.4177, -84.5828, -35.755, 0.59 ) }
    dend_13 { pt3dadd( -26.6183, -85.0767, -35.8145, 0.74 ) }
    dend_13 { pt3dadd( -26.7478, -85.3737, -35.8715, 0.37 ) }
    dend_13 { pt3dadd( -27.0026, -85.9248, -36.0067, 0.22 ) }
    dend_13 { pt3dadd( -27.3717, -86.6733, -36.2238, 1.55 ) }
    dend_13 { pt3dadd( -27.7115, -87.3673, -36.4299, 2.21 ) }
    dend_13 { pt3dadd( -27.9048, -87.7607, -36.5472, 1.84 ) }
    dend_13 { pt3dadd( -28.5165, -88.9945, -36.915, 0.22 ) }
    dend_13 { pt3dadd( -28.8332, -89.6179, -37.1041, 0.22 ) }
    dend_13 { pt3dadd( -29.2023, -90.3002, -37.3258, 1.11 ) }
    dend_13 { pt3dadd( -29.4231, -90.6839, -37.4574, 1.62 ) }
    dend_13 { pt3dadd( -29.7045, -91.1358, -37.6198, 1.84 ) }
    dend_13 { pt3dadd( -30.14, -91.8031, -37.8602, 1.11 ) }
    dend_13 { pt3dadd( -30.3909, -92.1757, -37.9923, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -31.0463, -93.1568, -38.3447, 0.29 ) }
    dend_13 { pt3dadd( -31.3986, -93.6921, -38.5368, 0.59 ) }
    dend_13 { pt3dadd( -32.236, -95.0156, -38.9661, 0.29 ) }
    dend_13 { pt3dadd( -32.2718, -95.0742, -38.9834, 0.29 ) }
    dend_13 { pt3dadd( -32.8511, -96.0523, -39.245, 1.18 ) }
    dend_13 { pt3dadd( -33.0751, -96.4389, -39.3395, 1.55 ) }
    dend_13 { pt3dadd( -33.288, -96.8277, -39.4175, 1.55 ) }
    dend_13 { pt3dadd( -33.8292, -97.9332, -39.6445, 0.52 ) }
    dend_13 { pt3dadd( -34.2557, -98.9512, -39.8651, 0.37 ) }
    dend_13 { pt3dadd( -34.279, -99.0169, -39.8803, 0.37 ) }
    dend_13 { pt3dadd( -34.5296, -99.8627, -40.0742, 0.37 ) }
    dend_13 { pt3dadd( -34.7188, -100.582, -40.2422, 0.29 ) }
    dend_13 { pt3dadd( -35.0428, -101.971, -40.5767, 1.99 ) }
    dend_13 { pt3dadd( -35.1725, -102.61, -40.7352, 2.28 ) }
    dend_13 { pt3dadd( -35.4662, -104.145, -41.0864, 0.22 ) }
    dend_13 { pt3dadd( -35.6569, -105.036, -41.2836, 0.22 ) }
    dend_13 { pt3dadd( -35.7605, -105.44, -41.355, 0.74 ) }
    dend_13 { pt3dadd( -35.7811, -105.508, -41.3638, 0.74 ) }
    dend_13 { pt3dadd( -35.9909, -106.113, -41.404, 0.74 ) }
    dend_13 { pt3dadd( -36.2843, -106.934, -41.4317, 0.22 ) }
    dend_13 { pt3dadd( -36.6305, -107.861, -41.4635, 0.22 ) }
    dend_13 { pt3dadd( -37.2, -109.347, -41.5291, 2.14 ) }
    dend_13 { pt3dadd( -37.3283, -109.684, -41.5448, 2.36 ) }
    dend_13 { pt3dadd( -37.8073, -110.906, -41.6165, 0.29 ) }
    dend_13 { pt3dadd( -38.031, -111.44, -41.6521, 0.22 ) }
    dend_13 { pt3dadd( -38.3395, -112.119, -41.7125, 0.22 ) }
    dend_13 { pt3dadd( -38.7224, -112.913, -41.7946, 1.4 ) }
    dend_13 { pt3dadd( -38.9336, -113.342, -41.8451, 1.77 ) }
    dend_13 { pt3dadd( -39.2388, -113.956, -41.9032, 1.33 ) }
    dend_13 { pt3dadd( -39.7699, -115.086, -41.9529, 0.37 ) }
    dend_13 { pt3dadd( -40.1216, -115.896, -41.9667, 0.22 ) }
    dend_13 { pt3dadd( -40.3347, -116.45, -41.9583, 0.22 ) }
    dend_13 { pt3dadd( -40.5812, -117.172, -41.9417, 0.81 ) }
    dend_13 { pt3dadd( -40.7146, -117.595, -41.9308, 0.81 ) }
    dend_13 { pt3dadd( -40.9808, -118.505, -41.9363, 0.22 ) }
    dend_13 { pt3dadd( -41.1358, -119.033, -41.9825, 0.22 ) }
    dend_13 { pt3dadd( -41.3257, -119.612, -42.0718, 1.25 ) }
    dend_13 { pt3dadd( -41.488, -120.036, -42.1676, 1.77 ) }
    dend_13 { pt3dadd( -41.6791, -120.495, -42.2906, 1.77 ) }
    dend_13 { pt3dadd( -42.0956, -121.496, -42.5699, 0.44 ) }
    dend_13 { pt3dadd( -42.4794, -122.405, -42.8305, 0.29 ) }
    dend_13 { pt3dadd( -42.7981, -123.189, -43.0552, 1.4 ) }
    dend_13 { pt3dadd( -42.9858, -123.65, -43.1883, 1.77 ) }
    dend_13 { pt3dadd( -43.1405, -124.046, -43.2979, 1.77 ) }
    dend_13 { pt3dadd( -43.5627, -125.168, -43.5884, 0.37 ) }
    dend_13 { pt3dadd( -43.8681, -126.019, -43.7809, 0.29 ) }
    dend_13 { pt3dadd( -44.18, -126.915, -43.993, 0.22 ) }
    dend_13 { pt3dadd( -44.4472, -127.652, -44.2009, 0.22 ) }
    dend_13 { pt3dadd( -44.779, -128.506, -44.4763, 1.11 ) }
    dend_13 { pt3dadd( -44.906, -128.812, -44.5854, 1.4 ) }
    dend_13 { pt3dadd( -45.1656, -129.43, -44.8111, 0.59 ) }
    dend_13 { pt3dadd( -45.4533, -130.145, -45.0622, 0.22 ) }
    dend_13 { pt3dadd( -45.7353, -130.874, -45.3033, 0.22 ) }
    dend_13 { pt3dadd( -46.0194, -131.604, -45.5553, 1.11 ) }
    dend_13 { pt3dadd( -46.1503, -131.916, -45.6708, 1.55 ) }
    dend_13 { pt3dadd( -46.345, -132.364, -45.8422, 1.33 ) }
    dend_13 { pt3dadd( -46.6811, -133.106, -46.1313, 0.59 ) }
    dend_13 { pt3dadd( -46.9522, -133.707, -46.3375, 0.22 ) }
    dend_13 { pt3dadd( -47.1303, -134.084, -46.4532, 0.66 ) }
    dend_13 { pt3dadd( -47.2283, -134.27, -46.5095, 0.66 ) }
    dend_13 { pt3dadd( -47.3341, -134.453, -46.563, 0.66 ) }
    dend_13 { pt3dadd( -47.6621, -135.004, -46.7214, 0.22 ) }
    dend_13 { pt3dadd( -48.0611, -135.594, -46.8629, 0.22 ) }
    dend_13 { pt3dadd( -48.5882, -136.318, -47.0112, 1.33 ) }
    dend_13 { pt3dadd( -48.8271, -136.631, -47.0704, 1.62 ) }
    dend_13 { pt3dadd( -49.0865, -136.961, -47.1315, 1.33 ) }
    dend_13 { pt3dadd( -49.9169, -137.987, -47.3216, 0.29 ) }
    dend_13 { pt3dadd( -50.4405, -138.605, -47.4558, 0.29 ) }
    dend_13 { pt3dadd( -50.8656, -139.066, -47.6015, 0.29 ) }
    dend_13 { pt3dadd( -51.258, -139.465, -47.7731, 0.88 ) }
    dend_13 { pt3dadd( -51.5272, -139.728, -47.901, 0.88 ) }
    dend_13 { pt3dadd( -51.8359, -140.016, -48.0606, 0.66 ) }
    dend_13 { pt3dadd( -52.3675, -140.515, -48.3609, 0.15 ) }
    dend_13 { pt3dadd( -52.7957, -141.009, -48.6558, 0.15 ) }
    dend_13 { pt3dadd( -53.1843, -141.5, -48.9419, 0.15 ) }
    dend_13 { pt3dadd( -53.3728, -141.744, -49.0936, 0.59 ) }
    dend_13 { pt3dadd( -53.4164, -141.79, -49.1227, 0.59 ) }
    dend_13 { pt3dadd( -53.6583, -142.027, -49.2586, 0.59 ) }
    dend_13 { pt3dadd( -54.0786, -142.441, -49.457, 0.22 ) }
    dend_13 { pt3dadd( -54.1329, -142.501, -49.4791, 0.22 ) }
    dend_13 { pt3dadd( -54.7378, -143.182, -49.7211, 0.22 ) }
    dend_13 { pt3dadd( -55.6516, -144.241, -50.0787, 1.77 ) }
    dend_13 { pt3dadd( -55.9747, -144.623, -50.2031, 2.14 ) }
    dend_13 { pt3dadd( -56.3833, -145.116, -50.3687, 1.47 ) }
    dend_13 { pt3dadd( -57.1192, -146.108, -50.6917, 0.37 ) }
    dend_13 { pt3dadd( -57.6977, -146.993, -50.9691, 0.22 ) }
    dend_13 { pt3dadd( -57.9814, -147.534, -51.1201, 0.81 ) }
    dend_13 { pt3dadd( -58.1174, -147.857, -51.2135, 0.96 ) }
    dend_13 { pt3dadd( -58.3182, -148.384, -51.3755, 0.96 ) }
    dend_13 { pt3dadd( -58.6321, -149.34, -51.6721, 0.22 ) }
    dend_13 { pt3dadd( -58.6504, -149.404, -51.6923, 0.22 ) }
    dend_13 { pt3dadd( -58.8138, -150.08, -51.8965, 0.22 ) }
    dend_13 { pt3dadd( -58.9903, -150.843, -52.1122, 0.22 ) }
    dend_13 { pt3dadd( -59.0849, -151.371, -52.2541, 0.96 ) }
    dend_13 { pt3dadd( -59.1663, -151.836, -52.3756, 1.33 ) }
    dend_13 { pt3dadd( -59.2804, -152.42, -52.5392, 1.11 ) }
    dend_13 { pt3dadd( -59.4457, -153.285, -52.842, 0.22 ) }
    dend_13 { pt3dadd( -59.528, -153.681, -53.0057, 0.59 ) }
    dend_13 { pt3dadd( -59.7769, -154.759, -53.4562, 0.22 ) }
    dend_13 { pt3dadd( -59.9781, -155.545, -53.7849, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( -60.1143, -156.053, -54.0137, 1.4 ) }
    dend_13 { pt3dadd( -60.4667, -157.231, -54.5706, 0.22 ) }
    dend_13 { pt3dadd( -60.6933, -157.867, -54.8859, 0.22 ) }
    dend_13 { pt3dadd( -60.9716, -158.567, -55.2279, 1.99 ) }
    dend_13 { pt3dadd( -61.2061, -159.085, -55.4766, 2.5 ) }
    dend_13 { pt3dadd( -61.4561, -159.631, -55.7318, 2.43 ) }
    dend_13 { pt3dadd( -62.1399, -161.047, -56.3527, 0.22 ) }
    dend_13 { pt3dadd( -62.4149, -161.584, -56.5603, 0.29 ) }
    dend_13 { pt3dadd( -62.8022, -162.332, -56.8437, 0.22 ) }
    dend_13 { pt3dadd( -63.0267, -162.77, -56.9979, 0.74 ) }
    dend_13 { pt3dadd( -63.1428, -162.988, -57.0555, 0.74 ) }
    dend_13 { pt3dadd( -63.5808, -163.803, -57.1864, 0.15 ) }
    dend_13 { pt3dadd( -63.8893, -164.47, -57.2275, 0.15 ) }
    dend_13 { pt3dadd( -63.9691, -164.679, -57.235, 0.81 ) }
    dend_13 { pt3dadd( -64.1953, -165.366, -57.2731, 1.33 ) }
    dend_13 { pt3dadd( -64.3987, -166.058, -57.3215, 1.33 ) }
    dend_13 { pt3dadd( -64.4168, -166.124, -57.3272, 1.33 ) }
    dend_13 { pt3dadd( -64.6408, -167.164, -57.4825, 0.22 ) }
    dend_13 { pt3dadd( -64.8385, -168.315, -57.6913, 0.22 ) }
    dend_13 { pt3dadd( -64.9586, -169.228, -57.8747, 1.62 ) }
    dend_13 { pt3dadd( -65.0278, -169.825, -58.0113, 1.92 ) }
    dend_13 { pt3dadd( -65.0797, -170.33, -58.1351, 1.92 ) }
    dend_13 { pt3dadd( -65.2149, -171.683, -58.4479, 0.22 ) }
    dend_13 { pt3dadd( -65.2916, -172.455, -58.6165, 0.22 ) }
    dend_13 { pt3dadd( -65.3505, -173.388, -58.8113, 0.22 ) }
    dend_13 { pt3dadd( -65.3877, -174.197, -58.9795, 1.25 ) }
    dend_13 { pt3dadd( -65.4167, -174.588, -59.0731, 1.62 ) }
    dend_13 { pt3dadd( -65.4843, -175.078, -59.2005, 1.62 ) }
    dend_13 { pt3dadd( -65.5135, -175.219, -59.241, 1.62 ) }
    dend_13 { pt3dadd( -65.8793, -176.772, -59.7882, 0.22 ) }
    dend_13 { pt3dadd( -65.9066, -176.909, -59.8416, 0.22 ) }
    dend_13 { pt3dadd( -66.0302, -177.731, -60.1578, 0.22 ) }
    dend_13 { pt3dadd( -66.1469, -178.647, -60.5056, 0.22 ) }
    dend_13 { pt3dadd( -66.2423, -179.335, -60.7718, 1.03 ) }
    dend_13 { pt3dadd( -66.2927, -179.674, -60.9034, 1.03 ) }
    dend_13 { pt3dadd( -66.4638, -180.726, -61.3073, 0.22 ) }
    dend_13 { pt3dadd( -66.5364, -181.207, -61.4882, 0.59 ) }
    dend_13 { pt3dadd( -66.6256, -181.937, -61.7377, 0.22 ) }
    dend_13 { pt3dadd( -66.7001, -182.472, -61.9038, 0.22 ) }
    dend_13 { pt3dadd( -66.8143, -183.175, -62.08, 1.25 ) }
    dend_13 { pt3dadd( -66.8857, -183.579, -62.1694, 1.62 ) }
    dend_13 { pt3dadd( -66.9099, -183.702, -62.1938, 1.62 ) }
    dend_13 { pt3dadd( -67.1482, -184.97, -62.4542, 0.15 ) }
    dend_13 { pt3dadd( -67.2887, -185.815, -62.6135, 1.25 ) }
    dend_13 { pt3dadd( -67.3374, -186.16, -62.671, 1.25 ) }
    dend_13 { pt3dadd( -67.4944, -187.262, -62.8743, 0.22 ) }
    dend_13 { pt3dadd( -67.5061, -187.328, -62.8915, 0.22 ) }
    dend_13 { pt3dadd( -67.6323, -187.897, -63.0781, 0.74 ) }
    dend_13 { pt3dadd( -67.6472, -187.952, -63.1022, 0.74 ) }
    dend_13 { pt3dadd( -67.7339, -188.21, -63.2181, 0.74 ) }
    dend_13 { pt3dadd( -68.1056, -189.192, -63.6246, 0.15 ) }
    dend_13 { pt3dadd( -68.4267, -189.983, -63.9084, 1.11 ) }
    dend_13 { pt3dadd( -68.4822, -190.125, -63.957, 1.11 ) }
    dend_13 { pt3dadd( -68.5097, -190.197, -63.9802, 1.11 ) }
    dend_13 { pt3dadd( -69.2269, -192.001, -64.591, 0.22 ) }
    dend_13 { pt3dadd( -69.4485, -192.546, -64.7846, 1.03 ) }
    dend_13 { pt3dadd( -69.6288, -192.979, -64.9409, 1.11 ) }
    dend_13 { pt3dadd( -70.1762, -194.265, -65.4446, 0.22 ) }
    dend_13 { pt3dadd( -70.2631, -194.466, -65.53, 0.59 ) }
    dend_13 { pt3dadd( -70.6875, -195.376, -65.9416, 0.22 ) }
    dend_13 { pt3dadd( -70.9033, -195.8, -66.1518, 1.33 ) }
    dend_13 { pt3dadd( -71.0987, -196.146, -66.3213, 1.55 ) }
    dend_13 { pt3dadd( -71.4294, -196.651, -66.5699, 0.88 ) }
    dend_13 { pt3dadd( -72.1432, -197.668, -67.0365, 0.22 ) }
    dend_13 { pt3dadd( -72.4673, -198.127, -67.2378, 0.66 ) }
    dend_13 { pt3dadd( -72.6062, -198.343, -67.3503, 0.66 ) }
    dend_13 { pt3dadd( -73.098, -199.148, -67.824, 0.22 ) }
    dend_13 { pt3dadd( -73.5355, -199.917, -68.3163, 1.62 ) }
    dend_13 { pt3dadd( -73.8335, -200.494, -68.7198, 2.06 ) }
    dend_13 { pt3dadd( -74.0715, -200.982, -69.0962, 2.06 ) }
    dend_13 { pt3dadd( -74.8667, -202.703, -70.4462, 0.22 ) }
    dend_13 { pt3dadd( -74.8667, -202.703, -70.4462, 0.59 ) }
    dend_13 { pt3dadd( -74.9203, -202.808, -70.534, 0.59 ) }
    dend_13 { pt3dadd( -75.2862, -203.429, -71.0695, 0.22 ) }
    dend_13 { pt3dadd( -75.6874, -203.982, -71.5705, 0.22 ) }
    dend_13 { pt3dadd( -76.1764, -204.531, -72.0635, 1.77 ) }
    dend_13 { pt3dadd( -76.4901, -204.815, -72.2995, 2.06 ) }
    dend_13 { pt3dadd( -77.764, -205.88, -73.141, 0.15 ) }
    dend_13 { pt3dadd( -78.0298, -206.08, -73.2996, 0.74 ) }
    dend_13 { pt3dadd( -78.3543, -206.276, -73.4534, 0.74 ) }
    dend_13 { pt3dadd( -79.1049, -206.661, -73.7294, 0.22 ) }
    dend_13 { pt3dadd( -79.7829, -206.957, -73.9286, 0.22 ) }
    dend_13 { pt3dadd( -80.561, -207.257, -74.1088, 1.18 ) }
    dend_13 { pt3dadd( -80.961, -207.395, -74.166, 1.55 ) }
    dend_13 { pt3dadd( -82.2598, -207.821, -74.3174, 0.29 ) }
    dend_13 { pt3dadd( -83.2296, -208.124, -74.4147, 0.22 ) }
    dend_13 { pt3dadd( -83.6504, -208.237, -74.4706, 0.74 ) }
    dend_13 { pt3dadd( -83.9832, -208.311, -74.5344, 1.03 ) }
    dend_13 { pt3dadd( -85.0188, -208.492, -74.8138, 0.15 ) }
    dend_13 { pt3dadd( -85.3209, -208.537, -74.9343, 0.37 ) }
    dend_13 { pt3dadd( -85.3801, -208.544, -74.9683, 0.37 ) }
    dend_13 { pt3dadd( -86.268, -208.607, -75.5911, 0.22 ) }
    dend_13 { pt3dadd( -86.8675, -208.639, -76.0586, 1.18 ) }
    dend_13 { pt3dadd( -87.2779, -208.667, -76.4095, 1.55 ) }
    dend_13 { pt3dadd( -88.2398, -208.755, -77.3053, 0.22 ) }
    dend_13 { pt3dadd( -88.7091, -208.803, -77.716, 0.22 ) }
    dend_13 { pt3dadd( -89.3034, -208.874, -78.201, 0.96 ) }
    dend_13 { pt3dadd( -89.5223, -208.899, -78.3573, 1.33 ) }
    dend_13 { pt3dadd( -90.6382, -209.008, -79.0804, 0.22 ) }
    dend_13 { pt3dadd( -91.1196, -209.053, -79.3528, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_13 { pt3dadd( -92.0266, -209.129, -79.8094, 0.96 ) }
    dend_13 { pt3dadd( -92.2731, -209.148, -79.9184, 1.25 ) }
    dend_13 { pt3dadd( -93.9099, -209.275, -80.5823, 0.22 ) }
    dend_13 { pt3dadd( -94.5654, -209.333, -80.8427, 0.22 ) }
    dend_13 { pt3dadd( -95.8253, -209.453, -81.3274, 1.84 ) }
    dend_13 { pt3dadd( -96.0839, -209.488, -81.4277, 2.36 ) }
    dend_13 { pt3dadd( -97.7589, -209.797, -82.1065, 0.22 ) }
    dend_13 { pt3dadd( -98.2062, -209.894, -82.2843, 0.66 ) }
    dend_13 { pt3dadd( -98.8742, -210.085, -82.5632, 0.22 ) }
    dend_13 { pt3dadd( -98.9239, -210.101, -82.5855, 0.22 ) }
    dend_13 { pt3dadd( -99.5592, -210.328, -82.9333, 0.96 ) }
    dend_13 { pt3dadd( -99.8459, -210.436, -83.1137, 0.96 ) }
    dend_13 { pt3dadd( -99.8952, -210.459, -83.1521, 0.96 ) }
    dend_13 { pt3dadd( -100.646, -210.788, -83.7402, 0.22 ) }
    dend_13 { pt3dadd( -100.696, -210.809, -83.7795, 0.22 ) }
    dend_13 { pt3dadd( -101.47, -211.14, -84.3956, 0.22 ) }
    dend_13 { pt3dadd( -101.526, -211.164, -84.4406, 0.22 ) }
    dend_13 { pt3dadd( -102.333, -211.547, -85.0483, 0.22 ) }
    dend_13 { pt3dadd( -102.39, -211.575, -85.0899, 0.22 ) }
    dend_13 { pt3dadd( -102.759, -211.758, -85.343, 1.11 ) }
    dend_13 { pt3dadd( -103.137, -211.947, -85.6004, 1.4 ) }
    dend_13 { pt3dadd( -103.291, -212.025, -85.704, 1.69 ) }
    dend_13 { pt3dadd( -104.77, -212.765, -86.6953, 0.22 ) }
    dend_13 { pt3dadd( -105.147, -212.947, -86.9466, 0.66 ) }
    dend_13 { pt3dadd( -105.324, -213.033, -87.0629, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.5456, -34.1269, 0.545422, 2.58 ) }
    dend_8 { pt3dadd( -7.96109, -35.4896, 0.547929, 2.58 ) }
    dend_8 { pt3dadd( -7.45677, -37.0454, 0.432634, 1.11 ) }
    dend_8 { pt3dadd( -7.08716, -38.3724, 0.326866, 0.66 ) }
    dend_8 { pt3dadd( -6.81489, -39.4053, 0.23811, 0.59 ) }
    dend_8 { pt3dadd( -6.37125, -41.0622, 0.0781596, 1.25 ) }
    dend_8 { pt3dadd( -6.17447, -41.7581, 0.00891292, 1.62 ) }
    dend_8 { pt3dadd( -5.59633, -43.9376, -0.214404, 1.11 ) }
    dend_8 { pt3dadd( -5.2232, -45.2347, -0.358088, 1.33 ) }
    dend_8 { pt3dadd( -4.83175, -46.4071, -0.506677, 1.92 ) }
    dend_8 { pt3dadd( -4.34582, -47.6496, -0.666412, 1.99 ) }
    dend_8 { pt3dadd( -3.76507, -48.9311, -0.849075, 1.33 ) }
    dend_8 { pt3dadd( -3.11669, -50.302, -1.06747, 0.96 ) }
    dend_8 { pt3dadd( -2.3778, -51.8048, -1.31762, 0.96 ) }
    dend_8 { pt3dadd( -2.3521, -51.8591, -1.32975, 0.96 ) }
    dend_8 { pt3dadd( -1.95599, -52.8007, -1.60647, 0.74 ) }
    dend_8 { pt3dadd( -1.4556, -54.2234, -2.23775, 0.52 ) }
    dend_8 { pt3dadd( -1.18737, -55.2075, -2.83107, 0.52 ) }
    dend_8 { pt3dadd( -1.17552, -55.2638, -2.87222, 0.52 ) }
    dend_8 { pt3dadd( -1.03435, -56.0531, -3.49672, 0.88 ) }
    dend_8 { pt3dadd( -0.864753, -57.0584, -4.27778, 1.18 ) }
    dend_8 { pt3dadd( -0.61508, -58.6923, -5.51784, 0.59 ) }
    dend_8 { pt3dadd( -0.496014, -59.6641, -6.19175, 0.59 ) }
    dend_8 { pt3dadd( -0.489751, -59.7152, -6.22424, 0.59 ) }
    dend_8 { pt3dadd( -0.390423, -60.5771, -6.69171, 0.59 ) }
    dend_8 { pt3dadd( -0.252553, -62.0199, -7.29226, 1.55 ) }
    dend_8 { pt3dadd( -0.19479, -63.0728, -7.57561, 2.14 ) }
    dend_8 { pt3dadd( -0.194732, -63.6762, -7.68524, 2.36 ) }
    dend_8 { pt3dadd( -0.197945, -63.7379, -7.69655, 2.36 ) }
    dend_8 { pt3dadd( -0.275281, -64.3967, -7.85526, 2.36 ) }
    dend_8 { pt3dadd( -0.426017, -65.1462, -8.11907, 2.06 ) }
    dend_8 { pt3dadd( -0.733725, -66.2267, -8.60222, 1.77 ) }
    dend_8 { pt3dadd( -1.08491, -67.336, -9.15395, 0.74 ) }
    dend_8 { pt3dadd( -1.26236, -67.8706, -9.4461, 0.52 ) }
    dend_8 { pt3dadd( -1.58175, -68.7698, -9.98265, 0.44 ) }
    dend_8 { pt3dadd( -1.99767, -69.8065, -10.706, 0.44 ) }
    dend_8 { pt3dadd( -2.42819, -70.7671, -11.4948, 2.06 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 6.50111, -200.376, 14.8105, 0.88 ) }
    dend_4 { pt3dadd( 6.3191, -202.007, 14.5983, 0.88 ) }
    dend_4 { pt3dadd( 6.17897, -203.559, 14.2877, 0.88 ) }
    dend_4 { pt3dadd( 6.11888, -204.64, 14.0421, 1.18 ) }
    dend_4 { pt3dadd( 6.08519, -205.34, 13.8621, 1.18 ) }
    dend_4 { pt3dadd( 6.00338, -207.234, 13.3644, 0.52 ) }
    dend_4 { pt3dadd( 5.9663, -208.093, 13.1387, 0.52 ) }
    dend_4 { pt3dadd( 5.9238, -209.776, 12.6433, 1.99 ) }
    dend_4 { pt3dadd( 5.90389, -211.389, 12.1032, 3.09 ) }
    dend_4 { pt3dadd( 5.90402, -212.401, 11.7308, 3.61 ) }
    dend_4 { pt3dadd( 5.90755, -213.592, 11.2862, 3.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.50111, -200.376, 14.8105, 0.74 ) }
    dend_3 { pt3dadd( 7.1576, -201.417, 14.2426, 0.74 ) }
    dend_3 { pt3dadd( 7.87126, -202.727, 13.6197, 0.66 ) }
    dend_3 { pt3dadd( 8.22694, -203.379, 13.3093, 1.11 ) }
    dend_3 { pt3dadd( 8.45561, -203.799, 13.1097, 1.25 ) }
    dend_3 { pt3dadd( 9.50151, -205.718, 12.1969, 0.29 ) }
    dend_3 { pt3dadd( 9.94604, -206.533, 11.8089, 0.29 ) }
    dend_3 { pt3dadd( 10.4568, -207.623, 11.2785, 0.29 ) }
    dend_3 { pt3dadd( 15.273, -216.416, 7.91172, 0.29 ) }
    dend_3 { pt3dadd( 21.2136, -224.909, 5.94359, 0.29 ) }
    dend_3 { pt3dadd( 27.6943, -232.792, 3.44624, 0.29 ) }
    dend_3 { pt3dadd( 33.5368, -241.509, 2.2244, 0.29 ) }
    dend_3 { pt3dadd( 38.869, -250.582, 1.01706, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 86/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -15.2334, 140.804, -69.9719, 0.22 ) }
    dend_69 { pt3dadd( -15.682, 140.068, -71.3488, 0.22 ) }
    dend_69 { pt3dadd( -15.855, 139.819, -71.9362, 1.18 ) }
    dend_69 { pt3dadd( -15.9175, 139.739, -72.1284, 1.18 ) }
    dend_69 { pt3dadd( -16.79, 138.724, -74.6523, 0.22 ) }
    dend_69 { pt3dadd( -16.9812, 138.512, -75.1939, 0.22 ) }
    dend_69 { pt3dadd( -17.6064, 137.819, -76.9654, 0.74 ) }
    dend_69 { pt3dadd( -18.4309, 137.068, -79.2477, 0.22 ) }
    dend_69 { pt3dadd( -18.6967, 136.85, -79.9834, 1.03 ) }
    dend_69 { pt3dadd( -18.8026, 136.767, -80.2731, 1.25 ) }
    dend_69 { pt3dadd( -18.8921, 136.708, -80.488, 1.25 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 97/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -15.2334, 140.804, -69.9719, 0.52 ) }
    dend_68 { pt3dadd( -14.7508, 141.978, -71.2826, 0.52 ) }
    dend_68 { pt3dadd( -14.4838, 142.702, -72.0622, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_68 { pt3dadd( -14.1561, 143.832, -73.146, 0.88 ) }
    dend_68 { pt3dadd( -14.1115, 144.025, -73.3135, 1.03 ) }
    dend_68 { pt3dadd( -13.7945, 145.732, -74.6992, 0.15 ) }
    dend_68 { pt3dadd( -13.7265, 146.155, -75.0292, 0.52 ) }
    dend_68 { pt3dadd( -13.7197, 146.319, -75.1393, 0.52 ) }
    dend_68 { pt3dadd( -13.7282, 147.512, -75.8397, 0.15 ) }
    dend_68 { pt3dadd( -13.7473, 148.056, -76.1125, 0.81 ) }
    dend_68 { pt3dadd( -13.786, 148.773, -76.4523, 1.11 ) }
    dend_68 { pt3dadd( -13.7922, 148.833, -76.4758, 1.11 ) }
    dend_68 { pt3dadd( -13.9286, 150.217, -77.0326, 0.22 ) }
    dend_68 { pt3dadd( -13.9826, 150.827, -77.2963, 0.96 ) }
    dend_68 { pt3dadd( -14.01, 151.213, -77.4894, 1.11 ) }
    // Section: dend_66, id: dend_66, parent: dend_28 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -8.82633, 124.604, -18.5847, 0.96 ) }
    dend_66 { pt3dadd( -10.0742, 125.694, -19.1475, 0.96 ) }
    dend_66 { pt3dadd( -11.3222, 126.798, -19.7086, 1.03 ) }
    dend_66 { pt3dadd( -11.6042, 127.055, -19.8517, 1.03 ) }
    dend_66 { pt3dadd( -12.5612, 127.948, -20.3624, 0.29 ) }
    dend_66 { pt3dadd( -13.2176, 128.642, -20.7468, 1.25 ) }
    dend_66 { pt3dadd( -13.6228, 129.121, -21.0028, 1.47 ) }
    dend_66 { pt3dadd( -13.7315, 129.286, -21.0834, 1.47 ) }
    dend_66 { pt3dadd( -14.5341, 130.804, -21.7169, 0.29 ) }
    dend_66 { pt3dadd( -14.6022, 130.942, -21.7752, 0.29 ) }
    dend_66 { pt3dadd( -15.0982, 132.1, -22.2559, 0.29 ) }
    dend_66 { pt3dadd( -15.2865, 132.532, -22.4566, 0.59 ) }
    dend_66 { pt3dadd( -15.6996, 133.494, -22.923, 0.44 ) }
    dend_66 { pt3dadd( -16.2149, 134.712, -23.5209, 2.28 ) }
    dend_66 { pt3dadd( -16.5174, 135.442, -23.8763, 2.65 ) }
    dend_66 { pt3dadd( -16.6678, 135.79, -24.0516, 2.65 ) }
    dend_66 { pt3dadd( -17.7089, 138.064, -25.2252, 0.37 ) }
    dend_66 { pt3dadd( -18.0146, 138.786, -25.5859, 0.29 ) }
    dend_66 { pt3dadd( -18.0479, 138.877, -25.6301, 0.29 ) }
    dend_66 { pt3dadd( -18.1984, 139.397, -25.8595, 0.44 ) }
    dend_66 { pt3dadd( -18.2648, 139.707, -25.973, 0.44 ) }
    dend_66 { pt3dadd( -18.4125, 140.637, -26.2534, 0.15 ) }
    dend_66 { pt3dadd( -18.4722, 141.457, -26.4143, 0.74 ) }
    dend_66 { pt3dadd( -18.4797, 141.536, -26.4314, 0.74 ) }
    dend_66 { pt3dadd( -18.5627, 142.016, -26.5541, 0.74 ) }
    dend_66 { pt3dadd( -18.6478, 142.417, -26.662, 0.52 ) }
    dend_66 { pt3dadd( -18.8786, 143.355, -26.8988, 0.29 ) }
    dend_66 { pt3dadd( -19.1874, 144.52, -27.1736, 1.18 ) }
    dend_66 { pt3dadd( -19.3422, 145.07, -27.2957, 1.69 ) }
    dend_66 { pt3dadd( -19.9698, 147.021, -27.7656, 0.29 ) }
    dend_66 { pt3dadd( -20.2303, 147.778, -27.949, 0.29 ) }
    dend_66 { pt3dadd( -20.7489, 149.215, -28.2806, 1.77 ) }
    dend_66 { pt3dadd( -20.9005, 149.596, -28.362, 2.73 ) }
    dend_66 { pt3dadd( -21.0316, 149.897, -28.42, 2.73 ) }
    dend_66 { pt3dadd( -22.1788, 152.394, -28.8605, 0.29 ) }
    dend_66 { pt3dadd( -22.5277, 153.126, -28.9725, 0.29 ) }
    dend_66 { pt3dadd( -22.668, 153.392, -29.0099, 0.59 ) }
    dend_66 { pt3dadd( -23.1824, 154.281, -29.1201, 0.22 ) }
    dend_66 { pt3dadd( -23.5626, 154.894, -29.1786, 0.74 ) }
    dend_66 { pt3dadd( -23.7105, 155.111, -29.1794, 1.03 ) }
    dend_66 { pt3dadd( -23.7603, 155.17, -29.1664, 1.03 ) }
    dend_66 { pt3dadd( -24.0935, 155.532, -29.084, 0.81 ) }
    dend_66 { pt3dadd( -24.1869, 155.641, -29.0625, 0.81 ) }
    dend_66 { pt3dadd( -25.0182, 156.746, -28.8536, 0.22 ) }
    dend_66 { pt3dadd( -25.3967, 157.295, -28.7595, 0.59 ) }
    dend_66 { pt3dadd( -26.0058, 158.213, -28.5978, 0.22 ) }
    dend_66 { pt3dadd( -26.0976, 158.358, -28.5702, 0.22 ) }
    dend_66 { pt3dadd( -26.4641, 158.993, -28.4403, 0.22 ) }
    dend_66 { pt3dadd( -26.866, 159.766, -28.2754, 0.22 ) }
    dend_66 { pt3dadd( -27.3974, 160.892, -28.0421, 1.62 ) }
    dend_66 { pt3dadd( -27.7596, 161.708, -27.8813, 2.14 ) }
    dend_66 { pt3dadd( -28.0635, 162.415, -27.7391, 2.14 ) }
    dend_66 { pt3dadd( -28.8475, 164.195, -27.3596, 0.29 ) }
    dend_66 { pt3dadd( -29.0985, 164.754, -27.2343, 0.44 ) }
    dend_66 { pt3dadd( -29.3803, 165.389, -27.0975, 0.22 ) }
    dend_66 { pt3dadd( -29.813, 166.402, -26.8948, 0.22 ) }
    dend_66 { pt3dadd( -30.2105, 167.373, -26.7269, 1.25 ) }
    dend_66 { pt3dadd( -30.3776, 167.788, -26.6657, 1.62 ) }
    dend_66 { pt3dadd( -30.4701, 168.025, -26.6449, 1.84 ) }
    dend_66 { pt3dadd( -31.1503, 169.797, -26.5993, 0.29 ) }
    dend_66 { pt3dadd( -31.6679, 171.209, -26.6326, 0.29 ) }
    dend_66 { pt3dadd( -32.0106, 172.175, -26.7293, 0.74 ) }
    dend_66 { pt3dadd( -32.1561, 172.559, -26.793, 0.74 ) }
    dend_66 { pt3dadd( -32.6803, 173.89, -27.0722, 0.22 ) }
    dend_66 { pt3dadd( -33.149, 175.061, -27.3637, 1.62 ) }
    dend_66 { pt3dadd( -33.1725, 175.122, -27.3815, 1.62 ) }
    dend_66 { pt3dadd( -33.4825, 175.963, -27.6366, 1.99 ) }
    dend_66 { pt3dadd( -34.186, 177.985, -28.2518, 0.22 ) }
    dend_66 { pt3dadd( -34.2069, 178.047, -28.27, 0.22 ) }
    dend_66 { pt3dadd( -34.5002, 178.995, -28.5062, 0.22 ) }
    dend_66 { pt3dadd( -34.7933, 180.034, -28.7404, 0.96 ) }
    dend_66 { pt3dadd( -34.9029, 180.432, -28.8222, 1.25 ) }
    dend_66 { pt3dadd( -35.3286, 182.257, -29.1446, 0.22 ) }
    dend_66 { pt3dadd( -35.3411, 182.324, -29.1553, 0.22 ) }
    dend_66 { pt3dadd( -35.5202, 183.243, -29.2942, 0.74 ) }
    dend_66 { pt3dadd( -35.5693, 183.492, -29.3279, 0.88 ) }
    dend_66 { pt3dadd( -35.7059, 184.148, -29.4077, 0.29 ) }
    dend_66 { pt3dadd( -35.9552, 185.424, -29.5366, 0.22 ) }
    dend_66 { pt3dadd( -36.0908, 186.251, -29.5997, 0.22 ) }
    dend_66 { pt3dadd( -36.2075, 187.414, -29.6973, 1.33 ) }
    dend_66 { pt3dadd( -36.2233, 187.843, -29.7369, 1.92 ) }
    dend_66 { pt3dadd( -36.2232, 187.912, -29.7426, 1.92 ) }
    dend_66 { pt3dadd( -36.2083, 188.426, -29.7825, 1.77 ) }
    dend_66 { pt3dadd( -36.1905, 188.96, -29.8193, 1.69 ) }
    dend_66 { pt3dadd( -36.118, 190.789, -29.9393, 0.22 ) }
    dend_66 { pt3dadd( -36.0586, 192.302, -29.9923, 0.22 ) }
    dend_66 { pt3dadd( -36.016, 193.726, -30.0121, 1.47 ) }
    dend_66 { pt3dadd( -36.0054, 194.34, -30.0073, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_66 { pt3dadd( -36.0078, 194.75, -29.9927, 1.92 ) }
    dend_66 { pt3dadd( -36.0289, 195.331, -29.9528, 1.47 ) }
    dend_66 { pt3dadd( -36.1833, 197.365, -29.7426, 0.22 ) }
    dend_66 { pt3dadd( -36.2616, 198.188, -29.631, 0.44 ) }
    dend_66 { pt3dadd( -36.3024, 198.572, -29.5827, 0.44 ) }
    dend_66 { pt3dadd( -36.4249, 199.656, -29.4583, 0.22 ) }
    dend_66 { pt3dadd( -36.5699, 200.909, -29.344, 1.18 ) }
    dend_66 { pt3dadd( -36.6385, 201.506, -29.305, 2.14 ) }
    dend_66 { pt3dadd( -36.7248, 202.195, -29.281, 1.62 ) }
    dend_66 { pt3dadd( -36.9958, 204.384, -29.2335, 0.22 ) }
    dend_66 { pt3dadd( -37.0053, 204.464, -29.2329, 0.22 ) }
    dend_66 { pt3dadd( -37.1778, 206.213, -29.244, 0.22 ) }
    dend_66 { pt3dadd( -37.3016, 207.71, -29.2634, 0.22 ) }
    dend_66 { pt3dadd( -37.3551, 208.689, -29.2696, 1.03 ) }
    dend_66 { pt3dadd( -37.3656, 209.026, -29.268, 1.62 ) }
    dend_66 { pt3dadd( -37.3681, 209.364, -29.258, 1.11 ) }
    dend_66 { pt3dadd( -37.2849, 210.979, -29.2099, 0.22 ) }
    dend_66 { pt3dadd( -37.2772, 211.047, -29.2077, 0.22 ) }
    dend_66 { pt3dadd( -37.0627, 212.337, -29.176, 1.47 ) }
    dend_66 { pt3dadd( -36.9808, 212.755, -29.166, 2.06 ) }
    dend_66 { pt3dadd( -36.9632, 212.846, -29.1638, 2.06 ) }
    dend_66 { pt3dadd( -36.6381, 214.8, -29.1323, 0.22 ) }
    dend_66 { pt3dadd( -36.4887, 215.887, -29.1217, 0.52 ) }
    dend_66 { pt3dadd( -36.3405, 217.337, -29.1034, 0.22 ) }
    dend_66 { pt3dadd( -36.2726, 218.303, -29.0898, 1.33 ) }
    dend_66 { pt3dadd( -36.2574, 218.802, -29.0856, 1.33 ) }
    dend_66 { pt3dadd( -36.2781, 220.504, -29.0796, 0.22 ) }
    dend_66 { pt3dadd( -36.3232, 221.157, -29.0846, 0.22 ) }
    dend_66 { pt3dadd( -36.4014, 222.048, -29.1118, 0.66 ) }
    dend_66 { pt3dadd( -36.4385, 222.395, -29.1301, 0.66 ) }
    dend_66 { pt3dadd( -36.6026, 224.032, -29.2592, 0.22 ) }
    dend_66 { pt3dadd( -36.6085, 224.115, -29.2704, 0.22 ) }
    dend_66 { pt3dadd( -36.6544, 225.206, -29.4693, 0.22 ) }
    dend_66 { pt3dadd( -36.6918, 226.232, -29.7027, 0.96 ) }
    dend_66 { pt3dadd( -36.7078, 226.796, -29.8502, 1.62 ) }
    dend_66 { pt3dadd( -36.7244, 227.382, -30.0091, 1.4 ) }
    dend_66 { pt3dadd( -36.822, 229.252, -30.4893, 0.22 ) }
    dend_66 { pt3dadd( -36.8635, 229.74, -30.6075, 0.22 ) }
    dend_66 { pt3dadd( -36.9969, 230.91, -30.8711, 1.11 ) }
    dend_66 { pt3dadd( -37.0194, 231.08, -30.9054, 1.33 ) }
    dend_66 { pt3dadd( -37.1002, 231.566, -31.001, 1.18 ) }
    dend_66 { pt3dadd( -37.4879, 233.718, -31.4003, 0.22 ) }
    dend_66 { pt3dadd( -37.6907, 234.721, -31.576, 1.03 ) }
    dend_66 { pt3dadd( -37.8076, 235.283, -31.6731, 1.18 ) }
    dend_66 { pt3dadd( -37.9039, 235.684, -31.752, 1.03 ) }
    dend_66 { pt3dadd( -38.2658, 237.057, -32.0549, 0.15 ) }
    dend_66 { pt3dadd( -38.5845, 238.204, -32.336, 0.15 ) }
    dend_66 { pt3dadd( -38.884, 239.277, -32.6121, 1.33 ) }
    dend_66 { pt3dadd( -39.0492, 239.873, -32.7602, 1.55 ) }
    dend_66 { pt3dadd( -39.6503, 241.981, -33.2879, 0.15 ) }
    dend_66 { pt3dadd( -39.672, 242.059, -33.3063, 0.15 ) }
    dend_66 { pt3dadd( -39.9265, 243.031, -33.5033, 0.15 ) }
    dend_66 { pt3dadd( -40.2127, 244.147, -33.7134, 1.11 ) }
    dend_66 { pt3dadd( -40.2964, 244.531, -33.7791, 1.55 ) }
    dend_66 { pt3dadd( -40.5946, 246.194, -34.0394, 0.15 ) }
    dend_66 { pt3dadd( -40.7124, 247.091, -34.1439, 0.74 ) }
    dend_66 { pt3dadd( -40.8788, 248.42, -34.2796, 0.15 ) }
    dend_66 { pt3dadd( -40.8887, 248.499, -34.2856, 0.15 ) }
    dend_66 { pt3dadd( -40.9794, 249.259, -34.3299, 0.15 ) }
    dend_66 { pt3dadd( -41.0677, 250.173, -34.3645, 0.96 ) }
    dend_66 { pt3dadd( -41.0972, 250.591, -34.3731, 0.96 ) }
    dend_66 { pt3dadd( -41.2322, 252.445, -34.4298, 0.15 ) }
    dend_66 { pt3dadd( -41.2846, 253.232, -34.4636, 0.44 ) }
    dend_66 { pt3dadd( -41.2925, 253.323, -34.4693, 0.44 ) }
    dend_66 { pt3dadd( -41.4181, 254.501, -34.5716, 0.15 ) }
    dend_66 { pt3dadd( -41.5499, 255.633, -34.695, 1.03 ) }
    dend_66 { pt3dadd( -41.6073, 256.126, -34.7584, 1.33 ) }
    dend_66 { pt3dadd( -41.6953, 256.894, -34.8869, 0.59 ) }
    dend_66 { pt3dadd( -41.8417, 258.178, -35.1358, 0.15 ) }
    dend_66 { pt3dadd( -41.9558, 259.143, -35.3292, 0.88 ) }
    dend_66 { pt3dadd( -42.0217, 259.699, -35.4445, 1.03 ) }
    dend_66 { pt3dadd( -42.0861, 260.279, -35.5636, 0.66 ) }
    dend_66 { pt3dadd( -42.2665, 261.6, -35.9026, 0.15 ) }
    dend_66 { pt3dadd( -42.4776, 262.983, -36.3015, 0.15 ) }
    dend_66 { pt3dadd( -42.5856, 263.872, -36.5495, 0.96 ) }
    dend_66 { pt3dadd( -42.643, 264.384, -36.682, 1.25 ) }
    dend_66 { pt3dadd( -42.678, 264.725, -36.7643, 1.25 ) }
    dend_66 { pt3dadd( -42.8841, 266.863, -37.22, 0.15 ) }
    dend_66 { pt3dadd( -42.9316, 267.436, -37.3134, 0.44 ) }
    dend_66 { pt3dadd( -43.0196, 268.693, -37.4657, 0.15 ) }
    dend_66 { pt3dadd( -43.044, 269.284, -37.5148, 0.74 ) }
    dend_66 { pt3dadd( -43.0529, 269.879, -37.5469, 0.74 ) }
    dend_66 { pt3dadd( -43.0248, 270.998, -37.5903, 0.15 ) }
    dend_66 { pt3dadd( -42.9727, 271.93, -37.5972, 0.88 ) }
    dend_66 { pt3dadd( -42.9472, 272.513, -37.6198, 0.96 ) }
    dend_66 { pt3dadd( -42.9041, 273.958, -37.7246, 0.15 ) }
    dend_66 { pt3dadd( -42.8754, 274.723, -37.7761, 0.29 ) }
    dend_66 { pt3dadd( -42.8167, 276.126, -37.8599, 0.15 ) }
    dend_66 { pt3dadd( -42.7783, 276.891, -37.9015, 0.96 ) }
    dend_66 { pt3dadd( -42.7403, 277.555, -37.9441, 1.18 ) }
    dend_66 { pt3dadd( -42.5929, 279.815, -38.0783, 0.22 ) }
    dend_66 { pt3dadd( -42.5193, 280.834, -38.1366, 0.22 ) }
    dend_66 { pt3dadd( -42.4986, 281.089, -38.1497, 0.22 ) }
    dend_66 { pt3dadd( -42.4818, 281.265, -38.1584, 0.22 ) }
    dend_66 { pt3dadd( -42.3863, 282.448, -38.2707, 0.15 ) }
    dend_66 { pt3dadd( -42.3321, 283.438, -38.3971, 1.11 ) }
    dend_66 { pt3dadd( -42.3143, 283.981, -38.4841, 1.77 ) }
    dend_66 { pt3dadd( -42.3061, 284.405, -38.5618, 1.77 ) }
    dend_66 { pt3dadd( -42.306, 284.498, -38.5794, 1.77 ) }
    dend_66 { pt3dadd( -42.3062, 286.987, -39.0395, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_66 { pt3dadd( -42.3155, 287.807, -39.1746, 0.15 ) }
    dend_66 { pt3dadd( -42.316, 287.875, -39.1854, 0.15 ) }
    dend_66 { pt3dadd( -42.314, 288.666, -39.2926, 0.52 ) }
    dend_66 { pt3dadd( -42.3147, 289.01, -39.3279, 0.59 ) }
    dend_66 { pt3dadd( -42.3288, 290.923, -39.4503, 0.15 ) }
    dend_66 { pt3dadd( -42.3197, 291.929, -39.4854, 1.03 ) }
    dend_66 { pt3dadd( -42.3163, 292.46, -39.5069, 1.77 ) }
    dend_66 { pt3dadd( -42.3169, 292.971, -39.5289, 1.55 ) }
    dend_66 { pt3dadd( -42.3642, 295.173, -39.5994, 0.15 ) }
    dend_66 { pt3dadd( -42.3892, 295.7, -39.6152, 0.29 ) }
    dend_66 { pt3dadd( -42.4575, 296.6, -39.6435, 0.15 ) }
    dend_66 { pt3dadd( -42.5449, 297.602, -39.6741, 0.15 ) }
    dend_66 { pt3dadd( -42.5608, 297.776, -39.6787, 0.15 ) }
    dend_66 { pt3dadd( -42.7395, 299.55, -39.7335, 0.15 ) }
    dend_66 { pt3dadd( -42.8745, 300.825, -39.7733, 1.11 ) }
    dend_66 { pt3dadd( -42.8836, 300.905, -39.7756, 1.11 ) }
    dend_66 { pt3dadd( -42.972, 301.619, -39.7889, 1.4 ) }
    dend_66 { pt3dadd( -43.0654, 302.421, -39.8264, 0.59 ) }
    dend_66 { pt3dadd( -43.2007, 303.703, -39.9122, 0.22 ) }
    dend_66 { pt3dadd( -43.2866, 304.709, -40.0043, 0.22 ) }
    dend_66 { pt3dadd( -43.3658, 305.783, -40.1093, 1.03 ) }
    dend_66 { pt3dadd( -43.4091, 306.443, -40.1863, 1.55 ) }
    dend_66 { pt3dadd( -43.556, 309.35, -40.5655, 0.15 ) }
    dend_66 { pt3dadd( -43.5597, 309.433, -40.5762, 0.15 ) }
    dend_66 { pt3dadd( -43.576, 310.138, -40.6559, 0.44 ) }
    dend_66 { pt3dadd( -43.5765, 310.567, -40.7004, 0.44 ) }
    dend_66 { pt3dadd( -43.5602, 312.333, -40.865, 0.15 ) }
    dend_66 { pt3dadd( -43.5479, 313.352, -40.9504, 1.03 ) }
    dend_66 { pt3dadd( -43.5345, 314.035, -41.0003, 1.62 ) }
    dend_66 { pt3dadd( -43.5833, 316.215, -41.2111, 0.15 ) }
    dend_66 { pt3dadd( -43.7327, 319.024, -41.5171, 0.15 ) }
    dend_66 { pt3dadd( -43.82, 320.165, -41.6527, 0.15 ) }
    dend_66 { pt3dadd( -43.898, 320.943, -41.7522, 1.11 ) }
    dend_66 { pt3dadd( -44.0003, 321.785, -41.8782, 1.4 ) }
    dend_66 { pt3dadd( -44.3716, 324.569, -42.3678, 0.15 ) }
    dend_66 { pt3dadd( -44.4949, 325.382, -42.528, 0.15 ) }
    dend_66 { pt3dadd( -44.6435, 326.364, -42.7237, 0.74 ) }
    dend_66 { pt3dadd( -44.6877, 326.8, -42.8114, 0.74 ) }
    dend_66 { pt3dadd( -44.6917, 326.879, -42.8273, 0.74 ) }
    dend_66 { pt3dadd( -44.7073, 329.081, -43.2575, 0.15 ) }
    dend_66 { pt3dadd( -44.6404, 330.399, -43.4957, 1.55 ) }
    dend_66 { pt3dadd( -44.5889, 331.214, -43.6582, 1.92 ) }
    dend_66 { pt3dadd( -44.4224, 333.613, -44.1505, 0.15 ) }
    dend_66 { pt3dadd( -44.3644, 334.403, -44.3133, 0.88 ) }
    dend_66 { pt3dadd( -44.351, 334.572, -44.3492, 0.88 ) }
    dend_66 { pt3dadd( -44.3009, 335.141, -44.4778, 0.88 ) }
    dend_66 { pt3dadd( -44.1453, 336.863, -44.8849, 0.15 ) }
    dend_66 { pt3dadd( -44.0833, 337.523, -45.0284, 0.15 ) }
    dend_66 { pt3dadd( -44.0092, 338.226, -45.1669, 0.74 ) }
    dend_66 { pt3dadd( -43.8287, 339.856, -45.4716, 0.15 ) }
    dend_66 { pt3dadd( -43.8197, 339.934, -45.4841, 0.15 ) }
    dend_66 { pt3dadd( -43.7704, 340.336, -45.5372, 0.37 ) }
    dend_66 { pt3dadd( -43.6549, 341.27, -45.6227, 0.22 ) }
    dend_66 { pt3dadd( -43.5745, 341.873, -45.6602, 0.88 ) }
    dend_66 { pt3dadd( -43.5653, 341.942, -45.6621, 0.88 ) }
    dend_66 { pt3dadd( -43.3922, 343.787, -45.7323, 0.15 ) }
    dend_66 { pt3dadd( -43.3378, 344.569, -45.7761, 0.15 ) }
    dend_66 { pt3dadd( -43.3333, 344.661, -45.7834, 0.15 ) }
    dend_66 { pt3dadd( -43.3013, 345.952, -45.9104, 1.25 ) }
    dend_66 { pt3dadd( -43.3037, 346.275, -45.9512, 1.25 ) }
    dend_66 { pt3dadd( -43.3896, 348.422, -46.2446, 0.15 ) }
    dend_66 { pt3dadd( -43.3956, 348.504, -46.2568, 0.15 ) }
    dend_66 { pt3dadd( -43.4784, 349.286, -46.3867, 1.18 ) }
    dend_66 { pt3dadd( -43.5083, 349.528, -46.4255, 1.18 ) }
    dend_66 { pt3dadd( -43.7964, 351.284, -46.7452, 0.15 ) }
    dend_66 { pt3dadd( -44.0836, 352.576, -46.9825, 0.15 ) }
    dend_66 { pt3dadd( -44.1697, 352.897, -47.0374, 0.44 ) }
    dend_66 { pt3dadd( -44.8127, 355.108, -47.4128, 0.15 ) }
    dend_66 { pt3dadd( -45.3152, 356.692, -47.6817, 1.77 ) }
    dend_66 { pt3dadd( -45.6375, 357.632, -47.8468, 1.55 ) }
    dend_66 { pt3dadd( -46.1918, 359.125, -48.1144, 0.22 ) }
    dend_66 { pt3dadd( -46.4504, 359.748, -48.2344, 0.37 ) }
    dend_66 { pt3dadd( -46.8907, 360.74, -48.4169, 0.15 ) }
    dend_66 { pt3dadd( -46.9203, 360.801, -48.4258, 0.15 ) }
    dend_66 { pt3dadd( -47.2731, 361.485, -48.5252, 0.74 ) }
    dend_66 { pt3dadd( -47.4535, 361.861, -48.5663, 0.74 ) }
    dend_66 { pt3dadd( -47.8407, 362.739, -48.66, 0.15 ) }
    dend_66 { pt3dadd( -48.0834, 363.275, -48.7049, 0.66 ) }
    dend_66 { pt3dadd( -48.263, 363.676, -48.7267, 1.25 ) }
    dend_66 { pt3dadd( -49.0666, 365.421, -48.7932, 0.15 ) }
    dend_66 { pt3dadd( -49.1057, 365.506, -48.7952, 0.15 ) }
    dend_66 { pt3dadd( -49.5815, 366.569, -48.8165, 0.15 ) }
    dend_66 { pt3dadd( -49.9944, 367.569, -48.8332, 0.96 ) }
    dend_66 { pt3dadd( -50.1826, 368.027, -48.8439, 1.55 ) }
    dend_66 { pt3dadd( -51.1183, 370.413, -48.9133, 0.15 ) }
    dend_66 { pt3dadd( -51.1408, 370.477, -48.9153, 0.15 ) }
    dend_66 { pt3dadd( -51.5296, 371.666, -48.9671, 1.18 ) }
    dend_66 { pt3dadd( -51.748, 372.387, -49.0091, 0.52 ) }
    dend_66 { pt3dadd( -52.0851, 373.655, -49.0975, 0.15 ) }
    dend_66 { pt3dadd( -52.2545, 374.391, -49.1486, 0.52 ) }
    dend_66 { pt3dadd( -52.6627, 376.54, -49.2596, 0.15 ) }
    dend_66 { pt3dadd( -52.8005, 377.272, -49.2703, 0.15 ) }
    dend_66 { pt3dadd( -53.0096, 378.353, -49.2389, 0.66 ) }
    dend_66 { pt3dadd( -53.1372, 379.012, -49.1876, 0.96 ) }
    dend_66 { pt3dadd( -53.2283, 379.499, -49.1209, 0.96 ) }
    dend_66 { pt3dadd( -53.5691, 381.263, -48.7157, 0.15 ) }
    dend_66 { pt3dadd( -53.808, 382.414, -48.3454, 0.52 ) }
    dend_66 { pt3dadd( -53.913, 382.909, -48.1666, 0.52 ) }
    dend_66 { pt3dadd( -54.0818, 383.692, -47.8567, 0.15 ) }
    dend_66 { pt3dadd( -54.2839, 384.613, -47.4705, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_66 { pt3dadd( -54.7743, 386.873, -46.4734, 0.15 ) }
    dend_66 { pt3dadd( -54.9357, 387.668, -46.1013, 1.18 ) }
    dend_66 { pt3dadd( -55.0591, 388.264, -45.8279, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -8.82633, 124.604, -18.5847, 0.59 ) }
    dend_29 { pt3dadd( -8.65373, 125.63, -18.7543, 0.59 ) }
    dend_29 { pt3dadd( -8.53817, 126.551, -18.9003, 1.18 ) }
    dend_29 { pt3dadd( -8.46382, 127.444, -19.0444, 1.84 ) }
    dend_29 { pt3dadd( -8.43262, 127.974, -19.1261, 2.06 ) }
    dend_29 { pt3dadd( -8.41373, 128.486, -19.1974, 2.06 ) }
    dend_29 { pt3dadd( -8.40137, 129.141, -19.278, 1.84 ) }
    dend_29 { pt3dadd( -8.41381, 129.863, -19.3476, 1.55 ) }
    dend_29 { pt3dadd( -8.47442, 131.16, -19.4472, 0.37 ) }
    dend_29 { pt3dadd( -8.53022, 131.992, -19.4968, 0.37 ) }
    dend_29 { pt3dadd( -8.62133, 133.011, -19.5568, 0.96 ) }
    dend_29 { pt3dadd( -8.72713, 134.026, -19.6127, 1.47 ) }
    dend_29 { pt3dadd( -8.78446, 134.53, -19.6358, 1.69 ) }
    dend_29 { pt3dadd( -8.8655, 135.277, -19.6646, 1.55 ) }
    dend_29 { pt3dadd( -8.93929, 135.956, -19.689, 1.33 ) }
    dend_29 { pt3dadd( -9.0057, 136.833, -19.738, 0.66 ) }
    dend_29 { pt3dadd( -9.05237, 137.934, -19.8425, 0.37 ) }
    dend_29 { pt3dadd( -9.06183, 139.184, -20.0008, 0.29 ) }
    dend_29 { pt3dadd( -9.03745, 140.246, -20.1606, 0.29 ) }
    dend_29 { pt3dadd( -9.0324, 140.329, -20.1751, 0.29 ) }
    dend_29 { pt3dadd( -8.84436, 142.123, -20.5199, 0.29 ) }
    dend_29 { pt3dadd( -8.72183, 142.98, -20.6889, 0.81 ) }
    dend_29 { pt3dadd( -8.62225, 143.609, -20.8196, 0.96 ) }
    dend_29 { pt3dadd( -8.61047, 143.688, -20.8347, 0.96 ) }
    dend_29 { pt3dadd( -8.54921, 144.193, -20.9179, 0.96 ) }
    dend_29 { pt3dadd( -8.432, 145.475, -21.0861, 0.29 ) }
    dend_29 { pt3dadd( -8.39146, 146.237, -21.1589, 0.29 ) }
    dend_29 { pt3dadd( -8.3511, 147.275, -21.2319, 1.47 ) }
    dend_29 { pt3dadd( -8.33875, 148.275, -21.3119, 2.06 ) }
    dend_29 { pt3dadd( -8.33419, 148.642, -21.3483, 2.5 ) }
    dend_29 { pt3dadd( -8.32946, 149.228, -21.4127, 2.43 ) }
    dend_29 { pt3dadd( -8.32216, 149.858, -21.4886, 2.14 ) }
    dend_29 { pt3dadd( -8.31166, 150.579, -21.5818, 1.77 ) }
    dend_29 { pt3dadd( -8.29578, 151.556, -21.71, 0.66 ) }
    dend_29 { pt3dadd( -8.27243, 153.04, -21.8966, 0.44 ) }
    dend_29 { pt3dadd( -8.25709, 154.222, -22.0307, 0.37 ) }
    dend_29 { pt3dadd( -8.25121, 155.328, -22.1404, 0.37 ) }
    dend_29 { pt3dadd( -8.26395, 156.44, -22.224, 1.33 ) }
    dend_29 { pt3dadd( -8.29431, 157.438, -22.2761, 1.77 ) }
    dend_29 { pt3dadd( -8.33813, 158.38, -22.2991, 2.28 ) }
    dend_29 { pt3dadd( -8.38682, 158.965, -22.3055, 2.65 ) }
    dend_29 { pt3dadd( -8.43457, 159.468, -22.311, 2.8 ) }
    dend_29 { pt3dadd( -8.50534, 160.167, -22.3177, 2.5 ) }
    dend_29 { pt3dadd( -8.55623, 160.754, -22.3269, 1.99 ) }
    dend_29 { pt3dadd( -8.5937, 161.249, -22.3398, 1.77 ) }
    dend_29 { pt3dadd( -8.63696, 162.055, -22.3719, 0.81 ) }
    dend_29 { pt3dadd( -8.65278, 163.146, -22.433, 0.44 ) }
    dend_29 { pt3dadd( -8.63879, 164.251, -22.5107, 0.37 ) }
    dend_29 { pt3dadd( -8.58938, 165.222, -22.594, 0.74 ) }
    dend_29 { pt3dadd( -8.55437, 165.713, -22.6378, 0.74 ) }
    dend_29 { pt3dadd( -8.49944, 166.434, -22.6963, 0.74 ) }
    dend_29 { pt3dadd( -8.40585, 167.885, -22.8051, 0.52 ) }
    dend_29 { pt3dadd( -8.40245, 167.955, -22.8102, 0.44 ) }
    dend_29 { pt3dadd( -8.36499, 169.052, -22.8873, 0.44 ) }
    dend_29 { pt3dadd( -8.34809, 169.971, -22.9467, 0.44 ) }
    dend_29 { pt3dadd( -8.33874, 171.579, -23.0426, 0.44 ) }
    dend_29 { pt3dadd( -8.36477, 173.532, -23.1406, 1.55 ) }
    dend_29 { pt3dadd( -8.39082, 174.472, -23.1815, 2.43 ) }
    dend_29 { pt3dadd( -8.40786, 175.155, -23.2103, 2.65 ) }
    dend_29 { pt3dadd( -8.42709, 175.744, -23.2413, 2.87 ) }
    dend_29 { pt3dadd( -8.4579, 176.602, -23.2917, 2.36 ) }
    dend_29 { pt3dadd( -8.50256, 177.516, -23.3615, 1.47 ) }
    dend_29 { pt3dadd( -8.53197, 178.129, -23.4073, 0.96 ) }
    dend_29 { pt3dadd( -8.60107, 179.338, -23.4941, 0.37 ) }
    dend_29 { pt3dadd( -8.66672, 180.417, -23.5666, 0.37 ) }
    dend_29 { pt3dadd( -8.74659, 181.751, -23.651, 0.29 ) }
    dend_29 { pt3dadd( -8.80219, 182.78, -23.7258, 1.69 ) }
    dend_29 { pt3dadd( -8.86846, 183.799, -23.8286, 2.28 ) }
    dend_29 { pt3dadd( -8.90962, 184.253, -23.8813, 2.73 ) }
    dend_29 { pt3dadd( -8.9604, 184.68, -23.9336, 2.8 ) }
    dend_29 { pt3dadd( -9.06275, 185.453, -24.0299, 1.99 ) }
    dend_29 { pt3dadd( -9.22597, 186.539, -24.183, 0.88 ) }
    dend_29 { pt3dadd( -9.45802, 187.813, -24.3527, 0.29 ) }
    dend_29 { pt3dadd( -9.65348, 188.673, -24.466, 0.37 ) }
    dend_29 { pt3dadd( -9.80253, 189.283, -24.5375, 0.44 ) }
    dend_29 { pt3dadd( -9.88655, 189.613, -24.563, 0.59 ) }
    dend_29 { pt3dadd( -9.92512, 189.776, -24.5674, 0.59 ) }
    dend_29 { pt3dadd( -10.026, 190.308, -24.5546, 0.44 ) }
    dend_29 { pt3dadd( -10.1247, 191.162, -24.5202, 0.37 ) }
    dend_29 { pt3dadd( -10.1302, 191.243, -24.5184, 0.37 ) }
    dend_29 { pt3dadd( -10.1668, 192.515, -24.5248, 0.52 ) }
    dend_29 { pt3dadd( -10.1643, 193.626, -24.551, 0.81 ) }
    dend_29 { pt3dadd( -10.1484, 194.15, -24.5779, 0.81 ) }
    dend_29 { pt3dadd( -10.1185, 194.689, -24.62, 0.66 ) }
    dend_29 { pt3dadd( -10.1146, 194.758, -24.6282, 0.66 ) }
    dend_29 { pt3dadd( -10.0985, 195.395, -24.7196, 0.44 ) }
    dend_29 { pt3dadd( -10.0933, 196.583, -24.9251, 0.37 ) }
    dend_29 { pt3dadd( -10.0961, 197.695, -25.131, 0.37 ) }
    dend_29 { pt3dadd( -10.0976, 197.763, -25.1463, 0.37 ) }
    dend_29 { pt3dadd( -10.146, 198.85, -25.445, 1.62 ) }
    dend_29 { pt3dadd( -10.2069, 199.772, -25.7291, 2.65 ) }
    dend_29 { pt3dadd( -10.2509, 200.304, -25.9062, 2.65 ) }
    dend_29 { pt3dadd( -10.357, 201.411, -26.3051, 1.92 ) }
    dend_29 { pt3dadd( -10.4925, 202.752, -26.799, 0.74 ) }
    dend_29 { pt3dadd( -10.619, 203.964, -27.2225, 0.37 ) }
    dend_29 { pt3dadd( -10.7239, 205.042, -27.54, 0.37 ) }
    dend_29 { pt3dadd( -10.7302, 205.109, -27.5555, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_29 { pt3dadd( -10.8054, 205.811, -27.6628, 0.37 ) }
    dend_29 { pt3dadd( -10.8249, 205.987, -27.6732, 0.37 ) }
    dend_29 { pt3dadd( -10.923, 207.004, -27.62, 0.37 ) }
    dend_29 { pt3dadd( -11.0308, 208.235, -27.4775, 1.03 ) }
    dend_29 { pt3dadd( -11.1123, 209.233, -27.3467, 1.77 ) }
    dend_29 { pt3dadd( -11.1554, 209.815, -27.2759, 2.06 ) }
    dend_29 { pt3dadd( -11.1939, 210.398, -27.2074, 1.92 ) }
    dend_29 { pt3dadd( -11.2433, 211.255, -27.1237, 1.33 ) }
    dend_29 { pt3dadd( -11.2726, 211.857, -27.0826, 0.59 ) }
    dend_29 { pt3dadd( -11.3225, 212.868, -27.054, 0.37 ) }
    dend_29 { pt3dadd( -11.3313, 213.483, -27.052, 0.59 ) }
    dend_29 { pt3dadd( -11.3172, 213.907, -27.0659, 0.66 ) }
    dend_29 { pt3dadd( -11.3, 214.165, -27.0818, 0.66 ) }
    dend_29 { pt3dadd( -11.2554, 214.763, -27.1266, 0.37 ) }
    dend_29 { pt3dadd( -11.2145, 215.363, -27.1714, 0.37 ) }
    dend_29 { pt3dadd( -11.1629, 216.488, -27.2398, 0.37 ) }
    dend_29 { pt3dadd( -11.131, 217.587, -27.295, 0.37 ) }
    dend_29 { pt3dadd( -11.1131, 218.61, -27.339, 0.59 ) }
    dend_29 { pt3dadd( -11.0959, 220.136, -27.3987, 0.52 ) }
    dend_29 { pt3dadd( -11.0898, 221.065, -27.4323, 1.33 ) }
    dend_29 { pt3dadd( -11.0942, 221.944, -27.4712, 2.14 ) }
    dend_29 { pt3dadd( -11.1208, 222.81, -27.5255, 2.36 ) }
    dend_29 { pt3dadd( -11.1466, 223.571, -27.6, 2.58 ) }
    dend_29 { pt3dadd( -11.1514, 224.204, -27.6912, 2.36 ) }
    dend_29 { pt3dadd( -11.134, 225.15, -27.8583, 1.62 ) }
    dend_29 { pt3dadd( -11.1058, 226.076, -28.0399, 0.81 ) }
    dend_29 { pt3dadd( -11.0582, 227.24, -28.2777, 0.52 ) }
    dend_29 { pt3dadd( -10.9992, 228.485, -28.5203, 0.52 ) }
    dend_29 { pt3dadd( -10.9534, 229.376, -28.6841, 0.44 ) }
    dend_29 { pt3dadd( -10.8692, 231.046, -28.961, 0.44 ) }
    dend_29 { pt3dadd( -10.7875, 232.707, -29.1958, 1.11 ) }
    dend_29 { pt3dadd( -10.7447, 233.639, -29.2918, 1.84 ) }
    dend_29 { pt3dadd( -10.7166, 234.557, -29.3523, 2.36 ) }
    dend_29 { pt3dadd( -10.7193, 234.886, -29.3622, 2.5 ) }
    dend_29 { pt3dadd( -10.7579, 235.651, -29.3601, 2.21 ) }
    dend_29 { pt3dadd( -10.8165, 236.401, -29.338, 1.55 ) }
    dend_29 { pt3dadd( -10.8827, 237.084, -29.3031, 0.96 ) }
    dend_29 { pt3dadd( -10.9511, 237.733, -29.2686, 0.66 ) }
    dend_29 { pt3dadd( -11.0414, 238.75, -29.2314, 0.37 ) }
    dend_29 { pt3dadd( -11.0926, 239.657, -29.2137, 0.66 ) }
    dend_29 { pt3dadd( -11.1129, 240.352, -29.2081, 0.88 ) }
    dend_29 { pt3dadd( -11.1096, 241.463, -29.2173, 0.37 ) }
    dend_29 { pt3dadd( -11.087, 242.149, -29.2342, 0.37 ) }
    dend_29 { pt3dadd( -11.0199, 243.258, -29.275, 0.37 ) }
    dend_29 { pt3dadd( -10.8943, 244.618, -29.3521, 1.11 ) }
    dend_29 { pt3dadd( -10.8859, 244.687, -29.3575, 1.11 ) }
    dend_29 { pt3dadd( -10.7465, 245.621, -29.4663, 1.99 ) }
    dend_29 { pt3dadd( -10.6299, 246.311, -29.5694, 2.21 ) }
    dend_29 { pt3dadd( -10.5429, 246.805, -29.6553, 2.36 ) }
    dend_29 { pt3dadd( -10.3467, 247.951, -29.8642, 1.33 ) }
    dend_29 { pt3dadd( -10.2142, 248.744, -30.0136, 0.52 ) }
    dend_29 { pt3dadd( -10.037, 249.935, -30.2276, 0.29 ) }
    dend_29 { pt3dadd( -9.97241, 250.433, -30.3102, 0.59 ) }
    dend_29 { pt3dadd( -9.92439, 250.852, -30.3738, 0.59 ) }
    dend_29 { pt3dadd( -9.83671, 251.688, -30.4893, 0.44 ) }
    dend_29 { pt3dadd( -9.76296, 252.455, -30.5835, 0.37 ) }
    dend_29 { pt3dadd( -9.68011, 253.303, -30.6769, 0.37 ) }
    dend_29 { pt3dadd( -9.5881, 254.253, -30.7812, 1.18 ) }
    dend_29 { pt3dadd( -9.51532, 254.949, -30.8728, 1.77 ) }
    dend_29 { pt3dadd( -9.42826, 255.701, -30.9867, 2.06 ) }
    dend_29 { pt3dadd( -9.34562, 256.374, -31.0991, 1.92 ) }
    dend_29 { pt3dadd( -9.26395, 257.031, -31.2159, 1.55 ) }
    dend_29 { pt3dadd( -9.15883, 258.059, -31.3875, 0.37 ) }
    dend_29 { pt3dadd( -9.0697, 259.184, -31.5613, 0.37 ) }
    dend_29 { pt3dadd( -9.06709, 259.267, -31.5733, 0.37 ) }
    dend_29 { pt3dadd( -9.07447, 260.116, -31.6829, 0.37 ) }
    dend_29 { pt3dadd( -9.07725, 260.199, -31.6925, 0.37 ) }
    dend_29 { pt3dadd( -9.14218, 261.802, -31.8602, 0.37 ) }
    dend_29 { pt3dadd( -9.14635, 261.886, -31.8673, 0.37 ) }
    dend_29 { pt3dadd( -9.24029, 263.383, -32.0, 1.18 ) }
    dend_29 { pt3dadd( -9.30007, 264.308, -32.0839, 1.62 ) }
    dend_29 { pt3dadd( -9.32661, 264.814, -32.1335, 1.84 ) }
    dend_29 { pt3dadd( -9.34841, 265.676, -32.2255, 1.55 ) }
    dend_29 { pt3dadd( -9.34497, 266.517, -32.3387, 1.11 ) }
    dend_29 { pt3dadd( -9.32833, 267.346, -32.4574, 0.52 ) }
    dend_29 { pt3dadd( -9.27886, 268.603, -32.6455, 0.44 ) }
    dend_29 { pt3dadd( -9.23369, 269.576, -32.8024, 0.37 ) }
    dend_29 { pt3dadd( -9.16811, 270.807, -33.0061, 0.37 ) }
    dend_29 { pt3dadd( -9.06664, 272.448, -33.2975, 1.33 ) }
    dend_29 { pt3dadd( -9.0324, 272.945, -33.3869, 1.84 ) }
    dend_29 { pt3dadd( -9.01915, 273.121, -33.4175, 1.84 ) }
    dend_29 { pt3dadd( -8.98031, 273.621, -33.5046, 1.84 ) }
    dend_29 { pt3dadd( -8.90828, 274.74, -33.6761, 1.25 ) }
    dend_29 { pt3dadd( -8.8744, 275.411, -33.7763, 0.74 ) }
    dend_29 { pt3dadd( -8.83118, 276.506, -33.9243, 0.37 ) }
    dend_29 { pt3dadd( -8.80233, 277.302, -34.0345, 0.44 ) }
    dend_29 { pt3dadd( -8.77806, 278.176, -34.1637, 0.44 ) }
    dend_29 { pt3dadd( -8.75412, 279.431, -34.3544, 0.44 ) }
    dend_29 { pt3dadd( -8.74421, 280.473, -34.5142, 1.03 ) }
    dend_29 { pt3dadd( -8.74394, 281.406, -34.651, 1.18 ) }
    dend_29 { pt3dadd( -8.75108, 282.202, -34.7804, 0.74 ) }
    dend_29 { pt3dadd( -8.76352, 282.792, -34.8778, 0.74 ) }
    dend_29 { pt3dadd( -8.79056, 283.709, -35.0254, 0.59 ) }
    dend_29 { pt3dadd( -8.79313, 283.792, -35.0379, 0.59 ) }
    dend_29 { pt3dadd( -8.80959, 284.47, -35.1225, 0.59 ) }
    dend_29 { pt3dadd( -8.84591, 285.815, -35.3078, 1.47 ) }
    dend_29 { pt3dadd( -8.86115, 286.655, -35.4261, 2.21 ) }
    dend_29 { pt3dadd( -8.8655, 287.331, -35.5214, 2.5 ) }
    dend_29 { pt3dadd( -8.85747, 287.914, -35.6103, 2.65 ) }
    dend_29 { pt3dadd( -8.81056, 289.022, -35.7863, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_29 { pt3dadd( -8.72422, 290.145, -35.9727, 0.74 ) }
    dend_29 { pt3dadd( -8.58961, 291.448, -36.2076, 0.52 ) }
    dend_29 { pt3dadd( -8.57918, 291.539, -36.2264, 0.52 ) }
    dend_29 { pt3dadd( -8.44271, 292.591, -36.4678, 0.52 ) }
    dend_29 { pt3dadd( -8.2435, 293.984, -36.8208, 1.33 ) }
    dend_29 { pt3dadd( -8.09318, 294.96, -37.0829, 1.4 ) }
    dend_29 { pt3dadd( -7.92606, 295.991, -37.3678, 1.18 ) }
    dend_29 { pt3dadd( -7.81461, 296.788, -37.5952, 0.52 ) }
    dend_29 { pt3dadd( -7.79809, 296.946, -37.6402, 0.52 ) }
    dend_29 { pt3dadd( -7.73158, 297.882, -37.9039, 0.52 ) }
    dend_29 { pt3dadd( -7.69546, 298.657, -38.1146, 0.52 ) }
    dend_29 { pt3dadd( -7.64825, 300.071, -38.4691, 0.74 ) }
    dend_29 { pt3dadd( -7.61083, 301.317, -38.7416, 0.96 ) }
    dend_29 { pt3dadd( -7.57967, 302.623, -39.0063, 1.99 ) }
    dend_29 { pt3dadd( -7.57025, 303.054, -39.0882, 2.58 ) }
    dend_29 { pt3dadd( -7.54839, 303.66, -39.1968, 2.36 ) }
    dend_29 { pt3dadd( -7.51114, 304.344, -39.3169, 2.14 ) }
    dend_29 { pt3dadd( -7.4257, 305.344, -39.4883, 1.03 ) }
    dend_29 { pt3dadd( -7.29709, 306.412, -39.6808, 0.52 ) }
    dend_29 { pt3dadd( -7.13105, 307.631, -39.9123, 0.52 ) }
    dend_29 { pt3dadd( -6.95152, 308.916, -40.1464, 0.52 ) }
    dend_29 { pt3dadd( -6.85451, 309.605, -40.2659, 0.88 ) }
    dend_29 { pt3dadd( -6.75974, 310.266, -40.375, 0.52 ) }
    dend_29 { pt3dadd( -6.60556, 311.347, -40.5391, 0.52 ) }
    dend_29 { pt3dadd( -6.48763, 312.216, -40.6513, 0.52 ) }
    dend_29 { pt3dadd( -6.32688, 313.621, -40.8066, 1.4 ) }
    dend_29 { pt3dadd( -6.25198, 314.4, -40.8816, 1.77 ) }
    dend_29 { pt3dadd( -6.20716, 314.921, -40.9246, 1.92 ) }
    dend_29 { pt3dadd( -6.16571, 315.424, -40.9619, 1.62 ) }
    dend_29 { pt3dadd( -6.09571, 316.287, -41.0194, 1.11 ) }
    dend_29 { pt3dadd( -6.01144, 317.311, -41.0907, 0.74 ) }
    dend_29 { pt3dadd( -5.89621, 318.801, -41.2108, 0.59 ) }
    dend_29 { pt3dadd( -5.76467, 320.587, -41.3497, 0.59 ) }
    dend_29 { pt3dadd( -5.6648, 321.988, -41.456, 0.44 ) }
    dend_29 { pt3dadd( -5.62074, 322.584, -41.5018, 0.66 ) }
    dend_29 { pt3dadd( -5.61436, 322.667, -41.5084, 0.66 ) }
    dend_29 { pt3dadd( -5.50737, 324.024, -41.6148, 1.33 ) }
    dend_29 { pt3dadd( -5.42073, 325.126, -41.6998, 2.21 ) }
    dend_29 { pt3dadd( -5.34361, 325.977, -41.756, 2.73 ) }
    dend_29 { pt3dadd( -5.27859, 326.778, -41.7977, 2.87 ) }
    dend_29 { pt3dadd( -5.25224, 327.15, -41.8179, 3.09 ) }
    dend_29 { pt3dadd( -5.21237, 327.935, -41.8618, 2.36 ) }
    dend_29 { pt3dadd( -5.18471, 328.87, -41.9128, 1.25 ) }
    dend_29 { pt3dadd( -5.18166, 329.542, -41.9494, 0.66 ) }
    dend_29 { pt3dadd( -5.22275, 330.913, -42.0337, 0.37 ) }
    dend_29 { pt3dadd( -5.28812, 331.961, -42.0997, 0.66 ) }
    dend_29 { pt3dadd( -5.34727, 332.734, -42.1538, 0.52 ) }
    dend_29 { pt3dadd( -5.38158, 333.16, -42.1896, 0.66 ) }
    dend_29 { pt3dadd( -5.44477, 334.003, -42.2732, 0.74 ) }
    dend_29 { pt3dadd( -5.51235, 334.966, -42.3992, 0.81 ) }
    dend_29 { pt3dadd( -5.57108, 335.977, -42.5662, 1.25 ) }
    dend_29 { pt3dadd( -5.59483, 336.616, -42.6897, 1.69 ) }
    dend_29 { pt3dadd( -5.60222, 337.087, -42.7944, 1.69 ) }
    dend_29 { pt3dadd( -5.59865, 338.008, -43.0169, 1.4 ) }
    dend_29 { pt3dadd( -5.57906, 339.014, -43.2756, 1.11 ) }
    dend_29 { pt3dadd( -5.5422, 339.829, -43.4849, 0.74 ) }
    dend_29 { pt3dadd( -5.4797, 341.042, -43.7879, 0.59 ) }
    dend_29 { pt3dadd( -5.47552, 341.133, -43.8093, 0.59 ) }
    dend_29 { pt3dadd( -5.4366, 342.06, -44.0049, 0.59 ) }
    dend_29 { pt3dadd( -5.43247, 342.14, -44.0195, 0.59 ) }
    dend_29 { pt3dadd( -5.33677, 343.736, -44.2337, 0.59 ) }
    dend_29 { pt3dadd( -5.28497, 344.747, -44.329, 1.11 ) }
    dend_29 { pt3dadd( -5.28347, 344.828, -44.335, 1.11 ) }
    dend_29 { pt3dadd( -5.28323, 345.58, -44.3812, 1.77 ) }
    dend_29 { pt3dadd( -5.29698, 346.286, -44.4196, 2.06 ) }
    dend_29 { pt3dadd( -5.31849, 346.874, -44.4515, 2.06 ) }
    dend_29 { pt3dadd( -5.36255, 347.637, -44.4871, 1.77 ) }
    dend_29 { pt3dadd( -5.39123, 348.159, -44.512, 1.4 ) }
    dend_29 { pt3dadd( -5.41978, 348.759, -44.5434, 0.81 ) }
    dend_29 { pt3dadd( -5.48713, 350.119, -44.6183, 0.59 ) }
    dend_29 { pt3dadd( -5.54892, 351.491, -44.6994, 0.59 ) }
    dend_29 { pt3dadd( -5.58119, 352.336, -44.7637, 0.96 ) }
    dend_29 { pt3dadd( -5.60638, 352.924, -44.8102, 0.96 ) }
    dend_29 { pt3dadd( -5.6143, 353.107, -44.8242, 0.96 ) }
    dend_29 { pt3dadd( -5.6353, 353.567, -44.862, 0.81 ) }
    dend_29 { pt3dadd( -5.66815, 354.369, -44.9301, 0.81 ) }
    dend_29 { pt3dadd( -5.70986, 355.671, -45.0469, 0.37 ) }
    dend_29 { pt3dadd( -5.74185, 356.945, -45.1675, 0.37 ) }
    dend_29 { pt3dadd( -5.74949, 358.134, -45.2668, 0.37 ) }
    dend_29 { pt3dadd( -5.74187, 358.963, -45.3267, 1.25 ) }
    dend_29 { pt3dadd( -5.70683, 359.817, -45.376, 1.77 ) }
    dend_29 { pt3dadd( -5.65896, 360.523, -45.4024, 2.28 ) }
    dend_29 { pt3dadd( -5.58547, 361.192, -45.4176, 2.58 ) }
    dend_29 { pt3dadd( -5.4675, 362.038, -45.4366, 2.36 ) }
    dend_29 { pt3dadd( -5.35797, 362.784, -45.4471, 1.92 ) }
    dend_29 { pt3dadd( -5.22179, 363.704, -45.4589, 0.96 ) }
    dend_29 { pt3dadd( -5.09917, 364.562, -45.4763, 0.37 ) }
    dend_29 { pt3dadd( -4.94466, 365.783, -45.5104, 0.37 ) }
    dend_29 { pt3dadd( -4.85917, 366.645, -45.5522, 0.74 ) }
    dend_29 { pt3dadd( -4.82513, 367.152, -45.588, 0.74 ) }
    dend_29 { pt3dadd( -4.79245, 367.891, -45.6472, 0.74 ) }
    dend_29 { pt3dadd( -4.78707, 368.655, -45.7326, 0.37 ) }
    dend_29 { pt3dadd( -4.80883, 369.493, -45.8598, 0.29 ) }
    dend_29 { pt3dadd( -4.84577, 370.136, -45.9831, 0.29 ) }
    dend_29 { pt3dadd( -4.85191, 370.216, -46.001, 0.29 ) }
    dend_29 { pt3dadd( -4.9976, 371.785, -46.4106, 0.29 ) }
    dend_29 { pt3dadd( -5.07502, 372.595, -46.6542, 0.74 ) }
    dend_29 { pt3dadd( -5.17951, 373.826, -47.0493, 1.84 ) }
    dend_29 { pt3dadd( -5.21064, 374.282, -47.195, 2.28 ) }
    dend_29 { pt3dadd( -5.21405, 374.348, -47.2142, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_29 { pt3dadd( -5.24434, 375.085, -47.4106, 2.06 ) }
    dend_29 { pt3dadd( -5.2725, 376.099, -47.6508, 1.25 ) }
    dend_29 { pt3dadd( -5.28397, 377.288, -47.8644, 0.15 ) }
    dend_29 { pt3dadd( -5.27774, 377.968, -47.9578, 0.15 ) }
    dend_29 { pt3dadd( -5.26132, 378.998, -48.0693, 0.74 ) }
    dend_29 { pt3dadd( -5.25282, 379.413, -48.1037, 1.03 ) }
    dend_29 { pt3dadd( -5.24108, 379.933, -48.134, 1.03 ) }
    dend_29 { pt3dadd( -5.23114, 380.514, -48.1588, 0.74 ) }
    dend_29 { pt3dadd( -5.23281, 381.329, -48.2251, 0.22 ) }
    dend_29 { pt3dadd( -5.24239, 382.337, -48.3371, 0.22 ) }
    dend_29 { pt3dadd( -5.25839, 384.035, -48.5592, 0.88 ) }
    dend_29 { pt3dadd( -5.26294, 384.713, -48.6522, 1.47 ) }
    dend_29 { pt3dadd( -5.26711, 385.296, -48.7381, 1.69 ) }
    dend_29 { pt3dadd( -5.27223, 386.558, -48.9334, 1.03 ) }
    dend_29 { pt3dadd( -5.27726, 387.842, -49.1355, 0.37 ) }
    dend_29 { pt3dadd( -5.26166, 389.554, -49.4145, 0.37 ) }
    dend_29 { pt3dadd( -5.23131, 391.07, -49.6785, 0.29 ) }
    dend_29 { pt3dadd( -5.18719, 392.624, -49.9424, 1.4 ) }
    dend_29 { pt3dadd( -5.16609, 393.232, -50.0379, 1.84 ) }
    dend_29 { pt3dadd( -5.13678, 393.909, -50.1303, 1.69 ) }
    dend_29 { pt3dadd( -5.10034, 394.836, -50.2627, 0.81 ) }
    dend_29 { pt3dadd( -5.04153, 396.393, -50.4877, 0.29 ) }
    dend_29 { pt3dadd( -4.98367, 397.812, -50.691, 0.29 ) }
    dend_29 { pt3dadd( -4.94634, 398.56, -50.7904, 0.96 ) }
    dend_29 { pt3dadd( -4.90997, 399.249, -50.8765, 1.33 ) }
    dend_29 { pt3dadd( -4.86869, 399.894, -50.9515, 1.33 ) }
    dend_29 { pt3dadd( -4.82865, 400.466, -51.0178, 1.03 ) }
    dend_29 { pt3dadd( -4.82216, 400.538, -51.0263, 1.03 ) }
    dend_29 { pt3dadd( -4.68762, 401.842, -51.2028, 0.29 ) }
    dend_29 { pt3dadd( -4.55801, 403.026, -51.3741, 0.29 ) }
    dend_29 { pt3dadd( -4.41424, 404.51, -51.6106, 0.88 ) }
    dend_29 { pt3dadd( -4.32715, 405.593, -51.7861, 1.69 ) }
    dend_29 { pt3dadd( -4.28515, 406.211, -51.8848, 2.36 ) }
    dend_29 { pt3dadd( -4.26847, 406.554, -51.9357, 2.58 ) }
    dend_29 { pt3dadd( -4.24164, 407.429, -52.0592, 2.06 ) }
    dend_29 { pt3dadd( -4.19589, 409.19, -52.2898, 0.37 ) }
    dend_29 { pt3dadd( -4.17173, 410.359, -52.4282, 0.37 ) }
    dend_29 { pt3dadd( -4.14637, 411.639, -52.5573, 0.37 ) }
    dend_29 { pt3dadd( -4.12329, 412.648, -52.6529, 0.37 ) }
    dend_29 { pt3dadd( -4.12046, 412.732, -52.6605, 0.37 ) }
    dend_29 { pt3dadd( -4.01436, 414.679, -52.8323, 0.37 ) }
    dend_29 { pt3dadd( -4.00816, 414.763, -52.8416, 0.37 ) }
    dend_29 { pt3dadd( -3.91228, 415.852, -53.0, 0.37 ) }
    dend_29 { pt3dadd( -3.83097, 416.708, -53.1462, 0.96 ) }
    dend_29 { pt3dadd( -3.73643, 417.681, -53.3266, 1.25 ) }
    dend_29 { pt3dadd( -3.64083, 418.671, -53.5176, 0.88 ) }
    dend_29 { pt3dadd( -3.48397, 420.272, -53.845, 0.29 ) }
    dend_29 { pt3dadd( -3.47104, 420.394, -53.8704, 0.29 ) }
    dend_29 { pt3dadd( -3.3661, 421.39, -54.1045, 0.88 ) }
    dend_29 { pt3dadd( -3.27239, 422.307, -54.3245, 1.62 ) }
    dend_29 { pt3dadd( -3.21604, 422.856, -54.4534, 1.99 ) }
    dend_29 { pt3dadd( -3.15203, 423.414, -54.5788, 1.99 ) }
    dend_29 { pt3dadd( -3.07805, 423.921, -54.6872, 1.69 ) }
    dend_29 { pt3dadd( -2.91284, 425.017, -54.9506, 0.59 ) }
    dend_29 { pt3dadd( -2.69102, 426.386, -55.305, 0.29 ) }
    dend_29 { pt3dadd( -2.56719, 427.218, -55.5323, 0.81 ) }
    dend_29 { pt3dadd( -2.46574, 427.944, -55.7322, 0.81 ) }
    dend_29 { pt3dadd( -2.33209, 428.961, -56.0082, 0.29 ) }
    dend_29 { pt3dadd( -2.19841, 430.052, -56.2909, 0.29 ) }
    dend_29 { pt3dadd( -2.03163, 431.705, -56.737, 0.29 ) }
    dend_29 { pt3dadd( -1.91654, 433.341, -57.2056, 1.25 ) }
    dend_29 { pt3dadd( -1.88275, 433.962, -57.385, 1.69 ) }
    dend_29 { pt3dadd( -1.85995, 434.458, -57.5272, 1.92 ) }
    dend_29 { pt3dadd( -1.82294, 435.34, -57.7735, 1.47 ) }
    dend_29 { pt3dadd( -1.73249, 436.887, -58.1922, 0.29 ) }
    dend_29 { pt3dadd( -1.66135, 437.807, -58.4534, 0.29 ) }
    dend_29 { pt3dadd( -1.52708, 439.03, -58.8052, 0.88 ) }
    dend_29 { pt3dadd( -1.44888, 439.616, -58.9757, 1.18 ) }
    dend_29 { pt3dadd( -1.35461, 440.198, -59.1454, 0.96 ) }
    dend_29 { pt3dadd( -1.1961, 441.012, -59.3724, 0.44 ) }
    dend_29 { pt3dadd( -0.96153, 442.067, -59.6186, 0.29 ) }
    dend_29 { pt3dadd( -0.939518, 442.18, -59.6477, 0.29 ) }
    dend_29 { pt3dadd( -0.806635, 443.138, -59.8913, 0.29 ) }
    dend_29 { pt3dadd( -0.798805, 443.219, -59.9105, 0.29 ) }
    dend_29 { pt3dadd( -0.759907, 443.806, -60.0475, 0.81 ) }
    dend_29 { pt3dadd( -0.735275, 444.301, -60.1578, 0.81 ) }
    dend_29 { pt3dadd( -0.681092, 445.189, -60.3568, 0.66 ) }
    dend_29 { pt3dadd( -0.585294, 446.436, -60.6436, 0.29 ) }
    dend_29 { pt3dadd( -0.478528, 447.456, -60.8833, 0.29 ) }
    dend_29 { pt3dadd( -0.36156, 448.456, -61.1287, 1.11 ) }
    dend_29 { pt3dadd( -0.252536, 449.342, -61.3427, 1.69 ) }
    dend_29 { pt3dadd( -0.183061, 449.964, -61.4858, 1.92 ) }
    dend_29 { pt3dadd( -0.127008, 450.513, -61.6006, 1.92 ) }
    dend_29 { pt3dadd( -0.0187661, 451.9, -61.8773, 0.74 ) }
    dend_29 { pt3dadd( 0.0411588, 453.0, -62.0783, 0.37 ) }
    dend_29 { pt3dadd( 0.0844257, 454.246, -62.2795, 0.37 ) }
    dend_29 { pt3dadd( 0.105457, 455.707, -62.5024, 0.29 ) }
    dend_29 { pt3dadd( 0.103608, 456.565, -62.6304, 0.29 ) }
    dend_29 { pt3dadd( 0.0980328, 457.323, -62.7484, 0.88 ) }
    dend_29 { pt3dadd( 0.0966019, 457.814, -62.8272, 0.88 ) }
    dend_29 { pt3dadd( 0.114727, 458.434, -62.9288, 0.52 ) }
    dend_29 { pt3dadd( 0.155134, 459.151, -63.0597, 0.29 ) }
    dend_29 { pt3dadd( 0.212515, 459.905, -63.2017, 0.29 ) }
    dend_29 { pt3dadd( 0.278811, 460.896, -63.3793, 0.29 ) }
    dend_29 { pt3dadd( 0.3315, 461.834, -63.5312, 1.55 ) }
    dend_29 { pt3dadd( 0.400011, 462.942, -63.6971, 2.58 ) }
    dend_29 { pt3dadd( 0.438783, 463.471, -63.7678, 2.65 ) }
    dend_29 { pt3dadd( 0.519903, 464.311, -63.8714, 2.21 ) }
    dend_29 { pt3dadd( 0.644763, 465.401, -64.0145, 1.11 ) }
    dend_29 { pt3dadd( 0.770679, 466.396, -64.1563, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( 0.932054, 467.6, -64.343, 0.52 ) }
    dend_29 { pt3dadd( 1.11621, 468.823, -64.5528, 0.74 ) }
    dend_29 { pt3dadd( 1.30839, 469.975, -64.7674, 0.88 ) }
    dend_29 { pt3dadd( 1.52444, 471.085, -64.9983, 1.33 ) }
    dend_29 { pt3dadd( 1.53929, 471.15, -65.0147, 1.33 ) }
    dend_29 { pt3dadd( 1.6988, 471.778, -65.1957, 1.62 ) }
    dend_29 { pt3dadd( 1.8192, 472.214, -65.3333, 1.62 ) }
    dend_29 { pt3dadd( 1.84571, 472.299, -65.3618, 1.62 ) }
    dend_29 { pt3dadd( 1.91541, 472.507, -65.4307, 1.62 ) }
    dend_29 { pt3dadd( 2.35191, 473.738, -65.8249, 0.52 ) }
    dend_29 { pt3dadd( 2.68228, 474.685, -66.12, 0.29 ) }
    dend_29 { pt3dadd( 2.97955, 475.538, -66.3865, 0.29 ) }
    dend_29 { pt3dadd( 3.28222, 476.408, -66.6075, 0.96 ) }
    dend_29 { pt3dadd( 3.48107, 476.99, -66.712, 1.4 ) }
    dend_29 { pt3dadd( 3.50508, 477.068, -66.7195, 1.4 ) }
    dend_29 { pt3dadd( 3.63944, 477.57, -66.7286, 1.4 ) }
    dend_29 { pt3dadd( 3.66277, 477.666, -66.7245, 1.4 ) }
    dend_29 { pt3dadd( 3.93343, 478.91, -66.6319, 1.03 ) }
    dend_29 { pt3dadd( 4.16208, 480.047, -66.534, 0.44 ) }
    dend_29 { pt3dadd( 4.43954, 481.472, -66.423, 0.29 ) }
    dend_29 { pt3dadd( 4.64021, 482.475, -66.3292, 0.29 ) }
    dend_29 { pt3dadd( 4.88572, 483.717, -66.2155, 1.33 ) }
    dend_29 { pt3dadd( 5.01062, 484.373, -66.159, 1.84 ) }
    dend_29 { pt3dadd( 5.1282, 485.044, -66.1114, 1.84 ) }
    dend_29 { pt3dadd( 5.25613, 485.8, -66.058, 1.25 ) }
    dend_29 { pt3dadd( 5.47775, 487.223, -65.9612, 0.37 ) }
    dend_29 { pt3dadd( 5.6758, 488.797, -65.8808, 0.29 ) }
    dend_29 { pt3dadd( 5.68348, 488.878, -65.8773, 0.29 ) }
    dend_29 { pt3dadd( 5.75552, 489.811, -65.8366, 0.44 ) }
    dend_29 { pt3dadd( 5.8261, 491.007, -65.7887, 0.52 ) }
    dend_29 { pt3dadd( 5.86668, 492.182, -65.7486, 0.44 ) }
    dend_29 { pt3dadd( 5.88058, 493.711, -65.7414, 0.44 ) }
    dend_29 { pt3dadd( 5.88133, 495.367, -65.742, 1.11 ) }
    dend_29 { pt3dadd( 5.88008, 496.309, -65.7499, 1.69 ) }
    dend_29 { pt3dadd( 5.87813, 496.924, -65.761, 1.84 ) }
    dend_29 { pt3dadd( 5.87874, 497.584, -65.7829, 1.84 ) }
    dend_29 { pt3dadd( 5.88196, 498.86, -65.8442, 0.66 ) }
    dend_29 { pt3dadd( 5.8845, 500.214, -65.932, 0.37 ) }
    dend_29 { pt3dadd( 5.88452, 500.379, -65.9456, 0.37 ) }
    dend_29 { pt3dadd( 5.89488, 502.0, -66.0774, 0.37 ) }
    dend_29 { pt3dadd( 5.92699, 503.291, -66.1863, 0.96 ) }
    dend_29 { pt3dadd( 5.9357, 503.458, -66.2026, 0.96 ) }
    dend_29 { pt3dadd( 6.00704, 504.31, -66.2967, 1.55 ) }
    dend_29 { pt3dadd( 6.0999, 505.072, -66.409, 1.84 ) }
    dend_29 { pt3dadd( 6.11166, 505.152, -66.4228, 1.84 ) }
    dend_29 { pt3dadd( 6.22641, 505.844, -66.5564, 1.69 ) }
    dend_29 { pt3dadd( 6.39424, 506.84, -66.754, 0.74 ) }
    dend_29 { pt3dadd( 6.58322, 507.904, -66.9306, 0.29 ) }
    dend_29 { pt3dadd( 6.79425, 509.095, -67.0895, 0.29 ) }
    dend_29 { pt3dadd( 6.80755, 509.178, -67.0974, 0.29 ) }
    dend_29 { pt3dadd( 6.97865, 510.352, -67.1718, 0.29 ) }
    dend_29 { pt3dadd( 6.98875, 510.434, -67.1736, 0.29 ) }
    dend_29 { pt3dadd( 7.12949, 511.627, -67.1508, 0.81 ) }
    dend_29 { pt3dadd( 7.20777, 512.376, -67.1189, 1.47 ) }
    dend_29 { pt3dadd( 7.26034, 512.974, -67.0917, 1.77 ) }
    dend_29 { pt3dadd( 7.26869, 513.105, -67.0889, 1.77 ) }
    dend_29 { pt3dadd( 7.30412, 513.777, -67.0955, 1.55 ) }
    dend_29 { pt3dadd( 7.31041, 513.942, -67.1008, 1.55 ) }
    dend_29 { pt3dadd( 7.32617, 514.728, -67.1463, 0.96 ) }
    dend_29 { pt3dadd( 7.36076, 515.593, -67.2072, 0.59 ) }
    dend_29 { pt3dadd( 7.46114, 517.192, -67.3092, 0.29 ) }
    dend_29 { pt3dadd( 7.54335, 518.249, -67.3716, 0.29 ) }
    dend_29 { pt3dadd( 7.55093, 518.333, -67.3763, 0.29 ) }
    dend_29 { pt3dadd( 7.68225, 519.61, -67.4449, 0.59 ) }
    dend_29 { pt3dadd( 7.78182, 520.452, -67.4886, 0.81 ) }
    dend_29 { pt3dadd( 7.93329, 521.53, -67.5517, 1.25 ) }
    dend_29 { pt3dadd( 8.01858, 522.057, -67.5874, 1.62 ) }
    dend_29 { pt3dadd( 8.08071, 522.474, -67.6172, 1.69 ) }
    dend_29 { pt3dadd( 8.10687, 522.654, -67.6327, 1.69 ) }
    dend_29 { pt3dadd( 8.18846, 523.262, -67.6909, 1.25 ) }
    dend_29 { pt3dadd( 8.31041, 524.247, -67.7778, 0.66 ) }
    dend_29 { pt3dadd( 8.4322, 525.266, -67.8691, 0.66 ) }
    dend_29 { pt3dadd( 8.57723, 526.457, -67.9685, 0.66 ) }
    dend_29 { pt3dadd( 8.75235, 527.897, -68.0809, 0.37 ) }
    dend_29 { pt3dadd( 8.8679, 528.918, -68.1511, 0.37 ) }
    dend_29 { pt3dadd( 9.00821, 530.145, -68.2321, 1.62 ) }
    dend_29 { pt3dadd( 9.09091, 530.823, -68.2786, 2.06 ) }
    dend_29 { pt3dadd( 9.15152, 531.281, -68.3136, 2.06 ) }
    dend_29 { pt3dadd( 9.28878, 532.298, -68.3962, 1.47 ) }
    dend_29 { pt3dadd( 9.42519, 533.299, -68.4844, 0.81 ) }
    dend_29 { pt3dadd( 9.58786, 534.424, -68.606, 0.37 ) }
    dend_29 { pt3dadd( 9.78914, 535.765, -68.7835, 0.88 ) }
    dend_29 { pt3dadd( 9.80247, 535.844, -68.7951, 0.88 ) }
    dend_29 { pt3dadd( 9.90427, 536.416, -68.8843, 0.88 ) }
    dend_29 { pt3dadd( 9.91781, 536.487, -68.8962, 0.88 ) }
    dend_29 { pt3dadd( 10.041, 537.186, -69.0152, 1.11 ) }
    dend_29 { pt3dadd( 10.072, 537.385, -69.0499, 1.11 ) }
    dend_29 { pt3dadd( 10.1392, 537.791, -69.0973, 1.11 ) }
    dend_29 { pt3dadd( 10.1539, 537.873, -69.1049, 1.11 ) }
    dend_29 { pt3dadd( 10.2817, 538.542, -69.1533, 0.81 ) }
    dend_29 { pt3dadd( 10.4791, 539.554, -69.2106, 0.66 ) }
    dend_29 { pt3dadd( 10.6691, 540.498, -69.2547, 0.44 ) }
    dend_29 { pt3dadd( 10.9375, 541.794, -69.3131, 0.29 ) }
    dend_29 { pt3dadd( 10.9646, 541.92, -69.3191, 0.29 ) }
    dend_29 { pt3dadd( 11.1222, 542.588, -69.3586, 0.29 ) }
    dend_29 { pt3dadd( 11.1526, 542.708, -69.3678, 0.29 ) }
    dend_29 { pt3dadd( 11.3671, 543.675, -69.4559, 0.81 ) }
    dend_29 { pt3dadd( 11.3859, 543.779, -69.4668, 0.81 ) }
    dend_29 { pt3dadd( 11.4946, 544.418, -69.5267, 0.81 ) }
    dend_29 { pt3dadd( 11.5364, 544.664, -69.5437, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_29 { pt3dadd( 11.7631, 545.951, -69.6195, 0.59 ) }
    dend_29 { pt3dadd( 12.0376, 547.536, -69.6971, 0.88 ) }
    dend_29 { pt3dadd( 12.064, 547.699, -69.7038, 0.88 ) }
    dend_29 { pt3dadd( 12.3063, 549.126, -69.7101, 1.62 ) }
    dend_29 { pt3dadd( 12.4112, 549.743, -69.6961, 1.77 ) }
    dend_29 { pt3dadd( 12.5756, 550.69, -69.6618, 1.4 ) }
    dend_29 { pt3dadd( 12.7412, 551.622, -69.6163, 0.88 ) }
    dend_29 { pt3dadd( 13.019, 553.226, -69.5296, 0.52 ) }
    dend_29 { pt3dadd( 13.2261, 554.599, -69.4621, 0.74 ) }
    dend_29 { pt3dadd( 13.3202, 555.453, -69.4252, 1.33 ) }
    dend_29 { pt3dadd( 13.3922, 556.353, -69.37, 1.84 ) }
    dend_29 { pt3dadd( 13.4221, 556.845, -69.3394, 1.99 ) }
    dend_29 { pt3dadd( 13.4582, 557.537, -69.3063, 1.99 ) }
    dend_29 { pt3dadd( 13.5003, 558.446, -69.284, 1.18 ) }
    dend_29 { pt3dadd( 13.5448, 559.651, -69.2874, 0.52 ) }
    dend_29 { pt3dadd( 13.6306, 561.452, -69.3012, 0.44 ) }
    dend_29 { pt3dadd( 13.7029, 562.803, -69.3177, 1.03 ) }
    dend_29 { pt3dadd( 13.7732, 563.844, -69.3437, 1.25 ) }
    dend_29 { pt3dadd( 13.8441, 564.558, -69.382, 1.55 ) }
    dend_29 { pt3dadd( 13.8546, 564.642, -69.3886, 1.55 ) }
    dend_29 { pt3dadd( 13.9659, 565.435, -69.4697, 1.55 ) }
    dend_29 { pt3dadd( 14.1017, 566.443, -69.587, 1.25 ) }
    dend_29 { pt3dadd( 14.2338, 567.552, -69.7052, 0.74 ) }
    dend_29 { pt3dadd( 14.4642, 569.617, -69.9155, 0.29 ) }
    dend_29 { pt3dadd( 14.4726, 569.697, -69.9233, 0.29 ) }
    dend_29 { pt3dadd( 14.6564, 571.566, -70.0982, 0.29 ) }
    dend_29 { pt3dadd( 14.7865, 573.095, -70.2286, 0.29 ) }
    dend_29 { pt3dadd( 14.8846, 574.538, -70.3362, 1.47 ) }
    dend_29 { pt3dadd( 14.929, 575.433, -70.3926, 2.06 ) }
    dend_29 { pt3dadd( 14.9439, 576.022, -70.4209, 2.36 ) }
    dend_29 { pt3dadd( 14.9656, 577.062, -70.4678, 2.06 ) }
    dend_29 { pt3dadd( 14.9964, 578.829, -70.5437, 0.81 ) }
    dend_29 { pt3dadd( 15.0282, 580.451, -70.577, 0.81 ) }
    dend_29 { pt3dadd( 15.0526, 581.493, -70.5791, 0.52 ) }
    dend_29 { pt3dadd( 15.0902, 582.754, -70.5631, 0.81 ) }
    dend_29 { pt3dadd( 15.1416, 583.967, -70.5355, 1.03 ) }
    dend_29 { pt3dadd( 15.1467, 584.049, -70.5328, 1.03 ) }
    dend_29 { pt3dadd( 15.2554, 585.147, -70.4971, 1.03 ) }
    dend_29 { pt3dadd( 15.2858, 585.349, -70.4884, 1.03 ) }
    dend_29 { pt3dadd( 15.4857, 586.469, -70.4459, 0.88 ) }
    dend_29 { pt3dadd( 15.5123, 586.598, -70.4434, 0.88 ) }
    dend_29 { pt3dadd( 15.7644, 587.776, -70.4449, 0.74 ) }
    dend_29 { pt3dadd( 16.0527, 589.084, -70.487, 0.37 ) }
    dend_29 { pt3dadd( 16.4219, 590.756, -70.5961, 1.18 ) }
    dend_29 { pt3dadd( 16.6593, 591.879, -70.6753, 1.92 ) }
    dend_29 { pt3dadd( 16.7917, 592.551, -70.7251, 1.92 ) }
    dend_29 { pt3dadd( 16.934, 593.329, -70.7861, 1.62 ) }
    dend_29 { pt3dadd( 17.1346, 594.556, -70.8898, 0.96 ) }
    dend_29 { pt3dadd( 17.3074, 595.753, -71.0009, 0.74 ) }
    dend_29 { pt3dadd( 17.4764, 597.192, -71.1618, 0.74 ) }
    dend_29 { pt3dadd( 17.5993, 598.465, -71.2945, 0.74 ) }
    dend_29 { pt3dadd( 17.613, 598.63, -71.311, 0.74 ) }
    dend_29 { pt3dadd( 17.7026, 599.884, -71.431, 0.74 ) }
    dend_29 { pt3dadd( 17.7141, 600.08, -71.4505, 0.74 ) }
    dend_29 { pt3dadd( 17.794, 601.468, -71.6017, 0.74 ) }
    dend_29 { pt3dadd( 17.8842, 602.999, -71.7804, 0.96 ) }
    dend_29 { pt3dadd( 17.9058, 603.346, -71.823, 0.96 ) }
    dend_29 { pt3dadd( 18.0003, 604.782, -71.9985, 0.96 ) }
    dend_29 { pt3dadd( 18.058, 605.671, -72.1015, 1.47 ) }
    dend_29 { pt3dadd( 18.0739, 605.928, -72.1285, 1.47 ) }
    dend_29 { pt3dadd( 18.1486, 607.147, -72.2418, 1.69 ) }
    dend_29 { pt3dadd( 18.1552, 607.262, -72.2515, 1.69 ) }
    dend_29 { pt3dadd( 18.1928, 608.036, -72.3263, 1.69 ) }
    dend_29 { pt3dadd( 18.2782, 609.393, -72.4814, 1.11 ) }
    dend_29 { pt3dadd( 18.3192, 609.999, -72.5658, 1.03 ) }
    dend_29 { pt3dadd( 18.3585, 610.579, -72.6557, 1.03 ) }
    dend_29 { pt3dadd( 18.4479, 611.913, -72.8762, 0.59 ) }
    dend_29 { pt3dadd( 18.5776, 613.81, -73.1998, 0.44 ) }
    dend_29 { pt3dadd( 18.7208, 615.842, -73.5631, 0.44 ) }
    dend_29 { pt3dadd( 18.8235, 617.078, -73.7944, 1.11 ) }
    dend_29 { pt3dadd( 18.9341, 618.229, -74.0305, 1.69 ) }
    dend_29 { pt3dadd( 19.0359, 619.058, -74.2139, 1.99 ) }
    dend_29 { pt3dadd( 19.1607, 619.921, -74.414, 1.62 ) }
    dend_29 { pt3dadd( 19.1742, 620.002, -74.4327, 1.62 ) }
    dend_29 { pt3dadd( 19.4019, 621.273, -74.7228, 0.88 ) }
    dend_29 { pt3dadd( 19.7083, 622.97, -75.1095, 0.74 ) }
    dend_29 { pt3dadd( 20.0879, 625.092, -75.6104, 0.74 ) }
    dend_29 { pt3dadd( 20.1018, 625.17, -75.629, 0.74 ) }
    dend_29 { pt3dadd( 20.3306, 626.488, -75.9459, 0.74 ) }
    dend_29 { pt3dadd( 20.6439, 628.158, -76.3032, 0.88 ) }
    dend_29 { pt3dadd( 20.9831, 629.913, -76.6222, 0.66 ) }
    dend_29 { pt3dadd( 21.0018, 630.006, -76.6357, 0.66 ) }
    dend_29 { pt3dadd( 21.3137, 631.549, -76.8297, 0.66 ) }
    dend_29 { pt3dadd( 21.5667, 632.767, -76.9644, 0.66 ) }
    dend_29 { pt3dadd( 21.9057, 634.448, -77.1015, 1.25 ) }
    dend_29 { pt3dadd( 22.0454, 635.204, -77.1346, 1.99 ) }
    dend_29 { pt3dadd( 22.1237, 635.707, -77.1371, 1.99 ) }
    dend_29 { pt3dadd( 22.2219, 636.568, -77.1321, 1.55 ) }
    dend_29 { pt3dadd( 22.2325, 636.743, -77.1279, 1.55 ) }
    dend_29 { pt3dadd( 22.2469, 637.84, -77.1019, 1.33 ) }
    dend_29 { pt3dadd( 22.2154, 639.03, -77.1303, 1.18 ) }
    dend_29 { pt3dadd( 22.2071, 640.059, -77.1792, 0.96 ) }
    dend_29 { pt3dadd( 22.245, 640.925, -77.2195, 0.96 ) }
    dend_29 { pt3dadd( 22.2626, 641.101, -77.2296, 0.96 ) }
    dend_29 { pt3dadd( 22.4044, 642.099, -77.2963, 0.66 ) }
    dend_29 { pt3dadd( 22.6305, 643.276, -77.3941, 0.52 ) }
    dend_29 { pt3dadd( 22.8679, 644.331, -77.4912, 0.52 ) }
    dend_29 { pt3dadd( 23.2456, 645.856, -77.6387, 0.81 ) }
    dend_29 { pt3dadd( 23.5881, 647.127, -77.772, 1.33 ) }
    dend_29 { pt3dadd( 23.6372, 647.296, -77.7899, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_29 { pt3dadd( 23.922, 648.254, -77.9144, 1.77 ) }
    dend_29 { pt3dadd( 24.0959, 648.848, -78.0031, 2.28 ) }
    dend_29 { pt3dadd( 24.1145, 648.925, -78.0201, 2.28 ) }
    dend_29 { pt3dadd( 24.2219, 649.685, -78.2377, 2.28 ) }
    dend_29 { pt3dadd( 24.2715, 650.18, -78.3862, 2.28 ) }
    dend_29 { pt3dadd( 24.353, 651.216, -78.6949, 1.92 ) }
    dend_29 { pt3dadd( 24.3577, 651.294, -78.7183, 1.92 ) }
    dend_29 { pt3dadd( 24.4435, 652.964, -79.2093, 0.81 ) }
    dend_29 { pt3dadd( 24.5696, 654.651, -79.6025, 0.81 ) }
    dend_29 { pt3dadd( 24.5852, 654.826, -79.6353, 0.81 ) }
    dend_29 { pt3dadd( 24.6944, 655.856, -79.7765, 0.66 ) }
    dend_29 { pt3dadd( 24.7069, 655.95, -79.7836, 0.66 ) }
    dend_29 { pt3dadd( 24.8802, 657.177, -79.8237, 0.66 ) }
    dend_29 { pt3dadd( 25.1425, 658.797, -79.7715, 0.66 ) }
    dend_29 { pt3dadd( 25.1683, 658.958, -79.7598, 0.66 ) }
    dend_29 { pt3dadd( 25.3099, 659.893, -79.645, 1.18 ) }
    dend_29 { pt3dadd( 25.3291, 660.044, -79.6217, 1.18 ) }
    dend_29 { pt3dadd( 25.4158, 660.889, -79.5023, 1.4 ) }
    dend_29 { pt3dadd( 25.4337, 661.136, -79.4726, 1.4 ) }
    dend_29 { pt3dadd( 25.4629, 661.748, -79.4184, 1.4 ) }
    dend_29 { pt3dadd( 25.5271, 662.954, -79.3212, 1.11 ) }
    dend_29 { pt3dadd( 25.6445, 664.883, -79.1993, 0.88 ) }
    dend_29 { pt3dadd( 25.7292, 666.349, -79.1362, 1.03 ) }
    dend_29 { pt3dadd( 25.8095, 667.794, -79.1084, 1.33 ) }
    dend_29 { pt3dadd( 25.8173, 667.957, -79.1089, 1.33 ) }
    dend_29 { pt3dadd( 25.8398, 668.494, -79.1138, 1.33 ) }
    dend_29 { pt3dadd( 25.8832, 670.066, -79.1495, 0.88 ) }
    dend_29 { pt3dadd( 25.9103, 670.915, -79.1585, 0.88 ) }
    dend_29 { pt3dadd( 25.9691, 672.29, -79.1609, 0.74 ) }
    dend_29 { pt3dadd( 26.0328, 673.3, -79.1633, 0.74 ) }
    dend_29 { pt3dadd( 26.1201, 674.404, -79.1704, 1.33 ) }
    dend_29 { pt3dadd( 26.1287, 674.497, -79.1714, 1.33 ) }
    dend_29 { pt3dadd( 26.2139, 675.455, -79.2186, 1.92 ) }
    dend_29 { pt3dadd( 26.267, 676.203, -79.2844, 2.21 ) }
    dend_29 { pt3dadd( 26.2739, 676.765, -79.3606, 2.21 ) }
    dend_29 { pt3dadd( 26.2312, 677.635, -79.5032, 1.77 ) }
    dend_29 { pt3dadd( 26.1371, 678.723, -79.7025, 1.18 ) }
    dend_29 { pt3dadd( 26.0141, 679.869, -79.908, 0.81 ) }
    dend_29 { pt3dadd( 25.7933, 681.601, -80.2168, 0.74 ) }
    dend_29 { pt3dadd( 25.5526, 683.497, -80.5441, 0.66 ) }
    dend_29 { pt3dadd( 25.3768, 685.116, -80.8111, 0.66 ) }
    dend_29 { pt3dadd( 25.3694, 685.198, -80.8243, 0.66 ) }
    dend_29 { pt3dadd( 25.319, 686.388, -81.0065, 0.66 ) }
    dend_29 { pt3dadd( 25.3243, 686.521, -81.0258, 0.66 ) }
    dend_29 { pt3dadd( 25.5084, 688.247, -81.2993, 0.66 ) }
    dend_29 { pt3dadd( 25.7733, 689.781, -81.547, 0.66 ) }
    dend_29 { pt3dadd( 25.7975, 689.896, -81.5664, 0.66 ) }
    dend_29 { pt3dadd( 26.1081, 691.325, -81.8109, 0.66 ) }
    dend_29 { pt3dadd( 26.601, 693.461, -82.1876, 0.66 ) }
    dend_29 { pt3dadd( 26.6296, 693.581, -82.2093, 0.66 ) }
    dend_29 { pt3dadd( 26.7824, 694.199, -82.3247, 1.25 ) }
    dend_29 { pt3dadd( 26.8046, 694.288, -82.3414, 1.25 ) }
    dend_29 { pt3dadd( 27.1282, 695.634, -82.5869, 1.25 ) }
    dend_29 { pt3dadd( 27.155, 695.754, -82.6076, 1.25 ) }
    dend_29 { pt3dadd( 27.4274, 696.925, -82.7922, 1.25 ) }
    dend_29 { pt3dadd( 27.6663, 697.928, -82.9345, 0.96 ) }
    dend_29 { pt3dadd( 27.9121, 698.928, -83.0503, 0.96 ) }
    dend_29 { pt3dadd( 27.9292, 698.999, -83.057, 0.96 ) }
    dend_29 { pt3dadd( 28.1698, 700.021, -83.1351, 1.11 ) }
    dend_29 { pt3dadd( 28.5702, 701.777, -83.2456, 0.52 ) }
    dend_29 { pt3dadd( 28.8289, 702.935, -83.3104, 1.18 ) }
    dend_29 { pt3dadd( 29.1122, 704.17, -83.3909, 1.92 ) }
    dend_29 { pt3dadd( 29.2962, 704.994, -83.465, 2.43 ) }
    dend_29 { pt3dadd( 29.4586, 705.736, -83.5496, 2.43 ) }
    dend_29 { pt3dadd( 29.6487, 706.63, -83.6707, 2.43 ) }
    dend_29 { pt3dadd( 29.9489, 708.127, -83.9105, 1.25 ) }
    dend_29 { pt3dadd( 30.2331, 709.557, -84.1868, 0.59 ) }
    dend_29 { pt3dadd( 30.495, 711.08, -84.553, 0.74 ) }
    dend_29 { pt3dadd( 30.6422, 712.04, -84.8165, 1.03 ) }
    dend_29 { pt3dadd( 30.6686, 712.273, -84.8866, 1.03 ) }
    dend_29 { pt3dadd( 30.7079, 712.901, -85.088, 1.03 ) }
    dend_29 { pt3dadd( 30.7183, 713.782, -85.3783, 0.59 ) }
    dend_29 { pt3dadd( 30.6726, 715.108, -85.8016, 0.59 ) }
    dend_29 { pt3dadd( 30.6666, 715.241, -85.8401, 0.59 ) }
    dend_29 { pt3dadd( 30.646, 716.475, -86.1998, 0.59 ) }
    dend_29 { pt3dadd( 30.6681, 716.82, -86.2949, 1.03 ) }
    dend_29 { pt3dadd( 30.7818, 717.695, -86.5213, 0.66 ) }
    dend_29 { pt3dadd( 30.8903, 718.26, -86.6543, 0.66 ) }
    dend_29 { pt3dadd( 31.1518, 719.262, -86.8401, 0.66 ) }
    dend_29 { pt3dadd( 31.5358, 720.637, -87.0557, 0.59 ) }
    dend_29 { pt3dadd( 32.0054, 722.264, -87.275, 1.03 ) }
    dend_29 { pt3dadd( 32.1813, 722.873, -87.3482, 1.84 ) }
    dend_29 { pt3dadd( 32.3459, 723.462, -87.41, 1.84 ) }
    dend_29 { pt3dadd( 32.7517, 725.017, -87.5517, 1.18 ) }
    dend_29 { pt3dadd( 33.0485, 726.262, -87.6457, 0.66 ) }
    dend_29 { pt3dadd( 33.2763, 727.453, -87.7074, 0.66 ) }
    dend_29 { pt3dadd( 33.3055, 727.661, -87.7174, 0.66 ) }
    dend_29 { pt3dadd( 33.4886, 729.326, -87.8004, 0.66 ) }
    dend_29 { pt3dadd( 33.5935, 730.629, -87.872, 1.18 ) }
    dend_29 { pt3dadd( 33.6365, 731.522, -87.9296, 1.18 ) }
    dend_29 { pt3dadd( 33.6909, 732.955, -88.0143, 0.66 ) }
    dend_29 { pt3dadd( 33.7223, 734.133, -88.0774, 0.66 ) }
    dend_29 { pt3dadd( 33.7356, 735.25, -88.1293, 1.25 ) }
    dend_29 { pt3dadd( 33.7293, 736.168, -88.1593, 1.99 ) }
    dend_29 { pt3dadd( 33.7182, 736.851, -88.1743, 2.21 ) }
    dend_29 { pt3dadd( 33.68, 738.344, -88.1983, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.42819, -70.7671, -11.4948, 0.44 ) }
    dend_12 { pt3dadd( -2.85217, -71.1646, -11.773, 0.44 ) }
    dend_12 { pt3dadd( -2.89069, -71.2011, -11.7972, 0.44 ) }
    dend_12 { pt3dadd( -3.46741, -71.7641, -12.1454, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_12 { pt3dadd( -4.01976, -72.2928, -12.4829, 1.18 ) }
    dend_12 { pt3dadd( -4.40615, -72.658, -12.723, 0.59 ) }
    dend_12 { pt3dadd( -4.44423, -72.6939, -12.7469, 0.59 ) }
    dend_12 { pt3dadd( -4.81067, -73.0629, -12.9768, 0.22 ) }
    dend_12 { pt3dadd( -5.1787, -73.4217, -13.2042, 0.22 ) }
    dend_12 { pt3dadd( -5.55521, -73.7716, -13.4362, 0.59 ) }
    dend_12 { pt3dadd( -5.80993, -74.0092, -13.5889, 0.59 ) }
    dend_12 { pt3dadd( -5.8707, -74.0691, -13.6197, 0.59 ) }
    dend_12 { pt3dadd( -6.3039, -74.5165, -13.8165, 0.22 ) }
    dend_12 { pt3dadd( -6.65019, -74.8997, -13.9585, 1.18 ) }
    dend_12 { pt3dadd( -6.99679, -75.3459, -14.0786, 1.25 ) }
    dend_12 { pt3dadd( -7.03115, -75.396, -14.0885, 1.25 ) }
    dend_12 { pt3dadd( -7.66335, -76.3479, -14.2015, 0.22 ) }
    dend_12 { pt3dadd( -7.85011, -76.6424, -14.2235, 0.37 ) }
    dend_12 { pt3dadd( -7.97146, -76.8443, -14.2204, 0.37 ) }
    dend_12 { pt3dadd( -8.62825, -77.9649, -14.1259, 0.22 ) }
    dend_12 { pt3dadd( -8.84916, -78.3498, -14.0767, 0.22 ) }
    dend_12 { pt3dadd( -9.34359, -79.2123, -13.9476, 1.47 ) }
    dend_12 { pt3dadd( -9.70623, -79.9072, -13.8424, 2.21 ) }
    dend_12 { pt3dadd( -10.0566, -80.6147, -13.7328, 2.21 ) }
    dend_12 { pt3dadd( -10.0831, -80.6666, -13.7243, 2.21 ) }
    dend_12 { pt3dadd( -10.5554, -81.658, -13.5279, 0.74 ) }
    dend_12 { pt3dadd( -10.5781, -81.7113, -13.5167, 0.74 ) }
    dend_12 { pt3dadd( -10.9795, -82.8043, -13.2999, 0.22 ) }
    dend_12 { pt3dadd( -11.0612, -83.0386, -13.2538, 0.59 ) }
    dend_12 { pt3dadd( -11.4487, -84.1807, -13.0578, 0.22 ) }
    dend_12 { pt3dadd( -11.6902, -84.9127, -12.9294, 0.22 ) }
    dend_12 { pt3dadd( -11.9021, -85.5653, -12.8016, 0.22 ) }
    dend_12 { pt3dadd( -12.0848, -86.1187, -12.695, 0.52 ) }
    dend_12 { pt3dadd( -12.1664, -86.3713, -12.6507, 0.52 ) }
    dend_12 { pt3dadd( -12.4803, -87.43, -12.4881, 0.22 ) }
    dend_12 { pt3dadd( -12.6554, -88.1121, -12.3935, 0.22 ) }
    dend_12 { pt3dadd( -12.899, -89.0885, -12.2631, 1.55 ) }
    dend_12 { pt3dadd( -13.0241, -89.6476, -12.17, 1.69 ) }
    dend_12 { pt3dadd( -13.3375, -91.1731, -11.8285, 0.22 ) }
    dend_12 { pt3dadd( -13.4778, -91.9448, -11.6086, 0.22 ) }
    dend_12 { pt3dadd( -13.5533, -92.4673, -11.4219, 0.52 ) }
    dend_12 { pt3dadd( -13.5943, -93.0047, -11.2027, 0.52 ) }
    dend_12 { pt3dadd( -13.5971, -93.8302, -10.8383, 0.22 ) }
    dend_12 { pt3dadd( -13.5669, -94.4804, -10.536, 1.4 ) }
    dend_12 { pt3dadd( -13.5149, -95.024, -10.2734, 1.69 ) }
    dend_12 { pt3dadd( -13.4711, -95.4622, -10.0677, 1.77 ) }
    dend_12 { pt3dadd( -13.3381, -96.9118, -9.41612, 0.15 ) }
    dend_12 { pt3dadd( -13.246, -97.9083, -8.99283, 0.22 ) }
    dend_12 { pt3dadd( -13.1799, -98.5774, -8.73365, 0.74 ) }
    dend_12 { pt3dadd( -13.1314, -99.163, -8.52896, 0.74 ) }
    dend_12 { pt3dadd( -13.0934, -99.8977, -8.28616, 0.22 ) }
    dend_12 { pt3dadd( -13.0933, -100.105, -8.21988, 0.59 ) }
    dend_12 { pt3dadd( -13.1154, -100.459, -8.10437, 0.59 ) }
    dend_12 { pt3dadd( -13.1183, -100.525, -8.08335, 0.59 ) }
    dend_12 { pt3dadd( -13.1566, -101.564, -7.75944, 0.22 ) }
    dend_12 { pt3dadd( -13.1693, -102.194, -7.58738, 0.74 ) }
    dend_12 { pt3dadd( -13.1584, -102.902, -7.39837, 0.96 ) }
    dend_12 { pt3dadd( -13.1436, -103.388, -7.26573, 0.66 ) }
    dend_12 { pt3dadd( -13.0635, -104.952, -6.83914, 0.29 ) }
    dend_12 { pt3dadd( -13.0033, -105.818, -6.59755, 0.22 ) }
    dend_12 { pt3dadd( -12.9223, -106.749, -6.32864, 0.22 ) }
    dend_12 { pt3dadd( -12.8195, -107.904, -6.00463, 1.55 ) }
    dend_12 { pt3dadd( -12.7858, -108.251, -5.91018, 1.92 ) }
    dend_12 { pt3dadd( -12.6952, -109.12, -5.68153, 0.96 ) }
    dend_12 { pt3dadd( -12.6367, -109.622, -5.56329, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 61/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.42819, -70.7671, -11.4948, 2.43 ) }
    dend_9 { pt3dadd( -2.29632, -72.364, -12.0501, 2.43 ) }
    dend_9 { pt3dadd( -2.23446, -73.8401, -12.4934, 0.96 ) }
    dend_9 { pt3dadd( -2.23914, -74.9524, -12.789, 0.52 ) }
    dend_9 { pt3dadd( -2.26662, -75.9719, -13.0377, 0.52 ) }
    dend_9 { pt3dadd( -2.31422, -77.2445, -13.328, 0.52 ) }
    dend_9 { pt3dadd( -2.36601, -78.4856, -13.5944, 0.52 ) }
    dend_9 { pt3dadd( -2.45785, -79.6074, -13.7683, 0.52 ) }
    dend_9 { pt3dadd( -2.58417, -80.7721, -13.9069, 0.52 ) }
    dend_9 { pt3dadd( -2.71559, -81.93, -14.0212, 2.58 ) }
    dend_9 { pt3dadd( -2.84318, -83.3232, -14.1678, 3.68 ) }
    dend_9 { pt3dadd( -2.8718, -83.6732, -14.2124, 3.68 ) }
    dend_9 { pt3dadd( -2.94721, -84.5187, -14.3428, 3.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 5.90755, -213.592, 11.2862, 0.59 ) }
    dend_6 { pt3dadd( 5.47769, -216.241, 10.7698, 0.59 ) }
    dend_6 { pt3dadd( 5.22812, -217.511, 10.54, 0.37 ) }
    dend_6 { pt3dadd( 4.89174, -218.771, 10.3481, 0.37 ) }
    dend_6 { pt3dadd( 4.5773, -219.618, 10.2394, 0.74 ) }
    dend_6 { pt3dadd( 4.16294, -220.551, 10.1339, 0.74 ) }
    dend_6 { pt3dadd( 3.77887, -221.304, 10.0608, 0.96 ) }
    dend_6 { pt3dadd( 3.7266, -221.383, 10.0611, 0.96 ) }
    dend_6 { pt3dadd( 3.08482, -222.226, 10.072, 1.25 ) }
    dend_6 { pt3dadd( 2.39178, -223.131, 10.164, 0.81 ) }
    dend_6 { pt3dadd( 2.34259, -223.212, 10.1765, 0.81 ) }
    dend_6 { pt3dadd( 1.77885, -224.335, 10.3822, 0.59 ) }
    dend_6 { pt3dadd( 1.22649, -225.706, 10.6097, 0.59 ) }
    dend_6 { pt3dadd( 1.20028, -225.783, 10.6206, 0.59 ) }
    dend_6 { pt3dadd( 0.743708, -227.353, 10.8098, 0.44 ) }
    dend_6 { pt3dadd( 0.26506, -229.081, 10.998, 0.44 ) }
    dend_6 { pt3dadd( 0.23942, -229.173, 11.008, 0.44 ) }
    dend_6 { pt3dadd( -0.22472, -230.759, 11.1806, 2.14 ) }
    dend_6 { pt3dadd( -0.52028, -231.645, 11.2606, 3.09 ) }
    dend_6 { pt3dadd( -0.793228, -232.454, 11.3032, 3.61 ) }
    dend_6 { pt3dadd( -1.11581, -233.387, 11.2489, 3.61 ) }
    dend_6 { pt3dadd( -5.274, -246.261, 9.45428, 3.61 ) }
    dend_6 { pt3dadd( -10.6817, -258.196, 5.9197, 3.61 ) }
    dend_6 { pt3dadd( -16.8311, -269.081, 0.84809, 3.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.90755, -213.592, 11.2862, 0.59 ) }
    dend_5 { pt3dadd( 6.47573, -214.413, 10.9852, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 7.03562, -215.168, 10.7414, 0.37 ) }
    dend_5 { pt3dadd( 7.54505, -215.681, 10.7344, 0.37 ) }
    dend_5 { pt3dadd( 8.27181, -216.247, 10.9346, 0.37 ) }
    dend_5 { pt3dadd( 8.32303, -216.28, 10.9573, 0.37 ) }
    dend_5 { pt3dadd( 9.04275, -216.731, 11.3224, 0.74 ) }
    dend_5 { pt3dadd( 9.08323, -216.753, 11.3567, 0.74 ) }
    dend_5 { pt3dadd( 10.2635, -217.412, 12.5649, 0.74 ) }
    dend_5 { pt3dadd( 10.2896, -217.429, 12.5934, 0.74 ) }
    dend_5 { pt3dadd( 10.654, -217.69, 12.9827, 0.74 ) }
    dend_5 { pt3dadd( 10.9515, -217.963, 13.2732, 0.29 ) }
    dend_5 { pt3dadd( 11.3743, -218.465, 13.6054, 0.29 ) }
    dend_5 { pt3dadd( 11.7018, -218.904, 13.7955, 0.29 ) }
    dend_5 { pt3dadd( 11.9807, -219.342, 13.8609, 0.29 ) }
    dend_5 { pt3dadd( 12.2313, -219.733, 13.9075, 0.81 ) }
    dend_5 { pt3dadd( 12.259, -219.776, 13.9101, 0.81 ) }
    dend_5 { pt3dadd( 12.5154, -220.111, 13.8976, 1.25 ) }
    dend_5 { pt3dadd( 12.7428, -220.341, 13.8451, 1.25 ) }
    dend_5 { pt3dadd( 13.0792, -220.612, 13.7599, 0.59 ) }
    dend_5 { pt3dadd( 18.2282, -225.335, 14.9295, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_29 (entry count 19/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 33.68, 738.344, -88.1983, 0.44 ) }
    dend_61 { pt3dadd( 30.6002, 740.902, -89.3574, 0.44 ) }
    dend_61 { pt3dadd( 29.4185, 741.999, -89.8298, 0.44 ) }
    dend_61 { pt3dadd( 28.6823, 742.735, -90.1355, 0.74 ) }
    dend_61 { pt3dadd( 28.6386, 742.784, -90.1564, 0.74 ) }
    dend_61 { pt3dadd( 28.0355, 743.592, -90.5024, 0.74 ) }
    dend_61 { pt3dadd( 28.0005, 743.647, -90.5251, 0.74 ) }
    dend_61 { pt3dadd( 27.7396, 744.605, -90.8287, 0.44 ) }
    dend_61 { pt3dadd( 27.7243, 744.676, -90.8648, 0.44 ) }
    dend_61 { pt3dadd( 27.5413, 745.539, -91.368, 0.88 ) }
    dend_61 { pt3dadd( 27.3359, 746.429, -91.8582, 0.96 ) }
    dend_61 { pt3dadd( 27.2077, 746.941, -92.1202, 1.25 ) }
    dend_61 { pt3dadd( 27.19, 747.0, -92.1516, 1.25 ) }
    dend_61 { pt3dadd( 26.757, 748.229, -92.7608, 0.66 ) }
    dend_61 { pt3dadd( 26.3529, 749.2, -93.1937, 0.37 ) }
    dend_61 { pt3dadd( 26.0311, 749.874, -93.4499, 0.74 ) }
    dend_61 { pt3dadd( 25.6941, 750.524, -93.6854, 0.74 ) }
    dend_61 { pt3dadd( 25.2927, 751.269, -93.9318, 0.74 ) }
    dend_61 { pt3dadd( 24.6798, 752.397, -94.26, 0.29 ) }
    dend_61 { pt3dadd( 23.9712, 753.691, -94.5497, 0.29 ) }
    dend_61 { pt3dadd( 23.4817, 754.571, -94.7297, 0.29 ) }
    dend_61 { pt3dadd( 22.7743, 755.85, -95.0015, 1.47 ) }
    dend_61 { pt3dadd( 22.5207, 756.336, -95.0956, 1.69 ) }
    dend_61 { pt3dadd( 22.4839, 756.409, -95.1056, 1.69 ) }
    dend_61 { pt3dadd( 22.0804, 757.129, -95.2223, 1.47 ) }
    dend_61 { pt3dadd( 22.0398, 757.199, -95.2326, 1.47 ) }
    dend_61 { pt3dadd( 20.8477, 759.118, -95.6403, 0.22 ) }
    dend_61 { pt3dadd( 20.4149, 759.806, -95.8132, 0.22 ) }
    dend_61 { pt3dadd( 19.7116, 760.952, -96.1503, 0.22 ) }
    dend_61 { pt3dadd( 18.9098, 762.4, -96.6345, 1.03 ) }
    dend_61 { pt3dadd( 18.5936, 762.978, -96.8642, 1.4 ) }
    dend_61 { pt3dadd( 17.6154, 764.777, -97.6434, 0.22 ) }
    dend_61 { pt3dadd( 17.3398, 765.279, -97.8742, 0.59 ) }
    dend_61 { pt3dadd( 17.0308, 765.846, -98.1476, 0.74 ) }
    dend_61 { pt3dadd( 16.0895, 767.682, -99.0263, 0.29 ) }
    dend_61 { pt3dadd( 15.4162, 769.008, -99.5721, 0.29 ) }
    dend_61 { pt3dadd( 15.3762, 769.077, -99.5975, 0.29 ) }
    dend_61 { pt3dadd( 14.8939, 769.816, -99.8104, 0.44 ) }
    dend_61 { pt3dadd( 14.8416, 769.887, -99.8376, 0.44 ) }
    dend_61 { pt3dadd( 14.404, 770.454, -100.08, 0.44 ) }
    dend_61 { pt3dadd( 13.7434, 771.313, -100.461, 0.22 ) }
    dend_61 { pt3dadd( 12.8127, 772.631, -101.046, 1.92 ) }
    dend_61 { pt3dadd( 12.6223, 772.893, -101.182, 2.5 ) }
    dend_61 { pt3dadd( 10.7697, 775.532, -102.726, 0.15 ) }
    dend_61 { pt3dadd( 10.5133, 775.907, -102.959, 0.15 ) }
    dend_61 { pt3dadd( 9.85706, 776.888, -103.611, 1.4 ) }
    dend_61 { pt3dadd( 9.71098, 777.113, -103.761, 1.69 ) }
    dend_61 { pt3dadd( 8.33265, 779.251, -105.159, 0.15 ) }
    dend_61 { pt3dadd( 7.8744, 779.976, -105.598, 0.15 ) }
    dend_61 { pt3dadd( 7.76128, 780.171, -105.689, 0.15 ) }
    dend_61 { pt3dadd( 7.66897, 780.344, -105.755, 0.15 ) }
    dend_61 { pt3dadd( 7.28215, 781.195, -105.991, 0.96 ) }
    dend_61 { pt3dadd( 7.04194, 781.784, -106.117, 1.47 ) }
    dend_61 { pt3dadd( 6.89219, 782.209, -106.168, 1.62 ) }
    dend_61 { pt3dadd( 6.54233, 783.162, -106.275, 0.88 ) }
    dend_61 { pt3dadd( 5.87056, 785.056, -106.518, 0.22 ) }
    dend_61 { pt3dadd( 5.62366, 785.771, -106.651, 0.22 ) }
    dend_61 { pt3dadd( 5.3734, 786.507, -106.835, 0.74 ) }
    dend_61 { pt3dadd( 5.34937, 786.585, -106.857, 0.74 ) }
    dend_61 { pt3dadd( 5.18081, 787.227, -107.027, 0.74 ) }
    dend_61 { pt3dadd( 5.10975, 787.561, -107.102, 0.74 ) }
    dend_61 { pt3dadd( 4.81536, 789.311, -107.426, 0.29 ) }
    dend_61 { pt3dadd( 4.80204, 789.393, -107.439, 0.29 ) }
    dend_61 { pt3dadd( 4.56335, 790.974, -107.637, 0.29 ) }
    dend_61 { pt3dadd( 4.32559, 792.576, -107.81, 0.29 ) }
    dend_61 { pt3dadd( 4.14967, 793.831, -107.915, 0.29 ) }
    dend_61 { pt3dadd( 4.03057, 794.766, -107.962, 1.47 ) }
    dend_61 { pt3dadd( 3.96641, 795.291, -107.975, 2.06 ) }
    dend_61 { pt3dadd( 3.95576, 795.372, -107.978, 2.06 ) }
    dend_61 { pt3dadd( 3.81455, 796.3, -108.028, 1.18 ) }
    dend_61 { pt3dadd( 3.36367, 798.735, -108.223, 0.22 ) }
    dend_61 { pt3dadd( 3.02107, 800.486, -108.397, 0.22 ) }
    dend_61 { pt3dadd( 2.72297, 801.871, -108.601, 1.47 ) }
    dend_61 { pt3dadd( 2.60839, 802.37, -108.692, 1.18 ) }
    dend_61 { pt3dadd( 2.13347, 804.38, -109.146, 0.22 ) }
    dend_61 { pt3dadd( 1.80366, 805.716, -109.506, 1.11 ) }
    dend_61 { pt3dadd( 1.62762, 806.421, -109.73, 1.33 ) }
    dend_61 { pt3dadd( 0.999299, 808.999, -110.642, 0.22 ) }
    dend_61 { pt3dadd( 0.982551, 809.075, -110.669, 0.22 ) }
    dend_61 { pt3dadd( 0.61638, 810.876, -111.327, 0.22 ) }
    dend_61 { pt3dadd( 0.603415, 810.952, -111.354, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_61 { pt3dadd( 0.321186, 812.893, -112.022, 0.22 ) }
    dend_61 { pt3dadd( 0.309579, 812.97, -112.046, 0.22 ) }
    dend_61 { pt3dadd( 0.17854, 814.052, -112.31, 1.55 ) }
    dend_61 { pt3dadd( 0.154176, 814.226, -112.341, 2.14 ) }
    dend_61 { pt3dadd( 0.0562138, 814.828, -112.405, 2.36 ) }
    dend_61 { pt3dadd( 0.043767, 814.896, -112.409, 2.36 ) }
    dend_61 { pt3dadd( -0.26481, 816.121, -112.4, 1.11 ) }
    dend_61 { pt3dadd( -0.748911, 817.748, -112.328, 0.22 ) }
    dend_61 { pt3dadd( -1.20426, 819.136, -112.228, 0.22 ) }
    dend_61 { pt3dadd( -1.53862, 820.103, -112.142, 1.4 ) }
    dend_61 { pt3dadd( -1.72141, 820.601, -112.088, 1.4 ) }
    dend_61 { pt3dadd( -2.64561, 822.954, -111.807, 0.22 ) }
    dend_61 { pt3dadd( -3.0112, 823.809, -111.69, 0.88 ) }
    dend_61 { pt3dadd( -3.22364, 824.277, -111.624, 0.59 ) }
    dend_61 { pt3dadd( -3.26163, 824.364, -111.613, 0.59 ) }
    dend_61 { pt3dadd( -3.35008, 824.579, -111.587, 0.59 ) }
    dend_61 { pt3dadd( -3.90541, 826.197, -111.41, 0.22 ) }
    dend_61 { pt3dadd( -4.18448, 827.202, -111.304, 0.22 ) }
    dend_61 { pt3dadd( -4.43414, 828.233, -111.21, 1.03 ) }
    dend_61 { pt3dadd( -4.54562, 828.731, -111.167, 1.4 ) }
    dend_61 { pt3dadd( -4.64981, 829.364, -111.096, 1.4 ) }
    dend_61 { pt3dadd( -4.82499, 831.043, -110.892, 0.22 ) }
    dend_61 { pt3dadd( -4.82924, 831.127, -110.881, 0.22 ) }
    dend_61 { pt3dadd( -4.87229, 832.999, -110.638, 0.22 ) }
    dend_61 { pt3dadd( -4.8725, 833.165, -110.62, 0.22 ) }
    dend_61 { pt3dadd( -4.84107, 835.289, -110.417, 0.22 ) }
    dend_61 { pt3dadd( -4.80293, 836.498, -110.306, 1.33 ) }
    dend_61 { pt3dadd( -4.78418, 836.903, -110.269, 1.62 ) }
    dend_61 { pt3dadd( -4.74462, 837.673, -110.2, 0.81 ) }
    dend_61 { pt3dadd( -4.61836, 839.721, -110.032, 0.22 ) }
    dend_61 { pt3dadd( -4.5545, 841.037, -109.961, 1.25 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 33.68, 738.344, -88.1983, 0.59 ) }
    dend_30 { pt3dadd( 33.7427, 739.546, -88.1751, 0.59 ) }
    dend_30 { pt3dadd( 33.8507, 740.822, -88.0816, 0.59 ) }
    dend_30 { pt3dadd( 33.9791, 742.022, -87.9733, 0.81 ) }
    dend_30 { pt3dadd( 34.086, 742.964, -87.8893, 1.25 ) }
    dend_30 { pt3dadd( 34.096, 743.053, -87.8815, 1.25 ) }
    dend_30 { pt3dadd( 34.1538, 743.603, -87.8349, 1.11 ) }
    dend_30 { pt3dadd( 34.269, 744.745, -87.7227, 0.88 ) }
    dend_30 { pt3dadd( 34.3449, 745.567, -87.6557, 0.44 ) }
    dend_30 { pt3dadd( 34.4416, 746.768, -87.5895, 0.37 ) }
    dend_30 { pt3dadd( 34.4649, 747.088, -87.5769, 0.37 ) }
    dend_30 { pt3dadd( 34.5139, 747.961, -87.5568, 0.37 ) }
    dend_30 { pt3dadd( 34.5561, 749.275, -87.5545, 1.47 ) }
    dend_30 { pt3dadd( 34.5504, 750.068, -87.5614, 1.84 ) }
    dend_30 { pt3dadd( 34.5447, 750.383, -87.5614, 1.84 ) }
    dend_30 { pt3dadd( 34.5383, 751.016, -87.5651, 1.84 ) }
    dend_30 { pt3dadd( 34.5375, 752.07, -87.5789, 1.25 ) }
    dend_30 { pt3dadd( 34.5526, 753.825, -87.6153, 0.66 ) }
    dend_30 { pt3dadd( 34.5728, 755.414, -87.6545, 0.66 ) }
    dend_30 { pt3dadd( 34.5753, 755.526, -87.6583, 0.66 ) }
    dend_30 { pt3dadd( 34.6091, 756.67, -87.7059, 0.66 ) }
    dend_30 { pt3dadd( 34.6157, 756.838, -87.7154, 0.66 ) }
    dend_30 { pt3dadd( 34.6615, 757.878, -87.7816, 0.66 ) }
    dend_30 { pt3dadd( 34.6663, 757.967, -87.7884, 0.66 ) }
    dend_30 { pt3dadd( 34.7232, 758.912, -87.8672, 0.66 ) }
    dend_30 { pt3dadd( 34.735, 759.198, -87.8874, 0.66 ) }
    dend_30 { pt3dadd( 34.7652, 760.099, -87.9462, 0.66 ) }
    dend_30 { pt3dadd( 34.7937, 760.811, -87.9959, 0.66 ) }
    dend_30 { pt3dadd( 34.7983, 760.89, -88.0024, 0.66 ) }
    dend_30 { pt3dadd( 34.8844, 762.022, -88.1079, 0.66 ) }
    dend_30 { pt3dadd( 34.8911, 762.09, -88.1153, 0.66 ) }
    dend_30 { pt3dadd( 35.0135, 763.191, -88.2493, 1.18 ) }
    dend_30 { pt3dadd( 35.0291, 763.268, -88.2557, 1.18 ) }
    dend_30 { pt3dadd( 35.2978, 764.248, -88.3061, 1.33 ) }
    dend_30 { pt3dadd( 35.3268, 764.337, -88.308, 1.33 ) }
    dend_30 { pt3dadd( 35.4339, 764.611, -88.3032, 1.33 ) }
    dend_30 { pt3dadd( 35.482, 764.732, -88.299, 1.33 ) }
    dend_30 { pt3dadd( 36.1267, 766.26, -88.2061, 0.81 ) }
    dend_30 { pt3dadd( 36.151, 766.323, -88.204, 0.81 ) }
    dend_30 { pt3dadd( 36.3791, 766.928, -88.2248, 0.81 ) }
    dend_30 { pt3dadd( 36.4045, 767.0, -88.2291, 0.81 ) }
    dend_30 { pt3dadd( 36.6882, 767.839, -88.3071, 0.96 ) }
    dend_30 { pt3dadd( 36.729, 767.964, -88.3232, 0.96 ) }
    dend_30 { pt3dadd( 37.131, 769.286, -88.5603, 0.37 ) }
    dend_30 { pt3dadd( 37.4608, 770.402, -88.7681, 0.37 ) }
    dend_30 { pt3dadd( 37.7222, 771.288, -88.9051, 1.33 ) }
    dend_30 { pt3dadd( 37.9799, 772.096, -89.0043, 2.06 ) }
    dend_30 { pt3dadd( 38.1094, 772.46, -89.0232, 2.36 ) }
    dend_30 { pt3dadd( 38.3286, 773.039, -89.0291, 2.36 ) }
    dend_30 { pt3dadd( 38.6991, 773.962, -88.9844, 1.62 ) }
    dend_30 { pt3dadd( 39.2712, 775.388, -88.8718, 0.52 ) }
    dend_30 { pt3dadd( 39.9381, 776.993, -88.7217, 0.37 ) }
    dend_30 { pt3dadd( 40.5439, 778.415, -88.5419, 1.55 ) }
    dend_30 { pt3dadd( 40.8578, 779.127, -88.4327, 2.21 ) }
    dend_30 { pt3dadd( 41.2087, 779.868, -88.2921, 2.5 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.94721, -84.5187, -14.3428, 0.44 ) }
    dend_11 { pt3dadd( -3.38783, -86.1054, -13.3572, 0.44 ) }
    dend_11 { pt3dadd( -3.84971, -87.6333, -12.3407, 0.22 ) }
    dend_11 { pt3dadd( -3.8746, -87.7079, -12.2832, 0.22 ) }
    dend_11 { pt3dadd( -4.34623, -88.7623, -11.3155, 0.22 ) }
    dend_11 { pt3dadd( -4.98968, -90.2397, -9.90419, 1.47 ) }
    dend_11 { pt3dadd( -5.16422, -90.6822, -9.48694, 1.99 ) }
    dend_11 { pt3dadd( -5.2276, -90.8294, -9.33901, 1.99 ) }
    dend_11 { pt3dadd( -5.64301, -91.8975, -8.22663, 1.77 ) }
    dend_11 { pt3dadd( -6.23018, -93.5892, -6.47879, 0.52 ) }
    dend_11 { pt3dadd( -6.63124, -94.8689, -5.16529, 0.29 ) }
    dend_11 { pt3dadd( -6.88008, -95.8589, -4.20008, 0.29 ) }
    dend_11 { pt3dadd( -6.89658, -95.9265, -4.1366, 0.29 ) }
    dend_11 { pt3dadd( -7.13174, -96.9709, -3.1956, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( -7.34886, -98.0832, -2.30449, 1.03 ) }
    dend_11 { pt3dadd( -7.61847, -99.7662, -1.11527, 0.22 ) }
    dend_11 { pt3dadd( -7.63162, -99.8331, -1.07223, 0.22 ) }
    dend_11 { pt3dadd( -7.76261, -100.512, -0.66999, 0.44 ) }
    dend_11 { pt3dadd( -7.77704, -100.581, -0.629628, 0.44 ) }
    dend_11 { pt3dadd( -7.98365, -101.481, -0.0734696, 0.44 ) }
    dend_11 { pt3dadd( -8.12538, -102.161, 0.31187, 0.29 ) }
    dend_11 { pt3dadd( -8.36068, -103.314, 0.951859, 1.55 ) }
    dend_11 { pt3dadd( -8.42577, -103.617, 1.1289, 2.21 ) }
    dend_11 { pt3dadd( -8.72527, -105.008, 2.02229, 2.21 ) }
    dend_11 { pt3dadd( -8.97893, -106.234, 2.86349, 0.44 ) }
    dend_11 { pt3dadd( -9.22586, -107.543, 3.87485, 0.29 ) }
    dend_11 { pt3dadd( -9.31689, -108.071, 4.31749, 0.52 ) }
    dend_11 { pt3dadd( -9.32924, -108.151, 4.38793, 0.52 ) }
    dend_11 { pt3dadd( -9.35587, -108.684, 4.86548, 0.22 ) }
    dend_11 { pt3dadd( -9.33978, -108.75, 4.93425, 0.22 ) }
    dend_11 { pt3dadd( -9.17242, -109.075, 5.39835, 0.22 ) }
    dend_11 { pt3dadd( -9.02379, -109.361, 5.87632, 0.74 ) }
    dend_11 { pt3dadd( -9.00049, -109.419, 5.96479, 0.74 ) }
    dend_11 { pt3dadd( -8.85596, -109.901, 6.61756, 0.74 ) }
    dend_11 { pt3dadd( -8.63949, -110.886, 7.78658, 0.29 ) }
    dend_11 { pt3dadd( -8.56579, -111.585, 8.54439, 0.29 ) }
    dend_11 { pt3dadd( -8.55209, -112.446, 9.36872, 1.33 ) }
    dend_11 { pt3dadd( -8.55866, -112.986, 9.84679, 1.92 ) }
    dend_11 { pt3dadd( -8.56266, -113.278, 10.0933, 1.99 ) }
    dend_11 { pt3dadd( -8.57752, -113.928, 10.6154, 1.55 ) }
    dend_11 { pt3dadd( -8.56048, -115.157, 11.5499, 0.66 ) }
    dend_11 { pt3dadd( -8.49924, -115.961, 12.1302, 0.29 ) }
    dend_11 { pt3dadd( -8.29303, -117.276, 12.9854, 0.22 ) }
    dend_11 { pt3dadd( -8.13296, -118.145, 13.4881, 1.03 ) }
    dend_11 { pt3dadd( -7.9919, -118.844, 13.848, 1.55 ) }
    dend_11 { pt3dadd( -7.72873, -120.031, 14.3842, 0.88 ) }
    dend_11 { pt3dadd( -7.47286, -121.102, 14.7883, 0.29 ) }
    dend_11 { pt3dadd( -7.20478, -122.292, 15.1773, 0.29 ) }
    dend_11 { pt3dadd( -6.91894, -123.71, 15.5607, 0.22 ) }
    dend_11 { pt3dadd( -6.79747, -124.366, 15.726, 0.52 ) }
    dend_11 { pt3dadd( -6.78373, -124.457, 15.7515, 0.52 ) }
    dend_11 { pt3dadd( -6.71475, -125.301, 16.0394, 0.52 ) }
    dend_11 { pt3dadd( -6.68571, -126.187, 16.4169, 0.44 ) }
    dend_11 { pt3dadd( -6.69755, -126.441, 16.5448, 0.66 ) }
    dend_11 { pt3dadd( -6.75983, -127.099, 16.8923, 0.37 ) }
    dend_11 { pt3dadd( -6.89886, -128.062, 17.3855, 0.29 ) }
    dend_11 { pt3dadd( -7.11817, -129.222, 17.9219, 0.29 ) }
    dend_11 { pt3dadd( -7.13815, -129.295, 17.9516, 0.29 ) }
    dend_11 { pt3dadd( -7.49108, -130.425, 18.352, 1.25 ) }
    dend_11 { pt3dadd( -7.66367, -130.962, 18.5153, 1.84 ) }
    dend_11 { pt3dadd( -7.82455, -131.461, 18.6337, 1.84 ) }
    dend_11 { pt3dadd( -8.1583, -132.618, 18.8328, 0.81 ) }
    dend_11 { pt3dadd( -8.51953, -133.977, 19.0244, 0.29 ) }
    dend_11 { pt3dadd( -8.75187, -134.953, 19.1441, 0.22 ) }
    dend_11 { pt3dadd( -8.78003, -135.086, 19.1574, 0.22 ) }
    dend_11 { pt3dadd( -8.98609, -136.233, 19.2178, 0.22 ) }
    dend_11 { pt3dadd( -9.22068, -137.813, 19.1996, 1.33 ) }
    dend_11 { pt3dadd( -9.31326, -138.565, 19.145, 1.99 ) }
    dend_11 { pt3dadd( -9.36627, -139.058, 19.0773, 2.28 ) }
    dend_11 { pt3dadd( -9.46901, -139.802, 18.9522, 2.28 ) }
    dend_11 { pt3dadd( -9.76837, -141.708, 18.6077, 0.66 ) }
    dend_11 { pt3dadd( -9.96371, -142.841, 18.377, 0.22 ) }
    dend_11 { pt3dadd( -9.98231, -142.935, 18.3568, 0.22 ) }
    dend_11 { pt3dadd( -10.1387, -143.677, 18.2277, 0.22 ) }
    dend_11 { pt3dadd( -10.315, -144.436, 18.122, 0.74 ) }
    dend_11 { pt3dadd( -10.4532, -144.955, 18.0756, 1.03 ) }
    dend_11 { pt3dadd( -10.5787, -145.335, 18.0616, 1.11 ) }
    dend_11 { pt3dadd( -10.8336, -146.095, 18.0521, 0.44 ) }
    dend_11 { pt3dadd( -11.2309, -147.348, 18.0188, 0.22 ) }
    dend_11 { pt3dadd( -11.2581, -147.439, 18.0148, 0.22 ) }
    dend_11 { pt3dadd( -11.4553, -148.132, 17.9613, 0.44 ) }
    dend_11 { pt3dadd( -11.7241, -149.158, 17.9184, 0.29 ) }
    dend_11 { pt3dadd( -11.7488, -149.251, 17.9137, 0.29 ) }
    dend_11 { pt3dadd( -12.1386, -150.339, 17.7759, 0.29 ) }
    dend_11 { pt3dadd( -12.4286, -151.016, 17.6577, 0.22 ) }
    dend_11 { pt3dadd( -12.4684, -151.105, 17.6427, 0.22 ) }
    dend_11 { pt3dadd( -13.0453, -152.29, 17.5042, 0.22 ) }
    dend_11 { pt3dadd( -13.4277, -152.99, 17.5046, 0.22 ) }
    dend_11 { pt3dadd( -14.5064, -154.95, 17.7038, 2.14 ) }
    dend_11 { pt3dadd( -14.5444, -155.02, 17.7159, 2.14 ) }
    dend_11 { pt3dadd( -14.9333, -155.789, 17.8929, 1.99 ) }
    dend_11 { pt3dadd( -15.464, -156.92, 18.2153, 1.69 ) }
    dend_11 { pt3dadd( -16.2112, -158.606, 18.78, 0.59 ) }
    dend_11 { pt3dadd( -16.8047, -160.18, 19.4236, 0.22 ) }
    dend_11 { pt3dadd( -17.0294, -160.968, 19.7803, 0.37 ) }
    dend_11 { pt3dadd( -17.1941, -161.815, 20.1285, 0.37 ) }
    dend_11 { pt3dadd( -17.2929, -162.809, 20.4876, 0.74 ) }
    dend_11 { pt3dadd( -17.292, -162.901, 20.5152, 0.74 ) }
    dend_11 { pt3dadd( -17.2217, -163.604, 20.678, 1.11 ) }
    dend_11 { pt3dadd( -17.0274, -165.009, 20.9417, 0.59 ) }
    dend_11 { pt3dadd( -16.7892, -166.589, 21.2141, 0.29 ) }
    dend_11 { pt3dadd( -16.6174, -167.659, 21.3999, 0.29 ) }
    dend_11 { pt3dadd( -16.5906, -167.808, 21.428, 0.29 ) }
    dend_11 { pt3dadd( -16.4093, -168.826, 21.6501, 0.29 ) }
    dend_11 { pt3dadd( -16.3652, -169.09, 21.7236, 0.29 ) }
    dend_11 { pt3dadd( -16.2193, -170.124, 22.1146, 0.29 ) }
    dend_11 { pt3dadd( -16.127, -170.969, 22.4963, 1.18 ) }
    dend_11 { pt3dadd( -16.0668, -171.462, 22.7291, 1.47 ) }
    dend_11 { pt3dadd( -16.0567, -171.548, 22.77, 1.47 ) }
    dend_11 { pt3dadd( -15.9173, -172.932, 23.4161, 0.44 ) }
    dend_11 { pt3dadd( -15.8645, -174.067, 23.8714, 0.37 ) }
    dend_11 { pt3dadd( -15.8925, -174.924, 24.1268, 0.81 ) }
    dend_11 { pt3dadd( -15.9336, -175.504, 24.2596, 0.81 ) }
    dend_11 { pt3dadd( -16.0221, -176.405, 24.4264, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_11 { pt3dadd( -16.0924, -177.031, 24.5187, 0.29 ) }
    dend_11 { pt3dadd( -16.2701, -178.423, 24.6776, 0.22 ) }
    dend_11 { pt3dadd( -16.4344, -179.921, 24.8216, 0.22 ) }
    dend_11 { pt3dadd( -16.5088, -180.801, 24.9102, 0.44 ) }
    dend_11 { pt3dadd( -16.5265, -181.101, 24.9455, 0.44 ) }
    dend_11 { pt3dadd( -16.5398, -181.689, 25.0373, 0.44 ) }
    dend_11 { pt3dadd( -16.5248, -182.803, 25.2631, 0.29 ) }
    dend_11 { pt3dadd( -16.4853, -183.974, 25.5428, 1.4 ) }
    dend_11 { pt3dadd( -16.4519, -184.84, 25.7613, 1.69 ) }
    dend_11 { pt3dadd( -16.4369, -185.604, 25.9469, 1.92 ) }
    dend_11 { pt3dadd( -16.415, -186.675, 26.1915, 0.74 ) }
    dend_11 { pt3dadd( -16.4207, -187.98, 26.4179, 0.22 ) }
    dend_11 { pt3dadd( -16.4584, -189.266, 26.5792, 0.22 ) }
    dend_11 { pt3dadd( -16.5152, -190.186, 26.6629, 0.88 ) }
    dend_11 { pt3dadd( -16.5743, -190.888, 26.6928, 0.88 ) }
    dend_11 { pt3dadd( -16.6969, -192.023, 26.6944, 0.22 ) }
    dend_11 { pt3dadd( -16.8856, -193.437, 26.6425, 0.22 ) }
    dend_11 { pt3dadd( -16.9019, -193.545, 26.6369, 0.22 ) }
    dend_11 { pt3dadd( -17.0778, -194.543, 26.5653, 0.22 ) }
    dend_11 { pt3dadd( -17.3704, -195.862, 26.4845, 1.03 ) }
    dend_11 { pt3dadd( -17.5215, -196.437, 26.4502, 1.33 ) }
    dend_11 { pt3dadd( -17.6363, -196.821, 26.4322, 1.33 ) }
    dend_11 { pt3dadd( -18.127, -198.538, 26.3569, 0.22 ) }
    dend_11 { pt3dadd( -18.4368, -199.796, 26.2507, 0.22 ) }
    dend_11 { pt3dadd( -18.5989, -200.575, 26.1417, 0.88 ) }
    dend_11 { pt3dadd( -18.6935, -201.121, 26.0436, 1.11 ) }
    dend_11 { pt3dadd( -18.7572, -201.556, 25.9522, 0.88 ) }
    dend_11 { pt3dadd( -18.9495, -203.266, 25.5723, 0.22 ) }
    dend_11 { pt3dadd( -19.0849, -204.661, 25.2199, 0.22 ) }
    dend_11 { pt3dadd( -19.1509, -205.446, 25.0125, 1.55 ) }
    dend_11 { pt3dadd( -19.2129, -206.138, 24.8325, 1.77 ) }
    dend_11 { pt3dadd( -19.2962, -206.896, 24.6485, 1.25 ) }
    dend_11 { pt3dadd( -19.494, -208.401, 24.3363, 0.22 ) }
    dend_11 { pt3dadd( -19.7465, -209.913, 24.1138, 0.22 ) }
    dend_11 { pt3dadd( -19.76, -209.993, 24.1069, 0.22 ) }
    dend_11 { pt3dadd( -19.938, -211.331, 24.0762, 0.22 ) }
    dend_11 { pt3dadd( -19.9459, -211.443, 24.0763, 0.22 ) }
    dend_11 { pt3dadd( -19.9648, -212.675, 24.1263, 0.96 ) }
    dend_11 { pt3dadd( -19.9631, -213.458, 24.1606, 1.47 ) }
    dend_11 { pt3dadd( -19.9278, -214.311, 24.191, 0.88 ) }
    dend_11 { pt3dadd( -19.8886, -215.096, 24.1913, 0.66 ) }
    dend_11 { pt3dadd( -19.7661, -216.896, 24.146, 0.29 ) }
    dend_11 { pt3dadd( -19.7209, -217.603, 24.1131, 0.59 ) }
    dend_11 { pt3dadd( -19.6384, -218.801, 24.0297, 0.59 ) }
    dend_11 { pt3dadd( -19.5501, -220.04, 23.9415, 0.29 ) }
    dend_11 { pt3dadd( -19.5406, -220.165, 23.9369, 0.29 ) }
    dend_11 { pt3dadd( -19.4129, -221.707, 23.9483, 0.29 ) }
    dend_11 { pt3dadd( -19.4037, -221.801, 23.9552, 0.29 ) }
    dend_11 { pt3dadd( -19.3085, -222.572, 24.038, 0.74 ) }
    dend_11 { pt3dadd( -19.205, -223.454, 24.137, 0.88 ) }
    dend_11 { pt3dadd( -19.0857, -224.857, 24.2566, 0.22 ) }
    dend_11 { pt3dadd( -19.0235, -225.995, 24.3165, 0.22 ) }
    dend_11 { pt3dadd( -18.9988, -227.261, 24.3023, 1.99 ) }
    dend_11 { pt3dadd( -18.9962, -228.179, 24.2451, 2.43 ) }
    dend_11 { pt3dadd( -19.0432, -230.207, 24.0139, 0.22 ) }
    dend_11 { pt3dadd( -19.0957, -231.299, 23.8322, 0.44 ) }
    dend_11 { pt3dadd( -19.1791, -232.642, 23.5559, 0.37 ) }
    dend_11 { pt3dadd( -19.2866, -234.038, 23.2378, 0.22 ) }
    dend_11 { pt3dadd( -19.3823, -234.961, 23.0186, 1.03 ) }
    dend_11 { pt3dadd( -19.4222, -235.506, 22.8894, 1.25 ) }
    dend_11 { pt3dadd( -19.4423, -236.285, 22.719, 0.96 ) }
    dend_11 { pt3dadd( -19.4198, -238.06, 22.3896, 0.15 ) }
    dend_11 { pt3dadd( -19.3812, -238.99, 22.2538, 0.74 ) }
    dend_11 { pt3dadd( -19.3419, -239.675, 22.1851, 0.96 ) }
    dend_11 { pt3dadd( -19.2069, -241.798, 22.0295, 0.22 ) }
    dend_11 { pt3dadd( -19.1921, -242.0, 22.0201, 0.22 ) }
    dend_11 { pt3dadd( -19.0889, -242.887, 22.0233, 0.22 ) }
    dend_11 { pt3dadd( -18.9354, -244.068, 22.0838, 0.22 ) }
    dend_11 { pt3dadd( -18.9241, -244.152, 22.0909, 0.22 ) }
    dend_11 { pt3dadd( -18.7104, -245.65, 22.2505, 2.5 ) }
    dend_11 { pt3dadd( -18.6301, -246.233, 22.3273, 2.73 ) }
    dend_11 { pt3dadd( -18.1722, -249.051, 22.7376, 0.22 ) }
    dend_11 { pt3dadd( -17.9973, -249.9, 22.8859, 0.52 ) }
    dend_11 { pt3dadd( -17.8049, -250.694, 23.0537, 0.52 ) }
    dend_11 { pt3dadd( -17.3982, -252.325, 23.4467, 0.22 ) }
    dend_11 { pt3dadd( -17.3724, -252.412, 23.4715, 0.22 ) }
    dend_11 { pt3dadd( -17.1486, -253.12, 23.6862, 0.22 ) }
    dend_11 { pt3dadd( -16.7733, -254.301, 24.0961, 1.18 ) }
    dend_11 { pt3dadd( -16.6223, -254.773, 24.2669, 1.69 ) }
    dend_11 { pt3dadd( -16.3316, -255.744, 24.6308, 1.33 ) }
    dend_11 { pt3dadd( -15.9965, -257.073, 25.1664, 0.22 ) }
    dend_11 { pt3dadd( -15.8778, -257.654, 25.3877, 0.22 ) }
    dend_11 { pt3dadd( -15.7487, -258.537, 25.6764, 1.47 ) }
    dend_11 { pt3dadd( -15.6862, -259.196, 25.8691, 1.69 ) }
    dend_11 { pt3dadd( -15.6348, -259.875, 26.041, 1.69 ) }
    dend_11 { pt3dadd( -15.529, -261.848, 26.4945, 0.29 ) }
    dend_11 { pt3dadd( -15.5051, -262.796, 26.6956, 0.29 ) }
    dend_11 { pt3dadd( -15.4697, -263.833, 26.9054, 1.03 ) }
    dend_11 { pt3dadd( -15.4678, -264.04, 26.9397, 1.33 ) }
    dend_11 { pt3dadd( -15.512, -265.827, 27.1855, 0.22 ) }
    dend_11 { pt3dadd( -15.5551, -266.512, 27.2566, 0.22 ) }
    dend_11 { pt3dadd( -15.6167, -267.001, 27.2889, 1.03 ) }
    dend_11 { pt3dadd( -15.7201, -267.597, 27.3388, 1.03 ) }
    dend_11 { pt3dadd( -16.1408, -269.477, 27.4999, 0.22 ) }
    dend_11 { pt3dadd( -16.4385, -270.563, 27.5661, 1.33 ) }
    dend_11 { pt3dadd( -16.5781, -270.982, 27.5782, 1.47 ) }
    dend_11 { pt3dadd( -16.8404, -271.815, 27.5615, 1.55 ) }
    dend_11 { pt3dadd( -17.4002, -273.67, 27.4614, 0.22 ) }
    dend_11 { pt3dadd( -17.577, -274.284, 27.4006, 0.22 ) }
    dend_11 { pt3dadd( -17.8531, -275.311, 27.2601, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_11 { pt3dadd( -18.0488, -276.072, 27.1382, 1.25 ) }
    dend_11 { pt3dadd( -18.4843, -278.002, 26.7946, 0.22 ) }
    dend_11 { pt3dadd( -18.5052, -278.107, 26.7747, 0.22 ) }
    dend_11 { pt3dadd( -18.8658, -280.054, 26.438, 0.22 ) }
    dend_11 { pt3dadd( -18.9467, -280.491, 26.3718, 0.74 ) }
    dend_11 { pt3dadd( -19.0171, -280.874, 26.3183, 0.74 ) }
    dend_11 { pt3dadd( -19.3873, -282.804, 26.0758, 0.22 ) }
    dend_11 { pt3dadd( -19.7413, -284.463, 25.9054, 0.22 ) }
    dend_11 { pt3dadd( -20.1779, -286.633, 25.7101, 0.22 ) }
    dend_11 { pt3dadd( -20.3045, -287.338, 25.6607, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -2.94721, -84.5187, -14.3428, 0.66 ) }
    dend_10 { pt3dadd( -3.5844, -86.1796, -14.2494, 0.66 ) }
    dend_10 { pt3dadd( -3.84281, -86.7843, -14.1966, 0.52 ) }
    dend_10 { pt3dadd( -4.14556, -87.4109, -14.1395, 0.88 ) }
    dend_10 { pt3dadd( -4.34562, -87.8059, -14.0906, 1.03 ) }
    dend_10 { pt3dadd( -4.62259, -88.3418, -14.0074, 0.96 ) }
    dend_10 { pt3dadd( -5.05373, -89.1699, -13.8609, 0.37 ) }
    dend_10 { pt3dadd( -5.49581, -89.974, -13.648, 0.29 ) }
    dend_10 { pt3dadd( -5.70492, -90.3876, -13.5276, 0.29 ) }
    dend_10 { pt3dadd( -6.08741, -91.2687, -13.2201, 0.29 ) }
    dend_10 { pt3dadd( -6.1884, -91.5541, -13.1122, 0.74 ) }
    dend_10 { pt3dadd( -6.20996, -91.6339, -13.0832, 0.74 ) }
    dend_10 { pt3dadd( -6.26995, -91.9518, -12.9852, 0.74 ) }
    dend_10 { pt3dadd( -6.35139, -92.5651, -12.813, 0.59 ) }
    dend_10 { pt3dadd( -6.47038, -93.5881, -12.5564, 0.29 ) }
    dend_10 { pt3dadd( -6.59562, -94.6456, -12.3357, 0.29 ) }
    dend_10 { pt3dadd( -6.71783, -95.6458, -12.1528, 0.29 ) }
    dend_10 { pt3dadd( -6.85913, -96.7774, -11.9625, 0.29 ) }
    dend_10 { pt3dadd( -6.95095, -97.6887, -11.8432, 1.33 ) }
    dend_10 { pt3dadd( -6.9569, -97.7665, -11.8362, 1.33 ) }
    dend_10 { pt3dadd( -6.99224, -98.5649, -11.7984, 1.99 ) }
    dend_10 { pt3dadd( -6.9871, -99.0602, -11.7748, 2.21 ) }
    dend_10 { pt3dadd( -6.96987, -99.4885, -11.7569, 2.21 ) }
    dend_10 { pt3dadd( -6.88107, -100.92, -11.704, 0.29 ) }
    dend_10 { pt3dadd( -6.79397, -102.102, -11.6547, 0.29 ) }
    dend_10 { pt3dadd( -6.73816, -102.789, -11.6188, 0.29 ) }
    dend_10 { pt3dadd( -6.69091, -103.269, -11.5868, 0.96 ) }
    dend_10 { pt3dadd( -6.64262, -103.84, -11.5412, 1.47 ) }
    dend_10 { pt3dadd( -6.61831, -104.188, -11.5068, 1.84 ) }
    dend_10 { pt3dadd( -6.5745, -104.884, -11.4042, 0.88 ) }
    dend_10 { pt3dadd( -6.56592, -104.949, -11.3951, 0.88 ) }
    dend_10 { pt3dadd( -6.44155, -105.637, -11.3208, 0.29 ) }
    dend_10 { pt3dadd( -6.30441, -106.311, -11.2682, 0.29 ) }
    dend_10 { pt3dadd( -6.28718, -106.386, -11.2635, 0.29 ) }
    dend_10 { pt3dadd( -6.05335, -107.332, -11.2161, 0.52 ) }
    dend_10 { pt3dadd( -5.77875, -108.398, -11.1722, 0.52 ) }
    dend_10 { pt3dadd( -5.55136, -109.3, -11.1312, 0.22 ) }
    dend_10 { pt3dadd( -5.37183, -110.05, -11.0961, 1.47 ) }
    dend_10 { pt3dadd( -5.23578, -110.677, -11.0623, 2.06 ) }
    dend_10 { pt3dadd( -5.18134, -111.011, -11.0437, 2.36 ) }
    dend_10 { pt3dadd( -5.12081, -111.724, -11.0023, 1.69 ) }
    dend_10 { pt3dadd( -5.11597, -112.834, -10.9309, 0.74 ) }
    dend_10 { pt3dadd( -5.17316, -113.836, -10.8673, 0.44 ) }
    dend_10 { pt3dadd( -5.27776, -114.89, -10.8217, 0.44 ) }
    dend_10 { pt3dadd( -5.36429, -115.525, -10.807, 0.44 ) }
    dend_10 { pt3dadd( -5.54885, -116.755, -10.7929, 0.29 ) }
    dend_10 { pt3dadd( -5.63576, -117.382, -10.7894, 0.59 ) }
    dend_10 { pt3dadd( -5.71579, -118.038, -10.7881, 0.59 ) }
    dend_10 { pt3dadd( -5.77483, -118.729, -10.7822, 0.29 ) }
    dend_10 { pt3dadd( -5.77704, -118.806, -10.7814, 0.29 ) }
    dend_10 { pt3dadd( -5.76969, -119.792, -10.7788, 0.29 ) }
    dend_10 { pt3dadd( -5.71603, -120.904, -10.7875, 0.29 ) }
    dend_10 { pt3dadd( -5.71125, -121.039, -10.7908, 0.29 ) }
    dend_10 { pt3dadd( -5.73136, -121.532, -10.8216, 0.29 ) }
    dend_10 { pt3dadd( -5.74236, -121.596, -10.8316, 0.29 ) }
    dend_10 { pt3dadd( -5.88403, -122.216, -11.0309, 0.29 ) }
    dend_10 { pt3dadd( -5.89772, -122.275, -11.0551, 0.29 ) }
    dend_10 { pt3dadd( -6.03568, -122.946, -11.3609, 0.29 ) }
    dend_10 { pt3dadd( -6.20953, -123.962, -11.8294, 2.28 ) }
    dend_10 { pt3dadd( -6.42609, -125.243, -12.4279, 2.65 ) }
    dend_10 { pt3dadd( -6.71735, -127.054, -13.2663, 0.29 ) }
    dend_10 { pt3dadd( -6.86593, -127.979, -13.6824, 0.29 ) }
    dend_10 { pt3dadd( -6.98378, -128.618, -13.9693, 0.59 ) }
    dend_10 { pt3dadd( -7.04609, -128.928, -14.1109, 0.22 ) }
    dend_10 { pt3dadd( -7.22029, -129.608, -14.4395, 0.22 ) }
    dend_10 { pt3dadd( -7.38667, -130.082, -14.7099, 0.22 ) }
    dend_10 { pt3dadd( -7.7233, -130.856, -15.2029, 1.03 ) }
    dend_10 { pt3dadd( -8.04134, -131.529, -15.6732, 1.92 ) }
    dend_10 { pt3dadd( -8.30391, -132.109, -16.0837, 2.06 ) }
    dend_10 { pt3dadd( -8.53411, -132.716, -16.5155, 1.92 ) }
    dend_10 { pt3dadd( -9.07059, -134.637, -17.8185, 0.29 ) }
    dend_10 { pt3dadd( -9.20484, -135.296, -18.2335, 0.52 ) }
    dend_10 { pt3dadd( -9.21183, -135.344, -18.2614, 0.52 ) }
    dend_10 { pt3dadd( -9.26571, -135.856, -18.5044, 0.52 ) }
    dend_10 { pt3dadd( -9.3508, -136.736, -18.8224, 0.37 ) }
    dend_10 { pt3dadd( -9.40866, -137.487, -18.9876, 0.29 ) }
    dend_10 { pt3dadd( -9.45578, -138.328, -19.0665, 0.29 ) }
    dend_10 { pt3dadd( -9.50371, -138.995, -19.1165, 0.88 ) }
    dend_10 { pt3dadd( -9.53272, -139.435, -19.1446, 0.88 ) }
    dend_10 { pt3dadd( -9.5764, -140.563, -19.1922, 0.22 ) }
    dend_10 { pt3dadd( -9.57959, -141.495, -19.2011, 1.55 ) }
    dend_10 { pt3dadd( -9.54972, -142.067, -19.1953, 1.84 ) }
    dend_10 { pt3dadd( -9.49412, -142.58, -19.1766, 1.62 ) }
    dend_10 { pt3dadd( -9.29986, -143.816, -19.1367, 0.22 ) }
    dend_10 { pt3dadd( -9.1413, -144.672, -19.109, 0.22 ) }
    dend_10 { pt3dadd( -9.03582, -145.213, -19.088, 0.22 ) }
    dend_10 { pt3dadd( -8.95432, -145.769, -19.0682, 0.74 ) }
    dend_10 { pt3dadd( -8.9095, -146.261, -19.0505, 0.74 ) }
    dend_10 { pt3dadd( -8.86884, -147.346, -19.0139, 0.29 ) }
    dend_10 { pt3dadd( -8.89482, -147.975, -18.9905, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_10 { pt3dadd( -9.0037, -148.988, -18.9364, 0.29 ) }
    dend_10 { pt3dadd( -9.141, -149.962, -18.8637, 1.77 ) }
    dend_10 { pt3dadd( -9.23405, -150.539, -18.8088, 2.21 ) }
    dend_10 { pt3dadd( -9.33327, -151.085, -18.7458, 2.21 ) }
    dend_10 { pt3dadd( -9.52932, -152.031, -18.6127, 0.74 ) }
    dend_10 { pt3dadd( -9.72509, -152.918, -18.51, 0.22 ) }
    dend_10 { pt3dadd( -9.97441, -154.005, -18.4143, 0.22 ) }
    dend_10 { pt3dadd( -10.102, -154.575, -18.3794, 0.88 ) }
    dend_10 { pt3dadd( -10.2131, -155.115, -18.3556, 1.03 ) }
    dend_10 { pt3dadd( -10.2389, -155.257, -18.352, 1.03 ) }
    dend_10 { pt3dadd( -10.3955, -156.289, -18.3555, 0.22 ) }
    dend_10 { pt3dadd( -10.4931, -156.973, -18.375, 0.22 ) }
    dend_10 { pt3dadd( -10.5133, -157.106, -18.3787, 0.22 ) }
    dend_10 { pt3dadd( -10.6278, -157.869, -18.399, 0.22 ) }
    dend_10 { pt3dadd( -10.7137, -158.375, -18.4071, 0.22 ) }
    dend_10 { pt3dadd( -10.8735, -159.213, -18.4195, 1.33 ) }
    dend_10 { pt3dadd( -10.9772, -159.693, -18.4233, 1.77 ) }
    dend_10 { pt3dadd( -11.1487, -160.42, -18.4168, 1.77 ) }
    dend_10 { pt3dadd( -11.2848, -160.998, -18.402, 0.88 ) }
    dend_10 { pt3dadd( -11.5629, -162.153, -18.3611, 0.29 ) }
    dend_10 { pt3dadd( -11.6448, -162.588, -18.3343, 0.74 ) }
    dend_10 { pt3dadd( -11.7246, -163.06, -18.3134, 0.74 ) }
    dend_10 { pt3dadd( -11.8867, -164.175, -18.2813, 0.22 ) }
    dend_10 { pt3dadd( -11.9493, -164.667, -18.2717, 0.22 ) }
    dend_10 { pt3dadd( -11.9598, -164.755, -18.2714, 0.22 ) }
    dend_10 { pt3dadd( -12.0617, -165.651, -18.2939, 0.96 ) }
    dend_10 { pt3dadd( -12.2315, -166.954, -18.3462, 1.18 ) }
    dend_10 { pt3dadd( -12.2883, -167.326, -18.3709, 1.47 ) }
    dend_10 { pt3dadd( -12.3039, -167.412, -18.3791, 1.47 ) }
    dend_10 { pt3dadd( -12.3975, -167.86, -18.4161, 1.47 ) }
    dend_10 { pt3dadd( -12.6524, -169.101, -18.4837, 0.22 ) }
    dend_10 { pt3dadd( -12.7301, -169.511, -18.5, 0.22 ) }
    dend_10 { pt3dadd( -12.8027, -170.067, -18.4987, 0.74 ) }
    dend_10 { pt3dadd( -12.8441, -170.335, -18.5033, 0.96 ) }
    dend_10 { pt3dadd( -12.8696, -170.478, -18.5077, 0.96 ) }
    dend_10 { pt3dadd( -12.9367, -170.817, -18.5258, 0.96 ) }
    dend_10 { pt3dadd( -13.1237, -171.764, -18.595, 0.22 ) }
    dend_10 { pt3dadd( -13.2283, -172.339, -18.6365, 0.29 ) }
    dend_10 { pt3dadd( -13.319, -173.031, -18.7265, 0.29 ) }
    dend_10 { pt3dadd( -13.3664, -173.511, -18.8361, 0.29 ) }
    dend_10 { pt3dadd( -13.4342, -174.374, -19.081, 1.25 ) }
    dend_10 { pt3dadd( -13.4661, -174.901, -19.2523, 1.69 ) }
    dend_10 { pt3dadd( -13.4801, -175.307, -19.4042, 1.69 ) }
    dend_10 { pt3dadd( -13.4889, -176.506, -19.9163, 1.03 ) }
    dend_10 { pt3dadd( -13.5089, -177.745, -20.4737, 0.22 ) }
    dend_10 { pt3dadd( -13.5274, -178.244, -20.6962, 0.22 ) }
    dend_10 { pt3dadd( -13.6014, -179.482, -21.2355, 1.99 ) }
    dend_10 { pt3dadd( -13.6708, -180.263, -21.558, 2.5 ) }
    dend_10 { pt3dadd( -13.8498, -181.894, -22.1482, 0.29 ) }
    dend_10 { pt3dadd( -13.9565, -182.636, -22.3699, 0.22 ) }
    dend_10 { pt3dadd( -14.083, -183.418, -22.5543, 0.52 ) }
    dend_10 { pt3dadd( -14.146, -183.755, -22.6209, 0.59 ) }
    dend_10 { pt3dadd( -14.38, -184.873, -22.7715, 0.22 ) }
    dend_10 { pt3dadd( -14.5769, -185.793, -22.8272, 0.22 ) }
    dend_10 { pt3dadd( -14.6984, -186.35, -22.8255, 0.22 ) }
    dend_10 { pt3dadd( -14.9402, -187.481, -22.8073, 1.33 ) }
    dend_10 { pt3dadd( -15.067, -188.011, -22.8041, 1.69 ) }
    dend_10 { pt3dadd( -15.2093, -188.542, -22.8037, 1.47 ) }
    dend_10 { pt3dadd( -15.4357, -189.269, -22.8226, 0.52 ) }
    dend_10 { pt3dadd( -15.6291, -189.835, -22.8566, 0.29 ) }
    dend_10 { pt3dadd( -16.1653, -191.262, -22.9807, 0.29 ) }
    dend_10 { pt3dadd( -16.5584, -192.199, -23.1002, 1.11 ) }
    dend_10 { pt3dadd( -16.7862, -192.731, -23.1837, 1.47 ) }
    dend_10 { pt3dadd( -17.4003, -194.106, -23.4328, 0.22 ) }
    dend_10 { pt3dadd( -17.6317, -194.637, -23.5355, 1.77 ) }
    dend_10 { pt3dadd( -17.9405, -195.368, -23.6849, 2.14 ) }
    dend_10 { pt3dadd( -18.1205, -195.818, -23.7805, 1.69 ) }
    dend_10 { pt3dadd( -18.5133, -196.94, -23.9916, 0.22 ) }
    dend_10 { pt3dadd( -18.5319, -197.006, -24.002, 0.22 ) }
    dend_10 { pt3dadd( -18.6635, -197.584, -24.0803, 0.22 ) }
    dend_10 { pt3dadd( -18.78, -198.196, -24.1755, 0.52 ) }
    dend_10 { pt3dadd( -18.8088, -198.383, -24.2071, 0.52 ) }
    dend_10 { pt3dadd( -18.932, -199.313, -24.3654, 0.22 ) }
    dend_10 { pt3dadd( -18.9983, -199.884, -24.4694, 0.22 ) }
    dend_10 { pt3dadd( -19.0659, -200.705, -24.6213, 1.99 ) }
    dend_10 { pt3dadd( -19.1046, -201.461, -24.7682, 2.5 ) }
    dend_10 { pt3dadd( -19.0768, -202.51, -25.0007, 0.81 ) }
    dend_10 { pt3dadd( -19.0406, -203.2, -25.1642, 0.22 ) }
    dend_10 { pt3dadd( -19.0378, -203.255, -25.1773, 0.22 ) }
    dend_10 { pt3dadd( -19.0271, -203.628, -25.2647, 0.52 ) }
    dend_10 { pt3dadd( -19.027, -203.683, -25.2771, 0.52 ) }
    dend_10 { pt3dadd( -19.1263, -204.777, -25.5424, 0.22 ) }
    dend_10 { pt3dadd( -19.2915, -205.79, -25.7925, 0.22 ) }
    dend_10 { pt3dadd( -19.4722, -206.639, -26.0037, 0.22 ) }
    dend_10 { pt3dadd( -19.6766, -207.387, -26.193, 1.33 ) }
    dend_10 { pt3dadd( -19.7835, -207.707, -26.2747, 1.33 ) }
    dend_10 { pt3dadd( -20.2532, -208.928, -26.5903, 0.22 ) }
    dend_10 { pt3dadd( -20.6568, -209.692, -26.7976, 0.22 ) }
    dend_10 { pt3dadd( -20.6878, -209.74, -26.8127, 0.22 ) }
    dend_10 { pt3dadd( -21.5267, -210.82, -27.1913, 2.28 ) }
    dend_10 { pt3dadd( -21.793, -211.106, -27.3008, 2.73 ) }
    dend_10 { pt3dadd( -22.0609, -211.36, -27.4075, 2.73 ) }
    dend_10 { pt3dadd( -23.3965, -212.431, -27.9246, 0.22 ) }
    dend_10 { pt3dadd( -23.6623, -212.608, -28.0391, 0.74 ) }
    dend_10 { pt3dadd( -23.935, -212.773, -28.1632, 0.96 ) }
    dend_10 { pt3dadd( -24.8208, -213.227, -28.6206, 0.22 ) }
    dend_10 { pt3dadd( -25.2233, -213.411, -28.8561, 1.03 ) }
    dend_10 { pt3dadd( -25.4561, -213.536, -29.0597, 1.03 ) }
    dend_10 { pt3dadd( -26.2672, -214.074, -30.1036, 0.22 ) }
    dend_10 { pt3dadd( -26.2971, -214.099, -30.1549, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_10 { pt3dadd( -26.681, -214.453, -30.9116, 1.4 ) }
    dend_10 { pt3dadd( -26.7784, -214.553, -31.1288, 1.4 ) }
    dend_10 { pt3dadd( -27.7127, -215.576, -33.2821, 0.59 ) }
    dend_10 { pt3dadd( -27.9257, -215.826, -33.7778, 1.03 ) }
    dend_10 { pt3dadd( -28.5984, -216.652, -35.2346, 0.22 ) }
    dend_10 { pt3dadd( -28.9552, -217.061, -35.8894, 0.22 ) }
    dend_10 { pt3dadd( -28.9803, -217.089, -35.9291, 0.22 ) }
    dend_10 { pt3dadd( -29.311, -217.435, -36.3739, 1.11 ) }
    dend_10 { pt3dadd( -29.5793, -217.678, -36.6551, 1.25 ) }
    dend_10 { pt3dadd( -30.5555, -218.562, -37.5983, 0.22 ) }
    dend_10 { pt3dadd( -30.8823, -218.859, -37.8897, 0.66 ) }
    dend_10 { pt3dadd( -31.7728, -219.695, -38.7112, 0.22 ) }
    dend_10 { pt3dadd( -31.8136, -219.733, -38.7479, 0.22 ) }
    dend_10 { pt3dadd( -32.0914, -219.984, -38.9909, 0.96 ) }
    dend_10 { pt3dadd( -32.358, -220.204, -39.2074, 1.4 ) }
    dend_10 { pt3dadd( -32.7828, -220.525, -39.5161, 0.96 ) }
    dend_10 { pt3dadd( -33.5643, -221.096, -40.0243, 0.22 ) }
    dend_10 { pt3dadd( -34.0102, -221.421, -40.2774, 1.62 ) }
    dend_10 { pt3dadd( -34.3749, -221.695, -40.4782, 1.99 ) }
    dend_10 { pt3dadd( -35.5389, -222.608, -41.0756, 0.22 ) }
    dend_10 { pt3dadd( -35.8744, -222.895, -41.2399, 0.37 ) }
    dend_10 { pt3dadd( -36.0494, -223.053, -41.3151, 0.37 ) }
    dend_10 { pt3dadd( -36.5044, -223.476, -41.4966, 0.22 ) }
    dend_10 { pt3dadd( -36.8721, -223.847, -41.6491, 0.22 ) }
    dend_10 { pt3dadd( -37.3985, -224.403, -41.8745, 0.52 ) }
    dend_10 { pt3dadd( -38.0006, -225.061, -42.1458, 0.22 ) }
    dend_10 { pt3dadd( -38.3331, -225.416, -42.31, 0.96 ) }
    dend_10 { pt3dadd( -38.6518, -225.755, -42.5043, 0.96 ) }
    dend_10 { pt3dadd( -39.4185, -226.612, -43.0407, 0.22 ) }
    dend_10 { pt3dadd( -39.9586, -227.269, -43.5368, 1.18 ) }
    dend_10 { pt3dadd( -40.1734, -227.574, -43.8232, 1.55 ) }
    dend_10 { pt3dadd( -40.1957, -227.609, -43.8597, 1.55 ) }
    dend_10 { pt3dadd( -40.7857, -228.629, -44.9805, 0.29 ) }
    dend_10 { pt3dadd( -41.0572, -229.117, -45.5422, 0.29 ) }
    dend_10 { pt3dadd( -41.5924, -230.06, -46.6958, 1.55 ) }
    dend_10 { pt3dadd( -42.4105, -231.453, -48.4716, 0.29 ) }
    dend_10 { pt3dadd( -42.4367, -231.495, -48.5261, 0.29 ) }
    dend_10 { pt3dadd( -42.6762, -231.868, -48.9991, 1.18 ) }
    dend_10 { pt3dadd( -43.1082, -232.514, -49.8162, 0.22 ) }
    dend_10 { pt3dadd( -43.4689, -233.031, -50.4632, 1.25 ) }
    dend_10 { pt3dadd( -44.0455, -233.886, -51.4249, 0.22 ) }
    dend_10 { pt3dadd( -44.1399, -234.022, -51.5665, 0.74 ) }
    dend_10 { pt3dadd( -44.5466, -234.634, -52.1725, 0.22 ) }
    dend_10 { pt3dadd( -44.5691, -234.672, -52.2062, 0.22 ) }
    dend_10 { pt3dadd( -44.8968, -235.297, -52.7023, 1.11 ) }
    dend_10 { pt3dadd( -45.1267, -235.773, -53.0396, 1.47 ) }
    dend_10 { pt3dadd( -45.6384, -236.868, -53.7196, 0.22 ) }
    dend_10 { pt3dadd( -45.7761, -237.162, -53.8939, 0.59 ) }
    dend_10 { pt3dadd( -46.102, -237.843, -54.2716, 1.18 ) }
    dend_10 { pt3dadd( -46.1281, -237.898, -54.3015, 1.18 ) }
    dend_10 { pt3dadd( -46.4481, -238.58, -54.6495, 1.18 ) }
    dend_10 { pt3dadd( -47.04, -239.818, -55.2562, 0.22 ) }
    dend_10 { pt3dadd( -47.3419, -240.495, -55.5594, 1.25 ) }
    dend_10 { pt3dadd( -47.4643, -240.762, -55.678, 1.25 ) }
    dend_10 { pt3dadd( -47.9249, -241.674, -56.113, 0.29 ) }
    dend_10 { pt3dadd( -48.193, -242.175, -56.3683, 0.96 ) }
    dend_10 { pt3dadd( -48.8819, -243.445, -56.9424, 0.29 ) }
    dend_10 { pt3dadd( -49.3786, -244.309, -57.2877, 0.44 ) }
    dend_10 { pt3dadd( -49.944, -245.224, -57.6152, 0.22 ) }
    dend_10 { pt3dadd( -50.5095, -246.057, -57.8864, 1.18 ) }
    dend_10 { pt3dadd( -50.9293, -246.577, -58.0187, 1.77 ) }
    dend_10 { pt3dadd( -52.0236, -247.713, -58.2229, 0.29 ) }
    dend_10 { pt3dadd( -52.496, -248.113, -58.2423, 0.29 ) }
    dend_10 { pt3dadd( -52.8691, -248.358, -58.2164, 0.29 ) }
    dend_10 { pt3dadd( -53.2245, -248.539, -58.1739, 0.88 ) }
    dend_10 { pt3dadd( -54.3437, -249.029, -58.028, 0.22 ) }
    dend_10 { pt3dadd( -55.0631, -249.288, -57.978, 1.03 ) }
    dend_10 { pt3dadd( -55.4438, -249.401, -57.9793, 1.03 ) }
    dend_10 { pt3dadd( -56.2137, -249.595, -57.9829, 0.22 ) }
    dend_10 { pt3dadd( -58.2428, -250.001, -58.0255, 0.22 ) }
    dend_10 { pt3dadd( -58.3061, -250.011, -58.0283, 0.22 ) }
    dend_10 { pt3dadd( -59.5738, -250.07, -58.135, 0.81 ) }
    dend_10 { pt3dadd( -59.8152, -250.063, -58.1663, 1.03 ) }
    dend_10 { pt3dadd( -60.5284, -249.971, -58.2512, 0.22 ) }
    dend_10 { pt3dadd( -61.3983, -249.776, -58.3577, 0.22 ) }
    dend_10 { pt3dadd( -61.4597, -249.757, -58.3615, 0.22 ) }
    dend_10 { pt3dadd( -62.5177, -249.433, -58.4255, 1.33 ) }
    dend_10 { pt3dadd( -62.983, -249.307, -58.4647, 1.55 ) }
    dend_10 { pt3dadd( -64.5447, -248.986, -58.6727, 0.22 ) }
    dend_10 { pt3dadd( -64.9872, -248.922, -58.7503, 0.59 ) }
    dend_10 { pt3dadd( -65.6643, -248.863, -58.9185, 0.59 ) }
    dend_10 { pt3dadd( -66.3734, -248.838, -59.1449, 0.44 ) }
    dend_10 { pt3dadd( -67.4698, -248.869, -59.5834, 0.22 ) }
    dend_10 { pt3dadd( -68.1493, -248.899, -59.8925, 1.03 ) }
    dend_10 { pt3dadd( -68.392, -248.921, -60.0142, 1.03 ) }
    dend_10 { pt3dadd( -69.4231, -249.0, -60.5075, 0.22 ) }
    dend_10 { pt3dadd( -69.8719, -249.009, -60.7097, 0.22 ) }
    dend_10 { pt3dadd( -69.923, -249.006, -60.7279, 0.22 ) }
    dend_10 { pt3dadd( -70.8957, -248.854, -61.0529, 0.22 ) }
    dend_10 { pt3dadd( -71.7817, -248.663, -61.3383, 0.22 ) }
    dend_10 { pt3dadd( -71.8323, -248.65, -61.3545, 0.22 ) }
    dend_10 { pt3dadd( -72.7459, -248.391, -61.707, 1.11 ) }
    dend_10 { pt3dadd( -73.0766, -248.303, -61.886, 1.55 ) }
    dend_10 { pt3dadd( -73.96, -248.086, -62.4662, 0.22 ) }
    dend_10 { pt3dadd( -74.5882, -247.975, -62.9737, 0.22 ) }
    dend_10 { pt3dadd( -74.8976, -247.927, -63.2524, 0.66 ) }
    dend_10 { pt3dadd( -75.7813, -247.834, -64.0927, 0.22 ) }
    dend_10 { pt3dadd( -76.5563, -247.784, -64.8565, 1.25 ) }
    dend_10 { pt3dadd( -76.842, -247.779, -65.1668, 1.47 ) }
    dend_10 { pt3dadd( -77.7589, -247.854, -66.1572, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_10 { pt3dadd( -77.8025, -247.862, -66.2023, 0.22 ) }
    dend_10 { pt3dadd( -78.1508, -247.962, -66.5402, 1.03 ) }
    dend_10 { pt3dadd( -78.6976, -248.171, -67.0127, 1.33 ) }
    dend_10 { pt3dadd( -80.1059, -248.768, -68.1828, 0.22 ) }
    dend_10 { pt3dadd( -81.1637, -249.254, -69.0625, 0.22 ) }
    dend_10 { pt3dadd( -81.9729, -249.658, -69.7125, 0.22 ) }
    dend_10 { pt3dadd( -82.2701, -249.817, -69.9477, 1.03 ) }
    dend_10 { pt3dadd( -82.646, -250.049, -70.2326, 1.25 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 8/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -4.5545, 841.037, -109.961, 0.88 ) }
    dend_63 { pt3dadd( -4.67288, 842.509, -109.677, 0.88 ) }
    dend_63 { pt3dadd( -4.8761, 844.771, -109.266, 0.15 ) }
    dend_63 { pt3dadd( -5.04697, 846.226, -109.117, 0.15 ) }
    dend_63 { pt3dadd( -5.0683, 846.376, -109.104, 0.15 ) }
    dend_63 { pt3dadd( -5.1797, 847.157, -109.039, 1.03 ) }
    dend_63 { pt3dadd( -5.2299, 847.509, -109.009, 1.4 ) }
    dend_63 { pt3dadd( -5.29157, 847.838, -109.001, 1.4 ) }
    dend_63 { pt3dadd( -5.86164, 850.735, -108.952, 0.22 ) }
    dend_63 { pt3dadd( -6.26614, 852.89, -108.951, 0.22 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 18/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -4.5545, 841.037, -109.961, 0.22 ) }
    dend_62 { pt3dadd( -3.47557, 842.946, -109.971, 0.22 ) }
    dend_62 { pt3dadd( -2.97231, 843.822, -109.939, 0.81 ) }
    dend_62 { pt3dadd( -2.81259, 844.098, -109.923, 1.03 ) }
    dend_62 { pt3dadd( -2.54956, 844.57, -109.889, 0.81 ) }
    dend_62 { pt3dadd( -1.40706, 846.669, -109.724, 0.22 ) }
    dend_62 { pt3dadd( -1.23895, 846.999, -109.705, 0.44 ) }
    dend_62 { pt3dadd( -0.916419, 847.74, -109.649, 0.15 ) }
    dend_62 { pt3dadd( -0.895382, 847.794, -109.646, 0.15 ) }
    dend_62 { pt3dadd( -0.619925, 848.61, -109.613, 1.03 ) }
    dend_62 { pt3dadd( -0.591609, 848.711, -109.61, 1.03 ) }
    dend_62 { pt3dadd( -0.24329, 850.143, -109.636, 0.15 ) }
    dend_62 { pt3dadd( -0.161744, 850.489, -109.644, 0.29 ) }
    dend_62 { pt3dadd( 0.21051, 852.087, -109.697, 0.15 ) }
    dend_62 { pt3dadd( 0.34727, 852.646, -109.713, 0.66 ) }
    dend_62 { pt3dadd( 0.367332, 852.721, -109.713, 0.66 ) }
    dend_62 { pt3dadd( 0.738876, 854.071, -109.653, 0.15 ) }
    dend_62 { pt3dadd( 1.01832, 855.016, -109.568, 0.66 ) }
    dend_62 { pt3dadd( 1.26887, 855.834, -109.489, 0.22 ) }
    dend_62 { pt3dadd( 1.29447, 855.909, -109.482, 0.22 ) }
    dend_62 { pt3dadd( 1.58982, 856.728, -109.388, 0.74 ) }
    dend_62 { pt3dadd( 1.66061, 856.929, -109.358, 0.74 ) }
    dend_62 { pt3dadd( 1.71332, 857.106, -109.305, 0.74 ) }
    // Section: dend_52, id: dend_52, parent: dend_30 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 41.2087, 779.868, -88.2921, 0.37 ) }
    dend_52 { pt3dadd( 40.4329, 780.615, -87.7521, 0.37 ) }
    dend_52 { pt3dadd( 40.0949, 780.944, -87.5214, 0.37 ) }
    dend_52 { pt3dadd( 40.0637, 780.979, -87.4949, 0.37 ) }
    dend_52 { pt3dadd( 39.8162, 781.282, -87.2574, 0.37 ) }
    dend_52 { pt3dadd( 39.5198, 781.688, -86.9343, 0.88 ) }
    dend_52 { pt3dadd( 39.3624, 781.923, -86.7462, 0.88 ) }
    dend_52 { pt3dadd( 39.3429, 781.962, -86.7129, 0.88 ) }
    dend_52 { pt3dadd( 39.1218, 782.588, -86.1905, 0.88 ) }
    dend_52 { pt3dadd( 39.1141, 782.619, -86.1657, 0.88 ) }
    dend_52 { pt3dadd( 39.0772, 782.905, -85.9539, 1.03 ) }
    dend_52 { pt3dadd( 39.0692, 782.96, -85.9145, 1.03 ) }
    dend_52 { pt3dadd( 39.0111, 783.214, -85.728, 1.03 ) }
    dend_52 { pt3dadd( 38.9902, 783.286, -85.6748, 1.03 ) }
    dend_52 { pt3dadd( 38.8431, 783.688, -85.3746, 0.74 ) }
    dend_52 { pt3dadd( 38.6396, 784.195, -84.9813, 0.29 ) }
    dend_52 { pt3dadd( 38.4364, 784.688, -84.5795, 0.29 ) }
    dend_52 { pt3dadd( 38.2398, 785.206, -84.1593, 0.29 ) }
    dend_52 { pt3dadd( 38.2192, 785.273, -84.1061, 0.29 ) }
    dend_52 { pt3dadd( 38.1385, 785.629, -83.8295, 0.22 ) }
    dend_52 { pt3dadd( 38.1337, 785.678, -83.7918, 0.22 ) }
    dend_52 { pt3dadd( 38.1623, 786.079, -83.5023, 0.52 ) }
    dend_52 { pt3dadd( 38.3286, 786.551, -83.2237, 1.18 ) }
    dend_52 { pt3dadd( 38.5083, 786.933, -83.0346, 1.18 ) }
    dend_52 { pt3dadd( 38.5289, 786.972, -83.0171, 1.18 ) }
    dend_52 { pt3dadd( 38.661, 787.175, -82.9416, 1.18 ) }
    dend_52 { pt3dadd( 38.6844, 787.206, -82.9311, 1.18 ) }
    dend_52 { pt3dadd( 39.1455, 787.687, -82.8334, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 69/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 41.2087, 779.868, -88.2921, 0.52 ) }
    dend_31 { pt3dadd( 42.3307, 781.472, -88.8319, 0.52 ) }
    dend_31 { pt3dadd( 43.3406, 782.908, -89.2723, 0.37 ) }
    dend_31 { pt3dadd( 43.3933, 782.983, -89.2944, 0.37 ) }
    dend_31 { pt3dadd( 44.0932, 783.996, -89.5694, 0.37 ) }
    dend_31 { pt3dadd( 44.5945, 784.724, -89.7591, 0.74 ) }
    dend_31 { pt3dadd( 45.3537, 785.856, -90.0338, 0.44 ) }
    dend_31 { pt3dadd( 46.2792, 787.403, -90.3089, 0.37 ) }
    dend_31 { pt3dadd( 46.3205, 787.473, -90.3197, 0.37 ) }
    dend_31 { pt3dadd( 46.6261, 787.985, -90.396, 0.37 ) }
    dend_31 { pt3dadd( 46.6757, 788.068, -90.4071, 0.37 ) }
    dend_31 { pt3dadd( 47.4416, 789.456, -90.5815, 0.88 ) }
    dend_31 { pt3dadd( 47.8904, 790.472, -90.7388, 1.11 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 82/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -6.26614, 852.89, -108.951, 0.22 ) }
    dend_65 { pt3dadd( -8.39624, 851.665, -108.662, 0.22 ) }
    dend_65 { pt3dadd( -8.98573, 851.332, -108.603, 1.25 ) }
    dend_65 { pt3dadd( -11.1803, 850.105, -108.42, 0.22 ) }
    dend_65 { pt3dadd( -11.9636, 849.678, -108.357, 0.96 ) }
    dend_65 { pt3dadd( -14.1956, 848.488, -108.16, 0.22 ) }
    dend_65 { pt3dadd( -14.2899, 848.438, -108.154, 0.22 ) }
    dend_65 { pt3dadd( -15.9278, 847.573, -108.108, 0.22 ) }
    dend_65 { pt3dadd( -15.996, 847.536, -108.109, 0.22 ) }
    dend_65 { pt3dadd( -16.6906, 847.143, -108.164, 0.74 ) }
    dend_65 { pt3dadd( -17.0101, 846.963, -108.198, 0.88 ) }
    dend_65 { pt3dadd( -19.0373, 845.803, -108.301, 0.22 ) }
    dend_65 { pt3dadd( -19.1047, 845.764, -108.3, 0.22 ) }
    dend_65 { pt3dadd( -20.5143, 844.905, -108.285, 0.22 ) }
    dend_65 { pt3dadd( -21.3953, 844.347, -108.285, 0.22 ) }
    dend_65 { pt3dadd( -21.4598, 844.303, -108.287, 0.22 ) }
    dend_65 { pt3dadd( -22.6893, 843.429, -108.336, 1.11 ) }
    dend_65 { pt3dadd( -23.5381, 842.825, -108.085, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 0/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -6.26614, 852.89, -108.951, 0.96 ) }
    dend_64 { pt3dadd( -6.4284, 853.589, -108.918, 0.96 ) }
    dend_64 { pt3dadd( -6.44405, 853.664, -108.914, 0.96 ) }
    dend_64 { pt3dadd( -6.51967, 854.05, -108.888, 1.18 ) }
    dend_64 { pt3dadd( -6.66375, 854.819, -108.836, 0.88 ) }
    dend_64 { pt3dadd( -7.27305, 858.166, -108.62, 0.15 ) }
    dend_64 { pt3dadd( -7.28679, 858.243, -108.615, 0.15 ) }
    dend_64 { pt3dadd( -7.61867, 860.126, -108.513, 0.15 ) }
    dend_64 { pt3dadd( -7.85727, 861.377, -108.476, 0.96 ) }
    dend_64 { pt3dadd( -7.96591, 861.922, -108.475, 1.33 ) }
    dend_64 { pt3dadd( -7.98301, 862.008, -108.478, 1.33 ) }
    dend_64 { pt3dadd( -8.02708, 862.245, -108.5, 1.33 ) }
    dend_64 { pt3dadd( -8.05404, 862.382, -108.518, 1.33 ) }
    dend_64 { pt3dadd( -8.45006, 864.412, -108.838, 0.15 ) }
    dend_64 { pt3dadd( -8.53321, 864.888, -108.911, 0.44 ) }
    dend_64 { pt3dadd( -8.61057, 865.354, -108.98, 0.44 ) }
    dend_64 { pt3dadd( -8.87064, 867.027, -109.187, 0.22 ) }
    dend_64 { pt3dadd( -8.89475, 867.19, -109.202, 0.22 ) }
    dend_64 { pt3dadd( -9.07244, 868.446, -109.239, 0.81 ) }
    dend_64 { pt3dadd( -9.22225, 869.57, -109.206, 0.22 ) }
    dend_64 { pt3dadd( -9.24323, 869.709, -109.197, 0.22 ) }
    dend_64 { pt3dadd( -9.38987, 870.581, -109.11, 1.18 ) }
    dend_64 { pt3dadd( -9.46791, 871.023, -109.05, 1.33 ) }
    dend_64 { pt3dadd( -9.97911, 873.265, -108.648, 0.22 ) }
    dend_64 { pt3dadd( -10.0191, 873.408, -108.615, 0.22 ) }
    dend_64 { pt3dadd( -10.1916, 873.971, -108.461, 0.22 ) }
    dend_64 { pt3dadd( -10.4411, 874.707, -108.223, 1.03 ) }
    dend_64 { pt3dadd( -10.6518, 875.266, -108.02, 1.33 ) }
    dend_64 { pt3dadd( -11.2995, 876.812, -107.411, 0.15 ) }
    dend_64 { pt3dadd( -11.673, 877.562, -107.056, 0.15 ) }
    dend_64 { pt3dadd( -11.7047, 877.624, -107.026, 0.15 ) }
    dend_64 { pt3dadd( -12.2258, 878.566, -106.538, 0.15 ) }
    dend_64 { pt3dadd( -12.2605, 878.624, -106.505, 0.15 ) }
    dend_64 { pt3dadd( -12.7667, 879.408, -106.013, 1.03 ) }
    dend_64 { pt3dadd( -13.056, 879.868, -105.699, 1.4 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 39.1455, 787.687, -82.8334, 0.52 ) }
    dend_60 { pt3dadd( 38.699, 789.582, -83.8627, 0.52 ) }
    dend_60 { pt3dadd( 38.6167, 789.998, -84.0543, 0.52 ) }
    dend_60 { pt3dadd( 38.605, 790.067, -84.0861, 0.52 ) }
    dend_60 { pt3dadd( 38.46, 791.042, -84.5335, 0.37 ) }
    dend_60 { pt3dadd( 38.4517, 791.112, -84.5664, 0.37 ) }
    dend_60 { pt3dadd( 38.3789, 792.109, -85.0713, 0.37 ) }
    dend_60 { pt3dadd( 38.4018, 792.955, -85.466, 1.03 ) }
    dend_60 { pt3dadd( 38.4436, 793.656, -85.8092, 0.88 ) }
    dend_60 { pt3dadd( 38.4495, 793.734, -85.8488, 0.88 ) }
    dend_60 { pt3dadd( 38.5178, 794.523, -86.2519, 0.59 ) }
    dend_60 { pt3dadd( 38.5878, 796.323, -87.2103, 0.22 ) }
    dend_60 { pt3dadd( 38.594, 797.494, -87.8283, 0.22 ) }
    dend_60 { pt3dadd( 38.592, 797.56, -87.8651, 0.22 ) }
    dend_60 { pt3dadd( 38.5307, 798.51, -88.4026, 0.88 ) }
    dend_60 { pt3dadd( 38.4871, 799.123, -88.7422, 1.11 ) }
    dend_60 { pt3dadd( 38.355, 801.073, -89.7726, 0.29 ) }
    dend_60 { pt3dadd( 38.3236, 801.708, -90.0989, 0.22 ) }
    dend_60 { pt3dadd( 38.312, 802.763, -90.7088, 0.22 ) }
    dend_60 { pt3dadd( 38.3144, 802.829, -90.7489, 0.22 ) }
    dend_60 { pt3dadd( 38.4473, 804.266, -91.6083, 0.22 ) }
    dend_60 { pt3dadd( 38.5781, 805.224, -92.1585, 1.33 ) }
    dend_60 { pt3dadd( 38.6642, 805.675, -92.4079, 1.33 ) }
    dend_60 { pt3dadd( 39.0296, 807.634, -93.5117, 0.22 ) }
    dend_60 { pt3dadd( 39.0415, 807.7, -93.5488, 0.22 ) }
    dend_60 { pt3dadd( 39.233, 808.908, -94.2353, 0.22 ) }
    dend_60 { pt3dadd( 39.3353, 809.739, -94.7362, 0.81 ) }
    dend_60 { pt3dadd( 39.5308, 811.484, -95.7676, 0.22 ) }
    dend_60 { pt3dadd( 39.6363, 812.319, -96.2348, 0.81 ) }
    dend_60 { pt3dadd( 39.649, 812.386, -96.2699, 0.81 ) }
    dend_60 { pt3dadd( 39.7116, 812.692, -96.4361, 0.81 ) }
    dend_60 { pt3dadd( 40.0164, 813.948, -97.1862, 0.22 ) }
    dend_60 { pt3dadd( 40.272, 814.84, -97.7295, 1.4 ) }
    dend_60 { pt3dadd( 40.459, 815.402, -98.0452, 1.77 ) }
    dend_60 { pt3dadd( 40.7743, 816.204, -98.5057, 1.18 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 70/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 39.1455, 787.687, -82.8334, 0.52 ) }
    dend_53 { pt3dadd( 38.9179, 788.817, -82.3064, 0.52 ) }
    dend_53 { pt3dadd( 38.8932, 788.934, -82.2604, 0.52 ) }
    dend_53 { pt3dadd( 38.7732, 789.482, -82.0777, 0.81 ) }
    dend_53 { pt3dadd( 38.7558, 789.559, -82.0554, 0.81 ) }
    dend_53 { pt3dadd( 38.678, 789.916, -81.964, 0.59 ) }
    dend_53 { pt3dadd( 38.3665, 791.478, -81.5793, 0.29 ) }
    dend_53 { pt3dadd( 38.3382, 791.623, -81.5506, 0.29 ) }
    dend_53 { pt3dadd( 38.2211, 792.339, -81.3845, 1.03 ) }
    dend_53 { pt3dadd( 38.1363, 793.053, -81.189, 0.96 ) }
    dend_53 { pt3dadd( 38.0725, 793.803, -80.9499, 0.59 ) }
    dend_53 { pt3dadd( 38.0518, 794.548, -80.6681, 0.59 ) }
    dend_53 { pt3dadd( 38.0576, 794.664, -80.6129, 0.59 ) }
    dend_53 { pt3dadd( 38.153, 795.434, -80.2274, 0.59 ) }
    dend_53 { pt3dadd( 38.3379, 796.118, -79.8915, 0.29 ) }
    dend_53 { pt3dadd( 38.3574, 796.169, -79.8676, 0.29 ) }
    dend_53 { pt3dadd( 38.5576, 796.635, -79.6676, 0.29 ) }
    dend_53 { pt3dadd( 38.6015, 796.739, -79.6296, 0.29 ) }
    dend_53 { pt3dadd( 38.849, 797.438, -79.4004, 0.59 ) }
    dend_53 { pt3dadd( 39.1654, 798.632, -79.0744, 0.22 ) }
    dend_53 { pt3dadd( 39.1777, 798.698, -79.0563, 0.22 ) }
    dend_53 { pt3dadd( 39.204, 799.444, -78.8244, 0.22 ) }
    dend_53 { pt3dadd( 39.1815, 799.67, -78.7474, 0.22 ) }
    dend_53 { pt3dadd( 38.9875, 800.209, -78.5131, 0.22 ) }
    dend_53 { pt3dadd( 38.5953, 800.518, -78.2663, 0.66 ) }
    dend_53 { pt3dadd( 38.4729, 800.561, -78.2098, 0.66 ) }
    dend_53 { pt3dadd( 37.7497, 800.731, -77.9201, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 97/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 47.8904, 790.472, -90.7388, 0.29 ) }
    dend_33 { pt3dadd( 48.474, 791.477, -90.7925, 0.29 ) }
    dend_33 { pt3dadd( 48.5389, 791.603, -90.8028, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_33 { pt3dadd( 48.8937, 792.341, -90.8786, 0.88 ) }
    dend_33 { pt3dadd( 49.1865, 792.984, -90.9514, 1.25 ) }
    dend_33 { pt3dadd( 49.417, 793.507, -91.0133, 1.25 ) }
    dend_33 { pt3dadd( 49.7628, 794.297, -91.1147, 0.44 ) }
    dend_33 { pt3dadd( 50.1255, 795.186, -91.2463, 0.29 ) }
    dend_33 { pt3dadd( 50.3649, 795.782, -91.3435, 0.88 ) }
    dend_33 { pt3dadd( 50.517, 796.18, -91.4193, 1.25 ) }
    dend_33 { pt3dadd( 50.5394, 796.24, -91.4331, 1.25 ) }
    dend_33 { pt3dadd( 50.7174, 796.725, -91.551, 0.96 ) }
    dend_33 { pt3dadd( 50.7684, 796.86, -91.5835, 0.96 ) }
    dend_33 { pt3dadd( 50.9808, 797.405, -91.7198, 0.74 ) }
    dend_33 { pt3dadd( 51.3995, 798.478, -91.9912, 0.29 ) }
    dend_33 { pt3dadd( 51.7043, 799.255, -92.1898, 0.52 ) }
    dend_33 { pt3dadd( 51.775, 799.44, -92.2365, 0.52 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 14/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 47.8904, 790.472, -90.7388, 0.22 ) }
    dend_32 { pt3dadd( 47.0461, 791.702, -90.1688, 0.22 ) }
    dend_32 { pt3dadd( 46.9955, 791.769, -90.1379, 0.22 ) }
    dend_32 { pt3dadd( 46.4075, 792.511, -89.7968, 0.22 ) }
    dend_32 { pt3dadd( 46.3608, 792.57, -89.7697, 0.22 ) }
    dend_32 { pt3dadd( 45.4813, 793.682, -89.2594, 0.22 ) }
    dend_32 { pt3dadd( 45.4291, 793.747, -89.2291, 0.22 ) }
    dend_32 { pt3dadd( 44.6353, 794.832, -88.8522, 0.22 ) }
    dend_32 { pt3dadd( 44.2863, 795.282, -88.6855, 0.22 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 23/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 37.7497, 800.731, -77.9201, 0.22 ) }
    dend_55 { pt3dadd( 37.9744, 802.05, -78.2823, 0.22 ) }
    dend_55 { pt3dadd( 38.03, 802.219, -78.2291, 0.22 ) }
    dend_55 { pt3dadd( 38.2441, 802.973, -77.8011, 0.22 ) }
    dend_55 { pt3dadd( 38.3383, 803.382, -77.4471, 0.37 ) }
    dend_55 { pt3dadd( 38.4937, 804.102, -76.7122, 0.37 ) }
    dend_55 { pt3dadd( 38.5134, 804.16, -76.6306, 0.37 ) }
    dend_55 { pt3dadd( 39.045, 805.293, -74.7476, 1.18 ) }
    dend_55 { pt3dadd( 39.2018, 805.612, -74.0843, 1.18 ) }
    dend_55 { pt3dadd( 39.4346, 806.052, -72.951, 0.96 ) }
    dend_55 { pt3dadd( 39.473, 806.136, -72.6866, 0.96 ) }
    dend_55 { pt3dadd( 39.7086, 806.83, -70.1422, 0.52 ) }
    dend_55 { pt3dadd( 39.716, 806.862, -70.0176, 0.52 ) }
    dend_55 { pt3dadd( 39.7426, 807.07, -69.2454, 0.52 ) }
    dend_55 { pt3dadd( 39.754, 807.119, -69.0588, 0.52 ) }
    dend_55 { pt3dadd( 39.7922, 807.396, -67.9876, 0.74 ) }
    dend_55 { pt3dadd( 39.7709, 807.612, -67.1963, 0.88 ) }
    dend_55 { pt3dadd( 39.7535, 807.634, -67.1233, 0.88 ) }
    dend_55 { pt3dadd( 39.5026, 808.034, -65.9754, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 42/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 37.7497, 800.731, -77.9201, 0.22 ) }
    dend_54 { pt3dadd( 37.2961, 800.381, -77.5165, 0.22 ) }
    dend_54 { pt3dadd( 37.2529, 800.347, -77.4781, 0.22 ) }
    dend_54 { pt3dadd( 36.7085, 799.927, -76.9938, 0.22 ) }
    dend_54 { pt3dadd( 36.6741, 799.9, -76.9631, 0.22 ) }
    dend_54 { pt3dadd( 36.3294, 799.634, -76.6564, 0.66 ) }
    dend_54 { pt3dadd( 36.162, 799.505, -76.5075, 0.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_33 (entry count 49/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 51.775, 799.44, -92.2365, 0.15 ) }
    dend_51 { pt3dadd( 52.8689, 799.211, -92.6044, 0.15 ) }
    dend_51 { pt3dadd( 53.4993, 798.902, -92.851, 0.44 ) }
    dend_51 { pt3dadd( 53.552, 798.869, -92.8746, 0.44 ) }
    dend_51 { pt3dadd( 54.0757, 798.476, -93.1569, 0.15 ) }
    dend_51 { pt3dadd( 54.4736, 798.171, -93.3841, 0.96 ) }
    dend_51 { pt3dadd( 54.9095, 797.846, -93.6318, 0.96 ) }
    dend_51 { pt3dadd( 55.7286, 797.16, -94.1317, 0.22 ) }
    dend_51 { pt3dadd( 55.8525, 797.056, -94.2104, 0.22 ) }
    dend_51 { pt3dadd( 56.5154, 796.53, -94.6381, 0.52 ) }
    dend_51 { pt3dadd( 56.9805, 796.179, -94.9409, 0.52 ) }
    dend_51 { pt3dadd( 57.5585, 795.805, -95.3128, 0.59 ) }
    dend_51 { pt3dadd( 57.7123, 795.726, -95.4192, 0.59 ) }
    dend_51 { pt3dadd( 58.429, 795.473, -95.9164, 0.15 ) }
    dend_51 { pt3dadd( 58.4817, 795.457, -95.9531, 0.15 ) }
    dend_51 { pt3dadd( 58.7453, 795.363, -96.2171, 0.15 ) }
    dend_51 { pt3dadd( 58.8398, 795.323, -96.3399, 0.15 ) }
    dend_51 { pt3dadd( 59.3776, 795.097, -97.1524, 0.88 ) }
    dend_51 { pt3dadd( 59.614, 795.0, -97.5341, 1.18 ) }
    dend_51 { pt3dadd( 59.8925, 794.903, -98.0412, 1.18 ) }
    dend_51 { pt3dadd( 60.7878, 794.63, -99.7511, 0.22 ) }
    dend_51 { pt3dadd( 60.8228, 794.619, -99.8171, 0.22 ) }
    dend_51 { pt3dadd( 61.0093, 794.555, -100.146, 0.37 ) }
    dend_51 { pt3dadd( 61.0486, 794.541, -100.211, 0.37 ) }
    dend_51 { pt3dadd( 61.623, 794.374, -101.169, 0.22 ) }
    dend_51 { pt3dadd( 61.6543, 794.364, -101.215, 0.22 ) }
    dend_51 { pt3dadd( 62.1282, 794.265, -101.767, 0.22 ) }
    dend_51 { pt3dadd( 62.3783, 794.204, -102.059, 0.74 ) }
    dend_51 { pt3dadd( 62.6448, 794.124, -102.368, 1.03 ) }
    dend_51 { pt3dadd( 62.7014, 794.106, -102.432, 1.03 ) }
    dend_51 { pt3dadd( 63.8139, 793.725, -103.57, 0.37 ) }
    dend_51 { pt3dadd( 64.4213, 793.531, -104.23, 1.62 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 51.775, 799.44, -92.2365, 0.29 ) }
    dend_34 { pt3dadd( 52.193, 800.824, -92.5646, 0.29 ) }
    dend_34 { pt3dadd( 52.4843, 801.674, -92.7851, 0.29 ) }
    dend_34 { pt3dadd( 52.5112, 801.745, -92.8048, 0.29 ) }
    dend_34 { pt3dadd( 52.8709, 802.699, -93.0685, 0.15 ) }
    dend_34 { pt3dadd( 53.2473, 803.698, -93.3445, 1.18 ) }
    dend_34 { pt3dadd( 53.4602, 804.262, -93.5006, 1.77 ) }
    dend_34 { pt3dadd( 53.7994, 805.038, -93.7474, 1.18 ) }
    dend_34 { pt3dadd( 54.0489, 805.558, -93.9276, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 39.5026, 808.034, -65.9754, 0.59 ) }
    dend_57 { pt3dadd( 39.6274, 809.114, -65.7703, 0.59 ) }
    dend_57 { pt3dadd( 39.6347, 809.206, -65.7575, 0.59 ) }
    dend_57 { pt3dadd( 39.6753, 809.874, -65.6976, 0.59 ) }
    dend_57 { pt3dadd( 39.6846, 809.98, -65.6942, 0.59 ) }
    dend_57 { pt3dadd( 39.7444, 810.408, -65.7192, 0.59 ) }
    dend_57 { pt3dadd( 39.8508, 810.662, -65.6553, 0.59 ) }
    dend_57 { pt3dadd( 40.0819, 810.907, -65.3968, 0.29 ) }
    dend_57 { pt3dadd( 40.3727, 811.215, -65.0293, 0.22 ) }
    dend_57 { pt3dadd( 40.7225, 811.628, -64.511, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_57 { pt3dadd( 41.0139, 812.028, -63.9988, 0.74 ) }
    dend_57 { pt3dadd( 42.2675, 813.915, -61.5051, 0.74 ) }
    dend_57 { pt3dadd( 43.4848, 815.963, -58.7645, 0.88 ) }
    dend_57 { pt3dadd( 43.8893, 816.721, -57.7214, 0.22 ) }
    dend_57 { pt3dadd( 44.2348, 817.451, -56.7281, 0.22 ) }
    dend_57 { pt3dadd( 44.435, 818.013, -56.0272, 0.22 ) }
    dend_57 { pt3dadd( 44.4492, 818.085, -55.9515, 0.22 ) }
    dend_57 { pt3dadd( 44.4027, 818.572, -55.6808, 0.22 ) }
    dend_57 { pt3dadd( 44.3841, 818.672, -55.6518, 0.22 ) }
    dend_57 { pt3dadd( 44.3196, 819.64, -55.3629, 0.22 ) }
    dend_57 { pt3dadd( 44.3179, 820.974, -54.9637, 0.81 ) }
    dend_57 { pt3dadd( 44.3134, 821.048, -54.9395, 0.81 ) }
    dend_57 { pt3dadd( 44.1621, 821.907, -54.6532, 0.96 ) }
    dend_57 { pt3dadd( 44.1302, 822.038, -54.6107, 0.96 ) }
    dend_57 { pt3dadd( 43.9515, 822.675, -54.4226, 0.96 ) }
    dend_57 { pt3dadd( 43.6565, 823.633, -54.1748, 0.44 ) }
    dend_57 { pt3dadd( 43.4378, 824.415, -54.0198, 0.44 ) }
    dend_57 { pt3dadd( 43.1355, 825.653, -53.8124, 0.22 ) }
    dend_57 { pt3dadd( 42.8851, 826.891, -53.6318, 0.37 ) }
    dend_57 { pt3dadd( 42.6798, 828.109, -53.4558, 0.37 ) }
    dend_57 { pt3dadd( 42.5504, 829.157, -53.288, 0.37 ) }
    dend_57 { pt3dadd( 42.4608, 830.401, -53.0346, 0.22 ) }
    dend_57 { pt3dadd( 42.4589, 830.491, -53.0119, 0.22 ) }
    dend_57 { pt3dadd( 42.4691, 831.099, -52.7337, 0.22 ) }
    dend_57 { pt3dadd( 42.4811, 831.224, -52.6234, 0.22 ) }
    dend_57 { pt3dadd( 42.6674, 832.057, -51.4569, 0.15 ) }
    dend_57 { pt3dadd( 42.8218, 832.508, -50.7675, 0.44 ) }
    dend_57 { pt3dadd( 42.8369, 832.55, -50.7059, 0.44 ) }
    dend_57 { pt3dadd( 43.2303, 833.857, -49.1493, 0.88 ) }
    dend_57 { pt3dadd( 43.4897, 834.883, -48.1581, 0.88 ) }
    dend_57 { pt3dadd( 43.5739, 835.2, -47.9146, 0.88 ) }
    dend_57 { pt3dadd( 43.9977, 836.711, -46.9992, 0.37 ) }
    dend_57 { pt3dadd( 44.2519, 837.613, -46.6131, 0.22 ) }
    dend_57 { pt3dadd( 44.5328, 838.613, -46.2952, 0.22 ) }
    dend_57 { pt3dadd( 44.7153, 839.163, -46.1999, 0.59 ) }
    dend_57 { pt3dadd( 45.269, 840.634, -46.0015, 0.44 ) }
    dend_57 { pt3dadd( 45.3249, 840.74, -45.9851, 0.44 ) }
    dend_57 { pt3dadd( 46.1102, 841.674, -45.7561, 0.29 ) }
    dend_57 { pt3dadd( 46.2159, 841.749, -45.7396, 0.29 ) }
    dend_57 { pt3dadd( 47.4372, 842.177, -45.7778, 0.29 ) }
    dend_57 { pt3dadd( 47.5112, 842.191, -45.7824, 0.29 ) }
    dend_57 { pt3dadd( 48.6716, 842.495, -45.8178, 0.81 ) }
    dend_57 { pt3dadd( 48.799, 842.546, -45.8154, 0.81 ) }
    dend_57 { pt3dadd( 49.5685, 843.011, -45.7402, 0.81 ) }
    dend_57 { pt3dadd( 50.7196, 844.003, -45.5541, 0.29 ) }
    dend_57 { pt3dadd( 51.8983, 845.312, -45.2886, 0.29 ) }
    dend_57 { pt3dadd( 53.2894, 847.172, -44.9769, 0.52 ) }
    dend_57 { pt3dadd( 54.0101, 848.346, -44.8089, 1.33 ) }
    dend_57 { pt3dadd( 54.8409, 849.862, -44.5852, 0.22 ) }
    dend_57 { pt3dadd( 55.2086, 850.674, -44.4609, 0.74 ) }
    dend_57 { pt3dadd( 55.279, 850.875, -44.4329, 0.74 ) }
    dend_57 { pt3dadd( 55.5997, 852.036, -44.3963, 0.37 ) }
    dend_57 { pt3dadd( 55.7877, 852.699, -44.4553, 1.03 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 53/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 39.5026, 808.034, -65.9754, 0.22 ) }
    dend_56 { pt3dadd( 39.3039, 808.64, -65.1917, 0.22 ) }
    dend_56 { pt3dadd( 39.1714, 809.023, -64.6875, 0.15 ) }
    dend_56 { pt3dadd( 38.9775, 809.511, -64.0328, 0.15 ) }
    dend_56 { pt3dadd( 38.7443, 810.098, -63.2453, 0.52 ) }
    dend_56 { pt3dadd( 38.6423, 810.355, -62.9012, 0.52 ) }
    dend_56 { pt3dadd( 38.4999, 810.713, -62.4204, 0.52 ) }
    dend_56 { pt3dadd( 38.46, 810.815, -62.2787, 0.52 ) }
    dend_56 { pt3dadd( 38.2381, 811.381, -61.4611, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_34 (entry count 62/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 54.0489, 805.558, -93.9276, 0.22 ) }
    dend_50 { pt3dadd( 54.6359, 804.422, -94.4806, 0.22 ) }
    dend_50 { pt3dadd( 54.8038, 804.05, -94.6358, 0.29 ) }
    dend_50 { pt3dadd( 55.0985, 803.286, -94.9096, 0.22 ) }
    dend_50 { pt3dadd( 55.3392, 802.662, -95.1332, 0.44 ) }
    dend_50 { pt3dadd( 55.5716, 802.06, -95.3491, 0.22 ) }
    dend_50 { pt3dadd( 55.5884, 802.017, -95.3646, 0.22 ) }
    dend_50 { pt3dadd( 55.6632, 801.734, -95.3943, 0.44 ) }
    dend_50 { pt3dadd( 55.7092, 801.439, -95.408, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 54.0489, 805.558, -93.9276, 0.29 ) }
    dend_35 { pt3dadd( 54.1627, 805.955, -93.95, 0.29 ) }
    dend_35 { pt3dadd( 54.4912, 806.869, -93.9472, 0.29 ) }
    dend_35 { pt3dadd( 54.8653, 807.803, -93.9173, 0.29 ) }
    dend_35 { pt3dadd( 54.9027, 807.888, -93.9141, 0.29 ) }
    dend_35 { pt3dadd( 55.3277, 808.726, -93.8858, 0.29 ) }
    dend_35 { pt3dadd( 55.415, 808.882, -93.881, 0.81 ) }
    dend_35 { pt3dadd( 55.8856, 809.638, -93.8633, 0.66 ) }
    dend_35 { pt3dadd( 55.9095, 809.673, -93.8636, 0.66 ) }
    dend_35 { pt3dadd( 56.2176, 810.086, -93.8699, 0.52 ) }
    dend_35 { pt3dadd( 57.0067, 811.157, -93.9148, 0.29 ) }
    dend_35 { pt3dadd( 57.5156, 811.852, -93.922, 0.29 ) }
    dend_35 { pt3dadd( 57.7737, 812.234, -93.9261, 1.33 ) }
    dend_35 { pt3dadd( 58.0715, 812.71, -93.9371, 1.55 ) }
    dend_35 { pt3dadd( 58.1019, 812.762, -93.9377, 1.55 ) }
    dend_35 { pt3dadd( 58.4451, 813.365, -93.9083, 1.25 ) }
    dend_35 { pt3dadd( 59.134, 814.627, -93.8168, 0.37 ) }
    dend_35 { pt3dadd( 59.5359, 815.379, -93.745, 0.29 ) }
    dend_35 { pt3dadd( 59.5632, 815.431, -93.7387, 0.29 ) }
    dend_35 { pt3dadd( 59.9983, 816.249, -93.6192, 0.29 ) }
    dend_35 { pt3dadd( 60.7768, 817.705, -93.3949, 1.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 92/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 55.7877, 852.699, -44.4553, 0.44 ) }
    dend_59 { pt3dadd( 55.8007, 851.77, -44.5707, 0.44 ) }
    dend_59 { pt3dadd( 55.8122, 850.942, -44.6734, 0.37 ) }
    dend_59 { pt3dadd( 55.8202, 850.368, -44.7447, 0.22 ) }
    dend_59 { pt3dadd( 55.8209, 850.318, -44.7509, 0.22 ) }
    dend_59 { pt3dadd( 55.8339, 849.389, -44.8663, 0.22 ) }
    dend_59 { pt3dadd( 55.8345, 849.339, -44.8725, 0.22 ) }
    dend_59 { pt3dadd( 56.5437, 842.321, -44.64, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 55.7877, 852.699, -44.4553, 0.74 ) }
    dend_58 { pt3dadd( 55.6875, 853.249, -44.409, 0.74 ) }
    dend_58 { pt3dadd( 55.6159, 854.0, -44.4, 0.22 ) }
    dend_58 { pt3dadd( 55.6096, 854.06, -44.4, 0.22 ) }
    dend_58 { pt3dadd( 55.5603, 854.695, -44.3928, 0.22 ) }
    dend_58 { pt3dadd( 55.5478, 854.891, -44.3887, 0.22 ) }
    dend_58 { pt3dadd( 55.5215, 855.523, -44.3699, 0.22 ) }
    dend_58 { pt3dadd( 55.5073, 856.359, -44.3323, 1.4 ) }
    dend_58 { pt3dadd( 55.5539, 857.474, -44.2673, 0.29 ) }
    dend_58 { pt3dadd( 55.625, 858.2, -44.2021, 0.29 ) }
    dend_58 { pt3dadd( 55.6377, 858.285, -44.1923, 0.29 ) }
    dend_58 { pt3dadd( 55.7799, 859.096, -44.0629, 0.29 ) }
    dend_58 { pt3dadd( 55.7921, 859.153, -44.0506, 0.29 ) }
    dend_58 { pt3dadd( 56.04, 860.087, -43.7794, 0.81 ) }
    dend_58 { pt3dadd( 56.2291, 860.639, -43.5933, 1.11 ) }
    dend_58 { pt3dadd( 56.2478, 860.692, -43.5754, 1.11 ) }
    dend_58 { pt3dadd( 56.466, 861.378, -43.3542, 1.11 ) }
    dend_58 { pt3dadd( 56.4928, 861.471, -43.3239, 1.11 ) }
    dend_58 { pt3dadd( 56.5819, 861.928, -43.1843, 1.11 ) }
    dend_58 { pt3dadd( 56.5886, 861.975, -43.168, 1.11 ) }
    dend_58 { pt3dadd( 56.6608, 862.584, -42.9693, 0.22 ) }
    dend_58 { pt3dadd( 56.7338, 863.222, -42.7542, 0.29 ) }
    dend_58 { pt3dadd( 56.7397, 863.278, -42.7343, 0.29 ) }
    dend_58 { pt3dadd( 56.7865, 863.881, -42.5267, 0.22 ) }
    dend_58 { pt3dadd( 56.8286, 864.908, -42.1668, 0.81 ) }
    dend_58 { pt3dadd( 56.9555, 873.208, -40.2644, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 26/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 60.7768, 817.705, -93.3949, 1.84 ) }
    dend_37 { pt3dadd( 61.5755, 818.314, -94.151, 1.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 60.7768, 817.705, -93.3949, 0.22 ) }
    dend_36 { pt3dadd( 60.728, 819.266, -93.7583, 0.22 ) }
    dend_36 { pt3dadd( 60.7253, 820.106, -93.9379, 0.22 ) }
    dend_36 { pt3dadd( 60.7258, 820.156, -93.9478, 0.22 ) }
    dend_36 { pt3dadd( 60.7459, 821.155, -94.1312, 0.59 ) }
    dend_36 { pt3dadd( 60.7755, 822.178, -94.3109, 0.22 ) }
    dend_36 { pt3dadd( 60.8072, 822.949, -94.4412, 0.66 ) }
    dend_36 { pt3dadd( 60.8185, 823.008, -94.4454, 0.66 ) }
    dend_36 { pt3dadd( 60.8663, 823.187, -94.4545, 0.66 ) }
    dend_36 { pt3dadd( 61.0873, 823.888, -94.4714, 0.15 ) }
    dend_36 { pt3dadd( 61.1076, 823.942, -94.4704, 0.15 ) }
    dend_36 { pt3dadd( 61.3074, 824.42, -94.441, 1.18 ) }
    dend_36 { pt3dadd( 61.8564, 825.53, -94.3525, 0.29 ) }
    dend_36 { pt3dadd( 62.0386, 825.873, -94.3214, 0.52 ) }
    dend_36 { pt3dadd( 62.0681, 825.922, -94.3159, 0.52 ) }
    dend_36 { pt3dadd( 62.2105, 826.125, -94.2846, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 61.5755, 818.314, -94.151, 0.15 ) }
    dend_39 { pt3dadd( 62.6035, 820.577, -94.2688, 0.15 ) }
    dend_39 { pt3dadd( 63.0791, 821.696, -94.3418, 0.15 ) }
    dend_39 { pt3dadd( 63.404, 822.461, -94.3918, 0.29 ) }
    dend_39 { pt3dadd( 63.5189, 822.732, -94.4094, 0.29 ) }
    dend_39 { pt3dadd( 63.809, 823.414, -94.4539, 0.15 ) }
    dend_39 { pt3dadd( 64.0366, 823.95, -94.4889, 0.29 ) }
    dend_39 { pt3dadd( 64.0621, 824.09, -94.5115, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 52/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 61.5755, 818.314, -94.151, 0.29 ) }
    dend_38 { pt3dadd( 62.4992, 816.614, -94.228, 0.29 ) }
    dend_38 { pt3dadd( 62.8079, 816.046, -94.2289, 0.29 ) }
    dend_38 { pt3dadd( 63.3125, 815.09, -94.2094, 0.22 ) }
    dend_38 { pt3dadd( 63.4901, 814.764, -94.2114, 0.52 ) }
    dend_38 { pt3dadd( 64.2039, 813.464, -94.2273, 0.22 ) }
    dend_38 { pt3dadd( 64.2359, 813.405, -94.2264, 0.22 ) }
    dend_38 { pt3dadd( 64.4596, 812.959, -94.1963, 0.88 ) }
    dend_38 { pt3dadd( 64.6274, 812.679, -94.1672, 1.03 ) }
    dend_38 { pt3dadd( 65.5837, 811.209, -93.8987, 0.22 ) }
    dend_38 { pt3dadd( 65.6299, 811.132, -93.8792, 0.22 ) }
    dend_38 { pt3dadd( 66.4516, 809.738, -93.4664, 0.22 ) }
    dend_38 { pt3dadd( 66.4848, 809.683, -93.4479, 0.22 ) }
    dend_38 { pt3dadd( 67.2643, 808.44, -93.0576, 0.22 ) }
    dend_38 { pt3dadd( 67.7856, 807.635, -92.8043, 0.22 ) }
    dend_38 { pt3dadd( 68.4689, 806.697, -92.4836, 0.22 ) }
    dend_38 { pt3dadd( 69.4128, 805.542, -92.1547, 0.29 ) }
    dend_38 { pt3dadd( 69.4878, 805.46, -92.1428, 0.29 ) }
    dend_38 { pt3dadd( 70.6999, 804.189, -92.2016, 0.15 ) }
    dend_38 { pt3dadd( 70.746, 804.143, -92.2122, 0.15 ) }
    dend_38 { pt3dadd( 71.9497, 802.996, -92.7168, 0.96 ) }
    dend_38 { pt3dadd( 72.2903, 802.684, -92.9018, 0.96 ) }
    dend_38 { pt3dadd( 73.4152, 801.604, -93.6033, 0.22 ) }
    dend_38 { pt3dadd( 74.3127, 800.735, -94.1935, 0.22 ) }
    dend_38 { pt3dadd( 74.3552, 800.694, -94.2239, 0.22 ) }
    dend_38 { pt3dadd( 75.142, 799.889, -94.8532, 0.22 ) }
    dend_38 { pt3dadd( 76.2346, 798.653, -95.9279, 0.22 ) }
    dend_38 { pt3dadd( 76.7192, 798.1, -96.3848, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 64.0621, 824.09, -94.5115, 0.37 ) }
    dend_41 { pt3dadd( 64.3813, 825.053, -94.5291, 0.37 ) }
    dend_41 { pt3dadd( 64.3975, 825.107, -94.5324, 0.37 ) }
    dend_41 { pt3dadd( 64.4811, 825.438, -94.5572, 0.22 ) }
    dend_41 { pt3dadd( 64.629, 826.169, -94.6345, 0.22 ) }
    dend_41 { pt3dadd( 64.6918, 826.558, -94.6774, 0.66 ) }
    dend_41 { pt3dadd( 64.7021, 826.622, -94.6844, 0.66 ) }
    dend_41 { pt3dadd( 64.7776, 827.295, -94.7937, 0.52 ) }
    dend_41 { pt3dadd( 64.8363, 827.876, -94.8862, 0.52 ) }
    dend_41 { pt3dadd( 64.89, 828.576, -94.9916, 1.33 ) }
    dend_41 { pt3dadd( 64.9175, 829.16, -95.0763, 1.47 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 64.0621, 824.09, -94.5115, 0.29 ) }
    dend_40 { pt3dadd( 65.0734, 824.062, -94.4845, 0.29 ) }
    dend_40 { pt3dadd( 65.1278, 824.066, -94.485, 0.29 ) }
    dend_40 { pt3dadd( 66.7127, 824.225, -94.5197, 0.66 ) }
    dend_40 { pt3dadd( 67.737, 824.353, -94.5437, 0.15 ) }
    dend_40 { pt3dadd( 68.2676, 824.422, -94.5603, 0.88 ) }
    dend_40 { pt3dadd( 68.833, 824.486, -94.5999, 0.88 ) }
    dend_40 { pt3dadd( 69.6911, 824.589, -94.6713, 0.22 ) }
    dend_40 { pt3dadd( 69.7447, 824.594, -94.6795, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_40 { pt3dadd( 70.4056, 824.661, -94.865, 0.81 ) }
    dend_40 { pt3dadd( 70.6854, 824.721, -94.9574, 0.81 ) }
    dend_40 { pt3dadd( 71.5958, 824.969, -95.2747, 0.22 ) }
    dend_40 { pt3dadd( 71.8421, 825.031, -95.3666, 0.96 ) }
    dend_40 { pt3dadd( 71.9, 825.047, -95.3905, 0.96 ) }
    dend_40 { pt3dadd( 72.3701, 825.195, -95.6107, 0.52 ) }
    dend_40 { pt3dadd( 73.1742, 825.431, -95.9515, 0.22 ) }
    dend_40 { pt3dadd( 73.2587, 825.454, -95.9804, 0.22 ) }
    dend_40 { pt3dadd( 73.5291, 825.516, -96.0484, 0.22 ) }
    dend_40 { pt3dadd( 73.6119, 825.529, -96.0672, 0.22 ) }
    dend_40 { pt3dadd( 74.4002, 825.614, -96.2344, 0.66 ) }
    dend_40 { pt3dadd( 75.5355, 825.693, -96.4647, 0.15 ) }
    dend_40 { pt3dadd( 75.589, 825.695, -96.4754, 0.15 ) }
    dend_40 { pt3dadd( 76.3069, 825.696, -96.6494, 0.15 ) }
    dend_40 { pt3dadd( 76.8301, 825.691, -96.7684, 0.74 ) }
    dend_40 { pt3dadd( 76.981, 825.691, -96.8027, 0.74 ) }
    dend_40 { pt3dadd( 77.4241, 825.699, -96.9044, 0.74 ) }
    dend_40 { pt3dadd( 77.4855, 825.699, -96.921, 0.74 ) }
    dend_40 { pt3dadd( 78.4324, 825.688, -97.1751, 0.22 ) }
    dend_40 { pt3dadd( 79.7787, 825.625, -97.5182, 0.66 ) }
    dend_40 { pt3dadd( 80.1127, 825.6, -97.5969, 0.66 ) }
    dend_40 { pt3dadd( 80.184, 825.594, -97.6126, 0.66 ) }
    dend_40 { pt3dadd( 80.7619, 825.523, -97.7267, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 64.9175, 829.16, -95.0763, 0.44 ) }
    dend_43 { pt3dadd( 65.3033, 830.581, -94.6241, 0.44 ) }
    dend_43 { pt3dadd( 65.6663, 831.565, -94.3263, 0.29 ) }
    dend_43 { pt3dadd( 66.0658, 832.529, -94.0478, 0.29 ) }
    dend_43 { pt3dadd( 66.7354, 834.039, -93.652, 0.81 ) }
    dend_43 { pt3dadd( 66.9831, 834.571, -93.5294, 1.18 ) }
    dend_43 { pt3dadd( 67.1036, 834.823, -93.4766, 1.18 ) }
    dend_43 { pt3dadd( 67.8801, 836.215, -93.3034, 0.15 ) }
    dend_43 { pt3dadd( 67.9774, 836.361, -93.2942, 0.15 ) }
    dend_43 { pt3dadd( 68.2995, 836.791, -93.3084, 0.66 ) }
    dend_43 { pt3dadd( 68.5663, 837.174, -93.3738, 0.96 ) }
    dend_43 { pt3dadd( 68.6081, 837.243, -93.3811, 0.96 ) }
    dend_43 { pt3dadd( 68.7335, 837.477, -93.3738, 0.96 ) }
    dend_43 { pt3dadd( 69.1989, 838.288, -93.2441, 0.29 ) }
    dend_43 { pt3dadd( 69.2885, 838.431, -93.2126, 0.29 ) }
    dend_43 { pt3dadd( 69.6981, 839.04, -93.0555, 0.29 ) }
    dend_43 { pt3dadd( 70.4464, 840.119, -92.7593, 0.37 ) }
    dend_43 { pt3dadd( 71.0432, 840.978, -92.517, 0.52 ) }
    dend_43 { pt3dadd( 71.9578, 842.284, -92.1308, 0.96 ) }
    dend_43 { pt3dadd( 72.0089, 842.357, -92.1111, 0.96 ) }
    dend_43 { pt3dadd( 72.5197, 843.077, -91.9569, 1.18 ) }
    dend_43 { pt3dadd( 72.6753, 843.3, -91.9303, 1.18 ) }
    dend_43 { pt3dadd( 72.8931, 843.684, -91.9565, 1.18 ) }
    dend_43 { pt3dadd( 72.9429, 843.793, -91.9752, 1.18 ) }
    dend_43 { pt3dadd( 73.3058, 844.798, -92.1687, 1.33 ) }
    dend_43 { pt3dadd( 73.3353, 844.884, -92.186, 1.33 ) }
    dend_43 { pt3dadd( 73.5436, 845.525, -92.3222, 1.25 ) }
    dend_43 { pt3dadd( 74.1056, 847.288, -92.7069, 0.22 ) }
    dend_43 { pt3dadd( 74.4227, 848.362, -92.9341, 0.22 ) }
    dend_43 { pt3dadd( 74.571, 848.932, -93.0418, 0.59 ) }
    dend_43 { pt3dadd( 74.6016, 849.056, -93.0644, 0.59 ) }
    dend_43 { pt3dadd( 74.6804, 849.386, -93.123, 0.59 ) }
    dend_43 { pt3dadd( 74.8925, 850.366, -93.2864, 0.22 ) }
    dend_43 { pt3dadd( 74.9918, 851.124, -93.3799, 0.96 ) }
    dend_43 { pt3dadd( 75.0718, 852.048, -93.4563, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 58/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 64.9175, 829.16, -95.0763, 0.15 ) }
    dend_42 { pt3dadd( 65.4616, 831.791, -96.1407, 0.15 ) }
    dend_42 { pt3dadd( 65.4782, 831.898, -96.1753, 0.15 ) }
    dend_42 { pt3dadd( 65.5699, 832.445, -96.3439, 0.15 ) }
    dend_42 { pt3dadd( 65.583, 832.532, -96.368, 0.15 ) }
    dend_42 { pt3dadd( 65.6511, 833.123, -96.522, 0.59 ) }
    dend_42 { pt3dadd( 65.6896, 833.508, -96.616, 0.59 ) }
    dend_42 { pt3dadd( 65.8671, 835.923, -97.1025, 0.22 ) }
    dend_42 { pt3dadd( 65.9212, 836.883, -97.2826, 1.25 ) }
    dend_42 { pt3dadd( 65.9656, 837.563, -97.3997, 0.88 ) }
    dend_42 { pt3dadd( 66.0898, 839.334, -97.6757, 0.15 ) }
    dend_42 { pt3dadd( 66.1413, 840.084, -97.7756, 0.15 ) }
    dend_42 { pt3dadd( 66.1896, 840.913, -97.8645, 0.74 ) }
    dend_42 { pt3dadd( 66.2179, 841.476, -97.906, 1.11 ) }
    dend_42 { pt3dadd( 66.2612, 842.754, -97.9823, 0.15 ) }
    dend_42 { pt3dadd( 66.2878, 843.422, -98.0196, 0.96 ) }
    dend_42 { pt3dadd( 66.315, 844.234, -98.0482, 1.18 ) }
    dend_42 { pt3dadd( 66.3496, 846.53, -98.1253, 0.15 ) }
    dend_42 { pt3dadd( 66.3494, 846.633, -98.1281, 0.15 ) }
    dend_42 { pt3dadd( 66.3206, 847.702, -98.1601, 0.15 ) }
    dend_42 { pt3dadd( 66.316, 847.779, -98.1627, 0.15 ) }
    dend_42 { pt3dadd( 66.2927, 848.434, -98.1885, 0.52 ) }
    dend_42 { pt3dadd( 66.2901, 848.591, -98.1933, 0.52 ) }
    dend_42 { pt3dadd( 66.2865, 848.926, -98.2056, 0.52 ) }
    dend_42 { pt3dadd( 66.2868, 848.992, -98.2095, 0.52 ) }
    dend_42 { pt3dadd( 66.3077, 850.094, -98.2892, 0.22 ) }
    dend_42 { pt3dadd( 66.3237, 850.894, -98.3511, 1.11 ) }
    dend_42 { pt3dadd( 66.355, 851.641, -98.3949, 0.81 ) }
    dend_42 { pt3dadd( 66.4622, 853.611, -98.4849, 0.15 ) }
    dend_42 { pt3dadd( 66.5986, 855.703, -98.5552, 0.15 ) }
    dend_42 { pt3dadd( 66.6635, 856.406, -98.5661, 1.03 ) }
    dend_42 { pt3dadd( 66.7611, 857.191, -98.5537, 0.81 ) }
    dend_42 { pt3dadd( 67.0383, 858.882, -98.4677, 0.22 ) }
    dend_42 { pt3dadd( 67.0515, 858.947, -98.4617, 0.22 ) }
    dend_42 { pt3dadd( 67.3399, 860.025, -98.2862, 0.52 ) }
    dend_42 { pt3dadd( 67.6523, 861.043, -98.065, 0.22 ) }
    dend_42 { pt3dadd( 67.9379, 861.955, -97.8564, 0.74 ) }
    dend_42 { pt3dadd( 68.1016, 862.471, -97.7371, 0.74 ) }
    dend_42 { pt3dadd( 68.1239, 862.544, -97.7205, 0.74 ) }
    dend_42 { pt3dadd( 68.5774, 864.044, -97.4096, 0.22 ) }
    dend_42 { pt3dadd( 68.5961, 864.106, -97.398, 0.22 ) }
    dend_42 { pt3dadd( 68.9174, 865.281, -97.2629, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_42 { pt3dadd( 69.0267, 865.685, -97.239, 0.66 ) }
    dend_42 { pt3dadd( 69.0444, 865.749, -97.2383, 0.66 ) }
    dend_42 { pt3dadd( 69.257, 866.471, -97.2805, 0.22 ) }
    dend_42 { pt3dadd( 69.703, 867.625, -97.3992, 1.4 ) }
    dend_42 { pt3dadd( 70.2887, 868.967, -97.5697, 0.15 ) }
    dend_42 { pt3dadd( 70.3606, 869.117, -97.5926, 0.15 ) }
    dend_42 { pt3dadd( 70.7499, 869.883, -97.7113, 0.15 ) }
    dend_42 { pt3dadd( 71.3569, 871.047, -97.8936, 0.15 ) }
    dend_42 { pt3dadd( 72.4558, 873.089, -98.2181, 0.15 ) }
    dend_42 { pt3dadd( 73.0778, 874.157, -98.3854, 1.33 ) }
    dend_42 { pt3dadd( 73.3536, 874.589, -98.4311, 1.47 ) }
    dend_42 { pt3dadd( 74.3604, 876.229, -98.6254, 0.22 ) }
    dend_42 { pt3dadd( 74.4711, 876.418, -98.6487, 0.44 ) }
    dend_42 { pt3dadd( 74.5003, 876.477, -98.6584, 0.44 ) }
    dend_42 { pt3dadd( 74.7886, 877.457, -98.9836, 0.22 ) }
    dend_42 { pt3dadd( 75.2272, 878.721, -99.2636, 0.88 ) }
    dend_42 { pt3dadd( 75.9571, 880.703, -99.4627, 0.59 ) }
    dend_42 { pt3dadd( 76.1233, 881.071, -99.4674, 0.37 ) }
    dend_42 { pt3dadd( 76.6361, 882.052, -99.4295, 0.15 ) }
    dend_42 { pt3dadd( 77.4363, 883.454, -99.3245, 1.62 ) }
    dend_42 { pt3dadd( 79.4091, 886.609, -99.0252, 0.88 ) }
    dend_42 { pt3dadd( 79.8608, 887.256, -98.9405, 1.25 ) }
    dend_42 { pt3dadd( 80.764, 888.408, -98.7176, 0.15 ) }
    dend_42 { pt3dadd( 81.0854, 888.796, -98.6392, 0.66 ) }
    dend_42 { pt3dadd( 81.1434, 888.864, -98.6281, 0.66 ) }
    dend_42 { pt3dadd( 82.1016, 890.031, -98.5615, 0.22 ) }
    dend_42 { pt3dadd( 82.4909, 890.648, -98.6536, 0.88 ) }
    dend_42 { pt3dadd( 82.6385, 890.901, -98.6933, 0.88 ) }
    dend_42 { pt3dadd( 82.6851, 890.99, -98.7055, 0.88 ) }
    dend_42 { pt3dadd( 83.545, 892.732, -98.9128, 0.22 ) }
    dend_42 { pt3dadd( 83.8424, 893.358, -98.9856, 0.66 ) }
    dend_42 { pt3dadd( 84.5535, 894.977, -99.1589, 0.15 ) }
    dend_42 { pt3dadd( 84.8926, 895.785, -99.2432, 0.15 ) }
    dend_42 { pt3dadd( 84.918, 895.85, -99.2495, 0.15 ) }
    dend_42 { pt3dadd( 85.104, 896.389, -99.2926, 0.44 ) }
    dend_42 { pt3dadd( 85.2897, 897.104, -99.3333, 0.22 ) }
    dend_42 { pt3dadd( 85.3984, 897.737, -99.3584, 0.52 ) }
    dend_42 { pt3dadd( 85.3948, 897.829, -99.3563, 0.52 ) }
    dend_42 { pt3dadd( 85.3535, 898.166, -99.3248, 0.52 ) }
    dend_42 { pt3dadd( 85.2857, 898.565, -99.2717, 0.37 ) }
    dend_42 { pt3dadd( 85.2606, 898.65, -99.2513, 0.37 ) }
    dend_42 { pt3dadd( 85.0724, 899.023, -99.0963, 0.22 ) }
    dend_42 { pt3dadd( 84.7152, 899.594, -98.8006, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 43/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 75.0718, 852.048, -93.4563, 0.22 ) }
    dend_45 { pt3dadd( 75.6342, 853.366, -93.4305, 0.22 ) }
    dend_45 { pt3dadd( 75.9271, 854.034, -93.4077, 0.52 ) }
    dend_45 { pt3dadd( 76.674, 855.716, -93.3365, 0.29 ) }
    dend_45 { pt3dadd( 77.0265, 856.498, -93.2978, 0.88 ) }
    dend_45 { pt3dadd( 77.2888, 857.087, -93.2855, 1.18 ) }
    dend_45 { pt3dadd( 77.4677, 857.507, -93.2864, 1.18 ) }
    dend_45 { pt3dadd( 77.5538, 857.721, -93.2969, 1.18 ) }
    dend_45 { pt3dadd( 77.5538, 857.721, -93.2969, 1.18 ) }
    dend_45 { pt3dadd( 77.5713, 857.776, -93.3043, 1.18 ) }
    dend_45 { pt3dadd( 77.8969, 858.845, -93.4632, 0.22 ) }
    dend_45 { pt3dadd( 78.1521, 859.489, -93.5706, 0.44 ) }
    dend_45 { pt3dadd( 78.5782, 860.417, -93.7223, 0.59 ) }
    dend_45 { pt3dadd( 78.8143, 860.852, -93.8057, 1.11 ) }
    dend_45 { pt3dadd( 79.0798, 861.289, -93.8999, 1.11 ) }
    dend_45 { pt3dadd( 79.1113, 861.335, -93.9107, 1.11 ) }
    dend_45 { pt3dadd( 80.2687, 862.739, -94.2982, 0.22 ) }
    dend_45 { pt3dadd( 80.3133, 862.784, -94.316, 0.22 ) }
    dend_45 { pt3dadd( 80.9244, 863.367, -94.5973, 0.22 ) }
    dend_45 { pt3dadd( 81.2639, 863.686, -94.7453, 0.74 ) }
    dend_45 { pt3dadd( 81.311, 863.73, -94.7655, 0.74 ) }
    dend_45 { pt3dadd( 81.6943, 864.119, -94.9237, 0.52 ) }
    dend_45 { pt3dadd( 82.288, 864.813, -95.157, 0.22 ) }
    dend_45 { pt3dadd( 82.7692, 865.415, -95.2716, 0.74 ) }
    dend_45 { pt3dadd( 83.5918, 866.504, -95.3366, 1.25 ) }
    dend_45 { pt3dadd( 83.6427, 866.578, -95.3353, 1.25 ) }
    dend_45 { pt3dadd( 83.8112, 866.844, -95.3133, 1.11 ) }
    dend_45 { pt3dadd( 84.1919, 867.425, -95.2115, 0.52 ) }
    dend_45 { pt3dadd( 84.8081, 868.285, -95.0284, 0.15 ) }
    dend_45 { pt3dadd( 84.8517, 868.337, -95.0169, 0.15 ) }
    dend_45 { pt3dadd( 85.3315, 868.723, -94.9586, 0.15 ) }
    dend_45 { pt3dadd( 85.429, 868.777, -94.9539, 0.15 ) }
    dend_45 { pt3dadd( 86.6807, 869.296, -94.8654, 0.44 ) }
    dend_45 { pt3dadd( 87.1892, 869.468, -94.8292, 0.66 ) }
    dend_45 { pt3dadd( 87.2513, 869.485, -94.8272, 0.66 ) }
    dend_45 { pt3dadd( 88.7727, 869.858, -94.7776, 0.22 ) }
    dend_45 { pt3dadd( 88.8364, 869.871, -94.7755, 0.22 ) }
    dend_45 { pt3dadd( 90.4279, 870.204, -94.7042, 1.33 ) }
    dend_45 { pt3dadd( 90.6288, 870.251, -94.6842, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 82/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 75.0718, 852.048, -93.4563, 0.15 ) }
    dend_44 { pt3dadd( 76.3794, 853.301, -94.6941, 0.15 ) }
    dend_44 { pt3dadd( 76.8542, 853.721, -95.1134, 0.15 ) }
    dend_44 { pt3dadd( 76.9662, 853.812, -95.2081, 0.15 ) }
    dend_44 { pt3dadd( 77.5061, 854.232, -95.6548, 0.44 ) }
    dend_44 { pt3dadd( 77.6267, 854.32, -95.7518, 0.44 ) }
    dend_44 { pt3dadd( 78.4176, 854.881, -96.3843, 0.22 ) }
    dend_44 { pt3dadd( 78.833, 855.156, -96.6949, 0.44 ) }
    dend_44 { pt3dadd( 79.3878, 855.468, -97.1161, 0.15 ) }
    dend_44 { pt3dadd( 79.446, 855.498, -97.1609, 0.15 ) }
    dend_44 { pt3dadd( 80.0204, 855.764, -97.6082, 0.66 ) }
    dend_44 { pt3dadd( 80.0786, 855.789, -97.6543, 0.66 ) }
    dend_44 { pt3dadd( 80.8421, 856.083, -98.2731, 0.22 ) }
    dend_44 { pt3dadd( 81.4546, 856.327, -98.7891, 0.88 ) }
    dend_44 { pt3dadd( 81.5203, 856.353, -98.8452, 0.88 ) }
    dend_44 { pt3dadd( 81.6958, 856.419, -98.9964, 1.11 ) }
    dend_44 { pt3dadd( 81.8103, 856.458, -99.0975, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 99/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 90.6288, 870.251, -94.6842, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_47 { pt3dadd( 91.6185, 871.496, -94.2775, 0.29 ) }
    dend_47 { pt3dadd( 91.6597, 871.546, -94.2683, 0.29 ) }
    dend_47 { pt3dadd( 92.2539, 872.25, -94.1998, 0.29 ) }
    dend_47 { pt3dadd( 92.3244, 872.328, -94.2014, 0.29 ) }
    dend_47 { pt3dadd( 92.7908, 872.86, -94.242, 0.74 ) }
    dend_47 { pt3dadd( 92.828, 872.903, -94.2467, 0.74 ) }
    dend_47 { pt3dadd( 93.2858, 873.437, -94.289, 0.74 ) }
    dend_47 { pt3dadd( 93.3743, 873.533, -94.2848, 0.74 ) }
    dend_47 { pt3dadd( 93.9748, 874.148, -94.2289, 0.15 ) }
    dend_47 { pt3dadd( 94.2601, 874.434, -94.2039, 0.15 ) }
    dend_47 { pt3dadd( 94.2977, 874.472, -94.1993, 0.15 ) }
    dend_47 { pt3dadd( 95.542, 875.784, -94.0295, 0.15 ) }
    dend_47 { pt3dadd( 95.9282, 876.225, -93.9627, 1.11 ) }
    dend_47 { pt3dadd( 96.2746, 876.665, -93.8992, 1.25 ) }
    dend_47 { pt3dadd( 97.0422, 877.7, -93.7594, 0.22 ) }
    dend_47 { pt3dadd( 97.4833, 878.314, -93.6977, 0.22 ) }
    dend_47 { pt3dadd( 97.513, 878.359, -93.695, 0.22 ) }
    dend_47 { pt3dadd( 97.8605, 879.03, -93.734, 0.29 ) }
    dend_47 { pt3dadd( 98.1696, 879.707, -93.7834, 0.74 ) }
    dend_47 { pt3dadd( 98.3872, 880.184, -93.8159, 1.11 ) }
    dend_47 { pt3dadd( 98.416, 880.244, -93.8221, 1.11 ) }
    dend_47 { pt3dadd( 98.7755, 880.88, -93.9376, 0.66 ) }
    dend_47 { pt3dadd( 99.2462, 881.658, -94.1133, 0.22 ) }
    dend_47 { pt3dadd( 99.5616, 882.111, -94.255, 0.15 ) }
    dend_47 { pt3dadd( 99.9743, 882.645, -94.4639, 1.11 ) }
    dend_47 { pt3dadd( 100.356, 883.136, -94.677, 1.69 ) }
    dend_47 { pt3dadd( 100.389, 883.174, -94.6953, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 27/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 90.6288, 870.251, -94.6842, 0.29 ) }
    dend_46 { pt3dadd( 89.9641, 871.474, -94.0928, 0.29 ) }
    dend_46 { pt3dadd( 89.7806, 871.796, -93.94, 0.29 ) }
    dend_46 { pt3dadd( 89.2641, 872.678, -93.5007, 0.15 ) }
    dend_46 { pt3dadd( 89.1536, 872.864, -93.4054, 0.15 ) }
    dend_46 { pt3dadd( 88.803, 873.477, -93.0966, 0.29 ) }
    dend_46 { pt3dadd( 88.2653, 874.436, -92.6213, 0.15 ) }
    dend_46 { pt3dadd( 88.1971, 874.558, -92.5684, 0.15 ) }
    dend_46 { pt3dadd( 87.6438, 875.648, -92.1678, 0.15 ) }
    dend_46 { pt3dadd( 87.5941, 875.764, -92.1396, 0.15 ) }
    dend_46 { pt3dadd( 87.2955, 876.549, -91.9946, 0.15 ) }
    dend_46 { pt3dadd( 87.2251, 876.775, -91.9745, 0.15 ) }
    dend_46 { pt3dadd( 86.8039, 878.269, -91.9398, 0.15 ) }
    dend_46 { pt3dadd( 86.7741, 878.385, -91.9417, 0.15 ) }
    dend_46 { pt3dadd( 86.4674, 879.766, -92.089, 0.15 ) }
    dend_46 { pt3dadd( 86.449, 879.852, -92.101, 0.15 ) }
    dend_46 { pt3dadd( 86.3068, 880.562, -92.2423, 0.37 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 44/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 100.389, 883.174, -94.6953, 0.52 ) }
    dend_49 { pt3dadd( 101.496, 884.614, -93.9764, 0.52 ) }
    dend_49 { pt3dadd( 102.422, 886.009, -93.2541, 0.29 ) }
    dend_49 { pt3dadd( 102.678, 886.511, -93.0196, 0.96 ) }
    dend_49 { pt3dadd( 102.958, 887.132, -92.7404, 1.11 ) }
    dend_49 { pt3dadd( 103.003, 887.236, -92.6912, 1.11 ) }
    dend_49 { pt3dadd( 103.378, 888.119, -92.2623, 0.81 ) }
    dend_49 { pt3dadd( 103.706, 889.082, -91.8087, 1.11 ) }
    dend_49 { pt3dadd( 104.135, 890.437, -91.2554, 0.37 ) }
    dend_49 { pt3dadd( 104.155, 890.493, -91.2343, 0.37 ) }
    dend_49 { pt3dadd( 104.643, 891.734, -90.8485, 0.29 ) }
    dend_49 { pt3dadd( 104.674, 891.798, -90.8325, 0.29 ) }
    dend_49 { pt3dadd( 105.247, 892.582, -90.69, 0.81 ) }
    dend_49 { pt3dadd( 105.635, 892.975, -90.638, 1.03 ) }
    dend_49 { pt3dadd( 105.69, 893.022, -90.6323, 1.03 ) }
    dend_49 { pt3dadd( 106.18, 893.435, -90.5927, 0.96 ) }
    dend_49 { pt3dadd( 107.426, 894.471, -90.5268, 0.66 ) }
    dend_49 { pt3dadd( 108.632, 895.502, -90.4741, 0.52 ) }
    dend_49 { pt3dadd( 109.572, 896.353, -90.4262, 0.44 ) }
    dend_49 { pt3dadd( 110.033, 896.809, -90.3964, 0.44 ) }
    dend_49 { pt3dadd( 110.465, 897.204, -90.351, 0.37 ) }
    dend_49 { pt3dadd( 110.594, 897.312, -90.3373, 0.37 ) }
    dend_49 { pt3dadd( 111.523, 898.01, -90.2759, 0.37 ) }
    dend_49 { pt3dadd( 112.42, 898.702, -90.2192, 0.22 ) }
    dend_49 { pt3dadd( 113.662, 899.599, -90.1458, 1.4 ) }
    dend_49 { pt3dadd( 115.507, 900.816, -89.9982, 0.29 ) }
    dend_49 { pt3dadd( 116.098, 901.165, -89.9347, 0.96 ) }
    dend_49 { pt3dadd( 116.583, 901.412, -89.8681, 0.96 ) }
    dend_49 { pt3dadd( 124.532, 907.769, -89.2351, 0.96 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 100.389, 883.174, -94.6953, 0.22 ) }
    dend_48 { pt3dadd( 99.9833, 884.805, -94.3241, 0.22 ) }
    dend_48 { pt3dadd( 99.6233, 886.25, -93.995, 0.22 ) }
    dend_48 { pt3dadd( 99.5867, 886.398, -93.9615, 0.22 ) }
    dend_48 { pt3dadd( 99.2712, 887.664, -93.673, 0.22 ) }
    dend_48 { pt3dadd( 98.4468, 897.491, -91.1607, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_75 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_74 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_73 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_72 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_23 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_67 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_66 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_61 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_11 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_57 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_42 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_7 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_21 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_70 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_22 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_71 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_69 OneSecGrp_SectionRef_34.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_68 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_32 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_53 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_34 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_50 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_55 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_60 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_56 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_39 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_38 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_43 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_63 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_62 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_44 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_65 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_45 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_59 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_64 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_46 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_58 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_47 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_48 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_49 OneSecGrp_SectionRef_78.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_75 nseg = 11
    dend_74 nseg = 3
    dend_14 nseg = 3
    dend_73 nseg = 7
    dend_72 nseg = 9
    dend_27 nseg = 3
    dend_26 nseg = 7
    dend_24 nseg = 11
    dend_23 nseg = 15
    dend_15 nseg = 3
    dend_2 nseg = 9
    dend_67 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 5
    dend_16 nseg = 3
    dend_13 nseg = 11
    dend_8 nseg = 3
    dend_3 nseg = 3
    dend_66 nseg = 13
    dend_29 nseg = 31
    dend_12 nseg = 3
    dend_6 nseg = 3
    dend_61 nseg = 5
    dend_30 nseg = 3
    dend_11 nseg = 11
    dend_10 nseg = 11
    dend_57 nseg = 3
    dend_42 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_DBC_52e1730bbd_0_0


