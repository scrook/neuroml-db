// Cell: cNAC187_L1_DAC_8c45268d6a_0_0
/*
{
  "id" : "cNAC187_L1_DAC_8c45268d6a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.73016, -10.9301, -1.93856, 3.04713", "-4.24552, -9.88098, -1.74479, 5.31027", "-3.76088, -8.83186, -1.55102, 7.28311", "-3.27625, -7.78275, -1.35725, 9.08311", "-2.79161, -6.73364, -1.16348, 10.3755", "-2.30697, -5.68453, -0.96971, 11.5047", "-1.82233, -4.63542, -0.77594, 12.2657", "-1.33769, -3.58631, -0.582171, 13.0864", "-0.853053, -2.5372, -0.388401, 13.7392", "-0.368414, -1.48809, -0.194632, 14.1497", "0.116224, -0.438978, -8.62676E-4, 14.5144", "0.600863, 0.610133, 0.192907, 14.5298", "1.0855, 1.65924, 0.386676, 14.3362", "1.57014, 2.70835, 0.580446, 13.8818", "2.05478, 3.75747, 0.774215, 13.0966", "2.53942, 4.80658, 0.967984, 12.2255", "3.02406, 5.85569, 1.16175, 10.8334", "3.50869, 6.9048, 1.35552, 9.30377", "3.99333, 7.95391, 1.54929, 7.17224", "4.47797, 9.00302, 1.74306, 4.91345", "4.96261, 10.0521, 1.93683, 2.80753" ]
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "0.0121468, 4.80108, 10.756, 1.25", "0.220774, 5.54218, 10.756, 1.25", "0.610797, 6.6905, 10.756, 1.25", "1.06919, 7.91034, 10.756, 1.4", "1.0957, 7.97159, 10.7623, 1.4", "1.45237, 8.79565, 10.8475, 1.4", "1.47888, 8.8569, 10.8539, 1.4", "1.80864, 9.46609, 10.9442, 1.62", "1.87408, 9.55948, 10.9677, 1.62", "2.8112, 10.6608, 11.4306, 1.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000077288567597
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-6.43785, 2.29308, -4.68402, 1.84", "-6.7337, 2.72157, -5.21537, 1.84", "-7.46613, 3.78236, -6.53082, 1.47", "-7.97082, 4.51333, -7.43727, 1.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000077288567597
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.40215, 7.57508, 0.875979, 3.98", "6.40215, 7.57508, 0.875979, 3.98", "6.80215, 8.01208, 0.875979, 3.98" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000077288567597
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.17785, -11.026, -2.56402, 3.76", "-3.17785, -11.026, -2.56402, 3.76", "-3.67573, -12.573, -3.09289, 3.09", "-4.11907, -13.8839, -3.54211, 3.02", "-4.38925, -14.634, -3.81055, 3.02", "-4.66053, -15.3872, -4.0801, 3.02", "-5.18967, -16.8562, -4.60584, 2.95", "-5.68784, -18.2073, -5.11118, 2.95", "-6.07368, -19.1993, -5.52021, 2.95", "-6.54196, -20.346, -5.98175, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000077288567597
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.96261, 10.0521, 1.93683, 0.973414", "11.2531, 23.6693, 1.93683, 0.973414", "17.5436, 37.2866, 1.93683, 0.973414" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "2.8112, 10.6608, 11.4306, 0.37", "3.08606, 11.2756, 11.2078, 0.37", "3.34906, 11.6894, 11.1675, 0.37", "3.39844, 11.7477, 11.1846, 0.37", "3.92388, 12.2404, 11.4542, 0.37", "4.70881, 12.8328, 11.8593, 0.66", "5.1757, 13.1593, 12.0857, 0.88", "6.23195, 13.8364, 12.5691, 0.88", "7.71271, 14.7032, 13.1895, 0.88", "8.78662, 15.2996, 13.5592, 0.44", "9.9132, 15.8835, 13.9559, 0.29", "10.8169, 16.3453, 14.2987, 0.66", "11.5174, 16.6941, 14.5301, 1.25", "12.2559, 17.0349, 14.6626, 1.55", "13.5578, 17.6363, 14.5996, 1.25" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "2.8112, 10.6608, 11.4306, 1.03", "2.16567, 11.4037, 15.5935, 1.03", "2.15178, 11.4197, 15.6831, 1.03", "1.88451, 11.7272, 17.4067, 1.03", "1.49178, 12.1792, 19.9394, 1.69" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-7.97082, 4.51333, -7.43727, 0.81", "-8.70966, 7.48018, -17.84, 0.81", "-8.87556, 7.96459, -19.4968, 0.81", "-9.15432, 8.68906, -21.8001, 0.59", "-9.29372, 9.04898, -22.8967, 0.59", "-9.30117, 9.06623, -22.9534, 0.59", "-9.44982, 9.39507, -24.0684, 0.59", "-9.71556, 9.91984, -25.598, 0.81", "-9.95867, 10.3911, -27.0696, 0.81", "-10.1861, 10.9938, -29.0314, 1.03", "-10.481, 12.7622, -34.4725, 0.52", "-10.4821, 12.7886, -34.5475, 0.52", "-10.4553, 13.1769, -35.5708, 0.52", "-10.4504, 13.2136, -35.6618, 0.52", "-10.3265, 13.9576, -37.3542, 0.52", "-10.179, 14.6608, -38.6865, 1.4", "-10.0753, 14.9807, -39.192, 1.4", "-9.62963, 16.2024, -41.1033, 0.81", "-9.20362, 17.3538, -42.9137, 0.66", "-8.89142, 18.3523, -44.3614, 0.66", "-8.81579, 18.7362, -44.8405, 0.44", "-8.72254, 19.4292, -45.5642, 0.44", "-8.65117, 20.1648, -46.1769, 0.44", "-8.62182, 21.0528, -46.667, 1.25", "-8.71831, 21.8379, -46.9595, 0.96", "-9.03705, 22.9679, -47.3066, 0.66", "-9.4117, 24.0064, -47.6546, 0.37", "-9.74082, 24.8141, -47.9307, 0.37", "-9.76662, 24.8826, -47.9537, 0.37", "-9.94355, 25.6124, -48.2305, 0.37", "-9.94659, 25.673, -48.261, 0.37", "-9.83906, 26.6499, -48.824, 0.88", "-9.72404, 27.201, -49.1544, 1.25", "-9.55472, 27.8706, -49.585, 1.25", "-9.27399, 29.0443, -50.346, 0.37", "-9.12355, 29.745, -50.8024, 0.37", "-9.042, 30.3511, -51.1828, 0.37", "-9.04236, 30.4099, -51.2169, 0.37", "-9.11354, 30.7174, -51.3895, 0.88", "-9.28262, 31.107, -51.5575, 1.18", "-9.52224, 31.5697, -51.745, 1.18", "-9.54716, 31.6176, -51.7681, 1.18", "-9.61898, 31.7943, -51.8594, 1.18", "-9.90255, 32.7921, -52.3631, 0.37", "-9.977, 33.4664, -52.7253, 0.37", "-9.9553, 34.6288, -53.3747, 0.37", "-9.94699, 34.6875, -53.4065, 0.37", "-9.75678, 35.4834, -53.8355, 0.81", "-9.61707, 35.9164, -54.0553, 0.81", "-9.24979, 36.8014, -54.5143, 0.37", "-9.22258, 36.8553, -54.5465, 0.37", "-8.90391, 37.4215, -55.0122, 0.37", "-8.40415, 38.2939, -55.878, 1.03", "-8.15091, 38.746, -56.3824, 1.47", "-7.77262, 39.5072, -57.2924, 1.47", "-7.32995, 40.3387, -58.4224, 0.74", "-6.40973, 41.7031, -60.5156, 0.52", "-6.38099, 41.7334, -60.5709, 0.52", "-5.74283, 42.2796, -61.7145, 0.81", "-4.83018, 42.9847, -63.3946, 1.03", "-4.08998, 43.551, -64.768, 0.81", "-3.26015, 44.1909, -66.3111, 0.44", "-2.06058, 45.0298, -68.4026, 0.81", "-1.31458, 45.5186, -69.702, 1.03", "-0.21232, 46.1647, -71.5641, 0.52", "0.215649, 46.4202, -72.284, 0.52", "0.58021, 46.7062, -72.9396, 0.74", "1.20459, 47.2387, -74.2844, 0.44", "1.2302, 47.2589, -74.346, 0.44", "1.49472, 47.4226, -74.9483, 0.44", "2.12836, 47.7585, -76.3373, 0.44", "2.51374, 47.9443, -77.2237, 0.44", "3.87343, 48.6407, -80.6738, 0.88", "4.56086, 49.057, -82.6991, 1.33", "4.58473, 49.0711, -82.774, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-7.97082, 4.51333, -7.43727, 1.62", "-10.1608, 5.62315, -14.4153, 1.62", "-10.6034, 5.77874, -15.1979, 1.62", "-11.3704, 5.97685, -15.9353, 1.92", "-11.4256, 5.9906, -15.9769, 1.92", "-12.5055, 6.28154, -16.7776, 1.62", "-13.6163, 6.63587, -17.5815, 1.47", "-14.7791, 6.96588, -17.8973, 1.47", "-15.9095, 7.2591, -18.2795, 1.25", "-16.6569, 7.46674, -18.6089, 1.4", "-17.8545, 7.83852, -19.2281, 1.55", "-18.8248, 8.23178, -19.9474, 1.92" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "6.80215, 8.01208, 0.875979, 1.18", "8.12184, 8.74909, 0.260793, 1.18", "9.11412, 9.23977, -0.273896, 1.11", "10.5773, 9.85684, -1.04622, 1.11", "10.6432, 9.87974, -1.08603, 1.11", "11.9303, 10.3272, -1.86428, 1.25", "13.2751, 10.7949, -2.67747, 1.25", "14.3905, 11.1356, -3.45994, 1.4", "15.2687, 11.3356, -4.12041, 1.4", "16.9058, 11.6017, -5.38401, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "6.80215, 8.01208, 0.875979, 1.47", "6.68159, 9.3986, -0.112221, 1.47", "6.61344, 10.2118, -0.600473, 1.03", "6.49141, 11.6741, -1.39718, 0.74", "6.47935, 11.8042, -1.45714, 0.74", "6.3846, 12.7666, -1.8562, 0.74", "6.36715, 12.9644, -1.92776, 0.74", "6.31028, 13.9069, -2.16542, 0.74", "6.31012, 13.9756, -2.17386, 0.74", "6.46812, 15.0182, -2.22815, 0.74", "6.49467, 15.0919, -2.23657, 0.74", "6.98444, 15.7907, -2.38587, 0.66", "7.20095, 15.9649, -2.47819, 0.66", "7.92353, 16.2309, -2.79872, 1.03", "9.28128, 16.5819, -3.37593, 1.03", "9.75509, 16.6899, -3.56185, 1.4", "9.81932, 16.7066, -3.58565, 1.4", "11.0831, 17.0692, -4.02356, 1.18", "12.2981, 17.5593, -4.36999, 0.44", "13.0838, 18.0908, -4.51875, 0.44", "13.7219, 18.7771, -4.53995, 1.18", "14.0837, 19.2623, -4.51559, 1.18", "14.3749, 19.728, -4.45741, 0.88", "14.7942, 20.4844, -4.28893, 0.37", "15.2854, 21.3857, -4.05858, 0.37", "15.4696, 21.559, -3.98581, 0.37", "15.6856, 21.6289, -3.91916, 0.37", "15.8189, 21.6463, -3.88063, 0.37", "16.9395, 21.741, -3.49387, 0.37", "18.2032, 21.9115, -3.07653, 0.59", "19.0668, 22.078, -2.7785, 0.81", "19.1283, 22.1031, -2.75567, 0.81", "19.5667, 22.5254, -2.60865, 0.81", "19.9999, 23.4795, -2.58649, 0.59", "20.2671, 24.6226, -2.69967, 0.59", "20.2762, 24.6878, -2.71038, 0.59", "20.3409, 25.3702, -2.87728, 0.59", "20.4499, 26.7733, -3.28758, 0.37", "20.5333, 28.0906, -3.73496, 0.81", "20.5846, 28.9477, -4.07148, 0.81", "20.5903, 29.0095, -4.09658, 0.81", "20.7128, 29.7961, -4.4719, 0.81", "20.7263, 29.8551, -4.50295, 0.81", "20.9763, 30.5892, -4.86563, 0.81", "20.9983, 30.6477, -4.89083, 0.81", "21.339, 31.5354, -5.23259, 0.96", "21.7786, 32.6439, -5.61302, 0.74", "22.1618, 33.5213, -5.86983, 0.37", "22.486, 34.2096, -6.09818, 0.29", "22.8449, 34.9225, -6.38426, 0.29", "23.0439, 35.3074, -6.56061, 0.88", "23.3777, 35.9894, -6.89146, 1.18", "23.6241, 36.4999, -7.16161, 1.18", "24.0207, 37.3397, -7.6985, 0.81", "24.4255, 38.2716, -8.36856, 0.52", "24.6493, 38.7793, -8.72748, 0.37", "24.848, 39.2629, -9.02822, 0.37", "24.8791, 39.3507, -9.07051, 0.37", "25.0679, 39.8912, -9.20329, 0.37", "25.0976, 39.9613, -9.19459, 0.37", "25.5109, 40.721, -8.92855, 0.88", "25.8219, 41.1663, -8.7672, 0.88", "25.8673, 41.229, -8.75792, 0.88", "26.2496, 41.8204, -8.88156, 0.29", "26.3489, 41.9915, -8.96027, 0.29", "26.6277, 42.5236, -9.24856, 0.29", "27.0136, 43.2942, -9.67301, 0.74", "27.5543, 44.3773, -10.2389, 1.11", "28.2391, 45.8699, -10.9743, 0.88", "28.6424, 46.8771, -11.4441, 0.29", "28.9328, 47.735, -11.7874, 0.66", "29.1448, 48.5544, -12.0498, 0.37", "29.2893, 49.2613, -12.2245, 0.29", "29.4411, 50.143, -12.2876, 0.29", "29.5065, 50.8108, -12.2019, 0.88", "29.4885, 51.5944, -12.0385, 1.18", "29.4064, 52.0668, -11.9507, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-6.54196, -20.346, -5.98175, 1.4", "-5.93994, -21.3375, -6.1623, 1.4", "-5.54449, -21.9887, -6.2809, 1.18", "-5.5099, -22.0457, -6.29127, 1.18", "-4.7462, -23.3034, -6.52031, 1.18", "-4.11501, -24.3429, -6.70961, 1.33", "-3.77204, -24.9077, -6.81246, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.54196, -20.346, -5.98175, 1.55", "-7.29445, -21.2459, -5.66322, 1.55", "-8.23872, -22.3752, -5.2635, 1.55", "-9.23659, -23.5685, -4.8411, 1.55", "-10.4121, -24.9743, -4.34351, 1.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "17.5436, 37.2866, 1.93683, 0.339406", "23.8342, 50.9038, 1.93683, 0.339406", "30.1247, 64.5211, 1.93683, 0.339406" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "13.5578, 17.6363, 14.5996, 0.52", "14.0372, 18.2219, 13.8774, 0.52", "14.07, 18.2697, 13.8245, 0.52", "14.3654, 18.795, 13.3101, 0.52", "14.3875, 18.8441, 13.2684, 0.52", "14.8566, 20.2703, 12.2069, 0.44", "15.119, 21.3771, 11.4931, 0.37", "15.1261, 21.4452, 11.4582, 0.37", "15.1584, 21.9149, 11.2497, 0.74", "15.186, 22.5, 11.0163, 1.03", "15.243, 23.1147, 10.8183, 1.03", "15.3231, 23.7201, 10.6638, 0.44", "15.3325, 23.7838, 10.6459, 0.44", "15.4281, 24.6165, 10.3983, 0.44", "15.5222, 25.448, 10.1565, 0.88", "15.6404, 26.4762, 9.8611, 1.03", "15.766, 27.4984, 9.58099, 0.29", "15.8352, 28.1679, 9.40767, 0.74", "15.9577, 29.1296, 9.19179, 0.74", "16.1306, 30.2466, 8.92699, 0.37", "16.1549, 30.3563, 8.90316, 0.37", "16.3002, 30.8198, 8.79841, 0.81", "16.3352, 30.9108, 8.76838, 0.81", "16.8122, 31.9303, 8.04607, 1.18", "17.3816, 33.0226, 7.04258, 0.44", "17.8034, 33.7823, 6.26761, 1.03", "17.8279, 33.8261, 6.22099, 1.03", "18.4892, 35.058, 4.89844, 1.03", "19.6536, 37.1994, 2.51532, 0.66", "19.9833, 37.8082, 1.82409, 0.29", "20.5894, 38.8496, 0.647005, 0.29", "20.9155, 39.3876, 0.048729, 0.81", "21.2193, 39.9025, -0.456739, 1.11", "21.7994, 40.9078, -1.22512, 0.37", "22.0674, 41.4935, -1.50446, 0.37", "22.0941, 41.5751, -1.54579, 0.37", "22.1907, 42.0126, -1.75669, 0.96", "22.2973, 42.5808, -2.01754, 1.25", "22.3589, 42.8349, -2.14753, 1.25", "22.5752, 43.5617, -2.52691, 1.25", "23.0233, 44.6578, -3.19766, 0.74", "23.5137, 45.5411, -3.78364, 0.29", "23.549, 45.5888, -3.81877, 0.29", "24.2269, 46.4106, -4.44343, 0.66", "24.4946, 46.7877, -4.67616, 0.29", "24.5273, 46.8423, -4.70113, 0.29", "24.715, 47.3972, -4.80889, 0.29", "24.7264, 47.462, -4.81986, 0.29", "24.8632, 48.4998, -4.98943, 0.29", "25.0172, 49.8714, -5.18545, 0.29", "25.0309, 49.9361, -5.19833, 0.29", "25.4603, 51.3838, -5.54222, 0.74", "25.6752, 51.9243, -5.68924, 1.18", "25.7748, 52.1386, -5.76524, 1.18", "26.2183, 52.9225, -6.1265, 1.18", "27.0428, 54.2597, -6.9125, 0.29", "27.0785, 54.318, -6.95439, 0.29", "27.2998, 54.6679, -7.24037, 0.59", "28.0523, 55.7682, -8.31359, 0.44", "28.4431, 56.3553, -9.00863, 0.44", "28.8025, 56.904, -9.70555, 0.37", "29.377, 57.8015, -10.9014, 0.74", "29.6624, 58.2347, -11.4963, 0.74", "30.8224, 59.8925, -13.8945, 0.29", "31.9508, 61.2664, -16.016, 0.74" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "13.5578, 17.6363, 14.5996, 0.37", "12.7754, 18.9326, 14.5996, 0.37", "12.7419, 18.9918, 14.5996, 0.37", "12.515, 19.4823, 14.5996, 0.52", "12.2841, 20.1978, 14.5371, 0.37", "12.1068, 20.9011, 14.4561, 0.81", "11.9911, 21.4386, 14.3894, 0.81", "11.9689, 21.5785, 14.3689, 0.81", "11.8589, 22.4806, 14.2351, 1.18", "11.6979, 24.3289, 13.9636, 0.29", "11.6663, 24.7625, 13.9017, 0.74", "11.6132, 25.3924, 13.815, 0.37", "11.606, 25.4588, 13.8069, 0.37", "11.4934, 26.3017, 13.722, 0.44", "11.4169, 27.0813, 13.694, 0.96", "11.3854, 27.6541, 13.7207, 1.4", "11.3834, 27.7964, 13.7289, 1.4", "11.3806, 28.5526, 13.8179, 1.4", "11.3692, 28.8231, 13.8597, 1.4", "11.2277, 30.5111, 14.1808, 0.29", "11.2204, 30.5665, 14.1929, 0.29", "11.097, 31.0969, 14.3106, 0.59", "10.4761, 32.7005, 14.6658, 0.52", "10.0814, 33.3027, 14.7964, 0.44", "9.80431, 33.5735, 14.8238, 0.44", "9.74841, 33.6135, 14.821, 0.44", "9.00249, 34.1432, 14.7262, 0.29", "8.48884, 34.5241, 14.6172, 0.66", "7.96458, 34.9676, 14.4379, 0.66", "7.36497, 35.7673, 14.1419, 0.29", "6.96816, 36.5311, 13.824, 0.29", "6.74835, 37.0918, 13.559, 0.88", "6.55873, 37.7681, 13.2185, 1.11", "6.48653, 38.1397, 13.028, 1.11", "6.2419, 39.5012, 12.0571, 0.37", "5.99051, 40.5318, 11.0728, 0.37", "5.87241, 40.8769, 10.6496, 0.96", "5.85722, 40.9166, 10.5956, 0.96", "5.72868, 41.2553, 10.1152, 1.18", "5.17342, 42.9491, 7.68593, 0.59", "4.95899, 43.6421, 6.73621, 0.52", "4.80692, 44.1815, 6.06641, 0.74", "4.66163, 44.7829, 5.39877, 0.96", "4.55064, 45.3529, 4.83599, 0.96", "4.38554, 46.6209, 3.83514, 0.29", "4.3769, 47.4327, 3.41538, 0.29", "4.37924, 47.4933, 3.38659, 0.29", "4.38691, 48.2028, 3.0604, 0.74", "4.35203, 48.6428, 2.84779, 0.74", "4.22066, 49.4016, 2.49888, 0.88", "4.03618, 50.4779, 2.00062, 0.37", "4.02828, 50.5293, 1.97405, 0.37", "3.88555, 51.4536, 1.49498, 0.37", "3.72777, 52.5617, 0.937244, 1.11", "3.66634, 53.1367, 0.651567, 1.11", "3.60411, 54.3633, 0.09202, 0.44", "3.60445, 54.4256, 0.067684, 0.44", "3.73001, 55.2, -0.240689, 0.44", "3.92765, 55.7908, -0.476383, 1.18", "4.21531, 56.3115, -0.687048, 1.18", "4.6915, 56.9266, -0.956506, 1.18", "4.74419, 56.9798, -0.980787, 1.18", "5.87936, 58.0129, -1.5119, 0.44", "5.93038, 58.0521, -1.53632, 0.44", "6.77852, 58.6189, -1.95302, 0.44", "7.54851, 59.0717, -2.337, 0.66", "9.08678, 59.8771, -3.09129, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "1.49178, 12.1792, 19.9394, 0.81", "2.2388, 12.842, 22.4556, 0.81", "2.2608, 12.8615, 22.5297, 0.81", "2.50035, 13.0741, 23.3366, 0.81" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "1.49178, 12.1792, 19.9394, 0.66", "-0.695799, 10.8211, 20.8989, 0.66", "-1.47129, 10.3359, 21.123, 0.52", "-2.08207, 9.94674, 21.3533, 0.59", "-2.14669, 9.90864, 21.3781, 0.59", "-3.16681, 9.30675, 21.769, 0.59", "-4.31122, 8.6315, 22.2075, 0.59", "-5.14295, 8.15612, 22.3949, 0.59", "-6.56983, 7.40685, 22.7812, 0.59", "-7.43005, 6.94456, 23.072, 0.59" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "4.58473, 49.0711, -82.774, 1.03", "5.42433, 49.2796, -84.3233, 1.03", "6.54635, 49.5584, -86.3936, 1.03" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "4.58473, 49.0711, -82.774, 0.37", "6.32041, 46.1934, -83.3366, 0.37", "6.61577, 45.5448, -83.3024, 0.81", "7.18067, 44.1418, -83.114, 0.29", "7.24025, 44.0013, -83.0899, 0.29", "7.75887, 42.8035, -82.8614, 0.29", "8.63645, 40.9051, -82.486, 0.29", "9.58158, 38.8494, -81.7704, 0.29", "9.61249, 38.7938, -81.7477, 0.29", "10.1716, 37.9255, -81.3112, 0.29", "10.2775, 37.759, -81.2301, 0.29", "10.822, 36.8957, -80.8062, 0.29", "10.8778, 36.8195, -80.7642, 0.29", "12.1616, 35.0644, -79.6937, 0.29", "13.2724, 33.4371, -78.6187, 0.29", "14.506, 31.3326, -77.3947, 0.29", "14.5349, 31.2786, -77.366, 0.29", "15.5764, 28.9772, -76.3924, 0.59", "16.3503, 26.5323, -75.7439, 0.29", "16.3659, 26.4655, -75.7336, 0.29", "16.8645, 23.2727, -75.5559, 0.29", "16.8683, 23.1962, -75.5575, 0.29", "16.7554, 20.9325, -76.0, 0.29", "16.2713, 18.7478, -77.0892, 0.29" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-18.8248, 8.23178, -19.9474, 0.96", "-18.2447, 9.335, -22.6201, 0.96", "-17.9123, 9.96704, -24.1514, 0.66", "-17.6321, 10.5, -25.4425, 0.96", "-17.3684, 11.0015, -26.6575, 1.11", "-16.8292, 12.0267, -29.1414, 0.52", "-16.5148, 12.6247, -30.5902, 0.52" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-18.8248, 8.23178, -19.9474, 1.11", "-21.8309, 5.79248, -22.2195, 1.11", "-22.7934, 5.01144, -22.947, 0.96", "-23.6122, 4.34702, -23.5659, 1.33", "-24.2139, 3.85877, -24.0207, 1.55", "-24.7686, 3.40858, -24.44, 1.77", "-25.1817, 3.07343, -24.7522, 1.77" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "16.9058, 11.6017, -5.38401, 0.52", "18.1475, 11.6724, -3.51779, 0.52", "18.185, 11.6791, -3.45825, 0.52", "19.3171, 12.0471, -1.58837, 0.81", "20.1409, 12.5423, -0.069888, 0.81", "20.8237, 13.1489, 1.28905, 1.18", "20.8486, 13.181, 1.34505, 1.18", "21.1893, 13.9342, 2.30104, 0.96", "21.3855, 14.5925, 2.9923, 0.52", "21.6084, 16.0604, 4.22486, 0.52", "21.639, 16.8656, 4.79587, 0.74", "21.5583, 18.3946, 5.77328, 0.74", "21.5515, 18.4438, 5.80263, 0.74", "21.4387, 18.9376, 6.07039, 1.25", "21.4226, 18.9963, 6.09906, 1.25", "21.0782, 20.1125, 6.58427, 0.88", "20.6318, 21.6049, 7.17611, 0.29", "20.2857, 22.8001, 7.62308, 0.29", "20.2685, 22.8612, 7.64688, 0.29", "19.9714, 23.8302, 8.18102, 0.29", "19.956, 23.876, 8.21312, 0.29", "19.7381, 24.4396, 8.70898, 0.29", "19.4162, 25.171, 9.44326, 1.18", "19.2276, 25.5516, 9.89097, 1.18", "18.4951, 26.8528, 11.4945, 0.52", "18.4466, 26.9325, 11.5955, 0.52", "18.199, 27.4077, 12.099, 0.52", "18.1472, 27.5175, 12.1988, 0.52", "17.9469, 28.0403, 12.4825, 0.81", "17.9151, 28.1388, 12.5175, 0.81", "17.676, 28.9092, 12.6398, 1.03", "17.3082, 30.0201, 12.8169, 0.29", "17.2839, 30.0917, 12.8283, 0.29", "16.8954, 31.3009, 13.0971, 0.29", "16.8754, 31.3634, 13.1139, 0.29", "16.6548, 32.025, 13.3088, 0.96", "16.6316, 32.0852, 13.3274, 0.96", "16.4906, 32.519, 13.4525, 0.96", "16.0941, 33.9372, 13.8786, 0.37", "16.0765, 34.0327, 13.9082, 0.37", "16.0116, 34.4659, 14.0217, 0.37", "15.9092, 35.2814, 14.207, 0.66", "15.8552, 35.7982, 14.2947, 0.66", "15.8475, 35.8741, 14.3023, 0.66", "15.742, 36.6172, 14.2763, 0.59", "15.6294, 37.6566, 14.2607, 0.88", "15.6238, 37.7324, 14.2603, 0.88", "15.6177, 38.4258, 14.351, 0.96", "15.6343, 39.0436, 14.5669, 0.96", "15.7117, 40.1669, 15.1531, 0.96", "15.9311, 41.1605, 15.9094, 0.44", "15.9518, 41.2073, 15.9558, 0.44", "16.7742, 42.4894, 17.4481, 0.88", "17.4835, 43.2816, 18.5633, 0.81", "17.5483, 43.3361, 18.6604, 0.81", "18.329, 43.8657, 19.7996, 0.29", "18.6922, 44.0898, 20.3576, 0.44", "18.7337, 44.1165, 20.4208, 0.44", "19.4776, 44.6048, 21.5193, 0.44", "20.3267, 45.2306, 22.9401, 0.81", "20.3532, 45.252, 22.989, 0.81", "21.0415, 45.8493, 24.3128, 0.96", "21.4372, 46.185, 24.9753, 0.96", "21.4733, 46.214, 25.027, 0.96", "22.6934, 47.169, 26.487, 0.81", "23.1551, 47.562, 26.9558, 0.37", "23.7292, 48.0547, 27.4593, 0.37", "24.6039, 48.8038, 28.1115, 0.37", "25.9271, 49.9569, 29.0285, 1.03", "26.3174, 50.3109, 29.268, 1.18", "26.9501, 50.9501, 29.5748, 0.74", "27.6079, 51.6979, 29.9037, 0.29", "27.6463, 51.7509, 29.9215, 0.29", "28.0328, 52.4341, 30.0388, 0.29", "28.0618, 52.4953, 30.0404, 0.29", "28.3901, 53.285, 30.003, 0.29", "28.6589, 54.0023, 29.9333, 0.96", "29.0372, 55.0913, 29.7903, 0.52", "29.5276, 56.4807, 29.5733, 0.74", "29.5525, 56.5519, 29.5604, 0.74", "30.0793, 58.0812, 29.3105, 0.52", "30.1037, 58.1528, 29.2995, 0.52", "30.3701, 58.9988, 29.1979, 0.74", "30.3878, 59.0636, 29.1915, 0.74", "30.558, 59.8275, 29.1221, 0.74", "30.7885, 60.7095, 29.0594, 0.44", "30.8206, 60.8389, 29.0629, 0.44", "31.1212, 62.1021, 29.1324, 0.88", "31.3822, 63.1587, 29.2164, 0.59", "31.4428, 63.3597, 29.2356, 0.59", "31.9576, 64.5195, 29.3656, 0.88", "32.6537, 65.6227, 29.3623, 0.29", "32.7162, 65.6949, 29.3513, 0.29", "33.5641, 66.4414, 29.1338, 0.29", "33.8258, 66.6613, 29.0158, 0.29", "34.4736, 67.2676, 28.5123, 0.29", "35.2753, 68.2809, 27.4792, 1.03", "35.6722, 69.0173, 26.7239, 0.59", "35.8415, 69.7, 26.1286, 0.59", "35.9173, 71.1744, 25.0309, 0.59", "35.8306, 72.5616, 24.228, 0.44", "35.6135, 74.3954, 23.4284, 0.29", "35.2504, 76.311, 22.7471, 0.29", "34.8017, 78.1457, 22.2121, 0.29", "34.5474, 79.0523, 22.0176, 0.29", "34.176, 80.3954, 21.9445, 1.55", "33.9018, 81.5946, 22.0479, 2.21", "35.044, 90.0293, 26.5049, 2.21" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "16.9058, 11.6017, -5.38401, 1.33", "18.3892, 11.7858, -5.77353, 1.33", "18.4506, 11.8035, -5.80327, 1.33", "20.2554, 12.3228, -6.67746, 1.33", "22.6546, 13.013, -7.83951, 0.66", "24.7905, 13.6276, -8.87406, 1.18", "27.4665, 14.3975, -10.1701, 1.47", "28.177, 14.7345, -10.6189, 1.47" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "29.4064, 52.0668, -11.9507, 0.29", "30.579, 53.2515, -12.4085, 0.29", "31.2647, 53.9854, -12.6733, 0.44", "31.9959, 54.8276, -12.9511, 0.37", "32.0601, 54.9048, -12.9753, 0.37", "32.8296, 55.9029, -13.2688, 0.37", "32.8612, 55.9496, -13.2824, 0.37", "33.5615, 57.2233, -13.5959, 0.81", "33.8157, 57.8567, -13.7166, 0.81", "33.8367, 57.9281, -13.7342, 0.81", "33.9753, 58.5162, -13.8929, 0.81", "34.1546, 59.4594, -14.1492, 0.29", "34.3319, 60.4156, -14.3995, 0.29", "34.4754, 61.228, -14.5745, 0.96", "34.7055, 62.6578, -14.8309, 0.29", "34.7304, 62.7974, -14.8506, 0.29", "35.0133, 63.9516, -14.9092, 0.29", "35.3377, 64.8095, -14.8705, 0.59", "36.0145, 66.0156, -14.7219, 0.59", "36.5063, 66.7002, -14.5856, 0.59", "37.1491, 67.4042, -14.3978, 0.37", "38.4363, 68.4916, -14.0945, 0.22", "39.9055, 69.45, -13.8059, 0.22", "41.2256, 70.1492, -13.6024, 0.74", "41.2986, 70.1808, -13.5945, 0.74", "42.2233, 70.5323, -13.5262, 0.29", "43.2631, 70.9084, -13.552, 0.29", "43.4022, 70.961, -13.5739, 0.29", "44.2599, 71.2968, -13.7606, 0.29", "45.139, 71.659, -13.9831, 0.29", "45.3336, 71.7433, -14.0354, 0.29", "46.5225, 72.3093, -14.3916, 0.81", "47.3776, 72.7363, -14.7047, 1.11", "47.5648, 72.8206, -14.7794, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "29.4064, 52.0668, -11.9507, 0.44", "28.5577, 53.7642, -11.7128, 0.44", "28.0513, 54.777, -11.5709, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.77204, -24.9077, -6.81246, 0.66", "-2.21945, -25.059, -7.33065, 0.66", "-1.0119, -25.25, -7.71685, 0.88", "-0.936721, -25.2663, -7.73819, 0.88", "-0.131754, -25.549, -7.99057, 0.88", "0.0550589, -25.6287, -8.05277, 0.88", "0.622936, -25.8717, -8.27319, 0.88", "1.65637, -26.3561, -8.83608, 0.59", "2.40669, -26.6588, -9.32961, 0.59", "3.5526, -27.1111, -10.2007, 0.44", "3.7536, -27.2011, -10.3757, 0.52", "4.61603, -27.6396, -11.1588, 0.96", "5.68698, -28.2646, -12.1524, 0.88", "6.39013, -28.675, -12.8425, 0.52", "7.17024, -29.1177, -13.6304, 0.52", "8.04137, -29.5852, -14.4523, 0.96", "8.88517, -30.1265, -15.1761, 1.25", "9.4014, -30.5794, -15.524, 1.25" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.77204, -24.9077, -6.81246, 0.52", "-2.93551, -25.8555, -6.69355, 0.52", "-2.2726, -26.8164, -6.70783, 0.52", "-1.56206, -27.8463, -6.72314, 0.52", "-1.14328, -28.4533, -6.73217, 1.18", "-0.546052, -29.319, -6.74504, 1.33", "0.0617779, -30.2, -6.75814, 1.33", "0.833397, -31.6317, -6.76374, 0.96" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-10.4121, -24.9743, -4.34351, 0.81", "-11.5966, -25.6617, -3.98918, 0.81", "-13.5749, -26.642, -3.32997, 0.81", "-14.4672, -27.0572, -3.02891, 0.96", "-16.4352, -27.8882, -2.27234, 1.25", "-18.0687, -28.516, -1.60955, 1.03", "-18.2006, -28.564, -1.5552, 1.03", "-19.2973, -28.8865, -1.0214, 1.03", "-19.3692, -28.9056, -0.986417, 1.03", "-20.5829, -29.2942, -0.541036, 0.81", "-21.6354, -29.7751, -0.423611, 0.66", "-21.7684, -29.8417, -0.425465, 0.66", "-23.0305, -30.5258, -0.496421, 0.66", "-23.8483, -31.0342, -0.617267, 0.88", "-25.0371, -31.8543, -0.938026, 1.25", "-25.9854, -32.654, -1.46242, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-10.4121, -24.9743, -4.34351, 1.03", "-9.52772, -25.6967, -2.61776, 1.03", "-8.9325, -26.1829, -1.45623, 1.03", "-8.15732, -26.8161, 0.0564635, 1.62" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "2.50035, 13.0741, 23.3366, 0.37", "3.36345, 13.3259, 23.4007, 0.37", "4.93766, 13.8337, 23.4645, 0.59", "6.24821, 14.2739, 23.4905, 0.74", "6.31279, 14.2996, 23.4907, 0.74", "7.3911, 14.8259, 23.4812, 0.74", "7.45186, 14.8589, 23.4802, 0.74", "7.90184, 15.2575, 23.5097, 0.37", "8.0331, 15.4365, 23.526, 0.37", "8.61856, 16.4285, 23.6233, 0.37", "9.00425, 17.0873, 23.729, 0.59", "9.03615, 17.1437, 23.7479, 0.59", "9.881, 18.6868, 24.6044, 0.29", "9.9099, 18.7383, 24.6394, 0.29", "10.2646, 19.272, 25.0558, 1.03", "10.7336, 19.8372, 25.5627, 0.44", "11.7027, 20.745, 26.5631, 0.37", "12.8072, 21.6236, 27.6741, 0.37", "13.5656, 22.1435, 28.4294, 0.74", "14.2562, 22.633, 29.1396, 1.03", "14.8211, 23.0712, 29.7785, 0.66", "15.8224, 23.9291, 30.9712, 0.59", "15.8858, 23.9839, 31.0552, 0.59", "16.4406, 24.3382, 32.0037, 0.37", "16.8957, 24.5765, 32.9266, 0.81", "17.4878, 24.8609, 34.2345, 1.18", "17.5123, 24.869, 34.2886, 1.18", "18.5391, 25.0873, 36.4798, 1.18", "20.5099, 25.2503, 40.2362, 0.96", "21.678, 25.2, 42.272, 0.59", "21.7155, 25.195, 42.3318, 0.52", "22.6091, 24.9936, 43.5481, 0.44", "22.663, 24.9793, 43.6053, 0.44", "24.0808, 24.5356, 44.6748, 0.29", "24.1676, 24.5092, 44.7159, 0.29", "24.9795, 24.2415, 45.0065, 0.96", "26.295, 23.8173, 45.4348, 0.52", "29.0083, 22.9723, 46.2088, 0.29", "29.073, 22.9533, 46.2267, 0.29", "30.3444, 22.611, 46.5605, 0.44", "32.2157, 22.2625, 46.8887, 0.29", "32.2855, 22.2603, 46.8939, 0.29", "33.2198, 22.622, 46.8017, 0.74", "33.9545, 23.4732, 46.5808, 0.59", "34.2625, 24.095, 46.4788, 0.59", "34.9221, 26.4825, 46.2222, 0.29", "35.2753, 28.609, 46.0496, 0.29", "35.5703, 31.3089, 45.841, 0.44", "35.6137, 33.2222, 45.7066, 1.11", "35.4939, 34.9102, 45.6123, 0.81", "35.4671, 35.0697, 45.6136, 0.81", "35.0261, 36.2443, 45.8926, 0.59", "42.1738, 41.6883, 49.9013, 0.59", "48.2616, 48.2631, 53.7797, 0.59", "55.3182, 54.447, 56.5782, 0.59", "62.4949, 60.9804, 57.6727, 0.59", "68.9369, 68.0256, 59.5449, 0.59", "74.7684, 75.7281, 60.0488, 0.59", "80.4114, 83.2806, 62.2749, 0.59" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "2.50035, 13.0741, 23.3366, 0.29", "1.15473, 14.2252, 22.7478, 0.29", "0.812043, 14.5108, 22.6504, 0.66", "-0.0156871, 15.1103, 22.7979, 0.37", "-0.601577, 15.3992, 23.517, 0.29", "-1.23864, 15.7217, 24.3788, 0.59", "-1.48472, 15.8401, 24.7013, 0.88", "-2.13554, 16.1079, 25.5737, 0.88", "-3.31834, 16.5585, 27.1722, 1.18", "-5.57242, 17.4144, 30.1639, 0.81", "-6.00622, 17.5874, 30.703, 0.66", "-6.46895, 17.7966, 31.2384, 0.66", "-7.07297, 18.1134, 31.8094, 0.59", "-7.46485, 18.3726, 32.0255, 0.29", "-8.46425, 19.2206, 32.2236, 0.29", "-9.33185, 20.0807, 32.2141, 0.96", "-9.69102, 20.4439, 32.2752, 1.33", "-10.1119, 20.8688, 32.4267, 1.62", "-10.8038, 21.5364, 32.7694, 1.4", "-11.7305, 22.3957, 33.2945, 0.52", "-12.9298, 23.4451, 34.0135, 0.29", "-14.2888, 24.5917, 34.8574, 0.66", "-15.2602, 25.3892, 35.4247, 0.66", "-16.0927, 26.0619, 35.882, 1.25", "-16.7569, 26.6084, 36.1906, 1.25", "-17.3794, 27.128, 36.338, 1.25", "-17.4978, 27.2377, 36.3318, 1.25", "-17.9959, 27.8366, 36.0949, 1.18", "-18.0393, 27.909, 36.0664, 1.18", "-18.4534, 28.7747, 36.0151, 1.11", "-18.7634, 29.4012, 36.2219, 0.52", "-18.7896, 29.4531, 36.2571, 0.52", "-19.2497, 30.3174, 36.9879, 0.52", "-19.6866, 31.0091, 37.7013, 0.81", "-20.4587, 32.0774, 38.9407, 0.66", "-20.782, 32.4663, 39.435, 0.66", "-21.4319, 33.1596, 40.3396, 1.25", "-21.6466, 33.3543, 40.5813, 1.55", "-22.6579, 34.0432, 41.5008, 0.59", "-22.7061, 34.0732, 41.5417, 0.59", "-23.2006, 34.4035, 41.9373, 0.59", "-23.6939, 34.7581, 42.3405, 0.88", "-24.2953, 35.2227, 42.8018, 0.88", "-25.464, 36.2766, 43.7355, 0.44", "-26.4997, 37.3567, 44.5996, 0.52", "-26.9284, 37.8998, 45.0019, 0.81", "-27.2347, 38.3903, 45.4172, 0.81", "-27.5401, 39.031, 45.9848, 1.25", "-27.7264, 39.6309, 46.4502, 1.62", "-27.7438, 39.694, 46.4637, 1.62", "-26.9802, 38.8922, 47.1247, 1.62", "-25.3665, 37.7517, 48.6686, 0.52", "-24.0287, 36.8798, 49.9697, 0.37", "-28.7812, 42.6296, 56.3558, 0.37", "-33.5337, 48.4756, 62.6444, 0.37", "-40.4493, 53.0906, 67.9899, 0.37", "-48.1732, 57.0032, 72.8251, 0.37", "-55.3107, 61.9913, 77.4605, 0.37", "-61.7373, 67.8607, 81.9913, 0.37", "-66.9219, 74.5379, 86.8613, 0.37", "-71.6954, 80.7044, 92.7842, 0.37" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-7.43005, 6.94456, 23.072, 0.44", "-8.83352, 6.55623, 22.1774, 0.44", "-10.5014, 6.09474, 21.1144, 0.44", "-12.019, 5.67483, 20.1471, 0.44", "-13.3955, 5.29397, 19.2698, 0.37", "-21.7997, 4.51569, 13.9127, 0.37", "-29.4931, 4.22663, 7.53152, 0.37" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-7.43005, 6.94456, 23.072, 0.29", "-7.88002, 7.68678, 23.7233, 0.29", "-8.05821, 7.9807, 23.9812, 0.29", "-8.09057, 8.03408, 24.0281, 0.29", "-8.85385, 9.2931, 25.1329, 0.29", "-9.80333, 10.8592, 26.5073, 0.29", "-15.0242, 17.8154, 30.8806, 0.29", "-19.4349, 24.8425, 35.9631, 0.29", "-23.4514, 31.1036, 42.3217, 0.29" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "6.54635, 49.5584, -86.3936, 0.29", "5.3969, 51.8341, -90.1851, 0.29", "5.16778, 52.4103, -90.9983, 0.29", "4.86337, 53.469, -92.2359, 0.29", "4.84677, 53.5343, -92.3052, 0.29", "4.75708, 53.9192, -92.6808, 0.29", "4.74122, 53.9873, -92.7473, 0.29", "4.63287, 54.9945, -93.3752, 0.29", "4.52613, 56.4696, -94.3522, 0.59", "4.44589, 57.2276, -94.856, 0.96", "4.39257, 57.6312, -95.1359, 0.96" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "6.54635, 49.5584, -86.3936, 0.96", "9.03001, 50.926, -91.5226, 0.96", "9.4476, 51.1648, -92.2457, 1.62", "10.9179, 52.0343, -94.5725, 0.37", "11.0317, 52.1073, -94.7456, 0.37", "11.5381, 52.4536, -95.4752, 0.37", "13.3097, 53.7181, -97.9733, 0.66", "14.2669, 54.3842, -99.0802, 0.96", "15.4075, 55.2308, -100.57, 0.29", "15.7771, 55.5444, -101.107, 0.29", "16.2003, 55.9492, -101.815, 0.96", "17.4476, 57.3079, -104.173, 0.29", "18.1207, 58.1227, -105.593, 1.18", "18.8128, 58.9873, -107.233, 0.59", "18.8369, 59.0207, -107.288, 0.59", "19.2506, 59.6326, -108.2, 0.29", "19.5201, 60.0867, -108.798, 0.29", "19.9235, 60.8863, -109.626, 0.96", "20.4226, 61.9685, -110.536, 0.37", "21.0339, 63.6776, -111.804, 0.22", "21.1448, 64.2188, -112.222, 0.22", "21.1539, 65.3167, -113.163, 0.29", "21.129, 65.4193, -113.268, 0.29", "20.9237, 65.9841, -113.871, 0.29", "20.237, 67.3035, -115.436, 0.29", "19.4503, 68.3789, -116.895, 0.44", "18.6736, 69.3161, -118.218, 0.44", "17.6577, 70.4328, -119.778, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-16.5148, 12.6247, -30.5902, 0.96", "-16.6949, 14.7407, -37.0775, 0.96", "-16.6965, 14.7961, -37.2171, 0.96", "-16.6707, 15.234, -37.9717, 0.96", "-16.6679, 15.2773, -38.0248, 0.96", "-16.637, 16.2656, -38.947, 0.81", "-16.6365, 16.3531, -39.0126, 0.81", "-16.6509, 16.9277, -39.1982, 0.81", "-16.8037, 18.3357, -39.7781, 0.81", "-17.0138, 19.4178, -40.3159, 0.96", "-17.2611, 20.2294, -40.8053, 1.11", "-17.5249, 20.8237, -41.2426, 1.11", "-18.3026, 22.1356, -42.3276, 0.88", "-18.7248, 22.6532, -42.844, 0.66", "-18.8125, 22.7366, -42.942, 0.66", "-19.4066, 23.2524, -43.5711, 0.66", "-19.4481, 23.2868, -43.6143, 0.66", "-20.3703, 24.0136, -44.4453, 1.18", "-21.2055, 24.6669, -45.0206, 0.29", "-21.3584, 24.7813, -45.1235, 0.29", "-21.9137, 25.145, -45.4198, 0.29", "-21.9729, 25.1761, -45.4404, 0.29", "-22.7355, 25.4835, -45.5483, 0.66", "-23.3579, 25.6639, -45.5228, 1.03", "-24.155, 25.8733, -45.4055, 1.03", "-25.0584, 26.0999, -45.2407, 0.74", "-26.0598, 26.3901, -45.0162, 0.44", "-27.2898, 26.8437, -44.6819, 0.29", "-27.3745, 26.8843, -44.6536, 0.29", "-27.8089, 27.1252, -44.4561, 0.29", "-27.8632, 27.1561, -44.4263, 0.29", "-28.6213, 27.5644, -44.0397, 0.29", "-28.9743, 27.755, -43.8846, 0.74", "-29.5413, 28.1013, -43.7205, 0.88", "-30.4297, 28.7046, -43.4962, 0.74", "-30.8356, 28.9836, -43.4119, 0.74", "-31.4312, 29.3947, -43.3158, 0.29", "-32.0956, 29.8524, -43.2321, 0.29", "-33.0315, 30.5961, -43.1515, 0.29", "-33.6366, 31.1533, -43.1246, 1.18", "-34.2235, 31.7883, -43.1305, 0.37", "-34.8893, 32.6144, -43.1279, 0.37", "-34.9284, 32.6703, -43.127, 0.37", "-35.333, 33.2808, -43.1061, 0.37", "-35.3665, 33.3391, -43.1027, 0.37", "-35.6008, 33.9243, -43.041, 0.88", "-35.7177, 34.3333, -42.9856, 1.11", "-35.8704, 34.7916, -42.9151, 1.11", "-35.9027, 34.8609, -42.9036, 1.11", "-36.2194, 35.3812, -42.7492, 0.96", "-36.6531, 35.987, -42.5106, 0.52", "-37.5657, 37.0974, -41.9765, 0.52", "-38.0861, 37.7035, -41.66, 0.52", "-38.4629, 38.1363, -41.4331, 0.52", "-39.2611, 39.0558, -40.9635, 0.29", "-39.3982, 39.2067, -40.8944, 0.29", "-39.6777, 39.5144, -40.7856, 0.29", "-40.118, 40.0625, -40.6291, 0.29", "-40.5598, 40.6973, -40.5009, 0.29", "-41.1365, 41.5858, -40.3985, 0.29", "-41.59, 42.2987, -40.467, 0.81", "-42.0623, 42.9904, -40.634, 0.81", "-42.3449, 43.3853, -40.7741, 1.11", "-42.466, 43.5372, -40.8651, 1.11", "-42.8946, 44.087, -41.3258, 1.11", "-43.7727, 45.2494, -42.4973, 0.29", "-44.3965, 46.144, -43.4674, 0.29", "-44.4241, 46.1851, -43.515, 0.29", "-45.2472, 47.5748, -45.0716, 0.66", "-45.647, 48.3975, -45.9401, 0.66", "-45.6645, 48.445, -45.987, 0.66", "-45.7719, 48.912, -46.3554, 0.66", "-45.7787, 48.9674, -46.3935, 0.66", "-45.948, 50.2309, -47.0919, 0.37", "-46.131, 51.1819, -47.4926, 0.37", "-46.1554, 51.2398, -47.5168, 0.37", "-46.3911, 51.6443, -47.7055, 0.66", "-46.6333, 51.985, -47.8695, 0.66", "-47.0309, 52.4656, -48.1022, 0.66", "-47.9349, 53.3559, -48.5481, 0.29", "-48.3455, 53.7694, -48.7151, 0.29", "-48.44, 53.8692, -48.7652, 0.29", "-48.9596, 54.4602, -49.1084, 0.29", "-49.1536, 54.6962, -49.2497, 0.59", "-49.2338, 54.7899, -49.3293, 0.59", "-49.4806, 55.0524, -49.6027, 0.59", "-50.1434, 55.6623, -50.359, 0.15", "-50.2001, 55.7179, -50.4272, 0.15", "-50.6006, 56.1096, -50.8812, 0.15", "-51.4277, 56.9625, -51.7773, 0.44", "-51.485, 57.0197, -51.8311, 0.44", "-51.9799, 57.4702, -52.2245, 0.29", "-52.9542, 58.286, -52.8424, 0.88", "-53.5894, 58.7684, -53.1893, 0.81", "-54.329, 59.2752, -53.5087, 0.44", "-55.073, 59.7106, -53.704, 0.44", "-55.7612, 60.0608, -53.8505, 0.44", "-56.0554, 60.1899, -53.8935, 0.88", "-56.4809, 60.3501, -53.9486, 1.25", "-57.1052, 60.5878, -54.0495, 1.25", "-58.151, 60.9844, -54.3311, 0.29", "-58.2121, 61.0075, -54.3552, 0.29", "-59.0027, 61.3152, -54.7334, 0.29", "-59.9221, 61.6547, -55.234, 0.88", "-60.1605, 61.7459, -55.3813, 1.03", "-61.195, 62.1756, -56.1502, 0.29", "-61.6827, 62.3871, -56.5551, 0.29", "-61.8636, 62.4671, -56.7148, 0.29", "-62.0067, 62.5286, -56.8701, 0.29", "-62.3851, 62.7114, -57.2818, 0.29", "-63.2564, 63.1697, -58.27, 0.59", "-63.4402, 63.2871, -58.4822, 1.03", "-64.1373, 63.8156, -59.4059, 1.03", "-65.0984, 64.6318, -60.7695, 0.29", "-65.4896, 65.0452, -61.4322, 0.29", "-65.5198, 65.085, -61.4933, 0.29", "-65.7528, 65.5943, -62.1426, 0.29", "-65.978, 66.4608, -63.0824, 0.66", "-65.9918, 66.7902, -63.3546, 0.66", "-65.9154, 67.9767, -64.233, 0.29", "-65.9116, 68.0296, -64.2753, 0.29", "-65.9155, 68.6393, -64.787, 0.29", "-65.9196, 68.6914, -64.8314, 0.29", "-66.0241, 69.2916, -65.2896, 0.29", "-66.3442, 70.3351, -66.0861, 0.29", "-66.5286, 70.7708, -66.4096, 0.29", "-66.9674, 71.7667, -67.1512, 1.11", "-67.0948, 72.0361, -67.3541, 1.62", "-67.2552, 72.4014, -67.6033, 1.62", "-67.6868, 73.4495, -68.2401, 0.37", "-67.7257, 73.5732, -68.2986, 0.37", "-67.8453, 74.1269, -68.5312, 0.37", "-67.8686, 74.2608, -68.5782, 0.37", "-67.9631, 74.966, -68.8383, 0.37", "-67.9699, 75.0376, -68.8645, 0.37", "-68.0405, 75.9526, -69.1533, 1.11", "-68.0854, 76.603, -69.355, 1.47", "-68.0947, 76.8105, -69.4211, 1.47", "-68.0303, 77.8742, -69.7959, 0.29", "-68.0164, 77.9606, -69.8324, 0.29", "-67.8263, 78.7477, -70.2607, 0.29", "-67.7327, 79.0794, -70.4884, 0.59", "-67.6518, 79.3571, -70.7041, 0.59", "-67.2964, 80.6254, -71.701, 0.29", "-66.9475, 81.8895, -72.7106, 0.74", "-66.5927, 83.3844, -73.9211, 0.29", "-66.3726, 84.4089, -74.7896, 0.29", "-66.3539, 84.5189, -74.8837, 0.29", "-66.2451, 85.4019, -75.6062, 0.29", "-66.241, 85.4554, -75.6476, 0.29", "-66.1911, 86.5157, -76.3721, 0.88", "-66.1793, 87.465, -76.9003, 0.29", "-66.1796, 87.5259, -76.9301, 0.29", "-66.2252, 88.4143, -77.367, 0.29", "-66.2313, 88.4827, -77.4027, 0.29", "-66.3353, 89.3173, -77.8174, 0.74", "-66.357, 89.4611, -77.8808, 0.74", "-66.3733, 89.8886, -78.0295, 0.74", "-66.3466, 90.3955, -78.1929, 0.74", "-65.5131, 91.9058, -78.7728, 0.29", "-65.472, 91.9562, -78.7926, 0.29", "-65.1991, 92.2567, -78.9097, 0.29", "-63.7516, 93.7263, -79.4904, 0.29", "-63.7029, 93.7709, -79.5084, 0.29", "-59.8151, 96.9371, -80.7931, 0.29", "-59.1369, 97.419, -80.984, 0.37" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-16.5148, 12.6247, -30.5902, 0.66", "-17.4023, 13.9474, -29.5228, 0.66", "-18.1543, 15.1006, -28.5823, 0.29", "-18.3646, 15.4218, -28.3324, 0.29", "-19.1131, 16.6054, -27.2659, 0.29", "-19.1363, 16.6434, -27.2277, 0.29", "-19.9567, 18.0582, -25.7748, 0.66", "-20.0282, 18.1885, -25.6289, 0.66", "-20.3309, 18.7428, -25.0268, 0.66", "-21.2455, 20.1808, -23.2822, 0.81", "-21.65, 20.7426, -22.5361, 0.96", "-21.9063, 21.104, -22.0589, 0.29", "-22.2576, 21.604, -21.3521, 0.29", "-22.5898, 22.0749, -20.6757, 0.66", "-23.3165, 23.0883, -19.1989, 0.37", "-23.7774, 23.6996, -18.361, 0.37", "-24.5267, 24.6855, -16.9761, 0.66", "-25.2229, 25.6264, -15.5511, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-25.1817, 3.07343, -24.7522, 1.11", "-25.9881, 3.42613, -24.0665, 1.11", "-26.9537, 3.88937, -23.2336, 1.11", "-28.46, 4.65715, -21.9229, 0.74", "-29.2334, 5.10612, -21.2486, 0.37", "-30.0237, 5.64835, -20.5536, 0.37", "-30.1175, 5.72718, -20.4704, 0.37", "-30.3859, 6.05454, -20.2041, 0.37", "-30.4143, 6.10846, -20.1746, 0.37", "-30.7456, 6.77667, -19.9768, 0.96", "-31.0614, 7.40179, -19.8125, 1.18", "-31.5095, 8.08462, -19.5936, 0.66", "-31.7669, 8.40072, -19.4584, 0.66", "-32.6539, 9.33094, -18.9854, 0.59", "-33.4313, 10.0666, -18.5766, 1.33", "-33.4882, 10.1131, -18.5473, 1.33", "-34.515, 10.8652, -18.0354, 0.74", "-35.0966, 11.2963, -17.7609, 0.52", "-35.4297, 11.6113, -17.614, 0.96", "-35.6943, 11.9877, -17.4836, 0.81", "-35.7684, 12.1182, -17.4419, 0.81", "-35.8932, 12.3244, -17.3689, 0.81", "-36.3248, 12.9834, -17.1342, 0.52", "-36.9156, 13.726, -16.8091, 0.52", "-37.4682, 14.3999, -16.4856, 0.88", "-37.9318, 14.9475, -16.1995, 0.88", "-38.6548, 15.7707, -15.7368, 1.18", "-39.0001, 16.1286, -15.5087, 1.4", "-39.5538, 16.5735, -15.1443, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-25.1817, 3.07343, -24.7522, 0.66", "-26.3193, 2.54301, -25.9172, 0.66", "-27.1004, 2.33156, -26.5676, 1.03", "-28.3346, 2.21425, -27.4066, 0.74", "-29.1681, 2.19673, -27.9164, 0.52", "-29.2378, 2.19832, -27.9555, 0.52", "-30.1707, 2.23961, -28.4261, 0.52", "-31.0926, 2.39668, -28.7572, 0.66", "-32.1645, 2.63405, -29.0082, 0.59", "-32.2323, 2.64983, -29.0135, 0.59", "-32.5374, 2.70409, -29.0499, 0.96", "-33.3983, 2.82472, -29.1921, 1.11", "-33.9765, 2.87923, -29.3061, 1.11", "-35.1464, 2.92855, -29.6269, 0.66", "-36.863, 2.90728, -30.2077, 0.66", "-38.7874, 2.82744, -30.9392, 0.66", "-39.3404, 2.81339, -31.1674, 1.33", "-39.9011, 2.81375, -31.3813, 1.55", "-41.3306, 2.82478, -31.8742, 1.18", "-42.3227, 2.82652, -32.1651, 0.29", "-42.9678, 2.82639, -32.259, 0.29", "-44.2198, 2.84789, -32.1917, 0.29", "-46.0177, 2.84811, -31.9619, 0.29", "-46.5128, 2.84425, -31.8571, 0.29", "-47.0776, 2.83712, -31.7148, 1.03", "-47.7659, 2.80988, -31.5906, 1.03", "-48.7289, 2.74331, -31.5582, 1.03", "-48.7989, 2.73751, -31.5661, 1.03", "-49.3561, 2.71719, -31.7307, 1.03", "-50.4082, 2.78258, -32.0957, 0.74", "-51.2315, 2.91747, -32.4127, 0.29", "-51.9529, 3.09694, -32.7278, 0.59", "-52.942, 3.38672, -33.1847, 0.29", "-53.9567, 3.68626, -33.6248, 0.29", "-54.6667, 3.89599, -33.92, 0.96", "-55.1413, 4.02964, -34.0966, 1.33", "-55.7934, 4.19579, -34.3268, 0.81", "-56.3421, 4.30743, -34.4727, 0.29", "-57.6267, 4.57601, -34.6272, 0.29", "-58.2196, 4.71173, -34.585, 1.25", "-58.4981, 4.77385, -34.5364, 1.47", "-59.0758, 4.90496, -34.4051, 1.03", "-59.8377, 5.07092, -34.191, 0.29", "-61.1207, 5.29345, -33.8294, 0.29", "-61.9441, 5.34381, -33.6303, 0.29", "-62.0135, 5.33759, -33.6185, 0.29", "-62.8356, 5.10652, -33.5678, 1.03", "-63.6826, 4.6934, -33.5668, 1.03", "-64.5498, 4.11069, -33.6138, 1.03", "-65.2809, 3.51077, -33.6736, 0.88", "-65.9974, 2.85112, -33.6835, 0.37", "-66.676, 2.18321, -33.5771, 0.37", "-67.3593, 1.46187, -33.3552, 0.88", "-67.8633, 0.925319, -33.1223, 1.25", "-68.4062, 0.346553, -32.8014, 1.25", "-69.127, -0.375838, -32.2964, 0.66", "-70.1056, -1.29312, -31.5751, 0.52", "-70.1451, -1.32674, -31.547, 0.52", "-70.737, -1.79438, -31.1956, 0.29", "-70.8866, -1.90567, -31.1182, 0.88", "-70.9479, -1.94918, -31.093, 0.88", "-71.6877, -2.448, -30.892, 0.88", "-72.8576, -3.28465, -30.6671, 0.29", "-73.8009, -4.02982, -30.4463, 0.29", "-73.9112, -4.12433, -30.4173, 0.29", "-74.4697, -4.60173, -30.2483, 0.96", "-74.9338, -4.99217, -30.0958, 1.25", "-75.5337, -5.48763, -29.8792, 0.81", "-76.3572, -6.22058, -29.5993, 0.29", "-76.8478, -6.67593, -29.4491, 0.29", "-77.2967, -7.08664, -29.3482, 0.74", "-77.7112, -7.43168, -29.2952, 0.74", "-77.7647, -7.47447, -29.2925, 0.74", "-78.6311, -8.12197, -29.3102, 0.29", "-79.1275, -8.51087, -29.361, 0.96", "-79.7942, -9.05667, -29.5104, 0.96", "-80.6017, -9.65787, -29.7454, 0.29", "-81.2904, -10.1182, -29.9892, 0.29", "-81.3467, -10.1527, -30.0095, 0.29", "-81.8081, -10.4116, -30.2015, 0.29", "-82.9875, -11.049, -30.7439, 0.52", "-84.2669, -11.7422, -31.3943, 0.52", "-84.9929, -12.1286, -31.7717, 0.29", "-86.1773, -12.7293, -32.3643, 0.29", "-87.0467, -13.171, -32.7814, 1.11", "-87.4751, -13.3839, -32.9783, 1.47", "-89.5276, -14.4088, -33.8483, 0.29", "-89.9602, -14.6242, -34.049, 1.11", "-90.3454, -14.8002, -34.2253, 1.11", "-90.4059, -14.8197, -34.2539, 1.11", "-92.1138, -15.2261, -35.0968, 0.29", "-93.3016, -15.4706, -35.7074, 0.29", "-94.2543, -15.6167, -36.2169, 1.11", "-94.4799, -15.646, -36.3413, 1.11", "-97.7466, -15.9985, -38.1851, 0.29", "-98.9417, -16.0918, -38.8639, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "28.177, 14.7345, -10.6189, 0.96", "28.2249, 14.692, -10.7666, 0.96", "28.8468, 14.0718, -12.6185, 0.74", "30.9602, 11.5461, -19.8029, 0.74", "32.1228, 9.92774, -24.054, 0.59", "32.6127, 9.16588, -26.0052, 0.59", "33.2184, 8.19856, -28.4303, 0.59", "33.3629, 7.96629, -29.0143, 0.88", "34.532, 6.09352, -33.6536, 0.74", "34.8322, 5.59114, -34.7343, 1.4", "35.9155, 4.09124, -38.4257, 1.11", "36.3596, 3.66284, -39.8356, 0.59", "36.9945, 3.19635, -41.5612, 0.74", "37.4344, 2.94174, -42.5424, 0.74", "37.5516, 2.89372, -42.7228, 0.74", "38.0066, 2.73114, -43.3608, 0.74", "40.4089, 1.90523, -46.3573, 1.33", "41.3288, 1.56064, -47.4643, 1.33", "42.8662, 0.918559, -49.2557, 0.81", "44.6752, 0.055296, -51.4007, 0.81", "44.7169, 0.033266, -51.4519, 0.81", "46.1188, -0.730833, -53.2027, 0.81", "46.9556, -1.12138, -54.1525, 1.03", "48.2646, -1.63372, -55.6537, 0.52", "49.685, -2.18649, -57.3856, 1.18", "51.3179, -2.83788, -59.5018, 1.18", "52.4153, -3.26317, -60.9354, 0.52", "53.4833, -3.64103, -62.4738, 0.52", "54.4748, -3.91495, -64.078, 0.66", "55.6209, -4.13848, -66.0277, 1.25", "55.895, -4.15532, -66.7184, 1.25", "55.9152, -4.15408, -66.7854, 1.25", "56.7763, -3.94618, -70.2378, 1.25", "57.3461, -3.68376, -72.9617, 1.25", "57.3629, -3.67318, -73.0517, 1.25", "58.932, -2.36653, -82.0214, 1.25", "59.0562, -2.24088, -82.8114, 1.25", "59.3043, -1.94821, -84.5239, 0.88", "59.3799, -1.81756, -85.1695, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "28.177, 14.7345, -10.6189, 0.88", "30.0383, 15.2375, -11.5339, 0.88", "30.8004, 15.3811, -11.8411, 0.74", "30.9399, 15.402, -11.8915, 0.74", "32.062, 15.5356, -12.2404, 0.74", "32.9612, 15.6261, -12.4922, 0.96", "33.1749, 15.6431, -12.5423, 0.96", "33.6964, 15.6183, -12.6307, 0.96", "33.764, 15.6115, -12.6472, 0.96", "34.3903, 15.6079, -12.8905, 0.96", "34.5232, 15.6181, -12.9591, 0.96", "35.3933, 15.8055, -13.4739, 0.74", "36.5465, 16.1579, -14.2224, 0.52", "37.2402, 16.5138, -14.7734, 0.52", "38.1111, 17.152, -16.2459, 0.52", "38.1363, 17.1779, -16.306, 0.52", "38.3656, 17.5049, -17.0829, 0.52", "38.3782, 17.5319, -17.1456, 0.52", "38.5908, 18.1925, -18.6463, 1.11", "39.0305, 20.3817, -23.766, 0.44", "39.061, 20.692, -24.5179, 0.44", "39.1119, 21.152, -25.6318, 0.88", "39.1393, 21.3119, -26.0807, 0.88", "39.1485, 21.3324, -26.1571, 0.88", "39.2038, 21.42, -26.5857, 0.88", "39.4966, 21.8871, -28.7061, 0.59", "39.6221, 22.073, -29.4912, 0.59", "40.1781, 22.7599, -32.4047, 0.81", "40.8864, 23.5604, -35.8808, 0.59", "41.5875, 24.2881, -39.1091, 1.33", "41.8281, 24.5162, -40.1556, 0.44", "42.1033, 24.7569, -41.2548, 0.44", "42.8994, 25.5376, -44.4446, 1.11", "42.9222, 25.5616, -44.517, 1.11", "43.0796, 25.7112, -44.8555, 1.11", "43.1223, 25.7366, -44.9041, 1.11", "43.4114, 25.891, -45.1795, 1.11", "43.5254, 25.9469, -45.2578, 1.11", "44.098, 26.2302, -45.4622, 1.11", "45.533, 26.8907, -45.9506, 0.52", "46.7146, 27.4451, -46.4494, 0.44", "46.8972, 27.5306, -46.5352, 0.44", "47.8378, 28.0036, -47.0121, 0.29", "48.3119, 28.2873, -47.2448, 0.29", "48.365, 28.3233, -47.2701, 0.29", "49.6333, 29.3556, -48.4121, 0.59", "49.6666, 29.3852, -48.4523, 0.59", "50.0325, 29.7159, -48.9767, 0.59", "50.8756, 30.5035, -50.2466, 0.74", "50.9099, 30.5347, -50.299, 0.74", "53.0245, 32.4215, -53.485, 1.03", "53.4604, 32.7924, -54.155, 0.96", "55.0221, 34.051, -56.6142, 0.29", "55.4042, 34.3308, -57.2424, 1.11", "55.4374, 34.3524, -57.2997, 1.11", "55.7949, 34.5774, -57.8572, 1.11" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "9.4014, -30.5794, -15.524, 0.66", "9.56282, -30.6375, -16.3825, 0.66", "9.64639, -30.7277, -16.9411, 0.66", "9.7056, -30.9219, -18.0522, 0.66", "9.71013, -30.9309, -18.1113, 0.66", "10.0217, -31.4478, -21.4212, 0.74", "10.0277, -31.4582, -21.4799, 0.74", "10.2412, -31.9519, -23.6936, 1.03", "10.5873, -32.9492, -27.3496, 0.66", "11.0556, -34.3757, -31.8246, 0.44", "11.1205, -34.5496, -32.3113, 0.74", "11.2766, -34.9089, -33.1797, 0.52", "11.5506, -35.4647, -34.4114, 0.52", "11.8557, -36.0739, -35.526, 0.88", "11.9727, -36.3384, -35.8993, 0.88", "12.7287, -38.7215, -38.8371, 0.44", "12.8492, -39.187, -39.4397, 0.44", "12.8579, -39.2272, -39.4948, 0.44", "13.0445, -40.3797, -41.1378, 0.37", "13.1521, -41.4685, -42.5453, 0.88", "13.1661, -41.77, -42.8726, 1.33", "13.1737, -42.318, -43.2732, 1.47", "13.2051, -42.5942, -43.4531, 1.25", "13.2198, -42.6438, -43.4787, 1.25", "13.6656, -43.4944, -43.7418, 0.29", "14.2399, -44.5693, -43.9364, 0.29", "14.6457, -45.3392, -44.065, 1.18", "14.9378, -45.9145, -44.1456, 1.55", "15.2418, -46.5552, -44.2193, 1.11", "15.6475, -47.4385, -44.3356, 0.52", "16.146, -48.617, -44.5022, 0.52", "16.1703, -48.6793, -44.5124, 0.52", "16.644, -49.821, -44.7165, 0.52", "16.6978, -49.9201, -44.7437, 0.52", "17.2533, -50.7555, -45.1087, 0.44", "17.292, -50.8027, -45.1392, 0.44", "17.6691, -51.2361, -45.4753, 0.44", "17.7379, -51.3329, -45.5451, 0.44", "18.2411, -52.2035, -46.1412, 0.52", "18.6164, -53.1307, -46.7277, 0.81", "18.6352, -53.1949, -46.7661, 0.81", "18.8662, -54.1336, -47.3046, 1.11", "19.014, -54.8096, -47.6633, 1.11", "19.0588, -54.987, -47.749, 1.11", "19.5082, -56.4479, -48.3717, 0.52", "19.9858, -57.7488, -48.8896, 0.52", "20.346, -58.6197, -49.219, 1.11", "20.7084, -59.4215, -49.4879, 1.47", "21.1014, -60.2056, -49.7194, 0.96", "21.4429, -60.9052, -49.8914, 0.52", "21.4705, -60.9642, -49.911, 0.52", "21.6148, -61.3148, -50.0848, 0.52", "21.909, -62.155, -50.6556, 0.52", "21.9237, -62.2074, -50.6972, 0.52", "22.1543, -63.0458, -51.3667, 0.52", "22.8188, -65.1309, -52.9111, 0.88", "22.996, -65.6538, -53.2535, 1.33", "23.0166, -65.7112, -53.2886, 1.33", "23.2246, -66.2172, -53.5444, 1.33", "23.9042, -67.6627, -53.9969, 0.52", "24.4109, -68.6286, -54.0769, 0.52", "24.9685, -69.8083, -53.9071, 0.52", "24.9935, -69.8694, -53.8953, 0.52", "25.3615, -70.9273, -53.6502, 0.74", "25.7074, -72.1516, -53.2974, 0.59", "25.8728, -73.0143, -53.0005, 0.29", "26.0442, -74.2664, -52.5586, 0.29", "26.11, -74.7641, -52.3967, 0.74", "26.1638, -75.2739, -52.2719, 0.74", "26.1664, -75.3403, -52.2676, 0.74", "26.1745, -76.4588, -52.3384, 0.37", "26.1764, -76.5258, -52.3431, 0.37", "26.2562, -77.5405, -52.4192, 0.37", "26.2639, -77.6072, -52.4219, 0.37", "26.4625, -79.1595, -52.4592, 0.37", "26.4769, -79.2342, -52.4568, 0.37", "26.6883, -80.028, -52.3835, 0.88", "26.7996, -80.4306, -52.3329, 1.03", "26.9182, -80.8672, -52.3068, 1.03", "26.9361, -80.9315, -52.3062, 1.03", "27.329, -82.2187, -52.3297, 0.29", "27.5209, -82.7877, -52.4215, 0.66", "27.9987, -84.0211, -52.9306, 0.37", "28.4033, -85.0482, -53.502, 1.03", "28.6451, -85.6696, -53.917, 1.03", "28.6649, -85.7198, -53.9597, 1.03", "29.1645, -86.8688, -55.1424, 0.37", "29.8056, -88.059, -56.525, 1.03", "30.0855, -88.4712, -57.0644, 1.03", "30.1157, -88.5135, -57.1236, 1.03", "30.9122, -89.8098, -58.8083, 0.44", "31.1465, -90.2496, -59.3326, 1.4", "31.2683, -90.4659, -59.6006, 1.4", "31.2974, -90.5111, -59.6579, 1.4", "32.9075, -92.5253, -62.5448, 0.52", "34.1519, -93.8028, -64.6114, 0.52", "35.2378, -94.7907, -66.2965, 0.88", "36.5525, -95.9012, -68.281, 0.88", "37.098, -96.3179, -69.0367, 0.88", "38.7931, -97.3808, -71.1504, 0.44", "40.1401, -97.9645, -72.5696, 0.29", "40.8443, -98.1854, -73.2635, 0.22", "40.9022, -98.2011, -73.317, 0.22", "41.8811, -98.5089, -74.1884, 0.22", "43.393, -99.0507, -75.6044, 1.03", "44.5386, -99.5292, -76.5715, 1.47" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "9.4014, -30.5794, -15.524, 0.37", "10.7239, -30.7969, -15.6488, 0.37", "11.4567, -30.9156, -15.693, 0.37", "12.3331, -31.0565, -15.7372, 0.74", "13.4234, -31.2493, -15.7855, 0.74", "13.4943, -31.2633, -15.7928, 0.74", "15.084, -31.5943, -16.0069, 0.88", "16.5783, -31.8441, -16.2005, 0.29", "16.6561, -31.8575, -16.2129, 0.29", "17.2109, -31.9944, -16.3164, 0.88", "18.4538, -32.427, -16.5565, 0.81", "18.517, -32.4536, -16.5677, 0.81", "19.2494, -32.7941, -16.7229, 0.81", "19.331, -32.828, -16.7469, 0.81", "20.7359, -33.3739, -17.2029, 0.81", "21.7097, -33.733, -17.5197, 0.37", "22.7288, -34.0844, -17.828, 0.81", "23.826, -34.4559, -18.1635, 1.18", "25.4275, -35.006, -18.6654, 0.59", "25.4912, -35.0285, -18.6846, 0.59", "26.6415, -35.4674, -19.0342, 0.52", "27.3617, -35.7654, -19.2343, 0.88", "28.2754, -36.2125, -19.4424, 1.18", "28.7677, -36.5001, -19.5338, 1.18", "29.6822, -37.1023, -19.6827, 0.81", "30.7214, -37.7887, -19.8787, 0.59", "31.1439, -38.0709, -19.9716, 1.33", "31.5666, -38.3506, -20.0562, 1.25", "32.7763, -39.11, -20.2283, 0.52", "33.2614, -39.3972, -20.2706, 0.52", "34.2974, -39.9852, -20.2922, 0.52", "34.4184, -40.0525, -20.2852, 0.52", "35.7988, -40.8317, -20.138, 0.52", "36.4635, -41.2075, -20.032, 1.03", "36.5317, -41.2464, -20.019, 1.03", "37.0599, -41.5533, -19.9386, 1.03", "37.8794, -42.0208, -19.9539, 0.22", "38.0093, -42.088, -19.9808, 0.22", "38.7456, -42.4372, -20.2411, 0.22", "39.4719, -42.7939, -20.5267, 1.03", "39.5304, -42.824, -20.5485, 1.03", "40.878, -43.564, -21.0172, 0.29", "41.8498, -44.1277, -21.3294, 0.29", "42.3107, -44.4171, -21.4534, 0.96", "43.0111, -44.864, -21.5888, 1.11", "43.6568, -45.2846, -21.6589, 1.11", "44.387, -45.7543, -21.6297, 0.29", "44.5067, -45.8307, -21.5838, 0.29", "45.036, -46.1394, -21.1682, 0.29", "45.6573, -46.5602, -20.3581, 0.29", "45.6855, -46.5874, -20.3007, 0.29", "46.1615, -47.1733, -19.0196, 1.03", "46.7473, -48.0255, -17.0609, 0.66", "47.1649, -48.6451, -15.3498, 0.96", "47.4963, -49.1747, -13.7437, 0.52", "47.8618, -49.8121, -11.8252, 0.52", "47.8728, -49.8306, -11.7695, 0.52", "48.2694, -50.4171, -10.0787, 1.11", "49.4775, -51.9397, -5.93517, 0.88", "49.4998, -51.964, -5.87397, 0.88", "49.8493, -52.3032, -5.068, 0.74", "49.9439, -52.3956, -4.87285, 0.74", "50.6817, -53.199, -3.53607, 0.59", "51.5781, -54.3027, -2.21312, 0.81", "52.1771, -55.0469, -1.6081, 0.96", "52.5774, -55.5054, -1.23095, 0.96", "53.2517, -56.1923, -0.680485, 0.44", "53.8843, -56.8014, -0.249276, 0.44", "53.9872, -56.8928, -0.196742, 0.44", "54.9846, -57.6461, 0.0287399, 0.44", "55.2488, -57.83, 0.077557, 0.44", "56.3061, -58.5154, 0.281898, 0.44", "56.6746, -58.7543, 0.350072, 0.96", "56.7992, -58.8276, 0.383453, 0.96", "57.4559, -59.1891, 0.603357, 0.96", "58.4702, -59.7213, 1.0287, 0.59", "58.9647, -59.9407, 1.25638, 0.37", "59.0226, -59.9619, 1.28878, 0.37", "60.0516, -60.3617, 1.92751, 0.29", "60.1058, -60.389, 1.96119, 0.29", "60.5977, -60.6692, 2.24275, 0.29", "60.6508, -60.7044, 2.26943, 0.29", "61.4722, -61.4122, 2.6735, 0.81", "61.9269, -61.8879, 2.89325, 0.81", "62.6974, -62.8839, 3.2523, 0.29", "63.0972, -63.4689, 3.39612, 0.29", "63.1497, -63.5579, 3.40885, 0.29", "63.7288, -64.6795, 3.46138, 0.29", "63.9344, -65.1681, 3.42543, 0.81", "64.1504, -65.7571, 3.34897, 0.81", "64.4672, -66.8407, 3.17711, 0.74", "64.617, -67.3099, 3.10075, 0.52", "64.6443, -67.3698, 3.0874, 0.52", "65.0049, -67.9826, 2.91168, 0.37", "65.4885, -68.6627, 2.64979, 0.29", "65.5294, -68.7159, 2.62761, 0.29", "66.0882, -69.4576, 2.32649, 0.29", "67.1451, -70.959, 1.71973, 0.29", "67.1802, -71.0132, 1.69947, 0.29", "67.6518, -71.7869, 1.43243, 0.66", "68.2719, -72.8647, 1.08701, 0.29", "69.0278, -74.2033, 0.711515, 0.44", "69.6455, -75.3324, 0.444558, 0.29", "70.2382, -76.4009, 0.256839, 0.74", "70.69, -77.1732, 0.134151, 0.88", "70.7346, -77.2353, 0.122023, 0.88", "71.6028, -78.0299, -0.268164, 0.29", "71.8611, -78.2122, -0.397446, 0.52", "71.9155, -78.241, -0.42939, 0.52", "72.3864, -78.4257, -0.747017, 0.52", "74.1591, -78.9872, -2.08072, 0.29", "75.7472, -79.4254, -3.36816, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.833397, -31.6317, -6.76374, 0.52", "1.97959, -31.4068, -6.07175, 0.52", "3.84546, -31.0726, -5.2132, 0.59", "3.90983, -31.0616, -5.18822, 0.59", "4.34777, -31.0019, -5.04275, 0.88", "4.69167, -30.9618, -4.94055, 0.88", "5.7731, -30.8898, -4.65638, 0.59", "6.69879, -30.9855, -4.45375, 0.59", "6.88842, -31.0602, -4.40525, 0.59", "7.34764, -31.2849, -4.25807, 1.33", "7.47157, -31.3457, -4.20191, 1.33", "8.10873, -31.6111, -3.87015, 1.33", "10.0733, -32.3396, -2.72707, 0.81", "11.7596, -32.7525, -1.68703, 0.66", "11.833, -32.7677, -1.63358, 0.66", "13.3518, -33.033, -0.418563, 0.52", "14.467, -33.2009, 0.508674, 0.52", "14.5203, -33.2064, 0.554721, 0.52", "16.2455, -33.2473, 2.19465, 0.88", "18.3397, -33.2572, 4.26618, 0.59", "18.3864, -33.2616, 4.31819, 0.59", "18.8236, -33.3543, 4.85912, 0.59", "18.9103, -33.3782, 4.9789, 0.59", "20.033, -33.7053, 6.56182, 0.96", "20.5709, -33.8931, 7.30884, 0.96", "22.9598, -34.8202, 10.0874, 0.52", "23.775, -35.2291, 10.9637, 0.88", "23.8255, -35.2616, 11.0155, 0.88", "24.3769, -35.7193, 11.5246, 0.88", "25.2574, -36.7393, 12.2635, 0.66", "26.0121, -37.8696, 12.8951, 0.52", "26.4332, -38.7556, 13.2657, 0.52", "26.6773, -39.4502, 13.5697, 0.74", "26.8469, -40.0642, 13.8678, 0.96", "27.1504, -41.5852, 14.6636, 0.66", "27.1574, -41.6356, 14.6908, 0.66", "27.3275, -43.0937, 15.4752, 0.29", "27.5452, -44.517, 16.1419, 0.29", "27.7288, -45.4729, 16.4912, 0.44", "27.8516, -46.0278, 16.649, 0.88", "28.0671, -46.8945, 16.7965, 0.88", "28.0852, -46.9584, 16.803, 0.88", "28.5656, -48.4348, 16.8268, 0.44", "29.0127, -49.6024, 16.8258, 0.81", "29.0423, -49.6626, 16.8244, 0.81", "29.4513, -50.2472, 16.7618, 0.81", "30.2139, -51.0537, 16.6012, 0.37", "30.2671, -51.0963, 16.5884, 0.37", "31.2458, -51.6194, 16.3348, 0.37", "32.1072, -51.9851, 16.0698, 0.88", "33.6307, -52.5825, 15.5601, 0.88", "33.7248, -52.62, 15.5241, 0.88", "34.1547, -52.821, 15.3451, 0.88", "34.8679, -53.2368, 15.0558, 0.44", "35.7515, -53.8866, 14.7187, 1.18", "35.9131, -54.0246, 14.6788, 1.18", "37.0692, -55.1185, 14.4588, 0.44", "37.7548, -55.83, 14.2418, 0.44", "38.2197, -56.3521, 14.056, 1.25", "38.7838, -57.0817, 13.7872, 1.47", "39.6282, -58.26, 13.2376, 0.59", "40.5171, -59.528, 12.5381, 0.44", "41.5302, -60.874, 11.3251, 1.4", "41.8034, -61.2508, 10.9287, 1.4", "42.3164, -62.0182, 10.0724, 0.88", "43.1656, -63.3727, 8.4993, 0.96", "43.4979, -63.9347, 7.85593, 1.33", "45.1039, -66.6157, 5.0291, 1.25", "45.7959, -67.701, 4.01032, 0.44", "46.2086, -68.3212, 3.45408, 0.74", "46.4304, -68.5916, 3.23881, 0.74", "47.0623, -69.3304, 2.92378, 0.74", "47.1079, -69.3799, 2.90945, 0.74", "47.7051, -70.0073, 2.94572, 0.29", "47.7859, -70.0701, 2.92613, 0.29", "48.9622, -71.0299, 2.45538, 0.29", "49.0077, -71.0739, 2.42899, 0.29", "50.0845, -72.1581, 1.72363, 0.96", "50.5649, -72.6915, 1.41128, 0.81", "50.61, -72.744, 1.3751, 0.81", "51.1338, -73.3785, 0.921684, 0.37", "51.2123, -73.4678, 0.851027, 0.37", "52.0719, -74.1835, 0.238311, 0.37", "52.1259, -74.2145, 0.207963, 0.37", "53.5381, -74.8314, -0.598617, 0.66", "53.5964, -74.8523, -0.630418, 0.66", "54.8278, -75.1985, -1.29403, 0.29", "55.4232, -75.3552, -1.55615, 0.74", "55.9405, -75.4841, -1.73233, 0.29", "56.1805, -75.5488, -1.77058, 0.29", "57.0311, -75.8767, -1.59183, 0.29", "57.0913, -75.9048, -1.57183, 0.29", "57.9871, -76.3865, -0.931484, 1.03", "58.0375, -76.4131, -0.891723, 1.03", "58.3871, -76.5952, -0.602662, 1.03", "59.5138, -77.148, 0.320878, 0.29", "60.4507, -77.5897, 1.09084, 1.18", "62.6321, -78.6389, 2.96932, 0.66", "63.2289, -78.9082, 3.55363, 0.52", "63.2679, -78.9245, 3.59592, 0.52", "63.8377, -79.1549, 4.26655, 0.37", "63.8714, -79.1709, 4.31328, 0.37", "64.7177, -79.6381, 5.68037, 0.96", "65.7595, -80.3058, 7.47162, 0.52", "65.7934, -80.3309, 7.53984, 0.52", "66.1441, -80.5988, 8.2988, 0.81", "66.6276, -80.998, 9.53015, 1.18", "74.3142, -86.6148, 11.9714, 1.18" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.833397, -31.6317, -6.76374, 0.66", "-0.465373, -32.6079, -7.25093, 0.66", "-1.16252, -33.3056, -7.52641, 0.66", "-1.1777, -33.3692, -7.54343, 0.66", "-1.12454, -34.2359, -7.73979, 0.66", "-1.03115, -34.4932, -7.78933, 0.66", "-0.581458, -35.2075, -7.90652, 0.66", "-0.368968, -35.4333, -7.91741, 0.66", "0.888767, -36.6002, -7.9283, 0.66", "0.940417, -36.645, -7.9261, 0.66", "1.8165, -37.3467, -7.86233, 1.25", "2.74884, -38.0919, -7.77064, 0.37", "3.94286, -39.0765, -7.61952, 0.52", "4.73869, -39.7868, -7.5058, 0.88", "5.40998, -40.4781, -7.3857, 1.18", "5.77267, -40.9298, -7.34475, 1.18", "6.01549, -41.3651, -7.34768, 1.18", "6.1713, -41.8255, -7.39853, 1.18", "6.32758, -42.6377, -7.5682, 0.96", "6.42774, -43.3349, -7.74107, 0.96", "6.56784, -44.421, -8.07665, 0.52", "6.67997, -45.2749, -8.3597, 0.88", "6.84343, -46.1189, -8.65481, 0.44", "6.86023, -46.1807, -8.67687, 0.44", "7.22122, -46.9466, -9.14566, 0.44", "7.57247, -47.4774, -9.61361, 0.88", "7.60802, -47.5178, -9.65752, 0.88", "7.9542, -47.8406, -10.0943, 1.18", "8.03067, -47.9054, -10.1897, 1.18", "9.73548, -49.3459, -12.2717, 0.52", "9.77539, -49.3793, -12.3183, 0.52", "10.3986, -49.9306, -12.9362, 0.52", "10.4522, -49.9878, -12.9809, 0.52", "10.7502, -50.3867, -13.1763, 0.52", "10.9195, -50.6492, -13.2449, 0.96", "11.2452, -51.2302, -13.2841, 1.33", "11.6449, -51.9382, -13.3698, 0.81", "12.2244, -52.996, -13.5346, 0.52", "12.7764, -54.0189, -13.6775, 0.88", "13.1408, -54.7373, -13.7189, 1.25", "13.1855, -54.829, -13.7186, 1.25", "13.823, -56.1254, -13.6315, 0.37", "14.2046, -56.8982, -13.5597, 0.74", "14.6253, -57.8445, -13.4903, 1.18", "15.109, -59.268, -13.5338, 0.37", "15.1251, -59.3322, -13.5426, 0.37", "15.2883, -60.0967, -13.708, 0.37", "15.5003, -61.1978, -14.0271, 0.88", "15.7887, -62.5767, -14.5754, 1.03", "16.1382, -63.9523, -15.2612, 0.66", "16.4822, -65.0529, -15.8727, 0.29", "16.6033, -65.4109, -16.0585, 1.03", "16.788, -65.9383, -16.2996, 1.18", "16.8141, -65.9979, -16.3195, 1.18", "17.1482, -66.6116, -16.461, 1.18", "17.5673, -67.3807, -16.6177, 0.29", "17.7241, -67.7527, -16.7463, 0.29", "17.8897, -68.375, -17.0404, 1.18", "17.9666, -68.7723, -17.2529, 1.55", "18.1586, -69.8455, -17.8245, 0.88", "18.3269, -70.9602, -18.4362, 0.52", "18.5105, -72.065, -19.0523, 0.81", "18.7959, -73.2454, -19.6611, 0.29", "19.0743, -74.0827, -20.0334, 0.29", "19.407, -74.8639, -20.315, 1.03", "19.4398, -74.9214, -20.3273, 1.03", "19.8212, -75.4301, -20.3573, 1.03", "20.7572, -76.4268, -20.3888, 0.29", "21.4048, -77.0254, -20.4229, 0.29", "21.7488, -77.3311, -20.4679, 1.11", "22.2606, -77.8044, -20.5761, 1.4", "22.8089, -78.3306, -20.7169, 1.11", "23.7561, -79.3598, -21.0923, 0.37", "24.0632, -79.78, -21.2876, 0.37", "24.0948, -79.8439, -21.3188, 0.37", "24.2453, -80.3825, -21.5555, 0.37", "24.2556, -80.4516, -21.5872, 0.37", "24.3878, -81.3974, -21.9767, 0.44", "24.5315, -82.0451, -22.1948, 0.81", "24.7424, -82.7686, -22.428, 1.11", "25.0036, -83.4826, -22.6156, 1.11", "25.5494, -84.7384, -22.8583, 0.81", "26.1215, -85.9987, -22.8922, 0.29", "26.6999, -87.3591, -22.705, 0.29", "26.7262, -87.4296, -22.6875, 0.29", "26.9728, -88.2665, -22.3951, 1.62", "27.1687, -89.2998, -21.9538, 2.06", "27.3027, -91.1993, -21.0633, 0.29", "27.2596, -92.4011, -20.5157, 0.29", "27.2222, -92.858, -20.2973, 0.66", "27.1847, -93.4149, -20.0398, 0.88", "27.1266, -93.9342, -19.8246, 0.88", "27.0057, -94.8016, -19.4784, 0.29", "26.9718, -95.0134, -19.4032, 0.29", "26.6606, -96.5427, -18.6913, 0.29", "26.5567, -96.9198, -18.49, 1.18", "26.2281, -97.682, -18.0306, 1.18", "26.1943, -97.7265, -17.9911, 1.18", "25.4718, -98.4367, -17.2108, 0.29", "25.0686, -98.7903, -16.8232, 0.29", "24.9692, -98.8661, -16.7417, 0.29", "24.3965, -99.3588, -16.1817, 0.29", "23.3379, -100.448, -14.8967, 0.29", "23.0794, -100.751, -14.5594, 0.66", "22.824, -101.119, -14.1942, 0.88", "22.7963, -101.168, -14.1548, 0.88", "22.2847, -101.956, -13.6223, 0.29", "22.232, -102.035, -13.5819, 0.29", "21.9295, -102.449, -13.4317, 0.29", "21.6136, -102.841, -13.2903, 0.88", "21.1469, -103.405, -13.1049, 0.88", "20.1204, -104.819, -12.6484, 0.29", "19.7474, -105.467, -12.4133, 0.29", "19.5508, -105.89, -12.245, 1.03", "19.3826, -106.401, -11.9504, 1.33", "19.2148, -107.085, -11.3065, 0.96", "18.9987, -108.132, -10.0651, 0.29", "18.8114, -109.21, -8.61071, 0.29", "18.8028, -109.248, -8.55284, 0.29", "18.3843, -110.546, -6.2359, 0.66", "17.8537, -112.001, -3.46067, 0.66", "17.5659, -112.696, -2.05018, 0.88", "17.5468, -112.738, -1.96357, 0.88", "17.0707, -113.818, 0.117411, 0.37", "16.5262, -115.21, 2.39614, 0.37", "16.3077, -115.785, 3.1527, 0.59", "16.2937, -115.829, 3.2031, 0.59", "16.1322, -116.33, 3.75475, 0.59", "15.7818, -117.219, 4.70559, 0.29", "15.4847, -117.778, 5.24494, 0.81", "14.7021, -118.979, 6.40025, 0.59", "14.6728, -119.023, 6.44428, 0.59", "14.2333, -119.702, 7.16703, 0.74", "13.5324, -120.681, 8.26552, 0.52", "13.1025, -121.252, 8.94022, 0.29", "12.4406, -122.221, 10.0916, 0.44", "11.8541, -123.276, 11.2374, 0.59", "11.5034, -124.001, 12.0202, 1.03" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-25.9854, -32.654, -1.46242, 0.59", "-26.8647, -33.101, -1.46242, 0.59", "-27.7852, -33.5689, -1.46242, 0.59", "-28.8902, -34.1306, -1.46242, 0.88", "-29.0149, -34.194, -1.46242, 0.88", "-29.7905, -34.5882, -1.46242, 0.88", "-30.0312, -34.7106, -1.46242, 0.88" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-25.9854, -32.654, -1.46242, 0.96", "-27.2632, -32.8411, -2.29811, 0.96", "-28.6201, -32.9971, -3.28267, 0.44", "-29.5857, -33.089, -4.01469, 0.52", "-30.5852, -33.1406, -4.77394, 0.52", "-31.2447, -33.1418, -5.25533, 0.52", "-31.2936, -33.1404, -5.29001, 0.52", "-32.7444, -33.0515, -6.33889, 0.81", "-32.8035, -33.0411, -6.37994, 0.81", "-33.2938, -32.8962, -6.73857, 1.25", "-33.8886, -32.6754, -7.16803, 1.25", "-33.9551, -32.6514, -7.20606, 1.25", "-35.5161, -32.1781, -8.06781, 1.25", "-35.6037, -32.1564, -8.11131, 1.25", "-36.4741, -31.9802, -8.53323, 0.88", "-37.0811, -31.8761, -8.8714, 0.66", "-38.1367, -31.694, -9.57703, 0.66", "-39.7125, -31.4957, -10.8157, 0.81", "-40.1026, -31.4481, -11.1429, 0.81", "-40.764, -31.3605, -11.7342, 0.81", "-42.0118, -31.1781, -12.9109, 0.66", "-43.4466, -30.9382, -14.3319, 1.18", "-44.8794, -30.6215, -15.8161, 0.52", "-45.5702, -30.4252, -16.5554, 0.81", "-45.9505, -30.2982, -16.9838, 0.81", "-46.3723, -30.1603, -17.5027, 0.81", "-47.3124, -29.8837, -18.6648, 0.52", "-48.4439, -29.5957, -20.0841, 0.88", "-49.7507, -29.3271, -21.7047, 0.88", "-49.794, -29.3224, -21.7595, 0.88", "-51.323, -29.354, -23.6117, 0.59", "-51.8222, -29.4194, -24.1868, 1.03", "-52.3919, -29.5708, -24.7698, 1.55", "-53.0032, -29.7854, -25.3832, 1.92", "-53.0526, -29.8029, -25.4291, 1.92", "-54.9296, -30.4343, -27.2082, 0.59", "-55.0296, -30.4682, -27.3016, 0.59", "-55.4055, -30.6115, -27.679, 0.96", "-57.1804, -31.4012, -29.7228, 0.29", "-58.057, -31.8299, -30.8283, 0.29", "-58.6882, -32.1224, -31.612, 1.11", "-59.0848, -32.3006, -32.1041, 1.25", "-59.3025, -32.388, -32.3493, 1.25", "-60.6518, -32.8926, -33.7224, 0.37", "-60.7038, -32.9148, -33.7643, 0.37", "-61.6229, -33.2865, -34.4764, 0.37", "-61.6784, -33.3094, -34.5129, 0.37", "-62.421, -33.5722, -34.9224, 0.37", "-63.4461, -33.9163, -35.3506, 1.03", "-63.9208, -34.0816, -35.4884, 1.33", "-64.3025, -34.2316, -35.5878, 1.33", "-65.9951, -34.9963, -35.9622, 0.29", "-67.0234, -35.4681, -36.1477, 0.29", "-67.8623, -35.8545, -36.2536, 1.25", "-68.4663, -36.102, -36.2871, 1.62", "-69.2645, -36.3883, -36.334, 0.81", "-70.3073, -36.7097, -36.3892, 0.29", "-70.3963, -36.7322, -36.3922, 0.29", "-71.3724, -36.9715, -36.4581, 0.29", "-72.7409, -37.1983, -36.632, 0.52", "-73.3949, -37.2563, -36.7521, 0.66", "-73.7825, -37.261, -36.8445, 0.66", "-74.2515, -37.2515, -36.9805, 0.66", "-74.3526, -37.2536, -37.0133, 0.66", "-75.168, -37.3142, -37.3359, 0.44", "-75.673, -37.4848, -37.5159, 0.44", "-75.7919, -37.5556, -37.5336, 0.44", "-76.2436, -37.8539, -37.5458, 0.44", "-76.7899, -38.1746, -37.4375, 0.44", "-76.8595, -38.2046, -37.4137, 0.44", "-77.7816, -38.4451, -37.0085, 0.37", "-78.3859, -38.5496, -36.7617, 0.37", "-79.0617, -38.6353, -36.5168, 0.81", "-80.1468, -38.7173, -36.1589, 1.03", "-80.6833, -38.7313, -36.0062, 1.03", "-81.3697, -38.7337, -35.8409, 0.59", "-82.641, -38.6815, -35.613, 0.29", "-83.0317, -38.6607, -35.5714, 0.74", "-83.1024, -38.6574, -35.5709, 0.74", "-83.8336, -38.6343, -35.6624, 0.74", "-83.946, -38.6308, -35.6816, 0.74", "-84.3889, -38.6107, -35.7731, 0.74", "-85.3908, -38.5269, -36.0041, 0.37", "-86.1785, -38.5034, -36.2009, 0.37", "-86.8591, -38.5217, -36.3777, 0.96", "-87.2761, -38.5613, -36.5149, 0.96", "-87.7742, -38.6183, -36.6903, 0.96", "-87.8402, -38.626, -36.7142, 0.96", "-88.7222, -38.6801, -37.0342, 0.52", "-88.8621, -38.6763, -37.089, 0.52", "-90.0007, -38.4763, -37.538, 0.29", "-90.7504, -38.1949, -37.8044, 0.29", "-91.1008, -37.9701, -37.8968, 0.81", "-91.6169, -37.5801, -38.0098, 0.81", "-91.6697, -37.5371, -38.018, 0.81", "-92.2263, -37.0899, -38.0798, 0.52", "-92.9515, -36.5475, -38.1061, 0.44", "-93.5673, -36.2027, -38.1448, 0.44", "-94.6709, -35.8037, -38.2282, 0.44", "-95.2669, -35.669, -38.359, 0.74", "-95.333, -35.6578, -38.3789, 0.74", "-95.9599, -35.5747, -38.6022, 1.03", "-96.5476, -35.5059, -38.8964, 1.03", "-97.299, -35.4348, -39.3051, 0.44", "-98.8238, -35.288, -40.1653, 0.44", "-99.3426, -35.2429, -40.4617, 0.81", "-99.9842, -35.1972, -40.8291, 0.96", "-101.522, -35.0875, -41.6736, 0.96", "-102.687, -34.9927, -42.2498, 0.52", "-103.741, -34.912, -42.6894, 0.52", "-104.308, -34.8532, -42.846, 0.88", "-104.371, -34.8433, -42.8755, 0.88", "-105.066, -34.6908, -43.3073, 0.88", "-105.734, -34.4777, -43.77, 0.29", "-105.785, -34.4569, -43.8141, 0.29", "-106.308, -34.2219, -44.3545, 0.59", "-108.62, -33.1662, -47.0825, 0.44", "-108.661, -33.1482, -47.1367, 0.44", "-109.315, -32.8872, -48.1417, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.15732, -26.8161, 0.0564635, 1.11", "-8.25175, -27.7731, 2.2647, 1.11", "-8.51209, -29.0861, 5.33964, 0.66", "-8.72702, -29.6097, 6.75789, 0.81", "-9.07111, -30.1475, 8.29026, 0.81", "-9.76363, -30.9739, 10.6748, 0.81", "-10.053, -31.3278, 11.6638, 0.81", "-10.1068, -31.3916, 11.8222, 0.81", "-10.7221, -31.9539, 13.7356, 0.66", "-11.0033, -32.1159, 14.7006, 0.59", "-11.3766, -32.2702, 16.1369, 0.59", "-11.7222, -32.389, 17.8623, 0.59", "-12.109, -32.5042, 20.0195, 1.03", "-12.7635, -32.7498, 23.7672, 0.52", "-13.0873, -32.9347, 25.8479, 0.88", "-13.0963, -32.9404, 25.9069, 0.88", "-13.6599, -33.2579, 28.837, 0.88", "-14.0584, -33.466, 30.3599, 0.59", "-14.4628, -33.7169, 31.6257, 0.59", "-15.0893, -34.2568, 33.525, 0.74", "-15.7183, -34.9191, 35.4122, 1.11", "-16.4594, -35.6941, 37.4376, 0.59", "-16.7469, -35.9906, 38.0783, 0.96", "-16.8764, -36.12, 38.386, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.15732, -26.8161, 0.0564635, 0.96", "-6.96783, -27.2502, 0.735167, 0.96", "-6.08912, -27.7954, 1.21965, 0.74", "-5.58192, -28.3107, 1.56751, 0.44", "-5.01782, -29.1778, 2.02021, 0.44", "-4.99527, -29.227, 2.04053, 0.44", "-4.76825, -29.8577, 2.24798, 1.18", "-4.60021, -30.6558, 2.41051, 1.18", "-4.47918, -31.6915, 2.56393, 1.03", "-4.41112, -32.5897, 2.65041, 0.81", "-4.32867, -33.5639, 2.70183, 0.81", "-4.25189, -34.2853, 2.70875, 1.25", "-4.24201, -34.3517, 2.70565, 1.25", "-4.02552, -35.1557, 2.5833, 1.25", "-3.63782, -36.1973, 2.31634, 1.18", "-3.29216, -36.8907, 2.08003, 1.11", "-3.18611, -37.0717, 2.04494, 1.11", "-2.7367, -37.8019, 2.01978, 1.03", "-1.75036, -39.431, 2.16648, 0.81", "-1.68906, -39.541, 2.21267, 0.81", "-1.38924, -40.267, 2.92253, 1.11", "-0.776644, -42.2897, 5.3721, 1.03", "-0.68569, -42.6442, 5.83101, 1.18", "-0.641254, -42.8643, 6.14047, 1.18", "-0.436089, -44.066, 7.93568, 1.18", "-0.160409, -45.3366, 9.78521, 1.18", "0.00655688, -45.8743, 10.534, 0.88", "0.299429, -46.4157, 11.1618, 0.81", "0.336631, -46.462, 11.2132, 0.81", "0.880497, -46.9693, 11.7208, 1.25", "1.40029, -47.3662, 12.0412, 1.03", "2.33246, -48.1048, 12.5295, 0.88", "3.0861, -48.7947, 12.9226, 1.03", "3.58994, -49.3734, 13.1872, 1.03", "3.63105, -49.4374, 13.2035, 1.03", "4.44412, -51.1507, 13.3968, 0.96", "4.91882, -52.4827, 13.4292, 1.18", "5.24777, -53.6285, 13.4503, 1.25", "5.40692, -54.2794, 13.458, 1.25", "5.78579, -56.1069, 13.5053, 1.11", "5.80015, -56.1797, 13.5256, 1.11", "5.95665, -57.0694, 14.0058, 1.11", "6.14995, -58.3382, 14.9523, 1.11", "6.15653, -58.3893, 14.9966, 1.11", "6.23698, -59.0548, 15.6093, 1.33", "6.60139, -61.9888, 18.3747, 0.88", "6.72004, -62.9109, 19.1536, 1.03", "6.81683, -63.7325, 19.7642, 0.81", "6.82488, -63.799, 19.8033, 0.81", "6.90512, -64.4158, 20.1099, 1.25", "7.04894, -65.3956, 20.4837, 1.4", "7.12671, -66.0789, 20.5891, 1.4", "7.22374, -67.4493, 20.8325, 1.03", "7.21319, -68.2866, 21.0184, 0.96", "7.11143, -68.912, 21.1771, 0.96", "7.08491, -68.9729, 21.199, 0.96", "6.67747, -69.527, 21.4664, 0.96", "6.62783, -69.5796, 21.4959, 0.96", "6.03232, -70.0916, 21.8134, 1.18", "5.5896, -70.5031, 22.0872, 1.18", "4.90283, -71.2602, 22.5732, 0.74", "4.87367, -71.3151, 22.5998, 0.74", "4.77804, -72.0958, 22.9101, 0.74", "4.78361, -72.1685, 22.9349, 0.74", "5.00773, -72.9964, 22.7996, 0.74", "5.0333, -73.0593, 22.7625, 0.74", "5.54609, -74.1054, 22.0402, 0.88", "6.09262, -75.0766, 21.4761, 1.18", "6.12635, -75.1328, 21.4571, 1.18", "8.34092, -78.8865, 20.9083, 0.96", "8.67586, -79.4553, 20.9029, 0.96", "9.39405, -80.6234, 21.0445, 0.96", "10.4831, -82.1617, 21.414, 0.96", "11.7642, -83.8125, 21.8856, 0.66", "12.1448, -84.3087, 22.0589, 0.66", "12.1818, -84.3597, 22.0841, 0.66", "12.5913, -84.9713, 22.3041, 1.03", "13.3116, -86.2844, 22.5537, 1.03", "13.7788, -87.3276, 22.6211, 0.66", "14.2222, -88.3906, 22.6438, 0.96", "14.6913, -89.5058, 22.6721, 1.18", "14.9344, -90.0152, 22.727, 1.18", "15.6508, -91.4283, 23.2303, 0.81", "15.6843, -91.4894, 23.2641, 0.81", "16.0935, -92.1478, 23.7447, 0.81", "16.6621, -93.0148, 24.4009, 0.74", "17.6304, -94.5375, 25.5034, 1.03", "19.0264, -96.8799, 27.1543, 1.03", "19.0505, -96.924, 27.1836, 1.03", "19.8381, -98.5613, 28.2123, 0.74", "20.4662, -100.071, 29.1009, 0.74", "20.7584, -100.847, 29.4961, 1.55", "21.227, -102.177, 29.9897, 1.33", "21.5552, -103.078, 30.1785, 1.33", "21.5769, -103.14, 30.1854, 1.33", "21.8115, -103.853, 30.1809, 1.03", "22.2927, -105.356, 30.0724, 0.88", "22.9407, -107.351, 29.7967, 1.33", "23.3851, -108.75, 29.5192, 0.81", "23.817, -110.123, 29.2287, 0.81", "24.0146, -110.784, 29.084, 0.81", "24.253, -111.652, 28.8818, 1.18", "24.482, -112.465, 28.7096, 1.18", "24.7707, -113.327, 28.5727, 1.18", "25.0429, -113.971, 28.5624, 1.55", "25.1034, -114.091, 28.5637, 1.55", "25.4071, -114.623, 28.5312, 1.55", "26.1662, -115.732, 28.3518, 0.66", "26.8297, -116.532, 28.0941, 0.66", "28.0325, -117.722, 27.4332, 0.66", "28.6177, -118.211, 27.0488, 1.11", "29.5545, -118.9, 26.3614, 0.52", "30.4946, -119.504, 25.5846, 0.52", "31.1317, -119.868, 25.0163, 0.88", "31.7262, -120.19, 24.4779, 1.33", "31.7807, -120.227, 24.434, 1.33", "32.2016, -120.672, 24.2715, 1.55", "32.5421, -121.133, 24.2594, 1.25", "33.0907, -121.949, 24.3328, 0.59", "33.2489, -122.188, 24.3724, 0.59", "33.9783, -123.343, 24.503, 0.52", "34.4873, -124.204, 24.5376, 0.52", "34.8441, -124.807, 24.5712, 1.18", "35.1592, -125.318, 24.6015, 1.4", "35.3844, -125.677, 24.6167, 1.4", "36.1935, -126.917, 24.6711, 0.44", "36.6091, -127.483, 24.7455, 0.44", "37.5772, -128.521, 25.0585, 0.96", "37.9723, -128.899, 25.2127, 1.33", "38.0432, -128.968, 25.2435, 1.33", "38.4195, -129.384, 25.4222, 1.33", "39.2853, -130.514, 25.9317, 0.59", "39.8265, -131.378, 26.2499, 0.59", "40.3234, -132.283, 26.4926, 0.59", "40.7347, -133.101, 26.6976, 0.88", "41.2399, -134.172, 26.9352, 0.88", "41.5782, -134.99, 27.0789, 0.37", "41.6046, -135.061, 27.0862, 0.37", "42.0372, -136.187, 27.1996, 0.37", "42.0699, -136.255, 27.2108, 0.37", "42.3132, -136.68, 27.2856, 0.88", "42.6339, -137.167, 27.3677, 0.88", "43.279, -138.161, 27.4967, 0.52", "43.6838, -138.877, 27.5975, 0.96", "44.0709, -139.824, 27.748, 0.81" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-29.4931, 4.22663, 7.53152, 0.29", "-37.432, 4.25586, 1.45097, 0.29", "-45.7821, 3.50936, -3.99502, 0.29", "-53.575, 1.10999, -9.73015, 0.29", "-60.889, -0.852347, -16.2293, 0.29", "-68.517, -2.50976, -22.4557, 0.29", "-76.2724, -5.66054, -27.8273, 0.29", "-83.5433, -9.76288, -33.1646, 0.29", "-91.9426, -12.3815, -37.8394, 0.29", "-100.699, -15.2097, -41.6413, 0.29", "-109.215, -17.4603, -46.3179, 0.29", "-117.314, -20.0081, -51.5351, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-29.4931, 4.22663, 7.53152, 0.81", "-37.705, 2.21706, 2.23152, 0.29", "-45.7125, -0.854755, -2.81073, 0.29", "-52.9252, -4.58259, -8.51849, 0.29", "-60.498, -7.26388, -14.408, 0.29", "-67.9195, -8.14649, -21.0457, 0.29", "-74.6692, -10.4766, -28.0046, 0.29", "-79.9533, -13.129, -36.0222, 0.29", "-83.4757, -15.7391, -44.9689, 0.29", "-86.4428, -17.0294, -54.4215, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-23.4514, 31.1036, 42.3217, 0.29", "-24.1167, 40.0458, 45.6315, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-23.4514, 31.1036, 42.3217, 0.81", "-31.0368, 33.1582, 48.4685, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.39257, 57.6312, -95.1359, 0.29", "4.72781, 58.5914, -96.2225, 0.29", "4.73636, 58.6346, -96.275, 0.29", "4.79172, 59.0485, -96.7908, 0.29", "4.81764, 60.1086, -98.1482, 0.96", "4.64329, 61.7144, -100.576, 0.29", "4.51072, 62.4443, -101.723, 0.29", "4.23266, 63.4518, -103.387, 0.37", "4.2191, 63.4865, -103.446, 0.37", "3.74134, 64.3232, -104.903, 0.37", "2.26587, 66.1427, -108.14, 0.29", "1.94262, 66.451, -108.657, 0.44", "1.65492, 66.7144, -109.008, 0.22", "1.16062, 67.2003, -109.448, 0.22", "0.214096, 68.1803, -109.969, 0.44", "-0.951988, 69.4007, -110.164, 0.44", "-1.97788, 70.4642, -110.074, 0.29", "-4.52109, 73.0627, -109.776, 0.29", "-5.0052, 73.531, -109.705, 0.66", "-5.55971, 74.0201, -109.589, 0.66", "-6.84507, 75.0463, -109.179, 0.22", "-7.60951, 75.5775, -108.912, 0.22", "-7.78934, 75.6836, -108.848, 0.22", "-8.89952, 76.1648, -108.539, 0.22", "-9.65152, 76.4689, -108.259, 0.81", "-10.6468, 76.857, -107.801, 0.44", "-11.5162, 77.1925, -107.348, 0.44", "-13.0793, 77.7455, -106.492, 0.29", "-13.1468, 77.7692, -106.456, 0.29", "-14.6248, 78.2949, -105.699, 0.29", "-14.6858, 78.3166, -105.672, 0.29", "-16.0517, 78.7738, -105.166, 0.29", "-18.1459, 79.4462, -104.504, 0.29", "-19.0615, 79.7456, -104.292, 0.29", "-19.7676, 79.9729, -104.141, 0.81", "-20.5126, 80.2061, -103.993, 0.81", "-21.4666, 80.5058, -103.891, 0.29", "-21.6322, 80.5593, -103.892, 0.29", "-22.6796, 80.9033, -104.071, 0.29", "-23.5223, 81.1501, -104.258, 0.29", "-23.6555, 81.18, -104.289, 0.29", "-25.165, 81.3202, -104.801, 0.74", "-25.2306, 81.32, -104.827, 0.74", "-25.7569, 81.2845, -105.048, 0.52", "-25.8118, 81.2753, -105.07, 0.52", "-26.87, 81.0472, -105.533, 0.52", "-28.6727, 80.7106, -106.298, 0.52", "-29.2762, 80.611, -106.567, 0.96", "-30.2757, 80.4849, -107.014, 0.96", "-31.7235, 80.3656, -107.638, 0.44", "-33.0384, 80.3102, -108.172, 0.29", "-34.3979, 80.3467, -108.771, 0.29", "-36.1987, 80.6013, -109.561, 0.29", "-37.2588, 80.8333, -110.061, 0.29", "-38.2182, 81.1156, -110.562, 0.29", "-38.7146, 81.2891, -110.827, 0.29", "-40.216, 81.831, -111.579, 0.29", "-41.3918, 82.2453, -112.189, 0.96", "-42.0611, 82.521, -112.523, 0.96", "-43.6534, 83.2245, -113.397, 0.29", "-44.2582, 83.4912, -113.724, 0.29", "-44.5605, 83.6209, -113.869, 0.66", "-44.6537, 83.6565, -113.904, 0.66", "-45.2965, 83.9136, -114.17, 0.66", "-46.3958, 84.4615, -114.618, 0.37", "-47.0394, 84.8322, -114.85, 0.37", "-47.3149, 85.0008, -114.947, 0.81", "-47.7804, 85.263, -115.132, 0.81", "-49.0779, 85.9377, -115.727, 0.29", "-49.9142, 86.3432, -116.147, 0.29", "-50.5124, 86.6027, -116.45, 0.66", "-51.0726, 86.8145, -116.762, 0.66", "-52.6864, 87.3428, -117.726, 0.44", "-53.4325, 87.5183, -118.133, 0.81", "-53.4959, 87.5283, -118.163, 0.81", "-54.1651, 87.6223, -118.467, 0.81", "-55.3556, 87.7841, -118.979, 0.37", "-56.3087, 87.9386, -119.362, 0.37", "-58.0454, 88.2406, -120.02, 0.37", "-58.957, 88.3912, -120.352, 0.74", "-60.0576, 88.5523, -120.784, 0.52", "-60.1489, 88.5655, -120.82, 0.52", "-61.7441, 88.7884, -121.416, 0.52", "-62.9709, 88.9601, -121.873, 1.11", "-64.5512, 89.2289, -122.471, 0.74", "-66.3655, 89.5606, -123.094, 0.74", "-67.9568, 89.8565, -123.555, 0.37", "-68.3895, 89.9393, -123.659, 0.29", "-68.6905, 90.0008, -123.712, 0.29", "-69.9527, 90.2982, -123.86, 0.29", "-70.3662, 90.3853, -123.892, 0.52", "-70.7256, 90.4282, -123.892, 0.52", "-71.9123, 90.4595, -123.967, 0.29", "-72.0513, 90.4581, -123.984, 0.29", "-72.5747, 90.4408, -124.089, 0.37", "-73.4365, 90.3875, -124.322, 0.22", "-74.3107, 90.3641, -124.598, 0.22", "-75.4096, 90.3844, -124.975, 0.22", "-76.5547, 90.4612, -125.403, 0.22", "-77.1888, 90.5091, -125.616, 0.96", "-77.2546, 90.5164, -125.638, 0.96", "-77.975, 90.6164, -125.886, 0.96", "-78.6771, 90.7081, -126.105, 0.96", "-79.9907, 90.792, -126.391, 0.96", "-81.5228, 90.8347, -126.677, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "4.39257, 57.6312, -95.1359, 0.29", "3.92588, 58.1809, -95.7566, 0.29", "3.54326, 58.6154, -96.3336, 0.29", "3.51286, 58.6531, -96.3826, 0.29", "3.03181, 59.2507, -97.157, 0.96", "2.66052, 59.7119, -97.7548, 0.96", "1.29479, 61.4084, -99.9537, 0.29", "1.23841, 61.4893, -100.064, 0.29", "0.584157, 62.4367, -101.513, 0.29" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-39.5538, 16.5735, -15.1443, 0.44", "-40.486, 17.6076, -15.1797, 0.44", "-40.8437, 17.9606, -15.2035, 0.66", "-40.8931, 18.0076, -15.2073, 0.66", "-41.7823, 18.8151, -15.1703, 0.66", "-41.8406, 18.8667, -15.1639, 0.66", "-42.4781, 19.472, -15.0188, 0.37", "-42.9792, 19.9402, -14.8473, 0.37", "-43.0322, 19.9933, -14.8234, 0.37", "-43.7245, 20.7577, -14.4491, 0.74", "-44.1234, 21.238, -14.2129, 0.74", "-44.7362, 21.9528, -13.8934, 0.29", "-45.1983, 22.4407, -13.7057, 0.29", "-45.2484, 22.4862, -13.6961, 0.29", "-45.7046, 22.8386, -13.7135, 0.29", "-46.3629, 23.2744, -13.8847, 0.74", "-46.9205, 23.6181, -14.0825, 0.74", "-47.5193, 23.9675, -14.3348, 0.29", "-47.7352, 24.1103, -14.4246, 0.29", "-48.2358, 24.5011, -14.6243, 0.29", "-48.2905, 24.5562, -14.631, 0.29", "-48.8308, 25.3573, -14.4518, 0.74", "-48.8559, 25.4158, -14.43, 0.74", "-49.0211, 25.9986, -14.1589, 0.88", "-49.0286, 26.0561, -14.123, 0.88", "-49.0529, 27.4908, -13.061, 0.66", "-49.0399, 28.1694, -12.5182, 0.29", "-49.0047, 28.6405, -12.0994, 0.29", "-48.9998, 28.7165, -12.0296, 0.29", "-48.9455, 29.6755, -11.1331, 0.29", "-48.9486, 29.8503, -10.9826, 0.29", "-49.021, 30.303, -10.6674, 0.29", "-49.0433, 30.3557, -10.631, 0.29", "-49.4871, 30.9858, -10.1991, 0.74", "-49.6397, 31.1564, -10.0939, 0.74", "-49.9632, 31.4603, -9.93281, 0.74", "-50.4296, 31.9352, -9.66767, 1.03", "-50.7021, 32.2496, -9.49969, 1.03", "-51.2424, 33.0092, -9.1481, 0.37", "-51.5012, 33.4592, -8.93589, 0.37", "-51.5264, 33.5155, -8.90839, 0.37", "-51.9041, 34.5269, -8.41823, 0.59", "-52.0991, 35.0134, -8.19578, 1.03", "-52.3801, 35.691, -7.86373, 1.03", "-52.7316, 36.515, -7.4501, 0.96", "-52.9776, 37.0549, -7.16967, 0.29", "-53.2349, 37.574, -6.87492, 0.29", "-53.8198, 38.5278, -6.25182, 0.29", "-54.4712, 39.3676, -5.6207, 0.74", "-54.5137, 39.4095, -5.58684, 0.74", "-55.1072, 39.9079, -5.19891, 1.18", "-55.8305, 40.4663, -4.71224, 1.18", "-56.7027, 41.1299, -4.11001, 0.59", "-57.3764, 41.6309, -3.67065, 0.52", "-58.2128, 42.2181, -3.10071, 0.52", "-58.7141, 42.5631, -2.72626, 0.52", "-59.8813, 43.3095, -1.72621, 0.96", "-59.9945, 43.3828, -1.61785, 0.96", "-60.3768, 43.6908, -1.09616, 1.18", "-61.328, 44.7168, 0.649783, 0.74", "-61.3523, 44.751, 0.704674, 0.74", "-61.7148, 45.3396, 1.60564, 0.74", "-61.7355, 45.379, 1.65812, 0.74", "-62.3949, 46.8446, 3.34186, 0.44", "-62.6246, 47.4518, 3.91032, 0.29", "-63.121, 48.7825, 4.93904, 0.29", "-63.1413, 48.8355, 4.97753, 0.29", "-63.4578, 49.6023, 5.53134, 0.29", "-63.6818, 50.0812, 5.89595, 0.74", "-64.0112, 50.6805, 6.34933, 0.74", "-64.8818, 52.0665, 7.54921, 0.44", "-64.9166, 52.1202, 7.5982, 0.44", "-65.4218, 52.9051, 8.34082, 0.37", "-65.4508, 52.949, 8.38465, 0.37", "-65.8986, 53.5943, 8.98033, 0.37", "-65.9628, 53.6919, 9.05129, 0.37", "-66.2637, 54.2386, 9.40953, 0.37", "-66.7576, 55.1926, 10.0491, 0.29", "-66.8563, 55.3916, 10.176, 0.29", "-67.2516, 56.179, 10.6989, 0.29", "-68.0674, 57.7123, 11.6952, 0.88", "-68.8667, 59.1657, 12.5993, 0.37", "-68.9334, 59.2786, 12.6628, 0.37", "-69.362, 59.9769, 13.0076, 0.37", "-69.4064, 60.0543, 13.0421, 0.37", "-70.1538, 61.4788, 13.5665, 0.37", "-70.1899, 61.5449, 13.5853, 0.37", "-70.7896, 62.6472, 13.8326, 0.37", "-71.718, 64.6095, 14.225, 0.96", "-72.0926, 65.5811, 14.3975, 0.29", "-72.4368, 66.7482, 14.5696, 0.29", "-72.5455, 67.2876, 14.6343, 1.03", "-72.6215, 67.8751, 14.6987, 0.52", "-72.667, 69.3404, 14.8248, 0.22", "-72.638, 70.1393, 14.8546, 0.22", "-72.5866, 71.1199, 14.8851, 1.03", "-72.5804, 71.1868, 14.8871, 1.03", "-72.4373, 72.3616, 14.9158, 0.29", "-72.43, 72.4372, 14.9184, 0.29", "-72.3342, 73.6882, 14.9909, 0.29", "-72.2536, 75.0094, 15.0873, 0.29", "-72.2497, 75.0782, 15.0927, 0.29", "-72.1994, 75.7142, 15.1464, 0.37", "-72.1334, 76.4201, 15.2005, 0.29", "-72.127, 76.5426, 15.2159, 0.29", "-72.1595, 77.3981, 15.3675, 0.29", "-72.1676, 77.4635, 15.3815, 0.29", "-72.3332, 78.4824, 15.5834, 0.59", "-72.4253, 79.0904, 15.6672, 0.59", "-72.5403, 80.2057, 15.7558, 0.29", "-72.6268, 81.2167, 15.79, 0.59", "-72.6318, 81.2831, 15.7892, 0.59", "-72.6744, 81.8607, 15.7665, 0.59", "-72.7952, 83.2964, 15.664, 0.29", "-72.8396, 83.8666, 15.6169, 1.03", "-72.847, 84.009, 15.5968, 1.03", "-72.8626, 84.4086, 15.5068, 1.03", "-72.8972, 85.1956, 15.2663, 0.96", "-72.9208, 86.0638, 14.9203, 0.96", "-72.9386, 87.0098, 14.5043, 0.96", "-72.9512, 87.7188, 14.1336, 0.96", "-72.9365, 88.8993, 13.4836, 0.29", "-72.8888, 90.081, 12.8006, 0.29", "-72.8225, 91.0588, 12.2344, 0.96", "-72.7481, 92.0209, 11.6478, 0.96", "-72.636, 93.4322, 10.7801, 0.22", "-72.5899, 94.4181, 10.228, 0.22", "-72.5896, 94.4777, 10.1954, 0.22", "-72.607, 95.417, 9.70853, 0.22", "-72.6274, 96.2584, 9.32248, 0.88", "-72.6272, 96.3292, 9.29358, 0.88", "-72.6093, 97.1339, 9.04553, 0.88", "-72.6181, 97.7216, 8.8728, 0.88", "-72.6441, 98.763, 8.60103, 0.59", "-72.7271, 99.6688, 8.41414, 0.52", "-72.8077, 100.175, 8.34916, 0.52", "-72.8646, 100.393, 8.32567, 0.52", "-73.0539, 100.867, 8.29057, 0.52", "-73.087, 100.925, 8.28834, 0.52", "-73.7459, 101.762, 8.23587, 0.52", "-73.8837, 101.906, 8.22552, 0.52", "-74.1662, 102.18, 8.20177, 0.52", "-74.2238, 102.236, 8.19614, 0.52", "-74.9231, 102.943, 8.10887, 0.81", "-74.9677, 102.994, 8.10157, 0.81", "-79.0686, 111.652, 8.44348, 0.81", "-81.6984, 120.619, 10.4431, 0.81", "-84.5159, 129.651, 11.7326, 0.81", "-88.1847, 138.487, 11.9195, 0.81", "-91.4494, 147.369, 13.305, 0.81", "-94.131, 155.951, 16.6531, 0.81", "-97.1777, 164.584, 19.5064, 0.81", "-98.9035, 173.411, 22.7749, 0.81", "-100.016, 182.754, 24.2019, 0.81", "-101.272, 192.179, 24.1929, 0.81", "-102.521, 201.601, 24.4781, 0.81" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-39.5538, 16.5735, -15.1443, 0.37", "-40.7847, 16.8704, -14.5645, 0.37", "-41.2227, 16.9666, -14.4175, 0.29", "-41.2906, 16.9793, -14.4033, 0.29", "-41.7428, 17.0582, -14.3257, 0.29", "-42.1322, 17.0998, -14.2715, 0.96", "-42.5022, 17.1162, -14.225, 0.96", "-43.0225, 17.0829, -14.2149, 0.96", "-44.0998, 16.7913, -14.1929, 0.29", "-44.1622, 16.7621, -14.185, 0.29", "-44.826, 16.3636, -13.9945, 0.29", "-45.1819, 16.1443, -13.8555, 0.52", "-45.7473, 15.7827, -13.5988, 0.52", "-46.3485, 15.3824, -13.2899, 0.29", "-47.2041, 14.7663, -12.8342, 0.52", "-47.8474, 14.3261, -12.5027, 0.44", "-48.6412, 13.8126, -12.1255, 0.44", "-49.0896, 13.5399, -11.9345, 0.44", "-49.1462, 13.5068, -11.9124, 0.44", "-49.9531, 13.0057, -11.6402, 0.44", "-50.008, 12.9666, -11.6262, 0.44", "-50.6379, 12.4691, -11.4577, 0.44", "-51.4015, 11.8381, -11.2156, 0.59", "-52.0505, 11.3075, -11.003, 0.96", "-52.4725, 10.9796, -10.9004, 1.25", "-52.8773, 10.6828, -10.8267, 1.25", "-53.7069, 10.095, -10.7356, 0.44", "-53.7646, 10.0561, -10.7348, 0.44", "-54.7053, 9.43392, -10.8296, 0.37", "-55.6836, 8.78436, -11.0085, 0.37", "-55.7404, 8.74637, -11.0169, 0.37", "-56.1851, 8.47198, -10.9826, 0.66", "-56.7269, 8.18061, -10.8412, 0.66", "-56.7858, 8.1512, -10.8195, 0.66", "-57.708, 7.72512, -10.4108, 0.44", "-59.1149, 7.10676, -9.73269, 0.44", "-61.4609, 6.15122, -8.67182, 0.66", "-62.7445, 5.63909, -8.12531, 0.44", "-62.8076, 5.61465, -8.09956, 0.44", "-63.738, 5.24814, -7.74969, 0.88", "-64.4613, 4.98733, -7.51814, 1.03", "-65.914, 4.49264, -7.20707, 0.66", "-66.903, 4.16748, -7.15031, 0.66", "-66.9798, 4.14428, -7.15031, 0.66", "-67.9034, 3.88992, -7.13445, 0.29", "-69.0328, 3.5793, -7.09686, 0.29", "-69.127, 3.55093, -7.09222, 0.29", "-69.9243, 3.24198, -6.98464, 0.29", "-71.0615, 2.65767, -6.75134, 0.29", "-71.6721, 2.25877, -6.59569, 0.74", "-72.1743, 1.85239, -6.44193, 1.03", "-72.5071, 1.50721, -6.30691, 1.03", "-73.547, 0.308176, -5.88727, 0.29", "-74.0461, -0.342957, -5.67854, 0.29", "-74.2937, -0.673589, -5.58018, 0.59", "-74.6527, -1.10494, -5.46216, 0.59", "-75.2211, -1.72594, -5.2708, 0.81", "-75.8123, -2.41375, -4.97141, 0.29", "-75.8644, -2.5125, -4.87459, 0.29", "-76.0397, -2.92322, -4.39702, 0.29", "-76.0532, -2.95911, -4.35242, 0.29", "-76.2711, -3.60435, -3.50967, 1.11", "-76.5949, -4.57082, -2.19934, 1.11", "-77.1852, -6.20647, 0.0340653, 0.29", "-77.5177, -7.04081, 1.14756, 0.29", "-77.724, -7.49108, 1.73663, 0.81", "-77.7454, -7.52661, 1.77836, 0.81", "-77.9657, -7.78981, 2.04821, 0.81", "-78.9756, -8.71435, 2.7971, 0.29", "-79.1328, -8.84452, 2.86992, 0.52", "-79.5016, -9.15522, 3.04037, 0.52", "-80.4521, -10.076, 3.53793, 0.29", "-80.9449, -10.599, 3.82141, 0.96", "-80.9917, -10.6538, 3.85102, 0.96", "-81.377, -11.0915, 4.12541, 1.11", "-81.4236, -11.141, 4.1643, 1.11", "-82.5328, -12.2377, 5.28354, 0.29", "-83.0096, -12.6646, 5.78477, 0.29", "-83.0516, -12.6989, 5.82753, 0.29", "-84.0052, -13.4019, 6.75534, 0.59", "-84.7718, -13.9102, 7.45146, 0.81", "-86.4037, -14.9587, 8.84118, 0.37", "-86.7948, -15.1964, 9.15263, 1.11", "-87.6494, -15.7247, 9.8085, 1.11", "-87.9633, -15.9252, 10.0353, 1.11", "-89.2253, -16.7875, 10.8448, 0.29", "-89.6369, -17.0772, 11.0704, 0.29", "-89.6891, -17.1136, 11.0988, 0.29", "-90.3265, -17.5488, 11.486, 0.29", "-90.6834, -17.7869, 11.7155, 0.66", "-91.0579, -18.0141, 11.9951, 0.66", "-91.1161, -18.0462, 12.0385, 0.66", "-92.5233, -18.7922, 13.0451, 0.37", "-93.1624, -19.1187, 13.5288, 0.37", "-93.2134, -19.145, 13.568, 0.37", "-94.0357, -19.5925, 14.6546, 0.29", "-94.4923, -19.8645, 15.391, 0.74", "-94.6693, -19.9736, 15.6936, 0.74", "-95.6198, -20.5919, 17.4786, 0.22", "-95.9934, -20.8514, 18.2721, 0.66", "-98.2221, -22.4402, 23.4978, 0.44", "-98.4146, -22.5833, 24.0352, 0.74", "-106.66, -26.2907, 28.1309, 0.74", "-114.893, -30.3195, 31.9054, 0.74" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "59.3799, -1.81756, -85.1695, 0.29", "62.2681, -1.90117, -90.5679, 0.29", "62.2993, -1.90071, -90.6192, 0.29", "62.7531, -1.8537, -91.4787, 0.29", "62.7853, -1.84939, -91.5407, 0.29", "63.6865, -1.75068, -93.0479, 0.96", "64.445, -1.68098, -94.2287, 0.96", "64.5847, -1.66876, -94.3984, 0.96", "67.6485, -1.58729, -97.9818, 0.37", "67.8442, -1.58894, -98.2094, 0.37", "69.2549, -1.65349, -99.7849, 0.37", "69.3537, -1.6629, -99.8836, 0.37", "70.0658, -1.76823, -100.472, 1.11", "70.9522, -1.92293, -101.052, 1.11", "73.1117, -2.42715, -101.863, 0.29", "73.1751, -2.443, -101.889, 0.29", "74.1562, -2.64103, -102.552, 0.29", "74.2106, -2.64884, -102.597, 0.29", "74.6162, -2.6728, -102.95, 0.81", "74.9252, -2.65065, -103.353, 0.81", "74.9887, -2.64131, -103.515, 0.81", "75.9362, -2.46402, -106.365, 0.59", "75.9651, -2.45754, -106.461, 0.59", "76.4086, -2.33111, -107.932, 0.52", "77.8045, -1.85408, -112.469, 0.52", "80.5516, -0.847466, -120.849, 0.22", "80.9875, -0.685443, -122.131, 0.52", "81.0106, -0.675876, -122.197, 0.52", "81.437, -0.472719, -123.402, 0.52", "82.1478, -0.080049, -125.385, 0.29", "83.2385, 0.539654, -128.009, 0.29", "83.2686, 0.556869, -128.07, 0.29", "84.6479, 1.20344, -130.957, 0.81", "84.8283, 1.27305, -131.352, 0.81", "84.8882, 1.28448, -131.489, 0.81", "87.2544, 1.59232, -137.17, 0.52", "87.4189, 1.60005, -137.579, 0.52", "88.0688, 1.56893, -139.154, 0.52", "88.0928, 1.56332, -139.209, 0.52", "89.8497, 1.05017, -143.132, 0.52" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "59.3799, -1.81756, -85.1695, 0.37", "59.7951, -0.812494, -86.0192, 0.37", "59.8156, -0.762917, -86.0612, 0.37", "60.1849, 0.130852, -86.8168, 0.52", "60.2346, 0.251254, -86.9186, 0.52", "60.7664, 1.53859, -88.0071, 0.74", "61.5372, 3.40434, -89.5845, 0.74" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "55.7949, 34.5774, -57.8572, 0.37", "56.8555, 35.4903, -59.0052, 0.37", "57.3256, 35.9236, -59.4698, 0.59", "58.6107, 37.1515, -60.7758, 0.37", "61.683, 40.1474, -63.9399, 0.29", "62.4224, 40.8778, -64.7056, 0.59", "63.3143, 41.7676, -65.6327, 0.37", "64.236, 42.7512, -66.5832, 0.66", "65.7999, 44.4215, -68.1702, 0.37", "65.8455, 44.4688, -68.2131, 0.37", "67.0967, 45.713, -69.3139, 0.37", "67.1387, 45.7522, -69.353, 0.37", "67.9705, 46.4774, -70.1744, 0.66", "69.5669, 47.7531, -71.6343, 0.44", "69.6109, 47.7872, -71.6752, 0.44", "69.8993, 48.018, -72.0274, 0.66", "70.0254, 48.1213, -72.2138, 0.66", "71.0895, 49.0216, -73.8801, 0.22", "71.8902, 49.7058, -75.1357, 0.22", "73.2579, 50.8849, -77.2233, 0.88", "74.6295, 52.0608, -79.3311, 0.88", "74.6589, 52.0856, -79.3765, 0.88", "75.629, 52.927, -80.8912, 0.29", "76.4906, 53.7258, -82.3143, 0.29", "76.5267, 53.7599, -82.376, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "55.7949, 34.5774, -57.8572, 0.52", "55.2948, 36.6096, -58.5586, 0.52", "55.2258, 36.9395, -58.668, 0.88", "55.2136, 37.0049, -58.6883, 0.88", "55.1571, 37.3198, -58.7826, 0.88", "54.9657, 38.4897, -59.1898, 0.37", "54.8626, 39.2689, -59.4962, 1.11", "54.7864, 39.8954, -59.7778, 1.33", "54.7501, 40.2695, -59.9731, 1.33", "54.7446, 40.353, -60.0183, 1.33", "54.7298, 41.7655, -60.8176, 0.29", "54.7721, 43.2433, -61.6746, 0.29", "54.7822, 43.4661, -61.8084, 0.66", "54.8526, 44.4647, -62.4789, 0.29", "54.9401, 45.2244, -63.0087, 0.59", "55.0485, 45.8657, -63.4616, 0.29", "55.0645, 45.9179, -63.5032, 0.29", "55.3203, 46.525, -64.0514, 0.29", "55.9335, 47.838, -65.255, 0.96", "56.097, 48.1927, -65.5774, 1.18", "56.1581, 48.3428, -65.7193, 1.18", "56.5125, 49.5455, -66.9198, 0.29", "56.5321, 49.6173, -66.9921, 0.29", "56.6585, 50.1098, -67.4938, 0.29", "56.8823, 50.9925, -68.3263, 1.25", "57.0132, 51.4192, -68.7405, 1.25", "57.5291, 53.0474, -70.2265, 0.37", "57.8248, 54.0092, -71.0194, 0.59", "57.843, 54.062, -71.0627, 0.59", "58.0356, 54.5937, -71.4882, 0.59", "58.4565, 55.694, -72.2986, 0.44", "58.7265, 56.4278, -72.8013, 0.44", "58.9381, 57.103, -73.1525, 0.66", "58.961, 57.1866, -73.1917, 0.66", "59.1505, 57.8952, -73.5032, 0.88", "59.1702, 57.9647, -73.5289, 0.88", "59.5992, 58.9941, -73.8692, 0.44", "60.1272, 59.8781, -74.1666, 0.44", "60.6186, 60.5871, -74.3936, 0.44", "60.6568, 60.6408, -74.4092, 0.44", "61.403, 61.6546, -74.6592, 1.62", "62.2332, 62.8096, -74.8864, 0.29", "62.7188, 63.5, -74.9787, 0.29", "62.8743, 63.7312, -75.0118, 0.29", "63.2947, 64.3735, -75.1042, 0.29", "63.9045, 65.3085, -75.1911, 0.59", "64.3289, 65.9729, -75.218, 0.29", "64.7296, 66.6832, -75.1897, 0.59", "65.1629, 67.4488, -75.1553, 0.29", "65.2396, 67.5782, -75.1481, 0.29", "66.1143, 68.9756, -75.0431, 0.44", "66.1441, 69.0248, -75.0378, 0.44", "67.03, 70.5863, -74.8013, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "11.5034, -124.001, 12.0202, 0.29", "10.4005, -125.193, 12.4301, 0.29", "10.1388, -125.476, 12.5273, 0.59", "10.0875, -125.531, 12.5464, 0.59", "9.62865, -126.027, 12.7169, 0.22", "9.4186, -126.254, 12.795, 0.66", "8.99459, -126.712, 12.9525, 0.66", "4.64587, -134.427, 16.8422, 0.66", "-0.531081, -140.976, 21.9099, 0.66", "-5.87451, -148.609, 24.5343, 0.66", "-11.5086, -155.546, 28.3996, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "11.5034, -124.001, 12.0202, 0.29", "10.9871, -125.547, 12.8234, 0.29", "10.9413, -125.675, 12.8687, 0.29", "10.874, -126.044, 13.0667, 0.29", "10.8688, -126.123, 13.1324, 0.29", "10.8517, -127.007, 14.0568, 0.59", "10.8236, -127.573, 14.6519, 0.59", "10.7882, -128.122, 15.2194, 0.37", "10.7432, -129.393, 16.5733, 0.59", "10.8272, -130.42, 17.7239, 0.88", "11.0685, -131.419, 18.9537, 0.37", "11.343, -132.02, 19.7495, 0.37", "11.5122, -132.309, 20.1416, 0.37", "11.5471, -132.359, 20.2086, 0.37", "12.2758, -133.361, 21.4791, 0.74", "13.0879, -134.381, 22.7498, 0.66", "13.6307, -134.987, 23.555, 0.29", "13.7069, -135.069, 23.68, 0.29", "13.8898, -135.28, 24.0402, 0.29", "14.5779, -136.083, 25.4367, 0.74", "14.6596, -136.19, 25.6291, 0.74", "14.8043, -136.391, 25.9883, 0.74", "15.5548, -137.466, 27.9859, 0.29", "16.0302, -138.123, 29.2147, 0.74", "16.3689, -138.565, 30.0372, 0.66", "17.4469, -139.74, 32.1496, 0.37", "20.7055, -145.857, 39.0714, 0.37", "24.6755, -151.46, 46.1038, 0.37", "26.6371, -156.834, 54.1139, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-30.0312, -34.7106, -1.46242, 0.29", "-30.8713, -34.0603, -0.201815, 0.29", "-31.3583, -33.6379, 0.499298, 0.44", "-32.2881, -32.79, 1.70031, 0.37", "-32.8359, -32.3378, 2.32568, 0.37", "-34.1147, -31.3462, 3.67529, 0.74", "-34.5219, -31.0533, 4.07242, 0.29", "-34.9962, -30.7072, 4.47776, 0.29", "-35.6149, -30.2336, 4.99874, 0.29", "-36.2966, -29.715, 5.47261, 0.29", "-36.3434, -29.6843, 5.51332, 0.29", "-36.6672, -29.5387, 5.79149, 0.29", "-37.535, -29.2252, 6.9616, 0.59", "-37.5635, -29.2147, 7.02536, 0.59", "-37.8088, -29.1234, 7.63263, 0.59", "-38.7339, -28.7963, 9.83937, 0.52", "-39.1512, -28.6867, 10.7422, 0.52", "-40.1531, -28.4878, 12.6607, 0.88", "-41.6947, -28.246, 15.2052, 0.88", "-42.6122, -28.1077, 16.5425, 0.52", "-43.17, -28.0228, 17.2492, 0.44", "-44.214, -27.796, 18.3388, 0.44", "-44.9916, -27.5452, 19.0261, 0.74", "-45.7464, -27.2465, 19.4796, 1.11", "-46.6631, -26.8378, 19.8485, 0.81", "-47.119, -26.6129, 20.068, 0.29", "-47.8131, -26.267, 20.4681, 0.29", "-48.3057, -26.0233, 20.7709, 0.66", "-48.786, -25.8136, 21.1067, 1.03", "-48.8411, -25.7918, 21.1446, 1.03", "-50.8236, -24.9644, 22.3284, 0.37", "-51.3433, -24.7671, 22.6297, 0.37", "-52.1973, -24.5048, 23.0735, 0.59", "-52.6169, -24.391, 23.305, 0.59", "-53.3848, -24.1875, 23.7203, 0.29", "-54.1217, -24.0033, 24.0806, 0.29", "-54.4491, -23.9163, 24.2153, 0.59", "-55.2046, -23.7865, 24.5515, 0.88", "-56.6054, -23.696, 25.1761, 1.03", "-56.8836, -23.6951, 25.2978, 1.03", "-58.2834, -23.7306, 25.8824, 0.29", "-58.3392, -23.7317, 25.9044, 0.29", "-59.1006, -23.6716, 26.2027, 0.81", "-59.7151, -23.5311, 26.4827, 0.81", "-59.7754, -23.5082, 26.5088, 0.81", "-60.2744, -23.2879, 26.8025, 0.81", "-60.3209, -23.2665, 26.8329, 0.81", "-61.4998, -22.7281, 27.6165, 0.37", "-62.5877, -22.2387, 28.3453, 0.37", "-63.6637, -21.7832, 29.0355, 0.37", "-65.0531, -21.2158, 29.8313, 0.37", "-65.8796, -20.9118, 30.2317, 0.37", "-66.4704, -20.7191, 30.457, 0.74", "-66.9621, -20.5968, 30.5737, 0.96", "-67.5692, -20.5072, 30.642, 0.96", "-68.4269, -20.4596, 30.7027, 0.29", "-69.3887, -20.4496, 30.7121, 0.29", "-69.707, -20.465, 30.7266, 0.88", "-70.3101, -20.5213, 30.7692, 1.03", "-71.112, -20.616, 30.8409, 1.03", "-72.2149, -20.7883, 30.9187, 0.44", "-73.075, -20.9825, 30.9723, 0.44", "-73.9984, -21.2409, 31.0076, 0.44", "-74.5592, -21.4192, 31.0135, 0.96", "-75.3257, -21.6923, 30.9942, 0.96", "-76.4218, -22.1106, 30.9119, 0.29", "-77.2171, -22.4485, 30.7874, 0.29", "-77.6804, -22.6385, 30.7112, 0.29", "-78.0169, -22.76, 30.6571, 0.29", "-78.308, -22.8208, 30.6214, 0.74", "-79.1075, -22.7716, 30.6316, 1.03", "-79.5206, -22.6828, 30.677, 1.03", "-80.3718, -22.5279, 30.7682, 0.37", "-80.4311, -22.5218, 30.7741, 0.37", "-80.9434, -22.5078, 30.8218, 0.37", "-82.0477, -22.6348, 30.9451, 0.29", "-82.6137, -22.7564, 31.0637, 0.74", "-83.9487, -23.1027, 31.4184, 0.29", "-85.061, -23.4279, 31.7427, 0.29", "-85.5387, -23.572, 31.8875, 0.81", "-87.3596, -24.1319, 32.5375, 0.29", "-88.8251, -24.5272, 33.2081, 0.59", "-89.2532, -24.6095, 33.4469, 0.88", "-89.8709, -24.6795, 33.8521, 0.88", "-90.286, -24.7113, 34.1649, 0.88", "-91.5635, -24.7596, 35.1631, 0.88", "-92.5287, -24.75, 36.1855, 0.37", "-92.9194, -24.7577, 36.6685, 0.37", "-93.209, -24.775, 37.1356, 0.81", "-93.8591, -24.8231, 38.2957, 0.44", "-94.1849, -24.8389, 38.8931, 0.44", "-95.9767, -24.8557, 41.9995, 0.44", "-96.0095, -24.8571, 42.0497, 0.44", "-97.5903, -24.9121, 44.2626, 1.18", "-98.1134, -24.9052, 44.987, 1.55", "-98.6727, -24.8667, 45.7025, 0.81", "-99.47, -24.8095, 46.597, 0.22", "-100.747, -24.7187, 47.3211, 0.66", "-101.087, -24.698, 47.4666, 0.81", "-109.069, -22.9149, 53.1905, 0.81" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-30.0312, -34.7106, -1.46242, 0.74", "-30.2549, -35.6343, -1.68391, 0.74", "-30.3478, -35.8929, -1.69548, 0.37", "-30.3741, -35.9553, -1.6942, 0.37", "-30.743, -36.7881, -1.65759, 0.37", "-30.986, -37.3422, -1.62745, 1.03", "-31.1685, -37.7575, -1.60272, 1.03", "-31.5686, -38.6766, -1.48137, 0.52", "-31.7943, -39.229, -1.50712, 0.52", "-31.8159, -39.2905, -1.52301, 0.52", "-31.9678, -39.8065, -1.77591, 0.52", "-31.9901, -39.8838, -1.82766, 0.52", "-32.1249, -40.3117, -2.18792, 0.96", "-32.7777, -41.7983, -3.73484, 0.74", "-33.0286, -42.2424, -4.20063, 0.29", "-33.0602, -42.2858, -4.24315, 0.29", "-33.5973, -42.8709, -4.78553, 0.29", "-33.7017, -42.9591, -4.84377, 0.29", "-34.6276, -43.5694, -5.05512, 0.29", "-35.124, -43.8641, -5.04133, 0.74", "-35.5659, -44.1377, -5.01585, 0.74", "-35.6209, -44.1786, -5.0114, 0.74", "-36.4471, -44.9401, -4.90548, 0.29", "-36.5487, -45.0443, -4.88969, 0.29", "-36.9183, -45.4539, -4.82096, 0.88", "-37.4163, -46.0109, -4.79611, 0.96", "-37.9176, -46.5798, -4.80694, 0.96", "-38.5226, -47.2855, -4.85853, 0.29", "-39.2299, -48.1322, -5.00533, 0.29", "-39.2915, -48.205, -5.01635, 0.29", "-40.1088, -49.1163, -5.14753, 0.74", "-40.2898, -49.3052, -5.17452, 0.74", "-40.6342, -49.6242, -5.23399, 0.74", "-41.4865, -50.395, -5.39902, 0.37", "-42.2792, -51.119, -5.53677, 0.74", "-42.4793, -51.3181, -5.55907, 0.74", "-42.5263, -51.3683, -5.56028, 0.74", "-43.2761, -52.1949, -5.55549, 0.29", "-43.7132, -52.7034, -5.54191, 0.29", "-43.7685, -52.7734, -5.53924, 0.29", "-44.4708, -53.8042, -5.52753, 0.29", "-44.506, -53.8624, -5.5239, 0.29", "-44.8109, -54.447, -5.46646, 0.81", "-45.0209, -54.9181, -5.41764, 0.96", "-45.0472, -54.9796, -5.4068, 0.96", "-45.6264, -56.231, -5.1516, 0.29", "-45.6566, -56.2916, -5.13356, 0.29", "-46.4387, -57.7841, -4.62087, 0.29", "-46.6496, -58.1564, -4.46148, 0.81", "-47.6827, -59.747, -3.5852, 0.22", "-48.3684, -60.6919, -2.5058, 0.22", "-48.9053, -61.3046, -1.1568, 0.22", "-48.923, -61.3135, -1.07933, 0.22", "-49.0325, -61.0513, 0.381066, 0.66", "-48.9783, -60.383, 2.08394, 1.33", "-48.4219, -57.3972, 7.30886, 0.44", "-48.2916, -56.8328, 8.15466, 0.29", "-47.785, -54.9304, 10.6873, 0.66", "-47.2464, -53.0096, 12.9519, 0.52", "-46.5528, -50.6745, 15.3792, 0.81", "-45.9381, -48.633, 17.2508, 0.29", "-45.9219, -48.5724, 17.2974, 0.29", "-45.4483, -46.7618, 18.62, 0.29", "-45.0574, -45.2488, 19.6121, 0.29", "-45.0398, -45.1717, 19.6536, 0.29", "-44.6935, -43.5449, 20.3252, 0.96", "-44.4105, -41.9759, 20.7994, 0.29", "-44.2622, -40.8117, 21.1814, 0.29", "-44.2513, -40.6747, 21.226, 0.29", "-44.1982, -39.8226, 21.5403, 0.29", "-44.1952, -39.7601, 21.5641, 0.29", "-44.1448, -37.9905, 22.2184, 0.66", "-43.9669, -34.7323, 23.6064, 0.52", "-43.9546, -34.6021, 23.6669, 0.52", "-43.838, -33.8539, 24.0549, 0.52", "-43.8115, -33.7226, 24.127, 0.52", "-43.3811, -32.0137, 25.163, 0.81", "-42.8388, -30.3148, 26.2342, 0.37", "-42.1956, -28.5699, 27.3591, 0.66", "-41.4655, -26.6779, 28.6262, 0.37", "-41.2691, -26.1839, 28.9777, 0.81", "-40.4139, -23.9626, 30.5616, 0.29", "-39.9565, -22.7705, 31.4112, 0.29", "-39.5376, -21.582, 32.1971, 1.18", "-39.2509, -20.8304, 32.6899, 0.52", "-38.7388, -19.5039, 33.5074, 0.52", "-38.2539, -18.3022, 34.2641, 0.29", "-37.9818, -17.6363, 34.6605, 0.29", "-37.964, -17.5947, 34.6976, 0.29", "-37.2269, -15.9766, 36.3843, 0.66", "-36.9869, -15.4691, 36.9496, 0.66", "-36.4285, -14.2553, 38.3139, 0.37", "-36.2397, -13.8327, 38.7981, 1.03", "-34.718, -9.77338, 43.1252, 0.29", "-34.6684, -9.60256, 43.2926, 0.29", "-34.4159, -8.36491, 44.3888, 0.66", "-34.1154, -6.24625, 46.1963, 0.29", "-34.1066, -6.13145, 46.2869, 0.29", "-34.091, -4.54979, 47.3893, 0.29", "-34.2116, -2.51082, 48.4562, 0.37", "-34.2455, -1.70968, 48.8744, 0.37", "-34.3064, -0.073754, 49.7406, 0.66", "-34.305, 0.012604, 49.7822, 0.66", "-34.11, 1.9156, 50.6295, 0.66", "-33.8343, 3.02808, 51.1755, 0.96", "-33.4402, 4.2759, 51.7322, 1.18", "-33.4117, 4.35293, 51.7655, 1.18", "-32.8713, 5.60125, 52.2479, 0.44", "-32.4722, 6.4672, 52.6041, 0.44", "-30.544, 10.1374, 54.3573, 0.66", "-29.1629, 14.4908, 63.1375, 0.66", "-29.472, 16.8224, 72.8267, 0.66", "-31.1504, 17.9177, 82.6172, 0.66", "-31.549, 18.4834, 92.5915, 0.66", "-31.6244, 18.8429, 102.584, 0.66", "-31.5731, 20.2791, 112.469, 0.66", "-31.2559, 22.8148, 122.101, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-109.315, -32.8872, -48.1417, 0.29", "-109.536, -32.2621, -50.6538, 0.29", "-109.887, -31.2354, -55.0721, 0.74", "-109.999, -30.9082, -56.4802, 0.22", "-110.219, -30.2619, -59.2616, 1.03", "-110.813, -28.5236, -66.7419, 0.66", "-111.351, -26.9475, -73.5249, 0.66", "-111.357, -26.9336, -73.5931, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-109.315, -32.8872, -48.1417, 0.81", "-110.903, -31.7659, -48.871, 0.81", "-111.614, -31.3613, -49.1598, 0.81", "-112.604, -30.8882, -49.5452, 0.29", "-112.664, -30.8616, -49.5683, 0.29", "-113.593, -30.4988, -49.8963, 0.29", "-114.936, -29.9798, -50.3766, 0.52", "-115.874, -29.6648, -50.6447, 0.52", "-116.704, -29.4182, -50.9064, 0.29", "-116.775, -29.3986, -50.9353, 0.29", "-117.63, -29.154, -51.319, 0.29", "-118.21, -28.9696, -51.5892, 0.22", "-118.582, -28.8317, -51.7559, 0.59", "-119.121, -28.6172, -52.0452, 0.81", "-120.545, -28.0509, -52.8606, 0.29", "-120.614, -28.0239, -52.9145, 0.29", "-121.536, -27.6743, -53.7857, 0.29", "-121.582, -27.6601, -53.8363, 0.29", "-122.753, -27.431, -55.1197, 1.11", "-122.8, -27.4258, -55.1744, 1.11", "-124.378, -27.3645, -57.0021, 1.11", "-124.425, -27.365, -57.0547, 1.11", "-126.615, -27.4727, -59.6382, 0.37", "-127.735, -27.5472, -60.935, 0.66", "-128.861, -27.6595, -62.1818, 1.03", "-128.917, -27.6661, -62.2388, 1.03", "-129.594, -27.7756, -62.7951, 1.03" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-16.8764, -36.12, 38.386, 0.74", "-16.9814, -36.4454, 40.168, 0.74", "-16.7654, -37.2513, 44.0917, 0.66", "-16.7595, -37.2679, 44.16, 0.66", "-16.6068, -37.6657, 45.6975, 0.37", "-16.6012, -37.6853, 45.7642, 0.37", "-16.457, -38.325, 47.8031, 0.37", "-16.3591, -38.8674, 49.3252, 0.37", "-16.1756, -39.7533, 51.2978, 0.37", "-16.1696, -39.7778, 51.3516, 0.37", "-15.9814, -40.2943, 52.4181, 0.29", "-15.6161, -41.0889, 53.6619, 1.33", "-15.4648, -41.3767, 53.9636, 1.33", "-15.4308, -41.4283, 53.9982, 1.33", "-14.2131, -43.0465, 54.6569, 0.66", "-13.3531, -44.1908, 54.9793, 0.44", "-12.1808, -45.6679, 55.2291, 0.44", "-11.8581, -46.0732, 55.2632, 1.11", "-11.282, -46.7904, 55.3189, 1.11", "-10.4833, -47.8152, 55.3763, 0.74", "-9.80461, -48.7174, 55.3824, 0.59", "-8.99321, -49.8028, 55.4395, 0.52", "-8.8592, -49.9803, 55.46, 0.52", "-8.43166, -50.4855, 55.5272, 0.96", "-8.37572, -50.539, 55.5369, 0.96", "-7.56411, -51.0967, 55.7019, 1.25", "-7.50283, -51.1269, 55.7174, 1.25", "-3.5435, -56.9783, 62.5281, 1.25", "0.724565, -63.4667, 68.4557, 1.25", "6.03691, -70.2903, 72.9487, 1.25" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-16.8764, -36.12, 38.386, 1.69", "-18.0988, -36.1088, 38.5963, 1.69", "-18.912, -36.0579, 38.7173, 0.81", "-19.7326, -35.9527, 38.8238, 0.37", "-20.7256, -35.7319, 38.965, 0.37", "-21.3619, -35.5626, 39.0388, 0.74", "-21.8728, -35.4166, 39.0906, 0.88", "-22.2177, -35.3078, 39.0978, 0.88", "-22.7609, -35.1148, 39.1091, 0.88", "-23.701, -34.7793, 39.1266, 0.29", "-24.6001, -34.5429, 39.1017, 0.29", "-24.7487, -34.5235, 39.0915, 0.29", "-25.5661, -34.5281, 39.0048, 0.96", "-25.6354, -34.532, 38.9956, 0.96", "-26.3476, -34.591, 38.9578, 0.96", "-27.3649, -34.6964, 38.9855, 0.37", "-27.4411, -34.7032, 39.011, 0.37", "-28.0298, -34.7475, 39.3083, 0.37", "-28.8264, -34.7944, 39.8063, 0.37", "-30.0223, -34.8062, 40.606, 0.88", "-30.6941, -34.8055, 41.1128, 1.47", "-32.3938, -34.8712, 42.505, 0.29", "-32.4483, -34.8756, 42.5499, 0.29", "-32.8893, -34.9339, 42.9237, 0.29", "-33.5784, -35.0559, 43.4754, 0.29", "-34.6085, -35.2005, 44.1554, 0.29", "-35.3114, -35.2559, 44.667, 0.29", "-36.3354, -35.3403, 45.3662, 0.29", "-36.3838, -35.3466, 45.401, 0.88", "-36.9902, -35.447, 45.8456, 0.88", "-37.8221, -35.5615, 46.4463, 1.18", "-40.1828, -35.6743, 47.9232, 0.96", "-41.2676, -35.6647, 48.4727, 1.03", "-41.8229, -35.6433, 48.7042, 1.47", "-42.457, -35.593, 48.9161, 1.47", "-44.5199, -35.3994, 49.5325, 0.52", "-46.1168, -35.1954, 49.8803, 0.52", "-47.4267, -34.9197, 49.9659, 0.96", "-47.8123, -34.8081, 49.9873, 1.4", "-48.8793, -34.4595, 50.025, 1.4", "-57.6343, -33.3754, 54.7204, 1.4", "-65.2404, -32.4583, 61.1403, 1.4", "-71.4108, -30.9488, 68.8476, 1.4", "-77.2289, -28.2839, 76.4817, 1.4", "-81.9157, -24.8371, 84.5359, 1.4" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "44.0709, -139.824, 27.748, 0.44", "43.6189, -140.794, 27.9121, 0.44", "43.4278, -141.623, 28.025, 0.44", "43.4344, -141.689, 28.0258, 0.44", "43.6632, -142.505, 27.9831, 0.44", "43.8524, -143.22, 27.9307, 0.81", "44.0561, -144.019, 27.8635, 0.81", "44.0824, -144.089, 27.8495, 0.81", "44.4271, -144.948, 27.6524, 0.52", "44.5912, -145.378, 27.5429, 0.37", "44.786, -145.899, 27.4002, 0.37", "44.8045, -145.961, 27.3829, 0.37", "45.1211, -147.029, 27.1036, 0.66", "45.2784, -147.495, 26.9941, 1.25", "45.3067, -147.555, 26.9825, 1.25", "45.6407, -148.091, 26.8821, 1.25", "46.018, -148.637, 26.8145, 0.96", "46.3709, -149.142, 26.8302, 0.44", "46.4871, -149.317, 26.8637, 0.44", "46.9653, -150.255, 27.0867, 0.44", "46.9847, -150.307, 27.1017, 0.44", "47.2831, -151.388, 27.4547, 0.37", "47.4856, -152.308, 27.7704, 1.03", "47.6384, -153.082, 28.0719, 1.03", "47.865, -154.232, 28.5483, 0.52", "48.0677, -155.168, 29.0051, 0.37", "48.0849, -155.225, 29.0368, 0.37", "48.293, -155.656, 29.3037, 0.37", "48.7215, -156.294, 29.7342, 0.88", "48.9428, -156.515, 29.9289, 1.11", "49.9154, -157.16, 30.5649, 0.37", "49.9713, -157.193, 30.5914, 0.37", "50.6548, -157.638, 30.8589, 0.37", "50.715, -157.685, 30.8804, 0.37", "50.9567, -157.939, 30.9374, 0.37", "51.459, -158.766, 31.051, 0.29", "51.4716, -159.255, 31.1651, 0.29", "51.4119, -159.95, 31.4511, 0.29", "51.3543, -160.701, 31.9204, 0.59", "51.4013, -161.136, 32.2611, 0.59", "51.4266, -161.182, 32.3048, 0.59", "51.9994, -161.725, 32.9181, 0.44", "52.5748, -162.102, 33.3033, 0.44", "53.1871, -162.536, 33.6869, 1.03", "53.6025, -162.932, 34.0255, 1.03", "54.2103, -163.653, 34.6476, 0.29", "54.2435, -163.709, 34.6917, 0.29", "54.4977, -164.342, 35.1474, 0.29", "54.7527, -165.532, 36.0426, 0.66", "54.8945, -166.999, 37.1414, 0.37", "54.8987, -167.112, 37.234, 0.37", "54.8986, -167.709, 37.7311, 0.37", "54.9017, -167.795, 37.799, 0.37", "54.8929, -168.448, 38.2475, 1.03", "54.8911, -168.739, 38.4099, 1.03", "54.8201, -170.178, 39.0325, 1.03", "54.7349, -170.755, 39.2549, 0.44", "54.5301, -171.588, 39.5338, 0.44", "54.0298, -173.082, 39.8999, 0.44", "54.0026, -173.143, 39.9074, 0.44", "53.5668, -173.916, 39.94, 0.44", "53.4202, -174.13, 39.8969, 0.81", "53.3743, -174.192, 39.8758, 0.81", "52.9689, -174.731, 39.6412, 0.81", "52.6557, -175.208, 39.4187, 0.52", "52.6229, -175.263, 39.3942, 0.52", "51.7258, -177.016, 38.6474, 0.88", "51.2982, -178.051, 38.2658, 0.37", "51.2304, -178.281, 38.1983, 0.74", "51.157, -178.96, 38.0686, 0.44", "51.1681, -179.026, 38.0701, 0.44", "51.3368, -179.477, 38.1727, 0.44", "51.9468, -180.682, 38.6833, 0.29", "52.3186, -181.362, 39.0614, 1.18", "52.7366, -182.146, 39.5442, 1.18", "53.3591, -183.341, 40.3084, 0.37", "53.7149, -184.06, 40.7731, 0.74", "54.1339, -184.788, 41.2346, 0.96", "54.8113, -185.791, 41.8512, 0.37", "54.9555, -185.98, 41.9608, 0.37", "55.6539, -186.752, 42.3986, 0.37", "55.7215, -186.815, 42.4285, 0.37", "57.493, -188.199, 43.0651, 0.37", "57.6183, -188.286, 43.1013, 0.88", "57.6957, -188.34, 43.1259, 0.88", "58.7771, -189.236, 43.7109, 0.37", "58.8219, -189.285, 43.7527, 0.37", "59.0905, -189.722, 44.1407, 0.81", "59.1291, -189.838, 44.2474, 0.81", "59.3738, -190.63, 44.9217, 0.37", "59.6712, -191.621, 45.6607, 0.37", "59.6913, -191.676, 45.6948, 0.37", "60.0077, -192.347, 46.0368, 0.37", "60.0423, -192.412, 46.0615, 0.37", "60.3421, -192.956, 46.2108, 1.18", "60.6084, -193.425, 46.2892, 1.62", "61.346, -194.621, 46.4455, 0.37", "61.9518, -195.616, 46.5778, 0.37", "62.4977, -196.538, 46.7036, 0.37", "62.7945, -197.053, 46.7716, 1.25", "63.1722, -197.752, 46.8563, 1.47" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "44.0709, -139.824, 27.748, 0.37", "45.5158, -139.609, 28.3116, 0.37", "45.581, -139.594, 28.3337, 0.37", "46.6694, -139.297, 28.6747, 0.37", "48.0784, -138.829, 29.0602, 0.29", "48.6497, -138.621, 29.16, 0.29", "48.7228, -138.592, 29.1687, 0.29", "49.8223, -138.045, 29.1222, 0.29", "49.8925, -138.007, 29.1168, 0.29", "50.7804, -137.479, 28.9831, 0.44", "52.0545, -136.676, 28.6502, 0.81", "52.5929, -136.318, 28.4916, 1.47", "53.4199, -135.784, 28.2228, 0.96", "61.6586, -130.464, 27.351, 0.96", "70.1054, -125.453, 28.2605, 0.96", "77.9758, -120.016, 30.5651, 0.96", "86.2494, -115.409, 33.3991, 0.96", "94.0288, -111.151, 37.8022, 0.96", "101.018, -105.897, 42.3369, 0.96", "108.11, -101.637, 47.7776, 0.96", "114.421, -97.8541, 54.4349, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-102.521, 201.601, 24.4781, 0.44", "-104.999, 210.752, 25.5085, 0.44" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-102.521, 201.601, 24.4781, 0.37", "-105.922, 210.204, 27.0109, 0.44" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-129.594, -27.7756, -62.7951, 0.44", "-131.415, -27.873, -64.0456, 0.44", "-135.339, -28.0318, -66.6008, 0.44", "-138.275, -28.1028, -68.5839, 0.44", "-139.84, -28.1132, -69.6454, 0.37", "-140.277, -28.1106, -69.9444, 0.74", "-140.83, -28.1028, -70.3259, 0.44", "-141.323, -28.0723, -70.6511, 0.81", "-143.566, -27.8088, -71.8991, 0.29", "-144.025, -27.7281, -72.2668, 0.88", "-144.511, -27.6483, -72.6712, 0.88", "-144.554, -27.6415, -72.7122, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-129.594, -27.7756, -62.7951, 0.37", "-131.914, -26.4295, -67.8341, 0.37", "-133.129, -25.7311, -70.3555, 0.29", "-133.681, -25.4763, -71.3094, 0.29", "-134.646, -25.1062, -72.7334, 0.81", "-135.075, -24.9606, -73.3053, 0.81", "-136.406, -24.5742, -74.9466, 0.37", "-136.48, -24.561, -75.0108, 0.37", "-138.363, -24.366, -76.4478, 0.37", "-139.015, -24.3232, -76.9434, 0.74", "-139.073, -24.3206, -76.9834, 0.74", "-141.279, -24.2794, -78.5104, 0.29", "-142.092, -24.285, -79.0301, 0.96", "-142.652, -24.2816, -79.3985, 0.96", "-143.544, -24.243, -80.0728, 0.29", "-144.195, -24.2047, -80.5402, 0.29", "-144.255, -24.1989, -80.5766, 0.29", "-145.423, -24.0487, -81.0973, 0.29", "-145.487, -24.0395, -81.1235, 0.29", "-146.966, -23.7934, -81.7819, 0.29", "-147.482, -23.6904, -82.0249, 1.18", "-148.228, -23.4892, -82.44, 1.47", "-148.383, -23.4367, -82.5353, 1.47" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "63.1722, -197.752, 46.8563, 0.29", "63.2094, -198.984, 47.3639, 0.29", "63.2472, -199.904, 47.7474, 0.29", "63.2599, -199.997, 47.7865, 0.29", "63.423, -200.803, 48.1272, 0.29", "63.7846, -201.908, 48.7456, 0.29", "64.066, -202.625, 49.2044, 0.29", "64.0885, -202.678, 49.2562, 0.29", "64.312, -203.226, 49.8852, 0.29", "64.3318, -203.268, 49.9372, 0.29", "64.9365, -204.291, 51.487, 0.29", "64.9537, -204.322, 51.5344, 0.29", "65.2856, -205.057, 52.74, 0.66", "65.4193, -205.433, 53.3523, 0.29", "65.4269, -205.469, 53.4105, 0.29", "65.5421, -206.165, 54.514, 0.37", "65.5617, -206.526, 55.0653, 0.37", "66.1176, -214.382, 60.6607, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "63.1722, -197.752, 46.8563, 0.29", "63.9808, -197.24, 47.3965, 0.29", "64.7517, -196.751, 47.9115, 0.59", "65.0724, -196.548, 48.1257, 0.52", "65.6044, -196.211, 48.4811, 0.52", "73.1533, -192.568, 53.8019, 0.52", "81.8489, -190.351, 58.1536, 0.52", "90.8304, -189.162, 62.3687, 0.52", "99.9209, -187.45, 66.1255, 0.52" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "99.9209, -187.45, 66.1255, 0.29", "108.469, -185.064, 70.668, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "99.9209, -187.45, 66.1255, 0.81", "108.533, -185.013, 70.5143, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_63", "dend_44", "dend_31", "dend_0", "dend_75", "dend_64", "dend_56", "dend_45", "dend_35", "dend_32", "dend_22", "dend_1", "dend_77", "dend_76", "dend_72", "dend_65", "dend_58", "dend_57", "dend_53", "dend_46", "dend_43", "dend_36", "dend_34", "dend_33", "dend_28", "dend_23", "dend_13", "dend_2", "dend_74", "dend_73", "dend_69", "dend_66", "dend_60", "dend_59", "dend_55", "dend_54", "dend_48", "dend_47", "dend_40", "dend_37", "dend_30", "dend_29", "dend_27", "dend_24", "dend_19", "dend_14", "dend_10", "dend_3", "dend_71", "dend_70", "dend_68", "dend_67", "dend_62", "dend_61", "dend_50", "dend_49", "dend_42", "dend_41", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_18", "dend_15", "dend_12", "dend_11", "dend_5", "dend_4", "dend_52", "dend_51", "dend_17", "dend_16", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_63", "dend_44", "dend_31", "dend_0", "dend_75", "dend_64", "dend_56", "dend_45", "dend_35", "dend_32", "dend_22", "dend_1", "dend_77", "dend_76", "dend_72", "dend_65", "dend_58", "dend_57", "dend_53", "dend_46", "dend_43", "dend_36", "dend_34", "dend_33", "dend_28", "dend_23", "dend_13", "dend_2", "dend_74", "dend_73", "dend_69", "dend_66", "dend_60", "dend_59", "dend_55", "dend_54", "dend_48", "dend_47", "dend_40", "dend_37", "dend_30", "dend_29", "dend_27", "dend_24", "dend_19", "dend_14", "dend_10", "dend_3", "dend_71", "dend_70", "dend_68", "dend_67", "dend_62", "dend_61", "dend_50", "dend_49", "dend_42", "dend_41", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_18", "dend_15", "dend_12", "dend_11", "dend_5", "dend_4", "dend_52", "dend_51", "dend_17", "dend_16", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_44", "dend_44", "dend_44", "dend_31", "dend_31", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_64", "dend_64", "dend_64", "dend_64", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_67", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_52", "dend_51", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_8", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_DAC_8c45268d6a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_63, id: dend_63, parent: soma_0
create dend_63
public dend_63
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_63
create dend_75
public dend_75
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_56, id: dend_56, parent: dend_44
create dend_56
public dend_56
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_22, id: dend_22, parent: dend_0
create dend_22
public dend_22
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_64
create dend_72
public dend_72
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_45
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_22
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: dend_65
create dend_69
public dend_69
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_63, dend_44, dend_31, dend_0, dend_75, dend_64, dend_56, dend_45, dend_35, dend_32, dend_22, dend_1, dend_77, dend_76, dend_72, dend_65, dend_58, dend_57, dend_53, dend_46, dend_43, dend_36, dend_34, dend_33, dend_28, dend_23, dend_13, dend_2, dend_74, dend_73, dend_69, dend_66, dend_60, dend_59, dend_55, dend_54, dend_48, dend_47, dend_40, dend_37, dend_30, dend_29, dend_27, dend_24, dend_19, dend_14, dend_10, dend_3, dend_71, dend_70, dend_68, dend_67, dend_62, dend_61, dend_50, dend_49, dend_42, dend_41, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_18, dend_15, dend_12, dend_11, dend_5, dend_4, dend_52, dend_51, dend_17, dend_16, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_63, dend_44, dend_31, dend_0, dend_75, dend_64, dend_56, dend_45, dend_35, dend_32, dend_22, dend_1, dend_77, dend_76, dend_72, dend_65, dend_58, dend_57, dend_53, dend_46, dend_43, dend_36, dend_34, dend_33, dend_28, dend_23, dend_13, dend_2, dend_74, dend_73, dend_69, dend_66, dend_60, dend_59, dend_55, dend_54, dend_48, dend_47, dend_40, dend_37, dend_30, dend_29, dend_27, dend_24, dend_19, dend_14, dend_10, dend_3, dend_71, dend_70, dend_68, dend_67, dend_62, dend_61, dend_50, dend_49, dend_42, dend_41, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_18, dend_15, dend_12, dend_11, dend_5, dend_4, dend_52, dend_51, dend_17, dend_16, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_80
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_44, dend_44, dend_44, dend_31, dend_31, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_52, dend_51, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_8, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_63(0), soma_0(0.45000077288567597)
    connect dend_44(0), soma_0(0.45000077288567597)
    connect dend_31(0), soma_0(0.45000077288567597)
    connect dend_0(0), soma_0(0.45000077288567597)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_56(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_22(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_28(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_69(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.73016, -10.9301, -1.93856, 3.04713 ) }
    soma_0 { pt3dadd( -4.24552, -9.88098, -1.74479, 5.31027 ) }
    soma_0 { pt3dadd( -3.76088, -8.83186, -1.55102, 7.28311 ) }
    soma_0 { pt3dadd( -3.27625, -7.78275, -1.35725, 9.08311 ) }
    soma_0 { pt3dadd( -2.79161, -6.73364, -1.16348, 10.3755 ) }
    soma_0 { pt3dadd( -2.30697, -5.68453, -0.96971, 11.5047 ) }
    soma_0 { pt3dadd( -1.82233, -4.63542, -0.77594, 12.2657 ) }
    soma_0 { pt3dadd( -1.33769, -3.58631, -0.582171, 13.0864 ) }
    soma_0 { pt3dadd( -0.853053, -2.5372, -0.388401, 13.7392 ) }
    soma_0 { pt3dadd( -0.368414, -1.48809, -0.194632, 14.1497 ) }
    soma_0 { pt3dadd( 0.116224, -0.438978, -8.62676E-4, 14.5144 ) }
    soma_0 { pt3dadd( 0.600863, 0.610133, 0.192907, 14.5298 ) }
    soma_0 { pt3dadd( 1.0855, 1.65924, 0.386676, 14.3362 ) }
    soma_0 { pt3dadd( 1.57014, 2.70835, 0.580446, 13.8818 ) }
    soma_0 { pt3dadd( 2.05478, 3.75747, 0.774215, 13.0966 ) }
    soma_0 { pt3dadd( 2.53942, 4.80658, 0.967984, 12.2255 ) }
    soma_0 { pt3dadd( 3.02406, 5.85569, 1.16175, 10.8334 ) }
    soma_0 { pt3dadd( 3.50869, 6.9048, 1.35552, 9.30377 ) }
    soma_0 { pt3dadd( 3.99333, 7.95391, 1.54929, 7.17224 ) }
    soma_0 { pt3dadd( 4.47797, 9.00302, 1.74306, 4.91345 ) }
    soma_0 { pt3dadd( 4.96261, 10.0521, 1.93683, 2.80753 ) }
    // Section: dend_63, id: dend_63, parent: soma_0 (entry count 21/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 0.0121468, 4.80108, 10.756, 1.25 ) }
    dend_63 { pt3dadd( 0.220774, 5.54218, 10.756, 1.25 ) }
    dend_63 { pt3dadd( 0.610797, 6.6905, 10.756, 1.25 ) }
    dend_63 { pt3dadd( 1.06919, 7.91034, 10.756, 1.4 ) }
    dend_63 { pt3dadd( 1.0957, 7.97159, 10.7623, 1.4 ) }
    dend_63 { pt3dadd( 1.45237, 8.79565, 10.8475, 1.4 ) }
    dend_63 { pt3dadd( 1.47888, 8.8569, 10.8539, 1.4 ) }
    dend_63 { pt3dadd( 1.80864, 9.46609, 10.9442, 1.62 ) }
    dend_63 { pt3dadd( 1.87408, 9.55948, 10.9677, 1.62 ) }
    dend_63 { pt3dadd( 2.8112, 10.6608, 11.4306, 1.69 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 31/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -6.43785, 2.29308, -4.68402, 1.84 ) }
    dend_44 { pt3dadd( -6.7337, 2.72157, -5.21537, 1.84 ) }
    dend_44 { pt3dadd( -7.46613, 3.78236, -6.53082, 1.47 ) }
    dend_44 { pt3dadd( -7.97082, 4.51333, -7.43727, 1.69 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 35/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.40215, 7.57508, 0.875979, 3.98 ) }
    dend_31 { pt3dadd( 6.40215, 7.57508, 0.875979, 3.98 ) }
    dend_31 { pt3dadd( 6.80215, 8.01208, 0.875979, 3.98 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 38/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.17785, -11.026, -2.56402, 3.76 ) }
    dend_0 { pt3dadd( -3.17785, -11.026, -2.56402, 3.76 ) }
    dend_0 { pt3dadd( -3.67573, -12.573, -3.09289, 3.09 ) }
    dend_0 { pt3dadd( -4.11907, -13.8839, -3.54211, 3.02 ) }
    dend_0 { pt3dadd( -4.38925, -14.634, -3.81055, 3.02 ) }
    dend_0 { pt3dadd( -4.66053, -15.3872, -4.0801, 3.02 ) }
    dend_0 { pt3dadd( -5.18967, -16.8562, -4.60584, 2.95 ) }
    dend_0 { pt3dadd( -5.68784, -18.2073, -5.11118, 2.95 ) }
    dend_0 { pt3dadd( -6.07368, -19.1993, -5.52021, 2.95 ) }
    dend_0 { pt3dadd( -6.54196, -20.346, -5.98175, 2.95 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 48/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.96261, 10.0521, 1.93683, 0.973414 ) }
    axon_0 { pt3dadd( 11.2531, 23.6693, 1.93683, 0.973414 ) }
    axon_0 { pt3dadd( 17.5436, 37.2866, 1.93683, 0.973414 ) }
    // Section: dend_75, id: dend_75, parent: dend_63 (entry count 51/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 2.8112, 10.6608, 11.4306, 0.37 ) }
    dend_75 { pt3dadd( 3.08606, 11.2756, 11.2078, 0.37 ) }
    dend_75 { pt3dadd( 3.34906, 11.6894, 11.1675, 0.37 ) }
    dend_75 { pt3dadd( 3.39844, 11.7477, 11.1846, 0.37 ) }
    dend_75 { pt3dadd( 3.92388, 12.2404, 11.4542, 0.37 ) }
    dend_75 { pt3dadd( 4.70881, 12.8328, 11.8593, 0.66 ) }
    dend_75 { pt3dadd( 5.1757, 13.1593, 12.0857, 0.88 ) }
    dend_75 { pt3dadd( 6.23195, 13.8364, 12.5691, 0.88 ) }
    dend_75 { pt3dadd( 7.71271, 14.7032, 13.1895, 0.88 ) }
    dend_75 { pt3dadd( 8.78662, 15.2996, 13.5592, 0.44 ) }
    dend_75 { pt3dadd( 9.9132, 15.8835, 13.9559, 0.29 ) }
    dend_75 { pt3dadd( 10.8169, 16.3453, 14.2987, 0.66 ) }
    dend_75 { pt3dadd( 11.5174, 16.6941, 14.5301, 1.25 ) }
    dend_75 { pt3dadd( 12.2559, 17.0349, 14.6626, 1.55 ) }
    dend_75 { pt3dadd( 13.5578, 17.6363, 14.5996, 1.25 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 66/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 2.8112, 10.6608, 11.4306, 1.03 ) }
    dend_64 { pt3dadd( 2.16567, 11.4037, 15.5935, 1.03 ) }
    dend_64 { pt3dadd( 2.15178, 11.4197, 15.6831, 1.03 ) }
    dend_64 { pt3dadd( 1.88451, 11.7272, 17.4067, 1.03 ) }
    dend_64 { pt3dadd( 1.49178, 12.1792, 19.9394, 1.69 ) }
    // Section: dend_56, id: dend_56, parent: dend_44 (entry count 71/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -7.97082, 4.51333, -7.43727, 0.81 ) }
    dend_56 { pt3dadd( -8.70966, 7.48018, -17.84, 0.81 ) }
    dend_56 { pt3dadd( -8.87556, 7.96459, -19.4968, 0.81 ) }
    dend_56 { pt3dadd( -9.15432, 8.68906, -21.8001, 0.59 ) }
    dend_56 { pt3dadd( -9.29372, 9.04898, -22.8967, 0.59 ) }
    dend_56 { pt3dadd( -9.30117, 9.06623, -22.9534, 0.59 ) }
    dend_56 { pt3dadd( -9.44982, 9.39507, -24.0684, 0.59 ) }
    dend_56 { pt3dadd( -9.71556, 9.91984, -25.598, 0.81 ) }
    dend_56 { pt3dadd( -9.95867, 10.3911, -27.0696, 0.81 ) }
    dend_56 { pt3dadd( -10.1861, 10.9938, -29.0314, 1.03 ) }
    dend_56 { pt3dadd( -10.481, 12.7622, -34.4725, 0.52 ) }
    dend_56 { pt3dadd( -10.4821, 12.7886, -34.5475, 0.52 ) }
    dend_56 { pt3dadd( -10.4553, 13.1769, -35.5708, 0.52 ) }
    dend_56 { pt3dadd( -10.4504, 13.2136, -35.6618, 0.52 ) }
    dend_56 { pt3dadd( -10.3265, 13.9576, -37.3542, 0.52 ) }
    dend_56 { pt3dadd( -10.179, 14.6608, -38.6865, 1.4 ) }
    dend_56 { pt3dadd( -10.0753, 14.9807, -39.192, 1.4 ) }
    dend_56 { pt3dadd( -9.62963, 16.2024, -41.1033, 0.81 ) }
    dend_56 { pt3dadd( -9.20362, 17.3538, -42.9137, 0.66 ) }
    dend_56 { pt3dadd( -8.89142, 18.3523, -44.3614, 0.66 ) }
    dend_56 { pt3dadd( -8.81579, 18.7362, -44.8405, 0.44 ) }
    dend_56 { pt3dadd( -8.72254, 19.4292, -45.5642, 0.44 ) }
    dend_56 { pt3dadd( -8.65117, 20.1648, -46.1769, 0.44 ) }
    dend_56 { pt3dadd( -8.62182, 21.0528, -46.667, 1.25 ) }
    dend_56 { pt3dadd( -8.71831, 21.8379, -46.9595, 0.96 ) }
    dend_56 { pt3dadd( -9.03705, 22.9679, -47.3066, 0.66 ) }
    dend_56 { pt3dadd( -9.4117, 24.0064, -47.6546, 0.37 ) }
    dend_56 { pt3dadd( -9.74082, 24.8141, -47.9307, 0.37 ) }
    dend_56 { pt3dadd( -9.76662, 24.8826, -47.9537, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( -9.94355, 25.6124, -48.2305, 0.37 ) }
    dend_56 { pt3dadd( -9.94659, 25.673, -48.261, 0.37 ) }
    dend_56 { pt3dadd( -9.83906, 26.6499, -48.824, 0.88 ) }
    dend_56 { pt3dadd( -9.72404, 27.201, -49.1544, 1.25 ) }
    dend_56 { pt3dadd( -9.55472, 27.8706, -49.585, 1.25 ) }
    dend_56 { pt3dadd( -9.27399, 29.0443, -50.346, 0.37 ) }
    dend_56 { pt3dadd( -9.12355, 29.745, -50.8024, 0.37 ) }
    dend_56 { pt3dadd( -9.042, 30.3511, -51.1828, 0.37 ) }
    dend_56 { pt3dadd( -9.04236, 30.4099, -51.2169, 0.37 ) }
    dend_56 { pt3dadd( -9.11354, 30.7174, -51.3895, 0.88 ) }
    dend_56 { pt3dadd( -9.28262, 31.107, -51.5575, 1.18 ) }
    dend_56 { pt3dadd( -9.52224, 31.5697, -51.745, 1.18 ) }
    dend_56 { pt3dadd( -9.54716, 31.6176, -51.7681, 1.18 ) }
    dend_56 { pt3dadd( -9.61898, 31.7943, -51.8594, 1.18 ) }
    dend_56 { pt3dadd( -9.90255, 32.7921, -52.3631, 0.37 ) }
    dend_56 { pt3dadd( -9.977, 33.4664, -52.7253, 0.37 ) }
    dend_56 { pt3dadd( -9.9553, 34.6288, -53.3747, 0.37 ) }
    dend_56 { pt3dadd( -9.94699, 34.6875, -53.4065, 0.37 ) }
    dend_56 { pt3dadd( -9.75678, 35.4834, -53.8355, 0.81 ) }
    dend_56 { pt3dadd( -9.61707, 35.9164, -54.0553, 0.81 ) }
    dend_56 { pt3dadd( -9.24979, 36.8014, -54.5143, 0.37 ) }
    dend_56 { pt3dadd( -9.22258, 36.8553, -54.5465, 0.37 ) }
    dend_56 { pt3dadd( -8.90391, 37.4215, -55.0122, 0.37 ) }
    dend_56 { pt3dadd( -8.40415, 38.2939, -55.878, 1.03 ) }
    dend_56 { pt3dadd( -8.15091, 38.746, -56.3824, 1.47 ) }
    dend_56 { pt3dadd( -7.77262, 39.5072, -57.2924, 1.47 ) }
    dend_56 { pt3dadd( -7.32995, 40.3387, -58.4224, 0.74 ) }
    dend_56 { pt3dadd( -6.40973, 41.7031, -60.5156, 0.52 ) }
    dend_56 { pt3dadd( -6.38099, 41.7334, -60.5709, 0.52 ) }
    dend_56 { pt3dadd( -5.74283, 42.2796, -61.7145, 0.81 ) }
    dend_56 { pt3dadd( -4.83018, 42.9847, -63.3946, 1.03 ) }
    dend_56 { pt3dadd( -4.08998, 43.551, -64.768, 0.81 ) }
    dend_56 { pt3dadd( -3.26015, 44.1909, -66.3111, 0.44 ) }
    dend_56 { pt3dadd( -2.06058, 45.0298, -68.4026, 0.81 ) }
    dend_56 { pt3dadd( -1.31458, 45.5186, -69.702, 1.03 ) }
    dend_56 { pt3dadd( -0.21232, 46.1647, -71.5641, 0.52 ) }
    dend_56 { pt3dadd( 0.215649, 46.4202, -72.284, 0.52 ) }
    dend_56 { pt3dadd( 0.58021, 46.7062, -72.9396, 0.74 ) }
    dend_56 { pt3dadd( 1.20459, 47.2387, -74.2844, 0.44 ) }
    dend_56 { pt3dadd( 1.2302, 47.2589, -74.346, 0.44 ) }
    dend_56 { pt3dadd( 1.49472, 47.4226, -74.9483, 0.44 ) }
    dend_56 { pt3dadd( 2.12836, 47.7585, -76.3373, 0.44 ) }
    dend_56 { pt3dadd( 2.51374, 47.9443, -77.2237, 0.44 ) }
    dend_56 { pt3dadd( 3.87343, 48.6407, -80.6738, 0.88 ) }
    dend_56 { pt3dadd( 4.56086, 49.057, -82.6991, 1.33 ) }
    dend_56 { pt3dadd( 4.58473, 49.0711, -82.774, 1.33 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 46/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -7.97082, 4.51333, -7.43727, 1.62 ) }
    dend_45 { pt3dadd( -10.1608, 5.62315, -14.4153, 1.62 ) }
    dend_45 { pt3dadd( -10.6034, 5.77874, -15.1979, 1.62 ) }
    dend_45 { pt3dadd( -11.3704, 5.97685, -15.9353, 1.92 ) }
    dend_45 { pt3dadd( -11.4256, 5.9906, -15.9769, 1.92 ) }
    dend_45 { pt3dadd( -12.5055, 6.28154, -16.7776, 1.62 ) }
    dend_45 { pt3dadd( -13.6163, 6.63587, -17.5815, 1.47 ) }
    dend_45 { pt3dadd( -14.7791, 6.96588, -17.8973, 1.47 ) }
    dend_45 { pt3dadd( -15.9095, 7.2591, -18.2795, 1.25 ) }
    dend_45 { pt3dadd( -16.6569, 7.46674, -18.6089, 1.4 ) }
    dend_45 { pt3dadd( -17.8545, 7.83852, -19.2281, 1.55 ) }
    dend_45 { pt3dadd( -18.8248, 8.23178, -19.9474, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 6.80215, 8.01208, 0.875979, 1.18 ) }
    dend_35 { pt3dadd( 8.12184, 8.74909, 0.260793, 1.18 ) }
    dend_35 { pt3dadd( 9.11412, 9.23977, -0.273896, 1.11 ) }
    dend_35 { pt3dadd( 10.5773, 9.85684, -1.04622, 1.11 ) }
    dend_35 { pt3dadd( 10.6432, 9.87974, -1.08603, 1.11 ) }
    dend_35 { pt3dadd( 11.9303, 10.3272, -1.86428, 1.25 ) }
    dend_35 { pt3dadd( 13.2751, 10.7949, -2.67747, 1.25 ) }
    dend_35 { pt3dadd( 14.3905, 11.1356, -3.45994, 1.4 ) }
    dend_35 { pt3dadd( 15.2687, 11.3356, -4.12041, 1.4 ) }
    dend_35 { pt3dadd( 16.9058, 11.6017, -5.38401, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 68/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 6.80215, 8.01208, 0.875979, 1.47 ) }
    dend_32 { pt3dadd( 6.68159, 9.3986, -0.112221, 1.47 ) }
    dend_32 { pt3dadd( 6.61344, 10.2118, -0.600473, 1.03 ) }
    dend_32 { pt3dadd( 6.49141, 11.6741, -1.39718, 0.74 ) }
    dend_32 { pt3dadd( 6.47935, 11.8042, -1.45714, 0.74 ) }
    dend_32 { pt3dadd( 6.3846, 12.7666, -1.8562, 0.74 ) }
    dend_32 { pt3dadd( 6.36715, 12.9644, -1.92776, 0.74 ) }
    dend_32 { pt3dadd( 6.31028, 13.9069, -2.16542, 0.74 ) }
    dend_32 { pt3dadd( 6.31012, 13.9756, -2.17386, 0.74 ) }
    dend_32 { pt3dadd( 6.46812, 15.0182, -2.22815, 0.74 ) }
    dend_32 { pt3dadd( 6.49467, 15.0919, -2.23657, 0.74 ) }
    dend_32 { pt3dadd( 6.98444, 15.7907, -2.38587, 0.66 ) }
    dend_32 { pt3dadd( 7.20095, 15.9649, -2.47819, 0.66 ) }
    dend_32 { pt3dadd( 7.92353, 16.2309, -2.79872, 1.03 ) }
    dend_32 { pt3dadd( 9.28128, 16.5819, -3.37593, 1.03 ) }
    dend_32 { pt3dadd( 9.75509, 16.6899, -3.56185, 1.4 ) }
    dend_32 { pt3dadd( 9.81932, 16.7066, -3.58565, 1.4 ) }
    dend_32 { pt3dadd( 11.0831, 17.0692, -4.02356, 1.18 ) }
    dend_32 { pt3dadd( 12.2981, 17.5593, -4.36999, 0.44 ) }
    dend_32 { pt3dadd( 13.0838, 18.0908, -4.51875, 0.44 ) }
    dend_32 { pt3dadd( 13.7219, 18.7771, -4.53995, 1.18 ) }
    dend_32 { pt3dadd( 14.0837, 19.2623, -4.51559, 1.18 ) }
    dend_32 { pt3dadd( 14.3749, 19.728, -4.45741, 0.88 ) }
    dend_32 { pt3dadd( 14.7942, 20.4844, -4.28893, 0.37 ) }
    dend_32 { pt3dadd( 15.2854, 21.3857, -4.05858, 0.37 ) }
    dend_32 { pt3dadd( 15.4696, 21.559, -3.98581, 0.37 ) }
    dend_32 { pt3dadd( 15.6856, 21.6289, -3.91916, 0.37 ) }
    dend_32 { pt3dadd( 15.8189, 21.6463, -3.88063, 0.37 ) }
    dend_32 { pt3dadd( 16.9395, 21.741, -3.49387, 0.37 ) }
    dend_32 { pt3dadd( 18.2032, 21.9115, -3.07653, 0.59 ) }
    dend_32 { pt3dadd( 19.0668, 22.078, -2.7785, 0.81 ) }
    dend_32 { pt3dadd( 19.1283, 22.1031, -2.75567, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( 19.5667, 22.5254, -2.60865, 0.81 ) }
    dend_32 { pt3dadd( 19.9999, 23.4795, -2.58649, 0.59 ) }
    dend_32 { pt3dadd( 20.2671, 24.6226, -2.69967, 0.59 ) }
    dend_32 { pt3dadd( 20.2762, 24.6878, -2.71038, 0.59 ) }
    dend_32 { pt3dadd( 20.3409, 25.3702, -2.87728, 0.59 ) }
    dend_32 { pt3dadd( 20.4499, 26.7733, -3.28758, 0.37 ) }
    dend_32 { pt3dadd( 20.5333, 28.0906, -3.73496, 0.81 ) }
    dend_32 { pt3dadd( 20.5846, 28.9477, -4.07148, 0.81 ) }
    dend_32 { pt3dadd( 20.5903, 29.0095, -4.09658, 0.81 ) }
    dend_32 { pt3dadd( 20.7128, 29.7961, -4.4719, 0.81 ) }
    dend_32 { pt3dadd( 20.7263, 29.8551, -4.50295, 0.81 ) }
    dend_32 { pt3dadd( 20.9763, 30.5892, -4.86563, 0.81 ) }
    dend_32 { pt3dadd( 20.9983, 30.6477, -4.89083, 0.81 ) }
    dend_32 { pt3dadd( 21.339, 31.5354, -5.23259, 0.96 ) }
    dend_32 { pt3dadd( 21.7786, 32.6439, -5.61302, 0.74 ) }
    dend_32 { pt3dadd( 22.1618, 33.5213, -5.86983, 0.37 ) }
    dend_32 { pt3dadd( 22.486, 34.2096, -6.09818, 0.29 ) }
    dend_32 { pt3dadd( 22.8449, 34.9225, -6.38426, 0.29 ) }
    dend_32 { pt3dadd( 23.0439, 35.3074, -6.56061, 0.88 ) }
    dend_32 { pt3dadd( 23.3777, 35.9894, -6.89146, 1.18 ) }
    dend_32 { pt3dadd( 23.6241, 36.4999, -7.16161, 1.18 ) }
    dend_32 { pt3dadd( 24.0207, 37.3397, -7.6985, 0.81 ) }
    dend_32 { pt3dadd( 24.4255, 38.2716, -8.36856, 0.52 ) }
    dend_32 { pt3dadd( 24.6493, 38.7793, -8.72748, 0.37 ) }
    dend_32 { pt3dadd( 24.848, 39.2629, -9.02822, 0.37 ) }
    dend_32 { pt3dadd( 24.8791, 39.3507, -9.07051, 0.37 ) }
    dend_32 { pt3dadd( 25.0679, 39.8912, -9.20329, 0.37 ) }
    dend_32 { pt3dadd( 25.0976, 39.9613, -9.19459, 0.37 ) }
    dend_32 { pt3dadd( 25.5109, 40.721, -8.92855, 0.88 ) }
    dend_32 { pt3dadd( 25.8219, 41.1663, -8.7672, 0.88 ) }
    dend_32 { pt3dadd( 25.8673, 41.229, -8.75792, 0.88 ) }
    dend_32 { pt3dadd( 26.2496, 41.8204, -8.88156, 0.29 ) }
    dend_32 { pt3dadd( 26.3489, 41.9915, -8.96027, 0.29 ) }
    dend_32 { pt3dadd( 26.6277, 42.5236, -9.24856, 0.29 ) }
    dend_32 { pt3dadd( 27.0136, 43.2942, -9.67301, 0.74 ) }
    dend_32 { pt3dadd( 27.5543, 44.3773, -10.2389, 1.11 ) }
    dend_32 { pt3dadd( 28.2391, 45.8699, -10.9743, 0.88 ) }
    dend_32 { pt3dadd( 28.6424, 46.8771, -11.4441, 0.29 ) }
    dend_32 { pt3dadd( 28.9328, 47.735, -11.7874, 0.66 ) }
    dend_32 { pt3dadd( 29.1448, 48.5544, -12.0498, 0.37 ) }
    dend_32 { pt3dadd( 29.2893, 49.2613, -12.2245, 0.29 ) }
    dend_32 { pt3dadd( 29.4411, 50.143, -12.2876, 0.29 ) }
    dend_32 { pt3dadd( 29.5065, 50.8108, -12.2019, 0.88 ) }
    dend_32 { pt3dadd( 29.4885, 51.5944, -12.0385, 1.18 ) }
    dend_32 { pt3dadd( 29.4064, 52.0668, -11.9507, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_0 (entry count 45/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -6.54196, -20.346, -5.98175, 1.4 ) }
    dend_22 { pt3dadd( -5.93994, -21.3375, -6.1623, 1.4 ) }
    dend_22 { pt3dadd( -5.54449, -21.9887, -6.2809, 1.18 ) }
    dend_22 { pt3dadd( -5.5099, -22.0457, -6.29127, 1.18 ) }
    dend_22 { pt3dadd( -4.7462, -23.3034, -6.52031, 1.18 ) }
    dend_22 { pt3dadd( -4.11501, -24.3429, -6.70961, 1.33 ) }
    dend_22 { pt3dadd( -3.77204, -24.9077, -6.81246, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 52/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.54196, -20.346, -5.98175, 1.55 ) }
    dend_1 { pt3dadd( -7.29445, -21.2459, -5.66322, 1.55 ) }
    dend_1 { pt3dadd( -8.23872, -22.3752, -5.2635, 1.55 ) }
    dend_1 { pt3dadd( -9.23659, -23.5685, -4.8411, 1.55 ) }
    dend_1 { pt3dadd( -10.4121, -24.9743, -4.34351, 1.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 57/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 17.5436, 37.2866, 1.93683, 0.339406 ) }
    axon_1 { pt3dadd( 23.8342, 50.9038, 1.93683, 0.339406 ) }
    axon_1 { pt3dadd( 30.1247, 64.5211, 1.93683, 0.339406 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 60/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 13.5578, 17.6363, 14.5996, 0.52 ) }
    dend_77 { pt3dadd( 14.0372, 18.2219, 13.8774, 0.52 ) }
    dend_77 { pt3dadd( 14.07, 18.2697, 13.8245, 0.52 ) }
    dend_77 { pt3dadd( 14.3654, 18.795, 13.3101, 0.52 ) }
    dend_77 { pt3dadd( 14.3875, 18.8441, 13.2684, 0.52 ) }
    dend_77 { pt3dadd( 14.8566, 20.2703, 12.2069, 0.44 ) }
    dend_77 { pt3dadd( 15.119, 21.3771, 11.4931, 0.37 ) }
    dend_77 { pt3dadd( 15.1261, 21.4452, 11.4582, 0.37 ) }
    dend_77 { pt3dadd( 15.1584, 21.9149, 11.2497, 0.74 ) }
    dend_77 { pt3dadd( 15.186, 22.5, 11.0163, 1.03 ) }
    dend_77 { pt3dadd( 15.243, 23.1147, 10.8183, 1.03 ) }
    dend_77 { pt3dadd( 15.3231, 23.7201, 10.6638, 0.44 ) }
    dend_77 { pt3dadd( 15.3325, 23.7838, 10.6459, 0.44 ) }
    dend_77 { pt3dadd( 15.4281, 24.6165, 10.3983, 0.44 ) }
    dend_77 { pt3dadd( 15.5222, 25.448, 10.1565, 0.88 ) }
    dend_77 { pt3dadd( 15.6404, 26.4762, 9.8611, 1.03 ) }
    dend_77 { pt3dadd( 15.766, 27.4984, 9.58099, 0.29 ) }
    dend_77 { pt3dadd( 15.8352, 28.1679, 9.40767, 0.74 ) }
    dend_77 { pt3dadd( 15.9577, 29.1296, 9.19179, 0.74 ) }
    dend_77 { pt3dadd( 16.1306, 30.2466, 8.92699, 0.37 ) }
    dend_77 { pt3dadd( 16.1549, 30.3563, 8.90316, 0.37 ) }
    dend_77 { pt3dadd( 16.3002, 30.8198, 8.79841, 0.81 ) }
    dend_77 { pt3dadd( 16.3352, 30.9108, 8.76838, 0.81 ) }
    dend_77 { pt3dadd( 16.8122, 31.9303, 8.04607, 1.18 ) }
    dend_77 { pt3dadd( 17.3816, 33.0226, 7.04258, 0.44 ) }
    dend_77 { pt3dadd( 17.8034, 33.7823, 6.26761, 1.03 ) }
    dend_77 { pt3dadd( 17.8279, 33.8261, 6.22099, 1.03 ) }
    dend_77 { pt3dadd( 18.4892, 35.058, 4.89844, 1.03 ) }
    dend_77 { pt3dadd( 19.6536, 37.1994, 2.51532, 0.66 ) }
    dend_77 { pt3dadd( 19.9833, 37.8082, 1.82409, 0.29 ) }
    dend_77 { pt3dadd( 20.5894, 38.8496, 0.647005, 0.29 ) }
    dend_77 { pt3dadd( 20.9155, 39.3876, 0.048729, 0.81 ) }
    dend_77 { pt3dadd( 21.2193, 39.9025, -0.456739, 1.11 ) }
    dend_77 { pt3dadd( 21.7994, 40.9078, -1.22512, 0.37 ) }
    dend_77 { pt3dadd( 22.0674, 41.4935, -1.50446, 0.37 ) }
    dend_77 { pt3dadd( 22.0941, 41.5751, -1.54579, 0.37 ) }
    dend_77 { pt3dadd( 22.1907, 42.0126, -1.75669, 0.96 ) }
    dend_77 { pt3dadd( 22.2973, 42.5808, -2.01754, 1.25 ) }
    dend_77 { pt3dadd( 22.3589, 42.8349, -2.14753, 1.25 ) }
    dend_77 { pt3dadd( 22.5752, 43.5617, -2.52691, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_77 { pt3dadd( 23.0233, 44.6578, -3.19766, 0.74 ) }
    dend_77 { pt3dadd( 23.5137, 45.5411, -3.78364, 0.29 ) }
    dend_77 { pt3dadd( 23.549, 45.5888, -3.81877, 0.29 ) }
    dend_77 { pt3dadd( 24.2269, 46.4106, -4.44343, 0.66 ) }
    dend_77 { pt3dadd( 24.4946, 46.7877, -4.67616, 0.29 ) }
    dend_77 { pt3dadd( 24.5273, 46.8423, -4.70113, 0.29 ) }
    dend_77 { pt3dadd( 24.715, 47.3972, -4.80889, 0.29 ) }
    dend_77 { pt3dadd( 24.7264, 47.462, -4.81986, 0.29 ) }
    dend_77 { pt3dadd( 24.8632, 48.4998, -4.98943, 0.29 ) }
    dend_77 { pt3dadd( 25.0172, 49.8714, -5.18545, 0.29 ) }
    dend_77 { pt3dadd( 25.0309, 49.9361, -5.19833, 0.29 ) }
    dend_77 { pt3dadd( 25.4603, 51.3838, -5.54222, 0.74 ) }
    dend_77 { pt3dadd( 25.6752, 51.9243, -5.68924, 1.18 ) }
    dend_77 { pt3dadd( 25.7748, 52.1386, -5.76524, 1.18 ) }
    dend_77 { pt3dadd( 26.2183, 52.9225, -6.1265, 1.18 ) }
    dend_77 { pt3dadd( 27.0428, 54.2597, -6.9125, 0.29 ) }
    dend_77 { pt3dadd( 27.0785, 54.318, -6.95439, 0.29 ) }
    dend_77 { pt3dadd( 27.2998, 54.6679, -7.24037, 0.59 ) }
    dend_77 { pt3dadd( 28.0523, 55.7682, -8.31359, 0.44 ) }
    dend_77 { pt3dadd( 28.4431, 56.3553, -9.00863, 0.44 ) }
    dend_77 { pt3dadd( 28.8025, 56.904, -9.70555, 0.37 ) }
    dend_77 { pt3dadd( 29.377, 57.8015, -10.9014, 0.74 ) }
    dend_77 { pt3dadd( 29.6624, 58.2347, -11.4963, 0.74 ) }
    dend_77 { pt3dadd( 30.8224, 59.8925, -13.8945, 0.29 ) }
    dend_77 { pt3dadd( 31.9508, 61.2664, -16.016, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 25/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 13.5578, 17.6363, 14.5996, 0.37 ) }
    dend_76 { pt3dadd( 12.7754, 18.9326, 14.5996, 0.37 ) }
    dend_76 { pt3dadd( 12.7419, 18.9918, 14.5996, 0.37 ) }
    dend_76 { pt3dadd( 12.515, 19.4823, 14.5996, 0.52 ) }
    dend_76 { pt3dadd( 12.2841, 20.1978, 14.5371, 0.37 ) }
    dend_76 { pt3dadd( 12.1068, 20.9011, 14.4561, 0.81 ) }
    dend_76 { pt3dadd( 11.9911, 21.4386, 14.3894, 0.81 ) }
    dend_76 { pt3dadd( 11.9689, 21.5785, 14.3689, 0.81 ) }
    dend_76 { pt3dadd( 11.8589, 22.4806, 14.2351, 1.18 ) }
    dend_76 { pt3dadd( 11.6979, 24.3289, 13.9636, 0.29 ) }
    dend_76 { pt3dadd( 11.6663, 24.7625, 13.9017, 0.74 ) }
    dend_76 { pt3dadd( 11.6132, 25.3924, 13.815, 0.37 ) }
    dend_76 { pt3dadd( 11.606, 25.4588, 13.8069, 0.37 ) }
    dend_76 { pt3dadd( 11.4934, 26.3017, 13.722, 0.44 ) }
    dend_76 { pt3dadd( 11.4169, 27.0813, 13.694, 0.96 ) }
    dend_76 { pt3dadd( 11.3854, 27.6541, 13.7207, 1.4 ) }
    dend_76 { pt3dadd( 11.3834, 27.7964, 13.7289, 1.4 ) }
    dend_76 { pt3dadd( 11.3806, 28.5526, 13.8179, 1.4 ) }
    dend_76 { pt3dadd( 11.3692, 28.8231, 13.8597, 1.4 ) }
    dend_76 { pt3dadd( 11.2277, 30.5111, 14.1808, 0.29 ) }
    dend_76 { pt3dadd( 11.2204, 30.5665, 14.1929, 0.29 ) }
    dend_76 { pt3dadd( 11.097, 31.0969, 14.3106, 0.59 ) }
    dend_76 { pt3dadd( 10.4761, 32.7005, 14.6658, 0.52 ) }
    dend_76 { pt3dadd( 10.0814, 33.3027, 14.7964, 0.44 ) }
    dend_76 { pt3dadd( 9.80431, 33.5735, 14.8238, 0.44 ) }
    dend_76 { pt3dadd( 9.74841, 33.6135, 14.821, 0.44 ) }
    dend_76 { pt3dadd( 9.00249, 34.1432, 14.7262, 0.29 ) }
    dend_76 { pt3dadd( 8.48884, 34.5241, 14.6172, 0.66 ) }
    dend_76 { pt3dadd( 7.96458, 34.9676, 14.4379, 0.66 ) }
    dend_76 { pt3dadd( 7.36497, 35.7673, 14.1419, 0.29 ) }
    dend_76 { pt3dadd( 6.96816, 36.5311, 13.824, 0.29 ) }
    dend_76 { pt3dadd( 6.74835, 37.0918, 13.559, 0.88 ) }
    dend_76 { pt3dadd( 6.55873, 37.7681, 13.2185, 1.11 ) }
    dend_76 { pt3dadd( 6.48653, 38.1397, 13.028, 1.11 ) }
    dend_76 { pt3dadd( 6.2419, 39.5012, 12.0571, 0.37 ) }
    dend_76 { pt3dadd( 5.99051, 40.5318, 11.0728, 0.37 ) }
    dend_76 { pt3dadd( 5.87241, 40.8769, 10.6496, 0.96 ) }
    dend_76 { pt3dadd( 5.85722, 40.9166, 10.5956, 0.96 ) }
    dend_76 { pt3dadd( 5.72868, 41.2553, 10.1152, 1.18 ) }
    dend_76 { pt3dadd( 5.17342, 42.9491, 7.68593, 0.59 ) }
    dend_76 { pt3dadd( 4.95899, 43.6421, 6.73621, 0.52 ) }
    dend_76 { pt3dadd( 4.80692, 44.1815, 6.06641, 0.74 ) }
    dend_76 { pt3dadd( 4.66163, 44.7829, 5.39877, 0.96 ) }
    dend_76 { pt3dadd( 4.55064, 45.3529, 4.83599, 0.96 ) }
    dend_76 { pt3dadd( 4.38554, 46.6209, 3.83514, 0.29 ) }
    dend_76 { pt3dadd( 4.3769, 47.4327, 3.41538, 0.29 ) }
    dend_76 { pt3dadd( 4.37924, 47.4933, 3.38659, 0.29 ) }
    dend_76 { pt3dadd( 4.38691, 48.2028, 3.0604, 0.74 ) }
    dend_76 { pt3dadd( 4.35203, 48.6428, 2.84779, 0.74 ) }
    dend_76 { pt3dadd( 4.22066, 49.4016, 2.49888, 0.88 ) }
    dend_76 { pt3dadd( 4.03618, 50.4779, 2.00062, 0.37 ) }
    dend_76 { pt3dadd( 4.02828, 50.5293, 1.97405, 0.37 ) }
    dend_76 { pt3dadd( 3.88555, 51.4536, 1.49498, 0.37 ) }
    dend_76 { pt3dadd( 3.72777, 52.5617, 0.937244, 1.11 ) }
    dend_76 { pt3dadd( 3.66634, 53.1367, 0.651567, 1.11 ) }
    dend_76 { pt3dadd( 3.60411, 54.3633, 0.09202, 0.44 ) }
    dend_76 { pt3dadd( 3.60445, 54.4256, 0.067684, 0.44 ) }
    dend_76 { pt3dadd( 3.73001, 55.2, -0.240689, 0.44 ) }
    dend_76 { pt3dadd( 3.92765, 55.7908, -0.476383, 1.18 ) }
    dend_76 { pt3dadd( 4.21531, 56.3115, -0.687048, 1.18 ) }
    dend_76 { pt3dadd( 4.6915, 56.9266, -0.956506, 1.18 ) }
    dend_76 { pt3dadd( 4.74419, 56.9798, -0.980787, 1.18 ) }
    dend_76 { pt3dadd( 5.87936, 58.0129, -1.5119, 0.44 ) }
    dend_76 { pt3dadd( 5.93038, 58.0521, -1.53632, 0.44 ) }
    dend_76 { pt3dadd( 6.77852, 58.6189, -1.95302, 0.44 ) }
    dend_76 { pt3dadd( 7.54851, 59.0717, -2.337, 0.66 ) }
    dend_76 { pt3dadd( 9.08678, 59.8771, -3.09129, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_64 (entry count 92/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 1.49178, 12.1792, 19.9394, 0.81 ) }
    dend_72 { pt3dadd( 2.2388, 12.842, 22.4556, 0.81 ) }
    dend_72 { pt3dadd( 2.2608, 12.8615, 22.5297, 0.81 ) }
    dend_72 { pt3dadd( 2.50035, 13.0741, 23.3366, 0.81 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 96/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 1.49178, 12.1792, 19.9394, 0.66 ) }
    dend_65 { pt3dadd( -0.695799, 10.8211, 20.8989, 0.66 ) }
    dend_65 { pt3dadd( -1.47129, 10.3359, 21.123, 0.52 ) }
    dend_65 { pt3dadd( -2.08207, 9.94674, 21.3533, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_65 { pt3dadd( -2.14669, 9.90864, 21.3781, 0.59 ) }
    dend_65 { pt3dadd( -3.16681, 9.30675, 21.769, 0.59 ) }
    dend_65 { pt3dadd( -4.31122, 8.6315, 22.2075, 0.59 ) }
    dend_65 { pt3dadd( -5.14295, 8.15612, 22.3949, 0.59 ) }
    dend_65 { pt3dadd( -6.56983, 7.40685, 22.7812, 0.59 ) }
    dend_65 { pt3dadd( -7.43005, 6.94456, 23.072, 0.59 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 6/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 4.58473, 49.0711, -82.774, 1.03 ) }
    dend_58 { pt3dadd( 5.42433, 49.2796, -84.3233, 1.03 ) }
    dend_58 { pt3dadd( 6.54635, 49.5584, -86.3936, 1.03 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 9/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 4.58473, 49.0711, -82.774, 0.37 ) }
    dend_57 { pt3dadd( 6.32041, 46.1934, -83.3366, 0.37 ) }
    dend_57 { pt3dadd( 6.61577, 45.5448, -83.3024, 0.81 ) }
    dend_57 { pt3dadd( 7.18067, 44.1418, -83.114, 0.29 ) }
    dend_57 { pt3dadd( 7.24025, 44.0013, -83.0899, 0.29 ) }
    dend_57 { pt3dadd( 7.75887, 42.8035, -82.8614, 0.29 ) }
    dend_57 { pt3dadd( 8.63645, 40.9051, -82.486, 0.29 ) }
    dend_57 { pt3dadd( 9.58158, 38.8494, -81.7704, 0.29 ) }
    dend_57 { pt3dadd( 9.61249, 38.7938, -81.7477, 0.29 ) }
    dend_57 { pt3dadd( 10.1716, 37.9255, -81.3112, 0.29 ) }
    dend_57 { pt3dadd( 10.2775, 37.759, -81.2301, 0.29 ) }
    dend_57 { pt3dadd( 10.822, 36.8957, -80.8062, 0.29 ) }
    dend_57 { pt3dadd( 10.8778, 36.8195, -80.7642, 0.29 ) }
    dend_57 { pt3dadd( 12.1616, 35.0644, -79.6937, 0.29 ) }
    dend_57 { pt3dadd( 13.2724, 33.4371, -78.6187, 0.29 ) }
    dend_57 { pt3dadd( 14.506, 31.3326, -77.3947, 0.29 ) }
    dend_57 { pt3dadd( 14.5349, 31.2786, -77.366, 0.29 ) }
    dend_57 { pt3dadd( 15.5764, 28.9772, -76.3924, 0.59 ) }
    dend_57 { pt3dadd( 16.3503, 26.5323, -75.7439, 0.29 ) }
    dend_57 { pt3dadd( 16.3659, 26.4655, -75.7336, 0.29 ) }
    dend_57 { pt3dadd( 16.8645, 23.2727, -75.5559, 0.29 ) }
    dend_57 { pt3dadd( 16.8683, 23.1962, -75.5575, 0.29 ) }
    dend_57 { pt3dadd( 16.7554, 20.9325, -76.0, 0.29 ) }
    dend_57 { pt3dadd( 16.2713, 18.7478, -77.0892, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_45 (entry count 33/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -18.8248, 8.23178, -19.9474, 0.96 ) }
    dend_53 { pt3dadd( -18.2447, 9.335, -22.6201, 0.96 ) }
    dend_53 { pt3dadd( -17.9123, 9.96704, -24.1514, 0.66 ) }
    dend_53 { pt3dadd( -17.6321, 10.5, -25.4425, 0.96 ) }
    dend_53 { pt3dadd( -17.3684, 11.0015, -26.6575, 1.11 ) }
    dend_53 { pt3dadd( -16.8292, 12.0267, -29.1414, 0.52 ) }
    dend_53 { pt3dadd( -16.5148, 12.6247, -30.5902, 0.52 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 40/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -18.8248, 8.23178, -19.9474, 1.11 ) }
    dend_46 { pt3dadd( -21.8309, 5.79248, -22.2195, 1.11 ) }
    dend_46 { pt3dadd( -22.7934, 5.01144, -22.947, 0.96 ) }
    dend_46 { pt3dadd( -23.6122, 4.34702, -23.5659, 1.33 ) }
    dend_46 { pt3dadd( -24.2139, 3.85877, -24.0207, 1.55 ) }
    dend_46 { pt3dadd( -24.7686, 3.40858, -24.44, 1.77 ) }
    dend_46 { pt3dadd( -25.1817, 3.07343, -24.7522, 1.77 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 47/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 16.9058, 11.6017, -5.38401, 0.52 ) }
    dend_43 { pt3dadd( 18.1475, 11.6724, -3.51779, 0.52 ) }
    dend_43 { pt3dadd( 18.185, 11.6791, -3.45825, 0.52 ) }
    dend_43 { pt3dadd( 19.3171, 12.0471, -1.58837, 0.81 ) }
    dend_43 { pt3dadd( 20.1409, 12.5423, -0.069888, 0.81 ) }
    dend_43 { pt3dadd( 20.8237, 13.1489, 1.28905, 1.18 ) }
    dend_43 { pt3dadd( 20.8486, 13.181, 1.34505, 1.18 ) }
    dend_43 { pt3dadd( 21.1893, 13.9342, 2.30104, 0.96 ) }
    dend_43 { pt3dadd( 21.3855, 14.5925, 2.9923, 0.52 ) }
    dend_43 { pt3dadd( 21.6084, 16.0604, 4.22486, 0.52 ) }
    dend_43 { pt3dadd( 21.639, 16.8656, 4.79587, 0.74 ) }
    dend_43 { pt3dadd( 21.5583, 18.3946, 5.77328, 0.74 ) }
    dend_43 { pt3dadd( 21.5515, 18.4438, 5.80263, 0.74 ) }
    dend_43 { pt3dadd( 21.4387, 18.9376, 6.07039, 1.25 ) }
    dend_43 { pt3dadd( 21.4226, 18.9963, 6.09906, 1.25 ) }
    dend_43 { pt3dadd( 21.0782, 20.1125, 6.58427, 0.88 ) }
    dend_43 { pt3dadd( 20.6318, 21.6049, 7.17611, 0.29 ) }
    dend_43 { pt3dadd( 20.2857, 22.8001, 7.62308, 0.29 ) }
    dend_43 { pt3dadd( 20.2685, 22.8612, 7.64688, 0.29 ) }
    dend_43 { pt3dadd( 19.9714, 23.8302, 8.18102, 0.29 ) }
    dend_43 { pt3dadd( 19.956, 23.876, 8.21312, 0.29 ) }
    dend_43 { pt3dadd( 19.7381, 24.4396, 8.70898, 0.29 ) }
    dend_43 { pt3dadd( 19.4162, 25.171, 9.44326, 1.18 ) }
    dend_43 { pt3dadd( 19.2276, 25.5516, 9.89097, 1.18 ) }
    dend_43 { pt3dadd( 18.4951, 26.8528, 11.4945, 0.52 ) }
    dend_43 { pt3dadd( 18.4466, 26.9325, 11.5955, 0.52 ) }
    dend_43 { pt3dadd( 18.199, 27.4077, 12.099, 0.52 ) }
    dend_43 { pt3dadd( 18.1472, 27.5175, 12.1988, 0.52 ) }
    dend_43 { pt3dadd( 17.9469, 28.0403, 12.4825, 0.81 ) }
    dend_43 { pt3dadd( 17.9151, 28.1388, 12.5175, 0.81 ) }
    dend_43 { pt3dadd( 17.676, 28.9092, 12.6398, 1.03 ) }
    dend_43 { pt3dadd( 17.3082, 30.0201, 12.8169, 0.29 ) }
    dend_43 { pt3dadd( 17.2839, 30.0917, 12.8283, 0.29 ) }
    dend_43 { pt3dadd( 16.8954, 31.3009, 13.0971, 0.29 ) }
    dend_43 { pt3dadd( 16.8754, 31.3634, 13.1139, 0.29 ) }
    dend_43 { pt3dadd( 16.6548, 32.025, 13.3088, 0.96 ) }
    dend_43 { pt3dadd( 16.6316, 32.0852, 13.3274, 0.96 ) }
    dend_43 { pt3dadd( 16.4906, 32.519, 13.4525, 0.96 ) }
    dend_43 { pt3dadd( 16.0941, 33.9372, 13.8786, 0.37 ) }
    dend_43 { pt3dadd( 16.0765, 34.0327, 13.9082, 0.37 ) }
    dend_43 { pt3dadd( 16.0116, 34.4659, 14.0217, 0.37 ) }
    dend_43 { pt3dadd( 15.9092, 35.2814, 14.207, 0.66 ) }
    dend_43 { pt3dadd( 15.8552, 35.7982, 14.2947, 0.66 ) }
    dend_43 { pt3dadd( 15.8475, 35.8741, 14.3023, 0.66 ) }
    dend_43 { pt3dadd( 15.742, 36.6172, 14.2763, 0.59 ) }
    dend_43 { pt3dadd( 15.6294, 37.6566, 14.2607, 0.88 ) }
    dend_43 { pt3dadd( 15.6238, 37.7324, 14.2603, 0.88 ) }
    dend_43 { pt3dadd( 15.6177, 38.4258, 14.351, 0.96 ) }
    dend_43 { pt3dadd( 15.6343, 39.0436, 14.5669, 0.96 ) }
    dend_43 { pt3dadd( 15.7117, 40.1669, 15.1531, 0.96 ) }
    dend_43 { pt3dadd( 15.9311, 41.1605, 15.9094, 0.44 ) }
    dend_43 { pt3dadd( 15.9518, 41.2073, 15.9558, 0.44 ) }
    dend_43 { pt3dadd( 16.7742, 42.4894, 17.4481, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( 17.4835, 43.2816, 18.5633, 0.81 ) }
    dend_43 { pt3dadd( 17.5483, 43.3361, 18.6604, 0.81 ) }
    dend_43 { pt3dadd( 18.329, 43.8657, 19.7996, 0.29 ) }
    dend_43 { pt3dadd( 18.6922, 44.0898, 20.3576, 0.44 ) }
    dend_43 { pt3dadd( 18.7337, 44.1165, 20.4208, 0.44 ) }
    dend_43 { pt3dadd( 19.4776, 44.6048, 21.5193, 0.44 ) }
    dend_43 { pt3dadd( 20.3267, 45.2306, 22.9401, 0.81 ) }
    dend_43 { pt3dadd( 20.3532, 45.252, 22.989, 0.81 ) }
    dend_43 { pt3dadd( 21.0415, 45.8493, 24.3128, 0.96 ) }
    dend_43 { pt3dadd( 21.4372, 46.185, 24.9753, 0.96 ) }
    dend_43 { pt3dadd( 21.4733, 46.214, 25.027, 0.96 ) }
    dend_43 { pt3dadd( 22.6934, 47.169, 26.487, 0.81 ) }
    dend_43 { pt3dadd( 23.1551, 47.562, 26.9558, 0.37 ) }
    dend_43 { pt3dadd( 23.7292, 48.0547, 27.4593, 0.37 ) }
    dend_43 { pt3dadd( 24.6039, 48.8038, 28.1115, 0.37 ) }
    dend_43 { pt3dadd( 25.9271, 49.9569, 29.0285, 1.03 ) }
    dend_43 { pt3dadd( 26.3174, 50.3109, 29.268, 1.18 ) }
    dend_43 { pt3dadd( 26.9501, 50.9501, 29.5748, 0.74 ) }
    dend_43 { pt3dadd( 27.6079, 51.6979, 29.9037, 0.29 ) }
    dend_43 { pt3dadd( 27.6463, 51.7509, 29.9215, 0.29 ) }
    dend_43 { pt3dadd( 28.0328, 52.4341, 30.0388, 0.29 ) }
    dend_43 { pt3dadd( 28.0618, 52.4953, 30.0404, 0.29 ) }
    dend_43 { pt3dadd( 28.3901, 53.285, 30.003, 0.29 ) }
    dend_43 { pt3dadd( 28.6589, 54.0023, 29.9333, 0.96 ) }
    dend_43 { pt3dadd( 29.0372, 55.0913, 29.7903, 0.52 ) }
    dend_43 { pt3dadd( 29.5276, 56.4807, 29.5733, 0.74 ) }
    dend_43 { pt3dadd( 29.5525, 56.5519, 29.5604, 0.74 ) }
    dend_43 { pt3dadd( 30.0793, 58.0812, 29.3105, 0.52 ) }
    dend_43 { pt3dadd( 30.1037, 58.1528, 29.2995, 0.52 ) }
    dend_43 { pt3dadd( 30.3701, 58.9988, 29.1979, 0.74 ) }
    dend_43 { pt3dadd( 30.3878, 59.0636, 29.1915, 0.74 ) }
    dend_43 { pt3dadd( 30.558, 59.8275, 29.1221, 0.74 ) }
    dend_43 { pt3dadd( 30.7885, 60.7095, 29.0594, 0.44 ) }
    dend_43 { pt3dadd( 30.8206, 60.8389, 29.0629, 0.44 ) }
    dend_43 { pt3dadd( 31.1212, 62.1021, 29.1324, 0.88 ) }
    dend_43 { pt3dadd( 31.3822, 63.1587, 29.2164, 0.59 ) }
    dend_43 { pt3dadd( 31.4428, 63.3597, 29.2356, 0.59 ) }
    dend_43 { pt3dadd( 31.9576, 64.5195, 29.3656, 0.88 ) }
    dend_43 { pt3dadd( 32.6537, 65.6227, 29.3623, 0.29 ) }
    dend_43 { pt3dadd( 32.7162, 65.6949, 29.3513, 0.29 ) }
    dend_43 { pt3dadd( 33.5641, 66.4414, 29.1338, 0.29 ) }
    dend_43 { pt3dadd( 33.8258, 66.6613, 29.0158, 0.29 ) }
    dend_43 { pt3dadd( 34.4736, 67.2676, 28.5123, 0.29 ) }
    dend_43 { pt3dadd( 35.2753, 68.2809, 27.4792, 1.03 ) }
    dend_43 { pt3dadd( 35.6722, 69.0173, 26.7239, 0.59 ) }
    dend_43 { pt3dadd( 35.8415, 69.7, 26.1286, 0.59 ) }
    dend_43 { pt3dadd( 35.9173, 71.1744, 25.0309, 0.59 ) }
    dend_43 { pt3dadd( 35.8306, 72.5616, 24.228, 0.44 ) }
    dend_43 { pt3dadd( 35.6135, 74.3954, 23.4284, 0.29 ) }
    dend_43 { pt3dadd( 35.2504, 76.311, 22.7471, 0.29 ) }
    dend_43 { pt3dadd( 34.8017, 78.1457, 22.2121, 0.29 ) }
    dend_43 { pt3dadd( 34.5474, 79.0523, 22.0176, 0.29 ) }
    dend_43 { pt3dadd( 34.176, 80.3954, 21.9445, 1.55 ) }
    dend_43 { pt3dadd( 33.9018, 81.5946, 22.0479, 2.21 ) }
    dend_43 { pt3dadd( 35.044, 90.0293, 26.5049, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 16.9058, 11.6017, -5.38401, 1.33 ) }
    dend_36 { pt3dadd( 18.3892, 11.7858, -5.77353, 1.33 ) }
    dend_36 { pt3dadd( 18.4506, 11.8035, -5.80327, 1.33 ) }
    dend_36 { pt3dadd( 20.2554, 12.3228, -6.67746, 1.33 ) }
    dend_36 { pt3dadd( 22.6546, 13.013, -7.83951, 0.66 ) }
    dend_36 { pt3dadd( 24.7905, 13.6276, -8.87406, 1.18 ) }
    dend_36 { pt3dadd( 27.4665, 14.3975, -10.1701, 1.47 ) }
    dend_36 { pt3dadd( 28.177, 14.7345, -10.6189, 1.47 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 63/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 29.4064, 52.0668, -11.9507, 0.29 ) }
    dend_34 { pt3dadd( 30.579, 53.2515, -12.4085, 0.29 ) }
    dend_34 { pt3dadd( 31.2647, 53.9854, -12.6733, 0.44 ) }
    dend_34 { pt3dadd( 31.9959, 54.8276, -12.9511, 0.37 ) }
    dend_34 { pt3dadd( 32.0601, 54.9048, -12.9753, 0.37 ) }
    dend_34 { pt3dadd( 32.8296, 55.9029, -13.2688, 0.37 ) }
    dend_34 { pt3dadd( 32.8612, 55.9496, -13.2824, 0.37 ) }
    dend_34 { pt3dadd( 33.5615, 57.2233, -13.5959, 0.81 ) }
    dend_34 { pt3dadd( 33.8157, 57.8567, -13.7166, 0.81 ) }
    dend_34 { pt3dadd( 33.8367, 57.9281, -13.7342, 0.81 ) }
    dend_34 { pt3dadd( 33.9753, 58.5162, -13.8929, 0.81 ) }
    dend_34 { pt3dadd( 34.1546, 59.4594, -14.1492, 0.29 ) }
    dend_34 { pt3dadd( 34.3319, 60.4156, -14.3995, 0.29 ) }
    dend_34 { pt3dadd( 34.4754, 61.228, -14.5745, 0.96 ) }
    dend_34 { pt3dadd( 34.7055, 62.6578, -14.8309, 0.29 ) }
    dend_34 { pt3dadd( 34.7304, 62.7974, -14.8506, 0.29 ) }
    dend_34 { pt3dadd( 35.0133, 63.9516, -14.9092, 0.29 ) }
    dend_34 { pt3dadd( 35.3377, 64.8095, -14.8705, 0.59 ) }
    dend_34 { pt3dadd( 36.0145, 66.0156, -14.7219, 0.59 ) }
    dend_34 { pt3dadd( 36.5063, 66.7002, -14.5856, 0.59 ) }
    dend_34 { pt3dadd( 37.1491, 67.4042, -14.3978, 0.37 ) }
    dend_34 { pt3dadd( 38.4363, 68.4916, -14.0945, 0.22 ) }
    dend_34 { pt3dadd( 39.9055, 69.45, -13.8059, 0.22 ) }
    dend_34 { pt3dadd( 41.2256, 70.1492, -13.6024, 0.74 ) }
    dend_34 { pt3dadd( 41.2986, 70.1808, -13.5945, 0.74 ) }
    dend_34 { pt3dadd( 42.2233, 70.5323, -13.5262, 0.29 ) }
    dend_34 { pt3dadd( 43.2631, 70.9084, -13.552, 0.29 ) }
    dend_34 { pt3dadd( 43.4022, 70.961, -13.5739, 0.29 ) }
    dend_34 { pt3dadd( 44.2599, 71.2968, -13.7606, 0.29 ) }
    dend_34 { pt3dadd( 45.139, 71.659, -13.9831, 0.29 ) }
    dend_34 { pt3dadd( 45.3336, 71.7433, -14.0354, 0.29 ) }
    dend_34 { pt3dadd( 46.5225, 72.3093, -14.3916, 0.81 ) }
    dend_34 { pt3dadd( 47.3776, 72.7363, -14.7047, 1.11 ) }
    dend_34 { pt3dadd( 47.5648, 72.8206, -14.7794, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 97/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 29.4064, 52.0668, -11.9507, 0.44 ) }
    dend_33 { pt3dadd( 28.5577, 53.7642, -11.7128, 0.44 ) }
    dend_33 { pt3dadd( 28.0513, 54.777, -11.5709, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    // Section: dend_28, id: dend_28, parent: dend_22 (entry count 0/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.77204, -24.9077, -6.81246, 0.66 ) }
    dend_28 { pt3dadd( -2.21945, -25.059, -7.33065, 0.66 ) }
    dend_28 { pt3dadd( -1.0119, -25.25, -7.71685, 0.88 ) }
    dend_28 { pt3dadd( -0.936721, -25.2663, -7.73819, 0.88 ) }
    dend_28 { pt3dadd( -0.131754, -25.549, -7.99057, 0.88 ) }
    dend_28 { pt3dadd( 0.0550589, -25.6287, -8.05277, 0.88 ) }
    dend_28 { pt3dadd( 0.622936, -25.8717, -8.27319, 0.88 ) }
    dend_28 { pt3dadd( 1.65637, -26.3561, -8.83608, 0.59 ) }
    dend_28 { pt3dadd( 2.40669, -26.6588, -9.32961, 0.59 ) }
    dend_28 { pt3dadd( 3.5526, -27.1111, -10.2007, 0.44 ) }
    dend_28 { pt3dadd( 3.7536, -27.2011, -10.3757, 0.52 ) }
    dend_28 { pt3dadd( 4.61603, -27.6396, -11.1588, 0.96 ) }
    dend_28 { pt3dadd( 5.68698, -28.2646, -12.1524, 0.88 ) }
    dend_28 { pt3dadd( 6.39013, -28.675, -12.8425, 0.52 ) }
    dend_28 { pt3dadd( 7.17024, -29.1177, -13.6304, 0.52 ) }
    dend_28 { pt3dadd( 8.04137, -29.5852, -14.4523, 0.96 ) }
    dend_28 { pt3dadd( 8.88517, -30.1265, -15.1761, 1.25 ) }
    dend_28 { pt3dadd( 9.4014, -30.5794, -15.524, 1.25 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 18/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.77204, -24.9077, -6.81246, 0.52 ) }
    dend_23 { pt3dadd( -2.93551, -25.8555, -6.69355, 0.52 ) }
    dend_23 { pt3dadd( -2.2726, -26.8164, -6.70783, 0.52 ) }
    dend_23 { pt3dadd( -1.56206, -27.8463, -6.72314, 0.52 ) }
    dend_23 { pt3dadd( -1.14328, -28.4533, -6.73217, 1.18 ) }
    dend_23 { pt3dadd( -0.546052, -29.319, -6.74504, 1.33 ) }
    dend_23 { pt3dadd( 0.0617779, -30.2, -6.75814, 1.33 ) }
    dend_23 { pt3dadd( 0.833397, -31.6317, -6.76374, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 26/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -10.4121, -24.9743, -4.34351, 0.81 ) }
    dend_13 { pt3dadd( -11.5966, -25.6617, -3.98918, 0.81 ) }
    dend_13 { pt3dadd( -13.5749, -26.642, -3.32997, 0.81 ) }
    dend_13 { pt3dadd( -14.4672, -27.0572, -3.02891, 0.96 ) }
    dend_13 { pt3dadd( -16.4352, -27.8882, -2.27234, 1.25 ) }
    dend_13 { pt3dadd( -18.0687, -28.516, -1.60955, 1.03 ) }
    dend_13 { pt3dadd( -18.2006, -28.564, -1.5552, 1.03 ) }
    dend_13 { pt3dadd( -19.2973, -28.8865, -1.0214, 1.03 ) }
    dend_13 { pt3dadd( -19.3692, -28.9056, -0.986417, 1.03 ) }
    dend_13 { pt3dadd( -20.5829, -29.2942, -0.541036, 0.81 ) }
    dend_13 { pt3dadd( -21.6354, -29.7751, -0.423611, 0.66 ) }
    dend_13 { pt3dadd( -21.7684, -29.8417, -0.425465, 0.66 ) }
    dend_13 { pt3dadd( -23.0305, -30.5258, -0.496421, 0.66 ) }
    dend_13 { pt3dadd( -23.8483, -31.0342, -0.617267, 0.88 ) }
    dend_13 { pt3dadd( -25.0371, -31.8543, -0.938026, 1.25 ) }
    dend_13 { pt3dadd( -25.9854, -32.654, -1.46242, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 42/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -10.4121, -24.9743, -4.34351, 1.03 ) }
    dend_2 { pt3dadd( -9.52772, -25.6967, -2.61776, 1.03 ) }
    dend_2 { pt3dadd( -8.9325, -26.1829, -1.45623, 1.03 ) }
    dend_2 { pt3dadd( -8.15732, -26.8161, 0.0564635, 1.62 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 46/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 2.50035, 13.0741, 23.3366, 0.37 ) }
    dend_74 { pt3dadd( 3.36345, 13.3259, 23.4007, 0.37 ) }
    dend_74 { pt3dadd( 4.93766, 13.8337, 23.4645, 0.59 ) }
    dend_74 { pt3dadd( 6.24821, 14.2739, 23.4905, 0.74 ) }
    dend_74 { pt3dadd( 6.31279, 14.2996, 23.4907, 0.74 ) }
    dend_74 { pt3dadd( 7.3911, 14.8259, 23.4812, 0.74 ) }
    dend_74 { pt3dadd( 7.45186, 14.8589, 23.4802, 0.74 ) }
    dend_74 { pt3dadd( 7.90184, 15.2575, 23.5097, 0.37 ) }
    dend_74 { pt3dadd( 8.0331, 15.4365, 23.526, 0.37 ) }
    dend_74 { pt3dadd( 8.61856, 16.4285, 23.6233, 0.37 ) }
    dend_74 { pt3dadd( 9.00425, 17.0873, 23.729, 0.59 ) }
    dend_74 { pt3dadd( 9.03615, 17.1437, 23.7479, 0.59 ) }
    dend_74 { pt3dadd( 9.881, 18.6868, 24.6044, 0.29 ) }
    dend_74 { pt3dadd( 9.9099, 18.7383, 24.6394, 0.29 ) }
    dend_74 { pt3dadd( 10.2646, 19.272, 25.0558, 1.03 ) }
    dend_74 { pt3dadd( 10.7336, 19.8372, 25.5627, 0.44 ) }
    dend_74 { pt3dadd( 11.7027, 20.745, 26.5631, 0.37 ) }
    dend_74 { pt3dadd( 12.8072, 21.6236, 27.6741, 0.37 ) }
    dend_74 { pt3dadd( 13.5656, 22.1435, 28.4294, 0.74 ) }
    dend_74 { pt3dadd( 14.2562, 22.633, 29.1396, 1.03 ) }
    dend_74 { pt3dadd( 14.8211, 23.0712, 29.7785, 0.66 ) }
    dend_74 { pt3dadd( 15.8224, 23.9291, 30.9712, 0.59 ) }
    dend_74 { pt3dadd( 15.8858, 23.9839, 31.0552, 0.59 ) }
    dend_74 { pt3dadd( 16.4406, 24.3382, 32.0037, 0.37 ) }
    dend_74 { pt3dadd( 16.8957, 24.5765, 32.9266, 0.81 ) }
    dend_74 { pt3dadd( 17.4878, 24.8609, 34.2345, 1.18 ) }
    dend_74 { pt3dadd( 17.5123, 24.869, 34.2886, 1.18 ) }
    dend_74 { pt3dadd( 18.5391, 25.0873, 36.4798, 1.18 ) }
    dend_74 { pt3dadd( 20.5099, 25.2503, 40.2362, 0.96 ) }
    dend_74 { pt3dadd( 21.678, 25.2, 42.272, 0.59 ) }
    dend_74 { pt3dadd( 21.7155, 25.195, 42.3318, 0.52 ) }
    dend_74 { pt3dadd( 22.6091, 24.9936, 43.5481, 0.44 ) }
    dend_74 { pt3dadd( 22.663, 24.9793, 43.6053, 0.44 ) }
    dend_74 { pt3dadd( 24.0808, 24.5356, 44.6748, 0.29 ) }
    dend_74 { pt3dadd( 24.1676, 24.5092, 44.7159, 0.29 ) }
    dend_74 { pt3dadd( 24.9795, 24.2415, 45.0065, 0.96 ) }
    dend_74 { pt3dadd( 26.295, 23.8173, 45.4348, 0.52 ) }
    dend_74 { pt3dadd( 29.0083, 22.9723, 46.2088, 0.29 ) }
    dend_74 { pt3dadd( 29.073, 22.9533, 46.2267, 0.29 ) }
    dend_74 { pt3dadd( 30.3444, 22.611, 46.5605, 0.44 ) }
    dend_74 { pt3dadd( 32.2157, 22.2625, 46.8887, 0.29 ) }
    dend_74 { pt3dadd( 32.2855, 22.2603, 46.8939, 0.29 ) }
    dend_74 { pt3dadd( 33.2198, 22.622, 46.8017, 0.74 ) }
    dend_74 { pt3dadd( 33.9545, 23.4732, 46.5808, 0.59 ) }
    dend_74 { pt3dadd( 34.2625, 24.095, 46.4788, 0.59 ) }
    dend_74 { pt3dadd( 34.9221, 26.4825, 46.2222, 0.29 ) }
    dend_74 { pt3dadd( 35.2753, 28.609, 46.0496, 0.29 ) }
    dend_74 { pt3dadd( 35.5703, 31.3089, 45.841, 0.44 ) }
    dend_74 { pt3dadd( 35.6137, 33.2222, 45.7066, 1.11 ) }
    dend_74 { pt3dadd( 35.4939, 34.9102, 45.6123, 0.81 ) }
    dend_74 { pt3dadd( 35.4671, 35.0697, 45.6136, 0.81 ) }
    dend_74 { pt3dadd( 35.0261, 36.2443, 45.8926, 0.59 ) }
    dend_74 { pt3dadd( 42.1738, 41.6883, 49.9013, 0.59 ) }
    dend_74 { pt3dadd( 48.2616, 48.2631, 53.7797, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_74 { pt3dadd( 55.3182, 54.447, 56.5782, 0.59 ) }
    dend_74 { pt3dadd( 62.4949, 60.9804, 57.6727, 0.59 ) }
    dend_74 { pt3dadd( 68.9369, 68.0256, 59.5449, 0.59 ) }
    dend_74 { pt3dadd( 74.7684, 75.7281, 60.0488, 0.59 ) }
    dend_74 { pt3dadd( 80.4114, 83.2806, 62.2749, 0.59 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 5/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 2.50035, 13.0741, 23.3366, 0.29 ) }
    dend_73 { pt3dadd( 1.15473, 14.2252, 22.7478, 0.29 ) }
    dend_73 { pt3dadd( 0.812043, 14.5108, 22.6504, 0.66 ) }
    dend_73 { pt3dadd( -0.0156871, 15.1103, 22.7979, 0.37 ) }
    dend_73 { pt3dadd( -0.601577, 15.3992, 23.517, 0.29 ) }
    dend_73 { pt3dadd( -1.23864, 15.7217, 24.3788, 0.59 ) }
    dend_73 { pt3dadd( -1.48472, 15.8401, 24.7013, 0.88 ) }
    dend_73 { pt3dadd( -2.13554, 16.1079, 25.5737, 0.88 ) }
    dend_73 { pt3dadd( -3.31834, 16.5585, 27.1722, 1.18 ) }
    dend_73 { pt3dadd( -5.57242, 17.4144, 30.1639, 0.81 ) }
    dend_73 { pt3dadd( -6.00622, 17.5874, 30.703, 0.66 ) }
    dend_73 { pt3dadd( -6.46895, 17.7966, 31.2384, 0.66 ) }
    dend_73 { pt3dadd( -7.07297, 18.1134, 31.8094, 0.59 ) }
    dend_73 { pt3dadd( -7.46485, 18.3726, 32.0255, 0.29 ) }
    dend_73 { pt3dadd( -8.46425, 19.2206, 32.2236, 0.29 ) }
    dend_73 { pt3dadd( -9.33185, 20.0807, 32.2141, 0.96 ) }
    dend_73 { pt3dadd( -9.69102, 20.4439, 32.2752, 1.33 ) }
    dend_73 { pt3dadd( -10.1119, 20.8688, 32.4267, 1.62 ) }
    dend_73 { pt3dadd( -10.8038, 21.5364, 32.7694, 1.4 ) }
    dend_73 { pt3dadd( -11.7305, 22.3957, 33.2945, 0.52 ) }
    dend_73 { pt3dadd( -12.9298, 23.4451, 34.0135, 0.29 ) }
    dend_73 { pt3dadd( -14.2888, 24.5917, 34.8574, 0.66 ) }
    dend_73 { pt3dadd( -15.2602, 25.3892, 35.4247, 0.66 ) }
    dend_73 { pt3dadd( -16.0927, 26.0619, 35.882, 1.25 ) }
    dend_73 { pt3dadd( -16.7569, 26.6084, 36.1906, 1.25 ) }
    dend_73 { pt3dadd( -17.3794, 27.128, 36.338, 1.25 ) }
    dend_73 { pt3dadd( -17.4978, 27.2377, 36.3318, 1.25 ) }
    dend_73 { pt3dadd( -17.9959, 27.8366, 36.0949, 1.18 ) }
    dend_73 { pt3dadd( -18.0393, 27.909, 36.0664, 1.18 ) }
    dend_73 { pt3dadd( -18.4534, 28.7747, 36.0151, 1.11 ) }
    dend_73 { pt3dadd( -18.7634, 29.4012, 36.2219, 0.52 ) }
    dend_73 { pt3dadd( -18.7896, 29.4531, 36.2571, 0.52 ) }
    dend_73 { pt3dadd( -19.2497, 30.3174, 36.9879, 0.52 ) }
    dend_73 { pt3dadd( -19.6866, 31.0091, 37.7013, 0.81 ) }
    dend_73 { pt3dadd( -20.4587, 32.0774, 38.9407, 0.66 ) }
    dend_73 { pt3dadd( -20.782, 32.4663, 39.435, 0.66 ) }
    dend_73 { pt3dadd( -21.4319, 33.1596, 40.3396, 1.25 ) }
    dend_73 { pt3dadd( -21.6466, 33.3543, 40.5813, 1.55 ) }
    dend_73 { pt3dadd( -22.6579, 34.0432, 41.5008, 0.59 ) }
    dend_73 { pt3dadd( -22.7061, 34.0732, 41.5417, 0.59 ) }
    dend_73 { pt3dadd( -23.2006, 34.4035, 41.9373, 0.59 ) }
    dend_73 { pt3dadd( -23.6939, 34.7581, 42.3405, 0.88 ) }
    dend_73 { pt3dadd( -24.2953, 35.2227, 42.8018, 0.88 ) }
    dend_73 { pt3dadd( -25.464, 36.2766, 43.7355, 0.44 ) }
    dend_73 { pt3dadd( -26.4997, 37.3567, 44.5996, 0.52 ) }
    dend_73 { pt3dadd( -26.9284, 37.8998, 45.0019, 0.81 ) }
    dend_73 { pt3dadd( -27.2347, 38.3903, 45.4172, 0.81 ) }
    dend_73 { pt3dadd( -27.5401, 39.031, 45.9848, 1.25 ) }
    dend_73 { pt3dadd( -27.7264, 39.6309, 46.4502, 1.62 ) }
    dend_73 { pt3dadd( -27.7438, 39.694, 46.4637, 1.62 ) }
    dend_73 { pt3dadd( -26.9802, 38.8922, 47.1247, 1.62 ) }
    dend_73 { pt3dadd( -25.3665, 37.7517, 48.6686, 0.52 ) }
    dend_73 { pt3dadd( -24.0287, 36.8798, 49.9697, 0.37 ) }
    dend_73 { pt3dadd( -28.7812, 42.6296, 56.3558, 0.37 ) }
    dend_73 { pt3dadd( -33.5337, 48.4756, 62.6444, 0.37 ) }
    dend_73 { pt3dadd( -40.4493, 53.0906, 67.9899, 0.37 ) }
    dend_73 { pt3dadd( -48.1732, 57.0032, 72.8251, 0.37 ) }
    dend_73 { pt3dadd( -55.3107, 61.9913, 77.4605, 0.37 ) }
    dend_73 { pt3dadd( -61.7373, 67.8607, 81.9913, 0.37 ) }
    dend_73 { pt3dadd( -66.9219, 74.5379, 86.8613, 0.37 ) }
    dend_73 { pt3dadd( -71.6954, 80.7044, 92.7842, 0.37 ) }
    // Section: dend_69, id: dend_69, parent: dend_65 (entry count 66/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -7.43005, 6.94456, 23.072, 0.44 ) }
    dend_69 { pt3dadd( -8.83352, 6.55623, 22.1774, 0.44 ) }
    dend_69 { pt3dadd( -10.5014, 6.09474, 21.1144, 0.44 ) }
    dend_69 { pt3dadd( -12.019, 5.67483, 20.1471, 0.44 ) }
    dend_69 { pt3dadd( -13.3955, 5.29397, 19.2698, 0.37 ) }
    dend_69 { pt3dadd( -21.7997, 4.51569, 13.9127, 0.37 ) }
    dend_69 { pt3dadd( -29.4931, 4.22663, 7.53152, 0.37 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 73/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -7.43005, 6.94456, 23.072, 0.29 ) }
    dend_66 { pt3dadd( -7.88002, 7.68678, 23.7233, 0.29 ) }
    dend_66 { pt3dadd( -8.05821, 7.9807, 23.9812, 0.29 ) }
    dend_66 { pt3dadd( -8.09057, 8.03408, 24.0281, 0.29 ) }
    dend_66 { pt3dadd( -8.85385, 9.2931, 25.1329, 0.29 ) }
    dend_66 { pt3dadd( -9.80333, 10.8592, 26.5073, 0.29 ) }
    dend_66 { pt3dadd( -15.0242, 17.8154, 30.8806, 0.29 ) }
    dend_66 { pt3dadd( -19.4349, 24.8425, 35.9631, 0.29 ) }
    dend_66 { pt3dadd( -23.4514, 31.1036, 42.3217, 0.29 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 82/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 6.54635, 49.5584, -86.3936, 0.29 ) }
    dend_60 { pt3dadd( 5.3969, 51.8341, -90.1851, 0.29 ) }
    dend_60 { pt3dadd( 5.16778, 52.4103, -90.9983, 0.29 ) }
    dend_60 { pt3dadd( 4.86337, 53.469, -92.2359, 0.29 ) }
    dend_60 { pt3dadd( 4.84677, 53.5343, -92.3052, 0.29 ) }
    dend_60 { pt3dadd( 4.75708, 53.9192, -92.6808, 0.29 ) }
    dend_60 { pt3dadd( 4.74122, 53.9873, -92.7473, 0.29 ) }
    dend_60 { pt3dadd( 4.63287, 54.9945, -93.3752, 0.29 ) }
    dend_60 { pt3dadd( 4.52613, 56.4696, -94.3522, 0.59 ) }
    dend_60 { pt3dadd( 4.44589, 57.2276, -94.856, 0.96 ) }
    dend_60 { pt3dadd( 4.39257, 57.6312, -95.1359, 0.96 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 93/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 6.54635, 49.5584, -86.3936, 0.96 ) }
    dend_59 { pt3dadd( 9.03001, 50.926, -91.5226, 0.96 ) }
    dend_59 { pt3dadd( 9.4476, 51.1648, -92.2457, 1.62 ) }
    dend_59 { pt3dadd( 10.9179, 52.0343, -94.5725, 0.37 ) }
    dend_59 { pt3dadd( 11.0317, 52.1073, -94.7456, 0.37 ) }
    dend_59 { pt3dadd( 11.5381, 52.4536, -95.4752, 0.37 ) }
    dend_59 { pt3dadd( 13.3097, 53.7181, -97.9733, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_59 { pt3dadd( 14.2669, 54.3842, -99.0802, 0.96 ) }
    dend_59 { pt3dadd( 15.4075, 55.2308, -100.57, 0.29 ) }
    dend_59 { pt3dadd( 15.7771, 55.5444, -101.107, 0.29 ) }
    dend_59 { pt3dadd( 16.2003, 55.9492, -101.815, 0.96 ) }
    dend_59 { pt3dadd( 17.4476, 57.3079, -104.173, 0.29 ) }
    dend_59 { pt3dadd( 18.1207, 58.1227, -105.593, 1.18 ) }
    dend_59 { pt3dadd( 18.8128, 58.9873, -107.233, 0.59 ) }
    dend_59 { pt3dadd( 18.8369, 59.0207, -107.288, 0.59 ) }
    dend_59 { pt3dadd( 19.2506, 59.6326, -108.2, 0.29 ) }
    dend_59 { pt3dadd( 19.5201, 60.0867, -108.798, 0.29 ) }
    dend_59 { pt3dadd( 19.9235, 60.8863, -109.626, 0.96 ) }
    dend_59 { pt3dadd( 20.4226, 61.9685, -110.536, 0.37 ) }
    dend_59 { pt3dadd( 21.0339, 63.6776, -111.804, 0.22 ) }
    dend_59 { pt3dadd( 21.1448, 64.2188, -112.222, 0.22 ) }
    dend_59 { pt3dadd( 21.1539, 65.3167, -113.163, 0.29 ) }
    dend_59 { pt3dadd( 21.129, 65.4193, -113.268, 0.29 ) }
    dend_59 { pt3dadd( 20.9237, 65.9841, -113.871, 0.29 ) }
    dend_59 { pt3dadd( 20.237, 67.3035, -115.436, 0.29 ) }
    dend_59 { pt3dadd( 19.4503, 68.3789, -116.895, 0.44 ) }
    dend_59 { pt3dadd( 18.6736, 69.3161, -118.218, 0.44 ) }
    dend_59 { pt3dadd( 17.6577, 70.4328, -119.778, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -16.5148, 12.6247, -30.5902, 0.96 ) }
    dend_55 { pt3dadd( -16.6949, 14.7407, -37.0775, 0.96 ) }
    dend_55 { pt3dadd( -16.6965, 14.7961, -37.2171, 0.96 ) }
    dend_55 { pt3dadd( -16.6707, 15.234, -37.9717, 0.96 ) }
    dend_55 { pt3dadd( -16.6679, 15.2773, -38.0248, 0.96 ) }
    dend_55 { pt3dadd( -16.637, 16.2656, -38.947, 0.81 ) }
    dend_55 { pt3dadd( -16.6365, 16.3531, -39.0126, 0.81 ) }
    dend_55 { pt3dadd( -16.6509, 16.9277, -39.1982, 0.81 ) }
    dend_55 { pt3dadd( -16.8037, 18.3357, -39.7781, 0.81 ) }
    dend_55 { pt3dadd( -17.0138, 19.4178, -40.3159, 0.96 ) }
    dend_55 { pt3dadd( -17.2611, 20.2294, -40.8053, 1.11 ) }
    dend_55 { pt3dadd( -17.5249, 20.8237, -41.2426, 1.11 ) }
    dend_55 { pt3dadd( -18.3026, 22.1356, -42.3276, 0.88 ) }
    dend_55 { pt3dadd( -18.7248, 22.6532, -42.844, 0.66 ) }
    dend_55 { pt3dadd( -18.8125, 22.7366, -42.942, 0.66 ) }
    dend_55 { pt3dadd( -19.4066, 23.2524, -43.5711, 0.66 ) }
    dend_55 { pt3dadd( -19.4481, 23.2868, -43.6143, 0.66 ) }
    dend_55 { pt3dadd( -20.3703, 24.0136, -44.4453, 1.18 ) }
    dend_55 { pt3dadd( -21.2055, 24.6669, -45.0206, 0.29 ) }
    dend_55 { pt3dadd( -21.3584, 24.7813, -45.1235, 0.29 ) }
    dend_55 { pt3dadd( -21.9137, 25.145, -45.4198, 0.29 ) }
    dend_55 { pt3dadd( -21.9729, 25.1761, -45.4404, 0.29 ) }
    dend_55 { pt3dadd( -22.7355, 25.4835, -45.5483, 0.66 ) }
    dend_55 { pt3dadd( -23.3579, 25.6639, -45.5228, 1.03 ) }
    dend_55 { pt3dadd( -24.155, 25.8733, -45.4055, 1.03 ) }
    dend_55 { pt3dadd( -25.0584, 26.0999, -45.2407, 0.74 ) }
    dend_55 { pt3dadd( -26.0598, 26.3901, -45.0162, 0.44 ) }
    dend_55 { pt3dadd( -27.2898, 26.8437, -44.6819, 0.29 ) }
    dend_55 { pt3dadd( -27.3745, 26.8843, -44.6536, 0.29 ) }
    dend_55 { pt3dadd( -27.8089, 27.1252, -44.4561, 0.29 ) }
    dend_55 { pt3dadd( -27.8632, 27.1561, -44.4263, 0.29 ) }
    dend_55 { pt3dadd( -28.6213, 27.5644, -44.0397, 0.29 ) }
    dend_55 { pt3dadd( -28.9743, 27.755, -43.8846, 0.74 ) }
    dend_55 { pt3dadd( -29.5413, 28.1013, -43.7205, 0.88 ) }
    dend_55 { pt3dadd( -30.4297, 28.7046, -43.4962, 0.74 ) }
    dend_55 { pt3dadd( -30.8356, 28.9836, -43.4119, 0.74 ) }
    dend_55 { pt3dadd( -31.4312, 29.3947, -43.3158, 0.29 ) }
    dend_55 { pt3dadd( -32.0956, 29.8524, -43.2321, 0.29 ) }
    dend_55 { pt3dadd( -33.0315, 30.5961, -43.1515, 0.29 ) }
    dend_55 { pt3dadd( -33.6366, 31.1533, -43.1246, 1.18 ) }
    dend_55 { pt3dadd( -34.2235, 31.7883, -43.1305, 0.37 ) }
    dend_55 { pt3dadd( -34.8893, 32.6144, -43.1279, 0.37 ) }
    dend_55 { pt3dadd( -34.9284, 32.6703, -43.127, 0.37 ) }
    dend_55 { pt3dadd( -35.333, 33.2808, -43.1061, 0.37 ) }
    dend_55 { pt3dadd( -35.3665, 33.3391, -43.1027, 0.37 ) }
    dend_55 { pt3dadd( -35.6008, 33.9243, -43.041, 0.88 ) }
    dend_55 { pt3dadd( -35.7177, 34.3333, -42.9856, 1.11 ) }
    dend_55 { pt3dadd( -35.8704, 34.7916, -42.9151, 1.11 ) }
    dend_55 { pt3dadd( -35.9027, 34.8609, -42.9036, 1.11 ) }
    dend_55 { pt3dadd( -36.2194, 35.3812, -42.7492, 0.96 ) }
    dend_55 { pt3dadd( -36.6531, 35.987, -42.5106, 0.52 ) }
    dend_55 { pt3dadd( -37.5657, 37.0974, -41.9765, 0.52 ) }
    dend_55 { pt3dadd( -38.0861, 37.7035, -41.66, 0.52 ) }
    dend_55 { pt3dadd( -38.4629, 38.1363, -41.4331, 0.52 ) }
    dend_55 { pt3dadd( -39.2611, 39.0558, -40.9635, 0.29 ) }
    dend_55 { pt3dadd( -39.3982, 39.2067, -40.8944, 0.29 ) }
    dend_55 { pt3dadd( -39.6777, 39.5144, -40.7856, 0.29 ) }
    dend_55 { pt3dadd( -40.118, 40.0625, -40.6291, 0.29 ) }
    dend_55 { pt3dadd( -40.5598, 40.6973, -40.5009, 0.29 ) }
    dend_55 { pt3dadd( -41.1365, 41.5858, -40.3985, 0.29 ) }
    dend_55 { pt3dadd( -41.59, 42.2987, -40.467, 0.81 ) }
    dend_55 { pt3dadd( -42.0623, 42.9904, -40.634, 0.81 ) }
    dend_55 { pt3dadd( -42.3449, 43.3853, -40.7741, 1.11 ) }
    dend_55 { pt3dadd( -42.466, 43.5372, -40.8651, 1.11 ) }
    dend_55 { pt3dadd( -42.8946, 44.087, -41.3258, 1.11 ) }
    dend_55 { pt3dadd( -43.7727, 45.2494, -42.4973, 0.29 ) }
    dend_55 { pt3dadd( -44.3965, 46.144, -43.4674, 0.29 ) }
    dend_55 { pt3dadd( -44.4241, 46.1851, -43.515, 0.29 ) }
    dend_55 { pt3dadd( -45.2472, 47.5748, -45.0716, 0.66 ) }
    dend_55 { pt3dadd( -45.647, 48.3975, -45.9401, 0.66 ) }
    dend_55 { pt3dadd( -45.6645, 48.445, -45.987, 0.66 ) }
    dend_55 { pt3dadd( -45.7719, 48.912, -46.3554, 0.66 ) }
    dend_55 { pt3dadd( -45.7787, 48.9674, -46.3935, 0.66 ) }
    dend_55 { pt3dadd( -45.948, 50.2309, -47.0919, 0.37 ) }
    dend_55 { pt3dadd( -46.131, 51.1819, -47.4926, 0.37 ) }
    dend_55 { pt3dadd( -46.1554, 51.2398, -47.5168, 0.37 ) }
    dend_55 { pt3dadd( -46.3911, 51.6443, -47.7055, 0.66 ) }
    dend_55 { pt3dadd( -46.6333, 51.985, -47.8695, 0.66 ) }
    dend_55 { pt3dadd( -47.0309, 52.4656, -48.1022, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( -47.9349, 53.3559, -48.5481, 0.29 ) }
    dend_55 { pt3dadd( -48.3455, 53.7694, -48.7151, 0.29 ) }
    dend_55 { pt3dadd( -48.44, 53.8692, -48.7652, 0.29 ) }
    dend_55 { pt3dadd( -48.9596, 54.4602, -49.1084, 0.29 ) }
    dend_55 { pt3dadd( -49.1536, 54.6962, -49.2497, 0.59 ) }
    dend_55 { pt3dadd( -49.2338, 54.7899, -49.3293, 0.59 ) }
    dend_55 { pt3dadd( -49.4806, 55.0524, -49.6027, 0.59 ) }
    dend_55 { pt3dadd( -50.1434, 55.6623, -50.359, 0.15 ) }
    dend_55 { pt3dadd( -50.2001, 55.7179, -50.4272, 0.15 ) }
    dend_55 { pt3dadd( -50.6006, 56.1096, -50.8812, 0.15 ) }
    dend_55 { pt3dadd( -51.4277, 56.9625, -51.7773, 0.44 ) }
    dend_55 { pt3dadd( -51.485, 57.0197, -51.8311, 0.44 ) }
    dend_55 { pt3dadd( -51.9799, 57.4702, -52.2245, 0.29 ) }
    dend_55 { pt3dadd( -52.9542, 58.286, -52.8424, 0.88 ) }
    dend_55 { pt3dadd( -53.5894, 58.7684, -53.1893, 0.81 ) }
    dend_55 { pt3dadd( -54.329, 59.2752, -53.5087, 0.44 ) }
    dend_55 { pt3dadd( -55.073, 59.7106, -53.704, 0.44 ) }
    dend_55 { pt3dadd( -55.7612, 60.0608, -53.8505, 0.44 ) }
    dend_55 { pt3dadd( -56.0554, 60.1899, -53.8935, 0.88 ) }
    dend_55 { pt3dadd( -56.4809, 60.3501, -53.9486, 1.25 ) }
    dend_55 { pt3dadd( -57.1052, 60.5878, -54.0495, 1.25 ) }
    dend_55 { pt3dadd( -58.151, 60.9844, -54.3311, 0.29 ) }
    dend_55 { pt3dadd( -58.2121, 61.0075, -54.3552, 0.29 ) }
    dend_55 { pt3dadd( -59.0027, 61.3152, -54.7334, 0.29 ) }
    dend_55 { pt3dadd( -59.9221, 61.6547, -55.234, 0.88 ) }
    dend_55 { pt3dadd( -60.1605, 61.7459, -55.3813, 1.03 ) }
    dend_55 { pt3dadd( -61.195, 62.1756, -56.1502, 0.29 ) }
    dend_55 { pt3dadd( -61.6827, 62.3871, -56.5551, 0.29 ) }
    dend_55 { pt3dadd( -61.8636, 62.4671, -56.7148, 0.29 ) }
    dend_55 { pt3dadd( -62.0067, 62.5286, -56.8701, 0.29 ) }
    dend_55 { pt3dadd( -62.3851, 62.7114, -57.2818, 0.29 ) }
    dend_55 { pt3dadd( -63.2564, 63.1697, -58.27, 0.59 ) }
    dend_55 { pt3dadd( -63.4402, 63.2871, -58.4822, 1.03 ) }
    dend_55 { pt3dadd( -64.1373, 63.8156, -59.4059, 1.03 ) }
    dend_55 { pt3dadd( -65.0984, 64.6318, -60.7695, 0.29 ) }
    dend_55 { pt3dadd( -65.4896, 65.0452, -61.4322, 0.29 ) }
    dend_55 { pt3dadd( -65.5198, 65.085, -61.4933, 0.29 ) }
    dend_55 { pt3dadd( -65.7528, 65.5943, -62.1426, 0.29 ) }
    dend_55 { pt3dadd( -65.978, 66.4608, -63.0824, 0.66 ) }
    dend_55 { pt3dadd( -65.9918, 66.7902, -63.3546, 0.66 ) }
    dend_55 { pt3dadd( -65.9154, 67.9767, -64.233, 0.29 ) }
    dend_55 { pt3dadd( -65.9116, 68.0296, -64.2753, 0.29 ) }
    dend_55 { pt3dadd( -65.9155, 68.6393, -64.787, 0.29 ) }
    dend_55 { pt3dadd( -65.9196, 68.6914, -64.8314, 0.29 ) }
    dend_55 { pt3dadd( -66.0241, 69.2916, -65.2896, 0.29 ) }
    dend_55 { pt3dadd( -66.3442, 70.3351, -66.0861, 0.29 ) }
    dend_55 { pt3dadd( -66.5286, 70.7708, -66.4096, 0.29 ) }
    dend_55 { pt3dadd( -66.9674, 71.7667, -67.1512, 1.11 ) }
    dend_55 { pt3dadd( -67.0948, 72.0361, -67.3541, 1.62 ) }
    dend_55 { pt3dadd( -67.2552, 72.4014, -67.6033, 1.62 ) }
    dend_55 { pt3dadd( -67.6868, 73.4495, -68.2401, 0.37 ) }
    dend_55 { pt3dadd( -67.7257, 73.5732, -68.2986, 0.37 ) }
    dend_55 { pt3dadd( -67.8453, 74.1269, -68.5312, 0.37 ) }
    dend_55 { pt3dadd( -67.8686, 74.2608, -68.5782, 0.37 ) }
    dend_55 { pt3dadd( -67.9631, 74.966, -68.8383, 0.37 ) }
    dend_55 { pt3dadd( -67.9699, 75.0376, -68.8645, 0.37 ) }
    dend_55 { pt3dadd( -68.0405, 75.9526, -69.1533, 1.11 ) }
    dend_55 { pt3dadd( -68.0854, 76.603, -69.355, 1.47 ) }
    dend_55 { pt3dadd( -68.0947, 76.8105, -69.4211, 1.47 ) }
    dend_55 { pt3dadd( -68.0303, 77.8742, -69.7959, 0.29 ) }
    dend_55 { pt3dadd( -68.0164, 77.9606, -69.8324, 0.29 ) }
    dend_55 { pt3dadd( -67.8263, 78.7477, -70.2607, 0.29 ) }
    dend_55 { pt3dadd( -67.7327, 79.0794, -70.4884, 0.59 ) }
    dend_55 { pt3dadd( -67.6518, 79.3571, -70.7041, 0.59 ) }
    dend_55 { pt3dadd( -67.2964, 80.6254, -71.701, 0.29 ) }
    dend_55 { pt3dadd( -66.9475, 81.8895, -72.7106, 0.74 ) }
    dend_55 { pt3dadd( -66.5927, 83.3844, -73.9211, 0.29 ) }
    dend_55 { pt3dadd( -66.3726, 84.4089, -74.7896, 0.29 ) }
    dend_55 { pt3dadd( -66.3539, 84.5189, -74.8837, 0.29 ) }
    dend_55 { pt3dadd( -66.2451, 85.4019, -75.6062, 0.29 ) }
    dend_55 { pt3dadd( -66.241, 85.4554, -75.6476, 0.29 ) }
    dend_55 { pt3dadd( -66.1911, 86.5157, -76.3721, 0.88 ) }
    dend_55 { pt3dadd( -66.1793, 87.465, -76.9003, 0.29 ) }
    dend_55 { pt3dadd( -66.1796, 87.5259, -76.9301, 0.29 ) }
    dend_55 { pt3dadd( -66.2252, 88.4143, -77.367, 0.29 ) }
    dend_55 { pt3dadd( -66.2313, 88.4827, -77.4027, 0.29 ) }
    dend_55 { pt3dadd( -66.3353, 89.3173, -77.8174, 0.74 ) }
    dend_55 { pt3dadd( -66.357, 89.4611, -77.8808, 0.74 ) }
    dend_55 { pt3dadd( -66.3733, 89.8886, -78.0295, 0.74 ) }
    dend_55 { pt3dadd( -66.3466, 90.3955, -78.1929, 0.74 ) }
    dend_55 { pt3dadd( -65.5131, 91.9058, -78.7728, 0.29 ) }
    dend_55 { pt3dadd( -65.472, 91.9562, -78.7926, 0.29 ) }
    dend_55 { pt3dadd( -65.1991, 92.2567, -78.9097, 0.29 ) }
    dend_55 { pt3dadd( -63.7516, 93.7263, -79.4904, 0.29 ) }
    dend_55 { pt3dadd( -63.7029, 93.7709, -79.5084, 0.29 ) }
    dend_55 { pt3dadd( -59.8151, 96.9371, -80.7931, 0.29 ) }
    dend_55 { pt3dadd( -59.1369, 97.419, -80.984, 0.37 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 87/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -16.5148, 12.6247, -30.5902, 0.66 ) }
    dend_54 { pt3dadd( -17.4023, 13.9474, -29.5228, 0.66 ) }
    dend_54 { pt3dadd( -18.1543, 15.1006, -28.5823, 0.29 ) }
    dend_54 { pt3dadd( -18.3646, 15.4218, -28.3324, 0.29 ) }
    dend_54 { pt3dadd( -19.1131, 16.6054, -27.2659, 0.29 ) }
    dend_54 { pt3dadd( -19.1363, 16.6434, -27.2277, 0.29 ) }
    dend_54 { pt3dadd( -19.9567, 18.0582, -25.7748, 0.66 ) }
    dend_54 { pt3dadd( -20.0282, 18.1885, -25.6289, 0.66 ) }
    dend_54 { pt3dadd( -20.3309, 18.7428, -25.0268, 0.66 ) }
    dend_54 { pt3dadd( -21.2455, 20.1808, -23.2822, 0.81 ) }
    dend_54 { pt3dadd( -21.65, 20.7426, -22.5361, 0.96 ) }
    dend_54 { pt3dadd( -21.9063, 21.104, -22.0589, 0.29 ) }
    dend_54 { pt3dadd( -22.2576, 21.604, -21.3521, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_54 { pt3dadd( -22.5898, 22.0749, -20.6757, 0.66 ) }
    dend_54 { pt3dadd( -23.3165, 23.0883, -19.1989, 0.37 ) }
    dend_54 { pt3dadd( -23.7774, 23.6996, -18.361, 0.37 ) }
    dend_54 { pt3dadd( -24.5267, 24.6855, -16.9761, 0.66 ) }
    dend_54 { pt3dadd( -25.2229, 25.6264, -15.5511, 0.66 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 5/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -25.1817, 3.07343, -24.7522, 1.11 ) }
    dend_48 { pt3dadd( -25.9881, 3.42613, -24.0665, 1.11 ) }
    dend_48 { pt3dadd( -26.9537, 3.88937, -23.2336, 1.11 ) }
    dend_48 { pt3dadd( -28.46, 4.65715, -21.9229, 0.74 ) }
    dend_48 { pt3dadd( -29.2334, 5.10612, -21.2486, 0.37 ) }
    dend_48 { pt3dadd( -30.0237, 5.64835, -20.5536, 0.37 ) }
    dend_48 { pt3dadd( -30.1175, 5.72718, -20.4704, 0.37 ) }
    dend_48 { pt3dadd( -30.3859, 6.05454, -20.2041, 0.37 ) }
    dend_48 { pt3dadd( -30.4143, 6.10846, -20.1746, 0.37 ) }
    dend_48 { pt3dadd( -30.7456, 6.77667, -19.9768, 0.96 ) }
    dend_48 { pt3dadd( -31.0614, 7.40179, -19.8125, 1.18 ) }
    dend_48 { pt3dadd( -31.5095, 8.08462, -19.5936, 0.66 ) }
    dend_48 { pt3dadd( -31.7669, 8.40072, -19.4584, 0.66 ) }
    dend_48 { pt3dadd( -32.6539, 9.33094, -18.9854, 0.59 ) }
    dend_48 { pt3dadd( -33.4313, 10.0666, -18.5766, 1.33 ) }
    dend_48 { pt3dadd( -33.4882, 10.1131, -18.5473, 1.33 ) }
    dend_48 { pt3dadd( -34.515, 10.8652, -18.0354, 0.74 ) }
    dend_48 { pt3dadd( -35.0966, 11.2963, -17.7609, 0.52 ) }
    dend_48 { pt3dadd( -35.4297, 11.6113, -17.614, 0.96 ) }
    dend_48 { pt3dadd( -35.6943, 11.9877, -17.4836, 0.81 ) }
    dend_48 { pt3dadd( -35.7684, 12.1182, -17.4419, 0.81 ) }
    dend_48 { pt3dadd( -35.8932, 12.3244, -17.3689, 0.81 ) }
    dend_48 { pt3dadd( -36.3248, 12.9834, -17.1342, 0.52 ) }
    dend_48 { pt3dadd( -36.9156, 13.726, -16.8091, 0.52 ) }
    dend_48 { pt3dadd( -37.4682, 14.3999, -16.4856, 0.88 ) }
    dend_48 { pt3dadd( -37.9318, 14.9475, -16.1995, 0.88 ) }
    dend_48 { pt3dadd( -38.6548, 15.7707, -15.7368, 1.18 ) }
    dend_48 { pt3dadd( -39.0001, 16.1286, -15.5087, 1.4 ) }
    dend_48 { pt3dadd( -39.5538, 16.5735, -15.1443, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 34/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -25.1817, 3.07343, -24.7522, 0.66 ) }
    dend_47 { pt3dadd( -26.3193, 2.54301, -25.9172, 0.66 ) }
    dend_47 { pt3dadd( -27.1004, 2.33156, -26.5676, 1.03 ) }
    dend_47 { pt3dadd( -28.3346, 2.21425, -27.4066, 0.74 ) }
    dend_47 { pt3dadd( -29.1681, 2.19673, -27.9164, 0.52 ) }
    dend_47 { pt3dadd( -29.2378, 2.19832, -27.9555, 0.52 ) }
    dend_47 { pt3dadd( -30.1707, 2.23961, -28.4261, 0.52 ) }
    dend_47 { pt3dadd( -31.0926, 2.39668, -28.7572, 0.66 ) }
    dend_47 { pt3dadd( -32.1645, 2.63405, -29.0082, 0.59 ) }
    dend_47 { pt3dadd( -32.2323, 2.64983, -29.0135, 0.59 ) }
    dend_47 { pt3dadd( -32.5374, 2.70409, -29.0499, 0.96 ) }
    dend_47 { pt3dadd( -33.3983, 2.82472, -29.1921, 1.11 ) }
    dend_47 { pt3dadd( -33.9765, 2.87923, -29.3061, 1.11 ) }
    dend_47 { pt3dadd( -35.1464, 2.92855, -29.6269, 0.66 ) }
    dend_47 { pt3dadd( -36.863, 2.90728, -30.2077, 0.66 ) }
    dend_47 { pt3dadd( -38.7874, 2.82744, -30.9392, 0.66 ) }
    dend_47 { pt3dadd( -39.3404, 2.81339, -31.1674, 1.33 ) }
    dend_47 { pt3dadd( -39.9011, 2.81375, -31.3813, 1.55 ) }
    dend_47 { pt3dadd( -41.3306, 2.82478, -31.8742, 1.18 ) }
    dend_47 { pt3dadd( -42.3227, 2.82652, -32.1651, 0.29 ) }
    dend_47 { pt3dadd( -42.9678, 2.82639, -32.259, 0.29 ) }
    dend_47 { pt3dadd( -44.2198, 2.84789, -32.1917, 0.29 ) }
    dend_47 { pt3dadd( -46.0177, 2.84811, -31.9619, 0.29 ) }
    dend_47 { pt3dadd( -46.5128, 2.84425, -31.8571, 0.29 ) }
    dend_47 { pt3dadd( -47.0776, 2.83712, -31.7148, 1.03 ) }
    dend_47 { pt3dadd( -47.7659, 2.80988, -31.5906, 1.03 ) }
    dend_47 { pt3dadd( -48.7289, 2.74331, -31.5582, 1.03 ) }
    dend_47 { pt3dadd( -48.7989, 2.73751, -31.5661, 1.03 ) }
    dend_47 { pt3dadd( -49.3561, 2.71719, -31.7307, 1.03 ) }
    dend_47 { pt3dadd( -50.4082, 2.78258, -32.0957, 0.74 ) }
    dend_47 { pt3dadd( -51.2315, 2.91747, -32.4127, 0.29 ) }
    dend_47 { pt3dadd( -51.9529, 3.09694, -32.7278, 0.59 ) }
    dend_47 { pt3dadd( -52.942, 3.38672, -33.1847, 0.29 ) }
    dend_47 { pt3dadd( -53.9567, 3.68626, -33.6248, 0.29 ) }
    dend_47 { pt3dadd( -54.6667, 3.89599, -33.92, 0.96 ) }
    dend_47 { pt3dadd( -55.1413, 4.02964, -34.0966, 1.33 ) }
    dend_47 { pt3dadd( -55.7934, 4.19579, -34.3268, 0.81 ) }
    dend_47 { pt3dadd( -56.3421, 4.30743, -34.4727, 0.29 ) }
    dend_47 { pt3dadd( -57.6267, 4.57601, -34.6272, 0.29 ) }
    dend_47 { pt3dadd( -58.2196, 4.71173, -34.585, 1.25 ) }
    dend_47 { pt3dadd( -58.4981, 4.77385, -34.5364, 1.47 ) }
    dend_47 { pt3dadd( -59.0758, 4.90496, -34.4051, 1.03 ) }
    dend_47 { pt3dadd( -59.8377, 5.07092, -34.191, 0.29 ) }
    dend_47 { pt3dadd( -61.1207, 5.29345, -33.8294, 0.29 ) }
    dend_47 { pt3dadd( -61.9441, 5.34381, -33.6303, 0.29 ) }
    dend_47 { pt3dadd( -62.0135, 5.33759, -33.6185, 0.29 ) }
    dend_47 { pt3dadd( -62.8356, 5.10652, -33.5678, 1.03 ) }
    dend_47 { pt3dadd( -63.6826, 4.6934, -33.5668, 1.03 ) }
    dend_47 { pt3dadd( -64.5498, 4.11069, -33.6138, 1.03 ) }
    dend_47 { pt3dadd( -65.2809, 3.51077, -33.6736, 0.88 ) }
    dend_47 { pt3dadd( -65.9974, 2.85112, -33.6835, 0.37 ) }
    dend_47 { pt3dadd( -66.676, 2.18321, -33.5771, 0.37 ) }
    dend_47 { pt3dadd( -67.3593, 1.46187, -33.3552, 0.88 ) }
    dend_47 { pt3dadd( -67.8633, 0.925319, -33.1223, 1.25 ) }
    dend_47 { pt3dadd( -68.4062, 0.346553, -32.8014, 1.25 ) }
    dend_47 { pt3dadd( -69.127, -0.375838, -32.2964, 0.66 ) }
    dend_47 { pt3dadd( -70.1056, -1.29312, -31.5751, 0.52 ) }
    dend_47 { pt3dadd( -70.1451, -1.32674, -31.547, 0.52 ) }
    dend_47 { pt3dadd( -70.737, -1.79438, -31.1956, 0.29 ) }
    dend_47 { pt3dadd( -70.8866, -1.90567, -31.1182, 0.88 ) }
    dend_47 { pt3dadd( -70.9479, -1.94918, -31.093, 0.88 ) }
    dend_47 { pt3dadd( -71.6877, -2.448, -30.892, 0.88 ) }
    dend_47 { pt3dadd( -72.8576, -3.28465, -30.6671, 0.29 ) }
    dend_47 { pt3dadd( -73.8009, -4.02982, -30.4463, 0.29 ) }
    dend_47 { pt3dadd( -73.9112, -4.12433, -30.4173, 0.29 ) }
    dend_47 { pt3dadd( -74.4697, -4.60173, -30.2483, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_47 { pt3dadd( -74.9338, -4.99217, -30.0958, 1.25 ) }
    dend_47 { pt3dadd( -75.5337, -5.48763, -29.8792, 0.81 ) }
    dend_47 { pt3dadd( -76.3572, -6.22058, -29.5993, 0.29 ) }
    dend_47 { pt3dadd( -76.8478, -6.67593, -29.4491, 0.29 ) }
    dend_47 { pt3dadd( -77.2967, -7.08664, -29.3482, 0.74 ) }
    dend_47 { pt3dadd( -77.7112, -7.43168, -29.2952, 0.74 ) }
    dend_47 { pt3dadd( -77.7647, -7.47447, -29.2925, 0.74 ) }
    dend_47 { pt3dadd( -78.6311, -8.12197, -29.3102, 0.29 ) }
    dend_47 { pt3dadd( -79.1275, -8.51087, -29.361, 0.96 ) }
    dend_47 { pt3dadd( -79.7942, -9.05667, -29.5104, 0.96 ) }
    dend_47 { pt3dadd( -80.6017, -9.65787, -29.7454, 0.29 ) }
    dend_47 { pt3dadd( -81.2904, -10.1182, -29.9892, 0.29 ) }
    dend_47 { pt3dadd( -81.3467, -10.1527, -30.0095, 0.29 ) }
    dend_47 { pt3dadd( -81.8081, -10.4116, -30.2015, 0.29 ) }
    dend_47 { pt3dadd( -82.9875, -11.049, -30.7439, 0.52 ) }
    dend_47 { pt3dadd( -84.2669, -11.7422, -31.3943, 0.52 ) }
    dend_47 { pt3dadd( -84.9929, -12.1286, -31.7717, 0.29 ) }
    dend_47 { pt3dadd( -86.1773, -12.7293, -32.3643, 0.29 ) }
    dend_47 { pt3dadd( -87.0467, -13.171, -32.7814, 1.11 ) }
    dend_47 { pt3dadd( -87.4751, -13.3839, -32.9783, 1.47 ) }
    dend_47 { pt3dadd( -89.5276, -14.4088, -33.8483, 0.29 ) }
    dend_47 { pt3dadd( -89.9602, -14.6242, -34.049, 1.11 ) }
    dend_47 { pt3dadd( -90.3454, -14.8002, -34.2253, 1.11 ) }
    dend_47 { pt3dadd( -90.4059, -14.8197, -34.2539, 1.11 ) }
    dend_47 { pt3dadd( -92.1138, -15.2261, -35.0968, 0.29 ) }
    dend_47 { pt3dadd( -93.3016, -15.4706, -35.7074, 0.29 ) }
    dend_47 { pt3dadd( -94.2543, -15.6167, -36.2169, 1.11 ) }
    dend_47 { pt3dadd( -94.4799, -15.646, -36.3413, 1.11 ) }
    dend_47 { pt3dadd( -97.7466, -15.9985, -38.1851, 0.29 ) }
    dend_47 { pt3dadd( -98.9417, -16.0918, -38.8639, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 30/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 28.177, 14.7345, -10.6189, 0.96 ) }
    dend_40 { pt3dadd( 28.2249, 14.692, -10.7666, 0.96 ) }
    dend_40 { pt3dadd( 28.8468, 14.0718, -12.6185, 0.74 ) }
    dend_40 { pt3dadd( 30.9602, 11.5461, -19.8029, 0.74 ) }
    dend_40 { pt3dadd( 32.1228, 9.92774, -24.054, 0.59 ) }
    dend_40 { pt3dadd( 32.6127, 9.16588, -26.0052, 0.59 ) }
    dend_40 { pt3dadd( 33.2184, 8.19856, -28.4303, 0.59 ) }
    dend_40 { pt3dadd( 33.3629, 7.96629, -29.0143, 0.88 ) }
    dend_40 { pt3dadd( 34.532, 6.09352, -33.6536, 0.74 ) }
    dend_40 { pt3dadd( 34.8322, 5.59114, -34.7343, 1.4 ) }
    dend_40 { pt3dadd( 35.9155, 4.09124, -38.4257, 1.11 ) }
    dend_40 { pt3dadd( 36.3596, 3.66284, -39.8356, 0.59 ) }
    dend_40 { pt3dadd( 36.9945, 3.19635, -41.5612, 0.74 ) }
    dend_40 { pt3dadd( 37.4344, 2.94174, -42.5424, 0.74 ) }
    dend_40 { pt3dadd( 37.5516, 2.89372, -42.7228, 0.74 ) }
    dend_40 { pt3dadd( 38.0066, 2.73114, -43.3608, 0.74 ) }
    dend_40 { pt3dadd( 40.4089, 1.90523, -46.3573, 1.33 ) }
    dend_40 { pt3dadd( 41.3288, 1.56064, -47.4643, 1.33 ) }
    dend_40 { pt3dadd( 42.8662, 0.918559, -49.2557, 0.81 ) }
    dend_40 { pt3dadd( 44.6752, 0.055296, -51.4007, 0.81 ) }
    dend_40 { pt3dadd( 44.7169, 0.033266, -51.4519, 0.81 ) }
    dend_40 { pt3dadd( 46.1188, -0.730833, -53.2027, 0.81 ) }
    dend_40 { pt3dadd( 46.9556, -1.12138, -54.1525, 1.03 ) }
    dend_40 { pt3dadd( 48.2646, -1.63372, -55.6537, 0.52 ) }
    dend_40 { pt3dadd( 49.685, -2.18649, -57.3856, 1.18 ) }
    dend_40 { pt3dadd( 51.3179, -2.83788, -59.5018, 1.18 ) }
    dend_40 { pt3dadd( 52.4153, -3.26317, -60.9354, 0.52 ) }
    dend_40 { pt3dadd( 53.4833, -3.64103, -62.4738, 0.52 ) }
    dend_40 { pt3dadd( 54.4748, -3.91495, -64.078, 0.66 ) }
    dend_40 { pt3dadd( 55.6209, -4.13848, -66.0277, 1.25 ) }
    dend_40 { pt3dadd( 55.895, -4.15532, -66.7184, 1.25 ) }
    dend_40 { pt3dadd( 55.9152, -4.15408, -66.7854, 1.25 ) }
    dend_40 { pt3dadd( 56.7763, -3.94618, -70.2378, 1.25 ) }
    dend_40 { pt3dadd( 57.3461, -3.68376, -72.9617, 1.25 ) }
    dend_40 { pt3dadd( 57.3629, -3.67318, -73.0517, 1.25 ) }
    dend_40 { pt3dadd( 58.932, -2.36653, -82.0214, 1.25 ) }
    dend_40 { pt3dadd( 59.0562, -2.24088, -82.8114, 1.25 ) }
    dend_40 { pt3dadd( 59.3043, -1.94821, -84.5239, 0.88 ) }
    dend_40 { pt3dadd( 59.3799, -1.81756, -85.1695, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 69/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 28.177, 14.7345, -10.6189, 0.88 ) }
    dend_37 { pt3dadd( 30.0383, 15.2375, -11.5339, 0.88 ) }
    dend_37 { pt3dadd( 30.8004, 15.3811, -11.8411, 0.74 ) }
    dend_37 { pt3dadd( 30.9399, 15.402, -11.8915, 0.74 ) }
    dend_37 { pt3dadd( 32.062, 15.5356, -12.2404, 0.74 ) }
    dend_37 { pt3dadd( 32.9612, 15.6261, -12.4922, 0.96 ) }
    dend_37 { pt3dadd( 33.1749, 15.6431, -12.5423, 0.96 ) }
    dend_37 { pt3dadd( 33.6964, 15.6183, -12.6307, 0.96 ) }
    dend_37 { pt3dadd( 33.764, 15.6115, -12.6472, 0.96 ) }
    dend_37 { pt3dadd( 34.3903, 15.6079, -12.8905, 0.96 ) }
    dend_37 { pt3dadd( 34.5232, 15.6181, -12.9591, 0.96 ) }
    dend_37 { pt3dadd( 35.3933, 15.8055, -13.4739, 0.74 ) }
    dend_37 { pt3dadd( 36.5465, 16.1579, -14.2224, 0.52 ) }
    dend_37 { pt3dadd( 37.2402, 16.5138, -14.7734, 0.52 ) }
    dend_37 { pt3dadd( 38.1111, 17.152, -16.2459, 0.52 ) }
    dend_37 { pt3dadd( 38.1363, 17.1779, -16.306, 0.52 ) }
    dend_37 { pt3dadd( 38.3656, 17.5049, -17.0829, 0.52 ) }
    dend_37 { pt3dadd( 38.3782, 17.5319, -17.1456, 0.52 ) }
    dend_37 { pt3dadd( 38.5908, 18.1925, -18.6463, 1.11 ) }
    dend_37 { pt3dadd( 39.0305, 20.3817, -23.766, 0.44 ) }
    dend_37 { pt3dadd( 39.061, 20.692, -24.5179, 0.44 ) }
    dend_37 { pt3dadd( 39.1119, 21.152, -25.6318, 0.88 ) }
    dend_37 { pt3dadd( 39.1393, 21.3119, -26.0807, 0.88 ) }
    dend_37 { pt3dadd( 39.1485, 21.3324, -26.1571, 0.88 ) }
    dend_37 { pt3dadd( 39.2038, 21.42, -26.5857, 0.88 ) }
    dend_37 { pt3dadd( 39.4966, 21.8871, -28.7061, 0.59 ) }
    dend_37 { pt3dadd( 39.6221, 22.073, -29.4912, 0.59 ) }
    dend_37 { pt3dadd( 40.1781, 22.7599, -32.4047, 0.81 ) }
    dend_37 { pt3dadd( 40.8864, 23.5604, -35.8808, 0.59 ) }
    dend_37 { pt3dadd( 41.5875, 24.2881, -39.1091, 1.33 ) }
    dend_37 { pt3dadd( 41.8281, 24.5162, -40.1556, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_37 { pt3dadd( 42.1033, 24.7569, -41.2548, 0.44 ) }
    dend_37 { pt3dadd( 42.8994, 25.5376, -44.4446, 1.11 ) }
    dend_37 { pt3dadd( 42.9222, 25.5616, -44.517, 1.11 ) }
    dend_37 { pt3dadd( 43.0796, 25.7112, -44.8555, 1.11 ) }
    dend_37 { pt3dadd( 43.1223, 25.7366, -44.9041, 1.11 ) }
    dend_37 { pt3dadd( 43.4114, 25.891, -45.1795, 1.11 ) }
    dend_37 { pt3dadd( 43.5254, 25.9469, -45.2578, 1.11 ) }
    dend_37 { pt3dadd( 44.098, 26.2302, -45.4622, 1.11 ) }
    dend_37 { pt3dadd( 45.533, 26.8907, -45.9506, 0.52 ) }
    dend_37 { pt3dadd( 46.7146, 27.4451, -46.4494, 0.44 ) }
    dend_37 { pt3dadd( 46.8972, 27.5306, -46.5352, 0.44 ) }
    dend_37 { pt3dadd( 47.8378, 28.0036, -47.0121, 0.29 ) }
    dend_37 { pt3dadd( 48.3119, 28.2873, -47.2448, 0.29 ) }
    dend_37 { pt3dadd( 48.365, 28.3233, -47.2701, 0.29 ) }
    dend_37 { pt3dadd( 49.6333, 29.3556, -48.4121, 0.59 ) }
    dend_37 { pt3dadd( 49.6666, 29.3852, -48.4523, 0.59 ) }
    dend_37 { pt3dadd( 50.0325, 29.7159, -48.9767, 0.59 ) }
    dend_37 { pt3dadd( 50.8756, 30.5035, -50.2466, 0.74 ) }
    dend_37 { pt3dadd( 50.9099, 30.5347, -50.299, 0.74 ) }
    dend_37 { pt3dadd( 53.0245, 32.4215, -53.485, 1.03 ) }
    dend_37 { pt3dadd( 53.4604, 32.7924, -54.155, 0.96 ) }
    dend_37 { pt3dadd( 55.0221, 34.051, -56.6142, 0.29 ) }
    dend_37 { pt3dadd( 55.4042, 34.3308, -57.2424, 1.11 ) }
    dend_37 { pt3dadd( 55.4374, 34.3524, -57.2997, 1.11 ) }
    dend_37 { pt3dadd( 55.7949, 34.5774, -57.8572, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 25/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 9.4014, -30.5794, -15.524, 0.66 ) }
    dend_30 { pt3dadd( 9.56282, -30.6375, -16.3825, 0.66 ) }
    dend_30 { pt3dadd( 9.64639, -30.7277, -16.9411, 0.66 ) }
    dend_30 { pt3dadd( 9.7056, -30.9219, -18.0522, 0.66 ) }
    dend_30 { pt3dadd( 9.71013, -30.9309, -18.1113, 0.66 ) }
    dend_30 { pt3dadd( 10.0217, -31.4478, -21.4212, 0.74 ) }
    dend_30 { pt3dadd( 10.0277, -31.4582, -21.4799, 0.74 ) }
    dend_30 { pt3dadd( 10.2412, -31.9519, -23.6936, 1.03 ) }
    dend_30 { pt3dadd( 10.5873, -32.9492, -27.3496, 0.66 ) }
    dend_30 { pt3dadd( 11.0556, -34.3757, -31.8246, 0.44 ) }
    dend_30 { pt3dadd( 11.1205, -34.5496, -32.3113, 0.74 ) }
    dend_30 { pt3dadd( 11.2766, -34.9089, -33.1797, 0.52 ) }
    dend_30 { pt3dadd( 11.5506, -35.4647, -34.4114, 0.52 ) }
    dend_30 { pt3dadd( 11.8557, -36.0739, -35.526, 0.88 ) }
    dend_30 { pt3dadd( 11.9727, -36.3384, -35.8993, 0.88 ) }
    dend_30 { pt3dadd( 12.7287, -38.7215, -38.8371, 0.44 ) }
    dend_30 { pt3dadd( 12.8492, -39.187, -39.4397, 0.44 ) }
    dend_30 { pt3dadd( 12.8579, -39.2272, -39.4948, 0.44 ) }
    dend_30 { pt3dadd( 13.0445, -40.3797, -41.1378, 0.37 ) }
    dend_30 { pt3dadd( 13.1521, -41.4685, -42.5453, 0.88 ) }
    dend_30 { pt3dadd( 13.1661, -41.77, -42.8726, 1.33 ) }
    dend_30 { pt3dadd( 13.1737, -42.318, -43.2732, 1.47 ) }
    dend_30 { pt3dadd( 13.2051, -42.5942, -43.4531, 1.25 ) }
    dend_30 { pt3dadd( 13.2198, -42.6438, -43.4787, 1.25 ) }
    dend_30 { pt3dadd( 13.6656, -43.4944, -43.7418, 0.29 ) }
    dend_30 { pt3dadd( 14.2399, -44.5693, -43.9364, 0.29 ) }
    dend_30 { pt3dadd( 14.6457, -45.3392, -44.065, 1.18 ) }
    dend_30 { pt3dadd( 14.9378, -45.9145, -44.1456, 1.55 ) }
    dend_30 { pt3dadd( 15.2418, -46.5552, -44.2193, 1.11 ) }
    dend_30 { pt3dadd( 15.6475, -47.4385, -44.3356, 0.52 ) }
    dend_30 { pt3dadd( 16.146, -48.617, -44.5022, 0.52 ) }
    dend_30 { pt3dadd( 16.1703, -48.6793, -44.5124, 0.52 ) }
    dend_30 { pt3dadd( 16.644, -49.821, -44.7165, 0.52 ) }
    dend_30 { pt3dadd( 16.6978, -49.9201, -44.7437, 0.52 ) }
    dend_30 { pt3dadd( 17.2533, -50.7555, -45.1087, 0.44 ) }
    dend_30 { pt3dadd( 17.292, -50.8027, -45.1392, 0.44 ) }
    dend_30 { pt3dadd( 17.6691, -51.2361, -45.4753, 0.44 ) }
    dend_30 { pt3dadd( 17.7379, -51.3329, -45.5451, 0.44 ) }
    dend_30 { pt3dadd( 18.2411, -52.2035, -46.1412, 0.52 ) }
    dend_30 { pt3dadd( 18.6164, -53.1307, -46.7277, 0.81 ) }
    dend_30 { pt3dadd( 18.6352, -53.1949, -46.7661, 0.81 ) }
    dend_30 { pt3dadd( 18.8662, -54.1336, -47.3046, 1.11 ) }
    dend_30 { pt3dadd( 19.014, -54.8096, -47.6633, 1.11 ) }
    dend_30 { pt3dadd( 19.0588, -54.987, -47.749, 1.11 ) }
    dend_30 { pt3dadd( 19.5082, -56.4479, -48.3717, 0.52 ) }
    dend_30 { pt3dadd( 19.9858, -57.7488, -48.8896, 0.52 ) }
    dend_30 { pt3dadd( 20.346, -58.6197, -49.219, 1.11 ) }
    dend_30 { pt3dadd( 20.7084, -59.4215, -49.4879, 1.47 ) }
    dend_30 { pt3dadd( 21.1014, -60.2056, -49.7194, 0.96 ) }
    dend_30 { pt3dadd( 21.4429, -60.9052, -49.8914, 0.52 ) }
    dend_30 { pt3dadd( 21.4705, -60.9642, -49.911, 0.52 ) }
    dend_30 { pt3dadd( 21.6148, -61.3148, -50.0848, 0.52 ) }
    dend_30 { pt3dadd( 21.909, -62.155, -50.6556, 0.52 ) }
    dend_30 { pt3dadd( 21.9237, -62.2074, -50.6972, 0.52 ) }
    dend_30 { pt3dadd( 22.1543, -63.0458, -51.3667, 0.52 ) }
    dend_30 { pt3dadd( 22.8188, -65.1309, -52.9111, 0.88 ) }
    dend_30 { pt3dadd( 22.996, -65.6538, -53.2535, 1.33 ) }
    dend_30 { pt3dadd( 23.0166, -65.7112, -53.2886, 1.33 ) }
    dend_30 { pt3dadd( 23.2246, -66.2172, -53.5444, 1.33 ) }
    dend_30 { pt3dadd( 23.9042, -67.6627, -53.9969, 0.52 ) }
    dend_30 { pt3dadd( 24.4109, -68.6286, -54.0769, 0.52 ) }
    dend_30 { pt3dadd( 24.9685, -69.8083, -53.9071, 0.52 ) }
    dend_30 { pt3dadd( 24.9935, -69.8694, -53.8953, 0.52 ) }
    dend_30 { pt3dadd( 25.3615, -70.9273, -53.6502, 0.74 ) }
    dend_30 { pt3dadd( 25.7074, -72.1516, -53.2974, 0.59 ) }
    dend_30 { pt3dadd( 25.8728, -73.0143, -53.0005, 0.29 ) }
    dend_30 { pt3dadd( 26.0442, -74.2664, -52.5586, 0.29 ) }
    dend_30 { pt3dadd( 26.11, -74.7641, -52.3967, 0.74 ) }
    dend_30 { pt3dadd( 26.1638, -75.2739, -52.2719, 0.74 ) }
    dend_30 { pt3dadd( 26.1664, -75.3403, -52.2676, 0.74 ) }
    dend_30 { pt3dadd( 26.1745, -76.4588, -52.3384, 0.37 ) }
    dend_30 { pt3dadd( 26.1764, -76.5258, -52.3431, 0.37 ) }
    dend_30 { pt3dadd( 26.2562, -77.5405, -52.4192, 0.37 ) }
    dend_30 { pt3dadd( 26.2639, -77.6072, -52.4219, 0.37 ) }
    dend_30 { pt3dadd( 26.4625, -79.1595, -52.4592, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_30 { pt3dadd( 26.4769, -79.2342, -52.4568, 0.37 ) }
    dend_30 { pt3dadd( 26.6883, -80.028, -52.3835, 0.88 ) }
    dend_30 { pt3dadd( 26.7996, -80.4306, -52.3329, 1.03 ) }
    dend_30 { pt3dadd( 26.9182, -80.8672, -52.3068, 1.03 ) }
    dend_30 { pt3dadd( 26.9361, -80.9315, -52.3062, 1.03 ) }
    dend_30 { pt3dadd( 27.329, -82.2187, -52.3297, 0.29 ) }
    dend_30 { pt3dadd( 27.5209, -82.7877, -52.4215, 0.66 ) }
    dend_30 { pt3dadd( 27.9987, -84.0211, -52.9306, 0.37 ) }
    dend_30 { pt3dadd( 28.4033, -85.0482, -53.502, 1.03 ) }
    dend_30 { pt3dadd( 28.6451, -85.6696, -53.917, 1.03 ) }
    dend_30 { pt3dadd( 28.6649, -85.7198, -53.9597, 1.03 ) }
    dend_30 { pt3dadd( 29.1645, -86.8688, -55.1424, 0.37 ) }
    dend_30 { pt3dadd( 29.8056, -88.059, -56.525, 1.03 ) }
    dend_30 { pt3dadd( 30.0855, -88.4712, -57.0644, 1.03 ) }
    dend_30 { pt3dadd( 30.1157, -88.5135, -57.1236, 1.03 ) }
    dend_30 { pt3dadd( 30.9122, -89.8098, -58.8083, 0.44 ) }
    dend_30 { pt3dadd( 31.1465, -90.2496, -59.3326, 1.4 ) }
    dend_30 { pt3dadd( 31.2683, -90.4659, -59.6006, 1.4 ) }
    dend_30 { pt3dadd( 31.2974, -90.5111, -59.6579, 1.4 ) }
    dend_30 { pt3dadd( 32.9075, -92.5253, -62.5448, 0.52 ) }
    dend_30 { pt3dadd( 34.1519, -93.8028, -64.6114, 0.52 ) }
    dend_30 { pt3dadd( 35.2378, -94.7907, -66.2965, 0.88 ) }
    dend_30 { pt3dadd( 36.5525, -95.9012, -68.281, 0.88 ) }
    dend_30 { pt3dadd( 37.098, -96.3179, -69.0367, 0.88 ) }
    dend_30 { pt3dadd( 38.7931, -97.3808, -71.1504, 0.44 ) }
    dend_30 { pt3dadd( 40.1401, -97.9645, -72.5696, 0.29 ) }
    dend_30 { pt3dadd( 40.8443, -98.1854, -73.2635, 0.22 ) }
    dend_30 { pt3dadd( 40.9022, -98.2011, -73.317, 0.22 ) }
    dend_30 { pt3dadd( 41.8811, -98.5089, -74.1884, 0.22 ) }
    dend_30 { pt3dadd( 43.393, -99.0507, -75.6044, 1.03 ) }
    dend_30 { pt3dadd( 44.5386, -99.5292, -76.5715, 1.47 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 9.4014, -30.5794, -15.524, 0.37 ) }
    dend_29 { pt3dadd( 10.7239, -30.7969, -15.6488, 0.37 ) }
    dend_29 { pt3dadd( 11.4567, -30.9156, -15.693, 0.37 ) }
    dend_29 { pt3dadd( 12.3331, -31.0565, -15.7372, 0.74 ) }
    dend_29 { pt3dadd( 13.4234, -31.2493, -15.7855, 0.74 ) }
    dend_29 { pt3dadd( 13.4943, -31.2633, -15.7928, 0.74 ) }
    dend_29 { pt3dadd( 15.084, -31.5943, -16.0069, 0.88 ) }
    dend_29 { pt3dadd( 16.5783, -31.8441, -16.2005, 0.29 ) }
    dend_29 { pt3dadd( 16.6561, -31.8575, -16.2129, 0.29 ) }
    dend_29 { pt3dadd( 17.2109, -31.9944, -16.3164, 0.88 ) }
    dend_29 { pt3dadd( 18.4538, -32.427, -16.5565, 0.81 ) }
    dend_29 { pt3dadd( 18.517, -32.4536, -16.5677, 0.81 ) }
    dend_29 { pt3dadd( 19.2494, -32.7941, -16.7229, 0.81 ) }
    dend_29 { pt3dadd( 19.331, -32.828, -16.7469, 0.81 ) }
    dend_29 { pt3dadd( 20.7359, -33.3739, -17.2029, 0.81 ) }
    dend_29 { pt3dadd( 21.7097, -33.733, -17.5197, 0.37 ) }
    dend_29 { pt3dadd( 22.7288, -34.0844, -17.828, 0.81 ) }
    dend_29 { pt3dadd( 23.826, -34.4559, -18.1635, 1.18 ) }
    dend_29 { pt3dadd( 25.4275, -35.006, -18.6654, 0.59 ) }
    dend_29 { pt3dadd( 25.4912, -35.0285, -18.6846, 0.59 ) }
    dend_29 { pt3dadd( 26.6415, -35.4674, -19.0342, 0.52 ) }
    dend_29 { pt3dadd( 27.3617, -35.7654, -19.2343, 0.88 ) }
    dend_29 { pt3dadd( 28.2754, -36.2125, -19.4424, 1.18 ) }
    dend_29 { pt3dadd( 28.7677, -36.5001, -19.5338, 1.18 ) }
    dend_29 { pt3dadd( 29.6822, -37.1023, -19.6827, 0.81 ) }
    dend_29 { pt3dadd( 30.7214, -37.7887, -19.8787, 0.59 ) }
    dend_29 { pt3dadd( 31.1439, -38.0709, -19.9716, 1.33 ) }
    dend_29 { pt3dadd( 31.5666, -38.3506, -20.0562, 1.25 ) }
    dend_29 { pt3dadd( 32.7763, -39.11, -20.2283, 0.52 ) }
    dend_29 { pt3dadd( 33.2614, -39.3972, -20.2706, 0.52 ) }
    dend_29 { pt3dadd( 34.2974, -39.9852, -20.2922, 0.52 ) }
    dend_29 { pt3dadd( 34.4184, -40.0525, -20.2852, 0.52 ) }
    dend_29 { pt3dadd( 35.7988, -40.8317, -20.138, 0.52 ) }
    dend_29 { pt3dadd( 36.4635, -41.2075, -20.032, 1.03 ) }
    dend_29 { pt3dadd( 36.5317, -41.2464, -20.019, 1.03 ) }
    dend_29 { pt3dadd( 37.0599, -41.5533, -19.9386, 1.03 ) }
    dend_29 { pt3dadd( 37.8794, -42.0208, -19.9539, 0.22 ) }
    dend_29 { pt3dadd( 38.0093, -42.088, -19.9808, 0.22 ) }
    dend_29 { pt3dadd( 38.7456, -42.4372, -20.2411, 0.22 ) }
    dend_29 { pt3dadd( 39.4719, -42.7939, -20.5267, 1.03 ) }
    dend_29 { pt3dadd( 39.5304, -42.824, -20.5485, 1.03 ) }
    dend_29 { pt3dadd( 40.878, -43.564, -21.0172, 0.29 ) }
    dend_29 { pt3dadd( 41.8498, -44.1277, -21.3294, 0.29 ) }
    dend_29 { pt3dadd( 42.3107, -44.4171, -21.4534, 0.96 ) }
    dend_29 { pt3dadd( 43.0111, -44.864, -21.5888, 1.11 ) }
    dend_29 { pt3dadd( 43.6568, -45.2846, -21.6589, 1.11 ) }
    dend_29 { pt3dadd( 44.387, -45.7543, -21.6297, 0.29 ) }
    dend_29 { pt3dadd( 44.5067, -45.8307, -21.5838, 0.29 ) }
    dend_29 { pt3dadd( 45.036, -46.1394, -21.1682, 0.29 ) }
    dend_29 { pt3dadd( 45.6573, -46.5602, -20.3581, 0.29 ) }
    dend_29 { pt3dadd( 45.6855, -46.5874, -20.3007, 0.29 ) }
    dend_29 { pt3dadd( 46.1615, -47.1733, -19.0196, 1.03 ) }
    dend_29 { pt3dadd( 46.7473, -48.0255, -17.0609, 0.66 ) }
    dend_29 { pt3dadd( 47.1649, -48.6451, -15.3498, 0.96 ) }
    dend_29 { pt3dadd( 47.4963, -49.1747, -13.7437, 0.52 ) }
    dend_29 { pt3dadd( 47.8618, -49.8121, -11.8252, 0.52 ) }
    dend_29 { pt3dadd( 47.8728, -49.8306, -11.7695, 0.52 ) }
    dend_29 { pt3dadd( 48.2694, -50.4171, -10.0787, 1.11 ) }
    dend_29 { pt3dadd( 49.4775, -51.9397, -5.93517, 0.88 ) }
    dend_29 { pt3dadd( 49.4998, -51.964, -5.87397, 0.88 ) }
    dend_29 { pt3dadd( 49.8493, -52.3032, -5.068, 0.74 ) }
    dend_29 { pt3dadd( 49.9439, -52.3956, -4.87285, 0.74 ) }
    dend_29 { pt3dadd( 50.6817, -53.199, -3.53607, 0.59 ) }
    dend_29 { pt3dadd( 51.5781, -54.3027, -2.21312, 0.81 ) }
    dend_29 { pt3dadd( 52.1771, -55.0469, -1.6081, 0.96 ) }
    dend_29 { pt3dadd( 52.5774, -55.5054, -1.23095, 0.96 ) }
    dend_29 { pt3dadd( 53.2517, -56.1923, -0.680485, 0.44 ) }
    dend_29 { pt3dadd( 53.8843, -56.8014, -0.249276, 0.44 ) }
    dend_29 { pt3dadd( 53.9872, -56.8928, -0.196742, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_29 { pt3dadd( 54.9846, -57.6461, 0.0287399, 0.44 ) }
    dend_29 { pt3dadd( 55.2488, -57.83, 0.077557, 0.44 ) }
    dend_29 { pt3dadd( 56.3061, -58.5154, 0.281898, 0.44 ) }
    dend_29 { pt3dadd( 56.6746, -58.7543, 0.350072, 0.96 ) }
    dend_29 { pt3dadd( 56.7992, -58.8276, 0.383453, 0.96 ) }
    dend_29 { pt3dadd( 57.4559, -59.1891, 0.603357, 0.96 ) }
    dend_29 { pt3dadd( 58.4702, -59.7213, 1.0287, 0.59 ) }
    dend_29 { pt3dadd( 58.9647, -59.9407, 1.25638, 0.37 ) }
    dend_29 { pt3dadd( 59.0226, -59.9619, 1.28878, 0.37 ) }
    dend_29 { pt3dadd( 60.0516, -60.3617, 1.92751, 0.29 ) }
    dend_29 { pt3dadd( 60.1058, -60.389, 1.96119, 0.29 ) }
    dend_29 { pt3dadd( 60.5977, -60.6692, 2.24275, 0.29 ) }
    dend_29 { pt3dadd( 60.6508, -60.7044, 2.26943, 0.29 ) }
    dend_29 { pt3dadd( 61.4722, -61.4122, 2.6735, 0.81 ) }
    dend_29 { pt3dadd( 61.9269, -61.8879, 2.89325, 0.81 ) }
    dend_29 { pt3dadd( 62.6974, -62.8839, 3.2523, 0.29 ) }
    dend_29 { pt3dadd( 63.0972, -63.4689, 3.39612, 0.29 ) }
    dend_29 { pt3dadd( 63.1497, -63.5579, 3.40885, 0.29 ) }
    dend_29 { pt3dadd( 63.7288, -64.6795, 3.46138, 0.29 ) }
    dend_29 { pt3dadd( 63.9344, -65.1681, 3.42543, 0.81 ) }
    dend_29 { pt3dadd( 64.1504, -65.7571, 3.34897, 0.81 ) }
    dend_29 { pt3dadd( 64.4672, -66.8407, 3.17711, 0.74 ) }
    dend_29 { pt3dadd( 64.617, -67.3099, 3.10075, 0.52 ) }
    dend_29 { pt3dadd( 64.6443, -67.3698, 3.0874, 0.52 ) }
    dend_29 { pt3dadd( 65.0049, -67.9826, 2.91168, 0.37 ) }
    dend_29 { pt3dadd( 65.4885, -68.6627, 2.64979, 0.29 ) }
    dend_29 { pt3dadd( 65.5294, -68.7159, 2.62761, 0.29 ) }
    dend_29 { pt3dadd( 66.0882, -69.4576, 2.32649, 0.29 ) }
    dend_29 { pt3dadd( 67.1451, -70.959, 1.71973, 0.29 ) }
    dend_29 { pt3dadd( 67.1802, -71.0132, 1.69947, 0.29 ) }
    dend_29 { pt3dadd( 67.6518, -71.7869, 1.43243, 0.66 ) }
    dend_29 { pt3dadd( 68.2719, -72.8647, 1.08701, 0.29 ) }
    dend_29 { pt3dadd( 69.0278, -74.2033, 0.711515, 0.44 ) }
    dend_29 { pt3dadd( 69.6455, -75.3324, 0.444558, 0.29 ) }
    dend_29 { pt3dadd( 70.2382, -76.4009, 0.256839, 0.74 ) }
    dend_29 { pt3dadd( 70.69, -77.1732, 0.134151, 0.88 ) }
    dend_29 { pt3dadd( 70.7346, -77.2353, 0.122023, 0.88 ) }
    dend_29 { pt3dadd( 71.6028, -78.0299, -0.268164, 0.29 ) }
    dend_29 { pt3dadd( 71.8611, -78.2122, -0.397446, 0.52 ) }
    dend_29 { pt3dadd( 71.9155, -78.241, -0.42939, 0.52 ) }
    dend_29 { pt3dadd( 72.3864, -78.4257, -0.747017, 0.52 ) }
    dend_29 { pt3dadd( 74.1591, -78.9872, -2.08072, 0.29 ) }
    dend_29 { pt3dadd( 75.7472, -79.4254, -3.36816, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 43/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.833397, -31.6317, -6.76374, 0.52 ) }
    dend_27 { pt3dadd( 1.97959, -31.4068, -6.07175, 0.52 ) }
    dend_27 { pt3dadd( 3.84546, -31.0726, -5.2132, 0.59 ) }
    dend_27 { pt3dadd( 3.90983, -31.0616, -5.18822, 0.59 ) }
    dend_27 { pt3dadd( 4.34777, -31.0019, -5.04275, 0.88 ) }
    dend_27 { pt3dadd( 4.69167, -30.9618, -4.94055, 0.88 ) }
    dend_27 { pt3dadd( 5.7731, -30.8898, -4.65638, 0.59 ) }
    dend_27 { pt3dadd( 6.69879, -30.9855, -4.45375, 0.59 ) }
    dend_27 { pt3dadd( 6.88842, -31.0602, -4.40525, 0.59 ) }
    dend_27 { pt3dadd( 7.34764, -31.2849, -4.25807, 1.33 ) }
    dend_27 { pt3dadd( 7.47157, -31.3457, -4.20191, 1.33 ) }
    dend_27 { pt3dadd( 8.10873, -31.6111, -3.87015, 1.33 ) }
    dend_27 { pt3dadd( 10.0733, -32.3396, -2.72707, 0.81 ) }
    dend_27 { pt3dadd( 11.7596, -32.7525, -1.68703, 0.66 ) }
    dend_27 { pt3dadd( 11.833, -32.7677, -1.63358, 0.66 ) }
    dend_27 { pt3dadd( 13.3518, -33.033, -0.418563, 0.52 ) }
    dend_27 { pt3dadd( 14.467, -33.2009, 0.508674, 0.52 ) }
    dend_27 { pt3dadd( 14.5203, -33.2064, 0.554721, 0.52 ) }
    dend_27 { pt3dadd( 16.2455, -33.2473, 2.19465, 0.88 ) }
    dend_27 { pt3dadd( 18.3397, -33.2572, 4.26618, 0.59 ) }
    dend_27 { pt3dadd( 18.3864, -33.2616, 4.31819, 0.59 ) }
    dend_27 { pt3dadd( 18.8236, -33.3543, 4.85912, 0.59 ) }
    dend_27 { pt3dadd( 18.9103, -33.3782, 4.9789, 0.59 ) }
    dend_27 { pt3dadd( 20.033, -33.7053, 6.56182, 0.96 ) }
    dend_27 { pt3dadd( 20.5709, -33.8931, 7.30884, 0.96 ) }
    dend_27 { pt3dadd( 22.9598, -34.8202, 10.0874, 0.52 ) }
    dend_27 { pt3dadd( 23.775, -35.2291, 10.9637, 0.88 ) }
    dend_27 { pt3dadd( 23.8255, -35.2616, 11.0155, 0.88 ) }
    dend_27 { pt3dadd( 24.3769, -35.7193, 11.5246, 0.88 ) }
    dend_27 { pt3dadd( 25.2574, -36.7393, 12.2635, 0.66 ) }
    dend_27 { pt3dadd( 26.0121, -37.8696, 12.8951, 0.52 ) }
    dend_27 { pt3dadd( 26.4332, -38.7556, 13.2657, 0.52 ) }
    dend_27 { pt3dadd( 26.6773, -39.4502, 13.5697, 0.74 ) }
    dend_27 { pt3dadd( 26.8469, -40.0642, 13.8678, 0.96 ) }
    dend_27 { pt3dadd( 27.1504, -41.5852, 14.6636, 0.66 ) }
    dend_27 { pt3dadd( 27.1574, -41.6356, 14.6908, 0.66 ) }
    dend_27 { pt3dadd( 27.3275, -43.0937, 15.4752, 0.29 ) }
    dend_27 { pt3dadd( 27.5452, -44.517, 16.1419, 0.29 ) }
    dend_27 { pt3dadd( 27.7288, -45.4729, 16.4912, 0.44 ) }
    dend_27 { pt3dadd( 27.8516, -46.0278, 16.649, 0.88 ) }
    dend_27 { pt3dadd( 28.0671, -46.8945, 16.7965, 0.88 ) }
    dend_27 { pt3dadd( 28.0852, -46.9584, 16.803, 0.88 ) }
    dend_27 { pt3dadd( 28.5656, -48.4348, 16.8268, 0.44 ) }
    dend_27 { pt3dadd( 29.0127, -49.6024, 16.8258, 0.81 ) }
    dend_27 { pt3dadd( 29.0423, -49.6626, 16.8244, 0.81 ) }
    dend_27 { pt3dadd( 29.4513, -50.2472, 16.7618, 0.81 ) }
    dend_27 { pt3dadd( 30.2139, -51.0537, 16.6012, 0.37 ) }
    dend_27 { pt3dadd( 30.2671, -51.0963, 16.5884, 0.37 ) }
    dend_27 { pt3dadd( 31.2458, -51.6194, 16.3348, 0.37 ) }
    dend_27 { pt3dadd( 32.1072, -51.9851, 16.0698, 0.88 ) }
    dend_27 { pt3dadd( 33.6307, -52.5825, 15.5601, 0.88 ) }
    dend_27 { pt3dadd( 33.7248, -52.62, 15.5241, 0.88 ) }
    dend_27 { pt3dadd( 34.1547, -52.821, 15.3451, 0.88 ) }
    dend_27 { pt3dadd( 34.8679, -53.2368, 15.0558, 0.44 ) }
    dend_27 { pt3dadd( 35.7515, -53.8866, 14.7187, 1.18 ) }
    dend_27 { pt3dadd( 35.9131, -54.0246, 14.6788, 1.18 ) }
    dend_27 { pt3dadd( 37.0692, -55.1185, 14.4588, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( 37.7548, -55.83, 14.2418, 0.44 ) }
    dend_27 { pt3dadd( 38.2197, -56.3521, 14.056, 1.25 ) }
    dend_27 { pt3dadd( 38.7838, -57.0817, 13.7872, 1.47 ) }
    dend_27 { pt3dadd( 39.6282, -58.26, 13.2376, 0.59 ) }
    dend_27 { pt3dadd( 40.5171, -59.528, 12.5381, 0.44 ) }
    dend_27 { pt3dadd( 41.5302, -60.874, 11.3251, 1.4 ) }
    dend_27 { pt3dadd( 41.8034, -61.2508, 10.9287, 1.4 ) }
    dend_27 { pt3dadd( 42.3164, -62.0182, 10.0724, 0.88 ) }
    dend_27 { pt3dadd( 43.1656, -63.3727, 8.4993, 0.96 ) }
    dend_27 { pt3dadd( 43.4979, -63.9347, 7.85593, 1.33 ) }
    dend_27 { pt3dadd( 45.1039, -66.6157, 5.0291, 1.25 ) }
    dend_27 { pt3dadd( 45.7959, -67.701, 4.01032, 0.44 ) }
    dend_27 { pt3dadd( 46.2086, -68.3212, 3.45408, 0.74 ) }
    dend_27 { pt3dadd( 46.4304, -68.5916, 3.23881, 0.74 ) }
    dend_27 { pt3dadd( 47.0623, -69.3304, 2.92378, 0.74 ) }
    dend_27 { pt3dadd( 47.1079, -69.3799, 2.90945, 0.74 ) }
    dend_27 { pt3dadd( 47.7051, -70.0073, 2.94572, 0.29 ) }
    dend_27 { pt3dadd( 47.7859, -70.0701, 2.92613, 0.29 ) }
    dend_27 { pt3dadd( 48.9622, -71.0299, 2.45538, 0.29 ) }
    dend_27 { pt3dadd( 49.0077, -71.0739, 2.42899, 0.29 ) }
    dend_27 { pt3dadd( 50.0845, -72.1581, 1.72363, 0.96 ) }
    dend_27 { pt3dadd( 50.5649, -72.6915, 1.41128, 0.81 ) }
    dend_27 { pt3dadd( 50.61, -72.744, 1.3751, 0.81 ) }
    dend_27 { pt3dadd( 51.1338, -73.3785, 0.921684, 0.37 ) }
    dend_27 { pt3dadd( 51.2123, -73.4678, 0.851027, 0.37 ) }
    dend_27 { pt3dadd( 52.0719, -74.1835, 0.238311, 0.37 ) }
    dend_27 { pt3dadd( 52.1259, -74.2145, 0.207963, 0.37 ) }
    dend_27 { pt3dadd( 53.5381, -74.8314, -0.598617, 0.66 ) }
    dend_27 { pt3dadd( 53.5964, -74.8523, -0.630418, 0.66 ) }
    dend_27 { pt3dadd( 54.8278, -75.1985, -1.29403, 0.29 ) }
    dend_27 { pt3dadd( 55.4232, -75.3552, -1.55615, 0.74 ) }
    dend_27 { pt3dadd( 55.9405, -75.4841, -1.73233, 0.29 ) }
    dend_27 { pt3dadd( 56.1805, -75.5488, -1.77058, 0.29 ) }
    dend_27 { pt3dadd( 57.0311, -75.8767, -1.59183, 0.29 ) }
    dend_27 { pt3dadd( 57.0913, -75.9048, -1.57183, 0.29 ) }
    dend_27 { pt3dadd( 57.9871, -76.3865, -0.931484, 1.03 ) }
    dend_27 { pt3dadd( 58.0375, -76.4131, -0.891723, 1.03 ) }
    dend_27 { pt3dadd( 58.3871, -76.5952, -0.602662, 1.03 ) }
    dend_27 { pt3dadd( 59.5138, -77.148, 0.320878, 0.29 ) }
    dend_27 { pt3dadd( 60.4507, -77.5897, 1.09084, 1.18 ) }
    dend_27 { pt3dadd( 62.6321, -78.6389, 2.96932, 0.66 ) }
    dend_27 { pt3dadd( 63.2289, -78.9082, 3.55363, 0.52 ) }
    dend_27 { pt3dadd( 63.2679, -78.9245, 3.59592, 0.52 ) }
    dend_27 { pt3dadd( 63.8377, -79.1549, 4.26655, 0.37 ) }
    dend_27 { pt3dadd( 63.8714, -79.1709, 4.31328, 0.37 ) }
    dend_27 { pt3dadd( 64.7177, -79.6381, 5.68037, 0.96 ) }
    dend_27 { pt3dadd( 65.7595, -80.3058, 7.47162, 0.52 ) }
    dend_27 { pt3dadd( 65.7934, -80.3309, 7.53984, 0.52 ) }
    dend_27 { pt3dadd( 66.1441, -80.5988, 8.2988, 0.81 ) }
    dend_27 { pt3dadd( 66.6276, -80.998, 9.53015, 1.18 ) }
    dend_27 { pt3dadd( 74.3142, -86.6148, 11.9714, 1.18 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.833397, -31.6317, -6.76374, 0.66 ) }
    dend_24 { pt3dadd( -0.465373, -32.6079, -7.25093, 0.66 ) }
    dend_24 { pt3dadd( -1.16252, -33.3056, -7.52641, 0.66 ) }
    dend_24 { pt3dadd( -1.1777, -33.3692, -7.54343, 0.66 ) }
    dend_24 { pt3dadd( -1.12454, -34.2359, -7.73979, 0.66 ) }
    dend_24 { pt3dadd( -1.03115, -34.4932, -7.78933, 0.66 ) }
    dend_24 { pt3dadd( -0.581458, -35.2075, -7.90652, 0.66 ) }
    dend_24 { pt3dadd( -0.368968, -35.4333, -7.91741, 0.66 ) }
    dend_24 { pt3dadd( 0.888767, -36.6002, -7.9283, 0.66 ) }
    dend_24 { pt3dadd( 0.940417, -36.645, -7.9261, 0.66 ) }
    dend_24 { pt3dadd( 1.8165, -37.3467, -7.86233, 1.25 ) }
    dend_24 { pt3dadd( 2.74884, -38.0919, -7.77064, 0.37 ) }
    dend_24 { pt3dadd( 3.94286, -39.0765, -7.61952, 0.52 ) }
    dend_24 { pt3dadd( 4.73869, -39.7868, -7.5058, 0.88 ) }
    dend_24 { pt3dadd( 5.40998, -40.4781, -7.3857, 1.18 ) }
    dend_24 { pt3dadd( 5.77267, -40.9298, -7.34475, 1.18 ) }
    dend_24 { pt3dadd( 6.01549, -41.3651, -7.34768, 1.18 ) }
    dend_24 { pt3dadd( 6.1713, -41.8255, -7.39853, 1.18 ) }
    dend_24 { pt3dadd( 6.32758, -42.6377, -7.5682, 0.96 ) }
    dend_24 { pt3dadd( 6.42774, -43.3349, -7.74107, 0.96 ) }
    dend_24 { pt3dadd( 6.56784, -44.421, -8.07665, 0.52 ) }
    dend_24 { pt3dadd( 6.67997, -45.2749, -8.3597, 0.88 ) }
    dend_24 { pt3dadd( 6.84343, -46.1189, -8.65481, 0.44 ) }
    dend_24 { pt3dadd( 6.86023, -46.1807, -8.67687, 0.44 ) }
    dend_24 { pt3dadd( 7.22122, -46.9466, -9.14566, 0.44 ) }
    dend_24 { pt3dadd( 7.57247, -47.4774, -9.61361, 0.88 ) }
    dend_24 { pt3dadd( 7.60802, -47.5178, -9.65752, 0.88 ) }
    dend_24 { pt3dadd( 7.9542, -47.8406, -10.0943, 1.18 ) }
    dend_24 { pt3dadd( 8.03067, -47.9054, -10.1897, 1.18 ) }
    dend_24 { pt3dadd( 9.73548, -49.3459, -12.2717, 0.52 ) }
    dend_24 { pt3dadd( 9.77539, -49.3793, -12.3183, 0.52 ) }
    dend_24 { pt3dadd( 10.3986, -49.9306, -12.9362, 0.52 ) }
    dend_24 { pt3dadd( 10.4522, -49.9878, -12.9809, 0.52 ) }
    dend_24 { pt3dadd( 10.7502, -50.3867, -13.1763, 0.52 ) }
    dend_24 { pt3dadd( 10.9195, -50.6492, -13.2449, 0.96 ) }
    dend_24 { pt3dadd( 11.2452, -51.2302, -13.2841, 1.33 ) }
    dend_24 { pt3dadd( 11.6449, -51.9382, -13.3698, 0.81 ) }
    dend_24 { pt3dadd( 12.2244, -52.996, -13.5346, 0.52 ) }
    dend_24 { pt3dadd( 12.7764, -54.0189, -13.6775, 0.88 ) }
    dend_24 { pt3dadd( 13.1408, -54.7373, -13.7189, 1.25 ) }
    dend_24 { pt3dadd( 13.1855, -54.829, -13.7186, 1.25 ) }
    dend_24 { pt3dadd( 13.823, -56.1254, -13.6315, 0.37 ) }
    dend_24 { pt3dadd( 14.2046, -56.8982, -13.5597, 0.74 ) }
    dend_24 { pt3dadd( 14.6253, -57.8445, -13.4903, 1.18 ) }
    dend_24 { pt3dadd( 15.109, -59.268, -13.5338, 0.37 ) }
    dend_24 { pt3dadd( 15.1251, -59.3322, -13.5426, 0.37 ) }
    dend_24 { pt3dadd( 15.2883, -60.0967, -13.708, 0.37 ) }
    dend_24 { pt3dadd( 15.5003, -61.1978, -14.0271, 0.88 ) }
    dend_24 { pt3dadd( 15.7887, -62.5767, -14.5754, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_24 { pt3dadd( 16.1382, -63.9523, -15.2612, 0.66 ) }
    dend_24 { pt3dadd( 16.4822, -65.0529, -15.8727, 0.29 ) }
    dend_24 { pt3dadd( 16.6033, -65.4109, -16.0585, 1.03 ) }
    dend_24 { pt3dadd( 16.788, -65.9383, -16.2996, 1.18 ) }
    dend_24 { pt3dadd( 16.8141, -65.9979, -16.3195, 1.18 ) }
    dend_24 { pt3dadd( 17.1482, -66.6116, -16.461, 1.18 ) }
    dend_24 { pt3dadd( 17.5673, -67.3807, -16.6177, 0.29 ) }
    dend_24 { pt3dadd( 17.7241, -67.7527, -16.7463, 0.29 ) }
    dend_24 { pt3dadd( 17.8897, -68.375, -17.0404, 1.18 ) }
    dend_24 { pt3dadd( 17.9666, -68.7723, -17.2529, 1.55 ) }
    dend_24 { pt3dadd( 18.1586, -69.8455, -17.8245, 0.88 ) }
    dend_24 { pt3dadd( 18.3269, -70.9602, -18.4362, 0.52 ) }
    dend_24 { pt3dadd( 18.5105, -72.065, -19.0523, 0.81 ) }
    dend_24 { pt3dadd( 18.7959, -73.2454, -19.6611, 0.29 ) }
    dend_24 { pt3dadd( 19.0743, -74.0827, -20.0334, 0.29 ) }
    dend_24 { pt3dadd( 19.407, -74.8639, -20.315, 1.03 ) }
    dend_24 { pt3dadd( 19.4398, -74.9214, -20.3273, 1.03 ) }
    dend_24 { pt3dadd( 19.8212, -75.4301, -20.3573, 1.03 ) }
    dend_24 { pt3dadd( 20.7572, -76.4268, -20.3888, 0.29 ) }
    dend_24 { pt3dadd( 21.4048, -77.0254, -20.4229, 0.29 ) }
    dend_24 { pt3dadd( 21.7488, -77.3311, -20.4679, 1.11 ) }
    dend_24 { pt3dadd( 22.2606, -77.8044, -20.5761, 1.4 ) }
    dend_24 { pt3dadd( 22.8089, -78.3306, -20.7169, 1.11 ) }
    dend_24 { pt3dadd( 23.7561, -79.3598, -21.0923, 0.37 ) }
    dend_24 { pt3dadd( 24.0632, -79.78, -21.2876, 0.37 ) }
    dend_24 { pt3dadd( 24.0948, -79.8439, -21.3188, 0.37 ) }
    dend_24 { pt3dadd( 24.2453, -80.3825, -21.5555, 0.37 ) }
    dend_24 { pt3dadd( 24.2556, -80.4516, -21.5872, 0.37 ) }
    dend_24 { pt3dadd( 24.3878, -81.3974, -21.9767, 0.44 ) }
    dend_24 { pt3dadd( 24.5315, -82.0451, -22.1948, 0.81 ) }
    dend_24 { pt3dadd( 24.7424, -82.7686, -22.428, 1.11 ) }
    dend_24 { pt3dadd( 25.0036, -83.4826, -22.6156, 1.11 ) }
    dend_24 { pt3dadd( 25.5494, -84.7384, -22.8583, 0.81 ) }
    dend_24 { pt3dadd( 26.1215, -85.9987, -22.8922, 0.29 ) }
    dend_24 { pt3dadd( 26.6999, -87.3591, -22.705, 0.29 ) }
    dend_24 { pt3dadd( 26.7262, -87.4296, -22.6875, 0.29 ) }
    dend_24 { pt3dadd( 26.9728, -88.2665, -22.3951, 1.62 ) }
    dend_24 { pt3dadd( 27.1687, -89.2998, -21.9538, 2.06 ) }
    dend_24 { pt3dadd( 27.3027, -91.1993, -21.0633, 0.29 ) }
    dend_24 { pt3dadd( 27.2596, -92.4011, -20.5157, 0.29 ) }
    dend_24 { pt3dadd( 27.2222, -92.858, -20.2973, 0.66 ) }
    dend_24 { pt3dadd( 27.1847, -93.4149, -20.0398, 0.88 ) }
    dend_24 { pt3dadd( 27.1266, -93.9342, -19.8246, 0.88 ) }
    dend_24 { pt3dadd( 27.0057, -94.8016, -19.4784, 0.29 ) }
    dend_24 { pt3dadd( 26.9718, -95.0134, -19.4032, 0.29 ) }
    dend_24 { pt3dadd( 26.6606, -96.5427, -18.6913, 0.29 ) }
    dend_24 { pt3dadd( 26.5567, -96.9198, -18.49, 1.18 ) }
    dend_24 { pt3dadd( 26.2281, -97.682, -18.0306, 1.18 ) }
    dend_24 { pt3dadd( 26.1943, -97.7265, -17.9911, 1.18 ) }
    dend_24 { pt3dadd( 25.4718, -98.4367, -17.2108, 0.29 ) }
    dend_24 { pt3dadd( 25.0686, -98.7903, -16.8232, 0.29 ) }
    dend_24 { pt3dadd( 24.9692, -98.8661, -16.7417, 0.29 ) }
    dend_24 { pt3dadd( 24.3965, -99.3588, -16.1817, 0.29 ) }
    dend_24 { pt3dadd( 23.3379, -100.448, -14.8967, 0.29 ) }
    dend_24 { pt3dadd( 23.0794, -100.751, -14.5594, 0.66 ) }
    dend_24 { pt3dadd( 22.824, -101.119, -14.1942, 0.88 ) }
    dend_24 { pt3dadd( 22.7963, -101.168, -14.1548, 0.88 ) }
    dend_24 { pt3dadd( 22.2847, -101.956, -13.6223, 0.29 ) }
    dend_24 { pt3dadd( 22.232, -102.035, -13.5819, 0.29 ) }
    dend_24 { pt3dadd( 21.9295, -102.449, -13.4317, 0.29 ) }
    dend_24 { pt3dadd( 21.6136, -102.841, -13.2903, 0.88 ) }
    dend_24 { pt3dadd( 21.1469, -103.405, -13.1049, 0.88 ) }
    dend_24 { pt3dadd( 20.1204, -104.819, -12.6484, 0.29 ) }
    dend_24 { pt3dadd( 19.7474, -105.467, -12.4133, 0.29 ) }
    dend_24 { pt3dadd( 19.5508, -105.89, -12.245, 1.03 ) }
    dend_24 { pt3dadd( 19.3826, -106.401, -11.9504, 1.33 ) }
    dend_24 { pt3dadd( 19.2148, -107.085, -11.3065, 0.96 ) }
    dend_24 { pt3dadd( 18.9987, -108.132, -10.0651, 0.29 ) }
    dend_24 { pt3dadd( 18.8114, -109.21, -8.61071, 0.29 ) }
    dend_24 { pt3dadd( 18.8028, -109.248, -8.55284, 0.29 ) }
    dend_24 { pt3dadd( 18.3843, -110.546, -6.2359, 0.66 ) }
    dend_24 { pt3dadd( 17.8537, -112.001, -3.46067, 0.66 ) }
    dend_24 { pt3dadd( 17.5659, -112.696, -2.05018, 0.88 ) }
    dend_24 { pt3dadd( 17.5468, -112.738, -1.96357, 0.88 ) }
    dend_24 { pt3dadd( 17.0707, -113.818, 0.117411, 0.37 ) }
    dend_24 { pt3dadd( 16.5262, -115.21, 2.39614, 0.37 ) }
    dend_24 { pt3dadd( 16.3077, -115.785, 3.1527, 0.59 ) }
    dend_24 { pt3dadd( 16.2937, -115.829, 3.2031, 0.59 ) }
    dend_24 { pt3dadd( 16.1322, -116.33, 3.75475, 0.59 ) }
    dend_24 { pt3dadd( 15.7818, -117.219, 4.70559, 0.29 ) }
    dend_24 { pt3dadd( 15.4847, -117.778, 5.24494, 0.81 ) }
    dend_24 { pt3dadd( 14.7021, -118.979, 6.40025, 0.59 ) }
    dend_24 { pt3dadd( 14.6728, -119.023, 6.44428, 0.59 ) }
    dend_24 { pt3dadd( 14.2333, -119.702, 7.16703, 0.74 ) }
    dend_24 { pt3dadd( 13.5324, -120.681, 8.26552, 0.52 ) }
    dend_24 { pt3dadd( 13.1025, -121.252, 8.94022, 0.29 ) }
    dend_24 { pt3dadd( 12.4406, -122.221, 10.0916, 0.44 ) }
    dend_24 { pt3dadd( 11.8541, -123.276, 11.2374, 0.59 ) }
    dend_24 { pt3dadd( 11.5034, -124.001, 12.0202, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -25.9854, -32.654, -1.46242, 0.59 ) }
    dend_19 { pt3dadd( -26.8647, -33.101, -1.46242, 0.59 ) }
    dend_19 { pt3dadd( -27.7852, -33.5689, -1.46242, 0.59 ) }
    dend_19 { pt3dadd( -28.8902, -34.1306, -1.46242, 0.88 ) }
    dend_19 { pt3dadd( -29.0149, -34.194, -1.46242, 0.88 ) }
    dend_19 { pt3dadd( -29.7905, -34.5882, -1.46242, 0.88 ) }
    dend_19 { pt3dadd( -30.0312, -34.7106, -1.46242, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -25.9854, -32.654, -1.46242, 0.96 ) }
    dend_14 { pt3dadd( -27.2632, -32.8411, -2.29811, 0.96 ) }
    dend_14 { pt3dadd( -28.6201, -32.9971, -3.28267, 0.44 ) }
    dend_14 { pt3dadd( -29.5857, -33.089, -4.01469, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -30.5852, -33.1406, -4.77394, 0.52 ) }
    dend_14 { pt3dadd( -31.2447, -33.1418, -5.25533, 0.52 ) }
    dend_14 { pt3dadd( -31.2936, -33.1404, -5.29001, 0.52 ) }
    dend_14 { pt3dadd( -32.7444, -33.0515, -6.33889, 0.81 ) }
    dend_14 { pt3dadd( -32.8035, -33.0411, -6.37994, 0.81 ) }
    dend_14 { pt3dadd( -33.2938, -32.8962, -6.73857, 1.25 ) }
    dend_14 { pt3dadd( -33.8886, -32.6754, -7.16803, 1.25 ) }
    dend_14 { pt3dadd( -33.9551, -32.6514, -7.20606, 1.25 ) }
    dend_14 { pt3dadd( -35.5161, -32.1781, -8.06781, 1.25 ) }
    dend_14 { pt3dadd( -35.6037, -32.1564, -8.11131, 1.25 ) }
    dend_14 { pt3dadd( -36.4741, -31.9802, -8.53323, 0.88 ) }
    dend_14 { pt3dadd( -37.0811, -31.8761, -8.8714, 0.66 ) }
    dend_14 { pt3dadd( -38.1367, -31.694, -9.57703, 0.66 ) }
    dend_14 { pt3dadd( -39.7125, -31.4957, -10.8157, 0.81 ) }
    dend_14 { pt3dadd( -40.1026, -31.4481, -11.1429, 0.81 ) }
    dend_14 { pt3dadd( -40.764, -31.3605, -11.7342, 0.81 ) }
    dend_14 { pt3dadd( -42.0118, -31.1781, -12.9109, 0.66 ) }
    dend_14 { pt3dadd( -43.4466, -30.9382, -14.3319, 1.18 ) }
    dend_14 { pt3dadd( -44.8794, -30.6215, -15.8161, 0.52 ) }
    dend_14 { pt3dadd( -45.5702, -30.4252, -16.5554, 0.81 ) }
    dend_14 { pt3dadd( -45.9505, -30.2982, -16.9838, 0.81 ) }
    dend_14 { pt3dadd( -46.3723, -30.1603, -17.5027, 0.81 ) }
    dend_14 { pt3dadd( -47.3124, -29.8837, -18.6648, 0.52 ) }
    dend_14 { pt3dadd( -48.4439, -29.5957, -20.0841, 0.88 ) }
    dend_14 { pt3dadd( -49.7507, -29.3271, -21.7047, 0.88 ) }
    dend_14 { pt3dadd( -49.794, -29.3224, -21.7595, 0.88 ) }
    dend_14 { pt3dadd( -51.323, -29.354, -23.6117, 0.59 ) }
    dend_14 { pt3dadd( -51.8222, -29.4194, -24.1868, 1.03 ) }
    dend_14 { pt3dadd( -52.3919, -29.5708, -24.7698, 1.55 ) }
    dend_14 { pt3dadd( -53.0032, -29.7854, -25.3832, 1.92 ) }
    dend_14 { pt3dadd( -53.0526, -29.8029, -25.4291, 1.92 ) }
    dend_14 { pt3dadd( -54.9296, -30.4343, -27.2082, 0.59 ) }
    dend_14 { pt3dadd( -55.0296, -30.4682, -27.3016, 0.59 ) }
    dend_14 { pt3dadd( -55.4055, -30.6115, -27.679, 0.96 ) }
    dend_14 { pt3dadd( -57.1804, -31.4012, -29.7228, 0.29 ) }
    dend_14 { pt3dadd( -58.057, -31.8299, -30.8283, 0.29 ) }
    dend_14 { pt3dadd( -58.6882, -32.1224, -31.612, 1.11 ) }
    dend_14 { pt3dadd( -59.0848, -32.3006, -32.1041, 1.25 ) }
    dend_14 { pt3dadd( -59.3025, -32.388, -32.3493, 1.25 ) }
    dend_14 { pt3dadd( -60.6518, -32.8926, -33.7224, 0.37 ) }
    dend_14 { pt3dadd( -60.7038, -32.9148, -33.7643, 0.37 ) }
    dend_14 { pt3dadd( -61.6229, -33.2865, -34.4764, 0.37 ) }
    dend_14 { pt3dadd( -61.6784, -33.3094, -34.5129, 0.37 ) }
    dend_14 { pt3dadd( -62.421, -33.5722, -34.9224, 0.37 ) }
    dend_14 { pt3dadd( -63.4461, -33.9163, -35.3506, 1.03 ) }
    dend_14 { pt3dadd( -63.9208, -34.0816, -35.4884, 1.33 ) }
    dend_14 { pt3dadd( -64.3025, -34.2316, -35.5878, 1.33 ) }
    dend_14 { pt3dadd( -65.9951, -34.9963, -35.9622, 0.29 ) }
    dend_14 { pt3dadd( -67.0234, -35.4681, -36.1477, 0.29 ) }
    dend_14 { pt3dadd( -67.8623, -35.8545, -36.2536, 1.25 ) }
    dend_14 { pt3dadd( -68.4663, -36.102, -36.2871, 1.62 ) }
    dend_14 { pt3dadd( -69.2645, -36.3883, -36.334, 0.81 ) }
    dend_14 { pt3dadd( -70.3073, -36.7097, -36.3892, 0.29 ) }
    dend_14 { pt3dadd( -70.3963, -36.7322, -36.3922, 0.29 ) }
    dend_14 { pt3dadd( -71.3724, -36.9715, -36.4581, 0.29 ) }
    dend_14 { pt3dadd( -72.7409, -37.1983, -36.632, 0.52 ) }
    dend_14 { pt3dadd( -73.3949, -37.2563, -36.7521, 0.66 ) }
    dend_14 { pt3dadd( -73.7825, -37.261, -36.8445, 0.66 ) }
    dend_14 { pt3dadd( -74.2515, -37.2515, -36.9805, 0.66 ) }
    dend_14 { pt3dadd( -74.3526, -37.2536, -37.0133, 0.66 ) }
    dend_14 { pt3dadd( -75.168, -37.3142, -37.3359, 0.44 ) }
    dend_14 { pt3dadd( -75.673, -37.4848, -37.5159, 0.44 ) }
    dend_14 { pt3dadd( -75.7919, -37.5556, -37.5336, 0.44 ) }
    dend_14 { pt3dadd( -76.2436, -37.8539, -37.5458, 0.44 ) }
    dend_14 { pt3dadd( -76.7899, -38.1746, -37.4375, 0.44 ) }
    dend_14 { pt3dadd( -76.8595, -38.2046, -37.4137, 0.44 ) }
    dend_14 { pt3dadd( -77.7816, -38.4451, -37.0085, 0.37 ) }
    dend_14 { pt3dadd( -78.3859, -38.5496, -36.7617, 0.37 ) }
    dend_14 { pt3dadd( -79.0617, -38.6353, -36.5168, 0.81 ) }
    dend_14 { pt3dadd( -80.1468, -38.7173, -36.1589, 1.03 ) }
    dend_14 { pt3dadd( -80.6833, -38.7313, -36.0062, 1.03 ) }
    dend_14 { pt3dadd( -81.3697, -38.7337, -35.8409, 0.59 ) }
    dend_14 { pt3dadd( -82.641, -38.6815, -35.613, 0.29 ) }
    dend_14 { pt3dadd( -83.0317, -38.6607, -35.5714, 0.74 ) }
    dend_14 { pt3dadd( -83.1024, -38.6574, -35.5709, 0.74 ) }
    dend_14 { pt3dadd( -83.8336, -38.6343, -35.6624, 0.74 ) }
    dend_14 { pt3dadd( -83.946, -38.6308, -35.6816, 0.74 ) }
    dend_14 { pt3dadd( -84.3889, -38.6107, -35.7731, 0.74 ) }
    dend_14 { pt3dadd( -85.3908, -38.5269, -36.0041, 0.37 ) }
    dend_14 { pt3dadd( -86.1785, -38.5034, -36.2009, 0.37 ) }
    dend_14 { pt3dadd( -86.8591, -38.5217, -36.3777, 0.96 ) }
    dend_14 { pt3dadd( -87.2761, -38.5613, -36.5149, 0.96 ) }
    dend_14 { pt3dadd( -87.7742, -38.6183, -36.6903, 0.96 ) }
    dend_14 { pt3dadd( -87.8402, -38.626, -36.7142, 0.96 ) }
    dend_14 { pt3dadd( -88.7222, -38.6801, -37.0342, 0.52 ) }
    dend_14 { pt3dadd( -88.8621, -38.6763, -37.089, 0.52 ) }
    dend_14 { pt3dadd( -90.0007, -38.4763, -37.538, 0.29 ) }
    dend_14 { pt3dadd( -90.7504, -38.1949, -37.8044, 0.29 ) }
    dend_14 { pt3dadd( -91.1008, -37.9701, -37.8968, 0.81 ) }
    dend_14 { pt3dadd( -91.6169, -37.5801, -38.0098, 0.81 ) }
    dend_14 { pt3dadd( -91.6697, -37.5371, -38.018, 0.81 ) }
    dend_14 { pt3dadd( -92.2263, -37.0899, -38.0798, 0.52 ) }
    dend_14 { pt3dadd( -92.9515, -36.5475, -38.1061, 0.44 ) }
    dend_14 { pt3dadd( -93.5673, -36.2027, -38.1448, 0.44 ) }
    dend_14 { pt3dadd( -94.6709, -35.8037, -38.2282, 0.44 ) }
    dend_14 { pt3dadd( -95.2669, -35.669, -38.359, 0.74 ) }
    dend_14 { pt3dadd( -95.333, -35.6578, -38.3789, 0.74 ) }
    dend_14 { pt3dadd( -95.9599, -35.5747, -38.6022, 1.03 ) }
    dend_14 { pt3dadd( -96.5476, -35.5059, -38.8964, 1.03 ) }
    dend_14 { pt3dadd( -97.299, -35.4348, -39.3051, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_14 { pt3dadd( -98.8238, -35.288, -40.1653, 0.44 ) }
    dend_14 { pt3dadd( -99.3426, -35.2429, -40.4617, 0.81 ) }
    dend_14 { pt3dadd( -99.9842, -35.1972, -40.8291, 0.96 ) }
    dend_14 { pt3dadd( -101.522, -35.0875, -41.6736, 0.96 ) }
    dend_14 { pt3dadd( -102.687, -34.9927, -42.2498, 0.52 ) }
    dend_14 { pt3dadd( -103.741, -34.912, -42.6894, 0.52 ) }
    dend_14 { pt3dadd( -104.308, -34.8532, -42.846, 0.88 ) }
    dend_14 { pt3dadd( -104.371, -34.8433, -42.8755, 0.88 ) }
    dend_14 { pt3dadd( -105.066, -34.6908, -43.3073, 0.88 ) }
    dend_14 { pt3dadd( -105.734, -34.4777, -43.77, 0.29 ) }
    dend_14 { pt3dadd( -105.785, -34.4569, -43.8141, 0.29 ) }
    dend_14 { pt3dadd( -106.308, -34.2219, -44.3545, 0.59 ) }
    dend_14 { pt3dadd( -108.62, -33.1662, -47.0825, 0.44 ) }
    dend_14 { pt3dadd( -108.661, -33.1482, -47.1367, 0.44 ) }
    dend_14 { pt3dadd( -109.315, -32.8872, -48.1417, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.15732, -26.8161, 0.0564635, 1.11 ) }
    dend_10 { pt3dadd( -8.25175, -27.7731, 2.2647, 1.11 ) }
    dend_10 { pt3dadd( -8.51209, -29.0861, 5.33964, 0.66 ) }
    dend_10 { pt3dadd( -8.72702, -29.6097, 6.75789, 0.81 ) }
    dend_10 { pt3dadd( -9.07111, -30.1475, 8.29026, 0.81 ) }
    dend_10 { pt3dadd( -9.76363, -30.9739, 10.6748, 0.81 ) }
    dend_10 { pt3dadd( -10.053, -31.3278, 11.6638, 0.81 ) }
    dend_10 { pt3dadd( -10.1068, -31.3916, 11.8222, 0.81 ) }
    dend_10 { pt3dadd( -10.7221, -31.9539, 13.7356, 0.66 ) }
    dend_10 { pt3dadd( -11.0033, -32.1159, 14.7006, 0.59 ) }
    dend_10 { pt3dadd( -11.3766, -32.2702, 16.1369, 0.59 ) }
    dend_10 { pt3dadd( -11.7222, -32.389, 17.8623, 0.59 ) }
    dend_10 { pt3dadd( -12.109, -32.5042, 20.0195, 1.03 ) }
    dend_10 { pt3dadd( -12.7635, -32.7498, 23.7672, 0.52 ) }
    dend_10 { pt3dadd( -13.0873, -32.9347, 25.8479, 0.88 ) }
    dend_10 { pt3dadd( -13.0963, -32.9404, 25.9069, 0.88 ) }
    dend_10 { pt3dadd( -13.6599, -33.2579, 28.837, 0.88 ) }
    dend_10 { pt3dadd( -14.0584, -33.466, 30.3599, 0.59 ) }
    dend_10 { pt3dadd( -14.4628, -33.7169, 31.6257, 0.59 ) }
    dend_10 { pt3dadd( -15.0893, -34.2568, 33.525, 0.74 ) }
    dend_10 { pt3dadd( -15.7183, -34.9191, 35.4122, 1.11 ) }
    dend_10 { pt3dadd( -16.4594, -35.6941, 37.4376, 0.59 ) }
    dend_10 { pt3dadd( -16.7469, -35.9906, 38.0783, 0.96 ) }
    dend_10 { pt3dadd( -16.8764, -36.12, 38.386, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 39/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.15732, -26.8161, 0.0564635, 0.96 ) }
    dend_3 { pt3dadd( -6.96783, -27.2502, 0.735167, 0.96 ) }
    dend_3 { pt3dadd( -6.08912, -27.7954, 1.21965, 0.74 ) }
    dend_3 { pt3dadd( -5.58192, -28.3107, 1.56751, 0.44 ) }
    dend_3 { pt3dadd( -5.01782, -29.1778, 2.02021, 0.44 ) }
    dend_3 { pt3dadd( -4.99527, -29.227, 2.04053, 0.44 ) }
    dend_3 { pt3dadd( -4.76825, -29.8577, 2.24798, 1.18 ) }
    dend_3 { pt3dadd( -4.60021, -30.6558, 2.41051, 1.18 ) }
    dend_3 { pt3dadd( -4.47918, -31.6915, 2.56393, 1.03 ) }
    dend_3 { pt3dadd( -4.41112, -32.5897, 2.65041, 0.81 ) }
    dend_3 { pt3dadd( -4.32867, -33.5639, 2.70183, 0.81 ) }
    dend_3 { pt3dadd( -4.25189, -34.2853, 2.70875, 1.25 ) }
    dend_3 { pt3dadd( -4.24201, -34.3517, 2.70565, 1.25 ) }
    dend_3 { pt3dadd( -4.02552, -35.1557, 2.5833, 1.25 ) }
    dend_3 { pt3dadd( -3.63782, -36.1973, 2.31634, 1.18 ) }
    dend_3 { pt3dadd( -3.29216, -36.8907, 2.08003, 1.11 ) }
    dend_3 { pt3dadd( -3.18611, -37.0717, 2.04494, 1.11 ) }
    dend_3 { pt3dadd( -2.7367, -37.8019, 2.01978, 1.03 ) }
    dend_3 { pt3dadd( -1.75036, -39.431, 2.16648, 0.81 ) }
    dend_3 { pt3dadd( -1.68906, -39.541, 2.21267, 0.81 ) }
    dend_3 { pt3dadd( -1.38924, -40.267, 2.92253, 1.11 ) }
    dend_3 { pt3dadd( -0.776644, -42.2897, 5.3721, 1.03 ) }
    dend_3 { pt3dadd( -0.68569, -42.6442, 5.83101, 1.18 ) }
    dend_3 { pt3dadd( -0.641254, -42.8643, 6.14047, 1.18 ) }
    dend_3 { pt3dadd( -0.436089, -44.066, 7.93568, 1.18 ) }
    dend_3 { pt3dadd( -0.160409, -45.3366, 9.78521, 1.18 ) }
    dend_3 { pt3dadd( 0.00655688, -45.8743, 10.534, 0.88 ) }
    dend_3 { pt3dadd( 0.299429, -46.4157, 11.1618, 0.81 ) }
    dend_3 { pt3dadd( 0.336631, -46.462, 11.2132, 0.81 ) }
    dend_3 { pt3dadd( 0.880497, -46.9693, 11.7208, 1.25 ) }
    dend_3 { pt3dadd( 1.40029, -47.3662, 12.0412, 1.03 ) }
    dend_3 { pt3dadd( 2.33246, -48.1048, 12.5295, 0.88 ) }
    dend_3 { pt3dadd( 3.0861, -48.7947, 12.9226, 1.03 ) }
    dend_3 { pt3dadd( 3.58994, -49.3734, 13.1872, 1.03 ) }
    dend_3 { pt3dadd( 3.63105, -49.4374, 13.2035, 1.03 ) }
    dend_3 { pt3dadd( 4.44412, -51.1507, 13.3968, 0.96 ) }
    dend_3 { pt3dadd( 4.91882, -52.4827, 13.4292, 1.18 ) }
    dend_3 { pt3dadd( 5.24777, -53.6285, 13.4503, 1.25 ) }
    dend_3 { pt3dadd( 5.40692, -54.2794, 13.458, 1.25 ) }
    dend_3 { pt3dadd( 5.78579, -56.1069, 13.5053, 1.11 ) }
    dend_3 { pt3dadd( 5.80015, -56.1797, 13.5256, 1.11 ) }
    dend_3 { pt3dadd( 5.95665, -57.0694, 14.0058, 1.11 ) }
    dend_3 { pt3dadd( 6.14995, -58.3382, 14.9523, 1.11 ) }
    dend_3 { pt3dadd( 6.15653, -58.3893, 14.9966, 1.11 ) }
    dend_3 { pt3dadd( 6.23698, -59.0548, 15.6093, 1.33 ) }
    dend_3 { pt3dadd( 6.60139, -61.9888, 18.3747, 0.88 ) }
    dend_3 { pt3dadd( 6.72004, -62.9109, 19.1536, 1.03 ) }
    dend_3 { pt3dadd( 6.81683, -63.7325, 19.7642, 0.81 ) }
    dend_3 { pt3dadd( 6.82488, -63.799, 19.8033, 0.81 ) }
    dend_3 { pt3dadd( 6.90512, -64.4158, 20.1099, 1.25 ) }
    dend_3 { pt3dadd( 7.04894, -65.3956, 20.4837, 1.4 ) }
    dend_3 { pt3dadd( 7.12671, -66.0789, 20.5891, 1.4 ) }
    dend_3 { pt3dadd( 7.22374, -67.4493, 20.8325, 1.03 ) }
    dend_3 { pt3dadd( 7.21319, -68.2866, 21.0184, 0.96 ) }
    dend_3 { pt3dadd( 7.11143, -68.912, 21.1771, 0.96 ) }
    dend_3 { pt3dadd( 7.08491, -68.9729, 21.199, 0.96 ) }
    dend_3 { pt3dadd( 6.67747, -69.527, 21.4664, 0.96 ) }
    dend_3 { pt3dadd( 6.62783, -69.5796, 21.4959, 0.96 ) }
    dend_3 { pt3dadd( 6.03232, -70.0916, 21.8134, 1.18 ) }
    dend_3 { pt3dadd( 5.5896, -70.5031, 22.0872, 1.18 ) }
    dend_3 { pt3dadd( 4.90283, -71.2602, 22.5732, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_3 { pt3dadd( 4.87367, -71.3151, 22.5998, 0.74 ) }
    dend_3 { pt3dadd( 4.77804, -72.0958, 22.9101, 0.74 ) }
    dend_3 { pt3dadd( 4.78361, -72.1685, 22.9349, 0.74 ) }
    dend_3 { pt3dadd( 5.00773, -72.9964, 22.7996, 0.74 ) }
    dend_3 { pt3dadd( 5.0333, -73.0593, 22.7625, 0.74 ) }
    dend_3 { pt3dadd( 5.54609, -74.1054, 22.0402, 0.88 ) }
    dend_3 { pt3dadd( 6.09262, -75.0766, 21.4761, 1.18 ) }
    dend_3 { pt3dadd( 6.12635, -75.1328, 21.4571, 1.18 ) }
    dend_3 { pt3dadd( 8.34092, -78.8865, 20.9083, 0.96 ) }
    dend_3 { pt3dadd( 8.67586, -79.4553, 20.9029, 0.96 ) }
    dend_3 { pt3dadd( 9.39405, -80.6234, 21.0445, 0.96 ) }
    dend_3 { pt3dadd( 10.4831, -82.1617, 21.414, 0.96 ) }
    dend_3 { pt3dadd( 11.7642, -83.8125, 21.8856, 0.66 ) }
    dend_3 { pt3dadd( 12.1448, -84.3087, 22.0589, 0.66 ) }
    dend_3 { pt3dadd( 12.1818, -84.3597, 22.0841, 0.66 ) }
    dend_3 { pt3dadd( 12.5913, -84.9713, 22.3041, 1.03 ) }
    dend_3 { pt3dadd( 13.3116, -86.2844, 22.5537, 1.03 ) }
    dend_3 { pt3dadd( 13.7788, -87.3276, 22.6211, 0.66 ) }
    dend_3 { pt3dadd( 14.2222, -88.3906, 22.6438, 0.96 ) }
    dend_3 { pt3dadd( 14.6913, -89.5058, 22.6721, 1.18 ) }
    dend_3 { pt3dadd( 14.9344, -90.0152, 22.727, 1.18 ) }
    dend_3 { pt3dadd( 15.6508, -91.4283, 23.2303, 0.81 ) }
    dend_3 { pt3dadd( 15.6843, -91.4894, 23.2641, 0.81 ) }
    dend_3 { pt3dadd( 16.0935, -92.1478, 23.7447, 0.81 ) }
    dend_3 { pt3dadd( 16.6621, -93.0148, 24.4009, 0.74 ) }
    dend_3 { pt3dadd( 17.6304, -94.5375, 25.5034, 1.03 ) }
    dend_3 { pt3dadd( 19.0264, -96.8799, 27.1543, 1.03 ) }
    dend_3 { pt3dadd( 19.0505, -96.924, 27.1836, 1.03 ) }
    dend_3 { pt3dadd( 19.8381, -98.5613, 28.2123, 0.74 ) }
    dend_3 { pt3dadd( 20.4662, -100.071, 29.1009, 0.74 ) }
    dend_3 { pt3dadd( 20.7584, -100.847, 29.4961, 1.55 ) }
    dend_3 { pt3dadd( 21.227, -102.177, 29.9897, 1.33 ) }
    dend_3 { pt3dadd( 21.5552, -103.078, 30.1785, 1.33 ) }
    dend_3 { pt3dadd( 21.5769, -103.14, 30.1854, 1.33 ) }
    dend_3 { pt3dadd( 21.8115, -103.853, 30.1809, 1.03 ) }
    dend_3 { pt3dadd( 22.2927, -105.356, 30.0724, 0.88 ) }
    dend_3 { pt3dadd( 22.9407, -107.351, 29.7967, 1.33 ) }
    dend_3 { pt3dadd( 23.3851, -108.75, 29.5192, 0.81 ) }
    dend_3 { pt3dadd( 23.817, -110.123, 29.2287, 0.81 ) }
    dend_3 { pt3dadd( 24.0146, -110.784, 29.084, 0.81 ) }
    dend_3 { pt3dadd( 24.253, -111.652, 28.8818, 1.18 ) }
    dend_3 { pt3dadd( 24.482, -112.465, 28.7096, 1.18 ) }
    dend_3 { pt3dadd( 24.7707, -113.327, 28.5727, 1.18 ) }
    dend_3 { pt3dadd( 25.0429, -113.971, 28.5624, 1.55 ) }
    dend_3 { pt3dadd( 25.1034, -114.091, 28.5637, 1.55 ) }
    dend_3 { pt3dadd( 25.4071, -114.623, 28.5312, 1.55 ) }
    dend_3 { pt3dadd( 26.1662, -115.732, 28.3518, 0.66 ) }
    dend_3 { pt3dadd( 26.8297, -116.532, 28.0941, 0.66 ) }
    dend_3 { pt3dadd( 28.0325, -117.722, 27.4332, 0.66 ) }
    dend_3 { pt3dadd( 28.6177, -118.211, 27.0488, 1.11 ) }
    dend_3 { pt3dadd( 29.5545, -118.9, 26.3614, 0.52 ) }
    dend_3 { pt3dadd( 30.4946, -119.504, 25.5846, 0.52 ) }
    dend_3 { pt3dadd( 31.1317, -119.868, 25.0163, 0.88 ) }
    dend_3 { pt3dadd( 31.7262, -120.19, 24.4779, 1.33 ) }
    dend_3 { pt3dadd( 31.7807, -120.227, 24.434, 1.33 ) }
    dend_3 { pt3dadd( 32.2016, -120.672, 24.2715, 1.55 ) }
    dend_3 { pt3dadd( 32.5421, -121.133, 24.2594, 1.25 ) }
    dend_3 { pt3dadd( 33.0907, -121.949, 24.3328, 0.59 ) }
    dend_3 { pt3dadd( 33.2489, -122.188, 24.3724, 0.59 ) }
    dend_3 { pt3dadd( 33.9783, -123.343, 24.503, 0.52 ) }
    dend_3 { pt3dadd( 34.4873, -124.204, 24.5376, 0.52 ) }
    dend_3 { pt3dadd( 34.8441, -124.807, 24.5712, 1.18 ) }
    dend_3 { pt3dadd( 35.1592, -125.318, 24.6015, 1.4 ) }
    dend_3 { pt3dadd( 35.3844, -125.677, 24.6167, 1.4 ) }
    dend_3 { pt3dadd( 36.1935, -126.917, 24.6711, 0.44 ) }
    dend_3 { pt3dadd( 36.6091, -127.483, 24.7455, 0.44 ) }
    dend_3 { pt3dadd( 37.5772, -128.521, 25.0585, 0.96 ) }
    dend_3 { pt3dadd( 37.9723, -128.899, 25.2127, 1.33 ) }
    dend_3 { pt3dadd( 38.0432, -128.968, 25.2435, 1.33 ) }
    dend_3 { pt3dadd( 38.4195, -129.384, 25.4222, 1.33 ) }
    dend_3 { pt3dadd( 39.2853, -130.514, 25.9317, 0.59 ) }
    dend_3 { pt3dadd( 39.8265, -131.378, 26.2499, 0.59 ) }
    dend_3 { pt3dadd( 40.3234, -132.283, 26.4926, 0.59 ) }
    dend_3 { pt3dadd( 40.7347, -133.101, 26.6976, 0.88 ) }
    dend_3 { pt3dadd( 41.2399, -134.172, 26.9352, 0.88 ) }
    dend_3 { pt3dadd( 41.5782, -134.99, 27.0789, 0.37 ) }
    dend_3 { pt3dadd( 41.6046, -135.061, 27.0862, 0.37 ) }
    dend_3 { pt3dadd( 42.0372, -136.187, 27.1996, 0.37 ) }
    dend_3 { pt3dadd( 42.0699, -136.255, 27.2108, 0.37 ) }
    dend_3 { pt3dadd( 42.3132, -136.68, 27.2856, 0.88 ) }
    dend_3 { pt3dadd( 42.6339, -137.167, 27.3677, 0.88 ) }
    dend_3 { pt3dadd( 43.279, -138.161, 27.4967, 0.52 ) }
    dend_3 { pt3dadd( 43.6838, -138.877, 27.5975, 0.96 ) }
    dend_3 { pt3dadd( 44.0709, -139.824, 27.748, 0.81 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 84/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -29.4931, 4.22663, 7.53152, 0.29 ) }
    dend_71 { pt3dadd( -37.432, 4.25586, 1.45097, 0.29 ) }
    dend_71 { pt3dadd( -45.7821, 3.50936, -3.99502, 0.29 ) }
    dend_71 { pt3dadd( -53.575, 1.10999, -9.73015, 0.29 ) }
    dend_71 { pt3dadd( -60.889, -0.852347, -16.2293, 0.29 ) }
    dend_71 { pt3dadd( -68.517, -2.50976, -22.4557, 0.29 ) }
    dend_71 { pt3dadd( -76.2724, -5.66054, -27.8273, 0.29 ) }
    dend_71 { pt3dadd( -83.5433, -9.76288, -33.1646, 0.29 ) }
    dend_71 { pt3dadd( -91.9426, -12.3815, -37.8394, 0.29 ) }
    dend_71 { pt3dadd( -100.699, -15.2097, -41.6413, 0.29 ) }
    dend_71 { pt3dadd( -109.215, -17.4603, -46.3179, 0.29 ) }
    dend_71 { pt3dadd( -117.314, -20.0081, -51.5351, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 96/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -29.4931, 4.22663, 7.53152, 0.81 ) }
    dend_70 { pt3dadd( -37.705, 2.21706, 2.23152, 0.29 ) }
    dend_70 { pt3dadd( -45.7125, -0.854755, -2.81073, 0.29 ) }
    dend_70 { pt3dadd( -52.9252, -4.58259, -8.51849, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_70 { pt3dadd( -60.498, -7.26388, -14.408, 0.29 ) }
    dend_70 { pt3dadd( -67.9195, -8.14649, -21.0457, 0.29 ) }
    dend_70 { pt3dadd( -74.6692, -10.4766, -28.0046, 0.29 ) }
    dend_70 { pt3dadd( -79.9533, -13.129, -36.0222, 0.29 ) }
    dend_70 { pt3dadd( -83.4757, -15.7391, -44.9689, 0.29 ) }
    dend_70 { pt3dadd( -86.4428, -17.0294, -54.4215, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 6/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -23.4514, 31.1036, 42.3217, 0.29 ) }
    dend_68 { pt3dadd( -24.1167, 40.0458, 45.6315, 0.29 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 8/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -23.4514, 31.1036, 42.3217, 0.81 ) }
    dend_67 { pt3dadd( -31.0368, 33.1582, 48.4685, 0.29 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.39257, 57.6312, -95.1359, 0.29 ) }
    dend_62 { pt3dadd( 4.72781, 58.5914, -96.2225, 0.29 ) }
    dend_62 { pt3dadd( 4.73636, 58.6346, -96.275, 0.29 ) }
    dend_62 { pt3dadd( 4.79172, 59.0485, -96.7908, 0.29 ) }
    dend_62 { pt3dadd( 4.81764, 60.1086, -98.1482, 0.96 ) }
    dend_62 { pt3dadd( 4.64329, 61.7144, -100.576, 0.29 ) }
    dend_62 { pt3dadd( 4.51072, 62.4443, -101.723, 0.29 ) }
    dend_62 { pt3dadd( 4.23266, 63.4518, -103.387, 0.37 ) }
    dend_62 { pt3dadd( 4.2191, 63.4865, -103.446, 0.37 ) }
    dend_62 { pt3dadd( 3.74134, 64.3232, -104.903, 0.37 ) }
    dend_62 { pt3dadd( 2.26587, 66.1427, -108.14, 0.29 ) }
    dend_62 { pt3dadd( 1.94262, 66.451, -108.657, 0.44 ) }
    dend_62 { pt3dadd( 1.65492, 66.7144, -109.008, 0.22 ) }
    dend_62 { pt3dadd( 1.16062, 67.2003, -109.448, 0.22 ) }
    dend_62 { pt3dadd( 0.214096, 68.1803, -109.969, 0.44 ) }
    dend_62 { pt3dadd( -0.951988, 69.4007, -110.164, 0.44 ) }
    dend_62 { pt3dadd( -1.97788, 70.4642, -110.074, 0.29 ) }
    dend_62 { pt3dadd( -4.52109, 73.0627, -109.776, 0.29 ) }
    dend_62 { pt3dadd( -5.0052, 73.531, -109.705, 0.66 ) }
    dend_62 { pt3dadd( -5.55971, 74.0201, -109.589, 0.66 ) }
    dend_62 { pt3dadd( -6.84507, 75.0463, -109.179, 0.22 ) }
    dend_62 { pt3dadd( -7.60951, 75.5775, -108.912, 0.22 ) }
    dend_62 { pt3dadd( -7.78934, 75.6836, -108.848, 0.22 ) }
    dend_62 { pt3dadd( -8.89952, 76.1648, -108.539, 0.22 ) }
    dend_62 { pt3dadd( -9.65152, 76.4689, -108.259, 0.81 ) }
    dend_62 { pt3dadd( -10.6468, 76.857, -107.801, 0.44 ) }
    dend_62 { pt3dadd( -11.5162, 77.1925, -107.348, 0.44 ) }
    dend_62 { pt3dadd( -13.0793, 77.7455, -106.492, 0.29 ) }
    dend_62 { pt3dadd( -13.1468, 77.7692, -106.456, 0.29 ) }
    dend_62 { pt3dadd( -14.6248, 78.2949, -105.699, 0.29 ) }
    dend_62 { pt3dadd( -14.6858, 78.3166, -105.672, 0.29 ) }
    dend_62 { pt3dadd( -16.0517, 78.7738, -105.166, 0.29 ) }
    dend_62 { pt3dadd( -18.1459, 79.4462, -104.504, 0.29 ) }
    dend_62 { pt3dadd( -19.0615, 79.7456, -104.292, 0.29 ) }
    dend_62 { pt3dadd( -19.7676, 79.9729, -104.141, 0.81 ) }
    dend_62 { pt3dadd( -20.5126, 80.2061, -103.993, 0.81 ) }
    dend_62 { pt3dadd( -21.4666, 80.5058, -103.891, 0.29 ) }
    dend_62 { pt3dadd( -21.6322, 80.5593, -103.892, 0.29 ) }
    dend_62 { pt3dadd( -22.6796, 80.9033, -104.071, 0.29 ) }
    dend_62 { pt3dadd( -23.5223, 81.1501, -104.258, 0.29 ) }
    dend_62 { pt3dadd( -23.6555, 81.18, -104.289, 0.29 ) }
    dend_62 { pt3dadd( -25.165, 81.3202, -104.801, 0.74 ) }
    dend_62 { pt3dadd( -25.2306, 81.32, -104.827, 0.74 ) }
    dend_62 { pt3dadd( -25.7569, 81.2845, -105.048, 0.52 ) }
    dend_62 { pt3dadd( -25.8118, 81.2753, -105.07, 0.52 ) }
    dend_62 { pt3dadd( -26.87, 81.0472, -105.533, 0.52 ) }
    dend_62 { pt3dadd( -28.6727, 80.7106, -106.298, 0.52 ) }
    dend_62 { pt3dadd( -29.2762, 80.611, -106.567, 0.96 ) }
    dend_62 { pt3dadd( -30.2757, 80.4849, -107.014, 0.96 ) }
    dend_62 { pt3dadd( -31.7235, 80.3656, -107.638, 0.44 ) }
    dend_62 { pt3dadd( -33.0384, 80.3102, -108.172, 0.29 ) }
    dend_62 { pt3dadd( -34.3979, 80.3467, -108.771, 0.29 ) }
    dend_62 { pt3dadd( -36.1987, 80.6013, -109.561, 0.29 ) }
    dend_62 { pt3dadd( -37.2588, 80.8333, -110.061, 0.29 ) }
    dend_62 { pt3dadd( -38.2182, 81.1156, -110.562, 0.29 ) }
    dend_62 { pt3dadd( -38.7146, 81.2891, -110.827, 0.29 ) }
    dend_62 { pt3dadd( -40.216, 81.831, -111.579, 0.29 ) }
    dend_62 { pt3dadd( -41.3918, 82.2453, -112.189, 0.96 ) }
    dend_62 { pt3dadd( -42.0611, 82.521, -112.523, 0.96 ) }
    dend_62 { pt3dadd( -43.6534, 83.2245, -113.397, 0.29 ) }
    dend_62 { pt3dadd( -44.2582, 83.4912, -113.724, 0.29 ) }
    dend_62 { pt3dadd( -44.5605, 83.6209, -113.869, 0.66 ) }
    dend_62 { pt3dadd( -44.6537, 83.6565, -113.904, 0.66 ) }
    dend_62 { pt3dadd( -45.2965, 83.9136, -114.17, 0.66 ) }
    dend_62 { pt3dadd( -46.3958, 84.4615, -114.618, 0.37 ) }
    dend_62 { pt3dadd( -47.0394, 84.8322, -114.85, 0.37 ) }
    dend_62 { pt3dadd( -47.3149, 85.0008, -114.947, 0.81 ) }
    dend_62 { pt3dadd( -47.7804, 85.263, -115.132, 0.81 ) }
    dend_62 { pt3dadd( -49.0779, 85.9377, -115.727, 0.29 ) }
    dend_62 { pt3dadd( -49.9142, 86.3432, -116.147, 0.29 ) }
    dend_62 { pt3dadd( -50.5124, 86.6027, -116.45, 0.66 ) }
    dend_62 { pt3dadd( -51.0726, 86.8145, -116.762, 0.66 ) }
    dend_62 { pt3dadd( -52.6864, 87.3428, -117.726, 0.44 ) }
    dend_62 { pt3dadd( -53.4325, 87.5183, -118.133, 0.81 ) }
    dend_62 { pt3dadd( -53.4959, 87.5283, -118.163, 0.81 ) }
    dend_62 { pt3dadd( -54.1651, 87.6223, -118.467, 0.81 ) }
    dend_62 { pt3dadd( -55.3556, 87.7841, -118.979, 0.37 ) }
    dend_62 { pt3dadd( -56.3087, 87.9386, -119.362, 0.37 ) }
    dend_62 { pt3dadd( -58.0454, 88.2406, -120.02, 0.37 ) }
    dend_62 { pt3dadd( -58.957, 88.3912, -120.352, 0.74 ) }
    dend_62 { pt3dadd( -60.0576, 88.5523, -120.784, 0.52 ) }
    dend_62 { pt3dadd( -60.1489, 88.5655, -120.82, 0.52 ) }
    dend_62 { pt3dadd( -61.7441, 88.7884, -121.416, 0.52 ) }
    dend_62 { pt3dadd( -62.9709, 88.9601, -121.873, 1.11 ) }
    dend_62 { pt3dadd( -64.5512, 89.2289, -122.471, 0.74 ) }
    dend_62 { pt3dadd( -66.3655, 89.5606, -123.094, 0.74 ) }
    dend_62 { pt3dadd( -67.9568, 89.8565, -123.555, 0.37 ) }
    dend_62 { pt3dadd( -68.3895, 89.9393, -123.659, 0.29 ) }
    dend_62 { pt3dadd( -68.6905, 90.0008, -123.712, 0.29 ) }
    dend_62 { pt3dadd( -69.9527, 90.2982, -123.86, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_62 { pt3dadd( -70.3662, 90.3853, -123.892, 0.52 ) }
    dend_62 { pt3dadd( -70.7256, 90.4282, -123.892, 0.52 ) }
    dend_62 { pt3dadd( -71.9123, 90.4595, -123.967, 0.29 ) }
    dend_62 { pt3dadd( -72.0513, 90.4581, -123.984, 0.29 ) }
    dend_62 { pt3dadd( -72.5747, 90.4408, -124.089, 0.37 ) }
    dend_62 { pt3dadd( -73.4365, 90.3875, -124.322, 0.22 ) }
    dend_62 { pt3dadd( -74.3107, 90.3641, -124.598, 0.22 ) }
    dend_62 { pt3dadd( -75.4096, 90.3844, -124.975, 0.22 ) }
    dend_62 { pt3dadd( -76.5547, 90.4612, -125.403, 0.22 ) }
    dend_62 { pt3dadd( -77.1888, 90.5091, -125.616, 0.96 ) }
    dend_62 { pt3dadd( -77.2546, 90.5164, -125.638, 0.96 ) }
    dend_62 { pt3dadd( -77.975, 90.6164, -125.886, 0.96 ) }
    dend_62 { pt3dadd( -78.6771, 90.7081, -126.105, 0.96 ) }
    dend_62 { pt3dadd( -79.9907, 90.792, -126.391, 0.96 ) }
    dend_62 { pt3dadd( -81.5228, 90.8347, -126.677, 0.66 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 15/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 4.39257, 57.6312, -95.1359, 0.29 ) }
    dend_61 { pt3dadd( 3.92588, 58.1809, -95.7566, 0.29 ) }
    dend_61 { pt3dadd( 3.54326, 58.6154, -96.3336, 0.29 ) }
    dend_61 { pt3dadd( 3.51286, 58.6531, -96.3826, 0.29 ) }
    dend_61 { pt3dadd( 3.03181, 59.2507, -97.157, 0.96 ) }
    dend_61 { pt3dadd( 2.66052, 59.7119, -97.7548, 0.96 ) }
    dend_61 { pt3dadd( 1.29479, 61.4084, -99.9537, 0.29 ) }
    dend_61 { pt3dadd( 1.23841, 61.4893, -100.064, 0.29 ) }
    dend_61 { pt3dadd( 0.584157, 62.4367, -101.513, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 24/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -39.5538, 16.5735, -15.1443, 0.44 ) }
    dend_50 { pt3dadd( -40.486, 17.6076, -15.1797, 0.44 ) }
    dend_50 { pt3dadd( -40.8437, 17.9606, -15.2035, 0.66 ) }
    dend_50 { pt3dadd( -40.8931, 18.0076, -15.2073, 0.66 ) }
    dend_50 { pt3dadd( -41.7823, 18.8151, -15.1703, 0.66 ) }
    dend_50 { pt3dadd( -41.8406, 18.8667, -15.1639, 0.66 ) }
    dend_50 { pt3dadd( -42.4781, 19.472, -15.0188, 0.37 ) }
    dend_50 { pt3dadd( -42.9792, 19.9402, -14.8473, 0.37 ) }
    dend_50 { pt3dadd( -43.0322, 19.9933, -14.8234, 0.37 ) }
    dend_50 { pt3dadd( -43.7245, 20.7577, -14.4491, 0.74 ) }
    dend_50 { pt3dadd( -44.1234, 21.238, -14.2129, 0.74 ) }
    dend_50 { pt3dadd( -44.7362, 21.9528, -13.8934, 0.29 ) }
    dend_50 { pt3dadd( -45.1983, 22.4407, -13.7057, 0.29 ) }
    dend_50 { pt3dadd( -45.2484, 22.4862, -13.6961, 0.29 ) }
    dend_50 { pt3dadd( -45.7046, 22.8386, -13.7135, 0.29 ) }
    dend_50 { pt3dadd( -46.3629, 23.2744, -13.8847, 0.74 ) }
    dend_50 { pt3dadd( -46.9205, 23.6181, -14.0825, 0.74 ) }
    dend_50 { pt3dadd( -47.5193, 23.9675, -14.3348, 0.29 ) }
    dend_50 { pt3dadd( -47.7352, 24.1103, -14.4246, 0.29 ) }
    dend_50 { pt3dadd( -48.2358, 24.5011, -14.6243, 0.29 ) }
    dend_50 { pt3dadd( -48.2905, 24.5562, -14.631, 0.29 ) }
    dend_50 { pt3dadd( -48.8308, 25.3573, -14.4518, 0.74 ) }
    dend_50 { pt3dadd( -48.8559, 25.4158, -14.43, 0.74 ) }
    dend_50 { pt3dadd( -49.0211, 25.9986, -14.1589, 0.88 ) }
    dend_50 { pt3dadd( -49.0286, 26.0561, -14.123, 0.88 ) }
    dend_50 { pt3dadd( -49.0529, 27.4908, -13.061, 0.66 ) }
    dend_50 { pt3dadd( -49.0399, 28.1694, -12.5182, 0.29 ) }
    dend_50 { pt3dadd( -49.0047, 28.6405, -12.0994, 0.29 ) }
    dend_50 { pt3dadd( -48.9998, 28.7165, -12.0296, 0.29 ) }
    dend_50 { pt3dadd( -48.9455, 29.6755, -11.1331, 0.29 ) }
    dend_50 { pt3dadd( -48.9486, 29.8503, -10.9826, 0.29 ) }
    dend_50 { pt3dadd( -49.021, 30.303, -10.6674, 0.29 ) }
    dend_50 { pt3dadd( -49.0433, 30.3557, -10.631, 0.29 ) }
    dend_50 { pt3dadd( -49.4871, 30.9858, -10.1991, 0.74 ) }
    dend_50 { pt3dadd( -49.6397, 31.1564, -10.0939, 0.74 ) }
    dend_50 { pt3dadd( -49.9632, 31.4603, -9.93281, 0.74 ) }
    dend_50 { pt3dadd( -50.4296, 31.9352, -9.66767, 1.03 ) }
    dend_50 { pt3dadd( -50.7021, 32.2496, -9.49969, 1.03 ) }
    dend_50 { pt3dadd( -51.2424, 33.0092, -9.1481, 0.37 ) }
    dend_50 { pt3dadd( -51.5012, 33.4592, -8.93589, 0.37 ) }
    dend_50 { pt3dadd( -51.5264, 33.5155, -8.90839, 0.37 ) }
    dend_50 { pt3dadd( -51.9041, 34.5269, -8.41823, 0.59 ) }
    dend_50 { pt3dadd( -52.0991, 35.0134, -8.19578, 1.03 ) }
    dend_50 { pt3dadd( -52.3801, 35.691, -7.86373, 1.03 ) }
    dend_50 { pt3dadd( -52.7316, 36.515, -7.4501, 0.96 ) }
    dend_50 { pt3dadd( -52.9776, 37.0549, -7.16967, 0.29 ) }
    dend_50 { pt3dadd( -53.2349, 37.574, -6.87492, 0.29 ) }
    dend_50 { pt3dadd( -53.8198, 38.5278, -6.25182, 0.29 ) }
    dend_50 { pt3dadd( -54.4712, 39.3676, -5.6207, 0.74 ) }
    dend_50 { pt3dadd( -54.5137, 39.4095, -5.58684, 0.74 ) }
    dend_50 { pt3dadd( -55.1072, 39.9079, -5.19891, 1.18 ) }
    dend_50 { pt3dadd( -55.8305, 40.4663, -4.71224, 1.18 ) }
    dend_50 { pt3dadd( -56.7027, 41.1299, -4.11001, 0.59 ) }
    dend_50 { pt3dadd( -57.3764, 41.6309, -3.67065, 0.52 ) }
    dend_50 { pt3dadd( -58.2128, 42.2181, -3.10071, 0.52 ) }
    dend_50 { pt3dadd( -58.7141, 42.5631, -2.72626, 0.52 ) }
    dend_50 { pt3dadd( -59.8813, 43.3095, -1.72621, 0.96 ) }
    dend_50 { pt3dadd( -59.9945, 43.3828, -1.61785, 0.96 ) }
    dend_50 { pt3dadd( -60.3768, 43.6908, -1.09616, 1.18 ) }
    dend_50 { pt3dadd( -61.328, 44.7168, 0.649783, 0.74 ) }
    dend_50 { pt3dadd( -61.3523, 44.751, 0.704674, 0.74 ) }
    dend_50 { pt3dadd( -61.7148, 45.3396, 1.60564, 0.74 ) }
    dend_50 { pt3dadd( -61.7355, 45.379, 1.65812, 0.74 ) }
    dend_50 { pt3dadd( -62.3949, 46.8446, 3.34186, 0.44 ) }
    dend_50 { pt3dadd( -62.6246, 47.4518, 3.91032, 0.29 ) }
    dend_50 { pt3dadd( -63.121, 48.7825, 4.93904, 0.29 ) }
    dend_50 { pt3dadd( -63.1413, 48.8355, 4.97753, 0.29 ) }
    dend_50 { pt3dadd( -63.4578, 49.6023, 5.53134, 0.29 ) }
    dend_50 { pt3dadd( -63.6818, 50.0812, 5.89595, 0.74 ) }
    dend_50 { pt3dadd( -64.0112, 50.6805, 6.34933, 0.74 ) }
    dend_50 { pt3dadd( -64.8818, 52.0665, 7.54921, 0.44 ) }
    dend_50 { pt3dadd( -64.9166, 52.1202, 7.5982, 0.44 ) }
    dend_50 { pt3dadd( -65.4218, 52.9051, 8.34082, 0.37 ) }
    dend_50 { pt3dadd( -65.4508, 52.949, 8.38465, 0.37 ) }
    dend_50 { pt3dadd( -65.8986, 53.5943, 8.98033, 0.37 ) }
    dend_50 { pt3dadd( -65.9628, 53.6919, 9.05129, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_50 { pt3dadd( -66.2637, 54.2386, 9.40953, 0.37 ) }
    dend_50 { pt3dadd( -66.7576, 55.1926, 10.0491, 0.29 ) }
    dend_50 { pt3dadd( -66.8563, 55.3916, 10.176, 0.29 ) }
    dend_50 { pt3dadd( -67.2516, 56.179, 10.6989, 0.29 ) }
    dend_50 { pt3dadd( -68.0674, 57.7123, 11.6952, 0.88 ) }
    dend_50 { pt3dadd( -68.8667, 59.1657, 12.5993, 0.37 ) }
    dend_50 { pt3dadd( -68.9334, 59.2786, 12.6628, 0.37 ) }
    dend_50 { pt3dadd( -69.362, 59.9769, 13.0076, 0.37 ) }
    dend_50 { pt3dadd( -69.4064, 60.0543, 13.0421, 0.37 ) }
    dend_50 { pt3dadd( -70.1538, 61.4788, 13.5665, 0.37 ) }
    dend_50 { pt3dadd( -70.1899, 61.5449, 13.5853, 0.37 ) }
    dend_50 { pt3dadd( -70.7896, 62.6472, 13.8326, 0.37 ) }
    dend_50 { pt3dadd( -71.718, 64.6095, 14.225, 0.96 ) }
    dend_50 { pt3dadd( -72.0926, 65.5811, 14.3975, 0.29 ) }
    dend_50 { pt3dadd( -72.4368, 66.7482, 14.5696, 0.29 ) }
    dend_50 { pt3dadd( -72.5455, 67.2876, 14.6343, 1.03 ) }
    dend_50 { pt3dadd( -72.6215, 67.8751, 14.6987, 0.52 ) }
    dend_50 { pt3dadd( -72.667, 69.3404, 14.8248, 0.22 ) }
    dend_50 { pt3dadd( -72.638, 70.1393, 14.8546, 0.22 ) }
    dend_50 { pt3dadd( -72.5866, 71.1199, 14.8851, 1.03 ) }
    dend_50 { pt3dadd( -72.5804, 71.1868, 14.8871, 1.03 ) }
    dend_50 { pt3dadd( -72.4373, 72.3616, 14.9158, 0.29 ) }
    dend_50 { pt3dadd( -72.43, 72.4372, 14.9184, 0.29 ) }
    dend_50 { pt3dadd( -72.3342, 73.6882, 14.9909, 0.29 ) }
    dend_50 { pt3dadd( -72.2536, 75.0094, 15.0873, 0.29 ) }
    dend_50 { pt3dadd( -72.2497, 75.0782, 15.0927, 0.29 ) }
    dend_50 { pt3dadd( -72.1994, 75.7142, 15.1464, 0.37 ) }
    dend_50 { pt3dadd( -72.1334, 76.4201, 15.2005, 0.29 ) }
    dend_50 { pt3dadd( -72.127, 76.5426, 15.2159, 0.29 ) }
    dend_50 { pt3dadd( -72.1595, 77.3981, 15.3675, 0.29 ) }
    dend_50 { pt3dadd( -72.1676, 77.4635, 15.3815, 0.29 ) }
    dend_50 { pt3dadd( -72.3332, 78.4824, 15.5834, 0.59 ) }
    dend_50 { pt3dadd( -72.4253, 79.0904, 15.6672, 0.59 ) }
    dend_50 { pt3dadd( -72.5403, 80.2057, 15.7558, 0.29 ) }
    dend_50 { pt3dadd( -72.6268, 81.2167, 15.79, 0.59 ) }
    dend_50 { pt3dadd( -72.6318, 81.2831, 15.7892, 0.59 ) }
    dend_50 { pt3dadd( -72.6744, 81.8607, 15.7665, 0.59 ) }
    dend_50 { pt3dadd( -72.7952, 83.2964, 15.664, 0.29 ) }
    dend_50 { pt3dadd( -72.8396, 83.8666, 15.6169, 1.03 ) }
    dend_50 { pt3dadd( -72.847, 84.009, 15.5968, 1.03 ) }
    dend_50 { pt3dadd( -72.8626, 84.4086, 15.5068, 1.03 ) }
    dend_50 { pt3dadd( -72.8972, 85.1956, 15.2663, 0.96 ) }
    dend_50 { pt3dadd( -72.9208, 86.0638, 14.9203, 0.96 ) }
    dend_50 { pt3dadd( -72.9386, 87.0098, 14.5043, 0.96 ) }
    dend_50 { pt3dadd( -72.9512, 87.7188, 14.1336, 0.96 ) }
    dend_50 { pt3dadd( -72.9365, 88.8993, 13.4836, 0.29 ) }
    dend_50 { pt3dadd( -72.8888, 90.081, 12.8006, 0.29 ) }
    dend_50 { pt3dadd( -72.8225, 91.0588, 12.2344, 0.96 ) }
    dend_50 { pt3dadd( -72.7481, 92.0209, 11.6478, 0.96 ) }
    dend_50 { pt3dadd( -72.636, 93.4322, 10.7801, 0.22 ) }
    dend_50 { pt3dadd( -72.5899, 94.4181, 10.228, 0.22 ) }
    dend_50 { pt3dadd( -72.5896, 94.4777, 10.1954, 0.22 ) }
    dend_50 { pt3dadd( -72.607, 95.417, 9.70853, 0.22 ) }
    dend_50 { pt3dadd( -72.6274, 96.2584, 9.32248, 0.88 ) }
    dend_50 { pt3dadd( -72.6272, 96.3292, 9.29358, 0.88 ) }
    dend_50 { pt3dadd( -72.6093, 97.1339, 9.04553, 0.88 ) }
    dend_50 { pt3dadd( -72.6181, 97.7216, 8.8728, 0.88 ) }
    dend_50 { pt3dadd( -72.6441, 98.763, 8.60103, 0.59 ) }
    dend_50 { pt3dadd( -72.7271, 99.6688, 8.41414, 0.52 ) }
    dend_50 { pt3dadd( -72.8077, 100.175, 8.34916, 0.52 ) }
    dend_50 { pt3dadd( -72.8646, 100.393, 8.32567, 0.52 ) }
    dend_50 { pt3dadd( -73.0539, 100.867, 8.29057, 0.52 ) }
    dend_50 { pt3dadd( -73.087, 100.925, 8.28834, 0.52 ) }
    dend_50 { pt3dadd( -73.7459, 101.762, 8.23587, 0.52 ) }
    dend_50 { pt3dadd( -73.8837, 101.906, 8.22552, 0.52 ) }
    dend_50 { pt3dadd( -74.1662, 102.18, 8.20177, 0.52 ) }
    dend_50 { pt3dadd( -74.2238, 102.236, 8.19614, 0.52 ) }
    dend_50 { pt3dadd( -74.9231, 102.943, 8.10887, 0.81 ) }
    dend_50 { pt3dadd( -74.9677, 102.994, 8.10157, 0.81 ) }
    dend_50 { pt3dadd( -79.0686, 111.652, 8.44348, 0.81 ) }
    dend_50 { pt3dadd( -81.6984, 120.619, 10.4431, 0.81 ) }
    dend_50 { pt3dadd( -84.5159, 129.651, 11.7326, 0.81 ) }
    dend_50 { pt3dadd( -88.1847, 138.487, 11.9195, 0.81 ) }
    dend_50 { pt3dadd( -91.4494, 147.369, 13.305, 0.81 ) }
    dend_50 { pt3dadd( -94.131, 155.951, 16.6531, 0.81 ) }
    dend_50 { pt3dadd( -97.1777, 164.584, 19.5064, 0.81 ) }
    dend_50 { pt3dadd( -98.9035, 173.411, 22.7749, 0.81 ) }
    dend_50 { pt3dadd( -100.016, 182.754, 24.2019, 0.81 ) }
    dend_50 { pt3dadd( -101.272, 192.179, 24.1929, 0.81 ) }
    dend_50 { pt3dadd( -102.521, 201.601, 24.4781, 0.81 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 80/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -39.5538, 16.5735, -15.1443, 0.37 ) }
    dend_49 { pt3dadd( -40.7847, 16.8704, -14.5645, 0.37 ) }
    dend_49 { pt3dadd( -41.2227, 16.9666, -14.4175, 0.29 ) }
    dend_49 { pt3dadd( -41.2906, 16.9793, -14.4033, 0.29 ) }
    dend_49 { pt3dadd( -41.7428, 17.0582, -14.3257, 0.29 ) }
    dend_49 { pt3dadd( -42.1322, 17.0998, -14.2715, 0.96 ) }
    dend_49 { pt3dadd( -42.5022, 17.1162, -14.225, 0.96 ) }
    dend_49 { pt3dadd( -43.0225, 17.0829, -14.2149, 0.96 ) }
    dend_49 { pt3dadd( -44.0998, 16.7913, -14.1929, 0.29 ) }
    dend_49 { pt3dadd( -44.1622, 16.7621, -14.185, 0.29 ) }
    dend_49 { pt3dadd( -44.826, 16.3636, -13.9945, 0.29 ) }
    dend_49 { pt3dadd( -45.1819, 16.1443, -13.8555, 0.52 ) }
    dend_49 { pt3dadd( -45.7473, 15.7827, -13.5988, 0.52 ) }
    dend_49 { pt3dadd( -46.3485, 15.3824, -13.2899, 0.29 ) }
    dend_49 { pt3dadd( -47.2041, 14.7663, -12.8342, 0.52 ) }
    dend_49 { pt3dadd( -47.8474, 14.3261, -12.5027, 0.44 ) }
    dend_49 { pt3dadd( -48.6412, 13.8126, -12.1255, 0.44 ) }
    dend_49 { pt3dadd( -49.0896, 13.5399, -11.9345, 0.44 ) }
    dend_49 { pt3dadd( -49.1462, 13.5068, -11.9124, 0.44 ) }
    dend_49 { pt3dadd( -49.9531, 13.0057, -11.6402, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_49 { pt3dadd( -50.008, 12.9666, -11.6262, 0.44 ) }
    dend_49 { pt3dadd( -50.6379, 12.4691, -11.4577, 0.44 ) }
    dend_49 { pt3dadd( -51.4015, 11.8381, -11.2156, 0.59 ) }
    dend_49 { pt3dadd( -52.0505, 11.3075, -11.003, 0.96 ) }
    dend_49 { pt3dadd( -52.4725, 10.9796, -10.9004, 1.25 ) }
    dend_49 { pt3dadd( -52.8773, 10.6828, -10.8267, 1.25 ) }
    dend_49 { pt3dadd( -53.7069, 10.095, -10.7356, 0.44 ) }
    dend_49 { pt3dadd( -53.7646, 10.0561, -10.7348, 0.44 ) }
    dend_49 { pt3dadd( -54.7053, 9.43392, -10.8296, 0.37 ) }
    dend_49 { pt3dadd( -55.6836, 8.78436, -11.0085, 0.37 ) }
    dend_49 { pt3dadd( -55.7404, 8.74637, -11.0169, 0.37 ) }
    dend_49 { pt3dadd( -56.1851, 8.47198, -10.9826, 0.66 ) }
    dend_49 { pt3dadd( -56.7269, 8.18061, -10.8412, 0.66 ) }
    dend_49 { pt3dadd( -56.7858, 8.1512, -10.8195, 0.66 ) }
    dend_49 { pt3dadd( -57.708, 7.72512, -10.4108, 0.44 ) }
    dend_49 { pt3dadd( -59.1149, 7.10676, -9.73269, 0.44 ) }
    dend_49 { pt3dadd( -61.4609, 6.15122, -8.67182, 0.66 ) }
    dend_49 { pt3dadd( -62.7445, 5.63909, -8.12531, 0.44 ) }
    dend_49 { pt3dadd( -62.8076, 5.61465, -8.09956, 0.44 ) }
    dend_49 { pt3dadd( -63.738, 5.24814, -7.74969, 0.88 ) }
    dend_49 { pt3dadd( -64.4613, 4.98733, -7.51814, 1.03 ) }
    dend_49 { pt3dadd( -65.914, 4.49264, -7.20707, 0.66 ) }
    dend_49 { pt3dadd( -66.903, 4.16748, -7.15031, 0.66 ) }
    dend_49 { pt3dadd( -66.9798, 4.14428, -7.15031, 0.66 ) }
    dend_49 { pt3dadd( -67.9034, 3.88992, -7.13445, 0.29 ) }
    dend_49 { pt3dadd( -69.0328, 3.5793, -7.09686, 0.29 ) }
    dend_49 { pt3dadd( -69.127, 3.55093, -7.09222, 0.29 ) }
    dend_49 { pt3dadd( -69.9243, 3.24198, -6.98464, 0.29 ) }
    dend_49 { pt3dadd( -71.0615, 2.65767, -6.75134, 0.29 ) }
    dend_49 { pt3dadd( -71.6721, 2.25877, -6.59569, 0.74 ) }
    dend_49 { pt3dadd( -72.1743, 1.85239, -6.44193, 1.03 ) }
    dend_49 { pt3dadd( -72.5071, 1.50721, -6.30691, 1.03 ) }
    dend_49 { pt3dadd( -73.547, 0.308176, -5.88727, 0.29 ) }
    dend_49 { pt3dadd( -74.0461, -0.342957, -5.67854, 0.29 ) }
    dend_49 { pt3dadd( -74.2937, -0.673589, -5.58018, 0.59 ) }
    dend_49 { pt3dadd( -74.6527, -1.10494, -5.46216, 0.59 ) }
    dend_49 { pt3dadd( -75.2211, -1.72594, -5.2708, 0.81 ) }
    dend_49 { pt3dadd( -75.8123, -2.41375, -4.97141, 0.29 ) }
    dend_49 { pt3dadd( -75.8644, -2.5125, -4.87459, 0.29 ) }
    dend_49 { pt3dadd( -76.0397, -2.92322, -4.39702, 0.29 ) }
    dend_49 { pt3dadd( -76.0532, -2.95911, -4.35242, 0.29 ) }
    dend_49 { pt3dadd( -76.2711, -3.60435, -3.50967, 1.11 ) }
    dend_49 { pt3dadd( -76.5949, -4.57082, -2.19934, 1.11 ) }
    dend_49 { pt3dadd( -77.1852, -6.20647, 0.0340653, 0.29 ) }
    dend_49 { pt3dadd( -77.5177, -7.04081, 1.14756, 0.29 ) }
    dend_49 { pt3dadd( -77.724, -7.49108, 1.73663, 0.81 ) }
    dend_49 { pt3dadd( -77.7454, -7.52661, 1.77836, 0.81 ) }
    dend_49 { pt3dadd( -77.9657, -7.78981, 2.04821, 0.81 ) }
    dend_49 { pt3dadd( -78.9756, -8.71435, 2.7971, 0.29 ) }
    dend_49 { pt3dadd( -79.1328, -8.84452, 2.86992, 0.52 ) }
    dend_49 { pt3dadd( -79.5016, -9.15522, 3.04037, 0.52 ) }
    dend_49 { pt3dadd( -80.4521, -10.076, 3.53793, 0.29 ) }
    dend_49 { pt3dadd( -80.9449, -10.599, 3.82141, 0.96 ) }
    dend_49 { pt3dadd( -80.9917, -10.6538, 3.85102, 0.96 ) }
    dend_49 { pt3dadd( -81.377, -11.0915, 4.12541, 1.11 ) }
    dend_49 { pt3dadd( -81.4236, -11.141, 4.1643, 1.11 ) }
    dend_49 { pt3dadd( -82.5328, -12.2377, 5.28354, 0.29 ) }
    dend_49 { pt3dadd( -83.0096, -12.6646, 5.78477, 0.29 ) }
    dend_49 { pt3dadd( -83.0516, -12.6989, 5.82753, 0.29 ) }
    dend_49 { pt3dadd( -84.0052, -13.4019, 6.75534, 0.59 ) }
    dend_49 { pt3dadd( -84.7718, -13.9102, 7.45146, 0.81 ) }
    dend_49 { pt3dadd( -86.4037, -14.9587, 8.84118, 0.37 ) }
    dend_49 { pt3dadd( -86.7948, -15.1964, 9.15263, 1.11 ) }
    dend_49 { pt3dadd( -87.6494, -15.7247, 9.8085, 1.11 ) }
    dend_49 { pt3dadd( -87.9633, -15.9252, 10.0353, 1.11 ) }
    dend_49 { pt3dadd( -89.2253, -16.7875, 10.8448, 0.29 ) }
    dend_49 { pt3dadd( -89.6369, -17.0772, 11.0704, 0.29 ) }
    dend_49 { pt3dadd( -89.6891, -17.1136, 11.0988, 0.29 ) }
    dend_49 { pt3dadd( -90.3265, -17.5488, 11.486, 0.29 ) }
    dend_49 { pt3dadd( -90.6834, -17.7869, 11.7155, 0.66 ) }
    dend_49 { pt3dadd( -91.0579, -18.0141, 11.9951, 0.66 ) }
    dend_49 { pt3dadd( -91.1161, -18.0462, 12.0385, 0.66 ) }
    dend_49 { pt3dadd( -92.5233, -18.7922, 13.0451, 0.37 ) }
    dend_49 { pt3dadd( -93.1624, -19.1187, 13.5288, 0.37 ) }
    dend_49 { pt3dadd( -93.2134, -19.145, 13.568, 0.37 ) }
    dend_49 { pt3dadd( -94.0357, -19.5925, 14.6546, 0.29 ) }
    dend_49 { pt3dadd( -94.4923, -19.8645, 15.391, 0.74 ) }
    dend_49 { pt3dadd( -94.6693, -19.9736, 15.6936, 0.74 ) }
    dend_49 { pt3dadd( -95.6198, -20.5919, 17.4786, 0.22 ) }
    dend_49 { pt3dadd( -95.9934, -20.8514, 18.2721, 0.66 ) }
    dend_49 { pt3dadd( -98.2221, -22.4402, 23.4978, 0.44 ) }
    dend_49 { pt3dadd( -98.4146, -22.5833, 24.0352, 0.74 ) }
    dend_49 { pt3dadd( -106.66, -26.2907, 28.1309, 0.74 ) }
    dend_49 { pt3dadd( -114.893, -30.3195, 31.9054, 0.74 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 84/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 59.3799, -1.81756, -85.1695, 0.29 ) }
    dend_42 { pt3dadd( 62.2681, -1.90117, -90.5679, 0.29 ) }
    dend_42 { pt3dadd( 62.2993, -1.90071, -90.6192, 0.29 ) }
    dend_42 { pt3dadd( 62.7531, -1.8537, -91.4787, 0.29 ) }
    dend_42 { pt3dadd( 62.7853, -1.84939, -91.5407, 0.29 ) }
    dend_42 { pt3dadd( 63.6865, -1.75068, -93.0479, 0.96 ) }
    dend_42 { pt3dadd( 64.445, -1.68098, -94.2287, 0.96 ) }
    dend_42 { pt3dadd( 64.5847, -1.66876, -94.3984, 0.96 ) }
    dend_42 { pt3dadd( 67.6485, -1.58729, -97.9818, 0.37 ) }
    dend_42 { pt3dadd( 67.8442, -1.58894, -98.2094, 0.37 ) }
    dend_42 { pt3dadd( 69.2549, -1.65349, -99.7849, 0.37 ) }
    dend_42 { pt3dadd( 69.3537, -1.6629, -99.8836, 0.37 ) }
    dend_42 { pt3dadd( 70.0658, -1.76823, -100.472, 1.11 ) }
    dend_42 { pt3dadd( 70.9522, -1.92293, -101.052, 1.11 ) }
    dend_42 { pt3dadd( 73.1117, -2.42715, -101.863, 0.29 ) }
    dend_42 { pt3dadd( 73.1751, -2.443, -101.889, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_42 { pt3dadd( 74.1562, -2.64103, -102.552, 0.29 ) }
    dend_42 { pt3dadd( 74.2106, -2.64884, -102.597, 0.29 ) }
    dend_42 { pt3dadd( 74.6162, -2.6728, -102.95, 0.81 ) }
    dend_42 { pt3dadd( 74.9252, -2.65065, -103.353, 0.81 ) }
    dend_42 { pt3dadd( 74.9887, -2.64131, -103.515, 0.81 ) }
    dend_42 { pt3dadd( 75.9362, -2.46402, -106.365, 0.59 ) }
    dend_42 { pt3dadd( 75.9651, -2.45754, -106.461, 0.59 ) }
    dend_42 { pt3dadd( 76.4086, -2.33111, -107.932, 0.52 ) }
    dend_42 { pt3dadd( 77.8045, -1.85408, -112.469, 0.52 ) }
    dend_42 { pt3dadd( 80.5516, -0.847466, -120.849, 0.22 ) }
    dend_42 { pt3dadd( 80.9875, -0.685443, -122.131, 0.52 ) }
    dend_42 { pt3dadd( 81.0106, -0.675876, -122.197, 0.52 ) }
    dend_42 { pt3dadd( 81.437, -0.472719, -123.402, 0.52 ) }
    dend_42 { pt3dadd( 82.1478, -0.080049, -125.385, 0.29 ) }
    dend_42 { pt3dadd( 83.2385, 0.539654, -128.009, 0.29 ) }
    dend_42 { pt3dadd( 83.2686, 0.556869, -128.07, 0.29 ) }
    dend_42 { pt3dadd( 84.6479, 1.20344, -130.957, 0.81 ) }
    dend_42 { pt3dadd( 84.8283, 1.27305, -131.352, 0.81 ) }
    dend_42 { pt3dadd( 84.8882, 1.28448, -131.489, 0.81 ) }
    dend_42 { pt3dadd( 87.2544, 1.59232, -137.17, 0.52 ) }
    dend_42 { pt3dadd( 87.4189, 1.60005, -137.579, 0.52 ) }
    dend_42 { pt3dadd( 88.0688, 1.56893, -139.154, 0.52 ) }
    dend_42 { pt3dadd( 88.0928, 1.56332, -139.209, 0.52 ) }
    dend_42 { pt3dadd( 89.8497, 1.05017, -143.132, 0.52 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 24/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 59.3799, -1.81756, -85.1695, 0.37 ) }
    dend_41 { pt3dadd( 59.7951, -0.812494, -86.0192, 0.37 ) }
    dend_41 { pt3dadd( 59.8156, -0.762917, -86.0612, 0.37 ) }
    dend_41 { pt3dadd( 60.1849, 0.130852, -86.8168, 0.52 ) }
    dend_41 { pt3dadd( 60.2346, 0.251254, -86.9186, 0.52 ) }
    dend_41 { pt3dadd( 60.7664, 1.53859, -88.0071, 0.74 ) }
    dend_41 { pt3dadd( 61.5372, 3.40434, -89.5845, 0.74 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 31/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 55.7949, 34.5774, -57.8572, 0.37 ) }
    dend_39 { pt3dadd( 56.8555, 35.4903, -59.0052, 0.37 ) }
    dend_39 { pt3dadd( 57.3256, 35.9236, -59.4698, 0.59 ) }
    dend_39 { pt3dadd( 58.6107, 37.1515, -60.7758, 0.37 ) }
    dend_39 { pt3dadd( 61.683, 40.1474, -63.9399, 0.29 ) }
    dend_39 { pt3dadd( 62.4224, 40.8778, -64.7056, 0.59 ) }
    dend_39 { pt3dadd( 63.3143, 41.7676, -65.6327, 0.37 ) }
    dend_39 { pt3dadd( 64.236, 42.7512, -66.5832, 0.66 ) }
    dend_39 { pt3dadd( 65.7999, 44.4215, -68.1702, 0.37 ) }
    dend_39 { pt3dadd( 65.8455, 44.4688, -68.2131, 0.37 ) }
    dend_39 { pt3dadd( 67.0967, 45.713, -69.3139, 0.37 ) }
    dend_39 { pt3dadd( 67.1387, 45.7522, -69.353, 0.37 ) }
    dend_39 { pt3dadd( 67.9705, 46.4774, -70.1744, 0.66 ) }
    dend_39 { pt3dadd( 69.5669, 47.7531, -71.6343, 0.44 ) }
    dend_39 { pt3dadd( 69.6109, 47.7872, -71.6752, 0.44 ) }
    dend_39 { pt3dadd( 69.8993, 48.018, -72.0274, 0.66 ) }
    dend_39 { pt3dadd( 70.0254, 48.1213, -72.2138, 0.66 ) }
    dend_39 { pt3dadd( 71.0895, 49.0216, -73.8801, 0.22 ) }
    dend_39 { pt3dadd( 71.8902, 49.7058, -75.1357, 0.22 ) }
    dend_39 { pt3dadd( 73.2579, 50.8849, -77.2233, 0.88 ) }
    dend_39 { pt3dadd( 74.6295, 52.0608, -79.3311, 0.88 ) }
    dend_39 { pt3dadd( 74.6589, 52.0856, -79.3765, 0.88 ) }
    dend_39 { pt3dadd( 75.629, 52.927, -80.8912, 0.29 ) }
    dend_39 { pt3dadd( 76.4906, 53.7258, -82.3143, 0.29 ) }
    dend_39 { pt3dadd( 76.5267, 53.7599, -82.376, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 56/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 55.7949, 34.5774, -57.8572, 0.52 ) }
    dend_38 { pt3dadd( 55.2948, 36.6096, -58.5586, 0.52 ) }
    dend_38 { pt3dadd( 55.2258, 36.9395, -58.668, 0.88 ) }
    dend_38 { pt3dadd( 55.2136, 37.0049, -58.6883, 0.88 ) }
    dend_38 { pt3dadd( 55.1571, 37.3198, -58.7826, 0.88 ) }
    dend_38 { pt3dadd( 54.9657, 38.4897, -59.1898, 0.37 ) }
    dend_38 { pt3dadd( 54.8626, 39.2689, -59.4962, 1.11 ) }
    dend_38 { pt3dadd( 54.7864, 39.8954, -59.7778, 1.33 ) }
    dend_38 { pt3dadd( 54.7501, 40.2695, -59.9731, 1.33 ) }
    dend_38 { pt3dadd( 54.7446, 40.353, -60.0183, 1.33 ) }
    dend_38 { pt3dadd( 54.7298, 41.7655, -60.8176, 0.29 ) }
    dend_38 { pt3dadd( 54.7721, 43.2433, -61.6746, 0.29 ) }
    dend_38 { pt3dadd( 54.7822, 43.4661, -61.8084, 0.66 ) }
    dend_38 { pt3dadd( 54.8526, 44.4647, -62.4789, 0.29 ) }
    dend_38 { pt3dadd( 54.9401, 45.2244, -63.0087, 0.59 ) }
    dend_38 { pt3dadd( 55.0485, 45.8657, -63.4616, 0.29 ) }
    dend_38 { pt3dadd( 55.0645, 45.9179, -63.5032, 0.29 ) }
    dend_38 { pt3dadd( 55.3203, 46.525, -64.0514, 0.29 ) }
    dend_38 { pt3dadd( 55.9335, 47.838, -65.255, 0.96 ) }
    dend_38 { pt3dadd( 56.097, 48.1927, -65.5774, 1.18 ) }
    dend_38 { pt3dadd( 56.1581, 48.3428, -65.7193, 1.18 ) }
    dend_38 { pt3dadd( 56.5125, 49.5455, -66.9198, 0.29 ) }
    dend_38 { pt3dadd( 56.5321, 49.6173, -66.9921, 0.29 ) }
    dend_38 { pt3dadd( 56.6585, 50.1098, -67.4938, 0.29 ) }
    dend_38 { pt3dadd( 56.8823, 50.9925, -68.3263, 1.25 ) }
    dend_38 { pt3dadd( 57.0132, 51.4192, -68.7405, 1.25 ) }
    dend_38 { pt3dadd( 57.5291, 53.0474, -70.2265, 0.37 ) }
    dend_38 { pt3dadd( 57.8248, 54.0092, -71.0194, 0.59 ) }
    dend_38 { pt3dadd( 57.843, 54.062, -71.0627, 0.59 ) }
    dend_38 { pt3dadd( 58.0356, 54.5937, -71.4882, 0.59 ) }
    dend_38 { pt3dadd( 58.4565, 55.694, -72.2986, 0.44 ) }
    dend_38 { pt3dadd( 58.7265, 56.4278, -72.8013, 0.44 ) }
    dend_38 { pt3dadd( 58.9381, 57.103, -73.1525, 0.66 ) }
    dend_38 { pt3dadd( 58.961, 57.1866, -73.1917, 0.66 ) }
    dend_38 { pt3dadd( 59.1505, 57.8952, -73.5032, 0.88 ) }
    dend_38 { pt3dadd( 59.1702, 57.9647, -73.5289, 0.88 ) }
    dend_38 { pt3dadd( 59.5992, 58.9941, -73.8692, 0.44 ) }
    dend_38 { pt3dadd( 60.1272, 59.8781, -74.1666, 0.44 ) }
    dend_38 { pt3dadd( 60.6186, 60.5871, -74.3936, 0.44 ) }
    dend_38 { pt3dadd( 60.6568, 60.6408, -74.4092, 0.44 ) }
    dend_38 { pt3dadd( 61.403, 61.6546, -74.6592, 1.62 ) }
    dend_38 { pt3dadd( 62.2332, 62.8096, -74.8864, 0.29 ) }
    dend_38 { pt3dadd( 62.7188, 63.5, -74.9787, 0.29 ) }
    dend_38 { pt3dadd( 62.8743, 63.7312, -75.0118, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_38 { pt3dadd( 63.2947, 64.3735, -75.1042, 0.29 ) }
    dend_38 { pt3dadd( 63.9045, 65.3085, -75.1911, 0.59 ) }
    dend_38 { pt3dadd( 64.3289, 65.9729, -75.218, 0.29 ) }
    dend_38 { pt3dadd( 64.7296, 66.6832, -75.1897, 0.59 ) }
    dend_38 { pt3dadd( 65.1629, 67.4488, -75.1553, 0.29 ) }
    dend_38 { pt3dadd( 65.2396, 67.5782, -75.1481, 0.29 ) }
    dend_38 { pt3dadd( 66.1143, 68.9756, -75.0431, 0.44 ) }
    dend_38 { pt3dadd( 66.1441, 69.0248, -75.0378, 0.44 ) }
    dend_38 { pt3dadd( 67.03, 70.5863, -74.8013, 0.74 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 11.5034, -124.001, 12.0202, 0.29 ) }
    dend_26 { pt3dadd( 10.4005, -125.193, 12.4301, 0.29 ) }
    dend_26 { pt3dadd( 10.1388, -125.476, 12.5273, 0.59 ) }
    dend_26 { pt3dadd( 10.0875, -125.531, 12.5464, 0.59 ) }
    dend_26 { pt3dadd( 9.62865, -126.027, 12.7169, 0.22 ) }
    dend_26 { pt3dadd( 9.4186, -126.254, 12.795, 0.66 ) }
    dend_26 { pt3dadd( 8.99459, -126.712, 12.9525, 0.66 ) }
    dend_26 { pt3dadd( 4.64587, -134.427, 16.8422, 0.66 ) }
    dend_26 { pt3dadd( -0.531081, -140.976, 21.9099, 0.66 ) }
    dend_26 { pt3dadd( -5.87451, -148.609, 24.5343, 0.66 ) }
    dend_26 { pt3dadd( -11.5086, -155.546, 28.3996, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 20/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 11.5034, -124.001, 12.0202, 0.29 ) }
    dend_25 { pt3dadd( 10.9871, -125.547, 12.8234, 0.29 ) }
    dend_25 { pt3dadd( 10.9413, -125.675, 12.8687, 0.29 ) }
    dend_25 { pt3dadd( 10.874, -126.044, 13.0667, 0.29 ) }
    dend_25 { pt3dadd( 10.8688, -126.123, 13.1324, 0.29 ) }
    dend_25 { pt3dadd( 10.8517, -127.007, 14.0568, 0.59 ) }
    dend_25 { pt3dadd( 10.8236, -127.573, 14.6519, 0.59 ) }
    dend_25 { pt3dadd( 10.7882, -128.122, 15.2194, 0.37 ) }
    dend_25 { pt3dadd( 10.7432, -129.393, 16.5733, 0.59 ) }
    dend_25 { pt3dadd( 10.8272, -130.42, 17.7239, 0.88 ) }
    dend_25 { pt3dadd( 11.0685, -131.419, 18.9537, 0.37 ) }
    dend_25 { pt3dadd( 11.343, -132.02, 19.7495, 0.37 ) }
    dend_25 { pt3dadd( 11.5122, -132.309, 20.1416, 0.37 ) }
    dend_25 { pt3dadd( 11.5471, -132.359, 20.2086, 0.37 ) }
    dend_25 { pt3dadd( 12.2758, -133.361, 21.4791, 0.74 ) }
    dend_25 { pt3dadd( 13.0879, -134.381, 22.7498, 0.66 ) }
    dend_25 { pt3dadd( 13.6307, -134.987, 23.555, 0.29 ) }
    dend_25 { pt3dadd( 13.7069, -135.069, 23.68, 0.29 ) }
    dend_25 { pt3dadd( 13.8898, -135.28, 24.0402, 0.29 ) }
    dend_25 { pt3dadd( 14.5779, -136.083, 25.4367, 0.74 ) }
    dend_25 { pt3dadd( 14.6596, -136.19, 25.6291, 0.74 ) }
    dend_25 { pt3dadd( 14.8043, -136.391, 25.9883, 0.74 ) }
    dend_25 { pt3dadd( 15.5548, -137.466, 27.9859, 0.29 ) }
    dend_25 { pt3dadd( 16.0302, -138.123, 29.2147, 0.74 ) }
    dend_25 { pt3dadd( 16.3689, -138.565, 30.0372, 0.66 ) }
    dend_25 { pt3dadd( 17.4469, -139.74, 32.1496, 0.37 ) }
    dend_25 { pt3dadd( 20.7055, -145.857, 39.0714, 0.37 ) }
    dend_25 { pt3dadd( 24.6755, -151.46, 46.1038, 0.37 ) }
    dend_25 { pt3dadd( 26.6371, -156.834, 54.1139, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 49/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -30.0312, -34.7106, -1.46242, 0.29 ) }
    dend_21 { pt3dadd( -30.8713, -34.0603, -0.201815, 0.29 ) }
    dend_21 { pt3dadd( -31.3583, -33.6379, 0.499298, 0.44 ) }
    dend_21 { pt3dadd( -32.2881, -32.79, 1.70031, 0.37 ) }
    dend_21 { pt3dadd( -32.8359, -32.3378, 2.32568, 0.37 ) }
    dend_21 { pt3dadd( -34.1147, -31.3462, 3.67529, 0.74 ) }
    dend_21 { pt3dadd( -34.5219, -31.0533, 4.07242, 0.29 ) }
    dend_21 { pt3dadd( -34.9962, -30.7072, 4.47776, 0.29 ) }
    dend_21 { pt3dadd( -35.6149, -30.2336, 4.99874, 0.29 ) }
    dend_21 { pt3dadd( -36.2966, -29.715, 5.47261, 0.29 ) }
    dend_21 { pt3dadd( -36.3434, -29.6843, 5.51332, 0.29 ) }
    dend_21 { pt3dadd( -36.6672, -29.5387, 5.79149, 0.29 ) }
    dend_21 { pt3dadd( -37.535, -29.2252, 6.9616, 0.59 ) }
    dend_21 { pt3dadd( -37.5635, -29.2147, 7.02536, 0.59 ) }
    dend_21 { pt3dadd( -37.8088, -29.1234, 7.63263, 0.59 ) }
    dend_21 { pt3dadd( -38.7339, -28.7963, 9.83937, 0.52 ) }
    dend_21 { pt3dadd( -39.1512, -28.6867, 10.7422, 0.52 ) }
    dend_21 { pt3dadd( -40.1531, -28.4878, 12.6607, 0.88 ) }
    dend_21 { pt3dadd( -41.6947, -28.246, 15.2052, 0.88 ) }
    dend_21 { pt3dadd( -42.6122, -28.1077, 16.5425, 0.52 ) }
    dend_21 { pt3dadd( -43.17, -28.0228, 17.2492, 0.44 ) }
    dend_21 { pt3dadd( -44.214, -27.796, 18.3388, 0.44 ) }
    dend_21 { pt3dadd( -44.9916, -27.5452, 19.0261, 0.74 ) }
    dend_21 { pt3dadd( -45.7464, -27.2465, 19.4796, 1.11 ) }
    dend_21 { pt3dadd( -46.6631, -26.8378, 19.8485, 0.81 ) }
    dend_21 { pt3dadd( -47.119, -26.6129, 20.068, 0.29 ) }
    dend_21 { pt3dadd( -47.8131, -26.267, 20.4681, 0.29 ) }
    dend_21 { pt3dadd( -48.3057, -26.0233, 20.7709, 0.66 ) }
    dend_21 { pt3dadd( -48.786, -25.8136, 21.1067, 1.03 ) }
    dend_21 { pt3dadd( -48.8411, -25.7918, 21.1446, 1.03 ) }
    dend_21 { pt3dadd( -50.8236, -24.9644, 22.3284, 0.37 ) }
    dend_21 { pt3dadd( -51.3433, -24.7671, 22.6297, 0.37 ) }
    dend_21 { pt3dadd( -52.1973, -24.5048, 23.0735, 0.59 ) }
    dend_21 { pt3dadd( -52.6169, -24.391, 23.305, 0.59 ) }
    dend_21 { pt3dadd( -53.3848, -24.1875, 23.7203, 0.29 ) }
    dend_21 { pt3dadd( -54.1217, -24.0033, 24.0806, 0.29 ) }
    dend_21 { pt3dadd( -54.4491, -23.9163, 24.2153, 0.59 ) }
    dend_21 { pt3dadd( -55.2046, -23.7865, 24.5515, 0.88 ) }
    dend_21 { pt3dadd( -56.6054, -23.696, 25.1761, 1.03 ) }
    dend_21 { pt3dadd( -56.8836, -23.6951, 25.2978, 1.03 ) }
    dend_21 { pt3dadd( -58.2834, -23.7306, 25.8824, 0.29 ) }
    dend_21 { pt3dadd( -58.3392, -23.7317, 25.9044, 0.29 ) }
    dend_21 { pt3dadd( -59.1006, -23.6716, 26.2027, 0.81 ) }
    dend_21 { pt3dadd( -59.7151, -23.5311, 26.4827, 0.81 ) }
    dend_21 { pt3dadd( -59.7754, -23.5082, 26.5088, 0.81 ) }
    dend_21 { pt3dadd( -60.2744, -23.2879, 26.8025, 0.81 ) }
    dend_21 { pt3dadd( -60.3209, -23.2665, 26.8329, 0.81 ) }
    dend_21 { pt3dadd( -61.4998, -22.7281, 27.6165, 0.37 ) }
    dend_21 { pt3dadd( -62.5877, -22.2387, 28.3453, 0.37 ) }
    dend_21 { pt3dadd( -63.6637, -21.7832, 29.0355, 0.37 ) }
    dend_21 { pt3dadd( -65.0531, -21.2158, 29.8313, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_21 { pt3dadd( -65.8796, -20.9118, 30.2317, 0.37 ) }
    dend_21 { pt3dadd( -66.4704, -20.7191, 30.457, 0.74 ) }
    dend_21 { pt3dadd( -66.9621, -20.5968, 30.5737, 0.96 ) }
    dend_21 { pt3dadd( -67.5692, -20.5072, 30.642, 0.96 ) }
    dend_21 { pt3dadd( -68.4269, -20.4596, 30.7027, 0.29 ) }
    dend_21 { pt3dadd( -69.3887, -20.4496, 30.7121, 0.29 ) }
    dend_21 { pt3dadd( -69.707, -20.465, 30.7266, 0.88 ) }
    dend_21 { pt3dadd( -70.3101, -20.5213, 30.7692, 1.03 ) }
    dend_21 { pt3dadd( -71.112, -20.616, 30.8409, 1.03 ) }
    dend_21 { pt3dadd( -72.2149, -20.7883, 30.9187, 0.44 ) }
    dend_21 { pt3dadd( -73.075, -20.9825, 30.9723, 0.44 ) }
    dend_21 { pt3dadd( -73.9984, -21.2409, 31.0076, 0.44 ) }
    dend_21 { pt3dadd( -74.5592, -21.4192, 31.0135, 0.96 ) }
    dend_21 { pt3dadd( -75.3257, -21.6923, 30.9942, 0.96 ) }
    dend_21 { pt3dadd( -76.4218, -22.1106, 30.9119, 0.29 ) }
    dend_21 { pt3dadd( -77.2171, -22.4485, 30.7874, 0.29 ) }
    dend_21 { pt3dadd( -77.6804, -22.6385, 30.7112, 0.29 ) }
    dend_21 { pt3dadd( -78.0169, -22.76, 30.6571, 0.29 ) }
    dend_21 { pt3dadd( -78.308, -22.8208, 30.6214, 0.74 ) }
    dend_21 { pt3dadd( -79.1075, -22.7716, 30.6316, 1.03 ) }
    dend_21 { pt3dadd( -79.5206, -22.6828, 30.677, 1.03 ) }
    dend_21 { pt3dadd( -80.3718, -22.5279, 30.7682, 0.37 ) }
    dend_21 { pt3dadd( -80.4311, -22.5218, 30.7741, 0.37 ) }
    dend_21 { pt3dadd( -80.9434, -22.5078, 30.8218, 0.37 ) }
    dend_21 { pt3dadd( -82.0477, -22.6348, 30.9451, 0.29 ) }
    dend_21 { pt3dadd( -82.6137, -22.7564, 31.0637, 0.74 ) }
    dend_21 { pt3dadd( -83.9487, -23.1027, 31.4184, 0.29 ) }
    dend_21 { pt3dadd( -85.061, -23.4279, 31.7427, 0.29 ) }
    dend_21 { pt3dadd( -85.5387, -23.572, 31.8875, 0.81 ) }
    dend_21 { pt3dadd( -87.3596, -24.1319, 32.5375, 0.29 ) }
    dend_21 { pt3dadd( -88.8251, -24.5272, 33.2081, 0.59 ) }
    dend_21 { pt3dadd( -89.2532, -24.6095, 33.4469, 0.88 ) }
    dend_21 { pt3dadd( -89.8709, -24.6795, 33.8521, 0.88 ) }
    dend_21 { pt3dadd( -90.286, -24.7113, 34.1649, 0.88 ) }
    dend_21 { pt3dadd( -91.5635, -24.7596, 35.1631, 0.88 ) }
    dend_21 { pt3dadd( -92.5287, -24.75, 36.1855, 0.37 ) }
    dend_21 { pt3dadd( -92.9194, -24.7577, 36.6685, 0.37 ) }
    dend_21 { pt3dadd( -93.209, -24.775, 37.1356, 0.81 ) }
    dend_21 { pt3dadd( -93.8591, -24.8231, 38.2957, 0.44 ) }
    dend_21 { pt3dadd( -94.1849, -24.8389, 38.8931, 0.44 ) }
    dend_21 { pt3dadd( -95.9767, -24.8557, 41.9995, 0.44 ) }
    dend_21 { pt3dadd( -96.0095, -24.8571, 42.0497, 0.44 ) }
    dend_21 { pt3dadd( -97.5903, -24.9121, 44.2626, 1.18 ) }
    dend_21 { pt3dadd( -98.1134, -24.9052, 44.987, 1.55 ) }
    dend_21 { pt3dadd( -98.6727, -24.8667, 45.7025, 0.81 ) }
    dend_21 { pt3dadd( -99.47, -24.8095, 46.597, 0.22 ) }
    dend_21 { pt3dadd( -100.747, -24.7187, 47.3211, 0.66 ) }
    dend_21 { pt3dadd( -101.087, -24.698, 47.4666, 0.81 ) }
    dend_21 { pt3dadd( -109.069, -22.9149, 53.1905, 0.81 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -30.0312, -34.7106, -1.46242, 0.74 ) }
    dend_20 { pt3dadd( -30.2549, -35.6343, -1.68391, 0.74 ) }
    dend_20 { pt3dadd( -30.3478, -35.8929, -1.69548, 0.37 ) }
    dend_20 { pt3dadd( -30.3741, -35.9553, -1.6942, 0.37 ) }
    dend_20 { pt3dadd( -30.743, -36.7881, -1.65759, 0.37 ) }
    dend_20 { pt3dadd( -30.986, -37.3422, -1.62745, 1.03 ) }
    dend_20 { pt3dadd( -31.1685, -37.7575, -1.60272, 1.03 ) }
    dend_20 { pt3dadd( -31.5686, -38.6766, -1.48137, 0.52 ) }
    dend_20 { pt3dadd( -31.7943, -39.229, -1.50712, 0.52 ) }
    dend_20 { pt3dadd( -31.8159, -39.2905, -1.52301, 0.52 ) }
    dend_20 { pt3dadd( -31.9678, -39.8065, -1.77591, 0.52 ) }
    dend_20 { pt3dadd( -31.9901, -39.8838, -1.82766, 0.52 ) }
    dend_20 { pt3dadd( -32.1249, -40.3117, -2.18792, 0.96 ) }
    dend_20 { pt3dadd( -32.7777, -41.7983, -3.73484, 0.74 ) }
    dend_20 { pt3dadd( -33.0286, -42.2424, -4.20063, 0.29 ) }
    dend_20 { pt3dadd( -33.0602, -42.2858, -4.24315, 0.29 ) }
    dend_20 { pt3dadd( -33.5973, -42.8709, -4.78553, 0.29 ) }
    dend_20 { pt3dadd( -33.7017, -42.9591, -4.84377, 0.29 ) }
    dend_20 { pt3dadd( -34.6276, -43.5694, -5.05512, 0.29 ) }
    dend_20 { pt3dadd( -35.124, -43.8641, -5.04133, 0.74 ) }
    dend_20 { pt3dadd( -35.5659, -44.1377, -5.01585, 0.74 ) }
    dend_20 { pt3dadd( -35.6209, -44.1786, -5.0114, 0.74 ) }
    dend_20 { pt3dadd( -36.4471, -44.9401, -4.90548, 0.29 ) }
    dend_20 { pt3dadd( -36.5487, -45.0443, -4.88969, 0.29 ) }
    dend_20 { pt3dadd( -36.9183, -45.4539, -4.82096, 0.88 ) }
    dend_20 { pt3dadd( -37.4163, -46.0109, -4.79611, 0.96 ) }
    dend_20 { pt3dadd( -37.9176, -46.5798, -4.80694, 0.96 ) }
    dend_20 { pt3dadd( -38.5226, -47.2855, -4.85853, 0.29 ) }
    dend_20 { pt3dadd( -39.2299, -48.1322, -5.00533, 0.29 ) }
    dend_20 { pt3dadd( -39.2915, -48.205, -5.01635, 0.29 ) }
    dend_20 { pt3dadd( -40.1088, -49.1163, -5.14753, 0.74 ) }
    dend_20 { pt3dadd( -40.2898, -49.3052, -5.17452, 0.74 ) }
    dend_20 { pt3dadd( -40.6342, -49.6242, -5.23399, 0.74 ) }
    dend_20 { pt3dadd( -41.4865, -50.395, -5.39902, 0.37 ) }
    dend_20 { pt3dadd( -42.2792, -51.119, -5.53677, 0.74 ) }
    dend_20 { pt3dadd( -42.4793, -51.3181, -5.55907, 0.74 ) }
    dend_20 { pt3dadd( -42.5263, -51.3683, -5.56028, 0.74 ) }
    dend_20 { pt3dadd( -43.2761, -52.1949, -5.55549, 0.29 ) }
    dend_20 { pt3dadd( -43.7132, -52.7034, -5.54191, 0.29 ) }
    dend_20 { pt3dadd( -43.7685, -52.7734, -5.53924, 0.29 ) }
    dend_20 { pt3dadd( -44.4708, -53.8042, -5.52753, 0.29 ) }
    dend_20 { pt3dadd( -44.506, -53.8624, -5.5239, 0.29 ) }
    dend_20 { pt3dadd( -44.8109, -54.447, -5.46646, 0.81 ) }
    dend_20 { pt3dadd( -45.0209, -54.9181, -5.41764, 0.96 ) }
    dend_20 { pt3dadd( -45.0472, -54.9796, -5.4068, 0.96 ) }
    dend_20 { pt3dadd( -45.6264, -56.231, -5.1516, 0.29 ) }
    dend_20 { pt3dadd( -45.6566, -56.2916, -5.13356, 0.29 ) }
    dend_20 { pt3dadd( -46.4387, -57.7841, -4.62087, 0.29 ) }
    dend_20 { pt3dadd( -46.6496, -58.1564, -4.46148, 0.81 ) }
    dend_20 { pt3dadd( -47.6827, -59.747, -3.5852, 0.22 ) }
    dend_20 { pt3dadd( -48.3684, -60.6919, -2.5058, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_20 { pt3dadd( -48.9053, -61.3046, -1.1568, 0.22 ) }
    dend_20 { pt3dadd( -48.923, -61.3135, -1.07933, 0.22 ) }
    dend_20 { pt3dadd( -49.0325, -61.0513, 0.381066, 0.66 ) }
    dend_20 { pt3dadd( -48.9783, -60.383, 2.08394, 1.33 ) }
    dend_20 { pt3dadd( -48.4219, -57.3972, 7.30886, 0.44 ) }
    dend_20 { pt3dadd( -48.2916, -56.8328, 8.15466, 0.29 ) }
    dend_20 { pt3dadd( -47.785, -54.9304, 10.6873, 0.66 ) }
    dend_20 { pt3dadd( -47.2464, -53.0096, 12.9519, 0.52 ) }
    dend_20 { pt3dadd( -46.5528, -50.6745, 15.3792, 0.81 ) }
    dend_20 { pt3dadd( -45.9381, -48.633, 17.2508, 0.29 ) }
    dend_20 { pt3dadd( -45.9219, -48.5724, 17.2974, 0.29 ) }
    dend_20 { pt3dadd( -45.4483, -46.7618, 18.62, 0.29 ) }
    dend_20 { pt3dadd( -45.0574, -45.2488, 19.6121, 0.29 ) }
    dend_20 { pt3dadd( -45.0398, -45.1717, 19.6536, 0.29 ) }
    dend_20 { pt3dadd( -44.6935, -43.5449, 20.3252, 0.96 ) }
    dend_20 { pt3dadd( -44.4105, -41.9759, 20.7994, 0.29 ) }
    dend_20 { pt3dadd( -44.2622, -40.8117, 21.1814, 0.29 ) }
    dend_20 { pt3dadd( -44.2513, -40.6747, 21.226, 0.29 ) }
    dend_20 { pt3dadd( -44.1982, -39.8226, 21.5403, 0.29 ) }
    dend_20 { pt3dadd( -44.1952, -39.7601, 21.5641, 0.29 ) }
    dend_20 { pt3dadd( -44.1448, -37.9905, 22.2184, 0.66 ) }
    dend_20 { pt3dadd( -43.9669, -34.7323, 23.6064, 0.52 ) }
    dend_20 { pt3dadd( -43.9546, -34.6021, 23.6669, 0.52 ) }
    dend_20 { pt3dadd( -43.838, -33.8539, 24.0549, 0.52 ) }
    dend_20 { pt3dadd( -43.8115, -33.7226, 24.127, 0.52 ) }
    dend_20 { pt3dadd( -43.3811, -32.0137, 25.163, 0.81 ) }
    dend_20 { pt3dadd( -42.8388, -30.3148, 26.2342, 0.37 ) }
    dend_20 { pt3dadd( -42.1956, -28.5699, 27.3591, 0.66 ) }
    dend_20 { pt3dadd( -41.4655, -26.6779, 28.6262, 0.37 ) }
    dend_20 { pt3dadd( -41.2691, -26.1839, 28.9777, 0.81 ) }
    dend_20 { pt3dadd( -40.4139, -23.9626, 30.5616, 0.29 ) }
    dend_20 { pt3dadd( -39.9565, -22.7705, 31.4112, 0.29 ) }
    dend_20 { pt3dadd( -39.5376, -21.582, 32.1971, 1.18 ) }
    dend_20 { pt3dadd( -39.2509, -20.8304, 32.6899, 0.52 ) }
    dend_20 { pt3dadd( -38.7388, -19.5039, 33.5074, 0.52 ) }
    dend_20 { pt3dadd( -38.2539, -18.3022, 34.2641, 0.29 ) }
    dend_20 { pt3dadd( -37.9818, -17.6363, 34.6605, 0.29 ) }
    dend_20 { pt3dadd( -37.964, -17.5947, 34.6976, 0.29 ) }
    dend_20 { pt3dadd( -37.2269, -15.9766, 36.3843, 0.66 ) }
    dend_20 { pt3dadd( -36.9869, -15.4691, 36.9496, 0.66 ) }
    dend_20 { pt3dadd( -36.4285, -14.2553, 38.3139, 0.37 ) }
    dend_20 { pt3dadd( -36.2397, -13.8327, 38.7981, 1.03 ) }
    dend_20 { pt3dadd( -34.718, -9.77338, 43.1252, 0.29 ) }
    dend_20 { pt3dadd( -34.6684, -9.60256, 43.2926, 0.29 ) }
    dend_20 { pt3dadd( -34.4159, -8.36491, 44.3888, 0.66 ) }
    dend_20 { pt3dadd( -34.1154, -6.24625, 46.1963, 0.29 ) }
    dend_20 { pt3dadd( -34.1066, -6.13145, 46.2869, 0.29 ) }
    dend_20 { pt3dadd( -34.091, -4.54979, 47.3893, 0.29 ) }
    dend_20 { pt3dadd( -34.2116, -2.51082, 48.4562, 0.37 ) }
    dend_20 { pt3dadd( -34.2455, -1.70968, 48.8744, 0.37 ) }
    dend_20 { pt3dadd( -34.3064, -0.073754, 49.7406, 0.66 ) }
    dend_20 { pt3dadd( -34.305, 0.012604, 49.7822, 0.66 ) }
    dend_20 { pt3dadd( -34.11, 1.9156, 50.6295, 0.66 ) }
    dend_20 { pt3dadd( -33.8343, 3.02808, 51.1755, 0.96 ) }
    dend_20 { pt3dadd( -33.4402, 4.2759, 51.7322, 1.18 ) }
    dend_20 { pt3dadd( -33.4117, 4.35293, 51.7655, 1.18 ) }
    dend_20 { pt3dadd( -32.8713, 5.60125, 52.2479, 0.44 ) }
    dend_20 { pt3dadd( -32.4722, 6.4672, 52.6041, 0.44 ) }
    dend_20 { pt3dadd( -30.544, 10.1374, 54.3573, 0.66 ) }
    dend_20 { pt3dadd( -29.1629, 14.4908, 63.1375, 0.66 ) }
    dend_20 { pt3dadd( -29.472, 16.8224, 72.8267, 0.66 ) }
    dend_20 { pt3dadd( -31.1504, 17.9177, 82.6172, 0.66 ) }
    dend_20 { pt3dadd( -31.549, 18.4834, 92.5915, 0.66 ) }
    dend_20 { pt3dadd( -31.6244, 18.8429, 102.584, 0.66 ) }
    dend_20 { pt3dadd( -31.5731, 20.2791, 112.469, 0.66 ) }
    dend_20 { pt3dadd( -31.2559, 22.8148, 122.101, 0.66 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 66/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -109.315, -32.8872, -48.1417, 0.29 ) }
    dend_18 { pt3dadd( -109.536, -32.2621, -50.6538, 0.29 ) }
    dend_18 { pt3dadd( -109.887, -31.2354, -55.0721, 0.74 ) }
    dend_18 { pt3dadd( -109.999, -30.9082, -56.4802, 0.22 ) }
    dend_18 { pt3dadd( -110.219, -30.2619, -59.2616, 1.03 ) }
    dend_18 { pt3dadd( -110.813, -28.5236, -66.7419, 0.66 ) }
    dend_18 { pt3dadd( -111.351, -26.9475, -73.5249, 0.66 ) }
    dend_18 { pt3dadd( -111.357, -26.9336, -73.5931, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 74/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -109.315, -32.8872, -48.1417, 0.81 ) }
    dend_15 { pt3dadd( -110.903, -31.7659, -48.871, 0.81 ) }
    dend_15 { pt3dadd( -111.614, -31.3613, -49.1598, 0.81 ) }
    dend_15 { pt3dadd( -112.604, -30.8882, -49.5452, 0.29 ) }
    dend_15 { pt3dadd( -112.664, -30.8616, -49.5683, 0.29 ) }
    dend_15 { pt3dadd( -113.593, -30.4988, -49.8963, 0.29 ) }
    dend_15 { pt3dadd( -114.936, -29.9798, -50.3766, 0.52 ) }
    dend_15 { pt3dadd( -115.874, -29.6648, -50.6447, 0.52 ) }
    dend_15 { pt3dadd( -116.704, -29.4182, -50.9064, 0.29 ) }
    dend_15 { pt3dadd( -116.775, -29.3986, -50.9353, 0.29 ) }
    dend_15 { pt3dadd( -117.63, -29.154, -51.319, 0.29 ) }
    dend_15 { pt3dadd( -118.21, -28.9696, -51.5892, 0.22 ) }
    dend_15 { pt3dadd( -118.582, -28.8317, -51.7559, 0.59 ) }
    dend_15 { pt3dadd( -119.121, -28.6172, -52.0452, 0.81 ) }
    dend_15 { pt3dadd( -120.545, -28.0509, -52.8606, 0.29 ) }
    dend_15 { pt3dadd( -120.614, -28.0239, -52.9145, 0.29 ) }
    dend_15 { pt3dadd( -121.536, -27.6743, -53.7857, 0.29 ) }
    dend_15 { pt3dadd( -121.582, -27.6601, -53.8363, 0.29 ) }
    dend_15 { pt3dadd( -122.753, -27.431, -55.1197, 1.11 ) }
    dend_15 { pt3dadd( -122.8, -27.4258, -55.1744, 1.11 ) }
    dend_15 { pt3dadd( -124.378, -27.3645, -57.0021, 1.11 ) }
    dend_15 { pt3dadd( -124.425, -27.365, -57.0547, 1.11 ) }
    dend_15 { pt3dadd( -126.615, -27.4727, -59.6382, 0.37 ) }
    dend_15 { pt3dadd( -127.735, -27.5472, -60.935, 0.66 ) }
    dend_15 { pt3dadd( -128.861, -27.6595, -62.1818, 1.03 ) }
    dend_15 { pt3dadd( -128.917, -27.6661, -62.2388, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_15 { pt3dadd( -129.594, -27.7756, -62.7951, 1.03 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 1/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -16.8764, -36.12, 38.386, 0.74 ) }
    dend_12 { pt3dadd( -16.9814, -36.4454, 40.168, 0.74 ) }
    dend_12 { pt3dadd( -16.7654, -37.2513, 44.0917, 0.66 ) }
    dend_12 { pt3dadd( -16.7595, -37.2679, 44.16, 0.66 ) }
    dend_12 { pt3dadd( -16.6068, -37.6657, 45.6975, 0.37 ) }
    dend_12 { pt3dadd( -16.6012, -37.6853, 45.7642, 0.37 ) }
    dend_12 { pt3dadd( -16.457, -38.325, 47.8031, 0.37 ) }
    dend_12 { pt3dadd( -16.3591, -38.8674, 49.3252, 0.37 ) }
    dend_12 { pt3dadd( -16.1756, -39.7533, 51.2978, 0.37 ) }
    dend_12 { pt3dadd( -16.1696, -39.7778, 51.3516, 0.37 ) }
    dend_12 { pt3dadd( -15.9814, -40.2943, 52.4181, 0.29 ) }
    dend_12 { pt3dadd( -15.6161, -41.0889, 53.6619, 1.33 ) }
    dend_12 { pt3dadd( -15.4648, -41.3767, 53.9636, 1.33 ) }
    dend_12 { pt3dadd( -15.4308, -41.4283, 53.9982, 1.33 ) }
    dend_12 { pt3dadd( -14.2131, -43.0465, 54.6569, 0.66 ) }
    dend_12 { pt3dadd( -13.3531, -44.1908, 54.9793, 0.44 ) }
    dend_12 { pt3dadd( -12.1808, -45.6679, 55.2291, 0.44 ) }
    dend_12 { pt3dadd( -11.8581, -46.0732, 55.2632, 1.11 ) }
    dend_12 { pt3dadd( -11.282, -46.7904, 55.3189, 1.11 ) }
    dend_12 { pt3dadd( -10.4833, -47.8152, 55.3763, 0.74 ) }
    dend_12 { pt3dadd( -9.80461, -48.7174, 55.3824, 0.59 ) }
    dend_12 { pt3dadd( -8.99321, -49.8028, 55.4395, 0.52 ) }
    dend_12 { pt3dadd( -8.8592, -49.9803, 55.46, 0.52 ) }
    dend_12 { pt3dadd( -8.43166, -50.4855, 55.5272, 0.96 ) }
    dend_12 { pt3dadd( -8.37572, -50.539, 55.5369, 0.96 ) }
    dend_12 { pt3dadd( -7.56411, -51.0967, 55.7019, 1.25 ) }
    dend_12 { pt3dadd( -7.50283, -51.1269, 55.7174, 1.25 ) }
    dend_12 { pt3dadd( -3.5435, -56.9783, 62.5281, 1.25 ) }
    dend_12 { pt3dadd( 0.724565, -63.4667, 68.4557, 1.25 ) }
    dend_12 { pt3dadd( 6.03691, -70.2903, 72.9487, 1.25 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 31/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -16.8764, -36.12, 38.386, 1.69 ) }
    dend_11 { pt3dadd( -18.0988, -36.1088, 38.5963, 1.69 ) }
    dend_11 { pt3dadd( -18.912, -36.0579, 38.7173, 0.81 ) }
    dend_11 { pt3dadd( -19.7326, -35.9527, 38.8238, 0.37 ) }
    dend_11 { pt3dadd( -20.7256, -35.7319, 38.965, 0.37 ) }
    dend_11 { pt3dadd( -21.3619, -35.5626, 39.0388, 0.74 ) }
    dend_11 { pt3dadd( -21.8728, -35.4166, 39.0906, 0.88 ) }
    dend_11 { pt3dadd( -22.2177, -35.3078, 39.0978, 0.88 ) }
    dend_11 { pt3dadd( -22.7609, -35.1148, 39.1091, 0.88 ) }
    dend_11 { pt3dadd( -23.701, -34.7793, 39.1266, 0.29 ) }
    dend_11 { pt3dadd( -24.6001, -34.5429, 39.1017, 0.29 ) }
    dend_11 { pt3dadd( -24.7487, -34.5235, 39.0915, 0.29 ) }
    dend_11 { pt3dadd( -25.5661, -34.5281, 39.0048, 0.96 ) }
    dend_11 { pt3dadd( -25.6354, -34.532, 38.9956, 0.96 ) }
    dend_11 { pt3dadd( -26.3476, -34.591, 38.9578, 0.96 ) }
    dend_11 { pt3dadd( -27.3649, -34.6964, 38.9855, 0.37 ) }
    dend_11 { pt3dadd( -27.4411, -34.7032, 39.011, 0.37 ) }
    dend_11 { pt3dadd( -28.0298, -34.7475, 39.3083, 0.37 ) }
    dend_11 { pt3dadd( -28.8264, -34.7944, 39.8063, 0.37 ) }
    dend_11 { pt3dadd( -30.0223, -34.8062, 40.606, 0.88 ) }
    dend_11 { pt3dadd( -30.6941, -34.8055, 41.1128, 1.47 ) }
    dend_11 { pt3dadd( -32.3938, -34.8712, 42.505, 0.29 ) }
    dend_11 { pt3dadd( -32.4483, -34.8756, 42.5499, 0.29 ) }
    dend_11 { pt3dadd( -32.8893, -34.9339, 42.9237, 0.29 ) }
    dend_11 { pt3dadd( -33.5784, -35.0559, 43.4754, 0.29 ) }
    dend_11 { pt3dadd( -34.6085, -35.2005, 44.1554, 0.29 ) }
    dend_11 { pt3dadd( -35.3114, -35.2559, 44.667, 0.29 ) }
    dend_11 { pt3dadd( -36.3354, -35.3403, 45.3662, 0.29 ) }
    dend_11 { pt3dadd( -36.3838, -35.3466, 45.401, 0.88 ) }
    dend_11 { pt3dadd( -36.9902, -35.447, 45.8456, 0.88 ) }
    dend_11 { pt3dadd( -37.8221, -35.5615, 46.4463, 1.18 ) }
    dend_11 { pt3dadd( -40.1828, -35.6743, 47.9232, 0.96 ) }
    dend_11 { pt3dadd( -41.2676, -35.6647, 48.4727, 1.03 ) }
    dend_11 { pt3dadd( -41.8229, -35.6433, 48.7042, 1.47 ) }
    dend_11 { pt3dadd( -42.457, -35.593, 48.9161, 1.47 ) }
    dend_11 { pt3dadd( -44.5199, -35.3994, 49.5325, 0.52 ) }
    dend_11 { pt3dadd( -46.1168, -35.1954, 49.8803, 0.52 ) }
    dend_11 { pt3dadd( -47.4267, -34.9197, 49.9659, 0.96 ) }
    dend_11 { pt3dadd( -47.8123, -34.8081, 49.9873, 1.4 ) }
    dend_11 { pt3dadd( -48.8793, -34.4595, 50.025, 1.4 ) }
    dend_11 { pt3dadd( -57.6343, -33.3754, 54.7204, 1.4 ) }
    dend_11 { pt3dadd( -65.2404, -32.4583, 61.1403, 1.4 ) }
    dend_11 { pt3dadd( -71.4108, -30.9488, 68.8476, 1.4 ) }
    dend_11 { pt3dadd( -77.2289, -28.2839, 76.4817, 1.4 ) }
    dend_11 { pt3dadd( -81.9157, -24.8371, 84.5359, 1.4 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 76/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 44.0709, -139.824, 27.748, 0.44 ) }
    dend_5 { pt3dadd( 43.6189, -140.794, 27.9121, 0.44 ) }
    dend_5 { pt3dadd( 43.4278, -141.623, 28.025, 0.44 ) }
    dend_5 { pt3dadd( 43.4344, -141.689, 28.0258, 0.44 ) }
    dend_5 { pt3dadd( 43.6632, -142.505, 27.9831, 0.44 ) }
    dend_5 { pt3dadd( 43.8524, -143.22, 27.9307, 0.81 ) }
    dend_5 { pt3dadd( 44.0561, -144.019, 27.8635, 0.81 ) }
    dend_5 { pt3dadd( 44.0824, -144.089, 27.8495, 0.81 ) }
    dend_5 { pt3dadd( 44.4271, -144.948, 27.6524, 0.52 ) }
    dend_5 { pt3dadd( 44.5912, -145.378, 27.5429, 0.37 ) }
    dend_5 { pt3dadd( 44.786, -145.899, 27.4002, 0.37 ) }
    dend_5 { pt3dadd( 44.8045, -145.961, 27.3829, 0.37 ) }
    dend_5 { pt3dadd( 45.1211, -147.029, 27.1036, 0.66 ) }
    dend_5 { pt3dadd( 45.2784, -147.495, 26.9941, 1.25 ) }
    dend_5 { pt3dadd( 45.3067, -147.555, 26.9825, 1.25 ) }
    dend_5 { pt3dadd( 45.6407, -148.091, 26.8821, 1.25 ) }
    dend_5 { pt3dadd( 46.018, -148.637, 26.8145, 0.96 ) }
    dend_5 { pt3dadd( 46.3709, -149.142, 26.8302, 0.44 ) }
    dend_5 { pt3dadd( 46.4871, -149.317, 26.8637, 0.44 ) }
    dend_5 { pt3dadd( 46.9653, -150.255, 27.0867, 0.44 ) }
    dend_5 { pt3dadd( 46.9847, -150.307, 27.1017, 0.44 ) }
    dend_5 { pt3dadd( 47.2831, -151.388, 27.4547, 0.37 ) }
    dend_5 { pt3dadd( 47.4856, -152.308, 27.7704, 1.03 ) }
    dend_5 { pt3dadd( 47.6384, -153.082, 28.0719, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_5 { pt3dadd( 47.865, -154.232, 28.5483, 0.52 ) }
    dend_5 { pt3dadd( 48.0677, -155.168, 29.0051, 0.37 ) }
    dend_5 { pt3dadd( 48.0849, -155.225, 29.0368, 0.37 ) }
    dend_5 { pt3dadd( 48.293, -155.656, 29.3037, 0.37 ) }
    dend_5 { pt3dadd( 48.7215, -156.294, 29.7342, 0.88 ) }
    dend_5 { pt3dadd( 48.9428, -156.515, 29.9289, 1.11 ) }
    dend_5 { pt3dadd( 49.9154, -157.16, 30.5649, 0.37 ) }
    dend_5 { pt3dadd( 49.9713, -157.193, 30.5914, 0.37 ) }
    dend_5 { pt3dadd( 50.6548, -157.638, 30.8589, 0.37 ) }
    dend_5 { pt3dadd( 50.715, -157.685, 30.8804, 0.37 ) }
    dend_5 { pt3dadd( 50.9567, -157.939, 30.9374, 0.37 ) }
    dend_5 { pt3dadd( 51.459, -158.766, 31.051, 0.29 ) }
    dend_5 { pt3dadd( 51.4716, -159.255, 31.1651, 0.29 ) }
    dend_5 { pt3dadd( 51.4119, -159.95, 31.4511, 0.29 ) }
    dend_5 { pt3dadd( 51.3543, -160.701, 31.9204, 0.59 ) }
    dend_5 { pt3dadd( 51.4013, -161.136, 32.2611, 0.59 ) }
    dend_5 { pt3dadd( 51.4266, -161.182, 32.3048, 0.59 ) }
    dend_5 { pt3dadd( 51.9994, -161.725, 32.9181, 0.44 ) }
    dend_5 { pt3dadd( 52.5748, -162.102, 33.3033, 0.44 ) }
    dend_5 { pt3dadd( 53.1871, -162.536, 33.6869, 1.03 ) }
    dend_5 { pt3dadd( 53.6025, -162.932, 34.0255, 1.03 ) }
    dend_5 { pt3dadd( 54.2103, -163.653, 34.6476, 0.29 ) }
    dend_5 { pt3dadd( 54.2435, -163.709, 34.6917, 0.29 ) }
    dend_5 { pt3dadd( 54.4977, -164.342, 35.1474, 0.29 ) }
    dend_5 { pt3dadd( 54.7527, -165.532, 36.0426, 0.66 ) }
    dend_5 { pt3dadd( 54.8945, -166.999, 37.1414, 0.37 ) }
    dend_5 { pt3dadd( 54.8987, -167.112, 37.234, 0.37 ) }
    dend_5 { pt3dadd( 54.8986, -167.709, 37.7311, 0.37 ) }
    dend_5 { pt3dadd( 54.9017, -167.795, 37.799, 0.37 ) }
    dend_5 { pt3dadd( 54.8929, -168.448, 38.2475, 1.03 ) }
    dend_5 { pt3dadd( 54.8911, -168.739, 38.4099, 1.03 ) }
    dend_5 { pt3dadd( 54.8201, -170.178, 39.0325, 1.03 ) }
    dend_5 { pt3dadd( 54.7349, -170.755, 39.2549, 0.44 ) }
    dend_5 { pt3dadd( 54.5301, -171.588, 39.5338, 0.44 ) }
    dend_5 { pt3dadd( 54.0298, -173.082, 39.8999, 0.44 ) }
    dend_5 { pt3dadd( 54.0026, -173.143, 39.9074, 0.44 ) }
    dend_5 { pt3dadd( 53.5668, -173.916, 39.94, 0.44 ) }
    dend_5 { pt3dadd( 53.4202, -174.13, 39.8969, 0.81 ) }
    dend_5 { pt3dadd( 53.3743, -174.192, 39.8758, 0.81 ) }
    dend_5 { pt3dadd( 52.9689, -174.731, 39.6412, 0.81 ) }
    dend_5 { pt3dadd( 52.6557, -175.208, 39.4187, 0.52 ) }
    dend_5 { pt3dadd( 52.6229, -175.263, 39.3942, 0.52 ) }
    dend_5 { pt3dadd( 51.7258, -177.016, 38.6474, 0.88 ) }
    dend_5 { pt3dadd( 51.2982, -178.051, 38.2658, 0.37 ) }
    dend_5 { pt3dadd( 51.2304, -178.281, 38.1983, 0.74 ) }
    dend_5 { pt3dadd( 51.157, -178.96, 38.0686, 0.44 ) }
    dend_5 { pt3dadd( 51.1681, -179.026, 38.0701, 0.44 ) }
    dend_5 { pt3dadd( 51.3368, -179.477, 38.1727, 0.44 ) }
    dend_5 { pt3dadd( 51.9468, -180.682, 38.6833, 0.29 ) }
    dend_5 { pt3dadd( 52.3186, -181.362, 39.0614, 1.18 ) }
    dend_5 { pt3dadd( 52.7366, -182.146, 39.5442, 1.18 ) }
    dend_5 { pt3dadd( 53.3591, -183.341, 40.3084, 0.37 ) }
    dend_5 { pt3dadd( 53.7149, -184.06, 40.7731, 0.74 ) }
    dend_5 { pt3dadd( 54.1339, -184.788, 41.2346, 0.96 ) }
    dend_5 { pt3dadd( 54.8113, -185.791, 41.8512, 0.37 ) }
    dend_5 { pt3dadd( 54.9555, -185.98, 41.9608, 0.37 ) }
    dend_5 { pt3dadd( 55.6539, -186.752, 42.3986, 0.37 ) }
    dend_5 { pt3dadd( 55.7215, -186.815, 42.4285, 0.37 ) }
    dend_5 { pt3dadd( 57.493, -188.199, 43.0651, 0.37 ) }
    dend_5 { pt3dadd( 57.6183, -188.286, 43.1013, 0.88 ) }
    dend_5 { pt3dadd( 57.6957, -188.34, 43.1259, 0.88 ) }
    dend_5 { pt3dadd( 58.7771, -189.236, 43.7109, 0.37 ) }
    dend_5 { pt3dadd( 58.8219, -189.285, 43.7527, 0.37 ) }
    dend_5 { pt3dadd( 59.0905, -189.722, 44.1407, 0.81 ) }
    dend_5 { pt3dadd( 59.1291, -189.838, 44.2474, 0.81 ) }
    dend_5 { pt3dadd( 59.3738, -190.63, 44.9217, 0.37 ) }
    dend_5 { pt3dadd( 59.6712, -191.621, 45.6607, 0.37 ) }
    dend_5 { pt3dadd( 59.6913, -191.676, 45.6948, 0.37 ) }
    dend_5 { pt3dadd( 60.0077, -192.347, 46.0368, 0.37 ) }
    dend_5 { pt3dadd( 60.0423, -192.412, 46.0615, 0.37 ) }
    dend_5 { pt3dadd( 60.3421, -192.956, 46.2108, 1.18 ) }
    dend_5 { pt3dadd( 60.6084, -193.425, 46.2892, 1.62 ) }
    dend_5 { pt3dadd( 61.346, -194.621, 46.4455, 0.37 ) }
    dend_5 { pt3dadd( 61.9518, -195.616, 46.5778, 0.37 ) }
    dend_5 { pt3dadd( 62.4977, -196.538, 46.7036, 0.37 ) }
    dend_5 { pt3dadd( 62.7945, -197.053, 46.7716, 1.25 ) }
    dend_5 { pt3dadd( 63.1722, -197.752, 46.8563, 1.47 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 77/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 44.0709, -139.824, 27.748, 0.37 ) }
    dend_4 { pt3dadd( 45.5158, -139.609, 28.3116, 0.37 ) }
    dend_4 { pt3dadd( 45.581, -139.594, 28.3337, 0.37 ) }
    dend_4 { pt3dadd( 46.6694, -139.297, 28.6747, 0.37 ) }
    dend_4 { pt3dadd( 48.0784, -138.829, 29.0602, 0.29 ) }
    dend_4 { pt3dadd( 48.6497, -138.621, 29.16, 0.29 ) }
    dend_4 { pt3dadd( 48.7228, -138.592, 29.1687, 0.29 ) }
    dend_4 { pt3dadd( 49.8223, -138.045, 29.1222, 0.29 ) }
    dend_4 { pt3dadd( 49.8925, -138.007, 29.1168, 0.29 ) }
    dend_4 { pt3dadd( 50.7804, -137.479, 28.9831, 0.44 ) }
    dend_4 { pt3dadd( 52.0545, -136.676, 28.6502, 0.81 ) }
    dend_4 { pt3dadd( 52.5929, -136.318, 28.4916, 1.47 ) }
    dend_4 { pt3dadd( 53.4199, -135.784, 28.2228, 0.96 ) }
    dend_4 { pt3dadd( 61.6586, -130.464, 27.351, 0.96 ) }
    dend_4 { pt3dadd( 70.1054, -125.453, 28.2605, 0.96 ) }
    dend_4 { pt3dadd( 77.9758, -120.016, 30.5651, 0.96 ) }
    dend_4 { pt3dadd( 86.2494, -115.409, 33.3991, 0.96 ) }
    dend_4 { pt3dadd( 94.0288, -111.151, 37.8022, 0.96 ) }
    dend_4 { pt3dadd( 101.018, -105.897, 42.3369, 0.96 ) }
    dend_4 { pt3dadd( 108.11, -101.637, 47.7776, 0.96 ) }
    dend_4 { pt3dadd( 114.421, -97.8541, 54.4349, 0.96 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -102.521, 201.601, 24.4781, 0.44 ) }
    dend_52 { pt3dadd( -104.999, 210.752, 25.5085, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 0/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -102.521, 201.601, 24.4781, 0.37 ) }
    dend_51 { pt3dadd( -105.922, 210.204, 27.0109, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 2/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -129.594, -27.7756, -62.7951, 0.44 ) }
    dend_17 { pt3dadd( -131.415, -27.873, -64.0456, 0.44 ) }
    dend_17 { pt3dadd( -135.339, -28.0318, -66.6008, 0.44 ) }
    dend_17 { pt3dadd( -138.275, -28.1028, -68.5839, 0.44 ) }
    dend_17 { pt3dadd( -139.84, -28.1132, -69.6454, 0.37 ) }
    dend_17 { pt3dadd( -140.277, -28.1106, -69.9444, 0.74 ) }
    dend_17 { pt3dadd( -140.83, -28.1028, -70.3259, 0.44 ) }
    dend_17 { pt3dadd( -141.323, -28.0723, -70.6511, 0.81 ) }
    dend_17 { pt3dadd( -143.566, -27.8088, -71.8991, 0.29 ) }
    dend_17 { pt3dadd( -144.025, -27.7281, -72.2668, 0.88 ) }
    dend_17 { pt3dadd( -144.511, -27.6483, -72.6712, 0.88 ) }
    dend_17 { pt3dadd( -144.554, -27.6415, -72.7122, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 14/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -129.594, -27.7756, -62.7951, 0.37 ) }
    dend_16 { pt3dadd( -131.914, -26.4295, -67.8341, 0.37 ) }
    dend_16 { pt3dadd( -133.129, -25.7311, -70.3555, 0.29 ) }
    dend_16 { pt3dadd( -133.681, -25.4763, -71.3094, 0.29 ) }
    dend_16 { pt3dadd( -134.646, -25.1062, -72.7334, 0.81 ) }
    dend_16 { pt3dadd( -135.075, -24.9606, -73.3053, 0.81 ) }
    dend_16 { pt3dadd( -136.406, -24.5742, -74.9466, 0.37 ) }
    dend_16 { pt3dadd( -136.48, -24.561, -75.0108, 0.37 ) }
    dend_16 { pt3dadd( -138.363, -24.366, -76.4478, 0.37 ) }
    dend_16 { pt3dadd( -139.015, -24.3232, -76.9434, 0.74 ) }
    dend_16 { pt3dadd( -139.073, -24.3206, -76.9834, 0.74 ) }
    dend_16 { pt3dadd( -141.279, -24.2794, -78.5104, 0.29 ) }
    dend_16 { pt3dadd( -142.092, -24.285, -79.0301, 0.96 ) }
    dend_16 { pt3dadd( -142.652, -24.2816, -79.3985, 0.96 ) }
    dend_16 { pt3dadd( -143.544, -24.243, -80.0728, 0.29 ) }
    dend_16 { pt3dadd( -144.195, -24.2047, -80.5402, 0.29 ) }
    dend_16 { pt3dadd( -144.255, -24.1989, -80.5766, 0.29 ) }
    dend_16 { pt3dadd( -145.423, -24.0487, -81.0973, 0.29 ) }
    dend_16 { pt3dadd( -145.487, -24.0395, -81.1235, 0.29 ) }
    dend_16 { pt3dadd( -146.966, -23.7934, -81.7819, 0.29 ) }
    dend_16 { pt3dadd( -147.482, -23.6904, -82.0249, 1.18 ) }
    dend_16 { pt3dadd( -148.228, -23.4892, -82.44, 1.47 ) }
    dend_16 { pt3dadd( -148.383, -23.4367, -82.5353, 1.47 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 37/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 63.1722, -197.752, 46.8563, 0.29 ) }
    dend_9 { pt3dadd( 63.2094, -198.984, 47.3639, 0.29 ) }
    dend_9 { pt3dadd( 63.2472, -199.904, 47.7474, 0.29 ) }
    dend_9 { pt3dadd( 63.2599, -199.997, 47.7865, 0.29 ) }
    dend_9 { pt3dadd( 63.423, -200.803, 48.1272, 0.29 ) }
    dend_9 { pt3dadd( 63.7846, -201.908, 48.7456, 0.29 ) }
    dend_9 { pt3dadd( 64.066, -202.625, 49.2044, 0.29 ) }
    dend_9 { pt3dadd( 64.0885, -202.678, 49.2562, 0.29 ) }
    dend_9 { pt3dadd( 64.312, -203.226, 49.8852, 0.29 ) }
    dend_9 { pt3dadd( 64.3318, -203.268, 49.9372, 0.29 ) }
    dend_9 { pt3dadd( 64.9365, -204.291, 51.487, 0.29 ) }
    dend_9 { pt3dadd( 64.9537, -204.322, 51.5344, 0.29 ) }
    dend_9 { pt3dadd( 65.2856, -205.057, 52.74, 0.66 ) }
    dend_9 { pt3dadd( 65.4193, -205.433, 53.3523, 0.29 ) }
    dend_9 { pt3dadd( 65.4269, -205.469, 53.4105, 0.29 ) }
    dend_9 { pt3dadd( 65.5421, -206.165, 54.514, 0.37 ) }
    dend_9 { pt3dadd( 65.5617, -206.526, 55.0653, 0.37 ) }
    dend_9 { pt3dadd( 66.1176, -214.382, 60.6607, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 55/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 63.1722, -197.752, 46.8563, 0.29 ) }
    dend_6 { pt3dadd( 63.9808, -197.24, 47.3965, 0.29 ) }
    dend_6 { pt3dadd( 64.7517, -196.751, 47.9115, 0.59 ) }
    dend_6 { pt3dadd( 65.0724, -196.548, 48.1257, 0.52 ) }
    dend_6 { pt3dadd( 65.6044, -196.211, 48.4811, 0.52 ) }
    dend_6 { pt3dadd( 73.1533, -192.568, 53.8019, 0.52 ) }
    dend_6 { pt3dadd( 81.8489, -190.351, 58.1536, 0.52 ) }
    dend_6 { pt3dadd( 90.8304, -189.162, 62.3687, 0.52 ) }
    dend_6 { pt3dadd( 99.9209, -187.45, 66.1255, 0.52 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 64/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 99.9209, -187.45, 66.1255, 0.29 ) }
    dend_8 { pt3dadd( 108.469, -185.064, 70.668, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 66/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 99.9209, -187.45, 66.1255, 0.81 ) }
    dend_7 { pt3dadd( 108.533, -185.013, 70.5143, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_63, dend_44, dend_31, dend_0, dend_75, dend_64, dend_56, dend_45, dend_35, dend_32, dend_22, dend_1, dend_77, dend_76, dend_72, dend_65, dend_58, dend_57, dend_53, dend_46, dend_43, dend_36, dend_34, dend_33, dend_28, dend_23, dend_13, dend_2, dend_74, dend_73, dend_69, dend_66, dend_60, dend_59, dend_55, dend_54, dend_48, dend_47, dend_40, dend_37, dend_30, dend_29, dend_27, dend_24, dend_19, dend_14, dend_10, dend_3, dend_71, dend_70, dend_68, dend_67, dend_62, dend_61, dend_50, dend_49, dend_42, dend_41, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_18, dend_15, dend_12, dend_11, dend_5, dend_4, dend_52, dend_51, dend_17, dend_16, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_63 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_63, dend_44, dend_31, dend_0, dend_75, dend_64, dend_56, dend_45, dend_35, dend_32, dend_22, dend_1, dend_77, dend_76, dend_72, dend_65, dend_58, dend_57, dend_53, dend_46, dend_43, dend_36, dend_34, dend_33, dend_28, dend_23, dend_13, dend_2, dend_74, dend_73, dend_69, dend_66, dend_60, dend_59, dend_55, dend_54, dend_48, dend_47, dend_40, dend_37, dend_30, dend_29, dend_27, dend_24, dend_19, dend_14, dend_10, dend_3, dend_71, dend_70, dend_68, dend_67, dend_62, dend_61, dend_50, dend_49, dend_42, dend_41, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_18, dend_15, dend_12, dend_11, dend_5, dend_4, dend_52, dend_51, dend_17, dend_16, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_56 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_32 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_77 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_76 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_43 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_74 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_73 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_59 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_55 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_37 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_30 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_29 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_27 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_24 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_14 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_10 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_3 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_71 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_70 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_62 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_50 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_49 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_42 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_38 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_25 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_21 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_20 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_11 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_5 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_4 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_6 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_31 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_63 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_35 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_64 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_22 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_72 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_75 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_2 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_36 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_65 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_46 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_28 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_53 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_19 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_69 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_48 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_54 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_66 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_67 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_34 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_58 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_60 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_41 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_61 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_39 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_57 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_18 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_15 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_17 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_16 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_9 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_52 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_51 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_7 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_8 OneSecGrp_SectionRef_80.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_44, dend_44, dend_44, dend_31, dend_31, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_52, dend_51, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_8, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_8 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_56 nseg = 5
    dend_32 nseg = 3
    dend_77 nseg = 3
    dend_76 nseg = 3
    dend_43 nseg = 5
    dend_74 nseg = 7
    dend_73 nseg = 7
    dend_59 nseg = 3
    dend_55 nseg = 7
    dend_47 nseg = 5
    dend_40 nseg = 5
    dend_37 nseg = 3
    dend_30 nseg = 5
    dend_29 nseg = 5
    dend_27 nseg = 5
    dend_24 nseg = 7
    dend_14 nseg = 5
    dend_10 nseg = 3
    dend_3 nseg = 7
    dend_71 nseg = 5
    dend_70 nseg = 5
    dend_62 nseg = 5
    dend_50 nseg = 11
    dend_49 nseg = 5
    dend_42 nseg = 3
    dend_38 nseg = 3
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_21 nseg = 5
    dend_20 nseg = 11
    dend_12 nseg = 3
    dend_11 nseg = 5
    dend_5 nseg = 3
    dend_4 nseg = 5
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_DAC_8c45268d6a_0_0


