// Cell: bAC217_L4_BTC_ee19c75ca3_0_0
/*
{
  "id" : "bAC217_L4_BTC_ee19c75ca3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.10901, 8.17427, -3.38986, 2.59058", "-1.02513, 7.19062, -3.06257, 4.73751", "-0.941247, 6.20697, -2.73528, 6.32924", "-0.857366, 5.22332, -2.408, 7.36132", "-0.773484, 4.23967, -2.08071, 9.22299", "-0.689602, 3.25602, -1.75342, 10.2547", "-0.605721, 2.27237, -1.42613, 10.8399", "-0.521839, 1.28871, -1.09885, 11.0364", "-0.437957, 0.305064, -0.771561, 11.233", "-0.354076, -0.678586, -0.444273, 11.4012", "-0.270194, -1.66224, -0.116986, 10.7587", "-0.186312, -2.64589, 0.210301, 10.0838", "-0.102431, -3.62954, 0.537588, 9.4089", "-0.018549, -4.61319, 0.864875, 8.86981", "0.0653327, -5.59684, 1.19216, 8.72262", "0.149214, -6.58049, 1.51945, 8.42438", "0.233096, -7.56414, 1.84674, 7.90042", "0.316978, -8.54779, 2.17402, 7.02226", "0.400859, -9.53144, 2.50131, 6.10711", "0.484741, -10.5151, 2.8286, 5.19196", "0.568623, -11.4987, 3.15589, 3.05014" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.40148, -1.71407, -9.60359, 0.67", "-7.32208, -2.51776, -12.4286, 0.67", "-10.3225, -3.25041, -15.0127, 0.67", "-10.3225, -3.25041, -15.0127, 0.67", "-11.8646, -3.66817, -15.9645, 1.33", "-18.463, -5.08638, -20.0756, 0.33", "-19.4727, -5.30649, -20.8728, 0.33", "-21.5502, -5.71127, -22.8982, 1.33", "-23.6345, -6.17331, -25.3075, 0.33", "-24.3077, -6.35863, -26.1547, 1.33", "-28.7307, -7.79948, -32.4523, 0.67", "-33.8137, -9.76958, -40.5021, 0.33", "-35.9313, -10.6088, -44.1234, 0.67", "-38.9117, -11.8651, -49.5003, 0.33", "-39.5153, -12.132, -50.6225, 0.67", "-42.2213, -13.4339, -55.5602, 0.33", "-43.4402, -14.0746, -57.6628, 1.33", "-45.898, -15.2613, -61.33, 0.33", "-47.2429, -15.866, -63.2511, 1.33", "-51.7016, -17.8675, -69.3479, 0.33", "-52.1771, -18.0829, -69.9741, 0.67", "-54.5932, -19.2462, -72.9213, 0.33", "-55.0759, -19.4797, -73.5495, 1.33", "-58.7954, -21.4168, -78.9266, 0.33", "-59.8995, -22.0052, -80.649, 0.67", "-60.8588, -22.4714, -82.1412, 0.33", "-61.6224, -22.7995, -83.3186, 1.33", "-65.0999, -24.0459, -88.4736, 0.33", "-65.4733, -24.1677, -89.0206, 0.33", "-66.8108, -24.584, -91.0281, 1.33", "-69.9534, -25.5744, -96.1185, 0.33", "-70.4586, -25.7698, -97.0728, 1.33", "-73.2384, -27.0982, -102.846, 0.33", "-73.5577, -27.2892, -103.56, 0.67", "-75.9623, -28.9761, -109.479, 0.33", "-76.477, -29.4118, -110.923, 1.33", "-78.469, -31.3608, -117.433, 0.33", "-78.6617, -31.5645, -118.101, 1.33", "-79.7553, -32.754, -122.144, 0.33", "-80.1879, -33.164, -123.606, 0.67", "-82.1392, -34.9255, -129.989, 0.33", "-83.6971, -36.1667, -134.713, 0.67", "-84.36, -36.5999, -136.523, 0.33", "-85.6329, -37.3848, -140.041, 0.67", "-87.5964, -38.5812, -145.7, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-2.84148, 4.20418, -11.1036, 0.67", "-3.14598, 4.94344, -12.2886, 0.67", "-3.75349, 6.79086, -14.5295, 0.67", "-4.76982, 9.41916, -17.7116, 0.67", "-5.55724, 11.4555, -20.1771, 0.67", "-5.8916, 12.3202, -21.224, 0.67", "-6.32134, 13.4315, -22.5696, 0.67", "-7.32804, 16.8182, -26.4894, 0.67", "-8.05258, 20.0525, -29.8706, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.21148, 5.46193, -10.3036, 0.67", "-0.534769, 8.20259, -12.1858, 0.67", "-0.00405828, 9.10186, -12.785, 0.67", "0.891608, 10.6195, -13.7962, 1.33", "4.15665, 16.152, -17.4823, 0.67", "5.69977, 18.7667, -19.2244, 0.67", "6.52448, 20.1642, -20.1554, 0.67", "7.51542, 21.9792, -21.5479, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "4.30852, 5.65693, 7.4864, 2.0", "4.79122, 6.01308, 7.74732, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.571479, -11.3763, 6.4864, 4.0", "-0.653458, -14.3836, 6.4864, 4.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.568623, -11.4987, 3.15589, 0.469313", "1.84314, -26.4445, 3.15589, 0.469313", "3.11765, -41.3902, 3.15589, 0.469313" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-8.05258, 20.0525, -29.8706, 0.33", "-7.82188, 22.0978, -36.2169, 0.33", "-7.80133, 22.2917, -36.7433, 1.33", "-7.64355, 23.608, -40.0479, 0.33", "-7.62702, 23.8468, -40.5638, 1.33", "-7.57095, 25.2138, -43.2265, 0.33", "-7.57179, 25.3842, -43.5299, 0.67", "-7.71095, 26.7031, -45.3801, 0.33", "-7.74448, 26.9081, -45.658, 1.33", "-7.96527, 28.1277, -47.1966, 0.33", "-8.19193, 29.4013, -48.7919, 1.33", "-8.52, 31.177, -50.9534, 0.33", "-8.79256, 32.6554, -52.7944, 1.33", "-9.11837, 34.4059, -54.9736, 0.33", "-9.16935, 34.7167, -55.3502, 1.33", "-9.29807, 35.7902, -56.6203, 0.33", "-9.35358, 36.2886, -57.1691, 0.67", "-9.55806, 38.9578, -60.2006, 0.33", "-9.57583, 39.3268, -60.6073, 1.33", "-9.60114, 40.3002, -61.7221, 0.33", "-9.60798, 40.5213, -61.9888, 1.33", "-9.6959, 42.874, -65.2144, 0.33", "-9.7639, 44.2106, -67.1843, 1.33", "-9.81843, 45.1361, -68.6289, 0.33", "-9.8898, 45.8966, -69.9471, 0.67", "-10.058, 47.2042, -72.3484, 0.33", "-10.3928, 49.1507, -75.7432, 0.67", "-10.7004, 50.6574, -78.2282, 0.33", "-10.9554, 51.4087, -79.4285, 0.67", "-12.4946, 54.7028, -84.6841, 0.33", "-12.5993, 54.8752, -84.9543, 0.67", "-13.6776, 56.2944, -87.0918, 0.33", "-13.9273, 56.5828, -87.52, 0.67", "-15.736, 58.5621, -90.7595, 0.33", "-16.0567, 58.9886, -91.4659, 0.67", "-16.9207, 60.3859, -93.8814, 0.33", "-17.0151, 60.6612, -94.3711, 0.67", "-17.0246, 62.4757, -97.9072, 0.33", "-16.7385, 63.7117, -100.016, 0.67", "-15.8281, 65.6711, -102.93, 0.33", "-15.7569, 65.8022, -103.118, 0.67", "-14.5552, 67.7391, -105.592, 0.33", "-13.1649, 69.8186, -108.098, 1.33", "-10.9395, 72.9537, -111.023, 0.33", "-10.8194, 73.1254, -111.151, 0.67" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-8.05258, 20.0525, -29.8706, 0.33", "-10.2622, 19.8836, -31.6848, 0.33", "-11.122, 19.8976, -32.2538, 1.33", "-14.159, 20.0754, -34.0266, 0.33", "-14.8796, 20.1502, -34.4671, 0.67", "-16.9426, 20.4376, -35.7448, 0.33", "-18.96, 20.7802, -37.0243, 1.33", "-22.5555, 21.6383, -39.1291, 0.33", "-23.2132, 21.8408, -39.5409, 1.33", "-25.6275, 22.7855, -41.0317, 0.33", "-26.0587, 22.9823, -41.3332, 0.67", "-27.7335, 23.8589, -42.6102, 0.33", "-28.3311, 24.193, -43.0699, 0.67", "-30.1568, 25.2905, -44.3788, 0.33", "-30.7635, 25.6687, -44.8095, 1.33", "-33.0683, 27.1443, -46.3637, 0.33", "-33.9151, 27.7166, -46.9621, 1.33", "-37.5576, 30.3513, -49.59, 0.33", "-38.344, 30.9415, -50.1902, 1.33", "-40.1824, 32.3805, -51.6098, 0.33", "-40.3643, 32.5396, -51.7633, 0.67", "-42.067, 34.1938, -53.2769, 0.33", "-42.3934, 34.5365, -53.5826, 0.67", "-43.6308, 35.9777, -54.7569, 0.33", "-43.9702, 36.3646, -55.049, 2.0", "-47.8156, 40.6086, -58.132, 0.33", "-48.0868, 40.8915, -58.3373, 0.67", "-49.2125, 42.0192, -59.1154, 0.33", "-49.5031, 42.2985, -59.303, 0.67", "-50.3402, 43.0698, -59.8796, 0.33", "-51.2199, 43.873, -60.4906, 0.67", "-53.6322, 46.0285, -62.1252, 0.33", "-54.2907, 46.6388, -62.5761, 0.67", "-56.8215, 49.088, -64.3558, 0.33", "-58.9008, 51.2303, -65.9182, 1.33", "-60.1123, 52.5626, -66.8663, 0.33", "-60.3402, 52.8271, -67.0569, 0.67", "-61.062, 53.6405, -67.7283, 0.33", "-61.0967, 53.6783, -67.759, 0.67", "-63.0002, 55.2856, -69.111, 0.33", "-63.4847, 55.6005, -69.3707, 1.33", "-65.5064, 56.6213, -70.7407, 0.33", "-66.5703, 57.1105, -71.4645, 0.33", "-68.9109, 58.0195, -73.0286, 0.67", "-72.2057, 59.1396, -75.1073, 0.33", "-72.7227, 59.2643, -75.3893, 0.67", "-76.0522, 59.9799, -77.2861, 0.33" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "7.51542, 21.9792, -21.5479, 0.33", "10.9076, 25.2589, -22.3523, 0.33", "12.5003, 26.8809, -22.7118, 0.67", "14.6521, 29.1474, -23.1913, 0.33", "14.9534, 29.4557, -23.3024, 0.67", "17.0257, 31.6298, -24.1436, 0.33", "18.8835, 33.5075, -24.7417, 1.33", "22.3303, 36.9885, -25.4755, 0.33", "22.6438, 37.2969, -25.5554, 0.67", "29.0566, 43.7299, -27.1964, 0.33", "30.6443, 45.3646, -27.587, 2.0", "36.3994, 51.4208, -28.9364, 0.33", "39.1666, 54.3917, -29.5969, 2.0", "47.3588, 63.4653, -31.6976, 0.33", "49.064, 65.3941, -32.2094, 1.33", "51.6643, 68.4271, -33.0866, 0.33", "52.439, 69.2924, -33.4467, 0.67", "55.9794, 73.1537, -35.6401, 0.33", "57.4226, 74.5017, -36.6655, 0.67", "61.6389, 77.8018, -39.7442, 0.33", "62.8001, 78.5687, -40.5522, 1.33", "67.2712, 81.1204, -43.4448, 0.33", "68.5234, 81.7241, -44.1851, 1.33", "74.3339, 84.0693, -47.2036, 0.33", "74.7009, 84.1973, -47.3664, 0.67", "78.9598, 85.5237, -48.9532, 0.33", "81.1144, 86.1474, -49.6354, 1.33", "85.9856, 87.4717, -50.7716, 0.33", "87.1481, 87.7637, -51.0723, 0.67", "92.253, 89.022, -52.3769, 0.33", "94.5925, 89.5852, -53.1505, 1.33", "98.6559, 90.5692, -54.7315, 0.33", "100.472, 91.0491, -55.5551, 1.33", "108.769, 93.4008, -59.6072, 0.33", "109.845, 93.709, -60.1289, 1.33", "115.818, 95.4277, -63.0423, 0.33", "117.192, 95.8127, -63.6748, 0.67", "124.135, 97.6619, -66.9898, 0.33", "125.339, 97.9446, -67.5483, 1.33", "132.345, 99.2794, -70.3207, 0.33", "133.481, 99.4601, -70.7207, 0.67", "135.581, 99.7395, -71.3239, 0.33", "139.746, 100.216, -72.2475, 0.67", "142.54, 100.532, -72.6065, 0.33", "143.386, 100.649, -72.7183, 0.67", "147.877, 101.397, -73.0779, 0.33", "148.305, 101.494, -73.1316, 0.67", "153.79, 103.024, -73.978, 0.33", "155.089, 103.43, -74.1572, 0.67", "157.046, 104.111, -74.5637, 0.33", "160.532, 105.247, -75.4437, 0.67", "168.749, 107.817, -77.912, 0.33", "170.15, 108.222, -78.4101, 0.67", "173.297, 109.129, -79.6868, 0.33", "175.526, 109.734, -80.6732, 1.33", "180.195, 110.918, -82.7891, 0.33", "180.743, 111.051, -83.0581, 0.67", "187.273, 112.421, -85.9388, 0.33", "188.383, 112.601, -86.451, 1.33", "192.514, 113.138, -88.5122, 0.33", "193.279, 113.166, -88.9056, 0.67", "196.614, 112.985, -90.734, 0.33", "198.063, 112.667, -91.2952, 0.67", "202.131, 111.048, -92.109, 0.33", "202.131, 111.048, -92.109, 1.33", "206.873, 108.169, -91.7595, 0.33", "207.86, 107.551, -91.6131, 1.33", "214.509, 103.331, -90.0782, 0.33", "214.86, 103.12, -89.9834, 0.67", "218.315, 101.379, -88.9292, 0.33", "218.86, 101.153, -88.7638, 0.67", "222.926, 100.067, -87.537, 0.33", "225.773, 99.6211, -86.8476, 0.33", "226.634, 99.5956, -86.7784, 0.67", "233.202, 99.8394, -86.683, 0.33", "233.64, 99.9366, -86.6877, 0.67", "238.349, 101.606, -86.8178, 0.33", "239.405, 102.203, -86.8699, 0.67", "245.394, 106.624, -87.274, 0.33", "246.404, 107.483, -87.3633, 1.33", "252.769, 114.238, -88.1555, 0.33", "253.654, 115.277, -88.259, 1.33", "255.997, 118.622, -88.4661, 0.33", "256.261, 119.046, -88.4471, 0.67" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "7.51542, 21.9792, -21.5479, 0.33", "10.45, 26.9713, -30.0005, 0.33", "10.927, 27.8205, -31.3467, 0.67", "12.4848, 31.3594, -36.9546, 0.33", "13.1985, 33.3558, -40.0173, 0.33", "13.3334, 34.0404, -41.0742, 0.67", "13.5542, 36.4528, -44.6898, 0.33", "13.4296, 37.5564, -46.0893, 0.67", "12.8938, 39.8752, -49.1623, 0.33", "12.6546, 40.5703, -50.1294, 1.33", "11.2581, 43.9906, -55.1904, 0.33", "10.9687, 44.8007, -56.5036, 1.33", "9.95589, 48.2084, -62.2697, 0.33", "9.49008, 50.2059, -65.6743, 2.0", "8.98881, 53.4275, -71.2158, 0.33", "8.93685, 53.8595, -71.9909, 0.67", "8.78185, 58.3129, -80.2523, 0.33", "8.78382, 59.5563, -82.7485, 2.0" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "4.79122, 6.01308, 7.74732, 0.67", "6.97356, 7.8276, 7.60693, 0.67", "8.04448, 8.71803, 7.53803, 0.33", "10.4783, 10.7416, 7.38146, 1.33", "15.416, 14.8471, 7.06381, 0.67", "20.4916, 19.0672, 6.73728, 0.67", "22.0588, 20.3703, 6.63646, 1.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "4.79122, 6.01308, 7.74732, 0.67", "4.74161, 8.30404, 9.53689, 0.67", "4.69527, 10.4443, 11.2087, 0.67", "4.65038, 12.517, 12.8278, 0.67", "4.5586, 16.7558, 16.1389, 0.67", "4.51331, 18.8471, 17.7726, 1.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.653458, -14.3836, 6.4864, 3.33", "0.237022, -16.3717, 6.12709, 3.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.653458, -14.3836, 6.4864, 1.33", "-4.78423, -20.5958, 7.35234, 1.33", "-7.20124, -24.2307, 7.85903, 1.33", "-7.83456, -25.1831, 7.99179, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.11765, -41.3902, 3.15589, 0.67", "4.39217, -56.336, 3.15589, 0.67", "5.66668, -71.2817, 3.15589, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "8.78382, 59.5563, -82.7485, 0.33", "9.92516, 62.8476, -83.6224, 0.33", "10.3748, 63.7019, -83.9992, 0.67", "12.3401, 67.0233, -85.6238, 0.33", "12.9204, 67.8151, -85.9816, 0.67", "15.7624, 71.4562, -87.5684, 0.33", "16.0366, 71.7861, -87.7037, 0.67", "21.1065, 77.435, -90.2106, 0.33", "21.7927, 78.0878, -90.6305, 1.33", "26.5095, 82.0647, -93.7685, 0.33", "26.8158, 82.3089, -93.9954, 0.67", "29.0322, 84.0286, -95.7059, 0.33", "30.2506, 85.0073, -96.7163, 0.67", "37.3216, 91.0382, -103.206, 0.33", "38.1988, 91.8007, -104.116, 0.67", "42.6283, 95.7513, -109.47, 0.33", "43.673, 96.6205, -110.751, 1.33", "44.7581, 97.4659, -112.162, 0.33", "45.2996, 97.8227, -112.909, 0.67", "49.3769, 100.151, -118.511, 0.33", "51.2991, 101.037, -121.131, 0.67", "56.3439, 103.043, -127.93, 0.33", "58.4843, 103.762, -130.764, 1.33", "65.1461, 105.712, -139.468, 0.33", "67.5271, 106.328, -142.513, 1.33", "74.8561, 107.948, -151.446, 0.33", "75.7848, 108.125, -152.584, 0.67", "77.8824, 108.457, -155.419, 0.33", "79.2401, 108.576, -157.49, 0.67", "81.7389, 108.64, -161.475, 0.33", "82.4387, 108.623, -162.713, 0.67", "85.572, 108.227, -169.297, 0.33", "87.6223, 107.894, -173.946, 0.67", "90.3687, 107.483, -180.947, 0.33", "93.108, 106.782, -188.83, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "8.78382, 59.5563, -82.7485, 0.33", "6.95317, 60.4253, -86.3702, 0.33", "6.46222, 60.6912, -87.4223, 0.67", "4.95835, 61.7839, -91.8147, 0.33", "4.56553, 62.2177, -93.2525, 0.67", "3.30486, 63.8338, -98.2794, 0.33", "3.00492, 64.2641, -99.5257, 0.67", "2.22143, 65.7131, -103.576, 0.33", "1.31265, 67.7793, -108.714, 1.33", "0.517602, 69.932, -113.424, 0.33", "0.475756, 70.0824, -113.75, 1.33", "-0.0803702, 72.1792, -118.05, 0.33", "-0.178769, 72.558, -118.789, 1.33", "-0.3891, 73.4893, -120.574, 0.33", "-0.436529, 73.6906, -120.904, 0.67", "-1.499, 78.614, -128.528, 0.33", "-1.65729, 79.4793, -129.841, 0.67", "-1.86737, 80.8023, -131.82, 0.33", "-2.44831, 84.0483, -136.616, 1.33", "-3.30311, 88.5535, -143.244, 0.33", "-3.37441, 89.0302, -143.924, 0.67", "-3.80131, 92.847, -148.988, 0.33", "-3.80131, 92.847, -148.988, 0.67", "-4.03405, 96.6936, -154.393, 0.33", "-4.14339, 97.7979, -155.901, 1.33", "-4.47969, 101.018, -160.479, 0.33", "-4.55454, 101.514, -161.141, 0.67", "-5.33623, 105.27, -165.66, 0.33", "-5.51862, 105.948, -166.44, 0.67", "-6.61045, 109.121, -169.91, 0.33", "-6.90575, 109.819, -170.642, 1.33", "-7.78747, 111.473, -172.286, 0.33", "-8.10488, 112.021, -172.837, 0.67", "-10.2518, 115.354, -176.024, 0.33", "-11.186, 116.851, -177.447, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "22.0588, 20.3703, 6.63646, 0.67", "33.8124, 20.883, 6.34465, 0.67", "38.3121, 21.3189, 5.90257, 0.67", "43.7871, 22.2265, 5.19674, 0.67", "48.7552, 23.2852, 4.51627, 0.67", "51.046, 23.831, 4.19847, 0.67", "55.5341, 24.9359, 3.59917, 0.67", "63.0569, 27.363, 2.93308, 0.67", "67.7726, 29.12, 2.52218, 0.67", "71.2715, 30.6656, 2.35108, 0.33", "72.1505, 31.0699, 2.36146, 0.67", "74.163, 31.9932, 2.46825, 0.33", "79.5617, 34.4185, 3.1114, 0.67", "81.7956, 35.5229, 3.48747, 0.33", "83.0541, 36.119, 3.61452, 0.67", "85.6186, 37.3232, 3.61766, 0.33", "85.6186, 37.3232, 3.61766, 0.67", "89.5965, 39.0819, 3.04594, 0.33", "94.5503, 41.1417, 2.39904, 1.33", "102.693, 44.3868, 1.6119, 0.33", "105.986, 45.5002, 1.36331, 0.67", "112.735, 47.4637, 0.989935, 0.33", "117.009, 48.4213, 0.756296, 1.33", "124.227, 49.4699, 0.453195, 0.33", "124.858, 49.4939, 0.442, 0.67", "133.624, 48.87, 0.128871, 0.33", "135.374, 48.6031, 0.099373, 1.33", "140.491, 47.394, -0.0617472, 0.33", "142.259, 46.9185, -0.114709, 0.67", "147.468, 45.4658, -0.516394, 0.33", "148.434, 45.2238, -0.591074, 0.67", "152.373, 44.4327, -0.823315, 0.33", "154.329, 44.1586, -0.910966, 0.67", "157.482, 43.9556, -0.969606, 0.33", "159.722, 43.9375, -0.951593, 1.33", "165.534, 44.152, -0.750071, 0.33", "167.536, 44.2056, -0.627563, 2.0", "172.449, 44.3328, -0.224328, 0.33", "174.661, 44.3005, 0.041057, 0.67", "180.728, 43.9585, 1.01339, 0.33", "182.94, 43.675, 1.48312, 0.67", "186.773, 42.9702, 2.51419, 0.33", "187.726, 42.7354, 2.771, 1.33", "193.214, 40.9966, 4.25834, 0.33", "195.007, 40.3157, 4.74328, 1.33", "200.046, 38.1707, 6.07494, 0.33", "202.03, 37.3168, 6.60434, 1.33", "208.428, 34.6345, 8.3062, 0.33", "210.738, 33.8085, 8.84739, 1.33", "218.015, 31.7523, 10.3495, 0.33", "219.778, 31.3748, 10.6727, 0.67", "222.431, 30.9734, 11.1036, 0.33", "223.663, 30.8318, 11.2886, 0.67", "234.241, 29.9854, 12.0902, 0.33", "236.474, 29.8499, 12.1357, 1.33", "241.404, 29.5738, 11.8454, 0.33", "243.628, 29.3656, 11.5623, 0.67", "248.442, 28.7157, 10.6831, 0.33", "254.755, 27.5083, 9.273, 1.33", "258.553, 26.5699, 8.30869, 0.33", "261.572, 25.791, 7.55089, 1.33", "267.802, 24.4226, 6.17396, 0.33", "268.671, 24.2735, 6.02829, 0.67", "271.874, 23.8955, 5.755, 1.33", "276.885, 23.6458, 6.05554, 0.33", "278.284, 23.6482, 6.25255, 0.67", "284.72, 24.0209, 7.89179, 0.33", "286.235, 24.1955, 8.38869, 0.67", "289.153, 24.6456, 9.40234, 0.33", "292.856, 25.4725, 10.9, 1.33", "296.791, 26.5589, 12.7146, 0.33", "299.227, 27.4345, 14.1188, 1.33", "303.031, 29.3922, 16.8917, 0.33", "304.227, 30.3283, 17.9604, 1.33", "306.588, 32.9196, 20.3848, 0.33", "306.993, 33.5267, 20.8889, 0.67", "308.776, 37.0597, 23.6061, 0.33", "309.15, 38.0497, 24.3594, 1.33", "310.743, 44.3857, 29.3664, 0.33", "311.071, 45.7898, 30.4919, 0.67", "311.782, 49.1347, 33.1189, 0.33", "311.947, 49.9044, 33.7336, 0.67", "312.711, 53.3224, 36.4364, 0.33", "313.026, 55.3704, 38.1989, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "22.0588, 20.3703, 6.63646, 0.33", "23.5784, 22.6701, 7.85454, 0.33", "26.4904, 26.2488, 9.97433, 0.67", "29.6676, 30.2476, 12.3434, 0.67", "31.053, 31.9921, 13.3465, 0.67", "34.6086, 36.3172, 15.8344, 0.67", "38.1049, 40.4386, 18.0995, 0.67", "42.9177, 45.5688, 20.998, 0.67", "45.2342, 47.8943, 22.3363, 0.67", "47.8135, 50.6604, 23.9116, 0.67", "49.3034, 52.2889, 24.9152, 0.67", "52.3349, 55.5537, 26.7953, 0.67", "55.9667, 59.2784, 28.6696, 0.67", "58.9006, 62.4275, 30.1408, 0.67", "63.0889, 66.9821, 32.1495, 0.67", "64.8788, 69.1799, 33.0809, 0.67", "68.3362, 73.6147, 35.0867, 0.67", "69.6053, 75.1955, 35.8349, 0.67", "73.1669, 79.246, 37.9674, 0.67", "74.7929, 80.8442, 39.0501, 0.67", "78.3895, 83.7559, 41.7615, 0.67", "82.1446, 86.4745, 44.7997, 0.67", "85.4186, 88.7836, 47.8475, 0.67", "89.3911, 91.2273, 51.5761, 0.67", "92.887, 92.7746, 54.7134, 0.67", "95.0359, 93.4822, 56.5848, 0.33", "97.7275, 94.0204, 58.8165, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "4.51331, 18.8471, 17.7726, 0.67", "4.41871, 22.7404, 19.7216, 0.67", "4.48308, 26.4555, 21.963, 0.67", "4.71064, 28.3248, 23.14, 0.67", "4.93319, 29.8278, 24.0591, 0.67", "5.48746, 32.9211, 25.9983, 0.67", "6.14659, 36.2225, 28.0552, 0.67", "6.82017, 39.5175, 30.1885, 0.67", "7.48647, 42.5957, 32.0475, 0.67", "8.35428, 46.5958, 34.5204, 0.67", "8.70748, 48.3833, 35.7266, 0.33", "8.92697, 49.3587, 36.4276, 0.67", "9.17928, 50.5558, 37.2062, 0.33", "9.63292, 53.0034, 38.6802, 0.67", "9.90419, 54.419, 39.5187, 1.33", "10.5197, 57.2161, 41.1048, 0.67", "11.754, 62.7052, 43.9959, 0.67", "12.7183, 67.005, 46.1541, 0.67", "13.505, 70.5051, 47.7526, 0.67", "13.8682, 72.1568, 48.3977, 0.67", "14.1748, 73.6748, 48.9083, 0.67", "14.3909, 74.9755, 49.2814, 1.33", "14.6218, 77.2302, 49.8784, 0.33", "14.8407, 79.5726, 50.4899, 1.33", "14.804, 81.2331, 50.8891, 0.33", "14.6138, 83.3353, 51.4266, 1.33", "14.0636, 87.03, 52.3919, 0.67", "13.7664, 88.6703, 52.8537, 0.33", "13.6032, 89.4752, 53.0867, 0.33", "12.5269, 94.3819, 54.5459, 0.67", "12.1847, 95.8551, 54.9782, 0.33", "11.7064, 97.986, 55.6834, 0.67", "11.3266, 99.9785, 56.3668, 0.67", "11.1043, 101.744, 57.0208, 0.67", "11.0718, 102.874, 57.4709, 0.67", "11.2682, 103.863, 57.9225, 0.67", "12.1281, 106.652, 59.3089, 0.33", "12.5408, 107.599, 59.8383, 0.33", "13.0375, 108.639, 60.4568, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.51331, 18.8471, 17.7726, 0.67", "3.73348, 20.5802, 19.1074, 0.67", "2.99319, 22.523, 21.081, 0.67", "2.36016, 24.399, 23.3154, 0.67", "2.02909, 25.5598, 24.752, 0.67", "1.80669, 27.2575, 26.6791, 0.67", "1.77499, 29.0484, 28.712, 0.67", "1.86123, 31.7379, 31.8769, 0.67", "1.92264, 33.2964, 33.8415, 0.67", "2.02471, 34.6687, 35.5655, 0.67", "2.28575, 37.3149, 38.6857, 0.67", "2.45514, 39.2267, 40.921, 0.67", "2.46597, 40.7484, 42.6669, 0.67", "2.36873, 41.9538, 43.899, 0.67", "1.90002, 45.6361, 47.2675, 0.67", "1.39415, 48.5618, 49.6121, 0.67", "0.841035, 50.8256, 51.4116, 0.67", "0.448526, 52.5108, 52.6033, 0.67", "-0.120353, 55.9534, 54.8658, 0.33", "-0.272494, 56.8782, 55.4069, 0.67", "-0.803132, 59.1724, 55.9371, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "0.237022, -16.3717, 6.12709, 1.33", "0.279739, -19.53, 8.23413, 1.33", "0.328885, -23.1635, 10.6582, 1.33", "0.38686, -27.45, 13.5179, 1.33" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "0.237022, -16.3717, 6.12709, 0.67", "0.730492, -18.3859, 3.87124, 0.67", "1.81055, -21.6055, 0.654791, 0.67", "2.97594, -24.6488, -2.42016, 0.67", "5.30176, -30.7223, -8.55696, 0.67", "6.43613, -33.6845, -11.5501, 0.67", "7.41969, -36.253, -14.1453, 0.67", "8.89242, -40.6143, -18.5821, 0.67", "9.78629, -42.9259, -20.8877, 1.33" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.83456, -25.1831, 7.99179, 0.67", "-9.22776, -30.1399, 9.18048, 0.67", "-9.65107, -31.6459, 9.54165, 0.67", "-10.5168, -34.726, 10.2803, 1.33", "-11.8926, -39.6208, 11.4541, 0.67", "-12.19, -40.6792, 11.7079, 0.67", "-12.7873, -42.804, 12.2175, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.83456, -25.1831, 7.99179, 0.67", "-9.13255, -25.4333, 9.06044, 0.67", "-11.6413, -25.7511, 11.1444, 0.67", "-13.172, -25.8732, 12.3829, 0.67", "-19.7947, -26.2695, 17.5222, 0.67", "-23.1142, -26.5242, 19.9676, 0.67", "-25.7784, -26.7401, 21.8884, 0.67", "-28.5789, -26.7927, 23.9109, 0.33", "-30.9679, -26.7051, 25.6206, 0.67", "-32.0695, -26.6545, 26.3747, 0.33", "-34.1451, -26.5263, 27.4708, 0.67", "-36.6406, -26.4968, 28.9537, 0.67", "-39.8908, -26.3767, 30.7258, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "0.38686, -27.45, 13.5179, 1.33", "-0.0698795, -30.1829, 13.1324, 1.33" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.38686, -27.45, 13.5179, 0.67", "-1.18435, -27.0018, 16.9898, 0.67", "-4.4152, -25.566, 21.9139, 0.67", "-6.15501, -24.8586, 24.0148, 0.67", "-9.80056, -23.7043, 27.5367, 0.67", "-10.3305, -23.5045, 28.0052, 0.67", "-12.136, -22.7167, 29.4549, 0.67", "-15.5458, -20.8712, 31.6968, 0.67", "-16.903, -19.9497, 32.5268, 0.67", "-20.0304, -17.593, 34.6061, 0.67", "-22.3341, -15.6912, 36.0248, 0.67", "-23.5575, -14.3685, 37.0525, 0.67", "-25.5832, -11.7595, 39.1009, 0.67", "-26.5877, -10.0835, 40.4137, 0.67", "-27.2482, -8.71748, 41.4389, 0.67", "-27.8674, -6.93138, 42.7019, 0.67", "-29.3557, -2.53916, 46.3393, 0.67" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "9.78629, -42.9259, -20.8877, 0.33", "9.48796, -45.2609, -23.3385, 0.33", "9.40698, -45.8947, -24.0038, 1.33", "8.95686, -49.4176, -27.7014, 0.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "9.78629, -42.9259, -20.8877, 0.33", "13.0957, -44.0412, -25.7778, 0.33", "13.3236, -44.1008, -26.1016, 0.67", "14.7593, -44.3674, -28.0333, 0.33", "16.0044, -44.5127, -29.591, 1.33", "20.0663, -44.8227, -34.6555, 0.67", "23.9418, -44.9346, -39.2701, 0.33", "25.0727, -44.8852, -40.5447, 0.33", "26.1969, -44.7993, -41.8361, 0.67", "27.9302, -44.6377, -43.8657, 0.33", "30.2378, -44.5395, -46.4568, 1.33", "32.1061, -44.5468, -48.4259, 0.33", "34.0135, -44.7206, -50.3572, 1.33", "37.2968, -45.2217, -53.6552, 0.33", "37.8975, -45.3489, -54.3118, 0.67", "43.5662, -46.8357, -60.7636, 0.33", "44.8104, -47.2267, -62.2428, 2.0", "49.6135, -49.0264, -68.3059, 0.33", "50.1348, -49.2515, -69.0099, 1.33", "53.8045, -51.0951, -74.6418, 0.33", "54.2555, -51.333, -75.3853, 0.67", "56.0195, -52.4555, -78.8121, 0.33", "56.6384, -52.9331, -80.2112, 1.33", "58.4797, -55.0912, -85.9569, 0.33", "59.297, -56.0736, -88.5399, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-12.7873, -42.804, 12.2175, 0.67", "-13.0523, -45.2403, 12.2421, 0.67", "-13.4482, -47.1209, 12.4431, 0.67", "-13.7547, -48.3342, 12.6136, 0.67", "-14.9133, -52.3879, 13.2611, 0.67", "-17.1819, -59.6198, 14.6753, 0.67", "-18.9826, -64.6966, 15.9104, 0.67", "-21.0272, -70.0115, 17.4133, 0.67", "-23.6417, -76.6192, 19.468, 0.67", "-24.5766, -78.7835, 20.2268, 0.67", "-25.8866, -81.264, 21.3579, 0.67", "-28.7812, -85.9139, 24.0675, 0.67", "-30.0684, -87.8013, 25.3282, 0.67", "-32.266, -90.9155, 27.5581, 0.67", "-33.094, -92.0559, 28.4425, 0.67", "-37.219, -98.0263, 32.909, 0.67", "-39.8661, -101.986, 35.7721, 0.67", "-41.9389, -105.218, 38.0225, 0.67", "-44.3373, -108.994, 40.621, 0.67", "-46.1694, -111.999, 42.6352, 0.67", "-47.0222, -113.73, 43.7571, 0.67", "-47.8714, -116.035, 45.1537, 0.67", "-48.6066, -118.341, 46.6357, 0.67", "-49.081, -119.813, 47.7049, 0.67", "-49.998, -122.239, 49.7589, 0.67", "-51.4357, -125.591, 53.3338, 0.67", "-52.0913, -127.03, 55.0664, 0.67", "-52.8108, -128.548, 57.099, 0.67", "-53.6082, -130.029, 59.4142, 0.67", "-54.4335, -131.401, 61.7221, 0.33", "-55.8062, -132.98, 64.904, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-12.7873, -42.804, 12.2175, 0.67", "-16.5392, -43.1764, 12.1826, 0.67", "-21.2747, -43.635, 11.925, 0.67", "-26.1969, -44.0804, 11.6122, 0.67", "-35.9527, -44.914, 11.2693, 0.67", "-40.5419, -45.2515, 11.215, 0.67", "-43.119, -45.4409, 11.2542, 0.67", "-46.4022, -45.7044, 11.2768, 0.33", "-48.6304, -45.852, 11.26, 1.33", "-51.8759, -46.0768, 11.3818, 0.33", "-55.0345, -46.3885, 11.7538, 0.67", "-58.1251, -46.756, 12.2174, 0.33", "-62.0875, -47.3047, 12.6284, 0.67", "-65.0026, -47.7438, 12.8754, 0.33", "-67.2888, -48.1428, 12.9481, 0.67", "-73.5784, -49.3898, 12.8425, 0.33", "-76.7253, -50.1075, 12.5984, 1.33", "-81.7827, -51.327, 12.3235, 0.33", "-82.2859, -51.4462, 12.2969, 0.67", "-84.8539, -52.0276, 12.1035, 0.33", "-85.6534, -52.1784, 11.9855, 0.67", "-93.1863, -53.3652, 10.7315, 0.33", "-97.3542, -53.8488, 9.75924, 2.0", "-104.245, -54.4227, 8.01038, 0.33", "-106.724, -54.5754, 7.37325, 1.33", "-113.37, -54.8024, 5.67415, 0.33", "-113.719, -54.8066, 5.59846, 0.67", "-116.9, -54.7356, 4.99863, 0.33", "-117.625, -54.7124, 4.88977, 0.67", "-122.215, -54.5803, 4.79546, 0.33", "-124.096, -54.564, 4.91561, 1.33", "-127.091, -54.592, 5.37571, 0.33", "-131.983, -54.8208, 6.24961, 1.33", "-136.34, -55.1905, 7.16034, 0.33", "-137.478, -55.3549, 7.39865, 0.67", "-140.527, -55.951, 8.03881, 0.33", "-141.22, -56.1476, 8.21366, 0.67", "-145.894, -57.8451, 9.59766, 0.33", "-147.271, -58.4275, 10.0072, 0.67", "-150.779, -59.9877, 10.9055, 0.33", "-151.818, -60.4319, 11.1553, 0.67", "-158.4, -63.149, 12.7059, 0.33", "-158.737, -63.2801, 12.7694, 0.67", "-162.98, -64.797, 13.419, 0.33", "-164.391, -65.294, 13.6158, 1.33", "-167.905, -66.5282, 14.0548, 0.33", "-170.081, -67.3449, 14.3345, 1.33", "-176.326, -69.809, 15.181, 0.33", "-177.513, -70.3227, 15.3926, 1.33", "-180.036, -71.5145, 15.9993, 0.33", "-180.677, -71.809, 16.1762, 0.67", "-183.872, -73.2522, 17.1629, 0.33", "-184.583, -73.584, 17.4124, 0.67", "-187.224, -74.9157, 18.4652, 0.33", "-188.744, -75.8458, 18.9496, 1.33", "-194.988, -80.2382, 20.5119, 0.33", "-195.616, -80.7532, 20.6253, 0.67", "-198.821, -83.9209, 20.9119, 0.33", "-199.846, -85.1572, 20.8935, 0.67", "-203.476, -90.8873, 20.1291, 0.33", "-203.616, -91.2148, 20.0305, 1.33", "-203.997, -92.8078, 19.2982, 0.33", "-204.078, -93.2537, 19.0873, 0.67", "-204.251, -94.617, 18.4152, 0.33", "-204.314, -95.0647, 18.2019, 0.67", "-204.919, -99.2901, 16.4337, 0.33", "-205.062, -100.261, 16.0193, 1.33", "-205.912, -105.649, 13.6784, 0.33", "-205.97, -105.966, 13.5469, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-0.0698795, -30.1829, 13.1324, 0.67", "-0.58169, -38.9879, 12.6982, 0.67", "-0.871297, -41.3765, 12.6076, 0.67", "-1.66108, -45.456, 12.3041, 0.67", "-2.81933, -51.4388, 11.859, 0.67", "-4.03891, -57.7384, 11.3903, 0.67", "-4.81208, -61.7321, 11.0932, 0.67", "-7.15845, -70.3775, 10.8382, 0.67", "-10.9191, -83.7491, 10.2887, 0.33" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.0698795, -30.1829, 13.1324, 0.67", "1.43456, -32.1485, 15.3106, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.95686, -49.4176, -27.7014, 0.33", "10.478, -51.0557, -28.813, 0.33", "10.9601, -51.4897, -29.3071, 0.67", "12.0464, -52.4497, -30.4197, 0.33", "12.4251, -52.7633, -30.8314, 0.67", "13.6755, -53.7473, -32.1807, 0.33", "17.0354, -56.1556, -35.8627, 1.33", "20.2817, -58.1639, -39.7175, 0.33", "21.0286, -58.5663, -40.6052, 1.33", "23.4951, -59.7434, -43.543, 0.33", "24.0187, -59.9381, -44.1998, 0.67", "26.6462, -60.627, -47.7841, 0.33", "27.9779, -60.8469, -49.6125, 2.0", "29.1281, -60.9304, -51.3174, 0.33", "29.5232, -60.9552, -51.9957, 0.67", "32.4623, -61.1693, -57.5414, 0.33", "34.2147, -61.4217, -61.0585, 1.33", "35.0383, -61.591, -62.812, 0.33", "35.4822, -61.7205, -63.7887, 2.0", "39.3458, -63.1815, -72.7187, 0.33", "39.6669, -63.3404, -73.5312, 2.0", "40.8516, -64.0847, -76.6319, 0.33", "41.3937, -64.5243, -78.1609, 0.67", "42.3442, -65.4669, -81.1016, 0.33", "42.6837, -65.8026, -82.0028, 1.33", "46.8519, -69.9108, -91.1007, 0.33", "48.0072, -70.9102, -93.1438, 0.67", "49.5746, -72.0998, -95.3503, 0.33", "49.8271, -72.2747, -95.6214, 0.67", "54.1632, -74.9311, -99.1428, 0.33", "55.2631, -75.5376, -99.8075, 0.67", "58.058, -76.9738, -100.845, 0.33", "58.6054, -77.2598, -101.023, 0.67", "63.1338, -79.559, -102.447, 0.33", "63.8826, -80.002, -102.54, 1.33", "66.173, -81.5791, -102.288, 0.33", "66.4832, -81.813, -102.151, 0.67", "70.4408, -85.0101, -99.5005, 0.33", "72.0156, -86.3049, -98.2037, 0.67", "76.7529, -90.2932, -93.2596, 0.33", "77.1163, -90.6151, -92.8285, 0.67", "80.7874, -94.0619, -87.613, 0.33", "80.9227, -94.1926, -87.3942, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.95686, -49.4176, -27.7014, 0.33", "9.49775, -54.3082, -27.0688, 0.33", "9.76653, -56.0564, -26.88, 0.67", "10.7849, -61.7862, -26.3144, 0.33", "11.1665, -63.7437, -26.1388, 0.67", "11.5993, -66.0688, -25.9553, 0.33", "12.0631, -68.8283, -25.7784, 1.33", "12.8341, -73.3496, -25.5573, 0.33", "12.9374, -73.9777, -25.5412, 0.67", "13.3074, -76.3229, -25.552, 0.33", "13.7215, -78.9909, -25.5601, 1.33", "14.565, -84.3363, -25.9137, 0.33", "14.8049, -85.7135, -26.0867, 0.67", "15.3991, -88.8306, -26.6202, 0.33", "15.7858, -90.3445, -27.0162, 0.67", "16.7935, -93.6118, -28.0966, 0.33", "18.4327, -97.7359, -29.6618, 0.67", "20.57, -102.257, -31.6982, 0.33", "21.4466, -103.892, -32.463, 1.33", "25.2238, -110.216, -35.5266, 0.33", "25.4631, -110.588, -35.6992, 0.67", "27.2944, -113.224, -36.8219, 0.33", "28.8488, -115.325, -37.4901, 2.0", "31.2062, -118.221, -38.4413, 0.33", "31.4801, -118.561, -38.5295, 0.67", "33.1789, -120.821, -39.0158, 0.33", "33.5052, -121.338, -39.1636, 0.67", "35.0689, -124.308, -40.1236, 0.33", "35.7767, -125.867, -40.615, 0.67", "37.1747, -129.692, -41.6714, 0.33", "38.1265, -132.613, -42.2995, 1.33", "40.0333, -139.215, -43.4401, 0.33", "40.2806, -140.077, -43.5331, 0.67", "41.3321, -143.726, -43.6975, 0.33", "42.5377, -147.656, -43.5723, 1.33", "43.9318, -151.871, -43.1301, 0.33", "44.2307, -152.681, -42.9832, 0.67", "45.7729, -156.433, -42.1188, 0.33", "46.1925, -157.332, -41.9415, 0.67", "47.4065, -159.61, -41.6015, 0.33", "47.7226, -160.162, -41.5521, 0.67", "50.1893, -164.474, -41.181, 0.33", "51.191, -166.175, -41.0434, 1.33", "52.9347, -169.183, -40.8306, 0.33", "54.808, -172.67, -40.6071, 0.67", "56.3002, -175.492, -40.439, 0.33", "56.6046, -176.057, -40.4018, 0.67", "57.8411, -178.359, -40.2461, 0.33", "58.2413, -179.124, -40.1992, 0.67", "60.925, -184.437, -39.8566, 0.33", "61.5441, -185.71, -39.7694, 0.67", "64.5466, -191.969, -39.3111, 0.33", "65.3243, -193.621, -39.1852, 2.0" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "59.297, -56.0736, -88.5399, 0.33", "60.5151, -55.7758, -90.3145, 0.33", "60.8539, -55.6838, -90.817, 0.67", "63.7406, -54.8538, -95.1473, 0.33", "64.4503, -54.6597, -95.9691, 1.33", "67.7295, -53.8466, -99.2708, 0.33", "68.3573, -53.716, -99.7962, 0.67", "73.3147, -52.8365, -103.242, 0.33", "74.021, -52.766, -103.669, 1.33", "80.1806, -52.6816, -106.542, 0.33", "81.0527, -52.799, -106.92, 1.33", "84.4747, -53.7947, -108.187, 0.33", "85.0599, -54.0534, -108.416, 1.33", "89.1031, -56.6985, -110.105, 0.33", "89.959, -57.3977, -110.674, 0.67", "92.0918, -59.5536, -112.859, 0.33", "92.3314, -59.7726, -113.13, 0.67", "93.5259, -60.719, -114.501, 0.33", "93.723, -60.8303, -114.706, 0.67", "97.098, -62.0668, -117.701, 0.33", "98.1198, -62.3776, -118.62, 0.67", "98.9978, -62.5756, -119.29, 0.33", "102.004, -63.2074, -121.562, 1.33", "106.834, -64.1143, -125.079, 0.33", "107.381, -64.2215, -125.476, 0.67", "110.843, -64.9335, -127.921, 0.33", "113.977, -65.8196, -130.338, 0.67" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "59.297, -56.0736, -88.5399, 0.33", "59.7052, -57.9755, -91.2127, 0.33", "59.7996, -58.3324, -91.7387, 0.67", "60.7287, -61.1285, -96.0407, 0.33", "60.8251, -61.4269, -96.5228, 0.67", "61.5316, -63.8029, -100.489, 0.33", "61.5795, -64.0861, -100.987, 0.67", "61.7411, -66.3829, -105.326, 0.33", "61.7432, -66.9545, -106.364, 1.33", "61.654, -69.458, -110.892, 0.33", "61.5733, -70.3273, -112.482, 0.67", "60.9287, -73.8773, -119.205, 0.33", "60.7407, -74.5927, -120.576, 1.33", "60.0208, -76.2488, -123.655, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "1.43456, -32.1485, 15.3106, 0.67", "2.25805, -34.2936, 18.1956, 0.67", "3.3401, -37.0313, 21.5441, 0.67", "4.3383, -38.9201, 23.6435, 0.67", "5.28138, -40.5924, 25.535, 0.67", "5.70402, -41.3358, 26.3485, 0.67", "6.16388, -42.2981, 27.3641, 0.33", "6.74271, -43.6488, 28.7252, 0.67", "7.59148, -45.5572, 30.7434, 0.33", "8.45863, -47.7362, 32.5814, 0.67", "8.75187, -48.65, 33.2871, 0.33", "9.45508, -50.9427, 35.3067, 0.67", "9.95507, -53.4378, 37.8441, 0.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "1.43456, -32.1485, 15.3106, 0.67", "3.85531, -32.6897, 20.8566, 0.67", "5.55983, -33.0707, 24.7617, 0.67", "8.08487, -33.6352, 30.5466, 0.67", "9.93909, -34.0498, 34.7947, 0.67" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "65.3243, -193.621, -39.1852, 0.33", "66.3617, -196.716, -38.7068, 0.33", "66.4304, -196.94, -38.6596, 0.67", "67.4983, -200.687, -37.7958, 0.33", "67.7046, -201.369, -37.6361, 0.67", "68.363, -203.466, -37.1423, 0.33", "68.438, -203.695, -37.09, 0.67", "69.1861, -205.842, -36.6569, 0.33", "69.4462, -206.555, -36.5745, 1.33", "70.627, -209.566, -36.4281, 0.33", "70.7489, -209.878, -36.4337, 0.67", "71.5444, -211.779, -36.6384, 0.33", "71.9617, -212.756, -36.8185, 0.67", "73.5749, -216.383, -37.79, 0.33", "73.8547, -217.06, -37.9882, 0.67", "74.3628, -218.43, -38.4241, 0.33", "74.7875, -219.638, -38.8138, 0.67", "75.2291, -220.964, -39.2483, 0.33", "75.5276, -221.902, -39.5337, 0.67", "76.1156, -223.973, -40.0091, 0.33", "76.3809, -224.984, -40.2469, 1.33", "76.9181, -227.033, -40.7, 0.33", "76.9181, -227.033, -40.7, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "65.3243, -193.621, -39.1852, 0.67", "65.3704, -195.223, -40.0748, 0.67", "65.3445, -196.287, -40.757, 0.33", "65.3335, -196.689, -40.9944, 0.67", "65.2769, -199.348, -42.4966, 0.33", "65.2807, -199.548, -42.6184, 0.67", "65.4279, -202.813, -44.6687, 0.33", "65.6792, -204.71, -45.9467, 1.33", "66.1089, -206.864, -47.4551, 0.33", "66.1823, -207.128, -47.6316, 0.67", "67.0376, -209.608, -49.1759, 0.33", "67.1506, -209.86, -49.3466, 0.67", "69.0035, -213.162, -51.7029, 0.33", "69.5576, -214.114, -52.3226, 1.33", "70.714, -216.042, -53.5622, 0.33", "71.0548, -216.618, -53.8867, 1.33", "72.7462, -219.538, -55.2767, 0.33", "73.0953, -220.124, -55.5596, 0.67", "74.2298, -221.976, -56.4379, 0.33", "74.4901, -222.387, -56.6407, 1.33", "77.236, -226.622, -58.764, 0.33", "77.6653, -227.275, -59.0751, 0.67", "79.711, -230.391, -60.3525, 0.33", "79.8348, -230.571, -60.4355, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "9.93909, -34.0498, 34.7947, 0.67", "13.0776, -33.912, 36.6074, 0.67", "15.4471, -33.3618, 38.0084, 0.67", "18.2464, -32.5164, 39.7552, 0.67", "22.8356, -30.9144, 42.907, 0.67", "25.1399, -30.0841, 44.709, 0.67", "26.3526, -29.6216, 45.724, 0.67", "32.2223, -27.0486, 50.8507, 0.67", "33.4432, -26.4508, 51.9364, 1.33", "36.2422, -25.0411, 54.4258, 0.67", "39.5952, -23.5483, 57.462, 0.67", "41.3495, -22.8484, 59.0204, 1.33", "43.7702, -22.137, 61.0519, 0.33", "46.0802, -21.6901, 62.9034, 0.67", "47.9479, -21.3851, 64.2494, 0.33", "49.7703, -21.1591, 65.3517, 0.67", "51.1552, -21.0212, 66.0542, 0.33", "52.6568, -20.9641, 66.8936, 0.67", "57.0706, -20.8517, 70.0668, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "9.93909, -34.0498, 34.7947, 0.67", "9.37239, -35.7225, 39.7921, 0.67", "8.87601, -37.1876, 44.1694, 0.67", "8.44121, -38.4709, 48.0036, 0.67", "7.98888, -39.8061, 51.9925, 0.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_37", "dend_32", "dend_25", "dend_0", "dend_39", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_6", "dend_1", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_16", "dend_7", "dend_3", "dend_2", "dend_18", "dend_17", "dend_11", "dend_8", "dend_5", "dend_4", "dend_24", "dend_19", "dend_15", "dend_12", "dend_10", "dend_9", "dend_23", "dend_20", "dend_14", "dend_13", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_37", "dend_32", "dend_25", "dend_0", "dend_39", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_6", "dend_1", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_16", "dend_7", "dend_3", "dend_2", "dend_18", "dend_17", "dend_11", "dend_8", "dend_5", "dend_4", "dend_24", "dend_19", "dend_15", "dend_12", "dend_10", "dend_9", "dend_23", "dend_20", "dend_14", "dend_13", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_6", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L4_BTC_ee19c75ca3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_6
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.4500008757444842)
    connect dend_37(0), soma_0(0.4500008757444842)
    connect dend_32(0), soma_0(0.4500008757444842)
    connect dend_25(0), soma_0(0.4500008757444842)
    connect dend_0(0), soma_0(0.4500008757444842)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_16(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.10901, 8.17427, -3.38986, 2.59058 ) }
    soma_0 { pt3dadd( -1.02513, 7.19062, -3.06257, 4.73751 ) }
    soma_0 { pt3dadd( -0.941247, 6.20697, -2.73528, 6.32924 ) }
    soma_0 { pt3dadd( -0.857366, 5.22332, -2.408, 7.36132 ) }
    soma_0 { pt3dadd( -0.773484, 4.23967, -2.08071, 9.22299 ) }
    soma_0 { pt3dadd( -0.689602, 3.25602, -1.75342, 10.2547 ) }
    soma_0 { pt3dadd( -0.605721, 2.27237, -1.42613, 10.8399 ) }
    soma_0 { pt3dadd( -0.521839, 1.28871, -1.09885, 11.0364 ) }
    soma_0 { pt3dadd( -0.437957, 0.305064, -0.771561, 11.233 ) }
    soma_0 { pt3dadd( -0.354076, -0.678586, -0.444273, 11.4012 ) }
    soma_0 { pt3dadd( -0.270194, -1.66224, -0.116986, 10.7587 ) }
    soma_0 { pt3dadd( -0.186312, -2.64589, 0.210301, 10.0838 ) }
    soma_0 { pt3dadd( -0.102431, -3.62954, 0.537588, 9.4089 ) }
    soma_0 { pt3dadd( -0.018549, -4.61319, 0.864875, 8.86981 ) }
    soma_0 { pt3dadd( 0.0653327, -5.59684, 1.19216, 8.72262 ) }
    soma_0 { pt3dadd( 0.149214, -6.58049, 1.51945, 8.42438 ) }
    soma_0 { pt3dadd( 0.233096, -7.56414, 1.84674, 7.90042 ) }
    soma_0 { pt3dadd( 0.316978, -8.54779, 2.17402, 7.02226 ) }
    soma_0 { pt3dadd( 0.400859, -9.53144, 2.50131, 6.10711 ) }
    soma_0 { pt3dadd( 0.484741, -10.5151, 2.8286, 5.19196 ) }
    soma_0 { pt3dadd( 0.568623, -11.4987, 3.15589, 3.05014 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.40148, -1.71407, -9.60359, 0.67 ) }
    dend_40 { pt3dadd( -7.32208, -2.51776, -12.4286, 0.67 ) }
    dend_40 { pt3dadd( -10.3225, -3.25041, -15.0127, 0.67 ) }
    dend_40 { pt3dadd( -10.3225, -3.25041, -15.0127, 0.67 ) }
    dend_40 { pt3dadd( -11.8646, -3.66817, -15.9645, 1.33 ) }
    dend_40 { pt3dadd( -18.463, -5.08638, -20.0756, 0.33 ) }
    dend_40 { pt3dadd( -19.4727, -5.30649, -20.8728, 0.33 ) }
    dend_40 { pt3dadd( -21.5502, -5.71127, -22.8982, 1.33 ) }
    dend_40 { pt3dadd( -23.6345, -6.17331, -25.3075, 0.33 ) }
    dend_40 { pt3dadd( -24.3077, -6.35863, -26.1547, 1.33 ) }
    dend_40 { pt3dadd( -28.7307, -7.79948, -32.4523, 0.67 ) }
    dend_40 { pt3dadd( -33.8137, -9.76958, -40.5021, 0.33 ) }
    dend_40 { pt3dadd( -35.9313, -10.6088, -44.1234, 0.67 ) }
    dend_40 { pt3dadd( -38.9117, -11.8651, -49.5003, 0.33 ) }
    dend_40 { pt3dadd( -39.5153, -12.132, -50.6225, 0.67 ) }
    dend_40 { pt3dadd( -42.2213, -13.4339, -55.5602, 0.33 ) }
    dend_40 { pt3dadd( -43.4402, -14.0746, -57.6628, 1.33 ) }
    dend_40 { pt3dadd( -45.898, -15.2613, -61.33, 0.33 ) }
    dend_40 { pt3dadd( -47.2429, -15.866, -63.2511, 1.33 ) }
    dend_40 { pt3dadd( -51.7016, -17.8675, -69.3479, 0.33 ) }
    dend_40 { pt3dadd( -52.1771, -18.0829, -69.9741, 0.67 ) }
    dend_40 { pt3dadd( -54.5932, -19.2462, -72.9213, 0.33 ) }
    dend_40 { pt3dadd( -55.0759, -19.4797, -73.5495, 1.33 ) }
    dend_40 { pt3dadd( -58.7954, -21.4168, -78.9266, 0.33 ) }
    dend_40 { pt3dadd( -59.8995, -22.0052, -80.649, 0.67 ) }
    dend_40 { pt3dadd( -60.8588, -22.4714, -82.1412, 0.33 ) }
    dend_40 { pt3dadd( -61.6224, -22.7995, -83.3186, 1.33 ) }
    dend_40 { pt3dadd( -65.0999, -24.0459, -88.4736, 0.33 ) }
    dend_40 { pt3dadd( -65.4733, -24.1677, -89.0206, 0.33 ) }
    dend_40 { pt3dadd( -66.8108, -24.584, -91.0281, 1.33 ) }
    dend_40 { pt3dadd( -69.9534, -25.5744, -96.1185, 0.33 ) }
    dend_40 { pt3dadd( -70.4586, -25.7698, -97.0728, 1.33 ) }
    dend_40 { pt3dadd( -73.2384, -27.0982, -102.846, 0.33 ) }
    dend_40 { pt3dadd( -73.5577, -27.2892, -103.56, 0.67 ) }
    dend_40 { pt3dadd( -75.9623, -28.9761, -109.479, 0.33 ) }
    dend_40 { pt3dadd( -76.477, -29.4118, -110.923, 1.33 ) }
    dend_40 { pt3dadd( -78.469, -31.3608, -117.433, 0.33 ) }
    dend_40 { pt3dadd( -78.6617, -31.5645, -118.101, 1.33 ) }
    dend_40 { pt3dadd( -79.7553, -32.754, -122.144, 0.33 ) }
    dend_40 { pt3dadd( -80.1879, -33.164, -123.606, 0.67 ) }
    dend_40 { pt3dadd( -82.1392, -34.9255, -129.989, 0.33 ) }
    dend_40 { pt3dadd( -83.6971, -36.1667, -134.713, 0.67 ) }
    dend_40 { pt3dadd( -84.36, -36.5999, -136.523, 0.33 ) }
    dend_40 { pt3dadd( -85.6329, -37.3848, -140.041, 0.67 ) }
    dend_40 { pt3dadd( -87.5964, -38.5812, -145.7, 0.33 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -2.84148, 4.20418, -11.1036, 0.67 ) }
    dend_37 { pt3dadd( -3.14598, 4.94344, -12.2886, 0.67 ) }
    dend_37 { pt3dadd( -3.75349, 6.79086, -14.5295, 0.67 ) }
    dend_37 { pt3dadd( -4.76982, 9.41916, -17.7116, 0.67 ) }
    dend_37 { pt3dadd( -5.55724, 11.4555, -20.1771, 0.67 ) }
    dend_37 { pt3dadd( -5.8916, 12.3202, -21.224, 0.67 ) }
    dend_37 { pt3dadd( -6.32134, 13.4315, -22.5696, 0.67 ) }
    dend_37 { pt3dadd( -7.32804, 16.8182, -26.4894, 0.67 ) }
    dend_37 { pt3dadd( -8.05258, 20.0525, -29.8706, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 75/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.21148, 5.46193, -10.3036, 0.67 ) }
    dend_32 { pt3dadd( -0.534769, 8.20259, -12.1858, 0.67 ) }
    dend_32 { pt3dadd( -0.00405828, 9.10186, -12.785, 0.67 ) }
    dend_32 { pt3dadd( 0.891608, 10.6195, -13.7962, 1.33 ) }
    dend_32 { pt3dadd( 4.15665, 16.152, -17.4823, 0.67 ) }
    dend_32 { pt3dadd( 5.69977, 18.7667, -19.2244, 0.67 ) }
    dend_32 { pt3dadd( 6.52448, 20.1642, -20.1554, 0.67 ) }
    dend_32 { pt3dadd( 7.51542, 21.9792, -21.5479, 1.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 83/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 4.30852, 5.65693, 7.4864, 2.0 ) }
    dend_25 { pt3dadd( 4.79122, 6.01308, 7.74732, 2.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 85/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.571479, -11.3763, 6.4864, 4.0 ) }
    dend_0 { pt3dadd( -0.653458, -14.3836, 6.4864, 4.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 87/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.568623, -11.4987, 3.15589, 0.469313 ) }
    axon_0 { pt3dadd( 1.84314, -26.4445, 3.15589, 0.469313 ) }
    axon_0 { pt3dadd( 3.11765, -41.3902, 3.15589, 0.469313 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -8.05258, 20.0525, -29.8706, 0.33 ) }
    dend_39 { pt3dadd( -7.82188, 22.0978, -36.2169, 0.33 ) }
    dend_39 { pt3dadd( -7.80133, 22.2917, -36.7433, 1.33 ) }
    dend_39 { pt3dadd( -7.64355, 23.608, -40.0479, 0.33 ) }
    dend_39 { pt3dadd( -7.62702, 23.8468, -40.5638, 1.33 ) }
    dend_39 { pt3dadd( -7.57095, 25.2138, -43.2265, 0.33 ) }
    dend_39 { pt3dadd( -7.57179, 25.3842, -43.5299, 0.67 ) }
    dend_39 { pt3dadd( -7.71095, 26.7031, -45.3801, 0.33 ) }
    dend_39 { pt3dadd( -7.74448, 26.9081, -45.658, 1.33 ) }
    dend_39 { pt3dadd( -7.96527, 28.1277, -47.1966, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( -8.19193, 29.4013, -48.7919, 1.33 ) }
    dend_39 { pt3dadd( -8.52, 31.177, -50.9534, 0.33 ) }
    dend_39 { pt3dadd( -8.79256, 32.6554, -52.7944, 1.33 ) }
    dend_39 { pt3dadd( -9.11837, 34.4059, -54.9736, 0.33 ) }
    dend_39 { pt3dadd( -9.16935, 34.7167, -55.3502, 1.33 ) }
    dend_39 { pt3dadd( -9.29807, 35.7902, -56.6203, 0.33 ) }
    dend_39 { pt3dadd( -9.35358, 36.2886, -57.1691, 0.67 ) }
    dend_39 { pt3dadd( -9.55806, 38.9578, -60.2006, 0.33 ) }
    dend_39 { pt3dadd( -9.57583, 39.3268, -60.6073, 1.33 ) }
    dend_39 { pt3dadd( -9.60114, 40.3002, -61.7221, 0.33 ) }
    dend_39 { pt3dadd( -9.60798, 40.5213, -61.9888, 1.33 ) }
    dend_39 { pt3dadd( -9.6959, 42.874, -65.2144, 0.33 ) }
    dend_39 { pt3dadd( -9.7639, 44.2106, -67.1843, 1.33 ) }
    dend_39 { pt3dadd( -9.81843, 45.1361, -68.6289, 0.33 ) }
    dend_39 { pt3dadd( -9.8898, 45.8966, -69.9471, 0.67 ) }
    dend_39 { pt3dadd( -10.058, 47.2042, -72.3484, 0.33 ) }
    dend_39 { pt3dadd( -10.3928, 49.1507, -75.7432, 0.67 ) }
    dend_39 { pt3dadd( -10.7004, 50.6574, -78.2282, 0.33 ) }
    dend_39 { pt3dadd( -10.9554, 51.4087, -79.4285, 0.67 ) }
    dend_39 { pt3dadd( -12.4946, 54.7028, -84.6841, 0.33 ) }
    dend_39 { pt3dadd( -12.5993, 54.8752, -84.9543, 0.67 ) }
    dend_39 { pt3dadd( -13.6776, 56.2944, -87.0918, 0.33 ) }
    dend_39 { pt3dadd( -13.9273, 56.5828, -87.52, 0.67 ) }
    dend_39 { pt3dadd( -15.736, 58.5621, -90.7595, 0.33 ) }
    dend_39 { pt3dadd( -16.0567, 58.9886, -91.4659, 0.67 ) }
    dend_39 { pt3dadd( -16.9207, 60.3859, -93.8814, 0.33 ) }
    dend_39 { pt3dadd( -17.0151, 60.6612, -94.3711, 0.67 ) }
    dend_39 { pt3dadd( -17.0246, 62.4757, -97.9072, 0.33 ) }
    dend_39 { pt3dadd( -16.7385, 63.7117, -100.016, 0.67 ) }
    dend_39 { pt3dadd( -15.8281, 65.6711, -102.93, 0.33 ) }
    dend_39 { pt3dadd( -15.7569, 65.8022, -103.118, 0.67 ) }
    dend_39 { pt3dadd( -14.5552, 67.7391, -105.592, 0.33 ) }
    dend_39 { pt3dadd( -13.1649, 69.8186, -108.098, 1.33 ) }
    dend_39 { pt3dadd( -10.9395, 72.9537, -111.023, 0.33 ) }
    dend_39 { pt3dadd( -10.8194, 73.1254, -111.151, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 35/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -8.05258, 20.0525, -29.8706, 0.33 ) }
    dend_38 { pt3dadd( -10.2622, 19.8836, -31.6848, 0.33 ) }
    dend_38 { pt3dadd( -11.122, 19.8976, -32.2538, 1.33 ) }
    dend_38 { pt3dadd( -14.159, 20.0754, -34.0266, 0.33 ) }
    dend_38 { pt3dadd( -14.8796, 20.1502, -34.4671, 0.67 ) }
    dend_38 { pt3dadd( -16.9426, 20.4376, -35.7448, 0.33 ) }
    dend_38 { pt3dadd( -18.96, 20.7802, -37.0243, 1.33 ) }
    dend_38 { pt3dadd( -22.5555, 21.6383, -39.1291, 0.33 ) }
    dend_38 { pt3dadd( -23.2132, 21.8408, -39.5409, 1.33 ) }
    dend_38 { pt3dadd( -25.6275, 22.7855, -41.0317, 0.33 ) }
    dend_38 { pt3dadd( -26.0587, 22.9823, -41.3332, 0.67 ) }
    dend_38 { pt3dadd( -27.7335, 23.8589, -42.6102, 0.33 ) }
    dend_38 { pt3dadd( -28.3311, 24.193, -43.0699, 0.67 ) }
    dend_38 { pt3dadd( -30.1568, 25.2905, -44.3788, 0.33 ) }
    dend_38 { pt3dadd( -30.7635, 25.6687, -44.8095, 1.33 ) }
    dend_38 { pt3dadd( -33.0683, 27.1443, -46.3637, 0.33 ) }
    dend_38 { pt3dadd( -33.9151, 27.7166, -46.9621, 1.33 ) }
    dend_38 { pt3dadd( -37.5576, 30.3513, -49.59, 0.33 ) }
    dend_38 { pt3dadd( -38.344, 30.9415, -50.1902, 1.33 ) }
    dend_38 { pt3dadd( -40.1824, 32.3805, -51.6098, 0.33 ) }
    dend_38 { pt3dadd( -40.3643, 32.5396, -51.7633, 0.67 ) }
    dend_38 { pt3dadd( -42.067, 34.1938, -53.2769, 0.33 ) }
    dend_38 { pt3dadd( -42.3934, 34.5365, -53.5826, 0.67 ) }
    dend_38 { pt3dadd( -43.6308, 35.9777, -54.7569, 0.33 ) }
    dend_38 { pt3dadd( -43.9702, 36.3646, -55.049, 2.0 ) }
    dend_38 { pt3dadd( -47.8156, 40.6086, -58.132, 0.33 ) }
    dend_38 { pt3dadd( -48.0868, 40.8915, -58.3373, 0.67 ) }
    dend_38 { pt3dadd( -49.2125, 42.0192, -59.1154, 0.33 ) }
    dend_38 { pt3dadd( -49.5031, 42.2985, -59.303, 0.67 ) }
    dend_38 { pt3dadd( -50.3402, 43.0698, -59.8796, 0.33 ) }
    dend_38 { pt3dadd( -51.2199, 43.873, -60.4906, 0.67 ) }
    dend_38 { pt3dadd( -53.6322, 46.0285, -62.1252, 0.33 ) }
    dend_38 { pt3dadd( -54.2907, 46.6388, -62.5761, 0.67 ) }
    dend_38 { pt3dadd( -56.8215, 49.088, -64.3558, 0.33 ) }
    dend_38 { pt3dadd( -58.9008, 51.2303, -65.9182, 1.33 ) }
    dend_38 { pt3dadd( -60.1123, 52.5626, -66.8663, 0.33 ) }
    dend_38 { pt3dadd( -60.3402, 52.8271, -67.0569, 0.67 ) }
    dend_38 { pt3dadd( -61.062, 53.6405, -67.7283, 0.33 ) }
    dend_38 { pt3dadd( -61.0967, 53.6783, -67.759, 0.67 ) }
    dend_38 { pt3dadd( -63.0002, 55.2856, -69.111, 0.33 ) }
    dend_38 { pt3dadd( -63.4847, 55.6005, -69.3707, 1.33 ) }
    dend_38 { pt3dadd( -65.5064, 56.6213, -70.7407, 0.33 ) }
    dend_38 { pt3dadd( -66.5703, 57.1105, -71.4645, 0.33 ) }
    dend_38 { pt3dadd( -68.9109, 58.0195, -73.0286, 0.67 ) }
    dend_38 { pt3dadd( -72.2057, 59.1396, -75.1073, 0.33 ) }
    dend_38 { pt3dadd( -72.7227, 59.2643, -75.3893, 0.67 ) }
    dend_38 { pt3dadd( -76.0522, 59.9799, -77.2861, 0.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 82/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 7.51542, 21.9792, -21.5479, 0.33 ) }
    dend_36 { pt3dadd( 10.9076, 25.2589, -22.3523, 0.33 ) }
    dend_36 { pt3dadd( 12.5003, 26.8809, -22.7118, 0.67 ) }
    dend_36 { pt3dadd( 14.6521, 29.1474, -23.1913, 0.33 ) }
    dend_36 { pt3dadd( 14.9534, 29.4557, -23.3024, 0.67 ) }
    dend_36 { pt3dadd( 17.0257, 31.6298, -24.1436, 0.33 ) }
    dend_36 { pt3dadd( 18.8835, 33.5075, -24.7417, 1.33 ) }
    dend_36 { pt3dadd( 22.3303, 36.9885, -25.4755, 0.33 ) }
    dend_36 { pt3dadd( 22.6438, 37.2969, -25.5554, 0.67 ) }
    dend_36 { pt3dadd( 29.0566, 43.7299, -27.1964, 0.33 ) }
    dend_36 { pt3dadd( 30.6443, 45.3646, -27.587, 2.0 ) }
    dend_36 { pt3dadd( 36.3994, 51.4208, -28.9364, 0.33 ) }
    dend_36 { pt3dadd( 39.1666, 54.3917, -29.5969, 2.0 ) }
    dend_36 { pt3dadd( 47.3588, 63.4653, -31.6976, 0.33 ) }
    dend_36 { pt3dadd( 49.064, 65.3941, -32.2094, 1.33 ) }
    dend_36 { pt3dadd( 51.6643, 68.4271, -33.0866, 0.33 ) }
    dend_36 { pt3dadd( 52.439, 69.2924, -33.4467, 0.67 ) }
    dend_36 { pt3dadd( 55.9794, 73.1537, -35.6401, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( 57.4226, 74.5017, -36.6655, 0.67 ) }
    dend_36 { pt3dadd( 61.6389, 77.8018, -39.7442, 0.33 ) }
    dend_36 { pt3dadd( 62.8001, 78.5687, -40.5522, 1.33 ) }
    dend_36 { pt3dadd( 67.2712, 81.1204, -43.4448, 0.33 ) }
    dend_36 { pt3dadd( 68.5234, 81.7241, -44.1851, 1.33 ) }
    dend_36 { pt3dadd( 74.3339, 84.0693, -47.2036, 0.33 ) }
    dend_36 { pt3dadd( 74.7009, 84.1973, -47.3664, 0.67 ) }
    dend_36 { pt3dadd( 78.9598, 85.5237, -48.9532, 0.33 ) }
    dend_36 { pt3dadd( 81.1144, 86.1474, -49.6354, 1.33 ) }
    dend_36 { pt3dadd( 85.9856, 87.4717, -50.7716, 0.33 ) }
    dend_36 { pt3dadd( 87.1481, 87.7637, -51.0723, 0.67 ) }
    dend_36 { pt3dadd( 92.253, 89.022, -52.3769, 0.33 ) }
    dend_36 { pt3dadd( 94.5925, 89.5852, -53.1505, 1.33 ) }
    dend_36 { pt3dadd( 98.6559, 90.5692, -54.7315, 0.33 ) }
    dend_36 { pt3dadd( 100.472, 91.0491, -55.5551, 1.33 ) }
    dend_36 { pt3dadd( 108.769, 93.4008, -59.6072, 0.33 ) }
    dend_36 { pt3dadd( 109.845, 93.709, -60.1289, 1.33 ) }
    dend_36 { pt3dadd( 115.818, 95.4277, -63.0423, 0.33 ) }
    dend_36 { pt3dadd( 117.192, 95.8127, -63.6748, 0.67 ) }
    dend_36 { pt3dadd( 124.135, 97.6619, -66.9898, 0.33 ) }
    dend_36 { pt3dadd( 125.339, 97.9446, -67.5483, 1.33 ) }
    dend_36 { pt3dadd( 132.345, 99.2794, -70.3207, 0.33 ) }
    dend_36 { pt3dadd( 133.481, 99.4601, -70.7207, 0.67 ) }
    dend_36 { pt3dadd( 135.581, 99.7395, -71.3239, 0.33 ) }
    dend_36 { pt3dadd( 139.746, 100.216, -72.2475, 0.67 ) }
    dend_36 { pt3dadd( 142.54, 100.532, -72.6065, 0.33 ) }
    dend_36 { pt3dadd( 143.386, 100.649, -72.7183, 0.67 ) }
    dend_36 { pt3dadd( 147.877, 101.397, -73.0779, 0.33 ) }
    dend_36 { pt3dadd( 148.305, 101.494, -73.1316, 0.67 ) }
    dend_36 { pt3dadd( 153.79, 103.024, -73.978, 0.33 ) }
    dend_36 { pt3dadd( 155.089, 103.43, -74.1572, 0.67 ) }
    dend_36 { pt3dadd( 157.046, 104.111, -74.5637, 0.33 ) }
    dend_36 { pt3dadd( 160.532, 105.247, -75.4437, 0.67 ) }
    dend_36 { pt3dadd( 168.749, 107.817, -77.912, 0.33 ) }
    dend_36 { pt3dadd( 170.15, 108.222, -78.4101, 0.67 ) }
    dend_36 { pt3dadd( 173.297, 109.129, -79.6868, 0.33 ) }
    dend_36 { pt3dadd( 175.526, 109.734, -80.6732, 1.33 ) }
    dend_36 { pt3dadd( 180.195, 110.918, -82.7891, 0.33 ) }
    dend_36 { pt3dadd( 180.743, 111.051, -83.0581, 0.67 ) }
    dend_36 { pt3dadd( 187.273, 112.421, -85.9388, 0.33 ) }
    dend_36 { pt3dadd( 188.383, 112.601, -86.451, 1.33 ) }
    dend_36 { pt3dadd( 192.514, 113.138, -88.5122, 0.33 ) }
    dend_36 { pt3dadd( 193.279, 113.166, -88.9056, 0.67 ) }
    dend_36 { pt3dadd( 196.614, 112.985, -90.734, 0.33 ) }
    dend_36 { pt3dadd( 198.063, 112.667, -91.2952, 0.67 ) }
    dend_36 { pt3dadd( 202.131, 111.048, -92.109, 0.33 ) }
    dend_36 { pt3dadd( 202.131, 111.048, -92.109, 1.33 ) }
    dend_36 { pt3dadd( 206.873, 108.169, -91.7595, 0.33 ) }
    dend_36 { pt3dadd( 207.86, 107.551, -91.6131, 1.33 ) }
    dend_36 { pt3dadd( 214.509, 103.331, -90.0782, 0.33 ) }
    dend_36 { pt3dadd( 214.86, 103.12, -89.9834, 0.67 ) }
    dend_36 { pt3dadd( 218.315, 101.379, -88.9292, 0.33 ) }
    dend_36 { pt3dadd( 218.86, 101.153, -88.7638, 0.67 ) }
    dend_36 { pt3dadd( 222.926, 100.067, -87.537, 0.33 ) }
    dend_36 { pt3dadd( 225.773, 99.6211, -86.8476, 0.33 ) }
    dend_36 { pt3dadd( 226.634, 99.5956, -86.7784, 0.67 ) }
    dend_36 { pt3dadd( 233.202, 99.8394, -86.683, 0.33 ) }
    dend_36 { pt3dadd( 233.64, 99.9366, -86.6877, 0.67 ) }
    dend_36 { pt3dadd( 238.349, 101.606, -86.8178, 0.33 ) }
    dend_36 { pt3dadd( 239.405, 102.203, -86.8699, 0.67 ) }
    dend_36 { pt3dadd( 245.394, 106.624, -87.274, 0.33 ) }
    dend_36 { pt3dadd( 246.404, 107.483, -87.3633, 1.33 ) }
    dend_36 { pt3dadd( 252.769, 114.238, -88.1555, 0.33 ) }
    dend_36 { pt3dadd( 253.654, 115.277, -88.259, 1.33 ) }
    dend_36 { pt3dadd( 255.997, 118.622, -88.4661, 0.33 ) }
    dend_36 { pt3dadd( 256.261, 119.046, -88.4471, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 66/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 7.51542, 21.9792, -21.5479, 0.33 ) }
    dend_33 { pt3dadd( 10.45, 26.9713, -30.0005, 0.33 ) }
    dend_33 { pt3dadd( 10.927, 27.8205, -31.3467, 0.67 ) }
    dend_33 { pt3dadd( 12.4848, 31.3594, -36.9546, 0.33 ) }
    dend_33 { pt3dadd( 13.1985, 33.3558, -40.0173, 0.33 ) }
    dend_33 { pt3dadd( 13.3334, 34.0404, -41.0742, 0.67 ) }
    dend_33 { pt3dadd( 13.5542, 36.4528, -44.6898, 0.33 ) }
    dend_33 { pt3dadd( 13.4296, 37.5564, -46.0893, 0.67 ) }
    dend_33 { pt3dadd( 12.8938, 39.8752, -49.1623, 0.33 ) }
    dend_33 { pt3dadd( 12.6546, 40.5703, -50.1294, 1.33 ) }
    dend_33 { pt3dadd( 11.2581, 43.9906, -55.1904, 0.33 ) }
    dend_33 { pt3dadd( 10.9687, 44.8007, -56.5036, 1.33 ) }
    dend_33 { pt3dadd( 9.95589, 48.2084, -62.2697, 0.33 ) }
    dend_33 { pt3dadd( 9.49008, 50.2059, -65.6743, 2.0 ) }
    dend_33 { pt3dadd( 8.98881, 53.4275, -71.2158, 0.33 ) }
    dend_33 { pt3dadd( 8.93685, 53.8595, -71.9909, 0.67 ) }
    dend_33 { pt3dadd( 8.78185, 58.3129, -80.2523, 0.33 ) }
    dend_33 { pt3dadd( 8.78382, 59.5563, -82.7485, 2.0 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 84/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 4.79122, 6.01308, 7.74732, 0.67 ) }
    dend_29 { pt3dadd( 6.97356, 7.8276, 7.60693, 0.67 ) }
    dend_29 { pt3dadd( 8.04448, 8.71803, 7.53803, 0.33 ) }
    dend_29 { pt3dadd( 10.4783, 10.7416, 7.38146, 1.33 ) }
    dend_29 { pt3dadd( 15.416, 14.8471, 7.06381, 0.67 ) }
    dend_29 { pt3dadd( 20.4916, 19.0672, 6.73728, 0.67 ) }
    dend_29 { pt3dadd( 22.0588, 20.3703, 6.63646, 1.33 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 4.79122, 6.01308, 7.74732, 0.67 ) }
    dend_26 { pt3dadd( 4.74161, 8.30404, 9.53689, 0.67 ) }
    dend_26 { pt3dadd( 4.69527, 10.4443, 11.2087, 0.67 ) }
    dend_26 { pt3dadd( 4.65038, 12.517, 12.8278, 0.67 ) }
    dend_26 { pt3dadd( 4.5586, 16.7558, 16.1389, 0.67 ) }
    dend_26 { pt3dadd( 4.51331, 18.8471, 17.7726, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 97/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.653458, -14.3836, 6.4864, 3.33 ) }
    dend_6 { pt3dadd( 0.237022, -16.3717, 6.12709, 3.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.653458, -14.3836, 6.4864, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -4.78423, -20.5958, 7.35234, 1.33 ) }
    dend_1 { pt3dadd( -7.20124, -24.2307, 7.85903, 1.33 ) }
    dend_1 { pt3dadd( -7.83456, -25.1831, 7.99179, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 3/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.11765, -41.3902, 3.15589, 0.67 ) }
    axon_1 { pt3dadd( 4.39217, -56.336, 3.15589, 0.67 ) }
    axon_1 { pt3dadd( 5.66668, -71.2817, 3.15589, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 8.78382, 59.5563, -82.7485, 0.33 ) }
    dend_35 { pt3dadd( 9.92516, 62.8476, -83.6224, 0.33 ) }
    dend_35 { pt3dadd( 10.3748, 63.7019, -83.9992, 0.67 ) }
    dend_35 { pt3dadd( 12.3401, 67.0233, -85.6238, 0.33 ) }
    dend_35 { pt3dadd( 12.9204, 67.8151, -85.9816, 0.67 ) }
    dend_35 { pt3dadd( 15.7624, 71.4562, -87.5684, 0.33 ) }
    dend_35 { pt3dadd( 16.0366, 71.7861, -87.7037, 0.67 ) }
    dend_35 { pt3dadd( 21.1065, 77.435, -90.2106, 0.33 ) }
    dend_35 { pt3dadd( 21.7927, 78.0878, -90.6305, 1.33 ) }
    dend_35 { pt3dadd( 26.5095, 82.0647, -93.7685, 0.33 ) }
    dend_35 { pt3dadd( 26.8158, 82.3089, -93.9954, 0.67 ) }
    dend_35 { pt3dadd( 29.0322, 84.0286, -95.7059, 0.33 ) }
    dend_35 { pt3dadd( 30.2506, 85.0073, -96.7163, 0.67 ) }
    dend_35 { pt3dadd( 37.3216, 91.0382, -103.206, 0.33 ) }
    dend_35 { pt3dadd( 38.1988, 91.8007, -104.116, 0.67 ) }
    dend_35 { pt3dadd( 42.6283, 95.7513, -109.47, 0.33 ) }
    dend_35 { pt3dadd( 43.673, 96.6205, -110.751, 1.33 ) }
    dend_35 { pt3dadd( 44.7581, 97.4659, -112.162, 0.33 ) }
    dend_35 { pt3dadd( 45.2996, 97.8227, -112.909, 0.67 ) }
    dend_35 { pt3dadd( 49.3769, 100.151, -118.511, 0.33 ) }
    dend_35 { pt3dadd( 51.2991, 101.037, -121.131, 0.67 ) }
    dend_35 { pt3dadd( 56.3439, 103.043, -127.93, 0.33 ) }
    dend_35 { pt3dadd( 58.4843, 103.762, -130.764, 1.33 ) }
    dend_35 { pt3dadd( 65.1461, 105.712, -139.468, 0.33 ) }
    dend_35 { pt3dadd( 67.5271, 106.328, -142.513, 1.33 ) }
    dend_35 { pt3dadd( 74.8561, 107.948, -151.446, 0.33 ) }
    dend_35 { pt3dadd( 75.7848, 108.125, -152.584, 0.67 ) }
    dend_35 { pt3dadd( 77.8824, 108.457, -155.419, 0.33 ) }
    dend_35 { pt3dadd( 79.2401, 108.576, -157.49, 0.67 ) }
    dend_35 { pt3dadd( 81.7389, 108.64, -161.475, 0.33 ) }
    dend_35 { pt3dadd( 82.4387, 108.623, -162.713, 0.67 ) }
    dend_35 { pt3dadd( 85.572, 108.227, -169.297, 0.33 ) }
    dend_35 { pt3dadd( 87.6223, 107.894, -173.946, 0.67 ) }
    dend_35 { pt3dadd( 90.3687, 107.483, -180.947, 0.33 ) }
    dend_35 { pt3dadd( 93.108, 106.782, -188.83, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 41/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 8.78382, 59.5563, -82.7485, 0.33 ) }
    dend_34 { pt3dadd( 6.95317, 60.4253, -86.3702, 0.33 ) }
    dend_34 { pt3dadd( 6.46222, 60.6912, -87.4223, 0.67 ) }
    dend_34 { pt3dadd( 4.95835, 61.7839, -91.8147, 0.33 ) }
    dend_34 { pt3dadd( 4.56553, 62.2177, -93.2525, 0.67 ) }
    dend_34 { pt3dadd( 3.30486, 63.8338, -98.2794, 0.33 ) }
    dend_34 { pt3dadd( 3.00492, 64.2641, -99.5257, 0.67 ) }
    dend_34 { pt3dadd( 2.22143, 65.7131, -103.576, 0.33 ) }
    dend_34 { pt3dadd( 1.31265, 67.7793, -108.714, 1.33 ) }
    dend_34 { pt3dadd( 0.517602, 69.932, -113.424, 0.33 ) }
    dend_34 { pt3dadd( 0.475756, 70.0824, -113.75, 1.33 ) }
    dend_34 { pt3dadd( -0.0803702, 72.1792, -118.05, 0.33 ) }
    dend_34 { pt3dadd( -0.178769, 72.558, -118.789, 1.33 ) }
    dend_34 { pt3dadd( -0.3891, 73.4893, -120.574, 0.33 ) }
    dend_34 { pt3dadd( -0.436529, 73.6906, -120.904, 0.67 ) }
    dend_34 { pt3dadd( -1.499, 78.614, -128.528, 0.33 ) }
    dend_34 { pt3dadd( -1.65729, 79.4793, -129.841, 0.67 ) }
    dend_34 { pt3dadd( -1.86737, 80.8023, -131.82, 0.33 ) }
    dend_34 { pt3dadd( -2.44831, 84.0483, -136.616, 1.33 ) }
    dend_34 { pt3dadd( -3.30311, 88.5535, -143.244, 0.33 ) }
    dend_34 { pt3dadd( -3.37441, 89.0302, -143.924, 0.67 ) }
    dend_34 { pt3dadd( -3.80131, 92.847, -148.988, 0.33 ) }
    dend_34 { pt3dadd( -3.80131, 92.847, -148.988, 0.67 ) }
    dend_34 { pt3dadd( -4.03405, 96.6936, -154.393, 0.33 ) }
    dend_34 { pt3dadd( -4.14339, 97.7979, -155.901, 1.33 ) }
    dend_34 { pt3dadd( -4.47969, 101.018, -160.479, 0.33 ) }
    dend_34 { pt3dadd( -4.55454, 101.514, -161.141, 0.67 ) }
    dend_34 { pt3dadd( -5.33623, 105.27, -165.66, 0.33 ) }
    dend_34 { pt3dadd( -5.51862, 105.948, -166.44, 0.67 ) }
    dend_34 { pt3dadd( -6.61045, 109.121, -169.91, 0.33 ) }
    dend_34 { pt3dadd( -6.90575, 109.819, -170.642, 1.33 ) }
    dend_34 { pt3dadd( -7.78747, 111.473, -172.286, 0.33 ) }
    dend_34 { pt3dadd( -8.10488, 112.021, -172.837, 0.67 ) }
    dend_34 { pt3dadd( -10.2518, 115.354, -176.024, 0.33 ) }
    dend_34 { pt3dadd( -11.186, 116.851, -177.447, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 76/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 22.0588, 20.3703, 6.63646, 0.67 ) }
    dend_31 { pt3dadd( 33.8124, 20.883, 6.34465, 0.67 ) }
    dend_31 { pt3dadd( 38.3121, 21.3189, 5.90257, 0.67 ) }
    dend_31 { pt3dadd( 43.7871, 22.2265, 5.19674, 0.67 ) }
    dend_31 { pt3dadd( 48.7552, 23.2852, 4.51627, 0.67 ) }
    dend_31 { pt3dadd( 51.046, 23.831, 4.19847, 0.67 ) }
    dend_31 { pt3dadd( 55.5341, 24.9359, 3.59917, 0.67 ) }
    dend_31 { pt3dadd( 63.0569, 27.363, 2.93308, 0.67 ) }
    dend_31 { pt3dadd( 67.7726, 29.12, 2.52218, 0.67 ) }
    dend_31 { pt3dadd( 71.2715, 30.6656, 2.35108, 0.33 ) }
    dend_31 { pt3dadd( 72.1505, 31.0699, 2.36146, 0.67 ) }
    dend_31 { pt3dadd( 74.163, 31.9932, 2.46825, 0.33 ) }
    dend_31 { pt3dadd( 79.5617, 34.4185, 3.1114, 0.67 ) }
    dend_31 { pt3dadd( 81.7956, 35.5229, 3.48747, 0.33 ) }
    dend_31 { pt3dadd( 83.0541, 36.119, 3.61452, 0.67 ) }
    dend_31 { pt3dadd( 85.6186, 37.3232, 3.61766, 0.33 ) }
    dend_31 { pt3dadd( 85.6186, 37.3232, 3.61766, 0.67 ) }
    dend_31 { pt3dadd( 89.5965, 39.0819, 3.04594, 0.33 ) }
    dend_31 { pt3dadd( 94.5503, 41.1417, 2.39904, 1.33 ) }
    dend_31 { pt3dadd( 102.693, 44.3868, 1.6119, 0.33 ) }
    dend_31 { pt3dadd( 105.986, 45.5002, 1.36331, 0.67 ) }
    dend_31 { pt3dadd( 112.735, 47.4637, 0.989935, 0.33 ) }
    dend_31 { pt3dadd( 117.009, 48.4213, 0.756296, 1.33 ) }
    dend_31 { pt3dadd( 124.227, 49.4699, 0.453195, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_31 { pt3dadd( 124.858, 49.4939, 0.442, 0.67 ) }
    dend_31 { pt3dadd( 133.624, 48.87, 0.128871, 0.33 ) }
    dend_31 { pt3dadd( 135.374, 48.6031, 0.099373, 1.33 ) }
    dend_31 { pt3dadd( 140.491, 47.394, -0.0617472, 0.33 ) }
    dend_31 { pt3dadd( 142.259, 46.9185, -0.114709, 0.67 ) }
    dend_31 { pt3dadd( 147.468, 45.4658, -0.516394, 0.33 ) }
    dend_31 { pt3dadd( 148.434, 45.2238, -0.591074, 0.67 ) }
    dend_31 { pt3dadd( 152.373, 44.4327, -0.823315, 0.33 ) }
    dend_31 { pt3dadd( 154.329, 44.1586, -0.910966, 0.67 ) }
    dend_31 { pt3dadd( 157.482, 43.9556, -0.969606, 0.33 ) }
    dend_31 { pt3dadd( 159.722, 43.9375, -0.951593, 1.33 ) }
    dend_31 { pt3dadd( 165.534, 44.152, -0.750071, 0.33 ) }
    dend_31 { pt3dadd( 167.536, 44.2056, -0.627563, 2.0 ) }
    dend_31 { pt3dadd( 172.449, 44.3328, -0.224328, 0.33 ) }
    dend_31 { pt3dadd( 174.661, 44.3005, 0.041057, 0.67 ) }
    dend_31 { pt3dadd( 180.728, 43.9585, 1.01339, 0.33 ) }
    dend_31 { pt3dadd( 182.94, 43.675, 1.48312, 0.67 ) }
    dend_31 { pt3dadd( 186.773, 42.9702, 2.51419, 0.33 ) }
    dend_31 { pt3dadd( 187.726, 42.7354, 2.771, 1.33 ) }
    dend_31 { pt3dadd( 193.214, 40.9966, 4.25834, 0.33 ) }
    dend_31 { pt3dadd( 195.007, 40.3157, 4.74328, 1.33 ) }
    dend_31 { pt3dadd( 200.046, 38.1707, 6.07494, 0.33 ) }
    dend_31 { pt3dadd( 202.03, 37.3168, 6.60434, 1.33 ) }
    dend_31 { pt3dadd( 208.428, 34.6345, 8.3062, 0.33 ) }
    dend_31 { pt3dadd( 210.738, 33.8085, 8.84739, 1.33 ) }
    dend_31 { pt3dadd( 218.015, 31.7523, 10.3495, 0.33 ) }
    dend_31 { pt3dadd( 219.778, 31.3748, 10.6727, 0.67 ) }
    dend_31 { pt3dadd( 222.431, 30.9734, 11.1036, 0.33 ) }
    dend_31 { pt3dadd( 223.663, 30.8318, 11.2886, 0.67 ) }
    dend_31 { pt3dadd( 234.241, 29.9854, 12.0902, 0.33 ) }
    dend_31 { pt3dadd( 236.474, 29.8499, 12.1357, 1.33 ) }
    dend_31 { pt3dadd( 241.404, 29.5738, 11.8454, 0.33 ) }
    dend_31 { pt3dadd( 243.628, 29.3656, 11.5623, 0.67 ) }
    dend_31 { pt3dadd( 248.442, 28.7157, 10.6831, 0.33 ) }
    dend_31 { pt3dadd( 254.755, 27.5083, 9.273, 1.33 ) }
    dend_31 { pt3dadd( 258.553, 26.5699, 8.30869, 0.33 ) }
    dend_31 { pt3dadd( 261.572, 25.791, 7.55089, 1.33 ) }
    dend_31 { pt3dadd( 267.802, 24.4226, 6.17396, 0.33 ) }
    dend_31 { pt3dadd( 268.671, 24.2735, 6.02829, 0.67 ) }
    dend_31 { pt3dadd( 271.874, 23.8955, 5.755, 1.33 ) }
    dend_31 { pt3dadd( 276.885, 23.6458, 6.05554, 0.33 ) }
    dend_31 { pt3dadd( 278.284, 23.6482, 6.25255, 0.67 ) }
    dend_31 { pt3dadd( 284.72, 24.0209, 7.89179, 0.33 ) }
    dend_31 { pt3dadd( 286.235, 24.1955, 8.38869, 0.67 ) }
    dend_31 { pt3dadd( 289.153, 24.6456, 9.40234, 0.33 ) }
    dend_31 { pt3dadd( 292.856, 25.4725, 10.9, 1.33 ) }
    dend_31 { pt3dadd( 296.791, 26.5589, 12.7146, 0.33 ) }
    dend_31 { pt3dadd( 299.227, 27.4345, 14.1188, 1.33 ) }
    dend_31 { pt3dadd( 303.031, 29.3922, 16.8917, 0.33 ) }
    dend_31 { pt3dadd( 304.227, 30.3283, 17.9604, 1.33 ) }
    dend_31 { pt3dadd( 306.588, 32.9196, 20.3848, 0.33 ) }
    dend_31 { pt3dadd( 306.993, 33.5267, 20.8889, 0.67 ) }
    dend_31 { pt3dadd( 308.776, 37.0597, 23.6061, 0.33 ) }
    dend_31 { pt3dadd( 309.15, 38.0497, 24.3594, 1.33 ) }
    dend_31 { pt3dadd( 310.743, 44.3857, 29.3664, 0.33 ) }
    dend_31 { pt3dadd( 311.071, 45.7898, 30.4919, 0.67 ) }
    dend_31 { pt3dadd( 311.782, 49.1347, 33.1189, 0.33 ) }
    dend_31 { pt3dadd( 311.947, 49.9044, 33.7336, 0.67 ) }
    dend_31 { pt3dadd( 312.711, 53.3224, 36.4364, 0.33 ) }
    dend_31 { pt3dadd( 313.026, 55.3704, 38.1989, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 60/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 22.0588, 20.3703, 6.63646, 0.33 ) }
    dend_30 { pt3dadd( 23.5784, 22.6701, 7.85454, 0.33 ) }
    dend_30 { pt3dadd( 26.4904, 26.2488, 9.97433, 0.67 ) }
    dend_30 { pt3dadd( 29.6676, 30.2476, 12.3434, 0.67 ) }
    dend_30 { pt3dadd( 31.053, 31.9921, 13.3465, 0.67 ) }
    dend_30 { pt3dadd( 34.6086, 36.3172, 15.8344, 0.67 ) }
    dend_30 { pt3dadd( 38.1049, 40.4386, 18.0995, 0.67 ) }
    dend_30 { pt3dadd( 42.9177, 45.5688, 20.998, 0.67 ) }
    dend_30 { pt3dadd( 45.2342, 47.8943, 22.3363, 0.67 ) }
    dend_30 { pt3dadd( 47.8135, 50.6604, 23.9116, 0.67 ) }
    dend_30 { pt3dadd( 49.3034, 52.2889, 24.9152, 0.67 ) }
    dend_30 { pt3dadd( 52.3349, 55.5537, 26.7953, 0.67 ) }
    dend_30 { pt3dadd( 55.9667, 59.2784, 28.6696, 0.67 ) }
    dend_30 { pt3dadd( 58.9006, 62.4275, 30.1408, 0.67 ) }
    dend_30 { pt3dadd( 63.0889, 66.9821, 32.1495, 0.67 ) }
    dend_30 { pt3dadd( 64.8788, 69.1799, 33.0809, 0.67 ) }
    dend_30 { pt3dadd( 68.3362, 73.6147, 35.0867, 0.67 ) }
    dend_30 { pt3dadd( 69.6053, 75.1955, 35.8349, 0.67 ) }
    dend_30 { pt3dadd( 73.1669, 79.246, 37.9674, 0.67 ) }
    dend_30 { pt3dadd( 74.7929, 80.8442, 39.0501, 0.67 ) }
    dend_30 { pt3dadd( 78.3895, 83.7559, 41.7615, 0.67 ) }
    dend_30 { pt3dadd( 82.1446, 86.4745, 44.7997, 0.67 ) }
    dend_30 { pt3dadd( 85.4186, 88.7836, 47.8475, 0.67 ) }
    dend_30 { pt3dadd( 89.3911, 91.2273, 51.5761, 0.67 ) }
    dend_30 { pt3dadd( 92.887, 92.7746, 54.7134, 0.67 ) }
    dend_30 { pt3dadd( 95.0359, 93.4822, 56.5848, 0.33 ) }
    dend_30 { pt3dadd( 97.7275, 94.0204, 58.8165, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 87/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 4.51331, 18.8471, 17.7726, 0.67 ) }
    dend_28 { pt3dadd( 4.41871, 22.7404, 19.7216, 0.67 ) }
    dend_28 { pt3dadd( 4.48308, 26.4555, 21.963, 0.67 ) }
    dend_28 { pt3dadd( 4.71064, 28.3248, 23.14, 0.67 ) }
    dend_28 { pt3dadd( 4.93319, 29.8278, 24.0591, 0.67 ) }
    dend_28 { pt3dadd( 5.48746, 32.9211, 25.9983, 0.67 ) }
    dend_28 { pt3dadd( 6.14659, 36.2225, 28.0552, 0.67 ) }
    dend_28 { pt3dadd( 6.82017, 39.5175, 30.1885, 0.67 ) }
    dend_28 { pt3dadd( 7.48647, 42.5957, 32.0475, 0.67 ) }
    dend_28 { pt3dadd( 8.35428, 46.5958, 34.5204, 0.67 ) }
    dend_28 { pt3dadd( 8.70748, 48.3833, 35.7266, 0.33 ) }
    dend_28 { pt3dadd( 8.92697, 49.3587, 36.4276, 0.67 ) }
    dend_28 { pt3dadd( 9.17928, 50.5558, 37.2062, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( 9.63292, 53.0034, 38.6802, 0.67 ) }
    dend_28 { pt3dadd( 9.90419, 54.419, 39.5187, 1.33 ) }
    dend_28 { pt3dadd( 10.5197, 57.2161, 41.1048, 0.67 ) }
    dend_28 { pt3dadd( 11.754, 62.7052, 43.9959, 0.67 ) }
    dend_28 { pt3dadd( 12.7183, 67.005, 46.1541, 0.67 ) }
    dend_28 { pt3dadd( 13.505, 70.5051, 47.7526, 0.67 ) }
    dend_28 { pt3dadd( 13.8682, 72.1568, 48.3977, 0.67 ) }
    dend_28 { pt3dadd( 14.1748, 73.6748, 48.9083, 0.67 ) }
    dend_28 { pt3dadd( 14.3909, 74.9755, 49.2814, 1.33 ) }
    dend_28 { pt3dadd( 14.6218, 77.2302, 49.8784, 0.33 ) }
    dend_28 { pt3dadd( 14.8407, 79.5726, 50.4899, 1.33 ) }
    dend_28 { pt3dadd( 14.804, 81.2331, 50.8891, 0.33 ) }
    dend_28 { pt3dadd( 14.6138, 83.3353, 51.4266, 1.33 ) }
    dend_28 { pt3dadd( 14.0636, 87.03, 52.3919, 0.67 ) }
    dend_28 { pt3dadd( 13.7664, 88.6703, 52.8537, 0.33 ) }
    dend_28 { pt3dadd( 13.6032, 89.4752, 53.0867, 0.33 ) }
    dend_28 { pt3dadd( 12.5269, 94.3819, 54.5459, 0.67 ) }
    dend_28 { pt3dadd( 12.1847, 95.8551, 54.9782, 0.33 ) }
    dend_28 { pt3dadd( 11.7064, 97.986, 55.6834, 0.67 ) }
    dend_28 { pt3dadd( 11.3266, 99.9785, 56.3668, 0.67 ) }
    dend_28 { pt3dadd( 11.1043, 101.744, 57.0208, 0.67 ) }
    dend_28 { pt3dadd( 11.0718, 102.874, 57.4709, 0.67 ) }
    dend_28 { pt3dadd( 11.2682, 103.863, 57.9225, 0.67 ) }
    dend_28 { pt3dadd( 12.1281, 106.652, 59.3089, 0.33 ) }
    dend_28 { pt3dadd( 12.5408, 107.599, 59.8383, 0.33 ) }
    dend_28 { pt3dadd( 13.0375, 108.639, 60.4568, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 26/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.51331, 18.8471, 17.7726, 0.67 ) }
    dend_27 { pt3dadd( 3.73348, 20.5802, 19.1074, 0.67 ) }
    dend_27 { pt3dadd( 2.99319, 22.523, 21.081, 0.67 ) }
    dend_27 { pt3dadd( 2.36016, 24.399, 23.3154, 0.67 ) }
    dend_27 { pt3dadd( 2.02909, 25.5598, 24.752, 0.67 ) }
    dend_27 { pt3dadd( 1.80669, 27.2575, 26.6791, 0.67 ) }
    dend_27 { pt3dadd( 1.77499, 29.0484, 28.712, 0.67 ) }
    dend_27 { pt3dadd( 1.86123, 31.7379, 31.8769, 0.67 ) }
    dend_27 { pt3dadd( 1.92264, 33.2964, 33.8415, 0.67 ) }
    dend_27 { pt3dadd( 2.02471, 34.6687, 35.5655, 0.67 ) }
    dend_27 { pt3dadd( 2.28575, 37.3149, 38.6857, 0.67 ) }
    dend_27 { pt3dadd( 2.45514, 39.2267, 40.921, 0.67 ) }
    dend_27 { pt3dadd( 2.46597, 40.7484, 42.6669, 0.67 ) }
    dend_27 { pt3dadd( 2.36873, 41.9538, 43.899, 0.67 ) }
    dend_27 { pt3dadd( 1.90002, 45.6361, 47.2675, 0.67 ) }
    dend_27 { pt3dadd( 1.39415, 48.5618, 49.6121, 0.67 ) }
    dend_27 { pt3dadd( 0.841035, 50.8256, 51.4116, 0.67 ) }
    dend_27 { pt3dadd( 0.448526, 52.5108, 52.6033, 0.67 ) }
    dend_27 { pt3dadd( -0.120353, 55.9534, 54.8658, 0.33 ) }
    dend_27 { pt3dadd( -0.272494, 56.8782, 55.4069, 0.67 ) }
    dend_27 { pt3dadd( -0.803132, 59.1724, 55.9371, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_6 (entry count 47/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 0.237022, -16.3717, 6.12709, 1.33 ) }
    dend_16 { pt3dadd( 0.279739, -19.53, 8.23413, 1.33 ) }
    dend_16 { pt3dadd( 0.328885, -23.1635, 10.6582, 1.33 ) }
    dend_16 { pt3dadd( 0.38686, -27.45, 13.5179, 1.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 0.237022, -16.3717, 6.12709, 0.67 ) }
    dend_7 { pt3dadd( 0.730492, -18.3859, 3.87124, 0.67 ) }
    dend_7 { pt3dadd( 1.81055, -21.6055, 0.654791, 0.67 ) }
    dend_7 { pt3dadd( 2.97594, -24.6488, -2.42016, 0.67 ) }
    dend_7 { pt3dadd( 5.30176, -30.7223, -8.55696, 0.67 ) }
    dend_7 { pt3dadd( 6.43613, -33.6845, -11.5501, 0.67 ) }
    dend_7 { pt3dadd( 7.41969, -36.253, -14.1453, 0.67 ) }
    dend_7 { pt3dadd( 8.89242, -40.6143, -18.5821, 0.67 ) }
    dend_7 { pt3dadd( 9.78629, -42.9259, -20.8877, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 60/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.83456, -25.1831, 7.99179, 0.67 ) }
    dend_3 { pt3dadd( -9.22776, -30.1399, 9.18048, 0.67 ) }
    dend_3 { pt3dadd( -9.65107, -31.6459, 9.54165, 0.67 ) }
    dend_3 { pt3dadd( -10.5168, -34.726, 10.2803, 1.33 ) }
    dend_3 { pt3dadd( -11.8926, -39.6208, 11.4541, 0.67 ) }
    dend_3 { pt3dadd( -12.19, -40.6792, 11.7079, 0.67 ) }
    dend_3 { pt3dadd( -12.7873, -42.804, 12.2175, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 67/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.83456, -25.1831, 7.99179, 0.67 ) }
    dend_2 { pt3dadd( -9.13255, -25.4333, 9.06044, 0.67 ) }
    dend_2 { pt3dadd( -11.6413, -25.7511, 11.1444, 0.67 ) }
    dend_2 { pt3dadd( -13.172, -25.8732, 12.3829, 0.67 ) }
    dend_2 { pt3dadd( -19.7947, -26.2695, 17.5222, 0.67 ) }
    dend_2 { pt3dadd( -23.1142, -26.5242, 19.9676, 0.67 ) }
    dend_2 { pt3dadd( -25.7784, -26.7401, 21.8884, 0.67 ) }
    dend_2 { pt3dadd( -28.5789, -26.7927, 23.9109, 0.33 ) }
    dend_2 { pt3dadd( -30.9679, -26.7051, 25.6206, 0.67 ) }
    dend_2 { pt3dadd( -32.0695, -26.6545, 26.3747, 0.33 ) }
    dend_2 { pt3dadd( -34.1451, -26.5263, 27.4708, 0.67 ) }
    dend_2 { pt3dadd( -36.6406, -26.4968, 28.9537, 0.67 ) }
    dend_2 { pt3dadd( -39.8908, -26.3767, 30.7258, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 80/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 0.38686, -27.45, 13.5179, 1.33 ) }
    dend_18 { pt3dadd( -0.0698795, -30.1829, 13.1324, 1.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 82/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.38686, -27.45, 13.5179, 0.67 ) }
    dend_17 { pt3dadd( -1.18435, -27.0018, 16.9898, 0.67 ) }
    dend_17 { pt3dadd( -4.4152, -25.566, 21.9139, 0.67 ) }
    dend_17 { pt3dadd( -6.15501, -24.8586, 24.0148, 0.67 ) }
    dend_17 { pt3dadd( -9.80056, -23.7043, 27.5367, 0.67 ) }
    dend_17 { pt3dadd( -10.3305, -23.5045, 28.0052, 0.67 ) }
    dend_17 { pt3dadd( -12.136, -22.7167, 29.4549, 0.67 ) }
    dend_17 { pt3dadd( -15.5458, -20.8712, 31.6968, 0.67 ) }
    dend_17 { pt3dadd( -16.903, -19.9497, 32.5268, 0.67 ) }
    dend_17 { pt3dadd( -20.0304, -17.593, 34.6061, 0.67 ) }
    dend_17 { pt3dadd( -22.3341, -15.6912, 36.0248, 0.67 ) }
    dend_17 { pt3dadd( -23.5575, -14.3685, 37.0525, 0.67 ) }
    dend_17 { pt3dadd( -25.5832, -11.7595, 39.1009, 0.67 ) }
    dend_17 { pt3dadd( -26.5877, -10.0835, 40.4137, 0.67 ) }
    dend_17 { pt3dadd( -27.2482, -8.71748, 41.4389, 0.67 ) }
    dend_17 { pt3dadd( -27.8674, -6.93138, 42.7019, 0.67 ) }
    dend_17 { pt3dadd( -29.3557, -2.53916, 46.3393, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 99/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 9.78629, -42.9259, -20.8877, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_11 { pt3dadd( 9.48796, -45.2609, -23.3385, 0.33 ) }
    dend_11 { pt3dadd( 9.40698, -45.8947, -24.0038, 1.33 ) }
    dend_11 { pt3dadd( 8.95686, -49.4176, -27.7014, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 3/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 9.78629, -42.9259, -20.8877, 0.33 ) }
    dend_8 { pt3dadd( 13.0957, -44.0412, -25.7778, 0.33 ) }
    dend_8 { pt3dadd( 13.3236, -44.1008, -26.1016, 0.67 ) }
    dend_8 { pt3dadd( 14.7593, -44.3674, -28.0333, 0.33 ) }
    dend_8 { pt3dadd( 16.0044, -44.5127, -29.591, 1.33 ) }
    dend_8 { pt3dadd( 20.0663, -44.8227, -34.6555, 0.67 ) }
    dend_8 { pt3dadd( 23.9418, -44.9346, -39.2701, 0.33 ) }
    dend_8 { pt3dadd( 25.0727, -44.8852, -40.5447, 0.33 ) }
    dend_8 { pt3dadd( 26.1969, -44.7993, -41.8361, 0.67 ) }
    dend_8 { pt3dadd( 27.9302, -44.6377, -43.8657, 0.33 ) }
    dend_8 { pt3dadd( 30.2378, -44.5395, -46.4568, 1.33 ) }
    dend_8 { pt3dadd( 32.1061, -44.5468, -48.4259, 0.33 ) }
    dend_8 { pt3dadd( 34.0135, -44.7206, -50.3572, 1.33 ) }
    dend_8 { pt3dadd( 37.2968, -45.2217, -53.6552, 0.33 ) }
    dend_8 { pt3dadd( 37.8975, -45.3489, -54.3118, 0.67 ) }
    dend_8 { pt3dadd( 43.5662, -46.8357, -60.7636, 0.33 ) }
    dend_8 { pt3dadd( 44.8104, -47.2267, -62.2428, 2.0 ) }
    dend_8 { pt3dadd( 49.6135, -49.0264, -68.3059, 0.33 ) }
    dend_8 { pt3dadd( 50.1348, -49.2515, -69.0099, 1.33 ) }
    dend_8 { pt3dadd( 53.8045, -51.0951, -74.6418, 0.33 ) }
    dend_8 { pt3dadd( 54.2555, -51.333, -75.3853, 0.67 ) }
    dend_8 { pt3dadd( 56.0195, -52.4555, -78.8121, 0.33 ) }
    dend_8 { pt3dadd( 56.6384, -52.9331, -80.2112, 1.33 ) }
    dend_8 { pt3dadd( 58.4797, -55.0912, -85.9569, 0.33 ) }
    dend_8 { pt3dadd( 59.297, -56.0736, -88.5399, 1.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 28/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -12.7873, -42.804, 12.2175, 0.67 ) }
    dend_5 { pt3dadd( -13.0523, -45.2403, 12.2421, 0.67 ) }
    dend_5 { pt3dadd( -13.4482, -47.1209, 12.4431, 0.67 ) }
    dend_5 { pt3dadd( -13.7547, -48.3342, 12.6136, 0.67 ) }
    dend_5 { pt3dadd( -14.9133, -52.3879, 13.2611, 0.67 ) }
    dend_5 { pt3dadd( -17.1819, -59.6198, 14.6753, 0.67 ) }
    dend_5 { pt3dadd( -18.9826, -64.6966, 15.9104, 0.67 ) }
    dend_5 { pt3dadd( -21.0272, -70.0115, 17.4133, 0.67 ) }
    dend_5 { pt3dadd( -23.6417, -76.6192, 19.468, 0.67 ) }
    dend_5 { pt3dadd( -24.5766, -78.7835, 20.2268, 0.67 ) }
    dend_5 { pt3dadd( -25.8866, -81.264, 21.3579, 0.67 ) }
    dend_5 { pt3dadd( -28.7812, -85.9139, 24.0675, 0.67 ) }
    dend_5 { pt3dadd( -30.0684, -87.8013, 25.3282, 0.67 ) }
    dend_5 { pt3dadd( -32.266, -90.9155, 27.5581, 0.67 ) }
    dend_5 { pt3dadd( -33.094, -92.0559, 28.4425, 0.67 ) }
    dend_5 { pt3dadd( -37.219, -98.0263, 32.909, 0.67 ) }
    dend_5 { pt3dadd( -39.8661, -101.986, 35.7721, 0.67 ) }
    dend_5 { pt3dadd( -41.9389, -105.218, 38.0225, 0.67 ) }
    dend_5 { pt3dadd( -44.3373, -108.994, 40.621, 0.67 ) }
    dend_5 { pt3dadd( -46.1694, -111.999, 42.6352, 0.67 ) }
    dend_5 { pt3dadd( -47.0222, -113.73, 43.7571, 0.67 ) }
    dend_5 { pt3dadd( -47.8714, -116.035, 45.1537, 0.67 ) }
    dend_5 { pt3dadd( -48.6066, -118.341, 46.6357, 0.67 ) }
    dend_5 { pt3dadd( -49.081, -119.813, 47.7049, 0.67 ) }
    dend_5 { pt3dadd( -49.998, -122.239, 49.7589, 0.67 ) }
    dend_5 { pt3dadd( -51.4357, -125.591, 53.3338, 0.67 ) }
    dend_5 { pt3dadd( -52.0913, -127.03, 55.0664, 0.67 ) }
    dend_5 { pt3dadd( -52.8108, -128.548, 57.099, 0.67 ) }
    dend_5 { pt3dadd( -53.6082, -130.029, 59.4142, 0.67 ) }
    dend_5 { pt3dadd( -54.4335, -131.401, 61.7221, 0.33 ) }
    dend_5 { pt3dadd( -55.8062, -132.98, 64.904, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 59/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -12.7873, -42.804, 12.2175, 0.67 ) }
    dend_4 { pt3dadd( -16.5392, -43.1764, 12.1826, 0.67 ) }
    dend_4 { pt3dadd( -21.2747, -43.635, 11.925, 0.67 ) }
    dend_4 { pt3dadd( -26.1969, -44.0804, 11.6122, 0.67 ) }
    dend_4 { pt3dadd( -35.9527, -44.914, 11.2693, 0.67 ) }
    dend_4 { pt3dadd( -40.5419, -45.2515, 11.215, 0.67 ) }
    dend_4 { pt3dadd( -43.119, -45.4409, 11.2542, 0.67 ) }
    dend_4 { pt3dadd( -46.4022, -45.7044, 11.2768, 0.33 ) }
    dend_4 { pt3dadd( -48.6304, -45.852, 11.26, 1.33 ) }
    dend_4 { pt3dadd( -51.8759, -46.0768, 11.3818, 0.33 ) }
    dend_4 { pt3dadd( -55.0345, -46.3885, 11.7538, 0.67 ) }
    dend_4 { pt3dadd( -58.1251, -46.756, 12.2174, 0.33 ) }
    dend_4 { pt3dadd( -62.0875, -47.3047, 12.6284, 0.67 ) }
    dend_4 { pt3dadd( -65.0026, -47.7438, 12.8754, 0.33 ) }
    dend_4 { pt3dadd( -67.2888, -48.1428, 12.9481, 0.67 ) }
    dend_4 { pt3dadd( -73.5784, -49.3898, 12.8425, 0.33 ) }
    dend_4 { pt3dadd( -76.7253, -50.1075, 12.5984, 1.33 ) }
    dend_4 { pt3dadd( -81.7827, -51.327, 12.3235, 0.33 ) }
    dend_4 { pt3dadd( -82.2859, -51.4462, 12.2969, 0.67 ) }
    dend_4 { pt3dadd( -84.8539, -52.0276, 12.1035, 0.33 ) }
    dend_4 { pt3dadd( -85.6534, -52.1784, 11.9855, 0.67 ) }
    dend_4 { pt3dadd( -93.1863, -53.3652, 10.7315, 0.33 ) }
    dend_4 { pt3dadd( -97.3542, -53.8488, 9.75924, 2.0 ) }
    dend_4 { pt3dadd( -104.245, -54.4227, 8.01038, 0.33 ) }
    dend_4 { pt3dadd( -106.724, -54.5754, 7.37325, 1.33 ) }
    dend_4 { pt3dadd( -113.37, -54.8024, 5.67415, 0.33 ) }
    dend_4 { pt3dadd( -113.719, -54.8066, 5.59846, 0.67 ) }
    dend_4 { pt3dadd( -116.9, -54.7356, 4.99863, 0.33 ) }
    dend_4 { pt3dadd( -117.625, -54.7124, 4.88977, 0.67 ) }
    dend_4 { pt3dadd( -122.215, -54.5803, 4.79546, 0.33 ) }
    dend_4 { pt3dadd( -124.096, -54.564, 4.91561, 1.33 ) }
    dend_4 { pt3dadd( -127.091, -54.592, 5.37571, 0.33 ) }
    dend_4 { pt3dadd( -131.983, -54.8208, 6.24961, 1.33 ) }
    dend_4 { pt3dadd( -136.34, -55.1905, 7.16034, 0.33 ) }
    dend_4 { pt3dadd( -137.478, -55.3549, 7.39865, 0.67 ) }
    dend_4 { pt3dadd( -140.527, -55.951, 8.03881, 0.33 ) }
    dend_4 { pt3dadd( -141.22, -56.1476, 8.21366, 0.67 ) }
    dend_4 { pt3dadd( -145.894, -57.8451, 9.59766, 0.33 ) }
    dend_4 { pt3dadd( -147.271, -58.4275, 10.0072, 0.67 ) }
    dend_4 { pt3dadd( -150.779, -59.9877, 10.9055, 0.33 ) }
    dend_4 { pt3dadd( -151.818, -60.4319, 11.1553, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -158.4, -63.149, 12.7059, 0.33 ) }
    dend_4 { pt3dadd( -158.737, -63.2801, 12.7694, 0.67 ) }
    dend_4 { pt3dadd( -162.98, -64.797, 13.419, 0.33 ) }
    dend_4 { pt3dadd( -164.391, -65.294, 13.6158, 1.33 ) }
    dend_4 { pt3dadd( -167.905, -66.5282, 14.0548, 0.33 ) }
    dend_4 { pt3dadd( -170.081, -67.3449, 14.3345, 1.33 ) }
    dend_4 { pt3dadd( -176.326, -69.809, 15.181, 0.33 ) }
    dend_4 { pt3dadd( -177.513, -70.3227, 15.3926, 1.33 ) }
    dend_4 { pt3dadd( -180.036, -71.5145, 15.9993, 0.33 ) }
    dend_4 { pt3dadd( -180.677, -71.809, 16.1762, 0.67 ) }
    dend_4 { pt3dadd( -183.872, -73.2522, 17.1629, 0.33 ) }
    dend_4 { pt3dadd( -184.583, -73.584, 17.4124, 0.67 ) }
    dend_4 { pt3dadd( -187.224, -74.9157, 18.4652, 0.33 ) }
    dend_4 { pt3dadd( -188.744, -75.8458, 18.9496, 1.33 ) }
    dend_4 { pt3dadd( -194.988, -80.2382, 20.5119, 0.33 ) }
    dend_4 { pt3dadd( -195.616, -80.7532, 20.6253, 0.67 ) }
    dend_4 { pt3dadd( -198.821, -83.9209, 20.9119, 0.33 ) }
    dend_4 { pt3dadd( -199.846, -85.1572, 20.8935, 0.67 ) }
    dend_4 { pt3dadd( -203.476, -90.8873, 20.1291, 0.33 ) }
    dend_4 { pt3dadd( -203.616, -91.2148, 20.0305, 1.33 ) }
    dend_4 { pt3dadd( -203.997, -92.8078, 19.2982, 0.33 ) }
    dend_4 { pt3dadd( -204.078, -93.2537, 19.0873, 0.67 ) }
    dend_4 { pt3dadd( -204.251, -94.617, 18.4152, 0.33 ) }
    dend_4 { pt3dadd( -204.314, -95.0647, 18.2019, 0.67 ) }
    dend_4 { pt3dadd( -204.919, -99.2901, 16.4337, 0.33 ) }
    dend_4 { pt3dadd( -205.062, -100.261, 16.0193, 1.33 ) }
    dend_4 { pt3dadd( -205.912, -105.649, 13.6784, 0.33 ) }
    dend_4 { pt3dadd( -205.97, -105.966, 13.5469, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 28/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -0.0698795, -30.1829, 13.1324, 0.67 ) }
    dend_24 { pt3dadd( -0.58169, -38.9879, 12.6982, 0.67 ) }
    dend_24 { pt3dadd( -0.871297, -41.3765, 12.6076, 0.67 ) }
    dend_24 { pt3dadd( -1.66108, -45.456, 12.3041, 0.67 ) }
    dend_24 { pt3dadd( -2.81933, -51.4388, 11.859, 0.67 ) }
    dend_24 { pt3dadd( -4.03891, -57.7384, 11.3903, 0.67 ) }
    dend_24 { pt3dadd( -4.81208, -61.7321, 11.0932, 0.67 ) }
    dend_24 { pt3dadd( -7.15845, -70.3775, 10.8382, 0.67 ) }
    dend_24 { pt3dadd( -10.9191, -83.7491, 10.2887, 0.33 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 37/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.0698795, -30.1829, 13.1324, 0.67 ) }
    dend_19 { pt3dadd( 1.43456, -32.1485, 15.3106, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 39/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.95686, -49.4176, -27.7014, 0.33 ) }
    dend_15 { pt3dadd( 10.478, -51.0557, -28.813, 0.33 ) }
    dend_15 { pt3dadd( 10.9601, -51.4897, -29.3071, 0.67 ) }
    dend_15 { pt3dadd( 12.0464, -52.4497, -30.4197, 0.33 ) }
    dend_15 { pt3dadd( 12.4251, -52.7633, -30.8314, 0.67 ) }
    dend_15 { pt3dadd( 13.6755, -53.7473, -32.1807, 0.33 ) }
    dend_15 { pt3dadd( 17.0354, -56.1556, -35.8627, 1.33 ) }
    dend_15 { pt3dadd( 20.2817, -58.1639, -39.7175, 0.33 ) }
    dend_15 { pt3dadd( 21.0286, -58.5663, -40.6052, 1.33 ) }
    dend_15 { pt3dadd( 23.4951, -59.7434, -43.543, 0.33 ) }
    dend_15 { pt3dadd( 24.0187, -59.9381, -44.1998, 0.67 ) }
    dend_15 { pt3dadd( 26.6462, -60.627, -47.7841, 0.33 ) }
    dend_15 { pt3dadd( 27.9779, -60.8469, -49.6125, 2.0 ) }
    dend_15 { pt3dadd( 29.1281, -60.9304, -51.3174, 0.33 ) }
    dend_15 { pt3dadd( 29.5232, -60.9552, -51.9957, 0.67 ) }
    dend_15 { pt3dadd( 32.4623, -61.1693, -57.5414, 0.33 ) }
    dend_15 { pt3dadd( 34.2147, -61.4217, -61.0585, 1.33 ) }
    dend_15 { pt3dadd( 35.0383, -61.591, -62.812, 0.33 ) }
    dend_15 { pt3dadd( 35.4822, -61.7205, -63.7887, 2.0 ) }
    dend_15 { pt3dadd( 39.3458, -63.1815, -72.7187, 0.33 ) }
    dend_15 { pt3dadd( 39.6669, -63.3404, -73.5312, 2.0 ) }
    dend_15 { pt3dadd( 40.8516, -64.0847, -76.6319, 0.33 ) }
    dend_15 { pt3dadd( 41.3937, -64.5243, -78.1609, 0.67 ) }
    dend_15 { pt3dadd( 42.3442, -65.4669, -81.1016, 0.33 ) }
    dend_15 { pt3dadd( 42.6837, -65.8026, -82.0028, 1.33 ) }
    dend_15 { pt3dadd( 46.8519, -69.9108, -91.1007, 0.33 ) }
    dend_15 { pt3dadd( 48.0072, -70.9102, -93.1438, 0.67 ) }
    dend_15 { pt3dadd( 49.5746, -72.0998, -95.3503, 0.33 ) }
    dend_15 { pt3dadd( 49.8271, -72.2747, -95.6214, 0.67 ) }
    dend_15 { pt3dadd( 54.1632, -74.9311, -99.1428, 0.33 ) }
    dend_15 { pt3dadd( 55.2631, -75.5376, -99.8075, 0.67 ) }
    dend_15 { pt3dadd( 58.058, -76.9738, -100.845, 0.33 ) }
    dend_15 { pt3dadd( 58.6054, -77.2598, -101.023, 0.67 ) }
    dend_15 { pt3dadd( 63.1338, -79.559, -102.447, 0.33 ) }
    dend_15 { pt3dadd( 63.8826, -80.002, -102.54, 1.33 ) }
    dend_15 { pt3dadd( 66.173, -81.5791, -102.288, 0.33 ) }
    dend_15 { pt3dadd( 66.4832, -81.813, -102.151, 0.67 ) }
    dend_15 { pt3dadd( 70.4408, -85.0101, -99.5005, 0.33 ) }
    dend_15 { pt3dadd( 72.0156, -86.3049, -98.2037, 0.67 ) }
    dend_15 { pt3dadd( 76.7529, -90.2932, -93.2596, 0.33 ) }
    dend_15 { pt3dadd( 77.1163, -90.6151, -92.8285, 0.67 ) }
    dend_15 { pt3dadd( 80.7874, -94.0619, -87.613, 0.33 ) }
    dend_15 { pt3dadd( 80.9227, -94.1926, -87.3942, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 82/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.95686, -49.4176, -27.7014, 0.33 ) }
    dend_12 { pt3dadd( 9.49775, -54.3082, -27.0688, 0.33 ) }
    dend_12 { pt3dadd( 9.76653, -56.0564, -26.88, 0.67 ) }
    dend_12 { pt3dadd( 10.7849, -61.7862, -26.3144, 0.33 ) }
    dend_12 { pt3dadd( 11.1665, -63.7437, -26.1388, 0.67 ) }
    dend_12 { pt3dadd( 11.5993, -66.0688, -25.9553, 0.33 ) }
    dend_12 { pt3dadd( 12.0631, -68.8283, -25.7784, 1.33 ) }
    dend_12 { pt3dadd( 12.8341, -73.3496, -25.5573, 0.33 ) }
    dend_12 { pt3dadd( 12.9374, -73.9777, -25.5412, 0.67 ) }
    dend_12 { pt3dadd( 13.3074, -76.3229, -25.552, 0.33 ) }
    dend_12 { pt3dadd( 13.7215, -78.9909, -25.5601, 1.33 ) }
    dend_12 { pt3dadd( 14.565, -84.3363, -25.9137, 0.33 ) }
    dend_12 { pt3dadd( 14.8049, -85.7135, -26.0867, 0.67 ) }
    dend_12 { pt3dadd( 15.3991, -88.8306, -26.6202, 0.33 ) }
    dend_12 { pt3dadd( 15.7858, -90.3445, -27.0162, 0.67 ) }
    dend_12 { pt3dadd( 16.7935, -93.6118, -28.0966, 0.33 ) }
    dend_12 { pt3dadd( 18.4327, -97.7359, -29.6618, 0.67 ) }
    dend_12 { pt3dadd( 20.57, -102.257, -31.6982, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( 21.4466, -103.892, -32.463, 1.33 ) }
    dend_12 { pt3dadd( 25.2238, -110.216, -35.5266, 0.33 ) }
    dend_12 { pt3dadd( 25.4631, -110.588, -35.6992, 0.67 ) }
    dend_12 { pt3dadd( 27.2944, -113.224, -36.8219, 0.33 ) }
    dend_12 { pt3dadd( 28.8488, -115.325, -37.4901, 2.0 ) }
    dend_12 { pt3dadd( 31.2062, -118.221, -38.4413, 0.33 ) }
    dend_12 { pt3dadd( 31.4801, -118.561, -38.5295, 0.67 ) }
    dend_12 { pt3dadd( 33.1789, -120.821, -39.0158, 0.33 ) }
    dend_12 { pt3dadd( 33.5052, -121.338, -39.1636, 0.67 ) }
    dend_12 { pt3dadd( 35.0689, -124.308, -40.1236, 0.33 ) }
    dend_12 { pt3dadd( 35.7767, -125.867, -40.615, 0.67 ) }
    dend_12 { pt3dadd( 37.1747, -129.692, -41.6714, 0.33 ) }
    dend_12 { pt3dadd( 38.1265, -132.613, -42.2995, 1.33 ) }
    dend_12 { pt3dadd( 40.0333, -139.215, -43.4401, 0.33 ) }
    dend_12 { pt3dadd( 40.2806, -140.077, -43.5331, 0.67 ) }
    dend_12 { pt3dadd( 41.3321, -143.726, -43.6975, 0.33 ) }
    dend_12 { pt3dadd( 42.5377, -147.656, -43.5723, 1.33 ) }
    dend_12 { pt3dadd( 43.9318, -151.871, -43.1301, 0.33 ) }
    dend_12 { pt3dadd( 44.2307, -152.681, -42.9832, 0.67 ) }
    dend_12 { pt3dadd( 45.7729, -156.433, -42.1188, 0.33 ) }
    dend_12 { pt3dadd( 46.1925, -157.332, -41.9415, 0.67 ) }
    dend_12 { pt3dadd( 47.4065, -159.61, -41.6015, 0.33 ) }
    dend_12 { pt3dadd( 47.7226, -160.162, -41.5521, 0.67 ) }
    dend_12 { pt3dadd( 50.1893, -164.474, -41.181, 0.33 ) }
    dend_12 { pt3dadd( 51.191, -166.175, -41.0434, 1.33 ) }
    dend_12 { pt3dadd( 52.9347, -169.183, -40.8306, 0.33 ) }
    dend_12 { pt3dadd( 54.808, -172.67, -40.6071, 0.67 ) }
    dend_12 { pt3dadd( 56.3002, -175.492, -40.439, 0.33 ) }
    dend_12 { pt3dadd( 56.6046, -176.057, -40.4018, 0.67 ) }
    dend_12 { pt3dadd( 57.8411, -178.359, -40.2461, 0.33 ) }
    dend_12 { pt3dadd( 58.2413, -179.124, -40.1992, 0.67 ) }
    dend_12 { pt3dadd( 60.925, -184.437, -39.8566, 0.33 ) }
    dend_12 { pt3dadd( 61.5441, -185.71, -39.7694, 0.67 ) }
    dend_12 { pt3dadd( 64.5466, -191.969, -39.3111, 0.33 ) }
    dend_12 { pt3dadd( 65.3243, -193.621, -39.1852, 2.0 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 35/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 59.297, -56.0736, -88.5399, 0.33 ) }
    dend_10 { pt3dadd( 60.5151, -55.7758, -90.3145, 0.33 ) }
    dend_10 { pt3dadd( 60.8539, -55.6838, -90.817, 0.67 ) }
    dend_10 { pt3dadd( 63.7406, -54.8538, -95.1473, 0.33 ) }
    dend_10 { pt3dadd( 64.4503, -54.6597, -95.9691, 1.33 ) }
    dend_10 { pt3dadd( 67.7295, -53.8466, -99.2708, 0.33 ) }
    dend_10 { pt3dadd( 68.3573, -53.716, -99.7962, 0.67 ) }
    dend_10 { pt3dadd( 73.3147, -52.8365, -103.242, 0.33 ) }
    dend_10 { pt3dadd( 74.021, -52.766, -103.669, 1.33 ) }
    dend_10 { pt3dadd( 80.1806, -52.6816, -106.542, 0.33 ) }
    dend_10 { pt3dadd( 81.0527, -52.799, -106.92, 1.33 ) }
    dend_10 { pt3dadd( 84.4747, -53.7947, -108.187, 0.33 ) }
    dend_10 { pt3dadd( 85.0599, -54.0534, -108.416, 1.33 ) }
    dend_10 { pt3dadd( 89.1031, -56.6985, -110.105, 0.33 ) }
    dend_10 { pt3dadd( 89.959, -57.3977, -110.674, 0.67 ) }
    dend_10 { pt3dadd( 92.0918, -59.5536, -112.859, 0.33 ) }
    dend_10 { pt3dadd( 92.3314, -59.7726, -113.13, 0.67 ) }
    dend_10 { pt3dadd( 93.5259, -60.719, -114.501, 0.33 ) }
    dend_10 { pt3dadd( 93.723, -60.8303, -114.706, 0.67 ) }
    dend_10 { pt3dadd( 97.098, -62.0668, -117.701, 0.33 ) }
    dend_10 { pt3dadd( 98.1198, -62.3776, -118.62, 0.67 ) }
    dend_10 { pt3dadd( 98.9978, -62.5756, -119.29, 0.33 ) }
    dend_10 { pt3dadd( 102.004, -63.2074, -121.562, 1.33 ) }
    dend_10 { pt3dadd( 106.834, -64.1143, -125.079, 0.33 ) }
    dend_10 { pt3dadd( 107.381, -64.2215, -125.476, 0.67 ) }
    dend_10 { pt3dadd( 110.843, -64.9335, -127.921, 0.33 ) }
    dend_10 { pt3dadd( 113.977, -65.8196, -130.338, 0.67 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 62/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 59.297, -56.0736, -88.5399, 0.33 ) }
    dend_9 { pt3dadd( 59.7052, -57.9755, -91.2127, 0.33 ) }
    dend_9 { pt3dadd( 59.7996, -58.3324, -91.7387, 0.67 ) }
    dend_9 { pt3dadd( 60.7287, -61.1285, -96.0407, 0.33 ) }
    dend_9 { pt3dadd( 60.8251, -61.4269, -96.5228, 0.67 ) }
    dend_9 { pt3dadd( 61.5316, -63.8029, -100.489, 0.33 ) }
    dend_9 { pt3dadd( 61.5795, -64.0861, -100.987, 0.67 ) }
    dend_9 { pt3dadd( 61.7411, -66.3829, -105.326, 0.33 ) }
    dend_9 { pt3dadd( 61.7432, -66.9545, -106.364, 1.33 ) }
    dend_9 { pt3dadd( 61.654, -69.458, -110.892, 0.33 ) }
    dend_9 { pt3dadd( 61.5733, -70.3273, -112.482, 0.67 ) }
    dend_9 { pt3dadd( 60.9287, -73.8773, -119.205, 0.33 ) }
    dend_9 { pt3dadd( 60.7407, -74.5927, -120.576, 1.33 ) }
    dend_9 { pt3dadd( 60.0208, -76.2488, -123.655, 0.33 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 76/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 1.43456, -32.1485, 15.3106, 0.67 ) }
    dend_23 { pt3dadd( 2.25805, -34.2936, 18.1956, 0.67 ) }
    dend_23 { pt3dadd( 3.3401, -37.0313, 21.5441, 0.67 ) }
    dend_23 { pt3dadd( 4.3383, -38.9201, 23.6435, 0.67 ) }
    dend_23 { pt3dadd( 5.28138, -40.5924, 25.535, 0.67 ) }
    dend_23 { pt3dadd( 5.70402, -41.3358, 26.3485, 0.67 ) }
    dend_23 { pt3dadd( 6.16388, -42.2981, 27.3641, 0.33 ) }
    dend_23 { pt3dadd( 6.74271, -43.6488, 28.7252, 0.67 ) }
    dend_23 { pt3dadd( 7.59148, -45.5572, 30.7434, 0.33 ) }
    dend_23 { pt3dadd( 8.45863, -47.7362, 32.5814, 0.67 ) }
    dend_23 { pt3dadd( 8.75187, -48.65, 33.2871, 0.33 ) }
    dend_23 { pt3dadd( 9.45508, -50.9427, 35.3067, 0.67 ) }
    dend_23 { pt3dadd( 9.95507, -53.4378, 37.8441, 0.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 89/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 1.43456, -32.1485, 15.3106, 0.67 ) }
    dend_20 { pt3dadd( 3.85531, -32.6897, 20.8566, 0.67 ) }
    dend_20 { pt3dadd( 5.55983, -33.0707, 24.7617, 0.67 ) }
    dend_20 { pt3dadd( 8.08487, -33.6352, 30.5466, 0.67 ) }
    dend_20 { pt3dadd( 9.93909, -34.0498, 34.7947, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 94/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 65.3243, -193.621, -39.1852, 0.33 ) }
    dend_14 { pt3dadd( 66.3617, -196.716, -38.7068, 0.33 ) }
    dend_14 { pt3dadd( 66.4304, -196.94, -38.6596, 0.67 ) }
    dend_14 { pt3dadd( 67.4983, -200.687, -37.7958, 0.33 ) }
    dend_14 { pt3dadd( 67.7046, -201.369, -37.6361, 0.67 ) }
    dend_14 { pt3dadd( 68.363, -203.466, -37.1423, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 68.438, -203.695, -37.09, 0.67 ) }
    dend_14 { pt3dadd( 69.1861, -205.842, -36.6569, 0.33 ) }
    dend_14 { pt3dadd( 69.4462, -206.555, -36.5745, 1.33 ) }
    dend_14 { pt3dadd( 70.627, -209.566, -36.4281, 0.33 ) }
    dend_14 { pt3dadd( 70.7489, -209.878, -36.4337, 0.67 ) }
    dend_14 { pt3dadd( 71.5444, -211.779, -36.6384, 0.33 ) }
    dend_14 { pt3dadd( 71.9617, -212.756, -36.8185, 0.67 ) }
    dend_14 { pt3dadd( 73.5749, -216.383, -37.79, 0.33 ) }
    dend_14 { pt3dadd( 73.8547, -217.06, -37.9882, 0.67 ) }
    dend_14 { pt3dadd( 74.3628, -218.43, -38.4241, 0.33 ) }
    dend_14 { pt3dadd( 74.7875, -219.638, -38.8138, 0.67 ) }
    dend_14 { pt3dadd( 75.2291, -220.964, -39.2483, 0.33 ) }
    dend_14 { pt3dadd( 75.5276, -221.902, -39.5337, 0.67 ) }
    dend_14 { pt3dadd( 76.1156, -223.973, -40.0091, 0.33 ) }
    dend_14 { pt3dadd( 76.3809, -224.984, -40.2469, 1.33 ) }
    dend_14 { pt3dadd( 76.9181, -227.033, -40.7, 0.33 ) }
    dend_14 { pt3dadd( 76.9181, -227.033, -40.7, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 17/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 65.3243, -193.621, -39.1852, 0.67 ) }
    dend_13 { pt3dadd( 65.3704, -195.223, -40.0748, 0.67 ) }
    dend_13 { pt3dadd( 65.3445, -196.287, -40.757, 0.33 ) }
    dend_13 { pt3dadd( 65.3335, -196.689, -40.9944, 0.67 ) }
    dend_13 { pt3dadd( 65.2769, -199.348, -42.4966, 0.33 ) }
    dend_13 { pt3dadd( 65.2807, -199.548, -42.6184, 0.67 ) }
    dend_13 { pt3dadd( 65.4279, -202.813, -44.6687, 0.33 ) }
    dend_13 { pt3dadd( 65.6792, -204.71, -45.9467, 1.33 ) }
    dend_13 { pt3dadd( 66.1089, -206.864, -47.4551, 0.33 ) }
    dend_13 { pt3dadd( 66.1823, -207.128, -47.6316, 0.67 ) }
    dend_13 { pt3dadd( 67.0376, -209.608, -49.1759, 0.33 ) }
    dend_13 { pt3dadd( 67.1506, -209.86, -49.3466, 0.67 ) }
    dend_13 { pt3dadd( 69.0035, -213.162, -51.7029, 0.33 ) }
    dend_13 { pt3dadd( 69.5576, -214.114, -52.3226, 1.33 ) }
    dend_13 { pt3dadd( 70.714, -216.042, -53.5622, 0.33 ) }
    dend_13 { pt3dadd( 71.0548, -216.618, -53.8867, 1.33 ) }
    dend_13 { pt3dadd( 72.7462, -219.538, -55.2767, 0.33 ) }
    dend_13 { pt3dadd( 73.0953, -220.124, -55.5596, 0.67 ) }
    dend_13 { pt3dadd( 74.2298, -221.976, -56.4379, 0.33 ) }
    dend_13 { pt3dadd( 74.4901, -222.387, -56.6407, 1.33 ) }
    dend_13 { pt3dadd( 77.236, -226.622, -58.764, 0.33 ) }
    dend_13 { pt3dadd( 77.6653, -227.275, -59.0751, 0.67 ) }
    dend_13 { pt3dadd( 79.711, -230.391, -60.3525, 0.33 ) }
    dend_13 { pt3dadd( 79.8348, -230.571, -60.4355, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 9.93909, -34.0498, 34.7947, 0.67 ) }
    dend_22 { pt3dadd( 13.0776, -33.912, 36.6074, 0.67 ) }
    dend_22 { pt3dadd( 15.4471, -33.3618, 38.0084, 0.67 ) }
    dend_22 { pt3dadd( 18.2464, -32.5164, 39.7552, 0.67 ) }
    dend_22 { pt3dadd( 22.8356, -30.9144, 42.907, 0.67 ) }
    dend_22 { pt3dadd( 25.1399, -30.0841, 44.709, 0.67 ) }
    dend_22 { pt3dadd( 26.3526, -29.6216, 45.724, 0.67 ) }
    dend_22 { pt3dadd( 32.2223, -27.0486, 50.8507, 0.67 ) }
    dend_22 { pt3dadd( 33.4432, -26.4508, 51.9364, 1.33 ) }
    dend_22 { pt3dadd( 36.2422, -25.0411, 54.4258, 0.67 ) }
    dend_22 { pt3dadd( 39.5952, -23.5483, 57.462, 0.67 ) }
    dend_22 { pt3dadd( 41.3495, -22.8484, 59.0204, 1.33 ) }
    dend_22 { pt3dadd( 43.7702, -22.137, 61.0519, 0.33 ) }
    dend_22 { pt3dadd( 46.0802, -21.6901, 62.9034, 0.67 ) }
    dend_22 { pt3dadd( 47.9479, -21.3851, 64.2494, 0.33 ) }
    dend_22 { pt3dadd( 49.7703, -21.1591, 65.3517, 0.67 ) }
    dend_22 { pt3dadd( 51.1552, -21.0212, 66.0542, 0.33 ) }
    dend_22 { pt3dadd( 52.6568, -20.9641, 66.8936, 0.67 ) }
    dend_22 { pt3dadd( 57.0706, -20.8517, 70.0668, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 60/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 9.93909, -34.0498, 34.7947, 0.67 ) }
    dend_21 { pt3dadd( 9.37239, -35.7225, 39.7921, 0.67 ) }
    dend_21 { pt3dadd( 8.87601, -37.1876, 44.1694, 0.67 ) }
    dend_21 { pt3dadd( 8.44121, -38.4709, 48.0036, 0.67 ) }
    dend_21 { pt3dadd( 7.98888, -39.8061, 51.9925, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_39 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_38 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_36 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_34 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_30 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_28 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_27 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_24 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_12 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_22 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_19 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_7 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_20 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_11 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_23 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_21 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 9
    dend_39 nseg = 5
    dend_38 nseg = 5
    dend_36 nseg = 15
    dend_33 nseg = 3
    dend_35 nseg = 7
    dend_34 nseg = 5
    dend_31 nseg = 17
    dend_30 nseg = 7
    dend_28 nseg = 5
    dend_27 nseg = 3
    dend_17 nseg = 3
    dend_8 nseg = 5
    dend_5 nseg = 5
    dend_4 nseg = 11
    dend_24 nseg = 3
    dend_15 nseg = 7
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_9 nseg = 3
    dend_13 nseg = 3
    dend_22 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L4_BTC_ee19c75ca3_0_0


