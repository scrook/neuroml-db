// Cell: Cell_478513459
/*
{
  "id" : "Cell_478513459",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "387.275, 327.088, 25.237, 11.8876", "393.219, 327.088, 25.237, 11.8876", "399.163, 327.088, 25.237, 11.8876" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "393.219, 327.088, 25.237, 1.0", "399.06, 340.904, 25.237, 1.0", "404.902, 354.72, 25.237, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "394.988, 320.577, 26.5653, 0.6864", "394.555, 318.334, 27.2541, 0.6864", "394.489, 317.214, 27.2689, 0.6844", "394.292, 316.181, 27.0074, 0.8884", "394.44, 315.084, 26.6011, 0.9778", "394.206, 313.998, 26.108, 0.9428", "393.88, 312.971, 25.5962, 0.9396", "393.453, 311.949, 25.1644, 0.8616", "392.962, 310.924, 24.9169, 0.838", "392.469, 309.921, 24.876, 0.6646", "391.977, 308.921, 24.953, 0.515", "391.78, 307.799, 25.0421, 0.5464", "391.571, 306.694, 25.1017, 0.4794", "390.946, 305.77, 25.1362, 0.505", "390.09, 305.014, 25.132, 0.5106", "389.39, 304.122, 25.095, 0.4954", "388.825, 303.127, 25.0415, 0.593", "388.297, 302.117, 24.9791, 0.621", "387.898, 301.059, 24.8763, 0.5002", "387.541, 299.996, 24.7184, 0.4262", "387.302, 298.888, 24.5798, 0.4778", "387.246, 297.747, 24.5031, 0.573", "387.259, 296.613, 24.5171, 0.521", "387.395, 295.501, 24.6067, 0.391", "387.779, 294.43, 24.7192, 0.3118", "388.362, 293.457, 24.866, 0.2966", "388.954, 292.492, 24.9763, 0.315", "389.532, 291.517, 25.0578, 0.3514", "390.28, 290.666, 25.172, 0.4088", "391.144, 289.923, 25.3002, 0.5638", "391.854, 289.05, 25.4274, 0.615", "392.175, 287.976, 25.5559, 0.4836" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "390.65, 331.848, 19.773, 0.2288", "389.576, 332.013, 20.3465, 0.3724", "388.482, 331.72, 20.5475, 0.332", "387.573, 331.317, 20.9468, 0.2966", "386.903, 331.034, 21.6003, 0.2684", "386.161, 330.252, 22.1486, 0.2626", "385.9, 329.161, 22.4815, 0.2542", "385.988, 328.096, 22.5462, 0.2288", "386.394, 327.039, 22.4882, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "393.876, 333.762, 25.3604, 0.2288", "394.214, 334.832, 25.7922, 0.4418", "394.617, 335.852, 26.0053, 0.6566", "395.18, 336.826, 26.2237, 0.6326", "395.644, 337.854, 26.3903, 0.5806" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "392.44, 320.68, 27.8664, 0.6864", "392.689, 319.575, 28.2153, 0.645", "392.797, 318.459, 28.3632, 0.59", "393.076, 317.547, 28.7176, 0.6026", "393.047, 316.485, 29.1281, 0.5286", "392.347, 315.623, 29.4255, 0.4054", "391.52, 314.939, 29.4809, 0.3378", "390.951, 314.018, 29.3605, 0.3466", "391.016, 312.876, 29.227, 0.3986", "391.319, 311.773, 29.1186, 0.5512", "391.27, 310.635, 29.1021, 0.5598", "390.82, 309.618, 29.2494, 0.5366", "390.104, 308.762, 29.36, 0.4544", "389.613, 307.75, 29.5316, 0.491", "389.72, 306.68, 29.8488, 0.5566", "389.876, 305.639, 30.2658, 0.4598", "389.471, 304.639, 30.7031, 0.4274", "388.978, 303.628, 30.9613, 0.3398", "388.66, 302.551, 31.1206, 0.3112", "388.682, 301.421, 31.262, 0.295", "389.016, 300.394, 31.2922, 0.3132", "389.594, 299.511, 31.3379, 0.3422", "389.602, 298.428, 31.5986, 0.4204", "389.538, 297.416, 32.0849, 0.4462", "389.568, 296.517, 32.8034, 0.3856", "389.649, 295.5, 33.5404, 0.3432", "389.485, 294.419, 34.1104, 0.3802", "389.197, 293.351, 34.5254, 0.3464", "389.308, 292.238, 34.8698, 0.3244", "389.177, 291.195, 35.2682, 0.3146", "388.691, 290.264, 35.8173, 0.3744", "388.236, 289.423, 36.5778, 0.3356", "388.27, 288.845, 37.5816, 0.3034", "388.903, 288.056, 38.5227, 0.281", "389.428, 287.085, 39.3372, 0.2864", "389.867, 286.037, 39.9468, 0.2962", "389.916, 284.935, 40.2581, 0.3158", "389.658, 283.833, 40.3878, 0.3468", "389.722, 282.716, 40.5101, 0.4288", "389.79, 281.6, 40.7008, 0.4628", "389.498, 280.497, 40.8738, 0.41", "389.23, 279.385, 41.0491, 0.4196", "389.165, 278.244, 41.2406, 0.3732", "389.455, 277.143, 41.4686, 0.3686", "389.315, 276.048, 41.7864, 0.4222", "388.975, 274.957, 42.0826, 0.4498", "388.66, 273.858, 42.3724, 0.3906", "388.659, 272.717, 42.6787, 0.3602", "388.828, 271.663, 43.1043, 0.3752", "388.163, 270.76, 43.5478, 0.5134", "387.27, 270.157, 44.0594, 0.464", "386.801, 269.233, 44.6152, 0.4828", "386.699, 268.196, 45.148, 0.4396", "386.412, 267.099, 45.5907, 0.5104", "386.06, 266.026, 45.9978, 0.594", "385.852, 264.922, 46.3028, 0.5246", "385.605, 263.844, 46.6136, 0.5678", "385.366, 262.776, 47.0014, 0.5018", "385.016, 261.707, 47.3967, 0.403", "384.454, 260.719, 47.7596, 0.3332", "383.687, 259.88, 48.1051, 0.3382", "383.425, 258.87, 48.517, 0.3818", "383.492, 257.758, 48.9555, 0.5254", "383.304, 256.667, 49.415, 0.4884", "383.436, 255.552, 49.8305, 0.5168", "383.748, 254.453, 50.2009, 0.5578", "384.005, 253.342, 50.5604, 0.462", "384.065, 252.252, 50.9919, 0.4312", "384.498, 251.337, 51.5452, 0.3466", "384.585, 250.319, 52.0108, 0.3246", "384.681, 249.187, 52.4717, 0.315", "384.777, 248.056, 52.929, 0.375", "384.955, 246.937, 53.384, 0.337", "385.22, 245.833, 53.8462, 0.3056", "385.487, 244.729, 54.3402, 0.285", "385.753, 243.625, 54.8971, 0.2938", "386.174, 242.63, 55.5901, 0.3112", "386.595, 241.633, 56.3886, 0.3382", "386.976, 240.798, 57.365, 0.413", "387.352, 239.99, 58.4704, 0.4326", "387.611, 239.055, 59.5672, 0.3592", "387.703, 237.931, 60.5139, 0.3", "387.793, 236.809, 61.3194, 0.2746", "387.885, 235.687, 62.0082, 0.2746", "387.975, 234.565, 62.6066, 0.2746", "388.065, 233.442, 63.1565, 0.2746", "388.157, 232.319, 63.7, 0.2746", "388.247, 231.197, 64.2617, 0.2746", "388.339, 230.074, 64.8441, 0.2746", "388.528, 228.993, 65.4844, 0.2746", "388.768, 227.934, 66.1898, 0.2746", "389.009, 226.874, 66.9402, 0.2746", "389.251, 225.814, 67.7169, 0.2746", "389.492, 224.755, 68.5026, 0.2746", "389.732, 223.695, 69.2815, 0.2746", "390.159, 222.667, 70.0008, 0.2746", "390.625, 221.645, 70.6602, 0.2746", "391.089, 220.624, 71.2743, 0.2746", "391.535, 219.595, 71.8556, 0.2746", "391.916, 218.538, 72.4161, 0.2746", "392.296, 217.481, 72.9686, 0.2746", "392.677, 216.425, 73.5241, 0.2746", "393.057, 215.368, 74.0863, 0.2744", "393.436, 214.311, 74.6561, 0.2744", "393.838, 213.271, 75.2447, 0.2742", "394.281, 212.262, 75.8668, 0.2736", "394.724, 211.252, 76.5092, 0.2728", "395.166, 210.243, 77.1607, 0.2712", "395.609, 209.234, 77.8, 0.2684", "396.052, 208.225, 78.4081, 0.2626", "396.494, 207.216, 78.9698, 0.2542", "397.105, 206.284, 79.4144, 0.2288", "397.845, 205.412, 79.968, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "399.263, 327.465, 25.2, 0.6864", "400.327, 327.884, 25.1227, 0.621", "401.466, 327.984, 25.0922, 0.666", "402.61, 327.984, 25.0499, 0.8446", "403.754, 327.978, 24.9892, 0.9438", "404.897, 327.933, 24.9035, 0.879", "406.006, 327.653, 24.7862, 0.8234" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "397.468, 330.067, 31.0904, 0.6864", "398.094, 330.968, 31.6476, 0.723", "398.854, 331.822, 31.8573, 0.6456", "399.654, 332.639, 32.0586, 0.4514" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "404.902, 354.72, 25.237, 1.0", "410.743, 368.536, 25.237, 1.0", "416.584, 382.352, 25.237, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "392.175, 287.976, 25.5559, 0.4836", "392.715, 287.873, 25.8516, 0.4242", "393.825, 287.716, 26.1022, 0.3338", "394.891, 287.48, 26.3122, 0.3", "395.611, 286.594, 26.4944, 0.2746", "396.358, 285.747, 26.6566, 0.2746", "397.355, 285.202, 26.8206, 0.2746", "398.22, 284.856, 27.1345, 0.2746", "399.36, 284.856, 27.407, 0.2746", "400.501, 284.856, 27.657, 0.2746", "401.643, 284.856, 27.8606, 0.2746", "402.788, 284.849, 28.0123, 0.2746", "403.825, 284.445, 28.1212, 0.2746", "404.836, 283.925, 28.1974, 0.2746", "405.941, 283.635, 28.2783, 0.2746", "407.044, 283.598, 28.4441, 0.2746", "408.188, 283.598, 28.5998, 0.2746", "409.131, 283.18, 28.7882, 0.2746", "410.092, 282.566, 28.9579, 0.2746", "411.096, 282.022, 29.1119, 0.2746", "412.132, 281.996, 29.3675, 0.2746", "413.183, 281.704, 29.5862, 0.2746", "414.324, 281.653, 29.7794, 0.2746", "415.434, 281.502, 29.9734, 0.2748", "416.283, 280.764, 30.1694, 0.2748", "417.142, 280.068, 30.3979, 0.2752", "418.143, 279.583, 30.66, 0.2758", "419.103, 279.067, 30.9613, 0.2766", "420.066, 278.501, 31.2094, 0.2782", "420.982, 277.992, 31.4132, 0.2814", "422.118, 277.878, 31.584, 0.287", "423.262, 277.878, 31.7299, 0.2988", "424.406, 277.878, 31.8637, 0.3142", "425.349, 277.878, 32.2115, 0.3734", "426.481, 277.878, 32.5262, 0.3338", "427.625, 277.878, 32.7743, 0.3", "428.746, 277.764, 32.9602, 0.2746", "429.786, 277.312, 33.1282, 0.2748", "430.202, 276.297, 33.231, 0.2748", "430.613, 275.23, 33.2752, 0.275", "431.042, 274.205, 33.3046, 0.2754", "431.521, 273.177, 33.3248, 0.2762", "432.385, 272.457, 33.3376, 0.2776", "433.035, 271.524, 33.3446, 0.2802", "433.624, 270.657, 33.3547, 0.285", "434.461, 269.97, 33.369, 0.2938", "435.354, 269.267, 33.3883, 0.3112", "436.287, 268.644, 33.4132, 0.3382", "437.43, 268.611, 33.4443, 0.413", "438.508, 268.468, 33.5224, 0.4326", "439.512, 268.031, 33.5947, 0.3592", "440.287, 267.251, 33.6636, 0.3", "441.353, 266.896, 33.731, 0.2746", "442.481, 266.799, 33.8293, 0.2746", "443.557, 266.422, 33.9279, 0.2746", "444.624, 266.011, 34.0194, 0.2746", "445.562, 265.411, 34.1687, 0.2746", "446.599, 264.947, 34.3084, 0.2746", "447.624, 264.455, 34.4235, 0.2746", "448.591, 263.898, 34.5173, 0.2746", "449.396, 263.166, 34.5971, 0.2746", "450.521, 263.111, 34.7074, 0.2746", "451.428, 262.578, 34.8387, 0.2746", "452.189, 261.867, 34.9518, 0.2746", "453.305, 261.689, 35.0482, 0.2746", "454.086, 260.88, 35.1324, 0.2746", "454.918, 260.145, 35.2769, 0.2746", "455.772, 259.4, 35.3797, 0.2746", "456.673, 258.737, 35.4505, 0.2746", "457.552, 258.03, 35.4987, 0.2746", "458.657, 257.74, 35.5256, 0.2746", "459.766, 257.502, 35.5328, 0.2746", "460.868, 257.242, 35.5216, 0.2746", "461.803, 256.662, 35.506, 0.2746", "462.764, 256.15, 35.4844, 0.2746", "463.822, 255.938, 35.4561, 0.2746", "464.242, 254.946, 35.4211, 0.2746", "464.744, 253.955, 35.3396, 0.2746", "465.722, 253.51, 35.2663, 0.2746", "466.451, 252.523, 35.1602, 0.2746", "467.553, 252.228, 35.0734, 0.2746", "468.602, 251.842, 35.0036, 0.2746", "469.154, 251.043, 34.9488, 0.2746", "469.912, 250.272, 34.9065, 0.2746", "471.001, 249.975, 34.8471, 0.2746", "471.866, 249.275, 34.7763, 0.2746", "472.53, 248.345, 34.7105, 0.2746", "473.196, 247.429, 34.6472, 0.2746", "473.792, 246.474, 34.5853, 0.2748", "474.198, 245.41, 34.5111, 0.2748", "474.455, 244.305, 34.4148, 0.275", "474.877, 243.257, 34.2854, 0.2754", "475.163, 242.196, 34.1432, 0.2762", "476.001, 241.452, 34.0354, 0.2776", "476.701, 240.552, 33.9592, 0.2802", "477.555, 239.79, 33.9125, 0.285", "478.389, 239.009, 33.8898, 0.2938", "479.056, 238.081, 33.8839, 0.3112", "479.763, 237.186, 33.8853, 0.3382", "480.453, 236.273, 33.8876, 0.413", "481.1, 235.34, 33.8906, 0.4326", "481.753, 234.409, 33.8948, 0.3592", "482.615, 233.672, 33.9007, 0.3", "483.411, 232.854, 33.9091, 0.2746", "484.263, 232.098, 33.9209, 0.2748", "485.126, 231.35, 33.9371, 0.2748", "485.514, 230.349, 33.9598, 0.2752", "486.197, 229.497, 33.9909, 0.2758", "487.255, 229.071, 34.036, 0.2766", "488.017, 228.262, 34.1001, 0.2782", "488.81, 227.499, 34.1872, 0.2814", "489.697, 226.78, 34.2994, 0.287", "490.674, 226.204, 34.4473, 0.2988", "491.579, 225.708, 34.7754, 0.3142", "492.642, 225.389, 35.0952, 0.3734", "493.669, 225.075, 35.4522, 0.3338", "494.557, 224.37, 35.7739, 0.3", "495.473, 223.691, 36.0203, 0.2746", "496.138, 222.857, 36.2337, 0.2746", "496.153, 221.713, 36.3745, 0.2746", "496.289, 220.61, 36.4798, 0.2746", "497.23, 219.965, 36.5616, 0.2746", "497.984, 219.14, 36.6792, 0.2746", "498.68, 218.241, 36.7867, 0.2746", "499.3, 217.291, 36.9155, 0.2746", "500.205, 216.643, 37.0462, 0.2746", "500.906, 215.874, 37.245, 0.2746", "501.827, 215.237, 37.4055, 0.2746", "502.662, 214.468, 37.5295, 0.2746", "503.233, 213.527, 37.6516, 0.2746", "503.967, 212.88, 37.793, 0.2746", "504.39, 211.9, 37.8874, 0.2746", "504.749, 210.835, 37.9389, 0.2746", "505.791, 210.404, 37.9635, 0.2746", "506.495, 209.527, 37.9602, 0.2746", "507.258, 208.703, 37.926, 0.2746", "508.243, 208.224, 37.8633, 0.2746", "509.025, 207.408, 37.7801, 0.2746", "509.767, 206.652, 37.674, 0.2746", "510.636, 206.037, 37.4996, 0.2746", "511.528, 205.535, 37.1952, 0.2746", "512.336, 204.734, 36.9158, 0.2746", "513.205, 204.014, 36.6198, 0.2746", "514.127, 203.349, 36.3138, 0.2746", "515.0, 202.678, 35.9713, 0.2746", "515.93, 202.215, 35.6174, 0.2746", "516.847, 201.572, 35.2948, 0.2746", "517.629, 200.782, 35.037, 0.2746", "518.771, 200.732, 34.8373, 0.2746", "519.262, 199.905, 34.5649, 0.2746", "519.636, 199.031, 34.3661, 0.2746", "520.756, 198.827, 34.2182, 0.2746", "521.894, 198.761, 34.1015, 0.2746", "522.982, 198.436, 34.0024, 0.2746", "524.12, 198.363, 33.9128, 0.2746", "525.059, 197.802, 33.784, 0.2746", "525.916, 197.055, 33.6409, 0.2746", "526.654, 196.188, 33.4802, 0.2746", "527.632, 195.596, 33.3015, 0.2746", "528.513, 195.06, 32.9708, 0.2746", "529.38, 194.628, 32.5693, 0.2744", "529.722, 193.679, 32.1283, 0.2744", "529.786, 192.54, 31.7727, 0.2742", "529.151, 191.727, 31.4734, 0.2736", "528.795, 190.8, 31.2718, 0.2728", "528.128, 189.875, 31.1609, 0.2712", "527.613, 188.886, 31.108, 0.2684", "527.296, 187.862, 31.0887, 0.2626", "526.926, 186.93, 31.0806, 0.2542", "525.795, 186.871, 31.08, 0.2288", "525.554, 185.786, 31.08, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "392.175, 287.976, 25.5559, 0.4836", "391.879, 286.882, 25.2059, 0.2288", "391.383, 285.854, 25.4318, 0.3804", "391.066, 284.759, 25.5234, 0.493", "391.191, 283.67, 25.7202, 0.5726", "391.367, 282.542, 25.8908, 0.6592", "391.484, 281.441, 25.9431, 0.66", "391.897, 280.384, 25.9994, 0.521", "392.226, 279.336, 26.1716, 0.488", "392.215, 278.273, 26.4555, 0.4784", "392.618, 277.221, 26.7039, 0.44", "393.083, 276.187, 26.885, 0.4694", "393.194, 275.061, 26.9973, 0.4924", "393.215, 273.927, 26.9676, 0.4592", "393.326, 272.828, 26.7576, 0.5374", "393.729, 271.78, 26.4824, 0.4614", "394.253, 270.763, 26.2167, 0.4784", "394.836, 269.779, 25.9703, 0.431", "395.592, 268.937, 25.72, 0.4948", "396.119, 268.166, 25.3114, 0.5644", "396.367, 267.201, 24.8766, 0.4738", "396.413, 266.116, 24.6523, 0.4544", "396.518, 265.034, 24.6285, 0.3846", "396.482, 263.913, 24.6674, 0.4194", "396.43, 262.783, 24.6674, 0.3728", "396.501, 262.414, 24.7072, 0.368", "396.895, 261.382, 24.7125, 0.4208", "397.644, 260.552, 24.633, 0.4468", "398.419, 259.751, 24.6067, 0.3864", "398.929, 258.769, 24.6372, 0.345", "399.211, 257.675, 24.6123, 0.3834", "399.547, 256.613, 24.4804, 0.3524", "399.981, 255.559, 24.3821, 0.3354", "400.27, 254.484, 24.3813, 0.3348", "400.891, 253.574, 24.2427, 0.413", "401.59, 252.392, 24.0937, 0.4018", "401.879, 251.289, 23.9576, 0.4522", "401.97, 250.149, 23.8193, 0.4296", "402.373, 249.084, 23.6561, 0.4924", "403.096, 248.203, 23.4601, 0.5594", "403.651, 247.24, 23.177, 0.4652", "403.743, 246.159, 22.7889, 0.4368", "403.871, 245.083, 22.3334, 0.3584", "404.434, 244.093, 22.0116, 0.34", "404.997, 243.1, 21.7484, 0.374", "405.589, 241.811, 21.4603, 0.3352", "406.016, 240.75, 21.3027, 0.3024", "406.408, 239.71, 21.3212, 0.2792", "407.121, 238.849, 21.4001, 0.2828", "407.906, 238.103, 21.378, 0.291", "407.998, 237.069, 21.3713, 0.2994", "407.997, 236.016, 21.5631, 0.3476", "408.718, 235.18, 21.786, 0.2796", "409.8, 235.308, 22.4554, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "395.644, 337.854, 26.3903, 0.5806", "395.938, 338.924, 26.3872, 0.52", "396.111, 340.031, 26.2427, 0.4634", "396.041, 341.152, 26.0084, 0.545", "395.703, 342.212, 25.6838, 0.475", "395.6, 343.335, 25.384, 0.5046", "395.402, 344.314, 24.9774, 0.474", "395.4, 345.034, 24.7251, 0.6016", "395.242, 346.15, 24.6392, 0.6314", "395.157, 347.29, 24.6086, 0.5446" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "406.006, 327.653, 24.7862, 0.8234", "407.254, 326.895, 23.2095, 0.4576", "407.423, 325.94, 23.6928, 0.374", "407.512, 324.903, 23.8832, 0.327", "407.886, 323.829, 24.239, 0.3264", "407.862, 322.889, 24.9354, 0.3606", "407.807, 322.363, 26.0702, 0.4848", "408.322, 322.012, 27.3882, 0.4174", "409.163, 321.674, 28.8859, 0.365", "410.053, 321.246, 30.3937, 0.3734", "410.227, 320.564, 31.9021, 0.3338", "409.916, 319.829, 33.493, 0.3", "409.635, 319.08, 35.1305, 0.2746", "409.68, 318.167, 36.7623, 0.2746", "409.725, 317.254, 38.3642, 0.2744", "409.948, 316.473, 39.9526, 0.2744", "410.335, 315.81, 41.5206, 0.2742", "410.408, 315.114, 42.9568, 0.2736", "409.974, 314.292, 44.0572, 0.2728", "410.691, 313.4, 44.935, 0.2712", "410.917, 312.399, 45.7864, 0.2684", "411.046, 311.377, 46.639, 0.2626", "411.175, 310.355, 47.4883, 0.2542", "411.306, 309.332, 48.3353, 0.2288", "411.435, 308.31, 50.176, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "406.006, 327.653, 24.7862, 0.8234", "406.66, 327.435, 24.6324, 0.6366", "407.665, 326.905, 24.4152, 0.4686", "408.62, 326.516, 24.0262, 0.4336", "409.634, 326.105, 23.5875, 0.3994", "410.683, 325.737, 23.1582, 0.4166", "411.811, 325.603, 22.8183, 0.5146", "412.903, 325.297, 22.654, 0.605", "413.96, 325.25, 22.7343, 0.757", "415.083, 325.291, 22.9104, 0.6564", "416.155, 325.54, 22.9457, 0.7256", "417.295, 325.611, 22.9426, 0.7576", "418.361, 325.201, 22.9082, 0.8258", "419.525, 324.181, 22.8298, 0.681", "420.517, 323.678, 22.6705, 0.5834", "421.572, 323.95, 22.5047, 0.4878", "422.659, 324.266, 22.4568, 0.5838", "423.795, 324.308, 22.4496, 0.5804", "424.935, 324.228, 22.4924, 0.5388", "425.999, 323.859, 22.633, 0.633", "426.912, 323.238, 22.6951, 0.6626", "427.858, 322.607, 22.8007, 0.736", "428.84, 322.128, 23.0342, 0.7806", "429.938, 322.113, 23.3464, 0.6216", "431.035, 322.393, 23.646, 0.5846", "432.17, 322.403, 23.9148, 0.637", "433.226, 322.042, 24.187, 0.605", "434.247, 321.562, 24.2794, 0.7144", "435.292, 321.146, 24.2066, 0.7852" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "399.654, 332.639, 32.0586, 0.4514", "399.519, 333.267, 35.1585, 0.3718", "399.508, 333.793, 36.4342, 0.3242", "399.313, 334.85, 37.637, 0.314", "398.985, 335.865, 38.8184, 0.3732", "398.492, 336.723, 40.0893, 0.3336", "398.0, 337.579, 41.3997, 0.2994", "397.518, 337.906, 42.8025, 0.2736", "397.041, 337.911, 44.3388, 0.2728", "396.251, 337.264, 45.771, 0.2712", "395.436, 336.567, 47.0442, 0.2684", "394.622, 335.87, 48.1412, 0.2626", "393.807, 335.174, 49.0714, 0.2542", "392.994, 334.464, 49.835, 0.2288", "392.187, 333.666, 50.96, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "399.654, 332.639, 32.0586, 0.4514", "400.43, 333.479, 32.2599, 0.3388", "401.2, 334.306, 32.4696, 0.3004", "402.245, 334.623, 32.7149, 0.3174", "403.15, 334.096, 33.0957, 0.3794", "403.861, 333.316, 33.5852, 0.345", "404.771, 332.909, 34.0774, 0.3206", "405.737, 333.426, 34.4884, 0.3126", "406.52, 334.185, 34.7108, 0.3452", "407.384, 334.872, 34.8449, 0.4036", "408.246, 335.565, 35.0896, 0.5246", "408.903, 336.365, 35.5429, 0.6854", "409.443, 337.285, 36.1556, 0.6052", "410.254, 337.674, 36.8679, 0.4638", "411.253, 337.56, 37.707, 0.3954", "411.909, 338.156, 38.6151, 0.471", "412.318, 339.186, 39.405, 0.5432", "412.78, 340.229, 40.0495, 0.5504", "413.696, 340.506, 40.6608, 0.7202", "414.664, 340.012, 41.251, 0.7346", "415.663, 339.586, 41.8678, 0.6174", "416.693, 339.727, 42.5449, 0.6408", "417.659, 340.286, 43.1942, 0.6584", "418.364, 341.166, 43.7996, 0.5896", "418.758, 342.094, 44.4973, 0.4968", "418.863, 343.016, 45.3051, 0.3846", "419.182, 344.081, 45.9906, 0.3418", "420.091, 344.662, 46.608, 0.3776" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "395.157, 347.29, 24.6086, 0.5446", "395.447, 347.798, 24.6148, 0.388", "396.312, 348.53, 24.6372, 0.306", "396.849, 349.534, 24.6702, 0.2856", "397.207, 350.621, 24.6848, 0.295", "397.825, 351.56, 24.6733, 0.3132", "398.56, 352.434, 24.6512, 0.3418", "399.246, 353.344, 24.649, 0.4196", "399.679, 354.403, 24.6806, 0.4452", "399.904, 355.503, 24.7811, 0.3824", "399.986, 356.629, 24.9592, 0.3434", "400.068, 357.756, 25.1916, 0.3508", "400.151, 358.884, 25.4537, 0.4372", "400.221, 360.025, 25.662, 0.4724", "400.301, 361.167, 25.8171, 0.4582", "400.371, 362.306, 25.9244, 0.3596", "400.259, 363.444, 25.9949, 0.3006", "399.724, 364.283, 26.1069, 0.2758", "399.256, 365.284, 26.1881, 0.2766", "399.256, 366.428, 26.2514, 0.2784", "399.237, 367.571, 26.2987, 0.2818", "399.142, 368.707, 26.3326, 0.288", "399.142, 369.851, 26.3547, 0.2992", "399.142, 370.995, 26.3684, 0.3212", "399.142, 372.139, 26.3886, 0.3566", "399.142, 373.283, 26.4163, 0.4482", "399.296, 374.408, 26.4527, 0.4924", "399.531, 375.518, 26.4981, 0.4964", "399.919, 376.588, 26.5824, 0.426", "400.401, 377.597, 26.7162, 0.4442", "400.905, 378.607, 26.8352, 0.4432", "400.983, 379.742, 26.9424, 0.3786", "401.307, 380.836, 27.0404, 0.3366", "401.658, 381.871, 27.1538, 0.3382", "401.797, 382.999, 27.2759, 0.413", "402.062, 384.076, 27.459, 0.4326", "402.316, 385.182, 27.6153, 0.3592", "402.878, 386.165, 27.75, 0.3", "403.341, 387.182, 27.8684, 0.2746", "403.711, 388.26, 27.9765, 0.2746", "404.27, 389.241, 28.1229, 0.2746", "404.518, 390.344, 28.2654, 0.2746", "404.525, 391.456, 28.4813, 0.2746", "405.074, 392.435, 28.7269, 0.2746", "405.205, 393.566, 28.978, 0.2746", "405.205, 394.71, 29.2396, 0.2746", "405.205, 395.793, 29.6262, 0.2746", "405.205, 396.846, 30.1479, 0.2746", "405.245, 397.955, 30.6799, 0.2746", "405.578, 398.987, 31.2598, 0.2746", "405.662, 400.116, 31.7705, 0.2746", "405.977, 401.201, 32.1933, 0.2746", "406.006, 402.342, 32.5408, 0.2746", "406.006, 403.317, 33.0005, 0.2746", "406.006, 404.367, 33.5261, 0.2746", "406.006, 405.476, 34.0287, 0.2746", "406.006, 406.597, 34.5064, 0.2746", "405.891, 407.727, 34.9129, 0.2746", "405.89, 408.871, 35.2302, 0.2746", "405.583, 409.931, 35.5527, 0.2746", "405.191, 410.957, 35.9089, 0.2746", "404.748, 411.999, 36.2037, 0.2746", "404.013, 412.852, 36.4403, 0.2746", "403.496, 413.86, 36.6699, 0.2748", "402.853, 414.753, 36.8533, 0.2748", "402.763, 415.73, 37.1347, 0.275", "402.456, 416.729, 37.3481, 0.2754", "402.033, 417.756, 37.499, 0.2764", "401.776, 418.866, 37.592, 0.2778", "401.308, 419.88, 37.5959, 0.2808", "400.646, 420.8, 37.5724, 0.2858", "399.853, 421.611, 37.5262, 0.2954", "398.881, 422.209, 37.4853, 0.314", "397.787, 422.513, 37.4522, 0.3432", "396.761, 422.988, 37.3867, 0.4224", "395.872, 423.685, 37.3416, 0.4498", "394.931, 424.309, 37.3097, 0.3924", "393.972, 424.914, 37.291, 0.3556", "393.226, 425.757, 37.2848, 0.4046", "392.188, 426.222, 37.2915, 0.386", "391.169, 426.734, 37.3122, 0.423", "390.224, 427.361, 37.3408, 0.3734", "389.13, 427.696, 37.3814, 0.3988", "388.034, 427.994, 37.4385, 0.3338", "387.632, 428.977, 37.5136, 0.3", "386.722, 429.62, 37.6295, 0.2746", "385.681, 430.018, 37.7698, 0.2746", "385.243, 430.976, 38.017, 0.2748", "384.392, 431.551, 38.3155, 0.2748", "383.361, 431.803, 38.5426, 0.2752", "382.848, 432.783, 38.7024, 0.2758", "381.968, 433.496, 38.7988, 0.2766", "381.367, 434.464, 38.8405, 0.2782", "380.585, 435.294, 38.8349, 0.2814", "379.9, 436.049, 38.7996, 0.287", "379.062, 436.825, 38.7489, 0.2988", "378.234, 437.583, 38.682, 0.3142", "377.53, 438.484, 38.5988, 0.3734", "376.977, 439.472, 38.4986, 0.3338", "376.398, 440.275, 38.1984, 0.3", "376.147, 441.295, 37.9476, 0.2746", "375.987, 442.398, 37.7521, 0.2748", "375.337, 443.286, 37.6076, 0.2748", "374.466, 443.966, 37.5085, 0.2752", "373.682, 444.777, 37.448, 0.2758", "372.864, 445.567, 37.4167, 0.2766", "371.849, 446.046, 37.3741, 0.2782", "370.853, 446.446, 37.3178, 0.2814", "369.839, 446.829, 37.247, 0.287", "368.939, 447.5, 37.135, 0.2988", "368.232, 448.109, 36.9284, 0.3142", "367.139, 448.362, 36.7122, 0.3734", "366.223, 448.902, 36.5397, 0.3338", "365.579, 449.499, 36.3684, 0.3", "365.086, 450.46, 36.2491, 0.2746", "364.502, 451.441, 36.176, 0.2746", "363.728, 452.281, 36.1376, 0.2746", "363.141, 453.259, 36.1206, 0.2746", "362.411, 454.115, 36.1259, 0.2746", "361.303, 454.308, 36.1136, 0.2746", "360.439, 455.024, 36.0763, 0.2746", "359.91, 455.977, 35.992, 0.2744", "359.445, 456.795, 35.7599, 0.2744", "359.494, 457.927, 35.5642, 0.2742", "359.859, 458.948, 35.4054, 0.2736", "360.51, 459.85, 35.2867, 0.2728", "360.589, 460.974, 35.1677, 0.2712", "360.589, 462.118, 35.0918, 0.2684", "360.332, 463.174, 35.0535, 0.2626", "360.131, 464.265, 35.0263, 0.2542", "359.799, 465.258, 35.009, 0.2288", "359.33, 466.294, 35.0, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "395.157, 347.29, 24.6086, 0.5446", "394.593, 348.191, 24.0288, 0.4576", "393.891, 349.023, 23.35, 0.5002", "393.774, 350.149, 23.107, 0.4628", "393.167, 351.082, 22.8763, 0.368", "392.067, 351.113, 22.5425, 0.316", "391.007, 350.685, 22.2471, 0.3038", "390.218, 351.073, 21.9845, 0.331", "389.439, 351.783, 21.6908, 0.3686", "388.468, 352.303, 21.3301, 0.5014", "387.428, 352.552, 20.8768, 0.4416", "386.949, 353.367, 20.4725, 0.4404", "385.9, 353.823, 20.158, 0.365", "384.978, 354.414, 19.8178, 0.3522", "384.013, 355.028, 19.5966, 0.3976", "383.048, 355.641, 19.4762, 0.3736", "382.189, 356.366, 19.4398, 0.399", "381.531, 357.3, 19.4667, 0.3342", "380.873, 358.234, 19.5381, 0.3008", "380.214, 359.168, 19.6454, 0.2762", "379.556, 360.103, 19.7616, 0.2778", "378.898, 361.037, 19.8808, 0.2806", "378.073, 361.808, 19.985, 0.285", "377.83, 362.902, 20.0676, 0.2954", "377.518, 363.567, 20.197, 0.308", "376.828, 364.401, 20.2922, 0.3616", "376.091, 365.164, 20.3588, 0.3134", "375.265, 365.938, 20.4028, 0.2542", "374.889, 366.995, 20.44, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "435.292, 321.146, 24.2066, 0.7852", "435.299, 320.01, 21.4581, 0.2288", "435.326, 319.028, 20.652, 0.2796", "435.588, 317.926, 20.3585, 0.2796", "436.336, 317.064, 20.111, 0.305", "437.079, 316.198, 19.8724, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "435.292, 321.146, 24.2066, 0.7852", "436.087, 321.022, 24.0943, 0.8698", "437.183, 320.693, 23.9624, 0.7956", "438.319, 320.566, 23.8179, 0.6376", "439.408, 320.215, 23.6684, 0.672" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "420.091, 344.662, 46.608, 0.3776", "419.856, 344.583, 47.2704, 0.4576", "420.693, 345.168, 48.7516, 0.3816", "421.531, 345.751, 49.3984, 0.3422", "422.367, 346.335, 50.1458, 0.3486", "422.662, 347.156, 50.8544, 0.4322", "422.339, 348.253, 51.4091, 0.4692", "422.243, 349.387, 51.8277, 0.423", "423.02, 350.222, 52.1329, 0.4384", "423.488, 351.255, 52.4278, 0.4328", "423.955, 352.287, 52.7419, 0.3594", "424.422, 353.32, 53.0998, 0.3004", "424.89, 354.353, 53.5083, 0.2752", "425.356, 355.385, 53.956, 0.276", "426.102, 356.202, 54.4715, 0.277", "426.873, 356.999, 55.0348, 0.279", "427.646, 357.795, 55.6293, 0.2828", "428.417, 358.592, 56.2397, 0.2898", "429.188, 359.39, 56.8523, 0.303", "429.96, 360.186, 57.4552, 0.3278", "430.742, 360.972, 58.0328, 0.3688", "431.723, 361.561, 58.4928, 0.4718", "432.712, 362.102, 58.9254, 0.5312", "433.704, 362.627, 59.3586, 0.594", "434.696, 363.152, 59.7912, 0.483", "435.687, 363.678, 60.2199, 0.465", "436.678, 364.203, 60.6399, 0.4348", "437.67, 364.728, 61.0459, 0.3628", "438.65, 365.285, 61.3967, 0.3068", "439.592, 365.934, 61.6342, 0.287", "440.535, 366.581, 61.7809, 0.2988", "441.479, 367.229, 61.8587, 0.3142", "442.421, 367.877, 61.8867, 0.3734", "443.364, 368.525, 61.8825, 0.3338", "444.307, 369.172, 61.8607, 0.3", "445.249, 369.82, 61.8321, 0.2746", "446.176, 370.491, 61.7912, 0.2746", "447.09, 371.18, 61.731, 0.2746", "448.004, 371.867, 61.644, 0.2746", "448.918, 372.555, 61.5238, 0.2746", "449.802, 373.244, 61.4401, 0.2746" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "420.091, 344.662, 46.608, 0.3776", "420.995, 344.111, 47.1806, 0.3414", "421.976, 343.648, 47.5583, 0.314", "423.084, 343.456, 47.7296, 0.3002", "424.193, 343.623, 47.8072, 0.324", "425.299, 343.909, 47.861, 0.3558", "426.433, 344.001, 47.9083, 0.4762", "427.577, 344.002, 47.9718, 0.4006", "428.72, 344.007, 48.0894, 0.339", "429.823, 344.043, 48.3258, 0.2998", "430.865, 344.309, 48.6727, 0.321", "431.892, 344.623, 48.9115, 0.3622", "432.993, 344.611, 49.0504, 0.43", "434.063, 344.565, 49.2999, 0.5978", "435.133, 344.81, 49.6121, 0.7024", "436.246, 344.944, 49.9327, 0.5266", "437.345, 345.156, 50.2662, 0.3954", "438.467, 345.355, 50.5467, 0.3514", "439.605, 345.462, 50.7447, 0.4446", "440.711, 345.738, 50.8564, 0.456", "441.845, 345.843, 50.9121, 0.5734", "442.982, 345.963, 50.932, 0.5536", "444.085, 346.213, 50.8939, 0.5256", "445.214, 346.233, 50.8388, 0.4312", "446.292, 345.992, 50.9219, 0.461", "447.418, 345.847, 51.0594, 0.4398", "448.561, 345.821, 51.2221, 0.542", "449.701, 345.763, 51.4287, 0.501", "450.777, 345.574, 51.6821, 0.401", "451.814, 345.326, 52.0576, 0.3316", "452.891, 345.1, 52.4334, 0.328", "453.975, 344.797, 52.6907, 0.3988", "455.039, 344.441, 52.8752, 0.383", "456.092, 344.104, 53.1205, 0.3804", "457.129, 343.996, 53.499, 0.475", "458.21, 343.974, 53.9059, 0.3984", "459.339, 343.826, 54.2427, 0.335", "460.47, 343.743, 54.5308, 0.2922", "461.593, 343.917, 54.7635, 0.3068", "462.66, 344.107, 55.0477, 0.3364", "463.67, 344.37, 55.447, 0.3796", "464.719, 344.711, 55.8684, 0.5152", "465.832, 344.916, 56.252, 0.4984", "466.933, 345.151, 56.6087, 0.3966", "467.888, 345.677, 56.8168, 0.3216", "468.895, 346.171, 56.9016, 0.3156", "469.948, 346.615, 56.945, 0.3464", "471.018, 347.016, 57.0016, 0.428", "472.053, 347.431, 57.1525, 0.4618", "472.984, 348.06, 57.3485, 0.4078", "474.014, 348.48, 57.4974, 0.4152", "475.135, 348.533, 57.6036, 0.3654", "476.145, 348.198, 57.8348, 0.3532", "477.172, 347.928, 58.2033, 0.3984", "478.142, 348.441, 58.5483, 0.3824", "479.167, 348.946, 58.8549, 0.3792", "480.21, 349.366, 59.1942, 0.4722", "481.322, 349.476, 59.5445, 0.3934", "482.464, 349.444, 59.806, 0.3254", "483.605, 349.383, 60.0057, 0.2746", "484.733, 349.39, 60.2325, 0.2746", "485.809, 349.048, 60.4694, 0.2746", "486.772, 348.577, 60.5172, 0.2746", "487.424, 348.521, 60.6152, 0.2746", "488.554, 348.452, 60.7832, 0.2746", "489.685, 348.384, 61.0053, 0.2746", "490.816, 348.315, 61.2648, 0.2746", "491.946, 348.246, 61.5572, 0.2746", "493.083, 348.223, 61.8576, 0.2746", "494.225, 348.238, 62.1188, 0.2746", "495.367, 348.253, 62.349, 0.2746", "496.509, 348.268, 62.559, 0.2746", "497.651, 348.283, 62.7592, 0.2746", "498.793, 348.298, 62.9597, 0.2746", "499.935, 348.312, 63.1694, 0.2746", "501.072, 348.362, 63.4007, 0.2746", "502.197, 348.512, 63.6737, 0.2746", "503.321, 348.66, 63.9792, 0.2746", "504.444, 348.809, 64.3079, 0.2746", "505.569, 348.958, 64.6514, 0.2746", "506.694, 349.108, 65.0017, 0.2746", "507.817, 349.256, 65.35, 0.2746", "508.942, 349.405, 65.6894, 0.2746", "510.066, 349.554, 66.017, 0.2746", "511.19, 349.704, 66.3295, 0.2746", "512.314, 349.852, 66.6246, 0.2746", "513.4, 349.636, 66.873, 0.2746", "514.466, 349.22, 67.0676, 0.2746", "515.531, 348.803, 67.2227, 0.2746", "516.596, 348.387, 67.3534, 0.2746", "517.661, 347.97, 67.4741, 0.2746", "518.726, 347.554, 67.5987, 0.2746", "519.769, 347.087, 67.732, 0.2746", "520.796, 346.589, 67.8975, 0.2746", "521.791, 346.049, 68.1349, 0.2746", "522.786, 345.509, 68.4298, 0.2746", "523.783, 344.97, 68.7688, 0.2746", "524.778, 344.43, 69.1396, 0.2746", "525.774, 343.891, 69.5304, 0.2746", "526.77, 343.351, 69.9303, 0.2746", "527.765, 342.811, 70.3315, 0.2746", "528.761, 342.272, 70.7347, 0.2746", "529.757, 341.732, 71.141, 0.2746", "530.752, 341.192, 71.5504, 0.2746", "531.767, 340.695, 71.9667, 0.2746", "532.809, 340.258, 72.3932, 0.2746", "533.85, 339.819, 72.8283, 0.2746", "534.892, 339.383, 73.2715, 0.2746", "535.933, 338.945, 73.722, 0.2746", "536.975, 338.509, 74.1801, 0.2746", "538.018, 338.07, 74.6458, 0.2746", "539.058, 337.633, 75.1223, 0.2746", "540.101, 337.196, 75.6143, 0.2746", "541.142, 336.758, 76.127, 0.2746", "542.184, 336.321, 76.6643, 0.2746", "543.226, 335.884, 77.229, 0.2746", "544.057, 335.223, 77.8912, 0.2746", "544.841, 334.513, 78.6366, 0.2746", "545.627, 333.802, 79.4296, 0.2746", "546.412, 333.092, 80.2399, 0.2744", "547.203, 332.388, 81.039, 0.2744", "548.281, 332.005, 81.6575, 0.2742", "549.359, 331.623, 82.1293, 0.2736", "550.354, 331.135, 82.5168, 0.2728", "551.035, 330.253, 82.9402, 0.2712", "551.716, 329.37, 83.3944, 0.2684", "552.396, 328.488, 83.8743, 0.2626", "553.077, 327.605, 84.3746, 0.2542", "553.757, 326.723, 84.8658, 0.2288", "554.437, 325.84, 85.848, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "439.408, 320.215, 23.6684, 0.672", "440.209, 320.24, 23.3954, 0.748", "441.317, 320.414, 23.1423, 0.6006", "442.406, 320.094, 22.9068, 0.5822", "443.386, 319.693, 22.5954, 0.4562", "444.462, 319.513, 22.3224, 0.4392", "445.501, 319.844, 22.3129, 0.5004", "446.488, 320.067, 22.5714, 0.6226", "447.549, 319.843, 22.9261, 0.5772", "448.659, 319.725, 23.1591, 0.6684", "449.786, 319.605, 23.3775, 0.674", "450.861, 319.316, 23.6306, 0.7894", "451.994, 319.29, 23.8608, 0.7242", "453.073, 319.288, 24.0304, 0.585", "454.217, 319.278, 24.178, 0.415", "455.359, 319.207, 24.3233, 0.3586", "456.463, 318.926, 24.4661, 0.3724", "457.562, 318.856, 24.6831, 0.5082", "458.658, 318.937, 24.9665, 0.4544", "459.713, 319.311, 25.1404, 0.4652", "460.794, 319.646, 25.2249, 0.4054", "461.883, 319.992, 25.3112, 0.4528", "462.989, 320.281, 25.3842, 0.4606", "464.035, 320.703, 25.4033, 0.4058", "464.784, 321.445, 25.6206, 0.4116", "465.482, 322.128, 26.0588, 0.3588", "466.281, 322.905, 26.4846, 0.3406", "467.108, 323.666, 26.7453, 0.3756", "468.005, 324.365, 26.9564, 0.338", "468.894, 325.066, 27.158, 0.3076", "470.003, 325.33, 27.2684, 0.2886", "471.066, 325.7, 27.2731, 0.3002", "472.122, 326.086, 27.2362, 0.323", "473.15, 326.051, 27.2902, 0.359", "474.189, 326.138, 27.5366, 0.4582", "475.073, 326.675, 27.9331, 0.4828", "476.149, 327.064, 28.292, 0.6176", "477.209, 327.483, 28.6185, 0.6624", "478.189, 328.044, 28.94, 0.5964", "479.108, 328.66, 29.2678, 0.5106", "480.082, 329.252, 29.5056, 0.4042", "481.117, 329.736, 29.6663, 0.4088", "482.081, 330.333, 29.766, 0.3522", "482.898, 331.127, 29.8519, 0.3348", "483.754, 331.859, 29.9396, 0.3338", "484.7, 332.492, 29.9701, 0.4098", "485.452, 333.31, 29.9958, 0.4032", "486.136, 334.215, 30.0364, 0.4192", "486.855, 335.057, 29.9452, 0.5408", "487.328, 336.08, 29.8917, 0.5482", "487.882, 337.036, 29.722, 0.478", "489.313, 336.908, 29.3849, 0.4388", "490.426, 337.066, 29.2625, 0.4356", "491.295, 337.702, 29.153, 0.3548", "492.439, 337.709, 29.0942, 0.3398", "493.583, 337.709, 29.0965, 0.3442", "494.716, 337.827, 29.1449, 0.424", "495.787, 338.226, 29.2356, 0.453", "496.734, 338.807, 29.3639, 0.3978", "497.521, 339.598, 29.6044, 0.3674", "497.9, 340.53, 29.9617, 0.4198", "498.711, 341.165, 30.3682, 0.4452", "499.481, 341.906, 30.7076, 0.3834", "500.005, 342.78, 31.0674, 0.3396", "500.763, 343.542, 31.3872, 0.3734", "501.806, 343.845, 31.6226, 0.3338", "502.884, 344.192, 31.7968, 0.3", "503.665, 344.981, 31.9612, 0.2746", "504.116, 345.916, 32.1972, 0.2746", "505.011, 346.593, 32.3806, 0.2748", "505.951, 347.217, 32.571, 0.275", "507.056, 347.433, 32.7272, 0.2752", "508.2, 347.433, 32.8558, 0.2758", "509.344, 347.433, 32.9641, 0.2768", "510.487, 347.466, 33.0756, 0.2786", "511.552, 347.776, 33.2184, 0.2822", "512.696, 347.776, 33.3984, 0.2888", "513.84, 347.776, 33.6244, 0.3006", "514.983, 347.753, 33.8946, 0.3238" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "439.408, 320.215, 23.6684, 0.672", "440.689, 319.747, 24.2105, 0.6864", "441.599, 319.096, 24.1293, 0.599", "442.119, 318.11, 24.0873, 0.4844", "442.273, 317.025, 23.9134, 0.5056", "442.788, 316.055, 23.6558, 0.554", "443.688, 315.364, 23.4346, 0.6016", "444.582, 314.651, 23.273, 0.6652", "445.524, 314.0, 23.17, 0.6722", "446.444, 313.321, 23.1353, 0.537", "447.516, 312.932, 23.1594, 0.5498", "448.648, 313.048, 23.2322, 0.4374", "449.714, 313.351, 23.3996, 0.4332", "450.782, 313.685, 23.5124, 0.3502", "451.706, 313.05, 23.6359, 0.3304", "452.824, 313.138, 23.7026, 0.3318", "453.591, 313.978, 23.6972, 0.3764", "454.2, 314.905, 23.578, 0.4846", "455.073, 315.625, 23.4346, 0.562", "456.136, 316.035, 23.3402, 0.6158", "457.267, 316.195, 23.2957, 0.693", "458.372, 316.469, 23.322, 0.7172", "459.492, 316.596, 23.4475, 0.6536", "460.616, 316.782, 23.5763, 0.6044", "461.713, 317.005, 23.772, 0.637", "462.834, 317.08, 23.9758, 0.5558", "463.942, 317.323, 24.0761, 0.6336", "465.021, 317.699, 24.1332, 0.583", "466.056, 318.181, 24.1738, 0.7504", "467.095, 318.543, 24.2894, 0.708", "468.082, 318.42, 24.2318, 0.7418" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "449.802, 373.244, 61.4401, 0.2746", "449.309, 373.648, 61.1425, 0.2746", "449.606, 374.722, 60.7368, 0.2746", "449.903, 375.796, 60.2515, 0.2746", "450.217, 376.863, 59.715, 0.2746", "450.791, 377.828, 59.1654, 0.2746", "451.365, 378.793, 58.6222, 0.2746", "451.94, 379.758, 58.116, 0.2746", "452.514, 380.722, 57.6349, 0.2746", "453.088, 381.688, 57.1782, 0.2746", "453.947, 382.43, 56.786, 0.2746", "454.82, 383.163, 56.4449, 0.2746", "455.694, 383.897, 56.1425, 0.2746", "456.743, 384.079, 55.8636, 0.2746", "457.878, 383.992, 55.5979, 0.2746", "459.014, 383.906, 55.3367, 0.2746", "460.149, 383.819, 55.0735, 0.2746", "461.285, 383.733, 54.8094, 0.2746", "462.42, 383.646, 54.5462, 0.2746", "463.272, 382.936, 54.2858, 0.2746", "464.083, 382.137, 54.0294, 0.2746", "464.894, 381.337, 53.7779, 0.2746", "465.705, 380.539, 53.5318, 0.2746", "466.596, 379.837, 53.3, 0.2746", "467.563, 379.229, 53.0869, 0.2746", "468.53, 378.622, 52.887, 0.2746", "469.498, 378.014, 52.6932, 0.2746", "470.464, 377.406, 52.4983, 0.2744", "471.432, 376.798, 52.2956, 0.2744", "472.399, 376.191, 52.0792, 0.2742", "473.366, 375.583, 51.8454, 0.2736", "474.31, 374.963, 51.5533, 0.2728", "475.254, 374.344, 51.207, 0.2712", "476.198, 373.724, 50.8292, 0.2684", "477.142, 373.105, 50.4406, 0.2626", "478.087, 372.485, 50.0592, 0.2542", "479.031, 371.865, 49.7, 0.2288", "479.974, 371.246, 49.0, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "449.802, 373.244, 61.4401, 0.2746", "450.686, 373.931, 63.0496, 0.2288", "451.568, 374.62, 63.8893, 0.2746", "452.45, 375.307, 64.248, 0.2746", "453.332, 375.996, 64.6691, 0.2746", "454.214, 376.684, 65.1263, 0.2746", "455.092, 377.383, 65.5872, 0.2746", "455.956, 378.125, 65.9971, 0.2746", "456.82, 378.868, 66.3541, 0.2744", "457.684, 379.611, 66.6722, 0.2744", "458.547, 380.354, 66.9634, 0.2742", "459.411, 381.096, 67.2389, 0.2736", "460.176, 381.899, 67.5094, 0.2728", "460.457, 383.001, 67.7942, 0.2712", "460.738, 384.101, 68.0826, 0.2684", "461.018, 385.203, 68.3659, 0.2626", "461.3, 386.305, 68.6372, 0.2542", "461.58, 387.406, 68.8898, 0.2288", "461.861, 388.507, 69.384, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "514.983, 347.753, 33.8946, 0.3238", "514.799, 347.909, 34.6864, 0.3612", "515.014, 349.03, 35.3556, 0.4564", "515.668, 349.857, 35.9128, 0.5088", "516.502, 350.613, 36.4095, 0.5218", "517.221, 351.485, 36.8365, 0.4976", "517.944, 352.217, 37.263, 0.4582", "519.026, 352.463, 37.6463, 0.3594", "519.54, 353.367, 38.0232, 0.3002", "519.834, 354.388, 38.3972, 0.2748", "519.834, 355.508, 38.806, 0.275", "520.257, 356.197, 39.4027, 0.2752", "520.359, 357.22, 40.0, 0.2758", "520.558, 358.34, 40.4656, 0.2768", "521.02, 359.295, 40.8906, 0.2786", "521.417, 360.289, 41.1844, 0.2824", "522.411, 360.703, 41.3619, 0.289", "523.276, 361.251, 41.4719, 0.3014", "524.411, 361.281, 41.5386, 0.3248", "525.488, 361.561, 41.5696, 0.3648", "526.62, 361.618, 41.5682, 0.4566", "527.633, 362.027, 41.5514, 0.5396", "528.37, 362.847, 41.4602, 0.4332", "529.006, 363.759, 41.3588, 0.3532", "530.104, 363.956, 41.2779, 0.321", "530.835, 364.795, 41.2188, 0.386", "531.803, 365.404, 41.179, 0.3584", "532.843, 365.876, 41.1578, 0.3398", "533.798, 366.484, 41.1519, 0.374", "534.876, 366.864, 41.1488, 0.335", "535.79, 367.517, 41.1421, 0.302", "536.527, 368.361, 41.1281, 0.2782", "537.067, 369.263, 41.1415, 0.2814", "537.973, 369.944, 41.1292, 0.287", "538.928, 370.546, 41.0925, 0.2988", "540.026, 370.752, 40.9716, 0.3142", "541.107, 370.885, 40.7537, 0.3734", "542.251, 370.885, 40.5709, 0.3338", "543.395, 370.885, 40.4225, 0.3", "544.539, 370.885, 40.3127, 0.2746", "545.678, 370.885, 40.21, 0.2746", "546.81, 370.999, 40.1358, 0.2746", "547.954, 370.999, 40.089, 0.2746", "549.091, 370.999, 40.0708, 0.2746", "550.224, 370.885, 40.0364, 0.2746", "551.307, 370.687, 40.0257, 0.2746", "552.349, 370.221, 39.9591, 0.2746", "553.344, 369.978, 39.7096, 0.2746", "553.999, 369.626, 39.2322, 0.2746", "555.111, 369.587, 38.7313, 0.2746", "556.205, 369.347, 38.3135, 0.2748", "557.101, 368.679, 37.935, 0.2748", "558.167, 368.482, 37.571, 0.2752", "559.311, 368.482, 37.3173, 0.2758", "560.446, 368.597, 37.14, 0.2766", "560.863, 368.656, 36.9785, 0.2784", "561.988, 368.831, 36.7931, 0.2816", "563.112, 369.006, 36.5946, 0.2876", "563.986, 368.553, 36.3894, 0.2998", "564.681, 367.651, 36.176, 0.316", "565.376, 366.747, 35.9643, 0.377", "566.097, 365.865, 35.7664, 0.3406", "566.88, 365.032, 35.5956, 0.3128", "567.661, 364.2, 35.4511, 0.2976", "568.442, 363.368, 35.3293, 0.3194", "569.224, 362.536, 35.2282, 0.3476", "570.131, 361.856, 35.1943, 0.4604", "571.079, 361.226, 35.2251, 0.373", "572.028, 360.596, 35.2985, 0.2796", "573.032, 360.075, 35.28, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "514.983, 347.753, 33.8946, 0.3238", "515.883, 347.093, 32.76, 0.2288", "516.943, 346.746, 32.5343, 0.2752", "518.087, 346.746, 32.4509, 0.2758", "519.214, 346.861, 32.3176, 0.2766", "520.344, 346.861, 32.1076, 0.2784", "521.488, 346.861, 31.8917, 0.2818", "522.63, 346.861, 31.6453, 0.288", "523.743, 346.861, 31.2889, 0.3006", "524.764, 346.617, 30.8778, 0.3178", "525.587, 345.852, 30.4634, 0.3802", "526.698, 345.717, 30.0384, 0.3464", "526.725, 345.866, 29.4958, 0.3242", "526.883, 346.538, 28.6513, 0.3142", "527.041, 347.212, 27.6156, 0.3734", "527.116, 348.258, 26.7305, 0.3338", "527.7, 349.211, 26.0215, 0.3", "528.352, 350.141, 25.4853, 0.2746", "528.687, 351.199, 25.1544, 0.2748", "528.833, 352.333, 25.0186, 0.2748", "528.963, 353.47, 25.0054, 0.275", "529.093, 354.606, 25.0494, 0.2754", "529.886, 355.337, 25.1919, 0.2764", "530.803, 355.991, 25.4128, 0.278", "531.761, 356.593, 25.6581, 0.2812", "532.774, 357.119, 25.8804, 0.2864", "533.788, 357.645, 26.0742, 0.2976", "534.802, 358.17, 26.234, 0.3124", "535.816, 358.697, 26.3533, 0.37", "536.794, 359.281, 26.4317, 0.3276", "537.726, 359.946, 26.4695, 0.288", "538.444, 360.818, 26.4645, 0.2542", "539.092, 361.76, 26.4244, 0.2288", "539.738, 362.702, 26.264, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "468.082, 318.42, 24.2318, 0.7418", "469.196, 318.351, 24.0856, 0.7132", "470.306, 318.203, 23.8958, 0.6462", "471.421, 318.168, 23.7734, 0.5908", "472.463, 318.532, 23.7672, 0.6102", "473.559, 318.509, 23.7894, 0.5128", "474.631, 318.124, 23.8246, 0.5222", "475.692, 318.404, 23.8484, 0.5306", "476.781, 318.753, 23.8454, 0.5914", "477.917, 318.796, 23.7938, 0.4832", "479.012, 318.607, 23.6396, 0.4418", "480.023, 318.108, 23.4674, 0.5064", "481.138, 317.894, 23.3433, 0.627", "482.262, 317.684, 23.2736, 0.6166", "483.386, 317.85, 23.2604, 0.5896", "484.484, 318.045, 23.3618, 0.578", "485.587, 318.302, 23.506, 0.5984", "486.718, 318.184, 23.6085, 0.6608", "487.688, 317.592, 23.66, 0.6566" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "468.082, 318.42, 24.2318, 0.7418", "468.06, 319.046, 25.1924, 0.4576", "469.161, 319.269, 25.4184, 0.6114", "470.266, 319.318, 25.5587, 0.7216", "471.37, 319.501, 25.7236, 0.5908", "472.241, 320.178, 25.7978, 0.6054", "473.201, 320.7, 25.7239, 0.5254", "474.224, 321.183, 25.5872, 0.4406", "475.148, 321.847, 25.4526, 0.4306", "476.042, 322.555, 25.3324, 0.3872", "477.04, 323.107, 25.2409, 0.4256", "478.126, 323.458, 25.1877, 0.378", "479.242, 323.586, 25.1804, 0.4074", "480.335, 323.677, 25.177, 0.3496", "481.349, 324.188, 25.1096, 0.3302", "482.332, 324.772, 25.0146, 0.3254", "483.385, 325.157, 24.8945, 0.394", "484.52, 325.198, 24.7254, 0.373", "485.638, 325.033, 24.4986, 0.3684", "486.751, 324.896, 24.2245, 0.4214", "487.878, 325.023, 23.924, 0.4484", "488.992, 324.99, 23.6289, 0.388", "490.101, 324.82, 23.2938, 0.3556", "491.157, 324.868, 22.8402, 0.367", "492.119, 325.243, 22.3101, 0.498", "493.153, 325.62, 21.8291, 0.4358", "494.288, 325.632, 21.4544, 0.43", "495.344, 325.324, 21.0988, 0.3444", "496.419, 325.086, 20.7298, 0.3192", "497.53, 325.128, 20.3529, 0.3112", "498.627, 324.966, 19.9856, 0.3372", "499.75, 324.814, 19.6456, 0.4172", "500.874, 324.811, 19.3096, 0.4104", "501.98, 324.997, 19.0868, 0.4634", "503.077, 324.937, 18.888, 0.4738", "504.176, 324.652, 18.7398, 0.461", "505.301, 324.465, 18.6539, 0.3644", "506.309, 324.903, 18.6155, 0.3098", "507.155, 325.667, 18.6127, 0.2924", "508.046, 326.382, 18.6304, 0.3086", "508.931, 327.106, 18.6754, 0.3324", "509.967, 327.501, 18.7978, 0.4084", "511.083, 327.685, 18.9448, 0.3934", "512.192, 327.804, 18.975, 0.4366", "513.21, 327.351, 18.9364, 0.3988", "514.142, 327.931, 18.9179, 0.4452", "515.143, 328.36, 19.01, 0.4228", "515.739, 328.223, 19.0641, 0.4502", "516.841, 328.433, 19.0803, 0.6246", "517.897, 328.869, 19.059, 0.5772", "518.968, 329.195, 18.9314, 0.4588", "519.981, 328.946, 18.6379, 0.386", "521.036, 328.559, 18.3114, 0.4548", "522.036, 328.098, 18.156, 0.5084", "523.077, 328.032, 18.202, 0.5084", "524.108, 328.338, 18.1149, 0.5338", "525.203, 328.439, 17.668, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "487.688, 317.592, 23.66, 0.6566", "488.161, 317.266, 23.5332, 0.5444", "489.299, 317.231, 23.3974, 0.3874", "490.443, 317.231, 23.2546, 0.305", "491.546, 316.981, 23.1202, 0.284", "492.651, 316.695, 23.0026, 0.292", "493.731, 316.43, 22.8808, 0.3064", "494.734, 316.309, 22.6436, 0.3354", "495.823, 315.98, 22.4549, 0.378", "496.946, 315.858, 22.3118, 0.512", "498.09, 315.858, 22.2118, 0.4926", "499.204, 315.658, 22.1508, 0.3858", "500.331, 315.507, 22.1256, 0.302", "501.389, 315.145, 22.1276, 0.2784", "502.376, 314.737, 22.1306, 0.2816", "502.936, 313.75, 22.1348, 0.2876", "503.964, 313.456, 22.1407, 0.2998", "505.106, 313.421, 22.1491, 0.3158", "506.244, 313.342, 22.1609, 0.3766", "507.388, 313.342, 22.1768, 0.3398", "508.532, 313.342, 22.1992, 0.3112", "509.669, 313.446, 22.232, 0.2952", "510.813, 313.456, 22.2782, 0.313", "511.95, 313.359, 22.3384, 0.345", "513.079, 313.227, 22.4126, 0.408", "514.204, 313.227, 22.5355, 0.509", "515.236, 313.227, 22.7805, 0.7722", "516.149, 313.888, 22.9824, 0.8926", "516.931, 314.722, 23.1473, 0.841", "517.564, 315.67, 23.2887, 0.7038", "518.024, 316.546, 23.3747, 0.654", "518.913, 317.264, 23.4637, 0.7116", "520.042, 317.447, 23.564, 0.776", "520.891, 317.494, 23.7569, 0.6426" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "487.688, 317.592, 23.66, 0.6566", "488.648, 316.971, 24.2642, 0.2288", "489.65, 316.545, 25.0754, 0.3238", "490.786, 316.454, 25.375, 0.391", "491.403, 315.741, 25.7272, 0.3674", "491.387, 314.637, 26.1383, 0.3566", "491.617, 313.537, 26.5317, 0.4066", "492.228, 312.619, 26.9486, 0.3902", "492.882, 311.731, 27.3666, 0.4292", "493.292, 310.68, 27.7082, 0.3924", "493.976, 310.005, 28.0591, 0.3978", "494.913, 310.259, 28.5894, 0.5082", "495.925, 310.34, 29.2494, 0.4544", "496.964, 309.954, 29.9342, 0.4652", "497.947, 309.516, 30.6936, 0.4054", "498.798, 308.909, 31.5353, 0.4528", "499.739, 308.344, 32.3641, 0.4606", "500.688, 307.766, 33.1506, 0.4056", "501.711, 307.395, 33.9231, 0.4116", "502.817, 307.416, 34.6472, 0.357", "503.534, 307.777, 35.5183, 0.345", "504.552, 307.914, 36.3619, 0.3476", "505.602, 308.272, 36.9502, 0.4604", "506.687, 308.624, 37.3685, 0.373", "507.745, 308.555, 37.821, 0.2796", "508.724, 308.774, 39.0104, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "520.891, 317.494, 23.7569, 0.6426", "521.963, 317.89, 23.3716, 0.2288", "523.067, 318.06, 23.476, 0.3228", "524.179, 317.995, 23.4514, 0.3658", "525.176, 318.518, 23.3825, 0.435", "525.924, 319.374, 23.3523, 0.6146", "526.83, 320.018, 23.408, 0.6976", "527.83, 320.548, 23.4007, 0.6934", "528.926, 320.846, 23.4156, 0.5368", "529.928, 321.35, 23.3988, 0.5122", "530.4, 321.538, 23.2719, 0.5478", "531.401, 321.35, 23.1451, 0.4498", "532.543, 321.35, 23.0062, 0.3778", "533.663, 321.419, 22.8124, 0.3982", "534.755, 321.464, 22.5422, 0.3746", "535.895, 321.472, 22.3412, 0.401", "537.01, 321.677, 22.2172, 0.338", "538.141, 321.807, 22.1491, 0.3076", "539.185, 321.807, 22.2398, 0.288", "540.321, 321.729, 22.3468, 0.3008", "541.461, 321.71, 22.4375, 0.318", "542.599, 321.807, 22.4918, 0.3804", "543.772, 321.591, 22.498, 0.3468", "544.893, 321.371, 22.4535, 0.3252", "546.013, 321.151, 22.3712, 0.316", "547.134, 320.931, 22.283, 0.3768", "548.257, 320.732, 22.204, 0.3402", "549.399, 320.651, 22.1617, 0.3118", "550.54, 320.568, 22.153, 0.2966", "551.673, 320.606, 22.1922, 0.3164", "552.797, 320.776, 22.2858, 0.3464", "553.921, 320.946, 22.4084, 0.4352", "555.045, 321.116, 22.5375, 0.4388", "556.134, 320.884, 22.5988, 0.5406", "557.21, 320.505, 22.5775, 0.4984", "558.287, 320.128, 22.4862, 0.3962", "559.362, 319.749, 22.3412, 0.3214", "560.375, 319.221, 22.1676, 0.3142", "561.387, 318.691, 21.9786, 0.3496", "562.45, 318.295, 21.7862, 0.4054", "563.556, 318.009, 21.5894, 0.5576", "564.662, 317.724, 21.3811, 0.6024", "565.706, 317.262, 21.1571, 0.4662", "566.742, 316.78, 20.8928, 0.3616", "567.779, 316.299, 20.5999, 0.3672", "567.938, 315.209, 20.221, 0.322", "568.071, 314.101, 19.7868, 0.2796", "568.012, 313.036, 19.2965, 0.2288", "567.72, 312.023, 18.032, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "520.891, 317.494, 23.7569, 0.6426", "521.549, 316.959, 24.2707, 0.4812", "522.352, 316.182, 24.6098, 0.4522", "523.134, 315.349, 24.8556, 0.4576", "523.796, 314.417, 25.0118, 0.4078", "524.283, 313.383, 25.0796, 0.3794", "524.945, 312.45, 25.0659, 0.4728", "525.252, 311.364, 25.0026, 0.3938", "525.698, 310.329, 24.9802, 0.3264", "526.529, 309.635, 24.8102, 0.2766", "527.392, 309.112, 24.4423, 0.2782", "528.176, 308.322, 24.1853, 0.2814", "529.195, 307.706, 23.9033, 0.287", "530.153, 307.126, 23.6001, 0.2988", "531.161, 306.788, 23.3352, 0.3142", "532.284, 306.999, 23.1994, 0.3734", "533.407, 307.212, 23.1591, 0.3338", "534.529, 307.424, 23.1675, 0.3", "535.653, 307.635, 23.2235, 0.2746", "536.775, 307.848, 23.3041, 0.2746", "537.908, 307.997, 23.3769, 0.2746", "539.048, 308.086, 23.4203, 0.2746", "540.177, 308.26, 23.4385, 0.2746", "541.305, 308.452, 23.4352, 0.2746", "542.435, 308.631, 23.4122, 0.2746", "543.575, 308.724, 23.3713, 0.2746", "544.716, 308.817, 23.3148, 0.2746", "545.855, 308.91, 23.2422, 0.2748", "546.989, 308.835, 23.1092, 0.2748", "548.122, 308.753, 22.9284, 0.2752", "549.072, 308.264, 22.7262, 0.2758", "549.88, 307.458, 22.5215, 0.2766", "550.687, 306.65, 22.3213, 0.2784", "551.494, 305.844, 22.132, 0.2818", "552.289, 305.026, 21.959, 0.288", "553.066, 304.19, 21.7994, 0.3006", "553.842, 303.354, 21.6538, 0.3178", "554.619, 302.518, 21.523, 0.3802", "555.053, 301.497, 21.4404, 0.3464", "555.322, 300.386, 21.4113, 0.3242", "555.592, 299.275, 21.4225, 0.3142", "555.86, 298.163, 21.4612, 0.3734", "556.479, 297.217, 21.5034, 0.3338", "557.169, 296.305, 21.5401, 0.2998", "557.832, 295.375, 21.5676, 0.2744", "558.343, 294.352, 21.5872, 0.2742", "558.688, 293.264, 21.6034, 0.2736", "559.006, 292.165, 21.6202, 0.2728", "559.512, 291.196, 21.6451, 0.2712", "560.431, 290.514, 21.684, 0.2684", "561.348, 289.832, 21.7319, 0.2626", "562.267, 289.151, 21.7846, 0.2542", "563.184, 288.469, 21.8386, 0.2288", "564.102, 287.787, 21.952, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_27", "dend_23", "dend_22", "dend_7", "dend_0", "dend_30", "dend_29", "dend_24", "dend_21", "dend_8", "dend_6", "dend_1", "dend_26", "dend_25", "dend_20", "dend_9", "dend_3", "dend_2", "dend_17", "dend_10", "dend_5", "dend_4", "dend_19", "dend_18", "dend_12", "dend_11", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16953",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_9", "dend_9", "dend_9", "dend_9", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "3.2718365"
  }, {
    "group" : "axon",
    "value" : "3.2718365"
  }, {
    "group" : "dend",
    "value" : "3.2718365"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "56.325226"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "6.980458E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.07610503",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.837403E-10",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0014632418",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.74357724",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0050865356",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.005125964",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.1518553E-4",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "4.7351388E-4",
    "erev" : "-83.77922"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "1.4480594E-5",
    "erev" : "-83.77922"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.3932937E-6",
    "erev" : "-83.77922"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "5.4433633E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "6.6900405E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478513459",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478513459

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_7
create dend_21
public dend_21
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_8
create dend_20
public dend_20
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_28, dend_27, dend_23, dend_22, dend_7, dend_0, dend_30, dend_29, dend_24, dend_21, dend_8, dend_6, dend_1, dend_26, dend_25, dend_20, dend_9, dend_3, dend_2, dend_17, dend_10, dend_5, dend_4, dend_19, dend_18, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_16953, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_16953
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_1, axon_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_9, dend_9, dend_9, dend_9, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513459
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_28(0), soma_0(0.5)
    connect dend_27(0), soma_0(0.5)
    connect dend_23(0), soma_0(0.5)
    connect dend_22(0), soma_0(0.5)
    connect dend_7(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_21(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 387.275, 327.088, 25.237, 11.8876 ) }
    soma_0 { pt3dadd( 393.219, 327.088, 25.237, 11.8876 ) }
    soma_0 { pt3dadd( 399.163, 327.088, 25.237, 11.8876 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 393.219, 327.088, 25.237, 1.0 ) }
    axon_0 { pt3dadd( 399.06, 340.904, 25.237, 1.0 ) }
    axon_0 { pt3dadd( 404.902, 354.72, 25.237, 1.0 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 6/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 394.988, 320.577, 26.5653, 0.6864 ) }
    dend_28 { pt3dadd( 394.555, 318.334, 27.2541, 0.6864 ) }
    dend_28 { pt3dadd( 394.489, 317.214, 27.2689, 0.6844 ) }
    dend_28 { pt3dadd( 394.292, 316.181, 27.0074, 0.8884 ) }
    dend_28 { pt3dadd( 394.44, 315.084, 26.6011, 0.9778 ) }
    dend_28 { pt3dadd( 394.206, 313.998, 26.108, 0.9428 ) }
    dend_28 { pt3dadd( 393.88, 312.971, 25.5962, 0.9396 ) }
    dend_28 { pt3dadd( 393.453, 311.949, 25.1644, 0.8616 ) }
    dend_28 { pt3dadd( 392.962, 310.924, 24.9169, 0.838 ) }
    dend_28 { pt3dadd( 392.469, 309.921, 24.876, 0.6646 ) }
    dend_28 { pt3dadd( 391.977, 308.921, 24.953, 0.515 ) }
    dend_28 { pt3dadd( 391.78, 307.799, 25.0421, 0.5464 ) }
    dend_28 { pt3dadd( 391.571, 306.694, 25.1017, 0.4794 ) }
    dend_28 { pt3dadd( 390.946, 305.77, 25.1362, 0.505 ) }
    dend_28 { pt3dadd( 390.09, 305.014, 25.132, 0.5106 ) }
    dend_28 { pt3dadd( 389.39, 304.122, 25.095, 0.4954 ) }
    dend_28 { pt3dadd( 388.825, 303.127, 25.0415, 0.593 ) }
    dend_28 { pt3dadd( 388.297, 302.117, 24.9791, 0.621 ) }
    dend_28 { pt3dadd( 387.898, 301.059, 24.8763, 0.5002 ) }
    dend_28 { pt3dadd( 387.541, 299.996, 24.7184, 0.4262 ) }
    dend_28 { pt3dadd( 387.302, 298.888, 24.5798, 0.4778 ) }
    dend_28 { pt3dadd( 387.246, 297.747, 24.5031, 0.573 ) }
    dend_28 { pt3dadd( 387.259, 296.613, 24.5171, 0.521 ) }
    dend_28 { pt3dadd( 387.395, 295.501, 24.6067, 0.391 ) }
    dend_28 { pt3dadd( 387.779, 294.43, 24.7192, 0.3118 ) }
    dend_28 { pt3dadd( 388.362, 293.457, 24.866, 0.2966 ) }
    dend_28 { pt3dadd( 388.954, 292.492, 24.9763, 0.315 ) }
    dend_28 { pt3dadd( 389.532, 291.517, 25.0578, 0.3514 ) }
    dend_28 { pt3dadd( 390.28, 290.666, 25.172, 0.4088 ) }
    dend_28 { pt3dadd( 391.144, 289.923, 25.3002, 0.5638 ) }
    dend_28 { pt3dadd( 391.854, 289.05, 25.4274, 0.615 ) }
    dend_28 { pt3dadd( 392.175, 287.976, 25.5559, 0.4836 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 390.65, 331.848, 19.773, 0.2288 ) }
    dend_27 { pt3dadd( 389.576, 332.013, 20.3465, 0.3724 ) }
    dend_27 { pt3dadd( 388.482, 331.72, 20.5475, 0.332 ) }
    dend_27 { pt3dadd( 387.573, 331.317, 20.9468, 0.2966 ) }
    dend_27 { pt3dadd( 386.903, 331.034, 21.6003, 0.2684 ) }
    dend_27 { pt3dadd( 386.161, 330.252, 22.1486, 0.2626 ) }
    dend_27 { pt3dadd( 385.9, 329.161, 22.4815, 0.2542 ) }
    dend_27 { pt3dadd( 385.988, 328.096, 22.5462, 0.2288 ) }
    dend_27 { pt3dadd( 386.394, 327.039, 22.4882, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 393.876, 333.762, 25.3604, 0.2288 ) }
    dend_23 { pt3dadd( 394.214, 334.832, 25.7922, 0.4418 ) }
    dend_23 { pt3dadd( 394.617, 335.852, 26.0053, 0.6566 ) }
    dend_23 { pt3dadd( 395.18, 336.826, 26.2237, 0.6326 ) }
    dend_23 { pt3dadd( 395.644, 337.854, 26.3903, 0.5806 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 392.44, 320.68, 27.8664, 0.6864 ) }
    dend_22 { pt3dadd( 392.689, 319.575, 28.2153, 0.645 ) }
    dend_22 { pt3dadd( 392.797, 318.459, 28.3632, 0.59 ) }
    dend_22 { pt3dadd( 393.076, 317.547, 28.7176, 0.6026 ) }
    dend_22 { pt3dadd( 393.047, 316.485, 29.1281, 0.5286 ) }
    dend_22 { pt3dadd( 392.347, 315.623, 29.4255, 0.4054 ) }
    dend_22 { pt3dadd( 391.52, 314.939, 29.4809, 0.3378 ) }
    dend_22 { pt3dadd( 390.951, 314.018, 29.3605, 0.3466 ) }
    dend_22 { pt3dadd( 391.016, 312.876, 29.227, 0.3986 ) }
    dend_22 { pt3dadd( 391.319, 311.773, 29.1186, 0.5512 ) }
    dend_22 { pt3dadd( 391.27, 310.635, 29.1021, 0.5598 ) }
    dend_22 { pt3dadd( 390.82, 309.618, 29.2494, 0.5366 ) }
    dend_22 { pt3dadd( 390.104, 308.762, 29.36, 0.4544 ) }
    dend_22 { pt3dadd( 389.613, 307.75, 29.5316, 0.491 ) }
    dend_22 { pt3dadd( 389.72, 306.68, 29.8488, 0.5566 ) }
    dend_22 { pt3dadd( 389.876, 305.639, 30.2658, 0.4598 ) }
    dend_22 { pt3dadd( 389.471, 304.639, 30.7031, 0.4274 ) }
    dend_22 { pt3dadd( 388.978, 303.628, 30.9613, 0.3398 ) }
    dend_22 { pt3dadd( 388.66, 302.551, 31.1206, 0.3112 ) }
    dend_22 { pt3dadd( 388.682, 301.421, 31.262, 0.295 ) }
    dend_22 { pt3dadd( 389.016, 300.394, 31.2922, 0.3132 ) }
    dend_22 { pt3dadd( 389.594, 299.511, 31.3379, 0.3422 ) }
    dend_22 { pt3dadd( 389.602, 298.428, 31.5986, 0.4204 ) }
    dend_22 { pt3dadd( 389.538, 297.416, 32.0849, 0.4462 ) }
    dend_22 { pt3dadd( 389.568, 296.517, 32.8034, 0.3856 ) }
    dend_22 { pt3dadd( 389.649, 295.5, 33.5404, 0.3432 ) }
    dend_22 { pt3dadd( 389.485, 294.419, 34.1104, 0.3802 ) }
    dend_22 { pt3dadd( 389.197, 293.351, 34.5254, 0.3464 ) }
    dend_22 { pt3dadd( 389.308, 292.238, 34.8698, 0.3244 ) }
    dend_22 { pt3dadd( 389.177, 291.195, 35.2682, 0.3146 ) }
    dend_22 { pt3dadd( 388.691, 290.264, 35.8173, 0.3744 ) }
    dend_22 { pt3dadd( 388.236, 289.423, 36.5778, 0.3356 ) }
    dend_22 { pt3dadd( 388.27, 288.845, 37.5816, 0.3034 ) }
    dend_22 { pt3dadd( 388.903, 288.056, 38.5227, 0.281 ) }
    dend_22 { pt3dadd( 389.428, 287.085, 39.3372, 0.2864 ) }
    dend_22 { pt3dadd( 389.867, 286.037, 39.9468, 0.2962 ) }
    dend_22 { pt3dadd( 389.916, 284.935, 40.2581, 0.3158 ) }
    dend_22 { pt3dadd( 389.658, 283.833, 40.3878, 0.3468 ) }
    dend_22 { pt3dadd( 389.722, 282.716, 40.5101, 0.4288 ) }
    dend_22 { pt3dadd( 389.79, 281.6, 40.7008, 0.4628 ) }
    dend_22 { pt3dadd( 389.498, 280.497, 40.8738, 0.41 ) }
    dend_22 { pt3dadd( 389.23, 279.385, 41.0491, 0.4196 ) }
    dend_22 { pt3dadd( 389.165, 278.244, 41.2406, 0.3732 ) }
    dend_22 { pt3dadd( 389.455, 277.143, 41.4686, 0.3686 ) }
    dend_22 { pt3dadd( 389.315, 276.048, 41.7864, 0.4222 ) }
    dend_22 { pt3dadd( 388.975, 274.957, 42.0826, 0.4498 ) }
    dend_22 { pt3dadd( 388.66, 273.858, 42.3724, 0.3906 ) }
    dend_22 { pt3dadd( 388.659, 272.717, 42.6787, 0.3602 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 388.828, 271.663, 43.1043, 0.3752 ) }
    dend_22 { pt3dadd( 388.163, 270.76, 43.5478, 0.5134 ) }
    dend_22 { pt3dadd( 387.27, 270.157, 44.0594, 0.464 ) }
    dend_22 { pt3dadd( 386.801, 269.233, 44.6152, 0.4828 ) }
    dend_22 { pt3dadd( 386.699, 268.196, 45.148, 0.4396 ) }
    dend_22 { pt3dadd( 386.412, 267.099, 45.5907, 0.5104 ) }
    dend_22 { pt3dadd( 386.06, 266.026, 45.9978, 0.594 ) }
    dend_22 { pt3dadd( 385.852, 264.922, 46.3028, 0.5246 ) }
    dend_22 { pt3dadd( 385.605, 263.844, 46.6136, 0.5678 ) }
    dend_22 { pt3dadd( 385.366, 262.776, 47.0014, 0.5018 ) }
    dend_22 { pt3dadd( 385.016, 261.707, 47.3967, 0.403 ) }
    dend_22 { pt3dadd( 384.454, 260.719, 47.7596, 0.3332 ) }
    dend_22 { pt3dadd( 383.687, 259.88, 48.1051, 0.3382 ) }
    dend_22 { pt3dadd( 383.425, 258.87, 48.517, 0.3818 ) }
    dend_22 { pt3dadd( 383.492, 257.758, 48.9555, 0.5254 ) }
    dend_22 { pt3dadd( 383.304, 256.667, 49.415, 0.4884 ) }
    dend_22 { pt3dadd( 383.436, 255.552, 49.8305, 0.5168 ) }
    dend_22 { pt3dadd( 383.748, 254.453, 50.2009, 0.5578 ) }
    dend_22 { pt3dadd( 384.005, 253.342, 50.5604, 0.462 ) }
    dend_22 { pt3dadd( 384.065, 252.252, 50.9919, 0.4312 ) }
    dend_22 { pt3dadd( 384.498, 251.337, 51.5452, 0.3466 ) }
    dend_22 { pt3dadd( 384.585, 250.319, 52.0108, 0.3246 ) }
    dend_22 { pt3dadd( 384.681, 249.187, 52.4717, 0.315 ) }
    dend_22 { pt3dadd( 384.777, 248.056, 52.929, 0.375 ) }
    dend_22 { pt3dadd( 384.955, 246.937, 53.384, 0.337 ) }
    dend_22 { pt3dadd( 385.22, 245.833, 53.8462, 0.3056 ) }
    dend_22 { pt3dadd( 385.487, 244.729, 54.3402, 0.285 ) }
    dend_22 { pt3dadd( 385.753, 243.625, 54.8971, 0.2938 ) }
    dend_22 { pt3dadd( 386.174, 242.63, 55.5901, 0.3112 ) }
    dend_22 { pt3dadd( 386.595, 241.633, 56.3886, 0.3382 ) }
    dend_22 { pt3dadd( 386.976, 240.798, 57.365, 0.413 ) }
    dend_22 { pt3dadd( 387.352, 239.99, 58.4704, 0.4326 ) }
    dend_22 { pt3dadd( 387.611, 239.055, 59.5672, 0.3592 ) }
    dend_22 { pt3dadd( 387.703, 237.931, 60.5139, 0.3 ) }
    dend_22 { pt3dadd( 387.793, 236.809, 61.3194, 0.2746 ) }
    dend_22 { pt3dadd( 387.885, 235.687, 62.0082, 0.2746 ) }
    dend_22 { pt3dadd( 387.975, 234.565, 62.6066, 0.2746 ) }
    dend_22 { pt3dadd( 388.065, 233.442, 63.1565, 0.2746 ) }
    dend_22 { pt3dadd( 388.157, 232.319, 63.7, 0.2746 ) }
    dend_22 { pt3dadd( 388.247, 231.197, 64.2617, 0.2746 ) }
    dend_22 { pt3dadd( 388.339, 230.074, 64.8441, 0.2746 ) }
    dend_22 { pt3dadd( 388.528, 228.993, 65.4844, 0.2746 ) }
    dend_22 { pt3dadd( 388.768, 227.934, 66.1898, 0.2746 ) }
    dend_22 { pt3dadd( 389.009, 226.874, 66.9402, 0.2746 ) }
    dend_22 { pt3dadd( 389.251, 225.814, 67.7169, 0.2746 ) }
    dend_22 { pt3dadd( 389.492, 224.755, 68.5026, 0.2746 ) }
    dend_22 { pt3dadd( 389.732, 223.695, 69.2815, 0.2746 ) }
    dend_22 { pt3dadd( 390.159, 222.667, 70.0008, 0.2746 ) }
    dend_22 { pt3dadd( 390.625, 221.645, 70.6602, 0.2746 ) }
    dend_22 { pt3dadd( 391.089, 220.624, 71.2743, 0.2746 ) }
    dend_22 { pt3dadd( 391.535, 219.595, 71.8556, 0.2746 ) }
    dend_22 { pt3dadd( 391.916, 218.538, 72.4161, 0.2746 ) }
    dend_22 { pt3dadd( 392.296, 217.481, 72.9686, 0.2746 ) }
    dend_22 { pt3dadd( 392.677, 216.425, 73.5241, 0.2746 ) }
    dend_22 { pt3dadd( 393.057, 215.368, 74.0863, 0.2744 ) }
    dend_22 { pt3dadd( 393.436, 214.311, 74.6561, 0.2744 ) }
    dend_22 { pt3dadd( 393.838, 213.271, 75.2447, 0.2742 ) }
    dend_22 { pt3dadd( 394.281, 212.262, 75.8668, 0.2736 ) }
    dend_22 { pt3dadd( 394.724, 211.252, 76.5092, 0.2728 ) }
    dend_22 { pt3dadd( 395.166, 210.243, 77.1607, 0.2712 ) }
    dend_22 { pt3dadd( 395.609, 209.234, 77.8, 0.2684 ) }
    dend_22 { pt3dadd( 396.052, 208.225, 78.4081, 0.2626 ) }
    dend_22 { pt3dadd( 396.494, 207.216, 78.9698, 0.2542 ) }
    dend_22 { pt3dadd( 397.105, 206.284, 79.4144, 0.2288 ) }
    dend_22 { pt3dadd( 397.845, 205.412, 79.968, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 65/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 399.263, 327.465, 25.2, 0.6864 ) }
    dend_7 { pt3dadd( 400.327, 327.884, 25.1227, 0.621 ) }
    dend_7 { pt3dadd( 401.466, 327.984, 25.0922, 0.666 ) }
    dend_7 { pt3dadd( 402.61, 327.984, 25.0499, 0.8446 ) }
    dend_7 { pt3dadd( 403.754, 327.978, 24.9892, 0.9438 ) }
    dend_7 { pt3dadd( 404.897, 327.933, 24.9035, 0.879 ) }
    dend_7 { pt3dadd( 406.006, 327.653, 24.7862, 0.8234 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 72/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 397.468, 330.067, 31.0904, 0.6864 ) }
    dend_0 { pt3dadd( 398.094, 330.968, 31.6476, 0.723 ) }
    dend_0 { pt3dadd( 398.854, 331.822, 31.8573, 0.6456 ) }
    dend_0 { pt3dadd( 399.654, 332.639, 32.0586, 0.4514 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 76/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 404.902, 354.72, 25.237, 1.0 ) }
    axon_1 { pt3dadd( 410.743, 368.536, 25.237, 1.0 ) }
    axon_1 { pt3dadd( 416.584, 382.352, 25.237, 1.0 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 79/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 392.175, 287.976, 25.5559, 0.4836 ) }
    dend_30 { pt3dadd( 392.715, 287.873, 25.8516, 0.4242 ) }
    dend_30 { pt3dadd( 393.825, 287.716, 26.1022, 0.3338 ) }
    dend_30 { pt3dadd( 394.891, 287.48, 26.3122, 0.3 ) }
    dend_30 { pt3dadd( 395.611, 286.594, 26.4944, 0.2746 ) }
    dend_30 { pt3dadd( 396.358, 285.747, 26.6566, 0.2746 ) }
    dend_30 { pt3dadd( 397.355, 285.202, 26.8206, 0.2746 ) }
    dend_30 { pt3dadd( 398.22, 284.856, 27.1345, 0.2746 ) }
    dend_30 { pt3dadd( 399.36, 284.856, 27.407, 0.2746 ) }
    dend_30 { pt3dadd( 400.501, 284.856, 27.657, 0.2746 ) }
    dend_30 { pt3dadd( 401.643, 284.856, 27.8606, 0.2746 ) }
    dend_30 { pt3dadd( 402.788, 284.849, 28.0123, 0.2746 ) }
    dend_30 { pt3dadd( 403.825, 284.445, 28.1212, 0.2746 ) }
    dend_30 { pt3dadd( 404.836, 283.925, 28.1974, 0.2746 ) }
    dend_30 { pt3dadd( 405.941, 283.635, 28.2783, 0.2746 ) }
    dend_30 { pt3dadd( 407.044, 283.598, 28.4441, 0.2746 ) }
    dend_30 { pt3dadd( 408.188, 283.598, 28.5998, 0.2746 ) }
    dend_30 { pt3dadd( 409.131, 283.18, 28.7882, 0.2746 ) }
    dend_30 { pt3dadd( 410.092, 282.566, 28.9579, 0.2746 ) }
    dend_30 { pt3dadd( 411.096, 282.022, 29.1119, 0.2746 ) }
    dend_30 { pt3dadd( 412.132, 281.996, 29.3675, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( 413.183, 281.704, 29.5862, 0.2746 ) }
    dend_30 { pt3dadd( 414.324, 281.653, 29.7794, 0.2746 ) }
    dend_30 { pt3dadd( 415.434, 281.502, 29.9734, 0.2748 ) }
    dend_30 { pt3dadd( 416.283, 280.764, 30.1694, 0.2748 ) }
    dend_30 { pt3dadd( 417.142, 280.068, 30.3979, 0.2752 ) }
    dend_30 { pt3dadd( 418.143, 279.583, 30.66, 0.2758 ) }
    dend_30 { pt3dadd( 419.103, 279.067, 30.9613, 0.2766 ) }
    dend_30 { pt3dadd( 420.066, 278.501, 31.2094, 0.2782 ) }
    dend_30 { pt3dadd( 420.982, 277.992, 31.4132, 0.2814 ) }
    dend_30 { pt3dadd( 422.118, 277.878, 31.584, 0.287 ) }
    dend_30 { pt3dadd( 423.262, 277.878, 31.7299, 0.2988 ) }
    dend_30 { pt3dadd( 424.406, 277.878, 31.8637, 0.3142 ) }
    dend_30 { pt3dadd( 425.349, 277.878, 32.2115, 0.3734 ) }
    dend_30 { pt3dadd( 426.481, 277.878, 32.5262, 0.3338 ) }
    dend_30 { pt3dadd( 427.625, 277.878, 32.7743, 0.3 ) }
    dend_30 { pt3dadd( 428.746, 277.764, 32.9602, 0.2746 ) }
    dend_30 { pt3dadd( 429.786, 277.312, 33.1282, 0.2748 ) }
    dend_30 { pt3dadd( 430.202, 276.297, 33.231, 0.2748 ) }
    dend_30 { pt3dadd( 430.613, 275.23, 33.2752, 0.275 ) }
    dend_30 { pt3dadd( 431.042, 274.205, 33.3046, 0.2754 ) }
    dend_30 { pt3dadd( 431.521, 273.177, 33.3248, 0.2762 ) }
    dend_30 { pt3dadd( 432.385, 272.457, 33.3376, 0.2776 ) }
    dend_30 { pt3dadd( 433.035, 271.524, 33.3446, 0.2802 ) }
    dend_30 { pt3dadd( 433.624, 270.657, 33.3547, 0.285 ) }
    dend_30 { pt3dadd( 434.461, 269.97, 33.369, 0.2938 ) }
    dend_30 { pt3dadd( 435.354, 269.267, 33.3883, 0.3112 ) }
    dend_30 { pt3dadd( 436.287, 268.644, 33.4132, 0.3382 ) }
    dend_30 { pt3dadd( 437.43, 268.611, 33.4443, 0.413 ) }
    dend_30 { pt3dadd( 438.508, 268.468, 33.5224, 0.4326 ) }
    dend_30 { pt3dadd( 439.512, 268.031, 33.5947, 0.3592 ) }
    dend_30 { pt3dadd( 440.287, 267.251, 33.6636, 0.3 ) }
    dend_30 { pt3dadd( 441.353, 266.896, 33.731, 0.2746 ) }
    dend_30 { pt3dadd( 442.481, 266.799, 33.8293, 0.2746 ) }
    dend_30 { pt3dadd( 443.557, 266.422, 33.9279, 0.2746 ) }
    dend_30 { pt3dadd( 444.624, 266.011, 34.0194, 0.2746 ) }
    dend_30 { pt3dadd( 445.562, 265.411, 34.1687, 0.2746 ) }
    dend_30 { pt3dadd( 446.599, 264.947, 34.3084, 0.2746 ) }
    dend_30 { pt3dadd( 447.624, 264.455, 34.4235, 0.2746 ) }
    dend_30 { pt3dadd( 448.591, 263.898, 34.5173, 0.2746 ) }
    dend_30 { pt3dadd( 449.396, 263.166, 34.5971, 0.2746 ) }
    dend_30 { pt3dadd( 450.521, 263.111, 34.7074, 0.2746 ) }
    dend_30 { pt3dadd( 451.428, 262.578, 34.8387, 0.2746 ) }
    dend_30 { pt3dadd( 452.189, 261.867, 34.9518, 0.2746 ) }
    dend_30 { pt3dadd( 453.305, 261.689, 35.0482, 0.2746 ) }
    dend_30 { pt3dadd( 454.086, 260.88, 35.1324, 0.2746 ) }
    dend_30 { pt3dadd( 454.918, 260.145, 35.2769, 0.2746 ) }
    dend_30 { pt3dadd( 455.772, 259.4, 35.3797, 0.2746 ) }
    dend_30 { pt3dadd( 456.673, 258.737, 35.4505, 0.2746 ) }
    dend_30 { pt3dadd( 457.552, 258.03, 35.4987, 0.2746 ) }
    dend_30 { pt3dadd( 458.657, 257.74, 35.5256, 0.2746 ) }
    dend_30 { pt3dadd( 459.766, 257.502, 35.5328, 0.2746 ) }
    dend_30 { pt3dadd( 460.868, 257.242, 35.5216, 0.2746 ) }
    dend_30 { pt3dadd( 461.803, 256.662, 35.506, 0.2746 ) }
    dend_30 { pt3dadd( 462.764, 256.15, 35.4844, 0.2746 ) }
    dend_30 { pt3dadd( 463.822, 255.938, 35.4561, 0.2746 ) }
    dend_30 { pt3dadd( 464.242, 254.946, 35.4211, 0.2746 ) }
    dend_30 { pt3dadd( 464.744, 253.955, 35.3396, 0.2746 ) }
    dend_30 { pt3dadd( 465.722, 253.51, 35.2663, 0.2746 ) }
    dend_30 { pt3dadd( 466.451, 252.523, 35.1602, 0.2746 ) }
    dend_30 { pt3dadd( 467.553, 252.228, 35.0734, 0.2746 ) }
    dend_30 { pt3dadd( 468.602, 251.842, 35.0036, 0.2746 ) }
    dend_30 { pt3dadd( 469.154, 251.043, 34.9488, 0.2746 ) }
    dend_30 { pt3dadd( 469.912, 250.272, 34.9065, 0.2746 ) }
    dend_30 { pt3dadd( 471.001, 249.975, 34.8471, 0.2746 ) }
    dend_30 { pt3dadd( 471.866, 249.275, 34.7763, 0.2746 ) }
    dend_30 { pt3dadd( 472.53, 248.345, 34.7105, 0.2746 ) }
    dend_30 { pt3dadd( 473.196, 247.429, 34.6472, 0.2746 ) }
    dend_30 { pt3dadd( 473.792, 246.474, 34.5853, 0.2748 ) }
    dend_30 { pt3dadd( 474.198, 245.41, 34.5111, 0.2748 ) }
    dend_30 { pt3dadd( 474.455, 244.305, 34.4148, 0.275 ) }
    dend_30 { pt3dadd( 474.877, 243.257, 34.2854, 0.2754 ) }
    dend_30 { pt3dadd( 475.163, 242.196, 34.1432, 0.2762 ) }
    dend_30 { pt3dadd( 476.001, 241.452, 34.0354, 0.2776 ) }
    dend_30 { pt3dadd( 476.701, 240.552, 33.9592, 0.2802 ) }
    dend_30 { pt3dadd( 477.555, 239.79, 33.9125, 0.285 ) }
    dend_30 { pt3dadd( 478.389, 239.009, 33.8898, 0.2938 ) }
    dend_30 { pt3dadd( 479.056, 238.081, 33.8839, 0.3112 ) }
    dend_30 { pt3dadd( 479.763, 237.186, 33.8853, 0.3382 ) }
    dend_30 { pt3dadd( 480.453, 236.273, 33.8876, 0.413 ) }
    dend_30 { pt3dadd( 481.1, 235.34, 33.8906, 0.4326 ) }
    dend_30 { pt3dadd( 481.753, 234.409, 33.8948, 0.3592 ) }
    dend_30 { pt3dadd( 482.615, 233.672, 33.9007, 0.3 ) }
    dend_30 { pt3dadd( 483.411, 232.854, 33.9091, 0.2746 ) }
    dend_30 { pt3dadd( 484.263, 232.098, 33.9209, 0.2748 ) }
    dend_30 { pt3dadd( 485.126, 231.35, 33.9371, 0.2748 ) }
    dend_30 { pt3dadd( 485.514, 230.349, 33.9598, 0.2752 ) }
    dend_30 { pt3dadd( 486.197, 229.497, 33.9909, 0.2758 ) }
    dend_30 { pt3dadd( 487.255, 229.071, 34.036, 0.2766 ) }
    dend_30 { pt3dadd( 488.017, 228.262, 34.1001, 0.2782 ) }
    dend_30 { pt3dadd( 488.81, 227.499, 34.1872, 0.2814 ) }
    dend_30 { pt3dadd( 489.697, 226.78, 34.2994, 0.287 ) }
    dend_30 { pt3dadd( 490.674, 226.204, 34.4473, 0.2988 ) }
    dend_30 { pt3dadd( 491.579, 225.708, 34.7754, 0.3142 ) }
    dend_30 { pt3dadd( 492.642, 225.389, 35.0952, 0.3734 ) }
    dend_30 { pt3dadd( 493.669, 225.075, 35.4522, 0.3338 ) }
    dend_30 { pt3dadd( 494.557, 224.37, 35.7739, 0.3 ) }
    dend_30 { pt3dadd( 495.473, 223.691, 36.0203, 0.2746 ) }
    dend_30 { pt3dadd( 496.138, 222.857, 36.2337, 0.2746 ) }
    dend_30 { pt3dadd( 496.153, 221.713, 36.3745, 0.2746 ) }
    dend_30 { pt3dadd( 496.289, 220.61, 36.4798, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_30 { pt3dadd( 497.23, 219.965, 36.5616, 0.2746 ) }
    dend_30 { pt3dadd( 497.984, 219.14, 36.6792, 0.2746 ) }
    dend_30 { pt3dadd( 498.68, 218.241, 36.7867, 0.2746 ) }
    dend_30 { pt3dadd( 499.3, 217.291, 36.9155, 0.2746 ) }
    dend_30 { pt3dadd( 500.205, 216.643, 37.0462, 0.2746 ) }
    dend_30 { pt3dadd( 500.906, 215.874, 37.245, 0.2746 ) }
    dend_30 { pt3dadd( 501.827, 215.237, 37.4055, 0.2746 ) }
    dend_30 { pt3dadd( 502.662, 214.468, 37.5295, 0.2746 ) }
    dend_30 { pt3dadd( 503.233, 213.527, 37.6516, 0.2746 ) }
    dend_30 { pt3dadd( 503.967, 212.88, 37.793, 0.2746 ) }
    dend_30 { pt3dadd( 504.39, 211.9, 37.8874, 0.2746 ) }
    dend_30 { pt3dadd( 504.749, 210.835, 37.9389, 0.2746 ) }
    dend_30 { pt3dadd( 505.791, 210.404, 37.9635, 0.2746 ) }
    dend_30 { pt3dadd( 506.495, 209.527, 37.9602, 0.2746 ) }
    dend_30 { pt3dadd( 507.258, 208.703, 37.926, 0.2746 ) }
    dend_30 { pt3dadd( 508.243, 208.224, 37.8633, 0.2746 ) }
    dend_30 { pt3dadd( 509.025, 207.408, 37.7801, 0.2746 ) }
    dend_30 { pt3dadd( 509.767, 206.652, 37.674, 0.2746 ) }
    dend_30 { pt3dadd( 510.636, 206.037, 37.4996, 0.2746 ) }
    dend_30 { pt3dadd( 511.528, 205.535, 37.1952, 0.2746 ) }
    dend_30 { pt3dadd( 512.336, 204.734, 36.9158, 0.2746 ) }
    dend_30 { pt3dadd( 513.205, 204.014, 36.6198, 0.2746 ) }
    dend_30 { pt3dadd( 514.127, 203.349, 36.3138, 0.2746 ) }
    dend_30 { pt3dadd( 515.0, 202.678, 35.9713, 0.2746 ) }
    dend_30 { pt3dadd( 515.93, 202.215, 35.6174, 0.2746 ) }
    dend_30 { pt3dadd( 516.847, 201.572, 35.2948, 0.2746 ) }
    dend_30 { pt3dadd( 517.629, 200.782, 35.037, 0.2746 ) }
    dend_30 { pt3dadd( 518.771, 200.732, 34.8373, 0.2746 ) }
    dend_30 { pt3dadd( 519.262, 199.905, 34.5649, 0.2746 ) }
    dend_30 { pt3dadd( 519.636, 199.031, 34.3661, 0.2746 ) }
    dend_30 { pt3dadd( 520.756, 198.827, 34.2182, 0.2746 ) }
    dend_30 { pt3dadd( 521.894, 198.761, 34.1015, 0.2746 ) }
    dend_30 { pt3dadd( 522.982, 198.436, 34.0024, 0.2746 ) }
    dend_30 { pt3dadd( 524.12, 198.363, 33.9128, 0.2746 ) }
    dend_30 { pt3dadd( 525.059, 197.802, 33.784, 0.2746 ) }
    dend_30 { pt3dadd( 525.916, 197.055, 33.6409, 0.2746 ) }
    dend_30 { pt3dadd( 526.654, 196.188, 33.4802, 0.2746 ) }
    dend_30 { pt3dadd( 527.632, 195.596, 33.3015, 0.2746 ) }
    dend_30 { pt3dadd( 528.513, 195.06, 32.9708, 0.2746 ) }
    dend_30 { pt3dadd( 529.38, 194.628, 32.5693, 0.2744 ) }
    dend_30 { pt3dadd( 529.722, 193.679, 32.1283, 0.2744 ) }
    dend_30 { pt3dadd( 529.786, 192.54, 31.7727, 0.2742 ) }
    dend_30 { pt3dadd( 529.151, 191.727, 31.4734, 0.2736 ) }
    dend_30 { pt3dadd( 528.795, 190.8, 31.2718, 0.2728 ) }
    dend_30 { pt3dadd( 528.128, 189.875, 31.1609, 0.2712 ) }
    dend_30 { pt3dadd( 527.613, 188.886, 31.108, 0.2684 ) }
    dend_30 { pt3dadd( 527.296, 187.862, 31.0887, 0.2626 ) }
    dend_30 { pt3dadd( 526.926, 186.93, 31.0806, 0.2542 ) }
    dend_30 { pt3dadd( 525.795, 186.871, 31.08, 0.2288 ) }
    dend_30 { pt3dadd( 525.554, 185.786, 31.08, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 50/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 392.175, 287.976, 25.5559, 0.4836 ) }
    dend_29 { pt3dadd( 391.879, 286.882, 25.2059, 0.2288 ) }
    dend_29 { pt3dadd( 391.383, 285.854, 25.4318, 0.3804 ) }
    dend_29 { pt3dadd( 391.066, 284.759, 25.5234, 0.493 ) }
    dend_29 { pt3dadd( 391.191, 283.67, 25.7202, 0.5726 ) }
    dend_29 { pt3dadd( 391.367, 282.542, 25.8908, 0.6592 ) }
    dend_29 { pt3dadd( 391.484, 281.441, 25.9431, 0.66 ) }
    dend_29 { pt3dadd( 391.897, 280.384, 25.9994, 0.521 ) }
    dend_29 { pt3dadd( 392.226, 279.336, 26.1716, 0.488 ) }
    dend_29 { pt3dadd( 392.215, 278.273, 26.4555, 0.4784 ) }
    dend_29 { pt3dadd( 392.618, 277.221, 26.7039, 0.44 ) }
    dend_29 { pt3dadd( 393.083, 276.187, 26.885, 0.4694 ) }
    dend_29 { pt3dadd( 393.194, 275.061, 26.9973, 0.4924 ) }
    dend_29 { pt3dadd( 393.215, 273.927, 26.9676, 0.4592 ) }
    dend_29 { pt3dadd( 393.326, 272.828, 26.7576, 0.5374 ) }
    dend_29 { pt3dadd( 393.729, 271.78, 26.4824, 0.4614 ) }
    dend_29 { pt3dadd( 394.253, 270.763, 26.2167, 0.4784 ) }
    dend_29 { pt3dadd( 394.836, 269.779, 25.9703, 0.431 ) }
    dend_29 { pt3dadd( 395.592, 268.937, 25.72, 0.4948 ) }
    dend_29 { pt3dadd( 396.119, 268.166, 25.3114, 0.5644 ) }
    dend_29 { pt3dadd( 396.367, 267.201, 24.8766, 0.4738 ) }
    dend_29 { pt3dadd( 396.413, 266.116, 24.6523, 0.4544 ) }
    dend_29 { pt3dadd( 396.518, 265.034, 24.6285, 0.3846 ) }
    dend_29 { pt3dadd( 396.482, 263.913, 24.6674, 0.4194 ) }
    dend_29 { pt3dadd( 396.43, 262.783, 24.6674, 0.3728 ) }
    dend_29 { pt3dadd( 396.501, 262.414, 24.7072, 0.368 ) }
    dend_29 { pt3dadd( 396.895, 261.382, 24.7125, 0.4208 ) }
    dend_29 { pt3dadd( 397.644, 260.552, 24.633, 0.4468 ) }
    dend_29 { pt3dadd( 398.419, 259.751, 24.6067, 0.3864 ) }
    dend_29 { pt3dadd( 398.929, 258.769, 24.6372, 0.345 ) }
    dend_29 { pt3dadd( 399.211, 257.675, 24.6123, 0.3834 ) }
    dend_29 { pt3dadd( 399.547, 256.613, 24.4804, 0.3524 ) }
    dend_29 { pt3dadd( 399.981, 255.559, 24.3821, 0.3354 ) }
    dend_29 { pt3dadd( 400.27, 254.484, 24.3813, 0.3348 ) }
    dend_29 { pt3dadd( 400.891, 253.574, 24.2427, 0.413 ) }
    dend_29 { pt3dadd( 401.59, 252.392, 24.0937, 0.4018 ) }
    dend_29 { pt3dadd( 401.879, 251.289, 23.9576, 0.4522 ) }
    dend_29 { pt3dadd( 401.97, 250.149, 23.8193, 0.4296 ) }
    dend_29 { pt3dadd( 402.373, 249.084, 23.6561, 0.4924 ) }
    dend_29 { pt3dadd( 403.096, 248.203, 23.4601, 0.5594 ) }
    dend_29 { pt3dadd( 403.651, 247.24, 23.177, 0.4652 ) }
    dend_29 { pt3dadd( 403.743, 246.159, 22.7889, 0.4368 ) }
    dend_29 { pt3dadd( 403.871, 245.083, 22.3334, 0.3584 ) }
    dend_29 { pt3dadd( 404.434, 244.093, 22.0116, 0.34 ) }
    dend_29 { pt3dadd( 404.997, 243.1, 21.7484, 0.374 ) }
    dend_29 { pt3dadd( 405.589, 241.811, 21.4603, 0.3352 ) }
    dend_29 { pt3dadd( 406.016, 240.75, 21.3027, 0.3024 ) }
    dend_29 { pt3dadd( 406.408, 239.71, 21.3212, 0.2792 ) }
    dend_29 { pt3dadd( 407.121, 238.849, 21.4001, 0.2828 ) }
    dend_29 { pt3dadd( 407.906, 238.103, 21.378, 0.291 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_29 { pt3dadd( 407.998, 237.069, 21.3713, 0.2994 ) }
    dend_29 { pt3dadd( 407.997, 236.016, 21.5631, 0.3476 ) }
    dend_29 { pt3dadd( 408.718, 235.18, 21.786, 0.2796 ) }
    dend_29 { pt3dadd( 409.8, 235.308, 22.4554, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 4/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 395.644, 337.854, 26.3903, 0.5806 ) }
    dend_24 { pt3dadd( 395.938, 338.924, 26.3872, 0.52 ) }
    dend_24 { pt3dadd( 396.111, 340.031, 26.2427, 0.4634 ) }
    dend_24 { pt3dadd( 396.041, 341.152, 26.0084, 0.545 ) }
    dend_24 { pt3dadd( 395.703, 342.212, 25.6838, 0.475 ) }
    dend_24 { pt3dadd( 395.6, 343.335, 25.384, 0.5046 ) }
    dend_24 { pt3dadd( 395.402, 344.314, 24.9774, 0.474 ) }
    dend_24 { pt3dadd( 395.4, 345.034, 24.7251, 0.6016 ) }
    dend_24 { pt3dadd( 395.242, 346.15, 24.6392, 0.6314 ) }
    dend_24 { pt3dadd( 395.157, 347.29, 24.6086, 0.5446 ) }
    // Section: dend_21, id: dend_21, parent: dend_7 (entry count 14/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 406.006, 327.653, 24.7862, 0.8234 ) }
    dend_21 { pt3dadd( 407.254, 326.895, 23.2095, 0.4576 ) }
    dend_21 { pt3dadd( 407.423, 325.94, 23.6928, 0.374 ) }
    dend_21 { pt3dadd( 407.512, 324.903, 23.8832, 0.327 ) }
    dend_21 { pt3dadd( 407.886, 323.829, 24.239, 0.3264 ) }
    dend_21 { pt3dadd( 407.862, 322.889, 24.9354, 0.3606 ) }
    dend_21 { pt3dadd( 407.807, 322.363, 26.0702, 0.4848 ) }
    dend_21 { pt3dadd( 408.322, 322.012, 27.3882, 0.4174 ) }
    dend_21 { pt3dadd( 409.163, 321.674, 28.8859, 0.365 ) }
    dend_21 { pt3dadd( 410.053, 321.246, 30.3937, 0.3734 ) }
    dend_21 { pt3dadd( 410.227, 320.564, 31.9021, 0.3338 ) }
    dend_21 { pt3dadd( 409.916, 319.829, 33.493, 0.3 ) }
    dend_21 { pt3dadd( 409.635, 319.08, 35.1305, 0.2746 ) }
    dend_21 { pt3dadd( 409.68, 318.167, 36.7623, 0.2746 ) }
    dend_21 { pt3dadd( 409.725, 317.254, 38.3642, 0.2744 ) }
    dend_21 { pt3dadd( 409.948, 316.473, 39.9526, 0.2744 ) }
    dend_21 { pt3dadd( 410.335, 315.81, 41.5206, 0.2742 ) }
    dend_21 { pt3dadd( 410.408, 315.114, 42.9568, 0.2736 ) }
    dend_21 { pt3dadd( 409.974, 314.292, 44.0572, 0.2728 ) }
    dend_21 { pt3dadd( 410.691, 313.4, 44.935, 0.2712 ) }
    dend_21 { pt3dadd( 410.917, 312.399, 45.7864, 0.2684 ) }
    dend_21 { pt3dadd( 411.046, 311.377, 46.639, 0.2626 ) }
    dend_21 { pt3dadd( 411.175, 310.355, 47.4883, 0.2542 ) }
    dend_21 { pt3dadd( 411.306, 309.332, 48.3353, 0.2288 ) }
    dend_21 { pt3dadd( 411.435, 308.31, 50.176, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 406.006, 327.653, 24.7862, 0.8234 ) }
    dend_8 { pt3dadd( 406.66, 327.435, 24.6324, 0.6366 ) }
    dend_8 { pt3dadd( 407.665, 326.905, 24.4152, 0.4686 ) }
    dend_8 { pt3dadd( 408.62, 326.516, 24.0262, 0.4336 ) }
    dend_8 { pt3dadd( 409.634, 326.105, 23.5875, 0.3994 ) }
    dend_8 { pt3dadd( 410.683, 325.737, 23.1582, 0.4166 ) }
    dend_8 { pt3dadd( 411.811, 325.603, 22.8183, 0.5146 ) }
    dend_8 { pt3dadd( 412.903, 325.297, 22.654, 0.605 ) }
    dend_8 { pt3dadd( 413.96, 325.25, 22.7343, 0.757 ) }
    dend_8 { pt3dadd( 415.083, 325.291, 22.9104, 0.6564 ) }
    dend_8 { pt3dadd( 416.155, 325.54, 22.9457, 0.7256 ) }
    dend_8 { pt3dadd( 417.295, 325.611, 22.9426, 0.7576 ) }
    dend_8 { pt3dadd( 418.361, 325.201, 22.9082, 0.8258 ) }
    dend_8 { pt3dadd( 419.525, 324.181, 22.8298, 0.681 ) }
    dend_8 { pt3dadd( 420.517, 323.678, 22.6705, 0.5834 ) }
    dend_8 { pt3dadd( 421.572, 323.95, 22.5047, 0.4878 ) }
    dend_8 { pt3dadd( 422.659, 324.266, 22.4568, 0.5838 ) }
    dend_8 { pt3dadd( 423.795, 324.308, 22.4496, 0.5804 ) }
    dend_8 { pt3dadd( 424.935, 324.228, 22.4924, 0.5388 ) }
    dend_8 { pt3dadd( 425.999, 323.859, 22.633, 0.633 ) }
    dend_8 { pt3dadd( 426.912, 323.238, 22.6951, 0.6626 ) }
    dend_8 { pt3dadd( 427.858, 322.607, 22.8007, 0.736 ) }
    dend_8 { pt3dadd( 428.84, 322.128, 23.0342, 0.7806 ) }
    dend_8 { pt3dadd( 429.938, 322.113, 23.3464, 0.6216 ) }
    dend_8 { pt3dadd( 431.035, 322.393, 23.646, 0.5846 ) }
    dend_8 { pt3dadd( 432.17, 322.403, 23.9148, 0.637 ) }
    dend_8 { pt3dadd( 433.226, 322.042, 24.187, 0.605 ) }
    dend_8 { pt3dadd( 434.247, 321.562, 24.2794, 0.7144 ) }
    dend_8 { pt3dadd( 435.292, 321.146, 24.2066, 0.7852 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 399.654, 332.639, 32.0586, 0.4514 ) }
    dend_6 { pt3dadd( 399.519, 333.267, 35.1585, 0.3718 ) }
    dend_6 { pt3dadd( 399.508, 333.793, 36.4342, 0.3242 ) }
    dend_6 { pt3dadd( 399.313, 334.85, 37.637, 0.314 ) }
    dend_6 { pt3dadd( 398.985, 335.865, 38.8184, 0.3732 ) }
    dend_6 { pt3dadd( 398.492, 336.723, 40.0893, 0.3336 ) }
    dend_6 { pt3dadd( 398.0, 337.579, 41.3997, 0.2994 ) }
    dend_6 { pt3dadd( 397.518, 337.906, 42.8025, 0.2736 ) }
    dend_6 { pt3dadd( 397.041, 337.911, 44.3388, 0.2728 ) }
    dend_6 { pt3dadd( 396.251, 337.264, 45.771, 0.2712 ) }
    dend_6 { pt3dadd( 395.436, 336.567, 47.0442, 0.2684 ) }
    dend_6 { pt3dadd( 394.622, 335.87, 48.1412, 0.2626 ) }
    dend_6 { pt3dadd( 393.807, 335.174, 49.0714, 0.2542 ) }
    dend_6 { pt3dadd( 392.994, 334.464, 49.835, 0.2288 ) }
    dend_6 { pt3dadd( 392.187, 333.666, 50.96, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 83/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 399.654, 332.639, 32.0586, 0.4514 ) }
    dend_1 { pt3dadd( 400.43, 333.479, 32.2599, 0.3388 ) }
    dend_1 { pt3dadd( 401.2, 334.306, 32.4696, 0.3004 ) }
    dend_1 { pt3dadd( 402.245, 334.623, 32.7149, 0.3174 ) }
    dend_1 { pt3dadd( 403.15, 334.096, 33.0957, 0.3794 ) }
    dend_1 { pt3dadd( 403.861, 333.316, 33.5852, 0.345 ) }
    dend_1 { pt3dadd( 404.771, 332.909, 34.0774, 0.3206 ) }
    dend_1 { pt3dadd( 405.737, 333.426, 34.4884, 0.3126 ) }
    dend_1 { pt3dadd( 406.52, 334.185, 34.7108, 0.3452 ) }
    dend_1 { pt3dadd( 407.384, 334.872, 34.8449, 0.4036 ) }
    dend_1 { pt3dadd( 408.246, 335.565, 35.0896, 0.5246 ) }
    dend_1 { pt3dadd( 408.903, 336.365, 35.5429, 0.6854 ) }
    dend_1 { pt3dadd( 409.443, 337.285, 36.1556, 0.6052 ) }
    dend_1 { pt3dadd( 410.254, 337.674, 36.8679, 0.4638 ) }
    dend_1 { pt3dadd( 411.253, 337.56, 37.707, 0.3954 ) }
    dend_1 { pt3dadd( 411.909, 338.156, 38.6151, 0.471 ) }
    dend_1 { pt3dadd( 412.318, 339.186, 39.405, 0.5432 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( 412.78, 340.229, 40.0495, 0.5504 ) }
    dend_1 { pt3dadd( 413.696, 340.506, 40.6608, 0.7202 ) }
    dend_1 { pt3dadd( 414.664, 340.012, 41.251, 0.7346 ) }
    dend_1 { pt3dadd( 415.663, 339.586, 41.8678, 0.6174 ) }
    dend_1 { pt3dadd( 416.693, 339.727, 42.5449, 0.6408 ) }
    dend_1 { pt3dadd( 417.659, 340.286, 43.1942, 0.6584 ) }
    dend_1 { pt3dadd( 418.364, 341.166, 43.7996, 0.5896 ) }
    dend_1 { pt3dadd( 418.758, 342.094, 44.4973, 0.4968 ) }
    dend_1 { pt3dadd( 418.863, 343.016, 45.3051, 0.3846 ) }
    dend_1 { pt3dadd( 419.182, 344.081, 45.9906, 0.3418 ) }
    dend_1 { pt3dadd( 420.091, 344.662, 46.608, 0.3776 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 11/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 395.157, 347.29, 24.6086, 0.5446 ) }
    dend_26 { pt3dadd( 395.447, 347.798, 24.6148, 0.388 ) }
    dend_26 { pt3dadd( 396.312, 348.53, 24.6372, 0.306 ) }
    dend_26 { pt3dadd( 396.849, 349.534, 24.6702, 0.2856 ) }
    dend_26 { pt3dadd( 397.207, 350.621, 24.6848, 0.295 ) }
    dend_26 { pt3dadd( 397.825, 351.56, 24.6733, 0.3132 ) }
    dend_26 { pt3dadd( 398.56, 352.434, 24.6512, 0.3418 ) }
    dend_26 { pt3dadd( 399.246, 353.344, 24.649, 0.4196 ) }
    dend_26 { pt3dadd( 399.679, 354.403, 24.6806, 0.4452 ) }
    dend_26 { pt3dadd( 399.904, 355.503, 24.7811, 0.3824 ) }
    dend_26 { pt3dadd( 399.986, 356.629, 24.9592, 0.3434 ) }
    dend_26 { pt3dadd( 400.068, 357.756, 25.1916, 0.3508 ) }
    dend_26 { pt3dadd( 400.151, 358.884, 25.4537, 0.4372 ) }
    dend_26 { pt3dadd( 400.221, 360.025, 25.662, 0.4724 ) }
    dend_26 { pt3dadd( 400.301, 361.167, 25.8171, 0.4582 ) }
    dend_26 { pt3dadd( 400.371, 362.306, 25.9244, 0.3596 ) }
    dend_26 { pt3dadd( 400.259, 363.444, 25.9949, 0.3006 ) }
    dend_26 { pt3dadd( 399.724, 364.283, 26.1069, 0.2758 ) }
    dend_26 { pt3dadd( 399.256, 365.284, 26.1881, 0.2766 ) }
    dend_26 { pt3dadd( 399.256, 366.428, 26.2514, 0.2784 ) }
    dend_26 { pt3dadd( 399.237, 367.571, 26.2987, 0.2818 ) }
    dend_26 { pt3dadd( 399.142, 368.707, 26.3326, 0.288 ) }
    dend_26 { pt3dadd( 399.142, 369.851, 26.3547, 0.2992 ) }
    dend_26 { pt3dadd( 399.142, 370.995, 26.3684, 0.3212 ) }
    dend_26 { pt3dadd( 399.142, 372.139, 26.3886, 0.3566 ) }
    dend_26 { pt3dadd( 399.142, 373.283, 26.4163, 0.4482 ) }
    dend_26 { pt3dadd( 399.296, 374.408, 26.4527, 0.4924 ) }
    dend_26 { pt3dadd( 399.531, 375.518, 26.4981, 0.4964 ) }
    dend_26 { pt3dadd( 399.919, 376.588, 26.5824, 0.426 ) }
    dend_26 { pt3dadd( 400.401, 377.597, 26.7162, 0.4442 ) }
    dend_26 { pt3dadd( 400.905, 378.607, 26.8352, 0.4432 ) }
    dend_26 { pt3dadd( 400.983, 379.742, 26.9424, 0.3786 ) }
    dend_26 { pt3dadd( 401.307, 380.836, 27.0404, 0.3366 ) }
    dend_26 { pt3dadd( 401.658, 381.871, 27.1538, 0.3382 ) }
    dend_26 { pt3dadd( 401.797, 382.999, 27.2759, 0.413 ) }
    dend_26 { pt3dadd( 402.062, 384.076, 27.459, 0.4326 ) }
    dend_26 { pt3dadd( 402.316, 385.182, 27.6153, 0.3592 ) }
    dend_26 { pt3dadd( 402.878, 386.165, 27.75, 0.3 ) }
    dend_26 { pt3dadd( 403.341, 387.182, 27.8684, 0.2746 ) }
    dend_26 { pt3dadd( 403.711, 388.26, 27.9765, 0.2746 ) }
    dend_26 { pt3dadd( 404.27, 389.241, 28.1229, 0.2746 ) }
    dend_26 { pt3dadd( 404.518, 390.344, 28.2654, 0.2746 ) }
    dend_26 { pt3dadd( 404.525, 391.456, 28.4813, 0.2746 ) }
    dend_26 { pt3dadd( 405.074, 392.435, 28.7269, 0.2746 ) }
    dend_26 { pt3dadd( 405.205, 393.566, 28.978, 0.2746 ) }
    dend_26 { pt3dadd( 405.205, 394.71, 29.2396, 0.2746 ) }
    dend_26 { pt3dadd( 405.205, 395.793, 29.6262, 0.2746 ) }
    dend_26 { pt3dadd( 405.205, 396.846, 30.1479, 0.2746 ) }
    dend_26 { pt3dadd( 405.245, 397.955, 30.6799, 0.2746 ) }
    dend_26 { pt3dadd( 405.578, 398.987, 31.2598, 0.2746 ) }
    dend_26 { pt3dadd( 405.662, 400.116, 31.7705, 0.2746 ) }
    dend_26 { pt3dadd( 405.977, 401.201, 32.1933, 0.2746 ) }
    dend_26 { pt3dadd( 406.006, 402.342, 32.5408, 0.2746 ) }
    dend_26 { pt3dadd( 406.006, 403.317, 33.0005, 0.2746 ) }
    dend_26 { pt3dadd( 406.006, 404.367, 33.5261, 0.2746 ) }
    dend_26 { pt3dadd( 406.006, 405.476, 34.0287, 0.2746 ) }
    dend_26 { pt3dadd( 406.006, 406.597, 34.5064, 0.2746 ) }
    dend_26 { pt3dadd( 405.891, 407.727, 34.9129, 0.2746 ) }
    dend_26 { pt3dadd( 405.89, 408.871, 35.2302, 0.2746 ) }
    dend_26 { pt3dadd( 405.583, 409.931, 35.5527, 0.2746 ) }
    dend_26 { pt3dadd( 405.191, 410.957, 35.9089, 0.2746 ) }
    dend_26 { pt3dadd( 404.748, 411.999, 36.2037, 0.2746 ) }
    dend_26 { pt3dadd( 404.013, 412.852, 36.4403, 0.2746 ) }
    dend_26 { pt3dadd( 403.496, 413.86, 36.6699, 0.2748 ) }
    dend_26 { pt3dadd( 402.853, 414.753, 36.8533, 0.2748 ) }
    dend_26 { pt3dadd( 402.763, 415.73, 37.1347, 0.275 ) }
    dend_26 { pt3dadd( 402.456, 416.729, 37.3481, 0.2754 ) }
    dend_26 { pt3dadd( 402.033, 417.756, 37.499, 0.2764 ) }
    dend_26 { pt3dadd( 401.776, 418.866, 37.592, 0.2778 ) }
    dend_26 { pt3dadd( 401.308, 419.88, 37.5959, 0.2808 ) }
    dend_26 { pt3dadd( 400.646, 420.8, 37.5724, 0.2858 ) }
    dend_26 { pt3dadd( 399.853, 421.611, 37.5262, 0.2954 ) }
    dend_26 { pt3dadd( 398.881, 422.209, 37.4853, 0.314 ) }
    dend_26 { pt3dadd( 397.787, 422.513, 37.4522, 0.3432 ) }
    dend_26 { pt3dadd( 396.761, 422.988, 37.3867, 0.4224 ) }
    dend_26 { pt3dadd( 395.872, 423.685, 37.3416, 0.4498 ) }
    dend_26 { pt3dadd( 394.931, 424.309, 37.3097, 0.3924 ) }
    dend_26 { pt3dadd( 393.972, 424.914, 37.291, 0.3556 ) }
    dend_26 { pt3dadd( 393.226, 425.757, 37.2848, 0.4046 ) }
    dend_26 { pt3dadd( 392.188, 426.222, 37.2915, 0.386 ) }
    dend_26 { pt3dadd( 391.169, 426.734, 37.3122, 0.423 ) }
    dend_26 { pt3dadd( 390.224, 427.361, 37.3408, 0.3734 ) }
    dend_26 { pt3dadd( 389.13, 427.696, 37.3814, 0.3988 ) }
    dend_26 { pt3dadd( 388.034, 427.994, 37.4385, 0.3338 ) }
    dend_26 { pt3dadd( 387.632, 428.977, 37.5136, 0.3 ) }
    dend_26 { pt3dadd( 386.722, 429.62, 37.6295, 0.2746 ) }
    dend_26 { pt3dadd( 385.681, 430.018, 37.7698, 0.2746 ) }
    dend_26 { pt3dadd( 385.243, 430.976, 38.017, 0.2748 ) }
    dend_26 { pt3dadd( 384.392, 431.551, 38.3155, 0.2748 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_26 { pt3dadd( 383.361, 431.803, 38.5426, 0.2752 ) }
    dend_26 { pt3dadd( 382.848, 432.783, 38.7024, 0.2758 ) }
    dend_26 { pt3dadd( 381.968, 433.496, 38.7988, 0.2766 ) }
    dend_26 { pt3dadd( 381.367, 434.464, 38.8405, 0.2782 ) }
    dend_26 { pt3dadd( 380.585, 435.294, 38.8349, 0.2814 ) }
    dend_26 { pt3dadd( 379.9, 436.049, 38.7996, 0.287 ) }
    dend_26 { pt3dadd( 379.062, 436.825, 38.7489, 0.2988 ) }
    dend_26 { pt3dadd( 378.234, 437.583, 38.682, 0.3142 ) }
    dend_26 { pt3dadd( 377.53, 438.484, 38.5988, 0.3734 ) }
    dend_26 { pt3dadd( 376.977, 439.472, 38.4986, 0.3338 ) }
    dend_26 { pt3dadd( 376.398, 440.275, 38.1984, 0.3 ) }
    dend_26 { pt3dadd( 376.147, 441.295, 37.9476, 0.2746 ) }
    dend_26 { pt3dadd( 375.987, 442.398, 37.7521, 0.2748 ) }
    dend_26 { pt3dadd( 375.337, 443.286, 37.6076, 0.2748 ) }
    dend_26 { pt3dadd( 374.466, 443.966, 37.5085, 0.2752 ) }
    dend_26 { pt3dadd( 373.682, 444.777, 37.448, 0.2758 ) }
    dend_26 { pt3dadd( 372.864, 445.567, 37.4167, 0.2766 ) }
    dend_26 { pt3dadd( 371.849, 446.046, 37.3741, 0.2782 ) }
    dend_26 { pt3dadd( 370.853, 446.446, 37.3178, 0.2814 ) }
    dend_26 { pt3dadd( 369.839, 446.829, 37.247, 0.287 ) }
    dend_26 { pt3dadd( 368.939, 447.5, 37.135, 0.2988 ) }
    dend_26 { pt3dadd( 368.232, 448.109, 36.9284, 0.3142 ) }
    dend_26 { pt3dadd( 367.139, 448.362, 36.7122, 0.3734 ) }
    dend_26 { pt3dadd( 366.223, 448.902, 36.5397, 0.3338 ) }
    dend_26 { pt3dadd( 365.579, 449.499, 36.3684, 0.3 ) }
    dend_26 { pt3dadd( 365.086, 450.46, 36.2491, 0.2746 ) }
    dend_26 { pt3dadd( 364.502, 451.441, 36.176, 0.2746 ) }
    dend_26 { pt3dadd( 363.728, 452.281, 36.1376, 0.2746 ) }
    dend_26 { pt3dadd( 363.141, 453.259, 36.1206, 0.2746 ) }
    dend_26 { pt3dadd( 362.411, 454.115, 36.1259, 0.2746 ) }
    dend_26 { pt3dadd( 361.303, 454.308, 36.1136, 0.2746 ) }
    dend_26 { pt3dadd( 360.439, 455.024, 36.0763, 0.2746 ) }
    dend_26 { pt3dadd( 359.91, 455.977, 35.992, 0.2744 ) }
    dend_26 { pt3dadd( 359.445, 456.795, 35.7599, 0.2744 ) }
    dend_26 { pt3dadd( 359.494, 457.927, 35.5642, 0.2742 ) }
    dend_26 { pt3dadd( 359.859, 458.948, 35.4054, 0.2736 ) }
    dend_26 { pt3dadd( 360.51, 459.85, 35.2867, 0.2728 ) }
    dend_26 { pt3dadd( 360.589, 460.974, 35.1677, 0.2712 ) }
    dend_26 { pt3dadd( 360.589, 462.118, 35.0918, 0.2684 ) }
    dend_26 { pt3dadd( 360.332, 463.174, 35.0535, 0.2626 ) }
    dend_26 { pt3dadd( 360.131, 464.265, 35.0263, 0.2542 ) }
    dend_26 { pt3dadd( 359.799, 465.258, 35.009, 0.2288 ) }
    dend_26 { pt3dadd( 359.33, 466.294, 35.0, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 43/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 395.157, 347.29, 24.6086, 0.5446 ) }
    dend_25 { pt3dadd( 394.593, 348.191, 24.0288, 0.4576 ) }
    dend_25 { pt3dadd( 393.891, 349.023, 23.35, 0.5002 ) }
    dend_25 { pt3dadd( 393.774, 350.149, 23.107, 0.4628 ) }
    dend_25 { pt3dadd( 393.167, 351.082, 22.8763, 0.368 ) }
    dend_25 { pt3dadd( 392.067, 351.113, 22.5425, 0.316 ) }
    dend_25 { pt3dadd( 391.007, 350.685, 22.2471, 0.3038 ) }
    dend_25 { pt3dadd( 390.218, 351.073, 21.9845, 0.331 ) }
    dend_25 { pt3dadd( 389.439, 351.783, 21.6908, 0.3686 ) }
    dend_25 { pt3dadd( 388.468, 352.303, 21.3301, 0.5014 ) }
    dend_25 { pt3dadd( 387.428, 352.552, 20.8768, 0.4416 ) }
    dend_25 { pt3dadd( 386.949, 353.367, 20.4725, 0.4404 ) }
    dend_25 { pt3dadd( 385.9, 353.823, 20.158, 0.365 ) }
    dend_25 { pt3dadd( 384.978, 354.414, 19.8178, 0.3522 ) }
    dend_25 { pt3dadd( 384.013, 355.028, 19.5966, 0.3976 ) }
    dend_25 { pt3dadd( 383.048, 355.641, 19.4762, 0.3736 ) }
    dend_25 { pt3dadd( 382.189, 356.366, 19.4398, 0.399 ) }
    dend_25 { pt3dadd( 381.531, 357.3, 19.4667, 0.3342 ) }
    dend_25 { pt3dadd( 380.873, 358.234, 19.5381, 0.3008 ) }
    dend_25 { pt3dadd( 380.214, 359.168, 19.6454, 0.2762 ) }
    dend_25 { pt3dadd( 379.556, 360.103, 19.7616, 0.2778 ) }
    dend_25 { pt3dadd( 378.898, 361.037, 19.8808, 0.2806 ) }
    dend_25 { pt3dadd( 378.073, 361.808, 19.985, 0.285 ) }
    dend_25 { pt3dadd( 377.83, 362.902, 20.0676, 0.2954 ) }
    dend_25 { pt3dadd( 377.518, 363.567, 20.197, 0.308 ) }
    dend_25 { pt3dadd( 376.828, 364.401, 20.2922, 0.3616 ) }
    dend_25 { pt3dadd( 376.091, 365.164, 20.3588, 0.3134 ) }
    dend_25 { pt3dadd( 375.265, 365.938, 20.4028, 0.2542 ) }
    dend_25 { pt3dadd( 374.889, 366.995, 20.44, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_8 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 435.292, 321.146, 24.2066, 0.7852 ) }
    dend_20 { pt3dadd( 435.299, 320.01, 21.4581, 0.2288 ) }
    dend_20 { pt3dadd( 435.326, 319.028, 20.652, 0.2796 ) }
    dend_20 { pt3dadd( 435.588, 317.926, 20.3585, 0.2796 ) }
    dend_20 { pt3dadd( 436.336, 317.064, 20.111, 0.305 ) }
    dend_20 { pt3dadd( 437.079, 316.198, 19.8724, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 78/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 435.292, 321.146, 24.2066, 0.7852 ) }
    dend_9 { pt3dadd( 436.087, 321.022, 24.0943, 0.8698 ) }
    dend_9 { pt3dadd( 437.183, 320.693, 23.9624, 0.7956 ) }
    dend_9 { pt3dadd( 438.319, 320.566, 23.8179, 0.6376 ) }
    dend_9 { pt3dadd( 439.408, 320.215, 23.6684, 0.672 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 83/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 420.091, 344.662, 46.608, 0.3776 ) }
    dend_3 { pt3dadd( 419.856, 344.583, 47.2704, 0.4576 ) }
    dend_3 { pt3dadd( 420.693, 345.168, 48.7516, 0.3816 ) }
    dend_3 { pt3dadd( 421.531, 345.751, 49.3984, 0.3422 ) }
    dend_3 { pt3dadd( 422.367, 346.335, 50.1458, 0.3486 ) }
    dend_3 { pt3dadd( 422.662, 347.156, 50.8544, 0.4322 ) }
    dend_3 { pt3dadd( 422.339, 348.253, 51.4091, 0.4692 ) }
    dend_3 { pt3dadd( 422.243, 349.387, 51.8277, 0.423 ) }
    dend_3 { pt3dadd( 423.02, 350.222, 52.1329, 0.4384 ) }
    dend_3 { pt3dadd( 423.488, 351.255, 52.4278, 0.4328 ) }
    dend_3 { pt3dadd( 423.955, 352.287, 52.7419, 0.3594 ) }
    dend_3 { pt3dadd( 424.422, 353.32, 53.0998, 0.3004 ) }
    dend_3 { pt3dadd( 424.89, 354.353, 53.5083, 0.2752 ) }
    dend_3 { pt3dadd( 425.356, 355.385, 53.956, 0.276 ) }
    dend_3 { pt3dadd( 426.102, 356.202, 54.4715, 0.277 ) }
    dend_3 { pt3dadd( 426.873, 356.999, 55.0348, 0.279 ) }
    dend_3 { pt3dadd( 427.646, 357.795, 55.6293, 0.2828 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( 428.417, 358.592, 56.2397, 0.2898 ) }
    dend_3 { pt3dadd( 429.188, 359.39, 56.8523, 0.303 ) }
    dend_3 { pt3dadd( 429.96, 360.186, 57.4552, 0.3278 ) }
    dend_3 { pt3dadd( 430.742, 360.972, 58.0328, 0.3688 ) }
    dend_3 { pt3dadd( 431.723, 361.561, 58.4928, 0.4718 ) }
    dend_3 { pt3dadd( 432.712, 362.102, 58.9254, 0.5312 ) }
    dend_3 { pt3dadd( 433.704, 362.627, 59.3586, 0.594 ) }
    dend_3 { pt3dadd( 434.696, 363.152, 59.7912, 0.483 ) }
    dend_3 { pt3dadd( 435.687, 363.678, 60.2199, 0.465 ) }
    dend_3 { pt3dadd( 436.678, 364.203, 60.6399, 0.4348 ) }
    dend_3 { pt3dadd( 437.67, 364.728, 61.0459, 0.3628 ) }
    dend_3 { pt3dadd( 438.65, 365.285, 61.3967, 0.3068 ) }
    dend_3 { pt3dadd( 439.592, 365.934, 61.6342, 0.287 ) }
    dend_3 { pt3dadd( 440.535, 366.581, 61.7809, 0.2988 ) }
    dend_3 { pt3dadd( 441.479, 367.229, 61.8587, 0.3142 ) }
    dend_3 { pt3dadd( 442.421, 367.877, 61.8867, 0.3734 ) }
    dend_3 { pt3dadd( 443.364, 368.525, 61.8825, 0.3338 ) }
    dend_3 { pt3dadd( 444.307, 369.172, 61.8607, 0.3 ) }
    dend_3 { pt3dadd( 445.249, 369.82, 61.8321, 0.2746 ) }
    dend_3 { pt3dadd( 446.176, 370.491, 61.7912, 0.2746 ) }
    dend_3 { pt3dadd( 447.09, 371.18, 61.731, 0.2746 ) }
    dend_3 { pt3dadd( 448.004, 371.867, 61.644, 0.2746 ) }
    dend_3 { pt3dadd( 448.918, 372.555, 61.5238, 0.2746 ) }
    dend_3 { pt3dadd( 449.802, 373.244, 61.4401, 0.2746 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 24/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 420.091, 344.662, 46.608, 0.3776 ) }
    dend_2 { pt3dadd( 420.995, 344.111, 47.1806, 0.3414 ) }
    dend_2 { pt3dadd( 421.976, 343.648, 47.5583, 0.314 ) }
    dend_2 { pt3dadd( 423.084, 343.456, 47.7296, 0.3002 ) }
    dend_2 { pt3dadd( 424.193, 343.623, 47.8072, 0.324 ) }
    dend_2 { pt3dadd( 425.299, 343.909, 47.861, 0.3558 ) }
    dend_2 { pt3dadd( 426.433, 344.001, 47.9083, 0.4762 ) }
    dend_2 { pt3dadd( 427.577, 344.002, 47.9718, 0.4006 ) }
    dend_2 { pt3dadd( 428.72, 344.007, 48.0894, 0.339 ) }
    dend_2 { pt3dadd( 429.823, 344.043, 48.3258, 0.2998 ) }
    dend_2 { pt3dadd( 430.865, 344.309, 48.6727, 0.321 ) }
    dend_2 { pt3dadd( 431.892, 344.623, 48.9115, 0.3622 ) }
    dend_2 { pt3dadd( 432.993, 344.611, 49.0504, 0.43 ) }
    dend_2 { pt3dadd( 434.063, 344.565, 49.2999, 0.5978 ) }
    dend_2 { pt3dadd( 435.133, 344.81, 49.6121, 0.7024 ) }
    dend_2 { pt3dadd( 436.246, 344.944, 49.9327, 0.5266 ) }
    dend_2 { pt3dadd( 437.345, 345.156, 50.2662, 0.3954 ) }
    dend_2 { pt3dadd( 438.467, 345.355, 50.5467, 0.3514 ) }
    dend_2 { pt3dadd( 439.605, 345.462, 50.7447, 0.4446 ) }
    dend_2 { pt3dadd( 440.711, 345.738, 50.8564, 0.456 ) }
    dend_2 { pt3dadd( 441.845, 345.843, 50.9121, 0.5734 ) }
    dend_2 { pt3dadd( 442.982, 345.963, 50.932, 0.5536 ) }
    dend_2 { pt3dadd( 444.085, 346.213, 50.8939, 0.5256 ) }
    dend_2 { pt3dadd( 445.214, 346.233, 50.8388, 0.4312 ) }
    dend_2 { pt3dadd( 446.292, 345.992, 50.9219, 0.461 ) }
    dend_2 { pt3dadd( 447.418, 345.847, 51.0594, 0.4398 ) }
    dend_2 { pt3dadd( 448.561, 345.821, 51.2221, 0.542 ) }
    dend_2 { pt3dadd( 449.701, 345.763, 51.4287, 0.501 ) }
    dend_2 { pt3dadd( 450.777, 345.574, 51.6821, 0.401 ) }
    dend_2 { pt3dadd( 451.814, 345.326, 52.0576, 0.3316 ) }
    dend_2 { pt3dadd( 452.891, 345.1, 52.4334, 0.328 ) }
    dend_2 { pt3dadd( 453.975, 344.797, 52.6907, 0.3988 ) }
    dend_2 { pt3dadd( 455.039, 344.441, 52.8752, 0.383 ) }
    dend_2 { pt3dadd( 456.092, 344.104, 53.1205, 0.3804 ) }
    dend_2 { pt3dadd( 457.129, 343.996, 53.499, 0.475 ) }
    dend_2 { pt3dadd( 458.21, 343.974, 53.9059, 0.3984 ) }
    dend_2 { pt3dadd( 459.339, 343.826, 54.2427, 0.335 ) }
    dend_2 { pt3dadd( 460.47, 343.743, 54.5308, 0.2922 ) }
    dend_2 { pt3dadd( 461.593, 343.917, 54.7635, 0.3068 ) }
    dend_2 { pt3dadd( 462.66, 344.107, 55.0477, 0.3364 ) }
    dend_2 { pt3dadd( 463.67, 344.37, 55.447, 0.3796 ) }
    dend_2 { pt3dadd( 464.719, 344.711, 55.8684, 0.5152 ) }
    dend_2 { pt3dadd( 465.832, 344.916, 56.252, 0.4984 ) }
    dend_2 { pt3dadd( 466.933, 345.151, 56.6087, 0.3966 ) }
    dend_2 { pt3dadd( 467.888, 345.677, 56.8168, 0.3216 ) }
    dend_2 { pt3dadd( 468.895, 346.171, 56.9016, 0.3156 ) }
    dend_2 { pt3dadd( 469.948, 346.615, 56.945, 0.3464 ) }
    dend_2 { pt3dadd( 471.018, 347.016, 57.0016, 0.428 ) }
    dend_2 { pt3dadd( 472.053, 347.431, 57.1525, 0.4618 ) }
    dend_2 { pt3dadd( 472.984, 348.06, 57.3485, 0.4078 ) }
    dend_2 { pt3dadd( 474.014, 348.48, 57.4974, 0.4152 ) }
    dend_2 { pt3dadd( 475.135, 348.533, 57.6036, 0.3654 ) }
    dend_2 { pt3dadd( 476.145, 348.198, 57.8348, 0.3532 ) }
    dend_2 { pt3dadd( 477.172, 347.928, 58.2033, 0.3984 ) }
    dend_2 { pt3dadd( 478.142, 348.441, 58.5483, 0.3824 ) }
    dend_2 { pt3dadd( 479.167, 348.946, 58.8549, 0.3792 ) }
    dend_2 { pt3dadd( 480.21, 349.366, 59.1942, 0.4722 ) }
    dend_2 { pt3dadd( 481.322, 349.476, 59.5445, 0.3934 ) }
    dend_2 { pt3dadd( 482.464, 349.444, 59.806, 0.3254 ) }
    dend_2 { pt3dadd( 483.605, 349.383, 60.0057, 0.2746 ) }
    dend_2 { pt3dadd( 484.733, 349.39, 60.2325, 0.2746 ) }
    dend_2 { pt3dadd( 485.809, 349.048, 60.4694, 0.2746 ) }
    dend_2 { pt3dadd( 486.772, 348.577, 60.5172, 0.2746 ) }
    dend_2 { pt3dadd( 487.424, 348.521, 60.6152, 0.2746 ) }
    dend_2 { pt3dadd( 488.554, 348.452, 60.7832, 0.2746 ) }
    dend_2 { pt3dadd( 489.685, 348.384, 61.0053, 0.2746 ) }
    dend_2 { pt3dadd( 490.816, 348.315, 61.2648, 0.2746 ) }
    dend_2 { pt3dadd( 491.946, 348.246, 61.5572, 0.2746 ) }
    dend_2 { pt3dadd( 493.083, 348.223, 61.8576, 0.2746 ) }
    dend_2 { pt3dadd( 494.225, 348.238, 62.1188, 0.2746 ) }
    dend_2 { pt3dadd( 495.367, 348.253, 62.349, 0.2746 ) }
    dend_2 { pt3dadd( 496.509, 348.268, 62.559, 0.2746 ) }
    dend_2 { pt3dadd( 497.651, 348.283, 62.7592, 0.2746 ) }
    dend_2 { pt3dadd( 498.793, 348.298, 62.9597, 0.2746 ) }
    dend_2 { pt3dadd( 499.935, 348.312, 63.1694, 0.2746 ) }
    dend_2 { pt3dadd( 501.072, 348.362, 63.4007, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_2 { pt3dadd( 502.197, 348.512, 63.6737, 0.2746 ) }
    dend_2 { pt3dadd( 503.321, 348.66, 63.9792, 0.2746 ) }
    dend_2 { pt3dadd( 504.444, 348.809, 64.3079, 0.2746 ) }
    dend_2 { pt3dadd( 505.569, 348.958, 64.6514, 0.2746 ) }
    dend_2 { pt3dadd( 506.694, 349.108, 65.0017, 0.2746 ) }
    dend_2 { pt3dadd( 507.817, 349.256, 65.35, 0.2746 ) }
    dend_2 { pt3dadd( 508.942, 349.405, 65.6894, 0.2746 ) }
    dend_2 { pt3dadd( 510.066, 349.554, 66.017, 0.2746 ) }
    dend_2 { pt3dadd( 511.19, 349.704, 66.3295, 0.2746 ) }
    dend_2 { pt3dadd( 512.314, 349.852, 66.6246, 0.2746 ) }
    dend_2 { pt3dadd( 513.4, 349.636, 66.873, 0.2746 ) }
    dend_2 { pt3dadd( 514.466, 349.22, 67.0676, 0.2746 ) }
    dend_2 { pt3dadd( 515.531, 348.803, 67.2227, 0.2746 ) }
    dend_2 { pt3dadd( 516.596, 348.387, 67.3534, 0.2746 ) }
    dend_2 { pt3dadd( 517.661, 347.97, 67.4741, 0.2746 ) }
    dend_2 { pt3dadd( 518.726, 347.554, 67.5987, 0.2746 ) }
    dend_2 { pt3dadd( 519.769, 347.087, 67.732, 0.2746 ) }
    dend_2 { pt3dadd( 520.796, 346.589, 67.8975, 0.2746 ) }
    dend_2 { pt3dadd( 521.791, 346.049, 68.1349, 0.2746 ) }
    dend_2 { pt3dadd( 522.786, 345.509, 68.4298, 0.2746 ) }
    dend_2 { pt3dadd( 523.783, 344.97, 68.7688, 0.2746 ) }
    dend_2 { pt3dadd( 524.778, 344.43, 69.1396, 0.2746 ) }
    dend_2 { pt3dadd( 525.774, 343.891, 69.5304, 0.2746 ) }
    dend_2 { pt3dadd( 526.77, 343.351, 69.9303, 0.2746 ) }
    dend_2 { pt3dadd( 527.765, 342.811, 70.3315, 0.2746 ) }
    dend_2 { pt3dadd( 528.761, 342.272, 70.7347, 0.2746 ) }
    dend_2 { pt3dadd( 529.757, 341.732, 71.141, 0.2746 ) }
    dend_2 { pt3dadd( 530.752, 341.192, 71.5504, 0.2746 ) }
    dend_2 { pt3dadd( 531.767, 340.695, 71.9667, 0.2746 ) }
    dend_2 { pt3dadd( 532.809, 340.258, 72.3932, 0.2746 ) }
    dend_2 { pt3dadd( 533.85, 339.819, 72.8283, 0.2746 ) }
    dend_2 { pt3dadd( 534.892, 339.383, 73.2715, 0.2746 ) }
    dend_2 { pt3dadd( 535.933, 338.945, 73.722, 0.2746 ) }
    dend_2 { pt3dadd( 536.975, 338.509, 74.1801, 0.2746 ) }
    dend_2 { pt3dadd( 538.018, 338.07, 74.6458, 0.2746 ) }
    dend_2 { pt3dadd( 539.058, 337.633, 75.1223, 0.2746 ) }
    dend_2 { pt3dadd( 540.101, 337.196, 75.6143, 0.2746 ) }
    dend_2 { pt3dadd( 541.142, 336.758, 76.127, 0.2746 ) }
    dend_2 { pt3dadd( 542.184, 336.321, 76.6643, 0.2746 ) }
    dend_2 { pt3dadd( 543.226, 335.884, 77.229, 0.2746 ) }
    dend_2 { pt3dadd( 544.057, 335.223, 77.8912, 0.2746 ) }
    dend_2 { pt3dadd( 544.841, 334.513, 78.6366, 0.2746 ) }
    dend_2 { pt3dadd( 545.627, 333.802, 79.4296, 0.2746 ) }
    dend_2 { pt3dadd( 546.412, 333.092, 80.2399, 0.2744 ) }
    dend_2 { pt3dadd( 547.203, 332.388, 81.039, 0.2744 ) }
    dend_2 { pt3dadd( 548.281, 332.005, 81.6575, 0.2742 ) }
    dend_2 { pt3dadd( 549.359, 331.623, 82.1293, 0.2736 ) }
    dend_2 { pt3dadd( 550.354, 331.135, 82.5168, 0.2728 ) }
    dend_2 { pt3dadd( 551.035, 330.253, 82.9402, 0.2712 ) }
    dend_2 { pt3dadd( 551.716, 329.37, 83.3944, 0.2684 ) }
    dend_2 { pt3dadd( 552.396, 328.488, 83.8743, 0.2626 ) }
    dend_2 { pt3dadd( 553.077, 327.605, 84.3746, 0.2542 ) }
    dend_2 { pt3dadd( 553.757, 326.723, 84.8658, 0.2288 ) }
    dend_2 { pt3dadd( 554.437, 325.84, 85.848, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 54/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 439.408, 320.215, 23.6684, 0.672 ) }
    dend_17 { pt3dadd( 440.209, 320.24, 23.3954, 0.748 ) }
    dend_17 { pt3dadd( 441.317, 320.414, 23.1423, 0.6006 ) }
    dend_17 { pt3dadd( 442.406, 320.094, 22.9068, 0.5822 ) }
    dend_17 { pt3dadd( 443.386, 319.693, 22.5954, 0.4562 ) }
    dend_17 { pt3dadd( 444.462, 319.513, 22.3224, 0.4392 ) }
    dend_17 { pt3dadd( 445.501, 319.844, 22.3129, 0.5004 ) }
    dend_17 { pt3dadd( 446.488, 320.067, 22.5714, 0.6226 ) }
    dend_17 { pt3dadd( 447.549, 319.843, 22.9261, 0.5772 ) }
    dend_17 { pt3dadd( 448.659, 319.725, 23.1591, 0.6684 ) }
    dend_17 { pt3dadd( 449.786, 319.605, 23.3775, 0.674 ) }
    dend_17 { pt3dadd( 450.861, 319.316, 23.6306, 0.7894 ) }
    dend_17 { pt3dadd( 451.994, 319.29, 23.8608, 0.7242 ) }
    dend_17 { pt3dadd( 453.073, 319.288, 24.0304, 0.585 ) }
    dend_17 { pt3dadd( 454.217, 319.278, 24.178, 0.415 ) }
    dend_17 { pt3dadd( 455.359, 319.207, 24.3233, 0.3586 ) }
    dend_17 { pt3dadd( 456.463, 318.926, 24.4661, 0.3724 ) }
    dend_17 { pt3dadd( 457.562, 318.856, 24.6831, 0.5082 ) }
    dend_17 { pt3dadd( 458.658, 318.937, 24.9665, 0.4544 ) }
    dend_17 { pt3dadd( 459.713, 319.311, 25.1404, 0.4652 ) }
    dend_17 { pt3dadd( 460.794, 319.646, 25.2249, 0.4054 ) }
    dend_17 { pt3dadd( 461.883, 319.992, 25.3112, 0.4528 ) }
    dend_17 { pt3dadd( 462.989, 320.281, 25.3842, 0.4606 ) }
    dend_17 { pt3dadd( 464.035, 320.703, 25.4033, 0.4058 ) }
    dend_17 { pt3dadd( 464.784, 321.445, 25.6206, 0.4116 ) }
    dend_17 { pt3dadd( 465.482, 322.128, 26.0588, 0.3588 ) }
    dend_17 { pt3dadd( 466.281, 322.905, 26.4846, 0.3406 ) }
    dend_17 { pt3dadd( 467.108, 323.666, 26.7453, 0.3756 ) }
    dend_17 { pt3dadd( 468.005, 324.365, 26.9564, 0.338 ) }
    dend_17 { pt3dadd( 468.894, 325.066, 27.158, 0.3076 ) }
    dend_17 { pt3dadd( 470.003, 325.33, 27.2684, 0.2886 ) }
    dend_17 { pt3dadd( 471.066, 325.7, 27.2731, 0.3002 ) }
    dend_17 { pt3dadd( 472.122, 326.086, 27.2362, 0.323 ) }
    dend_17 { pt3dadd( 473.15, 326.051, 27.2902, 0.359 ) }
    dend_17 { pt3dadd( 474.189, 326.138, 27.5366, 0.4582 ) }
    dend_17 { pt3dadd( 475.073, 326.675, 27.9331, 0.4828 ) }
    dend_17 { pt3dadd( 476.149, 327.064, 28.292, 0.6176 ) }
    dend_17 { pt3dadd( 477.209, 327.483, 28.6185, 0.6624 ) }
    dend_17 { pt3dadd( 478.189, 328.044, 28.94, 0.5964 ) }
    dend_17 { pt3dadd( 479.108, 328.66, 29.2678, 0.5106 ) }
    dend_17 { pt3dadd( 480.082, 329.252, 29.5056, 0.4042 ) }
    dend_17 { pt3dadd( 481.117, 329.736, 29.6663, 0.4088 ) }
    dend_17 { pt3dadd( 482.081, 330.333, 29.766, 0.3522 ) }
    dend_17 { pt3dadd( 482.898, 331.127, 29.8519, 0.3348 ) }
    dend_17 { pt3dadd( 483.754, 331.859, 29.9396, 0.3338 ) }
    dend_17 { pt3dadd( 484.7, 332.492, 29.9701, 0.4098 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_17 { pt3dadd( 485.452, 333.31, 29.9958, 0.4032 ) }
    dend_17 { pt3dadd( 486.136, 334.215, 30.0364, 0.4192 ) }
    dend_17 { pt3dadd( 486.855, 335.057, 29.9452, 0.5408 ) }
    dend_17 { pt3dadd( 487.328, 336.08, 29.8917, 0.5482 ) }
    dend_17 { pt3dadd( 487.882, 337.036, 29.722, 0.478 ) }
    dend_17 { pt3dadd( 489.313, 336.908, 29.3849, 0.4388 ) }
    dend_17 { pt3dadd( 490.426, 337.066, 29.2625, 0.4356 ) }
    dend_17 { pt3dadd( 491.295, 337.702, 29.153, 0.3548 ) }
    dend_17 { pt3dadd( 492.439, 337.709, 29.0942, 0.3398 ) }
    dend_17 { pt3dadd( 493.583, 337.709, 29.0965, 0.3442 ) }
    dend_17 { pt3dadd( 494.716, 337.827, 29.1449, 0.424 ) }
    dend_17 { pt3dadd( 495.787, 338.226, 29.2356, 0.453 ) }
    dend_17 { pt3dadd( 496.734, 338.807, 29.3639, 0.3978 ) }
    dend_17 { pt3dadd( 497.521, 339.598, 29.6044, 0.3674 ) }
    dend_17 { pt3dadd( 497.9, 340.53, 29.9617, 0.4198 ) }
    dend_17 { pt3dadd( 498.711, 341.165, 30.3682, 0.4452 ) }
    dend_17 { pt3dadd( 499.481, 341.906, 30.7076, 0.3834 ) }
    dend_17 { pt3dadd( 500.005, 342.78, 31.0674, 0.3396 ) }
    dend_17 { pt3dadd( 500.763, 343.542, 31.3872, 0.3734 ) }
    dend_17 { pt3dadd( 501.806, 343.845, 31.6226, 0.3338 ) }
    dend_17 { pt3dadd( 502.884, 344.192, 31.7968, 0.3 ) }
    dend_17 { pt3dadd( 503.665, 344.981, 31.9612, 0.2746 ) }
    dend_17 { pt3dadd( 504.116, 345.916, 32.1972, 0.2746 ) }
    dend_17 { pt3dadd( 505.011, 346.593, 32.3806, 0.2748 ) }
    dend_17 { pt3dadd( 505.951, 347.217, 32.571, 0.275 ) }
    dend_17 { pt3dadd( 507.056, 347.433, 32.7272, 0.2752 ) }
    dend_17 { pt3dadd( 508.2, 347.433, 32.8558, 0.2758 ) }
    dend_17 { pt3dadd( 509.344, 347.433, 32.9641, 0.2768 ) }
    dend_17 { pt3dadd( 510.487, 347.466, 33.0756, 0.2786 ) }
    dend_17 { pt3dadd( 511.552, 347.776, 33.2184, 0.2822 ) }
    dend_17 { pt3dadd( 512.696, 347.776, 33.3984, 0.2888 ) }
    dend_17 { pt3dadd( 513.84, 347.776, 33.6244, 0.3006 ) }
    dend_17 { pt3dadd( 514.983, 347.753, 33.8946, 0.3238 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 439.408, 320.215, 23.6684, 0.672 ) }
    dend_10 { pt3dadd( 440.689, 319.747, 24.2105, 0.6864 ) }
    dend_10 { pt3dadd( 441.599, 319.096, 24.1293, 0.599 ) }
    dend_10 { pt3dadd( 442.119, 318.11, 24.0873, 0.4844 ) }
    dend_10 { pt3dadd( 442.273, 317.025, 23.9134, 0.5056 ) }
    dend_10 { pt3dadd( 442.788, 316.055, 23.6558, 0.554 ) }
    dend_10 { pt3dadd( 443.688, 315.364, 23.4346, 0.6016 ) }
    dend_10 { pt3dadd( 444.582, 314.651, 23.273, 0.6652 ) }
    dend_10 { pt3dadd( 445.524, 314.0, 23.17, 0.6722 ) }
    dend_10 { pt3dadd( 446.444, 313.321, 23.1353, 0.537 ) }
    dend_10 { pt3dadd( 447.516, 312.932, 23.1594, 0.5498 ) }
    dend_10 { pt3dadd( 448.648, 313.048, 23.2322, 0.4374 ) }
    dend_10 { pt3dadd( 449.714, 313.351, 23.3996, 0.4332 ) }
    dend_10 { pt3dadd( 450.782, 313.685, 23.5124, 0.3502 ) }
    dend_10 { pt3dadd( 451.706, 313.05, 23.6359, 0.3304 ) }
    dend_10 { pt3dadd( 452.824, 313.138, 23.7026, 0.3318 ) }
    dend_10 { pt3dadd( 453.591, 313.978, 23.6972, 0.3764 ) }
    dend_10 { pt3dadd( 454.2, 314.905, 23.578, 0.4846 ) }
    dend_10 { pt3dadd( 455.073, 315.625, 23.4346, 0.562 ) }
    dend_10 { pt3dadd( 456.136, 316.035, 23.3402, 0.6158 ) }
    dend_10 { pt3dadd( 457.267, 316.195, 23.2957, 0.693 ) }
    dend_10 { pt3dadd( 458.372, 316.469, 23.322, 0.7172 ) }
    dend_10 { pt3dadd( 459.492, 316.596, 23.4475, 0.6536 ) }
    dend_10 { pt3dadd( 460.616, 316.782, 23.5763, 0.6044 ) }
    dend_10 { pt3dadd( 461.713, 317.005, 23.772, 0.637 ) }
    dend_10 { pt3dadd( 462.834, 317.08, 23.9758, 0.5558 ) }
    dend_10 { pt3dadd( 463.942, 317.323, 24.0761, 0.6336 ) }
    dend_10 { pt3dadd( 465.021, 317.699, 24.1332, 0.583 ) }
    dend_10 { pt3dadd( 466.056, 318.181, 24.1738, 0.7504 ) }
    dend_10 { pt3dadd( 467.095, 318.543, 24.2894, 0.708 ) }
    dend_10 { pt3dadd( 468.082, 318.42, 24.2318, 0.7418 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 449.802, 373.244, 61.4401, 0.2746 ) }
    dend_5 { pt3dadd( 449.309, 373.648, 61.1425, 0.2746 ) }
    dend_5 { pt3dadd( 449.606, 374.722, 60.7368, 0.2746 ) }
    dend_5 { pt3dadd( 449.903, 375.796, 60.2515, 0.2746 ) }
    dend_5 { pt3dadd( 450.217, 376.863, 59.715, 0.2746 ) }
    dend_5 { pt3dadd( 450.791, 377.828, 59.1654, 0.2746 ) }
    dend_5 { pt3dadd( 451.365, 378.793, 58.6222, 0.2746 ) }
    dend_5 { pt3dadd( 451.94, 379.758, 58.116, 0.2746 ) }
    dend_5 { pt3dadd( 452.514, 380.722, 57.6349, 0.2746 ) }
    dend_5 { pt3dadd( 453.088, 381.688, 57.1782, 0.2746 ) }
    dend_5 { pt3dadd( 453.947, 382.43, 56.786, 0.2746 ) }
    dend_5 { pt3dadd( 454.82, 383.163, 56.4449, 0.2746 ) }
    dend_5 { pt3dadd( 455.694, 383.897, 56.1425, 0.2746 ) }
    dend_5 { pt3dadd( 456.743, 384.079, 55.8636, 0.2746 ) }
    dend_5 { pt3dadd( 457.878, 383.992, 55.5979, 0.2746 ) }
    dend_5 { pt3dadd( 459.014, 383.906, 55.3367, 0.2746 ) }
    dend_5 { pt3dadd( 460.149, 383.819, 55.0735, 0.2746 ) }
    dend_5 { pt3dadd( 461.285, 383.733, 54.8094, 0.2746 ) }
    dend_5 { pt3dadd( 462.42, 383.646, 54.5462, 0.2746 ) }
    dend_5 { pt3dadd( 463.272, 382.936, 54.2858, 0.2746 ) }
    dend_5 { pt3dadd( 464.083, 382.137, 54.0294, 0.2746 ) }
    dend_5 { pt3dadd( 464.894, 381.337, 53.7779, 0.2746 ) }
    dend_5 { pt3dadd( 465.705, 380.539, 53.5318, 0.2746 ) }
    dend_5 { pt3dadd( 466.596, 379.837, 53.3, 0.2746 ) }
    dend_5 { pt3dadd( 467.563, 379.229, 53.0869, 0.2746 ) }
    dend_5 { pt3dadd( 468.53, 378.622, 52.887, 0.2746 ) }
    dend_5 { pt3dadd( 469.498, 378.014, 52.6932, 0.2746 ) }
    dend_5 { pt3dadd( 470.464, 377.406, 52.4983, 0.2744 ) }
    dend_5 { pt3dadd( 471.432, 376.798, 52.2956, 0.2744 ) }
    dend_5 { pt3dadd( 472.399, 376.191, 52.0792, 0.2742 ) }
    dend_5 { pt3dadd( 473.366, 375.583, 51.8454, 0.2736 ) }
    dend_5 { pt3dadd( 474.31, 374.963, 51.5533, 0.2728 ) }
    dend_5 { pt3dadd( 475.254, 374.344, 51.207, 0.2712 ) }
    dend_5 { pt3dadd( 476.198, 373.724, 50.8292, 0.2684 ) }
    dend_5 { pt3dadd( 477.142, 373.105, 50.4406, 0.2626 ) }
    dend_5 { pt3dadd( 478.087, 372.485, 50.0592, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_5 { pt3dadd( 479.031, 371.865, 49.7, 0.2288 ) }
    dend_5 { pt3dadd( 479.974, 371.246, 49.0, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 2/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 449.802, 373.244, 61.4401, 0.2746 ) }
    dend_4 { pt3dadd( 450.686, 373.931, 63.0496, 0.2288 ) }
    dend_4 { pt3dadd( 451.568, 374.62, 63.8893, 0.2746 ) }
    dend_4 { pt3dadd( 452.45, 375.307, 64.248, 0.2746 ) }
    dend_4 { pt3dadd( 453.332, 375.996, 64.6691, 0.2746 ) }
    dend_4 { pt3dadd( 454.214, 376.684, 65.1263, 0.2746 ) }
    dend_4 { pt3dadd( 455.092, 377.383, 65.5872, 0.2746 ) }
    dend_4 { pt3dadd( 455.956, 378.125, 65.9971, 0.2746 ) }
    dend_4 { pt3dadd( 456.82, 378.868, 66.3541, 0.2744 ) }
    dend_4 { pt3dadd( 457.684, 379.611, 66.6722, 0.2744 ) }
    dend_4 { pt3dadd( 458.547, 380.354, 66.9634, 0.2742 ) }
    dend_4 { pt3dadd( 459.411, 381.096, 67.2389, 0.2736 ) }
    dend_4 { pt3dadd( 460.176, 381.899, 67.5094, 0.2728 ) }
    dend_4 { pt3dadd( 460.457, 383.001, 67.7942, 0.2712 ) }
    dend_4 { pt3dadd( 460.738, 384.101, 68.0826, 0.2684 ) }
    dend_4 { pt3dadd( 461.018, 385.203, 68.3659, 0.2626 ) }
    dend_4 { pt3dadd( 461.3, 386.305, 68.6372, 0.2542 ) }
    dend_4 { pt3dadd( 461.58, 387.406, 68.8898, 0.2288 ) }
    dend_4 { pt3dadd( 461.861, 388.507, 69.384, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 21/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 514.983, 347.753, 33.8946, 0.3238 ) }
    dend_19 { pt3dadd( 514.799, 347.909, 34.6864, 0.3612 ) }
    dend_19 { pt3dadd( 515.014, 349.03, 35.3556, 0.4564 ) }
    dend_19 { pt3dadd( 515.668, 349.857, 35.9128, 0.5088 ) }
    dend_19 { pt3dadd( 516.502, 350.613, 36.4095, 0.5218 ) }
    dend_19 { pt3dadd( 517.221, 351.485, 36.8365, 0.4976 ) }
    dend_19 { pt3dadd( 517.944, 352.217, 37.263, 0.4582 ) }
    dend_19 { pt3dadd( 519.026, 352.463, 37.6463, 0.3594 ) }
    dend_19 { pt3dadd( 519.54, 353.367, 38.0232, 0.3002 ) }
    dend_19 { pt3dadd( 519.834, 354.388, 38.3972, 0.2748 ) }
    dend_19 { pt3dadd( 519.834, 355.508, 38.806, 0.275 ) }
    dend_19 { pt3dadd( 520.257, 356.197, 39.4027, 0.2752 ) }
    dend_19 { pt3dadd( 520.359, 357.22, 40.0, 0.2758 ) }
    dend_19 { pt3dadd( 520.558, 358.34, 40.4656, 0.2768 ) }
    dend_19 { pt3dadd( 521.02, 359.295, 40.8906, 0.2786 ) }
    dend_19 { pt3dadd( 521.417, 360.289, 41.1844, 0.2824 ) }
    dend_19 { pt3dadd( 522.411, 360.703, 41.3619, 0.289 ) }
    dend_19 { pt3dadd( 523.276, 361.251, 41.4719, 0.3014 ) }
    dend_19 { pt3dadd( 524.411, 361.281, 41.5386, 0.3248 ) }
    dend_19 { pt3dadd( 525.488, 361.561, 41.5696, 0.3648 ) }
    dend_19 { pt3dadd( 526.62, 361.618, 41.5682, 0.4566 ) }
    dend_19 { pt3dadd( 527.633, 362.027, 41.5514, 0.5396 ) }
    dend_19 { pt3dadd( 528.37, 362.847, 41.4602, 0.4332 ) }
    dend_19 { pt3dadd( 529.006, 363.759, 41.3588, 0.3532 ) }
    dend_19 { pt3dadd( 530.104, 363.956, 41.2779, 0.321 ) }
    dend_19 { pt3dadd( 530.835, 364.795, 41.2188, 0.386 ) }
    dend_19 { pt3dadd( 531.803, 365.404, 41.179, 0.3584 ) }
    dend_19 { pt3dadd( 532.843, 365.876, 41.1578, 0.3398 ) }
    dend_19 { pt3dadd( 533.798, 366.484, 41.1519, 0.374 ) }
    dend_19 { pt3dadd( 534.876, 366.864, 41.1488, 0.335 ) }
    dend_19 { pt3dadd( 535.79, 367.517, 41.1421, 0.302 ) }
    dend_19 { pt3dadd( 536.527, 368.361, 41.1281, 0.2782 ) }
    dend_19 { pt3dadd( 537.067, 369.263, 41.1415, 0.2814 ) }
    dend_19 { pt3dadd( 537.973, 369.944, 41.1292, 0.287 ) }
    dend_19 { pt3dadd( 538.928, 370.546, 41.0925, 0.2988 ) }
    dend_19 { pt3dadd( 540.026, 370.752, 40.9716, 0.3142 ) }
    dend_19 { pt3dadd( 541.107, 370.885, 40.7537, 0.3734 ) }
    dend_19 { pt3dadd( 542.251, 370.885, 40.5709, 0.3338 ) }
    dend_19 { pt3dadd( 543.395, 370.885, 40.4225, 0.3 ) }
    dend_19 { pt3dadd( 544.539, 370.885, 40.3127, 0.2746 ) }
    dend_19 { pt3dadd( 545.678, 370.885, 40.21, 0.2746 ) }
    dend_19 { pt3dadd( 546.81, 370.999, 40.1358, 0.2746 ) }
    dend_19 { pt3dadd( 547.954, 370.999, 40.089, 0.2746 ) }
    dend_19 { pt3dadd( 549.091, 370.999, 40.0708, 0.2746 ) }
    dend_19 { pt3dadd( 550.224, 370.885, 40.0364, 0.2746 ) }
    dend_19 { pt3dadd( 551.307, 370.687, 40.0257, 0.2746 ) }
    dend_19 { pt3dadd( 552.349, 370.221, 39.9591, 0.2746 ) }
    dend_19 { pt3dadd( 553.344, 369.978, 39.7096, 0.2746 ) }
    dend_19 { pt3dadd( 553.999, 369.626, 39.2322, 0.2746 ) }
    dend_19 { pt3dadd( 555.111, 369.587, 38.7313, 0.2746 ) }
    dend_19 { pt3dadd( 556.205, 369.347, 38.3135, 0.2748 ) }
    dend_19 { pt3dadd( 557.101, 368.679, 37.935, 0.2748 ) }
    dend_19 { pt3dadd( 558.167, 368.482, 37.571, 0.2752 ) }
    dend_19 { pt3dadd( 559.311, 368.482, 37.3173, 0.2758 ) }
    dend_19 { pt3dadd( 560.446, 368.597, 37.14, 0.2766 ) }
    dend_19 { pt3dadd( 560.863, 368.656, 36.9785, 0.2784 ) }
    dend_19 { pt3dadd( 561.988, 368.831, 36.7931, 0.2816 ) }
    dend_19 { pt3dadd( 563.112, 369.006, 36.5946, 0.2876 ) }
    dend_19 { pt3dadd( 563.986, 368.553, 36.3894, 0.2998 ) }
    dend_19 { pt3dadd( 564.681, 367.651, 36.176, 0.316 ) }
    dend_19 { pt3dadd( 565.376, 366.747, 35.9643, 0.377 ) }
    dend_19 { pt3dadd( 566.097, 365.865, 35.7664, 0.3406 ) }
    dend_19 { pt3dadd( 566.88, 365.032, 35.5956, 0.3128 ) }
    dend_19 { pt3dadd( 567.661, 364.2, 35.4511, 0.2976 ) }
    dend_19 { pt3dadd( 568.442, 363.368, 35.3293, 0.3194 ) }
    dend_19 { pt3dadd( 569.224, 362.536, 35.2282, 0.3476 ) }
    dend_19 { pt3dadd( 570.131, 361.856, 35.1943, 0.4604 ) }
    dend_19 { pt3dadd( 571.079, 361.226, 35.2251, 0.373 ) }
    dend_19 { pt3dadd( 572.028, 360.596, 35.2985, 0.2796 ) }
    dend_19 { pt3dadd( 573.032, 360.075, 35.28, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 91/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 514.983, 347.753, 33.8946, 0.3238 ) }
    dend_18 { pt3dadd( 515.883, 347.093, 32.76, 0.2288 ) }
    dend_18 { pt3dadd( 516.943, 346.746, 32.5343, 0.2752 ) }
    dend_18 { pt3dadd( 518.087, 346.746, 32.4509, 0.2758 ) }
    dend_18 { pt3dadd( 519.214, 346.861, 32.3176, 0.2766 ) }
    dend_18 { pt3dadd( 520.344, 346.861, 32.1076, 0.2784 ) }
    dend_18 { pt3dadd( 521.488, 346.861, 31.8917, 0.2818 ) }
    dend_18 { pt3dadd( 522.63, 346.861, 31.6453, 0.288 ) }
    dend_18 { pt3dadd( 523.743, 346.861, 31.2889, 0.3006 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_18 { pt3dadd( 524.764, 346.617, 30.8778, 0.3178 ) }
    dend_18 { pt3dadd( 525.587, 345.852, 30.4634, 0.3802 ) }
    dend_18 { pt3dadd( 526.698, 345.717, 30.0384, 0.3464 ) }
    dend_18 { pt3dadd( 526.725, 345.866, 29.4958, 0.3242 ) }
    dend_18 { pt3dadd( 526.883, 346.538, 28.6513, 0.3142 ) }
    dend_18 { pt3dadd( 527.041, 347.212, 27.6156, 0.3734 ) }
    dend_18 { pt3dadd( 527.116, 348.258, 26.7305, 0.3338 ) }
    dend_18 { pt3dadd( 527.7, 349.211, 26.0215, 0.3 ) }
    dend_18 { pt3dadd( 528.352, 350.141, 25.4853, 0.2746 ) }
    dend_18 { pt3dadd( 528.687, 351.199, 25.1544, 0.2748 ) }
    dend_18 { pt3dadd( 528.833, 352.333, 25.0186, 0.2748 ) }
    dend_18 { pt3dadd( 528.963, 353.47, 25.0054, 0.275 ) }
    dend_18 { pt3dadd( 529.093, 354.606, 25.0494, 0.2754 ) }
    dend_18 { pt3dadd( 529.886, 355.337, 25.1919, 0.2764 ) }
    dend_18 { pt3dadd( 530.803, 355.991, 25.4128, 0.278 ) }
    dend_18 { pt3dadd( 531.761, 356.593, 25.6581, 0.2812 ) }
    dend_18 { pt3dadd( 532.774, 357.119, 25.8804, 0.2864 ) }
    dend_18 { pt3dadd( 533.788, 357.645, 26.0742, 0.2976 ) }
    dend_18 { pt3dadd( 534.802, 358.17, 26.234, 0.3124 ) }
    dend_18 { pt3dadd( 535.816, 358.697, 26.3533, 0.37 ) }
    dend_18 { pt3dadd( 536.794, 359.281, 26.4317, 0.3276 ) }
    dend_18 { pt3dadd( 537.726, 359.946, 26.4695, 0.288 ) }
    dend_18 { pt3dadd( 538.444, 360.818, 26.4645, 0.2542 ) }
    dend_18 { pt3dadd( 539.092, 361.76, 26.4244, 0.2288 ) }
    dend_18 { pt3dadd( 539.738, 362.702, 26.264, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 468.082, 318.42, 24.2318, 0.7418 ) }
    dend_12 { pt3dadd( 469.196, 318.351, 24.0856, 0.7132 ) }
    dend_12 { pt3dadd( 470.306, 318.203, 23.8958, 0.6462 ) }
    dend_12 { pt3dadd( 471.421, 318.168, 23.7734, 0.5908 ) }
    dend_12 { pt3dadd( 472.463, 318.532, 23.7672, 0.6102 ) }
    dend_12 { pt3dadd( 473.559, 318.509, 23.7894, 0.5128 ) }
    dend_12 { pt3dadd( 474.631, 318.124, 23.8246, 0.5222 ) }
    dend_12 { pt3dadd( 475.692, 318.404, 23.8484, 0.5306 ) }
    dend_12 { pt3dadd( 476.781, 318.753, 23.8454, 0.5914 ) }
    dend_12 { pt3dadd( 477.917, 318.796, 23.7938, 0.4832 ) }
    dend_12 { pt3dadd( 479.012, 318.607, 23.6396, 0.4418 ) }
    dend_12 { pt3dadd( 480.023, 318.108, 23.4674, 0.5064 ) }
    dend_12 { pt3dadd( 481.138, 317.894, 23.3433, 0.627 ) }
    dend_12 { pt3dadd( 482.262, 317.684, 23.2736, 0.6166 ) }
    dend_12 { pt3dadd( 483.386, 317.85, 23.2604, 0.5896 ) }
    dend_12 { pt3dadd( 484.484, 318.045, 23.3618, 0.578 ) }
    dend_12 { pt3dadd( 485.587, 318.302, 23.506, 0.5984 ) }
    dend_12 { pt3dadd( 486.718, 318.184, 23.6085, 0.6608 ) }
    dend_12 { pt3dadd( 487.688, 317.592, 23.66, 0.6566 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 44/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 468.082, 318.42, 24.2318, 0.7418 ) }
    dend_11 { pt3dadd( 468.06, 319.046, 25.1924, 0.4576 ) }
    dend_11 { pt3dadd( 469.161, 319.269, 25.4184, 0.6114 ) }
    dend_11 { pt3dadd( 470.266, 319.318, 25.5587, 0.7216 ) }
    dend_11 { pt3dadd( 471.37, 319.501, 25.7236, 0.5908 ) }
    dend_11 { pt3dadd( 472.241, 320.178, 25.7978, 0.6054 ) }
    dend_11 { pt3dadd( 473.201, 320.7, 25.7239, 0.5254 ) }
    dend_11 { pt3dadd( 474.224, 321.183, 25.5872, 0.4406 ) }
    dend_11 { pt3dadd( 475.148, 321.847, 25.4526, 0.4306 ) }
    dend_11 { pt3dadd( 476.042, 322.555, 25.3324, 0.3872 ) }
    dend_11 { pt3dadd( 477.04, 323.107, 25.2409, 0.4256 ) }
    dend_11 { pt3dadd( 478.126, 323.458, 25.1877, 0.378 ) }
    dend_11 { pt3dadd( 479.242, 323.586, 25.1804, 0.4074 ) }
    dend_11 { pt3dadd( 480.335, 323.677, 25.177, 0.3496 ) }
    dend_11 { pt3dadd( 481.349, 324.188, 25.1096, 0.3302 ) }
    dend_11 { pt3dadd( 482.332, 324.772, 25.0146, 0.3254 ) }
    dend_11 { pt3dadd( 483.385, 325.157, 24.8945, 0.394 ) }
    dend_11 { pt3dadd( 484.52, 325.198, 24.7254, 0.373 ) }
    dend_11 { pt3dadd( 485.638, 325.033, 24.4986, 0.3684 ) }
    dend_11 { pt3dadd( 486.751, 324.896, 24.2245, 0.4214 ) }
    dend_11 { pt3dadd( 487.878, 325.023, 23.924, 0.4484 ) }
    dend_11 { pt3dadd( 488.992, 324.99, 23.6289, 0.388 ) }
    dend_11 { pt3dadd( 490.101, 324.82, 23.2938, 0.3556 ) }
    dend_11 { pt3dadd( 491.157, 324.868, 22.8402, 0.367 ) }
    dend_11 { pt3dadd( 492.119, 325.243, 22.3101, 0.498 ) }
    dend_11 { pt3dadd( 493.153, 325.62, 21.8291, 0.4358 ) }
    dend_11 { pt3dadd( 494.288, 325.632, 21.4544, 0.43 ) }
    dend_11 { pt3dadd( 495.344, 325.324, 21.0988, 0.3444 ) }
    dend_11 { pt3dadd( 496.419, 325.086, 20.7298, 0.3192 ) }
    dend_11 { pt3dadd( 497.53, 325.128, 20.3529, 0.3112 ) }
    dend_11 { pt3dadd( 498.627, 324.966, 19.9856, 0.3372 ) }
    dend_11 { pt3dadd( 499.75, 324.814, 19.6456, 0.4172 ) }
    dend_11 { pt3dadd( 500.874, 324.811, 19.3096, 0.4104 ) }
    dend_11 { pt3dadd( 501.98, 324.997, 19.0868, 0.4634 ) }
    dend_11 { pt3dadd( 503.077, 324.937, 18.888, 0.4738 ) }
    dend_11 { pt3dadd( 504.176, 324.652, 18.7398, 0.461 ) }
    dend_11 { pt3dadd( 505.301, 324.465, 18.6539, 0.3644 ) }
    dend_11 { pt3dadd( 506.309, 324.903, 18.6155, 0.3098 ) }
    dend_11 { pt3dadd( 507.155, 325.667, 18.6127, 0.2924 ) }
    dend_11 { pt3dadd( 508.046, 326.382, 18.6304, 0.3086 ) }
    dend_11 { pt3dadd( 508.931, 327.106, 18.6754, 0.3324 ) }
    dend_11 { pt3dadd( 509.967, 327.501, 18.7978, 0.4084 ) }
    dend_11 { pt3dadd( 511.083, 327.685, 18.9448, 0.3934 ) }
    dend_11 { pt3dadd( 512.192, 327.804, 18.975, 0.4366 ) }
    dend_11 { pt3dadd( 513.21, 327.351, 18.9364, 0.3988 ) }
    dend_11 { pt3dadd( 514.142, 327.931, 18.9179, 0.4452 ) }
    dend_11 { pt3dadd( 515.143, 328.36, 19.01, 0.4228 ) }
    dend_11 { pt3dadd( 515.739, 328.223, 19.0641, 0.4502 ) }
    dend_11 { pt3dadd( 516.841, 328.433, 19.0803, 0.6246 ) }
    dend_11 { pt3dadd( 517.897, 328.869, 19.059, 0.5772 ) }
    dend_11 { pt3dadd( 518.968, 329.195, 18.9314, 0.4588 ) }
    dend_11 { pt3dadd( 519.981, 328.946, 18.6379, 0.386 ) }
    dend_11 { pt3dadd( 521.036, 328.559, 18.3114, 0.4548 ) }
    dend_11 { pt3dadd( 522.036, 328.098, 18.156, 0.5084 ) }
    dend_11 { pt3dadd( 523.077, 328.032, 18.202, 0.5084 ) }
    dend_11 { pt3dadd( 524.108, 328.338, 18.1149, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( 525.203, 328.439, 17.668, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 1/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 487.688, 317.592, 23.66, 0.6566 ) }
    dend_14 { pt3dadd( 488.161, 317.266, 23.5332, 0.5444 ) }
    dend_14 { pt3dadd( 489.299, 317.231, 23.3974, 0.3874 ) }
    dend_14 { pt3dadd( 490.443, 317.231, 23.2546, 0.305 ) }
    dend_14 { pt3dadd( 491.546, 316.981, 23.1202, 0.284 ) }
    dend_14 { pt3dadd( 492.651, 316.695, 23.0026, 0.292 ) }
    dend_14 { pt3dadd( 493.731, 316.43, 22.8808, 0.3064 ) }
    dend_14 { pt3dadd( 494.734, 316.309, 22.6436, 0.3354 ) }
    dend_14 { pt3dadd( 495.823, 315.98, 22.4549, 0.378 ) }
    dend_14 { pt3dadd( 496.946, 315.858, 22.3118, 0.512 ) }
    dend_14 { pt3dadd( 498.09, 315.858, 22.2118, 0.4926 ) }
    dend_14 { pt3dadd( 499.204, 315.658, 22.1508, 0.3858 ) }
    dend_14 { pt3dadd( 500.331, 315.507, 22.1256, 0.302 ) }
    dend_14 { pt3dadd( 501.389, 315.145, 22.1276, 0.2784 ) }
    dend_14 { pt3dadd( 502.376, 314.737, 22.1306, 0.2816 ) }
    dend_14 { pt3dadd( 502.936, 313.75, 22.1348, 0.2876 ) }
    dend_14 { pt3dadd( 503.964, 313.456, 22.1407, 0.2998 ) }
    dend_14 { pt3dadd( 505.106, 313.421, 22.1491, 0.3158 ) }
    dend_14 { pt3dadd( 506.244, 313.342, 22.1609, 0.3766 ) }
    dend_14 { pt3dadd( 507.388, 313.342, 22.1768, 0.3398 ) }
    dend_14 { pt3dadd( 508.532, 313.342, 22.1992, 0.3112 ) }
    dend_14 { pt3dadd( 509.669, 313.446, 22.232, 0.2952 ) }
    dend_14 { pt3dadd( 510.813, 313.456, 22.2782, 0.313 ) }
    dend_14 { pt3dadd( 511.95, 313.359, 22.3384, 0.345 ) }
    dend_14 { pt3dadd( 513.079, 313.227, 22.4126, 0.408 ) }
    dend_14 { pt3dadd( 514.204, 313.227, 22.5355, 0.509 ) }
    dend_14 { pt3dadd( 515.236, 313.227, 22.7805, 0.7722 ) }
    dend_14 { pt3dadd( 516.149, 313.888, 22.9824, 0.8926 ) }
    dend_14 { pt3dadd( 516.931, 314.722, 23.1473, 0.841 ) }
    dend_14 { pt3dadd( 517.564, 315.67, 23.2887, 0.7038 ) }
    dend_14 { pt3dadd( 518.024, 316.546, 23.3747, 0.654 ) }
    dend_14 { pt3dadd( 518.913, 317.264, 23.4637, 0.7116 ) }
    dend_14 { pt3dadd( 520.042, 317.447, 23.564, 0.776 ) }
    dend_14 { pt3dadd( 520.891, 317.494, 23.7569, 0.6426 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 35/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 487.688, 317.592, 23.66, 0.6566 ) }
    dend_13 { pt3dadd( 488.648, 316.971, 24.2642, 0.2288 ) }
    dend_13 { pt3dadd( 489.65, 316.545, 25.0754, 0.3238 ) }
    dend_13 { pt3dadd( 490.786, 316.454, 25.375, 0.391 ) }
    dend_13 { pt3dadd( 491.403, 315.741, 25.7272, 0.3674 ) }
    dend_13 { pt3dadd( 491.387, 314.637, 26.1383, 0.3566 ) }
    dend_13 { pt3dadd( 491.617, 313.537, 26.5317, 0.4066 ) }
    dend_13 { pt3dadd( 492.228, 312.619, 26.9486, 0.3902 ) }
    dend_13 { pt3dadd( 492.882, 311.731, 27.3666, 0.4292 ) }
    dend_13 { pt3dadd( 493.292, 310.68, 27.7082, 0.3924 ) }
    dend_13 { pt3dadd( 493.976, 310.005, 28.0591, 0.3978 ) }
    dend_13 { pt3dadd( 494.913, 310.259, 28.5894, 0.5082 ) }
    dend_13 { pt3dadd( 495.925, 310.34, 29.2494, 0.4544 ) }
    dend_13 { pt3dadd( 496.964, 309.954, 29.9342, 0.4652 ) }
    dend_13 { pt3dadd( 497.947, 309.516, 30.6936, 0.4054 ) }
    dend_13 { pt3dadd( 498.798, 308.909, 31.5353, 0.4528 ) }
    dend_13 { pt3dadd( 499.739, 308.344, 32.3641, 0.4606 ) }
    dend_13 { pt3dadd( 500.688, 307.766, 33.1506, 0.4056 ) }
    dend_13 { pt3dadd( 501.711, 307.395, 33.9231, 0.4116 ) }
    dend_13 { pt3dadd( 502.817, 307.416, 34.6472, 0.357 ) }
    dend_13 { pt3dadd( 503.534, 307.777, 35.5183, 0.345 ) }
    dend_13 { pt3dadd( 504.552, 307.914, 36.3619, 0.3476 ) }
    dend_13 { pt3dadd( 505.602, 308.272, 36.9502, 0.4604 ) }
    dend_13 { pt3dadd( 506.687, 308.624, 37.3685, 0.373 ) }
    dend_13 { pt3dadd( 507.745, 308.555, 37.821, 0.2796 ) }
    dend_13 { pt3dadd( 508.724, 308.774, 39.0104, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 61/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 520.891, 317.494, 23.7569, 0.6426 ) }
    dend_16 { pt3dadd( 521.963, 317.89, 23.3716, 0.2288 ) }
    dend_16 { pt3dadd( 523.067, 318.06, 23.476, 0.3228 ) }
    dend_16 { pt3dadd( 524.179, 317.995, 23.4514, 0.3658 ) }
    dend_16 { pt3dadd( 525.176, 318.518, 23.3825, 0.435 ) }
    dend_16 { pt3dadd( 525.924, 319.374, 23.3523, 0.6146 ) }
    dend_16 { pt3dadd( 526.83, 320.018, 23.408, 0.6976 ) }
    dend_16 { pt3dadd( 527.83, 320.548, 23.4007, 0.6934 ) }
    dend_16 { pt3dadd( 528.926, 320.846, 23.4156, 0.5368 ) }
    dend_16 { pt3dadd( 529.928, 321.35, 23.3988, 0.5122 ) }
    dend_16 { pt3dadd( 530.4, 321.538, 23.2719, 0.5478 ) }
    dend_16 { pt3dadd( 531.401, 321.35, 23.1451, 0.4498 ) }
    dend_16 { pt3dadd( 532.543, 321.35, 23.0062, 0.3778 ) }
    dend_16 { pt3dadd( 533.663, 321.419, 22.8124, 0.3982 ) }
    dend_16 { pt3dadd( 534.755, 321.464, 22.5422, 0.3746 ) }
    dend_16 { pt3dadd( 535.895, 321.472, 22.3412, 0.401 ) }
    dend_16 { pt3dadd( 537.01, 321.677, 22.2172, 0.338 ) }
    dend_16 { pt3dadd( 538.141, 321.807, 22.1491, 0.3076 ) }
    dend_16 { pt3dadd( 539.185, 321.807, 22.2398, 0.288 ) }
    dend_16 { pt3dadd( 540.321, 321.729, 22.3468, 0.3008 ) }
    dend_16 { pt3dadd( 541.461, 321.71, 22.4375, 0.318 ) }
    dend_16 { pt3dadd( 542.599, 321.807, 22.4918, 0.3804 ) }
    dend_16 { pt3dadd( 543.772, 321.591, 22.498, 0.3468 ) }
    dend_16 { pt3dadd( 544.893, 321.371, 22.4535, 0.3252 ) }
    dend_16 { pt3dadd( 546.013, 321.151, 22.3712, 0.316 ) }
    dend_16 { pt3dadd( 547.134, 320.931, 22.283, 0.3768 ) }
    dend_16 { pt3dadd( 548.257, 320.732, 22.204, 0.3402 ) }
    dend_16 { pt3dadd( 549.399, 320.651, 22.1617, 0.3118 ) }
    dend_16 { pt3dadd( 550.54, 320.568, 22.153, 0.2966 ) }
    dend_16 { pt3dadd( 551.673, 320.606, 22.1922, 0.3164 ) }
    dend_16 { pt3dadd( 552.797, 320.776, 22.2858, 0.3464 ) }
    dend_16 { pt3dadd( 553.921, 320.946, 22.4084, 0.4352 ) }
    dend_16 { pt3dadd( 555.045, 321.116, 22.5375, 0.4388 ) }
    dend_16 { pt3dadd( 556.134, 320.884, 22.5988, 0.5406 ) }
    dend_16 { pt3dadd( 557.21, 320.505, 22.5775, 0.4984 ) }
    dend_16 { pt3dadd( 558.287, 320.128, 22.4862, 0.3962 ) }
    dend_16 { pt3dadd( 559.362, 319.749, 22.3412, 0.3214 ) }
    dend_16 { pt3dadd( 560.375, 319.221, 22.1676, 0.3142 ) }
    dend_16 { pt3dadd( 561.387, 318.691, 21.9786, 0.3496 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 562.45, 318.295, 21.7862, 0.4054 ) }
    dend_16 { pt3dadd( 563.556, 318.009, 21.5894, 0.5576 ) }
    dend_16 { pt3dadd( 564.662, 317.724, 21.3811, 0.6024 ) }
    dend_16 { pt3dadd( 565.706, 317.262, 21.1571, 0.4662 ) }
    dend_16 { pt3dadd( 566.742, 316.78, 20.8928, 0.3616 ) }
    dend_16 { pt3dadd( 567.779, 316.299, 20.5999, 0.3672 ) }
    dend_16 { pt3dadd( 567.938, 315.209, 20.221, 0.322 ) }
    dend_16 { pt3dadd( 568.071, 314.101, 19.7868, 0.2796 ) }
    dend_16 { pt3dadd( 568.012, 313.036, 19.2965, 0.2288 ) }
    dend_16 { pt3dadd( 567.72, 312.023, 18.032, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 10/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 520.891, 317.494, 23.7569, 0.6426 ) }
    dend_15 { pt3dadd( 521.549, 316.959, 24.2707, 0.4812 ) }
    dend_15 { pt3dadd( 522.352, 316.182, 24.6098, 0.4522 ) }
    dend_15 { pt3dadd( 523.134, 315.349, 24.8556, 0.4576 ) }
    dend_15 { pt3dadd( 523.796, 314.417, 25.0118, 0.4078 ) }
    dend_15 { pt3dadd( 524.283, 313.383, 25.0796, 0.3794 ) }
    dend_15 { pt3dadd( 524.945, 312.45, 25.0659, 0.4728 ) }
    dend_15 { pt3dadd( 525.252, 311.364, 25.0026, 0.3938 ) }
    dend_15 { pt3dadd( 525.698, 310.329, 24.9802, 0.3264 ) }
    dend_15 { pt3dadd( 526.529, 309.635, 24.8102, 0.2766 ) }
    dend_15 { pt3dadd( 527.392, 309.112, 24.4423, 0.2782 ) }
    dend_15 { pt3dadd( 528.176, 308.322, 24.1853, 0.2814 ) }
    dend_15 { pt3dadd( 529.195, 307.706, 23.9033, 0.287 ) }
    dend_15 { pt3dadd( 530.153, 307.126, 23.6001, 0.2988 ) }
    dend_15 { pt3dadd( 531.161, 306.788, 23.3352, 0.3142 ) }
    dend_15 { pt3dadd( 532.284, 306.999, 23.1994, 0.3734 ) }
    dend_15 { pt3dadd( 533.407, 307.212, 23.1591, 0.3338 ) }
    dend_15 { pt3dadd( 534.529, 307.424, 23.1675, 0.3 ) }
    dend_15 { pt3dadd( 535.653, 307.635, 23.2235, 0.2746 ) }
    dend_15 { pt3dadd( 536.775, 307.848, 23.3041, 0.2746 ) }
    dend_15 { pt3dadd( 537.908, 307.997, 23.3769, 0.2746 ) }
    dend_15 { pt3dadd( 539.048, 308.086, 23.4203, 0.2746 ) }
    dend_15 { pt3dadd( 540.177, 308.26, 23.4385, 0.2746 ) }
    dend_15 { pt3dadd( 541.305, 308.452, 23.4352, 0.2746 ) }
    dend_15 { pt3dadd( 542.435, 308.631, 23.4122, 0.2746 ) }
    dend_15 { pt3dadd( 543.575, 308.724, 23.3713, 0.2746 ) }
    dend_15 { pt3dadd( 544.716, 308.817, 23.3148, 0.2746 ) }
    dend_15 { pt3dadd( 545.855, 308.91, 23.2422, 0.2748 ) }
    dend_15 { pt3dadd( 546.989, 308.835, 23.1092, 0.2748 ) }
    dend_15 { pt3dadd( 548.122, 308.753, 22.9284, 0.2752 ) }
    dend_15 { pt3dadd( 549.072, 308.264, 22.7262, 0.2758 ) }
    dend_15 { pt3dadd( 549.88, 307.458, 22.5215, 0.2766 ) }
    dend_15 { pt3dadd( 550.687, 306.65, 22.3213, 0.2784 ) }
    dend_15 { pt3dadd( 551.494, 305.844, 22.132, 0.2818 ) }
    dend_15 { pt3dadd( 552.289, 305.026, 21.959, 0.288 ) }
    dend_15 { pt3dadd( 553.066, 304.19, 21.7994, 0.3006 ) }
    dend_15 { pt3dadd( 553.842, 303.354, 21.6538, 0.3178 ) }
    dend_15 { pt3dadd( 554.619, 302.518, 21.523, 0.3802 ) }
    dend_15 { pt3dadd( 555.053, 301.497, 21.4404, 0.3464 ) }
    dend_15 { pt3dadd( 555.322, 300.386, 21.4113, 0.3242 ) }
    dend_15 { pt3dadd( 555.592, 299.275, 21.4225, 0.3142 ) }
    dend_15 { pt3dadd( 555.86, 298.163, 21.4612, 0.3734 ) }
    dend_15 { pt3dadd( 556.479, 297.217, 21.5034, 0.3338 ) }
    dend_15 { pt3dadd( 557.169, 296.305, 21.5401, 0.2998 ) }
    dend_15 { pt3dadd( 557.832, 295.375, 21.5676, 0.2744 ) }
    dend_15 { pt3dadd( 558.343, 294.352, 21.5872, 0.2742 ) }
    dend_15 { pt3dadd( 558.688, 293.264, 21.6034, 0.2736 ) }
    dend_15 { pt3dadd( 559.006, 292.165, 21.6202, 0.2728 ) }
    dend_15 { pt3dadd( 559.512, 291.196, 21.6451, 0.2712 ) }
    dend_15 { pt3dadd( 560.431, 290.514, 21.684, 0.2684 ) }
    dend_15 { pt3dadd( 561.348, 289.832, 21.7319, 0.2626 ) }
    dend_15 { pt3dadd( 562.267, 289.151, 21.7846, 0.2542 ) }
    dend_15 { pt3dadd( 563.184, 288.469, 21.8386, 0.2288 ) }
    dend_15 { pt3dadd( 564.102, 287.787, 21.952, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_28, dend_27, dend_23, dend_22, dend_7, dend_0, dend_30, dend_29, dend_24, dend_21, dend_8, dend_6, dend_1, dend_26, dend_25, dend_20, dend_9, dend_3, dend_2, dend_17, dend_10, dend_5, dend_4, dend_19, dend_18, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
    dend = new SectionList()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_24 dend.append()
    dend_21 dend.append()
    dend_8 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_20 dend.append()
    dend_9 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_17 dend.append()
    dend_10 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_16953, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_16953 = new SectionList()
    soma_0 OneSecGrp_SectionRef_16953.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_1, axon_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_9, dend_9, dend_9, dend_9, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 3.2718365  // units: uF/cm2
    forsec axon cm = 3.2718365  // units: uF/cm2
    forsec dend cm = 3.2718365  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 56.325226  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 6.980458E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.07610503  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.837403E-10  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.0014632418  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.74357724  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.0050865356  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.005125964  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 6.1518553E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 4.7351388E-4  // units: S cm-2
        e_pas_nml2 = -83.77922  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 1.4480594E-5  // units: S cm-2
        e_pas_nml2 = -83.77922  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.3932937E-6  // units: S cm-2
        e_pas_nml2 = -83.77922  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 5.4433633E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 6.6900405E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513459
    forsec soma {
        insert CaDynamics_478513459
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_22 nseg = 7
    dend_30 nseg = 9
    dend_29 nseg = 3
    dend_26 nseg = 7
    dend_3 nseg = 3
    dend_2 nseg = 7
    dend_17 nseg = 5
    dend_5 nseg = 3
    dend_19 nseg = 3
    dend_11 nseg = 3
    dend_16 nseg = 3
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478513459


