// Cell: cACint209_L6_SBC_6c406e9f09_0_0
/*
{
  "id" : "cACint209_L6_SBC_6c406e9f09_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.46247, 5.85861, -0.00377942, 7.43125", "-6.65141, 5.3667, -0.00311965, 9.16559", "-5.84034, 4.87478, -0.00245988, 11.1008", "-5.02928, 4.38287, -0.0018001, 12.7187", "-4.21821, 3.89095, -0.00114033, 13.407", "-3.40715, 3.39904, -4.80554E-4, 14.0331", "-2.59608, 2.90712, 1.79219E-4, 14.6433", "-1.78502, 2.41521, 8.38993E-4, 15.2536", "-0.973954, 1.92329, 0.00149877, 15.5093", "-0.162889, 1.43138, 0.00215854, 15.3073", "0.648176, 0.939463, 0.00281831, 15.1053", "1.45924, 0.447548, 0.00347809, 14.9033", "2.27031, -0.0443665, 0.00413786, 14.4818", "3.08137, -0.536281, 0.00479764, 13.7638", "3.89244, -1.0282, 0.00545741, 12.8143", "4.7035, -1.52011, 0.00611718, 11.7232", "5.51457, -2.01203, 0.00677696, 10.29", "6.32563, -2.50394, 0.00743673, 8.85677", "7.1367, -2.99586, 0.0080965, 7.04177", "7.94776, -3.48777, 0.00875628, 4.64246", "8.75883, -3.97969, 0.00941605, 2.78846" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.16814, 7.62082, -1.4503, 1.32", "-2.66016, 8.93391, -2.06289, 1.32", "-3.0317, 9.92988, -2.58859, 1.32", "-3.95098, 12.1829, -3.88842, 2.04", "-5.35887, 15.0778, -5.69055, 1.32", "-6.40929, 17.1725, -7.00251, 1.8", "-7.42357, 19.1951, -8.26934, 1.32", "-8.2781, 20.8594, -9.40493, 1.68", "-9.02473, 22.2789, -10.4655, 1.68", "-10.1281, 24.3063, -12.1703, 1.08", "-10.9413, 25.5665, -13.1759, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.03186, -3.19968, -1.5003, 1.8", "6.94824, -3.81301, -2.48807, 1.8", "8.89123, -5.11346, -4.58245, 1.8", "10.2158, -6.00004, -6.0103, 1.8", "11.4604, -6.83304, -7.35185, 2.16", "13.6232, -8.28055, -9.68308, 2.4", "13.9541, -8.50208, -10.0398, 2.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.09186, -5.00468, 5.0897, 2.64", "3.22515, -5.89092, 5.76295, 2.64", "3.44207, -6.99152, 6.546, 2.64", "4.62944, -11.5086, 9.46445, 1.92", "5.49912, -14.1452, 11.021, 1.92", "6.5474, -16.8362, 12.4895, 1.92", "7.84227, -19.9167, 14.0528, 2.4", "8.48129, -21.2743, 14.6897, 2.4", "9.76614, -23.7506, 15.7619, 1.8", "11.5439, -26.7704, 16.7861, 1.56", "13.3966, -29.6372, 17.6265, 1.8", "14.5167, -31.2803, 18.0084, 1.8", "14.9107, -31.8318, 18.1308, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.79815, 0.894821, -0.0303001, 5.65", "-10.1009, -0.0921299, -0.0196544, 4.93", "-11.4251, -0.659657, -0.0135328, 4.81", "-14.4758, -1.9672, 5.70976E-4, 1.92", "-16.6015, -2.87828, 0.0103983, 1.68", "-18.8606, -3.84653, 0.0208423, 1.68", "-23.1483, -5.68424, 0.0406646, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.75883, -3.97969, 0.00941605, 1.21352", "21.5843, -11.7584, 0.00941605, 1.21352", "34.4097, -19.5371, 0.00941605, 1.21352" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-10.9413, 25.5665, -13.1759, 0.6", "-11.9071, 27.6895, -13.5501, 0.6", "-12.605, 29.1533, -13.9535, 0.6", "-13.099, 30.0958, -14.269, 0.6", "-13.7973, 31.5528, -15.0538, 1.68", "-14.5127, 33.4006, -16.2469, 0.72", "-14.783, 34.0989, -16.6978, 0.72", "-15.8795, 37.0151, -18.8847, 0.6", "-16.5894, 38.9682, -20.549, 1.44", "-17.7786, 42.4525, -23.8874, 0.84", "-18.2, 43.9515, -25.5412, 1.8" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-10.9413, 25.5665, -13.1759, 1.32", "-10.4421, 27.1346, -16.0492, 1.32", "-9.69459, 29.8969, -20.8148, 1.32", "-9.17987, 31.8813, -23.974, 1.32", "-8.59218, 34.1205, -27.3761, 0.96", "-8.02137, 36.2953, -30.6806, 0.96", "-7.61575, 37.8408, -33.0287, 1.2", "-7.17821, 39.8511, -36.0415, 0.48", "-6.71932, 41.9834, -38.8599, 1.32", "-6.4403, 43.34, -40.4773, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "13.9541, -8.50208, -10.0398, 1.56", "14.2176, -8.83176, -10.9111, 1.56", "14.7212, -9.76463, -12.8835, 1.32", "14.8645, -10.327, -13.9495, 1.32", "14.9345, -10.902, -14.8843, 1.68", "14.9559, -11.3283, -15.5048, 1.68", "14.9571, -11.7033, -15.9814, 1.68", "14.8883, -12.5499, -16.7959, 1.2", "14.5777, -14.4527, -18.1332, 1.2", "14.4173, -15.2956, -18.6492, 1.56", "14.3495, -15.6584, -18.852, 1.56", "14.2073, -16.5143, -19.305, 1.2", "14.1014, -17.2196, -19.6879, 1.2", "13.9586, -18.5946, -20.4496, 1.2", "13.9391, -19.1291, -20.7427, 1.2", "13.9408, -19.5083, -20.9627, 1.56", "13.9532, -20.4676, -21.5694, 1.08", "13.9672, -21.4501, -22.2477, 2.04", "13.9706, -21.923, -22.5698, 2.04", "13.9655, -22.7703, -23.0247, 1.32", "13.9753, -24.1626, -23.713, 2.16" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "13.9541, -8.50208, -10.0398, 1.32", "16.4986, -9.33962, -9.58281, 1.32", "17.8387, -9.78069, -9.3421, 1.32", "20.6029, -10.6906, -8.84559, 1.32", "21.6984, -11.0512, -8.64882, 1.32", "25.4674, -12.2918, -7.97182, 1.2" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "14.9107, -31.8318, 18.1308, 1.2", "15.834, -32.4175, 18.9643, 1.2", "17.1768, -33.2672, 20.2039, 1.2", "18.1535, -33.8652, 21.1202, 1.2", "19.3409, -34.5663, 22.229, 2.04", "21.564, -35.848, 24.2803, 1.08", "22.6862, -36.5034, 25.3112, 1.08", "23.3711, -36.9454, 25.9848, 1.08", "24.1394, -37.439, 26.7513, 1.08", "24.7975, -37.8193, 27.3314, 1.08", "25.3973, -38.1322, 27.7606, 1.08", "25.8819, -38.3404, 28.0072, 1.08", "26.9346, -38.8141, 28.5334, 1.08", "27.5635, -39.1014, 28.8123, 1.08", "28.3049, -39.4697, 29.209, 1.08", "28.888, -39.7651, 29.5486, 1.08", "29.7435, -40.199, 30.1097, 1.08", "30.2422, -40.431, 30.4801, 1.08", "31.6333, -41.0073, 31.6802, 1.92", "33.3289, -41.539, 33.3643, 0.96", "33.8283, -41.6242, 33.9185, 0.96", "34.9329, -41.5898, 35.2387, 0.72", "35.6415, -41.3676, 36.1073, 1.32", "36.359, -40.94, 36.9897, 1.32", "37.476, -39.9847, 38.2287, 0.84", "37.8103, -39.6814, 38.5119, 0.84", "38.4278, -39.1515, 38.958, 0.84", "39.0068, -38.7144, 39.2303, 0.84", "39.4767, -38.4478, 39.355, 0.84", "40.8511, -37.866, 39.5414, 0.72", "41.7592, -37.61, 39.5764, 0.72", "42.3563, -37.4542, 39.578, 0.72", "43.549, -37.1469, 39.5101, 0.72", "44.1357, -37.0124, 39.4517, 0.72", "44.4023, -36.9494, 39.4073, 0.72", "45.789, -36.6, 38.9625, 0.96", "51.724, -37.897, 43.6918, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "14.9107, -31.8318, 18.1308, 0.96", "14.7731, -34.1691, 18.3083, 0.96", "14.6282, -36.6293, 18.4953, 1.08", "14.5536, -37.8964, 18.5915, 1.08", "14.425, -40.0822, 18.7576, 1.56", "14.3387, -41.5468, 18.8688, 1.92" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-23.1483, -5.68424, 0.0406646, 1.08", "-24.0136, -8.16653, 0.107759, 1.08", "-24.3237, -9.15921, 0.0815174, 1.08", "-24.6814, -10.5131, 0.0242262, 1.08", "-24.9453, -11.7706, 0.00199348, 1.08", "-25.2111, -13.3681, -0.127822, 1.08", "-25.3776, -14.5622, -0.293571, 1.32", "-25.6918, -17.854, -0.939202, 1.8", "-25.7086, -18.7704, -1.16828, 1.8", "-25.596, -20.4982, -1.72013, 1.56", "-25.1954, -23.3109, -2.81105, 1.44", "-24.8524, -24.9456, -3.55426, 1.44", "-24.4743, -26.4296, -4.28125, 1.56", "-23.9464, -28.3315, -5.20799, 1.32", "-23.4568, -30.2222, -6.1376, 1.32", "-23.0192, -31.9947, -7.06056, 2.04", "-22.7119, -33.3336, -7.74364, 2.04", "-22.4162, -34.7852, -8.54339, 1.08", "-22.1102, -36.6406, -9.65394, 1.44", "-21.8543, -38.5055, -10.8519, 1.44", "-21.6024, -40.1985, -11.9883, 0.96", "-21.417, -41.3384, -12.7869, 1.56", "-21.1121, -43.0194, -13.9865, 1.56", "-20.6989, -44.8941, -15.3387, 2.16", "-20.2883, -46.344, -16.335, 1.56", "-19.8683, -47.4171, -16.9394, 1.56", "-18.8089, -49.4964, -17.9939, 1.8", "-18.336, -50.2742, -18.3688, 1.8", "-17.7349, -51.1616, -18.7708, 1.8", "-17.0153, -52.1717, -19.1908, 1.8", "-14.9474, -55.0034, -20.4667, 1.56", "-12.9039, -57.6683, -21.7669, 1.56", "-12.1056, -58.6265, -22.2943, 1.56", "-11.4581, -59.4335, -23.0252, 1.56", "-10.757, -60.323, -23.9118, 1.8", "-9.28883, -62.2672, -26.0885, 1.44", "-8.69885, -63.1025, -27.1909, 1.44", "-7.69716, -64.5635, -29.3871, 1.8", "-4.57258, -69.2057, -37.3309, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-23.1483, -5.68424, 0.0406646, 1.56", "-24.6897, -6.47366, 1.22059, 1.56", "-26.384, -7.34138, 2.51754, 1.32", "-27.6327, -7.98089, 3.47339, 1.32", "-29.2824, -8.82577, 4.73621, 1.68", "-30.7358, -9.57011, 5.84874, 2.04" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "34.4097, -19.5371, 0.00941605, 0.115986", "47.2351, -27.3158, 0.00941605, 0.115986", "60.0606, -35.0945, 0.00941605, 0.115986" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-18.2, 43.9515, -25.5412, 0.84", "-15.4165, 45.242, -20.1203, 0.84", "-14.6565, 45.5943, -18.6403, 1.8" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-18.2, 43.9515, -25.5412, 0.96", "-18.0844, 45.1873, -26.7879, 0.96", "-18.0269, 46.1446, -27.5898, 0.96", "-17.9002, 47.806, -29.0309, 1.2", "-17.5153, 50.8461, -31.6481, 0.96", "-17.3513, 51.7792, -32.3678, 0.72", "-17.007, 53.2374, -33.3965, 1.44", "-16.6902, 54.0908, -33.9539, 1.44", "-15.3379, 56.8812, -35.5954, 0.84", "-14.7475, 57.7971, -36.2371, 0.72", "-13.6607, 59.1769, -37.4671, 1.68", "-12.6842, 60.2925, -38.5582, 0.72", "-11.614, 61.3821, -39.7494, 1.2", "-10.5887, 62.3504, -40.9086, 1.32", "-6.90765, 65.5411, -45.0693, 0.72", "-5.15081, 66.9959, -47.3918, 0.72" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-6.4403, 43.34, -40.4773, 0.84", "-5.14313, 45.3326, -41.885, 0.84", "-3.87794, 47.1997, -43.2734, 0.84", "-3.15866, 48.2908, -44.2058, 0.84", "-2.25629, 49.7152, -45.6551, 0.6", "-1.48933, 50.9259, -46.8868, 0.6", "-0.396929, 52.6503, -48.6413, 1.32", "0.85721, 54.7524, -50.9524, 0.72", "2.26972, 57.0759, -53.5425, 1.56", "3.94667, 59.8169, -56.8551, 0.84" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-6.4403, 43.34, -40.4773, 0.84", "-8.31393, 47.2245, -49.6409, 0.84", "-8.66572, 47.9538, -51.3615, 1.2", "-9.16218, 48.9831, -53.7896, 0.84", "-9.60852, 49.9085, -55.9725, 1.2", "-10.4776, 51.7103, -60.223, 0.84", "-10.9195, 52.6263, -62.384, 1.2" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "13.9753, -24.1626, -23.713, 0.72", "12.4289, -27.6276, -24.5897, 0.72", "11.8469, -28.878, -24.8271, 1.2", "11.4271, -29.7281, -24.9599, 1.2", "10.7269, -30.9988, -25.2247, 0.6", "9.84034, -32.4519, -25.5686, 1.92", "8.84082, -33.948, -26.0056, 1.08", "7.51272, -35.6256, -26.6692, 1.68", "6.57928, -36.6386, -27.1774, 1.68", "4.71727, -38.4227, -28.2734, 0.96", "3.86751, -39.1312, -28.7998, 0.96", "2.40017, -40.1809, -29.7677, 1.44", "0.65582, -41.248, -30.9454, 0.96", "-0.597209, -41.9544, -31.8676, 1.44", "-1.95131, -42.7113, -32.8941, 0.96", "-2.96822, -43.3155, -33.6623, 1.56", "-4.61782, -44.3588, -34.9324, 0.84", "-6.22305, -45.4485, -36.149, 1.56", "-8.4016, -47.0533, -37.8115, 1.08", "-9.54598, -47.9692, -38.6967, 0.84", "-10.9441, -49.201, -39.8158, 1.08", "-11.2524, -49.4945, -40.0662, 0.72", "-12.4474, -50.7288, -41.0639, 1.2", "-13.638, -52.0418, -42.0596, 0.6", "-14.5658, -53.0569, -42.756, 1.08", "-15.6037, -54.1605, -43.5302, 0.72", "-16.7292, -55.2905, -44.3927, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "13.9753, -24.1626, -23.713, 0.48", "16.0367, -25.6601, -24.5527, 0.48", "18.0677, -27.156, -25.4204, 1.32", "19.4415, -28.1892, -26.0323, 0.96", "20.4429, -28.9422, -26.4803, 1.56", "22.1814, -30.2653, -27.2711, 0.96", "23.797, -31.5252, -28.0287, 1.68", "25.5108, -32.8874, -28.8978, 1.08", "26.8337, -34.0026, -29.621, 1.8", "27.3312, -34.4639, -29.9129, 1.8", "29.0507, -36.2128, -31.0217, 1.08", "29.9898, -37.301, -31.7345, 1.56", "30.6575, -38.2128, -32.3223, 1.08", "31.2614, -39.2037, -32.9224, 1.56", "32.0675, -40.8226, -33.8372, 1.08", "32.5771, -42.0236, -34.4855, 1.68", "33.1449, -43.5886, -35.2838, 1.2", "33.6213, -44.9312, -35.9374, 1.2", "34.2479, -46.7097, -36.7769, 1.8", "34.7967, -48.4131, -37.6078, 1.2", "35.0996, -49.4155, -38.2556, 1.8", "35.7189, -51.4641, -39.7966, 1.2", "36.4183, -53.6335, -41.6275, 1.68", "36.8875, -54.9533, -42.8222, 1.2", "37.5643, -56.718, -44.621, 1.68", "39.1197, -60.4652, -48.7647, 1.2", "39.5243, -61.381, -49.836, 1.2", "39.8648, -62.1153, -50.7422, 1.2", "40.4898, -63.4009, -52.4034, 1.56", "41.7857, -65.799, -55.5018, 0.96", "42.5037, -66.9429, -56.8747, 1.44", "43.0975, -67.9118, -57.8293, 0.72", "43.6489, -68.8544, -58.8817, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "25.4674, -12.2918, -7.97182, 0.72", "27.8821, -11.2254, -8.12345, 0.72", "29.6196, -10.295, -8.25645, 0.72", "30.9289, -9.5001, -8.37378, 0.72", "32.1546, -8.64935, -8.53421, 0.72", "33.5787, -7.53601, -8.85549, 0.48", "33.9804, -7.16822, -8.9996, 0.96", "35.401, -5.55569, -9.82661, 0.6", "36.5554, -4.05991, -10.8252, 1.44", "37.6867, -2.49792, -12.0888, 0.72", "38.897, -0.867107, -13.7506, 1.2", "40.3749, 1.12428, -15.9549, 0.6", "41.9117, 3.20235, -18.4105, 1.2", "43.1587, 4.90861, -20.6186, 0.84", "44.2916, 6.46338, -22.8401, 1.68", "45.756, 8.32397, -25.8178, 0.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "25.4674, -12.2918, -7.97182, 0.48", "27.8827, -13.5892, -8.47065, 0.48", "29.6497, -14.7511, -8.92271, 0.96", "30.3255, -15.2852, -9.14308, 0.72", "32.7635, -17.5074, -10.0533, 1.2", "34.7732, -19.5924, -10.8742, 0.84", "36.565, -21.7031, -11.6817, 1.68", "37.8444, -23.6344, -12.4109, 0.96", "38.9146, -25.7269, -13.1593, 1.92", "39.4097, -26.9676, -13.5709, 1.92", "39.8785, -28.6459, -14.0675, 0.96", "40.27, -30.4304, -14.5002, 1.44", "40.4521, -31.3951, -14.6502, 1.44", "40.9601, -33.9293, -14.8179, 0.72", "41.1654, -34.8232, -14.8071, 0.72", "41.5917, -36.5153, -14.6912, 1.32", "42.4443, -39.2948, -14.1557, 1.32", "42.9159, -40.5218, -13.7622, 1.32", "43.4247, -41.6321, -13.3132, 1.32", "43.7789, -42.3311, -12.9798, 1.32", "44.8669, -44.3543, -11.9152, 0.72", "46.3893, -47.0559, -10.3295, 1.8", "47.3746, -48.6774, -9.39221, 1.8", "48.0463, -49.7008, -8.75271, 1.8" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "14.3387, -41.5468, 18.8688, 1.44", "15.8202, -42.3381, 19.6615, 1.44", "17.0845, -43.1796, 20.3823, 1.44", "18.0462, -43.9345, 20.9638, 1.44", "18.9646, -44.7848, 21.5509, 1.44", "19.6137, -45.4341, 21.9662, 1.44", "20.5863, -46.4849, 22.6046, 1.44", "21.1401, -47.1951, 23.0021, 1.08", "21.6711, -47.9863, 23.4545, 1.44", "22.6399, -49.4789, 24.3045, 1.08", "23.2709, -50.3772, 24.8207, 1.56", "24.094, -51.4361, 25.4792, 0.96", "24.695, -52.1076, 25.9442, 0.96", "25.9091, -53.3405, 26.8756, 0.96", "26.7729, -54.1646, 27.5478, 0.96", "27.3354, -54.6836, 28.0053, 0.96", "27.8802, -55.1912, 28.4591, 0.96", "28.6846, -55.9335, 29.1394, 0.72", "29.0874, -56.3252, 29.4835, 0.72", "29.805, -57.0773, 30.1104, 0.72", "30.3399, -57.7242, 30.6794, 0.72", "30.6244, -58.0792, 31.003, 0.72", "31.0157, -58.5439, 31.4714, 0.72", "31.2985, -58.8738, 31.8249, 0.72", "31.9754, -59.5926, 32.6603, 0.72", "32.2777, -59.8687, 33.0076, 0.72", "32.7659, -60.2537, 33.556, 0.72", "33.3692, -60.6915, 34.2446, 0.72", "38.7554, -63.8902, 39.3698, 0.72" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "14.3387, -41.5468, 18.8688, 1.44", "12.584, -42.9934, 19.328, 1.44", "10.0057, -45.3992, 19.5869, 1.44", "8.64551, -46.8608, 19.5683, 1.2", "7.44067, -48.3672, 19.4136, 1.2", "5.60108, -50.9077, 18.9547, 1.08", "4.65892, -52.2257, 18.6458, 1.08", "2.64931, -55.0848, 17.5515, 1.32", "1.66395, -56.5334, 16.7912, 1.32", "0.68385, -58.0575, 15.9432, 0.96", "-0.220581, -59.5427, 15.0354, 0.96", "-1.37317, -61.4424, 13.82, 1.32", "-2.47387, -63.1346, 12.6929, 0.96", "-3.43644, -64.46, 11.84, 0.96", "-5.31026, -66.9114, 10.2408, 1.44", "-7.31059, -69.4475, 8.61311, 0.96", "-7.84715, -70.1493, 8.18389, 0.96", "-9.58379, -72.5681, 6.77931, 1.8", "-10.8009, -74.3862, 5.61495, 1.32", "-11.312, -75.147, 5.10345, 1.32", "-11.6769, -75.6691, 4.7486, 1.32", "-12.493, -76.7875, 4.0301, 0.96", "-12.9117, -77.3618, 3.62752, 0.96", "-15.7838, -81.3413, 0.699362, 2.4", "-17.6985, -84.046, -1.36022, 0.84", "-19.2402, -86.2303, -3.05198, 2.16", "-19.848, -87.0843, -3.72147, 2.16", "-22.1426, -90.1717, -6.1824, 0.84", "-23.5125, -91.9029, -7.51654, 1.32" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.57258, -69.2057, -37.3309, 0.84", "-4.09063, -70.169, -37.5516, 0.84", "-3.75941, -70.8419, -37.7155, 0.96", "-3.28915, -71.8687, -37.983, 0.72", "-2.54526, -73.561, -38.458, 0.72", "-1.68367, -75.6772, -39.0757, 1.08", "-1.06314, -77.3242, -39.5096, 1.08", "-0.835336, -77.9762, -39.6691, 1.08", "-0.334636, -79.6692, -40.0725, 0.6", "0.00545475, -81.1245, -40.3943, 1.32", "0.2192, -82.4621, -40.6474, 1.32", "0.408199, -84.0313, -40.9437, 0.72", "0.485587, -84.6828, -41.0794, 0.72", "0.69354, -86.112, -41.3498, 1.2", "0.92302, -87.3204, -41.5327, 0.48", "1.17591, -88.4148, -41.6841, 1.08", "1.55227, -89.754, -41.8928, 0.6", "2.15663, -91.6619, -42.2642, 1.2", "2.93541, -93.8834, -42.6402, 0.72", "3.63375, -95.6368, -42.8713, 1.32", "4.27846, -97.083, -43.0128, 0.72", "4.90272, -98.381, -43.0745, 1.08", "5.57823, -99.7584, -43.1041, 0.48", "6.20717, -101.015, -43.1207, 0.48", "6.82888, -102.294, -43.2153, 1.32", "7.18613, -103.12, -43.2787, 1.32", "7.63767, -104.427, -43.3617, 0.72", "7.81863, -105.518, -43.4903, 1.32", "7.66456, -106.74, -43.9306, 0.6", "7.21729, -107.767, -44.6385, 1.56", "6.83041, -108.312, -45.1568, 1.56", "6.28403, -108.917, -45.851, 0.72", "5.08948, -110.034, -47.3474, 1.68", "3.6082, -111.364, -49.2827, 1.2", "2.97758, -111.968, -50.1898, 1.56", "2.30605, -112.735, -51.2914, 0.96", "1.82374, -113.453, -52.2235, 0.96", "1.52291, -114.146, -52.9885, 1.56", "1.24215, -115.204, -53.957, 1.56", "0.97176, -116.387, -54.7896, 1.2", "0.77603, -117.262, -55.3068, 1.2", "0.392093, -118.802, -56.1412, 1.68", "-0.21442, -121.01, -57.2434, 0.96", "-0.577671, -122.183, -57.7582, 0.96", "-1.45998, -124.782, -58.7774, 0.48", "-1.80488, -125.782, -59.1303, 1.56", "-2.6679, -128.447, -59.997, 0.96", "-2.82772, -128.983, -60.1526, 0.96", "-3.32422, -131.003, -60.598, 1.44", "-3.49435, -132.282, -60.8466, 1.08", "-3.498, -134.142, -61.2044, 0.72", "-3.38794, -135.529, -61.426, 0.72", "-3.26839, -136.297, -61.5064, 0.72", "-2.94745, -138.022, -61.6766, 1.32", "-2.55619, -139.78, -61.866, 0.72", "-2.32587, -140.823, -61.9951, 0.72", "-2.21123, -141.333, -61.9998, 0.72", "-2.0632, -141.974, -61.9468, 0.72", "-1.71228, -143.417, -61.75, 1.2", "-1.32702, -144.942, -61.4743, 0.6", "-0.981995, -146.283, -61.1423, 1.2", "-0.101308, -149.559, -60.1601, 0.72", "0.313096, -150.967, -59.7016, 0.72", "0.71472, -152.191, -59.2947, 1.32", "1.13594, -153.375, -58.9128, 0.6", "1.71148, -154.994, -58.4431, 1.2", "2.31181, -156.73, -58.0112, 0.72", "2.73766, -158.062, -57.7914, 0.72", "3.18117, -159.576, -57.4979, 1.2", "3.54215, -160.897, -57.2163, 0.6", "3.79577, -161.863, -56.9949, 1.2", "4.26068, -163.66, -56.555, 0.48", "4.58993, -164.994, -56.2336, 1.44", "4.91095, -166.57, -55.7934, 0.96", "5.0231, -167.287, -55.5521, 0.96", "5.06683, -167.676, -55.4236, 0.96", "5.12163, -168.478, -55.2105, 0.96", "5.12177, -169.614, -55.0365, 0.96", "5.05793, -171.0, -54.9562, 1.68", "4.88971, -172.914, -54.7903, 0.96", "4.74896, -174.288, -54.6198, 1.32", "4.57445, -175.869, -54.3493, 0.72", "4.43452, -177.273, -54.0386, 0.72", "4.35219, -178.491, -53.713, 1.2", "4.30641, -181.401, -52.8207, 0.6", "4.32817, -182.345, -52.4865, 0.96", "4.43335, -183.76, -51.8655, 0.6", "4.53957, -184.869, -51.3156, 1.32", "4.60215, -185.569, -50.9503, 1.32", "4.62807, -186.093, -50.6832, 1.32", "4.6216, -186.856, -50.3662, 1.32", "4.53152, -187.951, -49.8747, 0.96", "4.30599, -189.477, -49.2313, 1.44", "4.09721, -190.469, -48.7886, 1.44", "3.81758, -191.543, -48.2875, 0.72", "3.5014, -192.58, -47.7745, 1.2", "3.06519, -193.856, -47.1319, 0.48", "2.54296, -195.051, -46.5335, 1.08", "1.99474, -196.239, -45.9177, 0.6", "1.55917, -197.136, -45.4566, 1.2", "0.99032, -198.227, -44.8918, 0.6", "0.68651, -198.766, -44.6064, 0.6", "-0.0225303, -199.928, -43.9614, 1.2", "-0.663667, -200.914, -43.3275, 0.72" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.57258, -69.2057, -37.3309, 0.96", "-2.85128, -70.902, -38.4402, 0.96", "-1.12925, -72.599, -39.5501, 0.96", "0.93988, -74.6381, -40.8836, 2.64" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-30.7358, -9.57011, 5.84874, 1.32", "-32.5732, -9.07015, 7.04039, 1.32", "-34.4986, -8.54626, 8.28909, 1.32", "-36.5802, -7.97986, 9.63909, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-30.7358, -9.57011, 5.84874, 0.96", "-31.8771, -11.6727, 6.57905, 0.96", "-32.2693, -12.2163, 6.85039, 1.44", "-32.9222, -12.912, 7.31603, 1.44", "-33.4415, -13.3992, 7.70452, 1.44", "-34.1049, -14.0031, 8.215, 1.44", "-35.5776, -15.351, 9.39713, 1.68", "-36.6731, -16.2478, 10.3605, 1.2", "-37.7043, -17.0988, 11.3285, 1.2", "-38.1246, -17.444, 11.7532, 1.2", "-38.6027, -17.8753, 12.2562, 1.2", "-39.0581, -18.344, 12.7535, 1.2", "-39.2754, -18.669, 13.0119, 1.2", "-39.4782, -19.1096, 13.3176, 1.2", "-39.6885, -19.6663, 13.675, 1.2", "-40.215, -20.979, 14.5049, 1.56", "-40.6352, -21.7838, 15.0218, 1.08", "-41.0754, -22.4643, 15.4542, 1.08", "-41.5235, -22.9857, 15.8374, 1.08", "-42.088, -23.5866, 16.2904, 1.08", "-42.4584, -23.9445, 16.561, 1.08", "-43.5572, -24.8016, 17.3165, 1.08", "-43.9289, -25.0224, 17.5227, 1.08", "-45.3752, -25.6289, 18.211, 1.32" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-16.7292, -55.2905, -44.3927, 1.08", "-15.8661, -56.5957, -44.7534, 1.08", "-14.8635, -58.1119, -45.1724, 1.32" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-16.7292, -55.2905, -44.3927, 0.84", "-17.9355, -56.6156, -44.3521, 0.84", "-19.313, -58.0254, -44.7482, 1.44", "-20.6869, -59.4316, -45.1433, 0.6", "-21.8533, -60.6253, -45.4788, 1.08", "-24.0361, -62.8593, -46.1065, 0.48", "-25.8506, -64.7164, -46.6283, 1.56", "-28.4747, -67.2601, -47.7612, 0.96" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "48.0463, -49.7008, -8.75271, 0.84", "48.2258, -51.363, -8.73124, 0.84", "48.3552, -52.6343, -8.71014, 1.44", "48.7467, -56.1638, -8.65613, 0.48", "49.0704, -59.0821, -8.61147, 0.48", "49.2895, -61.058, -8.58123, 1.44", "49.6011, -63.8672, -8.53824, 0.6", "49.7569, -65.0916, -8.53233, 0.6", "49.9786, -66.74, -8.51106, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "48.0463, -49.7008, -8.75271, 0.6", "49.0265, -50.4707, -8.50996, 0.6", "50.2058, -51.3551, -8.14501, 1.2", "50.5805, -51.6493, -8.01586, 1.2", "51.259, -52.2165, -7.77216, 0.6", "53.0662, -53.8415, -7.07923, 1.68", "53.7459, -54.477, -6.79851, 1.68", "54.8528, -55.5323, -6.30981, 0.84", "55.8567, -56.4588, -5.83641, 0.84", "56.8886, -57.3917, -5.32819, 1.44", "58.1329, -58.5344, -4.69113, 0.84", "59.5924, -59.9423, -3.92259, 1.56", "61.2742, -61.5725, -3.02312, 1.08", "62.3412, -62.584, -2.45505, 1.56", "63.7666, -63.8744, -1.68633, 2.04", "65.2458, -65.1596, -0.873, 1.2", "66.4799, -66.1962, -0.19449, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-23.5125, -91.9029, -7.51654, 0.48", "-23.6804, -93.6199, -7.13755, 0.48", "-23.7457, -95.326, -6.82553, 1.56", "-23.6925, -98.3028, -6.39582, 0.6", "-23.4936, -100.191, -6.15584, 1.8", "-23.176, -102.23, -5.94196, 0.6", "-22.9671, -103.332, -5.84412, 0.6", "-22.6312, -104.641, -5.77157, 0.6", "-22.1536, -106.145, -5.69246, 1.56", "-21.2029, -108.453, -5.60836, 0.48", "-20.4756, -110.029, -5.51328, 0.48", "-20.1141, -110.774, -5.45188, 0.48", "-19.4039, -112.248, -5.28858, 1.68", "-18.415, -114.362, -4.97365, 1.08", "-17.7943, -115.699, -4.69964, 1.08", "-14.4722, -124.149, -4.52426, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-23.5125, -91.9029, -7.51654, 0.72", "-25.7265, -92.7932, -8.71005, 0.72", "-26.9901, -93.3326, -9.47422, 1.56", "-28.1685, -93.9102, -10.2248, 0.72", "-29.9003, -94.8491, -11.4078, 1.32", "-31.8455, -96.0569, -12.5327, 0.72", "-33.371, -97.1158, -13.3112, 1.56", "-35.2149, -98.6863, -14.2373, 0.84", "-36.1528, -99.634, -14.6599, 0.84", "-37.7082, -101.526, -15.2773, 1.92", "-40.0827, -105.015, -15.9653, 0.96", "-40.9608, -106.463, -16.1366, 0.96", "-42.6112, -109.473, -16.3013, 0.72", "-43.1108, -110.481, -16.3092, 1.32", "-43.9985, -112.371, -16.2888, 0.84", "-44.6893, -114.187, -16.2342, 1.2", "-52.9722, -121.687, -19.1589, 1.2" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.93988, -74.6381, -40.8836, 0.96", "0.315514, -75.8234, -41.6251, 0.96", "-0.226475, -77.0017, -42.3533, 0.96", "-0.432226, -77.4725, -42.6327, 0.96", "-0.639839, -77.9636, -42.9116, 0.96", "-0.952548, -78.7319, -43.3139, 0.96", "-1.11121, -79.1306, -43.5095, 0.96", "-1.17391, -79.3543, -43.6082, 0.96", "-1.31173, -79.8181, -43.7645, 0.96", "-1.4042, -80.0355, -43.8405, 0.96", "-1.70539, -80.5693, -44.067, 0.96", "-1.95648, -80.9039, -44.26, 0.96", "-2.37381, -81.396, -44.6268, 0.6", "-2.95612, -82.0345, -45.1873, 1.56", "-3.74175, -82.8387, -45.992, 0.96", "-4.22168, -83.293, -46.4897, 0.96", "-5.16264, -84.1419, -47.453, 0.72", "-6.1213, -85.0261, -48.4256, 1.2", "-6.84806, -85.71, -49.1457, 0.72", "-7.63078, -86.4935, -49.9042, 1.2", "-8.53679, -87.467, -50.7489, 0.72", "-8.96235, -87.9706, -51.145, 0.72", "-10.0066, -89.3579, -52.108, 1.2", "-10.6665, -90.3148, -52.6735, 1.2", "-11.4118, -91.4695, -53.2854, 0.72", "-11.6804, -91.9174, -53.4999, 0.72", "-12.2496, -92.9032, -53.9396, 1.32", "-12.6489, -93.615, -54.2587, 1.32", "-13.2631, -94.6926, -54.7392, 0.6", "-13.7162, -95.459, -55.0967, 1.08", "-14.8519, -97.1426, -56.016, 0.6", "-15.4347, -97.9105, -56.4909, 1.2", "-16.0297, -98.6031, -56.9286, 0.6", "-16.6667, -99.2379, -57.3872, 1.2", "-17.3255, -99.8123, -57.8733, 0.48", "-18.6611, -100.895, -58.8289, 1.44", "-18.9776, -101.141, -59.0509, 1.44", "-19.9659, -101.933, -59.7211, 0.72", "-21.166, -102.972, -60.4979, 1.56", "-22.69, -104.489, -61.4385, 0.84", "-23.1518, -105.041, -61.6897, 0.84", "-24.0006, -106.293, -62.1956, 1.56", "-24.4338, -107.047, -62.5138, 1.56", "-25.0647, -108.371, -63.1215, 0.72", "-25.5938, -109.693, -63.8555, 1.2", "-26.1639, -111.268, -64.74, 0.72", "-26.8946, -113.355, -66.0232, 1.56", "-27.2632, -114.471, -66.791, 1.08", "-27.5854, -115.532, -67.6409, 1.56", "-28.2479, -117.938, -70.012, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "0.93988, -74.6381, -40.8836, 0.48", "4.35, -77.56, -41.434, 0.48", "5.8794, -78.8918, -41.629, 0.48", "8.38201, -81.0712, -41.9482, 1.56", "10.3845, -82.815, -42.2037, 0.36", "11.0726, -83.4143, -42.2915, 0.36", "13.5752, -85.5936, -42.6107, 1.32", "15.192, -86.9576, -42.5785, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-36.5802, -7.97986, 9.63909, 1.44", "-37.2205, -6.82423, 13.2887, 1.44", "-38.0155, -6.05242, 16.2726, 1.2", "-38.4821, -5.65075, 17.7167, 1.2", "-38.8935, -5.29661, 18.9897, 0.84", "-39.0951, -5.12312, 19.6134, 0.84", "-39.5384, -4.74155, 20.9852, 1.2", "-40.7769, -4.17413, 23.4064, 1.08", "-41.6368, -3.97359, 24.5517, 1.44" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-36.5802, -7.97986, 9.63909, 1.92", "-38.3309, -6.89742, 10.6225, 1.92", "-39.36, -6.27763, 11.0731, 1.92", "-40.9626, -5.22626, 11.6291, 1.56", "-42.2922, -4.2944, 12.0184, 1.32", "-43.5355, -3.31866, 12.3454, 1.8", "-44.9107, -2.16206, 12.668, 1.2", "-46.0074, -1.12315, 12.8154, 1.2", "-47.5115, 0.392359, 12.9762, 0.96", "-48.2111, 1.12623, 13.0142, 0.96", "-49.3795, 2.33463, 13.0074, 1.32", "-50.4903, 3.39131, 13.002, 1.32", "-51.2871, 4.01736, 12.9887, 1.32", "-52.2468, 4.58739, 12.9605, 0.96", "-52.9627, 4.86423, 12.9268, 0.96", "-54.1428, 5.24213, 12.9753, 0.96", "-55.4246, 5.52881, 13.0231, 0.96", "-57.4402, 5.87475, 13.1028, 1.44", "-58.4738, 6.02836, 13.1476, 1.44", "-59.284, 6.18373, 13.1862, 1.44", "-61.8914, 6.95286, 13.4984, 1.2" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-45.3752, -25.6289, 18.211, 0.96", "-46.2674, -25.432, 19.4449, 0.96", "-47.4906, -25.0687, 21.2152, 0.96", "-48.5966, -24.7058, 22.8196, 0.96", "-50.5324, -24.0197, 25.5637, 0.6", "-52.3325, -23.3674, 28.0128, 1.2", "-55.301, -22.1273, 32.0449, 0.72", "-55.8416, -21.829, 32.8617, 0.72", "-56.1017, -21.6606, 33.2722, 0.72", "-56.6856, -21.2119, 34.2172, 0.72", "-57.1225, -20.741, 34.9993, 0.72", "-58.2248, -19.1621, 37.3294, 1.2", "-59.6782, -16.8073, 40.2212, 0.84", "-69.3544, -12.8077, 49.6438, 0.84" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-45.3752, -25.6289, 18.211, 0.84", "-46.5274, -26.1914, 18.167, 0.84", "-47.4021, -26.5286, 18.1391, 0.84", "-48.7088, -27.0293, 18.1098, 0.6", "-49.6009, -27.3443, 18.0954, 0.6", "-50.8702, -27.7404, 18.0768, 0.6", "-52.2326, -28.1162, 18.0587, 0.6", "-53.5105, -28.3756, 18.0114, 0.6", "-54.5327, -28.544, 17.9926, 0.6", "-55.6138, -28.6916, 18.018, 0.6", "-56.2184, -28.7585, 18.0353, 0.6", "-56.9431, -28.8276, 18.0596, 0.6", "-57.3835, -28.8396, 18.067, 1.08", "-58.866, -28.8025, 18.0866, 0.72", "-60.4865, -28.7034, 18.1038, 0.72", "-61.7544, -28.6305, 18.1185, 0.72", "-62.3569, -28.5993, 18.1258, 0.72", "-63.9184, -28.4439, 18.1376, 1.08", "-73.6503, -30.6979, 16.75, 1.08" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "66.4799, -66.1962, -0.19449, 0.72", "66.5538, -68.4982, -1.48526, 0.72", "66.5989, -69.9068, -2.27509, 1.32" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "66.4799, -66.1962, -0.19449, 0.96", "67.5779, -67.5229, 0.162822, 0.96", "68.6705, -68.9474, 0.589689, 0.96", "69.899, -70.6314, 1.09773, 1.56", "71.3773, -72.6437, 1.68416, 0.84", "72.7115, -74.4642, 2.17348, 1.32", "74.3764, -76.9112, 2.87542, 0.6", "75.3183, -78.4038, 3.33574, 1.32", "76.5912, -80.4803, 4.0013, 0.72", "77.7155, -82.2937, 4.5948, 0.72", "78.5628, -83.5868, 5.07293, 1.68", "80.8187, -86.7177, 6.41497, 0.72", "82.2267, -88.4035, 7.30634, 0.72", "83.0822, -89.2778, 7.90116, 0.72", "83.9686, -90.0104, 8.62275, 0.72", "85.3549, -90.8774, 9.83383, 1.08", "86.4061, -91.3607, 10.7646, 0.48", "87.6663, -91.655, 11.816, 0.96", "88.6813, -91.7909, 12.7616, 0.96", "89.9003, -91.8947, 14.0153, 0.72", "91.3061, -91.9634, 15.5774, 0.48", "96.7671, -98.0276, 19.6915, 0.48" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-28.2479, -117.938, -70.012, 0.84", "-30.652, -118.296, -68.8595, 0.84", "-33.1699, -118.681, -67.8383, 0.84", "-38.7324, -119.712, -65.956, 1.32", "-43.5076, -120.764, -64.4639, 0.84", "-45.0028, -121.169, -64.0556, 0.84", "-47.8069, -122.046, -63.3606, 1.44", "-51.7351, -123.619, -62.4897, 0.96", "-54.0435, -124.92, -62.1337, 0.96", "-55.5157, -126.192, -62.2073, 1.44", "-57.2511, -128.371, -62.5771, 0.96", "-57.7154, -129.114, -62.7105, 0.96", "-58.9628, -131.645, -63.2, 1.44", "-60.0167, -134.094, -63.6544, 1.08", "-61.315, -136.899, -64.2088, 1.44", "-62.7928, -139.641, -64.6462, 0.84", "-63.7263, -141.017, -64.7033, 0.84", "-64.2692, -141.747, -64.7191, 0.84", "-66.6788, -144.494, -64.6211, 1.2", "-67.938, -145.62, -64.4112, 1.2", "-71.5639, -147.756, -63.1761, 0.84", "-74.6186, -148.738, -61.604, 0.48" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-28.2479, -117.938, -70.012, 0.72", "-29.0943, -119.227, -70.067, 0.72", "-30.8292, -121.739, -70.458, 1.2", "-31.8526, -123.143, -70.8066, 0.84", "-33.0102, -124.657, -71.3022, 1.32", "-34.6367, -126.69, -72.0471, 0.72", "-35.7664, -128.061, -72.5942, 1.32", "-37.6031, -130.199, -73.6174, 0.84", "-39.2697, -132.033, -74.6498, 1.32", "-40.9241, -133.817, -75.724, 0.84", "-41.7886, -134.728, -76.2877, 0.84", "-43.4132, -136.448, -77.3607, 1.44", "-44.0118, -137.112, -77.7568, 1.44", "-45.6197, -139.089, -78.8463, 0.96", "-47.597, -141.796, -80.2219, 1.44", "-49.3484, -144.409, -81.4413, 0.84", "-49.964, -145.375, -81.8693, 1.32", "-50.9864, -146.99, -82.5129, 0.84", "-52.9242, -149.908, -83.4748, 1.32", "-54.1791, -151.739, -84.0146, 0.84", "-55.8623, -154.065, -84.6978, 1.44", "-56.7035, -155.199, -85.0541, 0.72", "-58.448, -157.522, -85.953, 1.32", "-60.5534, -160.189, -87.0429, 0.6", "-62.5209, -162.57, -88.0937, 1.08", "-64.5822, -165.034, -89.2836, 0.48", "-66.7811, -167.742, -90.7554, 1.44", "-68.5998, -170.133, -92.22, 0.72" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "15.192, -86.9576, -42.5785, 0.84", "14.1964, -88.164, -42.7433, 0.84", "13.1658, -89.3072, -42.9552, 0.96", "12.4312, -90.122, -43.1365, 0.72", "11.907, -90.6958, -43.2798, 0.72", "10.8668, -91.8107, -43.5869, 0.72", "9.98944, -92.752, -43.8492, 0.72", "9.48952, -93.2776, -44.0055, 0.72", "8.84673, -93.9657, -44.2486, 0.72", "8.12915, -94.7871, -44.5325, 1.08", "7.46242, -95.5664, -44.7741, 1.08", "7.17175, -95.9419, -44.8654, 1.08", "6.59347, -96.7229, -45.0344, 0.6", "6.14618, -97.2975, -45.1641, 0.6", "5.06761, -98.5829, -45.429, 1.08", "4.22573, -99.562, -45.6449, 1.08", "2.96407, -100.945, -45.9212, 0.6", "2.13429, -101.792, -46.0782, 0.6", "0.580873, -103.308, -46.3231, 1.56", "-0.576647, -104.43, -46.4834, 0.84", "-1.54733, -105.386, -46.6023, 1.44", "-2.80955, -106.684, -46.7378, 0.96", "-3.80734, -107.747, -46.8309, 1.56", "-4.94775, -109.093, -46.9405, 0.96", "-5.47719, -109.809, -46.9761, 0.96", "-6.20424, -110.92, -47.0566, 1.56", "-6.58493, -111.566, -47.1179, 1.56", "-7.38018, -113.104, -47.3353, 1.08", "-8.10146, -114.612, -47.5745, 1.68", "-8.75623, -116.074, -47.8257, 1.68", "-9.43081, -117.694, -48.1318, 0.96", "-9.95238, -119.115, -48.4241, 1.56", "-10.4087, -120.423, -48.7168, 0.96", "-10.8663, -121.908, -49.0494, 1.8", "-11.4296, -123.91, -49.5121, 1.2", "-11.7904, -125.348, -49.8646, 0.72", "-12.1945, -127.217, -50.3256, 1.2", "-12.4547, -128.569, -50.6593, 0.72", "-12.7118, -130.171, -51.086, 0.72", "-12.8289, -131.067, -51.3524, 0.72", "-12.9783, -132.407, -51.794, 1.2", "-13.0738, -133.306, -52.0933, 0.72", "-13.2268, -134.737, -52.6032, 1.2", "-13.3895, -136.206, -53.139, 0.6", "-13.5292, -137.126, -53.4629, 1.2", "-13.8329, -138.61, -53.8875, 0.6", "-14.0545, -139.515, -54.0977, 0.6", "-14.4244, -140.72, -54.3209, 1.32", "-15.3312, -143.263, -54.723, 0.72", "-16.0152, -144.982, -54.9544, 1.2", "-16.8521, -146.973, -55.1948, 0.72", "-17.0806, -147.517, -55.2581, 0.72", "-17.8587, -149.432, -55.4929, 1.32", "-18.5392, -151.173, -55.7446, 0.6", "-19.1412, -152.759, -56.005, 1.32", "-19.8679, -154.64, -56.3686, 0.6", "-20.9745, -157.441, -56.9882, 0.6", "-21.6419, -159.092, -57.374, 1.2", "-22.9859, -162.374, -58.1725, 0.72", "-23.4848, -163.489, -58.4493, 1.2", "-24.3789, -165.364, -58.9484, 1.08", "-25.0986, -166.8, -59.3721, 0.72", "-25.7275, -167.998, -59.775, 0.72", "-26.4013, -169.328, -60.2381, 1.2", "-27.0843, -170.786, -60.7213, 0.6", "-27.7957, -172.431, -61.2666, 1.08", "-28.2675, -173.698, -61.6367, 0.6", "-28.6559, -174.873, -61.9553, 1.2", "-29.3973, -177.434, -62.5908, 0.6", "-29.6959, -178.685, -62.8886, 0.6", "-29.8479, -179.454, -63.1132, 1.2", "-30.1633, -181.113, -63.5773, 0.72", "-30.3578, -182.226, -63.877, 1.2", "-30.4778, -183.008, -64.0993, 1.2", "-30.6037, -184.298, -64.597, 1.2", "-30.7433, -186.838, -65.8567, 0.72" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "15.192, -86.9576, -42.5785, 0.72", "18.7183, -88.5729, -42.1808, 0.72", "20.7702, -89.5148, -41.818, 0.72", "22.5766, -90.436, -41.531, 1.56", "24.5264, -91.5251, -41.2704, 0.96", "27.6836, -93.4004, -40.9652, 1.56", "30.1843, -94.9506, -40.8226, 1.56", "32.3671, -96.4441, -40.8376, 0.96", "35.0827, -98.466, -40.9174, 1.2", "36.9496, -100.059, -41.0529, 1.2", "38.6587, -101.823, -41.2948, 1.56", "39.9822, -103.37, -41.6272, 1.56", "41.3139, -105.078, -42.0798, 0.84", "42.7623, -107.059, -42.6932, 1.44", "44.3557, -109.409, -43.3818, 0.84", "45.6835, -111.601, -44.0006, 1.92" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-41.6368, -3.97359, 24.5517, 0.72", "-42.7328, -4.02759, 25.601, 0.72", "-44.3606, -4.18511, 26.882, 1.2", "-45.8252, -4.32683, 28.0346, 1.2", "-46.8558, -4.42657, 28.8456, 0.96", "-47.7373, -4.51187, 29.5393, 0.72", "-49.3067, -4.66374, 30.7744, 0.72", "-50.5734, -4.87125, 31.7409, 1.2", "-57.0983, -5.11915, 37.7782, 1.2", "-64.9662, -4.93457, 41.9192, 1.2" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-41.6368, -3.97359, 24.5517, 1.08", "-40.3255, -4.17842, 26.213, 1.08", "-39.9852, -4.22961, 26.6945, 1.08", "-38.9791, -4.3045, 28.0813, 0.96", "-38.146, -4.35625, 29.1596, 0.96", "-36.8781, -4.42914, 30.6799, 1.44", "-35.095, -4.53165, 32.8178, 1.44", "-33.7873, -4.53623, 34.3131, 0.96", "-32.883, -4.53631, 35.3802, 1.32", "-32.2689, -4.56356, 36.1608, 1.32", "-31.7009, -4.59591, 36.872, 1.32", "-26.3254, -5.03506, 46.2701, 1.32", "-20.4935, -5.40779, 55.394, 1.32", "-13.9242, -6.78346, 63.9101, 1.32" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-61.8914, 6.95286, 13.4984, 0.72", "-63.2261, 7.90272, 14.395, 0.72", "-64.0606, 8.49659, 14.9556, 0.72", "-64.9148, 9.10447, 15.5295, 0.72", "-66.3954, 10.1581, 16.5241, 1.2", "-68.4634, 11.6298, 17.9134, 0.72", "-69.8136, 12.5906, 18.8204, 1.08", "-77.2733, 17.8589, 25.3077, 1.08" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-61.8914, 6.95286, 13.4984, 1.08", "-63.2293, 6.9901, 14.7875, 1.08", "-63.9766, 6.92126, 15.4523, 1.08", "-65.6218, 6.64941, 16.8358, 1.2", "-66.7091, 6.46532, 17.7295, 1.2", "-67.4562, 6.33425, 18.4095, 1.44", "-68.4893, 6.16818, 19.392, 1.08", "-69.0684, 6.02616, 19.9809, 0.84", "-69.6457, 5.88111, 20.5911, 0.84", "-70.4116, 5.73602, 21.4277, 0.84", "-71.5239, 5.70559, 22.6406, 1.2", "-72.4092, 5.82044, 23.5891, 1.2", "-73.6258, 6.10102, 24.7646, 1.08", "-74.2472, 6.24341, 25.2782, 0.96", "-75.0603, 6.43741, 25.9034, 0.96", "-76.5368, 6.77522, 26.9007, 1.32", "-77.2337, 6.9394, 27.2893, 1.32", "-78.9085, 7.36467, 28.1454, 1.32", "-80.6069, 7.83317, 28.8746, 0.84", "-88.9937, 9.68078, 35.236, 0.84" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "45.6835, -111.601, -44.0006, 0.6", "48.4844, -112.272, -45.1274, 0.6", "50.3295, -112.715, -45.8696, 0.6" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "45.6835, -111.601, -44.0006, 0.6", "45.5545, -113.682, -43.9693, 0.6", "45.5621, -115.502, -44.2423, 1.08", "45.6424, -116.837, -44.5507, 1.08", "45.7405, -117.879, -44.8504, 1.08", "45.8719, -119.008, -45.1967, 1.08", "46.2128, -121.482, -45.8418, 0.72", "46.5464, -123.037, -46.2341, 1.2", "46.7484, -123.874, -46.415, 1.2", "46.9189, -124.589, -46.5288, 1.2", "47.2263, -125.918, -46.6621, 0.84", "47.7073, -127.97, -46.8657, 0.6", "48.2968, -130.439, -47.0026, 1.32", "48.6218, -131.874, -47.1023, 1.32", "48.938, -133.4, -47.316, 0.72", "49.165, -134.553, -47.5187, 1.2", "49.7013, -137.541, -48.1582, 1.2", "49.8196, -138.34, -48.3676, 0.72", "50.0507, -140.211, -48.8811, 1.56", "50.2568, -142.653, -49.523, 0.72", "50.3349, -144.603, -50.0146, 0.72", "50.3457, -146.152, -50.3862, 1.44", "50.3197, -147.426, -50.6444, 0.84", "50.3115, -148.387, -50.8456, 0.84", "50.3935, -149.772, -51.0669, 1.44", "50.7225, -152.02, -51.3585, 0.84", "50.9019, -153.019, -51.5255, 0.84", "51.1492, -154.051, -51.7002, 1.32", "51.4274, -154.931, -51.8258, 1.32", "52.5234, -157.656, -52.1549, 0.72", "53.2034, -158.818, -52.2186, 1.32" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-13.9242, -6.78346, 63.9101, 0.96", "-8.227, -7.53547, 71.9668, 0.96", "-3.5649, -7.3699, 80.6815, 0.96", "-0.460932, -5.51911, 89.8365, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-13.9242, -6.78346, 63.9101, 0.84", "-6.73484, -7.67509, 74.0624, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "53.2034, -158.818, -52.2186, 0.6", "54.137, -159.219, -51.6088, 0.6", "54.9375, -159.644, -51.012, 0.96", "55.9847, -160.201, -50.2312, 0.6", "56.6366, -160.547, -49.7451, 0.6", "57.6821, -161.103, -48.9655, 1.2", "58.9345, -161.768, -48.0317, 0.72", "59.7463, -162.302, -47.3538, 1.2" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "53.2034, -158.818, -52.2186, 0.48", "53.7481, -160.072, -52.2534, 0.48", "54.5249, -161.797, -52.8217, 1.08", "55.3718, -163.67, -53.3968, 0.6", "56.0084, -165.162, -53.7893, 0.36", "56.8323, -167.061, -54.2582, 0.36", "57.5829, -168.763, -54.6884, 0.84", "59.0866, -172.119, -55.7275, 0.6", "60.2818, -174.695, -56.6424, 0.6", "61.391, -177.0, -57.4891, 1.08", "61.8846, -177.979, -57.8099, 0.72", "62.6276, -179.361, -58.1941, 1.08", "64.0255, -181.697, -58.8106, 0.48", "65.3579, -183.649, -59.3343, 0.48", "65.9664, -184.451, -59.6155, 0.48", "67.0562, -185.788, -60.1138, 0.48", "67.9754, -186.897, -60.5083, 0.48", "69.4282, -188.538, -61.0354, 1.08", "70.2716, -189.395, -61.2901, 0.48", "71.7489, -190.826, -61.7719, 1.08" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_34", "dend_27", "dend_0", "axon_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "axon_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_11", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_SBC_6c406e9f09_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_14
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, axon_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, axon_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999997377214663)
    connect dend_34(0), soma_0(0.4999997377214663)
    connect dend_27(0), soma_0(0.4999997377214663)
    connect dend_0(0), soma_0(0.4999997377214663)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.46247, 5.85861, -0.00377942, 7.43125 ) }
    soma_0 { pt3dadd( -6.65141, 5.3667, -0.00311965, 9.16559 ) }
    soma_0 { pt3dadd( -5.84034, 4.87478, -0.00245988, 11.1008 ) }
    soma_0 { pt3dadd( -5.02928, 4.38287, -0.0018001, 12.7187 ) }
    soma_0 { pt3dadd( -4.21821, 3.89095, -0.00114033, 13.407 ) }
    soma_0 { pt3dadd( -3.40715, 3.39904, -4.80554E-4, 14.0331 ) }
    soma_0 { pt3dadd( -2.59608, 2.90712, 1.79219E-4, 14.6433 ) }
    soma_0 { pt3dadd( -1.78502, 2.41521, 8.38993E-4, 15.2536 ) }
    soma_0 { pt3dadd( -0.973954, 1.92329, 0.00149877, 15.5093 ) }
    soma_0 { pt3dadd( -0.162889, 1.43138, 0.00215854, 15.3073 ) }
    soma_0 { pt3dadd( 0.648176, 0.939463, 0.00281831, 15.1053 ) }
    soma_0 { pt3dadd( 1.45924, 0.447548, 0.00347809, 14.9033 ) }
    soma_0 { pt3dadd( 2.27031, -0.0443665, 0.00413786, 14.4818 ) }
    soma_0 { pt3dadd( 3.08137, -0.536281, 0.00479764, 13.7638 ) }
    soma_0 { pt3dadd( 3.89244, -1.0282, 0.00545741, 12.8143 ) }
    soma_0 { pt3dadd( 4.7035, -1.52011, 0.00611718, 11.7232 ) }
    soma_0 { pt3dadd( 5.51457, -2.01203, 0.00677696, 10.29 ) }
    soma_0 { pt3dadd( 6.32563, -2.50394, 0.00743673, 8.85677 ) }
    soma_0 { pt3dadd( 7.1367, -2.99586, 0.0080965, 7.04177 ) }
    soma_0 { pt3dadd( 7.94776, -3.48777, 0.00875628, 4.64246 ) }
    soma_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 2.78846 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.16814, 7.62082, -1.4503, 1.32 ) }
    dend_47 { pt3dadd( -2.66016, 8.93391, -2.06289, 1.32 ) }
    dend_47 { pt3dadd( -3.0317, 9.92988, -2.58859, 1.32 ) }
    dend_47 { pt3dadd( -3.95098, 12.1829, -3.88842, 2.04 ) }
    dend_47 { pt3dadd( -5.35887, 15.0778, -5.69055, 1.32 ) }
    dend_47 { pt3dadd( -6.40929, 17.1725, -7.00251, 1.8 ) }
    dend_47 { pt3dadd( -7.42357, 19.1951, -8.26934, 1.32 ) }
    dend_47 { pt3dadd( -8.2781, 20.8594, -9.40493, 1.68 ) }
    dend_47 { pt3dadd( -9.02473, 22.2789, -10.4655, 1.68 ) }
    dend_47 { pt3dadd( -10.1281, 24.3063, -12.1703, 1.08 ) }
    dend_47 { pt3dadd( -10.9413, 25.5665, -13.1759, 1.56 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.03186, -3.19968, -1.5003, 1.8 ) }
    dend_34 { pt3dadd( 6.94824, -3.81301, -2.48807, 1.8 ) }
    dend_34 { pt3dadd( 8.89123, -5.11346, -4.58245, 1.8 ) }
    dend_34 { pt3dadd( 10.2158, -6.00004, -6.0103, 1.8 ) }
    dend_34 { pt3dadd( 11.4604, -6.83304, -7.35185, 2.16 ) }
    dend_34 { pt3dadd( 13.6232, -8.28055, -9.68308, 2.4 ) }
    dend_34 { pt3dadd( 13.9541, -8.50208, -10.0398, 2.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 39/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.09186, -5.00468, 5.0897, 2.64 ) }
    dend_27 { pt3dadd( 3.22515, -5.89092, 5.76295, 2.64 ) }
    dend_27 { pt3dadd( 3.44207, -6.99152, 6.546, 2.64 ) }
    dend_27 { pt3dadd( 4.62944, -11.5086, 9.46445, 1.92 ) }
    dend_27 { pt3dadd( 5.49912, -14.1452, 11.021, 1.92 ) }
    dend_27 { pt3dadd( 6.5474, -16.8362, 12.4895, 1.92 ) }
    dend_27 { pt3dadd( 7.84227, -19.9167, 14.0528, 2.4 ) }
    dend_27 { pt3dadd( 8.48129, -21.2743, 14.6897, 2.4 ) }
    dend_27 { pt3dadd( 9.76614, -23.7506, 15.7619, 1.8 ) }
    dend_27 { pt3dadd( 11.5439, -26.7704, 16.7861, 1.56 ) }
    dend_27 { pt3dadd( 13.3966, -29.6372, 17.6265, 1.8 ) }
    dend_27 { pt3dadd( 14.5167, -31.2803, 18.0084, 1.8 ) }
    dend_27 { pt3dadd( 14.9107, -31.8318, 18.1308, 1.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 52/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.79815, 0.894821, -0.0303001, 5.65 ) }
    dend_0 { pt3dadd( -10.1009, -0.0921299, -0.0196544, 4.93 ) }
    dend_0 { pt3dadd( -11.4251, -0.659657, -0.0135328, 4.81 ) }
    dend_0 { pt3dadd( -14.4758, -1.9672, 5.70976E-4, 1.92 ) }
    dend_0 { pt3dadd( -16.6015, -2.87828, 0.0103983, 1.68 ) }
    dend_0 { pt3dadd( -18.8606, -3.84653, 0.0208423, 1.68 ) }
    dend_0 { pt3dadd( -23.1483, -5.68424, 0.0406646, 3.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 59/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 1.21352 ) }
    axon_0 { pt3dadd( 21.5843, -11.7584, 0.00941605, 1.21352 ) }
    axon_0 { pt3dadd( 34.4097, -19.5371, 0.00941605, 1.21352 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 62/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -10.9413, 25.5665, -13.1759, 0.6 ) }
    dend_51 { pt3dadd( -11.9071, 27.6895, -13.5501, 0.6 ) }
    dend_51 { pt3dadd( -12.605, 29.1533, -13.9535, 0.6 ) }
    dend_51 { pt3dadd( -13.099, 30.0958, -14.269, 0.6 ) }
    dend_51 { pt3dadd( -13.7973, 31.5528, -15.0538, 1.68 ) }
    dend_51 { pt3dadd( -14.5127, 33.4006, -16.2469, 0.72 ) }
    dend_51 { pt3dadd( -14.783, 34.0989, -16.6978, 0.72 ) }
    dend_51 { pt3dadd( -15.8795, 37.0151, -18.8847, 0.6 ) }
    dend_51 { pt3dadd( -16.5894, 38.9682, -20.549, 1.44 ) }
    dend_51 { pt3dadd( -17.7786, 42.4525, -23.8874, 0.84 ) }
    dend_51 { pt3dadd( -18.2, 43.9515, -25.5412, 1.8 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -10.9413, 25.5665, -13.1759, 1.32 ) }
    dend_48 { pt3dadd( -10.4421, 27.1346, -16.0492, 1.32 ) }
    dend_48 { pt3dadd( -9.69459, 29.8969, -20.8148, 1.32 ) }
    dend_48 { pt3dadd( -9.17987, 31.8813, -23.974, 1.32 ) }
    dend_48 { pt3dadd( -8.59218, 34.1205, -27.3761, 0.96 ) }
    dend_48 { pt3dadd( -8.02137, 36.2953, -30.6806, 0.96 ) }
    dend_48 { pt3dadd( -7.61575, 37.8408, -33.0287, 1.2 ) }
    dend_48 { pt3dadd( -7.17821, 39.8511, -36.0415, 0.48 ) }
    dend_48 { pt3dadd( -6.71932, 41.9834, -38.8599, 1.32 ) }
    dend_48 { pt3dadd( -6.4403, 43.34, -40.4773, 1.32 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 13.9541, -8.50208, -10.0398, 1.56 ) }
    dend_42 { pt3dadd( 14.2176, -8.83176, -10.9111, 1.56 ) }
    dend_42 { pt3dadd( 14.7212, -9.76463, -12.8835, 1.32 ) }
    dend_42 { pt3dadd( 14.8645, -10.327, -13.9495, 1.32 ) }
    dend_42 { pt3dadd( 14.9345, -10.902, -14.8843, 1.68 ) }
    dend_42 { pt3dadd( 14.9559, -11.3283, -15.5048, 1.68 ) }
    dend_42 { pt3dadd( 14.9571, -11.7033, -15.9814, 1.68 ) }
    dend_42 { pt3dadd( 14.8883, -12.5499, -16.7959, 1.2 ) }
    dend_42 { pt3dadd( 14.5777, -14.4527, -18.1332, 1.2 ) }
    dend_42 { pt3dadd( 14.4173, -15.2956, -18.6492, 1.56 ) }
    dend_42 { pt3dadd( 14.3495, -15.6584, -18.852, 1.56 ) }
    dend_42 { pt3dadd( 14.2073, -16.5143, -19.305, 1.2 ) }
    dend_42 { pt3dadd( 14.1014, -17.2196, -19.6879, 1.2 ) }
    dend_42 { pt3dadd( 13.9586, -18.5946, -20.4496, 1.2 ) }
    dend_42 { pt3dadd( 13.9391, -19.1291, -20.7427, 1.2 ) }
    dend_42 { pt3dadd( 13.9408, -19.5083, -20.9627, 1.56 ) }
    dend_42 { pt3dadd( 13.9532, -20.4676, -21.5694, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( 13.9672, -21.4501, -22.2477, 2.04 ) }
    dend_42 { pt3dadd( 13.9706, -21.923, -22.5698, 2.04 ) }
    dend_42 { pt3dadd( 13.9655, -22.7703, -23.0247, 1.32 ) }
    dend_42 { pt3dadd( 13.9753, -24.1626, -23.713, 2.16 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 13.9541, -8.50208, -10.0398, 1.32 ) }
    dend_35 { pt3dadd( 16.4986, -9.33962, -9.58281, 1.32 ) }
    dend_35 { pt3dadd( 17.8387, -9.78069, -9.3421, 1.32 ) }
    dend_35 { pt3dadd( 20.6029, -10.6906, -8.84559, 1.32 ) }
    dend_35 { pt3dadd( 21.6984, -11.0512, -8.64882, 1.32 ) }
    dend_35 { pt3dadd( 25.4674, -12.2918, -7.97182, 1.2 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 14.9107, -31.8318, 18.1308, 1.2 ) }
    dend_33 { pt3dadd( 15.834, -32.4175, 18.9643, 1.2 ) }
    dend_33 { pt3dadd( 17.1768, -33.2672, 20.2039, 1.2 ) }
    dend_33 { pt3dadd( 18.1535, -33.8652, 21.1202, 1.2 ) }
    dend_33 { pt3dadd( 19.3409, -34.5663, 22.229, 2.04 ) }
    dend_33 { pt3dadd( 21.564, -35.848, 24.2803, 1.08 ) }
    dend_33 { pt3dadd( 22.6862, -36.5034, 25.3112, 1.08 ) }
    dend_33 { pt3dadd( 23.3711, -36.9454, 25.9848, 1.08 ) }
    dend_33 { pt3dadd( 24.1394, -37.439, 26.7513, 1.08 ) }
    dend_33 { pt3dadd( 24.7975, -37.8193, 27.3314, 1.08 ) }
    dend_33 { pt3dadd( 25.3973, -38.1322, 27.7606, 1.08 ) }
    dend_33 { pt3dadd( 25.8819, -38.3404, 28.0072, 1.08 ) }
    dend_33 { pt3dadd( 26.9346, -38.8141, 28.5334, 1.08 ) }
    dend_33 { pt3dadd( 27.5635, -39.1014, 28.8123, 1.08 ) }
    dend_33 { pt3dadd( 28.3049, -39.4697, 29.209, 1.08 ) }
    dend_33 { pt3dadd( 28.888, -39.7651, 29.5486, 1.08 ) }
    dend_33 { pt3dadd( 29.7435, -40.199, 30.1097, 1.08 ) }
    dend_33 { pt3dadd( 30.2422, -40.431, 30.4801, 1.08 ) }
    dend_33 { pt3dadd( 31.6333, -41.0073, 31.6802, 1.92 ) }
    dend_33 { pt3dadd( 33.3289, -41.539, 33.3643, 0.96 ) }
    dend_33 { pt3dadd( 33.8283, -41.6242, 33.9185, 0.96 ) }
    dend_33 { pt3dadd( 34.9329, -41.5898, 35.2387, 0.72 ) }
    dend_33 { pt3dadd( 35.6415, -41.3676, 36.1073, 1.32 ) }
    dend_33 { pt3dadd( 36.359, -40.94, 36.9897, 1.32 ) }
    dend_33 { pt3dadd( 37.476, -39.9847, 38.2287, 0.84 ) }
    dend_33 { pt3dadd( 37.8103, -39.6814, 38.5119, 0.84 ) }
    dend_33 { pt3dadd( 38.4278, -39.1515, 38.958, 0.84 ) }
    dend_33 { pt3dadd( 39.0068, -38.7144, 39.2303, 0.84 ) }
    dend_33 { pt3dadd( 39.4767, -38.4478, 39.355, 0.84 ) }
    dend_33 { pt3dadd( 40.8511, -37.866, 39.5414, 0.72 ) }
    dend_33 { pt3dadd( 41.7592, -37.61, 39.5764, 0.72 ) }
    dend_33 { pt3dadd( 42.3563, -37.4542, 39.578, 0.72 ) }
    dend_33 { pt3dadd( 43.549, -37.1469, 39.5101, 0.72 ) }
    dend_33 { pt3dadd( 44.1357, -37.0124, 39.4517, 0.72 ) }
    dend_33 { pt3dadd( 44.4023, -36.9494, 39.4073, 0.72 ) }
    dend_33 { pt3dadd( 45.789, -36.6, 38.9625, 0.96 ) }
    dend_33 { pt3dadd( 51.724, -37.897, 43.6918, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 14.9107, -31.8318, 18.1308, 0.96 ) }
    dend_28 { pt3dadd( 14.7731, -34.1691, 18.3083, 0.96 ) }
    dend_28 { pt3dadd( 14.6282, -36.6293, 18.4953, 1.08 ) }
    dend_28 { pt3dadd( 14.5536, -37.8964, 18.5915, 1.08 ) }
    dend_28 { pt3dadd( 14.425, -40.0822, 18.7576, 1.56 ) }
    dend_28 { pt3dadd( 14.3387, -41.5468, 18.8688, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -23.1483, -5.68424, 0.0406646, 1.08 ) }
    dend_14 { pt3dadd( -24.0136, -8.16653, 0.107759, 1.08 ) }
    dend_14 { pt3dadd( -24.3237, -9.15921, 0.0815174, 1.08 ) }
    dend_14 { pt3dadd( -24.6814, -10.5131, 0.0242262, 1.08 ) }
    dend_14 { pt3dadd( -24.9453, -11.7706, 0.00199348, 1.08 ) }
    dend_14 { pt3dadd( -25.2111, -13.3681, -0.127822, 1.08 ) }
    dend_14 { pt3dadd( -25.3776, -14.5622, -0.293571, 1.32 ) }
    dend_14 { pt3dadd( -25.6918, -17.854, -0.939202, 1.8 ) }
    dend_14 { pt3dadd( -25.7086, -18.7704, -1.16828, 1.8 ) }
    dend_14 { pt3dadd( -25.596, -20.4982, -1.72013, 1.56 ) }
    dend_14 { pt3dadd( -25.1954, -23.3109, -2.81105, 1.44 ) }
    dend_14 { pt3dadd( -24.8524, -24.9456, -3.55426, 1.44 ) }
    dend_14 { pt3dadd( -24.4743, -26.4296, -4.28125, 1.56 ) }
    dend_14 { pt3dadd( -23.9464, -28.3315, -5.20799, 1.32 ) }
    dend_14 { pt3dadd( -23.4568, -30.2222, -6.1376, 1.32 ) }
    dend_14 { pt3dadd( -23.0192, -31.9947, -7.06056, 2.04 ) }
    dend_14 { pt3dadd( -22.7119, -33.3336, -7.74364, 2.04 ) }
    dend_14 { pt3dadd( -22.4162, -34.7852, -8.54339, 1.08 ) }
    dend_14 { pt3dadd( -22.1102, -36.6406, -9.65394, 1.44 ) }
    dend_14 { pt3dadd( -21.8543, -38.5055, -10.8519, 1.44 ) }
    dend_14 { pt3dadd( -21.6024, -40.1985, -11.9883, 0.96 ) }
    dend_14 { pt3dadd( -21.417, -41.3384, -12.7869, 1.56 ) }
    dend_14 { pt3dadd( -21.1121, -43.0194, -13.9865, 1.56 ) }
    dend_14 { pt3dadd( -20.6989, -44.8941, -15.3387, 2.16 ) }
    dend_14 { pt3dadd( -20.2883, -46.344, -16.335, 1.56 ) }
    dend_14 { pt3dadd( -19.8683, -47.4171, -16.9394, 1.56 ) }
    dend_14 { pt3dadd( -18.8089, -49.4964, -17.9939, 1.8 ) }
    dend_14 { pt3dadd( -18.336, -50.2742, -18.3688, 1.8 ) }
    dend_14 { pt3dadd( -17.7349, -51.1616, -18.7708, 1.8 ) }
    dend_14 { pt3dadd( -17.0153, -52.1717, -19.1908, 1.8 ) }
    dend_14 { pt3dadd( -14.9474, -55.0034, -20.4667, 1.56 ) }
    dend_14 { pt3dadd( -12.9039, -57.6683, -21.7669, 1.56 ) }
    dend_14 { pt3dadd( -12.1056, -58.6265, -22.2943, 1.56 ) }
    dend_14 { pt3dadd( -11.4581, -59.4335, -23.0252, 1.56 ) }
    dend_14 { pt3dadd( -10.757, -60.323, -23.9118, 1.8 ) }
    dend_14 { pt3dadd( -9.28883, -62.2672, -26.0885, 1.44 ) }
    dend_14 { pt3dadd( -8.69885, -63.1025, -27.1909, 1.44 ) }
    dend_14 { pt3dadd( -7.69716, -64.5635, -29.3871, 1.8 ) }
    dend_14 { pt3dadd( -4.57258, -69.2057, -37.3309, 1.8 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -23.1483, -5.68424, 0.0406646, 1.56 ) }
    dend_1 { pt3dadd( -24.6897, -6.47366, 1.22059, 1.56 ) }
    dend_1 { pt3dadd( -26.384, -7.34138, 2.51754, 1.32 ) }
    dend_1 { pt3dadd( -27.6327, -7.98089, 3.47339, 1.32 ) }
    dend_1 { pt3dadd( -29.2824, -8.82577, 4.73621, 1.68 ) }
    dend_1 { pt3dadd( -30.7358, -9.57011, 5.84874, 2.04 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 98/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 34.4097, -19.5371, 0.00941605, 0.115986 ) }
    axon_1 { pt3dadd( 47.2351, -27.3158, 0.00941605, 0.115986 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    axon_1 { pt3dadd( 60.0606, -35.0945, 0.00941605, 0.115986 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 1/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -18.2, 43.9515, -25.5412, 0.84 ) }
    dend_53 { pt3dadd( -15.4165, 45.242, -20.1203, 0.84 ) }
    dend_53 { pt3dadd( -14.6565, 45.5943, -18.6403, 1.8 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 4/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -18.2, 43.9515, -25.5412, 0.96 ) }
    dend_52 { pt3dadd( -18.0844, 45.1873, -26.7879, 0.96 ) }
    dend_52 { pt3dadd( -18.0269, 46.1446, -27.5898, 0.96 ) }
    dend_52 { pt3dadd( -17.9002, 47.806, -29.0309, 1.2 ) }
    dend_52 { pt3dadd( -17.5153, 50.8461, -31.6481, 0.96 ) }
    dend_52 { pt3dadd( -17.3513, 51.7792, -32.3678, 0.72 ) }
    dend_52 { pt3dadd( -17.007, 53.2374, -33.3965, 1.44 ) }
    dend_52 { pt3dadd( -16.6902, 54.0908, -33.9539, 1.44 ) }
    dend_52 { pt3dadd( -15.3379, 56.8812, -35.5954, 0.84 ) }
    dend_52 { pt3dadd( -14.7475, 57.7971, -36.2371, 0.72 ) }
    dend_52 { pt3dadd( -13.6607, 59.1769, -37.4671, 1.68 ) }
    dend_52 { pt3dadd( -12.6842, 60.2925, -38.5582, 0.72 ) }
    dend_52 { pt3dadd( -11.614, 61.3821, -39.7494, 1.2 ) }
    dend_52 { pt3dadd( -10.5887, 62.3504, -40.9086, 1.32 ) }
    dend_52 { pt3dadd( -6.90765, 65.5411, -45.0693, 0.72 ) }
    dend_52 { pt3dadd( -5.15081, 66.9959, -47.3918, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 20/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -6.4403, 43.34, -40.4773, 0.84 ) }
    dend_50 { pt3dadd( -5.14313, 45.3326, -41.885, 0.84 ) }
    dend_50 { pt3dadd( -3.87794, 47.1997, -43.2734, 0.84 ) }
    dend_50 { pt3dadd( -3.15866, 48.2908, -44.2058, 0.84 ) }
    dend_50 { pt3dadd( -2.25629, 49.7152, -45.6551, 0.6 ) }
    dend_50 { pt3dadd( -1.48933, 50.9259, -46.8868, 0.6 ) }
    dend_50 { pt3dadd( -0.396929, 52.6503, -48.6413, 1.32 ) }
    dend_50 { pt3dadd( 0.85721, 54.7524, -50.9524, 0.72 ) }
    dend_50 { pt3dadd( 2.26972, 57.0759, -53.5425, 1.56 ) }
    dend_50 { pt3dadd( 3.94667, 59.8169, -56.8551, 0.84 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -6.4403, 43.34, -40.4773, 0.84 ) }
    dend_49 { pt3dadd( -8.31393, 47.2245, -49.6409, 0.84 ) }
    dend_49 { pt3dadd( -8.66572, 47.9538, -51.3615, 1.2 ) }
    dend_49 { pt3dadd( -9.16218, 48.9831, -53.7896, 0.84 ) }
    dend_49 { pt3dadd( -9.60852, 49.9085, -55.9725, 1.2 ) }
    dend_49 { pt3dadd( -10.4776, 51.7103, -60.223, 0.84 ) }
    dend_49 { pt3dadd( -10.9195, 52.6263, -62.384, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 37/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 13.9753, -24.1626, -23.713, 0.72 ) }
    dend_44 { pt3dadd( 12.4289, -27.6276, -24.5897, 0.72 ) }
    dend_44 { pt3dadd( 11.8469, -28.878, -24.8271, 1.2 ) }
    dend_44 { pt3dadd( 11.4271, -29.7281, -24.9599, 1.2 ) }
    dend_44 { pt3dadd( 10.7269, -30.9988, -25.2247, 0.6 ) }
    dend_44 { pt3dadd( 9.84034, -32.4519, -25.5686, 1.92 ) }
    dend_44 { pt3dadd( 8.84082, -33.948, -26.0056, 1.08 ) }
    dend_44 { pt3dadd( 7.51272, -35.6256, -26.6692, 1.68 ) }
    dend_44 { pt3dadd( 6.57928, -36.6386, -27.1774, 1.68 ) }
    dend_44 { pt3dadd( 4.71727, -38.4227, -28.2734, 0.96 ) }
    dend_44 { pt3dadd( 3.86751, -39.1312, -28.7998, 0.96 ) }
    dend_44 { pt3dadd( 2.40017, -40.1809, -29.7677, 1.44 ) }
    dend_44 { pt3dadd( 0.65582, -41.248, -30.9454, 0.96 ) }
    dend_44 { pt3dadd( -0.597209, -41.9544, -31.8676, 1.44 ) }
    dend_44 { pt3dadd( -1.95131, -42.7113, -32.8941, 0.96 ) }
    dend_44 { pt3dadd( -2.96822, -43.3155, -33.6623, 1.56 ) }
    dend_44 { pt3dadd( -4.61782, -44.3588, -34.9324, 0.84 ) }
    dend_44 { pt3dadd( -6.22305, -45.4485, -36.149, 1.56 ) }
    dend_44 { pt3dadd( -8.4016, -47.0533, -37.8115, 1.08 ) }
    dend_44 { pt3dadd( -9.54598, -47.9692, -38.6967, 0.84 ) }
    dend_44 { pt3dadd( -10.9441, -49.201, -39.8158, 1.08 ) }
    dend_44 { pt3dadd( -11.2524, -49.4945, -40.0662, 0.72 ) }
    dend_44 { pt3dadd( -12.4474, -50.7288, -41.0639, 1.2 ) }
    dend_44 { pt3dadd( -13.638, -52.0418, -42.0596, 0.6 ) }
    dend_44 { pt3dadd( -14.5658, -53.0569, -42.756, 1.08 ) }
    dend_44 { pt3dadd( -15.6037, -54.1605, -43.5302, 0.72 ) }
    dend_44 { pt3dadd( -16.7292, -55.2905, -44.3927, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 13.9753, -24.1626, -23.713, 0.48 ) }
    dend_43 { pt3dadd( 16.0367, -25.6601, -24.5527, 0.48 ) }
    dend_43 { pt3dadd( 18.0677, -27.156, -25.4204, 1.32 ) }
    dend_43 { pt3dadd( 19.4415, -28.1892, -26.0323, 0.96 ) }
    dend_43 { pt3dadd( 20.4429, -28.9422, -26.4803, 1.56 ) }
    dend_43 { pt3dadd( 22.1814, -30.2653, -27.2711, 0.96 ) }
    dend_43 { pt3dadd( 23.797, -31.5252, -28.0287, 1.68 ) }
    dend_43 { pt3dadd( 25.5108, -32.8874, -28.8978, 1.08 ) }
    dend_43 { pt3dadd( 26.8337, -34.0026, -29.621, 1.8 ) }
    dend_43 { pt3dadd( 27.3312, -34.4639, -29.9129, 1.8 ) }
    dend_43 { pt3dadd( 29.0507, -36.2128, -31.0217, 1.08 ) }
    dend_43 { pt3dadd( 29.9898, -37.301, -31.7345, 1.56 ) }
    dend_43 { pt3dadd( 30.6575, -38.2128, -32.3223, 1.08 ) }
    dend_43 { pt3dadd( 31.2614, -39.2037, -32.9224, 1.56 ) }
    dend_43 { pt3dadd( 32.0675, -40.8226, -33.8372, 1.08 ) }
    dend_43 { pt3dadd( 32.5771, -42.0236, -34.4855, 1.68 ) }
    dend_43 { pt3dadd( 33.1449, -43.5886, -35.2838, 1.2 ) }
    dend_43 { pt3dadd( 33.6213, -44.9312, -35.9374, 1.2 ) }
    dend_43 { pt3dadd( 34.2479, -46.7097, -36.7769, 1.8 ) }
    dend_43 { pt3dadd( 34.7967, -48.4131, -37.6078, 1.2 ) }
    dend_43 { pt3dadd( 35.0996, -49.4155, -38.2556, 1.8 ) }
    dend_43 { pt3dadd( 35.7189, -51.4641, -39.7966, 1.2 ) }
    dend_43 { pt3dadd( 36.4183, -53.6335, -41.6275, 1.68 ) }
    dend_43 { pt3dadd( 36.8875, -54.9533, -42.8222, 1.2 ) }
    dend_43 { pt3dadd( 37.5643, -56.718, -44.621, 1.68 ) }
    dend_43 { pt3dadd( 39.1197, -60.4652, -48.7647, 1.2 ) }
    dend_43 { pt3dadd( 39.5243, -61.381, -49.836, 1.2 ) }
    dend_43 { pt3dadd( 39.8648, -62.1153, -50.7422, 1.2 ) }
    dend_43 { pt3dadd( 40.4898, -63.4009, -52.4034, 1.56 ) }
    dend_43 { pt3dadd( 41.7857, -65.799, -55.5018, 0.96 ) }
    dend_43 { pt3dadd( 42.5037, -66.9429, -56.8747, 1.44 ) }
    dend_43 { pt3dadd( 43.0975, -67.9118, -57.8293, 0.72 ) }
    dend_43 { pt3dadd( 43.6489, -68.8544, -58.8817, 1.32 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 97/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 25.4674, -12.2918, -7.97182, 0.72 ) }
    dend_41 { pt3dadd( 27.8821, -11.2254, -8.12345, 0.72 ) }
    dend_41 { pt3dadd( 29.6196, -10.295, -8.25645, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( 30.9289, -9.5001, -8.37378, 0.72 ) }
    dend_41 { pt3dadd( 32.1546, -8.64935, -8.53421, 0.72 ) }
    dend_41 { pt3dadd( 33.5787, -7.53601, -8.85549, 0.48 ) }
    dend_41 { pt3dadd( 33.9804, -7.16822, -8.9996, 0.96 ) }
    dend_41 { pt3dadd( 35.401, -5.55569, -9.82661, 0.6 ) }
    dend_41 { pt3dadd( 36.5554, -4.05991, -10.8252, 1.44 ) }
    dend_41 { pt3dadd( 37.6867, -2.49792, -12.0888, 0.72 ) }
    dend_41 { pt3dadd( 38.897, -0.867107, -13.7506, 1.2 ) }
    dend_41 { pt3dadd( 40.3749, 1.12428, -15.9549, 0.6 ) }
    dend_41 { pt3dadd( 41.9117, 3.20235, -18.4105, 1.2 ) }
    dend_41 { pt3dadd( 43.1587, 4.90861, -20.6186, 0.84 ) }
    dend_41 { pt3dadd( 44.2916, 6.46338, -22.8401, 1.68 ) }
    dend_41 { pt3dadd( 45.756, 8.32397, -25.8178, 0.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 13/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 25.4674, -12.2918, -7.97182, 0.48 ) }
    dend_36 { pt3dadd( 27.8827, -13.5892, -8.47065, 0.48 ) }
    dend_36 { pt3dadd( 29.6497, -14.7511, -8.92271, 0.96 ) }
    dend_36 { pt3dadd( 30.3255, -15.2852, -9.14308, 0.72 ) }
    dend_36 { pt3dadd( 32.7635, -17.5074, -10.0533, 1.2 ) }
    dend_36 { pt3dadd( 34.7732, -19.5924, -10.8742, 0.84 ) }
    dend_36 { pt3dadd( 36.565, -21.7031, -11.6817, 1.68 ) }
    dend_36 { pt3dadd( 37.8444, -23.6344, -12.4109, 0.96 ) }
    dend_36 { pt3dadd( 38.9146, -25.7269, -13.1593, 1.92 ) }
    dend_36 { pt3dadd( 39.4097, -26.9676, -13.5709, 1.92 ) }
    dend_36 { pt3dadd( 39.8785, -28.6459, -14.0675, 0.96 ) }
    dend_36 { pt3dadd( 40.27, -30.4304, -14.5002, 1.44 ) }
    dend_36 { pt3dadd( 40.4521, -31.3951, -14.6502, 1.44 ) }
    dend_36 { pt3dadd( 40.9601, -33.9293, -14.8179, 0.72 ) }
    dend_36 { pt3dadd( 41.1654, -34.8232, -14.8071, 0.72 ) }
    dend_36 { pt3dadd( 41.5917, -36.5153, -14.6912, 1.32 ) }
    dend_36 { pt3dadd( 42.4443, -39.2948, -14.1557, 1.32 ) }
    dend_36 { pt3dadd( 42.9159, -40.5218, -13.7622, 1.32 ) }
    dend_36 { pt3dadd( 43.4247, -41.6321, -13.3132, 1.32 ) }
    dend_36 { pt3dadd( 43.7789, -42.3311, -12.9798, 1.32 ) }
    dend_36 { pt3dadd( 44.8669, -44.3543, -11.9152, 0.72 ) }
    dend_36 { pt3dadd( 46.3893, -47.0559, -10.3295, 1.8 ) }
    dend_36 { pt3dadd( 47.3746, -48.6774, -9.39221, 1.8 ) }
    dend_36 { pt3dadd( 48.0463, -49.7008, -8.75271, 1.8 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 14.3387, -41.5468, 18.8688, 1.44 ) }
    dend_32 { pt3dadd( 15.8202, -42.3381, 19.6615, 1.44 ) }
    dend_32 { pt3dadd( 17.0845, -43.1796, 20.3823, 1.44 ) }
    dend_32 { pt3dadd( 18.0462, -43.9345, 20.9638, 1.44 ) }
    dend_32 { pt3dadd( 18.9646, -44.7848, 21.5509, 1.44 ) }
    dend_32 { pt3dadd( 19.6137, -45.4341, 21.9662, 1.44 ) }
    dend_32 { pt3dadd( 20.5863, -46.4849, 22.6046, 1.44 ) }
    dend_32 { pt3dadd( 21.1401, -47.1951, 23.0021, 1.08 ) }
    dend_32 { pt3dadd( 21.6711, -47.9863, 23.4545, 1.44 ) }
    dend_32 { pt3dadd( 22.6399, -49.4789, 24.3045, 1.08 ) }
    dend_32 { pt3dadd( 23.2709, -50.3772, 24.8207, 1.56 ) }
    dend_32 { pt3dadd( 24.094, -51.4361, 25.4792, 0.96 ) }
    dend_32 { pt3dadd( 24.695, -52.1076, 25.9442, 0.96 ) }
    dend_32 { pt3dadd( 25.9091, -53.3405, 26.8756, 0.96 ) }
    dend_32 { pt3dadd( 26.7729, -54.1646, 27.5478, 0.96 ) }
    dend_32 { pt3dadd( 27.3354, -54.6836, 28.0053, 0.96 ) }
    dend_32 { pt3dadd( 27.8802, -55.1912, 28.4591, 0.96 ) }
    dend_32 { pt3dadd( 28.6846, -55.9335, 29.1394, 0.72 ) }
    dend_32 { pt3dadd( 29.0874, -56.3252, 29.4835, 0.72 ) }
    dend_32 { pt3dadd( 29.805, -57.0773, 30.1104, 0.72 ) }
    dend_32 { pt3dadd( 30.3399, -57.7242, 30.6794, 0.72 ) }
    dend_32 { pt3dadd( 30.6244, -58.0792, 31.003, 0.72 ) }
    dend_32 { pt3dadd( 31.0157, -58.5439, 31.4714, 0.72 ) }
    dend_32 { pt3dadd( 31.2985, -58.8738, 31.8249, 0.72 ) }
    dend_32 { pt3dadd( 31.9754, -59.5926, 32.6603, 0.72 ) }
    dend_32 { pt3dadd( 32.2777, -59.8687, 33.0076, 0.72 ) }
    dend_32 { pt3dadd( 32.7659, -60.2537, 33.556, 0.72 ) }
    dend_32 { pt3dadd( 33.3692, -60.6915, 34.2446, 0.72 ) }
    dend_32 { pt3dadd( 38.7554, -63.8902, 39.3698, 0.72 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 66/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 14.3387, -41.5468, 18.8688, 1.44 ) }
    dend_29 { pt3dadd( 12.584, -42.9934, 19.328, 1.44 ) }
    dend_29 { pt3dadd( 10.0057, -45.3992, 19.5869, 1.44 ) }
    dend_29 { pt3dadd( 8.64551, -46.8608, 19.5683, 1.2 ) }
    dend_29 { pt3dadd( 7.44067, -48.3672, 19.4136, 1.2 ) }
    dend_29 { pt3dadd( 5.60108, -50.9077, 18.9547, 1.08 ) }
    dend_29 { pt3dadd( 4.65892, -52.2257, 18.6458, 1.08 ) }
    dend_29 { pt3dadd( 2.64931, -55.0848, 17.5515, 1.32 ) }
    dend_29 { pt3dadd( 1.66395, -56.5334, 16.7912, 1.32 ) }
    dend_29 { pt3dadd( 0.68385, -58.0575, 15.9432, 0.96 ) }
    dend_29 { pt3dadd( -0.220581, -59.5427, 15.0354, 0.96 ) }
    dend_29 { pt3dadd( -1.37317, -61.4424, 13.82, 1.32 ) }
    dend_29 { pt3dadd( -2.47387, -63.1346, 12.6929, 0.96 ) }
    dend_29 { pt3dadd( -3.43644, -64.46, 11.84, 0.96 ) }
    dend_29 { pt3dadd( -5.31026, -66.9114, 10.2408, 1.44 ) }
    dend_29 { pt3dadd( -7.31059, -69.4475, 8.61311, 0.96 ) }
    dend_29 { pt3dadd( -7.84715, -70.1493, 8.18389, 0.96 ) }
    dend_29 { pt3dadd( -9.58379, -72.5681, 6.77931, 1.8 ) }
    dend_29 { pt3dadd( -10.8009, -74.3862, 5.61495, 1.32 ) }
    dend_29 { pt3dadd( -11.312, -75.147, 5.10345, 1.32 ) }
    dend_29 { pt3dadd( -11.6769, -75.6691, 4.7486, 1.32 ) }
    dend_29 { pt3dadd( -12.493, -76.7875, 4.0301, 0.96 ) }
    dend_29 { pt3dadd( -12.9117, -77.3618, 3.62752, 0.96 ) }
    dend_29 { pt3dadd( -15.7838, -81.3413, 0.699362, 2.4 ) }
    dend_29 { pt3dadd( -17.6985, -84.046, -1.36022, 0.84 ) }
    dend_29 { pt3dadd( -19.2402, -86.2303, -3.05198, 2.16 ) }
    dend_29 { pt3dadd( -19.848, -87.0843, -3.72147, 2.16 ) }
    dend_29 { pt3dadd( -22.1426, -90.1717, -6.1824, 0.84 ) }
    dend_29 { pt3dadd( -23.5125, -91.9029, -7.51654, 1.32 ) }
    // Section: dend_26, id: dend_26, parent: dend_14 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.57258, -69.2057, -37.3309, 0.84 ) }
    dend_26 { pt3dadd( -4.09063, -70.169, -37.5516, 0.84 ) }
    dend_26 { pt3dadd( -3.75941, -70.8419, -37.7155, 0.96 ) }
    dend_26 { pt3dadd( -3.28915, -71.8687, -37.983, 0.72 ) }
    dend_26 { pt3dadd( -2.54526, -73.561, -38.458, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( -1.68367, -75.6772, -39.0757, 1.08 ) }
    dend_26 { pt3dadd( -1.06314, -77.3242, -39.5096, 1.08 ) }
    dend_26 { pt3dadd( -0.835336, -77.9762, -39.6691, 1.08 ) }
    dend_26 { pt3dadd( -0.334636, -79.6692, -40.0725, 0.6 ) }
    dend_26 { pt3dadd( 0.00545475, -81.1245, -40.3943, 1.32 ) }
    dend_26 { pt3dadd( 0.2192, -82.4621, -40.6474, 1.32 ) }
    dend_26 { pt3dadd( 0.408199, -84.0313, -40.9437, 0.72 ) }
    dend_26 { pt3dadd( 0.485587, -84.6828, -41.0794, 0.72 ) }
    dend_26 { pt3dadd( 0.69354, -86.112, -41.3498, 1.2 ) }
    dend_26 { pt3dadd( 0.92302, -87.3204, -41.5327, 0.48 ) }
    dend_26 { pt3dadd( 1.17591, -88.4148, -41.6841, 1.08 ) }
    dend_26 { pt3dadd( 1.55227, -89.754, -41.8928, 0.6 ) }
    dend_26 { pt3dadd( 2.15663, -91.6619, -42.2642, 1.2 ) }
    dend_26 { pt3dadd( 2.93541, -93.8834, -42.6402, 0.72 ) }
    dend_26 { pt3dadd( 3.63375, -95.6368, -42.8713, 1.32 ) }
    dend_26 { pt3dadd( 4.27846, -97.083, -43.0128, 0.72 ) }
    dend_26 { pt3dadd( 4.90272, -98.381, -43.0745, 1.08 ) }
    dend_26 { pt3dadd( 5.57823, -99.7584, -43.1041, 0.48 ) }
    dend_26 { pt3dadd( 6.20717, -101.015, -43.1207, 0.48 ) }
    dend_26 { pt3dadd( 6.82888, -102.294, -43.2153, 1.32 ) }
    dend_26 { pt3dadd( 7.18613, -103.12, -43.2787, 1.32 ) }
    dend_26 { pt3dadd( 7.63767, -104.427, -43.3617, 0.72 ) }
    dend_26 { pt3dadd( 7.81863, -105.518, -43.4903, 1.32 ) }
    dend_26 { pt3dadd( 7.66456, -106.74, -43.9306, 0.6 ) }
    dend_26 { pt3dadd( 7.21729, -107.767, -44.6385, 1.56 ) }
    dend_26 { pt3dadd( 6.83041, -108.312, -45.1568, 1.56 ) }
    dend_26 { pt3dadd( 6.28403, -108.917, -45.851, 0.72 ) }
    dend_26 { pt3dadd( 5.08948, -110.034, -47.3474, 1.68 ) }
    dend_26 { pt3dadd( 3.6082, -111.364, -49.2827, 1.2 ) }
    dend_26 { pt3dadd( 2.97758, -111.968, -50.1898, 1.56 ) }
    dend_26 { pt3dadd( 2.30605, -112.735, -51.2914, 0.96 ) }
    dend_26 { pt3dadd( 1.82374, -113.453, -52.2235, 0.96 ) }
    dend_26 { pt3dadd( 1.52291, -114.146, -52.9885, 1.56 ) }
    dend_26 { pt3dadd( 1.24215, -115.204, -53.957, 1.56 ) }
    dend_26 { pt3dadd( 0.97176, -116.387, -54.7896, 1.2 ) }
    dend_26 { pt3dadd( 0.77603, -117.262, -55.3068, 1.2 ) }
    dend_26 { pt3dadd( 0.392093, -118.802, -56.1412, 1.68 ) }
    dend_26 { pt3dadd( -0.21442, -121.01, -57.2434, 0.96 ) }
    dend_26 { pt3dadd( -0.577671, -122.183, -57.7582, 0.96 ) }
    dend_26 { pt3dadd( -1.45998, -124.782, -58.7774, 0.48 ) }
    dend_26 { pt3dadd( -1.80488, -125.782, -59.1303, 1.56 ) }
    dend_26 { pt3dadd( -2.6679, -128.447, -59.997, 0.96 ) }
    dend_26 { pt3dadd( -2.82772, -128.983, -60.1526, 0.96 ) }
    dend_26 { pt3dadd( -3.32422, -131.003, -60.598, 1.44 ) }
    dend_26 { pt3dadd( -3.49435, -132.282, -60.8466, 1.08 ) }
    dend_26 { pt3dadd( -3.498, -134.142, -61.2044, 0.72 ) }
    dend_26 { pt3dadd( -3.38794, -135.529, -61.426, 0.72 ) }
    dend_26 { pt3dadd( -3.26839, -136.297, -61.5064, 0.72 ) }
    dend_26 { pt3dadd( -2.94745, -138.022, -61.6766, 1.32 ) }
    dend_26 { pt3dadd( -2.55619, -139.78, -61.866, 0.72 ) }
    dend_26 { pt3dadd( -2.32587, -140.823, -61.9951, 0.72 ) }
    dend_26 { pt3dadd( -2.21123, -141.333, -61.9998, 0.72 ) }
    dend_26 { pt3dadd( -2.0632, -141.974, -61.9468, 0.72 ) }
    dend_26 { pt3dadd( -1.71228, -143.417, -61.75, 1.2 ) }
    dend_26 { pt3dadd( -1.32702, -144.942, -61.4743, 0.6 ) }
    dend_26 { pt3dadd( -0.981995, -146.283, -61.1423, 1.2 ) }
    dend_26 { pt3dadd( -0.101308, -149.559, -60.1601, 0.72 ) }
    dend_26 { pt3dadd( 0.313096, -150.967, -59.7016, 0.72 ) }
    dend_26 { pt3dadd( 0.71472, -152.191, -59.2947, 1.32 ) }
    dend_26 { pt3dadd( 1.13594, -153.375, -58.9128, 0.6 ) }
    dend_26 { pt3dadd( 1.71148, -154.994, -58.4431, 1.2 ) }
    dend_26 { pt3dadd( 2.31181, -156.73, -58.0112, 0.72 ) }
    dend_26 { pt3dadd( 2.73766, -158.062, -57.7914, 0.72 ) }
    dend_26 { pt3dadd( 3.18117, -159.576, -57.4979, 1.2 ) }
    dend_26 { pt3dadd( 3.54215, -160.897, -57.2163, 0.6 ) }
    dend_26 { pt3dadd( 3.79577, -161.863, -56.9949, 1.2 ) }
    dend_26 { pt3dadd( 4.26068, -163.66, -56.555, 0.48 ) }
    dend_26 { pt3dadd( 4.58993, -164.994, -56.2336, 1.44 ) }
    dend_26 { pt3dadd( 4.91095, -166.57, -55.7934, 0.96 ) }
    dend_26 { pt3dadd( 5.0231, -167.287, -55.5521, 0.96 ) }
    dend_26 { pt3dadd( 5.06683, -167.676, -55.4236, 0.96 ) }
    dend_26 { pt3dadd( 5.12163, -168.478, -55.2105, 0.96 ) }
    dend_26 { pt3dadd( 5.12177, -169.614, -55.0365, 0.96 ) }
    dend_26 { pt3dadd( 5.05793, -171.0, -54.9562, 1.68 ) }
    dend_26 { pt3dadd( 4.88971, -172.914, -54.7903, 0.96 ) }
    dend_26 { pt3dadd( 4.74896, -174.288, -54.6198, 1.32 ) }
    dend_26 { pt3dadd( 4.57445, -175.869, -54.3493, 0.72 ) }
    dend_26 { pt3dadd( 4.43452, -177.273, -54.0386, 0.72 ) }
    dend_26 { pt3dadd( 4.35219, -178.491, -53.713, 1.2 ) }
    dend_26 { pt3dadd( 4.30641, -181.401, -52.8207, 0.6 ) }
    dend_26 { pt3dadd( 4.32817, -182.345, -52.4865, 0.96 ) }
    dend_26 { pt3dadd( 4.43335, -183.76, -51.8655, 0.6 ) }
    dend_26 { pt3dadd( 4.53957, -184.869, -51.3156, 1.32 ) }
    dend_26 { pt3dadd( 4.60215, -185.569, -50.9503, 1.32 ) }
    dend_26 { pt3dadd( 4.62807, -186.093, -50.6832, 1.32 ) }
    dend_26 { pt3dadd( 4.6216, -186.856, -50.3662, 1.32 ) }
    dend_26 { pt3dadd( 4.53152, -187.951, -49.8747, 0.96 ) }
    dend_26 { pt3dadd( 4.30599, -189.477, -49.2313, 1.44 ) }
    dend_26 { pt3dadd( 4.09721, -190.469, -48.7886, 1.44 ) }
    dend_26 { pt3dadd( 3.81758, -191.543, -48.2875, 0.72 ) }
    dend_26 { pt3dadd( 3.5014, -192.58, -47.7745, 1.2 ) }
    dend_26 { pt3dadd( 3.06519, -193.856, -47.1319, 0.48 ) }
    dend_26 { pt3dadd( 2.54296, -195.051, -46.5335, 1.08 ) }
    dend_26 { pt3dadd( 1.99474, -196.239, -45.9177, 0.6 ) }
    dend_26 { pt3dadd( 1.55917, -197.136, -45.4566, 1.2 ) }
    dend_26 { pt3dadd( 0.99032, -198.227, -44.8918, 0.6 ) }
    dend_26 { pt3dadd( 0.68651, -198.766, -44.6064, 0.6 ) }
    dend_26 { pt3dadd( -0.0225303, -199.928, -43.9614, 1.2 ) }
    dend_26 { pt3dadd( -0.663667, -200.914, -43.3275, 0.72 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.57258, -69.2057, -37.3309, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_15 { pt3dadd( -2.85128, -70.902, -38.4402, 0.96 ) }
    dend_15 { pt3dadd( -1.12925, -72.599, -39.5501, 0.96 ) }
    dend_15 { pt3dadd( 0.93988, -74.6381, -40.8836, 2.64 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -30.7358, -9.57011, 5.84874, 1.32 ) }
    dend_5 { pt3dadd( -32.5732, -9.07015, 7.04039, 1.32 ) }
    dend_5 { pt3dadd( -34.4986, -8.54626, 8.28909, 1.32 ) }
    dend_5 { pt3dadd( -36.5802, -7.97986, 9.63909, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 7/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -30.7358, -9.57011, 5.84874, 0.96 ) }
    dend_2 { pt3dadd( -31.8771, -11.6727, 6.57905, 0.96 ) }
    dend_2 { pt3dadd( -32.2693, -12.2163, 6.85039, 1.44 ) }
    dend_2 { pt3dadd( -32.9222, -12.912, 7.31603, 1.44 ) }
    dend_2 { pt3dadd( -33.4415, -13.3992, 7.70452, 1.44 ) }
    dend_2 { pt3dadd( -34.1049, -14.0031, 8.215, 1.44 ) }
    dend_2 { pt3dadd( -35.5776, -15.351, 9.39713, 1.68 ) }
    dend_2 { pt3dadd( -36.6731, -16.2478, 10.3605, 1.2 ) }
    dend_2 { pt3dadd( -37.7043, -17.0988, 11.3285, 1.2 ) }
    dend_2 { pt3dadd( -38.1246, -17.444, 11.7532, 1.2 ) }
    dend_2 { pt3dadd( -38.6027, -17.8753, 12.2562, 1.2 ) }
    dend_2 { pt3dadd( -39.0581, -18.344, 12.7535, 1.2 ) }
    dend_2 { pt3dadd( -39.2754, -18.669, 13.0119, 1.2 ) }
    dend_2 { pt3dadd( -39.4782, -19.1096, 13.3176, 1.2 ) }
    dend_2 { pt3dadd( -39.6885, -19.6663, 13.675, 1.2 ) }
    dend_2 { pt3dadd( -40.215, -20.979, 14.5049, 1.56 ) }
    dend_2 { pt3dadd( -40.6352, -21.7838, 15.0218, 1.08 ) }
    dend_2 { pt3dadd( -41.0754, -22.4643, 15.4542, 1.08 ) }
    dend_2 { pt3dadd( -41.5235, -22.9857, 15.8374, 1.08 ) }
    dend_2 { pt3dadd( -42.088, -23.5866, 16.2904, 1.08 ) }
    dend_2 { pt3dadd( -42.4584, -23.9445, 16.561, 1.08 ) }
    dend_2 { pt3dadd( -43.5572, -24.8016, 17.3165, 1.08 ) }
    dend_2 { pt3dadd( -43.9289, -25.0224, 17.5227, 1.08 ) }
    dend_2 { pt3dadd( -45.3752, -25.6289, 18.211, 1.32 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 31/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -16.7292, -55.2905, -44.3927, 1.08 ) }
    dend_46 { pt3dadd( -15.8661, -56.5957, -44.7534, 1.08 ) }
    dend_46 { pt3dadd( -14.8635, -58.1119, -45.1724, 1.32 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 34/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -16.7292, -55.2905, -44.3927, 0.84 ) }
    dend_45 { pt3dadd( -17.9355, -56.6156, -44.3521, 0.84 ) }
    dend_45 { pt3dadd( -19.313, -58.0254, -44.7482, 1.44 ) }
    dend_45 { pt3dadd( -20.6869, -59.4316, -45.1433, 0.6 ) }
    dend_45 { pt3dadd( -21.8533, -60.6253, -45.4788, 1.08 ) }
    dend_45 { pt3dadd( -24.0361, -62.8593, -46.1065, 0.48 ) }
    dend_45 { pt3dadd( -25.8506, -64.7164, -46.6283, 1.56 ) }
    dend_45 { pt3dadd( -28.4747, -67.2601, -47.7612, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 42/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 48.0463, -49.7008, -8.75271, 0.84 ) }
    dend_40 { pt3dadd( 48.2258, -51.363, -8.73124, 0.84 ) }
    dend_40 { pt3dadd( 48.3552, -52.6343, -8.71014, 1.44 ) }
    dend_40 { pt3dadd( 48.7467, -56.1638, -8.65613, 0.48 ) }
    dend_40 { pt3dadd( 49.0704, -59.0821, -8.61147, 0.48 ) }
    dend_40 { pt3dadd( 49.2895, -61.058, -8.58123, 1.44 ) }
    dend_40 { pt3dadd( 49.6011, -63.8672, -8.53824, 0.6 ) }
    dend_40 { pt3dadd( 49.7569, -65.0916, -8.53233, 0.6 ) }
    dend_40 { pt3dadd( 49.9786, -66.74, -8.51106, 1.2 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 51/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 48.0463, -49.7008, -8.75271, 0.6 ) }
    dend_37 { pt3dadd( 49.0265, -50.4707, -8.50996, 0.6 ) }
    dend_37 { pt3dadd( 50.2058, -51.3551, -8.14501, 1.2 ) }
    dend_37 { pt3dadd( 50.5805, -51.6493, -8.01586, 1.2 ) }
    dend_37 { pt3dadd( 51.259, -52.2165, -7.77216, 0.6 ) }
    dend_37 { pt3dadd( 53.0662, -53.8415, -7.07923, 1.68 ) }
    dend_37 { pt3dadd( 53.7459, -54.477, -6.79851, 1.68 ) }
    dend_37 { pt3dadd( 54.8528, -55.5323, -6.30981, 0.84 ) }
    dend_37 { pt3dadd( 55.8567, -56.4588, -5.83641, 0.84 ) }
    dend_37 { pt3dadd( 56.8886, -57.3917, -5.32819, 1.44 ) }
    dend_37 { pt3dadd( 58.1329, -58.5344, -4.69113, 0.84 ) }
    dend_37 { pt3dadd( 59.5924, -59.9423, -3.92259, 1.56 ) }
    dend_37 { pt3dadd( 61.2742, -61.5725, -3.02312, 1.08 ) }
    dend_37 { pt3dadd( 62.3412, -62.584, -2.45505, 1.56 ) }
    dend_37 { pt3dadd( 63.7666, -63.8744, -1.68633, 2.04 ) }
    dend_37 { pt3dadd( 65.2458, -65.1596, -0.873, 1.2 ) }
    dend_37 { pt3dadd( 66.4799, -66.1962, -0.19449, 1.2 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 68/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -23.5125, -91.9029, -7.51654, 0.48 ) }
    dend_31 { pt3dadd( -23.6804, -93.6199, -7.13755, 0.48 ) }
    dend_31 { pt3dadd( -23.7457, -95.326, -6.82553, 1.56 ) }
    dend_31 { pt3dadd( -23.6925, -98.3028, -6.39582, 0.6 ) }
    dend_31 { pt3dadd( -23.4936, -100.191, -6.15584, 1.8 ) }
    dend_31 { pt3dadd( -23.176, -102.23, -5.94196, 0.6 ) }
    dend_31 { pt3dadd( -22.9671, -103.332, -5.84412, 0.6 ) }
    dend_31 { pt3dadd( -22.6312, -104.641, -5.77157, 0.6 ) }
    dend_31 { pt3dadd( -22.1536, -106.145, -5.69246, 1.56 ) }
    dend_31 { pt3dadd( -21.2029, -108.453, -5.60836, 0.48 ) }
    dend_31 { pt3dadd( -20.4756, -110.029, -5.51328, 0.48 ) }
    dend_31 { pt3dadd( -20.1141, -110.774, -5.45188, 0.48 ) }
    dend_31 { pt3dadd( -19.4039, -112.248, -5.28858, 1.68 ) }
    dend_31 { pt3dadd( -18.415, -114.362, -4.97365, 1.08 ) }
    dend_31 { pt3dadd( -17.7943, -115.699, -4.69964, 1.08 ) }
    dend_31 { pt3dadd( -14.4722, -124.149, -4.52426, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 84/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -23.5125, -91.9029, -7.51654, 0.72 ) }
    dend_30 { pt3dadd( -25.7265, -92.7932, -8.71005, 0.72 ) }
    dend_30 { pt3dadd( -26.9901, -93.3326, -9.47422, 1.56 ) }
    dend_30 { pt3dadd( -28.1685, -93.9102, -10.2248, 0.72 ) }
    dend_30 { pt3dadd( -29.9003, -94.8491, -11.4078, 1.32 ) }
    dend_30 { pt3dadd( -31.8455, -96.0569, -12.5327, 0.72 ) }
    dend_30 { pt3dadd( -33.371, -97.1158, -13.3112, 1.56 ) }
    dend_30 { pt3dadd( -35.2149, -98.6863, -14.2373, 0.84 ) }
    dend_30 { pt3dadd( -36.1528, -99.634, -14.6599, 0.84 ) }
    dend_30 { pt3dadd( -37.7082, -101.526, -15.2773, 1.92 ) }
    dend_30 { pt3dadd( -40.0827, -105.015, -15.9653, 0.96 ) }
    dend_30 { pt3dadd( -40.9608, -106.463, -16.1366, 0.96 ) }
    dend_30 { pt3dadd( -42.6112, -109.473, -16.3013, 0.72 ) }
    dend_30 { pt3dadd( -43.1108, -110.481, -16.3092, 1.32 ) }
    dend_30 { pt3dadd( -43.9985, -112.371, -16.2888, 0.84 ) }
    dend_30 { pt3dadd( -44.6893, -114.187, -16.2342, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -52.9722, -121.687, -19.1589, 1.2 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.93988, -74.6381, -40.8836, 0.96 ) }
    dend_23 { pt3dadd( 0.315514, -75.8234, -41.6251, 0.96 ) }
    dend_23 { pt3dadd( -0.226475, -77.0017, -42.3533, 0.96 ) }
    dend_23 { pt3dadd( -0.432226, -77.4725, -42.6327, 0.96 ) }
    dend_23 { pt3dadd( -0.639839, -77.9636, -42.9116, 0.96 ) }
    dend_23 { pt3dadd( -0.952548, -78.7319, -43.3139, 0.96 ) }
    dend_23 { pt3dadd( -1.11121, -79.1306, -43.5095, 0.96 ) }
    dend_23 { pt3dadd( -1.17391, -79.3543, -43.6082, 0.96 ) }
    dend_23 { pt3dadd( -1.31173, -79.8181, -43.7645, 0.96 ) }
    dend_23 { pt3dadd( -1.4042, -80.0355, -43.8405, 0.96 ) }
    dend_23 { pt3dadd( -1.70539, -80.5693, -44.067, 0.96 ) }
    dend_23 { pt3dadd( -1.95648, -80.9039, -44.26, 0.96 ) }
    dend_23 { pt3dadd( -2.37381, -81.396, -44.6268, 0.6 ) }
    dend_23 { pt3dadd( -2.95612, -82.0345, -45.1873, 1.56 ) }
    dend_23 { pt3dadd( -3.74175, -82.8387, -45.992, 0.96 ) }
    dend_23 { pt3dadd( -4.22168, -83.293, -46.4897, 0.96 ) }
    dend_23 { pt3dadd( -5.16264, -84.1419, -47.453, 0.72 ) }
    dend_23 { pt3dadd( -6.1213, -85.0261, -48.4256, 1.2 ) }
    dend_23 { pt3dadd( -6.84806, -85.71, -49.1457, 0.72 ) }
    dend_23 { pt3dadd( -7.63078, -86.4935, -49.9042, 1.2 ) }
    dend_23 { pt3dadd( -8.53679, -87.467, -50.7489, 0.72 ) }
    dend_23 { pt3dadd( -8.96235, -87.9706, -51.145, 0.72 ) }
    dend_23 { pt3dadd( -10.0066, -89.3579, -52.108, 1.2 ) }
    dend_23 { pt3dadd( -10.6665, -90.3148, -52.6735, 1.2 ) }
    dend_23 { pt3dadd( -11.4118, -91.4695, -53.2854, 0.72 ) }
    dend_23 { pt3dadd( -11.6804, -91.9174, -53.4999, 0.72 ) }
    dend_23 { pt3dadd( -12.2496, -92.9032, -53.9396, 1.32 ) }
    dend_23 { pt3dadd( -12.6489, -93.615, -54.2587, 1.32 ) }
    dend_23 { pt3dadd( -13.2631, -94.6926, -54.7392, 0.6 ) }
    dend_23 { pt3dadd( -13.7162, -95.459, -55.0967, 1.08 ) }
    dend_23 { pt3dadd( -14.8519, -97.1426, -56.016, 0.6 ) }
    dend_23 { pt3dadd( -15.4347, -97.9105, -56.4909, 1.2 ) }
    dend_23 { pt3dadd( -16.0297, -98.6031, -56.9286, 0.6 ) }
    dend_23 { pt3dadd( -16.6667, -99.2379, -57.3872, 1.2 ) }
    dend_23 { pt3dadd( -17.3255, -99.8123, -57.8733, 0.48 ) }
    dend_23 { pt3dadd( -18.6611, -100.895, -58.8289, 1.44 ) }
    dend_23 { pt3dadd( -18.9776, -101.141, -59.0509, 1.44 ) }
    dend_23 { pt3dadd( -19.9659, -101.933, -59.7211, 0.72 ) }
    dend_23 { pt3dadd( -21.166, -102.972, -60.4979, 1.56 ) }
    dend_23 { pt3dadd( -22.69, -104.489, -61.4385, 0.84 ) }
    dend_23 { pt3dadd( -23.1518, -105.041, -61.6897, 0.84 ) }
    dend_23 { pt3dadd( -24.0006, -106.293, -62.1956, 1.56 ) }
    dend_23 { pt3dadd( -24.4338, -107.047, -62.5138, 1.56 ) }
    dend_23 { pt3dadd( -25.0647, -108.371, -63.1215, 0.72 ) }
    dend_23 { pt3dadd( -25.5938, -109.693, -63.8555, 1.2 ) }
    dend_23 { pt3dadd( -26.1639, -111.268, -64.74, 0.72 ) }
    dend_23 { pt3dadd( -26.8946, -113.355, -66.0232, 1.56 ) }
    dend_23 { pt3dadd( -27.2632, -114.471, -66.791, 1.08 ) }
    dend_23 { pt3dadd( -27.5854, -115.532, -67.6409, 1.56 ) }
    dend_23 { pt3dadd( -28.2479, -117.938, -70.012, 1.32 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 51/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 0.93988, -74.6381, -40.8836, 0.48 ) }
    dend_16 { pt3dadd( 4.35, -77.56, -41.434, 0.48 ) }
    dend_16 { pt3dadd( 5.8794, -78.8918, -41.629, 0.48 ) }
    dend_16 { pt3dadd( 8.38201, -81.0712, -41.9482, 1.56 ) }
    dend_16 { pt3dadd( 10.3845, -82.815, -42.2037, 0.36 ) }
    dend_16 { pt3dadd( 11.0726, -83.4143, -42.2915, 0.36 ) }
    dend_16 { pt3dadd( 13.5752, -85.5936, -42.6107, 1.32 ) }
    dend_16 { pt3dadd( 15.192, -86.9576, -42.5785, 1.32 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -36.5802, -7.97986, 9.63909, 1.44 ) }
    dend_9 { pt3dadd( -37.2205, -6.82423, 13.2887, 1.44 ) }
    dend_9 { pt3dadd( -38.0155, -6.05242, 16.2726, 1.2 ) }
    dend_9 { pt3dadd( -38.4821, -5.65075, 17.7167, 1.2 ) }
    dend_9 { pt3dadd( -38.8935, -5.29661, 18.9897, 0.84 ) }
    dend_9 { pt3dadd( -39.0951, -5.12312, 19.6134, 0.84 ) }
    dend_9 { pt3dadd( -39.5384, -4.74155, 20.9852, 1.2 ) }
    dend_9 { pt3dadd( -40.7769, -4.17413, 23.4064, 1.08 ) }
    dend_9 { pt3dadd( -41.6368, -3.97359, 24.5517, 1.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -36.5802, -7.97986, 9.63909, 1.92 ) }
    dend_6 { pt3dadd( -38.3309, -6.89742, 10.6225, 1.92 ) }
    dend_6 { pt3dadd( -39.36, -6.27763, 11.0731, 1.92 ) }
    dend_6 { pt3dadd( -40.9626, -5.22626, 11.6291, 1.56 ) }
    dend_6 { pt3dadd( -42.2922, -4.2944, 12.0184, 1.32 ) }
    dend_6 { pt3dadd( -43.5355, -3.31866, 12.3454, 1.8 ) }
    dend_6 { pt3dadd( -44.9107, -2.16206, 12.668, 1.2 ) }
    dend_6 { pt3dadd( -46.0074, -1.12315, 12.8154, 1.2 ) }
    dend_6 { pt3dadd( -47.5115, 0.392359, 12.9762, 0.96 ) }
    dend_6 { pt3dadd( -48.2111, 1.12623, 13.0142, 0.96 ) }
    dend_6 { pt3dadd( -49.3795, 2.33463, 13.0074, 1.32 ) }
    dend_6 { pt3dadd( -50.4903, 3.39131, 13.002, 1.32 ) }
    dend_6 { pt3dadd( -51.2871, 4.01736, 12.9887, 1.32 ) }
    dend_6 { pt3dadd( -52.2468, 4.58739, 12.9605, 0.96 ) }
    dend_6 { pt3dadd( -52.9627, 4.86423, 12.9268, 0.96 ) }
    dend_6 { pt3dadd( -54.1428, 5.24213, 12.9753, 0.96 ) }
    dend_6 { pt3dadd( -55.4246, 5.52881, 13.0231, 0.96 ) }
    dend_6 { pt3dadd( -57.4402, 5.87475, 13.1028, 1.44 ) }
    dend_6 { pt3dadd( -58.4738, 6.02836, 13.1476, 1.44 ) }
    dend_6 { pt3dadd( -59.284, 6.18373, 13.1862, 1.44 ) }
    dend_6 { pt3dadd( -61.8914, 6.95286, 13.4984, 1.2 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -45.3752, -25.6289, 18.211, 0.96 ) }
    dend_4 { pt3dadd( -46.2674, -25.432, 19.4449, 0.96 ) }
    dend_4 { pt3dadd( -47.4906, -25.0687, 21.2152, 0.96 ) }
    dend_4 { pt3dadd( -48.5966, -24.7058, 22.8196, 0.96 ) }
    dend_4 { pt3dadd( -50.5324, -24.0197, 25.5637, 0.6 ) }
    dend_4 { pt3dadd( -52.3325, -23.3674, 28.0128, 1.2 ) }
    dend_4 { pt3dadd( -55.301, -22.1273, 32.0449, 0.72 ) }
    dend_4 { pt3dadd( -55.8416, -21.829, 32.8617, 0.72 ) }
    dend_4 { pt3dadd( -56.1017, -21.6606, 33.2722, 0.72 ) }
    dend_4 { pt3dadd( -56.6856, -21.2119, 34.2172, 0.72 ) }
    dend_4 { pt3dadd( -57.1225, -20.741, 34.9993, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -58.2248, -19.1621, 37.3294, 1.2 ) }
    dend_4 { pt3dadd( -59.6782, -16.8073, 40.2212, 0.84 ) }
    dend_4 { pt3dadd( -69.3544, -12.8077, 49.6438, 0.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 3/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -45.3752, -25.6289, 18.211, 0.84 ) }
    dend_3 { pt3dadd( -46.5274, -26.1914, 18.167, 0.84 ) }
    dend_3 { pt3dadd( -47.4021, -26.5286, 18.1391, 0.84 ) }
    dend_3 { pt3dadd( -48.7088, -27.0293, 18.1098, 0.6 ) }
    dend_3 { pt3dadd( -49.6009, -27.3443, 18.0954, 0.6 ) }
    dend_3 { pt3dadd( -50.8702, -27.7404, 18.0768, 0.6 ) }
    dend_3 { pt3dadd( -52.2326, -28.1162, 18.0587, 0.6 ) }
    dend_3 { pt3dadd( -53.5105, -28.3756, 18.0114, 0.6 ) }
    dend_3 { pt3dadd( -54.5327, -28.544, 17.9926, 0.6 ) }
    dend_3 { pt3dadd( -55.6138, -28.6916, 18.018, 0.6 ) }
    dend_3 { pt3dadd( -56.2184, -28.7585, 18.0353, 0.6 ) }
    dend_3 { pt3dadd( -56.9431, -28.8276, 18.0596, 0.6 ) }
    dend_3 { pt3dadd( -57.3835, -28.8396, 18.067, 1.08 ) }
    dend_3 { pt3dadd( -58.866, -28.8025, 18.0866, 0.72 ) }
    dend_3 { pt3dadd( -60.4865, -28.7034, 18.1038, 0.72 ) }
    dend_3 { pt3dadd( -61.7544, -28.6305, 18.1185, 0.72 ) }
    dend_3 { pt3dadd( -62.3569, -28.5993, 18.1258, 0.72 ) }
    dend_3 { pt3dadd( -63.9184, -28.4439, 18.1376, 1.08 ) }
    dend_3 { pt3dadd( -73.6503, -30.6979, 16.75, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 66.4799, -66.1962, -0.19449, 0.72 ) }
    dend_39 { pt3dadd( 66.5538, -68.4982, -1.48526, 0.72 ) }
    dend_39 { pt3dadd( 66.5989, -69.9068, -2.27509, 1.32 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 66.4799, -66.1962, -0.19449, 0.96 ) }
    dend_38 { pt3dadd( 67.5779, -67.5229, 0.162822, 0.96 ) }
    dend_38 { pt3dadd( 68.6705, -68.9474, 0.589689, 0.96 ) }
    dend_38 { pt3dadd( 69.899, -70.6314, 1.09773, 1.56 ) }
    dend_38 { pt3dadd( 71.3773, -72.6437, 1.68416, 0.84 ) }
    dend_38 { pt3dadd( 72.7115, -74.4642, 2.17348, 1.32 ) }
    dend_38 { pt3dadd( 74.3764, -76.9112, 2.87542, 0.6 ) }
    dend_38 { pt3dadd( 75.3183, -78.4038, 3.33574, 1.32 ) }
    dend_38 { pt3dadd( 76.5912, -80.4803, 4.0013, 0.72 ) }
    dend_38 { pt3dadd( 77.7155, -82.2937, 4.5948, 0.72 ) }
    dend_38 { pt3dadd( 78.5628, -83.5868, 5.07293, 1.68 ) }
    dend_38 { pt3dadd( 80.8187, -86.7177, 6.41497, 0.72 ) }
    dend_38 { pt3dadd( 82.2267, -88.4035, 7.30634, 0.72 ) }
    dend_38 { pt3dadd( 83.0822, -89.2778, 7.90116, 0.72 ) }
    dend_38 { pt3dadd( 83.9686, -90.0104, 8.62275, 0.72 ) }
    dend_38 { pt3dadd( 85.3549, -90.8774, 9.83383, 1.08 ) }
    dend_38 { pt3dadd( 86.4061, -91.3607, 10.7646, 0.48 ) }
    dend_38 { pt3dadd( 87.6663, -91.655, 11.816, 0.96 ) }
    dend_38 { pt3dadd( 88.6813, -91.7909, 12.7616, 0.96 ) }
    dend_38 { pt3dadd( 89.9003, -91.8947, 14.0153, 0.72 ) }
    dend_38 { pt3dadd( 91.3061, -91.9634, 15.5774, 0.48 ) }
    dend_38 { pt3dadd( 96.7671, -98.0276, 19.6915, 0.48 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 47/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -28.2479, -117.938, -70.012, 0.84 ) }
    dend_25 { pt3dadd( -30.652, -118.296, -68.8595, 0.84 ) }
    dend_25 { pt3dadd( -33.1699, -118.681, -67.8383, 0.84 ) }
    dend_25 { pt3dadd( -38.7324, -119.712, -65.956, 1.32 ) }
    dend_25 { pt3dadd( -43.5076, -120.764, -64.4639, 0.84 ) }
    dend_25 { pt3dadd( -45.0028, -121.169, -64.0556, 0.84 ) }
    dend_25 { pt3dadd( -47.8069, -122.046, -63.3606, 1.44 ) }
    dend_25 { pt3dadd( -51.7351, -123.619, -62.4897, 0.96 ) }
    dend_25 { pt3dadd( -54.0435, -124.92, -62.1337, 0.96 ) }
    dend_25 { pt3dadd( -55.5157, -126.192, -62.2073, 1.44 ) }
    dend_25 { pt3dadd( -57.2511, -128.371, -62.5771, 0.96 ) }
    dend_25 { pt3dadd( -57.7154, -129.114, -62.7105, 0.96 ) }
    dend_25 { pt3dadd( -58.9628, -131.645, -63.2, 1.44 ) }
    dend_25 { pt3dadd( -60.0167, -134.094, -63.6544, 1.08 ) }
    dend_25 { pt3dadd( -61.315, -136.899, -64.2088, 1.44 ) }
    dend_25 { pt3dadd( -62.7928, -139.641, -64.6462, 0.84 ) }
    dend_25 { pt3dadd( -63.7263, -141.017, -64.7033, 0.84 ) }
    dend_25 { pt3dadd( -64.2692, -141.747, -64.7191, 0.84 ) }
    dend_25 { pt3dadd( -66.6788, -144.494, -64.6211, 1.2 ) }
    dend_25 { pt3dadd( -67.938, -145.62, -64.4112, 1.2 ) }
    dend_25 { pt3dadd( -71.5639, -147.756, -63.1761, 0.84 ) }
    dend_25 { pt3dadd( -74.6186, -148.738, -61.604, 0.48 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 69/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -28.2479, -117.938, -70.012, 0.72 ) }
    dend_24 { pt3dadd( -29.0943, -119.227, -70.067, 0.72 ) }
    dend_24 { pt3dadd( -30.8292, -121.739, -70.458, 1.2 ) }
    dend_24 { pt3dadd( -31.8526, -123.143, -70.8066, 0.84 ) }
    dend_24 { pt3dadd( -33.0102, -124.657, -71.3022, 1.32 ) }
    dend_24 { pt3dadd( -34.6367, -126.69, -72.0471, 0.72 ) }
    dend_24 { pt3dadd( -35.7664, -128.061, -72.5942, 1.32 ) }
    dend_24 { pt3dadd( -37.6031, -130.199, -73.6174, 0.84 ) }
    dend_24 { pt3dadd( -39.2697, -132.033, -74.6498, 1.32 ) }
    dend_24 { pt3dadd( -40.9241, -133.817, -75.724, 0.84 ) }
    dend_24 { pt3dadd( -41.7886, -134.728, -76.2877, 0.84 ) }
    dend_24 { pt3dadd( -43.4132, -136.448, -77.3607, 1.44 ) }
    dend_24 { pt3dadd( -44.0118, -137.112, -77.7568, 1.44 ) }
    dend_24 { pt3dadd( -45.6197, -139.089, -78.8463, 0.96 ) }
    dend_24 { pt3dadd( -47.597, -141.796, -80.2219, 1.44 ) }
    dend_24 { pt3dadd( -49.3484, -144.409, -81.4413, 0.84 ) }
    dend_24 { pt3dadd( -49.964, -145.375, -81.8693, 1.32 ) }
    dend_24 { pt3dadd( -50.9864, -146.99, -82.5129, 0.84 ) }
    dend_24 { pt3dadd( -52.9242, -149.908, -83.4748, 1.32 ) }
    dend_24 { pt3dadd( -54.1791, -151.739, -84.0146, 0.84 ) }
    dend_24 { pt3dadd( -55.8623, -154.065, -84.6978, 1.44 ) }
    dend_24 { pt3dadd( -56.7035, -155.199, -85.0541, 0.72 ) }
    dend_24 { pt3dadd( -58.448, -157.522, -85.953, 1.32 ) }
    dend_24 { pt3dadd( -60.5534, -160.189, -87.0429, 0.6 ) }
    dend_24 { pt3dadd( -62.5209, -162.57, -88.0937, 1.08 ) }
    dend_24 { pt3dadd( -64.5822, -165.034, -89.2836, 0.48 ) }
    dend_24 { pt3dadd( -66.7811, -167.742, -90.7554, 1.44 ) }
    dend_24 { pt3dadd( -68.5998, -170.133, -92.22, 0.72 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 15.192, -86.9576, -42.5785, 0.84 ) }
    dend_22 { pt3dadd( 14.1964, -88.164, -42.7433, 0.84 ) }
    dend_22 { pt3dadd( 13.1658, -89.3072, -42.9552, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 12.4312, -90.122, -43.1365, 0.72 ) }
    dend_22 { pt3dadd( 11.907, -90.6958, -43.2798, 0.72 ) }
    dend_22 { pt3dadd( 10.8668, -91.8107, -43.5869, 0.72 ) }
    dend_22 { pt3dadd( 9.98944, -92.752, -43.8492, 0.72 ) }
    dend_22 { pt3dadd( 9.48952, -93.2776, -44.0055, 0.72 ) }
    dend_22 { pt3dadd( 8.84673, -93.9657, -44.2486, 0.72 ) }
    dend_22 { pt3dadd( 8.12915, -94.7871, -44.5325, 1.08 ) }
    dend_22 { pt3dadd( 7.46242, -95.5664, -44.7741, 1.08 ) }
    dend_22 { pt3dadd( 7.17175, -95.9419, -44.8654, 1.08 ) }
    dend_22 { pt3dadd( 6.59347, -96.7229, -45.0344, 0.6 ) }
    dend_22 { pt3dadd( 6.14618, -97.2975, -45.1641, 0.6 ) }
    dend_22 { pt3dadd( 5.06761, -98.5829, -45.429, 1.08 ) }
    dend_22 { pt3dadd( 4.22573, -99.562, -45.6449, 1.08 ) }
    dend_22 { pt3dadd( 2.96407, -100.945, -45.9212, 0.6 ) }
    dend_22 { pt3dadd( 2.13429, -101.792, -46.0782, 0.6 ) }
    dend_22 { pt3dadd( 0.580873, -103.308, -46.3231, 1.56 ) }
    dend_22 { pt3dadd( -0.576647, -104.43, -46.4834, 0.84 ) }
    dend_22 { pt3dadd( -1.54733, -105.386, -46.6023, 1.44 ) }
    dend_22 { pt3dadd( -2.80955, -106.684, -46.7378, 0.96 ) }
    dend_22 { pt3dadd( -3.80734, -107.747, -46.8309, 1.56 ) }
    dend_22 { pt3dadd( -4.94775, -109.093, -46.9405, 0.96 ) }
    dend_22 { pt3dadd( -5.47719, -109.809, -46.9761, 0.96 ) }
    dend_22 { pt3dadd( -6.20424, -110.92, -47.0566, 1.56 ) }
    dend_22 { pt3dadd( -6.58493, -111.566, -47.1179, 1.56 ) }
    dend_22 { pt3dadd( -7.38018, -113.104, -47.3353, 1.08 ) }
    dend_22 { pt3dadd( -8.10146, -114.612, -47.5745, 1.68 ) }
    dend_22 { pt3dadd( -8.75623, -116.074, -47.8257, 1.68 ) }
    dend_22 { pt3dadd( -9.43081, -117.694, -48.1318, 0.96 ) }
    dend_22 { pt3dadd( -9.95238, -119.115, -48.4241, 1.56 ) }
    dend_22 { pt3dadd( -10.4087, -120.423, -48.7168, 0.96 ) }
    dend_22 { pt3dadd( -10.8663, -121.908, -49.0494, 1.8 ) }
    dend_22 { pt3dadd( -11.4296, -123.91, -49.5121, 1.2 ) }
    dend_22 { pt3dadd( -11.7904, -125.348, -49.8646, 0.72 ) }
    dend_22 { pt3dadd( -12.1945, -127.217, -50.3256, 1.2 ) }
    dend_22 { pt3dadd( -12.4547, -128.569, -50.6593, 0.72 ) }
    dend_22 { pt3dadd( -12.7118, -130.171, -51.086, 0.72 ) }
    dend_22 { pt3dadd( -12.8289, -131.067, -51.3524, 0.72 ) }
    dend_22 { pt3dadd( -12.9783, -132.407, -51.794, 1.2 ) }
    dend_22 { pt3dadd( -13.0738, -133.306, -52.0933, 0.72 ) }
    dend_22 { pt3dadd( -13.2268, -134.737, -52.6032, 1.2 ) }
    dend_22 { pt3dadd( -13.3895, -136.206, -53.139, 0.6 ) }
    dend_22 { pt3dadd( -13.5292, -137.126, -53.4629, 1.2 ) }
    dend_22 { pt3dadd( -13.8329, -138.61, -53.8875, 0.6 ) }
    dend_22 { pt3dadd( -14.0545, -139.515, -54.0977, 0.6 ) }
    dend_22 { pt3dadd( -14.4244, -140.72, -54.3209, 1.32 ) }
    dend_22 { pt3dadd( -15.3312, -143.263, -54.723, 0.72 ) }
    dend_22 { pt3dadd( -16.0152, -144.982, -54.9544, 1.2 ) }
    dend_22 { pt3dadd( -16.8521, -146.973, -55.1948, 0.72 ) }
    dend_22 { pt3dadd( -17.0806, -147.517, -55.2581, 0.72 ) }
    dend_22 { pt3dadd( -17.8587, -149.432, -55.4929, 1.32 ) }
    dend_22 { pt3dadd( -18.5392, -151.173, -55.7446, 0.6 ) }
    dend_22 { pt3dadd( -19.1412, -152.759, -56.005, 1.32 ) }
    dend_22 { pt3dadd( -19.8679, -154.64, -56.3686, 0.6 ) }
    dend_22 { pt3dadd( -20.9745, -157.441, -56.9882, 0.6 ) }
    dend_22 { pt3dadd( -21.6419, -159.092, -57.374, 1.2 ) }
    dend_22 { pt3dadd( -22.9859, -162.374, -58.1725, 0.72 ) }
    dend_22 { pt3dadd( -23.4848, -163.489, -58.4493, 1.2 ) }
    dend_22 { pt3dadd( -24.3789, -165.364, -58.9484, 1.08 ) }
    dend_22 { pt3dadd( -25.0986, -166.8, -59.3721, 0.72 ) }
    dend_22 { pt3dadd( -25.7275, -167.998, -59.775, 0.72 ) }
    dend_22 { pt3dadd( -26.4013, -169.328, -60.2381, 1.2 ) }
    dend_22 { pt3dadd( -27.0843, -170.786, -60.7213, 0.6 ) }
    dend_22 { pt3dadd( -27.7957, -172.431, -61.2666, 1.08 ) }
    dend_22 { pt3dadd( -28.2675, -173.698, -61.6367, 0.6 ) }
    dend_22 { pt3dadd( -28.6559, -174.873, -61.9553, 1.2 ) }
    dend_22 { pt3dadd( -29.3973, -177.434, -62.5908, 0.6 ) }
    dend_22 { pt3dadd( -29.6959, -178.685, -62.8886, 0.6 ) }
    dend_22 { pt3dadd( -29.8479, -179.454, -63.1132, 1.2 ) }
    dend_22 { pt3dadd( -30.1633, -181.113, -63.5773, 0.72 ) }
    dend_22 { pt3dadd( -30.3578, -182.226, -63.877, 1.2 ) }
    dend_22 { pt3dadd( -30.4778, -183.008, -64.0993, 1.2 ) }
    dend_22 { pt3dadd( -30.6037, -184.298, -64.597, 1.2 ) }
    dend_22 { pt3dadd( -30.7433, -186.838, -65.8567, 0.72 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 15.192, -86.9576, -42.5785, 0.72 ) }
    dend_17 { pt3dadd( 18.7183, -88.5729, -42.1808, 0.72 ) }
    dend_17 { pt3dadd( 20.7702, -89.5148, -41.818, 0.72 ) }
    dend_17 { pt3dadd( 22.5766, -90.436, -41.531, 1.56 ) }
    dend_17 { pt3dadd( 24.5264, -91.5251, -41.2704, 0.96 ) }
    dend_17 { pt3dadd( 27.6836, -93.4004, -40.9652, 1.56 ) }
    dend_17 { pt3dadd( 30.1843, -94.9506, -40.8226, 1.56 ) }
    dend_17 { pt3dadd( 32.3671, -96.4441, -40.8376, 0.96 ) }
    dend_17 { pt3dadd( 35.0827, -98.466, -40.9174, 1.2 ) }
    dend_17 { pt3dadd( 36.9496, -100.059, -41.0529, 1.2 ) }
    dend_17 { pt3dadd( 38.6587, -101.823, -41.2948, 1.56 ) }
    dend_17 { pt3dadd( 39.9822, -103.37, -41.6272, 1.56 ) }
    dend_17 { pt3dadd( 41.3139, -105.078, -42.0798, 0.84 ) }
    dend_17 { pt3dadd( 42.7623, -107.059, -42.6932, 1.44 ) }
    dend_17 { pt3dadd( 44.3557, -109.409, -43.3818, 0.84 ) }
    dend_17 { pt3dadd( 45.6835, -111.601, -44.0006, 1.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -41.6368, -3.97359, 24.5517, 0.72 ) }
    dend_13 { pt3dadd( -42.7328, -4.02759, 25.601, 0.72 ) }
    dend_13 { pt3dadd( -44.3606, -4.18511, 26.882, 1.2 ) }
    dend_13 { pt3dadd( -45.8252, -4.32683, 28.0346, 1.2 ) }
    dend_13 { pt3dadd( -46.8558, -4.42657, 28.8456, 0.96 ) }
    dend_13 { pt3dadd( -47.7373, -4.51187, 29.5393, 0.72 ) }
    dend_13 { pt3dadd( -49.3067, -4.66374, 30.7744, 0.72 ) }
    dend_13 { pt3dadd( -50.5734, -4.87125, 31.7409, 1.2 ) }
    dend_13 { pt3dadd( -57.0983, -5.11915, 37.7782, 1.2 ) }
    dend_13 { pt3dadd( -64.9662, -4.93457, 41.9192, 1.2 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 99/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -41.6368, -3.97359, 24.5517, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( -40.3255, -4.17842, 26.213, 1.08 ) }
    dend_10 { pt3dadd( -39.9852, -4.22961, 26.6945, 1.08 ) }
    dend_10 { pt3dadd( -38.9791, -4.3045, 28.0813, 0.96 ) }
    dend_10 { pt3dadd( -38.146, -4.35625, 29.1596, 0.96 ) }
    dend_10 { pt3dadd( -36.8781, -4.42914, 30.6799, 1.44 ) }
    dend_10 { pt3dadd( -35.095, -4.53165, 32.8178, 1.44 ) }
    dend_10 { pt3dadd( -33.7873, -4.53623, 34.3131, 0.96 ) }
    dend_10 { pt3dadd( -32.883, -4.53631, 35.3802, 1.32 ) }
    dend_10 { pt3dadd( -32.2689, -4.56356, 36.1608, 1.32 ) }
    dend_10 { pt3dadd( -31.7009, -4.59591, 36.872, 1.32 ) }
    dend_10 { pt3dadd( -26.3254, -5.03506, 46.2701, 1.32 ) }
    dend_10 { pt3dadd( -20.4935, -5.40779, 55.394, 1.32 ) }
    dend_10 { pt3dadd( -13.9242, -6.78346, 63.9101, 1.32 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 13/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -61.8914, 6.95286, 13.4984, 0.72 ) }
    dend_8 { pt3dadd( -63.2261, 7.90272, 14.395, 0.72 ) }
    dend_8 { pt3dadd( -64.0606, 8.49659, 14.9556, 0.72 ) }
    dend_8 { pt3dadd( -64.9148, 9.10447, 15.5295, 0.72 ) }
    dend_8 { pt3dadd( -66.3954, 10.1581, 16.5241, 1.2 ) }
    dend_8 { pt3dadd( -68.4634, 11.6298, 17.9134, 0.72 ) }
    dend_8 { pt3dadd( -69.8136, 12.5906, 18.8204, 1.08 ) }
    dend_8 { pt3dadd( -77.2733, 17.8589, 25.3077, 1.08 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -61.8914, 6.95286, 13.4984, 1.08 ) }
    dend_7 { pt3dadd( -63.2293, 6.9901, 14.7875, 1.08 ) }
    dend_7 { pt3dadd( -63.9766, 6.92126, 15.4523, 1.08 ) }
    dend_7 { pt3dadd( -65.6218, 6.64941, 16.8358, 1.2 ) }
    dend_7 { pt3dadd( -66.7091, 6.46532, 17.7295, 1.2 ) }
    dend_7 { pt3dadd( -67.4562, 6.33425, 18.4095, 1.44 ) }
    dend_7 { pt3dadd( -68.4893, 6.16818, 19.392, 1.08 ) }
    dend_7 { pt3dadd( -69.0684, 6.02616, 19.9809, 0.84 ) }
    dend_7 { pt3dadd( -69.6457, 5.88111, 20.5911, 0.84 ) }
    dend_7 { pt3dadd( -70.4116, 5.73602, 21.4277, 0.84 ) }
    dend_7 { pt3dadd( -71.5239, 5.70559, 22.6406, 1.2 ) }
    dend_7 { pt3dadd( -72.4092, 5.82044, 23.5891, 1.2 ) }
    dend_7 { pt3dadd( -73.6258, 6.10102, 24.7646, 1.08 ) }
    dend_7 { pt3dadd( -74.2472, 6.24341, 25.2782, 0.96 ) }
    dend_7 { pt3dadd( -75.0603, 6.43741, 25.9034, 0.96 ) }
    dend_7 { pt3dadd( -76.5368, 6.77522, 26.9007, 1.32 ) }
    dend_7 { pt3dadd( -77.2337, 6.9394, 27.2893, 1.32 ) }
    dend_7 { pt3dadd( -78.9085, 7.36467, 28.1454, 1.32 ) }
    dend_7 { pt3dadd( -80.6069, 7.83317, 28.8746, 0.84 ) }
    dend_7 { pt3dadd( -88.9937, 9.68078, 35.236, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 45.6835, -111.601, -44.0006, 0.6 ) }
    dend_21 { pt3dadd( 48.4844, -112.272, -45.1274, 0.6 ) }
    dend_21 { pt3dadd( 50.3295, -112.715, -45.8696, 0.6 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 44/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 45.6835, -111.601, -44.0006, 0.6 ) }
    dend_18 { pt3dadd( 45.5545, -113.682, -43.9693, 0.6 ) }
    dend_18 { pt3dadd( 45.5621, -115.502, -44.2423, 1.08 ) }
    dend_18 { pt3dadd( 45.6424, -116.837, -44.5507, 1.08 ) }
    dend_18 { pt3dadd( 45.7405, -117.879, -44.8504, 1.08 ) }
    dend_18 { pt3dadd( 45.8719, -119.008, -45.1967, 1.08 ) }
    dend_18 { pt3dadd( 46.2128, -121.482, -45.8418, 0.72 ) }
    dend_18 { pt3dadd( 46.5464, -123.037, -46.2341, 1.2 ) }
    dend_18 { pt3dadd( 46.7484, -123.874, -46.415, 1.2 ) }
    dend_18 { pt3dadd( 46.9189, -124.589, -46.5288, 1.2 ) }
    dend_18 { pt3dadd( 47.2263, -125.918, -46.6621, 0.84 ) }
    dend_18 { pt3dadd( 47.7073, -127.97, -46.8657, 0.6 ) }
    dend_18 { pt3dadd( 48.2968, -130.439, -47.0026, 1.32 ) }
    dend_18 { pt3dadd( 48.6218, -131.874, -47.1023, 1.32 ) }
    dend_18 { pt3dadd( 48.938, -133.4, -47.316, 0.72 ) }
    dend_18 { pt3dadd( 49.165, -134.553, -47.5187, 1.2 ) }
    dend_18 { pt3dadd( 49.7013, -137.541, -48.1582, 1.2 ) }
    dend_18 { pt3dadd( 49.8196, -138.34, -48.3676, 0.72 ) }
    dend_18 { pt3dadd( 50.0507, -140.211, -48.8811, 1.56 ) }
    dend_18 { pt3dadd( 50.2568, -142.653, -49.523, 0.72 ) }
    dend_18 { pt3dadd( 50.3349, -144.603, -50.0146, 0.72 ) }
    dend_18 { pt3dadd( 50.3457, -146.152, -50.3862, 1.44 ) }
    dend_18 { pt3dadd( 50.3197, -147.426, -50.6444, 0.84 ) }
    dend_18 { pt3dadd( 50.3115, -148.387, -50.8456, 0.84 ) }
    dend_18 { pt3dadd( 50.3935, -149.772, -51.0669, 1.44 ) }
    dend_18 { pt3dadd( 50.7225, -152.02, -51.3585, 0.84 ) }
    dend_18 { pt3dadd( 50.9019, -153.019, -51.5255, 0.84 ) }
    dend_18 { pt3dadd( 51.1492, -154.051, -51.7002, 1.32 ) }
    dend_18 { pt3dadd( 51.4274, -154.931, -51.8258, 1.32 ) }
    dend_18 { pt3dadd( 52.5234, -157.656, -52.1549, 0.72 ) }
    dend_18 { pt3dadd( 53.2034, -158.818, -52.2186, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 75/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -13.9242, -6.78346, 63.9101, 0.96 ) }
    dend_12 { pt3dadd( -8.227, -7.53547, 71.9668, 0.96 ) }
    dend_12 { pt3dadd( -3.5649, -7.3699, 80.6815, 0.96 ) }
    dend_12 { pt3dadd( -0.460932, -5.51911, 89.8365, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -13.9242, -6.78346, 63.9101, 0.84 ) }
    dend_11 { pt3dadd( -6.73484, -7.67509, 74.0624, 0.96 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 81/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 53.2034, -158.818, -52.2186, 0.6 ) }
    dend_20 { pt3dadd( 54.137, -159.219, -51.6088, 0.6 ) }
    dend_20 { pt3dadd( 54.9375, -159.644, -51.012, 0.96 ) }
    dend_20 { pt3dadd( 55.9847, -160.201, -50.2312, 0.6 ) }
    dend_20 { pt3dadd( 56.6366, -160.547, -49.7451, 0.6 ) }
    dend_20 { pt3dadd( 57.6821, -161.103, -48.9655, 1.2 ) }
    dend_20 { pt3dadd( 58.9345, -161.768, -48.0317, 0.72 ) }
    dend_20 { pt3dadd( 59.7463, -162.302, -47.3538, 1.2 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 53.2034, -158.818, -52.2186, 0.48 ) }
    dend_19 { pt3dadd( 53.7481, -160.072, -52.2534, 0.48 ) }
    dend_19 { pt3dadd( 54.5249, -161.797, -52.8217, 1.08 ) }
    dend_19 { pt3dadd( 55.3718, -163.67, -53.3968, 0.6 ) }
    dend_19 { pt3dadd( 56.0084, -165.162, -53.7893, 0.36 ) }
    dend_19 { pt3dadd( 56.8323, -167.061, -54.2582, 0.36 ) }
    dend_19 { pt3dadd( 57.5829, -168.763, -54.6884, 0.84 ) }
    dend_19 { pt3dadd( 59.0866, -172.119, -55.7275, 0.6 ) }
    dend_19 { pt3dadd( 60.2818, -174.695, -56.6424, 0.6 ) }
    dend_19 { pt3dadd( 61.391, -177.0, -57.4891, 1.08 ) }
    dend_19 { pt3dadd( 61.8846, -177.979, -57.8099, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_19 { pt3dadd( 62.6276, -179.361, -58.1941, 1.08 ) }
    dend_19 { pt3dadd( 64.0255, -181.697, -58.8106, 0.48 ) }
    dend_19 { pt3dadd( 65.3579, -183.649, -59.3343, 0.48 ) }
    dend_19 { pt3dadd( 65.9664, -184.451, -59.6155, 0.48 ) }
    dend_19 { pt3dadd( 67.0562, -185.788, -60.1138, 0.48 ) }
    dend_19 { pt3dadd( 67.9754, -186.897, -60.5083, 0.48 ) }
    dend_19 { pt3dadd( 69.4282, -188.538, -61.0354, 1.08 ) }
    dend_19 { pt3dadd( 70.2716, -189.395, -61.2901, 0.48 ) }
    dend_19 { pt3dadd( 71.7489, -190.826, -61.7719, 1.08 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, axon_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, axon_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_5 = new SectionList()
    dend_47 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_44 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_26 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_4 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_25 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_24 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_34 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_42 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_51 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_53 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_48 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_41 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_13 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_50 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_52 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_7 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_45 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_39 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_11 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_12 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_21 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_20 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_33 nseg = 3
    dend_14 nseg = 5
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_36 nseg = 3
    dend_29 nseg = 3
    dend_26 nseg = 7
    dend_30 nseg = 3
    dend_23 nseg = 3
    dend_4 nseg = 3
    dend_38 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_22 nseg = 5
    dend_17 nseg = 3
    dend_10 nseg = 3
    dend_18 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_SBC_6c406e9f09_0_0


