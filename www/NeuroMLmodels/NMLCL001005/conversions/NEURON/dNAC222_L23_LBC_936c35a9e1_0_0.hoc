// Cell: dNAC222_L23_LBC_936c35a9e1_0_0
/*
{
  "id" : "dNAC222_L23_LBC_936c35a9e1_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.09406, -10.5757, -0.444037, 2.91935", "-1.88817, -9.52414, -0.41304, 5.10932", "-1.68229, -8.4726, -0.382043, 5.77485", "-1.47641, -7.42107, -0.351047, 6.01078", "-1.27053, -6.36953, -0.32005, 6.04996", "-1.06465, -5.318, -0.289053, 5.93407", "-0.858767, -4.26646, -0.258056, 6.24426", "-0.652886, -3.21492, -0.22706, 7.35421", "-0.447004, -2.16339, -0.196063, 8.45604", "-0.241123, -1.11185, -0.165066, 9.12005", "-0.0352414, -0.0603167, -0.134069, 9.36575", "0.17064, 0.991219, -0.103072, 9.61145", "0.376522, 2.04276, -0.0720756, 10.2138", "0.582403, 3.09429, -0.0410789, 11.1588", "0.788285, 4.14583, -0.0100821, 11.7442", "0.994166, 5.19736, 0.0209147, 11.9266", "1.20005, 6.2489, 0.0519115, 11.3882", "1.40593, 7.30044, 0.0829083, 10.504", "1.61181, 8.35197, 0.113905, 8.36092", "1.81769, 9.40351, 0.144902, 5.9148", "2.02357, 10.455, 0.175899, 4.32325" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.84106, -9.37889, -0.116561, 1.66", "-12.5033, -12.1149, -0.116561, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.25894, 7.73062, 7.64344, 1.94", "9.23254, 8.78821, 7.64344, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.69106, 7.05612, -8.61656, 2.77", "-5.21022, 7.67011, -8.61656, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.56106, -9.96789, -0.116561, 3.32", "-0.748893, -12.7017, -0.116561, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.02357, 10.455, 0.175899, 0.62163", "4.90572, 25.1755, 0.175899, 0.62163", "7.78786, 39.896, 0.175899, 0.62163" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-12.5033, -12.1149, -0.116561, 0.83", "-12.8521, -15.6697, 0.713549, 0.83", "-13.2248, -19.4691, 1.60079, 0.83", "-13.6656, -23.9621, 2.65, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-12.5033, -12.1149, -0.116561, 1.66", "-14.6728, -12.6518, 1.58504, 1.66", "-16.5471, -13.1157, 3.0551, 1.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "9.23254, 8.78821, 7.64344, 1.38", "9.63, 12.4152, 14.0207, 1.38", "9.80944, 14.0528, 16.8999, 1.38", "9.97819, 15.5926, 19.6073, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "9.23254, 8.78821, 7.64344, 1.11", "12.728, 8.94215, 10.7431, 1.11", "14.5544, 9.02258, 12.3626, 1.11", "17.6758, 9.16004, 15.1306, 1.38", "23.0497, 9.3967, 19.896, 1.38" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-5.21022, 7.67011, -8.61656, 0.83", "-6.45305, 6.66105, -12.5289, 0.83", "-7.23074, 6.09614, -14.7738, 0.83", "-7.71845, 5.6845, -16.062, 1.11", "-9.03485, 4.61315, -19.2249, 0.83", "-10.1577, 3.69929, -21.9228, 0.83", "-13.5569, 0.932871, -30.0898, 0.83", "-14.7059, -0.108936, -32.9435, 0.83", "-16.5257, -1.82664, -37.7614, 0.55", "-17.1063, -2.34245, -39.2327, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.21022, 7.67011, -8.61656, 1.38", "-6.62785, 9.83293, -9.13212, 1.38", "-8.48198, 12.6617, -9.80643, 1.38", "-10.9767, 16.4678, -10.7137, 1.38" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.748893, -12.7017, -0.116561, 0.83", "0.698727, -13.5704, -1.41322, 0.83", "1.78483, -14.2222, -2.38605, 0.83", "4.44357, -15.8177, -4.76754, 0.83", "5.88161, -16.6807, -6.05561, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.748893, -12.7017, -0.116561, 1.94", "-2.84196, -15.3482, -4.78234, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "7.78786, 39.896, 0.175899, 0.28", "10.67, 54.6165, 0.175899, 0.28", "13.5522, 69.337, 0.175899, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-13.6656, -23.9621, 2.65, 0.55", "-14.8837, -24.2514, 3.86976, 0.55", "-15.4425, -24.4717, 4.55499, 0.55", "-15.7115, -24.5831, 4.93813, 0.83", "-16.7966, -25.0218, 6.47536, 0.55", "-19.2264, -25.9585, 10.4078, 0.55", "-21.5802, -26.8854, 14.4279, 0.55", "-23.3904, -27.5954, 17.7512, 0.83", "-25.4832, -28.4789, 21.8704, 0.28", "-26.0442, -28.7371, 23.0477, 0.83", "-29.1448, -30.286, 30.0263, 0.55", "-29.7937, -30.6103, 31.5821, 0.28", "-30.3456, -30.8611, 32.9151, 0.55", "-31.4789, -31.3001, 35.7068, 0.28", "-31.9988, -31.5614, 37.075, 0.55", "-36.1526, -32.2095, 43.6842, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-13.6656, -23.9621, 2.65, 0.55", "-13.8876, -31.5381, 7.73519, 0.55", "-13.6583, -38.9144, 12.3383, 0.55", "-13.2589, -44.1341, 15.3795, 0.28", "-12.8385, -47.9937, 17.6118, 0.83", "-12.5317, -50.89, 19.3362, 0.55", "-12.3559, -52.4542, 20.3131, 0.55", "-11.9255, -55.5946, 22.1474, 0.55", "-11.3241, -58.3796, 23.7809, 0.55", "-10.7096, -61.4034, 25.542, 0.28", "-10.1509, -65.6926, 28.0217, 0.83", "-9.97096, -68.3982, 29.4931, 0.28", "-9.881, -71.1694, 30.8484, 0.83", "-9.8501, -74.3439, 32.182, 0.28", "-9.845, -76.5166, 32.9263, 0.83", "-9.83556, -80.2022, 33.8815, 0.28", "-9.76351, -83.218, 34.5476, 0.83", "-9.67837, -86.1104, 35.1726, 0.28", "-9.50188, -88.8711, 36.0952, 0.83", "-9.07045, -92.3038, 37.8608, 0.28", "-8.77596, -93.6745, 38.8829, 0.55", "-7.70452, -97.1324, 42.3546, 0.28", "-7.13038, -98.7021, 44.4475, 0.55", "-5.54103, -102.429, 50.3438, 0.28", "-4.62272, -104.165, 53.7266, 0.83", "-3.68098, -105.461, 56.9745, 0.28", "-3.34381, -105.827, 58.1553, 0.55", "-2.10412, -106.698, 62.808, 0.28", "0.635969, -116.491, 70.0906, 0.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-16.5471, -13.1157, 3.0551, 0.55", "-19.4554, -21.5604, 3.5183, 0.55", "-21.4595, -27.3797, 3.83749, 0.55", "-24.0547, -34.9153, 4.25082, 0.55", "-25.0712, -37.867, 4.41272, 0.55", "-26.4566, -41.8896, 4.63336, 0.55", "-29.5686, -50.9258, 5.129, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-16.5471, -13.1157, 3.0551, 1.38", "-20.2965, -13.3365, 7.51747, 1.38", "-22.1808, -13.4475, 9.76006, 1.38" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "9.97819, 15.5926, 19.6073, 0.83", "9.39754, 17.1127, 15.0649, 0.83", "8.21404, 21.1079, 8.84614, 0.83", "6.46382, 25.6915, 3.23709, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "9.97819, 15.5926, 19.6073, 0.83", "11.1299, 17.6224, 20.1151, 0.83", "12.183, 19.728, 20.5819, 0.83", "13.1811, 21.9768, 21.0266, 0.83", "14.156, 24.1764, 21.5797, 0.83", "15.5224, 27.1246, 22.3274, 0.83", "16.5386, 29.46, 22.8849, 0.83", "17.3249, 31.4095, 23.3742, 0.83", "18.3191, 34.0167, 23.975, 0.83", "19.4083, 36.9138, 24.4306, 0.83", "19.9772, 38.5159, 24.5815, 0.83", "21.2064, 41.8792, 24.7325, 0.83", "22.2713, 44.4585, 24.5596, 0.55", "23.2408, 46.6128, 24.1709, 0.55", "24.4194, 49.0942, 23.4552, 0.55", "25.0826, 50.5811, 22.8972, 0.55", "25.8977, 52.5331, 22.1721, 0.55", "27.0396, 55.2932, 21.0997, 0.55", "27.2957, 56.0589, 20.8505, 0.55", "27.5525, 56.9758, 20.6803, 0.55", "27.8245, 58.3186, 20.6069, 0.55", "28.2137, 60.6854, 20.6371, 0.28", "28.4613, 62.8914, 20.8258, 0.55", "28.685, 65.1491, 21.1947, 0.28", "28.8078, 66.2198, 21.3809, 0.55", "29.0851, 68.1044, 21.7188, 0.28", "29.3596, 69.4912, 22.0041, 0.55", "29.4997, 70.2167, 22.1885, 0.83", "29.7142, 71.3932, 22.4862, 0.28", "29.8254, 72.2012, 22.7156, 0.55", "30.007, 73.3471, 22.991, 0.28", "30.3057, 75.0933, 23.3325, 0.55", "30.7366, 77.2961, 23.6151, 0.28", "31.011, 78.5464, 23.711, 0.55", "31.7488, 81.7006, 23.8024, 0.28", "32.3423, 83.8897, 23.7558, 0.28", "33.0884, 86.3543, 23.6135, 0.28", "35.235, 92.9013, 22.9603, 0.28", "37.2324, 98.6095, 22.1555, 0.28", "37.7239, 99.9334, 21.9078, 0.55", "39.4587, 104.225, 20.8799, 0.28", "40.3159, 106.194, 20.2609, 0.28", "41.3578, 108.267, 19.2845, 0.28", "41.9679, 109.259, 18.5427, 0.55", "43.097, 110.789, 17.0067, 0.28", "43.54, 111.318, 16.4651, 0.55", "45.9602, 113.807, 13.699, 0.28", "46.6325, 114.543, 13.2574, 0.55", "47.2636, 115.269, 13.0337, 0.28", "47.7394, 115.833, 12.9257, 0.55", "50.6, 119.35, 12.6727, 0.28", "51.2318, 120.148, 12.6873, 0.55", "56.5365, 126.96, 13.7085, 0.28", "56.9913, 127.55, 13.8161, 0.55", "60.1546, 135.415, 13.5242, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "23.0497, 9.3967, 19.896, 0.83", "24.4223, 9.82168, 21.1022, 0.83", "25.8014, 10.2882, 22.3191, 0.83", "28.117, 11.0325, 24.545, 0.83", "30.176, 11.7293, 26.5777, 0.83", "32.2967, 12.5574, 28.8223, 0.83", "34.9278, 13.7676, 31.8945, 0.83", "35.991, 14.3343, 33.2709, 1.11", "38.0906, 15.6226, 36.2975, 0.83", "39.6015, 16.6513, 38.7617, 1.11", "41.3685, 17.8017, 41.9082, 0.83", "43.2348, 18.9443, 45.3547, 0.55", "43.9361, 19.3911, 46.6761, 0.83", "46.3476, 20.9466, 51.3917, 0.55", "48.1301, 22.0982, 54.9119, 0.55", "48.9001, 22.5217, 56.4508, 0.28", "50.161, 22.998, 58.7224, 0.55", "54.2361, 24.0923, 68.0605, 0.55", "58.0077, 26.3011, 77.3003, 0.55", "62.2439, 28.6002, 86.3126, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "23.0497, 9.3967, 19.896, 0.83", "25.2775, 7.24226, 20.5488, 0.83", "27.1702, 5.48259, 21.064, 0.83", "30.9342, 2.07982, 21.9856, 0.83", "34.3321, -1.06963, 22.6972, 0.83", "36.3967, -3.12626, 23.1175, 0.55", "37.5955, -4.40993, 23.3878, 0.55", "38.287, -5.13665, 23.6499, 0.55", "39.6145, -6.58608, 24.4268, 0.55", "41.8198, -9.05985, 26.421, 0.55", "43.5019, -10.8539, 28.5255, 0.55", "45.9304, -13.3932, 32.0839, 0.55", "50.0081, -17.4383, 38.8659, 0.55", "51.5566, -18.8812, 41.6881, 0.55", "54.7701, -21.6464, 47.7887, 0.55", "57.8598, -24.0854, 53.9338, 0.55", "59.3466, -25.1484, 56.9639, 0.55", "61.8484, -26.8121, 62.2878, 0.28", "63.1269, -27.6715, 64.9866, 0.55", "64.1629, -28.2873, 67.1127, 0.28", "70.6705, -32.3666, 76.5269, 0.28", "76.7022, -36.9783, 85.9894, 0.28", "81.9032, -41.1082, 96.1667, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.9767, 16.4678, -10.7137, 0.55", "-8.29039, 17.7119, -10.6235, 0.55", "-5.73444, 18.8957, -10.5376, 0.55", "-3.78217, 19.7999, -10.472, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.9767, 16.4678, -10.7137, 0.83", "-11.8064, 19.6418, -17.843, 0.83", "-12.2114, 21.191, -21.3229, 0.83", "-12.8409, 23.5993, -26.7322, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.88161, -16.6807, -6.05561, 0.55", "7.77795, -17.7902, -6.82081, 0.55", "10.4027, -19.2933, -7.89501, 0.55", "11.606, -20.0921, -8.56799, 0.55", "15.1517, -22.4458, -10.5509, 0.55", "17.8605, -24.244, -12.0659, 0.55", "19.7182, -25.4772, -13.1048, 0.55", "21.4543, -26.4827, -14.1606, 0.55", "25.0668, -28.3547, -16.6066, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.88161, -16.6807, -6.05561, 0.83", "8.54982, -17.3258, -7.16793, 0.83", "11.3313, -17.9984, -8.32745, 0.83", "14.8516, -18.8496, -9.795, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-2.84196, -15.3482, -4.78234, 0.55", "-4.3846, -18.7751, -9.96564, 0.55", "-4.97491, -20.4531, -12.5194, 0.55", "-6.21001, -24.9361, -19.3801, 0.55", "-6.48083, -26.4306, -21.6979, 0.55", "-6.80727, -29.3608, -26.2904, 0.55", "-6.91015, -30.3477, -27.8008, 0.55", "-6.9265, -31.5289, -29.4453, 0.55", "-6.96122, -34.2262, -33.0861, 0.55", "-6.86119, -36.8176, -36.393, 0.55", "-6.7552, -39.0748, -39.385, 0.55", "-6.6891, -41.7496, -42.6517, 0.55", "-6.76593, -43.2538, -44.3954, 0.28", "-6.87128, -44.0368, -45.2484, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.84196, -15.3482, -4.78234, 1.38", "-4.28507, -17.4442, -5.20485, 1.38", "-5.48084, -19.181, -5.55494, 1.38", "-6.4657, -20.6114, -5.84328, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-36.1526, -32.2095, 43.6842, 0.28", "-40.7673, -33.7725, 52.069, 0.28", "-46.9303, -36.7543, 58.8656, 0.28", "-53.0385, -39.813, 65.6743, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-36.1526, -32.2095, 43.6842, 0.55", "-39.1454, -34.4623, 52.2554, 0.28", "-41.3402, -35.4886, 61.314, 0.28", "-43.6131, -38.2232, 69.9515, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-29.5686, -50.9258, 5.129, 0.28", "-32.6624, -54.2881, 5.65799, 0.28", "-36.2317, -57.914, 6.20847, 0.28", "-37.55, -59.1931, 6.4645, 0.55", "-41.9418, -63.5599, 8.19154, 0.28", "-43.4693, -65.106, 8.96363, 0.55", "-45.2382, -66.915, 9.94781, 0.83", "-47.0063, -68.6964, 11.0651, 0.28", "-48.515, -70.2099, 12.2396, 0.83", "-53.3569, -75.0762, 16.7404, 0.28", "-54.1228, -75.852, 17.68, 0.83", "-54.865, -76.6601, 18.7723, 0.55", "-56.0189, -78.1084, 20.8919, 0.83", "-62.0214, -87.2489, 24.1569, 0.83" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-29.5686, -50.9258, 5.129, 0.55", "-29.6394, -51.4359, 5.24814, 0.55", "-30.186, -55.0369, 5.92508, 0.28", "-30.5798, -57.2363, 5.92444, 0.28", "-31.3048, -60.8721, 5.55381, 1.38", "-32.0201, -63.9717, 5.32352, 0.28", "-32.4502, -65.7628, 5.20987, 0.55", "-33.0032, -67.9034, 5.01829, 0.83", "-34.4305, -73.37, 4.26378, 0.28", "-34.8462, -74.9019, 4.01552, 0.83", "-36.6053, -81.7452, 2.74371, 0.28", "-37.2529, -84.4812, 2.27069, 1.11", "-37.7155, -86.61, 1.90509, 0.28", "-38.4301, -89.6428, 1.28964, 0.83", "-39.2511, -92.9967, 0.576098, 0.28", "-39.8911, -95.3953, 0.0825296, 0.83", "-41.9412, -102.602, -1.47892, 0.28", "-42.5627, -104.706, -1.82878, 1.38", "-44.7871, -111.812, -2.65133, 0.28", "-45.3668, -113.658, -2.73752, 1.11", "-47.2785, -120.014, -2.67343, 0.28", "-47.5275, -120.935, -2.60901, 0.83", "-48.3907, -124.744, -2.03621, 0.28", "-48.7452, -127.2, -1.44486, 1.11", "-49.1067, -131.481, -0.150243, 0.28", "-49.2168, -132.729, 0.236749, 0.55", "-49.4799, -135.481, 1.09212, 0.28", "-49.5609, -136.074, 1.31003, 1.11", "-51.0673, -144.767, 4.85633, 0.28", "-51.3396, -146.21, 5.48161, 1.11", "-52.5165, -151.129, 7.72982, 0.28", "-52.9715, -152.879, 8.5866, 0.55", "-53.8562, -155.961, 10.2259, 0.28", "-54.2927, -157.305, 10.9818, 0.55", "-55.1189, -168.587, 12.7199, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-22.1808, -13.4475, 9.76006, 0.55", "-24.7307, -14.704, 10.7803, 0.55", "-27.997, -16.2426, 12.4323, 0.55", "-30.0364, -17.1754, 13.5092, 0.83", "-32.1252, -18.1197, 14.6336, 0.55", "-35.2351, -19.6368, 16.3828, 0.55", "-38.5653, -21.3979, 18.256, 0.83", "-41.4267, -23.1185, 19.9725, 0.55", "-42.917, -24.1808, 20.8832, 0.55", "-44.4286, -25.4196, 21.8295, 0.83", "-46.3943, -27.1742, 23.0446, 0.28", "-47.9333, -28.5806, 23.8986, 1.11", "-50.5148, -31.0937, 25.3231, 0.28", "-51.7426, -32.2488, 25.9662, 1.11", "-54.7668, -34.8214, 27.5406, 0.28", "-55.8727, -35.6296, 28.084, 0.55", "-57.186, -36.4022, 28.6566, 0.28", "-58.3553, -36.9753, 29.1269, 0.83", "-60.5939, -37.8763, 29.8919, 0.28", "-63.8186, -39.2216, 30.8276, 0.28", "-64.7597, -39.634, 31.0191, 1.11", "-66.106, -40.2587, 31.3538, 0.28", "-67.4914, -40.9513, 31.8195, 0.55", "-68.95, -41.6616, 32.3304, 0.28", "-70.6026, -42.469, 32.9023, 0.83", "-71.9462, -43.1579, 33.5227, 0.28", "-74.5818, -44.5602, 34.8758, 0.28", "-77.0002, -45.8812, 36.3201, 1.38", "-83.4049, -49.448, 40.4427, 0.28", "-84.6969, -50.2329, 41.4178, 1.11", "-89.1642, -53.1277, 45.0497, 0.28", "-89.8895, -53.6319, 45.6642, 0.83", "-93.6168, -56.4122, 49.0335, 0.28", "-93.9794, -56.6995, 49.3852, 1.11", "-100.722, -62.7074, 57.0827, 0.28", "-101.451, -63.3648, 57.9264, 1.11", "-102.708, -64.5125, 59.3211, 0.28", "-104.424, -66.1272, 61.2668, 0.55", "-110.908, -70.6224, 65.8957, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-22.1808, -13.4475, 9.76006, 0.83", "-24.2609, -12.3583, 9.32094, 0.83", "-27.8384, -10.6061, 8.48766, 0.83", "-31.1019, -8.97935, 7.69859, 0.83", "-35.4627, -6.79994, 6.4396, 0.83", "-38.3667, -5.4473, 5.46625, 0.83", "-41.4903, -4.05332, 4.40592, 0.83", "-43.5899, -3.09273, 3.58226, 0.55", "-44.5784, -2.59678, 3.15215, 0.55", "-47.2615, -1.31729, 1.91774, 0.55", "-50.6188, 0.180156, 0.136373, 0.55", "-51.9491, 0.807161, -0.666184, 0.55", "-55.1874, 2.47395, -2.95797, 0.55", "-57.0394, 3.44945, -4.46402, 0.55", "-59.6431, 4.79356, -6.8366, 0.55", "-60.8838, 5.44477, -8.08785, 0.55", "-62.618, 6.39264, -10.0443, 1.11", "-64.5456, 7.40411, -12.8092, 0.55", "-66.3403, 8.29582, -16.1541, 0.55", "-67.3914, 8.90042, -18.9662, 0.55", "-67.5847, 9.0213, -19.5766, 0.55", "-67.9412, 9.26379, -20.8639, 0.55", "-69.4568, 10.4568, -27.9465, 0.55", "-69.7337, 10.7611, -29.902, 0.55", "-70.362, 11.9811, -38.0044, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "6.46382, 25.6915, 3.23709, 0.55", "6.00024, 29.8097, -4.00536, 0.55", "6.15084, 34.5913, -10.7907, 0.55", "5.8726, 40.2208, -16.8093, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.46382, 25.6915, 3.23709, 0.55", "4.178, 30.8762, -4.93292, 0.55", "3.55782, 36.5485, -13.0305, 0.55", "4.59586, 42.0632, -21.1964, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-3.78217, 19.7999, -10.472, 0.55", "-3.34926, 17.913, -9.82453, 0.55", "-2.56559, 14.4974, -8.65244, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.78217, 19.7999, -10.472, 0.55", "-3.37704, 22.372, -10.9993, 0.55", "-3.29433, 25.955, -11.6282, 0.55", "-3.46657, 29.6581, -12.0927, 0.55", "-3.76585, 32.3802, -12.3842, 0.55", "-4.09501, 35.2514, -12.5694, 0.55", "-4.59619, 38.6679, -12.695, 0.55", "-5.66003, 43.5551, -12.7259, 0.55", "-6.8795, 47.8063, -12.5307, 0.55", "-7.67263, 50.1004, -12.3582, 0.55", "-9.48223, 55.1486, -11.8421, 0.55", "-11.1582, 59.8862, -11.1914, 0.55", "-12.4993, 63.4935, -10.6788, 0.55", "-13.5807, 66.5868, -10.1837, 0.55", "-14.4075, 69.2329, -9.81079, 0.55", "-14.9987, 71.9668, -9.57212, 0.55", "-15.7389, 75.5726, -9.346, 0.55", "-16.1235, 78.7591, -9.19642, 0.55", "-16.2417, 81.7287, -9.14722, 0.55", "-16.0792, 85.5295, -9.26391, 0.55", "-15.4164, 91.887, -9.7125, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-12.8409, 23.5993, -26.7322, 0.55", "-15.3831, 25.2501, -32.5065, 0.55", "-17.0816, 26.353, -36.3643, 0.55", "-18.4895, 27.2673, -39.5623, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-12.8409, 23.5993, -26.7322, 0.83", "-13.3428, 29.8772, -26.9515, 0.83", "-13.5856, 33.2102, -26.961, 0.55", "-14.0031, 36.5183, -26.9875, 0.55", "-14.317, 39.0047, -27.0074, 0.55", "-14.7468, 42.4102, -27.0346, 0.55", "-15.1828, 45.8644, -27.0622, 0.55", "-15.5589, 48.7226, -26.7668, 0.83", "-15.9072, 52.8781, -26.5229, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "25.0668, -28.3547, -16.6066, 0.28", "25.7698, -36.512, -18.9912, 0.28", "25.9855, -39.0151, -19.7229, 0.28", "26.1921, -41.413, -20.4239, 0.55", "26.5845, -45.9662, -21.7549, 0.28", "26.8184, -48.6805, -22.5483, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "25.0668, -28.3547, -16.6066, 0.55", "26.0917, -31.226, -21.7021, 0.55", "26.2802, -31.754, -22.6391, 0.55", "26.7304, -33.0154, -24.8776, 0.55", "27.0967, -34.0416, -26.6986, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "14.8516, -18.8496, -9.795, 0.55", "16.4458, -18.6257, -12.7033, 0.55", "17.3675, -18.6135, -14.3934, 0.55", "18.4604, -18.5989, -16.3976, 0.55", "19.7082, -18.5823, -18.6856, 0.55", "21.639, -18.5566, -22.2263, 0.28", "22.2013, -18.5491, -23.2574, 0.83", "23.6741, -18.674, -25.9643, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "14.8516, -18.8496, -9.795, 0.55", "17.3976, -20.0733, -9.65725, 0.55", "19.8487, -20.9987, -9.55018, 0.55", "23.1113, -22.0342, -9.40402, 0.55", "25.0542, -22.6358, -9.40756, 0.55", "27.9028, -23.6159, -9.2817, 0.55", "30.1725, -24.4292, -9.14908, 0.55", "34.3326, -25.7999, -8.83715, 0.55", "35.699, -26.1406, -8.80824, 0.55", "39.8243, -26.8347, -8.87631, 0.55", "45.5056, -27.4736, -9.13393, 0.55", "48.4682, -27.7132, -9.23761, 0.55", "50.702, -27.7929, -9.4391, 0.55", "57.5215, -27.8341, -10.1523, 0.28", "59.0873, -27.8634, -10.3748, 0.55", "61.0706, -27.9331, -10.6913, 0.55", "64.2951, -28.1987, -11.4178, 0.28", "69.7898, -29.1471, -12.329, 0.55", "73.4716, -30.1234, -12.7433, 0.28", "78.2117, -31.8475, -12.9548, 0.28", "82.095, -33.3451, -13.094, 0.55", "84.4048, -34.2866, -13.1923, 0.28", "87.6508, -35.655, -13.3356, 0.28", "89.7584, -36.582, -13.2057, 0.83", "92.4768, -37.7943, -13.1039, 0.55", "94.5443, -38.5488, -12.7878, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.4657, -20.6114, -5.84328, 0.55", "-7.45761, -22.3694, -4.65406, 0.55", "-9.37366, -25.7601, -2.23111, 0.55", "-10.9269, -28.5376, -0.241594, 0.55", "-11.9207, -30.3146, 1.03131, 0.55", "-13.9875, -34.0103, 3.67855, 0.55", "-15.3872, -36.5131, 5.47132, 0.55", "-16.0527, -37.7485, 6.44796, 0.28", "-16.4128, -38.4078, 7.0001, 0.55", "-19.2811, -42.9816, 11.0981, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.4657, -20.6114, -5.84328, 0.83", "-7.60691, -21.5629, -9.01281, 0.83", "-8.91322, -22.5641, -12.1612, 0.83", "-10.3321, -23.599, -15.1071, 0.83", "-11.9858, -24.74, -18.2645, 0.83", "-18.8479, -29.4824, -30.7261, 0.55", "-21.0049, -30.973, -34.6431, 0.55", "-22.4609, -32.0339, -37.2454, 0.55", "-24.5625, -33.565, -40.7966, 0.55", "-26.0486, -34.5923, -43.149, 0.55", "-26.8894, -35.141, -44.298, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-15.9072, 52.8781, -26.5229, 0.55", "-16.8582, 54.8812, -23.1789, 0.55", "-17.702, 57.0857, -19.7429, 0.55", "-18.0177, 58.2438, -17.8511, 0.55", "-18.4311, 59.8297, -15.2326, 0.55", "-18.6611, 60.8114, -13.7598, 0.55", "-19.0392, 62.4256, -11.3382, 0.55", "-19.1815, 63.5096, -9.79556, 0.55", "-19.5329, 67.3629, -4.60083, 0.28", "-19.559, 67.8845, -3.86961, 0.28", "-19.7022, 69.7588, -1.26758, 0.28" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-15.9072, 52.8781, -26.5229, 0.55", "-16.4139, 54.2785, -26.5942, 0.55", "-16.8925, 55.5849, -26.6051, 0.55", "-17.6355, 57.8529, -26.5762, 0.55", "-18.028, 59.3863, -26.5402, 0.55", "-18.4373, 61.2966, -26.4866, 0.55", "-18.9724, 63.5905, -26.3752, 0.55", "-19.2706, 64.8679, -26.264, 0.55", "-19.677, 66.3896, -26.1032, 0.55", "-20.1747, 68.3633, -25.8425, 0.55", "-20.8791, 71.1078, -25.4702, 0.55", "-21.4378, 73.1045, -25.2232, 0.55", "-22.0829, 74.9482, -24.968, 0.55", "-22.6069, 76.2197, -24.784, 0.55", "-23.8687, 78.7114, -24.4465, 0.55", "-24.3556, 79.5826, -24.3751, 0.55", "-25.0887, 80.9889, -24.3789, 0.55", "-25.9054, 82.6234, -24.4461, 0.55", "-26.7529, 84.2696, -24.5632, 0.55", "-27.7523, 86.3308, -24.784, 0.55", "-28.9128, 88.5998, -25.1858, 0.55", "-29.7658, 90.4175, -25.5974, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_24", "dend_13", "dend_0", "dend_41", "dend_34", "dend_28", "dend_25", "dend_23", "dend_14", "dend_6", "dend_1", "dend_43", "dend_42", "dend_38", "dend_35", "dend_30", "dend_29", "dend_27", "dend_26", "dend_20", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_45", "dend_44", "dend_40", "dend_39", "dend_37", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_19", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_24", "dend_13", "dend_0", "dend_41", "dend_34", "dend_28", "dend_25", "dend_23", "dend_14", "dend_6", "dend_1", "dend_43", "dend_42", "dend_38", "dend_35", "dend_30", "dend_29", "dend_27", "dend_26", "dend_20", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_45", "dend_44", "dend_40", "dend_39", "dend_37", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_19", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_24", "dend_13", "dend_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_LBC_936c35a9e1_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_24, dend_13, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_34, dend_34, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.45000163253668773)
    connect dend_24(0), soma_0(0.45000163253668773)
    connect dend_13(0), soma_0(0.45000163253668773)
    connect dend_0(0), soma_0(0.45000163253668773)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.09406, -10.5757, -0.444037, 2.91935 ) }
    soma_0 { pt3dadd( -1.88817, -9.52414, -0.41304, 5.10932 ) }
    soma_0 { pt3dadd( -1.68229, -8.4726, -0.382043, 5.77485 ) }
    soma_0 { pt3dadd( -1.47641, -7.42107, -0.351047, 6.01078 ) }
    soma_0 { pt3dadd( -1.27053, -6.36953, -0.32005, 6.04996 ) }
    soma_0 { pt3dadd( -1.06465, -5.318, -0.289053, 5.93407 ) }
    soma_0 { pt3dadd( -0.858767, -4.26646, -0.258056, 6.24426 ) }
    soma_0 { pt3dadd( -0.652886, -3.21492, -0.22706, 7.35421 ) }
    soma_0 { pt3dadd( -0.447004, -2.16339, -0.196063, 8.45604 ) }
    soma_0 { pt3dadd( -0.241123, -1.11185, -0.165066, 9.12005 ) }
    soma_0 { pt3dadd( -0.0352414, -0.0603167, -0.134069, 9.36575 ) }
    soma_0 { pt3dadd( 0.17064, 0.991219, -0.103072, 9.61145 ) }
    soma_0 { pt3dadd( 0.376522, 2.04276, -0.0720756, 10.2138 ) }
    soma_0 { pt3dadd( 0.582403, 3.09429, -0.0410789, 11.1588 ) }
    soma_0 { pt3dadd( 0.788285, 4.14583, -0.0100821, 11.7442 ) }
    soma_0 { pt3dadd( 0.994166, 5.19736, 0.0209147, 11.9266 ) }
    soma_0 { pt3dadd( 1.20005, 6.2489, 0.0519115, 11.3882 ) }
    soma_0 { pt3dadd( 1.40593, 7.30044, 0.0829083, 10.504 ) }
    soma_0 { pt3dadd( 1.61181, 8.35197, 0.113905, 8.36092 ) }
    soma_0 { pt3dadd( 1.81769, 9.40351, 0.144902, 5.9148 ) }
    soma_0 { pt3dadd( 2.02357, 10.455, 0.175899, 4.32325 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.84106, -9.37889, -0.116561, 1.66 ) }
    dend_33 { pt3dadd( -12.5033, -12.1149, -0.116561, 1.66 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.25894, 7.73062, 7.64344, 1.94 ) }
    dend_24 { pt3dadd( 9.23254, 8.78821, 7.64344, 1.94 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 25/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.69106, 7.05612, -8.61656, 2.77 ) }
    dend_13 { pt3dadd( -5.21022, 7.67011, -8.61656, 2.77 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.56106, -9.96789, -0.116561, 3.32 ) }
    dend_0 { pt3dadd( -0.748893, -12.7017, -0.116561, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 29/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.02357, 10.455, 0.175899, 0.62163 ) }
    axon_0 { pt3dadd( 4.90572, 25.1755, 0.175899, 0.62163 ) }
    axon_0 { pt3dadd( 7.78786, 39.896, 0.175899, 0.62163 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -12.5033, -12.1149, -0.116561, 0.83 ) }
    dend_41 { pt3dadd( -12.8521, -15.6697, 0.713549, 0.83 ) }
    dend_41 { pt3dadd( -13.2248, -19.4691, 1.60079, 0.83 ) }
    dend_41 { pt3dadd( -13.6656, -23.9621, 2.65, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -12.5033, -12.1149, -0.116561, 1.66 ) }
    dend_34 { pt3dadd( -14.6728, -12.6518, 1.58504, 1.66 ) }
    dend_34 { pt3dadd( -16.5471, -13.1157, 3.0551, 1.66 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 39/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 9.23254, 8.78821, 7.64344, 1.38 ) }
    dend_28 { pt3dadd( 9.63, 12.4152, 14.0207, 1.38 ) }
    dend_28 { pt3dadd( 9.80944, 14.0528, 16.8999, 1.38 ) }
    dend_28 { pt3dadd( 9.97819, 15.5926, 19.6073, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 43/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 9.23254, 8.78821, 7.64344, 1.11 ) }
    dend_25 { pt3dadd( 12.728, 8.94215, 10.7431, 1.11 ) }
    dend_25 { pt3dadd( 14.5544, 9.02258, 12.3626, 1.11 ) }
    dend_25 { pt3dadd( 17.6758, 9.16004, 15.1306, 1.38 ) }
    dend_25 { pt3dadd( 23.0497, 9.3967, 19.896, 1.38 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -5.21022, 7.67011, -8.61656, 0.83 ) }
    dend_23 { pt3dadd( -6.45305, 6.66105, -12.5289, 0.83 ) }
    dend_23 { pt3dadd( -7.23074, 6.09614, -14.7738, 0.83 ) }
    dend_23 { pt3dadd( -7.71845, 5.6845, -16.062, 1.11 ) }
    dend_23 { pt3dadd( -9.03485, 4.61315, -19.2249, 0.83 ) }
    dend_23 { pt3dadd( -10.1577, 3.69929, -21.9228, 0.83 ) }
    dend_23 { pt3dadd( -13.5569, 0.932871, -30.0898, 0.83 ) }
    dend_23 { pt3dadd( -14.7059, -0.108936, -32.9435, 0.83 ) }
    dend_23 { pt3dadd( -16.5257, -1.82664, -37.7614, 0.55 ) }
    dend_23 { pt3dadd( -17.1063, -2.34245, -39.2327, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 58/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.21022, 7.67011, -8.61656, 1.38 ) }
    dend_14 { pt3dadd( -6.62785, 9.83293, -9.13212, 1.38 ) }
    dend_14 { pt3dadd( -8.48198, 12.6617, -9.80643, 1.38 ) }
    dend_14 { pt3dadd( -10.9767, 16.4678, -10.7137, 1.38 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.748893, -12.7017, -0.116561, 0.83 ) }
    dend_6 { pt3dadd( 0.698727, -13.5704, -1.41322, 0.83 ) }
    dend_6 { pt3dadd( 1.78483, -14.2222, -2.38605, 0.83 ) }
    dend_6 { pt3dadd( 4.44357, -15.8177, -4.76754, 0.83 ) }
    dend_6 { pt3dadd( 5.88161, -16.6807, -6.05561, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 67/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.748893, -12.7017, -0.116561, 1.94 ) }
    dend_1 { pt3dadd( -2.84196, -15.3482, -4.78234, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 7.78786, 39.896, 0.175899, 0.28 ) }
    axon_1 { pt3dadd( 10.67, 54.6165, 0.175899, 0.28 ) }
    axon_1 { pt3dadd( 13.5522, 69.337, 0.175899, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 72/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -13.6656, -23.9621, 2.65, 0.55 ) }
    dend_43 { pt3dadd( -14.8837, -24.2514, 3.86976, 0.55 ) }
    dend_43 { pt3dadd( -15.4425, -24.4717, 4.55499, 0.55 ) }
    dend_43 { pt3dadd( -15.7115, -24.5831, 4.93813, 0.83 ) }
    dend_43 { pt3dadd( -16.7966, -25.0218, 6.47536, 0.55 ) }
    dend_43 { pt3dadd( -19.2264, -25.9585, 10.4078, 0.55 ) }
    dend_43 { pt3dadd( -21.5802, -26.8854, 14.4279, 0.55 ) }
    dend_43 { pt3dadd( -23.3904, -27.5954, 17.7512, 0.83 ) }
    dend_43 { pt3dadd( -25.4832, -28.4789, 21.8704, 0.28 ) }
    dend_43 { pt3dadd( -26.0442, -28.7371, 23.0477, 0.83 ) }
    dend_43 { pt3dadd( -29.1448, -30.286, 30.0263, 0.55 ) }
    dend_43 { pt3dadd( -29.7937, -30.6103, 31.5821, 0.28 ) }
    dend_43 { pt3dadd( -30.3456, -30.8611, 32.9151, 0.55 ) }
    dend_43 { pt3dadd( -31.4789, -31.3001, 35.7068, 0.28 ) }
    dend_43 { pt3dadd( -31.9988, -31.5614, 37.075, 0.55 ) }
    dend_43 { pt3dadd( -36.1526, -32.2095, 43.6842, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 88/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -13.6656, -23.9621, 2.65, 0.55 ) }
    dend_42 { pt3dadd( -13.8876, -31.5381, 7.73519, 0.55 ) }
    dend_42 { pt3dadd( -13.6583, -38.9144, 12.3383, 0.55 ) }
    dend_42 { pt3dadd( -13.2589, -44.1341, 15.3795, 0.28 ) }
    dend_42 { pt3dadd( -12.8385, -47.9937, 17.6118, 0.83 ) }
    dend_42 { pt3dadd( -12.5317, -50.89, 19.3362, 0.55 ) }
    dend_42 { pt3dadd( -12.3559, -52.4542, 20.3131, 0.55 ) }
    dend_42 { pt3dadd( -11.9255, -55.5946, 22.1474, 0.55 ) }
    dend_42 { pt3dadd( -11.3241, -58.3796, 23.7809, 0.55 ) }
    dend_42 { pt3dadd( -10.7096, -61.4034, 25.542, 0.28 ) }
    dend_42 { pt3dadd( -10.1509, -65.6926, 28.0217, 0.83 ) }
    dend_42 { pt3dadd( -9.97096, -68.3982, 29.4931, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -9.881, -71.1694, 30.8484, 0.83 ) }
    dend_42 { pt3dadd( -9.8501, -74.3439, 32.182, 0.28 ) }
    dend_42 { pt3dadd( -9.845, -76.5166, 32.9263, 0.83 ) }
    dend_42 { pt3dadd( -9.83556, -80.2022, 33.8815, 0.28 ) }
    dend_42 { pt3dadd( -9.76351, -83.218, 34.5476, 0.83 ) }
    dend_42 { pt3dadd( -9.67837, -86.1104, 35.1726, 0.28 ) }
    dend_42 { pt3dadd( -9.50188, -88.8711, 36.0952, 0.83 ) }
    dend_42 { pt3dadd( -9.07045, -92.3038, 37.8608, 0.28 ) }
    dend_42 { pt3dadd( -8.77596, -93.6745, 38.8829, 0.55 ) }
    dend_42 { pt3dadd( -7.70452, -97.1324, 42.3546, 0.28 ) }
    dend_42 { pt3dadd( -7.13038, -98.7021, 44.4475, 0.55 ) }
    dend_42 { pt3dadd( -5.54103, -102.429, 50.3438, 0.28 ) }
    dend_42 { pt3dadd( -4.62272, -104.165, 53.7266, 0.83 ) }
    dend_42 { pt3dadd( -3.68098, -105.461, 56.9745, 0.28 ) }
    dend_42 { pt3dadd( -3.34381, -105.827, 58.1553, 0.55 ) }
    dend_42 { pt3dadd( -2.10412, -106.698, 62.808, 0.28 ) }
    dend_42 { pt3dadd( 0.635969, -116.491, 70.0906, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 17/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -16.5471, -13.1157, 3.0551, 0.55 ) }
    dend_38 { pt3dadd( -19.4554, -21.5604, 3.5183, 0.55 ) }
    dend_38 { pt3dadd( -21.4595, -27.3797, 3.83749, 0.55 ) }
    dend_38 { pt3dadd( -24.0547, -34.9153, 4.25082, 0.55 ) }
    dend_38 { pt3dadd( -25.0712, -37.867, 4.41272, 0.55 ) }
    dend_38 { pt3dadd( -26.4566, -41.8896, 4.63336, 0.55 ) }
    dend_38 { pt3dadd( -29.5686, -50.9258, 5.129, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -16.5471, -13.1157, 3.0551, 1.38 ) }
    dend_35 { pt3dadd( -20.2965, -13.3365, 7.51747, 1.38 ) }
    dend_35 { pt3dadd( -22.1808, -13.4475, 9.76006, 1.38 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 27/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 9.97819, 15.5926, 19.6073, 0.83 ) }
    dend_30 { pt3dadd( 9.39754, 17.1127, 15.0649, 0.83 ) }
    dend_30 { pt3dadd( 8.21404, 21.1079, 8.84614, 0.83 ) }
    dend_30 { pt3dadd( 6.46382, 25.6915, 3.23709, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 9.97819, 15.5926, 19.6073, 0.83 ) }
    dend_29 { pt3dadd( 11.1299, 17.6224, 20.1151, 0.83 ) }
    dend_29 { pt3dadd( 12.183, 19.728, 20.5819, 0.83 ) }
    dend_29 { pt3dadd( 13.1811, 21.9768, 21.0266, 0.83 ) }
    dend_29 { pt3dadd( 14.156, 24.1764, 21.5797, 0.83 ) }
    dend_29 { pt3dadd( 15.5224, 27.1246, 22.3274, 0.83 ) }
    dend_29 { pt3dadd( 16.5386, 29.46, 22.8849, 0.83 ) }
    dend_29 { pt3dadd( 17.3249, 31.4095, 23.3742, 0.83 ) }
    dend_29 { pt3dadd( 18.3191, 34.0167, 23.975, 0.83 ) }
    dend_29 { pt3dadd( 19.4083, 36.9138, 24.4306, 0.83 ) }
    dend_29 { pt3dadd( 19.9772, 38.5159, 24.5815, 0.83 ) }
    dend_29 { pt3dadd( 21.2064, 41.8792, 24.7325, 0.83 ) }
    dend_29 { pt3dadd( 22.2713, 44.4585, 24.5596, 0.55 ) }
    dend_29 { pt3dadd( 23.2408, 46.6128, 24.1709, 0.55 ) }
    dend_29 { pt3dadd( 24.4194, 49.0942, 23.4552, 0.55 ) }
    dend_29 { pt3dadd( 25.0826, 50.5811, 22.8972, 0.55 ) }
    dend_29 { pt3dadd( 25.8977, 52.5331, 22.1721, 0.55 ) }
    dend_29 { pt3dadd( 27.0396, 55.2932, 21.0997, 0.55 ) }
    dend_29 { pt3dadd( 27.2957, 56.0589, 20.8505, 0.55 ) }
    dend_29 { pt3dadd( 27.5525, 56.9758, 20.6803, 0.55 ) }
    dend_29 { pt3dadd( 27.8245, 58.3186, 20.6069, 0.55 ) }
    dend_29 { pt3dadd( 28.2137, 60.6854, 20.6371, 0.28 ) }
    dend_29 { pt3dadd( 28.4613, 62.8914, 20.8258, 0.55 ) }
    dend_29 { pt3dadd( 28.685, 65.1491, 21.1947, 0.28 ) }
    dend_29 { pt3dadd( 28.8078, 66.2198, 21.3809, 0.55 ) }
    dend_29 { pt3dadd( 29.0851, 68.1044, 21.7188, 0.28 ) }
    dend_29 { pt3dadd( 29.3596, 69.4912, 22.0041, 0.55 ) }
    dend_29 { pt3dadd( 29.4997, 70.2167, 22.1885, 0.83 ) }
    dend_29 { pt3dadd( 29.7142, 71.3932, 22.4862, 0.28 ) }
    dend_29 { pt3dadd( 29.8254, 72.2012, 22.7156, 0.55 ) }
    dend_29 { pt3dadd( 30.007, 73.3471, 22.991, 0.28 ) }
    dend_29 { pt3dadd( 30.3057, 75.0933, 23.3325, 0.55 ) }
    dend_29 { pt3dadd( 30.7366, 77.2961, 23.6151, 0.28 ) }
    dend_29 { pt3dadd( 31.011, 78.5464, 23.711, 0.55 ) }
    dend_29 { pt3dadd( 31.7488, 81.7006, 23.8024, 0.28 ) }
    dend_29 { pt3dadd( 32.3423, 83.8897, 23.7558, 0.28 ) }
    dend_29 { pt3dadd( 33.0884, 86.3543, 23.6135, 0.28 ) }
    dend_29 { pt3dadd( 35.235, 92.9013, 22.9603, 0.28 ) }
    dend_29 { pt3dadd( 37.2324, 98.6095, 22.1555, 0.28 ) }
    dend_29 { pt3dadd( 37.7239, 99.9334, 21.9078, 0.55 ) }
    dend_29 { pt3dadd( 39.4587, 104.225, 20.8799, 0.28 ) }
    dend_29 { pt3dadd( 40.3159, 106.194, 20.2609, 0.28 ) }
    dend_29 { pt3dadd( 41.3578, 108.267, 19.2845, 0.28 ) }
    dend_29 { pt3dadd( 41.9679, 109.259, 18.5427, 0.55 ) }
    dend_29 { pt3dadd( 43.097, 110.789, 17.0067, 0.28 ) }
    dend_29 { pt3dadd( 43.54, 111.318, 16.4651, 0.55 ) }
    dend_29 { pt3dadd( 45.9602, 113.807, 13.699, 0.28 ) }
    dend_29 { pt3dadd( 46.6325, 114.543, 13.2574, 0.55 ) }
    dend_29 { pt3dadd( 47.2636, 115.269, 13.0337, 0.28 ) }
    dend_29 { pt3dadd( 47.7394, 115.833, 12.9257, 0.55 ) }
    dend_29 { pt3dadd( 50.6, 119.35, 12.6727, 0.28 ) }
    dend_29 { pt3dadd( 51.2318, 120.148, 12.6873, 0.55 ) }
    dend_29 { pt3dadd( 56.5365, 126.96, 13.7085, 0.28 ) }
    dend_29 { pt3dadd( 56.9913, 127.55, 13.8161, 0.55 ) }
    dend_29 { pt3dadd( 60.1546, 135.415, 13.5242, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 86/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 23.0497, 9.3967, 19.896, 0.83 ) }
    dend_27 { pt3dadd( 24.4223, 9.82168, 21.1022, 0.83 ) }
    dend_27 { pt3dadd( 25.8014, 10.2882, 22.3191, 0.83 ) }
    dend_27 { pt3dadd( 28.117, 11.0325, 24.545, 0.83 ) }
    dend_27 { pt3dadd( 30.176, 11.7293, 26.5777, 0.83 ) }
    dend_27 { pt3dadd( 32.2967, 12.5574, 28.8223, 0.83 ) }
    dend_27 { pt3dadd( 34.9278, 13.7676, 31.8945, 0.83 ) }
    dend_27 { pt3dadd( 35.991, 14.3343, 33.2709, 1.11 ) }
    dend_27 { pt3dadd( 38.0906, 15.6226, 36.2975, 0.83 ) }
    dend_27 { pt3dadd( 39.6015, 16.6513, 38.7617, 1.11 ) }
    dend_27 { pt3dadd( 41.3685, 17.8017, 41.9082, 0.83 ) }
    dend_27 { pt3dadd( 43.2348, 18.9443, 45.3547, 0.55 ) }
    dend_27 { pt3dadd( 43.9361, 19.3911, 46.6761, 0.83 ) }
    dend_27 { pt3dadd( 46.3476, 20.9466, 51.3917, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( 48.1301, 22.0982, 54.9119, 0.55 ) }
    dend_27 { pt3dadd( 48.9001, 22.5217, 56.4508, 0.28 ) }
    dend_27 { pt3dadd( 50.161, 22.998, 58.7224, 0.55 ) }
    dend_27 { pt3dadd( 54.2361, 24.0923, 68.0605, 0.55 ) }
    dend_27 { pt3dadd( 58.0077, 26.3011, 77.3003, 0.55 ) }
    dend_27 { pt3dadd( 62.2439, 28.6002, 86.3126, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 6/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 23.0497, 9.3967, 19.896, 0.83 ) }
    dend_26 { pt3dadd( 25.2775, 7.24226, 20.5488, 0.83 ) }
    dend_26 { pt3dadd( 27.1702, 5.48259, 21.064, 0.83 ) }
    dend_26 { pt3dadd( 30.9342, 2.07982, 21.9856, 0.83 ) }
    dend_26 { pt3dadd( 34.3321, -1.06963, 22.6972, 0.83 ) }
    dend_26 { pt3dadd( 36.3967, -3.12626, 23.1175, 0.55 ) }
    dend_26 { pt3dadd( 37.5955, -4.40993, 23.3878, 0.55 ) }
    dend_26 { pt3dadd( 38.287, -5.13665, 23.6499, 0.55 ) }
    dend_26 { pt3dadd( 39.6145, -6.58608, 24.4268, 0.55 ) }
    dend_26 { pt3dadd( 41.8198, -9.05985, 26.421, 0.55 ) }
    dend_26 { pt3dadd( 43.5019, -10.8539, 28.5255, 0.55 ) }
    dend_26 { pt3dadd( 45.9304, -13.3932, 32.0839, 0.55 ) }
    dend_26 { pt3dadd( 50.0081, -17.4383, 38.8659, 0.55 ) }
    dend_26 { pt3dadd( 51.5566, -18.8812, 41.6881, 0.55 ) }
    dend_26 { pt3dadd( 54.7701, -21.6464, 47.7887, 0.55 ) }
    dend_26 { pt3dadd( 57.8598, -24.0854, 53.9338, 0.55 ) }
    dend_26 { pt3dadd( 59.3466, -25.1484, 56.9639, 0.55 ) }
    dend_26 { pt3dadd( 61.8484, -26.8121, 62.2878, 0.28 ) }
    dend_26 { pt3dadd( 63.1269, -27.6715, 64.9866, 0.55 ) }
    dend_26 { pt3dadd( 64.1629, -28.2873, 67.1127, 0.28 ) }
    dend_26 { pt3dadd( 70.6705, -32.3666, 76.5269, 0.28 ) }
    dend_26 { pt3dadd( 76.7022, -36.9783, 85.9894, 0.28 ) }
    dend_26 { pt3dadd( 81.9032, -41.1082, 96.1667, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 29/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.9767, 16.4678, -10.7137, 0.55 ) }
    dend_20 { pt3dadd( -8.29039, 17.7119, -10.6235, 0.55 ) }
    dend_20 { pt3dadd( -5.73444, 18.8957, -10.5376, 0.55 ) }
    dend_20 { pt3dadd( -3.78217, 19.7999, -10.472, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.9767, 16.4678, -10.7137, 0.83 ) }
    dend_15 { pt3dadd( -11.8064, 19.6418, -17.843, 0.83 ) }
    dend_15 { pt3dadd( -12.2114, 21.191, -21.3229, 0.83 ) }
    dend_15 { pt3dadd( -12.8409, 23.5993, -26.7322, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 37/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.88161, -16.6807, -6.05561, 0.55 ) }
    dend_10 { pt3dadd( 7.77795, -17.7902, -6.82081, 0.55 ) }
    dend_10 { pt3dadd( 10.4027, -19.2933, -7.89501, 0.55 ) }
    dend_10 { pt3dadd( 11.606, -20.0921, -8.56799, 0.55 ) }
    dend_10 { pt3dadd( 15.1517, -22.4458, -10.5509, 0.55 ) }
    dend_10 { pt3dadd( 17.8605, -24.244, -12.0659, 0.55 ) }
    dend_10 { pt3dadd( 19.7182, -25.4772, -13.1048, 0.55 ) }
    dend_10 { pt3dadd( 21.4543, -26.4827, -14.1606, 0.55 ) }
    dend_10 { pt3dadd( 25.0668, -28.3547, -16.6066, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 46/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.88161, -16.6807, -6.05561, 0.83 ) }
    dend_7 { pt3dadd( 8.54982, -17.3258, -7.16793, 0.83 ) }
    dend_7 { pt3dadd( 11.3313, -17.9984, -8.32745, 0.83 ) }
    dend_7 { pt3dadd( 14.8516, -18.8496, -9.795, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -2.84196, -15.3482, -4.78234, 0.55 ) }
    dend_5 { pt3dadd( -4.3846, -18.7751, -9.96564, 0.55 ) }
    dend_5 { pt3dadd( -4.97491, -20.4531, -12.5194, 0.55 ) }
    dend_5 { pt3dadd( -6.21001, -24.9361, -19.3801, 0.55 ) }
    dend_5 { pt3dadd( -6.48083, -26.4306, -21.6979, 0.55 ) }
    dend_5 { pt3dadd( -6.80727, -29.3608, -26.2904, 0.55 ) }
    dend_5 { pt3dadd( -6.91015, -30.3477, -27.8008, 0.55 ) }
    dend_5 { pt3dadd( -6.9265, -31.5289, -29.4453, 0.55 ) }
    dend_5 { pt3dadd( -6.96122, -34.2262, -33.0861, 0.55 ) }
    dend_5 { pt3dadd( -6.86119, -36.8176, -36.393, 0.55 ) }
    dend_5 { pt3dadd( -6.7552, -39.0748, -39.385, 0.55 ) }
    dend_5 { pt3dadd( -6.6891, -41.7496, -42.6517, 0.55 ) }
    dend_5 { pt3dadd( -6.76593, -43.2538, -44.3954, 0.28 ) }
    dend_5 { pt3dadd( -6.87128, -44.0368, -45.2484, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 64/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.84196, -15.3482, -4.78234, 1.38 ) }
    dend_2 { pt3dadd( -4.28507, -17.4442, -5.20485, 1.38 ) }
    dend_2 { pt3dadd( -5.48084, -19.181, -5.55494, 1.38 ) }
    dend_2 { pt3dadd( -6.4657, -20.6114, -5.84328, 1.38 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 68/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -36.1526, -32.2095, 43.6842, 0.28 ) }
    dend_45 { pt3dadd( -40.7673, -33.7725, 52.069, 0.28 ) }
    dend_45 { pt3dadd( -46.9303, -36.7543, 58.8656, 0.28 ) }
    dend_45 { pt3dadd( -53.0385, -39.813, 65.6743, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 72/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -36.1526, -32.2095, 43.6842, 0.55 ) }
    dend_44 { pt3dadd( -39.1454, -34.4623, 52.2554, 0.28 ) }
    dend_44 { pt3dadd( -41.3402, -35.4886, 61.314, 0.28 ) }
    dend_44 { pt3dadd( -43.6131, -38.2232, 69.9515, 0.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 76/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -29.5686, -50.9258, 5.129, 0.28 ) }
    dend_40 { pt3dadd( -32.6624, -54.2881, 5.65799, 0.28 ) }
    dend_40 { pt3dadd( -36.2317, -57.914, 6.20847, 0.28 ) }
    dend_40 { pt3dadd( -37.55, -59.1931, 6.4645, 0.55 ) }
    dend_40 { pt3dadd( -41.9418, -63.5599, 8.19154, 0.28 ) }
    dend_40 { pt3dadd( -43.4693, -65.106, 8.96363, 0.55 ) }
    dend_40 { pt3dadd( -45.2382, -66.915, 9.94781, 0.83 ) }
    dend_40 { pt3dadd( -47.0063, -68.6964, 11.0651, 0.28 ) }
    dend_40 { pt3dadd( -48.515, -70.2099, 12.2396, 0.83 ) }
    dend_40 { pt3dadd( -53.3569, -75.0762, 16.7404, 0.28 ) }
    dend_40 { pt3dadd( -54.1228, -75.852, 17.68, 0.83 ) }
    dend_40 { pt3dadd( -54.865, -76.6601, 18.7723, 0.55 ) }
    dend_40 { pt3dadd( -56.0189, -78.1084, 20.8919, 0.83 ) }
    dend_40 { pt3dadd( -62.0214, -87.2489, 24.1569, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -29.5686, -50.9258, 5.129, 0.55 ) }
    dend_39 { pt3dadd( -29.6394, -51.4359, 5.24814, 0.55 ) }
    dend_39 { pt3dadd( -30.186, -55.0369, 5.92508, 0.28 ) }
    dend_39 { pt3dadd( -30.5798, -57.2363, 5.92444, 0.28 ) }
    dend_39 { pt3dadd( -31.3048, -60.8721, 5.55381, 1.38 ) }
    dend_39 { pt3dadd( -32.0201, -63.9717, 5.32352, 0.28 ) }
    dend_39 { pt3dadd( -32.4502, -65.7628, 5.20987, 0.55 ) }
    dend_39 { pt3dadd( -33.0032, -67.9034, 5.01829, 0.83 ) }
    dend_39 { pt3dadd( -34.4305, -73.37, 4.26378, 0.28 ) }
    dend_39 { pt3dadd( -34.8462, -74.9019, 4.01552, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_39 { pt3dadd( -36.6053, -81.7452, 2.74371, 0.28 ) }
    dend_39 { pt3dadd( -37.2529, -84.4812, 2.27069, 1.11 ) }
    dend_39 { pt3dadd( -37.7155, -86.61, 1.90509, 0.28 ) }
    dend_39 { pt3dadd( -38.4301, -89.6428, 1.28964, 0.83 ) }
    dend_39 { pt3dadd( -39.2511, -92.9967, 0.576098, 0.28 ) }
    dend_39 { pt3dadd( -39.8911, -95.3953, 0.0825296, 0.83 ) }
    dend_39 { pt3dadd( -41.9412, -102.602, -1.47892, 0.28 ) }
    dend_39 { pt3dadd( -42.5627, -104.706, -1.82878, 1.38 ) }
    dend_39 { pt3dadd( -44.7871, -111.812, -2.65133, 0.28 ) }
    dend_39 { pt3dadd( -45.3668, -113.658, -2.73752, 1.11 ) }
    dend_39 { pt3dadd( -47.2785, -120.014, -2.67343, 0.28 ) }
    dend_39 { pt3dadd( -47.5275, -120.935, -2.60901, 0.83 ) }
    dend_39 { pt3dadd( -48.3907, -124.744, -2.03621, 0.28 ) }
    dend_39 { pt3dadd( -48.7452, -127.2, -1.44486, 1.11 ) }
    dend_39 { pt3dadd( -49.1067, -131.481, -0.150243, 0.28 ) }
    dend_39 { pt3dadd( -49.2168, -132.729, 0.236749, 0.55 ) }
    dend_39 { pt3dadd( -49.4799, -135.481, 1.09212, 0.28 ) }
    dend_39 { pt3dadd( -49.5609, -136.074, 1.31003, 1.11 ) }
    dend_39 { pt3dadd( -51.0673, -144.767, 4.85633, 0.28 ) }
    dend_39 { pt3dadd( -51.3396, -146.21, 5.48161, 1.11 ) }
    dend_39 { pt3dadd( -52.5165, -151.129, 7.72982, 0.28 ) }
    dend_39 { pt3dadd( -52.9715, -152.879, 8.5866, 0.55 ) }
    dend_39 { pt3dadd( -53.8562, -155.961, 10.2259, 0.28 ) }
    dend_39 { pt3dadd( -54.2927, -157.305, 10.9818, 0.55 ) }
    dend_39 { pt3dadd( -55.1189, -168.587, 12.7199, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 25/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -22.1808, -13.4475, 9.76006, 0.55 ) }
    dend_37 { pt3dadd( -24.7307, -14.704, 10.7803, 0.55 ) }
    dend_37 { pt3dadd( -27.997, -16.2426, 12.4323, 0.55 ) }
    dend_37 { pt3dadd( -30.0364, -17.1754, 13.5092, 0.83 ) }
    dend_37 { pt3dadd( -32.1252, -18.1197, 14.6336, 0.55 ) }
    dend_37 { pt3dadd( -35.2351, -19.6368, 16.3828, 0.55 ) }
    dend_37 { pt3dadd( -38.5653, -21.3979, 18.256, 0.83 ) }
    dend_37 { pt3dadd( -41.4267, -23.1185, 19.9725, 0.55 ) }
    dend_37 { pt3dadd( -42.917, -24.1808, 20.8832, 0.55 ) }
    dend_37 { pt3dadd( -44.4286, -25.4196, 21.8295, 0.83 ) }
    dend_37 { pt3dadd( -46.3943, -27.1742, 23.0446, 0.28 ) }
    dend_37 { pt3dadd( -47.9333, -28.5806, 23.8986, 1.11 ) }
    dend_37 { pt3dadd( -50.5148, -31.0937, 25.3231, 0.28 ) }
    dend_37 { pt3dadd( -51.7426, -32.2488, 25.9662, 1.11 ) }
    dend_37 { pt3dadd( -54.7668, -34.8214, 27.5406, 0.28 ) }
    dend_37 { pt3dadd( -55.8727, -35.6296, 28.084, 0.55 ) }
    dend_37 { pt3dadd( -57.186, -36.4022, 28.6566, 0.28 ) }
    dend_37 { pt3dadd( -58.3553, -36.9753, 29.1269, 0.83 ) }
    dend_37 { pt3dadd( -60.5939, -37.8763, 29.8919, 0.28 ) }
    dend_37 { pt3dadd( -63.8186, -39.2216, 30.8276, 0.28 ) }
    dend_37 { pt3dadd( -64.7597, -39.634, 31.0191, 1.11 ) }
    dend_37 { pt3dadd( -66.106, -40.2587, 31.3538, 0.28 ) }
    dend_37 { pt3dadd( -67.4914, -40.9513, 31.8195, 0.55 ) }
    dend_37 { pt3dadd( -68.95, -41.6616, 32.3304, 0.28 ) }
    dend_37 { pt3dadd( -70.6026, -42.469, 32.9023, 0.83 ) }
    dend_37 { pt3dadd( -71.9462, -43.1579, 33.5227, 0.28 ) }
    dend_37 { pt3dadd( -74.5818, -44.5602, 34.8758, 0.28 ) }
    dend_37 { pt3dadd( -77.0002, -45.8812, 36.3201, 1.38 ) }
    dend_37 { pt3dadd( -83.4049, -49.448, 40.4427, 0.28 ) }
    dend_37 { pt3dadd( -84.6969, -50.2329, 41.4178, 1.11 ) }
    dend_37 { pt3dadd( -89.1642, -53.1277, 45.0497, 0.28 ) }
    dend_37 { pt3dadd( -89.8895, -53.6319, 45.6642, 0.83 ) }
    dend_37 { pt3dadd( -93.6168, -56.4122, 49.0335, 0.28 ) }
    dend_37 { pt3dadd( -93.9794, -56.6995, 49.3852, 1.11 ) }
    dend_37 { pt3dadd( -100.722, -62.7074, 57.0827, 0.28 ) }
    dend_37 { pt3dadd( -101.451, -63.3648, 57.9264, 1.11 ) }
    dend_37 { pt3dadd( -102.708, -64.5125, 59.3211, 0.28 ) }
    dend_37 { pt3dadd( -104.424, -66.1272, 61.2668, 0.55 ) }
    dend_37 { pt3dadd( -110.908, -70.6224, 65.8957, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 64/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -22.1808, -13.4475, 9.76006, 0.83 ) }
    dend_36 { pt3dadd( -24.2609, -12.3583, 9.32094, 0.83 ) }
    dend_36 { pt3dadd( -27.8384, -10.6061, 8.48766, 0.83 ) }
    dend_36 { pt3dadd( -31.1019, -8.97935, 7.69859, 0.83 ) }
    dend_36 { pt3dadd( -35.4627, -6.79994, 6.4396, 0.83 ) }
    dend_36 { pt3dadd( -38.3667, -5.4473, 5.46625, 0.83 ) }
    dend_36 { pt3dadd( -41.4903, -4.05332, 4.40592, 0.83 ) }
    dend_36 { pt3dadd( -43.5899, -3.09273, 3.58226, 0.55 ) }
    dend_36 { pt3dadd( -44.5784, -2.59678, 3.15215, 0.55 ) }
    dend_36 { pt3dadd( -47.2615, -1.31729, 1.91774, 0.55 ) }
    dend_36 { pt3dadd( -50.6188, 0.180156, 0.136373, 0.55 ) }
    dend_36 { pt3dadd( -51.9491, 0.807161, -0.666184, 0.55 ) }
    dend_36 { pt3dadd( -55.1874, 2.47395, -2.95797, 0.55 ) }
    dend_36 { pt3dadd( -57.0394, 3.44945, -4.46402, 0.55 ) }
    dend_36 { pt3dadd( -59.6431, 4.79356, -6.8366, 0.55 ) }
    dend_36 { pt3dadd( -60.8838, 5.44477, -8.08785, 0.55 ) }
    dend_36 { pt3dadd( -62.618, 6.39264, -10.0443, 1.11 ) }
    dend_36 { pt3dadd( -64.5456, 7.40411, -12.8092, 0.55 ) }
    dend_36 { pt3dadd( -66.3403, 8.29582, -16.1541, 0.55 ) }
    dend_36 { pt3dadd( -67.3914, 8.90042, -18.9662, 0.55 ) }
    dend_36 { pt3dadd( -67.5847, 9.0213, -19.5766, 0.55 ) }
    dend_36 { pt3dadd( -67.9412, 9.26379, -20.8639, 0.55 ) }
    dend_36 { pt3dadd( -69.4568, 10.4568, -27.9465, 0.55 ) }
    dend_36 { pt3dadd( -69.7337, 10.7611, -29.902, 0.55 ) }
    dend_36 { pt3dadd( -70.362, 11.9811, -38.0044, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 89/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 6.46382, 25.6915, 3.23709, 0.55 ) }
    dend_32 { pt3dadd( 6.00024, 29.8097, -4.00536, 0.55 ) }
    dend_32 { pt3dadd( 6.15084, 34.5913, -10.7907, 0.55 ) }
    dend_32 { pt3dadd( 5.8726, 40.2208, -16.8093, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 93/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.46382, 25.6915, 3.23709, 0.55 ) }
    dend_31 { pt3dadd( 4.178, 30.8762, -4.93292, 0.55 ) }
    dend_31 { pt3dadd( 3.55782, 36.5485, -13.0305, 0.55 ) }
    dend_31 { pt3dadd( 4.59586, 42.0632, -21.1964, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -3.78217, 19.7999, -10.472, 0.55 ) }
    dend_22 { pt3dadd( -3.34926, 17.913, -9.82453, 0.55 ) }
    dend_22 { pt3dadd( -2.56559, 14.4974, -8.65244, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 0/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.78217, 19.7999, -10.472, 0.55 ) }
    dend_21 { pt3dadd( -3.37704, 22.372, -10.9993, 0.55 ) }
    dend_21 { pt3dadd( -3.29433, 25.955, -11.6282, 0.55 ) }
    dend_21 { pt3dadd( -3.46657, 29.6581, -12.0927, 0.55 ) }
    dend_21 { pt3dadd( -3.76585, 32.3802, -12.3842, 0.55 ) }
    dend_21 { pt3dadd( -4.09501, 35.2514, -12.5694, 0.55 ) }
    dend_21 { pt3dadd( -4.59619, 38.6679, -12.695, 0.55 ) }
    dend_21 { pt3dadd( -5.66003, 43.5551, -12.7259, 0.55 ) }
    dend_21 { pt3dadd( -6.8795, 47.8063, -12.5307, 0.55 ) }
    dend_21 { pt3dadd( -7.67263, 50.1004, -12.3582, 0.55 ) }
    dend_21 { pt3dadd( -9.48223, 55.1486, -11.8421, 0.55 ) }
    dend_21 { pt3dadd( -11.1582, 59.8862, -11.1914, 0.55 ) }
    dend_21 { pt3dadd( -12.4993, 63.4935, -10.6788, 0.55 ) }
    dend_21 { pt3dadd( -13.5807, 66.5868, -10.1837, 0.55 ) }
    dend_21 { pt3dadd( -14.4075, 69.2329, -9.81079, 0.55 ) }
    dend_21 { pt3dadd( -14.9987, 71.9668, -9.57212, 0.55 ) }
    dend_21 { pt3dadd( -15.7389, 75.5726, -9.346, 0.55 ) }
    dend_21 { pt3dadd( -16.1235, 78.7591, -9.19642, 0.55 ) }
    dend_21 { pt3dadd( -16.2417, 81.7287, -9.14722, 0.55 ) }
    dend_21 { pt3dadd( -16.0792, 85.5295, -9.26391, 0.55 ) }
    dend_21 { pt3dadd( -15.4164, 91.887, -9.7125, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 21/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -12.8409, 23.5993, -26.7322, 0.55 ) }
    dend_19 { pt3dadd( -15.3831, 25.2501, -32.5065, 0.55 ) }
    dend_19 { pt3dadd( -17.0816, 26.353, -36.3643, 0.55 ) }
    dend_19 { pt3dadd( -18.4895, 27.2673, -39.5623, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -12.8409, 23.5993, -26.7322, 0.83 ) }
    dend_16 { pt3dadd( -13.3428, 29.8772, -26.9515, 0.83 ) }
    dend_16 { pt3dadd( -13.5856, 33.2102, -26.961, 0.55 ) }
    dend_16 { pt3dadd( -14.0031, 36.5183, -26.9875, 0.55 ) }
    dend_16 { pt3dadd( -14.317, 39.0047, -27.0074, 0.55 ) }
    dend_16 { pt3dadd( -14.7468, 42.4102, -27.0346, 0.55 ) }
    dend_16 { pt3dadd( -15.1828, 45.8644, -27.0622, 0.55 ) }
    dend_16 { pt3dadd( -15.5589, 48.7226, -26.7668, 0.83 ) }
    dend_16 { pt3dadd( -15.9072, 52.8781, -26.5229, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 25.0668, -28.3547, -16.6066, 0.28 ) }
    dend_12 { pt3dadd( 25.7698, -36.512, -18.9912, 0.28 ) }
    dend_12 { pt3dadd( 25.9855, -39.0151, -19.7229, 0.28 ) }
    dend_12 { pt3dadd( 26.1921, -41.413, -20.4239, 0.55 ) }
    dend_12 { pt3dadd( 26.5845, -45.9662, -21.7549, 0.28 ) }
    dend_12 { pt3dadd( 26.8184, -48.6805, -22.5483, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 25.0668, -28.3547, -16.6066, 0.55 ) }
    dend_11 { pt3dadd( 26.0917, -31.226, -21.7021, 0.55 ) }
    dend_11 { pt3dadd( 26.2802, -31.754, -22.6391, 0.55 ) }
    dend_11 { pt3dadd( 26.7304, -33.0154, -24.8776, 0.55 ) }
    dend_11 { pt3dadd( 27.0967, -34.0416, -26.6986, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 45/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 14.8516, -18.8496, -9.795, 0.55 ) }
    dend_9 { pt3dadd( 16.4458, -18.6257, -12.7033, 0.55 ) }
    dend_9 { pt3dadd( 17.3675, -18.6135, -14.3934, 0.55 ) }
    dend_9 { pt3dadd( 18.4604, -18.5989, -16.3976, 0.55 ) }
    dend_9 { pt3dadd( 19.7082, -18.5823, -18.6856, 0.55 ) }
    dend_9 { pt3dadd( 21.639, -18.5566, -22.2263, 0.28 ) }
    dend_9 { pt3dadd( 22.2013, -18.5491, -23.2574, 0.83 ) }
    dend_9 { pt3dadd( 23.6741, -18.674, -25.9643, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 14.8516, -18.8496, -9.795, 0.55 ) }
    dend_8 { pt3dadd( 17.3976, -20.0733, -9.65725, 0.55 ) }
    dend_8 { pt3dadd( 19.8487, -20.9987, -9.55018, 0.55 ) }
    dend_8 { pt3dadd( 23.1113, -22.0342, -9.40402, 0.55 ) }
    dend_8 { pt3dadd( 25.0542, -22.6358, -9.40756, 0.55 ) }
    dend_8 { pt3dadd( 27.9028, -23.6159, -9.2817, 0.55 ) }
    dend_8 { pt3dadd( 30.1725, -24.4292, -9.14908, 0.55 ) }
    dend_8 { pt3dadd( 34.3326, -25.7999, -8.83715, 0.55 ) }
    dend_8 { pt3dadd( 35.699, -26.1406, -8.80824, 0.55 ) }
    dend_8 { pt3dadd( 39.8243, -26.8347, -8.87631, 0.55 ) }
    dend_8 { pt3dadd( 45.5056, -27.4736, -9.13393, 0.55 ) }
    dend_8 { pt3dadd( 48.4682, -27.7132, -9.23761, 0.55 ) }
    dend_8 { pt3dadd( 50.702, -27.7929, -9.4391, 0.55 ) }
    dend_8 { pt3dadd( 57.5215, -27.8341, -10.1523, 0.28 ) }
    dend_8 { pt3dadd( 59.0873, -27.8634, -10.3748, 0.55 ) }
    dend_8 { pt3dadd( 61.0706, -27.9331, -10.6913, 0.55 ) }
    dend_8 { pt3dadd( 64.2951, -28.1987, -11.4178, 0.28 ) }
    dend_8 { pt3dadd( 69.7898, -29.1471, -12.329, 0.55 ) }
    dend_8 { pt3dadd( 73.4716, -30.1234, -12.7433, 0.28 ) }
    dend_8 { pt3dadd( 78.2117, -31.8475, -12.9548, 0.28 ) }
    dend_8 { pt3dadd( 82.095, -33.3451, -13.094, 0.55 ) }
    dend_8 { pt3dadd( 84.4048, -34.2866, -13.1923, 0.28 ) }
    dend_8 { pt3dadd( 87.6508, -35.655, -13.3356, 0.28 ) }
    dend_8 { pt3dadd( 89.7584, -36.582, -13.2057, 0.83 ) }
    dend_8 { pt3dadd( 92.4768, -37.7943, -13.1039, 0.55 ) }
    dend_8 { pt3dadd( 94.5443, -38.5488, -12.7878, 0.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.4657, -20.6114, -5.84328, 0.55 ) }
    dend_4 { pt3dadd( -7.45761, -22.3694, -4.65406, 0.55 ) }
    dend_4 { pt3dadd( -9.37366, -25.7601, -2.23111, 0.55 ) }
    dend_4 { pt3dadd( -10.9269, -28.5376, -0.241594, 0.55 ) }
    dend_4 { pt3dadd( -11.9207, -30.3146, 1.03131, 0.55 ) }
    dend_4 { pt3dadd( -13.9875, -34.0103, 3.67855, 0.55 ) }
    dend_4 { pt3dadd( -15.3872, -36.5131, 5.47132, 0.55 ) }
    dend_4 { pt3dadd( -16.0527, -37.7485, 6.44796, 0.28 ) }
    dend_4 { pt3dadd( -16.4128, -38.4078, 7.0001, 0.55 ) }
    dend_4 { pt3dadd( -19.2811, -42.9816, 11.0981, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.4657, -20.6114, -5.84328, 0.83 ) }
    dend_3 { pt3dadd( -7.60691, -21.5629, -9.01281, 0.83 ) }
    dend_3 { pt3dadd( -8.91322, -22.5641, -12.1612, 0.83 ) }
    dend_3 { pt3dadd( -10.3321, -23.599, -15.1071, 0.83 ) }
    dend_3 { pt3dadd( -11.9858, -24.74, -18.2645, 0.83 ) }
    dend_3 { pt3dadd( -18.8479, -29.4824, -30.7261, 0.55 ) }
    dend_3 { pt3dadd( -21.0049, -30.973, -34.6431, 0.55 ) }
    dend_3 { pt3dadd( -22.4609, -32.0339, -37.2454, 0.55 ) }
    dend_3 { pt3dadd( -24.5625, -33.565, -40.7966, 0.55 ) }
    dend_3 { pt3dadd( -26.0486, -34.5923, -43.149, 0.55 ) }
    dend_3 { pt3dadd( -26.8894, -35.141, -44.298, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 0/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -15.9072, 52.8781, -26.5229, 0.55 ) }
    dend_18 { pt3dadd( -16.8582, 54.8812, -23.1789, 0.55 ) }
    dend_18 { pt3dadd( -17.702, 57.0857, -19.7429, 0.55 ) }
    dend_18 { pt3dadd( -18.0177, 58.2438, -17.8511, 0.55 ) }
    dend_18 { pt3dadd( -18.4311, 59.8297, -15.2326, 0.55 ) }
    dend_18 { pt3dadd( -18.6611, 60.8114, -13.7598, 0.55 ) }
    dend_18 { pt3dadd( -19.0392, 62.4256, -11.3382, 0.55 ) }
    dend_18 { pt3dadd( -19.1815, 63.5096, -9.79556, 0.55 ) }
    dend_18 { pt3dadd( -19.5329, 67.3629, -4.60083, 0.28 ) }
    dend_18 { pt3dadd( -19.559, 67.8845, -3.86961, 0.28 ) }
    dend_18 { pt3dadd( -19.7022, 69.7588, -1.26758, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -15.9072, 52.8781, -26.5229, 0.55 ) }
    dend_17 { pt3dadd( -16.4139, 54.2785, -26.5942, 0.55 ) }
    dend_17 { pt3dadd( -16.8925, 55.5849, -26.6051, 0.55 ) }
    dend_17 { pt3dadd( -17.6355, 57.8529, -26.5762, 0.55 ) }
    dend_17 { pt3dadd( -18.028, 59.3863, -26.5402, 0.55 ) }
    dend_17 { pt3dadd( -18.4373, 61.2966, -26.4866, 0.55 ) }
    dend_17 { pt3dadd( -18.9724, 63.5905, -26.3752, 0.55 ) }
    dend_17 { pt3dadd( -19.2706, 64.8679, -26.264, 0.55 ) }
    dend_17 { pt3dadd( -19.677, 66.3896, -26.1032, 0.55 ) }
    dend_17 { pt3dadd( -20.1747, 68.3633, -25.8425, 0.55 ) }
    dend_17 { pt3dadd( -20.8791, 71.1078, -25.4702, 0.55 ) }
    dend_17 { pt3dadd( -21.4378, 73.1045, -25.2232, 0.55 ) }
    dend_17 { pt3dadd( -22.0829, 74.9482, -24.968, 0.55 ) }
    dend_17 { pt3dadd( -22.6069, 76.2197, -24.784, 0.55 ) }
    dend_17 { pt3dadd( -23.8687, 78.7114, -24.4465, 0.55 ) }
    dend_17 { pt3dadd( -24.3556, 79.5826, -24.3751, 0.55 ) }
    dend_17 { pt3dadd( -25.0887, 80.9889, -24.3789, 0.55 ) }
    dend_17 { pt3dadd( -25.9054, 82.6234, -24.4461, 0.55 ) }
    dend_17 { pt3dadd( -26.7529, 84.2696, -24.5632, 0.55 ) }
    dend_17 { pt3dadd( -27.7523, 86.3308, -24.784, 0.55 ) }
    dend_17 { pt3dadd( -28.9128, 88.5998, -25.1858, 0.55 ) }
    dend_17 { pt3dadd( -29.7658, 90.4175, -25.5974, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_43 OneSecGrp_SectionRef_16.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_42 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_29 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_27 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_26 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_39 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_37 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_36 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_21 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_8 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_3 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_13 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_34 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_28 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_20 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_25 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_22 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_23 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_30 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_10 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_9 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_32 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_31 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_18 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_44 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_45 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_24, dend_13, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_34, dend_34, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_42 nseg = 7
    dend_38 nseg = 3
    dend_29 nseg = 7
    dend_27 nseg = 5
    dend_26 nseg = 5
    dend_5 nseg = 3
    dend_40 nseg = 3
    dend_39 nseg = 7
    dend_37 nseg = 7
    dend_36 nseg = 5
    dend_21 nseg = 3
    dend_8 nseg = 5
    dend_3 nseg = 3
    dend_17 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_LBC_936c35a9e1_0_0


