// Cell: cIR216_L4_DBC_972df9520e_0_0
/*
{
  "id" : "cIR216_L4_DBC_972df9520e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.03775, -11.4909, 0.0, 3.43439", "1.89325, -10.3873, 0.0, 4.10946", "1.74876, -9.28361, 0.0, 5.49512", "1.60426, -8.17996, 0.0, 6.92062", "1.45977, -7.07631, 0.0, 8.33776", "1.31528, -5.97266, 0.0, 9.37588", "1.17078, -4.86901, 0.0, 10.388", "1.02629, -3.76536, 0.0, 11.4001", "0.881794, -2.66171, 0.0, 12.0337", "0.7373, -1.55806, 0.0, 11.8609", "0.592806, -0.454415, 0.0, 11.675", "0.448312, 0.649234, 0.0, 11.6509", "0.303818, 1.75288, 0.0, 11.6321", "0.159324, 2.85653, 0.0, 10.7321", "0.0148298, 3.96018, 0.0, 9.70998", "-0.129664, 5.06383, 0.0, 8.74071", "-0.274158, 6.16748, 0.0, 7.95018", "-0.418652, 7.27113, 0.0, 6.7513", "-0.563146, 8.37478, 0.0, 5.22686", "-0.70764, 9.47842, 0.0, 3.48033", "-0.852134, 10.5821, 0.0, 2.02048" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.596014, -10.8059, -2.34, 2.22", "-1.05305, -14.5216, -0.728107, 2.22", "-1.45303, -18.313, 0.786446, 2.49", "-2.05337, -24.8989, 3.19693, 2.49", "-2.40463, -31.2629, 5.1794, 2.49", "-2.50333, -34.151, 5.97217, 1.94", "-2.54752, -37.2637, 6.73427, 1.38", "-2.45182, -41.0499, 7.54301, 1.11", "-2.32614, -43.6036, 7.96198, 0.83", "-1.98305, -50.0101, 8.59206, 1.11", "-1.87305, -52.595, 8.62829, 1.11", "-1.7355, -55.6886, 8.58608, 1.38", "-1.58016, -58.6492, 8.49362, 0.83", "-1.41646, -61.1687, 8.42967, 1.66", "-1.22363, -63.553, 8.38935, 1.11", "-0.758956, -68.7157, 8.24841, 1.66", "-0.479361, -71.5451, 8.16393, 1.38", "-0.078522, -75.1843, 8.04516, 1.94", "0.446667, -79.0215, 7.91052, 1.38", "1.16965, -83.0087, 7.76466, 1.38", "2.26947, -87.9269, 7.58508, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.59602, 8.76407, -0.86, 2.22", "-0.964007, 13.5024, -0.830753, 1.94", "-0.606129, 17.2074, -0.704495, 1.94", "-0.243563, 22.7533, -0.326602, 1.94", "-0.147634, 24.7756, -0.161191, 1.38", "0.148658, 29.3466, 0.194507, 2.22", "0.439461, 33.8328, 0.543616, 1.94", "0.817866, 39.8995, 1.04201, 1.94", "1.03553, 44.2706, 1.50212, 1.94", "1.12342, 48.5009, 2.09252, 1.94", "1.18944, 54.2315, 2.90007, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.852134, 10.5821, 0.0, 0.55", "-2.79938, 25.4552, 0.0, 0.55", "-4.74662, 40.3282, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "2.26947, -87.9269, 7.58508, 0.55", "2.94086, -89.1177, 8.00263, 0.55", "3.60341, -90.136, 8.52753, 0.55", "4.56024, -91.5203, 9.46866, 0.28", "5.67786, -92.8398, 10.479, 0.55", "7.03502, -94.2795, 11.6046, 0.28", "8.17642, -95.4, 12.6043, 1.11", "9.99267, -97.0796, 14.2881, 0.28", "11.1606, -98.0881, 15.5716, 0.83", "12.8823, -99.4666, 17.6082, 0.83", "13.9054, -100.265, 18.8776, 0.83", "15.6295, -101.637, 21.0495, 0.83", "16.5258, -102.344, 22.1874, 1.11", "19.2878, -104.658, 25.4856, 0.28", "19.906, -105.215, 26.14, 0.28", "20.4458, -105.724, 26.6581, 0.55", "21.2582, -106.46, 27.2805, 0.55", "22.997, -107.955, 28.2186, 0.55", "24.6567, -109.257, 28.8826, 0.55", "26.4914, -110.648, 29.3478, 0.83", "28.2176, -111.836, 29.7622, 1.11", "29.7253, -112.848, 30.1284, 0.55", "30.5457, -113.413, 30.338, 1.38", "31.6161, -114.146, 30.6279, 0.55", "32.8291, -114.836, 30.9495, 1.11", "35.4337, -116.187, 31.5722, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "2.26947, -87.9269, 7.58508, 1.38", "2.07499, -88.938, 7.42109, 1.38", "1.44804, -91.9047, 7.2102, 1.38", "1.05733, -93.7535, 7.07878, 1.11", "0.208172, -97.7716, 6.79314, 1.66", "-0.332959, -100.332, 6.61112, 2.22", "-0.608892, -101.637, 6.5183, 2.22", "-1.30839, -105.385, 6.15954, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.18944, 54.2315, 2.90007, 1.38", "1.12357, 56.865, 2.88257, 1.38", "1.14948, 58.6498, 2.86471, 1.38", "1.23858, 61.2578, 2.82749, 1.11", "1.44565, 65.2696, 2.83479, 1.38", "1.5418, 67.2736, 2.83181, 1.38", "1.62369, 70.7744, 2.83175, 1.38", "1.67084, 75.2052, 2.82513, 1.38", "1.62068, 78.4345, 2.80983, 1.38", "1.53935, 81.4408, 2.79717, 1.38", "1.36865, 84.2493, 2.78008, 1.38", "0.848153, 88.9388, 2.72959, 1.66", "0.425236, 91.6332, 2.68989, 1.38", "-0.103616, 94.6988, 2.54421, 1.38", "-0.699931, 98.2199, 2.26173, 1.38", "-1.10579, 101.029, 1.9572, 1.38", "-1.25813, 102.519, 1.78756, 1.38", "-1.40499, 104.824, 1.51797, 1.11", "-1.55175, 108.31, 1.13726, 1.11", "-1.53495, 111.982, 0.781436, 1.11", "-1.44546, 115.688, 0.480657, 1.38", "-1.35486, 118.178, 0.354706, 1.11", "-1.29401, 120.569, 0.303922, 1.38", "-1.27428, 122.109, 0.353951, 1.38", "-1.26772, 124.573, 0.646997, 1.38", "-1.32713, 128.101, 1.17976, 1.94", "-1.34947, 129.967, 1.49582, 1.66", "-1.35173, 130.751, 1.62453, 1.66", "-1.35327, 133.197, 1.98902, 1.66", "-1.35542, 137.055, 2.52358, 1.66", "-1.40082, 139.068, 2.77011, 1.38", "-1.50839, 142.246, 3.09259, 1.66", "-1.5705, 145.047, 3.2964, 1.11", "-1.616, 148.151, 3.48304, 1.11", "-1.64656, 149.879, 3.54404, 1.11", "-1.65547, 151.787, 3.58959, 1.11", "-1.62484, 153.215, 3.64426, 1.11", "-1.4626, 156.246, 3.8035, 1.38", "-1.27715, 158.556, 3.94789, 1.11", "-1.12292, 160.285, 4.05346, 1.38", "-0.947481, 162.251, 4.16233, 1.38", "-0.78831, 164.491, 4.26125, 0.83", "-0.67057, 167.205, 4.34508, 1.38", "-0.655637, 169.373, 4.37377, 0.83", "-0.687968, 171.574, 4.3624, 1.38", "-0.781215, 173.31, 4.34371, 1.38", "-1.00845, 176.158, 4.27745, 1.38", "-1.09531, 177.414, 4.24154, 1.38", "-1.17723, 179.364, 4.1819, 1.11", "-1.17633, 181.787, 4.11173, 1.11", "-1.04265, 185.286, 4.01385, 1.66", "-0.847047, 187.535, 3.95657, 1.11", "-0.751237, 188.424, 3.99102, 1.11", "-0.639272, 189.97, 4.12287, 1.38", "-0.547457, 191.924, 4.37494, 1.38", "-0.528526, 194.129, 4.7365, 1.94", "-0.621309, 196.415, 5.16824, 1.94", "-0.959895, 200.145, 5.87878, 1.11", "-1.24933, 202.224, 6.22929, 1.11", "-1.60914, 204.194, 6.51926, 1.38", "-2.12234, 206.565, 6.79683, 1.38", "-2.55596, 208.548, 6.95813, 1.11", "-2.95975, 210.728, 7.04159, 0.83", "-3.32906, 213.219, 6.99705, 0.83", "-3.52698, 214.656, 6.97191, 0.83", "-3.87593, 217.152, 6.92382, 1.11", "-4.12557, 219.344, 6.86778, 1.11", "-4.3769, 221.599, 6.79103, 1.38", "-4.76581, 225.03, 6.65609, 1.38", "-4.97491, 227.131, 6.56948, 1.11", "-5.20773, 229.623, 6.4627, 1.38", "-5.42049, 231.668, 6.33797, 0.83", "-5.76295, 234.4, 6.14257, 0.83", "-6.01572, 236.567, 5.96267, 1.38", "-6.0717, 237.541, 5.88021, 1.38", "-6.14701, 239.326, 5.71919, 1.11", "-6.27521, 242.276, 5.43458, 1.38", "-6.32954, 244.072, 5.25931, 1.11", "-6.3036, 245.835, 5.07929, 1.11", "-6.25693, 247.6, 4.90078, 1.11", "-6.20386, 249.801, 4.6767, 1.11", "-6.08591, 253.586, 4.27691, 1.11", "-5.98226, 255.807, 4.05345, 1.11", "-5.90124, 258.26, 3.86311, 1.38", "-5.87365, 260.778, 3.73945, 1.38", "-5.89557, 263.135, 3.68038, 0.83", "-5.90692, 264.947, 3.69468, 1.38", "-5.90847, 266.658, 3.77276, 1.38", "-5.93132, 268.983, 3.94384, 1.11", "-5.9365, 270.527, 4.09439, 0.55", "-5.85573, 272.064, 4.26532, 1.11", "-5.76398, 273.518, 4.42577, 1.11", "-5.65236, 275.071, 4.56777, 0.83", "-5.51362, 276.712, 4.65384, 0.83", "-5.38011, 278.203, 4.66849, 0.83", "-5.22542, 280.92, 4.68244, 1.11", "-5.11681, 282.693, 4.65931, 1.66", "-5.07679, 284.399, 4.60545, 1.66", "-5.12608, 286.61, 4.50968, 0.83", "-5.18326, 288.387, 4.41513, 0.83", "-5.2313, 290.893, 4.27613, 1.11", "-5.33201, 293.877, 4.09531, 0.83", "-5.42082, 297.209, 3.89936, 0.83", "-5.46985, 299.116, 3.78637, 0.83", "-5.58779, 303.058, 3.5542, 1.38", "-5.75163, 306.997, 3.33131, 1.38", "-5.83907, 308.752, 3.24208, 1.11", "-6.07731, 311.476, 3.12499, 1.11", "-6.24987, 313.205, 3.0464, 0.83", "-6.43119, 314.421, 2.98556, 0.83", "-6.88001, 316.458, 2.97248, 1.38", "-7.12909, 317.519, 3.05107, 1.38", "-7.58244, 320.001, 3.37729, 0.83", "-7.80573, 321.697, 3.67849, 0.83", "-8.04589, 324.403, 4.06294, 0.83", "-8.18376, 326.933, 4.461, 0.83", "-8.25108, 330.179, 5.02894, 1.38", "-8.26249, 332.383, 5.44023, 1.38", "-8.16011, 333.916, 5.76064, 1.38", "-7.66703, 337.466, 6.50636, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.18944, 54.2315, 2.90007, 1.11", "2.4015, 58.4624, -1.66028, 1.11", "2.76455, 59.7702, -2.87315, 1.11", "3.32484, 62.023, -5.01897, 1.11", "4.76646, 68.4837, -10.9612, 1.11", "5.21775, 70.8798, -12.918, 1.11", "5.74411, 74.2464, -15.4358, 0.83", "5.94556, 76.2614, -16.7255, 0.83", "6.47641, 82.0207, -20.0202, 1.11", "6.67562, 84.6558, -21.2436, 1.11", "6.68892, 88.8013, -22.5651, 1.11", "6.45822, 92.6022, -23.4601, 1.11", "6.18575, 95.2535, -23.8137, 1.38", "5.98751, 97.1137, -23.7992, 1.38", "5.78706, 99.2708, -23.5442, 1.11", "5.42084, 103.381, -23.0302, 1.11", "5.11071, 107.725, -22.5931, 0.83", "5.07185, 108.412, -22.5021, 0.83", "4.93195, 112.602, -22.0759, 1.66", "4.82502, 116.192, -21.9369, 0.83", "4.81072, 116.882, -21.9587, 0.83", "4.82298, 119.808, -22.2348, 1.66", "4.82411, 121.647, -22.4987, 1.66", "4.79184, 123.975, -22.7571, 1.11", "4.67332, 126.719, -23.0295, 1.11", "4.50436, 129.665, -23.2083, 1.11", "4.34349, 133.179, -23.4459, 1.66", "4.20517, 136.499, -23.6212, 1.66", "4.04361, 139.968, -23.8863, 0.83", "3.92475, 143.02, -24.2502, 0.83", "3.89683, 145.175, -24.605, 0.83", "3.94946, 148.265, -25.181, 1.66", "4.04965, 151.223, -25.783, 0.55", "4.15441, 154.108, -26.3604, 0.55", "4.33622, 157.33, -26.9253, 1.38", "4.54696, 160.014, -27.2579, 1.94", "4.78796, 163.254, -27.5338, 0.83", "4.89087, 165.057, -27.6149, 0.83", "4.99821, 168.103, -27.6926, 1.94", "5.06727, 171.935, -27.6165, 1.94", "5.05399, 174.431, -27.5399, 1.11", "5.02233, 177.364, -27.2674, 1.11", "4.96174, 180.019, -26.9252, 1.11", "4.92098, 181.55, -26.676, 1.11", "4.86347, 183.115, -26.4175, 1.11", "4.53711, 188.941, -25.4637, 2.22", "4.22383, 195.607, -24.4032, 0.83", "4.1733, 197.55, -24.1281, 0.83", "4.18798, 200.176, -23.8131, 1.11", "4.23782, 203.447, -23.5406, 0.55", "4.20833, 205.993, -23.4696, 2.22", "4.15842, 207.584, -23.5802, 1.94", "4.11462, 209.89, -23.9725, 0.83", "4.12403, 212.346, -24.371, 0.83", "4.17624, 214.815, -24.7266, 0.83", "4.17891, 217.422, -25.0212, 1.66", "4.15324, 220.291, -25.3222, 0.83", "4.12731, 221.933, -25.4597, 0.83", "4.1026, 223.325, -25.579, 1.11", "4.03637, 225.476, -25.7872, 0.83", "3.97658, 229.238, -26.1867, 0.83", "3.96166, 229.918, -26.2595, 0.83", "3.76825, 233.672, -26.6425, 1.94", "3.61846, 236.473, -26.9328, 0.55", "3.48182, 239.635, -27.3334, 0.55", "3.45497, 240.205, -27.4331, 0.55", "3.21481, 244.708, -28.3693, 2.22", "3.10986, 248.146, -29.1067, 0.83", "3.10577, 249.703, -29.4212, 0.83", "3.18725, 253.389, -30.082, 1.38", "3.37885, 256.636, -30.607, 0.55", "3.58799, 259.519, -30.9939, 0.55", "3.99536, 263.525, -31.5333, 0.83", "4.65699, 269.158, -31.9286, 0.83", "4.85402, 270.743, -31.9463, 2.49", "5.23518, 273.803, -31.7867, 2.49", "5.79108, 278.562, -31.3502, 0.83", "6.08492, 281.242, -31.0715, 0.83", "6.38399, 286.562, -30.5219, 0.83", "6.43803, 288.139, -30.357, 0.83", "6.41127, 291.565, -30.0548, 1.66", "6.33257, 295.03, -29.8056, 0.83", "6.26315, 297.561, -29.6646, 0.83", "6.15151, 301.345, -29.5284, 0.83", "6.10696, 304.268, -29.551, 1.94", "6.15119, 309.1, -29.5658, 0.83", "6.27712, 314.083, -29.5658, 0.83", "6.35676, 316.319, -29.5613, 0.83", "6.44734, 319.134, -29.5576, 1.11", "6.51132, 321.315, -29.5559, 2.49", "6.52219, 325.052, -29.5718, 0.83", "6.47636, 326.339, -29.5867, 0.83", "6.33092, 328.513, -29.6249, 0.83", "6.08445, 332.116, -29.6892, 0.83", "5.89946, 335.634, -29.8227, 0.83", "5.67223, 339.753, -30.0592, 1.11", "5.53788, 343.357, -30.3535, 1.66", "5.49966, 346.808, -30.6642, 0.83", "5.52084, 349.629, -30.9598, 0.83", "5.70593, 352.875, -31.3233, 0.83", "5.91365, 355.257, -31.6069, 0.83", "6.133, 357.882, -31.9466, 0.83", "6.47837, 361.985, -32.4718, 1.66", "6.73443, 365.243, -32.879, 0.83", "6.85761, 366.97, -33.0701, 0.83", "7.07921, 371.159, -33.4123, 1.38", "7.35396, 375.089, -33.7042, 0.83", "7.4837, 377.271, -33.8517, 0.83", "7.56109, 378.577, -33.957, 1.66", "7.67168, 381.225, -34.1469, 1.66", "7.65451, 383.895, -34.3549, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.74662, 40.3282, 0.0, 0.28", "-6.69386, 55.2013, 0.0, 0.28", "-8.6411, 70.0744, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "35.4337, -116.187, 31.5722, 0.83", "37.1503, -116.058, 33.5882, 0.83", "38.2606, -115.943, 35.0294, 0.28", "40.9333, -115.665, 38.4984, 0.55", "41.987, -115.556, 39.866, 0.55", "43.5065, -115.398, 41.8383, 0.55", "48.3919, -114.89, 48.1792, 0.28", "48.9918, -114.88, 49.1225, 0.28" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "35.4337, -116.187, 31.5722, 0.55", "36.6348, -118.113, 34.1239, 0.55", "36.944, -118.441, 34.8315, 0.83", "37.672, -119.345, 36.6466, 0.28", "37.9362, -119.746, 37.4636, 0.83", "38.4661, -120.512, 39.056, 0.83", "39.7736, -122.333, 42.8345, 0.83", "41.6261, -124.45, 47.5054, 0.83", "42.2794, -125.16, 49.3962, 0.83", "43.853, -126.473, 54.2876, 1.11", "44.2459, -126.755, 56.0101, 0.83", "44.3356, -126.788, 56.6576, 0.83", "44.3703, -126.496, 59.0016, 0.83", "43.8529, -125.149, 63.537, 0.83", "43.395, -123.834, 66.6611, 0.83", "42.5897, -121.665, 70.3857, 0.83", "42.0524, -120.559, 72.2181, 1.11", "41.0882, -118.849, 74.9332, 0.28", "40.8544, -118.519, 75.4318, 0.55", "39.9192, -116.956, 77.2638, 0.28", "39.0373, -116.151, 78.2726, 1.11" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.30839, -105.385, 6.15954, 1.11", "-2.46355, -106.689, 7.07049, 1.11", "-3.77609, -108.484, 8.20852, 1.11", "-6.7927, -113.532, 10.9372, 1.38", "-8.34594, -116.543, 12.612, 1.38", "-9.4902, -118.76, 13.8458, 1.66", "-11.3048, -122.277, 15.8025, 1.11", "-12.2037, -124.315, 16.9212, 1.11", "-13.2672, -127.491, 18.5443, 1.38", "-14.4817, -132.927, 20.9099, 2.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.30839, -105.385, 6.15954, 1.38", "-1.32015, -109.101, 6.20213, 1.38", "-1.25677, -112.105, 6.31237, 1.94", "-1.16317, -114.286, 6.20818, 1.38", "-0.879144, -117.902, 5.50056, 1.94", "-0.525062, -120.708, 4.70215, 0.83", "-0.238534, -122.403, 4.10395, 0.83", "0.284354, -124.576, 3.20313, 1.38", "1.3818, -127.839, 1.48039, 1.94", "2.90962, -131.294, -0.827465, 0.83", "3.47746, -132.353, -1.69482, 0.83", "5.01073, -134.928, -4.27109, 1.11", "5.93857, -136.402, -5.82033, 0.55", "6.40012, -137.175, -6.68797, 0.55", "7.26669, -138.77, -8.46583, 0.55", "7.64553, -139.597, -9.48008, 0.83", "8.41619, -141.451, -11.9323, 0.55", "9.1384, -143.276, -14.5845, 1.66", "10.1386, -146.156, -18.8803, 0.55", "10.4792, -147.404, -20.7097, 1.66", "11.0234, -150.101, -24.4861, 0.55", "11.2778, -151.283, -26.1686, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-7.66703, 337.466, 6.50636, 0.83", "-7.32313, 339.283, 5.07401, 0.83", "-7.04785, 341.289, 3.48389, 0.83", "-6.69591, 343.915, 1.63873, 0.55", "-6.26239, 346.516, -0.0564873, 0.83", "-5.81697, 349.145, -1.61199, 0.28", "-5.62354, 350.366, -2.26851, 0.55", "-5.55059, 351.202, -2.71126, 0.55", "-5.31906, 353.648, -3.84607, 1.11", "-5.09546, 355.741, -4.58341, 0.55", "-4.90679, 357.542, -5.10821, 1.11", "-4.76056, 359.098, -5.46395, 1.11", "-4.57406, 361.443, -5.89246, 0.28", "-4.41699, 364.491, -6.55636, 0.55", "-4.35837, 368.062, -7.41898, 0.55", "-4.32219, 369.89, -7.80063, 0.55", "-4.2814, 371.232, -8.04829, 0.28", "-4.1834, 373.188, -8.23501, 0.83", "-3.98743, 377.019, -8.21325, 1.38", "-3.9689, 378.846, -8.09865, 1.38", "-3.89113, 383.028, -7.60975, 0.83", "-3.87879, 385.022, -7.31711, 0.83", "-3.8808, 390.55, -6.27466, 0.83", "-3.90411, 392.452, -5.86736, 0.83", "-3.94909, 395.494, -5.03046, 0.83", "-3.97375, 396.268, -4.81008, 0.83", "-4.05796, 398.923, -4.07744, 1.38", "-4.06463, 400.782, -3.62276, 0.55", "-4.03338, 403.029, -3.2468, 0.55", "-3.91421, 404.265, -3.10013, 0.55", "-3.77095, 405.169, -3.03128, 0.28", "-3.2778, 407.67, -2.95839, 0.83", "-2.78698, 409.597, -3.03579, 0.55", "-2.16475, 411.668, -3.21196, 0.83", "-1.24799, 414.642, -3.52222, 0.55", "-0.734981, 416.37, -3.72233, 1.66", "0.0322394, 419.072, -4.05378, 1.66", "0.791052, 422.03, -4.41869, 0.83", "1.32754, 424.412, -4.7018, 0.83", "1.68743, 426.369, -4.91111, 0.83", "1.83464, 427.541, -5.01304, 0.28", "1.98118, 429.526, -5.11524, 1.11", "1.9829, 432.512, -5.18584, 0.55", "1.90776, 434.233, -5.18637, 0.55", "1.80599, 436.03, -5.21538, 0.55", "1.71162, 437.218, -5.26333, 0.55", "1.48213, 438.938, -5.37716, 1.11", "1.14725, 440.831, -5.54563, 0.28", "0.978895, 441.717, -5.63529, 0.55", "0.719997, 443.825, -5.82736, 0.55", "0.508896, 447.183, -6.09498, 0.55", "0.509299, 448.365, -6.16404, 0.83", "0.591543, 450.237, -6.2918, 0.83", "0.786164, 452.921, -6.41622, 0.83", "1.06269, 455.464, -6.43922, 0.83", "1.39609, 457.418, -6.40353, 0.83", "2.49434, 461.7, -6.2304, 1.11", "3.16971, 463.891, -6.11675, 0.28", "3.65822, 465.187, -6.05365, 0.55", "4.20803, 466.595, -5.82388, 0.55", "4.68163, 467.787, -5.49241, 0.55", "5.06391, 468.591, -5.16455, 0.55", "6.52339, 471.033, -3.9536, 0.55", "7.53429, 472.767, -3.10899, 0.83", "10.0957, 477.151, -1.42502, 0.55", "10.5104, 477.903, -1.15244, 0.83", "11.2612, 479.399, -0.657362, 0.83", "12.1199, 481.276, -0.132658, 0.55", "12.8363, 482.995, 0.215582, 0.83", "13.8546, 485.791, 0.51271, 0.83", "14.6598, 488.253, 0.609248, 0.55", "14.8976, 489.161, 0.70073, 0.55", "15.341, 491.199, 1.00826, 0.55", "15.5164, 492.186, 1.20287, 0.83", "15.8253, 493.925, 1.60058, 0.83", "16.2349, 497.013, 2.2567, 0.55", "16.4415, 498.513, 2.50363, 0.55", "16.7272, 500.769, 2.88907, 0.55", "16.9295, 502.625, 3.19046, 0.55", "17.3448, 506.076, 3.74014, 0.55", "17.6549, 508.516, 4.05782, 0.83", "17.8247, 509.78, 4.14907, 1.11", "18.0591, 512.293, 4.32762, 0.55", "18.1852, 515.896, 4.63729, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-7.66703, 337.466, 6.50636, 0.55", "-8.66935, 340.029, 5.78952, 0.55", "-9.33675, 341.867, 5.35717, 0.55", "-9.83353, 343.427, 5.05303, 0.55", "-10.2406, 344.835, 4.80941, 0.55", "-11.0516, 347.719, 4.34653, 0.55", "-11.522, 349.393, 4.08264, 0.83", "-12.1567, 351.498, 3.82299, 0.83", "-12.7807, 353.686, 3.55934, 0.83", "-13.1991, 355.516, 3.36915, 0.55", "-13.4811, 357.051, 3.23309, 0.55", "-13.8868, 359.161, 3.06839, 0.83", "-14.2198, 360.858, 2.94947, 0.83", "-14.8011, 363.522, 2.75404, 0.83", "-15.1971, 365.265, 2.63282, 0.83", "-15.4899, 366.621, 2.55986, 0.55", "-15.8167, 368.371, 2.50192, 0.83", "-16.1259, 370.316, 2.50808, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "7.65451, 383.895, -34.3549, 0.55", "7.62622, 385.793, -34.3732, 0.55", "7.58531, 388.539, -34.3997, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.65451, 383.895, -34.3549, 0.55", "5.62894, 384.131, -34.0122, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "48.9918, -114.88, 49.1225, 0.28", "49.7792, -117.258, 47.5794, 0.28", "49.9243, -117.696, 47.295, 1.11", "50.6134, -119.776, 45.9445, 0.28", "50.6827, -119.986, 45.8087, 1.11" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "48.9918, -114.88, 49.1225, 1.66", "49.3123, -113.669, 50.328, 1.66", "49.808, -110.378, 52.9616, 0.83", "50.2248, -107.099, 55.4309, 0.28", "50.2839, -105.989, 56.1976, 0.55", "50.2404, -102.166, 58.5453, 0.28", "50.1835, -99.8793, 59.8964, 0.83", "49.9863, -96.9071, 61.6511, 0.83", "49.7586, -95.039, 62.6158, 0.28", "49.3513, -92.3424, 63.8529, 0.55", "48.696, -89.904, 64.8087, 0.55", "47.5518, -86.9448, 65.7729, 0.28", "47.1187, -86.0606, 66.0462, 0.83", "45.8484, -83.5877, 66.7816, 0.28", "44.2373, -80.7119, 67.5374, 0.55", "42.1613, -77.2387, 68.4027, 0.28", "40.5322, -74.8442, 68.9266, 1.11", "39.1383, -73.0707, 69.1693, 0.28", "37.3034, -70.8154, 69.4041, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-14.4817, -132.927, 20.9099, 0.83", "-13.6252, -136.637, 21.5797, 0.83", "-13.1313, -138.449, 21.9167, 0.83", "-12.3282, -141.668, 22.4688, 0.83", "-11.918, -144.052, 23.0084, 0.55", "-11.7268, -146.259, 23.6361, 0.83", "-11.7092, -148.38, 24.3689, 0.83", "-11.8481, -149.952, 25.129, 0.83", "-12.3282, -152.527, 26.5776, 0.83", "-13.1695, -155.63, 28.4947, 0.83", "-13.8704, -157.659, 29.7533, 0.83", "-15.2008, -160.888, 31.8201, 1.11", "-16.2934, -163.308, 33.3842, 0.55", "-17.0202, -165.047, 34.4421, 0.55", "-17.8159, -167.224, 35.6182, 0.83", "-18.249, -168.645, 36.2034, 0.83", "-18.5564, -169.883, 36.6283, 0.28", "-18.8571, -171.183, 37.0083, 0.55", "-19.4454, -173.935, 37.71, 1.11", "-19.7826, -175.874, 38.1568, 0.28", "-19.9617, -176.969, 38.3789, 0.55", "-20.5452, -180.09, 38.9246, 0.28", "-20.6618, -180.689, 39.0368, 0.83", "-21.0856, -183.083, 39.5369, 0.83", "-21.5155, -185.569, 40.0716, 0.28", "-21.5592, -185.941, 40.1465, 1.11", "-21.6896, -187.612, 40.4147, 1.11", "-21.8968, -190.095, 40.6799, 0.55", "-22.049, -192.018, 40.9415, 1.11", "-22.1633, -193.619, 41.2312, 1.11", "-22.2677, -194.736, 41.5179, 1.11", "-22.4204, -196.215, 41.9003, 0.28", "-22.4866, -197.128, 42.221, 0.55", "-22.553, -198.54, 42.7931, 0.28", "-22.5937, -199.24, 43.2065, 0.83", "-22.692, -200.605, 44.1322, 0.28", "-22.7402, -201.328, 44.6275, 0.83", "-22.8149, -204.04, 46.4594, 0.28", "-22.8383, -204.877, 46.9475, 0.83", "-22.9257, -207.242, 48.0725, 0.55", "-23.008, -208.839, 48.7124, 1.11", "-23.1101, -210.575, 49.2483, 0.28", "-23.1596, -211.512, 49.4592, 0.83", "-23.3224, -214.052, 49.7523, 0.83", "-23.4016, -215.417, 49.9772, 0.28", "-23.4159, -216.256, 50.1401, 0.28", "-23.4031, -217.19, 50.4341, 0.83", "-23.3372, -218.316, 50.9074, 0.83", "-23.1866, -219.816, 51.659, 0.55", "-22.7934, -222.537, 53.1737, 0.28", "-22.7176, -223.295, 53.6007, 1.11", "-22.6317, -224.412, 54.1774, 0.83", "-22.4922, -226.696, 55.2051, 0.28", "-22.4607, -227.049, 55.333, 0.55", "-22.2425, -228.611, 55.7368, 0.55", "-21.8785, -230.309, 55.989, 0.55", "-21.5468, -231.7, 56.1413, 0.55", "-21.2652, -232.884, 56.2293, 0.55", "-20.9207, -234.42, 56.3394, 0.55", "-20.4129, -236.364, 56.4811, 0.55", "-19.8596, -238.243, 56.6201, 0.55", "-19.2831, -240.08, 56.7509, 0.55", "-18.9066, -241.4, 56.8717, 0.28", "-18.4997, -243.003, 57.0158, 0.83", "-18.0686, -245.256, 57.1973, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-14.4817, -132.927, 20.9099, 1.38", "-17.2637, -133.663, 20.4124, 1.38", "-20.6112, -134.548, 19.8138, 1.38" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "11.2778, -151.283, -26.1686, 0.55", "11.9312, -157.261, -26.8491, 0.55", "12.1265, -160.236, -27.2867, 0.55", "12.3572, -163.794, -27.8819, 2.49", "12.4997, -166.667, -28.4809, 0.55", "12.6, -169.445, -29.1125, 0.55", "12.727, -172.961, -29.9119, 0.83", "12.5797, -176.026, -30.6365, 0.28", "12.5321, -177.456, -31.054, 0.55", "12.462, -179.746, -31.8583, 0.28", "12.4182, -181.177, -32.4046, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "11.2778, -151.283, -26.1686, 0.83", "13.4462, -151.459, -26.9978, 0.83", "15.3754, -151.474, -27.5893, 0.83", "17.4563, -151.416, -28.2263, 0.55", "20.0415, -151.371, -29.0045, 0.55", "20.9169, -151.414, -29.312, 0.83", "22.7003, -151.679, -29.9317, 0.55", "24.3016, -152.07, -30.4517, 1.11", "25.9744, -152.729, -30.9754, 0.28", "27.1487, -153.368, -31.3289, 0.83", "29.4167, -154.959, -32.118, 0.28", "31.5119, -156.669, -32.9663, 1.38", "32.7495, -157.763, -33.3838, 0.55", "33.7158, -158.683, -33.6049, 0.55", "35.142, -160.094, -33.6455, 0.83", "36.2002, -161.168, -33.5023, 0.28", "37.6384, -162.598, -33.1733, 0.55", "40.5891, -165.384, -32.1853, 0.28", "42.0136, -166.617, -31.6166, 0.83", "44.3049, -168.372, -30.6192, 0.55", "45.1188, -168.914, -30.2362, 0.55", "47.5808, -170.388, -29.0824, 1.94", "50.5155, -172.104, -27.8471, 0.55", "51.8695, -172.839, -27.3638, 0.55", "53.0636, -173.434, -26.9346, 0.55", "55.4502, -174.732, -26.1176, 0.28", "56.2723, -175.274, -25.8334, 1.38", "57.8856, -176.591, -25.2467, 1.38", "59.9427, -178.792, -24.7729, 0.55", "60.8977, -179.988, -24.2488, 0.55", "62.7128, -182.42, -22.9271, 1.11", "64.1809, -184.544, -21.7416, 0.28", "64.4508, -184.956, -21.4922, 0.83", "65.8753, -187.212, -19.944, 0.28", "70.2563, -194.618, -14.4235, 0.83", "70.9158, -195.64, -13.2649, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-16.1259, 370.316, 2.50808, 0.55", "-16.1998, 371.663, 2.56828, 0.55", "-16.3443, 372.973, 2.83579, 0.28", "-16.5899, 374.147, 3.12336, 0.55", "-16.8866, 374.977, 3.33801, 0.28", "-17.3843, 376.185, 3.59083, 0.83", "-17.8756, 377.415, 3.80479, 0.83", "-18.8261, 379.315, 4.49859, 0.55", "-19.4228, 380.4, 5.04255, 0.55", "-20.6155, 382.451, 6.25638, 0.83", "-21.3243, 383.585, 6.97777, 0.83", "-22.1594, 384.873, 7.91547, 0.83", "-24.9025, 388.962, 10.7334, 0.55", "-25.4067, 389.794, 11.2694, 0.55", "-25.6104, 390.183, 11.5173, 0.83", "-26.0062, 391.068, 12.0695, 0.55", "-27.0082, 393.81, 13.5402, 1.11", "-27.6807, 396.209, 14.5105, 0.83", "-27.9827, 397.902, 14.9269, 0.55", "-28.1509, 399.166, 15.2346, 1.11", "-28.3055, 400.57, 15.6032, 0.55", "-28.4726, 402.883, 16.2526, 1.11", "-28.5946, 404.661, 16.7237, 0.55", "-28.7291, 406.252, 17.2136, 0.55", "-28.8645, 407.117, 17.469, 0.28", "-29.1553, 408.664, 17.9177, 0.83", "-29.4738, 410.232, 18.3046, 0.55", "-29.7764, 411.639, 18.5796, 0.83", "-30.0881, 412.976, 18.7735, 0.83", "-30.6045, 414.903, 18.9814, 0.55", "-31.1311, 416.823, 19.1129, 0.55", "-31.8337, 419.297, 19.1787, 0.83", "-32.5613, 421.745, 19.2011, 0.83", "-33.2382, 424.032, 19.2077, 0.83", "-33.6654, 425.456, 19.1948, 0.83", "-34.1994, 427.356, 19.1551, 0.83", "-34.6883, 429.02, 19.1197, 0.83", "-35.1758, 430.828, 19.1699, 0.83", "-35.449, 431.889, 19.2295, 0.83", "-35.7947, 433.361, 19.3786, 0.55", "-36.0806, 434.613, 19.4609, 0.83", "-36.4579, 436.147, 19.5712, 0.83", "-37.0708, 438.637, 19.7683, 0.55", "-37.719, 441.036, 19.9697, 0.83", "-38.479, 443.597, 20.1841, 0.55", "-39.4596, 446.347, 20.3723, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-16.1259, 370.316, 2.50808, 0.55", "-17.9813, 372.688, 3.06789, 0.55", "-19.3707, 374.589, 3.21419, 0.28", "-20.0076, 375.462, 3.19916, 0.83", "-20.9104, 376.676, 3.10922, 0.28", "-21.3548, 377.283, 3.04762, 0.28", "-22.0713, 378.264, 2.91668, 0.83", "-23.3462, 380.25, 2.51096, 0.83", "-23.9541, 381.289, 2.22812, 0.28", "-24.8267, 382.842, 1.85637, 0.83", "-25.277, 383.635, 1.66727, 0.55", "-26.1541, 385.18, 1.3536, 1.11", "-26.9709, 386.682, 1.08102, 0.55", "-27.6016, 387.956, 0.880876, 1.11", "-28.2563, 389.401, 0.683064, 0.55", "-29.0987, 391.431, 0.439182, 1.11", "-29.608, 392.649, 0.306994, 0.28", "-30.0095, 393.616, 0.225657, 0.55", "-30.5214, 394.724, 0.144326, 0.28", "-30.8912, 395.509, 0.106561, 0.83", "-31.2819, 396.553, 0.0339752, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "7.58531, 388.539, -34.3997, 0.83", "8.09486, 390.36, -34.7221, 0.83", "8.33909, 391.352, -34.9059, 0.83", "8.69326, 392.833, -35.1755, 2.22", "9.02423, 394.334, -35.4568, 1.66", "9.44583, 396.163, -35.7236, 0.83", "9.5827, 396.766, -35.7946, 0.83", "9.83833, 398.114, -35.9257, 0.83", "10.1587, 399.975, -36.0428, 1.66", "10.3384, 401.425, -36.0855, 0.55", "10.418, 402.889, -36.1325, 0.55", "10.424, 403.804, -36.1791, 1.11", "10.3906, 405.374, -36.3312, 0.55", "10.253, 407.947, -36.716, 1.66", "10.2185, 409.254, -36.9629, 0.83", "10.2288, 411.384, -37.4206, 0.83", "10.2548, 412.414, -37.6726, 0.83", "10.3511, 413.56, -37.9433, 1.66", "10.5723, 415.114, -38.2838, 0.83", "11.0334, 417.494, -38.7218, 0.83", "11.4642, 419.273, -38.9649, 0.83", "11.6613, 419.947, -39.0141, 0.83", "12.1054, 421.461, -39.0846, 0.83", "12.3798, 422.46, -39.1288, 1.38", "12.7942, 424.019, -39.1869, 0.55", "13.0834, 425.052, -39.2282, 1.38", "13.6612, 427.024, -39.3083, 1.38", "14.1319, 428.715, -39.3744, 0.83", "14.6165, 430.552, -39.4391, 0.83", "15.1672, 432.559, -39.5057, 1.11", "15.6133, 434.207, -39.5535, 0.55", "15.9372, 435.534, -39.5825, 0.55", "16.1766, 436.585, -39.6397, 0.55", "16.7162, 438.915, -39.8299, 2.22", "16.9565, 439.958, -39.9431, 0.55", "17.2066, 441.0, -40.0782, 0.55", "17.3255, 441.515, -40.149, 1.11", "17.8998, 443.96, -40.4881, 0.55", "18.186, 445.312, -40.669, 0.55", "18.2766, 445.844, -40.7348, 0.55", "18.4719, 447.506, -40.8992, 1.11", "18.5884, 449.108, -41.0573, 1.11", "18.6529, 450.425, -41.1633, 0.83", "18.6502, 451.805, -41.2221, 0.83", "18.6252, 452.677, -41.2663, 0.83", "18.501, 454.421, -41.3698, 0.83", "18.2369, 456.4, -41.5208, 2.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "7.58531, 388.539, -34.3997, 0.55", "6.39677, 388.485, -35.0422, 0.55", "5.15366, 388.429, -35.7143, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-20.6112, -134.548, 19.8138, 1.11", "-20.549, -135.553, 19.8516, 1.11", "-20.4441, -137.252, 19.9154, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-20.6112, -134.548, 19.8138, 1.11", "-22.4021, -133.471, 17.4609, 1.11", "-23.0176, -133.016, 16.7313, 0.28", "-23.4969, -132.715, 16.389, 0.83", "-25.411, -131.606, 15.3881, 0.55", "-26.3163, -131.138, 14.9942, 0.55", "-27.183, -130.703, 14.5883, 0.55", "-28.3994, -130.164, 14.0582, 0.55", "-31.3788, -128.991, 12.655, 1.11", "-33.1271, -128.322, 11.8096, 0.55", "-34.2663, -127.898, 11.2676, 0.55", "-36.8523, -127.095, 9.96559, 0.83", "-38.4077, -126.687, 9.16273, 0.55", "-39.9207, -126.358, 8.36366, 1.11", "-42.3332, -125.929, 6.9952, 0.83", "-43.1937, -125.822, 6.54189, 0.83", "-44.4223, -125.694, 5.98297, 0.83", "-46.3943, -125.585, 5.26699, 0.83", "-48.8948, -125.539, 4.40239, 1.11", "-50.0463, -125.576, 3.96336, 0.83", "-51.6757, -125.701, 3.2771, 0.83", "-54.0475, -125.943, 2.19445, 0.83", "-55.567, -126.16, 1.40604, 0.55", "-56.6754, -126.421, 0.768984, 1.38", "-58.2238, -126.825, -0.260643, 0.55", "-59.6057, -127.129, -1.26074, 0.55", "-60.4282, -127.327, -1.92059, 0.55", "-61.6125, -127.628, -2.99792, 0.55", "-62.2394, -127.759, -3.62195, 0.83", "-64.3009, -128.015, -5.81252, 0.55", "-65.0152, -128.077, -6.60571, 0.55", "-65.8227, -128.098, -7.51822, 0.55", "-67.4398, -128.063, -9.13894, 0.55", "-69.1943, -127.972, -10.6828, 1.11", "-71.0207, -127.875, -12.1387, 0.55", "-71.5281, -127.87, -12.4835, 0.55", "-73.2887, -127.934, -13.5052, 0.55", "-75.3871, -128.034, -14.4526, 1.94", "-76.9678, -128.193, -14.8968, 0.83", "-77.5482, -128.276, -15.0271, 0.28", "-78.5684, -128.496, -15.2482, 0.55", "-80.0272, -128.876, -15.584, 0.55", "-81.2818, -129.264, -15.8939, 0.28", "-83.5042, -129.978, -16.3996, 1.11", "-85.1825, -130.554, -16.6902, 0.28", "-87.0414, -131.102, -16.9541, 0.83", "-88.5046, -131.457, -17.0986, 0.28", "-89.1475, -131.568, -17.1304, 0.28", "-90.7772, -131.733, -17.1147, 0.28", "-91.6811, -131.742, -17.0492, 0.55", "-93.5028, -131.578, -16.8691, 0.55", "-94.2432, -131.397, -16.8541, 0.83", "-95.4177, -131.022, -16.9335, 0.28", "-95.7023, -130.932, -16.9712, 0.83", "-97.4917, -130.368, -17.3229, 0.83", "-98.9474, -129.913, -17.6299, 0.83", "-100.605, -129.476, -17.9971, 0.55", "-101.442, -129.286, -18.1907, 0.55", "-103.009, -129.02, -18.545, 1.38", "-104.685, -128.817, -18.911, 1.38", "-106.082, -128.723, -19.2023, 0.28", "-107.204, -128.766, -19.4502, 0.83", "-108.086, -128.897, -19.6503, 0.28", "-108.915, -129.112, -19.8517, 1.38", "-110.157, -129.542, -20.1797, 0.28", "-110.584, -129.753, -20.3024, 0.83", "-111.74, -130.472, -20.6643, 0.55", "-112.348, -130.878, -20.8751, 0.55", "-113.405, -131.578, -21.278, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "12.4182, -181.177, -32.4046, 0.83", "12.5086, -182.523, -32.4746, 0.83", "12.5032, -183.808, -32.6812, 1.94", "12.4869, -185.102, -32.9464, 1.94", "12.3471, -187.676, -33.5551, 0.83", "12.2257, -189.47, -33.9834, 1.38", "11.7716, -194.135, -35.191, 0.28", "11.7261, -194.546, -35.3127, 0.83", "11.5591, -195.724, -35.7293, 0.55", "11.2248, -197.358, -36.4155, 0.28", "10.7605, -198.912, -37.1967, 0.55", "10.0896, -201.01, -38.2029, 3.6" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "12.4182, -181.177, -32.4046, 0.28", "11.5927, -180.402, -29.3092, 0.28", "11.4749, -180.291, -28.8675, 1.38", "10.6289, -179.497, -25.6953, 0.55", "10.1448, -179.042, -23.8801, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "70.9158, -195.64, -13.2649, 1.38", "71.4144, -197.836, -13.3082, 1.38" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "70.9158, -195.64, -13.2649, 0.55", "71.8892, -194.781, -13.9277, 0.55", "72.516, -194.227, -14.3546, 0.55", "74.1692, -192.768, -15.4804, 0.28", "74.705, -192.295, -15.8453, 1.11", "76.3455, -190.847, -16.9625, 0.28", "77.7192, -189.634, -17.898, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-39.4596, 446.347, 20.3723, 1.38", "-39.4584, 447.881, 20.8596, 1.38", "-39.6053, 449.261, 21.2945, 0.55", "-39.9514, 450.42, 21.794, 0.55", "-40.2525, 451.429, 22.2286, 0.55", "-40.6021, 452.601, 22.7332, 1.11", "-41.3021, 454.946, 23.7436, 0.55", "-42.009, 456.62, 24.5433, 1.11", "-43.2795, 459.049, 25.8635, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-39.4596, 446.347, 20.3723, 0.55", "-39.9522, 448.606, 19.8975, 0.55", "-40.2921, 449.549, 19.7453, 0.28", "-40.7309, 450.443, 19.5274, 0.83", "-41.5825, 452.018, 19.1027, 0.28", "-42.3969, 453.362, 18.7366, 0.55", "-43.2019, 454.613, 18.4052, 0.55", "-44.864, 456.771, 17.7867, 1.11", "-46.4351, 458.543, 17.304, 0.55", "-47.0454, 459.2, 17.0939, 0.55", "-48.4246, 460.66, 16.6109, 0.83", "-49.3763, 461.653, 16.2373, 0.83", "-50.7324, 463.12, 15.5363, 0.83", "-51.431, 463.904, 15.1072, 0.83", "-53.0349, 465.975, 13.959, 0.55", "-54.1543, 467.718, 12.8638, 0.83", "-54.785, 468.844, 12.0347, 0.83", "-55.796, 470.827, 10.4828, 0.55", "-56.5607, 472.522, 9.15257, 0.55", "-57.0212, 473.57, 8.31479, 0.83", "-58.1703, 475.981, 6.41122, 0.83", "-58.8632, 477.459, 5.22014, 0.83", "-59.3641, 478.519, 4.35827, 0.28", "-59.7362, 479.309, 3.65162, 0.55", "-60.302, 480.648, 1.97648, 0.55", "-60.6107, 481.371, 0.928599, 0.55", "-60.86, 481.956, -0.0297155, 0.55", "-61.4744, 483.375, -2.59052, 0.55", "-62.1272, 484.688, -5.38856, 0.83", "-63.2915, 486.573, -9.94341, 0.28", "-63.6797, 487.07, -11.4514, 0.28", "-63.8893, 487.312, -12.3434, 0.55", "-64.13, 487.59, -13.5735, 0.28", "-64.2549, 487.762, -14.3877, 0.83", "-64.419, 488.072, -15.6613, 0.83", "-64.7801, 489.211, -19.9962, 0.83", "-64.9562, 490.051, -23.346, 0.28", "-65.0921, 490.813, -26.6068, 1.11", "-65.2758, 491.901, -31.4314, 0.55", "-65.3539, 492.175, -32.6974, 0.55", "-65.5673, 492.602, -34.9793, 0.55", "-65.8165, 492.855, -36.5065, 0.55", "-66.2027, 493.069, -38.1495, 0.83", "-67.0759, 493.376, -41.0184, 0.55", "-67.7733, 493.575, -43.0938, 1.11", "-70.0091, 494.2, -49.4839, 0.28", "-70.2635, 494.298, -50.2757, 0.55", "-71.1186, 494.741, -53.0314, 0.28", "-71.7254, 495.105, -55.1283, 1.11", "-72.6153, 495.702, -58.5369, 0.55", "-72.9228, 496.011, -60.1567, 1.11", "-73.4457, 496.815, -64.0525, 0.55", "-73.5292, 497.055, -65.1289, 0.55", "-73.6195, 497.699, -67.9043, 1.11", "-73.5996, 498.045, -69.3264, 1.11", "-73.3154, 499.327, -74.3646, 0.28", "-73.201, 499.706, -75.8441, 0.83", "-72.9915, 500.597, -79.4213, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-31.2819, 396.553, 0.0339752, 0.55", "-31.9158, 397.815, 0.259423, 0.55", "-32.709, 399.386, 0.472593, 0.28", "-33.8435, 401.608, 0.669438, 1.38", "-35.5272, 404.803, 0.808684, 0.28", "-36.9791, 407.5, 0.832987, 0.55", "-37.751, 408.958, 0.818969, 0.55", "-38.3978, 410.193, 0.771032, 0.83", "-39.3418, 411.975, 0.627767, 0.28", "-40.0798, 413.427, 0.399458, 0.83", "-40.5401, 414.482, 0.167599, 0.28", "-40.9716, 415.534, -0.0245554, 0.28", "-41.6345, 417.149, -0.31643, 0.83", "-42.3998, 419.07, -0.651295, 0.28", "-42.7686, 420.035, -0.81355, 0.55", "-43.608, 422.266, -1.1896, 0.55", "-44.2464, 423.929, -1.46773, 0.28", "-44.5817, 424.759, -1.61283, 0.28", "-45.164, 426.253, -1.86128, 1.11", "-45.7601, 428.163, -2.23519, 0.28", "-46.0906, 429.488, -2.571, 0.83", "-46.3238, 430.951, -3.02167, 0.28", "-46.3919, 432.67, -3.56526, 0.83", "-46.3622, 433.731, -3.88972, 0.83", "-46.1388, 436.533, -4.72761, 0.55", "-45.9488, 438.422, -5.25859, 0.55", "-45.8464, 439.628, -5.576, 0.55", "-45.7099, 441.815, -6.10518, 0.83", "-45.6525, 443.662, -6.48478, 0.55", "-45.7126, 446.366, -6.95637, 1.11", "-45.8345, 448.247, -7.21458, 0.55", "-45.9838, 450.013, -7.4429, 0.55", "-46.0766, 451.136, -7.62915, 0.83", "-46.1143, 451.999, -7.83625, 0.55", "-46.0571, 455.005, -8.67029, 0.83", "-45.9026, 456.23, -9.14633, 0.28", "-45.8524, 456.479, -9.26861, 0.28", "-45.569, 457.548, -9.85474, 0.55", "-44.7609, 460.282, -11.4365, 0.28", "-44.6243, 460.797, -11.7155, 0.55", "-43.9606, 463.461, -13.0781, 0.28", "-43.7395, 464.544, -13.5502, 0.83", "-43.5123, 466.423, -14.2847, 0.83", "-43.474, 467.215, -14.539, 0.28", "-43.4027, 469.588, -15.0684, 0.55", "-43.3895, 471.13, -15.3304, 0.28", "-43.4949, 473.131, -15.3842, 0.83", "-43.6776, 475.771, -15.2657, 0.28", "-43.7763, 476.912, -15.0996, 0.28", "-43.9488, 478.5, -14.7399, 0.55", "-44.2293, 480.93, -14.1668, 0.83", "-44.6846, 484.146, -13.4053, 0.28", "-44.8279, 485.504, -13.1257, 0.83", "-44.9497, 487.757, -12.8416, 0.28", "-44.8359, 490.728, -12.8395, 1.38", "-44.5628, 493.38, -13.1009, 0.28", "-44.1429, 495.703, -13.4781, 0.83", "-43.6057, 497.937, -13.99, 0.83", "-42.6784, 501.45, -14.8506, 0.55", "-41.7699, 505.04, -15.8391, 0.55", "-41.1989, 507.57, -16.4299, 0.83", "-40.9282, 509.516, -16.6525, 0.83", "-40.7838, 512.034, -16.7022, 0.55", "-40.9346, 513.696, -16.4597, 0.55", "-41.4144, 516.128, -15.698, 1.38", "-42.3064, 519.13, -14.4975, 0.83", "-43.5204, 522.57, -12.8218, 1.11", "-44.2264, 524.259, -11.8454, 1.11", "-45.8291, 527.66, -9.42922, 0.83", "-46.1712, 528.393, -8.82222, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-31.2819, 396.553, 0.0339752, 0.28", "-29.349, 396.367, 1.53716, 0.28", "-28.8569, 396.32, 1.91985, 0.83", "-27.3402, 396.174, 3.09931, 0.28", "-27.118, 396.153, 3.27213, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "18.2369, 456.4, -41.5208, 0.55", "19.0839, 458.304, -41.705, 0.55", "19.9797, 460.43, -41.9558, 0.55", "20.4558, 461.657, -42.112, 0.55", "21.1443, 463.25, -42.335, 0.28", "21.8512, 464.703, -42.5625, 0.83", "22.952, 466.914, -42.9164, 0.28", "23.3783, 467.802, -43.0653, 0.83", "23.9756, 469.172, -43.2935, 0.55", "24.8156, 471.098, -43.6567, 0.55", "25.2892, 472.242, -43.8854, 0.83", "25.8001, 473.696, -44.163, 0.28", "26.1931, 474.887, -44.3445, 0.83", "26.5996, 476.244, -44.5553, 0.83", "26.8515, 477.244, -44.7768, 0.28", "27.0531, 478.693, -45.1269, 0.83", "27.1014, 479.909, -45.4758, 0.83", "26.9637, 481.43, -46.1693, 0.83", "26.5867, 483.138, -47.1698, 1.11", "25.8803, 485.111, -48.7969, 0.55", "25.0721, 486.542, -50.2145, 0.55", "24.1147, 487.843, -51.6884, 1.11", "22.1572, 490.024, -54.5755, 0.28", "21.6054, 490.585, -55.4076, 0.28", "19.8044, 492.324, -58.14, 0.83", "18.7577, 493.324, -59.8333, 0.55", "18.4122, 493.661, -60.4763, 0.55", "17.3756, 494.76, -62.5209, 0.55", "16.6225, 495.596, -64.0198, 0.83", "15.161, 497.13, -66.9098, 0.55", "12.4378, 499.873, -72.1291, 1.94", "10.0626, 502.193, -76.9603, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "18.2369, 456.4, -41.5208, 0.55", "17.3833, 459.104, -41.796, 0.55", "16.6232, 461.608, -42.1285, 0.83", "16.2635, 462.827, -42.3812, 0.55", "15.6828, 465.532, -43.0471, 0.83", "14.9978, 469.432, -44.1101, 0.55", "14.6312, 471.127, -44.6423, 0.55", "14.2531, 472.717, -45.3507, 1.11", "13.7881, 474.943, -46.5334, 0.83", "13.1853, 477.711, -48.2151, 0.83", "12.357, 480.931, -50.4002, 0.83", "11.3743, 483.619, -52.3369, 0.55", "10.1233, 486.637, -54.5112, 0.28", "8.56092, 489.556, -57.3483, 0.83", "7.21038, 491.744, -59.7855, 0.55", "5.51345, 494.225, -62.8231, 1.38", "3.95999, 496.537, -65.7941, 0.55", "3.09235, 497.932, -67.546, 0.55", "-2.41473, 507.193, -78.726, 0.83", "-3.26213, 508.57, -80.3992, 0.55", "-3.44018, 508.904, -80.7864, 0.55", "-4.39195, 511.012, -83.0059, 1.38", "-4.9245, 512.675, -84.4129, 1.38", "-5.6476, 516.074, -85.9937, 0.28", "-5.75831, 517.569, -85.8333, 0.55", "-5.76975, 520.125, -85.3804, 0.28", "-5.76577, 522.877, -84.7752, 0.55", "-5.74859, 527.699, -83.3342, 0.55", "-5.73271, 530.65, -82.3329, 0.55", "-5.67509, 534.146, -81.0042, 0.55", "-5.44712, 537.005, -79.8014, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-20.4441, -137.252, 19.9154, 0.55", "-22.4112, -137.975, 21.0305, 0.55", "-23.9865, -138.553, 21.9432, 0.28", "-25.431, -139.083, 22.7803, 1.11", "-30.7129, -141.022, 25.8408, 0.28", "-31.4013, -141.274, 26.2397, 1.11", "-34.967, -142.583, 28.3059, 0.28", "-35.8835, -142.902, 28.9688, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-20.4441, -137.252, 19.9154, 0.83", "-22.1911, -139.027, 21.2848, 0.83", "-23.8817, -140.482, 22.5886, 0.83", "-25.4043, -141.461, 23.8773, 0.83", "-28.0793, -143.037, 26.1465, 0.83", "-29.8834, -144.251, 28.1242, 0.83", "-32.1512, -146.032, 31.083, 0.83", "-33.3276, -147.079, 32.854, 0.83", "-35.7447, -149.899, 37.2026, 1.11", "-36.1804, -150.639, 38.2721, 1.11", "-37.5583, -154.422, 43.1328, 1.11", "-38.1824, -157.062, 46.1321, 1.11", "-38.5376, -159.501, 48.569, 1.11", "-38.6894, -161.769, 50.6466, 1.38", "-38.6955, -165.434, 53.565, 0.55", "-38.7152, -166.985, 54.7201, 0.83", "-38.8211, -168.514, 55.6596, 0.83", "-38.8524, -169.817, 56.4793, 0.83", "-38.9182, -171.059, 57.3226, 0.83", "-39.0411, -173.462, 58.6692, 0.55", "-39.2247, -175.106, 59.2267, 0.55", "-39.3815, -176.023, 59.4283, 1.11", "-39.7194, -177.732, 59.624, 0.28", "-39.9386, -178.656, 59.6785, 1.11", "-40.5827, -180.685, 59.6036, 0.55", "-41.314, -182.657, 59.2067, 0.55", "-42.3442, -184.857, 58.5912, 0.28", "-42.7077, -185.556, 58.3283, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-113.405, -131.578, -21.278, 1.11", "-116.064, -131.384, -21.8172, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-113.405, -131.578, -21.278, 0.28", "-114.048, -134.126, -22.157, 0.28", "-114.17, -134.61, -22.3237, 0.83", "-114.77, -136.991, -23.145, 0.28", "-114.94, -137.662, -23.3765, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "10.0896, -201.01, -38.2029, 0.55", "9.40036, -202.61, -36.1977, 0.55", "8.83093, -203.73, -34.8778, 0.55", "8.003, -205.705, -32.102, 0.28", "7.78897, -206.324, -31.2969, 0.55", "7.4583, -207.277, -30.0573, 1.11", "7.03385, -208.529, -28.4751, 0.28", "6.67309, -209.46, -27.2106, 0.55", "5.487, -212.031, -23.7625, 0.28", "4.39891, -214.175, -20.9666, 0.83", "3.36418, -216.358, -18.1009, 0.28", "3.08925, -216.989, -17.2738, 0.83", "2.38867, -218.581, -15.1667, 0.83", "1.55225, -220.171, -13.0676, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "10.0896, -201.01, -38.2029, 0.28", "10.2475, -204.865, -37.9058, 0.28", "10.349, -206.218, -37.7437, 0.55", "10.5671, -208.491, -37.4323, 0.28", "10.8633, -211.226, -37.042, 1.11", "11.2495, -214.478, -36.5781, 0.28", "11.3706, -215.341, -36.4658, 0.55", "11.5947, -216.68, -36.1665, 0.28", "11.7569, -217.515, -35.9557, 0.55", "11.941, -218.58, -35.6258, 0.28", "12.0221, -219.172, -35.4569, 0.55", "12.1624, -221.125, -35.1461, 0.28", "12.2531, -222.854, -34.9604, 1.11", "12.4586, -226.502, -34.3563, 0.28", "12.6138, -228.611, -33.955, 1.11", "12.7328, -230.29, -33.6229, 1.11", "12.9417, -233.409, -32.9896, 0.28", "13.0718, -235.385, -32.5832, 0.83", "13.5031, -239.586, -31.8615, 0.55", "13.7661, -241.916, -31.6413, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "71.4144, -197.836, -13.3082, 0.28", "74.0791, -199.161, -13.9952, 0.28", "75.0109, -199.614, -14.2426, 0.83", "76.4649, -200.341, -14.6465, 0.28", "78.4873, -201.387, -15.2296, 0.83", "80.4949, -202.499, -15.8188, 0.28", "81.9766, -203.315, -16.2728, 0.55", "82.7684, -203.711, -16.5282, 0.28", "84.4824, -204.498, -17.1391, 0.55", "85.6042, -204.999, -17.5678, 0.28", "86.8598, -205.533, -18.0633, 0.55", "88.4714, -206.145, -18.7437, 0.55", "90.0391, -206.737, -19.5209, 0.55", "92.1089, -207.577, -20.6531, 0.83", "93.285, -208.127, -21.4537, 0.28", "94.3413, -208.735, -22.2746, 0.83", "95.5044, -209.381, -22.9381, 1.38", "98.2177, -210.922, -24.0763, 0.28", "99.7132, -211.873, -24.6535, 0.83", "102.045, -213.4, -25.4943, 0.28", "103.549, -214.364, -25.9695, 1.11", "109.468, -218.018, -27.3849, 0.28", "110.248, -218.481, -27.5199, 0.55", "114.248, -220.757, -28.0351, 0.28", "116.921, -222.332, -28.3749, 0.28", "118.07, -223.087, -28.5114, 0.55", "119.799, -224.332, -28.8798, 0.28", "120.68, -225.18, -29.2866, 0.28", "121.815, -226.301, -29.7405, 0.55", "123.29, -227.659, -29.9658, 0.55", "124.12, -228.85, -30.1136, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "71.4144, -197.836, -13.3082, 0.55", "69.5591, -198.988, -12.3445, 0.55", "68.7902, -199.465, -11.9451, 0.55", "67.8424, -200.053, -11.4527, 0.28", "66.5887, -200.832, -10.8015, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-43.2795, 459.049, 25.8635, 0.83", "-43.7539, 461.924, 27.0304, 0.83", "-44.4145, 466.362, 28.8198, 0.83", "-44.8404, 469.394, 30.0713, 0.83", "-45.9135, 475.678, 32.5558, 0.83", "-46.0288, 476.404, 32.7875, 1.11", "-46.3275, 478.299, 33.2694, 0.55", "-46.5315, 479.421, 33.4807, 0.83", "-46.1621, 480.322, 31.2237, 0.28", "-45.5132, 481.198, 28.8891, 0.55", "-43.0299, 484.043, 21.7295, 0.28", "-42.2752, 484.977, 19.691, 0.83", "-41.651, 485.752, 18.1513, 0.83", "-37.4809, 491.069, 8.93441, 0.55", "-36.2291, 492.672, 6.55598, 0.55", "-35.106, 494.292, 4.9835, 1.11", "-32.5434, 500.09, 3.06506, 0.55", "-32.2754, 500.912, 3.01898, 0.83", "-32.045, 502.237, 3.34255, 0.28", "-32.0287, 502.945, 3.65885, 0.55", "-32.0849, 504.08, 3.97727, 0.28", "-32.1541, 505.654, 4.10926, 0.83", "-32.0382, 507.305, 4.00507, 0.28", "-31.9706, 508.4, 3.91288, 0.83", "-31.6703, 511.917, 3.26972, 0.55", "-31.3221, 515.105, 2.47426, 0.55", "-31.0531, 517.463, 1.786, 0.55", "-30.6665, 520.752, 0.803187, 0.55", "-30.4126, 522.96, 0.0715303, 0.55", "-29.9298, 527.739, -1.48682, 0.55", "-29.7544, 529.224, -1.97526, 0.28", "-29.5707, 530.541, -2.44548, 0.55", "-29.361, 532.365, -3.13004, 0.28", "-29.1616, 535.19, -4.31675, 0.55", "-29.0922, 536.36, -4.7781, 0.55", "-28.9465, 538.578, -5.52159, 0.28", "-28.6897, 540.672, -6.33172, 0.28", "-28.4508, 541.746, -6.74928, 0.55", "-27.4358, 544.127, -8.17189, 0.28", "-26.579, 545.358, -9.15689, 0.83", "-25.5814, 546.657, -10.2817, 0.83", "-23.6157, 548.932, -12.3987, 0.55", "-21.9727, 550.588, -14.1073, 0.55", "-16.7138, 555.382, -19.4947, 0.28", "-13.0383, 558.339, -23.1243, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-43.2795, 459.049, 25.8635, 0.55", "-44.9458, 461.491, 25.6629, 0.55", "-47.1387, 464.704, 25.399, 0.55", "-48.6813, 466.965, 25.2133, 0.55", "-50.0205, 468.927, 25.0521, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-46.1712, 528.393, -8.82222, 0.28", "-45.3397, 528.78, -9.60401, 0.28", "-45.1085, 528.888, -9.82146, 0.55", "-42.8336, 529.947, -11.9603, 0.28", "-42.5755, 530.067, -12.2031, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-46.1712, 528.393, -8.82222, 0.28", "-47.6572, 530.155, -9.90909, 0.28", "-48.5758, 531.244, -10.5809, 0.83", "-49.2626, 532.058, -11.0832, 0.83", "-49.6972, 532.573, -11.4011, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "10.0626, 502.193, -76.9603, 0.55", "7.55754, 503.184, -76.8798, 0.55", "4.56497, 504.388, -76.9867, 0.55", "2.33056, 505.287, -77.0666, 0.55", "-0.264003, 506.331, -77.1593, 0.28", "-2.61074, 507.275, -77.2432, 0.83", "-4.41921, 508.003, -77.3078, 0.83", "-6.35031, 508.878, -77.5623, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "10.0626, 502.193, -76.9603, 0.55", "9.2578, 504.256, -77.4023, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-116.064, -131.384, -21.8172, 0.28", "-117.541, -131.373, -22.6613, 0.28", "-119.015, -131.282, -23.511, 0.55", "-120.666, -131.149, -24.4511, 0.28", "-121.604, -131.079, -24.9448, 1.11", "-123.057, -130.955, -25.6626, 0.28", "-123.424, -130.923, -25.8621, 0.55", "-125.46, -130.766, -27.0431, 0.28", "-126.039, -130.712, -27.3885, 1.11", "-127.348, -130.615, -28.1675, 0.28", "-128.128, -130.561, -28.62, 1.11", "-130.01, -130.421, -29.6251, 1.11", "-131.288, -130.382, -30.3694, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-116.064, -131.384, -21.8172, 0.83", "-117.299, -132.915, -22.7117, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "1.55225, -220.171, -13.0676, 0.83", "0.861487, -221.018, -13.647, 0.83", "-0.295207, -222.435, -14.6171, 0.28", "-1.26539, -223.624, -15.4309, 1.11", "-4.00685, -226.985, -17.7303, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.55225, -220.171, -13.0676, 1.11", "0.118302, -218.631, -11.5918, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-49.6972, 532.573, -11.4011, 0.55", "-48.3673, 533.468, -12.6657, 0.55", "-47.0087, 534.305, -13.7302, 0.28", "-46.6368, 534.504, -14.1197, 0.55", "-44.0122, 535.901, -16.8691, 0.28", "-42.7813, 536.556, -18.1584, 0.55", "-41.1079, 537.447, -19.9112, 0.28", "-39.9472, 538.083, -21.4144, 0.55", "-36.564, 540.013, -26.4915, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-49.6972, 532.573, -11.4011, 0.28", "-50.6742, 532.737, -11.5761, 0.28", "-52.1822, 532.99, -11.8462, 0.55", "-53.4619, 533.205, -12.0755, 0.55", "-54.8122, 533.431, -12.3173, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-6.35031, 508.878, -77.5623, 0.55", "-6.834, 510.181, -77.1455, 0.55", "-7.30153, 511.439, -76.7427, 0.55", "-7.72651, 512.583, -76.3765, 0.83", "-8.24224, 513.971, -75.9322, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-6.35031, 508.878, -77.5623, 0.28", "-9.02784, 510.15, -77.64, 0.28", "-9.7626, 510.499, -77.6613, 0.28", "-11.2483, 511.205, -77.7045, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-4.00685, -226.985, -17.7303, 1.11", "-2.87123, -229.317, -16.0814, 1.11", "-1.70056, -231.694, -14.2544, 0.28", "-0.93522, -233.348, -12.941, 1.11", "1.14344, -237.903, -8.92155, 0.28", "1.63622, -239.037, -7.88719, 1.94", "2.94383, -242.362, -5.01075, 1.11", "3.19827, -243.101, -4.35652, 0.28", "3.44886, -243.956, -3.59391, 0.83", "3.92353, -246.272, -1.76802, 0.28", "3.98318, -247.376, -1.15293, 1.11", "4.01576, -250.341, 0.223463, 0.28", "3.88206, -252.729, 1.10668, 0.28", "3.83708, -253.983, 1.52988, 1.11", "3.83708, -253.983, 1.52988, 1.11", "3.73748, -255.558, 1.86489, 0.55", "3.69258, -256.247, 2.0365, 1.38", "3.48764, -258.859, 2.94567, 0.28", "3.47956, -259.138, 3.06272, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-4.00685, -226.985, -17.7303, 0.55", "-6.24131, -226.87, -15.6634, 0.55", "-7.62588, -226.798, -14.3827, 0.55", "-8.81206, -226.737, -13.2854, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-54.8122, 533.431, -12.3173, 0.55", "-55.4733, 534.795, -12.1953, 0.55", "-56.5148, 537.294, -11.8338, 0.55", "-57.0438, 538.97, -11.5792, 0.55", "-57.6235, 541.043, -11.3282, 0.55", "-58.1376, 542.955, -11.0267, 0.28", "-58.3438, 543.829, -10.9342, 0.83", "-58.7793, 546.324, -10.7575, 0.83", "-58.9947, 548.468, -10.6062, 0.83", "-59.0689, 549.567, -10.5724, 0.55", "-59.0373, 552.368, -10.5299, 0.83", "-58.7318, 555.536, -10.6538, 0.28", "-58.5526, 557.052, -10.8567, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-54.8122, 533.431, -12.3173, 0.55", "-58.6778, 532.051, -11.3526, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "axon_0", "dend_57", "dend_30", "dend_12", "dend_1", "axon_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_2", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_47", "dend_47", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L4_DBC_972df9520e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_29
create dend_57
public dend_57
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_12
create dend_28
public dend_28
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_46
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_29, dend_0, axon_0, dend_57, dend_30, dend_12, dend_1, axon_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.4999993435552117)
    connect dend_0(0), soma_0(0.4999993435552117)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.03775, -11.4909, 0.0, 3.43439 ) }
    soma_0 { pt3dadd( 1.89325, -10.3873, 0.0, 4.10946 ) }
    soma_0 { pt3dadd( 1.74876, -9.28361, 0.0, 5.49512 ) }
    soma_0 { pt3dadd( 1.60426, -8.17996, 0.0, 6.92062 ) }
    soma_0 { pt3dadd( 1.45977, -7.07631, 0.0, 8.33776 ) }
    soma_0 { pt3dadd( 1.31528, -5.97266, 0.0, 9.37588 ) }
    soma_0 { pt3dadd( 1.17078, -4.86901, 0.0, 10.388 ) }
    soma_0 { pt3dadd( 1.02629, -3.76536, 0.0, 11.4001 ) }
    soma_0 { pt3dadd( 0.881794, -2.66171, 0.0, 12.0337 ) }
    soma_0 { pt3dadd( 0.7373, -1.55806, 0.0, 11.8609 ) }
    soma_0 { pt3dadd( 0.592806, -0.454415, 0.0, 11.675 ) }
    soma_0 { pt3dadd( 0.448312, 0.649234, 0.0, 11.6509 ) }
    soma_0 { pt3dadd( 0.303818, 1.75288, 0.0, 11.6321 ) }
    soma_0 { pt3dadd( 0.159324, 2.85653, 0.0, 10.7321 ) }
    soma_0 { pt3dadd( 0.0148298, 3.96018, 0.0, 9.70998 ) }
    soma_0 { pt3dadd( -0.129664, 5.06383, 0.0, 8.74071 ) }
    soma_0 { pt3dadd( -0.274158, 6.16748, 0.0, 7.95018 ) }
    soma_0 { pt3dadd( -0.418652, 7.27113, 0.0, 6.7513 ) }
    soma_0 { pt3dadd( -0.563146, 8.37478, 0.0, 5.22686 ) }
    soma_0 { pt3dadd( -0.70764, 9.47842, 0.0, 3.48033 ) }
    soma_0 { pt3dadd( -0.852134, 10.5821, 0.0, 2.02048 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.596014, -10.8059, -2.34, 2.22 ) }
    dend_29 { pt3dadd( -1.05305, -14.5216, -0.728107, 2.22 ) }
    dend_29 { pt3dadd( -1.45303, -18.313, 0.786446, 2.49 ) }
    dend_29 { pt3dadd( -2.05337, -24.8989, 3.19693, 2.49 ) }
    dend_29 { pt3dadd( -2.40463, -31.2629, 5.1794, 2.49 ) }
    dend_29 { pt3dadd( -2.50333, -34.151, 5.97217, 1.94 ) }
    dend_29 { pt3dadd( -2.54752, -37.2637, 6.73427, 1.38 ) }
    dend_29 { pt3dadd( -2.45182, -41.0499, 7.54301, 1.11 ) }
    dend_29 { pt3dadd( -2.32614, -43.6036, 7.96198, 0.83 ) }
    dend_29 { pt3dadd( -1.98305, -50.0101, 8.59206, 1.11 ) }
    dend_29 { pt3dadd( -1.87305, -52.595, 8.62829, 1.11 ) }
    dend_29 { pt3dadd( -1.7355, -55.6886, 8.58608, 1.38 ) }
    dend_29 { pt3dadd( -1.58016, -58.6492, 8.49362, 0.83 ) }
    dend_29 { pt3dadd( -1.41646, -61.1687, 8.42967, 1.66 ) }
    dend_29 { pt3dadd( -1.22363, -63.553, 8.38935, 1.11 ) }
    dend_29 { pt3dadd( -0.758956, -68.7157, 8.24841, 1.66 ) }
    dend_29 { pt3dadd( -0.479361, -71.5451, 8.16393, 1.38 ) }
    dend_29 { pt3dadd( -0.078522, -75.1843, 8.04516, 1.94 ) }
    dend_29 { pt3dadd( 0.446667, -79.0215, 7.91052, 1.38 ) }
    dend_29 { pt3dadd( 1.16965, -83.0087, 7.76466, 1.38 ) }
    dend_29 { pt3dadd( 2.26947, -87.9269, 7.58508, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.59602, 8.76407, -0.86, 2.22 ) }
    dend_0 { pt3dadd( -0.964007, 13.5024, -0.830753, 1.94 ) }
    dend_0 { pt3dadd( -0.606129, 17.2074, -0.704495, 1.94 ) }
    dend_0 { pt3dadd( -0.243563, 22.7533, -0.326602, 1.94 ) }
    dend_0 { pt3dadd( -0.147634, 24.7756, -0.161191, 1.38 ) }
    dend_0 { pt3dadd( 0.148658, 29.3466, 0.194507, 2.22 ) }
    dend_0 { pt3dadd( 0.439461, 33.8328, 0.543616, 1.94 ) }
    dend_0 { pt3dadd( 0.817866, 39.8995, 1.04201, 1.94 ) }
    dend_0 { pt3dadd( 1.03553, 44.2706, 1.50212, 1.94 ) }
    dend_0 { pt3dadd( 1.12342, 48.5009, 2.09252, 1.94 ) }
    dend_0 { pt3dadd( 1.18944, 54.2315, 2.90007, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 53/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.852134, 10.5821, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -2.79938, 25.4552, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.74662, 40.3282, 0.0, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_29 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 2.26947, -87.9269, 7.58508, 0.55 ) }
    dend_57 { pt3dadd( 2.94086, -89.1177, 8.00263, 0.55 ) }
    dend_57 { pt3dadd( 3.60341, -90.136, 8.52753, 0.55 ) }
    dend_57 { pt3dadd( 4.56024, -91.5203, 9.46866, 0.28 ) }
    dend_57 { pt3dadd( 5.67786, -92.8398, 10.479, 0.55 ) }
    dend_57 { pt3dadd( 7.03502, -94.2795, 11.6046, 0.28 ) }
    dend_57 { pt3dadd( 8.17642, -95.4, 12.6043, 1.11 ) }
    dend_57 { pt3dadd( 9.99267, -97.0796, 14.2881, 0.28 ) }
    dend_57 { pt3dadd( 11.1606, -98.0881, 15.5716, 0.83 ) }
    dend_57 { pt3dadd( 12.8823, -99.4666, 17.6082, 0.83 ) }
    dend_57 { pt3dadd( 13.9054, -100.265, 18.8776, 0.83 ) }
    dend_57 { pt3dadd( 15.6295, -101.637, 21.0495, 0.83 ) }
    dend_57 { pt3dadd( 16.5258, -102.344, 22.1874, 1.11 ) }
    dend_57 { pt3dadd( 19.2878, -104.658, 25.4856, 0.28 ) }
    dend_57 { pt3dadd( 19.906, -105.215, 26.14, 0.28 ) }
    dend_57 { pt3dadd( 20.4458, -105.724, 26.6581, 0.55 ) }
    dend_57 { pt3dadd( 21.2582, -106.46, 27.2805, 0.55 ) }
    dend_57 { pt3dadd( 22.997, -107.955, 28.2186, 0.55 ) }
    dend_57 { pt3dadd( 24.6567, -109.257, 28.8826, 0.55 ) }
    dend_57 { pt3dadd( 26.4914, -110.648, 29.3478, 0.83 ) }
    dend_57 { pt3dadd( 28.2176, -111.836, 29.7622, 1.11 ) }
    dend_57 { pt3dadd( 29.7253, -112.848, 30.1284, 0.55 ) }
    dend_57 { pt3dadd( 30.5457, -113.413, 30.338, 1.38 ) }
    dend_57 { pt3dadd( 31.6161, -114.146, 30.6279, 0.55 ) }
    dend_57 { pt3dadd( 32.8291, -114.836, 30.9495, 1.11 ) }
    dend_57 { pt3dadd( 35.4337, -116.187, 31.5722, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 82/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 2.26947, -87.9269, 7.58508, 1.38 ) }
    dend_30 { pt3dadd( 2.07499, -88.938, 7.42109, 1.38 ) }
    dend_30 { pt3dadd( 1.44804, -91.9047, 7.2102, 1.38 ) }
    dend_30 { pt3dadd( 1.05733, -93.7535, 7.07878, 1.11 ) }
    dend_30 { pt3dadd( 0.208172, -97.7716, 6.79314, 1.66 ) }
    dend_30 { pt3dadd( -0.332959, -100.332, 6.61112, 2.22 ) }
    dend_30 { pt3dadd( -0.608892, -101.637, 6.5183, 2.22 ) }
    dend_30 { pt3dadd( -1.30839, -105.385, 6.15954, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 90/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.18944, 54.2315, 2.90007, 1.38 ) }
    dend_12 { pt3dadd( 1.12357, 56.865, 2.88257, 1.38 ) }
    dend_12 { pt3dadd( 1.14948, 58.6498, 2.86471, 1.38 ) }
    dend_12 { pt3dadd( 1.23858, 61.2578, 2.82749, 1.11 ) }
    dend_12 { pt3dadd( 1.44565, 65.2696, 2.83479, 1.38 ) }
    dend_12 { pt3dadd( 1.5418, 67.2736, 2.83181, 1.38 ) }
    dend_12 { pt3dadd( 1.62369, 70.7744, 2.83175, 1.38 ) }
    dend_12 { pt3dadd( 1.67084, 75.2052, 2.82513, 1.38 ) }
    dend_12 { pt3dadd( 1.62068, 78.4345, 2.80983, 1.38 ) }
    dend_12 { pt3dadd( 1.53935, 81.4408, 2.79717, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_12 { pt3dadd( 1.36865, 84.2493, 2.78008, 1.38 ) }
    dend_12 { pt3dadd( 0.848153, 88.9388, 2.72959, 1.66 ) }
    dend_12 { pt3dadd( 0.425236, 91.6332, 2.68989, 1.38 ) }
    dend_12 { pt3dadd( -0.103616, 94.6988, 2.54421, 1.38 ) }
    dend_12 { pt3dadd( -0.699931, 98.2199, 2.26173, 1.38 ) }
    dend_12 { pt3dadd( -1.10579, 101.029, 1.9572, 1.38 ) }
    dend_12 { pt3dadd( -1.25813, 102.519, 1.78756, 1.38 ) }
    dend_12 { pt3dadd( -1.40499, 104.824, 1.51797, 1.11 ) }
    dend_12 { pt3dadd( -1.55175, 108.31, 1.13726, 1.11 ) }
    dend_12 { pt3dadd( -1.53495, 111.982, 0.781436, 1.11 ) }
    dend_12 { pt3dadd( -1.44546, 115.688, 0.480657, 1.38 ) }
    dend_12 { pt3dadd( -1.35486, 118.178, 0.354706, 1.11 ) }
    dend_12 { pt3dadd( -1.29401, 120.569, 0.303922, 1.38 ) }
    dend_12 { pt3dadd( -1.27428, 122.109, 0.353951, 1.38 ) }
    dend_12 { pt3dadd( -1.26772, 124.573, 0.646997, 1.38 ) }
    dend_12 { pt3dadd( -1.32713, 128.101, 1.17976, 1.94 ) }
    dend_12 { pt3dadd( -1.34947, 129.967, 1.49582, 1.66 ) }
    dend_12 { pt3dadd( -1.35173, 130.751, 1.62453, 1.66 ) }
    dend_12 { pt3dadd( -1.35327, 133.197, 1.98902, 1.66 ) }
    dend_12 { pt3dadd( -1.35542, 137.055, 2.52358, 1.66 ) }
    dend_12 { pt3dadd( -1.40082, 139.068, 2.77011, 1.38 ) }
    dend_12 { pt3dadd( -1.50839, 142.246, 3.09259, 1.66 ) }
    dend_12 { pt3dadd( -1.5705, 145.047, 3.2964, 1.11 ) }
    dend_12 { pt3dadd( -1.616, 148.151, 3.48304, 1.11 ) }
    dend_12 { pt3dadd( -1.64656, 149.879, 3.54404, 1.11 ) }
    dend_12 { pt3dadd( -1.65547, 151.787, 3.58959, 1.11 ) }
    dend_12 { pt3dadd( -1.62484, 153.215, 3.64426, 1.11 ) }
    dend_12 { pt3dadd( -1.4626, 156.246, 3.8035, 1.38 ) }
    dend_12 { pt3dadd( -1.27715, 158.556, 3.94789, 1.11 ) }
    dend_12 { pt3dadd( -1.12292, 160.285, 4.05346, 1.38 ) }
    dend_12 { pt3dadd( -0.947481, 162.251, 4.16233, 1.38 ) }
    dend_12 { pt3dadd( -0.78831, 164.491, 4.26125, 0.83 ) }
    dend_12 { pt3dadd( -0.67057, 167.205, 4.34508, 1.38 ) }
    dend_12 { pt3dadd( -0.655637, 169.373, 4.37377, 0.83 ) }
    dend_12 { pt3dadd( -0.687968, 171.574, 4.3624, 1.38 ) }
    dend_12 { pt3dadd( -0.781215, 173.31, 4.34371, 1.38 ) }
    dend_12 { pt3dadd( -1.00845, 176.158, 4.27745, 1.38 ) }
    dend_12 { pt3dadd( -1.09531, 177.414, 4.24154, 1.38 ) }
    dend_12 { pt3dadd( -1.17723, 179.364, 4.1819, 1.11 ) }
    dend_12 { pt3dadd( -1.17633, 181.787, 4.11173, 1.11 ) }
    dend_12 { pt3dadd( -1.04265, 185.286, 4.01385, 1.66 ) }
    dend_12 { pt3dadd( -0.847047, 187.535, 3.95657, 1.11 ) }
    dend_12 { pt3dadd( -0.751237, 188.424, 3.99102, 1.11 ) }
    dend_12 { pt3dadd( -0.639272, 189.97, 4.12287, 1.38 ) }
    dend_12 { pt3dadd( -0.547457, 191.924, 4.37494, 1.38 ) }
    dend_12 { pt3dadd( -0.528526, 194.129, 4.7365, 1.94 ) }
    dend_12 { pt3dadd( -0.621309, 196.415, 5.16824, 1.94 ) }
    dend_12 { pt3dadd( -0.959895, 200.145, 5.87878, 1.11 ) }
    dend_12 { pt3dadd( -1.24933, 202.224, 6.22929, 1.11 ) }
    dend_12 { pt3dadd( -1.60914, 204.194, 6.51926, 1.38 ) }
    dend_12 { pt3dadd( -2.12234, 206.565, 6.79683, 1.38 ) }
    dend_12 { pt3dadd( -2.55596, 208.548, 6.95813, 1.11 ) }
    dend_12 { pt3dadd( -2.95975, 210.728, 7.04159, 0.83 ) }
    dend_12 { pt3dadd( -3.32906, 213.219, 6.99705, 0.83 ) }
    dend_12 { pt3dadd( -3.52698, 214.656, 6.97191, 0.83 ) }
    dend_12 { pt3dadd( -3.87593, 217.152, 6.92382, 1.11 ) }
    dend_12 { pt3dadd( -4.12557, 219.344, 6.86778, 1.11 ) }
    dend_12 { pt3dadd( -4.3769, 221.599, 6.79103, 1.38 ) }
    dend_12 { pt3dadd( -4.76581, 225.03, 6.65609, 1.38 ) }
    dend_12 { pt3dadd( -4.97491, 227.131, 6.56948, 1.11 ) }
    dend_12 { pt3dadd( -5.20773, 229.623, 6.4627, 1.38 ) }
    dend_12 { pt3dadd( -5.42049, 231.668, 6.33797, 0.83 ) }
    dend_12 { pt3dadd( -5.76295, 234.4, 6.14257, 0.83 ) }
    dend_12 { pt3dadd( -6.01572, 236.567, 5.96267, 1.38 ) }
    dend_12 { pt3dadd( -6.0717, 237.541, 5.88021, 1.38 ) }
    dend_12 { pt3dadd( -6.14701, 239.326, 5.71919, 1.11 ) }
    dend_12 { pt3dadd( -6.27521, 242.276, 5.43458, 1.38 ) }
    dend_12 { pt3dadd( -6.32954, 244.072, 5.25931, 1.11 ) }
    dend_12 { pt3dadd( -6.3036, 245.835, 5.07929, 1.11 ) }
    dend_12 { pt3dadd( -6.25693, 247.6, 4.90078, 1.11 ) }
    dend_12 { pt3dadd( -6.20386, 249.801, 4.6767, 1.11 ) }
    dend_12 { pt3dadd( -6.08591, 253.586, 4.27691, 1.11 ) }
    dend_12 { pt3dadd( -5.98226, 255.807, 4.05345, 1.11 ) }
    dend_12 { pt3dadd( -5.90124, 258.26, 3.86311, 1.38 ) }
    dend_12 { pt3dadd( -5.87365, 260.778, 3.73945, 1.38 ) }
    dend_12 { pt3dadd( -5.89557, 263.135, 3.68038, 0.83 ) }
    dend_12 { pt3dadd( -5.90692, 264.947, 3.69468, 1.38 ) }
    dend_12 { pt3dadd( -5.90847, 266.658, 3.77276, 1.38 ) }
    dend_12 { pt3dadd( -5.93132, 268.983, 3.94384, 1.11 ) }
    dend_12 { pt3dadd( -5.9365, 270.527, 4.09439, 0.55 ) }
    dend_12 { pt3dadd( -5.85573, 272.064, 4.26532, 1.11 ) }
    dend_12 { pt3dadd( -5.76398, 273.518, 4.42577, 1.11 ) }
    dend_12 { pt3dadd( -5.65236, 275.071, 4.56777, 0.83 ) }
    dend_12 { pt3dadd( -5.51362, 276.712, 4.65384, 0.83 ) }
    dend_12 { pt3dadd( -5.38011, 278.203, 4.66849, 0.83 ) }
    dend_12 { pt3dadd( -5.22542, 280.92, 4.68244, 1.11 ) }
    dend_12 { pt3dadd( -5.11681, 282.693, 4.65931, 1.66 ) }
    dend_12 { pt3dadd( -5.07679, 284.399, 4.60545, 1.66 ) }
    dend_12 { pt3dadd( -5.12608, 286.61, 4.50968, 0.83 ) }
    dend_12 { pt3dadd( -5.18326, 288.387, 4.41513, 0.83 ) }
    dend_12 { pt3dadd( -5.2313, 290.893, 4.27613, 1.11 ) }
    dend_12 { pt3dadd( -5.33201, 293.877, 4.09531, 0.83 ) }
    dend_12 { pt3dadd( -5.42082, 297.209, 3.89936, 0.83 ) }
    dend_12 { pt3dadd( -5.46985, 299.116, 3.78637, 0.83 ) }
    dend_12 { pt3dadd( -5.58779, 303.058, 3.5542, 1.38 ) }
    dend_12 { pt3dadd( -5.75163, 306.997, 3.33131, 1.38 ) }
    dend_12 { pt3dadd( -5.83907, 308.752, 3.24208, 1.11 ) }
    dend_12 { pt3dadd( -6.07731, 311.476, 3.12499, 1.11 ) }
    dend_12 { pt3dadd( -6.24987, 313.205, 3.0464, 0.83 ) }
    dend_12 { pt3dadd( -6.43119, 314.421, 2.98556, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( -6.88001, 316.458, 2.97248, 1.38 ) }
    dend_12 { pt3dadd( -7.12909, 317.519, 3.05107, 1.38 ) }
    dend_12 { pt3dadd( -7.58244, 320.001, 3.37729, 0.83 ) }
    dend_12 { pt3dadd( -7.80573, 321.697, 3.67849, 0.83 ) }
    dend_12 { pt3dadd( -8.04589, 324.403, 4.06294, 0.83 ) }
    dend_12 { pt3dadd( -8.18376, 326.933, 4.461, 0.83 ) }
    dend_12 { pt3dadd( -8.25108, 330.179, 5.02894, 1.38 ) }
    dend_12 { pt3dadd( -8.26249, 332.383, 5.44023, 1.38 ) }
    dend_12 { pt3dadd( -8.16011, 333.916, 5.76064, 1.38 ) }
    dend_12 { pt3dadd( -7.66703, 337.466, 6.50636, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.18944, 54.2315, 2.90007, 1.11 ) }
    dend_1 { pt3dadd( 2.4015, 58.4624, -1.66028, 1.11 ) }
    dend_1 { pt3dadd( 2.76455, 59.7702, -2.87315, 1.11 ) }
    dend_1 { pt3dadd( 3.32484, 62.023, -5.01897, 1.11 ) }
    dend_1 { pt3dadd( 4.76646, 68.4837, -10.9612, 1.11 ) }
    dend_1 { pt3dadd( 5.21775, 70.8798, -12.918, 1.11 ) }
    dend_1 { pt3dadd( 5.74411, 74.2464, -15.4358, 0.83 ) }
    dend_1 { pt3dadd( 5.94556, 76.2614, -16.7255, 0.83 ) }
    dend_1 { pt3dadd( 6.47641, 82.0207, -20.0202, 1.11 ) }
    dend_1 { pt3dadd( 6.67562, 84.6558, -21.2436, 1.11 ) }
    dend_1 { pt3dadd( 6.68892, 88.8013, -22.5651, 1.11 ) }
    dend_1 { pt3dadd( 6.45822, 92.6022, -23.4601, 1.11 ) }
    dend_1 { pt3dadd( 6.18575, 95.2535, -23.8137, 1.38 ) }
    dend_1 { pt3dadd( 5.98751, 97.1137, -23.7992, 1.38 ) }
    dend_1 { pt3dadd( 5.78706, 99.2708, -23.5442, 1.11 ) }
    dend_1 { pt3dadd( 5.42084, 103.381, -23.0302, 1.11 ) }
    dend_1 { pt3dadd( 5.11071, 107.725, -22.5931, 0.83 ) }
    dend_1 { pt3dadd( 5.07185, 108.412, -22.5021, 0.83 ) }
    dend_1 { pt3dadd( 4.93195, 112.602, -22.0759, 1.66 ) }
    dend_1 { pt3dadd( 4.82502, 116.192, -21.9369, 0.83 ) }
    dend_1 { pt3dadd( 4.81072, 116.882, -21.9587, 0.83 ) }
    dend_1 { pt3dadd( 4.82298, 119.808, -22.2348, 1.66 ) }
    dend_1 { pt3dadd( 4.82411, 121.647, -22.4987, 1.66 ) }
    dend_1 { pt3dadd( 4.79184, 123.975, -22.7571, 1.11 ) }
    dend_1 { pt3dadd( 4.67332, 126.719, -23.0295, 1.11 ) }
    dend_1 { pt3dadd( 4.50436, 129.665, -23.2083, 1.11 ) }
    dend_1 { pt3dadd( 4.34349, 133.179, -23.4459, 1.66 ) }
    dend_1 { pt3dadd( 4.20517, 136.499, -23.6212, 1.66 ) }
    dend_1 { pt3dadd( 4.04361, 139.968, -23.8863, 0.83 ) }
    dend_1 { pt3dadd( 3.92475, 143.02, -24.2502, 0.83 ) }
    dend_1 { pt3dadd( 3.89683, 145.175, -24.605, 0.83 ) }
    dend_1 { pt3dadd( 3.94946, 148.265, -25.181, 1.66 ) }
    dend_1 { pt3dadd( 4.04965, 151.223, -25.783, 0.55 ) }
    dend_1 { pt3dadd( 4.15441, 154.108, -26.3604, 0.55 ) }
    dend_1 { pt3dadd( 4.33622, 157.33, -26.9253, 1.38 ) }
    dend_1 { pt3dadd( 4.54696, 160.014, -27.2579, 1.94 ) }
    dend_1 { pt3dadd( 4.78796, 163.254, -27.5338, 0.83 ) }
    dend_1 { pt3dadd( 4.89087, 165.057, -27.6149, 0.83 ) }
    dend_1 { pt3dadd( 4.99821, 168.103, -27.6926, 1.94 ) }
    dend_1 { pt3dadd( 5.06727, 171.935, -27.6165, 1.94 ) }
    dend_1 { pt3dadd( 5.05399, 174.431, -27.5399, 1.11 ) }
    dend_1 { pt3dadd( 5.02233, 177.364, -27.2674, 1.11 ) }
    dend_1 { pt3dadd( 4.96174, 180.019, -26.9252, 1.11 ) }
    dend_1 { pt3dadd( 4.92098, 181.55, -26.676, 1.11 ) }
    dend_1 { pt3dadd( 4.86347, 183.115, -26.4175, 1.11 ) }
    dend_1 { pt3dadd( 4.53711, 188.941, -25.4637, 2.22 ) }
    dend_1 { pt3dadd( 4.22383, 195.607, -24.4032, 0.83 ) }
    dend_1 { pt3dadd( 4.1733, 197.55, -24.1281, 0.83 ) }
    dend_1 { pt3dadd( 4.18798, 200.176, -23.8131, 1.11 ) }
    dend_1 { pt3dadd( 4.23782, 203.447, -23.5406, 0.55 ) }
    dend_1 { pt3dadd( 4.20833, 205.993, -23.4696, 2.22 ) }
    dend_1 { pt3dadd( 4.15842, 207.584, -23.5802, 1.94 ) }
    dend_1 { pt3dadd( 4.11462, 209.89, -23.9725, 0.83 ) }
    dend_1 { pt3dadd( 4.12403, 212.346, -24.371, 0.83 ) }
    dend_1 { pt3dadd( 4.17624, 214.815, -24.7266, 0.83 ) }
    dend_1 { pt3dadd( 4.17891, 217.422, -25.0212, 1.66 ) }
    dend_1 { pt3dadd( 4.15324, 220.291, -25.3222, 0.83 ) }
    dend_1 { pt3dadd( 4.12731, 221.933, -25.4597, 0.83 ) }
    dend_1 { pt3dadd( 4.1026, 223.325, -25.579, 1.11 ) }
    dend_1 { pt3dadd( 4.03637, 225.476, -25.7872, 0.83 ) }
    dend_1 { pt3dadd( 3.97658, 229.238, -26.1867, 0.83 ) }
    dend_1 { pt3dadd( 3.96166, 229.918, -26.2595, 0.83 ) }
    dend_1 { pt3dadd( 3.76825, 233.672, -26.6425, 1.94 ) }
    dend_1 { pt3dadd( 3.61846, 236.473, -26.9328, 0.55 ) }
    dend_1 { pt3dadd( 3.48182, 239.635, -27.3334, 0.55 ) }
    dend_1 { pt3dadd( 3.45497, 240.205, -27.4331, 0.55 ) }
    dend_1 { pt3dadd( 3.21481, 244.708, -28.3693, 2.22 ) }
    dend_1 { pt3dadd( 3.10986, 248.146, -29.1067, 0.83 ) }
    dend_1 { pt3dadd( 3.10577, 249.703, -29.4212, 0.83 ) }
    dend_1 { pt3dadd( 3.18725, 253.389, -30.082, 1.38 ) }
    dend_1 { pt3dadd( 3.37885, 256.636, -30.607, 0.55 ) }
    dend_1 { pt3dadd( 3.58799, 259.519, -30.9939, 0.55 ) }
    dend_1 { pt3dadd( 3.99536, 263.525, -31.5333, 0.83 ) }
    dend_1 { pt3dadd( 4.65699, 269.158, -31.9286, 0.83 ) }
    dend_1 { pt3dadd( 4.85402, 270.743, -31.9463, 2.49 ) }
    dend_1 { pt3dadd( 5.23518, 273.803, -31.7867, 2.49 ) }
    dend_1 { pt3dadd( 5.79108, 278.562, -31.3502, 0.83 ) }
    dend_1 { pt3dadd( 6.08492, 281.242, -31.0715, 0.83 ) }
    dend_1 { pt3dadd( 6.38399, 286.562, -30.5219, 0.83 ) }
    dend_1 { pt3dadd( 6.43803, 288.139, -30.357, 0.83 ) }
    dend_1 { pt3dadd( 6.41127, 291.565, -30.0548, 1.66 ) }
    dend_1 { pt3dadd( 6.33257, 295.03, -29.8056, 0.83 ) }
    dend_1 { pt3dadd( 6.26315, 297.561, -29.6646, 0.83 ) }
    dend_1 { pt3dadd( 6.15151, 301.345, -29.5284, 0.83 ) }
    dend_1 { pt3dadd( 6.10696, 304.268, -29.551, 1.94 ) }
    dend_1 { pt3dadd( 6.15119, 309.1, -29.5658, 0.83 ) }
    dend_1 { pt3dadd( 6.27712, 314.083, -29.5658, 0.83 ) }
    dend_1 { pt3dadd( 6.35676, 316.319, -29.5613, 0.83 ) }
    dend_1 { pt3dadd( 6.44734, 319.134, -29.5576, 1.11 ) }
    dend_1 { pt3dadd( 6.51132, 321.315, -29.5559, 2.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 6.52219, 325.052, -29.5718, 0.83 ) }
    dend_1 { pt3dadd( 6.47636, 326.339, -29.5867, 0.83 ) }
    dend_1 { pt3dadd( 6.33092, 328.513, -29.6249, 0.83 ) }
    dend_1 { pt3dadd( 6.08445, 332.116, -29.6892, 0.83 ) }
    dend_1 { pt3dadd( 5.89946, 335.634, -29.8227, 0.83 ) }
    dend_1 { pt3dadd( 5.67223, 339.753, -30.0592, 1.11 ) }
    dend_1 { pt3dadd( 5.53788, 343.357, -30.3535, 1.66 ) }
    dend_1 { pt3dadd( 5.49966, 346.808, -30.6642, 0.83 ) }
    dend_1 { pt3dadd( 5.52084, 349.629, -30.9598, 0.83 ) }
    dend_1 { pt3dadd( 5.70593, 352.875, -31.3233, 0.83 ) }
    dend_1 { pt3dadd( 5.91365, 355.257, -31.6069, 0.83 ) }
    dend_1 { pt3dadd( 6.133, 357.882, -31.9466, 0.83 ) }
    dend_1 { pt3dadd( 6.47837, 361.985, -32.4718, 1.66 ) }
    dend_1 { pt3dadd( 6.73443, 365.243, -32.879, 0.83 ) }
    dend_1 { pt3dadd( 6.85761, 366.97, -33.0701, 0.83 ) }
    dend_1 { pt3dadd( 7.07921, 371.159, -33.4123, 1.38 ) }
    dend_1 { pt3dadd( 7.35396, 375.089, -33.7042, 0.83 ) }
    dend_1 { pt3dadd( 7.4837, 377.271, -33.8517, 0.83 ) }
    dend_1 { pt3dadd( 7.56109, 378.577, -33.957, 1.66 ) }
    dend_1 { pt3dadd( 7.67168, 381.225, -34.1469, 1.66 ) }
    dend_1 { pt3dadd( 7.65451, 383.895, -34.3549, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 21/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.74662, 40.3282, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -6.69386, 55.2013, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -8.6411, 70.0744, 0.0, 0.28 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 35.4337, -116.187, 31.5722, 0.83 ) }
    dend_59 { pt3dadd( 37.1503, -116.058, 33.5882, 0.83 ) }
    dend_59 { pt3dadd( 38.2606, -115.943, 35.0294, 0.28 ) }
    dend_59 { pt3dadd( 40.9333, -115.665, 38.4984, 0.55 ) }
    dend_59 { pt3dadd( 41.987, -115.556, 39.866, 0.55 ) }
    dend_59 { pt3dadd( 43.5065, -115.398, 41.8383, 0.55 ) }
    dend_59 { pt3dadd( 48.3919, -114.89, 48.1792, 0.28 ) }
    dend_59 { pt3dadd( 48.9918, -114.88, 49.1225, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 32/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 35.4337, -116.187, 31.5722, 0.55 ) }
    dend_58 { pt3dadd( 36.6348, -118.113, 34.1239, 0.55 ) }
    dend_58 { pt3dadd( 36.944, -118.441, 34.8315, 0.83 ) }
    dend_58 { pt3dadd( 37.672, -119.345, 36.6466, 0.28 ) }
    dend_58 { pt3dadd( 37.9362, -119.746, 37.4636, 0.83 ) }
    dend_58 { pt3dadd( 38.4661, -120.512, 39.056, 0.83 ) }
    dend_58 { pt3dadd( 39.7736, -122.333, 42.8345, 0.83 ) }
    dend_58 { pt3dadd( 41.6261, -124.45, 47.5054, 0.83 ) }
    dend_58 { pt3dadd( 42.2794, -125.16, 49.3962, 0.83 ) }
    dend_58 { pt3dadd( 43.853, -126.473, 54.2876, 1.11 ) }
    dend_58 { pt3dadd( 44.2459, -126.755, 56.0101, 0.83 ) }
    dend_58 { pt3dadd( 44.3356, -126.788, 56.6576, 0.83 ) }
    dend_58 { pt3dadd( 44.3703, -126.496, 59.0016, 0.83 ) }
    dend_58 { pt3dadd( 43.8529, -125.149, 63.537, 0.83 ) }
    dend_58 { pt3dadd( 43.395, -123.834, 66.6611, 0.83 ) }
    dend_58 { pt3dadd( 42.5897, -121.665, 70.3857, 0.83 ) }
    dend_58 { pt3dadd( 42.0524, -120.559, 72.2181, 1.11 ) }
    dend_58 { pt3dadd( 41.0882, -118.849, 74.9332, 0.28 ) }
    dend_58 { pt3dadd( 40.8544, -118.519, 75.4318, 0.55 ) }
    dend_58 { pt3dadd( 39.9192, -116.956, 77.2638, 0.28 ) }
    dend_58 { pt3dadd( 39.0373, -116.151, 78.2726, 1.11 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.30839, -105.385, 6.15954, 1.11 ) }
    dend_46 { pt3dadd( -2.46355, -106.689, 7.07049, 1.11 ) }
    dend_46 { pt3dadd( -3.77609, -108.484, 8.20852, 1.11 ) }
    dend_46 { pt3dadd( -6.7927, -113.532, 10.9372, 1.38 ) }
    dend_46 { pt3dadd( -8.34594, -116.543, 12.612, 1.38 ) }
    dend_46 { pt3dadd( -9.4902, -118.76, 13.8458, 1.66 ) }
    dend_46 { pt3dadd( -11.3048, -122.277, 15.8025, 1.11 ) }
    dend_46 { pt3dadd( -12.2037, -124.315, 16.9212, 1.11 ) }
    dend_46 { pt3dadd( -13.2672, -127.491, 18.5443, 1.38 ) }
    dend_46 { pt3dadd( -14.4817, -132.927, 20.9099, 2.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 63/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.30839, -105.385, 6.15954, 1.38 ) }
    dend_31 { pt3dadd( -1.32015, -109.101, 6.20213, 1.38 ) }
    dend_31 { pt3dadd( -1.25677, -112.105, 6.31237, 1.94 ) }
    dend_31 { pt3dadd( -1.16317, -114.286, 6.20818, 1.38 ) }
    dend_31 { pt3dadd( -0.879144, -117.902, 5.50056, 1.94 ) }
    dend_31 { pt3dadd( -0.525062, -120.708, 4.70215, 0.83 ) }
    dend_31 { pt3dadd( -0.238534, -122.403, 4.10395, 0.83 ) }
    dend_31 { pt3dadd( 0.284354, -124.576, 3.20313, 1.38 ) }
    dend_31 { pt3dadd( 1.3818, -127.839, 1.48039, 1.94 ) }
    dend_31 { pt3dadd( 2.90962, -131.294, -0.827465, 0.83 ) }
    dend_31 { pt3dadd( 3.47746, -132.353, -1.69482, 0.83 ) }
    dend_31 { pt3dadd( 5.01073, -134.928, -4.27109, 1.11 ) }
    dend_31 { pt3dadd( 5.93857, -136.402, -5.82033, 0.55 ) }
    dend_31 { pt3dadd( 6.40012, -137.175, -6.68797, 0.55 ) }
    dend_31 { pt3dadd( 7.26669, -138.77, -8.46583, 0.55 ) }
    dend_31 { pt3dadd( 7.64553, -139.597, -9.48008, 0.83 ) }
    dend_31 { pt3dadd( 8.41619, -141.451, -11.9323, 0.55 ) }
    dend_31 { pt3dadd( 9.1384, -143.276, -14.5845, 1.66 ) }
    dend_31 { pt3dadd( 10.1386, -146.156, -18.8803, 0.55 ) }
    dend_31 { pt3dadd( 10.4792, -147.404, -20.7097, 1.66 ) }
    dend_31 { pt3dadd( 11.0234, -150.101, -24.4861, 0.55 ) }
    dend_31 { pt3dadd( 11.2778, -151.283, -26.1686, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_12 (entry count 85/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -7.66703, 337.466, 6.50636, 0.83 ) }
    dend_28 { pt3dadd( -7.32313, 339.283, 5.07401, 0.83 ) }
    dend_28 { pt3dadd( -7.04785, 341.289, 3.48389, 0.83 ) }
    dend_28 { pt3dadd( -6.69591, 343.915, 1.63873, 0.55 ) }
    dend_28 { pt3dadd( -6.26239, 346.516, -0.0564873, 0.83 ) }
    dend_28 { pt3dadd( -5.81697, 349.145, -1.61199, 0.28 ) }
    dend_28 { pt3dadd( -5.62354, 350.366, -2.26851, 0.55 ) }
    dend_28 { pt3dadd( -5.55059, 351.202, -2.71126, 0.55 ) }
    dend_28 { pt3dadd( -5.31906, 353.648, -3.84607, 1.11 ) }
    dend_28 { pt3dadd( -5.09546, 355.741, -4.58341, 0.55 ) }
    dend_28 { pt3dadd( -4.90679, 357.542, -5.10821, 1.11 ) }
    dend_28 { pt3dadd( -4.76056, 359.098, -5.46395, 1.11 ) }
    dend_28 { pt3dadd( -4.57406, 361.443, -5.89246, 0.28 ) }
    dend_28 { pt3dadd( -4.41699, 364.491, -6.55636, 0.55 ) }
    dend_28 { pt3dadd( -4.35837, 368.062, -7.41898, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( -4.32219, 369.89, -7.80063, 0.55 ) }
    dend_28 { pt3dadd( -4.2814, 371.232, -8.04829, 0.28 ) }
    dend_28 { pt3dadd( -4.1834, 373.188, -8.23501, 0.83 ) }
    dend_28 { pt3dadd( -3.98743, 377.019, -8.21325, 1.38 ) }
    dend_28 { pt3dadd( -3.9689, 378.846, -8.09865, 1.38 ) }
    dend_28 { pt3dadd( -3.89113, 383.028, -7.60975, 0.83 ) }
    dend_28 { pt3dadd( -3.87879, 385.022, -7.31711, 0.83 ) }
    dend_28 { pt3dadd( -3.8808, 390.55, -6.27466, 0.83 ) }
    dend_28 { pt3dadd( -3.90411, 392.452, -5.86736, 0.83 ) }
    dend_28 { pt3dadd( -3.94909, 395.494, -5.03046, 0.83 ) }
    dend_28 { pt3dadd( -3.97375, 396.268, -4.81008, 0.83 ) }
    dend_28 { pt3dadd( -4.05796, 398.923, -4.07744, 1.38 ) }
    dend_28 { pt3dadd( -4.06463, 400.782, -3.62276, 0.55 ) }
    dend_28 { pt3dadd( -4.03338, 403.029, -3.2468, 0.55 ) }
    dend_28 { pt3dadd( -3.91421, 404.265, -3.10013, 0.55 ) }
    dend_28 { pt3dadd( -3.77095, 405.169, -3.03128, 0.28 ) }
    dend_28 { pt3dadd( -3.2778, 407.67, -2.95839, 0.83 ) }
    dend_28 { pt3dadd( -2.78698, 409.597, -3.03579, 0.55 ) }
    dend_28 { pt3dadd( -2.16475, 411.668, -3.21196, 0.83 ) }
    dend_28 { pt3dadd( -1.24799, 414.642, -3.52222, 0.55 ) }
    dend_28 { pt3dadd( -0.734981, 416.37, -3.72233, 1.66 ) }
    dend_28 { pt3dadd( 0.0322394, 419.072, -4.05378, 1.66 ) }
    dend_28 { pt3dadd( 0.791052, 422.03, -4.41869, 0.83 ) }
    dend_28 { pt3dadd( 1.32754, 424.412, -4.7018, 0.83 ) }
    dend_28 { pt3dadd( 1.68743, 426.369, -4.91111, 0.83 ) }
    dend_28 { pt3dadd( 1.83464, 427.541, -5.01304, 0.28 ) }
    dend_28 { pt3dadd( 1.98118, 429.526, -5.11524, 1.11 ) }
    dend_28 { pt3dadd( 1.9829, 432.512, -5.18584, 0.55 ) }
    dend_28 { pt3dadd( 1.90776, 434.233, -5.18637, 0.55 ) }
    dend_28 { pt3dadd( 1.80599, 436.03, -5.21538, 0.55 ) }
    dend_28 { pt3dadd( 1.71162, 437.218, -5.26333, 0.55 ) }
    dend_28 { pt3dadd( 1.48213, 438.938, -5.37716, 1.11 ) }
    dend_28 { pt3dadd( 1.14725, 440.831, -5.54563, 0.28 ) }
    dend_28 { pt3dadd( 0.978895, 441.717, -5.63529, 0.55 ) }
    dend_28 { pt3dadd( 0.719997, 443.825, -5.82736, 0.55 ) }
    dend_28 { pt3dadd( 0.508896, 447.183, -6.09498, 0.55 ) }
    dend_28 { pt3dadd( 0.509299, 448.365, -6.16404, 0.83 ) }
    dend_28 { pt3dadd( 0.591543, 450.237, -6.2918, 0.83 ) }
    dend_28 { pt3dadd( 0.786164, 452.921, -6.41622, 0.83 ) }
    dend_28 { pt3dadd( 1.06269, 455.464, -6.43922, 0.83 ) }
    dend_28 { pt3dadd( 1.39609, 457.418, -6.40353, 0.83 ) }
    dend_28 { pt3dadd( 2.49434, 461.7, -6.2304, 1.11 ) }
    dend_28 { pt3dadd( 3.16971, 463.891, -6.11675, 0.28 ) }
    dend_28 { pt3dadd( 3.65822, 465.187, -6.05365, 0.55 ) }
    dend_28 { pt3dadd( 4.20803, 466.595, -5.82388, 0.55 ) }
    dend_28 { pt3dadd( 4.68163, 467.787, -5.49241, 0.55 ) }
    dend_28 { pt3dadd( 5.06391, 468.591, -5.16455, 0.55 ) }
    dend_28 { pt3dadd( 6.52339, 471.033, -3.9536, 0.55 ) }
    dend_28 { pt3dadd( 7.53429, 472.767, -3.10899, 0.83 ) }
    dend_28 { pt3dadd( 10.0957, 477.151, -1.42502, 0.55 ) }
    dend_28 { pt3dadd( 10.5104, 477.903, -1.15244, 0.83 ) }
    dend_28 { pt3dadd( 11.2612, 479.399, -0.657362, 0.83 ) }
    dend_28 { pt3dadd( 12.1199, 481.276, -0.132658, 0.55 ) }
    dend_28 { pt3dadd( 12.8363, 482.995, 0.215582, 0.83 ) }
    dend_28 { pt3dadd( 13.8546, 485.791, 0.51271, 0.83 ) }
    dend_28 { pt3dadd( 14.6598, 488.253, 0.609248, 0.55 ) }
    dend_28 { pt3dadd( 14.8976, 489.161, 0.70073, 0.55 ) }
    dend_28 { pt3dadd( 15.341, 491.199, 1.00826, 0.55 ) }
    dend_28 { pt3dadd( 15.5164, 492.186, 1.20287, 0.83 ) }
    dend_28 { pt3dadd( 15.8253, 493.925, 1.60058, 0.83 ) }
    dend_28 { pt3dadd( 16.2349, 497.013, 2.2567, 0.55 ) }
    dend_28 { pt3dadd( 16.4415, 498.513, 2.50363, 0.55 ) }
    dend_28 { pt3dadd( 16.7272, 500.769, 2.88907, 0.55 ) }
    dend_28 { pt3dadd( 16.9295, 502.625, 3.19046, 0.55 ) }
    dend_28 { pt3dadd( 17.3448, 506.076, 3.74014, 0.55 ) }
    dend_28 { pt3dadd( 17.6549, 508.516, 4.05782, 0.83 ) }
    dend_28 { pt3dadd( 17.8247, 509.78, 4.14907, 1.11 ) }
    dend_28 { pt3dadd( 18.0591, 512.293, 4.32762, 0.55 ) }
    dend_28 { pt3dadd( 18.1852, 515.896, 4.63729, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -7.66703, 337.466, 6.50636, 0.55 ) }
    dend_13 { pt3dadd( -8.66935, 340.029, 5.78952, 0.55 ) }
    dend_13 { pt3dadd( -9.33675, 341.867, 5.35717, 0.55 ) }
    dend_13 { pt3dadd( -9.83353, 343.427, 5.05303, 0.55 ) }
    dend_13 { pt3dadd( -10.2406, 344.835, 4.80941, 0.55 ) }
    dend_13 { pt3dadd( -11.0516, 347.719, 4.34653, 0.55 ) }
    dend_13 { pt3dadd( -11.522, 349.393, 4.08264, 0.83 ) }
    dend_13 { pt3dadd( -12.1567, 351.498, 3.82299, 0.83 ) }
    dend_13 { pt3dadd( -12.7807, 353.686, 3.55934, 0.83 ) }
    dend_13 { pt3dadd( -13.1991, 355.516, 3.36915, 0.55 ) }
    dend_13 { pt3dadd( -13.4811, 357.051, 3.23309, 0.55 ) }
    dend_13 { pt3dadd( -13.8868, 359.161, 3.06839, 0.83 ) }
    dend_13 { pt3dadd( -14.2198, 360.858, 2.94947, 0.83 ) }
    dend_13 { pt3dadd( -14.8011, 363.522, 2.75404, 0.83 ) }
    dend_13 { pt3dadd( -15.1971, 365.265, 2.63282, 0.83 ) }
    dend_13 { pt3dadd( -15.4899, 366.621, 2.55986, 0.55 ) }
    dend_13 { pt3dadd( -15.8167, 368.371, 2.50192, 0.83 ) }
    dend_13 { pt3dadd( -16.1259, 370.316, 2.50808, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 7.65451, 383.895, -34.3549, 0.55 ) }
    dend_3 { pt3dadd( 7.62622, 385.793, -34.3732, 0.55 ) }
    dend_3 { pt3dadd( 7.58531, 388.539, -34.3997, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.65451, 383.895, -34.3549, 0.55 ) }
    dend_2 { pt3dadd( 5.62894, 384.131, -34.0122, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 48.9918, -114.88, 49.1225, 0.28 ) }
    dend_61 { pt3dadd( 49.7792, -117.258, 47.5794, 0.28 ) }
    dend_61 { pt3dadd( 49.9243, -117.696, 47.295, 1.11 ) }
    dend_61 { pt3dadd( 50.6134, -119.776, 45.9445, 0.28 ) }
    dend_61 { pt3dadd( 50.6827, -119.986, 45.8087, 1.11 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 97/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 48.9918, -114.88, 49.1225, 1.66 ) }
    dend_60 { pt3dadd( 49.3123, -113.669, 50.328, 1.66 ) }
    dend_60 { pt3dadd( 49.808, -110.378, 52.9616, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 50.2248, -107.099, 55.4309, 0.28 ) }
    dend_60 { pt3dadd( 50.2839, -105.989, 56.1976, 0.55 ) }
    dend_60 { pt3dadd( 50.2404, -102.166, 58.5453, 0.28 ) }
    dend_60 { pt3dadd( 50.1835, -99.8793, 59.8964, 0.83 ) }
    dend_60 { pt3dadd( 49.9863, -96.9071, 61.6511, 0.83 ) }
    dend_60 { pt3dadd( 49.7586, -95.039, 62.6158, 0.28 ) }
    dend_60 { pt3dadd( 49.3513, -92.3424, 63.8529, 0.55 ) }
    dend_60 { pt3dadd( 48.696, -89.904, 64.8087, 0.55 ) }
    dend_60 { pt3dadd( 47.5518, -86.9448, 65.7729, 0.28 ) }
    dend_60 { pt3dadd( 47.1187, -86.0606, 66.0462, 0.83 ) }
    dend_60 { pt3dadd( 45.8484, -83.5877, 66.7816, 0.28 ) }
    dend_60 { pt3dadd( 44.2373, -80.7119, 67.5374, 0.55 ) }
    dend_60 { pt3dadd( 42.1613, -77.2387, 68.4027, 0.28 ) }
    dend_60 { pt3dadd( 40.5322, -74.8442, 68.9266, 1.11 ) }
    dend_60 { pt3dadd( 39.1383, -73.0707, 69.1693, 0.28 ) }
    dend_60 { pt3dadd( 37.3034, -70.8154, 69.4041, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_46 (entry count 16/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -14.4817, -132.927, 20.9099, 0.83 ) }
    dend_56 { pt3dadd( -13.6252, -136.637, 21.5797, 0.83 ) }
    dend_56 { pt3dadd( -13.1313, -138.449, 21.9167, 0.83 ) }
    dend_56 { pt3dadd( -12.3282, -141.668, 22.4688, 0.83 ) }
    dend_56 { pt3dadd( -11.918, -144.052, 23.0084, 0.55 ) }
    dend_56 { pt3dadd( -11.7268, -146.259, 23.6361, 0.83 ) }
    dend_56 { pt3dadd( -11.7092, -148.38, 24.3689, 0.83 ) }
    dend_56 { pt3dadd( -11.8481, -149.952, 25.129, 0.83 ) }
    dend_56 { pt3dadd( -12.3282, -152.527, 26.5776, 0.83 ) }
    dend_56 { pt3dadd( -13.1695, -155.63, 28.4947, 0.83 ) }
    dend_56 { pt3dadd( -13.8704, -157.659, 29.7533, 0.83 ) }
    dend_56 { pt3dadd( -15.2008, -160.888, 31.8201, 1.11 ) }
    dend_56 { pt3dadd( -16.2934, -163.308, 33.3842, 0.55 ) }
    dend_56 { pt3dadd( -17.0202, -165.047, 34.4421, 0.55 ) }
    dend_56 { pt3dadd( -17.8159, -167.224, 35.6182, 0.83 ) }
    dend_56 { pt3dadd( -18.249, -168.645, 36.2034, 0.83 ) }
    dend_56 { pt3dadd( -18.5564, -169.883, 36.6283, 0.28 ) }
    dend_56 { pt3dadd( -18.8571, -171.183, 37.0083, 0.55 ) }
    dend_56 { pt3dadd( -19.4454, -173.935, 37.71, 1.11 ) }
    dend_56 { pt3dadd( -19.7826, -175.874, 38.1568, 0.28 ) }
    dend_56 { pt3dadd( -19.9617, -176.969, 38.3789, 0.55 ) }
    dend_56 { pt3dadd( -20.5452, -180.09, 38.9246, 0.28 ) }
    dend_56 { pt3dadd( -20.6618, -180.689, 39.0368, 0.83 ) }
    dend_56 { pt3dadd( -21.0856, -183.083, 39.5369, 0.83 ) }
    dend_56 { pt3dadd( -21.5155, -185.569, 40.0716, 0.28 ) }
    dend_56 { pt3dadd( -21.5592, -185.941, 40.1465, 1.11 ) }
    dend_56 { pt3dadd( -21.6896, -187.612, 40.4147, 1.11 ) }
    dend_56 { pt3dadd( -21.8968, -190.095, 40.6799, 0.55 ) }
    dend_56 { pt3dadd( -22.049, -192.018, 40.9415, 1.11 ) }
    dend_56 { pt3dadd( -22.1633, -193.619, 41.2312, 1.11 ) }
    dend_56 { pt3dadd( -22.2677, -194.736, 41.5179, 1.11 ) }
    dend_56 { pt3dadd( -22.4204, -196.215, 41.9003, 0.28 ) }
    dend_56 { pt3dadd( -22.4866, -197.128, 42.221, 0.55 ) }
    dend_56 { pt3dadd( -22.553, -198.54, 42.7931, 0.28 ) }
    dend_56 { pt3dadd( -22.5937, -199.24, 43.2065, 0.83 ) }
    dend_56 { pt3dadd( -22.692, -200.605, 44.1322, 0.28 ) }
    dend_56 { pt3dadd( -22.7402, -201.328, 44.6275, 0.83 ) }
    dend_56 { pt3dadd( -22.8149, -204.04, 46.4594, 0.28 ) }
    dend_56 { pt3dadd( -22.8383, -204.877, 46.9475, 0.83 ) }
    dend_56 { pt3dadd( -22.9257, -207.242, 48.0725, 0.55 ) }
    dend_56 { pt3dadd( -23.008, -208.839, 48.7124, 1.11 ) }
    dend_56 { pt3dadd( -23.1101, -210.575, 49.2483, 0.28 ) }
    dend_56 { pt3dadd( -23.1596, -211.512, 49.4592, 0.83 ) }
    dend_56 { pt3dadd( -23.3224, -214.052, 49.7523, 0.83 ) }
    dend_56 { pt3dadd( -23.4016, -215.417, 49.9772, 0.28 ) }
    dend_56 { pt3dadd( -23.4159, -216.256, 50.1401, 0.28 ) }
    dend_56 { pt3dadd( -23.4031, -217.19, 50.4341, 0.83 ) }
    dend_56 { pt3dadd( -23.3372, -218.316, 50.9074, 0.83 ) }
    dend_56 { pt3dadd( -23.1866, -219.816, 51.659, 0.55 ) }
    dend_56 { pt3dadd( -22.7934, -222.537, 53.1737, 0.28 ) }
    dend_56 { pt3dadd( -22.7176, -223.295, 53.6007, 1.11 ) }
    dend_56 { pt3dadd( -22.6317, -224.412, 54.1774, 0.83 ) }
    dend_56 { pt3dadd( -22.4922, -226.696, 55.2051, 0.28 ) }
    dend_56 { pt3dadd( -22.4607, -227.049, 55.333, 0.55 ) }
    dend_56 { pt3dadd( -22.2425, -228.611, 55.7368, 0.55 ) }
    dend_56 { pt3dadd( -21.8785, -230.309, 55.989, 0.55 ) }
    dend_56 { pt3dadd( -21.5468, -231.7, 56.1413, 0.55 ) }
    dend_56 { pt3dadd( -21.2652, -232.884, 56.2293, 0.55 ) }
    dend_56 { pt3dadd( -20.9207, -234.42, 56.3394, 0.55 ) }
    dend_56 { pt3dadd( -20.4129, -236.364, 56.4811, 0.55 ) }
    dend_56 { pt3dadd( -19.8596, -238.243, 56.6201, 0.55 ) }
    dend_56 { pt3dadd( -19.2831, -240.08, 56.7509, 0.55 ) }
    dend_56 { pt3dadd( -18.9066, -241.4, 56.8717, 0.28 ) }
    dend_56 { pt3dadd( -18.4997, -243.003, 57.0158, 0.83 ) }
    dend_56 { pt3dadd( -18.0686, -245.256, 57.1973, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 81/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -14.4817, -132.927, 20.9099, 1.38 ) }
    dend_47 { pt3dadd( -17.2637, -133.663, 20.4124, 1.38 ) }
    dend_47 { pt3dadd( -20.6112, -134.548, 19.8138, 1.38 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 11.2778, -151.283, -26.1686, 0.55 ) }
    dend_37 { pt3dadd( 11.9312, -157.261, -26.8491, 0.55 ) }
    dend_37 { pt3dadd( 12.1265, -160.236, -27.2867, 0.55 ) }
    dend_37 { pt3dadd( 12.3572, -163.794, -27.8819, 2.49 ) }
    dend_37 { pt3dadd( 12.4997, -166.667, -28.4809, 0.55 ) }
    dend_37 { pt3dadd( 12.6, -169.445, -29.1125, 0.55 ) }
    dend_37 { pt3dadd( 12.727, -172.961, -29.9119, 0.83 ) }
    dend_37 { pt3dadd( 12.5797, -176.026, -30.6365, 0.28 ) }
    dend_37 { pt3dadd( 12.5321, -177.456, -31.054, 0.55 ) }
    dend_37 { pt3dadd( 12.462, -179.746, -31.8583, 0.28 ) }
    dend_37 { pt3dadd( 12.4182, -181.177, -32.4046, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 11.2778, -151.283, -26.1686, 0.83 ) }
    dend_32 { pt3dadd( 13.4462, -151.459, -26.9978, 0.83 ) }
    dend_32 { pt3dadd( 15.3754, -151.474, -27.5893, 0.83 ) }
    dend_32 { pt3dadd( 17.4563, -151.416, -28.2263, 0.55 ) }
    dend_32 { pt3dadd( 20.0415, -151.371, -29.0045, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( 20.9169, -151.414, -29.312, 0.83 ) }
    dend_32 { pt3dadd( 22.7003, -151.679, -29.9317, 0.55 ) }
    dend_32 { pt3dadd( 24.3016, -152.07, -30.4517, 1.11 ) }
    dend_32 { pt3dadd( 25.9744, -152.729, -30.9754, 0.28 ) }
    dend_32 { pt3dadd( 27.1487, -153.368, -31.3289, 0.83 ) }
    dend_32 { pt3dadd( 29.4167, -154.959, -32.118, 0.28 ) }
    dend_32 { pt3dadd( 31.5119, -156.669, -32.9663, 1.38 ) }
    dend_32 { pt3dadd( 32.7495, -157.763, -33.3838, 0.55 ) }
    dend_32 { pt3dadd( 33.7158, -158.683, -33.6049, 0.55 ) }
    dend_32 { pt3dadd( 35.142, -160.094, -33.6455, 0.83 ) }
    dend_32 { pt3dadd( 36.2002, -161.168, -33.5023, 0.28 ) }
    dend_32 { pt3dadd( 37.6384, -162.598, -33.1733, 0.55 ) }
    dend_32 { pt3dadd( 40.5891, -165.384, -32.1853, 0.28 ) }
    dend_32 { pt3dadd( 42.0136, -166.617, -31.6166, 0.83 ) }
    dend_32 { pt3dadd( 44.3049, -168.372, -30.6192, 0.55 ) }
    dend_32 { pt3dadd( 45.1188, -168.914, -30.2362, 0.55 ) }
    dend_32 { pt3dadd( 47.5808, -170.388, -29.0824, 1.94 ) }
    dend_32 { pt3dadd( 50.5155, -172.104, -27.8471, 0.55 ) }
    dend_32 { pt3dadd( 51.8695, -172.839, -27.3638, 0.55 ) }
    dend_32 { pt3dadd( 53.0636, -173.434, -26.9346, 0.55 ) }
    dend_32 { pt3dadd( 55.4502, -174.732, -26.1176, 0.28 ) }
    dend_32 { pt3dadd( 56.2723, -175.274, -25.8334, 1.38 ) }
    dend_32 { pt3dadd( 57.8856, -176.591, -25.2467, 1.38 ) }
    dend_32 { pt3dadd( 59.9427, -178.792, -24.7729, 0.55 ) }
    dend_32 { pt3dadd( 60.8977, -179.988, -24.2488, 0.55 ) }
    dend_32 { pt3dadd( 62.7128, -182.42, -22.9271, 1.11 ) }
    dend_32 { pt3dadd( 64.1809, -184.544, -21.7416, 0.28 ) }
    dend_32 { pt3dadd( 64.4508, -184.956, -21.4922, 0.83 ) }
    dend_32 { pt3dadd( 65.8753, -187.212, -19.944, 0.28 ) }
    dend_32 { pt3dadd( 70.2563, -194.618, -14.4235, 0.83 ) }
    dend_32 { pt3dadd( 70.9158, -195.64, -13.2649, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -16.1259, 370.316, 2.50808, 0.55 ) }
    dend_23 { pt3dadd( -16.1998, 371.663, 2.56828, 0.55 ) }
    dend_23 { pt3dadd( -16.3443, 372.973, 2.83579, 0.28 ) }
    dend_23 { pt3dadd( -16.5899, 374.147, 3.12336, 0.55 ) }
    dend_23 { pt3dadd( -16.8866, 374.977, 3.33801, 0.28 ) }
    dend_23 { pt3dadd( -17.3843, 376.185, 3.59083, 0.83 ) }
    dend_23 { pt3dadd( -17.8756, 377.415, 3.80479, 0.83 ) }
    dend_23 { pt3dadd( -18.8261, 379.315, 4.49859, 0.55 ) }
    dend_23 { pt3dadd( -19.4228, 380.4, 5.04255, 0.55 ) }
    dend_23 { pt3dadd( -20.6155, 382.451, 6.25638, 0.83 ) }
    dend_23 { pt3dadd( -21.3243, 383.585, 6.97777, 0.83 ) }
    dend_23 { pt3dadd( -22.1594, 384.873, 7.91547, 0.83 ) }
    dend_23 { pt3dadd( -24.9025, 388.962, 10.7334, 0.55 ) }
    dend_23 { pt3dadd( -25.4067, 389.794, 11.2694, 0.55 ) }
    dend_23 { pt3dadd( -25.6104, 390.183, 11.5173, 0.83 ) }
    dend_23 { pt3dadd( -26.0062, 391.068, 12.0695, 0.55 ) }
    dend_23 { pt3dadd( -27.0082, 393.81, 13.5402, 1.11 ) }
    dend_23 { pt3dadd( -27.6807, 396.209, 14.5105, 0.83 ) }
    dend_23 { pt3dadd( -27.9827, 397.902, 14.9269, 0.55 ) }
    dend_23 { pt3dadd( -28.1509, 399.166, 15.2346, 1.11 ) }
    dend_23 { pt3dadd( -28.3055, 400.57, 15.6032, 0.55 ) }
    dend_23 { pt3dadd( -28.4726, 402.883, 16.2526, 1.11 ) }
    dend_23 { pt3dadd( -28.5946, 404.661, 16.7237, 0.55 ) }
    dend_23 { pt3dadd( -28.7291, 406.252, 17.2136, 0.55 ) }
    dend_23 { pt3dadd( -28.8645, 407.117, 17.469, 0.28 ) }
    dend_23 { pt3dadd( -29.1553, 408.664, 17.9177, 0.83 ) }
    dend_23 { pt3dadd( -29.4738, 410.232, 18.3046, 0.55 ) }
    dend_23 { pt3dadd( -29.7764, 411.639, 18.5796, 0.83 ) }
    dend_23 { pt3dadd( -30.0881, 412.976, 18.7735, 0.83 ) }
    dend_23 { pt3dadd( -30.6045, 414.903, 18.9814, 0.55 ) }
    dend_23 { pt3dadd( -31.1311, 416.823, 19.1129, 0.55 ) }
    dend_23 { pt3dadd( -31.8337, 419.297, 19.1787, 0.83 ) }
    dend_23 { pt3dadd( -32.5613, 421.745, 19.2011, 0.83 ) }
    dend_23 { pt3dadd( -33.2382, 424.032, 19.2077, 0.83 ) }
    dend_23 { pt3dadd( -33.6654, 425.456, 19.1948, 0.83 ) }
    dend_23 { pt3dadd( -34.1994, 427.356, 19.1551, 0.83 ) }
    dend_23 { pt3dadd( -34.6883, 429.02, 19.1197, 0.83 ) }
    dend_23 { pt3dadd( -35.1758, 430.828, 19.1699, 0.83 ) }
    dend_23 { pt3dadd( -35.449, 431.889, 19.2295, 0.83 ) }
    dend_23 { pt3dadd( -35.7947, 433.361, 19.3786, 0.55 ) }
    dend_23 { pt3dadd( -36.0806, 434.613, 19.4609, 0.83 ) }
    dend_23 { pt3dadd( -36.4579, 436.147, 19.5712, 0.83 ) }
    dend_23 { pt3dadd( -37.0708, 438.637, 19.7683, 0.55 ) }
    dend_23 { pt3dadd( -37.719, 441.036, 19.9697, 0.83 ) }
    dend_23 { pt3dadd( -38.479, 443.597, 20.1841, 0.55 ) }
    dend_23 { pt3dadd( -39.4596, 446.347, 20.3723, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 77/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -16.1259, 370.316, 2.50808, 0.55 ) }
    dend_14 { pt3dadd( -17.9813, 372.688, 3.06789, 0.55 ) }
    dend_14 { pt3dadd( -19.3707, 374.589, 3.21419, 0.28 ) }
    dend_14 { pt3dadd( -20.0076, 375.462, 3.19916, 0.83 ) }
    dend_14 { pt3dadd( -20.9104, 376.676, 3.10922, 0.28 ) }
    dend_14 { pt3dadd( -21.3548, 377.283, 3.04762, 0.28 ) }
    dend_14 { pt3dadd( -22.0713, 378.264, 2.91668, 0.83 ) }
    dend_14 { pt3dadd( -23.3462, 380.25, 2.51096, 0.83 ) }
    dend_14 { pt3dadd( -23.9541, 381.289, 2.22812, 0.28 ) }
    dend_14 { pt3dadd( -24.8267, 382.842, 1.85637, 0.83 ) }
    dend_14 { pt3dadd( -25.277, 383.635, 1.66727, 0.55 ) }
    dend_14 { pt3dadd( -26.1541, 385.18, 1.3536, 1.11 ) }
    dend_14 { pt3dadd( -26.9709, 386.682, 1.08102, 0.55 ) }
    dend_14 { pt3dadd( -27.6016, 387.956, 0.880876, 1.11 ) }
    dend_14 { pt3dadd( -28.2563, 389.401, 0.683064, 0.55 ) }
    dend_14 { pt3dadd( -29.0987, 391.431, 0.439182, 1.11 ) }
    dend_14 { pt3dadd( -29.608, 392.649, 0.306994, 0.28 ) }
    dend_14 { pt3dadd( -30.0095, 393.616, 0.225657, 0.55 ) }
    dend_14 { pt3dadd( -30.5214, 394.724, 0.144326, 0.28 ) }
    dend_14 { pt3dadd( -30.8912, 395.509, 0.106561, 0.83 ) }
    dend_14 { pt3dadd( -31.2819, 396.553, 0.0339752, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 7.58531, 388.539, -34.3997, 0.83 ) }
    dend_5 { pt3dadd( 8.09486, 390.36, -34.7221, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( 8.33909, 391.352, -34.9059, 0.83 ) }
    dend_5 { pt3dadd( 8.69326, 392.833, -35.1755, 2.22 ) }
    dend_5 { pt3dadd( 9.02423, 394.334, -35.4568, 1.66 ) }
    dend_5 { pt3dadd( 9.44583, 396.163, -35.7236, 0.83 ) }
    dend_5 { pt3dadd( 9.5827, 396.766, -35.7946, 0.83 ) }
    dend_5 { pt3dadd( 9.83833, 398.114, -35.9257, 0.83 ) }
    dend_5 { pt3dadd( 10.1587, 399.975, -36.0428, 1.66 ) }
    dend_5 { pt3dadd( 10.3384, 401.425, -36.0855, 0.55 ) }
    dend_5 { pt3dadd( 10.418, 402.889, -36.1325, 0.55 ) }
    dend_5 { pt3dadd( 10.424, 403.804, -36.1791, 1.11 ) }
    dend_5 { pt3dadd( 10.3906, 405.374, -36.3312, 0.55 ) }
    dend_5 { pt3dadd( 10.253, 407.947, -36.716, 1.66 ) }
    dend_5 { pt3dadd( 10.2185, 409.254, -36.9629, 0.83 ) }
    dend_5 { pt3dadd( 10.2288, 411.384, -37.4206, 0.83 ) }
    dend_5 { pt3dadd( 10.2548, 412.414, -37.6726, 0.83 ) }
    dend_5 { pt3dadd( 10.3511, 413.56, -37.9433, 1.66 ) }
    dend_5 { pt3dadd( 10.5723, 415.114, -38.2838, 0.83 ) }
    dend_5 { pt3dadd( 11.0334, 417.494, -38.7218, 0.83 ) }
    dend_5 { pt3dadd( 11.4642, 419.273, -38.9649, 0.83 ) }
    dend_5 { pt3dadd( 11.6613, 419.947, -39.0141, 0.83 ) }
    dend_5 { pt3dadd( 12.1054, 421.461, -39.0846, 0.83 ) }
    dend_5 { pt3dadd( 12.3798, 422.46, -39.1288, 1.38 ) }
    dend_5 { pt3dadd( 12.7942, 424.019, -39.1869, 0.55 ) }
    dend_5 { pt3dadd( 13.0834, 425.052, -39.2282, 1.38 ) }
    dend_5 { pt3dadd( 13.6612, 427.024, -39.3083, 1.38 ) }
    dend_5 { pt3dadd( 14.1319, 428.715, -39.3744, 0.83 ) }
    dend_5 { pt3dadd( 14.6165, 430.552, -39.4391, 0.83 ) }
    dend_5 { pt3dadd( 15.1672, 432.559, -39.5057, 1.11 ) }
    dend_5 { pt3dadd( 15.6133, 434.207, -39.5535, 0.55 ) }
    dend_5 { pt3dadd( 15.9372, 435.534, -39.5825, 0.55 ) }
    dend_5 { pt3dadd( 16.1766, 436.585, -39.6397, 0.55 ) }
    dend_5 { pt3dadd( 16.7162, 438.915, -39.8299, 2.22 ) }
    dend_5 { pt3dadd( 16.9565, 439.958, -39.9431, 0.55 ) }
    dend_5 { pt3dadd( 17.2066, 441.0, -40.0782, 0.55 ) }
    dend_5 { pt3dadd( 17.3255, 441.515, -40.149, 1.11 ) }
    dend_5 { pt3dadd( 17.8998, 443.96, -40.4881, 0.55 ) }
    dend_5 { pt3dadd( 18.186, 445.312, -40.669, 0.55 ) }
    dend_5 { pt3dadd( 18.2766, 445.844, -40.7348, 0.55 ) }
    dend_5 { pt3dadd( 18.4719, 447.506, -40.8992, 1.11 ) }
    dend_5 { pt3dadd( 18.5884, 449.108, -41.0573, 1.11 ) }
    dend_5 { pt3dadd( 18.6529, 450.425, -41.1633, 0.83 ) }
    dend_5 { pt3dadd( 18.6502, 451.805, -41.2221, 0.83 ) }
    dend_5 { pt3dadd( 18.6252, 452.677, -41.2663, 0.83 ) }
    dend_5 { pt3dadd( 18.501, 454.421, -41.3698, 0.83 ) }
    dend_5 { pt3dadd( 18.2369, 456.4, -41.5208, 2.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 7.58531, 388.539, -34.3997, 0.55 ) }
    dend_4 { pt3dadd( 6.39677, 388.485, -35.0422, 0.55 ) }
    dend_4 { pt3dadd( 5.15366, 388.429, -35.7143, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -20.6112, -134.548, 19.8138, 1.11 ) }
    dend_53 { pt3dadd( -20.549, -135.553, 19.8516, 1.11 ) }
    dend_53 { pt3dadd( -20.4441, -137.252, 19.9154, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -20.6112, -134.548, 19.8138, 1.11 ) }
    dend_48 { pt3dadd( -22.4021, -133.471, 17.4609, 1.11 ) }
    dend_48 { pt3dadd( -23.0176, -133.016, 16.7313, 0.28 ) }
    dend_48 { pt3dadd( -23.4969, -132.715, 16.389, 0.83 ) }
    dend_48 { pt3dadd( -25.411, -131.606, 15.3881, 0.55 ) }
    dend_48 { pt3dadd( -26.3163, -131.138, 14.9942, 0.55 ) }
    dend_48 { pt3dadd( -27.183, -130.703, 14.5883, 0.55 ) }
    dend_48 { pt3dadd( -28.3994, -130.164, 14.0582, 0.55 ) }
    dend_48 { pt3dadd( -31.3788, -128.991, 12.655, 1.11 ) }
    dend_48 { pt3dadd( -33.1271, -128.322, 11.8096, 0.55 ) }
    dend_48 { pt3dadd( -34.2663, -127.898, 11.2676, 0.55 ) }
    dend_48 { pt3dadd( -36.8523, -127.095, 9.96559, 0.83 ) }
    dend_48 { pt3dadd( -38.4077, -126.687, 9.16273, 0.55 ) }
    dend_48 { pt3dadd( -39.9207, -126.358, 8.36366, 1.11 ) }
    dend_48 { pt3dadd( -42.3332, -125.929, 6.9952, 0.83 ) }
    dend_48 { pt3dadd( -43.1937, -125.822, 6.54189, 0.83 ) }
    dend_48 { pt3dadd( -44.4223, -125.694, 5.98297, 0.83 ) }
    dend_48 { pt3dadd( -46.3943, -125.585, 5.26699, 0.83 ) }
    dend_48 { pt3dadd( -48.8948, -125.539, 4.40239, 1.11 ) }
    dend_48 { pt3dadd( -50.0463, -125.576, 3.96336, 0.83 ) }
    dend_48 { pt3dadd( -51.6757, -125.701, 3.2771, 0.83 ) }
    dend_48 { pt3dadd( -54.0475, -125.943, 2.19445, 0.83 ) }
    dend_48 { pt3dadd( -55.567, -126.16, 1.40604, 0.55 ) }
    dend_48 { pt3dadd( -56.6754, -126.421, 0.768984, 1.38 ) }
    dend_48 { pt3dadd( -58.2238, -126.825, -0.260643, 0.55 ) }
    dend_48 { pt3dadd( -59.6057, -127.129, -1.26074, 0.55 ) }
    dend_48 { pt3dadd( -60.4282, -127.327, -1.92059, 0.55 ) }
    dend_48 { pt3dadd( -61.6125, -127.628, -2.99792, 0.55 ) }
    dend_48 { pt3dadd( -62.2394, -127.759, -3.62195, 0.83 ) }
    dend_48 { pt3dadd( -64.3009, -128.015, -5.81252, 0.55 ) }
    dend_48 { pt3dadd( -65.0152, -128.077, -6.60571, 0.55 ) }
    dend_48 { pt3dadd( -65.8227, -128.098, -7.51822, 0.55 ) }
    dend_48 { pt3dadd( -67.4398, -128.063, -9.13894, 0.55 ) }
    dend_48 { pt3dadd( -69.1943, -127.972, -10.6828, 1.11 ) }
    dend_48 { pt3dadd( -71.0207, -127.875, -12.1387, 0.55 ) }
    dend_48 { pt3dadd( -71.5281, -127.87, -12.4835, 0.55 ) }
    dend_48 { pt3dadd( -73.2887, -127.934, -13.5052, 0.55 ) }
    dend_48 { pt3dadd( -75.3871, -128.034, -14.4526, 1.94 ) }
    dend_48 { pt3dadd( -76.9678, -128.193, -14.8968, 0.83 ) }
    dend_48 { pt3dadd( -77.5482, -128.276, -15.0271, 0.28 ) }
    dend_48 { pt3dadd( -78.5684, -128.496, -15.2482, 0.55 ) }
    dend_48 { pt3dadd( -80.0272, -128.876, -15.584, 0.55 ) }
    dend_48 { pt3dadd( -81.2818, -129.264, -15.8939, 0.28 ) }
    dend_48 { pt3dadd( -83.5042, -129.978, -16.3996, 1.11 ) }
    dend_48 { pt3dadd( -85.1825, -130.554, -16.6902, 0.28 ) }
    dend_48 { pt3dadd( -87.0414, -131.102, -16.9541, 0.83 ) }
    dend_48 { pt3dadd( -88.5046, -131.457, -17.0986, 0.28 ) }
    dend_48 { pt3dadd( -89.1475, -131.568, -17.1304, 0.28 ) }
    dend_48 { pt3dadd( -90.7772, -131.733, -17.1147, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( -91.6811, -131.742, -17.0492, 0.55 ) }
    dend_48 { pt3dadd( -93.5028, -131.578, -16.8691, 0.55 ) }
    dend_48 { pt3dadd( -94.2432, -131.397, -16.8541, 0.83 ) }
    dend_48 { pt3dadd( -95.4177, -131.022, -16.9335, 0.28 ) }
    dend_48 { pt3dadd( -95.7023, -130.932, -16.9712, 0.83 ) }
    dend_48 { pt3dadd( -97.4917, -130.368, -17.3229, 0.83 ) }
    dend_48 { pt3dadd( -98.9474, -129.913, -17.6299, 0.83 ) }
    dend_48 { pt3dadd( -100.605, -129.476, -17.9971, 0.55 ) }
    dend_48 { pt3dadd( -101.442, -129.286, -18.1907, 0.55 ) }
    dend_48 { pt3dadd( -103.009, -129.02, -18.545, 1.38 ) }
    dend_48 { pt3dadd( -104.685, -128.817, -18.911, 1.38 ) }
    dend_48 { pt3dadd( -106.082, -128.723, -19.2023, 0.28 ) }
    dend_48 { pt3dadd( -107.204, -128.766, -19.4502, 0.83 ) }
    dend_48 { pt3dadd( -108.086, -128.897, -19.6503, 0.28 ) }
    dend_48 { pt3dadd( -108.915, -129.112, -19.8517, 1.38 ) }
    dend_48 { pt3dadd( -110.157, -129.542, -20.1797, 0.28 ) }
    dend_48 { pt3dadd( -110.584, -129.753, -20.3024, 0.83 ) }
    dend_48 { pt3dadd( -111.74, -130.472, -20.6643, 0.55 ) }
    dend_48 { pt3dadd( -112.348, -130.878, -20.8751, 0.55 ) }
    dend_48 { pt3dadd( -113.405, -131.578, -21.278, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 12.4182, -181.177, -32.4046, 0.83 ) }
    dend_39 { pt3dadd( 12.5086, -182.523, -32.4746, 0.83 ) }
    dend_39 { pt3dadd( 12.5032, -183.808, -32.6812, 1.94 ) }
    dend_39 { pt3dadd( 12.4869, -185.102, -32.9464, 1.94 ) }
    dend_39 { pt3dadd( 12.3471, -187.676, -33.5551, 0.83 ) }
    dend_39 { pt3dadd( 12.2257, -189.47, -33.9834, 1.38 ) }
    dend_39 { pt3dadd( 11.7716, -194.135, -35.191, 0.28 ) }
    dend_39 { pt3dadd( 11.7261, -194.546, -35.3127, 0.83 ) }
    dend_39 { pt3dadd( 11.5591, -195.724, -35.7293, 0.55 ) }
    dend_39 { pt3dadd( 11.2248, -197.358, -36.4155, 0.28 ) }
    dend_39 { pt3dadd( 10.7605, -198.912, -37.1967, 0.55 ) }
    dend_39 { pt3dadd( 10.0896, -201.01, -38.2029, 3.6 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 32/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 12.4182, -181.177, -32.4046, 0.28 ) }
    dend_38 { pt3dadd( 11.5927, -180.402, -29.3092, 0.28 ) }
    dend_38 { pt3dadd( 11.4749, -180.291, -28.8675, 1.38 ) }
    dend_38 { pt3dadd( 10.6289, -179.497, -25.6953, 0.55 ) }
    dend_38 { pt3dadd( 10.1448, -179.042, -23.8801, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 70.9158, -195.64, -13.2649, 1.38 ) }
    dend_34 { pt3dadd( 71.4144, -197.836, -13.3082, 1.38 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 39/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 70.9158, -195.64, -13.2649, 0.55 ) }
    dend_33 { pt3dadd( 71.8892, -194.781, -13.9277, 0.55 ) }
    dend_33 { pt3dadd( 72.516, -194.227, -14.3546, 0.55 ) }
    dend_33 { pt3dadd( 74.1692, -192.768, -15.4804, 0.28 ) }
    dend_33 { pt3dadd( 74.705, -192.295, -15.8453, 1.11 ) }
    dend_33 { pt3dadd( 76.3455, -190.847, -16.9625, 0.28 ) }
    dend_33 { pt3dadd( 77.7192, -189.634, -17.898, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 46/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -39.4596, 446.347, 20.3723, 1.38 ) }
    dend_25 { pt3dadd( -39.4584, 447.881, 20.8596, 1.38 ) }
    dend_25 { pt3dadd( -39.6053, 449.261, 21.2945, 0.55 ) }
    dend_25 { pt3dadd( -39.9514, 450.42, 21.794, 0.55 ) }
    dend_25 { pt3dadd( -40.2525, 451.429, 22.2286, 0.55 ) }
    dend_25 { pt3dadd( -40.6021, 452.601, 22.7332, 1.11 ) }
    dend_25 { pt3dadd( -41.3021, 454.946, 23.7436, 0.55 ) }
    dend_25 { pt3dadd( -42.009, 456.62, 24.5433, 1.11 ) }
    dend_25 { pt3dadd( -43.2795, 459.049, 25.8635, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -39.4596, 446.347, 20.3723, 0.55 ) }
    dend_24 { pt3dadd( -39.9522, 448.606, 19.8975, 0.55 ) }
    dend_24 { pt3dadd( -40.2921, 449.549, 19.7453, 0.28 ) }
    dend_24 { pt3dadd( -40.7309, 450.443, 19.5274, 0.83 ) }
    dend_24 { pt3dadd( -41.5825, 452.018, 19.1027, 0.28 ) }
    dend_24 { pt3dadd( -42.3969, 453.362, 18.7366, 0.55 ) }
    dend_24 { pt3dadd( -43.2019, 454.613, 18.4052, 0.55 ) }
    dend_24 { pt3dadd( -44.864, 456.771, 17.7867, 1.11 ) }
    dend_24 { pt3dadd( -46.4351, 458.543, 17.304, 0.55 ) }
    dend_24 { pt3dadd( -47.0454, 459.2, 17.0939, 0.55 ) }
    dend_24 { pt3dadd( -48.4246, 460.66, 16.6109, 0.83 ) }
    dend_24 { pt3dadd( -49.3763, 461.653, 16.2373, 0.83 ) }
    dend_24 { pt3dadd( -50.7324, 463.12, 15.5363, 0.83 ) }
    dend_24 { pt3dadd( -51.431, 463.904, 15.1072, 0.83 ) }
    dend_24 { pt3dadd( -53.0349, 465.975, 13.959, 0.55 ) }
    dend_24 { pt3dadd( -54.1543, 467.718, 12.8638, 0.83 ) }
    dend_24 { pt3dadd( -54.785, 468.844, 12.0347, 0.83 ) }
    dend_24 { pt3dadd( -55.796, 470.827, 10.4828, 0.55 ) }
    dend_24 { pt3dadd( -56.5607, 472.522, 9.15257, 0.55 ) }
    dend_24 { pt3dadd( -57.0212, 473.57, 8.31479, 0.83 ) }
    dend_24 { pt3dadd( -58.1703, 475.981, 6.41122, 0.83 ) }
    dend_24 { pt3dadd( -58.8632, 477.459, 5.22014, 0.83 ) }
    dend_24 { pt3dadd( -59.3641, 478.519, 4.35827, 0.28 ) }
    dend_24 { pt3dadd( -59.7362, 479.309, 3.65162, 0.55 ) }
    dend_24 { pt3dadd( -60.302, 480.648, 1.97648, 0.55 ) }
    dend_24 { pt3dadd( -60.6107, 481.371, 0.928599, 0.55 ) }
    dend_24 { pt3dadd( -60.86, 481.956, -0.0297155, 0.55 ) }
    dend_24 { pt3dadd( -61.4744, 483.375, -2.59052, 0.55 ) }
    dend_24 { pt3dadd( -62.1272, 484.688, -5.38856, 0.83 ) }
    dend_24 { pt3dadd( -63.2915, 486.573, -9.94341, 0.28 ) }
    dend_24 { pt3dadd( -63.6797, 487.07, -11.4514, 0.28 ) }
    dend_24 { pt3dadd( -63.8893, 487.312, -12.3434, 0.55 ) }
    dend_24 { pt3dadd( -64.13, 487.59, -13.5735, 0.28 ) }
    dend_24 { pt3dadd( -64.2549, 487.762, -14.3877, 0.83 ) }
    dend_24 { pt3dadd( -64.419, 488.072, -15.6613, 0.83 ) }
    dend_24 { pt3dadd( -64.7801, 489.211, -19.9962, 0.83 ) }
    dend_24 { pt3dadd( -64.9562, 490.051, -23.346, 0.28 ) }
    dend_24 { pt3dadd( -65.0921, 490.813, -26.6068, 1.11 ) }
    dend_24 { pt3dadd( -65.2758, 491.901, -31.4314, 0.55 ) }
    dend_24 { pt3dadd( -65.3539, 492.175, -32.6974, 0.55 ) }
    dend_24 { pt3dadd( -65.5673, 492.602, -34.9793, 0.55 ) }
    dend_24 { pt3dadd( -65.8165, 492.855, -36.5065, 0.55 ) }
    dend_24 { pt3dadd( -66.2027, 493.069, -38.1495, 0.83 ) }
    dend_24 { pt3dadd( -67.0759, 493.376, -41.0184, 0.55 ) }
    dend_24 { pt3dadd( -67.7733, 493.575, -43.0938, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( -70.0091, 494.2, -49.4839, 0.28 ) }
    dend_24 { pt3dadd( -70.2635, 494.298, -50.2757, 0.55 ) }
    dend_24 { pt3dadd( -71.1186, 494.741, -53.0314, 0.28 ) }
    dend_24 { pt3dadd( -71.7254, 495.105, -55.1283, 1.11 ) }
    dend_24 { pt3dadd( -72.6153, 495.702, -58.5369, 0.55 ) }
    dend_24 { pt3dadd( -72.9228, 496.011, -60.1567, 1.11 ) }
    dend_24 { pt3dadd( -73.4457, 496.815, -64.0525, 0.55 ) }
    dend_24 { pt3dadd( -73.5292, 497.055, -65.1289, 0.55 ) }
    dend_24 { pt3dadd( -73.6195, 497.699, -67.9043, 1.11 ) }
    dend_24 { pt3dadd( -73.5996, 498.045, -69.3264, 1.11 ) }
    dend_24 { pt3dadd( -73.3154, 499.327, -74.3646, 0.28 ) }
    dend_24 { pt3dadd( -73.201, 499.706, -75.8441, 0.83 ) }
    dend_24 { pt3dadd( -72.9915, 500.597, -79.4213, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -31.2819, 396.553, 0.0339752, 0.55 ) }
    dend_16 { pt3dadd( -31.9158, 397.815, 0.259423, 0.55 ) }
    dend_16 { pt3dadd( -32.709, 399.386, 0.472593, 0.28 ) }
    dend_16 { pt3dadd( -33.8435, 401.608, 0.669438, 1.38 ) }
    dend_16 { pt3dadd( -35.5272, 404.803, 0.808684, 0.28 ) }
    dend_16 { pt3dadd( -36.9791, 407.5, 0.832987, 0.55 ) }
    dend_16 { pt3dadd( -37.751, 408.958, 0.818969, 0.55 ) }
    dend_16 { pt3dadd( -38.3978, 410.193, 0.771032, 0.83 ) }
    dend_16 { pt3dadd( -39.3418, 411.975, 0.627767, 0.28 ) }
    dend_16 { pt3dadd( -40.0798, 413.427, 0.399458, 0.83 ) }
    dend_16 { pt3dadd( -40.5401, 414.482, 0.167599, 0.28 ) }
    dend_16 { pt3dadd( -40.9716, 415.534, -0.0245554, 0.28 ) }
    dend_16 { pt3dadd( -41.6345, 417.149, -0.31643, 0.83 ) }
    dend_16 { pt3dadd( -42.3998, 419.07, -0.651295, 0.28 ) }
    dend_16 { pt3dadd( -42.7686, 420.035, -0.81355, 0.55 ) }
    dend_16 { pt3dadd( -43.608, 422.266, -1.1896, 0.55 ) }
    dend_16 { pt3dadd( -44.2464, 423.929, -1.46773, 0.28 ) }
    dend_16 { pt3dadd( -44.5817, 424.759, -1.61283, 0.28 ) }
    dend_16 { pt3dadd( -45.164, 426.253, -1.86128, 1.11 ) }
    dend_16 { pt3dadd( -45.7601, 428.163, -2.23519, 0.28 ) }
    dend_16 { pt3dadd( -46.0906, 429.488, -2.571, 0.83 ) }
    dend_16 { pt3dadd( -46.3238, 430.951, -3.02167, 0.28 ) }
    dend_16 { pt3dadd( -46.3919, 432.67, -3.56526, 0.83 ) }
    dend_16 { pt3dadd( -46.3622, 433.731, -3.88972, 0.83 ) }
    dend_16 { pt3dadd( -46.1388, 436.533, -4.72761, 0.55 ) }
    dend_16 { pt3dadd( -45.9488, 438.422, -5.25859, 0.55 ) }
    dend_16 { pt3dadd( -45.8464, 439.628, -5.576, 0.55 ) }
    dend_16 { pt3dadd( -45.7099, 441.815, -6.10518, 0.83 ) }
    dend_16 { pt3dadd( -45.6525, 443.662, -6.48478, 0.55 ) }
    dend_16 { pt3dadd( -45.7126, 446.366, -6.95637, 1.11 ) }
    dend_16 { pt3dadd( -45.8345, 448.247, -7.21458, 0.55 ) }
    dend_16 { pt3dadd( -45.9838, 450.013, -7.4429, 0.55 ) }
    dend_16 { pt3dadd( -46.0766, 451.136, -7.62915, 0.83 ) }
    dend_16 { pt3dadd( -46.1143, 451.999, -7.83625, 0.55 ) }
    dend_16 { pt3dadd( -46.0571, 455.005, -8.67029, 0.83 ) }
    dend_16 { pt3dadd( -45.9026, 456.23, -9.14633, 0.28 ) }
    dend_16 { pt3dadd( -45.8524, 456.479, -9.26861, 0.28 ) }
    dend_16 { pt3dadd( -45.569, 457.548, -9.85474, 0.55 ) }
    dend_16 { pt3dadd( -44.7609, 460.282, -11.4365, 0.28 ) }
    dend_16 { pt3dadd( -44.6243, 460.797, -11.7155, 0.55 ) }
    dend_16 { pt3dadd( -43.9606, 463.461, -13.0781, 0.28 ) }
    dend_16 { pt3dadd( -43.7395, 464.544, -13.5502, 0.83 ) }
    dend_16 { pt3dadd( -43.5123, 466.423, -14.2847, 0.83 ) }
    dend_16 { pt3dadd( -43.474, 467.215, -14.539, 0.28 ) }
    dend_16 { pt3dadd( -43.4027, 469.588, -15.0684, 0.55 ) }
    dend_16 { pt3dadd( -43.3895, 471.13, -15.3304, 0.28 ) }
    dend_16 { pt3dadd( -43.4949, 473.131, -15.3842, 0.83 ) }
    dend_16 { pt3dadd( -43.6776, 475.771, -15.2657, 0.28 ) }
    dend_16 { pt3dadd( -43.7763, 476.912, -15.0996, 0.28 ) }
    dend_16 { pt3dadd( -43.9488, 478.5, -14.7399, 0.55 ) }
    dend_16 { pt3dadd( -44.2293, 480.93, -14.1668, 0.83 ) }
    dend_16 { pt3dadd( -44.6846, 484.146, -13.4053, 0.28 ) }
    dend_16 { pt3dadd( -44.8279, 485.504, -13.1257, 0.83 ) }
    dend_16 { pt3dadd( -44.9497, 487.757, -12.8416, 0.28 ) }
    dend_16 { pt3dadd( -44.8359, 490.728, -12.8395, 1.38 ) }
    dend_16 { pt3dadd( -44.5628, 493.38, -13.1009, 0.28 ) }
    dend_16 { pt3dadd( -44.1429, 495.703, -13.4781, 0.83 ) }
    dend_16 { pt3dadd( -43.6057, 497.937, -13.99, 0.83 ) }
    dend_16 { pt3dadd( -42.6784, 501.45, -14.8506, 0.55 ) }
    dend_16 { pt3dadd( -41.7699, 505.04, -15.8391, 0.55 ) }
    dend_16 { pt3dadd( -41.1989, 507.57, -16.4299, 0.83 ) }
    dend_16 { pt3dadd( -40.9282, 509.516, -16.6525, 0.83 ) }
    dend_16 { pt3dadd( -40.7838, 512.034, -16.7022, 0.55 ) }
    dend_16 { pt3dadd( -40.9346, 513.696, -16.4597, 0.55 ) }
    dend_16 { pt3dadd( -41.4144, 516.128, -15.698, 1.38 ) }
    dend_16 { pt3dadd( -42.3064, 519.13, -14.4975, 0.83 ) }
    dend_16 { pt3dadd( -43.5204, 522.57, -12.8218, 1.11 ) }
    dend_16 { pt3dadd( -44.2264, 524.259, -11.8454, 1.11 ) }
    dend_16 { pt3dadd( -45.8291, 527.66, -9.42922, 0.83 ) }
    dend_16 { pt3dadd( -46.1712, 528.393, -8.82222, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 83/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -31.2819, 396.553, 0.0339752, 0.28 ) }
    dend_15 { pt3dadd( -29.349, 396.367, 1.53716, 0.28 ) }
    dend_15 { pt3dadd( -28.8569, 396.32, 1.91985, 0.83 ) }
    dend_15 { pt3dadd( -27.3402, 396.174, 3.09931, 0.28 ) }
    dend_15 { pt3dadd( -27.118, 396.153, 3.27213, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 18.2369, 456.4, -41.5208, 0.55 ) }
    dend_7 { pt3dadd( 19.0839, 458.304, -41.705, 0.55 ) }
    dend_7 { pt3dadd( 19.9797, 460.43, -41.9558, 0.55 ) }
    dend_7 { pt3dadd( 20.4558, 461.657, -42.112, 0.55 ) }
    dend_7 { pt3dadd( 21.1443, 463.25, -42.335, 0.28 ) }
    dend_7 { pt3dadd( 21.8512, 464.703, -42.5625, 0.83 ) }
    dend_7 { pt3dadd( 22.952, 466.914, -42.9164, 0.28 ) }
    dend_7 { pt3dadd( 23.3783, 467.802, -43.0653, 0.83 ) }
    dend_7 { pt3dadd( 23.9756, 469.172, -43.2935, 0.55 ) }
    dend_7 { pt3dadd( 24.8156, 471.098, -43.6567, 0.55 ) }
    dend_7 { pt3dadd( 25.2892, 472.242, -43.8854, 0.83 ) }
    dend_7 { pt3dadd( 25.8001, 473.696, -44.163, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 26.1931, 474.887, -44.3445, 0.83 ) }
    dend_7 { pt3dadd( 26.5996, 476.244, -44.5553, 0.83 ) }
    dend_7 { pt3dadd( 26.8515, 477.244, -44.7768, 0.28 ) }
    dend_7 { pt3dadd( 27.0531, 478.693, -45.1269, 0.83 ) }
    dend_7 { pt3dadd( 27.1014, 479.909, -45.4758, 0.83 ) }
    dend_7 { pt3dadd( 26.9637, 481.43, -46.1693, 0.83 ) }
    dend_7 { pt3dadd( 26.5867, 483.138, -47.1698, 1.11 ) }
    dend_7 { pt3dadd( 25.8803, 485.111, -48.7969, 0.55 ) }
    dend_7 { pt3dadd( 25.0721, 486.542, -50.2145, 0.55 ) }
    dend_7 { pt3dadd( 24.1147, 487.843, -51.6884, 1.11 ) }
    dend_7 { pt3dadd( 22.1572, 490.024, -54.5755, 0.28 ) }
    dend_7 { pt3dadd( 21.6054, 490.585, -55.4076, 0.28 ) }
    dend_7 { pt3dadd( 19.8044, 492.324, -58.14, 0.83 ) }
    dend_7 { pt3dadd( 18.7577, 493.324, -59.8333, 0.55 ) }
    dend_7 { pt3dadd( 18.4122, 493.661, -60.4763, 0.55 ) }
    dend_7 { pt3dadd( 17.3756, 494.76, -62.5209, 0.55 ) }
    dend_7 { pt3dadd( 16.6225, 495.596, -64.0198, 0.83 ) }
    dend_7 { pt3dadd( 15.161, 497.13, -66.9098, 0.55 ) }
    dend_7 { pt3dadd( 12.4378, 499.873, -72.1291, 1.94 ) }
    dend_7 { pt3dadd( 10.0626, 502.193, -76.9603, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 18.2369, 456.4, -41.5208, 0.55 ) }
    dend_6 { pt3dadd( 17.3833, 459.104, -41.796, 0.55 ) }
    dend_6 { pt3dadd( 16.6232, 461.608, -42.1285, 0.83 ) }
    dend_6 { pt3dadd( 16.2635, 462.827, -42.3812, 0.55 ) }
    dend_6 { pt3dadd( 15.6828, 465.532, -43.0471, 0.83 ) }
    dend_6 { pt3dadd( 14.9978, 469.432, -44.1101, 0.55 ) }
    dend_6 { pt3dadd( 14.6312, 471.127, -44.6423, 0.55 ) }
    dend_6 { pt3dadd( 14.2531, 472.717, -45.3507, 1.11 ) }
    dend_6 { pt3dadd( 13.7881, 474.943, -46.5334, 0.83 ) }
    dend_6 { pt3dadd( 13.1853, 477.711, -48.2151, 0.83 ) }
    dend_6 { pt3dadd( 12.357, 480.931, -50.4002, 0.83 ) }
    dend_6 { pt3dadd( 11.3743, 483.619, -52.3369, 0.55 ) }
    dend_6 { pt3dadd( 10.1233, 486.637, -54.5112, 0.28 ) }
    dend_6 { pt3dadd( 8.56092, 489.556, -57.3483, 0.83 ) }
    dend_6 { pt3dadd( 7.21038, 491.744, -59.7855, 0.55 ) }
    dend_6 { pt3dadd( 5.51345, 494.225, -62.8231, 1.38 ) }
    dend_6 { pt3dadd( 3.95999, 496.537, -65.7941, 0.55 ) }
    dend_6 { pt3dadd( 3.09235, 497.932, -67.546, 0.55 ) }
    dend_6 { pt3dadd( -2.41473, 507.193, -78.726, 0.83 ) }
    dend_6 { pt3dadd( -3.26213, 508.57, -80.3992, 0.55 ) }
    dend_6 { pt3dadd( -3.44018, 508.904, -80.7864, 0.55 ) }
    dend_6 { pt3dadd( -4.39195, 511.012, -83.0059, 1.38 ) }
    dend_6 { pt3dadd( -4.9245, 512.675, -84.4129, 1.38 ) }
    dend_6 { pt3dadd( -5.6476, 516.074, -85.9937, 0.28 ) }
    dend_6 { pt3dadd( -5.75831, 517.569, -85.8333, 0.55 ) }
    dend_6 { pt3dadd( -5.76975, 520.125, -85.3804, 0.28 ) }
    dend_6 { pt3dadd( -5.76577, 522.877, -84.7752, 0.55 ) }
    dend_6 { pt3dadd( -5.74859, 527.699, -83.3342, 0.55 ) }
    dend_6 { pt3dadd( -5.73271, 530.65, -82.3329, 0.55 ) }
    dend_6 { pt3dadd( -5.67509, 534.146, -81.0042, 0.55 ) }
    dend_6 { pt3dadd( -5.44712, 537.005, -79.8014, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -20.4441, -137.252, 19.9154, 0.55 ) }
    dend_55 { pt3dadd( -22.4112, -137.975, 21.0305, 0.55 ) }
    dend_55 { pt3dadd( -23.9865, -138.553, 21.9432, 0.28 ) }
    dend_55 { pt3dadd( -25.431, -139.083, 22.7803, 1.11 ) }
    dend_55 { pt3dadd( -30.7129, -141.022, 25.8408, 0.28 ) }
    dend_55 { pt3dadd( -31.4013, -141.274, 26.2397, 1.11 ) }
    dend_55 { pt3dadd( -34.967, -142.583, 28.3059, 0.28 ) }
    dend_55 { pt3dadd( -35.8835, -142.902, 28.9688, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 59/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -20.4441, -137.252, 19.9154, 0.83 ) }
    dend_54 { pt3dadd( -22.1911, -139.027, 21.2848, 0.83 ) }
    dend_54 { pt3dadd( -23.8817, -140.482, 22.5886, 0.83 ) }
    dend_54 { pt3dadd( -25.4043, -141.461, 23.8773, 0.83 ) }
    dend_54 { pt3dadd( -28.0793, -143.037, 26.1465, 0.83 ) }
    dend_54 { pt3dadd( -29.8834, -144.251, 28.1242, 0.83 ) }
    dend_54 { pt3dadd( -32.1512, -146.032, 31.083, 0.83 ) }
    dend_54 { pt3dadd( -33.3276, -147.079, 32.854, 0.83 ) }
    dend_54 { pt3dadd( -35.7447, -149.899, 37.2026, 1.11 ) }
    dend_54 { pt3dadd( -36.1804, -150.639, 38.2721, 1.11 ) }
    dend_54 { pt3dadd( -37.5583, -154.422, 43.1328, 1.11 ) }
    dend_54 { pt3dadd( -38.1824, -157.062, 46.1321, 1.11 ) }
    dend_54 { pt3dadd( -38.5376, -159.501, 48.569, 1.11 ) }
    dend_54 { pt3dadd( -38.6894, -161.769, 50.6466, 1.38 ) }
    dend_54 { pt3dadd( -38.6955, -165.434, 53.565, 0.55 ) }
    dend_54 { pt3dadd( -38.7152, -166.985, 54.7201, 0.83 ) }
    dend_54 { pt3dadd( -38.8211, -168.514, 55.6596, 0.83 ) }
    dend_54 { pt3dadd( -38.8524, -169.817, 56.4793, 0.83 ) }
    dend_54 { pt3dadd( -38.9182, -171.059, 57.3226, 0.83 ) }
    dend_54 { pt3dadd( -39.0411, -173.462, 58.6692, 0.55 ) }
    dend_54 { pt3dadd( -39.2247, -175.106, 59.2267, 0.55 ) }
    dend_54 { pt3dadd( -39.3815, -176.023, 59.4283, 1.11 ) }
    dend_54 { pt3dadd( -39.7194, -177.732, 59.624, 0.28 ) }
    dend_54 { pt3dadd( -39.9386, -178.656, 59.6785, 1.11 ) }
    dend_54 { pt3dadd( -40.5827, -180.685, 59.6036, 0.55 ) }
    dend_54 { pt3dadd( -41.314, -182.657, 59.2067, 0.55 ) }
    dend_54 { pt3dadd( -42.3442, -184.857, 58.5912, 0.28 ) }
    dend_54 { pt3dadd( -42.7077, -185.556, 58.3283, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 87/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -113.405, -131.578, -21.278, 1.11 ) }
    dend_50 { pt3dadd( -116.064, -131.384, -21.8172, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 89/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -113.405, -131.578, -21.278, 0.28 ) }
    dend_49 { pt3dadd( -114.048, -134.126, -22.157, 0.28 ) }
    dend_49 { pt3dadd( -114.17, -134.61, -22.3237, 0.83 ) }
    dend_49 { pt3dadd( -114.77, -136.991, -23.145, 0.28 ) }
    dend_49 { pt3dadd( -114.94, -137.662, -23.3765, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 10.0896, -201.01, -38.2029, 0.55 ) }
    dend_41 { pt3dadd( 9.40036, -202.61, -36.1977, 0.55 ) }
    dend_41 { pt3dadd( 8.83093, -203.73, -34.8778, 0.55 ) }
    dend_41 { pt3dadd( 8.003, -205.705, -32.102, 0.28 ) }
    dend_41 { pt3dadd( 7.78897, -206.324, -31.2969, 0.55 ) }
    dend_41 { pt3dadd( 7.4583, -207.277, -30.0573, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 7.03385, -208.529, -28.4751, 0.28 ) }
    dend_41 { pt3dadd( 6.67309, -209.46, -27.2106, 0.55 ) }
    dend_41 { pt3dadd( 5.487, -212.031, -23.7625, 0.28 ) }
    dend_41 { pt3dadd( 4.39891, -214.175, -20.9666, 0.83 ) }
    dend_41 { pt3dadd( 3.36418, -216.358, -18.1009, 0.28 ) }
    dend_41 { pt3dadd( 3.08925, -216.989, -17.2738, 0.83 ) }
    dend_41 { pt3dadd( 2.38867, -218.581, -15.1667, 0.83 ) }
    dend_41 { pt3dadd( 1.55225, -220.171, -13.0676, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 10.0896, -201.01, -38.2029, 0.28 ) }
    dend_40 { pt3dadd( 10.2475, -204.865, -37.9058, 0.28 ) }
    dend_40 { pt3dadd( 10.349, -206.218, -37.7437, 0.55 ) }
    dend_40 { pt3dadd( 10.5671, -208.491, -37.4323, 0.28 ) }
    dend_40 { pt3dadd( 10.8633, -211.226, -37.042, 1.11 ) }
    dend_40 { pt3dadd( 11.2495, -214.478, -36.5781, 0.28 ) }
    dend_40 { pt3dadd( 11.3706, -215.341, -36.4658, 0.55 ) }
    dend_40 { pt3dadd( 11.5947, -216.68, -36.1665, 0.28 ) }
    dend_40 { pt3dadd( 11.7569, -217.515, -35.9557, 0.55 ) }
    dend_40 { pt3dadd( 11.941, -218.58, -35.6258, 0.28 ) }
    dend_40 { pt3dadd( 12.0221, -219.172, -35.4569, 0.55 ) }
    dend_40 { pt3dadd( 12.1624, -221.125, -35.1461, 0.28 ) }
    dend_40 { pt3dadd( 12.2531, -222.854, -34.9604, 1.11 ) }
    dend_40 { pt3dadd( 12.4586, -226.502, -34.3563, 0.28 ) }
    dend_40 { pt3dadd( 12.6138, -228.611, -33.955, 1.11 ) }
    dend_40 { pt3dadd( 12.7328, -230.29, -33.6229, 1.11 ) }
    dend_40 { pt3dadd( 12.9417, -233.409, -32.9896, 0.28 ) }
    dend_40 { pt3dadd( 13.0718, -235.385, -32.5832, 0.83 ) }
    dend_40 { pt3dadd( 13.5031, -239.586, -31.8615, 0.55 ) }
    dend_40 { pt3dadd( 13.7661, -241.916, -31.6413, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 71.4144, -197.836, -13.3082, 0.28 ) }
    dend_36 { pt3dadd( 74.0791, -199.161, -13.9952, 0.28 ) }
    dend_36 { pt3dadd( 75.0109, -199.614, -14.2426, 0.83 ) }
    dend_36 { pt3dadd( 76.4649, -200.341, -14.6465, 0.28 ) }
    dend_36 { pt3dadd( 78.4873, -201.387, -15.2296, 0.83 ) }
    dend_36 { pt3dadd( 80.4949, -202.499, -15.8188, 0.28 ) }
    dend_36 { pt3dadd( 81.9766, -203.315, -16.2728, 0.55 ) }
    dend_36 { pt3dadd( 82.7684, -203.711, -16.5282, 0.28 ) }
    dend_36 { pt3dadd( 84.4824, -204.498, -17.1391, 0.55 ) }
    dend_36 { pt3dadd( 85.6042, -204.999, -17.5678, 0.28 ) }
    dend_36 { pt3dadd( 86.8598, -205.533, -18.0633, 0.55 ) }
    dend_36 { pt3dadd( 88.4714, -206.145, -18.7437, 0.55 ) }
    dend_36 { pt3dadd( 90.0391, -206.737, -19.5209, 0.55 ) }
    dend_36 { pt3dadd( 92.1089, -207.577, -20.6531, 0.83 ) }
    dend_36 { pt3dadd( 93.285, -208.127, -21.4537, 0.28 ) }
    dend_36 { pt3dadd( 94.3413, -208.735, -22.2746, 0.83 ) }
    dend_36 { pt3dadd( 95.5044, -209.381, -22.9381, 1.38 ) }
    dend_36 { pt3dadd( 98.2177, -210.922, -24.0763, 0.28 ) }
    dend_36 { pt3dadd( 99.7132, -211.873, -24.6535, 0.83 ) }
    dend_36 { pt3dadd( 102.045, -213.4, -25.4943, 0.28 ) }
    dend_36 { pt3dadd( 103.549, -214.364, -25.9695, 1.11 ) }
    dend_36 { pt3dadd( 109.468, -218.018, -27.3849, 0.28 ) }
    dend_36 { pt3dadd( 110.248, -218.481, -27.5199, 0.55 ) }
    dend_36 { pt3dadd( 114.248, -220.757, -28.0351, 0.28 ) }
    dend_36 { pt3dadd( 116.921, -222.332, -28.3749, 0.28 ) }
    dend_36 { pt3dadd( 118.07, -223.087, -28.5114, 0.55 ) }
    dend_36 { pt3dadd( 119.799, -224.332, -28.8798, 0.28 ) }
    dend_36 { pt3dadd( 120.68, -225.18, -29.2866, 0.28 ) }
    dend_36 { pt3dadd( 121.815, -226.301, -29.7405, 0.55 ) }
    dend_36 { pt3dadd( 123.29, -227.659, -29.9658, 0.55 ) }
    dend_36 { pt3dadd( 124.12, -228.85, -30.1136, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 59/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 71.4144, -197.836, -13.3082, 0.55 ) }
    dend_35 { pt3dadd( 69.5591, -198.988, -12.3445, 0.55 ) }
    dend_35 { pt3dadd( 68.7902, -199.465, -11.9451, 0.55 ) }
    dend_35 { pt3dadd( 67.8424, -200.053, -11.4527, 0.28 ) }
    dend_35 { pt3dadd( 66.5887, -200.832, -10.8015, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -43.2795, 459.049, 25.8635, 0.83 ) }
    dend_27 { pt3dadd( -43.7539, 461.924, 27.0304, 0.83 ) }
    dend_27 { pt3dadd( -44.4145, 466.362, 28.8198, 0.83 ) }
    dend_27 { pt3dadd( -44.8404, 469.394, 30.0713, 0.83 ) }
    dend_27 { pt3dadd( -45.9135, 475.678, 32.5558, 0.83 ) }
    dend_27 { pt3dadd( -46.0288, 476.404, 32.7875, 1.11 ) }
    dend_27 { pt3dadd( -46.3275, 478.299, 33.2694, 0.55 ) }
    dend_27 { pt3dadd( -46.5315, 479.421, 33.4807, 0.83 ) }
    dend_27 { pt3dadd( -46.1621, 480.322, 31.2237, 0.28 ) }
    dend_27 { pt3dadd( -45.5132, 481.198, 28.8891, 0.55 ) }
    dend_27 { pt3dadd( -43.0299, 484.043, 21.7295, 0.28 ) }
    dend_27 { pt3dadd( -42.2752, 484.977, 19.691, 0.83 ) }
    dend_27 { pt3dadd( -41.651, 485.752, 18.1513, 0.83 ) }
    dend_27 { pt3dadd( -37.4809, 491.069, 8.93441, 0.55 ) }
    dend_27 { pt3dadd( -36.2291, 492.672, 6.55598, 0.55 ) }
    dend_27 { pt3dadd( -35.106, 494.292, 4.9835, 1.11 ) }
    dend_27 { pt3dadd( -32.5434, 500.09, 3.06506, 0.55 ) }
    dend_27 { pt3dadd( -32.2754, 500.912, 3.01898, 0.83 ) }
    dend_27 { pt3dadd( -32.045, 502.237, 3.34255, 0.28 ) }
    dend_27 { pt3dadd( -32.0287, 502.945, 3.65885, 0.55 ) }
    dend_27 { pt3dadd( -32.0849, 504.08, 3.97727, 0.28 ) }
    dend_27 { pt3dadd( -32.1541, 505.654, 4.10926, 0.83 ) }
    dend_27 { pt3dadd( -32.0382, 507.305, 4.00507, 0.28 ) }
    dend_27 { pt3dadd( -31.9706, 508.4, 3.91288, 0.83 ) }
    dend_27 { pt3dadd( -31.6703, 511.917, 3.26972, 0.55 ) }
    dend_27 { pt3dadd( -31.3221, 515.105, 2.47426, 0.55 ) }
    dend_27 { pt3dadd( -31.0531, 517.463, 1.786, 0.55 ) }
    dend_27 { pt3dadd( -30.6665, 520.752, 0.803187, 0.55 ) }
    dend_27 { pt3dadd( -30.4126, 522.96, 0.0715303, 0.55 ) }
    dend_27 { pt3dadd( -29.9298, 527.739, -1.48682, 0.55 ) }
    dend_27 { pt3dadd( -29.7544, 529.224, -1.97526, 0.28 ) }
    dend_27 { pt3dadd( -29.5707, 530.541, -2.44548, 0.55 ) }
    dend_27 { pt3dadd( -29.361, 532.365, -3.13004, 0.28 ) }
    dend_27 { pt3dadd( -29.1616, 535.19, -4.31675, 0.55 ) }
    dend_27 { pt3dadd( -29.0922, 536.36, -4.7781, 0.55 ) }
    dend_27 { pt3dadd( -28.9465, 538.578, -5.52159, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -28.6897, 540.672, -6.33172, 0.28 ) }
    dend_27 { pt3dadd( -28.4508, 541.746, -6.74928, 0.55 ) }
    dend_27 { pt3dadd( -27.4358, 544.127, -8.17189, 0.28 ) }
    dend_27 { pt3dadd( -26.579, 545.358, -9.15689, 0.83 ) }
    dend_27 { pt3dadd( -25.5814, 546.657, -10.2817, 0.83 ) }
    dend_27 { pt3dadd( -23.6157, 548.932, -12.3987, 0.55 ) }
    dend_27 { pt3dadd( -21.9727, 550.588, -14.1073, 0.55 ) }
    dend_27 { pt3dadd( -16.7138, 555.382, -19.4947, 0.28 ) }
    dend_27 { pt3dadd( -13.0383, 558.339, -23.1243, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -43.2795, 459.049, 25.8635, 0.55 ) }
    dend_26 { pt3dadd( -44.9458, 461.491, 25.6629, 0.55 ) }
    dend_26 { pt3dadd( -47.1387, 464.704, 25.399, 0.55 ) }
    dend_26 { pt3dadd( -48.6813, 466.965, 25.2133, 0.55 ) }
    dend_26 { pt3dadd( -50.0205, 468.927, 25.0521, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 14/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -46.1712, 528.393, -8.82222, 0.28 ) }
    dend_22 { pt3dadd( -45.3397, 528.78, -9.60401, 0.28 ) }
    dend_22 { pt3dadd( -45.1085, 528.888, -9.82146, 0.55 ) }
    dend_22 { pt3dadd( -42.8336, 529.947, -11.9603, 0.28 ) }
    dend_22 { pt3dadd( -42.5755, 530.067, -12.2031, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -46.1712, 528.393, -8.82222, 0.28 ) }
    dend_17 { pt3dadd( -47.6572, 530.155, -9.90909, 0.28 ) }
    dend_17 { pt3dadd( -48.5758, 531.244, -10.5809, 0.83 ) }
    dend_17 { pt3dadd( -49.2626, 532.058, -11.0832, 0.83 ) }
    dend_17 { pt3dadd( -49.6972, 532.573, -11.4011, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 10.0626, 502.193, -76.9603, 0.55 ) }
    dend_9 { pt3dadd( 7.55754, 503.184, -76.8798, 0.55 ) }
    dend_9 { pt3dadd( 4.56497, 504.388, -76.9867, 0.55 ) }
    dend_9 { pt3dadd( 2.33056, 505.287, -77.0666, 0.55 ) }
    dend_9 { pt3dadd( -0.264003, 506.331, -77.1593, 0.28 ) }
    dend_9 { pt3dadd( -2.61074, 507.275, -77.2432, 0.83 ) }
    dend_9 { pt3dadd( -4.41921, 508.003, -77.3078, 0.83 ) }
    dend_9 { pt3dadd( -6.35031, 508.878, -77.5623, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 10.0626, 502.193, -76.9603, 0.55 ) }
    dend_8 { pt3dadd( 9.2578, 504.256, -77.4023, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 34/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -116.064, -131.384, -21.8172, 0.28 ) }
    dend_52 { pt3dadd( -117.541, -131.373, -22.6613, 0.28 ) }
    dend_52 { pt3dadd( -119.015, -131.282, -23.511, 0.55 ) }
    dend_52 { pt3dadd( -120.666, -131.149, -24.4511, 0.28 ) }
    dend_52 { pt3dadd( -121.604, -131.079, -24.9448, 1.11 ) }
    dend_52 { pt3dadd( -123.057, -130.955, -25.6626, 0.28 ) }
    dend_52 { pt3dadd( -123.424, -130.923, -25.8621, 0.55 ) }
    dend_52 { pt3dadd( -125.46, -130.766, -27.0431, 0.28 ) }
    dend_52 { pt3dadd( -126.039, -130.712, -27.3885, 1.11 ) }
    dend_52 { pt3dadd( -127.348, -130.615, -28.1675, 0.28 ) }
    dend_52 { pt3dadd( -128.128, -130.561, -28.62, 1.11 ) }
    dend_52 { pt3dadd( -130.01, -130.421, -29.6251, 1.11 ) }
    dend_52 { pt3dadd( -131.288, -130.382, -30.3694, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 47/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -116.064, -131.384, -21.8172, 0.83 ) }
    dend_51 { pt3dadd( -117.299, -132.915, -22.7117, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 49/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 1.55225, -220.171, -13.0676, 0.83 ) }
    dend_43 { pt3dadd( 0.861487, -221.018, -13.647, 0.83 ) }
    dend_43 { pt3dadd( -0.295207, -222.435, -14.6171, 0.28 ) }
    dend_43 { pt3dadd( -1.26539, -223.624, -15.4309, 1.11 ) }
    dend_43 { pt3dadd( -4.00685, -226.985, -17.7303, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.55225, -220.171, -13.0676, 1.11 ) }
    dend_42 { pt3dadd( 0.118302, -218.631, -11.5918, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -49.6972, 532.573, -11.4011, 0.55 ) }
    dend_21 { pt3dadd( -48.3673, 533.468, -12.6657, 0.55 ) }
    dend_21 { pt3dadd( -47.0087, 534.305, -13.7302, 0.28 ) }
    dend_21 { pt3dadd( -46.6368, 534.504, -14.1197, 0.55 ) }
    dend_21 { pt3dadd( -44.0122, 535.901, -16.8691, 0.28 ) }
    dend_21 { pt3dadd( -42.7813, 536.556, -18.1584, 0.55 ) }
    dend_21 { pt3dadd( -41.1079, 537.447, -19.9112, 0.28 ) }
    dend_21 { pt3dadd( -39.9472, 538.083, -21.4144, 0.55 ) }
    dend_21 { pt3dadd( -36.564, 540.013, -26.4915, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -49.6972, 532.573, -11.4011, 0.28 ) }
    dend_18 { pt3dadd( -50.6742, 532.737, -11.5761, 0.28 ) }
    dend_18 { pt3dadd( -52.1822, 532.99, -11.8462, 0.55 ) }
    dend_18 { pt3dadd( -53.4619, 533.205, -12.0755, 0.55 ) }
    dend_18 { pt3dadd( -54.8122, 533.431, -12.3173, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -6.35031, 508.878, -77.5623, 0.55 ) }
    dend_11 { pt3dadd( -6.834, 510.181, -77.1455, 0.55 ) }
    dend_11 { pt3dadd( -7.30153, 511.439, -76.7427, 0.55 ) }
    dend_11 { pt3dadd( -7.72651, 512.583, -76.3765, 0.83 ) }
    dend_11 { pt3dadd( -8.24224, 513.971, -75.9322, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 75/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -6.35031, 508.878, -77.5623, 0.28 ) }
    dend_10 { pt3dadd( -9.02784, 510.15, -77.64, 0.28 ) }
    dend_10 { pt3dadd( -9.7626, 510.499, -77.6613, 0.28 ) }
    dend_10 { pt3dadd( -11.2483, 511.205, -77.7045, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 79/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -4.00685, -226.985, -17.7303, 1.11 ) }
    dend_45 { pt3dadd( -2.87123, -229.317, -16.0814, 1.11 ) }
    dend_45 { pt3dadd( -1.70056, -231.694, -14.2544, 0.28 ) }
    dend_45 { pt3dadd( -0.93522, -233.348, -12.941, 1.11 ) }
    dend_45 { pt3dadd( 1.14344, -237.903, -8.92155, 0.28 ) }
    dend_45 { pt3dadd( 1.63622, -239.037, -7.88719, 1.94 ) }
    dend_45 { pt3dadd( 2.94383, -242.362, -5.01075, 1.11 ) }
    dend_45 { pt3dadd( 3.19827, -243.101, -4.35652, 0.28 ) }
    dend_45 { pt3dadd( 3.44886, -243.956, -3.59391, 0.83 ) }
    dend_45 { pt3dadd( 3.92353, -246.272, -1.76802, 0.28 ) }
    dend_45 { pt3dadd( 3.98318, -247.376, -1.15293, 1.11 ) }
    dend_45 { pt3dadd( 4.01576, -250.341, 0.223463, 0.28 ) }
    dend_45 { pt3dadd( 3.88206, -252.729, 1.10668, 0.28 ) }
    dend_45 { pt3dadd( 3.83708, -253.983, 1.52988, 1.11 ) }
    dend_45 { pt3dadd( 3.83708, -253.983, 1.52988, 1.11 ) }
    dend_45 { pt3dadd( 3.73748, -255.558, 1.86489, 0.55 ) }
    dend_45 { pt3dadd( 3.69258, -256.247, 2.0365, 1.38 ) }
    dend_45 { pt3dadd( 3.48764, -258.859, 2.94567, 0.28 ) }
    dend_45 { pt3dadd( 3.47956, -259.138, 3.06272, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 98/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -4.00685, -226.985, -17.7303, 0.55 ) }
    dend_44 { pt3dadd( -6.24131, -226.87, -15.6634, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_44 { pt3dadd( -7.62588, -226.798, -14.3827, 0.55 ) }
    dend_44 { pt3dadd( -8.81206, -226.737, -13.2854, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -54.8122, 533.431, -12.3173, 0.55 ) }
    dend_20 { pt3dadd( -55.4733, 534.795, -12.1953, 0.55 ) }
    dend_20 { pt3dadd( -56.5148, 537.294, -11.8338, 0.55 ) }
    dend_20 { pt3dadd( -57.0438, 538.97, -11.5792, 0.55 ) }
    dend_20 { pt3dadd( -57.6235, 541.043, -11.3282, 0.55 ) }
    dend_20 { pt3dadd( -58.1376, 542.955, -11.0267, 0.28 ) }
    dend_20 { pt3dadd( -58.3438, 543.829, -10.9342, 0.83 ) }
    dend_20 { pt3dadd( -58.7793, 546.324, -10.7575, 0.83 ) }
    dend_20 { pt3dadd( -58.9947, 548.468, -10.6062, 0.83 ) }
    dend_20 { pt3dadd( -59.0689, 549.567, -10.5724, 0.55 ) }
    dend_20 { pt3dadd( -59.0373, 552.368, -10.5299, 0.83 ) }
    dend_20 { pt3dadd( -58.7318, 555.536, -10.6538, 0.28 ) }
    dend_20 { pt3dadd( -58.5526, 557.052, -10.8567, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -54.8122, 533.431, -12.3173, 0.55 ) }
    dend_19 { pt3dadd( -58.6778, 532.051, -11.3526, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_29, dend_0, axon_0, dend_57, dend_30, dend_12, dend_1, axon_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_5 = new SectionList()
    dend_29 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_57 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_58 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_5 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_16 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_54 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_36 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_53 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_59 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_61 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_55 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_39 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_42 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_50 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_49 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_43 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_52 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_4 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_14 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_17 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_20 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 3
    dend_0 nseg = 3
    dend_57 nseg = 3
    dend_12 nseg = 15
    dend_1 nseg = 17
    dend_58 nseg = 3
    dend_31 nseg = 3
    dend_28 nseg = 9
    dend_60 nseg = 3
    dend_56 nseg = 7
    dend_32 nseg = 5
    dend_23 nseg = 5
    dend_5 nseg = 3
    dend_48 nseg = 5
    dend_24 nseg = 7
    dend_16 nseg = 7
    dend_7 nseg = 3
    dend_6 nseg = 5
    dend_54 nseg = 3
    dend_40 nseg = 3
    dend_36 nseg = 3
    dend_27 nseg = 7
    dend_45 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L4_DBC_972df9520e_0_0


