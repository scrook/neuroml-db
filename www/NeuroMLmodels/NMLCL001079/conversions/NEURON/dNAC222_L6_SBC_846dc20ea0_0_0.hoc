// Cell: dNAC222_L6_SBC_846dc20ea0_0_0
/*
{
  "id" : "dNAC222_L6_SBC_846dc20ea0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.46247, 5.85861, -0.00377942, 7.43125", "-6.65141, 5.3667, -0.00311965, 9.16559", "-5.84034, 4.87478, -0.00245988, 11.1008", "-5.02928, 4.38287, -0.0018001, 12.7187", "-4.21821, 3.89095, -0.00114033, 13.407", "-3.40715, 3.39904, -4.80554E-4, 14.0331", "-2.59608, 2.90712, 1.79219E-4, 14.6433", "-1.78502, 2.41521, 8.38993E-4, 15.2536", "-0.973954, 1.92329, 0.00149877, 15.5093", "-0.162889, 1.43138, 0.00215854, 15.3073", "0.648176, 0.939463, 0.00281831, 15.1053", "1.45924, 0.447548, 0.00347809, 14.9033", "2.27031, -0.0443665, 0.00413786, 14.4818", "3.08137, -0.536281, 0.00479764, 13.7638", "3.89244, -1.0282, 0.00545741, 12.8143", "4.7035, -1.52011, 0.00611718, 11.7232", "5.51457, -2.01203, 0.00677696, 10.29", "6.32563, -2.50394, 0.00743673, 8.85677", "7.1367, -2.99586, 0.0080965, 7.04177", "7.94776, -3.48777, 0.00875628, 4.64246", "8.75883, -3.97969, 0.00941605, 2.78846" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.16814, 7.81548, -1.4503, 1.32", "-2.56963, 8.91516, -1.95017, 1.32", "-2.87281, 9.74927, -2.37915, 1.32", "-3.62295, 11.6361, -3.43982, 2.04", "-4.7718, 14.0605, -4.91037, 1.32", "-5.62894, 15.8148, -5.98093, 1.8", "-6.4566, 17.5087, -7.01467, 1.32", "-7.1539, 18.9025, -7.94132, 1.68", "-7.76316, 20.0913, -8.80677, 1.68", "-8.66352, 21.7892, -10.1979, 1.08", "-9.32705, 22.8446, -11.0184, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.03186, -3.28977, -1.5003, 1.8", "6.92508, -3.90334, -2.46312, 1.8", "8.81899, -5.20429, -4.50458, 1.8", "10.1101, -6.09121, -5.89635, 1.8", "11.3233, -6.92453, -7.20401, 2.16", "13.4314, -8.3726, -9.47634, 2.4", "13.754, -8.59422, -9.8241, 2.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.09186, -5.14227, 5.0897, 2.64", "3.22133, -6.02574, 5.74363, 2.64", "3.43203, -7.12291, 6.50423, 2.64", "4.58533, -11.6259, 9.33896, 1.92", "5.43007, -14.2543, 10.8509, 1.92", "6.44828, -16.9369, 12.2772, 1.92", "7.70601, -20.0077, 13.7957, 2.4", "8.32669, -21.361, 14.4144, 2.4", "9.57472, -23.8297, 15.4558, 1.8", "11.3015, -26.84, 16.4506, 1.56", "13.101, -29.6979, 17.2669, 1.8", "14.189, -31.3358, 17.6378, 1.8", "14.5717, -31.8856, 17.7567, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.79815, 0.912482, -0.0303001, 5.65", "-10.1859, -0.137817, -0.0192616, 4.93", "-11.5589, -0.74177, -0.0129141, 4.81", "-14.7222, -2.13324, 0.00171007, 1.92", "-16.9263, -3.1028, 0.0119, 1.68", "-19.2688, -4.13319, 0.0227293, 1.68", "-23.7147, -6.08885, 0.0432831, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.75883, -3.97969, 0.00941605, 1.21225", "21.5843, -11.7584, 0.00941605, 1.21225", "34.4097, -19.5371, 0.00941605, 1.21225" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-9.32705, 22.8446, -11.0184, 0.6", "-10.3191, 24.9432, -11.3912, 0.6", "-11.0243, 26.3933, -11.7917, 0.6", "-11.5179, 27.3271, -12.1069, 0.6", "-12.1969, 28.7816, -12.8782, 1.68", "-12.8792, 30.6381, -14.0367, 0.72", "-13.1369, 31.3397, -14.4745, 0.72", "-14.1612, 34.2795, -16.5959, 0.6", "-14.8097, 36.255, -18.209, 1.44", "-15.866, 39.793, -21.4402, 0.84", "-16.218, 41.3246, -23.0354, 1.8" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-9.32705, 22.8446, -11.0184, 1.32", "-9.18158, 24.037, -13.5922, 1.32", "-8.99836, 26.1608, -17.8605, 1.32", "-8.85169, 27.7009, -20.7014, 1.32", "-8.65958, 29.4463, -23.7711, 0.96", "-8.473, 31.1416, -26.7525, 0.96", "-8.34041, 32.3462, -28.8711, 1.2", "-8.23841, 33.9212, -31.5808, 0.48", "-8.08638, 35.6106, -34.1368, 1.32", "-7.97806, 36.6949, -35.6134, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "13.754, -8.59422, -9.8241, 1.56", "14.2906, -9.47471, -11.7399, 1.56", "15.3255, -11.907, -16.0332, 1.32", "15.6056, -13.3724, -18.3273, 1.32", "15.739, -14.8522, -20.318, 1.68", "15.7779, -15.9398, -21.6286, 1.68", "15.7807, -16.886, -22.6249, 1.68", "15.6571, -18.9829, -24.2832, 1.2", "15.0867, -23.6247, -26.8921, 1.2", "14.7918, -25.6698, -27.8748, 1.56", "14.67, -26.5461, -28.2551, 1.56", "14.4246, -28.6064, -29.0973, 1.2", "14.2466, -30.3044, -29.8143, 1.2", "14.0395, -33.6087, -31.2537, 1.2", "14.0397, -34.8876, -31.8111, 1.2", "14.0731, -35.7952, -32.2353, 1.56", "14.1702, -38.0991, -33.4212, 1.08", "14.2661, -40.4694, -34.7626, 2.04", "14.3052, -41.61, -35.398, 2.04", "14.3641, -43.6319, -36.2633, 1.32", "14.5083, -46.9408, -37.5551, 2.16" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "13.754, -8.59422, -9.8241, 1.32", "17.2113, -9.26625, -9.41471, 1.32", "19.0321, -9.6202, -9.19909, 1.32", "22.7879, -10.3503, -8.75435, 1.32", "24.2764, -10.6396, -8.5781, 1.32", "29.3976, -11.6351, -7.97167, 1.2" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "14.5717, -31.8856, 17.7567, 1.2", "15.5413, -32.5024, 18.4811, 1.2", "16.9556, -33.3958, 19.5609, 1.2", "17.9878, -34.0246, 20.3592, 1.2", "19.244, -34.7633, 21.3228, 2.04", "21.5946, -36.1169, 23.1008, 1.08", "22.7799, -36.809, 23.9945, 1.08", "23.5065, -37.2707, 24.586, 1.08", "24.3233, -37.7858, 25.2599, 1.08", "25.0152, -38.1891, 25.7601, 1.08", "25.6342, -38.5288, 26.1168, 1.08", "26.1235, -38.7646, 26.3046, 1.08", "27.1834, -39.299, 26.7051, 1.08", "27.8113, -39.6246, 26.9102, 1.08", "28.5588, -40.0341, 27.2199, 1.08", "29.1503, -40.3603, 27.4907, 1.08", "30.0269, -40.8355, 27.9492, 1.08", "30.5456, -41.0889, 28.2569, 1.08", "32.0217, -41.7145, 29.2726, 1.92", "33.8651, -42.2924, 30.7132, 0.96", "34.4216, -42.3874, 31.189, 0.96", "35.6829, -42.3683, 32.3171, 0.72", "36.5101, -42.1539, 33.0479, 1.32", "37.3633, -41.7334, 33.7761, 1.32", "38.6944, -40.7965, 34.7587, 0.84", "39.0816, -40.5039, 34.9665, 0.84", "39.7835, -39.9986, 35.2777, 0.84", "40.4166, -39.5936, 35.432, 0.84", "40.9099, -39.3592, 35.4699, 0.84", "42.313, -38.883, 35.4219, 0.72", "43.2178, -38.7025, 35.3137, 0.72", "43.8087, -38.5978, 35.2226, 0.72", "44.9787, -38.3967, 34.9718, 0.72", "45.5495, -38.3159, 34.8255, 0.72", "45.8065, -38.2785, 34.7415, 0.72", "47.1142, -38.0748, 34.0953, 0.96", "53.4435, -39.6022, 37.9667, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "14.5717, -31.8856, 17.7567, 0.96", "14.4536, -34.5748, 17.9158, 0.96", "14.3293, -37.4055, 18.0833, 1.08", "14.2653, -38.8633, 18.1696, 1.08", "14.1549, -41.3782, 18.3184, 1.56", "14.081, -43.0633, 18.4181, 1.92" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-23.7147, -6.08885, 0.0432831, 1.08", "-24.6664, -8.68274, 0.933342, 1.08", "-25.0041, -9.73778, 1.23804, 1.08", "-25.3927, -11.1829, 1.63677, 1.08", "-25.6828, -12.513, 2.04394, 1.08", "-25.9684, -14.2366, 2.46314, 1.08", "-26.1418, -15.5483, 2.70909, 1.32", "-26.449, -19.2267, 3.2061, 1.8", "-26.4546, -20.2665, 3.29971, 1.8", "-26.3005, -22.2657, 3.36529, 1.56", "-25.8004, -25.5829, 3.29285, 1.44", "-25.3827, -27.5465, 3.14812, 1.44", "-24.9274, -29.346, 2.96868, 1.56", "-24.2977, -31.6495, 2.74712, 1.32", "-23.709, -33.9432, 2.51566, 1.32", "-23.176, -36.1117, 2.24463, 2.04", "-22.7995, -37.7453, 2.05244, 2.04", "-22.4268, -39.5378, 1.78098, 1.08", "-22.021, -41.861, 1.33848, 1.44", "-21.662, -44.2255, 0.806539, 1.44", "-21.3113, -46.3887, 0.275497, 0.96", "-21.0554, -47.8565, -0.114977, 1.56", "-20.6425, -50.028, -0.710595, 1.56", "-20.1021, -52.4532, -1.38387, 2.16", "-19.5903, -54.3099, -1.84719, 1.56", "-19.0972, -55.6355, -2.04575, 1.56", "-17.8868, -58.1588, -2.29268, 1.8", "-17.3532, -59.0942, -2.35928, 1.8", "-16.6803, -60.1515, -2.40417, 1.8", "-15.8791, -61.341, -2.41444, 1.8", "-13.5712, -64.7091, -2.5394, 1.56", "-11.2865, -67.9115, -2.75066, 1.56", "-10.3919, -69.0824, -2.88267, 1.56", "-9.64228, -70.1688, -3.28762, 1.56", "-8.82314, -71.3946, -3.81741, 1.8", "-7.08296, -74.1581, -5.22338, 1.44", "-6.36583, -75.4044, -6.00079, 1.44", "-5.12269, -77.6779, -7.63573, 1.8", "-1.15839, -85.2386, -13.818, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-23.7147, -6.08885, 0.0432831, 1.56", "-25.3183, -7.0203, 1.25991, 1.56", "-27.081, -8.04415, 2.59722, 1.32", "-28.3801, -8.7987, 3.5828, 1.32", "-30.0964, -9.79559, 4.88491, 1.68", "-31.6084, -10.6739, 6.03205, 2.04" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "34.4097, -19.5371, 0.00941605, 0.119518", "47.2351, -27.3158, 0.00941605, 0.119518", "60.0606, -35.0945, 0.00941605, 0.119518" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-16.218, 41.3246, -23.0354, 0.84", "-14.28, 42.2653, -19.079, 0.84", "-13.7509, 42.5221, -17.9988, 1.8" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-16.218, 41.3246, -23.0354, 0.96", "-16.1765, 42.3315, -24.1445, 0.96", "-16.1539, 43.1201, -24.8635, 0.96", "-16.0973, 44.485, -26.1553, 1.2", "-15.864, 46.9725, -28.5182, 0.96", "-15.7454, 47.736, -29.1784, 0.72", "-15.4765, 48.9267, -30.1387, 1.44", "-15.2184, 49.6171, -30.6753, 1.44", "-14.091, 51.8593, -32.3109, 0.84", "-13.6096, 52.5808, -32.9486, 0.72", "-12.7476, 53.6434, -34.1496, 1.68", "-11.9793, 54.4917, -35.2113, 0.72", "-11.1449, 55.3071, -36.365, 1.2", "-10.3521, 56.0225, -37.4819, 1.32", "-7.52351, 58.345, -41.4782, 0.72", "-6.21318, 59.3816, -43.6636, 0.72" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-7.97806, 36.6949, -35.6134, 0.84", "-7.16725, 38.2659, -36.535, 0.84", "-6.36778, 39.7432, -37.4441, 0.84", "-5.90609, 40.6046, -38.0624, 0.84", "-5.31268, 41.726, -39.0362, 0.6", "-4.80831, 42.6792, -39.864, 0.6", "-4.08992, 44.0368, -41.0429, 1.32", "-3.25634, 45.6845, -42.6074, 0.72", "-2.31402, 47.5083, -44.3601, 1.56", "-1.1768, 49.6614, -46.6088, 0.84" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-7.97806, 36.6949, -35.6134, 0.84", "-9.4395, 40.4924, -45.1186, 0.84", "-9.71391, 41.2054, -46.9033, 1.2", "-10.1012, 42.2117, -49.4219, 0.84", "-10.4493, 43.1163, -51.6862, 1.2", "-11.1272, 44.8778, -56.0952, 0.84", "-11.4719, 45.7733, -58.3367, 1.2" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "14.5083, -46.9408, -37.5551, 0.72", "13.5873, -52.0159, -37.5497, 0.72", "13.2516, -53.8356, -37.4415, 1.2", "13.0036, -55.073, -37.3237, 1.2", "12.5237, -56.9599, -37.2022, 0.6", "11.8582, -59.1526, -37.0817, 1.92", "11.0415, -61.4554, -37.0274, 1.08", "9.81964, -64.1397, -37.1031, 1.68", "8.88836, -65.8247, -37.2321, 1.68", "6.92033, -68.9044, -37.6256, 0.96", "5.97624, -70.1814, -37.8529, 0.96", "4.26535, -72.1793, -38.3435, 1.44", "2.1587, -74.3307, -38.9867, 0.96", "0.599409, -75.8176, -39.5514, 1.44", "-1.09764, -77.4233, -40.1995, 0.96", "-2.35857, -78.6741, -40.6778, 1.56", "-4.38938, -80.7893, -41.4737, 0.84", "-6.3329, -82.9377, -42.2133, 1.56", "-8.92967, -86.0167, -43.2129, 1.08", "-10.2718, -87.7296, -43.742, 0.84", "-11.8837, -89.9749, -44.418, 1.08", "-12.2325, -90.4987, -44.5684, 0.72", "-13.5593, -92.6587, -45.1705, 1.2", "-14.8524, -94.9173, -45.7602, 0.6", "-15.837, -96.648, -46.1229, 1.08", "-16.9483, -98.5423, -46.5274, 0.72", "-18.1844, -100.517, -47.0042, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "14.5083, -46.9408, -37.5551, 0.48", "17.2725, -49.4133, -38.2944, 0.48", "20.0009, -51.8797, -39.0787, 1.32", "21.8479, -53.5793, -39.6436, 0.96", "23.1948, -54.8182, -40.0581, 1.56", "25.5329, -56.9916, -40.7958, 0.96", "27.7056, -59.0556, -41.5125, 1.68", "30.0192, -61.2836, -42.3632, 1.08", "31.8054, -63.096, -43.0921, 1.8", "32.4745, -63.838, -43.3936, 1.8", "34.7824, -66.6258, -44.5731, 1.08", "36.0432, -68.3415, -45.3651, 1.56", "36.9338, -69.7607, -46.0399, 1.08", "37.7266, -71.2836, -46.744, 1.56", "38.7605, -73.7423, -47.8401, 1.08", "39.3999, -75.5518, -48.6292, 1.68", "40.0913, -77.8941, -49.6125, 1.2", "40.6637, -79.9007, -50.415, 1.2", "41.4103, -82.5575, -51.4426, 1.8", "42.0602, -85.0951, -52.4743, 1.2", "42.4468, -86.5904, -53.3051, 1.8", "43.2806, -89.6533, -55.3035, 1.2", "44.263, -92.9099, -57.6863, 1.68", "44.9371, -94.9001, -59.239, 1.2", "45.9463, -97.5752, -61.5835, 1.68", "48.3167, -103.283, -66.9867, 1.2", "48.9413, -104.684, -68.3833, 1.2", "49.4737, -105.811, -69.5652, 1.2", "50.4605, -107.791, -71.7319, 1.56", "52.4797, -111.504, -75.7469, 0.96", "53.5592, -113.286, -77.4966, 1.44", "54.4122, -114.788, -78.6933, 0.72", "55.2308, -116.248, -80.034, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "29.3976, -11.6351, -7.97167, 0.72", "32.4012, -9.99719, -8.45864, 0.72", "34.5445, -8.60548, -8.85554, 0.72", "36.1489, -7.43465, -9.18571, 0.72", "37.6366, -6.20314, -9.57042, 0.72", "39.343, -4.62215, -10.2037, 0.48", "39.8152, -4.11107, -10.4567, 0.96", "41.4308, -1.92661, -11.7914, 0.6", "42.7019, 0.0572559, -13.316, 1.44", "43.9176, 2.09665, -15.1878, 0.72", "45.2, 4.19041, -17.5871, 1.2", "46.7537, 6.72744, -20.7434, 0.6", "48.3568, 9.35694, -24.2374, 1.2", "49.6402, 11.4929, -27.3533, 0.84", "50.7903, 13.4154, -30.463, 1.68", "52.2843, 15.6912, -34.6057, 0.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "29.3976, -11.6351, -7.97167, 0.48", "32.6779, -13.2733, -8.72477, 0.48", "35.0859, -14.76, -9.40347, 0.96", "36.0101, -15.4497, -9.73127, 0.72", "39.3555, -18.3375, -11.0835, 1.2", "42.1232, -21.0622, -12.3059, 0.84", "44.6005, -23.8335, -13.5102, 1.68", "46.3857, -26.3874, -14.5965, 0.96", "47.8976, -29.1718, -15.7154, 1.92", "48.608, -30.8309, -16.3348, 1.92", "49.3005, -33.0876, -17.0907, 0.96", "49.8949, -35.4961, -17.766, 1.44", "50.1775, -36.803, -18.0185, 1.44", "50.9619, -40.2439, -18.3794, 0.72", "51.2742, -41.4591, -18.4132, 0.72", "51.9167, -43.7614, -18.3498, 1.32", "53.1795, -47.5495, -17.7848, 1.32", "53.8658, -49.2235, -17.3258, 1.32", "54.5976, -50.738, -16.7868, 1.32", "55.1042, -51.6916, -16.3797, 1.32", "56.6554, -54.4531, -15.0688, 0.72", "58.8213, -58.1437, -13.0992, 1.8", "60.2171, -60.3547, -11.9369, 1.8", "61.165, -61.7496, -11.1395, 1.8" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "14.081, -43.0633, 18.4181, 1.44", "16.1857, -44.3789, 18.9357, 1.44", "17.9742, -45.7238, 19.4637, 1.44", "19.3305, -46.9001, 19.9285, 1.44", "20.6186, -48.1968, 20.4361, 1.44", "21.5212, -49.1794, 20.8041, 1.44", "22.8678, -50.7565, 21.3901, 1.44", "23.6312, -51.8036, 21.7871, 1.08", "24.377, -52.9501, 22.2786, 1.44", "25.7408, -55.1059, 23.2154, 1.08", "26.6243, -56.4135, 23.7646, 1.56", "27.7889, -57.9662, 24.4418, 0.96", "28.6492, -58.9627, 24.8977, 0.96", "30.4037, -60.8075, 25.7862, 0.96", "31.6652, -62.0461, 26.4209, 0.96", "32.4986, -62.8262, 26.8563, 0.96", "33.3097, -63.5872, 27.2924, 0.96", "34.513, -64.6997, 27.9482, 0.72", "35.1139, -65.2838, 28.2846, 0.72", "36.1815, -66.397, 28.9114, 0.72", "37.0087, -67.3328, 29.5237, 0.72", "37.4564, -67.843, 29.8781, 0.72", "38.0865, -68.5098, 30.3908, 0.72", "38.5496, -68.9816, 30.7795, 0.72", "39.6651, -70.0153, 31.6833, 0.72", "40.1591, -70.4187, 32.046, 0.72", "40.9613, -70.988, 32.6048, 0.72", "41.964, -71.6383, 33.3025, 0.72", "50.573, -76.5943, 38.1001, 0.72" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "14.081, -43.0633, 18.4181, 1.44", "12.7028, -44.1398, 18.9923, 1.44", "10.6263, -45.959, 19.5197, 1.44", "9.50824, -47.0782, 19.6826, 1.2", "8.49631, -48.2442, 19.7254, 1.2", "6.92022, -50.2246, 19.6242, 1.08", "6.10508, -51.2547, 19.5153, 1.08", "4.32149, -53.5022, 18.9441, 1.32", "3.42306, -54.6482, 18.4908, 1.32", "2.51725, -55.8578, 17.9708, 0.96", "1.66602, -57.0409, 17.3955, 0.96", "0.575175, -58.5559, 16.6169, 1.32", "-0.458674, -59.9035, 15.8959, 0.96", "-1.34389, -60.9537, 15.3642, 0.96", "-3.05623, -62.8926, 14.3732, 1.44", "-4.87331, -64.8949, 13.3748, 0.96", "-5.36078, -65.4492, 13.1134, 0.96", "-6.94559, -67.3623, 12.2599, 1.8", "-8.07865, -68.8074, 11.525, 1.32", "-8.55659, -69.4126, 11.1987, 1.32", "-8.89602, -69.8275, 10.9731, 1.32", "-9.64588, -70.7134, 10.5258, 0.96", "-10.034, -71.1693, 10.2699, 0.96", "-12.7141, -74.3336, 8.38506, 2.4", "-14.5134, -76.4877, 7.04618, 0.84", "-15.9658, -78.2283, 5.94223, 2.16", "-16.5383, -78.9089, 5.50482, 2.16", "-18.6881, -81.3661, 3.90128, 0.84", "-19.954, -82.7389, 3.04602, 1.32" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.15839, -85.2386, -13.818, 0.84", "-0.732345, -86.1295, -13.6688, 0.84", "-0.438623, -86.7548, -13.5733, 0.96", "-0.0198573, -87.7143, -13.4457, 0.72", "0.64603, -89.306, -13.2669, 0.72", "1.42021, -91.3042, -13.07, 1.08", "1.97386, -92.8464, -12.8824, 1.08", "2.17602, -93.4535, -12.7996, 1.08", "2.61945, -95.0282, -12.5847, 0.6", "2.91816, -96.3758, -12.3879, 1.32", "3.101, -97.6033, -12.1811, 1.32", "3.26071, -99.0438, -11.944, 0.72", "3.3273, -99.6456, -11.8564, 0.72", "3.50455, -100.957, -11.6374, 1.2", "3.69749, -102.052, -11.4086, 0.48", "3.91076, -103.039, -11.1851, 1.08", "4.23329, -104.253, -10.9245, 0.6", "4.76042, -106.003, -10.6087, 1.2", "5.43522, -108.024, -10.1863, 0.72", "6.03553, -109.598, -9.78951, 1.32", "6.58675, -110.882, -9.41436, 0.72", "7.11555, -112.014, -9.01851, 1.08", "7.68476, -113.205, -8.56709, 0.48", "8.21426, -114.289, -8.14529, 0.48", "8.74444, -115.415, -7.78272, 1.32", "9.04785, -116.143, -7.55499, 1.32", "9.42548, -117.292, -7.19135, 0.72", "9.57288, -118.271, -6.95673, 1.32", "9.45079, -119.457, -6.97739, 0.6", "9.09961, -120.555, -7.30926, 1.56", "8.79468, -121.182, -7.61957, 1.56", "8.36416, -121.914, -8.07469, 0.72", "7.42571, -123.328, -9.11381, 1.68", "6.27106, -125.057, -10.4856, 1.2", "5.78672, -125.851, -11.1279, 1.56", "5.2813, -126.841, -11.8887, 0.96", "4.92813, -127.739, -12.5034, 0.96", "4.72005, -128.563, -12.9678, 1.56", "4.54108, -129.762, -13.4922, 1.56", "4.3551, -131.03, -13.8642, 1.2", "4.2117, -131.939, -14.0565, 1.2", "3.91698, -133.518, -14.3354, 1.68", "3.43559, -135.754, -14.6619, 0.96", "3.13659, -136.922, -14.7803, 0.96", "2.39363, -139.476, -14.9484, 0.48", "2.09912, -140.448, -14.9805, 1.56", "1.35683, -143.015, -14.9992, 0.96", "1.2179, -143.525, -14.9861, 0.96", "0.77428, -145.408, -14.8074, 1.44", "0.617941, -146.588, -14.6521, 1.08", "0.60619, -148.3, -14.3992, 0.72", "0.69293, -149.563, -14.1615, 0.72", "0.78877, -150.249, -13.9888, 0.72", "1.04943, -151.786, -13.5867, 1.32", "1.37349, -153.356, -13.1839, 0.72", "1.5658, -154.293, -12.9592, 0.72", "1.65593, -154.734, -12.8004, 0.72", "1.76693, -155.271, -12.5507, 0.72", "2.02495, -156.458, -11.9221, 1.2", "2.3038, -157.691, -11.2, 0.6", "2.54578, -158.751, -10.4891, 1.2", "3.15377, -161.288, -8.60569, 0.72", "3.44333, -162.368, -7.76222, 0.72", "3.7309, -163.304, -7.01795, 1.32", "4.03919, -164.212, -6.30435, 0.6", "4.4655, -165.469, -5.37295, 1.2", "4.91469, -166.838, -4.43554, 0.72", "5.23946, -167.921, -3.81358, 0.72", "5.56842, -169.139, -3.07384, 1.2", "5.82993, -170.196, -2.40958, 0.6", "6.01049, -170.964, -1.91211, 1.2", "6.33751, -172.385, -0.963287, 0.48", "6.56672, -173.442, -0.265003, 1.44", "6.77143, -174.673, 0.603712, 0.96", "6.83049, -175.222, 1.03032, 0.96", "6.84763, -175.521, 1.25783, 0.96", "6.85666, -176.152, 1.68015, 0.96", "6.81329, -177.084, 2.16364, 0.96", "6.71654, -178.26, 2.63663, 1.68", "6.50665, -179.869, 3.32789, 0.96", "6.33322, -181.011, 3.86548, 1.32", "6.11534, -182.301, 4.54452, 0.72", "5.92829, -183.427, 5.20835, 0.72", "5.79513, -184.388, 5.83529, 1.2", "5.5996, -186.647, 7.44312, 0.6", "5.56426, -187.366, 8.00571, 0.96", "5.56383, -188.408, 8.95686, 0.6", "5.5784, -189.208, 9.75775, 1.32", "5.58187, -189.706, 10.2779, 1.32", "5.56655, -190.082, 10.66, 1.32", "5.51208, -190.65, 11.1517, 1.32", "5.35877, -191.456, 11.88, 0.96", "5.06058, -192.592, 12.8502, 1.44", "4.80928, -193.324, 13.4952, 1.44", "4.48758, -194.112, 14.2065, 0.72", "4.13318, -194.865, 14.9135, 1.2", "3.65426, -195.787, 15.7877, 0.48", "3.1053, -196.655, 16.5928, 1.08", "2.5318, -197.51, 17.4075, 0.6", "2.07998, -198.158, 18.0173, 1.2", "1.49545, -198.945, 18.7584, 0.6", "1.18586, -199.333, 19.1277, 0.6", "0.467607, -200.16, 19.9435, 1.2", "-0.185268, -200.838, 20.7042, 0.72" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-1.15839, -85.2386, -13.818, 0.96", "-0.143996, -86.4113, -13.8075, 0.96", "0.87082, -87.5845, -13.797, 0.96", "2.09018, -88.9941, -13.7843, 2.64" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-31.6084, -10.6739, 6.03205, 1.32", "-33.372, -10.0674, 6.47019, 1.32", "-35.2201, -9.43196, 6.92931, 1.32", "-37.2181, -8.74495, 7.42568, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-31.6084, -10.6739, 6.03205, 0.96", "-32.4069, -12.2318, 6.4422, 0.96", "-32.6805, -12.6396, 6.60771, 1.44", "-33.1352, -13.1686, 6.905, 1.44", "-33.4963, -13.5428, 7.15798, 1.44", "-33.9573, -14.0085, 7.49218, 1.44", "-34.9801, -15.0504, 8.26801, 1.68", "-35.7393, -15.7544, 8.91019, 1.2", "-36.4531, -16.4259, 9.55722, 1.2", "-36.7435, -16.7002, 9.8422, 1.2", "-37.0737, -17.0413, 10.1782, 1.2", "-37.3881, -17.4091, 10.5076, 1.2", "-37.5381, -17.6588, 10.6738, 1.2", "-37.6774, -17.9948, 10.8664, 1.2", "-37.8215, -18.4176, 11.0887, 1.2", "-38.1833, -19.4138, 11.6045, 1.56", "-38.4735, -20.0249, 11.9278, 1.08", "-38.7788, -20.5412, 12.1993, 1.08", "-39.0899, -20.9398, 12.4455, 1.08", "-39.4822, -21.3999, 12.738, 1.08", "-39.74, -21.6738, 12.9133, 1.08", "-40.5046, -22.3364, 13.4118, 1.08", "-40.7638, -22.5077, 13.5498, 1.08", "-41.7736, -22.9851, 14.0209, 1.32" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-18.1844, -100.517, -47.0042, 1.08", "-17.1501, -101.745, -47.2924, 1.08", "-15.9486, -103.172, -47.6272, 1.32" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-18.1844, -100.517, -47.0042, 0.84", "-18.734, -101.131, -46.9074, 0.84", "-19.3441, -101.827, -47.0046, 1.44", "-19.9526, -102.522, -47.1014, 0.6", "-20.4692, -103.111, -47.1837, 1.08", "-21.436, -104.215, -47.3376, 0.48", "-22.2397, -105.132, -47.4655, 1.56", "-23.387, -106.429, -47.8331, 0.96" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "61.165, -61.7496, -11.1395, 0.84", "61.4127, -63.7233, -11.2812, 0.84", "61.5927, -65.2336, -11.3846, 1.44", "62.1301, -69.4252, -11.6751, 0.48", "62.5745, -72.8909, -11.9153, 0.48", "62.8753, -75.2375, -12.0779, 1.44", "63.3031, -78.5737, -12.3091, 0.6", "63.5134, -80.026, -12.4237, 0.6", "63.8099, -81.9822, -12.5618, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "61.165, -61.7496, -11.1395, 0.6", "62.9596, -62.8879, -10.873, 0.6", "65.1339, -64.1679, -10.4419, 1.2", "65.8304, -64.5935, -10.2804, 1.2", "67.0994, -65.4203, -9.9646, 0.6", "70.5079, -67.8054, -9.02672, 1.68", "71.7993, -68.7385, -8.63584, 1.68", "73.9141, -70.2847, -7.94317, 0.84", "75.8365, -71.6273, -7.27217, 0.84", "77.816, -72.9688, -6.55126, 1.44", "80.2122, -74.6103, -5.63841, 0.84", "83.0388, -76.6451, -4.51822, 1.56", "86.301, -78.9996, -3.20297, 1.08", "88.3666, -80.4554, -2.37767, 1.56", "91.1203, -82.2942, -1.27226, 2.04", "93.9749, -84.1069, -0.111257, 1.2", "96.3513, -85.5586, 0.849571, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-19.954, -82.7389, 3.04602, 0.48", "-20.1887, -84.4819, 3.53413, 0.48", "-20.3235, -86.2235, 3.94818, 1.56", "-20.3972, -89.2789, 4.54537, 0.6", "-20.2795, -91.2285, 4.88176, 1.8", "-20.0516, -93.3428, 5.19347, 0.6", "-19.8919, -94.4884, 5.34186, 0.6", "-19.6165, -95.8579, 5.46911, 0.6", "-19.2078, -97.436, 5.60566, 1.56", "-18.3636, -99.8723, 5.76497, 0.48", "-17.7062, -101.539, 5.90725, 0.48", "-17.3766, -102.327, 5.99005, 0.48", "-16.727, -103.883, 6.1963, 1.68", "-15.8203, -106.107, 6.57511, 1.08", "-15.2471, -107.51, 6.8904, 1.08", "-12.3242, -116.43, 7.34951, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-19.954, -82.7389, 3.04602, 0.72", "-22.4613, -83.6892, 1.85171, 0.72", "-23.8963, -84.2732, 1.08145, 1.56", "-25.2398, -84.9044, 0.327025, 0.72", "-27.2217, -85.9392, -0.862824, 1.32", "-29.4516, -87.2571, -1.96514, 0.72", "-31.2043, -88.4076, -2.70801, 1.56", "-33.3397, -90.1227, -3.56886, 0.84", "-34.4332, -91.1581, -3.943, 0.84", "-36.2638, -93.228, -4.44904, 1.92", "-39.0872, -97.04, -4.89988, 0.96", "-40.1385, -98.6199, -4.96425, 0.96", "-42.1274, -101.9, -4.89228, 0.72", "-42.7341, -102.999, -4.81766, 1.32", "-43.8171, -105.058, -4.64031, 0.84", "-44.6793, -107.045, -4.43497, 1.2", "-54.266, -115.15, -6.91743, 1.2" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "2.09018, -88.9941, -13.7843, 0.96", "1.37833, -90.9768, -14.5559, 0.96", "0.76914, -92.9473, -15.2649, 0.96", "0.533607, -93.7294, -15.5274, 0.96", "0.29031, -94.5394, -15.7815, 0.96", "-0.0930862, -95.7905, -16.1294, 0.96", "-0.294456, -96.4336, -16.2915, 0.96", "-0.378911, -96.7901, -16.353, 0.96", "-0.590688, -97.5055, -16.4251, 0.96", "-0.725047, -97.8408, -16.479, 0.96", "-1.13051, -98.6801, -16.705, 0.96", "-1.43865, -99.2281, -16.9471, 0.96", "-1.90959, -100.072, -17.4349, 0.6", "-2.52814, -101.207, -18.1971, 1.56", "-3.3218, -102.683, -19.311, 0.96", "-3.79404, -103.536, -20.0154, 0.96", "-4.71635, -105.144, -21.3991, 0.72", "-5.6656, -106.805, -22.7895, 1.2", "-6.39803, -108.074, -23.8161, 0.72", "-7.20792, -109.499, -24.88, 1.2", "-8.18025, -111.224, -26.0408, 0.72", "-8.6489, -112.098, -26.5648, 0.72", "-9.8417, -114.45, -27.7728, 1.2", "-10.639, -116.027, -28.4474, 1.2", "-11.5728, -117.898, -29.1435, 0.72", "-11.9205, -118.613, -29.3729, 0.72", "-12.6747, -120.173, -29.8245, 1.32", "-13.2031, -121.301, -30.1455, 1.32", "-14.0171, -123.006, -30.6342, 0.6", "-14.6087, -124.226, -31.0109, 1.08", "-16.0196, -126.964, -32.0888, 0.6", "-16.718, -128.237, -32.6881, 1.2", "-17.4337, -129.387, -33.2815, 0.6", "-18.1787, -130.464, -33.9514, 1.2", "-18.9223, -131.47, -34.6951, 0.48", "-20.4256, -133.382, -36.2013, 1.44", "-20.7816, -133.818, -36.5575, 1.44", "-21.9117, -135.201, -37.6305, 0.72", "-23.3235, -136.969, -38.8534, 1.56", "-25.191, -139.467, -40.2624, 0.84", "-25.7986, -140.337, -40.6066, 0.84", "-26.9501, -142.285, -41.1901, 1.56", "-27.5343, -143.47, -41.5115, 1.56", "-28.3624, -145.58, -42.0596, 0.72", "-28.9874, -147.753, -42.705, 1.2", "-29.6476, -150.351, -43.4502, 0.72", "-30.429, -153.848, -44.5615, 1.56", "-30.7732, -155.759, -45.2438, 1.08", "-30.9982, -157.638, -46.0244, 1.56", "-31.1763, -162.115, -48.306, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "2.09018, -88.9941, -13.7843, 0.48", "4.86026, -91.9886, -12.1081, 0.48", "6.08168, -93.3347, -11.3064, 0.48", "8.08035, -95.5373, -9.99466, 1.56", "9.67964, -97.2998, -8.94502, 0.36", "10.2292, -97.9054, -8.58431, 0.36", "12.2278, -100.108, -7.27253, 1.32", "13.4445, -101.412, -6.23782, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-37.2181, -8.74495, 7.42568, 1.44", "-37.9381, -7.50585, 9.64158, 1.44", "-38.7061, -6.62039, 11.4584, 1.2", "-39.1335, -6.17555, 12.3284, 1.2", "-39.5103, -5.78337, 13.0953, 0.84", "-39.695, -5.59124, 13.4711, 0.84", "-40.101, -5.16867, 14.2975, 1.2", "-41.1227, -4.51127, 15.7399, 1.08", "-41.7892, -4.25628, 16.413, 1.44" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-37.2181, -8.74495, 7.42568, 1.92", "-38.4541, -8.01024, 7.53976, 1.92", "-39.1661, -7.6208, 7.53961, 1.92", "-40.263, -7.00186, 7.43323, 1.56", "-41.1678, -6.47228, 7.28787, 1.32", "-42.0145, -5.92592, 7.10218, 1.8", "-42.9501, -5.28675, 6.85324, 1.2", "-43.6894, -4.73762, 6.56047, 1.2", "-44.7028, -3.94243, 6.11052, 0.96", "-45.1715, -3.56522, 5.87245, 0.96", "-45.9459, -2.96339, 5.44, 1.32", "-46.6782, -2.44452, 5.05506, 1.32", "-47.1967, -2.15146, 4.81019, 1.32", "-47.8119, -1.90857, 4.55946, 0.96", "-48.2629, -1.81691, 4.40644, 0.96", "-49.0143, -1.6846, 4.23459, 0.96", "-49.8244, -1.61408, 4.07955, 0.96", "-51.0943, -1.56299, 3.86736, 1.44", "-51.7449, -1.54958, 3.76742, 1.44", "-52.2568, -1.51787, 3.68131, 1.44", "-53.9361, -1.2109, 3.43545, 1.2" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-41.7736, -22.9851, 14.0209, 0.96", "-42.7642, -22.676, 14.8422, 0.96", "-44.1463, -22.1563, 16.0078, 0.96", "-45.4001, -21.6567, 17.0559, 0.96", "-47.5884, -20.7539, 18.8251, 0.6", "-49.6062, -19.9255, 20.3832, 1.2", "-52.9495, -18.4229, 22.9046, 0.72", "-53.5809, -18.0699, 23.412, 0.72", "-53.8904, -17.8752, 23.6639, 0.72", "-54.5968, -17.3737, 24.2302, 0.72", "-55.1531, -16.8681, 24.6797, 0.72", "-56.6619, -15.1842, 26.0025, 1.2", "-58.6468, -12.7755, 27.5293, 0.84", "-68.8646, -8.75054, 32.7381, 0.84" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-41.7736, -22.9851, 14.0209, 0.84", "-42.7877, -23.9448, 14.0136, 0.84", "-43.5731, -24.5913, 13.9535, 0.84", "-44.7527, -25.5478, 13.8718, 0.6", "-45.5643, -26.1743, 13.8029, 0.6", "-46.7275, -27.0186, 13.672, 0.6", "-47.9841, -27.8803, 13.5007, 0.6", "-49.162, -28.6226, 13.2536, 0.6", "-50.1187, -29.1717, 13.0459, 0.6", "-51.1558, -29.7015, 12.8432, 0.6", "-51.7396, -29.9823, 12.7221, 0.6", "-52.4425, -30.3072, 12.5725, 0.6", "-52.8706, -30.4821, 12.4559, 1.08", "-54.3203, -31.0055, 12.0076, 0.72", "-55.9115, -31.5282, 11.4754, 0.72", "-57.1563, -31.9405, 11.0631, 0.72", "-57.7475, -32.1393, 10.8698, 0.72", "-59.2871, -32.5927, 10.3137, 1.08", "-67.7433, -39.0385, 7.77195, 1.08" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "96.3513, -85.5586, 0.849571, 0.72", "96.3683, -87.3524, 0.222363, 0.72", "96.3787, -88.4501, -0.161431, 1.32" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "96.3513, -85.5586, 0.849571, 0.96", "98.2511, -87.0307, 1.29302, 0.96", "100.213, -88.577, 1.87178, 0.96", "102.458, -90.3992, 2.60164, 1.56", "105.141, -92.5911, 3.44522, 0.84", "107.539, -94.6017, 4.16733, 1.32", "110.635, -97.2669, 5.26966, 0.6", "112.454, -98.8667, 6.02467, 1.32", "114.954, -101.073, 7.12632, 0.72", "117.161, -102.992, 8.09283, 0.72", "118.823, -104.327, 8.80926, 1.68", "123.207, -107.445, 10.6011, 0.72", "125.903, -109.021, 11.6143, 0.72", "127.534, -109.757, 12.1952, 0.72", "129.242, -110.233, 12.8031, 0.72", "131.888, -110.575, 13.6725, 1.08", "133.855, -110.61, 14.2398, 0.48", "136.098, -110.34, 14.6807, 0.96", "137.938, -109.931, 15.0783, 0.96", "140.203, -109.286, 15.6439, 0.72", "142.873, -108.4, 16.3872, 0.48", "153.607, -113.483, 20.7191, 0.48" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-31.1763, -162.115, -48.306, 0.84", "-33.2599, -162.405, -47.1199, 0.84", "-35.4463, -162.752, -46.0385, 0.84", "-40.2698, -163.755, -43.9403, 1.32", "-44.3993, -164.79, -42.2143, 0.84", "-45.6873, -165.192, -41.7104, 0.84", "-48.0941, -166.067, -40.8038, 1.44", "-51.4382, -167.62, -39.5552, 0.96", "-53.3743, -168.9, -38.8829, 0.96", "-54.5781, -170.17, -38.6295, 1.44", "-55.9448, -172.33, -38.4431, 0.96", "-56.2971, -173.058, -38.3916, 0.96", "-57.2006, -175.518, -38.2616, 1.44", "-57.9378, -177.881, -38.1259, 1.08", "-58.8643, -180.602, -37.9962, 1.44", "-59.9536, -183.258, -37.7686, 0.84", "-60.6671, -184.575, -37.5036, 0.84", "-61.0879, -185.275, -37.3484, 0.84", "-62.9942, -187.905, -36.6101, 1.2", "-64.0134, -188.973, -36.1469, 1.2", "-67.0291, -190.934, -34.4812, 0.84", "-69.6278, -191.752, -32.7752, 0.48" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-31.1763, -162.115, -48.306, 0.72", "-32.231, -163.444, -48.3213, 0.72", "-34.2506, -166.134, -48.6516, 1.2", "-35.3774, -167.684, -48.9804, 0.84", "-36.5949, -169.398, -49.4698, 1.32", "-38.2663, -171.724, -50.2334, 0.72", "-39.4068, -173.309, -50.8046, 1.32", "-41.1873, -175.84, -51.8858, 0.84", "-42.7383, -178.065, -52.9975, 1.32", "-44.2503, -180.254, -54.1583, 0.84", "-45.0351, -181.377, -54.7741, 0.84", "-46.5056, -183.499, -55.9415, 1.44", "-47.0531, -184.313, -56.3623, 1.44", "-48.5512, -186.709, -57.4527, 0.96", "-50.4323, -189.955, -58.7367, 1.44", "-52.1401, -193.051, -59.8049, 0.84", "-52.7499, -194.189, -60.1643, 1.32", "-53.7931, -196.066, -60.6953, 0.84", "-55.8507, -199.379, -61.5114, 1.32", "-57.2064, -201.434, -61.9824, 0.84", "-59.0166, -204.04, -62.6191, 1.44", "-59.9095, -205.319, -62.9603, 0.72", "-61.6883, -207.999, -63.8244, 1.32", "-63.8064, -211.094, -64.9169, 0.6", "-65.7503, -213.883, -66.0039, 1.08", "-67.7437, -216.806, -67.2345, 0.48", "-69.8005, -220.08, -68.7079, 1.44", "-71.4276, -223.035, -70.1052, 0.72" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "13.4445, -101.412, -6.23782, 0.84", "11.9783, -103.092, -6.8019, 0.84", "10.5267, -104.703, -7.47159, 0.96", "9.5148, -105.866, -7.98344, 0.72", "8.80565, -106.692, -8.36751, 0.72", "7.42329, -108.307, -9.16416, 0.72", "6.25948, -109.673, -9.83953, 0.72", "5.60507, -110.439, -10.2361, 0.72", "4.79114, -111.462, -10.7898, 0.72", "3.87415, -112.684, -11.4028, 1.08", "3.00009, -113.831, -11.941, 1.08", "2.59665, -114.375, -12.1467, 1.08", "1.77322, -115.498, -12.529, 0.6", "1.14533, -116.325, -12.8342, 0.6", "-0.371114, -118.156, -13.552, 1.08", "-1.53996, -119.556, -14.1315, 1.08", "-3.29905, -121.514, -14.9763, 0.6", "-4.45343, -122.701, -15.5268, 0.6", "-6.62831, -124.804, -16.5262, 1.56", "-8.26298, -126.35, -17.2483, 0.84", "-9.65035, -127.66, -17.8307, 1.44", "-11.4872, -129.431, -18.5461, 0.96", "-12.9621, -130.876, -19.0819, 1.56", "-14.689, -132.713, -19.6506, 0.96", "-15.5324, -133.686, -19.864, 0.96", "-16.7095, -135.216, -20.1468, 1.56", "-17.333, -136.116, -20.2932, 1.56", "-18.6312, -138.303, -20.633, 1.08", "-19.8147, -140.465, -20.9481, 1.68", "-20.8946, -142.573, -21.2394, 1.68", "-22.0097, -144.928, -21.5519, 0.96", "-22.8861, -147.01, -21.7962, 1.56", "-23.647, -148.941, -22.0282, 0.96", "-24.4382, -151.138, -22.2429, 1.8", "-25.4303, -154.11, -22.5049, 1.2", "-26.0755, -156.259, -22.6801, 0.72", "-26.8347, -159.06, -22.8581, 1.2", "-27.3453, -161.087, -22.9612, 0.72", "-27.8657, -163.509, -23.0769, 0.72", "-28.1042, -164.881, -23.1513, 0.72", "-28.398, -166.954, -23.2912, 1.2", "-28.587, -168.345, -23.3848, 0.72", "-28.8637, -170.577, -23.573, 1.2", "-29.1458, -172.874, -23.7844, 0.6", "-29.3761, -174.303, -23.9346, 1.2", "-29.9144, -176.555, -24.1291, 0.6", "-30.3228, -177.903, -24.2216, 0.6", "-30.9983, -179.664, -24.3411, 1.32", "-32.6259, -183.336, -24.6177, 0.72", "-33.8409, -185.792, -24.8168, 1.2", "-35.3223, -188.619, -25.0523, 0.72", "-35.7289, -189.392, -25.1135, 0.72", "-37.119, -192.116, -25.3221, 1.32", "-38.3223, -194.614, -25.5331, 0.6", "-39.3735, -196.905, -25.7466, 1.32", "-40.5947, -199.647, -26.0728, 0.6", "-42.3833, -203.765, -26.6682, 0.6", "-43.4404, -206.202, -27.0548, 1.2", "-45.5386, -211.058, -27.874, 0.72", "-46.2978, -212.706, -28.1931, 1.2", "-47.6149, -215.49, -28.8134, 1.08", "-48.6344, -217.639, -29.3644, 0.72", "-49.482, -219.452, -29.9041, 0.72", "-50.3819, -221.475, -30.501, 1.2", "-51.3201, -223.685, -31.0826, 0.6", "-52.3083, -226.186, -31.6896, 1.08", "-53.0157, -228.093, -32.0383, 0.6", "-53.6319, -229.856, -32.2928, 1.2", "-54.893, -233.678, -32.6948, 0.6", "-55.4429, -235.545, -32.8247, 0.6", "-55.7119, -236.714, -32.9263, 1.2", "-56.2929, -239.23, -33.1117, 0.72", "-56.6712, -240.913, -33.2087, 1.2", "-56.908, -242.102, -33.277, 1.2", "-57.1151, -244.134, -33.4799, 1.2", "-57.1833, -248.275, -34.1115, 0.72" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "13.4445, -101.412, -6.23782, 0.72", "15.2874, -102.64, -4.25171, 0.72", "16.3106, -103.324, -3.01518, 0.72", "17.2085, -104.001, -1.92846, 1.56", "18.1804, -104.814, -0.766898, 0.96", "19.7794, -106.24, 1.06422, 1.56", "21.0721, -107.442, 2.46664, 1.56", "22.2296, -108.628, 3.63283, 0.96", "23.6656, -110.24, 5.07844, 1.2", "24.6495, -111.516, 6.06276, 1.2", "25.5443, -112.938, 6.95156, 1.56", "26.2618, -114.206, 7.58631, 1.56", "27.0028, -115.624, 8.1825, 0.84", "27.8338, -117.285, 8.78099, 1.44", "28.7252, -119.241, 9.46419, 0.84", "29.4467, -121.054, 10.0519, 1.92" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-41.7892, -4.25628, 16.413, 0.72", "-43.1951, -4.03024, 17.3745, 0.72", "-45.2095, -3.92557, 18.5821, 1.2", "-47.022, -3.83141, 19.6686, 1.2", "-48.2974, -3.76514, 20.4331, 0.96", "-49.3883, -3.70847, 21.0871, 0.72", "-51.3305, -3.60756, 22.2513, 0.72", "-52.8744, -3.62573, 23.2127, 1.2", "-61.2153, -2.32617, 28.6914, 1.2", "-70.7187, -2.05334, 31.9908, 1.2" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-41.7892, -4.25628, 16.413, 1.08", "-40.9227, -3.87824, 17.7971, 1.08", "-40.7031, -3.76633, 18.1932, 1.08", "-40.0553, -3.38607, 19.3176, 0.96", "-39.5125, -3.08042, 20.1939, 0.96", "-38.6745, -2.6402, 21.4364, 1.44", "-37.4961, -2.02111, 23.1838, 1.44", "-36.6294, -1.53083, 24.3933, 0.96", "-36.0335, -1.18138, 25.2535, 1.32", "-35.6328, -0.951217, 25.8861, 1.32", "-35.2605, -0.746437, 26.465, 1.32", "-31.9985, 1.74023, 33.9599, 1.32", "-28.3579, 4.25593, 41.268, 1.32", "-24.0123, 5.9299, 48.4346, 1.32" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-53.9361, -1.2109, 3.43545, 0.72", "-55.0002, -0.475724, 3.60452, 0.72", "-55.6655, -0.0160761, 3.71023, 0.72", "-56.3465, 0.454412, 3.81844, 0.72", "-57.5268, 1.26991, 4.00599, 1.2", "-59.1755, 2.40898, 4.26796, 0.72", "-60.2518, 3.15265, 4.43899, 1.08", "-66.3737, 7.62759, 6.32721, 1.08" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-53.9361, -1.2109, 3.43545, 1.08", "-55.4847, -0.313229, 4.00957, 1.08", "-56.3307, 0.0971479, 4.38733, 1.08", "-58.1667, 0.873229, 5.29297, 1.2", "-59.3761, 1.36567, 5.88619, 1.2", "-60.2179, 1.76065, 6.32785, 1.44", "-61.3906, 2.35148, 6.94377, 1.08", "-62.0492, 2.69393, 7.35115, 0.84", "-62.7095, 3.05429, 7.77091, 0.84", "-63.5951, 3.57848, 8.29666, 0.84", "-64.8999, 4.42198, 8.89412, 1.2", "-65.9504, 5.14303, 9.23457, 1.2", "-67.3854, 6.07708, 9.53208, 1.08", "-68.1034, 6.47642, 9.64558, 0.96", "-69.0358, 6.96075, 9.76584, 0.96", "-70.7039, 7.71054, 9.93501, 1.32", "-71.4777, 7.99341, 9.9733, 1.32", "-73.3274, 8.61827, 10.002, 1.32", "-75.1835, 9.14543, 9.93409, 0.84", "-84.7695, 13.9918, 11.2755, 0.84" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "29.4467, -121.054, 10.0519, 0.6", "31.9591, -122.102, 10.6212, 0.6", "33.6142, -122.792, 10.9962, 0.6" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "29.4467, -121.054, 10.0519, 0.6", "28.6754, -123.613, 10.3206, 0.6", "28.3651, -125.96, 10.4118, 1.08", "28.2953, -127.725, 10.4558, 1.08", "28.3225, -129.125, 10.4727, 1.08", "28.3922, -130.651, 10.4955, 1.08", "28.4912, -133.964, 10.6908, 0.72", "28.6444, -136.052, 10.9339, 1.2", "28.7197, -137.168, 11.111, 1.2", "28.7468, -138.109, 11.2949, 1.2", "28.721, -139.829, 11.694, 0.84", "28.6852, -142.485, 12.3178, 0.6", "28.557, -145.647, 13.1696, 1.32", "28.4847, -147.49, 13.6317, 1.32", "28.4767, -149.482, 14.0049, 0.72", "28.4961, -151.0, 14.2411, 1.2", "28.6011, -154.966, 14.7092, 1.2", "28.6411, -156.036, 14.7787, 0.72", "28.7157, -158.547, 14.8802, 1.56", "28.7065, -161.805, 14.9489, 0.72", "28.6067, -164.393, 14.9426, 0.72", "28.4673, -166.438, 14.9064, 1.44", "28.2816, -168.1, 14.8848, 0.84", "28.1568, -169.358, 14.8736, 0.84", "27.9977, -171.155, 15.0014, 1.44", "27.8483, -174.07, 15.4455, 0.84", "27.8428, -175.381, 15.6416, 0.84", "27.892, -176.741, 15.8992, 1.32", "27.9716, -177.899, 16.2001, 1.32", "28.3661, -181.488, 17.398, 0.72", "28.6495, -183.015, 18.1685, 1.32" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-24.0123, 5.9299, 48.4346, 0.96", "-19.8994, 10.8132, 56.4634, 0.96", "-17.2498, 16.3167, 64.697, 0.96", "-16.8168, 22.8122, 72.588, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-24.0123, 5.9299, 48.4346, 0.84", "-18.7575, 9.42576, 57.9054, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "28.6495, -183.015, 18.1685, 0.6", "29.206, -183.252, 19.1901, 0.6", "29.6406, -183.51, 20.1543, 0.96", "30.2092, -183.846, 21.4156, 0.6", "30.5631, -184.056, 22.2008, 0.6", "31.1308, -184.392, 23.4602, 1.2", "31.8108, -184.794, 24.9687, 0.72", "32.2054, -185.129, 26.0397, 1.2" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "28.6495, -183.015, 18.1685, 0.48", "28.7139, -183.982, 18.5784, 0.48", "29.0903, -185.417, 18.8976, 1.08", "29.4786, -186.967, 19.2671, 0.6", "29.7341, -188.187, 19.573, 0.36", "30.0501, -189.734, 19.9854, 0.36", "30.3448, -191.123, 20.3568, 0.84", "31.0381, -193.901, 21.0068, 0.6", "31.6526, -196.059, 21.4699, 0.6", "32.2374, -197.998, 21.8923, 1.08", "32.4767, -198.815, 22.1035, 0.72", "32.8017, -199.957, 22.4617, 1.08", "33.4057, -201.889, 23.1621, 0.48", "33.9977, -203.515, 23.8343, 0.48", "34.3065, -204.199, 24.1113, 0.48", "34.8751, -205.35, 24.6001, 0.48", "35.3444, -206.302, 25.0235, 0.48", "36.056, -207.704, 25.7295, 1.08", "36.4595, -208.437, 26.1555, 0.48", "37.1977, -209.676, 26.8769, 1.08" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_11", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L6_SBC_846dc20ea0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_14
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999997377214663)
    connect dend_34(0), soma_0(0.4999997377214663)
    connect dend_27(0), soma_0(0.4999997377214663)
    connect dend_0(0), soma_0(0.4999997377214663)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.46247, 5.85861, -0.00377942, 7.43125 ) }
    soma_0 { pt3dadd( -6.65141, 5.3667, -0.00311965, 9.16559 ) }
    soma_0 { pt3dadd( -5.84034, 4.87478, -0.00245988, 11.1008 ) }
    soma_0 { pt3dadd( -5.02928, 4.38287, -0.0018001, 12.7187 ) }
    soma_0 { pt3dadd( -4.21821, 3.89095, -0.00114033, 13.407 ) }
    soma_0 { pt3dadd( -3.40715, 3.39904, -4.80554E-4, 14.0331 ) }
    soma_0 { pt3dadd( -2.59608, 2.90712, 1.79219E-4, 14.6433 ) }
    soma_0 { pt3dadd( -1.78502, 2.41521, 8.38993E-4, 15.2536 ) }
    soma_0 { pt3dadd( -0.973954, 1.92329, 0.00149877, 15.5093 ) }
    soma_0 { pt3dadd( -0.162889, 1.43138, 0.00215854, 15.3073 ) }
    soma_0 { pt3dadd( 0.648176, 0.939463, 0.00281831, 15.1053 ) }
    soma_0 { pt3dadd( 1.45924, 0.447548, 0.00347809, 14.9033 ) }
    soma_0 { pt3dadd( 2.27031, -0.0443665, 0.00413786, 14.4818 ) }
    soma_0 { pt3dadd( 3.08137, -0.536281, 0.00479764, 13.7638 ) }
    soma_0 { pt3dadd( 3.89244, -1.0282, 0.00545741, 12.8143 ) }
    soma_0 { pt3dadd( 4.7035, -1.52011, 0.00611718, 11.7232 ) }
    soma_0 { pt3dadd( 5.51457, -2.01203, 0.00677696, 10.29 ) }
    soma_0 { pt3dadd( 6.32563, -2.50394, 0.00743673, 8.85677 ) }
    soma_0 { pt3dadd( 7.1367, -2.99586, 0.0080965, 7.04177 ) }
    soma_0 { pt3dadd( 7.94776, -3.48777, 0.00875628, 4.64246 ) }
    soma_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 2.78846 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.16814, 7.81548, -1.4503, 1.32 ) }
    dend_47 { pt3dadd( -2.56963, 8.91516, -1.95017, 1.32 ) }
    dend_47 { pt3dadd( -2.87281, 9.74927, -2.37915, 1.32 ) }
    dend_47 { pt3dadd( -3.62295, 11.6361, -3.43982, 2.04 ) }
    dend_47 { pt3dadd( -4.7718, 14.0605, -4.91037, 1.32 ) }
    dend_47 { pt3dadd( -5.62894, 15.8148, -5.98093, 1.8 ) }
    dend_47 { pt3dadd( -6.4566, 17.5087, -7.01467, 1.32 ) }
    dend_47 { pt3dadd( -7.1539, 18.9025, -7.94132, 1.68 ) }
    dend_47 { pt3dadd( -7.76316, 20.0913, -8.80677, 1.68 ) }
    dend_47 { pt3dadd( -8.66352, 21.7892, -10.1979, 1.08 ) }
    dend_47 { pt3dadd( -9.32705, 22.8446, -11.0184, 1.56 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.03186, -3.28977, -1.5003, 1.8 ) }
    dend_34 { pt3dadd( 6.92508, -3.90334, -2.46312, 1.8 ) }
    dend_34 { pt3dadd( 8.81899, -5.20429, -4.50458, 1.8 ) }
    dend_34 { pt3dadd( 10.1101, -6.09121, -5.89635, 1.8 ) }
    dend_34 { pt3dadd( 11.3233, -6.92453, -7.20401, 2.16 ) }
    dend_34 { pt3dadd( 13.4314, -8.3726, -9.47634, 2.4 ) }
    dend_34 { pt3dadd( 13.754, -8.59422, -9.8241, 2.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 39/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.09186, -5.14227, 5.0897, 2.64 ) }
    dend_27 { pt3dadd( 3.22133, -6.02574, 5.74363, 2.64 ) }
    dend_27 { pt3dadd( 3.43203, -7.12291, 6.50423, 2.64 ) }
    dend_27 { pt3dadd( 4.58533, -11.6259, 9.33896, 1.92 ) }
    dend_27 { pt3dadd( 5.43007, -14.2543, 10.8509, 1.92 ) }
    dend_27 { pt3dadd( 6.44828, -16.9369, 12.2772, 1.92 ) }
    dend_27 { pt3dadd( 7.70601, -20.0077, 13.7957, 2.4 ) }
    dend_27 { pt3dadd( 8.32669, -21.361, 14.4144, 2.4 ) }
    dend_27 { pt3dadd( 9.57472, -23.8297, 15.4558, 1.8 ) }
    dend_27 { pt3dadd( 11.3015, -26.84, 16.4506, 1.56 ) }
    dend_27 { pt3dadd( 13.101, -29.6979, 17.2669, 1.8 ) }
    dend_27 { pt3dadd( 14.189, -31.3358, 17.6378, 1.8 ) }
    dend_27 { pt3dadd( 14.5717, -31.8856, 17.7567, 1.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 52/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.79815, 0.912482, -0.0303001, 5.65 ) }
    dend_0 { pt3dadd( -10.1859, -0.137817, -0.0192616, 4.93 ) }
    dend_0 { pt3dadd( -11.5589, -0.74177, -0.0129141, 4.81 ) }
    dend_0 { pt3dadd( -14.7222, -2.13324, 0.00171007, 1.92 ) }
    dend_0 { pt3dadd( -16.9263, -3.1028, 0.0119, 1.68 ) }
    dend_0 { pt3dadd( -19.2688, -4.13319, 0.0227293, 1.68 ) }
    dend_0 { pt3dadd( -23.7147, -6.08885, 0.0432831, 3.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 59/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 1.21225 ) }
    axon_0 { pt3dadd( 21.5843, -11.7584, 0.00941605, 1.21225 ) }
    axon_0 { pt3dadd( 34.4097, -19.5371, 0.00941605, 1.21225 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 62/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -9.32705, 22.8446, -11.0184, 0.6 ) }
    dend_51 { pt3dadd( -10.3191, 24.9432, -11.3912, 0.6 ) }
    dend_51 { pt3dadd( -11.0243, 26.3933, -11.7917, 0.6 ) }
    dend_51 { pt3dadd( -11.5179, 27.3271, -12.1069, 0.6 ) }
    dend_51 { pt3dadd( -12.1969, 28.7816, -12.8782, 1.68 ) }
    dend_51 { pt3dadd( -12.8792, 30.6381, -14.0367, 0.72 ) }
    dend_51 { pt3dadd( -13.1369, 31.3397, -14.4745, 0.72 ) }
    dend_51 { pt3dadd( -14.1612, 34.2795, -16.5959, 0.6 ) }
    dend_51 { pt3dadd( -14.8097, 36.255, -18.209, 1.44 ) }
    dend_51 { pt3dadd( -15.866, 39.793, -21.4402, 0.84 ) }
    dend_51 { pt3dadd( -16.218, 41.3246, -23.0354, 1.8 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -9.32705, 22.8446, -11.0184, 1.32 ) }
    dend_48 { pt3dadd( -9.18158, 24.037, -13.5922, 1.32 ) }
    dend_48 { pt3dadd( -8.99836, 26.1608, -17.8605, 1.32 ) }
    dend_48 { pt3dadd( -8.85169, 27.7009, -20.7014, 1.32 ) }
    dend_48 { pt3dadd( -8.65958, 29.4463, -23.7711, 0.96 ) }
    dend_48 { pt3dadd( -8.473, 31.1416, -26.7525, 0.96 ) }
    dend_48 { pt3dadd( -8.34041, 32.3462, -28.8711, 1.2 ) }
    dend_48 { pt3dadd( -8.23841, 33.9212, -31.5808, 0.48 ) }
    dend_48 { pt3dadd( -8.08638, 35.6106, -34.1368, 1.32 ) }
    dend_48 { pt3dadd( -7.97806, 36.6949, -35.6134, 1.32 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 13.754, -8.59422, -9.8241, 1.56 ) }
    dend_42 { pt3dadd( 14.2906, -9.47471, -11.7399, 1.56 ) }
    dend_42 { pt3dadd( 15.3255, -11.907, -16.0332, 1.32 ) }
    dend_42 { pt3dadd( 15.6056, -13.3724, -18.3273, 1.32 ) }
    dend_42 { pt3dadd( 15.739, -14.8522, -20.318, 1.68 ) }
    dend_42 { pt3dadd( 15.7779, -15.9398, -21.6286, 1.68 ) }
    dend_42 { pt3dadd( 15.7807, -16.886, -22.6249, 1.68 ) }
    dend_42 { pt3dadd( 15.6571, -18.9829, -24.2832, 1.2 ) }
    dend_42 { pt3dadd( 15.0867, -23.6247, -26.8921, 1.2 ) }
    dend_42 { pt3dadd( 14.7918, -25.6698, -27.8748, 1.56 ) }
    dend_42 { pt3dadd( 14.67, -26.5461, -28.2551, 1.56 ) }
    dend_42 { pt3dadd( 14.4246, -28.6064, -29.0973, 1.2 ) }
    dend_42 { pt3dadd( 14.2466, -30.3044, -29.8143, 1.2 ) }
    dend_42 { pt3dadd( 14.0395, -33.6087, -31.2537, 1.2 ) }
    dend_42 { pt3dadd( 14.0397, -34.8876, -31.8111, 1.2 ) }
    dend_42 { pt3dadd( 14.0731, -35.7952, -32.2353, 1.56 ) }
    dend_42 { pt3dadd( 14.1702, -38.0991, -33.4212, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( 14.2661, -40.4694, -34.7626, 2.04 ) }
    dend_42 { pt3dadd( 14.3052, -41.61, -35.398, 2.04 ) }
    dend_42 { pt3dadd( 14.3641, -43.6319, -36.2633, 1.32 ) }
    dend_42 { pt3dadd( 14.5083, -46.9408, -37.5551, 2.16 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 13.754, -8.59422, -9.8241, 1.32 ) }
    dend_35 { pt3dadd( 17.2113, -9.26625, -9.41471, 1.32 ) }
    dend_35 { pt3dadd( 19.0321, -9.6202, -9.19909, 1.32 ) }
    dend_35 { pt3dadd( 22.7879, -10.3503, -8.75435, 1.32 ) }
    dend_35 { pt3dadd( 24.2764, -10.6396, -8.5781, 1.32 ) }
    dend_35 { pt3dadd( 29.3976, -11.6351, -7.97167, 1.2 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 14.5717, -31.8856, 17.7567, 1.2 ) }
    dend_33 { pt3dadd( 15.5413, -32.5024, 18.4811, 1.2 ) }
    dend_33 { pt3dadd( 16.9556, -33.3958, 19.5609, 1.2 ) }
    dend_33 { pt3dadd( 17.9878, -34.0246, 20.3592, 1.2 ) }
    dend_33 { pt3dadd( 19.244, -34.7633, 21.3228, 2.04 ) }
    dend_33 { pt3dadd( 21.5946, -36.1169, 23.1008, 1.08 ) }
    dend_33 { pt3dadd( 22.7799, -36.809, 23.9945, 1.08 ) }
    dend_33 { pt3dadd( 23.5065, -37.2707, 24.586, 1.08 ) }
    dend_33 { pt3dadd( 24.3233, -37.7858, 25.2599, 1.08 ) }
    dend_33 { pt3dadd( 25.0152, -38.1891, 25.7601, 1.08 ) }
    dend_33 { pt3dadd( 25.6342, -38.5288, 26.1168, 1.08 ) }
    dend_33 { pt3dadd( 26.1235, -38.7646, 26.3046, 1.08 ) }
    dend_33 { pt3dadd( 27.1834, -39.299, 26.7051, 1.08 ) }
    dend_33 { pt3dadd( 27.8113, -39.6246, 26.9102, 1.08 ) }
    dend_33 { pt3dadd( 28.5588, -40.0341, 27.2199, 1.08 ) }
    dend_33 { pt3dadd( 29.1503, -40.3603, 27.4907, 1.08 ) }
    dend_33 { pt3dadd( 30.0269, -40.8355, 27.9492, 1.08 ) }
    dend_33 { pt3dadd( 30.5456, -41.0889, 28.2569, 1.08 ) }
    dend_33 { pt3dadd( 32.0217, -41.7145, 29.2726, 1.92 ) }
    dend_33 { pt3dadd( 33.8651, -42.2924, 30.7132, 0.96 ) }
    dend_33 { pt3dadd( 34.4216, -42.3874, 31.189, 0.96 ) }
    dend_33 { pt3dadd( 35.6829, -42.3683, 32.3171, 0.72 ) }
    dend_33 { pt3dadd( 36.5101, -42.1539, 33.0479, 1.32 ) }
    dend_33 { pt3dadd( 37.3633, -41.7334, 33.7761, 1.32 ) }
    dend_33 { pt3dadd( 38.6944, -40.7965, 34.7587, 0.84 ) }
    dend_33 { pt3dadd( 39.0816, -40.5039, 34.9665, 0.84 ) }
    dend_33 { pt3dadd( 39.7835, -39.9986, 35.2777, 0.84 ) }
    dend_33 { pt3dadd( 40.4166, -39.5936, 35.432, 0.84 ) }
    dend_33 { pt3dadd( 40.9099, -39.3592, 35.4699, 0.84 ) }
    dend_33 { pt3dadd( 42.313, -38.883, 35.4219, 0.72 ) }
    dend_33 { pt3dadd( 43.2178, -38.7025, 35.3137, 0.72 ) }
    dend_33 { pt3dadd( 43.8087, -38.5978, 35.2226, 0.72 ) }
    dend_33 { pt3dadd( 44.9787, -38.3967, 34.9718, 0.72 ) }
    dend_33 { pt3dadd( 45.5495, -38.3159, 34.8255, 0.72 ) }
    dend_33 { pt3dadd( 45.8065, -38.2785, 34.7415, 0.72 ) }
    dend_33 { pt3dadd( 47.1142, -38.0748, 34.0953, 0.96 ) }
    dend_33 { pt3dadd( 53.4435, -39.6022, 37.9667, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 14.5717, -31.8856, 17.7567, 0.96 ) }
    dend_28 { pt3dadd( 14.4536, -34.5748, 17.9158, 0.96 ) }
    dend_28 { pt3dadd( 14.3293, -37.4055, 18.0833, 1.08 ) }
    dend_28 { pt3dadd( 14.2653, -38.8633, 18.1696, 1.08 ) }
    dend_28 { pt3dadd( 14.1549, -41.3782, 18.3184, 1.56 ) }
    dend_28 { pt3dadd( 14.081, -43.0633, 18.4181, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -23.7147, -6.08885, 0.0432831, 1.08 ) }
    dend_14 { pt3dadd( -24.6664, -8.68274, 0.933342, 1.08 ) }
    dend_14 { pt3dadd( -25.0041, -9.73778, 1.23804, 1.08 ) }
    dend_14 { pt3dadd( -25.3927, -11.1829, 1.63677, 1.08 ) }
    dend_14 { pt3dadd( -25.6828, -12.513, 2.04394, 1.08 ) }
    dend_14 { pt3dadd( -25.9684, -14.2366, 2.46314, 1.08 ) }
    dend_14 { pt3dadd( -26.1418, -15.5483, 2.70909, 1.32 ) }
    dend_14 { pt3dadd( -26.449, -19.2267, 3.2061, 1.8 ) }
    dend_14 { pt3dadd( -26.4546, -20.2665, 3.29971, 1.8 ) }
    dend_14 { pt3dadd( -26.3005, -22.2657, 3.36529, 1.56 ) }
    dend_14 { pt3dadd( -25.8004, -25.5829, 3.29285, 1.44 ) }
    dend_14 { pt3dadd( -25.3827, -27.5465, 3.14812, 1.44 ) }
    dend_14 { pt3dadd( -24.9274, -29.346, 2.96868, 1.56 ) }
    dend_14 { pt3dadd( -24.2977, -31.6495, 2.74712, 1.32 ) }
    dend_14 { pt3dadd( -23.709, -33.9432, 2.51566, 1.32 ) }
    dend_14 { pt3dadd( -23.176, -36.1117, 2.24463, 2.04 ) }
    dend_14 { pt3dadd( -22.7995, -37.7453, 2.05244, 2.04 ) }
    dend_14 { pt3dadd( -22.4268, -39.5378, 1.78098, 1.08 ) }
    dend_14 { pt3dadd( -22.021, -41.861, 1.33848, 1.44 ) }
    dend_14 { pt3dadd( -21.662, -44.2255, 0.806539, 1.44 ) }
    dend_14 { pt3dadd( -21.3113, -46.3887, 0.275497, 0.96 ) }
    dend_14 { pt3dadd( -21.0554, -47.8565, -0.114977, 1.56 ) }
    dend_14 { pt3dadd( -20.6425, -50.028, -0.710595, 1.56 ) }
    dend_14 { pt3dadd( -20.1021, -52.4532, -1.38387, 2.16 ) }
    dend_14 { pt3dadd( -19.5903, -54.3099, -1.84719, 1.56 ) }
    dend_14 { pt3dadd( -19.0972, -55.6355, -2.04575, 1.56 ) }
    dend_14 { pt3dadd( -17.8868, -58.1588, -2.29268, 1.8 ) }
    dend_14 { pt3dadd( -17.3532, -59.0942, -2.35928, 1.8 ) }
    dend_14 { pt3dadd( -16.6803, -60.1515, -2.40417, 1.8 ) }
    dend_14 { pt3dadd( -15.8791, -61.341, -2.41444, 1.8 ) }
    dend_14 { pt3dadd( -13.5712, -64.7091, -2.5394, 1.56 ) }
    dend_14 { pt3dadd( -11.2865, -67.9115, -2.75066, 1.56 ) }
    dend_14 { pt3dadd( -10.3919, -69.0824, -2.88267, 1.56 ) }
    dend_14 { pt3dadd( -9.64228, -70.1688, -3.28762, 1.56 ) }
    dend_14 { pt3dadd( -8.82314, -71.3946, -3.81741, 1.8 ) }
    dend_14 { pt3dadd( -7.08296, -74.1581, -5.22338, 1.44 ) }
    dend_14 { pt3dadd( -6.36583, -75.4044, -6.00079, 1.44 ) }
    dend_14 { pt3dadd( -5.12269, -77.6779, -7.63573, 1.8 ) }
    dend_14 { pt3dadd( -1.15839, -85.2386, -13.818, 1.8 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -23.7147, -6.08885, 0.0432831, 1.56 ) }
    dend_1 { pt3dadd( -25.3183, -7.0203, 1.25991, 1.56 ) }
    dend_1 { pt3dadd( -27.081, -8.04415, 2.59722, 1.32 ) }
    dend_1 { pt3dadd( -28.3801, -8.7987, 3.5828, 1.32 ) }
    dend_1 { pt3dadd( -30.0964, -9.79559, 4.88491, 1.68 ) }
    dend_1 { pt3dadd( -31.6084, -10.6739, 6.03205, 2.04 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 98/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 34.4097, -19.5371, 0.00941605, 0.119518 ) }
    axon_1 { pt3dadd( 47.2351, -27.3158, 0.00941605, 0.119518 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    axon_1 { pt3dadd( 60.0606, -35.0945, 0.00941605, 0.119518 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 1/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -16.218, 41.3246, -23.0354, 0.84 ) }
    dend_53 { pt3dadd( -14.28, 42.2653, -19.079, 0.84 ) }
    dend_53 { pt3dadd( -13.7509, 42.5221, -17.9988, 1.8 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 4/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -16.218, 41.3246, -23.0354, 0.96 ) }
    dend_52 { pt3dadd( -16.1765, 42.3315, -24.1445, 0.96 ) }
    dend_52 { pt3dadd( -16.1539, 43.1201, -24.8635, 0.96 ) }
    dend_52 { pt3dadd( -16.0973, 44.485, -26.1553, 1.2 ) }
    dend_52 { pt3dadd( -15.864, 46.9725, -28.5182, 0.96 ) }
    dend_52 { pt3dadd( -15.7454, 47.736, -29.1784, 0.72 ) }
    dend_52 { pt3dadd( -15.4765, 48.9267, -30.1387, 1.44 ) }
    dend_52 { pt3dadd( -15.2184, 49.6171, -30.6753, 1.44 ) }
    dend_52 { pt3dadd( -14.091, 51.8593, -32.3109, 0.84 ) }
    dend_52 { pt3dadd( -13.6096, 52.5808, -32.9486, 0.72 ) }
    dend_52 { pt3dadd( -12.7476, 53.6434, -34.1496, 1.68 ) }
    dend_52 { pt3dadd( -11.9793, 54.4917, -35.2113, 0.72 ) }
    dend_52 { pt3dadd( -11.1449, 55.3071, -36.365, 1.2 ) }
    dend_52 { pt3dadd( -10.3521, 56.0225, -37.4819, 1.32 ) }
    dend_52 { pt3dadd( -7.52351, 58.345, -41.4782, 0.72 ) }
    dend_52 { pt3dadd( -6.21318, 59.3816, -43.6636, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 20/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -7.97806, 36.6949, -35.6134, 0.84 ) }
    dend_50 { pt3dadd( -7.16725, 38.2659, -36.535, 0.84 ) }
    dend_50 { pt3dadd( -6.36778, 39.7432, -37.4441, 0.84 ) }
    dend_50 { pt3dadd( -5.90609, 40.6046, -38.0624, 0.84 ) }
    dend_50 { pt3dadd( -5.31268, 41.726, -39.0362, 0.6 ) }
    dend_50 { pt3dadd( -4.80831, 42.6792, -39.864, 0.6 ) }
    dend_50 { pt3dadd( -4.08992, 44.0368, -41.0429, 1.32 ) }
    dend_50 { pt3dadd( -3.25634, 45.6845, -42.6074, 0.72 ) }
    dend_50 { pt3dadd( -2.31402, 47.5083, -44.3601, 1.56 ) }
    dend_50 { pt3dadd( -1.1768, 49.6614, -46.6088, 0.84 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -7.97806, 36.6949, -35.6134, 0.84 ) }
    dend_49 { pt3dadd( -9.4395, 40.4924, -45.1186, 0.84 ) }
    dend_49 { pt3dadd( -9.71391, 41.2054, -46.9033, 1.2 ) }
    dend_49 { pt3dadd( -10.1012, 42.2117, -49.4219, 0.84 ) }
    dend_49 { pt3dadd( -10.4493, 43.1163, -51.6862, 1.2 ) }
    dend_49 { pt3dadd( -11.1272, 44.8778, -56.0952, 0.84 ) }
    dend_49 { pt3dadd( -11.4719, 45.7733, -58.3367, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 37/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 14.5083, -46.9408, -37.5551, 0.72 ) }
    dend_44 { pt3dadd( 13.5873, -52.0159, -37.5497, 0.72 ) }
    dend_44 { pt3dadd( 13.2516, -53.8356, -37.4415, 1.2 ) }
    dend_44 { pt3dadd( 13.0036, -55.073, -37.3237, 1.2 ) }
    dend_44 { pt3dadd( 12.5237, -56.9599, -37.2022, 0.6 ) }
    dend_44 { pt3dadd( 11.8582, -59.1526, -37.0817, 1.92 ) }
    dend_44 { pt3dadd( 11.0415, -61.4554, -37.0274, 1.08 ) }
    dend_44 { pt3dadd( 9.81964, -64.1397, -37.1031, 1.68 ) }
    dend_44 { pt3dadd( 8.88836, -65.8247, -37.2321, 1.68 ) }
    dend_44 { pt3dadd( 6.92033, -68.9044, -37.6256, 0.96 ) }
    dend_44 { pt3dadd( 5.97624, -70.1814, -37.8529, 0.96 ) }
    dend_44 { pt3dadd( 4.26535, -72.1793, -38.3435, 1.44 ) }
    dend_44 { pt3dadd( 2.1587, -74.3307, -38.9867, 0.96 ) }
    dend_44 { pt3dadd( 0.599409, -75.8176, -39.5514, 1.44 ) }
    dend_44 { pt3dadd( -1.09764, -77.4233, -40.1995, 0.96 ) }
    dend_44 { pt3dadd( -2.35857, -78.6741, -40.6778, 1.56 ) }
    dend_44 { pt3dadd( -4.38938, -80.7893, -41.4737, 0.84 ) }
    dend_44 { pt3dadd( -6.3329, -82.9377, -42.2133, 1.56 ) }
    dend_44 { pt3dadd( -8.92967, -86.0167, -43.2129, 1.08 ) }
    dend_44 { pt3dadd( -10.2718, -87.7296, -43.742, 0.84 ) }
    dend_44 { pt3dadd( -11.8837, -89.9749, -44.418, 1.08 ) }
    dend_44 { pt3dadd( -12.2325, -90.4987, -44.5684, 0.72 ) }
    dend_44 { pt3dadd( -13.5593, -92.6587, -45.1705, 1.2 ) }
    dend_44 { pt3dadd( -14.8524, -94.9173, -45.7602, 0.6 ) }
    dend_44 { pt3dadd( -15.837, -96.648, -46.1229, 1.08 ) }
    dend_44 { pt3dadd( -16.9483, -98.5423, -46.5274, 0.72 ) }
    dend_44 { pt3dadd( -18.1844, -100.517, -47.0042, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 14.5083, -46.9408, -37.5551, 0.48 ) }
    dend_43 { pt3dadd( 17.2725, -49.4133, -38.2944, 0.48 ) }
    dend_43 { pt3dadd( 20.0009, -51.8797, -39.0787, 1.32 ) }
    dend_43 { pt3dadd( 21.8479, -53.5793, -39.6436, 0.96 ) }
    dend_43 { pt3dadd( 23.1948, -54.8182, -40.0581, 1.56 ) }
    dend_43 { pt3dadd( 25.5329, -56.9916, -40.7958, 0.96 ) }
    dend_43 { pt3dadd( 27.7056, -59.0556, -41.5125, 1.68 ) }
    dend_43 { pt3dadd( 30.0192, -61.2836, -42.3632, 1.08 ) }
    dend_43 { pt3dadd( 31.8054, -63.096, -43.0921, 1.8 ) }
    dend_43 { pt3dadd( 32.4745, -63.838, -43.3936, 1.8 ) }
    dend_43 { pt3dadd( 34.7824, -66.6258, -44.5731, 1.08 ) }
    dend_43 { pt3dadd( 36.0432, -68.3415, -45.3651, 1.56 ) }
    dend_43 { pt3dadd( 36.9338, -69.7607, -46.0399, 1.08 ) }
    dend_43 { pt3dadd( 37.7266, -71.2836, -46.744, 1.56 ) }
    dend_43 { pt3dadd( 38.7605, -73.7423, -47.8401, 1.08 ) }
    dend_43 { pt3dadd( 39.3999, -75.5518, -48.6292, 1.68 ) }
    dend_43 { pt3dadd( 40.0913, -77.8941, -49.6125, 1.2 ) }
    dend_43 { pt3dadd( 40.6637, -79.9007, -50.415, 1.2 ) }
    dend_43 { pt3dadd( 41.4103, -82.5575, -51.4426, 1.8 ) }
    dend_43 { pt3dadd( 42.0602, -85.0951, -52.4743, 1.2 ) }
    dend_43 { pt3dadd( 42.4468, -86.5904, -53.3051, 1.8 ) }
    dend_43 { pt3dadd( 43.2806, -89.6533, -55.3035, 1.2 ) }
    dend_43 { pt3dadd( 44.263, -92.9099, -57.6863, 1.68 ) }
    dend_43 { pt3dadd( 44.9371, -94.9001, -59.239, 1.2 ) }
    dend_43 { pt3dadd( 45.9463, -97.5752, -61.5835, 1.68 ) }
    dend_43 { pt3dadd( 48.3167, -103.283, -66.9867, 1.2 ) }
    dend_43 { pt3dadd( 48.9413, -104.684, -68.3833, 1.2 ) }
    dend_43 { pt3dadd( 49.4737, -105.811, -69.5652, 1.2 ) }
    dend_43 { pt3dadd( 50.4605, -107.791, -71.7319, 1.56 ) }
    dend_43 { pt3dadd( 52.4797, -111.504, -75.7469, 0.96 ) }
    dend_43 { pt3dadd( 53.5592, -113.286, -77.4966, 1.44 ) }
    dend_43 { pt3dadd( 54.4122, -114.788, -78.6933, 0.72 ) }
    dend_43 { pt3dadd( 55.2308, -116.248, -80.034, 1.32 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 97/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 29.3976, -11.6351, -7.97167, 0.72 ) }
    dend_41 { pt3dadd( 32.4012, -9.99719, -8.45864, 0.72 ) }
    dend_41 { pt3dadd( 34.5445, -8.60548, -8.85554, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( 36.1489, -7.43465, -9.18571, 0.72 ) }
    dend_41 { pt3dadd( 37.6366, -6.20314, -9.57042, 0.72 ) }
    dend_41 { pt3dadd( 39.343, -4.62215, -10.2037, 0.48 ) }
    dend_41 { pt3dadd( 39.8152, -4.11107, -10.4567, 0.96 ) }
    dend_41 { pt3dadd( 41.4308, -1.92661, -11.7914, 0.6 ) }
    dend_41 { pt3dadd( 42.7019, 0.0572559, -13.316, 1.44 ) }
    dend_41 { pt3dadd( 43.9176, 2.09665, -15.1878, 0.72 ) }
    dend_41 { pt3dadd( 45.2, 4.19041, -17.5871, 1.2 ) }
    dend_41 { pt3dadd( 46.7537, 6.72744, -20.7434, 0.6 ) }
    dend_41 { pt3dadd( 48.3568, 9.35694, -24.2374, 1.2 ) }
    dend_41 { pt3dadd( 49.6402, 11.4929, -27.3533, 0.84 ) }
    dend_41 { pt3dadd( 50.7903, 13.4154, -30.463, 1.68 ) }
    dend_41 { pt3dadd( 52.2843, 15.6912, -34.6057, 0.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 13/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 29.3976, -11.6351, -7.97167, 0.48 ) }
    dend_36 { pt3dadd( 32.6779, -13.2733, -8.72477, 0.48 ) }
    dend_36 { pt3dadd( 35.0859, -14.76, -9.40347, 0.96 ) }
    dend_36 { pt3dadd( 36.0101, -15.4497, -9.73127, 0.72 ) }
    dend_36 { pt3dadd( 39.3555, -18.3375, -11.0835, 1.2 ) }
    dend_36 { pt3dadd( 42.1232, -21.0622, -12.3059, 0.84 ) }
    dend_36 { pt3dadd( 44.6005, -23.8335, -13.5102, 1.68 ) }
    dend_36 { pt3dadd( 46.3857, -26.3874, -14.5965, 0.96 ) }
    dend_36 { pt3dadd( 47.8976, -29.1718, -15.7154, 1.92 ) }
    dend_36 { pt3dadd( 48.608, -30.8309, -16.3348, 1.92 ) }
    dend_36 { pt3dadd( 49.3005, -33.0876, -17.0907, 0.96 ) }
    dend_36 { pt3dadd( 49.8949, -35.4961, -17.766, 1.44 ) }
    dend_36 { pt3dadd( 50.1775, -36.803, -18.0185, 1.44 ) }
    dend_36 { pt3dadd( 50.9619, -40.2439, -18.3794, 0.72 ) }
    dend_36 { pt3dadd( 51.2742, -41.4591, -18.4132, 0.72 ) }
    dend_36 { pt3dadd( 51.9167, -43.7614, -18.3498, 1.32 ) }
    dend_36 { pt3dadd( 53.1795, -47.5495, -17.7848, 1.32 ) }
    dend_36 { pt3dadd( 53.8658, -49.2235, -17.3258, 1.32 ) }
    dend_36 { pt3dadd( 54.5976, -50.738, -16.7868, 1.32 ) }
    dend_36 { pt3dadd( 55.1042, -51.6916, -16.3797, 1.32 ) }
    dend_36 { pt3dadd( 56.6554, -54.4531, -15.0688, 0.72 ) }
    dend_36 { pt3dadd( 58.8213, -58.1437, -13.0992, 1.8 ) }
    dend_36 { pt3dadd( 60.2171, -60.3547, -11.9369, 1.8 ) }
    dend_36 { pt3dadd( 61.165, -61.7496, -11.1395, 1.8 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 14.081, -43.0633, 18.4181, 1.44 ) }
    dend_32 { pt3dadd( 16.1857, -44.3789, 18.9357, 1.44 ) }
    dend_32 { pt3dadd( 17.9742, -45.7238, 19.4637, 1.44 ) }
    dend_32 { pt3dadd( 19.3305, -46.9001, 19.9285, 1.44 ) }
    dend_32 { pt3dadd( 20.6186, -48.1968, 20.4361, 1.44 ) }
    dend_32 { pt3dadd( 21.5212, -49.1794, 20.8041, 1.44 ) }
    dend_32 { pt3dadd( 22.8678, -50.7565, 21.3901, 1.44 ) }
    dend_32 { pt3dadd( 23.6312, -51.8036, 21.7871, 1.08 ) }
    dend_32 { pt3dadd( 24.377, -52.9501, 22.2786, 1.44 ) }
    dend_32 { pt3dadd( 25.7408, -55.1059, 23.2154, 1.08 ) }
    dend_32 { pt3dadd( 26.6243, -56.4135, 23.7646, 1.56 ) }
    dend_32 { pt3dadd( 27.7889, -57.9662, 24.4418, 0.96 ) }
    dend_32 { pt3dadd( 28.6492, -58.9627, 24.8977, 0.96 ) }
    dend_32 { pt3dadd( 30.4037, -60.8075, 25.7862, 0.96 ) }
    dend_32 { pt3dadd( 31.6652, -62.0461, 26.4209, 0.96 ) }
    dend_32 { pt3dadd( 32.4986, -62.8262, 26.8563, 0.96 ) }
    dend_32 { pt3dadd( 33.3097, -63.5872, 27.2924, 0.96 ) }
    dend_32 { pt3dadd( 34.513, -64.6997, 27.9482, 0.72 ) }
    dend_32 { pt3dadd( 35.1139, -65.2838, 28.2846, 0.72 ) }
    dend_32 { pt3dadd( 36.1815, -66.397, 28.9114, 0.72 ) }
    dend_32 { pt3dadd( 37.0087, -67.3328, 29.5237, 0.72 ) }
    dend_32 { pt3dadd( 37.4564, -67.843, 29.8781, 0.72 ) }
    dend_32 { pt3dadd( 38.0865, -68.5098, 30.3908, 0.72 ) }
    dend_32 { pt3dadd( 38.5496, -68.9816, 30.7795, 0.72 ) }
    dend_32 { pt3dadd( 39.6651, -70.0153, 31.6833, 0.72 ) }
    dend_32 { pt3dadd( 40.1591, -70.4187, 32.046, 0.72 ) }
    dend_32 { pt3dadd( 40.9613, -70.988, 32.6048, 0.72 ) }
    dend_32 { pt3dadd( 41.964, -71.6383, 33.3025, 0.72 ) }
    dend_32 { pt3dadd( 50.573, -76.5943, 38.1001, 0.72 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 66/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 14.081, -43.0633, 18.4181, 1.44 ) }
    dend_29 { pt3dadd( 12.7028, -44.1398, 18.9923, 1.44 ) }
    dend_29 { pt3dadd( 10.6263, -45.959, 19.5197, 1.44 ) }
    dend_29 { pt3dadd( 9.50824, -47.0782, 19.6826, 1.2 ) }
    dend_29 { pt3dadd( 8.49631, -48.2442, 19.7254, 1.2 ) }
    dend_29 { pt3dadd( 6.92022, -50.2246, 19.6242, 1.08 ) }
    dend_29 { pt3dadd( 6.10508, -51.2547, 19.5153, 1.08 ) }
    dend_29 { pt3dadd( 4.32149, -53.5022, 18.9441, 1.32 ) }
    dend_29 { pt3dadd( 3.42306, -54.6482, 18.4908, 1.32 ) }
    dend_29 { pt3dadd( 2.51725, -55.8578, 17.9708, 0.96 ) }
    dend_29 { pt3dadd( 1.66602, -57.0409, 17.3955, 0.96 ) }
    dend_29 { pt3dadd( 0.575175, -58.5559, 16.6169, 1.32 ) }
    dend_29 { pt3dadd( -0.458674, -59.9035, 15.8959, 0.96 ) }
    dend_29 { pt3dadd( -1.34389, -60.9537, 15.3642, 0.96 ) }
    dend_29 { pt3dadd( -3.05623, -62.8926, 14.3732, 1.44 ) }
    dend_29 { pt3dadd( -4.87331, -64.8949, 13.3748, 0.96 ) }
    dend_29 { pt3dadd( -5.36078, -65.4492, 13.1134, 0.96 ) }
    dend_29 { pt3dadd( -6.94559, -67.3623, 12.2599, 1.8 ) }
    dend_29 { pt3dadd( -8.07865, -68.8074, 11.525, 1.32 ) }
    dend_29 { pt3dadd( -8.55659, -69.4126, 11.1987, 1.32 ) }
    dend_29 { pt3dadd( -8.89602, -69.8275, 10.9731, 1.32 ) }
    dend_29 { pt3dadd( -9.64588, -70.7134, 10.5258, 0.96 ) }
    dend_29 { pt3dadd( -10.034, -71.1693, 10.2699, 0.96 ) }
    dend_29 { pt3dadd( -12.7141, -74.3336, 8.38506, 2.4 ) }
    dend_29 { pt3dadd( -14.5134, -76.4877, 7.04618, 0.84 ) }
    dend_29 { pt3dadd( -15.9658, -78.2283, 5.94223, 2.16 ) }
    dend_29 { pt3dadd( -16.5383, -78.9089, 5.50482, 2.16 ) }
    dend_29 { pt3dadd( -18.6881, -81.3661, 3.90128, 0.84 ) }
    dend_29 { pt3dadd( -19.954, -82.7389, 3.04602, 1.32 ) }
    // Section: dend_26, id: dend_26, parent: dend_14 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.15839, -85.2386, -13.818, 0.84 ) }
    dend_26 { pt3dadd( -0.732345, -86.1295, -13.6688, 0.84 ) }
    dend_26 { pt3dadd( -0.438623, -86.7548, -13.5733, 0.96 ) }
    dend_26 { pt3dadd( -0.0198573, -87.7143, -13.4457, 0.72 ) }
    dend_26 { pt3dadd( 0.64603, -89.306, -13.2669, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( 1.42021, -91.3042, -13.07, 1.08 ) }
    dend_26 { pt3dadd( 1.97386, -92.8464, -12.8824, 1.08 ) }
    dend_26 { pt3dadd( 2.17602, -93.4535, -12.7996, 1.08 ) }
    dend_26 { pt3dadd( 2.61945, -95.0282, -12.5847, 0.6 ) }
    dend_26 { pt3dadd( 2.91816, -96.3758, -12.3879, 1.32 ) }
    dend_26 { pt3dadd( 3.101, -97.6033, -12.1811, 1.32 ) }
    dend_26 { pt3dadd( 3.26071, -99.0438, -11.944, 0.72 ) }
    dend_26 { pt3dadd( 3.3273, -99.6456, -11.8564, 0.72 ) }
    dend_26 { pt3dadd( 3.50455, -100.957, -11.6374, 1.2 ) }
    dend_26 { pt3dadd( 3.69749, -102.052, -11.4086, 0.48 ) }
    dend_26 { pt3dadd( 3.91076, -103.039, -11.1851, 1.08 ) }
    dend_26 { pt3dadd( 4.23329, -104.253, -10.9245, 0.6 ) }
    dend_26 { pt3dadd( 4.76042, -106.003, -10.6087, 1.2 ) }
    dend_26 { pt3dadd( 5.43522, -108.024, -10.1863, 0.72 ) }
    dend_26 { pt3dadd( 6.03553, -109.598, -9.78951, 1.32 ) }
    dend_26 { pt3dadd( 6.58675, -110.882, -9.41436, 0.72 ) }
    dend_26 { pt3dadd( 7.11555, -112.014, -9.01851, 1.08 ) }
    dend_26 { pt3dadd( 7.68476, -113.205, -8.56709, 0.48 ) }
    dend_26 { pt3dadd( 8.21426, -114.289, -8.14529, 0.48 ) }
    dend_26 { pt3dadd( 8.74444, -115.415, -7.78272, 1.32 ) }
    dend_26 { pt3dadd( 9.04785, -116.143, -7.55499, 1.32 ) }
    dend_26 { pt3dadd( 9.42548, -117.292, -7.19135, 0.72 ) }
    dend_26 { pt3dadd( 9.57288, -118.271, -6.95673, 1.32 ) }
    dend_26 { pt3dadd( 9.45079, -119.457, -6.97739, 0.6 ) }
    dend_26 { pt3dadd( 9.09961, -120.555, -7.30926, 1.56 ) }
    dend_26 { pt3dadd( 8.79468, -121.182, -7.61957, 1.56 ) }
    dend_26 { pt3dadd( 8.36416, -121.914, -8.07469, 0.72 ) }
    dend_26 { pt3dadd( 7.42571, -123.328, -9.11381, 1.68 ) }
    dend_26 { pt3dadd( 6.27106, -125.057, -10.4856, 1.2 ) }
    dend_26 { pt3dadd( 5.78672, -125.851, -11.1279, 1.56 ) }
    dend_26 { pt3dadd( 5.2813, -126.841, -11.8887, 0.96 ) }
    dend_26 { pt3dadd( 4.92813, -127.739, -12.5034, 0.96 ) }
    dend_26 { pt3dadd( 4.72005, -128.563, -12.9678, 1.56 ) }
    dend_26 { pt3dadd( 4.54108, -129.762, -13.4922, 1.56 ) }
    dend_26 { pt3dadd( 4.3551, -131.03, -13.8642, 1.2 ) }
    dend_26 { pt3dadd( 4.2117, -131.939, -14.0565, 1.2 ) }
    dend_26 { pt3dadd( 3.91698, -133.518, -14.3354, 1.68 ) }
    dend_26 { pt3dadd( 3.43559, -135.754, -14.6619, 0.96 ) }
    dend_26 { pt3dadd( 3.13659, -136.922, -14.7803, 0.96 ) }
    dend_26 { pt3dadd( 2.39363, -139.476, -14.9484, 0.48 ) }
    dend_26 { pt3dadd( 2.09912, -140.448, -14.9805, 1.56 ) }
    dend_26 { pt3dadd( 1.35683, -143.015, -14.9992, 0.96 ) }
    dend_26 { pt3dadd( 1.2179, -143.525, -14.9861, 0.96 ) }
    dend_26 { pt3dadd( 0.77428, -145.408, -14.8074, 1.44 ) }
    dend_26 { pt3dadd( 0.617941, -146.588, -14.6521, 1.08 ) }
    dend_26 { pt3dadd( 0.60619, -148.3, -14.3992, 0.72 ) }
    dend_26 { pt3dadd( 0.69293, -149.563, -14.1615, 0.72 ) }
    dend_26 { pt3dadd( 0.78877, -150.249, -13.9888, 0.72 ) }
    dend_26 { pt3dadd( 1.04943, -151.786, -13.5867, 1.32 ) }
    dend_26 { pt3dadd( 1.37349, -153.356, -13.1839, 0.72 ) }
    dend_26 { pt3dadd( 1.5658, -154.293, -12.9592, 0.72 ) }
    dend_26 { pt3dadd( 1.65593, -154.734, -12.8004, 0.72 ) }
    dend_26 { pt3dadd( 1.76693, -155.271, -12.5507, 0.72 ) }
    dend_26 { pt3dadd( 2.02495, -156.458, -11.9221, 1.2 ) }
    dend_26 { pt3dadd( 2.3038, -157.691, -11.2, 0.6 ) }
    dend_26 { pt3dadd( 2.54578, -158.751, -10.4891, 1.2 ) }
    dend_26 { pt3dadd( 3.15377, -161.288, -8.60569, 0.72 ) }
    dend_26 { pt3dadd( 3.44333, -162.368, -7.76222, 0.72 ) }
    dend_26 { pt3dadd( 3.7309, -163.304, -7.01795, 1.32 ) }
    dend_26 { pt3dadd( 4.03919, -164.212, -6.30435, 0.6 ) }
    dend_26 { pt3dadd( 4.4655, -165.469, -5.37295, 1.2 ) }
    dend_26 { pt3dadd( 4.91469, -166.838, -4.43554, 0.72 ) }
    dend_26 { pt3dadd( 5.23946, -167.921, -3.81358, 0.72 ) }
    dend_26 { pt3dadd( 5.56842, -169.139, -3.07384, 1.2 ) }
    dend_26 { pt3dadd( 5.82993, -170.196, -2.40958, 0.6 ) }
    dend_26 { pt3dadd( 6.01049, -170.964, -1.91211, 1.2 ) }
    dend_26 { pt3dadd( 6.33751, -172.385, -0.963287, 0.48 ) }
    dend_26 { pt3dadd( 6.56672, -173.442, -0.265003, 1.44 ) }
    dend_26 { pt3dadd( 6.77143, -174.673, 0.603712, 0.96 ) }
    dend_26 { pt3dadd( 6.83049, -175.222, 1.03032, 0.96 ) }
    dend_26 { pt3dadd( 6.84763, -175.521, 1.25783, 0.96 ) }
    dend_26 { pt3dadd( 6.85666, -176.152, 1.68015, 0.96 ) }
    dend_26 { pt3dadd( 6.81329, -177.084, 2.16364, 0.96 ) }
    dend_26 { pt3dadd( 6.71654, -178.26, 2.63663, 1.68 ) }
    dend_26 { pt3dadd( 6.50665, -179.869, 3.32789, 0.96 ) }
    dend_26 { pt3dadd( 6.33322, -181.011, 3.86548, 1.32 ) }
    dend_26 { pt3dadd( 6.11534, -182.301, 4.54452, 0.72 ) }
    dend_26 { pt3dadd( 5.92829, -183.427, 5.20835, 0.72 ) }
    dend_26 { pt3dadd( 5.79513, -184.388, 5.83529, 1.2 ) }
    dend_26 { pt3dadd( 5.5996, -186.647, 7.44312, 0.6 ) }
    dend_26 { pt3dadd( 5.56426, -187.366, 8.00571, 0.96 ) }
    dend_26 { pt3dadd( 5.56383, -188.408, 8.95686, 0.6 ) }
    dend_26 { pt3dadd( 5.5784, -189.208, 9.75775, 1.32 ) }
    dend_26 { pt3dadd( 5.58187, -189.706, 10.2779, 1.32 ) }
    dend_26 { pt3dadd( 5.56655, -190.082, 10.66, 1.32 ) }
    dend_26 { pt3dadd( 5.51208, -190.65, 11.1517, 1.32 ) }
    dend_26 { pt3dadd( 5.35877, -191.456, 11.88, 0.96 ) }
    dend_26 { pt3dadd( 5.06058, -192.592, 12.8502, 1.44 ) }
    dend_26 { pt3dadd( 4.80928, -193.324, 13.4952, 1.44 ) }
    dend_26 { pt3dadd( 4.48758, -194.112, 14.2065, 0.72 ) }
    dend_26 { pt3dadd( 4.13318, -194.865, 14.9135, 1.2 ) }
    dend_26 { pt3dadd( 3.65426, -195.787, 15.7877, 0.48 ) }
    dend_26 { pt3dadd( 3.1053, -196.655, 16.5928, 1.08 ) }
    dend_26 { pt3dadd( 2.5318, -197.51, 17.4075, 0.6 ) }
    dend_26 { pt3dadd( 2.07998, -198.158, 18.0173, 1.2 ) }
    dend_26 { pt3dadd( 1.49545, -198.945, 18.7584, 0.6 ) }
    dend_26 { pt3dadd( 1.18586, -199.333, 19.1277, 0.6 ) }
    dend_26 { pt3dadd( 0.467607, -200.16, 19.9435, 1.2 ) }
    dend_26 { pt3dadd( -0.185268, -200.838, 20.7042, 0.72 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -1.15839, -85.2386, -13.818, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_15 { pt3dadd( -0.143996, -86.4113, -13.8075, 0.96 ) }
    dend_15 { pt3dadd( 0.87082, -87.5845, -13.797, 0.96 ) }
    dend_15 { pt3dadd( 2.09018, -88.9941, -13.7843, 2.64 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -31.6084, -10.6739, 6.03205, 1.32 ) }
    dend_5 { pt3dadd( -33.372, -10.0674, 6.47019, 1.32 ) }
    dend_5 { pt3dadd( -35.2201, -9.43196, 6.92931, 1.32 ) }
    dend_5 { pt3dadd( -37.2181, -8.74495, 7.42568, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 7/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -31.6084, -10.6739, 6.03205, 0.96 ) }
    dend_2 { pt3dadd( -32.4069, -12.2318, 6.4422, 0.96 ) }
    dend_2 { pt3dadd( -32.6805, -12.6396, 6.60771, 1.44 ) }
    dend_2 { pt3dadd( -33.1352, -13.1686, 6.905, 1.44 ) }
    dend_2 { pt3dadd( -33.4963, -13.5428, 7.15798, 1.44 ) }
    dend_2 { pt3dadd( -33.9573, -14.0085, 7.49218, 1.44 ) }
    dend_2 { pt3dadd( -34.9801, -15.0504, 8.26801, 1.68 ) }
    dend_2 { pt3dadd( -35.7393, -15.7544, 8.91019, 1.2 ) }
    dend_2 { pt3dadd( -36.4531, -16.4259, 9.55722, 1.2 ) }
    dend_2 { pt3dadd( -36.7435, -16.7002, 9.8422, 1.2 ) }
    dend_2 { pt3dadd( -37.0737, -17.0413, 10.1782, 1.2 ) }
    dend_2 { pt3dadd( -37.3881, -17.4091, 10.5076, 1.2 ) }
    dend_2 { pt3dadd( -37.5381, -17.6588, 10.6738, 1.2 ) }
    dend_2 { pt3dadd( -37.6774, -17.9948, 10.8664, 1.2 ) }
    dend_2 { pt3dadd( -37.8215, -18.4176, 11.0887, 1.2 ) }
    dend_2 { pt3dadd( -38.1833, -19.4138, 11.6045, 1.56 ) }
    dend_2 { pt3dadd( -38.4735, -20.0249, 11.9278, 1.08 ) }
    dend_2 { pt3dadd( -38.7788, -20.5412, 12.1993, 1.08 ) }
    dend_2 { pt3dadd( -39.0899, -20.9398, 12.4455, 1.08 ) }
    dend_2 { pt3dadd( -39.4822, -21.3999, 12.738, 1.08 ) }
    dend_2 { pt3dadd( -39.74, -21.6738, 12.9133, 1.08 ) }
    dend_2 { pt3dadd( -40.5046, -22.3364, 13.4118, 1.08 ) }
    dend_2 { pt3dadd( -40.7638, -22.5077, 13.5498, 1.08 ) }
    dend_2 { pt3dadd( -41.7736, -22.9851, 14.0209, 1.32 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 31/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -18.1844, -100.517, -47.0042, 1.08 ) }
    dend_46 { pt3dadd( -17.1501, -101.745, -47.2924, 1.08 ) }
    dend_46 { pt3dadd( -15.9486, -103.172, -47.6272, 1.32 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 34/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -18.1844, -100.517, -47.0042, 0.84 ) }
    dend_45 { pt3dadd( -18.734, -101.131, -46.9074, 0.84 ) }
    dend_45 { pt3dadd( -19.3441, -101.827, -47.0046, 1.44 ) }
    dend_45 { pt3dadd( -19.9526, -102.522, -47.1014, 0.6 ) }
    dend_45 { pt3dadd( -20.4692, -103.111, -47.1837, 1.08 ) }
    dend_45 { pt3dadd( -21.436, -104.215, -47.3376, 0.48 ) }
    dend_45 { pt3dadd( -22.2397, -105.132, -47.4655, 1.56 ) }
    dend_45 { pt3dadd( -23.387, -106.429, -47.8331, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 42/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 61.165, -61.7496, -11.1395, 0.84 ) }
    dend_40 { pt3dadd( 61.4127, -63.7233, -11.2812, 0.84 ) }
    dend_40 { pt3dadd( 61.5927, -65.2336, -11.3846, 1.44 ) }
    dend_40 { pt3dadd( 62.1301, -69.4252, -11.6751, 0.48 ) }
    dend_40 { pt3dadd( 62.5745, -72.8909, -11.9153, 0.48 ) }
    dend_40 { pt3dadd( 62.8753, -75.2375, -12.0779, 1.44 ) }
    dend_40 { pt3dadd( 63.3031, -78.5737, -12.3091, 0.6 ) }
    dend_40 { pt3dadd( 63.5134, -80.026, -12.4237, 0.6 ) }
    dend_40 { pt3dadd( 63.8099, -81.9822, -12.5618, 1.2 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 51/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 61.165, -61.7496, -11.1395, 0.6 ) }
    dend_37 { pt3dadd( 62.9596, -62.8879, -10.873, 0.6 ) }
    dend_37 { pt3dadd( 65.1339, -64.1679, -10.4419, 1.2 ) }
    dend_37 { pt3dadd( 65.8304, -64.5935, -10.2804, 1.2 ) }
    dend_37 { pt3dadd( 67.0994, -65.4203, -9.9646, 0.6 ) }
    dend_37 { pt3dadd( 70.5079, -67.8054, -9.02672, 1.68 ) }
    dend_37 { pt3dadd( 71.7993, -68.7385, -8.63584, 1.68 ) }
    dend_37 { pt3dadd( 73.9141, -70.2847, -7.94317, 0.84 ) }
    dend_37 { pt3dadd( 75.8365, -71.6273, -7.27217, 0.84 ) }
    dend_37 { pt3dadd( 77.816, -72.9688, -6.55126, 1.44 ) }
    dend_37 { pt3dadd( 80.2122, -74.6103, -5.63841, 0.84 ) }
    dend_37 { pt3dadd( 83.0388, -76.6451, -4.51822, 1.56 ) }
    dend_37 { pt3dadd( 86.301, -78.9996, -3.20297, 1.08 ) }
    dend_37 { pt3dadd( 88.3666, -80.4554, -2.37767, 1.56 ) }
    dend_37 { pt3dadd( 91.1203, -82.2942, -1.27226, 2.04 ) }
    dend_37 { pt3dadd( 93.9749, -84.1069, -0.111257, 1.2 ) }
    dend_37 { pt3dadd( 96.3513, -85.5586, 0.849571, 1.2 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 68/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -19.954, -82.7389, 3.04602, 0.48 ) }
    dend_31 { pt3dadd( -20.1887, -84.4819, 3.53413, 0.48 ) }
    dend_31 { pt3dadd( -20.3235, -86.2235, 3.94818, 1.56 ) }
    dend_31 { pt3dadd( -20.3972, -89.2789, 4.54537, 0.6 ) }
    dend_31 { pt3dadd( -20.2795, -91.2285, 4.88176, 1.8 ) }
    dend_31 { pt3dadd( -20.0516, -93.3428, 5.19347, 0.6 ) }
    dend_31 { pt3dadd( -19.8919, -94.4884, 5.34186, 0.6 ) }
    dend_31 { pt3dadd( -19.6165, -95.8579, 5.46911, 0.6 ) }
    dend_31 { pt3dadd( -19.2078, -97.436, 5.60566, 1.56 ) }
    dend_31 { pt3dadd( -18.3636, -99.8723, 5.76497, 0.48 ) }
    dend_31 { pt3dadd( -17.7062, -101.539, 5.90725, 0.48 ) }
    dend_31 { pt3dadd( -17.3766, -102.327, 5.99005, 0.48 ) }
    dend_31 { pt3dadd( -16.727, -103.883, 6.1963, 1.68 ) }
    dend_31 { pt3dadd( -15.8203, -106.107, 6.57511, 1.08 ) }
    dend_31 { pt3dadd( -15.2471, -107.51, 6.8904, 1.08 ) }
    dend_31 { pt3dadd( -12.3242, -116.43, 7.34951, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 84/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -19.954, -82.7389, 3.04602, 0.72 ) }
    dend_30 { pt3dadd( -22.4613, -83.6892, 1.85171, 0.72 ) }
    dend_30 { pt3dadd( -23.8963, -84.2732, 1.08145, 1.56 ) }
    dend_30 { pt3dadd( -25.2398, -84.9044, 0.327025, 0.72 ) }
    dend_30 { pt3dadd( -27.2217, -85.9392, -0.862824, 1.32 ) }
    dend_30 { pt3dadd( -29.4516, -87.2571, -1.96514, 0.72 ) }
    dend_30 { pt3dadd( -31.2043, -88.4076, -2.70801, 1.56 ) }
    dend_30 { pt3dadd( -33.3397, -90.1227, -3.56886, 0.84 ) }
    dend_30 { pt3dadd( -34.4332, -91.1581, -3.943, 0.84 ) }
    dend_30 { pt3dadd( -36.2638, -93.228, -4.44904, 1.92 ) }
    dend_30 { pt3dadd( -39.0872, -97.04, -4.89988, 0.96 ) }
    dend_30 { pt3dadd( -40.1385, -98.6199, -4.96425, 0.96 ) }
    dend_30 { pt3dadd( -42.1274, -101.9, -4.89228, 0.72 ) }
    dend_30 { pt3dadd( -42.7341, -102.999, -4.81766, 1.32 ) }
    dend_30 { pt3dadd( -43.8171, -105.058, -4.64031, 0.84 ) }
    dend_30 { pt3dadd( -44.6793, -107.045, -4.43497, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -54.266, -115.15, -6.91743, 1.2 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 2.09018, -88.9941, -13.7843, 0.96 ) }
    dend_23 { pt3dadd( 1.37833, -90.9768, -14.5559, 0.96 ) }
    dend_23 { pt3dadd( 0.76914, -92.9473, -15.2649, 0.96 ) }
    dend_23 { pt3dadd( 0.533607, -93.7294, -15.5274, 0.96 ) }
    dend_23 { pt3dadd( 0.29031, -94.5394, -15.7815, 0.96 ) }
    dend_23 { pt3dadd( -0.0930862, -95.7905, -16.1294, 0.96 ) }
    dend_23 { pt3dadd( -0.294456, -96.4336, -16.2915, 0.96 ) }
    dend_23 { pt3dadd( -0.378911, -96.7901, -16.353, 0.96 ) }
    dend_23 { pt3dadd( -0.590688, -97.5055, -16.4251, 0.96 ) }
    dend_23 { pt3dadd( -0.725047, -97.8408, -16.479, 0.96 ) }
    dend_23 { pt3dadd( -1.13051, -98.6801, -16.705, 0.96 ) }
    dend_23 { pt3dadd( -1.43865, -99.2281, -16.9471, 0.96 ) }
    dend_23 { pt3dadd( -1.90959, -100.072, -17.4349, 0.6 ) }
    dend_23 { pt3dadd( -2.52814, -101.207, -18.1971, 1.56 ) }
    dend_23 { pt3dadd( -3.3218, -102.683, -19.311, 0.96 ) }
    dend_23 { pt3dadd( -3.79404, -103.536, -20.0154, 0.96 ) }
    dend_23 { pt3dadd( -4.71635, -105.144, -21.3991, 0.72 ) }
    dend_23 { pt3dadd( -5.6656, -106.805, -22.7895, 1.2 ) }
    dend_23 { pt3dadd( -6.39803, -108.074, -23.8161, 0.72 ) }
    dend_23 { pt3dadd( -7.20792, -109.499, -24.88, 1.2 ) }
    dend_23 { pt3dadd( -8.18025, -111.224, -26.0408, 0.72 ) }
    dend_23 { pt3dadd( -8.6489, -112.098, -26.5648, 0.72 ) }
    dend_23 { pt3dadd( -9.8417, -114.45, -27.7728, 1.2 ) }
    dend_23 { pt3dadd( -10.639, -116.027, -28.4474, 1.2 ) }
    dend_23 { pt3dadd( -11.5728, -117.898, -29.1435, 0.72 ) }
    dend_23 { pt3dadd( -11.9205, -118.613, -29.3729, 0.72 ) }
    dend_23 { pt3dadd( -12.6747, -120.173, -29.8245, 1.32 ) }
    dend_23 { pt3dadd( -13.2031, -121.301, -30.1455, 1.32 ) }
    dend_23 { pt3dadd( -14.0171, -123.006, -30.6342, 0.6 ) }
    dend_23 { pt3dadd( -14.6087, -124.226, -31.0109, 1.08 ) }
    dend_23 { pt3dadd( -16.0196, -126.964, -32.0888, 0.6 ) }
    dend_23 { pt3dadd( -16.718, -128.237, -32.6881, 1.2 ) }
    dend_23 { pt3dadd( -17.4337, -129.387, -33.2815, 0.6 ) }
    dend_23 { pt3dadd( -18.1787, -130.464, -33.9514, 1.2 ) }
    dend_23 { pt3dadd( -18.9223, -131.47, -34.6951, 0.48 ) }
    dend_23 { pt3dadd( -20.4256, -133.382, -36.2013, 1.44 ) }
    dend_23 { pt3dadd( -20.7816, -133.818, -36.5575, 1.44 ) }
    dend_23 { pt3dadd( -21.9117, -135.201, -37.6305, 0.72 ) }
    dend_23 { pt3dadd( -23.3235, -136.969, -38.8534, 1.56 ) }
    dend_23 { pt3dadd( -25.191, -139.467, -40.2624, 0.84 ) }
    dend_23 { pt3dadd( -25.7986, -140.337, -40.6066, 0.84 ) }
    dend_23 { pt3dadd( -26.9501, -142.285, -41.1901, 1.56 ) }
    dend_23 { pt3dadd( -27.5343, -143.47, -41.5115, 1.56 ) }
    dend_23 { pt3dadd( -28.3624, -145.58, -42.0596, 0.72 ) }
    dend_23 { pt3dadd( -28.9874, -147.753, -42.705, 1.2 ) }
    dend_23 { pt3dadd( -29.6476, -150.351, -43.4502, 0.72 ) }
    dend_23 { pt3dadd( -30.429, -153.848, -44.5615, 1.56 ) }
    dend_23 { pt3dadd( -30.7732, -155.759, -45.2438, 1.08 ) }
    dend_23 { pt3dadd( -30.9982, -157.638, -46.0244, 1.56 ) }
    dend_23 { pt3dadd( -31.1763, -162.115, -48.306, 1.32 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 51/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 2.09018, -88.9941, -13.7843, 0.48 ) }
    dend_16 { pt3dadd( 4.86026, -91.9886, -12.1081, 0.48 ) }
    dend_16 { pt3dadd( 6.08168, -93.3347, -11.3064, 0.48 ) }
    dend_16 { pt3dadd( 8.08035, -95.5373, -9.99466, 1.56 ) }
    dend_16 { pt3dadd( 9.67964, -97.2998, -8.94502, 0.36 ) }
    dend_16 { pt3dadd( 10.2292, -97.9054, -8.58431, 0.36 ) }
    dend_16 { pt3dadd( 12.2278, -100.108, -7.27253, 1.32 ) }
    dend_16 { pt3dadd( 13.4445, -101.412, -6.23782, 1.32 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -37.2181, -8.74495, 7.42568, 1.44 ) }
    dend_9 { pt3dadd( -37.9381, -7.50585, 9.64158, 1.44 ) }
    dend_9 { pt3dadd( -38.7061, -6.62039, 11.4584, 1.2 ) }
    dend_9 { pt3dadd( -39.1335, -6.17555, 12.3284, 1.2 ) }
    dend_9 { pt3dadd( -39.5103, -5.78337, 13.0953, 0.84 ) }
    dend_9 { pt3dadd( -39.695, -5.59124, 13.4711, 0.84 ) }
    dend_9 { pt3dadd( -40.101, -5.16867, 14.2975, 1.2 ) }
    dend_9 { pt3dadd( -41.1227, -4.51127, 15.7399, 1.08 ) }
    dend_9 { pt3dadd( -41.7892, -4.25628, 16.413, 1.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -37.2181, -8.74495, 7.42568, 1.92 ) }
    dend_6 { pt3dadd( -38.4541, -8.01024, 7.53976, 1.92 ) }
    dend_6 { pt3dadd( -39.1661, -7.6208, 7.53961, 1.92 ) }
    dend_6 { pt3dadd( -40.263, -7.00186, 7.43323, 1.56 ) }
    dend_6 { pt3dadd( -41.1678, -6.47228, 7.28787, 1.32 ) }
    dend_6 { pt3dadd( -42.0145, -5.92592, 7.10218, 1.8 ) }
    dend_6 { pt3dadd( -42.9501, -5.28675, 6.85324, 1.2 ) }
    dend_6 { pt3dadd( -43.6894, -4.73762, 6.56047, 1.2 ) }
    dend_6 { pt3dadd( -44.7028, -3.94243, 6.11052, 0.96 ) }
    dend_6 { pt3dadd( -45.1715, -3.56522, 5.87245, 0.96 ) }
    dend_6 { pt3dadd( -45.9459, -2.96339, 5.44, 1.32 ) }
    dend_6 { pt3dadd( -46.6782, -2.44452, 5.05506, 1.32 ) }
    dend_6 { pt3dadd( -47.1967, -2.15146, 4.81019, 1.32 ) }
    dend_6 { pt3dadd( -47.8119, -1.90857, 4.55946, 0.96 ) }
    dend_6 { pt3dadd( -48.2629, -1.81691, 4.40644, 0.96 ) }
    dend_6 { pt3dadd( -49.0143, -1.6846, 4.23459, 0.96 ) }
    dend_6 { pt3dadd( -49.8244, -1.61408, 4.07955, 0.96 ) }
    dend_6 { pt3dadd( -51.0943, -1.56299, 3.86736, 1.44 ) }
    dend_6 { pt3dadd( -51.7449, -1.54958, 3.76742, 1.44 ) }
    dend_6 { pt3dadd( -52.2568, -1.51787, 3.68131, 1.44 ) }
    dend_6 { pt3dadd( -53.9361, -1.2109, 3.43545, 1.2 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -41.7736, -22.9851, 14.0209, 0.96 ) }
    dend_4 { pt3dadd( -42.7642, -22.676, 14.8422, 0.96 ) }
    dend_4 { pt3dadd( -44.1463, -22.1563, 16.0078, 0.96 ) }
    dend_4 { pt3dadd( -45.4001, -21.6567, 17.0559, 0.96 ) }
    dend_4 { pt3dadd( -47.5884, -20.7539, 18.8251, 0.6 ) }
    dend_4 { pt3dadd( -49.6062, -19.9255, 20.3832, 1.2 ) }
    dend_4 { pt3dadd( -52.9495, -18.4229, 22.9046, 0.72 ) }
    dend_4 { pt3dadd( -53.5809, -18.0699, 23.412, 0.72 ) }
    dend_4 { pt3dadd( -53.8904, -17.8752, 23.6639, 0.72 ) }
    dend_4 { pt3dadd( -54.5968, -17.3737, 24.2302, 0.72 ) }
    dend_4 { pt3dadd( -55.1531, -16.8681, 24.6797, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -56.6619, -15.1842, 26.0025, 1.2 ) }
    dend_4 { pt3dadd( -58.6468, -12.7755, 27.5293, 0.84 ) }
    dend_4 { pt3dadd( -68.8646, -8.75054, 32.7381, 0.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 3/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -41.7736, -22.9851, 14.0209, 0.84 ) }
    dend_3 { pt3dadd( -42.7877, -23.9448, 14.0136, 0.84 ) }
    dend_3 { pt3dadd( -43.5731, -24.5913, 13.9535, 0.84 ) }
    dend_3 { pt3dadd( -44.7527, -25.5478, 13.8718, 0.6 ) }
    dend_3 { pt3dadd( -45.5643, -26.1743, 13.8029, 0.6 ) }
    dend_3 { pt3dadd( -46.7275, -27.0186, 13.672, 0.6 ) }
    dend_3 { pt3dadd( -47.9841, -27.8803, 13.5007, 0.6 ) }
    dend_3 { pt3dadd( -49.162, -28.6226, 13.2536, 0.6 ) }
    dend_3 { pt3dadd( -50.1187, -29.1717, 13.0459, 0.6 ) }
    dend_3 { pt3dadd( -51.1558, -29.7015, 12.8432, 0.6 ) }
    dend_3 { pt3dadd( -51.7396, -29.9823, 12.7221, 0.6 ) }
    dend_3 { pt3dadd( -52.4425, -30.3072, 12.5725, 0.6 ) }
    dend_3 { pt3dadd( -52.8706, -30.4821, 12.4559, 1.08 ) }
    dend_3 { pt3dadd( -54.3203, -31.0055, 12.0076, 0.72 ) }
    dend_3 { pt3dadd( -55.9115, -31.5282, 11.4754, 0.72 ) }
    dend_3 { pt3dadd( -57.1563, -31.9405, 11.0631, 0.72 ) }
    dend_3 { pt3dadd( -57.7475, -32.1393, 10.8698, 0.72 ) }
    dend_3 { pt3dadd( -59.2871, -32.5927, 10.3137, 1.08 ) }
    dend_3 { pt3dadd( -67.7433, -39.0385, 7.77195, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 96.3513, -85.5586, 0.849571, 0.72 ) }
    dend_39 { pt3dadd( 96.3683, -87.3524, 0.222363, 0.72 ) }
    dend_39 { pt3dadd( 96.3787, -88.4501, -0.161431, 1.32 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 96.3513, -85.5586, 0.849571, 0.96 ) }
    dend_38 { pt3dadd( 98.2511, -87.0307, 1.29302, 0.96 ) }
    dend_38 { pt3dadd( 100.213, -88.577, 1.87178, 0.96 ) }
    dend_38 { pt3dadd( 102.458, -90.3992, 2.60164, 1.56 ) }
    dend_38 { pt3dadd( 105.141, -92.5911, 3.44522, 0.84 ) }
    dend_38 { pt3dadd( 107.539, -94.6017, 4.16733, 1.32 ) }
    dend_38 { pt3dadd( 110.635, -97.2669, 5.26966, 0.6 ) }
    dend_38 { pt3dadd( 112.454, -98.8667, 6.02467, 1.32 ) }
    dend_38 { pt3dadd( 114.954, -101.073, 7.12632, 0.72 ) }
    dend_38 { pt3dadd( 117.161, -102.992, 8.09283, 0.72 ) }
    dend_38 { pt3dadd( 118.823, -104.327, 8.80926, 1.68 ) }
    dend_38 { pt3dadd( 123.207, -107.445, 10.6011, 0.72 ) }
    dend_38 { pt3dadd( 125.903, -109.021, 11.6143, 0.72 ) }
    dend_38 { pt3dadd( 127.534, -109.757, 12.1952, 0.72 ) }
    dend_38 { pt3dadd( 129.242, -110.233, 12.8031, 0.72 ) }
    dend_38 { pt3dadd( 131.888, -110.575, 13.6725, 1.08 ) }
    dend_38 { pt3dadd( 133.855, -110.61, 14.2398, 0.48 ) }
    dend_38 { pt3dadd( 136.098, -110.34, 14.6807, 0.96 ) }
    dend_38 { pt3dadd( 137.938, -109.931, 15.0783, 0.96 ) }
    dend_38 { pt3dadd( 140.203, -109.286, 15.6439, 0.72 ) }
    dend_38 { pt3dadd( 142.873, -108.4, 16.3872, 0.48 ) }
    dend_38 { pt3dadd( 153.607, -113.483, 20.7191, 0.48 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 47/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -31.1763, -162.115, -48.306, 0.84 ) }
    dend_25 { pt3dadd( -33.2599, -162.405, -47.1199, 0.84 ) }
    dend_25 { pt3dadd( -35.4463, -162.752, -46.0385, 0.84 ) }
    dend_25 { pt3dadd( -40.2698, -163.755, -43.9403, 1.32 ) }
    dend_25 { pt3dadd( -44.3993, -164.79, -42.2143, 0.84 ) }
    dend_25 { pt3dadd( -45.6873, -165.192, -41.7104, 0.84 ) }
    dend_25 { pt3dadd( -48.0941, -166.067, -40.8038, 1.44 ) }
    dend_25 { pt3dadd( -51.4382, -167.62, -39.5552, 0.96 ) }
    dend_25 { pt3dadd( -53.3743, -168.9, -38.8829, 0.96 ) }
    dend_25 { pt3dadd( -54.5781, -170.17, -38.6295, 1.44 ) }
    dend_25 { pt3dadd( -55.9448, -172.33, -38.4431, 0.96 ) }
    dend_25 { pt3dadd( -56.2971, -173.058, -38.3916, 0.96 ) }
    dend_25 { pt3dadd( -57.2006, -175.518, -38.2616, 1.44 ) }
    dend_25 { pt3dadd( -57.9378, -177.881, -38.1259, 1.08 ) }
    dend_25 { pt3dadd( -58.8643, -180.602, -37.9962, 1.44 ) }
    dend_25 { pt3dadd( -59.9536, -183.258, -37.7686, 0.84 ) }
    dend_25 { pt3dadd( -60.6671, -184.575, -37.5036, 0.84 ) }
    dend_25 { pt3dadd( -61.0879, -185.275, -37.3484, 0.84 ) }
    dend_25 { pt3dadd( -62.9942, -187.905, -36.6101, 1.2 ) }
    dend_25 { pt3dadd( -64.0134, -188.973, -36.1469, 1.2 ) }
    dend_25 { pt3dadd( -67.0291, -190.934, -34.4812, 0.84 ) }
    dend_25 { pt3dadd( -69.6278, -191.752, -32.7752, 0.48 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 69/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -31.1763, -162.115, -48.306, 0.72 ) }
    dend_24 { pt3dadd( -32.231, -163.444, -48.3213, 0.72 ) }
    dend_24 { pt3dadd( -34.2506, -166.134, -48.6516, 1.2 ) }
    dend_24 { pt3dadd( -35.3774, -167.684, -48.9804, 0.84 ) }
    dend_24 { pt3dadd( -36.5949, -169.398, -49.4698, 1.32 ) }
    dend_24 { pt3dadd( -38.2663, -171.724, -50.2334, 0.72 ) }
    dend_24 { pt3dadd( -39.4068, -173.309, -50.8046, 1.32 ) }
    dend_24 { pt3dadd( -41.1873, -175.84, -51.8858, 0.84 ) }
    dend_24 { pt3dadd( -42.7383, -178.065, -52.9975, 1.32 ) }
    dend_24 { pt3dadd( -44.2503, -180.254, -54.1583, 0.84 ) }
    dend_24 { pt3dadd( -45.0351, -181.377, -54.7741, 0.84 ) }
    dend_24 { pt3dadd( -46.5056, -183.499, -55.9415, 1.44 ) }
    dend_24 { pt3dadd( -47.0531, -184.313, -56.3623, 1.44 ) }
    dend_24 { pt3dadd( -48.5512, -186.709, -57.4527, 0.96 ) }
    dend_24 { pt3dadd( -50.4323, -189.955, -58.7367, 1.44 ) }
    dend_24 { pt3dadd( -52.1401, -193.051, -59.8049, 0.84 ) }
    dend_24 { pt3dadd( -52.7499, -194.189, -60.1643, 1.32 ) }
    dend_24 { pt3dadd( -53.7931, -196.066, -60.6953, 0.84 ) }
    dend_24 { pt3dadd( -55.8507, -199.379, -61.5114, 1.32 ) }
    dend_24 { pt3dadd( -57.2064, -201.434, -61.9824, 0.84 ) }
    dend_24 { pt3dadd( -59.0166, -204.04, -62.6191, 1.44 ) }
    dend_24 { pt3dadd( -59.9095, -205.319, -62.9603, 0.72 ) }
    dend_24 { pt3dadd( -61.6883, -207.999, -63.8244, 1.32 ) }
    dend_24 { pt3dadd( -63.8064, -211.094, -64.9169, 0.6 ) }
    dend_24 { pt3dadd( -65.7503, -213.883, -66.0039, 1.08 ) }
    dend_24 { pt3dadd( -67.7437, -216.806, -67.2345, 0.48 ) }
    dend_24 { pt3dadd( -69.8005, -220.08, -68.7079, 1.44 ) }
    dend_24 { pt3dadd( -71.4276, -223.035, -70.1052, 0.72 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 13.4445, -101.412, -6.23782, 0.84 ) }
    dend_22 { pt3dadd( 11.9783, -103.092, -6.8019, 0.84 ) }
    dend_22 { pt3dadd( 10.5267, -104.703, -7.47159, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 9.5148, -105.866, -7.98344, 0.72 ) }
    dend_22 { pt3dadd( 8.80565, -106.692, -8.36751, 0.72 ) }
    dend_22 { pt3dadd( 7.42329, -108.307, -9.16416, 0.72 ) }
    dend_22 { pt3dadd( 6.25948, -109.673, -9.83953, 0.72 ) }
    dend_22 { pt3dadd( 5.60507, -110.439, -10.2361, 0.72 ) }
    dend_22 { pt3dadd( 4.79114, -111.462, -10.7898, 0.72 ) }
    dend_22 { pt3dadd( 3.87415, -112.684, -11.4028, 1.08 ) }
    dend_22 { pt3dadd( 3.00009, -113.831, -11.941, 1.08 ) }
    dend_22 { pt3dadd( 2.59665, -114.375, -12.1467, 1.08 ) }
    dend_22 { pt3dadd( 1.77322, -115.498, -12.529, 0.6 ) }
    dend_22 { pt3dadd( 1.14533, -116.325, -12.8342, 0.6 ) }
    dend_22 { pt3dadd( -0.371114, -118.156, -13.552, 1.08 ) }
    dend_22 { pt3dadd( -1.53996, -119.556, -14.1315, 1.08 ) }
    dend_22 { pt3dadd( -3.29905, -121.514, -14.9763, 0.6 ) }
    dend_22 { pt3dadd( -4.45343, -122.701, -15.5268, 0.6 ) }
    dend_22 { pt3dadd( -6.62831, -124.804, -16.5262, 1.56 ) }
    dend_22 { pt3dadd( -8.26298, -126.35, -17.2483, 0.84 ) }
    dend_22 { pt3dadd( -9.65035, -127.66, -17.8307, 1.44 ) }
    dend_22 { pt3dadd( -11.4872, -129.431, -18.5461, 0.96 ) }
    dend_22 { pt3dadd( -12.9621, -130.876, -19.0819, 1.56 ) }
    dend_22 { pt3dadd( -14.689, -132.713, -19.6506, 0.96 ) }
    dend_22 { pt3dadd( -15.5324, -133.686, -19.864, 0.96 ) }
    dend_22 { pt3dadd( -16.7095, -135.216, -20.1468, 1.56 ) }
    dend_22 { pt3dadd( -17.333, -136.116, -20.2932, 1.56 ) }
    dend_22 { pt3dadd( -18.6312, -138.303, -20.633, 1.08 ) }
    dend_22 { pt3dadd( -19.8147, -140.465, -20.9481, 1.68 ) }
    dend_22 { pt3dadd( -20.8946, -142.573, -21.2394, 1.68 ) }
    dend_22 { pt3dadd( -22.0097, -144.928, -21.5519, 0.96 ) }
    dend_22 { pt3dadd( -22.8861, -147.01, -21.7962, 1.56 ) }
    dend_22 { pt3dadd( -23.647, -148.941, -22.0282, 0.96 ) }
    dend_22 { pt3dadd( -24.4382, -151.138, -22.2429, 1.8 ) }
    dend_22 { pt3dadd( -25.4303, -154.11, -22.5049, 1.2 ) }
    dend_22 { pt3dadd( -26.0755, -156.259, -22.6801, 0.72 ) }
    dend_22 { pt3dadd( -26.8347, -159.06, -22.8581, 1.2 ) }
    dend_22 { pt3dadd( -27.3453, -161.087, -22.9612, 0.72 ) }
    dend_22 { pt3dadd( -27.8657, -163.509, -23.0769, 0.72 ) }
    dend_22 { pt3dadd( -28.1042, -164.881, -23.1513, 0.72 ) }
    dend_22 { pt3dadd( -28.398, -166.954, -23.2912, 1.2 ) }
    dend_22 { pt3dadd( -28.587, -168.345, -23.3848, 0.72 ) }
    dend_22 { pt3dadd( -28.8637, -170.577, -23.573, 1.2 ) }
    dend_22 { pt3dadd( -29.1458, -172.874, -23.7844, 0.6 ) }
    dend_22 { pt3dadd( -29.3761, -174.303, -23.9346, 1.2 ) }
    dend_22 { pt3dadd( -29.9144, -176.555, -24.1291, 0.6 ) }
    dend_22 { pt3dadd( -30.3228, -177.903, -24.2216, 0.6 ) }
    dend_22 { pt3dadd( -30.9983, -179.664, -24.3411, 1.32 ) }
    dend_22 { pt3dadd( -32.6259, -183.336, -24.6177, 0.72 ) }
    dend_22 { pt3dadd( -33.8409, -185.792, -24.8168, 1.2 ) }
    dend_22 { pt3dadd( -35.3223, -188.619, -25.0523, 0.72 ) }
    dend_22 { pt3dadd( -35.7289, -189.392, -25.1135, 0.72 ) }
    dend_22 { pt3dadd( -37.119, -192.116, -25.3221, 1.32 ) }
    dend_22 { pt3dadd( -38.3223, -194.614, -25.5331, 0.6 ) }
    dend_22 { pt3dadd( -39.3735, -196.905, -25.7466, 1.32 ) }
    dend_22 { pt3dadd( -40.5947, -199.647, -26.0728, 0.6 ) }
    dend_22 { pt3dadd( -42.3833, -203.765, -26.6682, 0.6 ) }
    dend_22 { pt3dadd( -43.4404, -206.202, -27.0548, 1.2 ) }
    dend_22 { pt3dadd( -45.5386, -211.058, -27.874, 0.72 ) }
    dend_22 { pt3dadd( -46.2978, -212.706, -28.1931, 1.2 ) }
    dend_22 { pt3dadd( -47.6149, -215.49, -28.8134, 1.08 ) }
    dend_22 { pt3dadd( -48.6344, -217.639, -29.3644, 0.72 ) }
    dend_22 { pt3dadd( -49.482, -219.452, -29.9041, 0.72 ) }
    dend_22 { pt3dadd( -50.3819, -221.475, -30.501, 1.2 ) }
    dend_22 { pt3dadd( -51.3201, -223.685, -31.0826, 0.6 ) }
    dend_22 { pt3dadd( -52.3083, -226.186, -31.6896, 1.08 ) }
    dend_22 { pt3dadd( -53.0157, -228.093, -32.0383, 0.6 ) }
    dend_22 { pt3dadd( -53.6319, -229.856, -32.2928, 1.2 ) }
    dend_22 { pt3dadd( -54.893, -233.678, -32.6948, 0.6 ) }
    dend_22 { pt3dadd( -55.4429, -235.545, -32.8247, 0.6 ) }
    dend_22 { pt3dadd( -55.7119, -236.714, -32.9263, 1.2 ) }
    dend_22 { pt3dadd( -56.2929, -239.23, -33.1117, 0.72 ) }
    dend_22 { pt3dadd( -56.6712, -240.913, -33.2087, 1.2 ) }
    dend_22 { pt3dadd( -56.908, -242.102, -33.277, 1.2 ) }
    dend_22 { pt3dadd( -57.1151, -244.134, -33.4799, 1.2 ) }
    dend_22 { pt3dadd( -57.1833, -248.275, -34.1115, 0.72 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 13.4445, -101.412, -6.23782, 0.72 ) }
    dend_17 { pt3dadd( 15.2874, -102.64, -4.25171, 0.72 ) }
    dend_17 { pt3dadd( 16.3106, -103.324, -3.01518, 0.72 ) }
    dend_17 { pt3dadd( 17.2085, -104.001, -1.92846, 1.56 ) }
    dend_17 { pt3dadd( 18.1804, -104.814, -0.766898, 0.96 ) }
    dend_17 { pt3dadd( 19.7794, -106.24, 1.06422, 1.56 ) }
    dend_17 { pt3dadd( 21.0721, -107.442, 2.46664, 1.56 ) }
    dend_17 { pt3dadd( 22.2296, -108.628, 3.63283, 0.96 ) }
    dend_17 { pt3dadd( 23.6656, -110.24, 5.07844, 1.2 ) }
    dend_17 { pt3dadd( 24.6495, -111.516, 6.06276, 1.2 ) }
    dend_17 { pt3dadd( 25.5443, -112.938, 6.95156, 1.56 ) }
    dend_17 { pt3dadd( 26.2618, -114.206, 7.58631, 1.56 ) }
    dend_17 { pt3dadd( 27.0028, -115.624, 8.1825, 0.84 ) }
    dend_17 { pt3dadd( 27.8338, -117.285, 8.78099, 1.44 ) }
    dend_17 { pt3dadd( 28.7252, -119.241, 9.46419, 0.84 ) }
    dend_17 { pt3dadd( 29.4467, -121.054, 10.0519, 1.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -41.7892, -4.25628, 16.413, 0.72 ) }
    dend_13 { pt3dadd( -43.1951, -4.03024, 17.3745, 0.72 ) }
    dend_13 { pt3dadd( -45.2095, -3.92557, 18.5821, 1.2 ) }
    dend_13 { pt3dadd( -47.022, -3.83141, 19.6686, 1.2 ) }
    dend_13 { pt3dadd( -48.2974, -3.76514, 20.4331, 0.96 ) }
    dend_13 { pt3dadd( -49.3883, -3.70847, 21.0871, 0.72 ) }
    dend_13 { pt3dadd( -51.3305, -3.60756, 22.2513, 0.72 ) }
    dend_13 { pt3dadd( -52.8744, -3.62573, 23.2127, 1.2 ) }
    dend_13 { pt3dadd( -61.2153, -2.32617, 28.6914, 1.2 ) }
    dend_13 { pt3dadd( -70.7187, -2.05334, 31.9908, 1.2 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 99/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -41.7892, -4.25628, 16.413, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( -40.9227, -3.87824, 17.7971, 1.08 ) }
    dend_10 { pt3dadd( -40.7031, -3.76633, 18.1932, 1.08 ) }
    dend_10 { pt3dadd( -40.0553, -3.38607, 19.3176, 0.96 ) }
    dend_10 { pt3dadd( -39.5125, -3.08042, 20.1939, 0.96 ) }
    dend_10 { pt3dadd( -38.6745, -2.6402, 21.4364, 1.44 ) }
    dend_10 { pt3dadd( -37.4961, -2.02111, 23.1838, 1.44 ) }
    dend_10 { pt3dadd( -36.6294, -1.53083, 24.3933, 0.96 ) }
    dend_10 { pt3dadd( -36.0335, -1.18138, 25.2535, 1.32 ) }
    dend_10 { pt3dadd( -35.6328, -0.951217, 25.8861, 1.32 ) }
    dend_10 { pt3dadd( -35.2605, -0.746437, 26.465, 1.32 ) }
    dend_10 { pt3dadd( -31.9985, 1.74023, 33.9599, 1.32 ) }
    dend_10 { pt3dadd( -28.3579, 4.25593, 41.268, 1.32 ) }
    dend_10 { pt3dadd( -24.0123, 5.9299, 48.4346, 1.32 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 13/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -53.9361, -1.2109, 3.43545, 0.72 ) }
    dend_8 { pt3dadd( -55.0002, -0.475724, 3.60452, 0.72 ) }
    dend_8 { pt3dadd( -55.6655, -0.0160761, 3.71023, 0.72 ) }
    dend_8 { pt3dadd( -56.3465, 0.454412, 3.81844, 0.72 ) }
    dend_8 { pt3dadd( -57.5268, 1.26991, 4.00599, 1.2 ) }
    dend_8 { pt3dadd( -59.1755, 2.40898, 4.26796, 0.72 ) }
    dend_8 { pt3dadd( -60.2518, 3.15265, 4.43899, 1.08 ) }
    dend_8 { pt3dadd( -66.3737, 7.62759, 6.32721, 1.08 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -53.9361, -1.2109, 3.43545, 1.08 ) }
    dend_7 { pt3dadd( -55.4847, -0.313229, 4.00957, 1.08 ) }
    dend_7 { pt3dadd( -56.3307, 0.0971479, 4.38733, 1.08 ) }
    dend_7 { pt3dadd( -58.1667, 0.873229, 5.29297, 1.2 ) }
    dend_7 { pt3dadd( -59.3761, 1.36567, 5.88619, 1.2 ) }
    dend_7 { pt3dadd( -60.2179, 1.76065, 6.32785, 1.44 ) }
    dend_7 { pt3dadd( -61.3906, 2.35148, 6.94377, 1.08 ) }
    dend_7 { pt3dadd( -62.0492, 2.69393, 7.35115, 0.84 ) }
    dend_7 { pt3dadd( -62.7095, 3.05429, 7.77091, 0.84 ) }
    dend_7 { pt3dadd( -63.5951, 3.57848, 8.29666, 0.84 ) }
    dend_7 { pt3dadd( -64.8999, 4.42198, 8.89412, 1.2 ) }
    dend_7 { pt3dadd( -65.9504, 5.14303, 9.23457, 1.2 ) }
    dend_7 { pt3dadd( -67.3854, 6.07708, 9.53208, 1.08 ) }
    dend_7 { pt3dadd( -68.1034, 6.47642, 9.64558, 0.96 ) }
    dend_7 { pt3dadd( -69.0358, 6.96075, 9.76584, 0.96 ) }
    dend_7 { pt3dadd( -70.7039, 7.71054, 9.93501, 1.32 ) }
    dend_7 { pt3dadd( -71.4777, 7.99341, 9.9733, 1.32 ) }
    dend_7 { pt3dadd( -73.3274, 8.61827, 10.002, 1.32 ) }
    dend_7 { pt3dadd( -75.1835, 9.14543, 9.93409, 0.84 ) }
    dend_7 { pt3dadd( -84.7695, 13.9918, 11.2755, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 29.4467, -121.054, 10.0519, 0.6 ) }
    dend_21 { pt3dadd( 31.9591, -122.102, 10.6212, 0.6 ) }
    dend_21 { pt3dadd( 33.6142, -122.792, 10.9962, 0.6 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 44/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 29.4467, -121.054, 10.0519, 0.6 ) }
    dend_18 { pt3dadd( 28.6754, -123.613, 10.3206, 0.6 ) }
    dend_18 { pt3dadd( 28.3651, -125.96, 10.4118, 1.08 ) }
    dend_18 { pt3dadd( 28.2953, -127.725, 10.4558, 1.08 ) }
    dend_18 { pt3dadd( 28.3225, -129.125, 10.4727, 1.08 ) }
    dend_18 { pt3dadd( 28.3922, -130.651, 10.4955, 1.08 ) }
    dend_18 { pt3dadd( 28.4912, -133.964, 10.6908, 0.72 ) }
    dend_18 { pt3dadd( 28.6444, -136.052, 10.9339, 1.2 ) }
    dend_18 { pt3dadd( 28.7197, -137.168, 11.111, 1.2 ) }
    dend_18 { pt3dadd( 28.7468, -138.109, 11.2949, 1.2 ) }
    dend_18 { pt3dadd( 28.721, -139.829, 11.694, 0.84 ) }
    dend_18 { pt3dadd( 28.6852, -142.485, 12.3178, 0.6 ) }
    dend_18 { pt3dadd( 28.557, -145.647, 13.1696, 1.32 ) }
    dend_18 { pt3dadd( 28.4847, -147.49, 13.6317, 1.32 ) }
    dend_18 { pt3dadd( 28.4767, -149.482, 14.0049, 0.72 ) }
    dend_18 { pt3dadd( 28.4961, -151.0, 14.2411, 1.2 ) }
    dend_18 { pt3dadd( 28.6011, -154.966, 14.7092, 1.2 ) }
    dend_18 { pt3dadd( 28.6411, -156.036, 14.7787, 0.72 ) }
    dend_18 { pt3dadd( 28.7157, -158.547, 14.8802, 1.56 ) }
    dend_18 { pt3dadd( 28.7065, -161.805, 14.9489, 0.72 ) }
    dend_18 { pt3dadd( 28.6067, -164.393, 14.9426, 0.72 ) }
    dend_18 { pt3dadd( 28.4673, -166.438, 14.9064, 1.44 ) }
    dend_18 { pt3dadd( 28.2816, -168.1, 14.8848, 0.84 ) }
    dend_18 { pt3dadd( 28.1568, -169.358, 14.8736, 0.84 ) }
    dend_18 { pt3dadd( 27.9977, -171.155, 15.0014, 1.44 ) }
    dend_18 { pt3dadd( 27.8483, -174.07, 15.4455, 0.84 ) }
    dend_18 { pt3dadd( 27.8428, -175.381, 15.6416, 0.84 ) }
    dend_18 { pt3dadd( 27.892, -176.741, 15.8992, 1.32 ) }
    dend_18 { pt3dadd( 27.9716, -177.899, 16.2001, 1.32 ) }
    dend_18 { pt3dadd( 28.3661, -181.488, 17.398, 0.72 ) }
    dend_18 { pt3dadd( 28.6495, -183.015, 18.1685, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 75/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -24.0123, 5.9299, 48.4346, 0.96 ) }
    dend_12 { pt3dadd( -19.8994, 10.8132, 56.4634, 0.96 ) }
    dend_12 { pt3dadd( -17.2498, 16.3167, 64.697, 0.96 ) }
    dend_12 { pt3dadd( -16.8168, 22.8122, 72.588, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -24.0123, 5.9299, 48.4346, 0.84 ) }
    dend_11 { pt3dadd( -18.7575, 9.42576, 57.9054, 0.96 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 81/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 28.6495, -183.015, 18.1685, 0.6 ) }
    dend_20 { pt3dadd( 29.206, -183.252, 19.1901, 0.6 ) }
    dend_20 { pt3dadd( 29.6406, -183.51, 20.1543, 0.96 ) }
    dend_20 { pt3dadd( 30.2092, -183.846, 21.4156, 0.6 ) }
    dend_20 { pt3dadd( 30.5631, -184.056, 22.2008, 0.6 ) }
    dend_20 { pt3dadd( 31.1308, -184.392, 23.4602, 1.2 ) }
    dend_20 { pt3dadd( 31.8108, -184.794, 24.9687, 0.72 ) }
    dend_20 { pt3dadd( 32.2054, -185.129, 26.0397, 1.2 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 28.6495, -183.015, 18.1685, 0.48 ) }
    dend_19 { pt3dadd( 28.7139, -183.982, 18.5784, 0.48 ) }
    dend_19 { pt3dadd( 29.0903, -185.417, 18.8976, 1.08 ) }
    dend_19 { pt3dadd( 29.4786, -186.967, 19.2671, 0.6 ) }
    dend_19 { pt3dadd( 29.7341, -188.187, 19.573, 0.36 ) }
    dend_19 { pt3dadd( 30.0501, -189.734, 19.9854, 0.36 ) }
    dend_19 { pt3dadd( 30.3448, -191.123, 20.3568, 0.84 ) }
    dend_19 { pt3dadd( 31.0381, -193.901, 21.0068, 0.6 ) }
    dend_19 { pt3dadd( 31.6526, -196.059, 21.4699, 0.6 ) }
    dend_19 { pt3dadd( 32.2374, -197.998, 21.8923, 1.08 ) }
    dend_19 { pt3dadd( 32.4767, -198.815, 22.1035, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_19 { pt3dadd( 32.8017, -199.957, 22.4617, 1.08 ) }
    dend_19 { pt3dadd( 33.4057, -201.889, 23.1621, 0.48 ) }
    dend_19 { pt3dadd( 33.9977, -203.515, 23.8343, 0.48 ) }
    dend_19 { pt3dadd( 34.3065, -204.199, 24.1113, 0.48 ) }
    dend_19 { pt3dadd( 34.8751, -205.35, 24.6001, 0.48 ) }
    dend_19 { pt3dadd( 35.3444, -206.302, 25.0235, 0.48 ) }
    dend_19 { pt3dadd( 36.056, -207.704, 25.7295, 1.08 ) }
    dend_19 { pt3dadd( 36.4595, -208.437, 26.1555, 0.48 ) }
    dend_19 { pt3dadd( 37.1977, -209.676, 26.8769, 1.08 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_22 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_42 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_44 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_41 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_26 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_25 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_24 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_34 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_51 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_48 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_53 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_50 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_52 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_13 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_4 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_7 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_11 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_12 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_45 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_39 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_21 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_20 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 3
    dend_33 nseg = 3
    dend_14 nseg = 5
    dend_44 nseg = 3
    dend_43 nseg = 5
    dend_41 nseg = 3
    dend_36 nseg = 3
    dend_32 nseg = 3
    dend_29 nseg = 3
    dend_26 nseg = 7
    dend_37 nseg = 3
    dend_30 nseg = 3
    dend_23 nseg = 5
    dend_38 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_22 nseg = 9
    dend_18 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L6_SBC_846dc20ea0_0_0


