// Cell: cIR216_L5_DBC_30f853b5ca_0_0
/*
{
  "id" : "cIR216_L5_DBC_30f853b5ca_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.46438, -10.9587, 0.660551, 2.48146", "-1.32683, -9.87667, 0.597834, 3.97794", "-1.18928, -8.79467, 0.535117, 5.03907", "-1.05173, -7.71267, 0.4724, 6.13889", "-0.914177, -6.63067, 0.409682, 7.21767", "-0.776625, -5.54866, 0.346965, 8.03623", "-0.639073, -4.46666, 0.284248, 8.69756", "-0.501522, -3.38466, 0.221531, 9.05897", "-0.36397, -2.30266, 0.158814, 9.32273", "-0.226418, -1.22066, 0.0960968, 9.64559", "-0.0888665, -0.138661, 0.0333797, 9.88524", "0.0486852, 0.943339, -0.0293375, 9.94228", "0.186237, 2.02534, -0.0920546, 10.0768", "0.323789, 3.10734, -0.154772, 10.303", "0.46134, 4.18934, -0.217489, 10.477", "0.598892, 5.27134, -0.280206, 10.0133", "0.736444, 6.35334, -0.342923, 9.03357", "0.873996, 7.43534, -0.40564, 7.79644", "1.01155, 8.51734, -0.468357, 6.40893", "1.1491, 9.59934, -0.531074, 4.35077", "1.28665, 10.6813, -0.593792, 2.55388" ]
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "2.53825, -1.0616, -8.8572, 1.11", "2.58973, -2.0139, -8.97194, 1.11", "2.67764, -3.79321, -9.23766, 1.11", "2.7328, -4.79799, -9.42182, 1.03", "2.80392, -6.12223, -9.67688, 1.03", "2.86551, -7.74243, -10.1649, 1.03", "2.86667, -9.0546, -10.6722, 1.18", "2.82511, -10.3225, -11.2661, 1.18", "2.7388, -11.6057, -11.9962, 1.4", "2.63226, -12.3464, -12.5945, 1.55", "2.13793, -14.7503, -15.0109, 1.25", "1.8391, -15.974, -16.5884, 1.25", "1.7117, -16.4975, -17.4188, 1.47", "1.50527, -17.6736, -19.4846, 1.69", "1.29187, -20.0282, -23.7611, 1.69", "1.2921, -20.0596, -23.8175, 1.69", "1.51082, -22.0934, -27.25, 1.33", "1.75254, -23.467, -29.3644, 1.11", "1.99994, -24.7549, -31.0818, 1.25", "2.23459, -26.0119, -32.3382, 1.4", "2.33507, -26.871, -32.9059, 1.4", "2.33584, -27.9619, -33.5051, 1.33", "2.11496, -29.4346, -34.0657, 1.18", "1.78024, -30.5483, -34.486, 1.18", "1.22551, -31.8741, -35.0858, 1.33", "0.478915, -33.5613, -35.9654, 1.03", "-0.0340039, -34.828, -36.6595, 1.25", "-0.299563, -35.6223, -37.1003, 1.62", "-0.777443, -37.4548, -38.1016, 1.62", "-1.01259, -38.7698, -38.7663, 1.03", "-1.20659, -40.9533, -39.7135, 1.03", "-1.22863, -42.6103, -40.2994, 1.18", "-1.16122, -44.1622, -40.7633, 1.18", "-1.11664, -44.7029, -40.9066, 1.55", "-1.02676, -45.6166, -41.0956, 1.55", "-0.91921, -46.8666, -41.3602, 1.69", "-0.841959, -48.1595, -41.7262, 1.84", "-0.800134, -49.3371, -42.1745, 1.47", "-0.761704, -50.9476, -42.8684, 1.18", "-0.761296, -52.3331, -43.5268, 1.18", "-0.793368, -53.9136, -44.3464, 1.18", "-0.79687, -55.671, -45.1833, 1.33", "-0.719667, -57.1312, -45.7254, 1.03", "-0.606673, -58.2496, -46.1143, 1.03", "-0.441963, -59.421, -46.4682, 1.03", "-0.222551, -60.8941, -46.8822, 1.33", "0.160321, -63.911, -47.724, 1.33", "0.410093, -66.5613, -48.5466, 1.33", "0.534238, -68.4489, -49.2203, 1.18", "0.59798, -69.5248, -49.6593, 1.4", "0.736114, -71.499, -50.6359, 1.4", "0.88559, -73.5642, -51.852, 1.33", "1.02363, -75.3865, -53.1611, 1.18", "1.03084, -75.4547, -53.2142, 1.18", "1.20798, -76.6652, -54.1499, 1.47", "1.55152, -78.4, -55.5289, 1.84", "1.84409, -79.4561, -56.3449, 1.62", "2.28871, -80.726, -57.2884, 1.55", "2.83476, -82.2075, -58.3823, 1.33", "3.25894, -83.4908, -59.3598, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.511751, -10.1116, 0.0228061, 3.68", "-0.491917, -10.1846, 0.0228061, 3.68", "-0.330553, -10.7783, 0.0228061, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.07825, 10.7084, 0.142806, 2.43", "1.43295, 11.4497, 0.142806, 2.43", "2.10203, 12.8306, 0.142806, 2.14", "2.56852, 13.8244, 0.147454, 1.92", "2.74289, 14.207, 0.150315, 1.92", "2.99869, 14.7534, 0.155177, 1.92", "3.17107, 15.1102, 0.158508, 1.92", "3.44365, 15.6448, 0.164229, 1.92", "3.66394, 16.0636, 0.168835, 1.99", "3.99508, 16.6919, 0.174931, 1.99", "4.4822, 17.6669, 0.182776, 1.99", "4.88225, 18.4779, 0.188124, 1.99", "5.30486, 19.3749, 0.192448, 1.99", "5.76823, 20.4402, 0.175388, 2.21", "6.15931, 21.4651, 0.140699, 2.21", "6.4059, 22.2339, 0.0922148, 1.99", "6.49059, 22.5689, 0.0570979, 1.99", "6.64233, 23.3179, -0.0428313, 1.99", "6.78854, 24.2788, -0.18673, 2.06", "6.92287, 25.4809, -0.398533, 1.92", "7.02362, 26.6428, -0.638925, 1.92", "7.12434, 27.9405, -0.956869, 1.99", "7.16939, 28.6214, -1.1505, 2.14", "7.24134, 29.7613, -1.49078, 2.14", "7.3249, 31.166, -1.9251, 1.99", "7.36375, 32.0216, -2.2176, 2.06", "7.37991, 33.0448, -2.58773, 2.43", "7.38147, 33.8389, -2.90779, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.28665, 10.6813, -0.593792, 0.551478", "3.17833, 25.5615, -0.593792, 0.551478", "5.07001, 40.4418, -0.593792, 0.551478" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "3.25894, -83.4908, -59.3598, 0.52", "2.27288, -84.7261, -60.8131, 0.52", "1.62594, -85.7596, -61.9381, 0.52", "1.29472, -86.5841, -62.7882, 0.52", "1.02142, -87.8418, -64.0496, 0.52", "0.970699, -88.4737, -64.6835, 1.11", "0.962846, -89.2459, -65.417, 1.4", "1.08458, -89.8507, -65.9292, 1.69", "1.46605, -90.9999, -66.8237, 1.62", "1.86172, -91.9444, -67.5286, 1.4", "2.44102, -93.2073, -68.4175, 0.88", "2.80523, -94.004, -68.9741, 0.66", "3.30886, -95.1544, -69.7167, 0.66", "3.60061, -95.8478, -70.1617, 0.88", "3.92673, -96.6687, -70.6462, 1.11", "4.22169, -97.3574, -71.013, 1.18", "4.54262, -98.0207, -71.3355, 1.18", "4.81675, -98.5259, -71.6135, 1.18" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "3.25894, -83.4908, -59.3598, 0.66", "2.45298, -84.5547, -59.0501, 0.66", "1.72967, -85.2857, -58.7831, 0.52", "1.67172, -85.3369, -58.7662, 0.52", "0.603762, -86.201, -58.491, 0.74", "-0.422489, -87.0298, -58.2737, 0.88", "-1.20298, -87.6518, -58.0971, 0.74", "-2.30199, -88.4699, -57.8021, 0.37", "-3.10194, -89.0789, -57.5391, 1.18", "-3.95612, -89.8067, -57.1906, 1.4", "-4.85449, -90.6586, -56.7505, 0.96", "-5.69761, -91.5994, -56.1049, 0.74", "-6.43857, -92.5796, -55.2636, 0.29", "-7.02759, -93.5231, -54.3762, 0.74", "-7.36781, -94.1686, -53.7352, 0.96", "-7.38831, -94.2149, -53.6911, 0.96", "-8.12018, -96.0627, -52.1162, 0.59", "-8.43403, -96.9013, -51.5839, 1.11", "-8.70433, -97.5823, -51.2654, 1.25", "-9.02212, -98.2601, -51.0754, 1.18", "-9.68122, -99.4324, -50.867, 0.81", "-10.3053, -100.432, -50.7854, 0.59", "-11.0286, -101.481, -50.8323, 0.44", "-11.0842, -101.554, -50.8368, 0.44", "-11.7491, -102.308, -50.8692, 0.29", "-12.8656, -103.405, -50.9099, 0.29", "-13.5865, -104.068, -50.928, 0.81", "-14.1374, -104.601, -50.9374, 1.33", "-14.6857, -105.217, -50.9884, 1.33", "-15.4466, -106.3, -51.1993, 0.96", "-15.8501, -107.093, -51.4283, 0.81", "-16.162, -107.978, -51.7522, 0.81", "-16.4452, -109.082, -52.2017, 0.74", "-16.725, -110.58, -52.842, 0.44", "-16.897, -111.939, -53.4816, 0.66", "-16.9707, -112.822, -53.9385, 0.74", "-17.0506, -113.619, -54.3642, 1.03", "-17.194, -114.537, -54.8648, 1.25", "-17.423, -115.485, -55.3608, 1.11", "-17.795, -116.629, -55.9105, 0.59", "-18.1377, -117.553, -56.3267, 0.59", "-18.508, -118.522, -56.7819, 0.66", "-18.78, -119.224, -57.1087, 0.66", "-19.1874, -120.303, -57.5682, 0.52", "-19.5386, -121.311, -57.9777, 0.52", "-19.8135, -122.208, -58.2976, 0.59", "-20.0972, -123.379, -58.7178, 1.25", "-20.1821, -123.835, -58.8851, 1.4", "-20.3014, -124.666, -59.1898, 1.4", "-20.4798, -125.883, -59.5799, 0.88", "-20.612, -126.659, -59.7889, 0.52", "-20.9135, -127.992, -60.1073, 0.52", "-21.2051, -128.811, -60.1975, 0.52", "-21.246, -128.894, -60.1953, 0.52", "-21.9915, -130.11, -59.943, 0.52", "-22.0331, -130.173, -59.9215, 0.52", "-22.3763, -130.695, -59.7115, 0.96", "-23.2576, -132.106, -59.0763, 1.33", "-23.8562, -133.19, -58.6348, 0.66", "-24.3821, -134.255, -58.2764, 0.59", "-24.8359, -135.298, -58.017, 0.74", "-24.8713, -135.382, -58.0011, 0.74", "-25.2343, -136.265, -57.902, 0.74", "-25.5325, -136.965, -57.9027, 1.03", "-25.8289, -137.522, -57.9349, 1.25", "-26.2647, -138.217, -58.0238, 1.18", "-26.7164, -138.843, -58.1314, 0.59", "-27.2131, -139.469, -58.2658, 0.29", "-27.6581, -139.982, -58.4014, 0.29", "-28.0098, -140.37, -58.5131, 0.81", "-28.3135, -140.706, -58.6132, 1.11", "-28.7604, -141.24, -58.7666, 1.11", "-29.2484, -141.941, -58.9355, 0.59", "-29.2868, -142.022, -58.9487, 0.59", "-29.4834, -142.774, -59.0134, 0.44", "-29.4881, -142.853, -59.0143, 0.44", "-29.4006, -143.679, -58.9715, 0.44", "-29.2359, -144.39, -58.9166, 0.81", "-29.0155, -145.133, -58.8502, 1.11", "-28.868, -145.6, -58.8257, 1.11", "-28.6577, -146.257, -58.8242, 0.88", "-28.4874, -146.857, -58.8517, 0.66", "-28.2976, -147.642, -58.9227, 0.66", "-28.1487, -148.444, -59.0207, 0.44", "-28.0423, -149.302, -59.142, 0.29", "-27.9963, -150.261, -59.2904, 0.88", "-28.0231, -150.983, -59.4019, 0.88", "-28.096, -151.556, -59.4873, 0.88", "-28.263, -152.355, -59.5928, 0.74", "-28.4769, -153.149, -59.6872, 0.37", "-28.7057, -153.888, -59.7522, 0.29", "-29.0539, -154.964, -59.8305, 0.29", "-29.3349, -155.844, -59.8934, 0.81", "-29.5793, -156.661, -59.9468, 1.03", "-29.6017, -156.75, -59.9513, 1.03", "-29.7333, -157.471, -59.9717, 1.18", "-29.848, -158.286, -59.9852, 1.33", "-29.9283, -159.002, -59.9921, 1.33", "-30.0283, -160.096, -60.0059, 0.59", "-30.1255, -161.178, -60.0267, 0.44", "-30.2191, -162.14, -60.0526, 0.44", "-30.3096, -163.021, -60.0787, 0.81", "-30.4198, -164.007, -60.1112, 1.11", "-30.5462, -164.91, -60.1495, 1.11", "-30.6627, -165.467, -60.1868, 1.25", "-30.9347, -166.334, -60.2759, 1.11", "-31.3561, -167.39, -60.4404, 0.66", "-31.6963, -168.131, -60.5859, 0.37", "-32.0738, -168.828, -60.7547, 0.29", "-32.6239, -169.826, -61.0061, 0.37", "-32.9451, -170.55, -61.2073, 0.52", "-33.1842, -171.343, -61.3956, 0.88", "-33.2768, -171.899, -61.4997, 1.03", "-33.2887, -172.146, -61.5338, 1.03", "-33.324, -173.438, -61.5967, 0.74", "-33.3715, -174.907, -61.5866, 0.59", "-33.4399, -176.06, -61.5526, 0.59", "-33.5039, -176.67, -61.4949, 1.4", "-33.5931, -177.361, -61.4052, 1.77", "-33.9141, -179.253, -61.0599, 0.81", "-34.1284, -180.211, -60.8332, 0.81", "-34.4964, -181.518, -60.4133, 0.81", "-34.8546, -182.794, -59.9521, 1.11", "-35.0189, -183.429, -59.6952, 1.11", "-35.2445, -184.44, -59.2559, 0.88", "-35.27, -184.559, -59.2007, 0.88", "-35.5411, -185.553, -58.7333, 0.59", "-35.9073, -186.564, -58.3049, 0.59", "-36.2154, -187.353, -58.022, 0.52", "-36.4973, -188.025, -57.8004, 0.52", "-37.1536, -189.608, -57.3638, 0.74", "-37.4579, -190.335, -57.1874, 1.33", "-37.867, -191.278, -57.0114, 1.69" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.330553, -10.7783, 0.0228061, 2.73", "-0.0372202, -12.979, 0.0386335, 2.73", "0.235241, -15.2293, 0.0536243, 2.14", "0.422502, -17.0018, 0.0642443, 2.14", "0.612174, -19.0308, 0.0753292, 2.28", "0.776756, -20.9696, 0.0612101, 2.14", "0.985711, -23.4839, 0.0259152, 1.92", "1.11147, -25.3313, -0.0352171, 2.06", "1.24376, -27.9001, -0.15859, 1.84", "1.30188, -30.2959, -0.337371, 1.84", "1.30699, -32.1026, -0.510309, 1.84", "1.2571, -34.3782, -0.78977, 1.92", "1.12634, -36.5636, -1.15274, 1.92", "0.921454, -38.3645, -1.52985, 1.92", "0.577078, -40.1724, -1.96346, 1.84", "0.087566, -42.1056, -2.46448, 1.84", "-0.283336, -43.2688, -2.78756, 1.77", "-1.17355, -45.6907, -3.50972, 1.69", "-2.20073, -48.221, -4.28497, 1.69", "-3.10725, -50.2825, -4.94924, 1.84", "-3.14319, -50.3549, -4.97226, 1.84", "-3.6899, -51.3007, -5.29507, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.330553, -10.7783, 0.0228061, 0.96", "-0.346926, -12.1593, -0.753678, 0.96", "-0.442201, -13.5474, -1.4024, 1.25", "-0.656922, -15.1871, -2.05122, 0.96", "-0.865737, -16.256, -2.36151, 1.25", "-1.05769, -17.0121, -2.53741, 1.47", "-1.33648, -17.9893, -2.7356, 1.11", "-1.76816, -19.2452, -2.88891, 0.96", "-2.28268, -20.4453, -2.95286, 1.11", "-3.06214, -21.9643, -2.99228, 1.11", "-3.63118, -22.9489, -3.04038, 1.11", "-3.67949, -23.0246, -3.04594, 1.11", "-4.34605, -23.9393, -3.15048, 0.96", "-4.37737, -23.9774, -3.15823, 0.96", "-5.01379, -24.6365, -3.38142, 1.03", "-5.47846, -25.0892, -3.60219, 1.25", "-5.5232, -25.1362, -3.62455, 1.25", "-6.14771, -25.8263, -3.94688, 0.88", "-6.73614, -26.5263, -4.26651, 0.88", "-7.47344, -27.4766, -4.71235, 1.11", "-8.0443, -28.2908, -5.08729, 1.11", "-8.57941, -29.119, -5.46379, 1.25", "-8.62868, -29.208, -5.50055, 1.25", "-9.07163, -30.2139, -5.88676, 0.96", "-9.45484, -31.2655, -6.25173, 0.96", "-9.73072, -32.1457, -6.53358, 1.03", "-9.75011, -32.2087, -6.55264, 1.03", "-10.0953, -33.3043, -6.86717, 1.03", "-10.3686, -34.1602, -7.08887, 1.03", "-10.6151, -34.9238, -7.24327, 1.25", "-10.8785, -35.7302, -7.36116, 1.62", "-11.3001, -36.9406, -7.50325, 1.25", "-11.6306, -37.8304, -7.58581, 1.18", "-11.9084, -38.4732, -7.6086, 1.18", "-12.287, -39.2558, -7.5844, 1.33", "-12.7776, -40.1508, -7.52199, 1.33", "-13.2376, -40.9316, -7.4635, 1.03", "-13.2658, -40.9759, -7.46015, 1.03", "-13.781, -41.7956, -7.46038, 0.81", "-14.1529, -42.4266, -7.54215, 0.66", "-14.5008, -43.0701, -7.74446, 0.81", "-14.8892, -43.8734, -8.15568, 1.03", "-15.0734, -44.3139, -8.43887, 1.33", "-15.2592, -44.9078, -8.86399, 1.62", "-15.4096, -45.6095, -9.38948, 1.55", "-15.5335, -46.3978, -9.94598, 1.18", "-15.6598, -47.3403, -10.5396, 0.96", "-15.6667, -47.393, -10.5686, 0.96", "-15.8203, -48.6172, -11.155, 0.88", "-15.9631, -49.6735, -11.5664, 0.88", "-16.0793, -50.5988, -11.8423, 1.18", "-16.1812, -51.5324, -12.0668, 1.4", "-16.3013, -52.5725, -12.295, 1.4", "-16.4077, -53.2926, -12.4716, 1.18", "-16.5779, -54.1182, -12.6937, 0.96", "-16.7805, -54.8601, -12.9414, 1.11", "-17.1166, -55.7872, -13.3705, 0.88", "-17.4122, -56.4981, -13.7472, 0.74", "-17.7774, -57.2025, -14.1803, 0.96", "-18.0664, -57.6603, -14.5195, 1.25", "-18.5128, -58.2228, -15.0335, 1.33", "-19.1189, -58.8, -15.6816, 1.4" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.38147, 33.8389, -2.90779, 1.4", "6.92217, 35.1011, -3.22227, 1.4", "6.66289, 35.9805, -3.38327, 1.4", "6.34453, 37.2583, -3.44177, 1.25", "6.30248, 37.4589, -3.41818, 1.25", "6.18938, 38.0663, -3.29374, 1.03", "6.06169, 38.7971, -3.11563, 1.03", "5.98079, 39.5015, -2.87329, 1.18", "5.87352, 40.6031, -2.31747, 1.33", "5.79205, 41.6038, -1.66708, 1.33", "5.74536, 42.3057, -1.18352, 1.47", "5.72569, 42.8235, -0.824809, 1.47", "5.72511, 43.5421, -0.362045, 1.47", "5.78016, 45.1018, 0.517822, 1.4", "5.85117, 46.0851, 0.978783, 1.4", "5.91791, 46.7361, 1.22809, 1.4", "6.03876, 47.6381, 1.52016, 1.62", "6.19931, 48.6869, 1.78511, 1.18", "6.34755, 49.5439, 1.91592, 1.18", "6.36046, 49.6129, 1.91831, 1.18", "6.54986, 50.7573, 1.92664, 1.18", "6.67778, 51.6758, 1.93818, 1.47", "6.71119, 51.9639, 1.94292, 1.47", "6.81645, 52.9409, 1.96118, 1.4", "6.92823, 53.9755, 1.98252, 1.33", "7.05879, 55.2161, 2.01041, 1.33", "7.17104, 56.3828, 2.04125, 1.62", "7.2345, 57.2319, 2.06689, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.38147, 33.8389, -2.90779, 1.18", "8.89269, 34.0927, -3.04447, 1.18", "10.373, 34.2415, -2.96472, 0.96", "11.1882, 34.3064, -2.90406, 1.25", "11.2841, 34.3169, -2.8904, 1.25", "12.6801, 34.5145, -2.68182, 1.25", "13.978, 34.7638, -2.49063, 1.25", "16.323, 35.2589, -2.14595, 1.18", "17.4081, 35.5411, -1.99293, 0.81", "18.9161, 36.0226, -1.7622, 0.96", "20.0647, 36.5092, -1.61565, 0.96", "20.9558, 37.0664, -1.55104, 0.96", "21.0133, 37.114, -1.55558, 0.96", "21.8793, 37.9688, -1.82625, 0.96", "21.9358, 38.0295, -1.84936, 0.96", "22.6549, 38.8319, -2.22821, 1.18", "23.5845, 39.8682, -2.72782, 1.4", "24.3575, 40.6889, -3.14093, 1.33", "24.4486, 40.779, -3.18268, 1.33", "25.3709, 41.5929, -3.52885, 1.18", "25.5398, 41.7113, -3.56511, 1.18", "26.3262, 42.1544, -3.63116, 1.18", "26.5513, 42.2516, -3.61192, 1.18", "27.741, 42.6924, -3.38389, 0.96", "28.9127, 43.1071, -3.09403, 0.96", "30.5773, 43.7185, -2.56158, 1.03", "30.7014, 43.773, -2.51961, 1.03", "32.5521, 44.7833, -1.87914, 1.03", "32.6698, 44.8513, -1.83667, 1.03", "33.3427, 45.2947, -1.57893, 1.03", "34.2425, 46.0049, -1.21524, 1.18", "35.3212, 47.1237, -0.876881, 1.4", "36.1585, 48.1088, -0.692108, 1.62" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.07001, 40.4418, -0.593792, 0.15", "6.9617, 55.322, -0.593792, 0.15", "8.85338, 70.2023, -0.593792, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "4.81675, -98.5259, -71.6135, 0.52", "4.00081, -99.0845, -72.2442, 0.52", "2.97228, -99.8378, -72.9679, 0.52", "2.57985, -100.179, -73.2748, 0.96", "1.76788, -101.059, -74.0524, 1.33", "1.34903, -101.623, -74.5276, 0.81", "0.873781, -102.464, -75.1863, 0.52", "0.861081, -102.514, -75.2186, 0.52", "0.946926, -103.69, -75.9789, 0.88", "1.21887, -104.562, -76.576, 1.25", "1.46707, -105.039, -76.927, 1.47", "1.88894, -105.676, -77.4481, 1.47", "2.44489, -106.385, -78.0579, 0.88", "3.29408, -107.409, -78.9714, 0.88", "3.7343, -107.921, -79.4764, 0.37", "4.18821, -108.519, -80.0983, 0.66", "4.21768, -108.57, -80.1555, 0.66", "4.34068, -108.916, -80.5432, 0.96", "4.4688, -109.858, -81.4988, 1.11", "4.3708, -111.222, -82.6394, 0.44", "4.23855, -111.96, -83.1777, 0.44", "3.99298, -113.063, -83.9445, 0.52", "3.85259, -113.672, -84.3677, 0.74", "3.66525, -114.349, -84.8038, 0.74", "3.39088, -115.199, -85.3382, 1.03", "2.97819, -116.617, -86.2642, 0.88", "2.6648, -117.986, -87.2215, 1.18", "2.47213, -119.303, -88.2551, 0.96", "2.41872, -120.372, -89.3125, 0.59", "2.431, -121.552, -90.6839, 0.29", "2.47811, -122.42, -91.8139, 0.88", "2.49007, -122.675, -92.1721, 1.47", "2.53045, -123.735, -93.6853, 1.33", "2.5428, -125.316, -95.9124, 0.52", "2.52476, -125.739, -96.472, 0.29", "2.4635, -126.11, -96.8612, 0.96", "2.1693, -127.15, -97.7653, 1.77", "2.04232, -127.589, -98.1243, 1.77", "1.74805, -128.561, -98.8122, 1.11", "1.55879, -129.359, -99.4585, 0.37", "1.50336, -129.902, -100.108, 0.29", "1.50218, -130.696, -101.274, 0.74", "1.64505, -131.834, -103.154, 1.33", "1.65219, -131.868, -103.216, 1.33", "1.96554, -132.905, -105.375, 1.55", "2.4089, -134.209, -108.283, 0.96", "2.41858, -134.241, -108.353, 0.96", "2.50775, -134.646, -109.163, 1.18", "2.51216, -134.677, -109.216, 1.18", "2.57893, -135.979, -110.962, 0.44", "2.47946, -136.679, -111.595, 0.37", "2.33808, -137.273, -112.19, 0.52", "2.22945, -137.738, -112.76, 0.81", "2.11048, -138.293, -113.476, 1.33", "2.05219, -138.67, -113.974, 0.96", "1.97751, -139.866, -115.572, 1.25", "2.09153, -142.352, -118.979, 0.52", "2.25189, -143.515, -120.64, 0.44", "2.39311, -144.094, -121.488, 0.59", "2.73275, -145.056, -122.92, 0.59", "3.18344, -145.976, -124.259, 0.74", "3.49913, -146.455, -124.891, 1.18", "3.53303, -146.5, -124.936, 1.18", "3.92095, -146.942, -125.343, 1.47", "3.96265, -146.985, -125.382, 1.47", "4.93434, -148.007, -126.139, 1.18", "4.97657, -148.059, -126.17, 1.18", "5.36145, -148.675, -126.48, 1.18", "5.82925, -149.735, -126.997, 0.52", "6.00523, -150.439, -127.33, 0.29", "6.11624, -151.247, -127.731, 0.29", "6.15239, -151.801, -128.017, 0.88", "6.16528, -152.56, -128.45, 1.11", "6.11939, -154.011, -129.329, 0.81", "6.07914, -154.935, -129.988, 0.37", "6.05276, -155.91, -131.001, 0.29", "6.03911, -156.357, -131.601, 0.96", "6.03574, -156.399, -131.674, 0.96", "5.97247, -156.761, -132.421, 1.18", "5.71907, -157.526, -134.154, 1.11", "5.04685, -158.848, -137.267, 0.44", "4.7633, -159.252, -138.229, 0.74", "4.1936, -159.949, -139.772, 0.59", "3.8311, -160.36, -140.585, 0.81", "3.25669, -160.947, -141.569, 0.44", "2.86328, -161.374, -142.02, 0.59", "2.82275, -161.43, -142.047, 0.59", "2.379, -162.259, -142.333, 0.52", "2.10644, -162.927, -142.514, 1.03", "1.85775, -163.72, -142.737, 1.4", "1.53998, -164.938, -143.057, 1.33", "1.34313, -165.787, -143.343, 1.11", "1.21803, -166.627, -143.766, 0.59", "1.21508, -166.689, -143.807, 0.59", "1.25781, -167.247, -144.276, 0.44", "1.44051, -168.13, -145.221, 0.44", "1.73813, -169.099, -146.45, 0.74", "2.22371, -170.469, -148.336, 0.74", "2.34499, -170.796, -148.79, 1.25", "2.69203, -171.809, -150.198, 1.55", "3.03259, -172.898, -151.733, 1.77", "3.35354, -174.226, -153.631, 0.74", "3.42805, -174.936, -154.569, 0.52", "3.3994, -175.422, -155.15, 0.52", "3.21688, -176.456, -156.333, 0.96", "3.07653, -176.895, -156.772, 1.18", "2.55834, -177.966, -157.755, 0.52", "2.21837, -178.487, -158.219, 0.52", "1.97197, -178.799, -158.51, 0.66", "1.93189, -178.842, -158.552, 0.66", "1.58417, -179.16, -158.854, 0.44", "0.665297, -179.891, -159.543, 0.29", "0.609295, -179.926, -159.571, 0.29", "0.170532, -180.151, -159.772, 0.52", "-0.277861, -180.364, -159.934, 0.81", "-0.817297, -180.64, -160.058, 0.96", "-1.34656, -180.927, -160.115, 1.11", "-2.07015, -181.368, -160.097, 0.29", "-2.16152, -181.429, -160.091, 0.29", "-2.95395, -181.975, -160.003, 0.29", "-3.6795, -182.463, -159.901, 0.88", "-3.94162, -182.635, -159.856, 1.03", "-4.53994, -182.99, -159.756, 1.18", "-5.45849, -183.444, -159.639, 0.29", "-6.55992, -183.887, -159.556, 0.29", "-7.01896, -184.034, -159.56, 0.59", "-7.08778, -184.054, -159.568, 0.59", "-7.88626, -184.289, -159.729, 0.59", "-8.66644, -184.566, -159.965, 1.11", "-9.32335, -184.863, -160.227, 1.4", "-10.1151, -185.306, -160.598, 0.96", "-10.9057, -185.85, -160.998, 0.59", "-11.8109, -186.589, -161.469, 0.37", "-12.4872, -187.253, -161.823, 0.37", "-12.8958, -187.692, -162.002, 0.74", "-12.9428, -187.747, -162.019, 0.74", "-13.405, -188.344, -162.118, 0.74", "-13.7646, -188.83, -162.163, 1.03", "-14.1794, -189.404, -162.178, 1.33", "-14.8109, -190.183, -162.169, 1.47", "-15.5238, -190.994, -162.153, 0.37", "-16.3996, -191.962, -162.136, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "4.81675, -98.5259, -71.6135, 0.52", "5.04894, -99.2166, -70.5597, 0.52", "5.33074, -100.09, -69.4544, 0.44", "5.47814, -100.584, -68.9546, 0.88", "5.48953, -100.627, -68.9188, 0.88", "5.58329, -101.021, -68.6418, 1.03", "5.67859, -101.472, -68.3695, 0.81", "5.78387, -102.083, -68.1629, 0.29", "5.88051, -102.765, -68.0234, 0.22", "5.94004, -103.285, -67.9348, 0.52", "5.96199, -103.564, -67.8893, 0.74", "5.98522, -104.286, -67.7807, 0.29", "5.9719, -104.914, -67.69, 0.29", "5.92975, -105.534, -67.6104, 0.74", "5.89029, -105.885, -67.5642, 1.03", "5.83346, -106.32, -67.5065, 0.96", "5.7618, -106.778, -67.449, 0.59", "5.65731, -107.426, -67.3477, 0.22", "5.60623, -107.827, -67.2682, 0.37", "5.60163, -107.929, -67.2443, 0.37", "5.63667, -108.354, -67.1427, 0.37", "5.64853, -108.406, -67.1306, 0.37", "5.93224, -109.186, -67.0421, 0.29", "6.17335, -109.718, -67.0295, 0.88", "6.33219, -110.053, -67.0401, 1.18", "6.63963, -110.718, -67.0894, 0.29", "6.92786, -111.35, -67.1621, 0.29", "7.34089, -112.32, -67.2564, 0.52", "7.50932, -112.757, -67.2936, 0.81", "7.75696, -113.465, -67.3184, 0.22", "7.85811, -113.798, -67.3128, 0.59", "7.87632, -113.87, -67.309, 0.59", "8.10994, -115.004, -67.2209, 0.44", "8.24926, -115.801, -67.1378, 0.66", "8.34014, -116.34, -67.0932, 0.59", "8.41988, -116.793, -67.0787, 0.44", "8.55523, -117.534, -67.0937, 0.96", "8.69279, -118.101, -67.1642, 1.33", "8.89865, -118.677, -67.3195, 0.59", "8.92609, -118.733, -67.3382, 0.59", "9.23829, -119.214, -67.5379, 0.59", "9.26525, -119.251, -67.5575, 0.59", "9.83226, -120.035, -68.0748, 0.29", "10.0788, -120.412, -68.3594, 0.44", "10.2696, -120.763, -68.6074, 0.44", "10.513, -121.289, -68.9513, 0.44", "10.7594, -121.966, -69.3459, 1.33", "11.0198, -122.781, -69.7726, 1.11", "11.2195, -123.54, -70.1214, 0.52", "11.4185, -124.234, -70.4301, 0.29", "11.4327, -124.284, -70.4509, 0.29", "11.5724, -124.716, -70.5861, 0.29", "11.8566, -125.293, -70.676, 0.29", "12.0603, -125.575, -70.6555, 0.96", "12.3527, -125.819, -70.5809, 1.25" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-37.867, -191.278, -57.0114, 0.29", "-39.5612, -191.347, -57.1572, 0.29", "-40.681, -191.489, -57.1794, 0.29", "-41.0244, -191.541, -57.1855, 0.74", "-41.1116, -191.556, -57.1879, 0.74", "-41.6627, -191.646, -57.2195, 0.74", "-42.7875, -191.797, -57.4048, 0.29", "-43.5854, -191.926, -57.6722, 0.29", "-43.9403, -191.963, -57.8431, 0.74", "-44.22, -191.971, -58.0227, 1.11", "-44.6739, -191.98, -58.3462, 1.11", "-45.8146, -192.007, -59.2548, 0.29", "-46.1883, -192.035, -59.5575, 0.37", "-46.7806, -192.126, -59.9247, 0.37", "-47.5221, -192.297, -60.2572, 0.66", "-48.343, -192.549, -60.5247, 0.52", "-48.8596, -192.73, -60.648, 0.96", "-49.8327, -193.097, -60.8236, 1.33", "-51.2295, -193.602, -61.1078, 0.59", "-51.8683, -193.819, -61.2174, 0.37", "-52.3807, -193.981, -61.2996, 0.22", "-53.2694, -194.251, -61.46, 0.22", "-54.0219, -194.488, -61.6089, 0.66", "-54.9653, -194.837, -61.8352, 0.66", "-56.3862, -195.489, -62.2238, 0.52", "-56.5912, -195.598, -62.2769, 0.29", "-57.1408, -195.945, -62.4368, 0.74", "-57.3918, -196.114, -62.4894, 0.74", "-58.5562, -196.938, -62.6979, 0.37", "-59.5282, -197.677, -62.8752, 0.44", "-59.9904, -198.046, -62.9934, 0.59", "-60.7908, -198.678, -63.2083, 0.52", "-62.4765, -199.942, -63.6961, 0.37", "-63.2297, -200.462, -63.9354, 0.37", "-64.0871, -200.996, -64.2442, 0.29", "-65.1417, -201.593, -64.6564, 0.59", "-65.3499, -201.712, -64.7464, 0.88", "-65.9894, -202.061, -65.0704, 0.66", "-66.6834, -202.447, -65.5443, 0.15", "-67.4609, -202.775, -66.0717, 0.15", "-67.5218, -202.791, -66.114, 0.15", "-68.201, -202.926, -66.657, 0.59", "-68.6333, -203.031, -67.0589, 0.88", "-68.6788, -203.047, -67.1067, 0.88", "-69.0057, -203.2, -67.4855, 0.88", "-69.4948, -203.51, -68.097, 0.88", "-70.2359, -204.151, -69.067, 0.29", "-70.6075, -204.545, -69.5625, 0.29", "-70.9271, -204.955, -69.9814, 0.66", "-71.1957, -205.323, -70.3057, 0.81", "-71.5804, -205.911, -70.7278, 0.66", "-72.0855, -206.72, -71.2106, 0.29", "-72.3542, -207.147, -71.4299, 0.81", "-72.5581, -207.457, -71.5873, 0.81", "-73.0891, -208.156, -71.971, 0.22", "-73.5104, -208.598, -72.2074, 0.22", "-73.7974, -208.853, -72.3291, 0.81", "-74.0628, -209.049, -72.4237, 0.96", "-75.0149, -209.586, -72.6351, 0.22", "-75.7085, -209.8, -72.6348, 0.22", "-76.7829, -209.935, -72.4508, 0.74", "-77.1685, -209.954, -72.3587, 1.18", "-77.855, -209.963, -72.1703, 0.74", "-79.4742, -209.93, -71.699, 0.59", "-81.6716, -209.839, -71.0513, 0.44", "-83.4324, -209.817, -70.5675, 0.37", "-83.5187, -209.82, -70.5488, 0.37", "-83.9806, -209.863, -70.4694, 0.66", "-84.4308, -209.973, -70.3843, 0.74", "-85.5782, -210.423, -70.1789, 0.29", "-86.3916, -210.827, -70.0342, 0.29", "-87.2302, -211.221, -69.8637, 0.29", "-87.4494, -211.322, -69.8088, 0.74", "-89.7038, -212.349, -69.0614, 0.66", "-90.7455, -212.817, -68.6041, 0.22", "-91.061, -212.941, -68.4139, 0.22", "-91.8179, -213.144, -67.8648, 0.44" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-37.867, -191.278, -57.0114, 0.37", "-37.4668, -192.893, -58.0596, 0.37", "-37.2775, -193.78, -58.5751, 0.37", "-37.2693, -193.833, -58.6021, 0.37", "-37.21, -194.395, -58.865, 0.81", "-37.1466, -195.233, -59.2278, 0.88", "-37.1282, -195.582, -59.3685, 0.88", "-37.1198, -196.29, -59.605, 0.52", "-37.1374, -197.092, -59.8728, 0.52", "-37.1778, -197.823, -60.1609, 0.52", "-37.228, -198.22, -60.3446, 0.96", "-37.2973, -198.562, -60.5162, 0.96", "-37.5277, -199.469, -61.0295, 0.37", "-37.7002, -199.998, -61.3618, 0.29", "-37.9084, -200.505, -61.7284, 0.59", "-38.1488, -200.961, -62.0876, 0.96", "-38.3527, -201.284, -62.3506, 1.18", "-38.3832, -201.325, -62.3834, 1.18", "-38.577, -201.574, -62.5826, 1.18", "-38.8895, -202.041, -62.9395, 1.03", "-39.2123, -202.607, -63.3248, 0.59", "-39.4115, -202.995, -63.5466, 0.52", "-39.5803, -203.319, -63.7044, 0.66", "-40.0489, -204.138, -64.0482, 0.29", "-40.4103, -204.7, -64.236, 0.44", "-40.5933, -204.955, -64.2904, 0.52", "-41.231, -205.755, -64.3992, 0.66", "-41.6255, -206.2, -64.4434, 0.37", "-42.0974, -206.685, -64.4818, 0.88", "-42.389, -206.956, -64.5029, 1.18", "-42.971, -207.48, -64.5696, 0.96", "-43.365, -207.857, -64.6329, 0.66", "-43.6335, -208.146, -64.6766, 1.03", "-44.0854, -208.712, -64.7183, 0.52", "-44.5754, -209.45, -64.7176, 0.52", "-44.8514, -209.97, -64.6924, 1.11", "-45.0658, -210.503, -64.6402, 1.11", "-45.3373, -211.372, -64.5373, 0.74", "-45.4654, -211.869, -64.4758, 0.44", "-45.6354, -212.632, -64.3824, 0.59", "-45.8599, -213.673, -64.2833, 0.59", "-46.1005, -214.656, -64.2401, 0.59", "-46.3309, -215.481, -64.2398, 0.52", "-46.5006, -216.001, -64.2704, 1.18", "-46.6246, -216.331, -64.299, 1.33", "-47.0082, -217.202, -64.4085, 1.18", "-47.3545, -217.883, -64.5117, 0.88", "-47.653, -218.422, -64.6028, 0.52", "-47.9786, -219.028, -64.7015, 0.66", "-48.0086, -219.092, -64.707, 0.66", "-48.2082, -219.646, -64.7104, 0.81", "-48.4112, -220.29, -64.6917, 0.44", "-48.6042, -220.997, -64.6473, 0.44", "-48.8149, -221.873, -64.5669, 0.44", "-49.0369, -223.0, -64.4185, 0.37", "-49.1645, -223.742, -64.2988, 0.29" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-3.6899, -51.3007, -5.29507, 1.03", "-5.11118, -51.6936, -5.29028, 1.03", "-6.10241, -52.1058, -5.14153, 1.03", "-7.31901, -52.7683, -4.88917, 0.96", "-8.12393, -53.3225, -4.70969, 0.96", "-8.22886, -53.4026, -4.6856, 0.96", "-10.2853, -55.1915, -4.22155, 0.81", "-11.0312, -56.0262, -4.01916, 1.11", "-11.76, -56.937, -3.80968, 1.11", "-12.6931, -58.1531, -3.54408, 1.03", "-12.7396, -58.2111, -3.53263, 1.03", "-13.7365, -59.3477, -3.30046, 1.03", "-14.4558, -60.1332, -3.17938, 1.25", "-15.0759, -60.7801, -3.02645, 1.4", "-15.5066, -61.2097, -2.89077, 1.4", "-16.3416, -62.0589, -2.54096, 1.25", "-17.2056, -63.0682, -2.10161, 1.11", "-17.6648, -63.7084, -1.82021, 1.11", "-18.1492, -64.5642, -1.46802, 1.03", "-18.2071, -64.6913, -1.4256, 1.03", "-18.5766, -65.631, -1.23527, 0.81", "-18.9405, -66.662, -1.15203, 0.96", "-19.3088, -67.7885, -1.1512, 0.96", "-19.7031, -69.068, -1.18672, 0.81", "-19.9437, -70.0099, -1.25163, 0.74", "-20.2606, -71.4222, -1.39545, 0.81", "-20.3986, -72.1931, -1.49965, 1.11", "-20.5386, -73.3023, -1.65601, 1.11", "-20.5978, -74.1435, -1.77382, 1.11", "-20.6477, -75.7771, -1.99055, 0.88", "-20.6527, -76.5983, -2.0612, 1.11", "-20.6378, -77.5623, -2.1254, 1.11", "-20.6192, -78.3088, -2.18447, 1.33", "-20.6113, -79.0831, -2.24973, 0.96", "-20.6207, -80.0091, -2.32873, 1.11", "-20.6259, -81.1401, -2.41584, 1.11", "-20.605, -82.0838, -2.50246, 1.4", "-20.5834, -82.9121, -2.59767, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-3.6899, -51.3007, -5.29507, 1.47", "-3.67908, -53.2726, -5.30894, 1.47", "-3.67241, -54.4879, -5.31749, 1.47", "-3.65789, -57.1353, -5.33611, 1.47", "-3.64821, -58.901, -5.34853, 1.62", "-3.63635, -61.0619, -5.36373, 1.92", "-3.62489, -63.1524, -5.37844, 1.92" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-19.1189, -58.8, -15.6816, 0.88", "-20.7737, -58.9845, -15.8011, 0.88", "-21.2618, -59.0671, -15.8733, 1.11", "-21.8103, -59.1892, -16.0136, 0.88", "-22.492, -59.3554, -16.2144, 0.81", "-23.2785, -59.5947, -16.4867, 0.74", "-24.0173, -59.8798, -16.7647, 0.96", "-24.7176, -60.2434, -17.1137, 0.96", "-25.6519, -60.8454, -17.6004, 0.81", "-25.6942, -60.8793, -17.6228, 0.81", "-26.427, -61.5808, -18.0139, 0.74", "-27.0466, -62.2543, -18.3439, 0.74", "-27.2679, -62.5031, -18.4512, 1.03", "-27.6941, -62.9651, -18.6401, 1.11", "-28.4287, -63.6961, -18.9238, 1.11", "-28.4864, -63.7477, -18.9465, 1.11", "-29.3614, -64.4234, -19.283, 0.88", "-30.3986, -65.1577, -19.6907, 0.88", "-30.8589, -65.4627, -19.8745, 1.25", "-31.4393, -65.8155, -20.1109, 1.25", "-32.2404, -66.2678, -20.4438, 1.4", "-32.8322, -66.6003, -20.6876, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-19.1189, -58.8, -15.6816, 0.74", "-18.5278, -59.3701, -16.6924, 0.74", "-17.7628, -60.1227, -18.0515, 0.44", "-17.7107, -60.1764, -18.143, 0.44", "-17.1943, -60.7314, -18.9839, 0.44", "-16.2746, -61.7368, -20.4029, 1.03", "-14.5243, -63.787, -23.1221, 1.03", "-13.9872, -64.4579, -24.0075, 1.33", "-13.2978, -65.4203, -25.2331, 1.11", "-12.8444, -66.1076, -26.1622, 0.59", "-12.2282, -67.143, -27.6178, 0.44", "-11.5876, -68.5196, -29.4821, 0.44", "-11.2351, -69.4329, -30.7357, 0.88", "-11.1032, -69.8563, -31.3809, 1.25", "-10.7449, -71.5079, -34.0189, 1.25", "-10.7389, -71.5506, -34.0905, 1.25", "-10.727, -71.7488, -34.3988, 1.25", "-10.7254, -71.7954, -34.4573, 1.25", "-10.6392, -73.3896, -35.7187, 0.74", "-10.5637, -74.3533, -36.2936, 0.74", "-10.5591, -74.4289, -36.3268, 0.74", "-10.4987, -75.1124, -36.6827, 0.74", "-10.3781, -76.0739, -37.3382, 0.81", "-10.2866, -76.8845, -37.9759, 0.81", "-10.1516, -78.5168, -39.4889, 0.44", "-10.1504, -78.5737, -39.549, 0.44", "-10.1686, -79.5669, -40.6698, 0.74", "-10.2131, -80.8938, -42.2791, 0.88", "-10.2275, -81.521, -43.0367, 1.03", "-10.247, -82.5331, -44.1866, 1.03", "-10.2511, -83.185, -44.7988, 1.18", "-10.2494, -83.2433, -44.8457, 1.18", "-10.1162, -84.607, -45.6351, 0.52", "-9.86814, -85.5992, -45.978, 0.44", "-9.62162, -86.1189, -46.1088, 0.81", "-9.35651, -86.5474, -46.1878, 0.88", "-9.25542, -86.698, -46.2225, 0.88", "-8.80126, -87.4091, -46.4045, 0.74", "-8.29795, -88.2861, -46.6497, 0.44", "-7.86654, -89.1981, -46.9542, 0.59", "-7.41873, -90.4545, -47.3783, 0.52", "-7.14199, -91.4538, -47.731, 0.88", "-6.99542, -92.1388, -47.9716, 1.18", "-6.84159, -93.1262, -48.3486, 0.52", "-6.79209, -93.7777, -48.6074, 0.44", "-6.78526, -94.7387, -48.9685, 0.44", "-6.82383, -95.5895, -49.2735, 0.74", "-6.86199, -96.0688, -49.4448, 0.74", "-7.00827, -97.6029, -50.0282, 0.59", "-7.14285, -98.7255, -50.4554, 0.66", "-7.21575, -99.3615, -50.7146, 1.18", "-7.31816, -100.336, -51.1095, 1.33", "-7.39021, -101.295, -51.4546, 1.11", "-7.39004, -101.374, -51.482, 1.11", "-7.3222, -102.271, -51.7505, 0.96", "-7.15286, -103.444, -52.085, 0.66", "-6.99362, -104.341, -52.368, 0.37", "-6.86354, -105.208, -52.6717, 0.29", "-6.6945, -106.733, -53.2952, 1.03", "-6.63613, -107.491, -53.6322, 1.33", "-6.59913, -108.1, -53.914, 1.47", "-6.54119, -109.662, -54.5899, 0.37", "-6.49279, -110.613, -55.0117, 0.37", "-6.44377, -111.932, -55.5652, 0.29", "-6.42636, -112.427, -55.7404, 0.44", "-6.39755, -113.175, -55.9679, 0.59", "-6.34848, -114.356, -56.2661, 0.59", "-6.26284, -115.853, -56.5799, 0.74", "-6.17213, -116.958, -56.781, 0.59", "-6.11094, -117.953, -56.9387, 0.44", "-6.03444, -119.29, -57.1618, 0.44", "-6.01763, -119.378, -57.2005, 0.44", "-5.71715, -120.249, -57.7854, 0.96", "-5.47255, -120.753, -58.1971, 1.4", "-5.43833, -120.813, -58.2488, 1.4", "-5.09387, -121.375, -58.7385, 1.18", "-2.97182, -124.871, -61.7567, 0.59", "-2.54695, -125.607, -62.3704, 0.88", "-2.17617, -126.299, -62.9291, 1.03", "-1.80689, -127.063, -63.5281, 0.52", "-1.468, -127.948, -64.1475, 0.37", "-1.25024, -128.848, -64.6541, 0.37", "-1.2457, -128.916, -64.6713, 0.37", "-1.22793, -129.225, -64.7451, 1.03", "-1.19084, -129.886, -64.8755, 1.03", "-1.07746, -130.903, -65.0497, 0.44", "-0.807194, -131.989, -65.2695, 0.37", "-0.40143, -133.052, -65.4962, 0.88", "-0.111129, -133.678, -65.677, 1.25", "0.120534, -134.145, -65.8376, 1.25", "0.581249, -135.038, -66.2106, 0.81", "1.3972, -136.693, -66.9873, 0.29", "1.58006, -137.13, -67.1983, 0.29", "1.93222, -138.152, -67.7314, 0.37", "2.20719, -139.09, -68.2567, 0.37", "2.43559, -140.05, -68.7831, 0.66", "2.56739, -140.85, -69.1796, 1.25", "2.6796, -141.681, -69.5086, 1.4", "2.9186, -143.16, -70.0124, 0.81", "3.19736, -144.507, -70.3796, 0.59", "3.38632, -145.253, -70.5491, 0.29", "3.65883, -146.213, -70.7205, 0.29", "4.06162, -147.327, -71.0775, 0.29", "4.22616, -147.71, -71.2591, 1.03", "4.25859, -147.777, -71.2975, 1.03", "4.57284, -148.384, -71.6856, 1.4", "5.02568, -149.265, -72.2997, 1.4", "6.36945, -151.919, -74.2102, 0.52", "6.85902, -153.0, -74.9669, 0.74", "6.90298, -153.113, -75.0406, 0.74", "7.19521, -153.968, -75.5569, 0.52", "7.433, -154.836, -76.0298, 0.52", "7.54962, -155.567, -76.33, 0.74", "7.62418, -156.586, -76.6302, 0.66", "7.81357, -158.239, -77.3089, 0.59", "7.8265, -158.3, -77.3422, 0.59", "8.0318, -159.018, -77.7904, 0.52", "8.29268, -159.793, -78.2845, 1.18", "8.76927, -161.102, -79.1086, 1.62", "9.58137, -163.064, -80.3518, 1.18", "10.1548, -164.385, -81.1325, 0.52", "10.5893, -165.387, -81.6766, 0.37", "10.9932, -166.333, -82.1304, 0.74", "11.1589, -166.779, -82.3093, 1.11", "11.4723, -168.128, -82.6832, 0.88", "11.4964, -168.906, -82.8342, 0.81", "11.3434, -169.896, -83.0579, 0.44", "11.1074, -170.653, -83.2781, 0.59", "10.77, -171.45, -83.5907, 0.59", "10.3168, -172.356, -83.993, 0.37", "9.71507, -173.445, -84.4834, 0.29", "9.32314, -174.165, -84.8289, 0.81", "9.00574, -174.821, -85.1573, 1.11", "8.48689, -176.047, -85.7597, 1.4", "8.26404, -176.645, -86.0367, 1.33", "7.94404, -177.627, -86.4352, 0.81", "7.65465, -178.576, -86.7436, 0.52", "7.26958, -179.837, -87.0594, 0.44", "6.98919, -180.783, -87.2396, 0.37", "6.66986, -181.881, -87.3209, 0.37", "6.39665, -182.918, -87.3315, 0.66", "6.15199, -184.01, -87.2678, 0.96", "6.00574, -184.855, -87.159, 1.03", "5.90206, -185.701, -86.9955, 1.25", "5.87511, -187.256, -86.6368, 0.81", "5.91584, -187.927, -86.4759, 0.52", "6.01073, -188.858, -86.2934, 0.52", "6.08305, -189.548, -86.1993, 0.29", "6.14325, -190.559, -86.1341, 0.29", "6.15077, -191.946, -86.1997, 0.29", "6.05797, -192.829, -86.3682, 0.81", "5.84925, -193.734, -86.6145, 1.11", "5.58954, -194.467, -86.8721, 1.11", "5.25188, -195.191, -87.1694, 0.74", "4.81477, -195.927, -87.5248, 0.37", "4.17005, -196.909, -88.0693, 0.29", "3.97527, -197.248, -88.2457, 0.74", "3.93859, -197.33, -88.2825, 0.74", "3.79654, -197.89, -88.5321, 0.96", "3.77872, -198.031, -88.5911, 0.96", "3.69364, -199.307, -89.069, 0.29", "3.62791, -200.13, -89.3744, 0.29", "3.55171, -200.703, -89.5803, 0.81", "3.3016, -201.906, -90.0042, 1.03", "3.08124, -202.615, -90.2522, 0.81", "2.69116, -203.523, -90.5888, 0.29", "2.14957, -204.453, -90.9555, 0.29", "1.80415, -204.925, -91.1651, 0.44", "1.35762, -205.48, -91.4142, 0.44", "0.767704, -206.107, -91.6926, 0.66", "0.0836925, -206.743, -92.0261, 0.96", "-0.2795, -207.034, -92.2146, 1.4", "-1.27315, -207.767, -92.7726, 1.69" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.2345, 57.2319, 2.06689, 1.11", "6.95508, 58.6936, 2.25424, 1.11", "6.86083, 59.1168, 2.30265, 0.96", "6.70809, 59.6653, 2.35929, 0.96", "6.51902, 60.2781, 2.41943, 0.96", "6.27122, 60.994, 2.48923, 0.96", "5.86919, 62.0764, 2.59482, 0.96", "5.84216, 62.1309, 2.59853, 0.96", "5.38487, 62.9661, 2.66099, 1.11", "5.33819, 63.0447, 2.66765, 1.11", "4.93746, 63.6824, 2.72706, 1.11", "4.89874, 63.7398, 2.73321, 1.11", "4.46395, 64.3684, 2.80572, 1.33", "4.06852, 64.9509, 2.87066, 1.18", "3.66236, 65.6055, 2.93666, 0.96", "3.62945, 65.6683, 2.94189, 0.96", "3.38745, 66.2065, 2.98156, 0.88", "3.11981, 66.9239, 3.02554, 0.88", "3.10421, 66.9822, 3.02822, 0.88", "2.93916, 67.9072, 3.0578, 0.88", "2.84416, 68.8164, 3.07527, 1.11", "2.83995, 68.9034, 3.07635, 1.11", "2.84629, 69.6598, 3.08006, 1.11", "2.87726, 70.3025, 3.08251, 1.33", "2.9078, 70.7025, 3.0843, 1.33", "3.00172, 71.422, 3.05612, 1.18", "3.12172, 72.1273, 3.00269, 1.18", "3.13984, 72.2096, 2.98939, 1.18", "3.32942, 72.9007, 2.8276, 1.11", "3.55189, 73.5914, 2.62697, 1.11", "3.80794, 74.2799, 2.39452, 1.03", "4.04839, 74.9031, 2.1629, 0.88", "4.38806, 75.8637, 1.79196, 0.88", "4.41911, 75.9779, 1.75006, 0.88", "4.58148, 76.7837, 1.52532, 0.88", "4.58778, 76.8437, 1.51604, 0.88", "4.56577, 77.4961, 1.52109, 0.88", "4.43702, 78.3469, 1.62491, 0.88", "4.27982, 78.9554, 1.75396, 0.88", "3.96759, 79.8886, 1.95815, 0.96", "3.88732, 80.0663, 1.99822, 0.96", "3.62411, 80.5847, 2.10778, 1.47", "3.36506, 81.0717, 2.21234, 1.62", "3.003, 81.7157, 2.36361, 1.11", "2.64165, 82.3542, 2.50229, 1.11", "2.18402, 83.1598, 2.64984, 1.11", "1.8218, 83.8594, 2.78279, 0.96", "1.51509, 84.5217, 2.91398, 0.96", "1.15933, 85.3164, 3.07426, 0.96", "1.13424, 85.3818, 3.08635, 0.96", "0.978065, 85.8639, 3.14779, 0.96", "0.737, 86.7368, 3.15818, 1.18", "0.715555, 86.8201, 3.15141, 1.18", "0.441325, 87.8788, 3.00153, 1.18", "0.162477, 88.9689, 2.81016, 1.03", "-0.0413873, 89.7475, 2.67331, 0.88", "-0.323001, 90.8017, 2.48018, 1.03", "-0.520307, 91.5317, 2.34717, 1.03", "-0.622356, 91.9441, 2.2835, 1.03", "-0.641668, 92.0538, 2.27072, 1.03", "-0.745079, 92.7401, 2.23548, 1.03", "-0.762178, 92.8694, 2.23847, 1.03", "-0.848803, 93.4819, 2.32368, 1.03", "-1.01168, 94.5257, 2.50553, 1.18", "-1.15924, 95.4481, 2.70785, 1.18", "-1.25289, 96.0116, 2.85012, 1.18", "-1.35757, 96.6207, 3.02381, 1.18", "-1.58535, 97.8909, 3.40213, 1.18", "-1.74281, 98.7852, 3.69938, 1.18", "-1.89621, 99.6995, 4.01978, 1.18", "-1.90575, 99.7583, 4.03933, 1.18", "-1.99142, 100.294, 4.18694, 1.18", "-2.15333, 101.269, 4.38989, 1.47", "-2.26001, 101.94, 4.47908, 1.47", "-2.37026, 102.608, 4.55026, 1.33", "-2.52907, 103.61, 4.62784, 1.03", "-2.75374, 104.993, 4.72358, 0.96", "-2.94113, 106.127, 4.79116, 0.96", "-3.08172, 106.933, 4.81467, 0.96", "-3.20738, 107.614, 4.81241, 1.11", "-3.27831, 108.013, 4.80609, 1.11", "-3.40729, 108.828, 4.77719, 1.25", "-3.45363, 109.195, 4.75818, 1.25", "-3.5779, 110.121, 4.69187, 1.03", "-3.60242, 110.26, 4.68118, 1.03", "-3.67938, 110.684, 4.6652, 1.03", "-3.75968, 111.106, 4.66755, 1.03", "-3.83609, 111.61, 4.71771, 1.03", "-3.94509, 112.434, 4.86834, 1.03", "-4.00552, 113.044, 5.02456, 1.03", "-4.04903, 113.608, 5.22419, 1.03", "-4.05567, 113.718, 5.27173, 1.03", "-4.09471, 114.577, 5.68613, 1.03", "-4.09704, 114.631, 5.71464, 1.03", "-4.1593, 115.576, 6.21767, 1.03", "-4.25201, 116.553, 6.69476, 1.03", "-4.26244, 116.638, 6.72857, 1.03", "-4.32305, 117.301, 6.93839, 1.03", "-4.3256, 117.362, 6.95431, 1.03", "-4.29115, 118.468, 7.20226, 1.03", "-4.27853, 118.596, 7.22463, 1.03", "-4.18421, 119.359, 7.31781, 1.25", "-4.04588, 120.476, 7.44722, 1.25", "-3.92334, 121.417, 7.55198, 1.25", "-3.83962, 122.272, 7.64307, 0.88", "-3.7975, 123.118, 7.71112, 0.74", "-3.81832, 123.826, 7.73786, 1.18", "-3.94209, 124.944, 7.73399, 1.4", "-3.96957, 125.073, 7.72841, 1.4", "-4.23162, 125.968, 7.6554, 1.4", "-4.57672, 126.934, 7.57245, 1.18", "-4.91578, 127.815, 7.49088, 1.03", "-4.93817, 127.871, 7.48489, 1.03", "-5.27312, 128.687, 7.38709, 1.03", "-5.44342, 129.11, 7.33855, 0.88", "-5.88996, 130.297, 7.22241, 1.11", "-5.91136, 130.356, 7.22119, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.2345, 57.2319, 2.06689, 0.52", "6.88882, 57.8411, 1.66068, 0.52", "6.56973, 58.2875, 1.35906, 0.74", "6.25867, 58.606, 1.11765, 0.74", "6.13466, 58.7147, 1.0299, 0.74", "5.89064, 58.8921, 0.815585, 0.74", "5.48081, 59.1471, 0.385586, 0.44", "5.24526, 59.2642, 0.11928, 0.81", "4.82405, 59.463, -0.389157, 0.81", "4.80145, 59.4744, -0.420198, 0.81", "4.00889, 59.9444, -1.56613, 1.03", "3.47365, 60.3302, -2.40083, 0.81", "3.32295, 60.4656, -2.65094, 0.81", "3.00619, 60.7971, -3.16102, 0.88", "2.63911, 61.2133, -3.69394, 0.81", "2.33293, 61.5254, -4.05483, 0.81", "1.87513, 61.9273, -4.45162, 0.59", "1.60702, 62.1006, -4.65276, 0.59", "1.13091, 62.2795, -5.01198, 0.88", "0.505814, 62.401, -5.78846, 0.88", "0.0207403, 62.4456, -6.56174, 0.88", "-0.217548, 62.4527, -7.00024, 1.25", "-0.648495, 62.448, -7.85842, 1.25", "-1.15375, 62.4387, -8.92385, 1.11", "-2.71664, 62.4684, -12.4794, 1.03", "-3.13738, 62.5009, -13.5128, 0.66", "-3.15227, 62.5044, -13.5549, 0.66", "-3.4105, 62.6233, -14.3881, 0.52", "-3.51325, 62.707, -14.7681, 0.52", "-3.63995, 62.8995, -15.3385, 0.52", "-3.64136, 62.9241, -15.3775, 0.52", "-3.53, 63.5816, -16.3626, 1.25", "-3.50756, 63.729, -16.5869, 1.69", "-3.50214, 63.7573, -16.6305, 1.69", "-3.4852, 63.9103, -16.8685, 1.69", "-3.55149, 64.6218, -17.9782, 0.88", "-3.77357, 65.3539, -18.988, 0.59", "-3.9159, 65.6212, -19.323, 0.81", "-3.9341, 65.6508, -19.3621, 0.81", "-4.10213, 65.9196, -19.7454, 1.11", "-4.44588, 66.4798, -20.5526, 1.11", "-4.62774, 66.7924, -20.9819, 0.96", "-4.92738, 67.3934, -21.8273, 0.88", "-5.23281, 68.1397, -22.8237, 0.81", "-5.44211, 68.8053, -23.7029, 0.52", "-5.47679, 69.006, -24.0035, 0.52", "-5.47374, 69.2614, -24.3992, 0.59", "-5.46251, 69.3127, -24.4794, 0.59", "-5.3233, 69.6617, -24.9975, 0.59", "-5.04639, 70.2357, -25.8284, 0.81", "-4.61231, 70.9987, -26.9996, 1.4", "-4.45604, 71.231, -27.4164, 1.62", "-4.21315, 71.514, -28.0165, 1.84", "-4.19651, 71.5299, -28.055, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "36.1585, 48.1088, -0.692108, 1.18", "36.695, 48.8418, 0.499093, 1.18", "37.0112, 49.3588, 1.09114, 0.96", "37.0364, 49.4044, 1.12427, 0.96", "37.42, 50.0803, 1.42335, 0.74", "37.449, 50.1313, 1.4376, 0.74", "37.6868, 50.5332, 1.50165, 0.88", "38.0475, 51.1027, 1.49629, 0.88", "38.4551, 51.6763, 1.47487, 0.59", "38.895, 52.1684, 1.50032, 0.52", "39.2829, 52.517, 1.55192, 0.81", "39.8199, 52.9719, 1.64279, 0.52", "40.7318, 53.657, 1.85103, 0.88", "40.8828, 53.7551, 1.90228, 0.88", "41.7881, 54.2364, 2.31584, 1.33", "41.9396, 54.2998, 2.40569, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "36.1585, 48.1088, -0.692108, 1.11", "37.9063, 47.0078, -3.23782, 1.11", "38.5423, 46.6954, -3.9712, 1.03", "39.2987, 46.3525, -4.73548, 0.88", "40.747, 45.7356, -5.94928, 0.59", "41.5746, 45.3608, -6.59426, 0.81", "42.3167, 45.0055, -7.16515, 0.81", "42.9706, 44.7101, -7.59733, 1.03", "43.2467, 44.6106, -7.80443, 1.03", "44.1759, 44.3193, -8.6609, 1.03", "45.4884, 43.8233, -10.0828, 0.66", "46.4521, 43.362, -11.3114, 0.81", "47.3122, 42.8266, -12.5714, 0.59", "48.0623, 42.2365, -13.8359, 0.96", "49.045, 41.2924, -15.6746, 0.59", "49.6742, 40.5458, -17.0006, 0.59", "50.2638, 39.7521, -18.2236, 0.96", "50.8121, 38.9869, -19.2203, 0.81", "51.3905, 38.2042, -20.0539, 0.81", "51.78, 37.7505, -20.4531, 0.96", "52.7374, 36.9376, -21.1591, 0.37", "53.6808, 36.4298, -21.7304, 0.37", "54.8614, 36.0446, -22.3408, 0.44", "55.6633, 35.8996, -22.7369, 0.81", "56.6084, 35.7998, -23.1967, 1.03", "58.0003, 35.6551, -23.8971, 0.52", "58.4914, 35.5634, -24.1699, 0.44", "58.5528, 35.5402, -24.2143, 0.44", "59.7386, 34.7535, -25.188, 0.44", "60.1377, 34.3967, -25.5305, 0.88", "60.8297, 33.6541, -26.0772, 1.03", "61.7663, 32.6034, -26.6528, 1.03", "62.6313, 31.6739, -27.0903, 0.96", "63.5707, 30.8003, -27.4448, 0.52", "63.629, 30.7523, -27.4594, 0.52", "64.3744, 30.2816, -27.5722, 0.59", "65.4154, 29.8308, -27.6085, 0.59", "66.195, 29.5971, -27.5522, 0.29", "67.3604, 29.3256, -27.4103, 0.29", "67.435, 29.309, -27.4013, 0.29", "68.355, 29.0561, -27.2954, 0.66", "69.0932, 28.8123, -27.2148, 0.81", "70.0011, 28.3959, -27.108, 0.88", "70.1314, 28.3146, -27.0817, 0.88", "70.8377, 27.7683, -26.9034, 1.03", "71.4031, 27.3052, -26.7633, 1.03", "71.4607, 27.2557, -26.7507, 1.03", "72.1938, 26.6133, -26.5912, 0.81", "73.4015, 25.5773, -26.3491, 0.37", "74.0613, 25.0476, -26.2411, 0.66", "74.6161, 24.6227, -26.1711, 0.66", "75.4069, 24.0376, -26.1395, 0.52", "76.0538, 23.5811, -26.1871, 0.52", "76.9782, 22.936, -26.3506, 0.96", "77.6517, 22.4286, -26.542, 1.25", "78.4701, 21.7752, -26.8022, 1.03", "79.3438, 21.0328, -27.105, 0.81", "80.2749, 20.2496, -27.4487, 0.66", "80.755, 19.878, -27.6224, 0.74", "81.3197, 19.4746, -27.8107, 0.74", "82.172, 18.9206, -28.0319, 0.37", "82.2282, 18.8886, -28.0409, 0.37", "83.0185, 18.4885, -28.0906, 0.29", "84.1527, 17.975, -28.2375, 0.66", "84.9674, 17.6204, -28.4066, 1.03", "85.8183, 17.2418, -28.6284, 0.74", "86.8083, 16.766, -28.93, 0.74", "87.4168, 16.4306, -29.1307, 0.96", "88.8529, 15.5004, -29.6393, 1.18", "89.4012, 15.1153, -29.8469, 0.96", "90.106, 14.6039, -30.1105, 0.44", "90.1738, 14.5541, -30.1353, 0.44", "91.0146, 13.9116, -30.4523, 0.66", "91.5656, 13.4863, -30.676, 0.81", "91.8298, 13.2821, -30.8083, 0.81", "92.4496, 12.8233, -31.1858, 0.66", "92.6662, 12.6735, -31.3234, 0.66", "93.4787, 12.1481, -31.7858, 0.66", "94.4221, 11.5847, -32.2709, 0.44", "95.8826, 10.7141, -32.932, 0.37", "96.6482, 10.2308, -33.2431, 0.88", "97.7526, 9.50783, -33.5821, 0.88", "98.6562, 8.93094, -33.7631, 1.03", "99.3864, 8.48618, -33.8236, 1.03", "100.089, 8.10045, -33.8152, 0.74", "100.965, 7.66949, -33.7464, 0.52", "102.081, 7.15939, -33.6709, 0.52", "103.027, 6.72845, -33.6226, 0.29", "103.108, 6.68967, -33.625, 0.29", "103.835, 6.27776, -33.6723, 0.29", "104.448, 5.84669, -33.7581, 0.59", "104.536, 5.77072, -33.7771, 0.59", "105.151, 5.05531, -34.0083, 0.88", "105.696, 4.2294, -34.256, 0.74", "106.166, 3.33562, -34.5697, 0.44", "106.488, 2.55922, -34.87, 0.29", "106.636, 2.11783, -35.0554, 0.59", "106.801, 1.43393, -35.357, 0.44", "106.882, 0.847292, -35.6349, 0.44", "106.91, -0.277947, -36.1469, 0.81", "106.903, -0.348202, -36.1775, 0.81", "106.791, -1.01958, -36.4123, 1.03", "106.63, -1.83055, -36.6437, 0.88", "106.616, -1.9037, -36.6601, 0.88", "106.464, -2.9438, -36.8358, 0.59", "106.397, -3.68626, -36.9118, 0.59", "106.376, -4.52435, -36.9796, 0.88", "106.383, -4.75636, -36.9941, 0.88", "106.512, -5.89903, -37.0319, 0.37", "106.64, -6.58663, -37.0498, 0.74", "106.811, -7.24775, -37.061, 0.96", "107.059, -8.16608, -37.1141, 0.96", "107.078, -8.23938, -37.12, 0.96", "107.296, -9.02894, -37.2275, 1.25", "107.65, -10.0965, -37.418, 0.44", "107.915, -10.751, -37.5987, 0.37", "108.375, -11.7085, -37.9292, 0.96", "108.821, -12.5157, -38.2414, 0.96", "109.545, -13.6507, -38.7434, 0.74", "110.16, -14.5066, -39.1972, 0.74", "110.969, -15.5098, -39.7832, 0.29", "111.388, -16.0007, -40.0511, 0.52", "112.038, -16.7629, -40.4095, 0.88", "112.589, -17.431, -40.6816, 1.03", "113.514, -18.6418, -41.0591, 0.29", "113.896, -19.1911, -41.1378, 0.88", "114.612, -20.2256, -41.0311, 0.81", "115.042, -20.7875, -40.8136, 0.96", "115.545, -21.3578, -40.4064, 0.59", "115.596, -21.4097, -40.3541, 0.59", "116.661, -22.3788, -39.1554, 0.52", "117.265, -22.9244, -38.4988, 0.52", "117.958, -23.5764, -37.8265, 0.88", "118.004, -23.6241, -37.7872, 0.88", "118.246, -23.9131, -37.5902, 1.03", "118.743, -24.6133, -37.2157, 1.03", "119.176, -25.4122, -36.8949, 0.44", "119.562, -26.3235, -36.5567, 0.44", "119.888, -27.2032, -36.2472, 0.44", "120.225, -28.0981, -35.9165, 0.52", "120.483, -28.7486, -35.6713, 0.44", "120.885, -29.7032, -35.3139, 0.44", "121.172, -30.3529, -35.0877, 0.81", "121.496, -31.0494, -34.89, 0.81", "121.926, -31.887, -34.6824, 0.37", "122.374, -32.7208, -34.5244, 0.81", "122.676, -33.2529, -34.4343, 0.88", "122.907, -33.6526, -34.3787, 0.88", "123.295, -34.3405, -34.2715, 0.66", "123.87, -35.3927, -34.0965, 0.44", "124.379, -36.2769, -33.9526, 0.29", "124.812, -36.9465, -33.8892, 0.59", "125.245, -37.5733, -33.8707, 0.74", "125.34, -37.7078, -33.875, 0.74", "125.777, -38.3534, -33.972, 0.59", "126.383, -39.3339, -34.2557, 0.44", "126.987, -40.4163, -34.6332, 0.44", "127.249, -40.9656, -34.8373, 0.44", "127.557, -41.7259, -35.1157, 0.74", "127.914, -42.7587, -35.4823, 0.74", "128.23, -43.86, -35.8571, 0.29", "128.345, -44.3278, -36.0123, 0.96", "128.478, -44.8436, -36.1647, 0.96", "128.704, -45.5763, -36.3807, 0.81", "128.732, -45.6481, -36.3991, 0.81", "129.002, -46.2049, -36.4885, 0.96", "129.449, -47.0105, -36.6137, 0.52", "129.783, -47.572, -36.71, 0.52", "129.816, -47.6277, -36.7192, 0.52", "130.227, -48.4044, -36.874, 0.44", "130.669, -49.3282, -37.0765, 0.59", "131.275, -50.6977, -37.3801, 0.29", "131.484, -51.1913, -37.4877, 0.96", "131.811, -52.0112, -37.6697, 1.33", "132.344, -53.3994, -37.9681, 0.29", "132.814, -54.6442, -38.2212, 0.29", "133.08, -55.3495, -38.3516, 0.88", "133.108, -55.4234, -38.3597, 0.88", "133.406, -56.2564, -38.3885, 0.88", "133.843, -57.5421, -38.3159, 0.29", "134.157, -58.5117, -38.1587, 0.29", "134.244, -58.8167, -38.0831, 0.66", "134.508, -59.9082, -37.7696, 0.66", "134.687, -60.7071, -37.5178, 0.66", "134.844, -61.4345, -37.2711, 0.96", "134.972, -62.1182, -37.0455, 0.74", "135.104, -62.891, -36.7871, 0.52", "135.269, -63.8596, -36.4431, 0.44", "135.317, -64.0976, -36.3617, 0.44", "135.549, -65.0983, -36.0601, 0.37", "135.861, -66.2947, -35.7387, 0.37", "136.206, -67.5703, -35.4322, 0.74", "136.541, -68.6273, -35.2738, 0.29", "136.967, -69.6536, -35.1963, 0.29", "137.497, -70.7217, -35.2331, 0.74", "137.769, -71.1462, -35.3087, 1.03", "137.815, -71.2042, -35.3284, 1.03", "138.849, -72.3185, -35.8509, 0.22", "139.711, -73.1997, -36.3323, 0.22", "140.236, -73.7252, -36.6217, 0.81", "140.796, -74.3023, -36.9011, 0.81", "140.845, -74.3566, -36.9252, 0.81", "141.575, -75.2824, -37.2536, 0.29", "142.036, -76.0453, -37.507, 0.44", "142.084, -76.1373, -37.5487, 0.44", "142.378, -76.6711, -37.8307, 0.44", "142.413, -76.7387, -37.8784, 0.44", "142.775, -77.5291, -38.48, 0.52", "143.262, -78.8237, -39.5867, 0.52", "143.55, -79.6248, -40.3768, 0.66", "143.748, -80.1305, -40.9615, 0.59", "144.213, -81.2726, -42.4508, 0.37", "144.424, -81.7774, -43.1195, 0.29", "144.856, -82.7985, -44.4953, 0.74", "145.365, -84.0189, -46.0476, 0.81", "145.988, -85.5962, -47.986, 0.29", "146.195, -86.1634, -48.7103, 0.66", "146.465, -86.8632, -49.6052, 0.29", "146.764, -87.6375, -50.5882, 0.59", "146.945, -88.1277, -51.1872, 0.74", "147.342, -89.3341, -52.5853, 1.33", "147.964, -91.3208, -54.8398, 0.29", "148.089, -91.6857, -55.2584, 0.59", "148.184, -91.9326, -55.5425, 0.59", "148.742, -93.1137, -56.8029, 0.52", "149.051, -93.6485, -57.3218, 0.74", "149.328, -94.0416, -57.6228, 0.74", "149.965, -94.801, -58.0664, 0.37", "150.937, -95.8893, -58.7164, 0.37", "151.668, -96.6504, -59.1311, 0.37", "152.061, -97.0374, -59.3099, 0.66", "152.44, -97.407, -59.4876, 0.88", "152.744, -97.7097, -59.6404, 0.88", "154.016, -99.0006, -60.299, 0.29", "155.066, -100.128, -60.876, 0.22", "155.268, -100.363, -60.9937, 0.66", "155.979, -101.249, -61.4265, 0.22", "156.238, -101.614, -61.6129, 0.52", "156.67, -102.324, -61.9637, 0.29", "156.867, -102.733, -62.1407, 0.74", "157.032, -103.185, -62.34, 0.74", "157.314, -104.117, -62.764, 0.22", "157.6, -105.246, -63.2698, 0.37", "157.717, -105.751, -63.5288, 0.37", "157.825, -106.307, -63.8307, 0.59", "157.923, -106.788, -64.0884, 0.59", "158.08, -107.613, -64.5244, 0.22", "158.157, -107.982, -64.7094, 0.52", "158.499, -109.259, -65.3251, 0.29", "158.691, -109.884, -65.6678, 1.11", "158.909, -110.536, -66.064, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-16.3996, -191.962, -162.136, 0.29", "-16.6996, -193.686, -162.436, 0.29", "-16.9436, -194.753, -162.622, 0.29", "-17.373, -196.011, -162.708, 0.22", "-17.7543, -196.76, -162.649, 0.74", "-18.1036, -197.307, -162.504, 0.88", "-18.152, -197.38, -162.478, 0.88", "-18.507, -197.801, -162.266, 0.88", "-19.5773, -198.902, -161.557, 0.29", "-20.5105, -199.795, -160.821, 0.29", "-21.429, -200.667, -159.989, 0.88", "-21.9819, -201.184, -159.454, 0.88" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-16.3996, -191.962, -162.136, 0.59", "-17.5408, -193.962, -167.768, 0.59", "-17.8509, -194.504, -169.222, 0.37", "-18.2999, -195.138, -170.934, 0.37", "-18.9352, -195.988, -173.128, 0.96", "-19.5494, -196.827, -175.164, 1.33", "-20.8018, -198.653, -179.301, 0.59", "-21.0981, -199.189, -180.265, 0.29", "-21.49, -200.027, -181.761, 0.29", "-21.666, -200.615, -182.838, 0.88", "-21.7377, -200.987, -183.551, 0.88", "-21.8251, -201.77, -185.073, 0.66", "-21.8496, -202.768, -186.989, 0.88", "-21.8016, -204.334, -189.921, 1.4", "-21.641, -207.364, -195.622, 0.59", "-21.643, -208.698, -198.271, 0.59", "-21.6493, -209.214, -199.329, 0.52", "-21.6445, -209.557, -200.041, 1.03", "-21.6504, -210.045, -201.039, 0.88", "-21.776, -211.798, -204.599, 0.22", "-22.0249, -212.875, -206.774, 0.59", "-22.434, -213.986, -209.333, 0.74", "-22.8746, -214.961, -211.839, 0.44", "-23.1701, -215.515, -213.3, 0.74", "-23.7476, -216.579, -215.919, 1.11", "-24.0804, -217.177, -217.182, 0.96", "-25.4158, -219.387, -221.295, 0.74", "-25.451, -219.433, -221.374, 0.74", "-26.1058, -220.217, -222.64, 0.74", "-27.0461, -221.43, -224.399, 0.74", "-28.0262, -222.762, -226.022, 0.37", "-28.5333, -223.523, -226.871, 1.03", "-29.048, -224.361, -227.636, 1.18", "-30.4709, -226.706, -229.806, 0.29", "-30.9506, -227.487, -230.542, 0.59", "-31.3489, -228.117, -231.087, 0.59", "-31.916, -229.108, -231.78, 0.44", "-32.348, -229.922, -232.246, 0.29", "-32.3975, -230.014, -232.289, 0.29", "-32.8176, -230.736, -232.553, 0.59", "-33.1697, -231.518, -233.102, 0.59", "-33.3393, -232.254, -233.849, 0.44", "-33.351, -233.017, -234.823, 0.29", "-33.2605, -233.892, -236.174, 0.88", "-33.0676, -234.84, -237.851, 1.11", "-32.4887, -236.978, -242.032, 0.74", "-32.1499, -238.183, -244.457, 0.59", "-31.7816, -239.537, -247.221, 0.29", "-31.4537, -240.998, -250.209, 0.74", "-31.1726, -242.955, -254.136, 1.03", "-31.1621, -244.915, -257.863, 0.52", "-31.3304, -245.67, -259.095, 0.44", "-31.5509, -246.19, -259.818, 0.88", "-32.164, -247.17, -260.882, 1.11", "-32.6371, -247.742, -261.292, 1.11", "-33.6898, -248.776, -261.728, 0.59", "-34.8713, -249.882, -262.027, 0.44", "-35.5363, -250.548, -262.228, 0.66", "-36.6778, -251.848, -262.626, 0.59", "-37.3947, -252.902, -263.281, 0.37", "-37.9371, -253.83, -264.104, 0.44", "-38.5221, -254.958, -265.355, 0.66", "-38.9237, -255.824, -266.452, 0.81", "-39.2638, -256.64, -267.576, 0.88", "-40.9811, -260.643, -273.558, 0.52", "-41.2792, -261.224, -274.519, 0.29", "-41.4774, -261.53, -275.09, 0.59", "-41.7675, -261.837, -275.717, 0.59", "-42.6498, -262.435, -276.96, 0.37", "-43.7431, -262.879, -277.865, 0.37", "-45.1083, -263.193, -278.272, 0.37", "-45.2249, -263.218, -278.307, 0.37", "-46.9887, -263.533, -278.807, 0.22", "-47.7004, -263.606, -278.987, 0.37", "-48.3798, -263.603, -279.112, 0.37", "-49.9671, -263.493, -279.423, 0.29" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "12.3527, -125.819, -70.5809, 0.29", "13.1841, -126.134, -71.0423, 0.29", "13.5526, -126.31, -71.2484, 0.37", "13.6129, -126.344, -71.2787, 0.37", "14.3316, -126.862, -71.6505, 0.22", "14.3933, -126.91, -71.6823, 0.22", "14.7885, -127.227, -71.8812, 0.52", "14.8373, -127.275, -71.9055, 0.52", "15.2449, -127.699, -72.0666, 0.52", "15.9749, -128.437, -72.2945, 0.22", "16.0269, -128.488, -72.3071, 0.22", "16.261, -128.718, -72.364, 0.37", "16.6782, -129.127, -72.4642, 0.22", "17.5256, -129.956, -72.6511, 0.96", "17.5788, -130.009, -72.6601, 0.96" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "12.3527, -125.819, -70.5809, 0.37", "13.3215, -127.565, -71.7773, 0.37", "13.9068, -128.82, -72.6209, 0.66", "14.159, -129.446, -73.0231, 0.88", "14.3946, -130.137, -73.4428, 1.18", "15.0143, -132.319, -74.6975, 0.44", "15.1582, -132.913, -75.0146, 0.29", "15.2732, -133.846, -75.4553, 0.88", "15.3035, -134.388, -75.6714, 1.11", "15.3249, -135.083, -75.8936, 0.66", "15.3257, -135.995, -76.0781, 0.37", "15.3264, -136.841, -76.0823, 0.52", "15.3394, -137.006, -76.068, 0.52", "15.5244, -138.018, -75.913, 0.59", "15.6853, -138.665, -75.786, 0.66", "15.7254, -138.806, -75.7447, 0.66", "15.9494, -139.622, -75.4673, 0.37", "16.1213, -140.544, -75.0084, 0.37", "16.2234, -141.241, -74.6005, 0.37", "16.3193, -141.971, -74.1369, 0.96", "16.4825, -143.072, -73.3923, 1.25", "16.6701, -144.039, -72.7315, 0.96", "17.1595, -146.373, -71.0157, 0.52", "17.3721, -147.327, -70.2853, 0.59", "17.5097, -147.894, -69.8421, 0.74", "17.7039, -148.601, -69.2983, 0.74", "18.0726, -149.728, -68.518, 0.29", "18.4495, -150.721, -67.8875, 0.66", "18.4779, -150.792, -67.8573, 0.66", "18.6708, -151.421, -67.6436, 0.29", "18.816, -152.088, -67.474, 0.74", "18.9171, -152.804, -67.3599, 0.88", "18.9274, -152.885, -67.35, 0.88", "19.0773, -153.807, -67.2677, 0.37", "19.2659, -154.793, -67.1551, 0.59", "19.3923, -155.367, -67.0764, 0.88", "19.6377, -156.351, -66.9243, 0.29", "19.8388, -157.111, -66.7718, 0.22", "19.9339, -157.461, -66.6916, 0.81", "20.0999, -158.035, -66.5405, 1.18", "20.1246, -158.113, -66.5181, 1.18", "20.4083, -158.989, -66.249, 1.03", "20.711, -160.205, -65.8013, 0.29", "20.8796, -161.333, -65.3724, 0.22", "20.8826, -161.444, -65.3266, 0.22", "20.8396, -162.275, -64.9702, 0.29", "20.7851, -162.986, -64.6659, 1.18", "20.6735, -164.444, -63.9901, 0.74", "20.6251, -165.194, -63.6369, 0.52", "20.5798, -166.151, -63.1239, 0.29", "20.5392, -166.941, -62.6425, 0.52", "20.5026, -167.742, -62.0805, 0.96", "20.523, -168.818, -61.2988, 1.18", "20.5915, -169.833, -60.5028, 1.03", "20.6908, -171.198, -59.379, 0.74", "20.7686, -172.662, -58.1905, 0.66", "20.7724, -173.565, -57.4994, 1.03", "20.734, -174.824, -56.6315, 0.88", "20.6811, -176.276, -55.7885, 0.74", "20.659, -177.38, -55.2796, 0.74", "20.6646, -178.416, -54.9489, 0.74", "20.694, -179.668, -54.6859, 0.52", "20.7296, -180.68, -54.5315, 0.52", "20.7791, -181.745, -54.4067, 0.44", "20.859, -182.763, -54.334, 0.74", "20.9434, -183.514, -54.2777, 0.96", "21.0362, -184.196, -54.2209, 0.96", "21.2456, -185.599, -54.1005, 0.37", "21.4551, -186.778, -53.9946, 0.37", "21.4689, -186.846, -53.9882, 0.37", "21.7218, -187.735, -53.886, 0.66", "21.9297, -188.399, -53.8081, 0.88", "22.2307, -189.248, -53.7103, 0.59", "22.5645, -190.047, -53.6334, 0.22", "22.6045, -190.121, -53.6226, 0.22", "23.1347, -190.98, -53.4695, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-49.1645, -223.742, -64.2988, 0.52", "-47.8985, -224.239, -63.4648, 0.52", "-47.264, -224.554, -63.0797, 0.52", "-46.5325, -224.972, -62.7514, 0.66", "-45.7457, -225.46, -62.4768, 0.59", "-44.7789, -226.111, -62.1774, 0.29", "-44.4775, -226.332, -62.1134, 0.59", "-44.0875, -226.632, -62.1072, 0.59", "-42.9767, -227.536, -62.1719, 0.29", "-42.3628, -228.071, -62.2355, 0.88", "-42.094, -228.305, -62.2781, 0.88", "-40.5671, -229.428, -62.6379, 0.29", "-39.5185, -230.072, -62.9319, 0.59", "-39.0264, -230.305, -63.102, 0.44", "-38.9743, -230.325, -63.1226, 0.44", "-37.7711, -230.693, -63.6322, 0.44", "-35.6225, -231.196, -64.5704, 0.29", "-35.1711, -231.269, -64.7678, 0.29", "-33.1853, -231.518, -65.5563, 0.29", "-33.1234, -231.525, -65.5828, 0.29", "-33.0671, -231.532, -65.6059, 0.44", "-32.9557, -231.546, -65.6494, 0.44", "-32.1115, -231.656, -65.9786, 0.29", "-31.4005, -231.742, -66.2542, 0.81", "-25.7661, -232.396, -68.4273, 0.29", "-24.5563, -232.533, -68.8972, 0.22", "-23.2824, -232.689, -69.4064, 0.44", "-20.8335, -233.045, -70.4551, 0.29", "-20.3591, -233.121, -70.6716, 0.88", "-20.0326, -233.195, -70.8309, 0.88", "-19.9805, -233.21, -70.8551, 0.88", "-17.4157, -234.003, -72.131, 0.29", "-14.9051, -234.759, -73.4565, 0.52", "-14.855, -234.774, -73.4838, 0.52", "-11.5812, -235.714, -75.3038, 0.22", "-10.8165, -235.92, -75.7309, 0.37", "-9.33846, -236.298, -76.5601, 0.96", "-7.38669, -236.72, -77.6565, 0.22", "-7.05817, -236.774, -77.8372, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-49.1645, -223.742, -64.2988, 0.81", "-49.2565, -224.407, -64.4738, 0.81", "-49.3388, -225.031, -64.6143, 1.03", "-49.4531, -225.96, -64.7926, 0.96", "-49.5434, -226.796, -64.9231, 0.74", "-49.6581, -227.527, -64.9548, 0.29", "-49.7475, -227.978, -64.942, 0.29", "-49.828, -228.31, -64.9, 0.52", "-49.929, -228.602, -64.8377, 0.52", "-50.0951, -228.971, -64.7324, 0.52", "-50.7102, -230.23, -64.3657, 0.29", "-50.9785, -230.795, -64.2169, 0.52", "-51.1349, -231.14, -64.1234, 0.81", "-51.4159, -231.804, -63.9188, 0.88", "-51.5938, -232.344, -63.7309, 1.18", "-51.7727, -233.051, -63.4687, 1.4", "-51.9303, -234.097, -63.0711, 0.52", "-52.0007, -235.05, -62.6664, 0.52", "-52.0051, -236.178, -62.1664, 0.52", "-51.9494, -237.33, -61.6536, 0.74", "-51.9446, -237.399, -61.624, 0.74", "-51.8872, -238.222, -61.3291, 0.29", "-51.8408, -239.161, -61.0911, 0.29", "-51.8027, -240.197, -60.9452, 0.66", "-51.7971, -240.766, -60.9183, 0.88", "-51.8306, -241.532, -60.9296, 0.88", "-51.8712, -242.711, -61.0015, 0.29", "-51.8781, -243.208, -61.0495, 0.88", "-51.8747, -243.284, -61.0635, 0.88", "-51.8175, -243.807, -61.1836, 1.03", "-51.8049, -243.891, -61.203, 1.03", "-51.6145, -245.143, -61.4666, 0.74", "-51.4573, -246.056, -61.5969, 0.88", "-51.2326, -247.288, -61.7206, 1.18", "-51.1311, -247.892, -61.7577, 1.18", "-51.0255, -248.59, -61.7696, 0.66", "-50.9059, -249.519, -61.7375, 0.29", "-50.8176, -250.433, -61.6428, 0.29", "-50.7776, -251.052, -61.5534, 0.59", "-50.7556, -251.82, -61.4033, 0.74", "-50.7473, -252.588, -61.2512, 0.74", "-50.7861, -253.042, -61.1314, 0.74", "-50.878, -253.506, -60.9964, 0.88", "-51.0819, -254.247, -60.7599, 0.81", "-51.3501, -255.145, -60.4284, 0.81", "-51.6237, -256.017, -60.0586, 0.59", "-52.1114, -257.585, -59.3228, 0.37", "-52.3155, -258.275, -58.9674, 0.52", "-52.4551, -258.838, -58.6514, 0.44", "-52.5342, -259.337, -58.3461, 0.52", "-52.5409, -259.474, -58.2611, 0.52", "-52.4764, -259.985, -57.9918, 0.37", "-52.4405, -260.134, -57.9397, 0.37", "-52.3327, -260.756, -57.7669, 0.81", "-52.3098, -261.222, -57.7174, 0.96", "-52.3098, -261.289, -57.7225, 0.96", "-52.3313, -261.685, -57.8022, 0.81", "-52.3832, -262.493, -58.06, 0.52", "-52.4223, -263.033, -58.2543, 0.52", "-52.4894, -263.978, -58.6055, 0.29", "-52.558, -264.95, -58.9534, 0.74", "-52.605, -265.623, -59.1834, 0.88", "-52.6933, -266.593, -59.4526, 0.52", "-52.8125, -267.569, -59.6489, 0.52", "-52.9344, -268.275, -59.7239, 0.74", "-53.0808, -268.948, -59.7255, 0.44", "-53.1206, -269.102, -59.7135, 0.44", "-53.4915, -270.307, -59.5836, 0.44", "-53.7729, -271.009, -59.4926, 0.22", "-54.0973, -271.663, -59.44, 0.22", "-54.35, -272.138, -59.4627, 0.74", "-54.3843, -272.203, -59.4737, 0.74", "-54.6511, -272.734, -59.6187, 0.96", "-54.6813, -272.8, -59.6448, 0.96", "-54.9384, -273.432, -59.8824, 0.96", "-55.2577, -274.559, -60.2498, 0.44", "-55.4259, -275.156, -60.3752, 0.52", "-55.4458, -275.227, -60.3846, 0.52", "-55.6076, -275.824, -60.4479, 0.81", "-55.8074, -276.658, -60.5272, 0.74", "-56.0688, -277.861, -60.6168, 0.37", "-56.4303, -279.381, -60.7222, 0.37", "-56.5919, -279.938, -60.7525, 1.18", "-56.9214, -280.951, -60.8006, 0.96", "-57.3065, -282.028, -60.8472, 0.52", "-57.783, -283.248, -60.8995, 0.52", "-58.3539, -284.607, -60.9365, 0.74", "-58.9213, -286.04, -60.9663, 0.81", "-58.9541, -286.118, -60.9634, 0.81", "-59.2514, -286.741, -60.8797, 1.03", "-59.2918, -286.817, -60.8642, 1.03", "-59.6648, -287.517, -60.6856, 0.52", "-59.9935, -288.196, -60.5081, 0.37", "-60.2676, -288.863, -60.3599, 0.88", "-60.556, -289.585, -60.2083, 0.96", "-60.7698, -290.147, -60.0868, 0.74", "-60.997, -290.816, -59.9465, 0.22", "-61.1971, -291.5, -59.7865, 0.22", "-61.3094, -292.091, -59.6129, 0.74", "-61.3369, -292.513, -59.4568, 1.03", "-61.3086, -293.023, -59.2321, 1.03", "-61.2249, -293.65, -58.8651, 0.59", "-61.0669, -294.503, -58.2866, 0.37", "-60.8997, -295.339, -57.6828, 0.22", "-60.7921, -295.969, -57.2416, 0.81", "-60.7186, -296.485, -56.9068, 0.81", "-60.6216, -297.441, -56.3642, 0.29", "-60.5827, -297.931, -56.1175, 0.59", "-60.5441, -298.447, -55.9041, 0.74", "-60.5114, -299.256, -55.6354, 0.74", "-60.4809, -300.0, -55.4437, 0.52", "-60.3438, -301.233, -55.2538, 0.22", "-60.2411, -301.881, -55.2141, 0.22", "-60.1625, -302.344, -55.202, 0.74", "-60.0586, -302.959, -55.2128, 0.74", "-59.8147, -304.429, -55.2939, 0.22", "-59.6078, -305.989, -55.4522, 0.81", "-59.555, -306.631, -55.5353, 0.81", "-59.5239, -307.724, -55.6752, 0.22", "-59.5485, -308.608, -55.7685, 0.22", "-59.5773, -308.986, -55.7998, 0.81", "-59.6524, -309.54, -55.8277, 1.03", "-59.8916, -310.822, -55.8263, 0.29", "-59.9757, -311.289, -55.8245, 0.29", "-60.172, -312.358, -55.826, 0.29", "-60.358, -313.274, -55.8189, 0.15", "-60.438, -313.641, -55.82, 0.52", "-60.5031, -313.949, -55.8195, 0.66" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-20.5834, -82.9121, -2.59767, 0.96", "-20.3071, -83.9711, -2.98257, 0.96", "-20.0485, -85.0891, -3.36454, 0.96", "-19.8027, -86.3384, -3.75392, 0.96", "-19.5871, -87.6306, -4.12347, 0.81", "-19.4024, -88.9267, -4.51358, 0.66", "-19.2727, -90.0221, -4.84076, 0.66", "-19.264, -90.1464, -4.87501, 0.66", "-19.2231, -90.9604, -5.09896, 0.88", "-19.1888, -91.4984, -5.24272, 1.03", "-18.9735, -92.8783, -5.63186, 0.74", "-18.7488, -93.713, -5.87532, 0.74", "-18.4096, -94.6019, -6.14204, 0.74", "-17.8996, -95.7056, -6.46585, 0.96", "-17.5414, -96.358, -6.64702, 1.03", "-17.0443, -97.2307, -6.85004, 1.03", "-16.4608, -98.3285, -7.0322, 0.88", "-16.1387, -99.0639, -7.12659, 0.88", "-16.0844, -99.2968, -7.1444, 0.88", "-16.1271, -99.8764, -7.10414, 0.59", "-16.578, -100.996, -6.93382, 0.52", "-17.1621, -101.831, -6.75529, 0.74", "-17.6882, -102.367, -6.56791, 0.66", "-18.434, -103.014, -6.29525, 0.52", "-19.6229, -103.958, -5.82375, 0.52", "-20.2243, -104.413, -5.57241, 0.74", "-21.0003, -105.003, -5.24821, 1.03", "-21.972, -105.806, -4.85958, 1.03", "-22.6343, -106.407, -4.61878, 1.03", "-23.5318, -107.326, -4.33268, 0.74", "-24.0837, -107.971, -4.21673, 0.66", "-24.6429, -108.716, -4.09326, 0.52", "-25.0863, -109.418, -3.97608, 0.52", "-25.1161, -109.474, -3.96825, 0.52", "-25.3964, -110.073, -3.85051, 0.66", "-25.6355, -110.67, -3.71024, 0.81", "-25.9609, -111.499, -3.46687, 0.52", "-26.3626, -112.519, -3.20721, 0.52", "-26.448, -112.726, -3.19, 0.81", "-26.7611, -113.394, -3.26618, 0.81", "-27.0765, -113.933, -3.44827, 0.96", "-27.5875, -114.615, -3.86817, 1.03", "-28.3505, -115.355, -4.5319, 1.18", "-29.3168, -116.113, -5.36007, 0.81", "-29.7921, -116.439, -5.76817, 0.88", "-30.3947, -116.794, -6.26291, 1.18", "-31.0356, -117.148, -6.7459, 1.55", "-31.9778, -117.677, -7.32841, 0.66", "-32.4158, -117.957, -7.51748, 0.66", "-32.8135, -118.278, -7.61593, 0.52", "-33.5013, -118.97, -7.70682, 0.52", "-34.0257, -119.637, -7.7163, 0.37", "-34.595, -120.545, -7.60273, 0.37", "-34.9372, -121.222, -7.47501, 0.74", "-35.3057, -122.016, -7.27965, 1.25", "-35.3285, -122.063, -7.26642, 1.25", "-35.6833, -122.746, -7.07496, 1.18", "-36.2586, -123.722, -6.81368, 1.03", "-36.6514, -124.309, -6.68765, 0.66", "-37.1403, -124.987, -6.57654, 0.37", "-37.7878, -125.847, -6.49617, 0.37", "-38.2417, -126.427, -6.47536, 0.44", "-38.2887, -126.483, -6.47745, 0.44", "-38.8871, -127.145, -6.56744, 0.37", "-39.3304, -127.633, -6.64805, 0.59", "-39.6011, -127.943, -6.70659, 0.59", "-40.0563, -128.522, -6.82215, 0.44", "-40.4245, -129.02, -6.92252, 0.66", "-40.8334, -129.589, -7.03316, 0.88", "-41.2824, -130.239, -7.15469, 0.88", "-41.9107, -131.155, -7.34045, 0.66", "-42.3931, -131.885, -7.5041, 0.96", "-42.7491, -132.41, -7.63504, 1.18", "-43.5235, -133.446, -7.90495, 0.88", "-43.8477, -133.813, -8.00821, 0.96", "-44.636, -134.506, -8.22785, 0.59", "-44.6819, -134.533, -8.23823, 0.59", "-45.6096, -134.869, -8.37781, 0.59", "-46.4249, -135.05, -8.46848, 0.52", "-47.0168, -135.137, -8.51536, 0.52", "-47.6315, -135.234, -8.51103, 0.74", "-48.2801, -135.352, -8.46266, 0.96", "-48.9157, -135.495, -8.40503, 0.81", "-50.0353, -135.818, -8.29291, 0.96", "-50.7601, -136.082, -8.22915, 0.96", "-51.8571, -136.534, -8.12919, 0.44", "-52.5231, -136.844, -8.07375, 0.44", "-53.2416, -137.212, -8.03435, 0.66", "-53.8449, -137.522, -8.03645, 0.59", "-54.5557, -137.891, -8.06679, 0.59", "-54.6215, -137.925, -8.07359, 0.59", "-55.165, -138.212, -8.18172, 0.88", "-56.1408, -138.799, -8.39964, 0.96", "-56.8591, -139.297, -8.57617, 0.37", "-56.9628, -139.383, -8.59596, 0.37", "-57.622, -140.069, -8.67368, 0.37", "-58.1105, -140.688, -8.69118, 0.29", "-58.5409, -141.367, -8.66218, 0.29", "-58.8402, -141.905, -8.61493, 0.52", "-59.475, -143.051, -8.49823, 1.03", "-59.8078, -143.611, -8.44609, 1.25", "-60.0913, -144.048, -8.41799, 1.25", "-60.6761, -144.786, -8.40189, 0.88", "-61.2847, -145.405, -8.43739, 0.74", "-61.9473, -145.974, -8.54255, 0.74", "-62.4857, -146.376, -8.67683, 0.96", "-63.2384, -146.894, -8.88288, 0.66", "-63.8695, -147.324, -9.10289, 0.74", "-64.2428, -147.589, -9.24947, 1.03", "-64.7634, -147.999, -9.47329, 1.4", "-64.8034, -148.036, -9.49148, 1.4", "-65.1762, -148.469, -9.66501, 1.4", "-65.8366, -149.504, -9.95865, 0.52", "-66.1543, -150.151, -10.1072, 0.81", "-66.3663, -150.618, -10.198, 0.88", "-66.5761, -151.099, -10.2732, 0.52", "-66.9026, -151.813, -10.3799, 0.44", "-67.1908, -152.423, -10.4615, 0.44", "-67.48, -152.928, -10.5127, 0.44", "-67.8314, -153.404, -10.5965, 0.66", "-67.9276, -153.493, -10.6082, 0.66", "-68.3464, -153.759, -10.6267, 0.88", "-68.4307, -153.798, -10.6263, 0.88", "-68.981, -154.043, -10.5998, 0.96", "-69.2993, -154.204, -10.5759, 0.66", "-70.0825, -154.653, -10.5144, 0.52", "-70.6151, -154.985, -10.4804, 0.44", "-71.0055, -155.257, -10.4654, 0.74", "-71.498, -155.638, -10.4635, 0.81", "-72.1073, -156.204, -10.4851, 0.52", "-72.1565, -156.259, -10.4929, 0.52", "-72.4631, -156.657, -10.588, 0.81", "-72.9022, -157.31, -10.7563, 0.96", "-73.1395, -157.711, -10.8647, 1.11", "-73.4906, -158.312, -11.028, 0.81", "-73.9614, -159.085, -11.2725, 0.66", "-73.9904, -159.128, -11.2889, 0.66", "-74.4747, -159.721, -11.5329, 0.52", "-74.9922, -160.159, -11.7361, 0.37", "-75.4459, -160.384, -11.8224, 0.29", "-76.2238, -160.614, -11.8506, 0.66", "-76.6862, -160.721, -11.8213, 0.74", "-77.6254, -160.985, -11.6842, 0.29", "-78.0629, -161.136, -11.5962, 0.66", "-78.6626, -161.407, -11.4577, 0.88", "-79.2401, -161.737, -11.324, 0.88", "-79.5649, -161.952, -11.2516, 0.88", "-80.5015, -162.623, -11.0934, 0.58", "-81.1004, -163.081, -11.0449, 0.81", "-81.6333, -163.502, -11.0269, 1.11", "-82.1091, -163.89, -11.0387, 0.74", "-82.6472, -164.322, -11.0529, 0.88", "-83.182, -164.71, -11.0767, 0.81", "-83.709, -165.045, -11.116, 0.74", "-84.5621, -165.534, -11.1725, 0.44", "-85.3561, -165.964, -11.2215, 0.74", "-85.9968, -166.284, -11.2544, 0.88", "-86.869, -166.623, -11.2249, 0.52", "-87.3722, -166.788, -11.1605, 0.59", "-88.3112, -167.064, -10.9714, 0.59", "-88.3615, -167.079, -10.9584, 0.59", "-88.8601, -167.282, -10.8117, 0.66", "-90.2475, -168.115, -10.4397, 0.59", "-90.8712, -168.624, -10.2852, 0.59", "-91.2652, -169.025, -10.2235, 0.81", "-91.833, -169.693, -10.1852, 0.52", "-92.419, -170.45, -10.221, 0.66", "-93.0512, -171.363, -10.3575, 0.44", "-93.4063, -171.954, -10.4981, 1.11", "-94.0757, -173.09, -10.805, 0.59", "-94.1074, -173.143, -10.8183, 0.59", "-94.4949, -173.757, -10.9608, 0.44", "-94.6856, -174.024, -11.0164, 0.44", "-95.3339, -174.777, -11.1038, 0.44", "-95.794, -175.196, -11.1163, 0.37", "-96.3272, -175.558, -11.0772, 0.29", "-96.793, -175.82, -10.9938, 0.66", "-97.257, -176.026, -10.8767, 1.03", "-97.8357, -176.234, -10.7201, 1.03", "-98.2681, -176.361, -10.6041, 0.81", "-99.0115, -176.596, -10.4183, 0.52", "-99.8249, -176.947, -10.2436, 0.66", "-100.275, -177.221, -10.1559, 0.29", "-100.496, -177.392, -10.1197, 0.59", "-100.892, -177.725, -10.0861, 0.81", "-101.352, -178.097, -10.0747, 0.81", "-101.943, -178.503, -10.1063, 0.52", "-102.673, -178.94, -10.2089, 0.74", "-102.723, -178.965, -10.2161, 0.74", "-103.486, -179.312, -10.3262, 0.44", "-104.025, -179.55, -10.412, 0.74", "-104.613, -179.811, -10.5115, 1.11", "-105.478, -180.223, -10.6638, 0.59", "-105.991, -180.517, -10.7565, 0.66", "-106.502, -180.887, -10.8503, 0.81", "-107.09, -181.443, -10.9587, 0.52", "-107.462, -181.859, -11.0274, 0.66", "-107.792, -182.248, -11.0872, 0.66", "-108.121, -182.621, -11.171, 0.44", "-108.164, -182.666, -11.1846, 0.44", "-108.852, -183.218, -11.4236, 0.37", "-108.969, -183.279, -11.4657, 0.37", "-109.773, -183.461, -11.7563, 0.37", "-110.502, -183.474, -12.0671, 0.29", "-110.936, -183.434, -12.2669, 0.37", "-111.398, -183.374, -12.4645, 0.44", "-112.034, -183.237, -12.747, 0.37", "-112.902, -183.011, -13.1334, 0.29", "-113.865, -182.681, -13.5565, 0.22", "-114.064, -182.604, -13.6317, 0.44", "-114.966, -182.233, -14.021, 0.52" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-20.5834, -82.9121, -2.59767, 0.74", "-21.1129, -83.3711, -2.77086, 0.74", "-21.7591, -83.935, -2.98217, 0.44", "-22.3946, -84.4813, -3.19336, 0.59", "-23.1642, -85.148, -3.49202, 0.37", "-23.7535, -85.6648, -3.72091, 0.59", "-24.0073, -85.8855, -3.82048, 0.88", "-24.0635, -85.9344, -3.84531, 0.88", "-24.2961, -86.1388, -3.96218, 1.11", "-24.8033, -86.5281, -4.2555, 0.88", "-25.411, -86.8939, -4.64709, 0.37", "-25.7792, -87.0715, -4.90697, 0.66", "-26.3285, -87.3034, -5.34476, 0.81", "-26.8285, -87.5123, -5.76105, 0.74", "-27.516, -87.7897, -6.35071, 0.88", "-28.0004, -87.979, -6.76672, 0.74", "-28.7163, -88.29, -7.43678, 0.52", "-29.5636, -88.7245, -8.23285, 0.52", "-30.0975, -89.0362, -8.67712, 0.74", "-30.15, -89.0697, -8.70949, 0.74", "-30.8586, -89.4303, -8.68776, 0.88", "-31.9656, -89.8967, -8.32611, 1.03", "-32.6885, -90.1674, -8.01052, 1.18", "-33.7816, -90.5248, -7.46948, 0.96", "-35.3175, -90.9709, -6.66305, 1.18", "-39.8014, -92.1683, -4.30288, 0.66", "-40.4572, -92.3337, -3.93356, 0.66", "-41.1549, -92.5122, -3.5318, 0.81", "-41.8073, -92.6933, -3.17456, 0.81", "-41.8856, -92.7201, -3.13558, 0.81", "-42.7717, -93.1219, -2.7225, 0.88", "-44.2268, -93.8491, -2.0242, 0.88", "-45.1531, -94.2858, -1.46288, 0.74", "-45.5812, -94.4826, -1.17385, 0.96", "-47.4441, -95.361, 0.131511, 0.44", "-49.0599, -96.1368, 1.28663, 1.25", "-51.2599, -97.2321, 2.89864, 0.59", "-52.5525, -97.8884, 3.79802, 0.96", "-52.614, -97.9213, 3.83883, 0.96", "-53.3929, -98.3884, 4.29996, 0.59", "-54.1145, -98.8976, 4.61991, 0.52", "-55.3559, -99.9135, 5.00453, 0.81", "-56.7785, -101.276, 5.32166, 0.44", "-57.4775, -101.986, 5.45041, 0.59", "-58.1123, -102.635, 5.6019, 0.74", "-58.8212, -103.33, 5.84862, 0.44", "-59.65, -104.132, 6.20315, 0.44", "-60.5719, -105.045, 6.63625, 0.29", "-61.3755, -105.87, 7.08901, 0.44", "-62.4153, -106.901, 7.79492, 0.81", "-63.6425, -108.059, 8.77227, 1.03", "-63.6852, -108.098, 8.81243, 1.03", "-72.0458, -114.87, 11.5181, 1.03", "-80.6781, -121.512, 13.6291, 1.03", "-88.1437, -129.527, 15.3939, 1.03", "-96.3085, -137.031, 15.7449, 1.03" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-3.62489, -63.1524, -5.37844, 1.4", "-3.10335, -63.6749, -5.38521, 1.4", "-2.24618, -64.4862, -5.49114, 1.11", "-1.19766, -65.5176, -5.79427, 0.96", "-0.386803, -66.3634, -6.16882, 0.96", "0.260543, -67.0944, -6.59026, 1.11", "0.98248, -67.9514, -7.11888, 1.25", "1.89618, -69.0898, -7.89898, 1.18", "2.88637, -70.4383, -8.83934, 1.18", "3.60293, -71.5706, -9.59398, 1.03", "4.38328, -73.081, -10.5012, 0.88", "4.68002, -73.8188, -10.8682, 0.96", "5.10945, -75.1862, -11.405, 1.11", "5.4452, -76.6381, -11.8231, 1.11", "5.59987, -77.654, -12.0031, 0.96", "5.70709, -79.0078, -12.1475, 1.11", "5.70463, -80.8818, -12.2982, 1.18", "5.64166, -81.8053, -12.3943, 1.18", "5.51711, -82.8415, -12.528, 1.18", "5.22606, -84.8137, -12.8218, 0.96", "5.01728, -86.13, -13.0409, 1.03", "4.6856, -88.1526, -13.4328, 1.03", "4.43024, -89.6119, -13.7616, 1.33", "4.25431, -90.6812, -14.0309, 1.55", "4.13767, -91.5589, -14.2836, 1.33", "3.99667, -92.9571, -14.7275, 1.03", "3.93091, -94.1286, -15.0932, 1.33", "3.91306, -95.1672, -15.4063, 1.33", "3.8918, -97.133, -15.9593, 1.25", "3.84594, -99.2523, -16.5758, 1.03", "3.7961, -100.454, -16.9384, 0.96", "3.68317, -101.968, -17.4145, 0.96", "3.57362, -102.899, -17.7147, 0.96", "3.38348, -104.275, -18.1859, 0.96", "3.12514, -105.559, -18.6558, 1.11", "2.93403, -106.181, -18.8966, 1.25", "2.4817, -107.257, -19.3857, 1.4", "2.10131, -107.899, -19.7508, 1.4" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-3.62489, -63.1524, -5.37844, 1.11", "-4.20687, -65.1895, -3.5266, 1.11", "-4.2853, -65.6601, -3.23826, 1.11", "-4.38008, -66.4229, -2.84896, 1.03", "-4.46288, -67.5928, -2.37391, 1.11", "-4.46435, -67.6472, -2.35705, 1.11", "-4.48087, -68.6275, -2.11106, 1.11", "-4.43806, -69.7379, -1.97751, 1.11", "-4.43573, -69.7961, -1.97087, 1.11", "-4.40026, -70.7942, -1.86881, 1.11", "-4.36326, -72.0326, -1.77376, 1.03", "-4.35073, -72.8315, -1.72555, 1.33", "-4.37447, -73.7829, -1.68006, 1.18", "-4.50494, -74.9833, -1.63945, 0.88", "-4.51436, -75.0411, -1.63822, 0.88", "-4.83656, -76.3481, -1.6073, 0.88", "-5.16862, -77.3751, -1.586, 0.88", "-5.52531, -78.2692, -1.57471, 1.11", "-6.06249, -79.4692, -1.51372, 0.88", "-6.08469, -79.5147, -1.50841, 0.88", "-6.48218, -80.3585, -1.36462, 0.88", "-6.55353, -80.5125, -1.32725, 0.88", "-6.80905, -81.2338, -1.11695, 0.96", "-7.14689, -82.7001, -0.660858, 0.81", "-7.21194, -83.14, -0.527053, 1.18", "-7.29599, -83.8727, -0.321319, 0.96", "-7.30479, -83.9844, -0.294431, 0.96", "-7.35654, -85.0384, -0.0758548, 0.74", "-7.3683, -85.774, -0.00540379, 0.96", "-7.37238, -86.4005, -0.0287509, 1.03", "-7.3713, -86.5142, -0.0473302, 1.03", "-7.35485, -87.255, -0.233228, 1.33", "-7.32271, -88.0066, -0.481101, 1.55", "-7.25471, -89.1474, -0.935066, 1.25", "-7.14983, -89.9995, -1.30688, 1.4", "-6.95697, -91.1942, -1.8327, 1.55", "-6.80414, -92.0487, -2.20748, 1.11", "-6.58632, -93.1297, -2.6892, 0.74", "-6.57528, -93.1888, -2.7135, 0.74", "-6.45456, -93.94, -2.99248, 0.74", "-6.38132, -94.4774, -3.13193, 0.96", "-6.37336, -94.5524, -3.14086, 0.96", "-6.30163, -95.5695, -3.20186, 1.11", "-6.20905, -96.42, -3.21016, 1.11", "-6.05939, -97.5611, -3.29224, 1.25", "-5.81187, -99.2932, -3.48234, 0.96", "-5.60044, -100.508, -3.67106, 0.96", "-5.42565, -101.386, -3.83339, 1.11", "-5.0261, -103.146, -4.20112, 1.11", "-4.60853, -104.814, -4.61423, 1.25", "-4.48283, -105.31, -4.75233, 1.55", "-4.25642, -106.314, -5.1109, 1.47", "-4.24694, -106.367, -5.12685, 1.47", "-4.18611, -107.001, -5.25126, 0.88", "-4.21001, -107.857, -5.25304, 0.59", "-4.27801, -108.733, -5.08559, 0.74", "-4.3465, -109.354, -4.92187, 1.03", "-4.503, -110.572, -4.56129, 1.03", "-4.57579, -111.105, -4.40199, 1.25", "-4.74543, -112.327, -4.03007, 1.25", "-4.87285, -113.258, -3.74248, 0.74", "-4.97895, -114.026, -3.54791, 0.74", "-5.07604, -114.815, -3.4623, 0.96", "-5.08053, -114.866, -3.46652, 0.96", "-5.11964, -115.761, -3.64608, 1.18", "-5.11904, -115.825, -3.66525, 1.18", "-5.04872, -116.959, -4.03599, 1.33", "-4.91624, -118.313, -4.45249, 1.03", "-4.79942, -119.423, -4.75338, 0.88", "-4.76033, -119.841, -4.85324, 1.33", "-4.70081, -120.695, -5.02596, 1.33", "-4.6703, -121.653, -5.17297, 1.55", "-4.70458, -122.601, -5.2437, 1.33", "-4.82528, -123.464, -5.25715, 1.11", "-5.05351, -124.385, -5.2495, 0.66", "-5.36368, -125.288, -5.23341, 0.66", "-5.74288, -126.153, -5.20909, 0.74", "-6.20122, -127.063, -5.17399, 0.59", "-6.50917, -127.671, -5.13946, 0.88", "-6.77495, -128.289, -5.09959, 0.96", "-6.94147, -128.892, -5.0592, 0.88", "-6.94416, -128.948, -5.05063, 0.88", "-6.83811, -129.751, -4.88256, 0.74", "-6.67095, -130.517, -4.70847, 1.25", "-6.48348, -131.35, -4.50377, 1.25", "-6.31476, -132.277, -4.26981, 1.03", "-6.16456, -133.835, -3.8785, 0.74", "-6.16043, -134.719, -3.66088, 0.59", "-6.22617, -135.241, -3.53977, 0.81", "-6.43572, -135.972, -3.39825, 0.88", "-6.77764, -136.82, -3.27592, 1.03", "-7.07834, -137.538, -3.21995, 1.11", "-7.14227, -137.699, -3.22957, 1.11", "-7.40918, -138.497, -3.36269, 0.96", "-7.65892, -139.402, -3.5794, 1.11", "-7.84776, -140.31, -3.84951, 0.96", "-8.05355, -141.637, -4.29076, 1.18", "-8.2541, -143.06, -4.71842, 1.03", "-8.45707, -144.52, -5.12591, 0.96", "-8.46825, -144.621, -5.15151, 0.96", "-8.54572, -145.683, -5.36728, 0.96", "-8.57357, -146.46, -5.43618, 1.4", "-8.5559, -147.979, -5.36518, 1.11", "-8.55111, -148.053, -5.35267, 1.11", "-8.46647, -148.938, -5.16168, 1.25", "-8.3406, -150.088, -4.91838, 1.11", "-8.17272, -151.352, -4.67324, 0.88", "-8.06313, -152.044, -4.56569, 1.18", "-7.84253, -153.141, -4.45885, 1.25", "-7.70399, -153.892, -4.39563, 1.4", "-7.6944, -153.956, -4.39194, 1.4", "-7.5787, -155.066, -4.34345, 1.03", "-7.57361, -155.24, -4.3402, 1.03", "-7.62229, -156.189, -4.30998, 0.74", "-7.74637, -157.006, -4.23271, 0.74", "-7.91935, -157.643, -4.1417, 0.96", "-8.26739, -158.588, -3.97704, 0.88", "-8.67147, -159.44, -3.80146, 0.88", "-9.06262, -160.168, -3.64087, 0.88", "-9.65132, -161.122, -3.41114, 1.11", "-10.071, -161.788, -3.25036, 1.25", "-10.4557, -162.424, -3.11022, 1.4", "-10.5647, -162.615, -3.08361, 1.4", "-10.8161, -163.157, -3.0458, 1.4", "-10.8753, -163.319, -3.06497, 1.4", "-11.1269, -164.279, -3.36239, 1.25", "-11.2656, -165.006, -3.64808, 1.18", "-11.3391, -165.652, -3.95818, 0.96", "-11.4045, -166.568, -4.44271, 0.96", "-11.4679, -168.112, -5.38607, 0.81", "-11.4825, -169.404, -6.2813, 0.81", "-11.4889, -169.98, -6.72134, 1.03", "-11.5296, -171.344, -7.76896, 1.03", "-11.5326, -171.41, -7.81777, 1.03", "-11.6063, -172.555, -8.60601, 1.55", "-11.7202, -173.925, -9.39675, 0.88", "-11.8537, -175.223, -10.0669, 0.81", "-11.9815, -176.232, -10.5691, 0.81", "-12.091, -176.974, -10.9114, 0.96", "-12.2038, -177.752, -11.2419, 0.96", "-12.3117, -178.544, -11.5257, 0.74", "-12.4754, -179.843, -11.9485, 1.25", "-12.5805, -181.091, -12.3471, 0.81", "-12.5843, -181.145, -12.3639, 0.81", "-12.6565, -182.047, -12.561, 0.81", "-12.734, -182.753, -12.6535, 1.18", "-12.7471, -182.862, -12.6561, 1.18", "-12.8439, -183.625, -12.5973, 1.18", "-12.9856, -184.957, -12.4279, 0.81", "-13.1179, -186.263, -12.2644, 0.81", "-13.1869, -186.972, -12.1735, 1.11", "-13.3046, -188.158, -12.0433, 1.11", "-13.3157, -188.281, -12.0277, 1.11", "-13.3952, -189.314, -11.8073, 0.96", "-13.4192, -189.818, -11.6699, 1.25", "-13.4215, -189.873, -11.6541, 1.25", "-13.4635, -190.821, -11.3465, 1.25", "-13.5709, -192.343, -10.8266, 1.03", "-13.7282, -194.168, -10.1944, 0.81", "-13.7806, -194.799, -9.98164, 1.11", "-13.852, -195.892, -9.65313, 0.96", "-13.8626, -196.07, -9.60877, 0.96", "-13.9111, -197.0, -9.4273, 0.81", "-13.9154, -197.076, -9.42188, 0.81", "-14.0009, -198.371, -9.4472, 0.96", "-14.0501, -199.204, -9.46503, 1.18", "-14.0935, -200.097, -9.48546, 1.03", "-14.0973, -200.156, -9.48674, 1.03", "-14.1883, -201.183, -9.50707, 0.74", "-14.3465, -202.569, -9.55121, 0.74", "-14.4455, -203.326, -9.61196, 0.81", "-14.4547, -203.401, -9.62052, 0.81", "-14.519, -204.131, -9.72624, 0.81", "-14.5677, -205.222, -9.90613, 0.81", "-14.5411, -206.495, -10.1681, 1.03", "-14.4769, -207.581, -10.4213, 1.03", "-14.4742, -207.637, -10.4344, 1.03", "-14.4653, -208.384, -10.6045, 1.25", "-14.474, -209.091, -10.7615, 0.96", "-14.5337, -210.034, -10.9376, 0.81", "-14.6099, -210.639, -11.0271, 1.11", "-14.7406, -211.543, -11.1315, 1.33", "-14.8777, -212.423, -11.2406, 1.33", "-14.8873, -212.487, -11.2501, 1.33", "-15.0395, -213.689, -11.4433, 0.74", "-15.1268, -214.945, -11.6784, 0.96", "-15.1032, -215.991, -11.9012, 0.96", "-15.0918, -216.094, -11.9207, 0.96", "-14.9042, -217.155, -12.0912, 0.96", "-14.7156, -218.108, -12.1662, 0.81", "-14.5116, -219.134, -12.162, 0.66", "-14.3496, -220.14, -12.0778, 0.66", "-14.2478, -221.102, -11.9494, 1.33", "-14.2125, -221.908, -11.7887, 1.33", "-14.2476, -223.363, -11.4051, 1.11", "-14.3022, -224.405, -11.1001, 1.18", "-14.3425, -224.988, -10.9246, 1.4", "-14.3877, -225.888, -10.691, 1.11", "-14.3732, -226.943, -10.4939, 0.59", "-14.3058, -227.625, -10.4126, 0.52", "-14.1328, -228.558, -10.368, 0.88", "-13.9005, -229.476, -10.3755, 1.18", "-13.6369, -230.472, -10.4288, 1.03", "-13.3, -231.73, -10.5538, 0.96", "-12.9984, -232.978, -10.7574, 0.81", "-12.8542, -233.714, -10.9016, 1.11", "-12.7509, -234.572, -11.0951, 1.69", "-12.6983, -235.533, -11.3426, 1.18", "-12.7006, -235.596, -11.3565, 1.18", "-12.8107, -236.6, -11.506, 0.59", "-12.8179, -236.656, -11.5022, 0.59", "-12.9024, -237.508, -11.2663, 1.03", "-12.9086, -237.604, -11.226, 1.03", "-12.9022, -238.85, -10.6282, 1.25", "-12.8784, -239.384, -10.3654, 1.25", "-12.793, -240.655, -9.73935, 0.96", "-12.7538, -241.38, -9.42044, 0.66", "-12.7289, -242.025, -9.17885, 0.66", "-12.7232, -242.586, -9.02402, 0.37", "-12.7416, -243.351, -8.96717, 0.52", "-12.8189, -244.241, -9.01964, 0.81", "-12.9442, -244.947, -9.14518, 1.11", "-13.1065, -245.648, -9.33148, 1.4", "-13.3223, -246.516, -9.60094, 1.4", "-13.7312, -248.028, -10.1225, 0.81", "-13.9475, -248.881, -10.4473, 0.66", "-14.1072, -249.698, -10.7769, 0.52", "-14.2174, -250.812, -11.2223, 0.37", "-14.2301, -251.43, -11.464, 0.88", "-14.2289, -251.484, -11.4823, 0.88", "-14.2228, -252.055, -11.6079, 1.25", "-14.2439, -252.721, -11.7271, 1.25", "-14.3199, -253.478, -11.8296, 0.88", "-14.5778, -254.762, -11.9435, 0.66", "-14.9249, -255.961, -12.0378, 0.66", "-15.3355, -257.095, -12.1319, 0.88", "-15.6753, -257.907, -12.233, 0.88", "-15.9776, -258.579, -12.3602, 1.11", "-16.2427, -259.19, -12.5003, 1.18", "-16.4273, -259.668, -12.5981, 1.18", "-16.8881, -261.101, -12.8911, 0.88", "-17.1894, -262.324, -13.1302, 1.25", "-17.4289, -263.669, -13.3622, 0.74", "-17.5717, -264.773, -13.5206, 0.59", "-17.6857, -266.038, -13.6592, 1.03", "-17.732, -266.803, -13.6937, 0.74", "-17.7617, -267.677, -13.6427, 0.59", "-17.7732, -267.855, -13.6147, 0.59", "-17.8902, -268.758, -13.4165, 0.74", "-17.905, -268.814, -13.4097, 0.74", "-18.1777, -269.638, -13.4361, 0.59", "-18.1998, -269.7, -13.4424, 0.59", "-18.5548, -270.786, -13.6051, 0.74", "-18.8686, -271.883, -13.8014, 0.59", "-19.1806, -273.308, -14.1035, 0.59", "-19.4063, -274.598, -14.4172, 0.59", "-19.5074, -275.512, -14.6729, 0.59", "-19.554, -276.315, -14.9165, 0.81", "-19.5513, -276.486, -14.9733, 0.81", "-19.4774, -277.161, -15.2064, 0.81", "-19.4685, -277.208, -15.2171, 0.81", "-19.3631, -278.03, -15.2998, 0.81", "-19.3618, -278.08, -15.2976, 0.81", "-19.3983, -278.947, -15.198, 0.66", "-19.4005, -278.998, -15.1911, 0.66", "-19.4484, -280.001, -15.0363, 0.66", "-19.4541, -281.23, -14.847, 0.44", "-19.4124, -282.864, -14.5891, 0.66", "-19.281, -284.274, -14.3382, 0.96", "-19.093, -285.468, -14.1026, 0.96", "-19.0741, -285.556, -14.0847, 0.96", "-18.7248, -286.708, -13.8386, 0.81", "-18.6834, -286.815, -13.817, 0.81", "-18.1702, -287.994, -13.6481, 0.74", "-18.1465, -288.047, -13.6399, 0.74", "-17.9474, -288.603, -13.5606, 0.96", "-17.9153, -288.716, -13.5555, 0.96", "-17.7327, -289.676, -13.547, 0.96", "-17.6395, -290.36, -13.5749, 0.96", "-17.637, -290.418, -13.5824, 0.96", "-17.6014, -291.291, -13.7011, 0.52", "-17.5643, -292.251, -13.8473, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-32.8322, -66.6003, -20.6876, 0.74", "-33.3932, -66.6276, -20.2582, 0.74", "-33.4405, -66.6402, -20.2078, 0.74", "-34.0605, -66.9258, -19.4051, 0.52", "-34.3815, -67.0967, -18.9831, 0.44", "-34.9227, -67.3835, -18.3112, 0.44", "-35.4538, -67.6553, -17.7018, 0.96", "-36.4344, -68.2137, -16.6344, 0.74", "-37.0388, -68.5671, -16.0478, 0.74", "-37.3424, -68.7571, -15.7988, 0.74", "-37.7891, -69.0164, -15.4886, 0.59", "-38.1911, -69.2124, -15.2553, 0.52", "-38.7771, -69.4485, -14.9771, 0.52", "-39.182, -69.5859, -14.8257, 0.88", "-39.8611, -69.7852, -14.5783, 0.59", "-40.8886, -70.0515, -14.13, 0.96", "-42.0284, -70.3244, -13.5601, 1.33", "-42.4607, -70.4236, -13.3194, 1.33", "-43.1556, -70.5844, -12.9137, 0.44", "-43.5679, -70.6678, -12.674, 0.44", "-44.4707, -70.8162, -12.1916, 0.44", "-44.5171, -70.8231, -12.1712, 0.44", "-45.2669, -70.902, -11.9073, 0.81", "-45.7789, -70.9576, -11.6769, 0.96" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-32.8322, -66.6003, -20.6876, 0.59", "-33.9686, -67.7486, -21.2758, 0.59", "-34.5713, -68.4028, -21.547, 0.52", "-34.9299, -68.7931, -21.7124, 0.88", "-35.6129, -69.4745, -22.0771, 0.88", "-36.0976, -69.909, -22.4454, 0.88", "-36.539, -70.2571, -22.8389, 1.03", "-37.184, -70.6265, -23.4527, 0.59", "-37.7456, -70.8099, -24.0969, 0.44", "-38.4975, -70.8588, -25.0327, 0.74", "-39.7818, -70.6092, -26.7524, 0.44", "-40.1113, -70.4725, -27.1831, 0.44", "-40.4895, -70.2718, -27.6515, 0.44", "-40.932, -70.0138, -28.1445, 0.74", "-41.2382, -69.8502, -28.425, 0.96", "-41.2922, -69.8309, -28.4592, 0.96", "-41.8743, -69.7236, -28.6981, 0.88", "-43.1146, -69.5548, -29.2077, 0.44", "-43.4943, -69.4996, -29.3607, 0.44", "-43.5535, -69.4858, -29.3927, 0.44", "-43.9812, -69.3411, -29.6509, 0.44", "-44.6114, -69.0602, -30.0679, 0.44", "-45.0251, -68.8243, -30.3463, 0.81", "-45.4021, -68.5555, -30.6179, 1.33", "-46.6344, -67.6135, -31.5531, 1.33", "-47.1472, -67.234, -31.9323, 1.25", "-47.7399, -66.8176, -32.3589, 0.96", "-48.3761, -66.4108, -32.8229, 0.88", "-49.1121, -65.9764, -33.3334, 0.74", "-49.689, -65.6637, -33.6976, 0.74", "-50.4909, -65.2544, -34.1624, 0.66", "-50.9252, -65.0334, -34.4384, 0.52", "-51.6352, -64.6654, -34.8926, 0.29", "-52.0939, -64.3954, -35.2522, 0.37", "-52.1447, -64.3609, -35.2972, 0.37", "-52.8907, -63.6897, -36.0935, 0.88", "-53.1129, -63.4094, -36.4247, 1.25", "-53.4046, -62.9947, -36.9667, 1.18", "-53.9636, -62.2411, -38.0162, 0.66", "-53.9928, -62.2065, -38.0679, 0.66", "-54.3895, -61.8019, -38.6711, 0.74", "-55.2587, -61.0746, -39.7956, 0.88", "-55.9131, -60.5918, -40.5858, 0.52", "-56.4303, -60.3021, -41.1082, 0.88", "-57.025, -60.099, -41.5666, 1.03", "-57.6802, -59.9503, -42.0122, 1.33", "-58.2851, -59.8775, -42.3557, 0.88", "-58.3464, -59.8717, -42.3863, 0.88", "-59.1323, -59.7908, -42.8096, 0.59", "-60.1231, -59.6728, -43.4478, 0.52", "-60.2333, -59.6558, -43.5282, 0.52", "-60.5706, -59.5766, -43.7918, 0.81", "-61.6598, -59.1562, -44.7976, 0.29", "-61.7037, -59.1368, -44.844, 0.29", "-62.0668, -58.9467, -45.3548, 0.29", "-62.2055, -58.8718, -45.5795, 0.88", "-62.3602, -58.808, -45.873, 1.18", "-63.0738, -58.6044, -47.347, 0.37", "-63.5108, -58.5497, -48.2473, 0.74", "-64.1043, -58.5669, -49.4941, 1.03", "-64.1336, -58.5719, -49.554, 1.03", "-64.7859, -58.7516, -50.8005, 0.44", "-64.9651, -58.8087, -51.1061, 1.18", "-65.3018, -58.914, -51.5646, 1.47", "-66.1725, -59.1046, -52.9145, 0.81", "-66.5391, -59.1634, -53.5014, 0.52", "-67.0578, -59.2292, -54.3477, 0.37", "-67.367, -59.2608, -54.8465, 0.37", "-67.7621, -59.3037, -55.4935, 1.18", "-69.7757, -59.5547, -58.8959, 0.81", "-69.8447, -59.5644, -59.0117, 0.81", "-70.228, -59.6347, -59.6629, 0.81", "-70.5025, -59.6891, -60.0905, 0.88", "-70.7915, -59.7635, -60.5247, 0.81", "-71.4676, -59.9959, -61.4031, 0.29", "-71.6329, -60.0577, -61.5466, 0.29", "-71.9098, -60.1856, -61.8426, 0.29", "-72.4037, -60.4702, -62.4473, 1.18", "-73.4335, -61.2409, -63.7812, 0.59", "-73.7523, -61.5463, -64.1863, 1.33", "-73.7915, -61.5914, -64.2334, 1.33", "-74.5424, -62.5369, -65.0836, 0.74", "-74.916, -63.0519, -65.4892, 0.66", "-75.3446, -63.6744, -65.9756, 0.37", "-75.7859, -64.303, -66.4314, 0.88", "-76.244, -64.9498, -66.9208, 1.03", "-76.6224, -65.4857, -67.3528, 0.88", "-76.6532, -65.5317, -67.3902, 0.88", "-77.3716, -66.7567, -68.4384, 0.74", "-77.6989, -67.3598, -69.0718, 0.44", "-77.8738, -67.6783, -69.4572, 1.47", "-78.2447, -68.2952, -70.3156, 1.03", "-78.4796, -68.6088, -70.8244, 0.74", "-78.7163, -68.8265, -71.2348, 0.74", "-79.7115, -69.3936, -72.636, 0.52", "-80.2116, -69.5745, -73.3139, 0.66", "-80.6758, -69.7184, -73.9659, 0.37", "-81.007, -69.8335, -74.5416, 0.29", "-81.3021, -69.9455, -75.1261, 0.29", "-81.636, -70.088, -75.8588, 0.74", "-82.0822, -70.3255, -76.9354, 0.96", "-82.6549, -70.6465, -78.4466, 0.96", "-83.4651, -71.0632, -80.7184, 0.88", "-83.4847, -71.0706, -80.771, 0.88", "-83.8537, -71.1573, -81.703, 0.88", "-84.037, -71.1727, -82.1096, 1.03", "-84.3611, -71.1781, -82.7116, 1.03", "-84.9192, -71.2072, -83.5761, 0.74", "-85.5587, -71.3222, -84.4893, 0.37", "-85.594, -71.3351, -84.5469, 0.37", "-86.2396, -71.6784, -85.7165, 0.37", "-86.7902, -72.0556, -86.8354, 0.37", "-87.2846, -72.4495, -87.8802, 0.88", "-87.7677, -72.8328, -88.8445, 1.18", "-88.4805, -73.3497, -90.3816, 0.59", "-88.5089, -73.3646, -90.4423, 0.59", "-89.176, -73.529, -91.7779, 0.44", "-89.3727, -73.5196, -92.2178, 0.37", "-89.7125, -73.4178, -93.0506, 0.37", "-90.4914, -73.0503, -94.9512, 1.03", "-90.8952, -72.8217, -95.8897, 1.03", "-91.2476, -72.6406, -96.652, 1.25", "-92.119, -72.2815, -98.5671, 1.18", "-92.1448, -72.2776, -98.6285, 1.18", "-92.5356, -72.3254, -99.5217, 0.59", "-92.7807, -72.4161, -100.024, 0.74", "-93.0529, -72.5668, -100.566, 0.74", "-93.9518, -73.1741, -102.379, 0.88", "-94.7315, -73.7775, -104.41, 0.52", "-94.9247, -73.9457, -105.01, 1.18", "-95.2235, -74.2478, -106.163, 1.55", "-95.3658, -74.4021, -106.776, 1.25", "-95.8683, -74.9702, -108.982, 0.74", "-96.8156, -76.0932, -113.131, 0.74", "-96.9251, -76.2321, -113.646, 1.4", "-97.4286, -76.8887, -116.212, 0.74", "-97.4559, -76.921, -116.35, 0.74", "-97.6318, -77.0938, -117.193, 0.59", "-97.6504, -77.1062, -117.258, 0.59", "-98.5332, -77.4743, -119.204, 0.59", "-98.5863, -77.493, -119.302, 0.59", "-99.1319, -77.6422, -120.196, 0.66", "-99.4525, -77.7221, -120.727, 0.88", "-100.6, -77.958, -122.624, 0.44", "-100.756, -77.9924, -122.852, 1.03", "-101.665, -78.2245, -123.844, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-1.27315, -207.767, -92.7726, 0.29", "-2.42054, -208.37, -93.1775, 0.29", "-3.13332, -208.716, -93.4135, 0.29", "-4.16187, -209.185, -93.8314, 0.22", "-4.61044, -209.413, -94.0236, 0.81", "-5.0475, -209.651, -94.2129, 0.81", "-5.41399, -209.863, -94.4028, 0.81", "-6.02361, -210.242, -94.7784, 0.52", "-7.19181, -211.032, -95.6105, 0.22", "-7.95795, -211.6, -96.197, 0.22", "-8.31054, -211.884, -96.4838, 0.81", "-9.30549, -212.734, -97.3172, 0.96", "-9.54277, -212.955, -97.5488, 1.11", "-10.2979, -213.744, -98.4665, 0.22", "-10.6623, -214.145, -98.9425, 0.22", "-10.8653, -214.366, -99.2177, 0.74", "-11.0884, -214.624, -99.5329, 0.96", "-11.8784, -215.606, -100.735, 0.59", "-12.6022, -216.534, -101.924, 0.29", "-13.0926, -217.171, -102.852, 0.22", "-13.2221, -217.334, -103.106, 0.37", "-13.8312, -218.049, -104.296, 0.22", "-14.3354, -218.63, -105.286, 0.81", "-14.5567, -218.881, -105.706, 1.03", "-15.2954, -219.79, -107.328, 0.37", "-15.5439, -220.111, -107.928, 0.52", "-16.1245, -220.87, -109.346, 0.29", "-16.3631, -221.17, -109.884, 0.66", "-16.5643, -221.427, -110.313, 0.81", "-17.4065, -222.615, -112.303, 0.29", "-17.6091, -222.941, -112.811, 0.44", "-17.6329, -222.986, -112.884, 0.44", "-17.8456, -223.42, -113.558, 0.59", "-18.0717, -224.03, -114.494, 1.03", "-18.3223, -225.206, -116.284, 1.03", "-18.3956, -226.233, -117.819, 0.29", "-18.3904, -227.178, -119.241, 0.88", "-18.3841, -227.517, -119.755, 1.25", "-18.3729, -229.721, -123.106, 0.29", "-18.3793, -231.094, -125.189, 0.37", "-18.4138, -232.107, -126.665, 0.81", "-18.472, -233.036, -128.02, 0.44", "-18.5455, -233.611, -128.835, 0.37", "-18.7072, -234.43, -129.948, 0.37", "-19.0734, -235.504, -131.234, 0.37", "-19.4454, -236.334, -132.137, 0.37", "-19.7612, -237.02, -132.827, 1.11", "-19.9706, -237.471, -133.264, 1.25", "-20.496, -238.524, -134.338, 0.81", "-21.0245, -239.453, -135.286, 0.52", "-21.3203, -239.863, -135.668, 0.52", "-21.3625, -239.918, -135.724, 0.52", "-21.9004, -240.597, -136.399, 0.52", "-22.8495, -241.74, -137.617, 0.44", "-23.3043, -242.267, -138.178, 0.44", "-24.0457, -243.169, -139.233, 0.74", "-24.9581, -244.349, -140.669, 0.74", "-24.9888, -244.392, -140.72, 0.74", "-25.6882, -245.474, -141.992, 0.37", "-25.9488, -245.888, -142.487, 0.81", "-26.8296, -247.168, -144.197, 0.29", "-27.1425, -247.565, -144.789, 0.29", "-27.4674, -247.951, -145.299, 0.88", "-27.5985, -248.113, -145.506, 1.25" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-1.27315, -207.767, -92.7726, 0.59", "-0.54902, -210.804, -93.5886, 0.59", "-0.273304, -212.067, -93.8736, 0.59", "-0.192925, -212.419, -93.9418, 0.81", "0.0120869, -213.234, -94.0722, 0.81", "0.333926, -214.41, -94.2349, 0.15", "0.65931, -215.486, -94.3579, 0.15", "0.685279, -215.562, -94.3506, 0.15", "0.858492, -216.01, -94.3092, 0.59", "1.12719, -216.672, -94.2517, 0.88", "1.19467, -216.842, -94.2386, 0.88", "1.38728, -217.44, -94.2046, 0.88", "1.6861, -218.711, -94.1229, 0.52", "1.83315, -219.761, -94.0563, 0.44", "1.86623, -220.355, -94.0207, 0.74", "1.85783, -221.108, -93.9756, 0.44", "1.77931, -222.153, -93.8678, 0.29", "1.66409, -222.87, -93.7733, 0.88", "1.55157, -223.534, -93.6612, 0.96", "1.42064, -224.558, -93.4547, 0.81", "1.35114, -225.733, -93.2026, 0.29", "1.38903, -226.959, -92.9552, 0.44", "1.49534, -227.824, -92.7754, 0.22", "1.80049, -229.192, -92.5031, 0.22", "2.09173, -230.013, -92.3331, 0.59", "2.53534, -230.926, -92.0888, 0.81", "2.99893, -231.713, -91.8504, 0.81", "3.37602, -232.312, -91.6679, 0.88", "4.01239, -233.444, -91.3088, 0.37", "4.44797, -234.61, -90.9691, 0.59", "4.71413, -235.779, -90.6846, 0.96", "4.81526, -236.619, -90.5109, 0.59", "4.83392, -237.645, -90.3453, 0.29", "4.74867, -239.084, -90.279, 0.29", "4.55524, -240.662, -90.3458, 0.74", "4.42436, -241.582, -90.4499, 0.96", "4.40772, -241.719, -90.4685, 0.96", "4.33617, -242.46, -90.5569, 0.96", "4.23232, -243.823, -90.6955, 0.44", "4.17862, -244.763, -90.7668, 0.29", "4.02934, -246.031, -90.78, 0.59", "3.80986, -247.071, -90.722, 1.03", "3.71781, -247.39, -90.6921, 1.11", "3.50744, -248.015, -90.6053, 0.96", "3.23137, -248.763, -90.4724, 0.96", "2.78794, -249.881, -90.2676, 0.37", "2.34181, -250.98, -90.0826, 0.22", "2.0808, -251.686, -89.9851, 0.44", "1.68764, -252.889, -89.8183, 0.44", "1.48486, -253.738, -89.6961, 0.66", "1.37866, -254.604, -89.5734, 0.88", "1.33447, -255.519, -89.4678, 0.29", "1.29115, -256.536, -89.2554, 0.29", "1.28771, -256.647, -89.224, 0.29", "1.23851, -257.613, -88.9103, 0.29", "1.15296, -258.843, -88.5007, 0.29", "1.03884, -260.235, -88.0383, 0.29", "0.797018, -261.991, -87.3762, 0.59", "0.694109, -262.435, -87.202, 0.74", "0.353316, -263.591, -86.7626, 0.29", "0.0419588, -264.496, -86.4454, 0.29", "0.0177512, -264.582, -86.4185, 0.29", "-0.121837, -265.654, -86.1769, 0.81", "-0.128825, -266.322, -86.1054, 1.25", "-0.0908837, -267.055, -86.0747, 0.88", "0.0782137, -268.278, -86.0761, 0.52", "0.373078, -269.769, -86.0624, 0.29", "0.546346, -270.516, -86.0563, 0.66", "0.842328, -271.491, -86.0525, 0.74", "1.46363, -273.092, -85.9908, 0.22", "1.88044, -274.019, -85.926, 0.22", "2.35048, -274.939, -85.7833, 0.88", "2.39537, -275.03, -85.7605, 0.88", "2.79272, -275.844, -85.4851, 0.81", "3.21516, -276.714, -85.1616, 0.74", "3.24878, -276.795, -85.1312, 0.74", "3.57051, -278.005, -84.7918, 0.29", "3.77422, -279.207, -84.5484, 0.74", "3.80174, -279.624, -84.4797, 0.81", "3.73857, -280.822, -84.3674, 0.22", "3.64247, -281.423, -84.3514, 0.66", "3.51369, -282.035, -84.3702, 0.74", "3.49237, -282.113, -84.3787, 0.74", "3.20235, -283.005, -84.5095, 0.74", "2.80111, -284.041, -84.6892, 0.22", "2.42193, -284.879, -84.9454, 0.22", "2.39194, -284.945, -84.972, 0.22", "2.21172, -285.421, -85.1953, 0.66", "2.19123, -285.512, -85.239, 0.66", "2.15318, -286.008, -85.4849, 0.66", "2.1167, -287.388, -86.1202, 0.52", "2.11588, -287.457, -86.1633, 0.52", "2.07622, -288.382, -86.7597, 0.22", "2.01521, -289.138, -87.2401, 1.03", "1.9813, -289.601, -87.5429, 1.11", "1.9208, -290.452, -88.0777, 0.88", "1.68419, -293.189, -89.6531, 0.22", "1.62744, -293.848, -90.0171, 0.88", "1.5581, -294.558, -90.4111, 0.59", "1.46892, -295.616, -90.9687, 0.52", "1.42652, -296.573, -91.4111, 0.81", "1.46694, -297.272, -91.7627, 0.81", "1.68248, -298.744, -92.6599, 0.29", "1.69625, -298.805, -92.7045, 0.29", "1.86239, -299.33, -93.16, 0.96", "2.06566, -299.84, -93.6724, 1.25", "3.16191, -302.116, -96.2106, 0.52", "3.97403, -303.596, -97.9732, 0.44", "4.22584, -303.998, -98.4613, 0.66", "5.02277, -305.183, -99.8774, 0.52", "5.95694, -306.451, -101.358, 0.29", "6.19705, -306.754, -101.688, 0.59", "6.3017, -306.884, -101.799, 0.59", "7.37241, -308.137, -102.694, 0.22", "7.43323, -308.209, -102.743, 0.22", "7.86783, -308.722, -102.965, 0.59", "8.00607, -308.879, -103.0, 0.59", "8.19661, -309.09, -103.053, 0.59", "8.25858, -309.159, -103.068, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-5.91136, 130.356, 7.22119, 0.29", "-7.32294, 131.277, 6.56718, 0.29", "-8.30735, 131.894, 6.20527, 0.29", "-9.6778, 132.737, 5.77162, 0.66", "-10.8701, 133.471, 5.36432, 0.29", "-11.4672, 133.842, 5.15556, 0.37", "-12.7007, 134.616, 4.72698, 0.37", "-13.9806, 135.454, 4.34127, 0.59", "-14.6221, 135.88, 4.14619, 0.81", "-15.7152, 136.608, 3.83385, 0.37", "-16.0625, 136.865, 3.75499, 0.88", "-16.5605, 137.277, 3.63142, 1.03", "-17.1824, 137.863, 3.47101, 0.81", "-17.6696, 138.375, 3.35647, 0.37", "-17.728, 138.448, 3.34764, 0.37", "-18.2915, 139.325, 3.32372, 0.37", "-18.3482, 139.431, 3.32048, 0.37", "-18.7486, 140.299, 3.41249, 0.37", "-18.779, 140.377, 3.42966, 0.37", "-19.2228, 141.532, 3.7914, 0.22", "-19.4683, 142.169, 4.01805, 0.74", "-19.4956, 142.244, 4.04697, 0.74", "-20.1213, 143.999, 4.70915, 0.29", "-20.2406, 144.353, 4.85245, 0.66", "-20.4076, 144.837, 5.05224, 0.66", "-20.7178, 145.694, 5.41008, 0.37", "-20.9277, 146.309, 5.64283, 0.29", "-21.1201, 146.935, 5.82526, 0.29", "-21.3602, 147.868, 5.99888, 0.96", "-21.3807, 147.946, 6.01362, 0.96", "-21.4934, 148.455, 6.10679, 0.66", "-21.6459, 149.233, 6.24478, 0.29", "-21.809, 150.004, 6.35868, 0.29", "-21.8275, 150.084, 6.36521, 0.29", "-22.0154, 150.875, 6.37711, 1.11", "-22.1393, 151.631, 6.37407, 1.47", "-22.1598, 151.839, 6.37076, 1.47", "-22.227, 152.893, 6.34362, 0.66", "-22.2636, 153.716, 6.32487, 0.37", "-22.3062, 154.75, 6.30496, 0.37", "-22.3557, 156.363, 6.17425, 0.29", "-22.4205, 158.071, 5.96185, 0.29", "-22.426, 158.246, 5.93845, 0.29", "-22.4347, 159.343, 5.77501, 0.96", "-22.4364, 159.934, 5.67736, 1.18", "-22.4726, 161.867, 5.24593, 0.37", "-22.5326, 162.507, 5.03166, 0.37", "-28.7355, 172.364, 3.88759, 0.37", "-32.7196, 183.102, 1.48534, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.91136, 130.356, 7.22119, 1.03", "-5.97181, 130.761, 7.35296, 1.03", "-6.14687, 131.732, 7.63213, 1.4", "-6.35354, 132.956, 7.93121, 1.4", "-6.36516, 133.032, 7.94787, 1.4", "-6.51028, 134.146, 8.16057, 1.25", "-6.62625, 135.324, 8.38591, 0.81", "-6.6312, 135.4, 8.40389, 0.81", "-6.66419, 136.271, 8.62145, 0.96", "-6.66618, 136.578, 8.69206, 0.96", "-6.66069, 137.443, 8.90129, 1.18", "-6.62731, 138.432, 9.16414, 0.96", "-6.59864, 139.832, 9.4761, 1.18", "-6.59966, 139.947, 9.49699, 1.18", "-6.62947, 140.89, 9.60543, 1.18", "-6.66616, 141.967, 9.61992, 0.96", "-6.66975, 142.064, 9.61128, 0.96", "-6.69716, 143.375, 9.39458, 1.47", "-6.69678, 143.452, 9.3777, 1.47", "-6.63174, 144.66, 9.13955, 1.18", "-6.48384, 145.905, 8.90858, 0.81", "-6.45605, 146.043, 8.89014, 0.81", "-6.26291, 146.899, 8.91409, 0.74", "-6.24769, 146.967, 8.93009, 0.74", "-6.17533, 147.545, 9.13159, 0.74", "-6.17766, 147.617, 9.16364, 0.74", "-6.28629, 148.217, 9.4283, 0.81", "-6.66425, 149.534, 9.94695, 1.18", "-6.85765, 150.063, 10.136, 1.4", "-7.23419, 151.018, 10.4476, 0.96", "-7.61564, 151.94, 10.7238, 0.96", "-7.95653, 152.763, 10.937, 0.96", "-8.37676, 153.793, 11.1311, 0.96", "-8.4036, 153.865, 11.1457, 0.96", "-8.58237, 154.401, 11.3008, 0.96", "-8.69741, 154.799, 11.4398, 1.18", "-8.7437, 154.988, 11.5166, 1.18", "-8.92556, 155.771, 11.8427, 1.18", "-9.28209, 157.354, 12.4606, 0.96", "-9.57888, 158.652, 12.9679, 0.66", "-9.72583, 159.274, 13.212, 0.66", "-9.93055, 160.105, 13.5132, 0.88", "-10.1337, 160.952, 13.7936, 0.88", "-10.3204, 161.757, 14.032, 1.03", "-10.5119, 162.632, 14.227, 1.03", "-10.5257, 162.698, 14.2426, 1.03", "-10.6848, 163.447, 14.402, 1.11", "-10.8572, 164.24, 14.5387, 1.11", "-10.8831, 164.353, 14.556, 1.11", "-11.1632, 165.519, 14.6973, 0.96", "-11.3639, 166.332, 14.814, 0.96", "-11.6188, 167.433, 15.0011, 1.4", "-11.7853, 168.205, 15.1479, 1.03", "-11.9651, 169.167, 15.3284, 1.25", "-12.1218, 170.35, 15.5447, 0.88", "-12.1847, 171.456, 15.741, 0.88", "-12.176, 172.414, 15.9198, 0.88", "-12.1556, 172.634, 15.9612, 0.88", "-12.0447, 173.428, 16.0937, 0.88", "-11.898, 174.517, 16.2327, 0.81", "-11.7797, 175.525, 16.3143, 0.81", "-11.7767, 175.594, 16.3159, 0.81", "-11.8026, 176.267, 16.3677, 0.96", "-11.9481, 177.42, 16.4989, 0.96", "-12.1874, 178.657, 16.6729, 1.03", "-12.2014, 178.716, 16.6824, 1.03", "-12.6054, 180.219, 16.9355, 1.03", "-12.9392, 181.464, 17.1405, 1.03", "-13.2476, 182.707, 17.3391, 1.03", "-13.3397, 183.174, 17.4116, 1.03", "-13.4138, 183.76, 17.4923, 1.03", "-13.4878, 184.702, 17.599, 0.88", "-13.4983, 185.854, 17.6829, 0.88", "-13.4569, 186.846, 17.6979, 1.11", "-13.4163, 187.253, 17.6861, 1.11", "-13.2977, 188.341, 17.611, 1.11", "-13.2786, 188.488, 17.5956, 1.11", "-13.168, 189.248, 17.4911, 0.96", "-13.1608, 189.305, 17.4812, 0.96", "-13.0609, 190.516, 17.2566, 0.88", "-13.022, 191.434, 17.0862, 0.66", "-13.0198, 191.574, 17.0625, 0.66", "-12.9997, 192.43, 16.943, 0.66", "-12.9965, 192.508, 16.9352, 0.66", "-12.9145, 193.41, 16.8969, 0.96", "-12.8939, 193.548, 16.9007, 0.96", "-12.702, 194.434, 16.9226, 0.96", "-12.6615, 194.597, 16.9262, 0.96", "-12.5421, 195.068, 16.9381, 0.96", "-12.3259, 195.964, 17.012, 0.96", "-12.1744, 196.613, 17.0929, 1.18", "-12.0222, 197.377, 17.2053, 0.74", "-11.8969, 198.284, 17.3499, 0.74", "-11.8529, 198.979, 17.4616, 1.18", "-11.9094, 200.061, 17.6286, 0.66", "-12.0519, 200.873, 17.7437, 0.66", "-12.3128, 201.846, 17.8651, 0.66", "-12.6432, 202.801, 17.9708, 1.18", "-12.9162, 203.489, 18.0156, 1.18", "-13.488, 204.835, 18.0351, 0.96", "-13.8843, 205.754, 18.037, 0.96", "-14.1619, 206.421, 18.0576, 0.66", "-14.1826, 206.476, 18.0608, 0.66", "-14.539, 207.559, 18.1516, 0.59", "-14.7362, 208.251, 18.2259, 1.03", "-15.0674, 209.519, 18.4643, 0.81", "-15.2466, 210.195, 18.6309, 1.03", "-15.2849, 210.327, 18.6674, 1.03", "-15.5462, 211.153, 18.9012, 1.03", "-15.6452, 211.431, 18.9838, 1.03", "-16.0699, 212.55, 19.2834, 0.96", "-16.4362, 213.561, 19.493, 0.96", "-16.6729, 214.335, 19.635, 0.96", "-16.869, 215.12, 19.7605, 1.11", "-16.9702, 215.693, 19.8335, 1.33", "-16.9795, 215.771, 19.8402, 1.33", "-17.015, 216.827, 19.8608, 0.88", "-16.9825, 217.639, 19.8792, 1.11", "-16.9632, 217.787, 19.8891, 1.11", "-16.8151, 218.431, 19.9624, 1.11", "-16.7939, 218.495, 19.9722, 1.11", "-16.5326, 219.144, 20.1543, 0.88", "-16.5054, 219.204, 20.1764, 0.81", "-16.2096, 219.86, 20.4261, 1.03", "-16.0036, 220.34, 20.6159, 1.03", "-15.6995, 221.137, 20.9259, 0.81", "-15.3195, 222.347, 21.3689, 0.74", "-15.1071, 223.23, 21.665, 0.74", "-14.9481, 224.127, 21.9626, 0.88", "-14.8851, 224.63, 22.1203, 0.88", "-14.8395, 225.379, 22.3566, 0.88", "-14.8323, 225.875, 22.5022, 0.88", "-14.8121, 226.557, 22.6655, 0.88", "-14.7321, 227.532, 22.8896, 0.88", "-14.6543, 228.03, 23.0174, 0.88", "-14.6257, 228.173, 23.0527, 0.88", "-14.4125, 229.047, 23.2695, 0.88", "-14.1815, 229.964, 23.4785, 0.88", "-13.9206, 230.969, 23.6835, 0.44", "-13.7131, 231.888, 23.871, 0.81", "-13.6017, 232.581, 24.0248, 1.25", "-13.5044, 233.452, 24.2289, 0.96", "-13.4567, 234.584, 24.5011, 1.33", "-13.4636, 234.933, 24.585, 1.47", "-13.5618, 236.402, 24.907, 1.11", "-13.6552, 237.288, 25.0684, 0.96", "-13.6635, 237.355, 25.08, 0.96", "-13.7491, 238.139, 25.1867, 0.96", "-13.7541, 238.2, 25.1923, 0.96", "-13.7833, 239.202, 25.2502, 0.96", "-13.7782, 239.342, 25.2491, 0.96", "-13.6745, 240.647, 25.2124, 0.96", "-13.5054, 242.137, 25.096, 0.96", "-13.3156, 243.474, 24.9436, 0.96", "-13.1886, 244.279, 24.8632, 0.96", "-13.0588, 244.997, 24.7952, 0.96", "-12.8675, 245.972, 24.7146, 1.11", "-12.558, 247.423, 24.6141, 1.11", "-12.545, 247.483, 24.6152, 1.11", "-12.274, 248.769, 24.8166, 1.11", "-12.2621, 248.834, 24.8347, 1.11", "-12.126, 249.659, 25.1502, 1.11", "-12.019, 250.334, 25.4494, 1.18", "-11.8592, 251.484, 26.0106, 0.88", "-11.7468, 252.293, 26.37, 0.66", "-11.7391, 252.359, 26.3945, 0.66", "-11.7229, 252.981, 26.5972, 0.81", "-11.757, 253.784, 26.8148, 0.81", "-11.762, 253.853, 26.8288, 0.81", "-11.8259, 254.611, 26.9184, 0.66", "-11.8854, 255.41, 26.9819, 1.18", "-11.9694, 256.677, 27.0685, 1.03", "-12.0153, 257.478, 27.1132, 0.88", "-12.0533, 258.496, 27.1352, 0.74", "-12.0694, 259.659, 27.1268, 1.25", "-12.0683, 260.277, 27.1011, 1.03", "-12.0629, 260.425, 27.0924, 1.03", "-11.9948, 261.443, 26.993, 1.03", "-11.9495, 262.266, 26.9683, 1.03", "-11.9428, 262.337, 26.9743, 1.03", "-11.8001, 263.375, 27.1841, 1.25", "-11.7872, 263.439, 27.2057, 1.25", "-11.5235, 264.495, 27.6418, 1.4", "-11.049, 266.109, 28.4408, 0.74", "-10.7487, 267.092, 28.9624, 0.59", "-10.7215, 267.177, 29.008, 0.59", "-10.3203, 268.327, 29.6119, 0.59", "-10.1007, 268.977, 29.9095, 0.81", "-10.0814, 269.039, 29.9323, 0.81", "-9.89117, 269.808, 30.0735, 0.81", "-9.85592, 270.014, 30.0951, 0.81", "-9.74178, 270.875, 30.1489, 1.03", "-9.65077, 271.737, 30.1635, 1.25", "-9.56562, 272.395, 30.2137, 1.25", "-9.55651, 272.453, 30.2206, 1.25", "-9.4136, 273.288, 30.4016, 0.96", "-9.1986, 274.496, 30.7415, 0.74", "-9.1126, 275.037, 30.9537, 0.74", "-8.93477, 276.24, 31.513, 0.88", "-8.86192, 276.838, 31.81, 0.74", "-8.73651, 278.093, 32.4411, 0.74", "-8.69537, 278.722, 32.7591, 0.74", "-8.66716, 279.972, 33.3684, 0.96", "-8.67749, 280.718, 33.6927, 1.03", "-8.72206, 281.467, 33.9558, 1.03", "-8.77084, 282.216, 34.171, 1.18", "-8.80343, 283.036, 34.321, 0.59", "-8.80727, 283.523, 34.384, 0.37", "-8.79221, 283.915, 34.4044, 0.81", "-8.76308, 284.325, 34.4138, 0.81", "-8.70593, 285.092, 34.412, 0.81", "-8.68328, 285.805, 34.3935, 0.81", "-8.71305, 286.4, 34.3658, 0.88", "-8.79319, 286.877, 34.3377, 0.81", "-9.01281, 287.649, 34.2862, 0.74", "-9.30014, 288.408, 34.2329, 0.74", "-9.66945, 289.183, 34.178, 0.96", "-10.0774, 289.955, 34.1314, 0.44", "-10.4818, 290.688, 34.098, 0.44", "-10.8619, 291.384, 34.0822, 0.96", "-10.8997, 291.455, 34.0829, 0.96", "-11.1461, 291.977, 34.0904, 0.96", "-11.4165, 292.643, 34.103, 0.96", "-11.4823, 292.84, 34.1165, 0.96", "-11.7017, 293.446, 34.1817, 0.81", "-11.7764, 293.647, 34.2246, 0.81", "-12.1237, 294.524, 34.4678, 0.81", "-12.1477, 294.585, 34.4873, 0.81", "-12.4574, 295.388, 34.768, 0.96", "-12.7825, 296.309, 35.0921, 0.81", "-13.1651, 297.509, 35.5234, 0.81", "-13.1819, 297.572, 35.5451, 0.81", "-13.3292, 298.403, 35.7981, 0.81", "-13.3356, 298.47, 35.8133, 0.81", "-13.326, 299.275, 35.8483, 0.59", "-13.3187, 299.379, 35.8464, 0.59", "-13.2752, 299.95, 35.7787, 0.59", "-13.2072, 300.762, 35.6667, 0.59", "-13.1151, 301.716, 35.4989, 0.81", "-12.9633, 303.094, 35.2189, 0.81" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-4.19651, 71.5299, -28.055, 0.52", "-3.53677, 72.937, -31.1342, 0.52", "-3.52079, 72.9794, -31.2115, 0.52", "-3.19858, 74.0243, -32.697, 0.44", "-3.1799, 74.1013, -32.7855, 0.44", "-3.01683, 74.7783, -33.5884, 0.88", "-2.82326, 75.3919, -34.3777, 1.11", "-2.80131, 75.4581, -34.4535, 1.11", "-2.46575, 76.2009, -35.4226, 1.03", "-1.88367, 77.1735, -36.8813, 0.37", "-1.11687, 78.1531, -38.7965, 0.44", "-0.678762, 78.573, -39.8524, 0.44", "-0.608806, 78.6353, -40.0219, 0.44", "-0.290677, 79.0184, -40.9803, 0.44", "-0.267221, 79.0797, -41.1028, 0.44", "-0.152881, 80.1154, -42.7232, 0.96", "-0.170404, 80.5379, -43.2074, 1.33", "-0.244018, 81.5458, -44.2008, 1.18", "-0.358247, 83.0816, -45.578, 0.81", "-0.456117, 84.7569, -46.8965, 0.37", "-0.457942, 84.8527, -46.9665, 0.37", "-0.422945, 85.8165, -47.5743, 0.66", "-0.359282, 86.4398, -47.9837, 0.88", "-0.320518, 86.6427, -48.1089, 0.88", "-0.100335, 87.5653, -48.6731, 0.88", "0.165669, 88.7205, -49.3904, 0.74", "0.345493, 89.7435, -50.0062, 0.59", "0.528812, 91.1981, -50.8452, 1.03", "0.604701, 92.3411, -51.4375, 0.29", "0.662363, 93.6854, -52.0447, 0.81", "0.676282, 94.3884, -52.308, 0.88", "0.686981, 95.2177, -52.5388, 0.96", "0.684483, 96.0465, -52.7532, 0.66", "0.696158, 97.5232, -53.0731, 0.22", "0.738301, 98.891, -53.372, 1.62", "0.801776, 99.831, -53.5646, 1.99", "0.876166, 100.668, -53.7251, 1.77", "1.04473, 102.411, -54.0069, 1.25", "1.18393, 103.706, -54.1535, 0.81", "1.30668, 104.699, -54.2178, 0.66", "1.43896, 105.759, -54.2402, 0.81", "1.62044, 107.014, -54.2183, 0.29", "1.8631, 108.5, -54.1223, 0.29", "2.01616, 109.269, -54.0113, 0.44", "2.03817, 109.369, -53.9966, 0.44", "2.28596, 110.527, -53.8469, 0.59", "2.45224, 111.306, -53.7741, 1.11", "2.62705, 112.171, -53.7285, 1.11", "2.84602, 113.28, -53.6925, 0.88", "3.14517, 114.887, -53.6632, 0.52", "3.47331, 116.685, -53.6402, 0.52", "3.776, 118.341, -53.6321, 0.66", "4.03176, 119.709, -53.6456, 0.29", "4.29132, 121.024, -53.692, 0.81", "4.31405, 121.129, -53.7002, 0.81", "4.49188, 121.807, -53.7978, 1.03", "4.56743, 122.04, -53.8534, 1.03", "4.83715, 122.821, -54.0958, 1.03", "5.14391, 123.683, -54.4017, 0.96", "5.37998, 124.453, -54.6728, 0.66", "5.60971, 125.482, -54.982, 0.52", "5.68704, 126.213, -55.1432, 0.44", "5.72021, 127.612, -55.3677, 0.44", "5.70261, 127.836, -55.3835, 0.44", "5.56714, 128.688, -55.3638, 0.37", "5.33364, 129.756, -55.2435, 0.37", "5.01707, 131.124, -54.9908, 1.03", "4.99685, 131.224, -54.9722, 1.03", "4.86653, 132.085, -54.83, 1.18", "4.78649, 132.945, -54.715, 0.59", "4.7631, 133.934, -54.62, 0.37", "4.81523, 135.011, -54.5662, 0.29", "4.99062, 136.435, -54.5079, 0.22", "5.09061, 137.112, -54.4748, 0.44", "5.12954, 137.337, -54.4644, 0.44", "5.34276, 138.263, -54.3363, 0.44", "5.37305, 138.359, -54.3105, 0.44", "5.85944, 139.692, -53.8375, 0.74", "6.26164, 140.739, -53.408, 1.33", "6.77981, 142.03, -52.8476, 1.4", "7.59932, 144.04, -51.9675, 0.52", "8.11979, 145.345, -51.4077, 0.59", "8.48268, 146.32, -51.0195, 0.74", "8.71314, 146.994, -50.7895, 0.74", "8.74637, 147.106, -50.7588, 0.74", "8.92986, 147.927, -50.6058, 0.44", "9.07694, 149.102, -50.531, 0.52", "9.16218, 149.879, -50.5208, 0.66", "9.26282, 150.577, -50.497, 0.44", "9.42494, 151.538, -50.4499, 0.22", "9.65786, 152.882, -50.3607, 0.66", "9.75713, 153.551, -50.3168, 0.88", "9.87567, 154.492, -50.2553, 0.29", "9.99239, 155.633, -50.1737, 0.22", "10.053, 156.397, -50.1184, 0.37", "10.082, 157.187, -50.0886, 0.52", "10.0598, 158.394, -50.1206, 0.29", "10.0442, 159.026, -50.1565, 0.59", "10.0501, 159.267, -50.173, 0.59", "10.1253, 159.914, -50.2355, 0.59", "10.1466, 160.014, -50.2453, 0.59", "10.4037, 160.94, -50.3248, 0.59", "10.8603, 162.293, -50.3748, 0.44", "11.2429, 163.404, -50.3877, 0.59", "11.5539, 164.329, -50.3833, 1.03", "11.8461, 165.257, -50.3604, 1.03", "12.1031, 166.197, -50.3168, 0.81", "12.3286, 167.198, -50.25, 0.59", "12.5003, 168.271, -50.1669, 0.37", "12.6537, 169.806, -50.0509, 0.37", "12.7507, 171.072, -49.9549, 0.37", "12.8124, 172.096, -49.8846, 0.44", "12.8643, 173.173, -49.8255, 0.44", "12.9364, 174.185, -49.7837, 0.29", "13.0717, 175.488, -49.7251, 0.29", "13.2314, 176.485, -49.6897, 0.81", "13.4602, 177.43, -49.6426, 1.11", "13.7491, 178.372, -49.5846, 0.81", "14.2222, 179.746, -49.4806, 0.52", "14.2585, 179.843, -49.472, 0.52", "14.6918, 181.064, -49.3307, 0.52", "15.0986, 182.404, -49.1424, 0.29", "15.336, 183.337, -48.9974, 0.59", "15.4929, 184.287, -48.8404, 0.81", "15.505, 184.492, -48.8059, 0.81", "15.5395, 185.401, -48.6684, 0.81", "15.5752, 186.277, -48.5707, 0.66", "15.5808, 186.395, -48.5635, 0.66", "15.6549, 187.482, -48.5091, 0.44", "15.7509, 188.781, -48.449, 0.37", "15.8475, 189.988, -48.4003, 0.37", "15.9519, 191.294, -48.3505, 0.52", "16.0232, 192.355, -48.3061, 0.37", "16.0528, 193.205, -48.2598, 0.37", "16.0668, 194.099, -48.2086, 0.81", "16.0563, 194.938, -48.1557, 0.88", "16.022, 195.671, -48.0953, 0.59", "15.9962, 196.11, -48.0563, 0.44", "15.9699, 197.425, -47.9679, 0.37", "16.0212, 198.976, -47.9095, 0.37", "16.091, 199.738, -47.9356, 0.66", "16.1073, 199.855, -47.9463, 0.66", "16.3527, 200.984, -48.1267, 0.74", "16.4948, 201.553, -48.2366, 0.88", "16.8745, 202.829, -48.5514, 0.59", "17.2842, 204.082, -48.9211, 0.29", "17.3227, 204.188, -48.9569, 0.29", "17.961, 205.841, -49.567, 1.18" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.19651, 71.5299, -28.055, 0.59", "-4.06268, 72.2594, -27.9382, 0.59", "-3.97087, 72.7836, -27.8402, 0.29", "-3.9004, 73.2213, -27.7569, 0.29", "-3.8163, 73.7982, -27.6482, 0.29", "-3.64878, 75.1241, -27.3963, 0.29", "-3.55449, 75.9832, -27.2362, 0.74", "-3.51782, 76.5462, -27.1346, 0.74", "-3.49852, 77.1286, -27.0403, 0.52", "-3.49593, 77.4823, -26.9939, 0.44", "-3.49976, 77.9216, -26.9466, 0.29", "-3.51147, 78.4408, -26.9112, 0.29", "-3.5227, 79.1284, -26.8869, 0.66", "-3.51717, 79.5748, -26.866, 0.96", "-3.48868, 79.9871, -26.8404, 0.66", "-3.47113, 80.1385, -26.8293, 0.66", "-3.4014, 80.5952, -26.791, 0.44", "-3.33415, 81.0642, -26.7405, 0.29", "-3.27584, 81.5271, -26.682, 0.22", "-3.21441, 82.2817, -26.5231, 0.29", "-3.21341, 82.3428, -26.5068, 0.29", "-3.22831, 82.9178, -26.3351, 0.37", "-3.28251, 83.5428, -26.1381, 0.66", "-3.34156, 83.9766, -25.9965, 0.96", "-3.48328, 84.9651, -25.6864, 0.81", "-3.55734, 85.5925, -25.5039, 0.59", "-3.56145, 85.6611, -25.4873, 0.59", "-3.56174, 86.4003, -25.3474, 0.59", "-3.53356, 86.8649, -25.2865, 0.66", "-3.41341, 87.8503, -25.2112, 0.22", "-3.3179, 88.3408, -25.2096, 0.22", "-3.1606, 88.9468, -25.212, 0.74", "-3.01707, 89.459, -25.2142, 0.81", "-2.99702, 89.529, -25.2143, 0.81", "-2.85693, 90.0919, -25.2094, 0.88", "-2.75829, 90.5461, -25.1964, 0.81", "-2.65079, 91.0981, -25.1816, 0.29", "-2.52737, 92.0497, -25.1479, 0.29", "-2.4108, 93.4094, -25.0948, 0.74", "-2.38459, 94.0688, -25.0671, 1.11", "-2.39305, 94.6497, -25.0422, 0.88", "-2.45221, 95.6048, -24.9896, 0.22", "-2.54873, 96.6025, -24.9269, 0.22", "-2.56035, 96.7017, -24.9234, 0.22", "-2.59339, 96.9537, -24.9338, 0.22", "-2.66349, 97.5291, -24.9871, 0.74", "-2.71031, 97.8901, -25.0294, 1.11", "-2.8132, 98.579, -25.1481, 1.25", "-2.92652, 99.3658, -25.304, 0.74", "-3.09393, 100.427, -25.5439, 0.22", "-3.20129, 101.064, -25.6933, 0.37", "-3.35229, 101.914, -25.8903, 0.37", "-3.57182, 103.125, -26.1489, 0.52", "-3.65851, 103.618, -26.2411, 0.88", "-3.83071, 104.654, -26.39, 1.03", "-3.92405, 105.306, -26.4644, 0.66", "-4.01347, 106.037, -26.5356, 0.29", "-4.09237, 106.851, -26.5953, 0.22", "-4.14624, 107.539, -26.6132, 0.22", "-4.19147, 108.198, -26.6205, 0.44", "-4.21083, 108.637, -26.6161, 0.59", "-4.22008, 109.269, -26.62, 0.37", "-4.20927, 109.889, -26.6312, 0.29", "-4.16628, 110.62, -26.653, 0.44", "-4.08967, 111.31, -26.7052, 0.29", "-3.95071, 112.072, -26.8439, 0.66", "-3.86733, 112.539, -26.9555, 1.03", "-3.81533, 112.834, -27.0382, 1.25", "-3.73332, 113.421, -27.2131, 0.44", "-3.65785, 114.318, -27.4842, 0.52", "-3.6347, 115.373, -27.7994, 0.29", "-3.6638, 116.628, -28.1551, 0.29", "-3.66585, 116.72, -28.1784, 0.29", "-3.67895, 117.289, -28.322, 0.29", "-3.65282, 118.08, -28.511, 0.81", "-3.64453, 118.151, -28.5244, 0.81", "-3.54413, 118.609, -28.6166, 0.88", "-3.34532, 119.282, -28.8323, 0.88", "-3.18224, 119.87, -29.0423, 0.44", "-2.98108, 120.655, -29.3414, 0.22", "-2.83771, 121.421, -29.6833, 0.22", "-2.71934, 122.388, -30.1492, 0.81", "-2.68319, 123.167, -30.5363, 0.88", "-2.69797, 123.713, -30.7943, 0.96", "-2.72983, 124.178, -30.9996, 0.96", "-2.8693, 125.327, -31.4983, 0.44", "-2.87584, 125.392, -31.5246, 0.44", "-2.90528, 126.021, -31.7238, 0.44", "-2.91405, 126.901, -31.9579, 0.66", "-2.91304, 127.048, -31.9947, 0.66", "-2.9163, 127.456, -32.1205, 0.88", "-2.92324, 128.153, -32.3468, 0.52", "-2.92563, 128.778, -32.588, 0.37", "-2.96433, 130.193, -33.2174, 1.11", "-2.98989, 130.529, -33.3779, 1.25", "-3.15841, 131.86, -34.0076, 0.22", "-3.1717, 131.923, -34.0371, 0.22", "-3.32835, 132.378, -34.2641, 0.22", "-3.57418, 132.928, -34.5342, 0.22", "-3.76038, 133.283, -34.6718, 0.74", "-3.94711, 133.616, -34.7891, 1.03", "-4.23607, 134.123, -34.9303, 0.81", "-4.71899, 135.002, -35.1857, 0.52", "-4.89192, 135.312, -35.3117, 0.37", "-5.2065, 135.91, -35.6189, 0.29", "-5.48572, 136.525, -35.9614, 0.59", "-5.61616, 136.903, -36.1753, 0.96", "-5.70721, 137.279, -36.3838, 1.11", "-5.90078, 138.44, -36.9406, 0.37", "-5.90978, 138.504, -36.9694, 0.37", "-6.00954, 139.205, -37.2276, 0.29", "-6.1165, 139.925, -37.3829, 0.29", "-6.13119, 139.993, -37.3881, 0.29", "-6.33136, 140.697, -37.3499, 0.37", "-6.43451, 141.051, -37.2946, 0.59", "-6.64948, 141.768, -37.1732, 0.74", "-6.83644, 142.353, -37.0654, 0.52", "-7.10944, 143.245, -36.901, 0.22", "-7.26929, 143.874, -36.7976, 0.22", "-7.38169, 144.382, -36.749, 0.22", "-7.53249, 145.13, -36.7259, 0.74", "-7.64949, 145.78, -36.7453, 0.88", "-7.75175, 146.369, -36.7918, 0.74", "-7.87175, 147.098, -36.8688, 0.66", "-8.09789, 148.317, -37.0111, 0.29", "-8.27839, 149.134, -37.1079, 0.29", "-8.37584, 149.562, -37.1628, 0.44", "-8.40823, 149.71, -37.1815, 0.44", "-8.48979, 150.139, -37.2261, 0.44", "-8.54644, 150.552, -37.2523, 0.29", "-8.56343, 150.969, -37.2538, 0.74", "-8.53152, 151.562, -37.2583, 0.96", "-8.49658, 151.866, -37.2636, 0.88", "-8.38673, 152.597, -37.282, 0.29", "-8.29784, 153.097, -37.2973, 0.44", "-8.17444, 153.737, -37.3178, 0.29", "-8.02113, 154.672, -37.337, 0.37", "-7.95689, 155.068, -37.3433, 0.59", "-7.85003, 155.649, -37.356, 0.74", "-7.78468, 156.013, -37.3635, 0.52", "-7.70167, 156.465, -37.3631, 0.37", "-7.50496, 157.533, -37.3158, 0.52", "-7.33958, 158.41, -37.2485, 0.44", "-7.08472, 159.696, -37.1265, 0.88", "-6.97392, 160.209, -37.0732, 1.25", "-6.86421, 160.725, -37.0165, 1.03", "-6.692, 161.536, -36.9219, 0.29", "-6.55382, 162.24, -36.8359, 0.44", "-6.46257, 163.04, -36.7491, 0.37", "-6.42916, 163.811, -36.6846, 0.74", "-6.43006, 164.616, -36.6508, 0.74", "-6.43452, 164.687, -36.6508, 0.74", "-6.52789, 165.485, -36.6696, 0.74", "-6.66264, 166.362, -36.6867, 0.22", "-6.73447, 166.816, -36.6946, 0.52", "-6.81165, 167.325, -36.6995, 0.96", "-6.91788, 168.12, -36.701, 0.22", "-6.98476, 168.769, -36.6959, 0.66", "-7.01953, 169.36, -36.684, 1.03", "-7.02462, 170.181, -36.6185, 0.81", "-7.01996, 171.07, -36.5139, 0.52", "-7.02384, 171.573, -36.4485, 0.44", "-7.05676, 172.616, -36.3041, 0.37", "-7.11396, 173.535, -36.1707, 0.88", "-7.18874, 174.54, -36.025, 1.25", "-7.22989, 175.13, -35.9447, 0.88", "-7.26862, 175.927, -35.8529, 0.44", "-7.30969, 176.795, -35.7726, 0.59", "-7.33134, 177.312, -35.7399, 0.81", "-7.34848, 177.886, -35.7249, 0.59", "-7.35329, 178.612, -35.7342, 0.37", "-7.30799, 179.793, -35.7334, 0.52", "-7.26494, 180.549, -35.7118, 0.37", "-7.2528, 180.897, -35.6985, 0.74", "-7.26687, 181.414, -35.6692, 0.88", "-7.30534, 181.695, -35.6569, 0.88", "-7.42115, 182.2, -35.6901, 1.11", "-7.53896, 182.716, -35.7788, 1.03", "-7.64158, 183.205, -35.8941, 0.37", "-7.74929, 183.793, -36.0544, 0.37", "-7.86991, 184.681, -36.3428, 0.66", "-8.00094, 186.043, -36.8025, 0.29", "-8.05855, 186.947, -37.1036, 0.52", "-8.06078, 187.007, -37.1228, 0.52", "-8.06575, 187.51, -37.2673, 0.66", "-8.05382, 188.39, -37.467, 0.37", "-8.03097, 189.386, -37.6144, 0.66", "-8.02137, 190.117, -37.6707, 0.59", "-8.02248, 190.641, -37.6811, 0.74", "-8.02299, 191.336, -37.6599, 0.37", "-7.99832, 192.273, -37.5172, 0.59", "-7.99114, 192.411, -37.4819, 0.59", "-7.95363, 192.951, -37.3216, 0.37", "-7.86543, 194.021, -36.9824, 0.29", "-7.79188, 194.942, -36.7038, 0.52", "-7.67903, 196.415, -36.2718, 0.22", "-7.59543, 197.328, -36.0351, 0.52", "-7.56205, 197.812, -35.9302, 0.81", "-7.55154, 198.377, -35.8374, 0.52", "-7.58523, 199.382, -35.754, 0.74", "-7.59319, 199.452, -35.753, 0.74", "-7.79556, 200.372, -35.7982, 1.33", "-7.99444, 201.079, -35.8169, 0.88", "-8.26198, 201.874, -35.8122, 0.66", "-8.56099, 202.63, -35.7714, 0.52", "-8.94247, 203.504, -35.7036, 0.52", "-9.27365, 204.213, -35.6445, 0.52", "-9.6829, 204.995, -35.5717, 0.29", "-9.95859, 205.543, -35.5235, 0.52", "-10.2217, 206.055, -35.472, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "41.9396, 54.2998, 2.40569, 0.59", "41.9432, 55.062, 0.110207, 0.59", "42.0266, 55.4626, -1.0116, 0.74", "42.0323, 55.4797, -1.05735, 0.74", "42.1143, 55.6636, -1.50489, 0.74", "42.297, 55.9524, -2.20713, 0.96", "42.3105, 55.9685, -2.2516, 0.96", "42.5633, 56.0949, -2.67216, 0.96", "42.588, 56.1054, -2.71335, 0.96", "43.0401, 56.3219, -3.53155, 0.52", "43.3184, 56.4738, -4.0801, 0.52", "43.686, 56.6876, -4.82554, 0.81", "43.8911, 56.8106, -5.22769, 0.88", "44.2343, 57.0169, -5.94405, 0.52", "44.3419, 57.0805, -6.15456, 0.74", "44.3777, 57.1089, -6.24167, 0.74", "44.4827, 57.2404, -6.57927, 0.29", "44.5983, 57.4363, -7.00814, 0.59", "44.7251, 57.8253, -7.82007, 0.74", "44.7807, 58.056, -8.28396, 0.59", "44.8722, 58.6321, -9.42209, 1.03", "44.8776, 58.6696, -9.49206, 1.03", "44.8912, 58.7977, -9.71838, 0.74", "44.9438, 59.3773, -10.6311, 0.44", "44.977, 59.6199, -10.9574, 0.59", "45.0704, 60.0669, -11.5418, 0.66", "45.1784, 60.3302, -11.8668, 0.74", "45.1919, 60.3586, -11.9031, 0.74", "45.2494, 60.4614, -12.0347, 0.74", "45.2665, 60.4858, -12.064, 0.74", "45.5693, 61.0683, -12.7611, 0.29", "45.6143, 61.2757, -12.9817, 0.66", "45.6119, 61.3484, -13.054, 0.66", "45.5862, 61.5218, -13.2466, 0.88", "45.5739, 61.5555, -13.2882, 0.88", "45.2583, 62.2267, -14.1169, 0.29", "44.9326, 62.8115, -14.8372, 0.29", "44.5033, 63.5093, -15.7065, 1.11", "44.0707, 64.1663, -16.5324, 0.96", "43.2128, 65.4198, -18.0717, 0.66", "43.0408, 65.6649, -18.3624, 0.66", "42.9822, 65.7471, -18.453, 0.66", "42.6889, 66.1847, -18.8957, 0.59", "42.6446, 66.2647, -18.9627, 0.59", "42.3687, 66.9807, -19.3883, 0.52", "42.3642, 67.0133, -19.4035, 0.52", "42.3439, 67.3712, -19.5809, 0.96", "42.3543, 67.793, -19.7893, 1.11", "42.4607, 68.6591, -20.199, 0.29", "42.4678, 68.6963, -20.2204, 0.29", "42.5397, 68.938, -20.4217, 0.52", "42.5491, 68.9666, -20.4514, 0.52", "42.5843, 69.0646, -20.5694, 0.74", "42.5923, 69.0947, -20.6061, 0.74", "42.7178, 69.6313, -21.154, 0.74", "42.8051, 70.1532, -21.5909, 0.59", "42.8096, 70.1921, -21.6188, 0.59", "42.8573, 70.5531, -21.8442, 0.29", "42.942, 71.1543, -22.1569, 0.29", "43.0058, 71.6542, -22.3791, 0.88", "43.0458, 71.9425, -22.4693, 1.11", "43.0517, 71.9828, -22.4801, 1.11", "43.1255, 72.3841, -22.5977, 0.88", "43.1609, 72.541, -22.6617, 0.52", "43.3485, 73.1292, -22.9641, 0.37", "43.5253, 73.6204, -23.2707, 0.22", "43.5404, 73.6591, -23.2969, 0.22", "43.6379, 73.9114, -23.461, 0.74", "43.8195, 74.5063, -23.8382, 0.88", "43.911, 74.7986, -24.0226, 0.22", "44.0016, 75.0636, -24.2157, 0.29", "44.0148, 75.0984, -24.2462, 0.29", "44.0879, 75.3615, -24.5395, 0.29", "44.1626, 75.8429, -25.2334, 0.88", "44.1844, 76.0048, -25.5049, 1.18", "44.2352, 76.4644, -26.3677, 0.29", "44.2565, 76.6602, -26.7582, 0.88", "44.3417, 77.3238, -28.0711, 1.33", "44.4287, 77.8526, -29.1351, 0.52", "44.4652, 78.0354, -29.4904, 1.25", "44.4694, 78.0566, -29.5266, 1.25", "44.5754, 78.6115, -30.3137, 0.29", "44.64, 78.9084, -30.6711, 0.29", "44.7422, 79.1997, -30.9332, 0.59", "44.8036, 79.37, -31.0653, 0.96", "44.9275, 79.717, -31.3378, 0.96", "45.1377, 80.2388, -31.7872, 0.59", "45.1538, 80.2717, -31.8182, 0.59", "45.2851, 80.5182, -32.062, 0.29", "45.4807, 80.8727, -32.394, 0.44", "45.6062, 81.0909, -32.5867, 0.66", "45.7914, 81.4419, -32.8645, 0.29", "45.9211, 81.6727, -33.0299, 0.22", "46.0889, 81.9833, -33.2488, 0.66", "46.179, 82.1485, -33.3654, 0.74", "46.2742, 82.3245, -33.482, 0.59", "46.6164, 82.9098, -33.896, 0.22", "46.7701, 83.1209, -34.0977, 0.44", "46.7944, 83.1451, -34.1329, 0.44", "46.9368, 83.244, -34.3379, 0.59", "46.9588, 83.2576, -34.3712, 0.59", "47.1733, 83.373, -34.696, 0.59", "47.5298, 83.5488, -35.2096, 0.22", "47.7223, 83.6704, -35.4852, 0.59", "47.8516, 83.7622, -35.6631, 0.66", "48.0798, 83.9766, -36.0145, 0.66", "48.0998, 83.999, -36.0458, 0.66", "48.3519, 84.347, -36.4615, 0.22", "48.5324, 84.6188, -36.7469, 0.66", "48.6114, 84.7448, -36.8741, 0.96", "49.0269, 85.418, -37.5324, 0.22", "49.1576, 85.6598, -37.7763, 0.22", "49.2969, 86.0441, -38.2001, 0.59", "49.331, 86.2431, -38.4381, 0.96", "49.3388, 86.3384, -38.5615, 1.18", "49.3401, 86.3632, -38.5956, 1.18", "49.4071, 86.9398, -39.4799, 0.44", "49.4943, 87.3542, -40.2027, 0.37", "49.5851, 87.634, -40.7397, 0.29", "49.6582, 87.7922, -41.0551, 0.44", "49.7197, 87.9094, -41.2812, 0.44", "49.9457, 88.2359, -41.8767, 0.22", "50.1693, 88.4407, -42.2682, 0.81", "50.2157, 88.4747, -42.3377, 0.81", "50.3695, 88.5674, -42.5639, 0.96", "50.9538, 88.8907, -43.4389, 0.37", "51.2888, 89.0863, -43.9437, 0.37", "51.584, 89.3056, -44.4533, 0.29", "51.5992, 89.3177, -44.484, 0.29", "51.7851, 89.4648, -44.8869, 0.29", "51.9295, 89.5733, -45.1987, 0.74", "52.1427, 89.6971, -45.5624, 1.03", "52.5417, 89.9343, -46.2074, 0.88", "53.164, 90.2555, -46.9791, 0.29", "53.4075, 90.3483, -47.2159, 0.44", "53.7841, 90.4483, -47.5133, 0.29", "54.4362, 90.5402, -47.9296, 1.33", "54.689, 90.5451, -48.0557, 1.69", "55.578, 90.5063, -48.391, 0.29", "55.9768, 90.478, -48.5114, 0.29", "56.2158, 90.4534, -48.5911, 0.66", "56.2505, 90.4486, -48.6052, 0.66", "56.4905, 90.4149, -48.7418, 0.66", "56.8858, 90.3484, -49.0174, 0.22", "57.1094, 90.2867, -49.215, 0.44", "57.1461, 90.2749, -49.2455, 0.44", "57.4208, 90.1758, -49.4638, 0.44", "57.4453, 90.1672, -49.4892, 0.44", "57.7411, 90.0775, -49.8401, 0.29", "58.0314, 89.9951, -50.2643, 0.29", "58.2288, 89.9428, -50.5975, 0.74", "58.333, 89.9176, -50.7853, 0.96", "58.8437, 89.8206, -51.8093, 0.37", "58.9499, 89.8116, -52.0438, 1.03", "59.1766, 89.8463, -52.6582, 1.03", "59.2595, 89.8863, -52.952, 0.88" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "41.9396, 54.2998, 2.40569, 0.88", "44.2079, 54.7309, 3.01448, 0.88", "45.2521, 55.0457, 3.2425, 0.66", "45.8106, 55.2717, 3.37697, 0.66", "45.8607, 55.2972, 3.39063, 0.66", "46.4097, 55.6519, 3.56625, 0.66", "46.4555, 55.6865, 3.5821, 0.66", "46.9396, 56.2292, 3.78128, 0.74", "47.6815, 57.1074, 4.19172, 0.44", "48.019, 57.4944, 4.40754, 0.37", "48.5091, 58.0383, 4.73666, 0.37", "48.7395, 58.2908, 4.89747, 0.59", "49.2834, 58.8944, 5.27744, 0.59", "49.6739, 59.336, 5.54195, 0.59", "49.849, 59.5474, 5.63362, 0.88", "49.8935, 59.5923, 5.65058, 0.88", "50.3795, 59.9669, 5.81298, 1.18", "50.4831, 60.0313, 5.84879, 1.18", "50.813, 60.2097, 5.97323, 0.88", "51.5371, 60.5814, 6.25891, 0.44", "52.3738, 61.0192, 6.57288, 0.74", "53.4696, 61.5836, 6.97084, 1.33", "54.4569, 62.1013, 7.32303, 0.96", "55.4545, 62.6476, 7.67613, 0.52", "56.0517, 63.0015, 7.8933, 0.44", "56.8323, 63.4802, 8.19595, 0.37", "57.5983, 63.9719, 8.54303, 0.37", "58.1007, 64.2912, 8.81035, 0.37", "58.2327, 64.3716, 8.8962, 0.37", "58.6823, 64.6111, 9.24261, 0.59", "59.6794, 65.076, 10.156, 0.88", "60.4148, 65.3862, 10.9408, 0.88", "60.9562, 65.6195, 11.5937, 0.52", "61.2815, 65.7518, 12.0075, 0.52", "61.3105, 65.7655, 12.0447, 0.52", "61.5417, 65.9274, 12.3392, 0.52", "61.5679, 65.9705, 12.3675, 0.52", "61.7193, 66.3171, 12.4585, 0.74", "61.7514, 66.3973, 12.469, 0.74", "61.9676, 66.8978, 12.5041, 0.37", "62.2989, 67.6456, 12.5375, 0.44", "62.5596, 68.2844, 12.522, 0.44", "62.7613, 68.8162, 12.4891, 0.74", "62.8003, 68.9247, 12.4779, 0.74", "63.0208, 69.6233, 12.4011, 0.74", "63.0364, 69.6786, 12.3944, 0.74", "63.2503, 70.5099, 12.3037, 0.66", "63.2646, 70.5676, 12.2994, 0.66", "63.4035, 71.0658, 12.2737, 0.74", "63.671, 71.9516, 12.2602, 0.29", "63.8643, 72.4712, 12.2895, 0.44", "64.1221, 73.0566, 12.3633, 0.22", "64.3407, 73.4773, 12.4589, 0.66", "64.5108, 73.7913, 12.5492, 0.66", "64.5421, 73.8469, 12.5712, 0.66", "64.9787, 74.5211, 12.8854, 0.44", "65.0089, 74.5692, 12.9035, 0.44", "65.1615, 74.8193, 12.9689, 0.52", "65.2469, 74.979, 12.9961, 0.52", "65.3938, 75.3036, 13.0319, 0.52", "65.678, 76.0371, 13.103, 0.29", "65.9118, 76.7463, 13.1914, 0.29", "65.926, 76.7929, 13.2017, 0.29", "66.0696, 77.3021, 13.355, 0.44", "66.1125, 77.4738, 13.4238, 0.44", "66.2472, 77.977, 13.706, 0.44", "66.3647, 78.4203, 14.032, 0.59", "66.5113, 78.7867, 14.3458, 0.74", "66.5361, 78.8338, 14.3849, 0.74", "66.7679, 79.1827, 14.6427, 0.74", "67.2643, 79.6639, 14.9991, 0.52", "67.3068, 79.6962, 15.0216, 0.52", "67.8147, 80.0686, 15.2542, 0.44", "68.1092, 80.2715, 15.3932, 0.29", "68.5628, 80.6003, 15.6381, 0.29", "69.5489, 81.2633, 16.2569, 0.29", "69.8989, 81.5098, 16.5, 0.37", "70.3665, 81.855, 16.8362, 0.44", "71.0229, 82.3644, 17.3362, 0.96", "71.4303, 82.6841, 17.6358, 1.25", "72.4956, 83.489, 18.3059, 0.52", "72.9394, 83.844, 18.5303, 0.52", "73.3386, 84.1395, 18.6779, 0.66", "73.3924, 84.1758, 18.6904, 0.66", "73.898, 84.5348, 18.747, 0.44", "74.6262, 85.076, 18.7804, 0.29", "74.8439, 85.274, 18.7969, 0.52", "75.2013, 85.6045, 18.8672, 0.52", "75.6452, 86.025, 18.9857, 0.44", "75.9777, 86.3545, 19.0681, 0.29", "76.2767, 86.6199, 19.1452, 0.52", "76.9103, 87.165, 19.2685, 0.88", "77.2301, 87.4243, 19.3142, 0.52", "77.9332, 87.9623, 19.3708, 0.44", "78.4761, 88.3682, 19.3785, 0.59", "79.4544, 89.0198, 19.3426, 0.29", "80.1701, 89.4481, 19.2894, 0.29", "85.7614, 94.7485, 22.0601, 0.29", "89.9356, 101.23, 24.8182, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-114.966, -182.233, -14.021, 0.29", "-115.178, -183.067, -13.8709, 0.29", "-115.251, -183.351, -13.8198, 0.74", "-115.386, -183.882, -13.7241, 0.29", "-115.513, -184.381, -13.6342, 0.29", "-115.686, -185.06, -13.5119, 0.37", "-117.406, -192.038, -13.2317, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-114.966, -182.233, -14.021, 0.37", "-115.895, -182.418, -13.1377, 0.37", "-116.402, -182.513, -12.711, 0.37", "-117.339, -182.659, -11.9242, 0.44", "-118.0, -182.76, -11.3936, 0.37", "-119.311, -182.992, -10.3817, 0.88", "-119.77, -183.096, -10.0, 1.11", "-120.33, -183.24, -9.53744, 0.81", "-121.65, -183.677, -8.36096, 0.29", "-122.076, -183.828, -7.99826, 0.29", "-122.455, -183.963, -7.66614, 0.74", "-123.73, -184.397, -6.62973, 0.44", "-124.126, -184.523, -6.30405, 0.44", "-124.998, -184.74, -5.63539, 0.29", "-125.938, -184.99, -4.84575, 0.29", "-126.559, -185.149, -4.17108, 0.59", "-126.983, -185.244, -3.66784, 0.66", "-127.607, -185.363, -2.91074, 0.44", "-128.185, -185.472, -2.14522, 0.37", "-129.579, -185.754, -0.145542, 0.66", "-130.919, -186.065, 1.86747, 0.81", "-131.223, -186.127, 2.30204, 0.88", "-131.487, -186.179, 2.69855, 0.88", "-131.532, -186.187, 2.76623, 0.88", "-132.323, -186.313, 3.88523, 0.52", "-132.817, -186.309, 4.33326, 0.52", "-134.49, -186.3, 5.49981, 1.69" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "2.10131, -107.899, -19.7508, 0.74", "2.11432, -109.249, -20.359, 0.74", "2.22302, -110.35, -20.8083, 0.74", "2.43533, -111.862, -21.3622, 0.88", "2.59142, -112.789, -21.6747, 0.88", "2.84731, -114.309, -22.1869, 0.81", "3.19445, -116.371, -22.8818, 0.88", "3.49383, -117.635, -23.2461, 0.88", "3.75987, -118.519, -23.4832, 1.33", "4.08023, -119.454, -23.6894, 1.18" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "2.10131, -107.899, -19.7508, 0.59", "2.20718, -108.889, -19.9543, 0.59", "2.34624, -110.184, -20.4235, 0.52", "2.53295, -111.484, -20.946, 0.44", "2.7128, -112.608, -21.4144, 0.44", "3.00433, -114.13, -22.0161, 0.59", "3.39884, -115.949, -22.7386, 0.74", "3.73649, -117.311, -23.3266, 0.59", "4.01445, -118.296, -23.7695, 0.59", "4.04001, -118.374, -23.8026, 0.59", "4.584, -119.894, -24.3391, 0.59", "5.21962, -121.52, -24.7033, 0.74", "5.61244, -122.443, -24.8294, 0.74", "6.27736, -123.937, -24.9764, 0.66", "6.91059, -125.31, -25.0824, 0.59", "6.99949, -125.48, -25.0816, 0.59", "7.8097, -126.733, -24.9206, 0.59", "8.156, -127.167, -24.7974, 0.81", "8.2213, -127.243, -24.7711, 0.81", "8.84868, -127.96, -24.5214, 0.81", "10.0089, -129.329, -24.1774, 0.66", "10.8344, -130.408, -23.9991, 0.66", "11.5284, -131.469, -23.8468, 0.66", "12.2138, -132.664, -23.6361, 0.81", "12.6964, -133.615, -23.4587, 0.96", "13.32, -135.035, -23.2007, 0.52", "13.7546, -136.153, -23.0195, 0.52", "14.285, -137.618, -22.7194, 0.81", "14.7255, -138.789, -22.4363, 0.81", "15.1341, -139.862, -22.1514, 0.81", "15.1671, -139.957, -22.126, 0.81", "15.6356, -141.402, -21.7752, 0.81", "15.688, -141.572, -21.7457, 0.81", "16.1496, -143.28, -21.5458, 0.81", "16.4295, -144.577, -21.4183, 0.81", "16.64, -145.8, -21.2845, 0.66", "16.6539, -145.901, -21.2684, 0.66", "16.7876, -147.199, -21.0162, 0.37", "16.9557, -148.737, -20.6904, 0.66", "17.0339, -149.445, -20.526, 0.96", "17.2209, -150.84, -20.1299, 0.74", "17.4672, -152.517, -19.5947, 0.96", "17.6484, -153.801, -19.1986, 0.81", "17.8579, -155.318, -18.753, 0.74", "17.8668, -155.393, -18.7374, 0.74", "18.0495, -156.988, -18.5389, 0.74", "18.0633, -157.078, -18.5374, 0.74", "18.4382, -158.63, -18.8249, 0.44", "18.6783, -159.429, -19.0565, 0.44", "19.2248, -161.047, -19.6564, 1.4", "19.638, -162.076, -20.1356, 1.18", "20.2369, -163.333, -20.8745, 1.03", "21.3917, -165.373, -22.197, 0.66", "21.9003, -166.128, -22.7064, 0.66", "22.0259, -166.297, -22.8183, 0.66", "23.2316, -167.815, -23.7574, 0.81", "24.1366, -168.932, -24.4941, 0.96", "25.3402, -170.375, -25.4842, 0.74", "26.2983, -171.459, -26.1879, 0.74", "27.0477, -172.279, -26.7057, 0.96", "27.6148, -172.905, -27.0496, 1.25" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-17.5643, -292.251, -13.8473, 0.29", "-16.5153, -292.233, -13.8496, 0.29", "-15.8794, -292.222, -13.8511, 0.29", "-14.6378, -292.201, -13.8539, 0.22", "-14.0297, -292.19, -13.8552, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-17.5643, -292.251, -13.8473, 0.59", "-17.7477, -293.137, -13.9534, 0.59", "-17.7623, -293.194, -13.9603, 0.59", "-18.0305, -294.105, -14.0588, 0.52", "-18.3127, -295.025, -14.1524, 0.66", "-18.5576, -295.894, -14.2285, 0.66", "-18.7988, -296.795, -14.3009, 0.81", "-18.8524, -296.978, -14.3116, 0.81", "-19.0843, -297.891, -14.309, 0.81", "-19.1081, -298.012, -14.3007, 0.81", "-19.1891, -299.074, -14.0932, 0.81", "-19.1896, -299.139, -14.0824, 0.81", "-19.1612, -300.1, -14.0675, 0.59", "-19.1274, -301.058, -14.1549, 0.37", "-19.0884, -301.642, -14.316, 0.74", "-19.0075, -302.794, -14.9684, 0.81", "-18.8842, -303.997, -15.8851, 0.52", "-18.6578, -305.432, -17.1629, 0.52", "-18.6513, -305.469, -17.1993, 0.52", "-18.415, -306.506, -18.4733, 0.96", "-18.0283, -307.73, -20.2531, 1.69", "-17.8255, -308.185, -21.0237, 0.37", "-17.4663, -308.755, -22.1292, 0.37", "-17.2687, -309.004, -22.6421, 0.66", "-16.2553, -310.141, -25.0283, 1.25", "-15.4853, -310.893, -26.6672, 0.44", "-14.9688, -311.352, -27.6644, 0.81", "-13.9552, -312.23, -29.5523, 0.37", "-13.5349, -312.574, -30.2638, 0.29", "-12.8954, -313.055, -31.1786, 0.29", "-12.5755, -313.297, -31.5304, 0.96", "-12.221, -313.555, -31.8582, 0.96", "-11.4513, -314.151, -32.4919, 0.44", "-11.1668, -314.355, -32.7389, 0.81", "-10.7713, -314.605, -33.114, 1.03", "-10.7262, -314.633, -33.156, 1.03", "-9.52474, -315.435, -34.2415, 0.37", "-8.71858, -316.01, -34.9592, 1.4", "-7.34076, -317.165, -36.3749, 0.37", "-6.96511, -317.533, -36.799, 0.66", "-6.43638, -318.11, -37.4026, 0.29", "-5.99468, -318.626, -37.8545, 0.96", "-5.79898, -318.876, -38.023, 0.96", "-4.36183, -320.875, -39.063, 0.37", "-4.18002, -321.163, -39.1609, 0.59", "-3.66887, -321.956, -39.4435, 0.29", "-3.10305, -322.749, -39.7918, 0.96", "-3.06965, -322.792, -39.8122, 0.96", "-2.76297, -323.159, -39.8893, 1.33", "-2.72663, -323.201, -39.8662, 1.33", "-2.48512, -323.486, -39.6889, 1.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-45.7789, -70.9576, -11.6769, 0.29", "-45.2622, -72.2952, -11.2936, 0.29", "-44.894, -73.2482, -11.0206, 0.37", "-44.5541, -74.128, -10.7685, 0.37", "-44.0672, -75.3881, -10.4074, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-45.7789, -70.9576, -11.6769, 0.37", "-46.6196, -71.6208, -11.4345, 0.37", "-47.1969, -72.02, -11.1743, 0.37", "-47.8598, -72.4055, -10.8351, 0.81", "-48.3015, -72.6347, -10.5088, 1.25", "-48.6295, -72.7932, -10.2238, 1.25", "-50.0221, -73.4733, -8.99317, 0.44", "-50.1176, -73.515, -8.90199, 0.44", "-50.4409, -73.6443, -8.59049, 0.74", "-51.7253, -74.1605, -7.4067, 0.52", "-52.4033, -74.4713, -6.83894, 0.59", "-52.9203, -74.7595, -6.53289, 0.44", "-53.3528, -75.0564, -6.4267, 0.29", "-53.8207, -75.4213, -6.39009, 0.29", "-54.4102, -75.9607, -6.45298, 1.11", "-54.7787, -76.3493, -6.56413, 1.33", "-55.6326, -77.4491, -6.91727, 0.74", "-56.0398, -78.0981, -7.1109, 0.74", "-56.2469, -78.516, -7.22187, 1.11", "-56.4685, -79.0413, -7.32569, 0.88", "-56.7078, -79.6931, -7.41118, 0.66", "-56.9605, -80.4704, -7.47103, 0.37", "-57.0881, -80.9959, -7.47802, 0.37", "-57.2543, -81.8117, -7.48875, 0.37", "-57.3989, -82.7144, -7.50638, 0.37", "-57.4865, -83.3843, -7.52552, 0.29", "-57.5389, -84.0255, -7.53098, 0.59", "-57.5707, -84.6803, -7.50684, 0.81", "-57.5697, -84.7334, -7.50478, 0.81", "-57.5053, -85.4564, -7.45553, 0.74", "-57.4381, -85.9128, -7.42435, 1.11", "-57.2667, -86.9189, -7.33792, 0.59", "-57.1914, -87.3794, -7.28966, 1.03", "-57.0671, -88.2789, -7.16582, 0.52", "-56.9814, -89.0309, -7.05182, 0.74", "-56.9359, -89.5617, -6.97084, 0.66", "-56.8726, -90.5256, -6.82964, 0.44", "-56.861, -91.3798, -6.70674, 0.44", "-56.9248, -92.2729, -6.57081, 0.44", "-56.9907, -92.6327, -6.51273, 0.81", "-57.1671, -93.2783, -6.41852, 1.18", "-57.2574, -93.5218, -6.37998, 1.33", "-57.6939, -94.5107, -6.19877, 0.44", "-58.0631, -95.2845, -6.05828, 0.59", "-58.3544, -95.8586, -5.88632, 0.81", "-58.508, -96.1283, -5.77576, 0.81", "-58.9116, -96.7291, -5.42994, 0.37", "-59.3766, -97.3174, -5.02844, 0.74", "-59.5724, -97.5267, -4.85925, 0.96", "-60.6732, -98.6165, -3.86257, 0.59", "-61.1579, -99.0554, -3.42284, 0.81", "-62.1356, -99.8628, -2.53779, 0.52", "-62.7399, -100.297, -2.00642, 0.52", "-63.2831, -100.635, -1.57017, 0.74", "-66.9201, -107.948, 1.87854, 0.74", "-70.9194, -115.441, 4.41832, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-101.665, -78.2245, -123.844, 0.52", "-101.577, -79.5046, -124.135, 0.52", "-101.464, -80.9857, -124.439, 0.88", "-101.391, -81.6814, -124.55, 0.88", "-101.226, -82.8482, -124.713, 0.37", "-101.149, -83.3561, -124.769, 0.29", "-101.087, -83.8224, -124.812, 0.88", "-101.075, -83.9174, -124.817, 0.88", "-101.017, -84.6517, -124.784, 0.88", "-100.987, -85.6072, -124.709, 0.29", "-101.008, -86.2526, -124.615, 0.29", "-101.061, -86.8387, -124.525, 0.22", "-101.165, -87.4986, -124.418, 0.22", "-101.238, -87.8113, -124.367, 0.81", "-101.419, -88.3649, -124.272, 1.25", "-101.754, -89.2587, -124.094, 0.37", "-102.082, -90.0911, -123.933, 0.22", "-102.287, -90.5988, -123.837, 0.66", "-102.489, -91.0749, -123.75, 0.81", "-102.918, -92.026, -123.586, 0.22", "-103.143, -92.4855, -123.513, 0.88", "-103.278, -92.7375, -123.478, 1.03", "-103.472, -93.12, -123.424, 1.03", "-103.661, -93.5263, -123.36, 0.74", "-103.686, -93.5938, -123.348, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-101.665, -78.2245, -123.844, 0.22", "-102.954, -78.2633, -125.597, 0.22", "-103.473, -78.3196, -126.249, 0.22", "-104.04, -78.4093, -126.884, 0.81", "-104.349, -78.4728, -127.191, 1.11", "-104.735, -78.5682, -127.526, 1.03", "-105.831, -78.8592, -128.383, 0.22", "-106.037, -78.9325, -128.503, 0.66", "-106.499, -79.1151, -128.766, 0.96", "-107.034, -79.3005, -129.026, 0.29", "-107.651, -79.4647, -129.315, 0.29", "-107.888, -79.5087, -129.414, 0.96", "-108.366, -79.561, -129.609, 1.18", "-108.411, -79.5622, -129.631, 1.18", "-108.996, -79.5403, -129.959, 0.88", "-109.084, -79.5355, -130.009, 0.88", "-109.45, -79.5308, -130.216, 0.66", "-110.324, -79.6018, -130.754, 0.29", "-110.488, -79.6238, -130.854, 0.29", "-111.17, -79.7468, -131.272, 0.29", "-111.522, -79.7993, -131.546, 0.59", "-111.802, -79.8236, -131.786, 0.59", "-112.629, -79.8557, -132.567, 0.29", "-112.856, -79.8534, -132.784, 1.03", "-113.183, -79.8145, -133.16, 1.33", "-114.143, -79.5396, -134.52, 0.29", "-114.314, -79.4673, -134.777, 0.29", "-114.346, -79.4508, -134.827, 0.29", "-114.615, -79.317, -135.3, 0.59", "-115.248, -79.0716, -136.473, 0.81", "-115.669, -78.9843, -137.347, 0.52", "-115.878, -78.999, -137.815, 1.11", "-116.243, -79.1, -138.731, 1.4", "-116.771, -79.2841, -140.124, 0.29", "-116.889, -79.3426, -140.464, 0.88", "-117.363, -79.7157, -141.868, 0.52", "-117.713, -80.108, -143.004, 0.81", "-117.83, -80.2842, -143.448, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-12.9633, 303.094, 35.2189, 0.37", "-12.7183, 303.093, 34.8443, 0.37", "-12.2467, 303.04, 34.1211, 0.66", "-12.2148, 303.033, 34.0743, 0.66", "-11.9817, 302.981, 33.7351, 0.29", "-11.944, 302.973, 33.6809, 0.29", "-11.3412, 302.879, 32.7315, 0.29", "-11.3114, 302.876, 32.6836, 0.29", "-11.1666, 302.887, 32.4623, 0.66", "-11.0017, 302.91, 32.193, 0.52", "-10.9735, 302.918, 32.1421, 0.52", "-10.453, 303.146, 31.2101, 0.22", "-10.19, 303.362, 30.7708, 0.22", "-10.0512, 303.489, 30.5286, 0.29", "-4.95778, 305.616, 24.6414, 0.29", "0.0240568, 309.184, 19.39, 0.29", "3.64904, 313.315, 13.4804, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-12.9633, 303.094, 35.2189, 0.29", "-12.7501, 304.221, 35.2101, 0.29", "-12.7005, 304.601, 35.203, 0.29", "-12.6977, 304.652, 35.2052, 0.29", "-12.6924, 305.235, 35.2531, 0.29", "-12.6936, 305.278, 35.2576, 0.29", "-12.7466, 306.061, 35.3894, 0.29", "-12.7558, 306.102, 35.3996, 0.29", "-12.844, 306.586, 35.5562, 0.52", "-12.8553, 306.683, 35.5887, 0.52", "-12.8633, 306.886, 35.6502, 0.52", "-12.858, 307.379, 35.7781, 0.22", "-12.8319, 307.861, 35.8702, 0.22", "-12.795, 308.343, 35.9455, 0.44", "-12.7532, 308.713, 35.9803, 0.44", "-12.6871, 309.237, 36.0174, 0.22", "-12.6798, 309.289, 36.0186, 0.22", "-12.5674, 310.021, 35.962, 0.22", "-12.8378, 317.184, 36.0776, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "17.961, 205.841, -49.567, 0.66", "18.1758, 206.528, -49.6664, 0.66", "18.3984, 207.173, -49.7876, 0.29", "18.4234, 207.241, -49.8024, 0.29", "18.6762, 207.898, -49.96, 0.29", "19.0979, 209.041, -50.2121, 0.29", "19.2686, 209.542, -50.3055, 0.52", "19.3224, 209.708, -50.3324, 0.52", "19.3982, 209.951, -50.3703, 0.52", "19.532, 210.4, -50.4323, 0.37", "19.6996, 211.028, -50.4941, 0.37", "19.8702, 212.01, -50.4743, 0.88", "19.8899, 212.145, -50.4635, 0.88", "19.9681, 212.689, -50.4084, 1.03", "20.051, 213.211, -50.358, 1.18", "20.157, 213.777, -50.3165, 0.66", "20.3126, 214.472, -50.2891, 0.52", "20.399, 214.804, -50.2881, 0.59", "20.5092, 215.158, -50.315, 0.44", "20.8562, 216.094, -50.4726, 0.29", "21.0025, 216.446, -50.5601, 0.37", "21.0287, 216.514, -50.5823, 0.37", "21.1626, 216.915, -50.7195, 0.22", "21.4073, 217.724, -50.9397, 0.59", "21.529, 218.152, -51.0322, 0.88", "21.7275, 218.878, -51.151, 0.52", "21.973, 219.8, -51.2621, 0.29", "22.1518, 220.483, -51.3161, 0.29", "22.3819, 221.405, -51.3397, 0.59", "22.4029, 221.478, -51.3349, 0.59", "22.5724, 221.97, -51.2736, 0.29", "22.6157, 222.073, -51.2558, 0.29", "23.0169, 222.803, -51.1683, 0.52", "23.1943, 223.139, -51.1629, 0.66", "23.5755, 223.957, -51.1981, 0.52", "23.6063, 224.027, -51.2021, 0.52", "23.8108, 224.524, -51.2358, 0.29", "24.2063, 225.75, -51.3715, 0.29", "24.4157, 226.659, -51.5096, 0.66", "24.4827, 226.991, -51.5551, 0.88", "24.4952, 227.063, -51.5643, 0.88", "24.6087, 227.742, -51.6078, 0.52", "24.7442, 228.636, -51.5966, 0.52", "24.8639, 229.388, -51.5534, 0.29", "25.0597, 230.364, -51.508, 0.29", "25.2422, 231.112, -51.4794, 1.03", "25.4627, 231.901, -51.4578, 0.74", "25.7824, 232.772, -51.433, 0.29", "26.3112, 233.968, -51.407, 0.44", "26.6121, 234.576, -51.4109, 0.37", "26.9845, 235.285, -51.4401, 0.37", "27.4313, 236.026, -51.4837, 0.96", "28.1025, 236.992, -51.5798, 0.37", "28.5886, 237.617, -51.6579, 0.37", "29.0438, 238.152, -51.7332, 0.59", "29.2936, 238.44, -51.788, 0.88", "29.4408, 238.614, -51.8285, 0.88", "29.8914, 239.164, -51.982, 0.59", "29.9273, 239.212, -51.9978, 0.52", "30.8185, 240.421, -52.4229, 0.15", "31.2054, 240.98, -52.6321, 0.59", "31.2449, 241.038, -52.6546, 0.59", "31.5486, 241.464, -52.8567, 0.59", "31.5879, 241.517, -52.887, 0.59", "31.9082, 241.95, -53.1575, 0.88", "32.341, 242.565, -53.561, 1.18", "32.5324, 242.845, -53.7374, 1.18", "33.245, 243.94, -54.3488, 0.15", "33.7513, 244.782, -54.7479, 0.15", "34.0109, 245.265, -54.9309, 0.52", "34.2961, 245.857, -55.1058, 0.66", "34.4462, 246.215, -55.1809, 0.74", "34.7166, 246.962, -55.2807, 0.29", "34.9511, 247.686, -55.3421, 0.37", "35.3143, 248.598, -55.4215, 0.29", "35.3505, 248.673, -55.4301, 0.29", "35.9358, 249.614, -55.6307, 0.52", "35.9792, 249.671, -55.6496, 0.52", "36.637, 250.37, -55.987, 0.81", "37.3789, 251.043, -56.3962, 0.37", "37.4317, 251.085, -56.4251, 0.37", "38.2007, 251.763, -56.8348, 0.29", "38.5387, 252.092, -57.0088, 0.37", "38.5782, 252.137, -57.0291, 0.37", "38.9598, 252.656, -57.2427, 0.37", "39.5915, 253.489, -57.5443, 0.29", "40.3587, 254.386, -57.8548, 0.37", "40.6545, 254.714, -57.9629, 0.88", "40.9972, 255.069, -58.0985, 0.96", "41.8934, 255.847, -58.4668, 0.52", "43.0828, 256.722, -58.9902, 0.66", "43.5643, 257.019, -59.2056, 0.66", "44.2203, 257.355, -59.5052, 0.29", "44.9848, 257.711, -59.8542, 0.44", "45.8861, 258.107, -60.2579, 1.11", "46.61, 258.423, -60.576, 1.11", "47.7018, 258.938, -61.0821, 1.11", "48.1918, 259.153, -61.2818, 1.55", "49.0408, 259.479, -61.5942, 1.55", "49.1548, 259.514, -61.6313, 1.55", "49.8794, 259.681, -61.8229, 1.55", "49.9394, 259.691, -61.8371, 1.55", "50.8936, 259.798, -62.0497, 2.06", "50.9657, 259.805, -62.0635, 2.06", "52.9505, 259.907, -62.418, 0.52", "54.134, 259.942, -62.6299, 0.74" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.961, 205.841, -49.567, 0.74", "18.0955, 204.66, -49.5052, 0.74", "18.0994, 204.596, -49.5013, 0.74", "18.1218, 203.799, -49.4509, 0.37", "18.1159, 202.652, -49.3686, 0.22", "18.0889, 202.106, -49.322, 0.37", "18.0367, 201.436, -49.2654, 0.15", "17.8999, 200.417, -49.1785, 0.15", "17.8362, 199.964, -49.1383, 0.44", "17.7574, 199.472, -49.0889, 0.44", "17.5682, 198.529, -48.9808, 0.22", "17.3114, 197.444, -48.8744, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "59.2595, 89.8863, -52.952, 0.22", "59.1777, 90.8403, -54.5523, 0.22", "59.1488, 91.1775, -55.1178, 0.74", "59.1334, 91.3565, -55.4181, 0.74", "59.0127, 92.763, -57.7774, 0.29", "58.9831, 93.1084, -58.3568, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "59.2595, 89.8863, -52.952, 0.22", "59.5992, 89.5584, -53.9402, 0.22", "59.8299, 89.3896, -54.6754, 0.66", "59.9834, 89.2969, -55.1633, 0.66", "60.1766, 89.2156, -55.726, 0.52", "60.5887, 89.176, -56.8251, 0.22", "60.8112, 89.2183, -57.3343, 0.22", "61.2029, 89.427, -58.0036, 0.59", "61.426, 89.5697, -58.3116, 0.74", "61.7753, 89.7849, -58.7137, 0.74", "62.5428, 90.2325, -59.447, 0.29", "63.2501, 90.6236, -59.9984, 0.29", "64.1452, 91.1112, -60.644, 0.59", "64.5747, 91.3323, -60.9214, 0.52", "65.4305, 91.758, -61.4552, 0.22", "65.9069, 91.9586, -61.7438, 0.29", "66.5731, 92.1355, -62.1259, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "89.9356, 101.23, 24.8182, 0.29", "96.104, 107.357, 27.7745, 0.29", "100.788, 114.517, 31.1094, 0.29", "105.598, 121.451, 34.7299, 0.29", "110.441, 127.616, 39.5122, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "89.9356, 101.23, 24.8182, 0.44", "96.1475, 106.604, 27.0605, 0.29", "102.239, 112.204, 29.0719, 0.29", "107.432, 118.863, 30.1621, 0.29", "111.316, 126.047, 32.5721, 0.29", "113.844, 134.047, 34.0223, 0.29", "116.664, 141.845, 35.9597, 0.29", "119.648, 149.247, 38.9251, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-117.406, -192.038, -13.2317, 0.29", "-117.84, -196.992, -12.7288, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-117.406, -192.038, -13.2317, 0.44", "-124.974, -202.217, -16.8487, 0.29", "-130.404, -212.731, -22.6762, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-134.49, -186.3, 5.49981, 0.66", "-134.825, -185.211, 6.24376, 0.66", "-134.955, -184.539, 6.64096, 0.29", "-135.063, -183.776, 7.02113, 0.29", "-135.071, -183.713, 7.04558, 0.29", "-135.239, -182.51, 7.43428, 0.52", "-135.273, -182.274, 7.49954, 0.74", "-135.366, -181.344, 7.65531, 0.37", "-135.441, -180.542, 7.75822, 0.37", "-135.532, -179.75, 7.82512, 0.29", "-135.575, -179.265, 7.84573, 0.59", "-135.603, -178.727, 7.83823, 0.59", "-135.584, -178.106, 7.8371, 0.59", "-135.473, -177.282, 7.85097, 0.52", "-135.323, -176.677, 7.87616, 0.96", "-135.08, -175.958, 7.92591, 0.37", "-134.898, -175.514, 7.95739, 0.29", "-134.503, -174.679, 8.01766, 0.29", "-134.172, -174.003, 8.06678, 0.29", "-133.958, -173.56, 8.09881, 0.52", "-133.934, -173.499, 8.10191, 0.52", "-133.826, -173.129, 8.11488, 0.52", "-133.68, -172.402, 8.13554, 0.37", "-133.552, -171.564, 8.15531, 0.37", "-133.545, -171.496, 8.15689, 0.37", "-133.442, -170.148, 8.18876, 0.37", "-133.393, -168.935, 8.21931, 0.37", "-133.378, -167.427, 8.25892, 0.37", "-133.379, -167.303, 8.26261, 0.37", "-133.351, -166.133, 8.28859, 0.37", "-133.348, -166.074, 8.28974, 0.37", "-133.285, -165.325, 8.30516, 0.88", "-133.267, -165.175, 8.30665, 0.88", "-133.084, -164.247, 8.30875, 0.29", "-132.788, -163.084, 8.31333, 0.29", "-132.555, -162.347, 8.31675, 0.44", "-132.373, -161.799, 8.32197, 0.44", "-132.152, -161.154, 8.31221, 0.29", "-132.125, -161.071, 8.30952, 0.29", "-131.782, -160.15, 8.26909, 0.66", "-131.686, -159.925, 8.27035, 0.66", "-131.504, -159.535, 8.28345, 0.59", "-131.05, -158.554, 8.34588, 0.37", "-131.023, -158.493, 8.35436, 0.37", "-130.415, -157.105, 8.63564, 0.37", "-130.096, -156.303, 8.86115, 0.37", "-129.876, -155.76, 9.04043, 0.37", "-129.79, -155.551, 9.12767, 0.88", "-129.537, -154.914, 9.49733, 0.74", "-129.521, -154.858, 9.53252, 0.74", "-129.579, -154.431, 9.87375, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-134.49, -186.3, 5.49981, 0.52", "-135.199, -186.86, 5.44846, 0.52", "-135.88, -187.334, 5.40497, 0.29", "-136.543, -187.766, 5.36567, 0.29", "-137.579, -188.401, 5.31275, 0.44", "-138.453, -188.933, 5.27136, 0.37", "-138.836, -189.166, 5.25391, 0.66", "-139.183, -189.348, 5.24216, 0.88", "-139.63, -189.542, 5.19918, 0.88", "-140.294, -189.792, 5.09389, 0.44", "-141.106, -190.092, 4.91416, 0.44", "-141.163, -190.113, 4.89894, 0.44", "-141.866, -190.351, 4.69696, 0.44", "-143.015, -190.713, 4.35489, 0.29", "-143.734, -190.916, 4.1422, 0.29", "-144.638, -191.124, 3.94054, 0.29", "-144.708, -191.137, 3.93093, 0.74", "-144.768, -191.148, 3.92753, 0.74", "-145.399, -191.282, 3.89558, 0.74", "-145.953, -191.442, 3.87981, 0.74", "-147.093, -191.837, 3.79319, 0.29", "-147.701, -192.095, 3.68827, 0.29", "-148.536, -192.497, 3.4808, 0.29", "-149.602, -193.073, 3.13608, 0.29", "-150.101, -193.372, 2.97358, 0.59", "-150.341, -193.515, 2.89749, 0.59", "-151.058, -193.91, 2.68255, 0.37", "-151.182, -193.956, 2.68391, 0.37", "-151.841, -194.07, 2.90153, 0.37", "-152.913, -194.147, 3.37858, 0.29", "-153.569, -194.195, 3.78945, 0.29", "-154.069, -194.237, 4.16978, 0.59", "-155.046, -194.381, 5.04443, 0.59", "-155.578, -194.498, 5.56993, 0.59", "-155.971, -194.643, 6.03376, 0.59", "-157.027, -195.248, 7.38037, 0.44", "-157.056, -195.27, 7.41779, 0.44", "-157.476, -195.648, 7.96183, 0.44", "-157.505, -195.675, 7.99563, 0.44", "-158.133, -196.219, 8.64409, 0.59", "-158.567, -196.54, 8.99781, 0.59", "-159.227, -196.924, 9.34807, 0.29", "-159.276, -196.949, 9.37273, 0.29", "-160.454, -197.441, 9.852, 0.44", "-160.981, -197.643, 10.0056, 0.96", "-161.518, -197.832, 10.1046, 1.33", "-162.217, -198.08, 10.2059, 0.88", "-163.371, -198.523, 10.3088, 0.44", "-164.281, -198.89, 10.3311, 0.44", "-165.27, -199.294, 10.2793, 0.52", "-165.986, -199.557, 10.2329, 0.52", "-166.046, -199.576, 10.2282, 0.52", "-166.973, -199.812, 10.1389, 0.37", "-167.656, -199.941, 10.0577, 0.37", "-168.372, -200.022, 10.0192, 0.37", "-169.365, -200.052, 10.0444, 0.52", "-169.684, -200.045, 10.0603, 0.96", "-170.037, -200.024, 10.071, 0.96", "-170.504, -199.975, 10.075, 0.96", "-171.127, -199.925, 10.0642, 0.81", "-172.189, -199.919, 10.0149, 0.37", "-172.241, -199.923, 10.0111, 0.37", "-173.127, -200.051, 9.93029, 0.37", "-173.641, -200.15, 9.87622, 0.59", "-174.019, -200.229, 9.8331, 0.66", "-174.607, -200.35, 9.7628, 0.52", "-175.347, -200.468, 9.63475, 0.29", "-175.417, -200.475, 9.62328, 0.29", "-176.108, -200.509, 9.52359, 0.29", "-176.795, -200.547, 9.45472, 0.44", "-177.257, -200.584, 9.42148, 0.44", "-178.191, -200.686, 9.3779, 0.44", "-179.128, -200.828, 9.35552, 0.37", "-179.558, -200.907, 9.37796, 0.37", "-180.792, -201.15, 9.61117, 0.37", "-181.353, -201.264, 9.7973, 0.37", "-181.916, -201.376, 10.0643, 0.37", "-182.407, -201.451, 10.3714, 0.37", "-183.198, -201.512, 10.9589, 0.37", "-184.061, -201.506, 11.6504, 0.37", "-184.337, -201.492, 11.8902, 0.81", "-184.544, -201.504, 12.0622, 1.11", "-184.971, -201.587, 12.3906, 1.11", "-185.014, -201.6, 12.4167, 1.11", "-185.707, -201.877, 12.7472, 0.59", "-186.752, -202.355, 13.211, 0.44", "-187.44, -202.669, 13.5452, 0.66", "-187.486, -202.689, 13.5673, 0.66", "-187.969, -202.882, 13.7766, 0.66", "-188.763, -203.141, 14.0687, 0.44", "-188.856, -203.17, 14.1045, 0.44", "-189.625, -203.408, 14.3804, 0.37", "-190.429, -203.684, 14.6754, 0.37", "-191.175, -203.966, 14.9391, 0.88", "-191.689, -204.179, 15.1092, 1.18", "-193.208, -204.801, 15.5913, 0.37", "-193.893, -205.067, 15.8179, 0.29", "-194.328, -205.225, 15.9685, 0.81", "-194.391, -205.245, 15.994, 0.81", "-194.665, -205.332, 16.1213, 0.81", "-195.795, -205.677, 16.6659, 0.37", "-196.222, -205.792, 16.8686, 0.74", "-196.68, -205.925, 17.0985, 0.74", "-197.515, -206.166, 17.5108, 0.81", "-198.646, -206.513, 18.0625, 0.29", "-199.031, -206.64, 18.2493, 0.29", "-199.076, -206.657, 18.2693, 0.29", "-199.593, -206.865, 18.4756, 0.74", "-199.994, -207.02, 18.6329, 0.81", "-201.009, -207.342, 19.0068, 0.37", "-201.066, -207.356, 19.0281, 0.37", "-201.681, -207.503, 19.2719, 0.29", "-202.166, -207.616, 19.4742, 0.29", "-202.901, -207.778, 19.8222, 0.52", "-203.523, -207.925, 20.1439, 0.88", "-203.75, -207.963, 20.2677, 1.03" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.08023, -119.454, -23.6894, 0.96", "3.46211, -121.616, -23.2449, 0.96", "3.11301, -122.957, -22.9458, 0.96", "2.84906, -124.123, -22.6763, 1.03", "2.72469, -124.822, -22.511, 1.25", "2.5896, -125.707, -22.2997, 1.11", "2.41679, -126.989, -21.9554, 0.74", "2.36997, -128.028, -21.6848, 0.96", "2.37211, -128.779, -21.4494, 0.74", "2.4348, -129.935, -21.0645, 0.59", "2.44205, -129.995, -21.046, 0.59", "2.66451, -131.388, -20.6886, 0.59", "2.91601, -132.622, -20.5086, 0.59", "2.92852, -132.678, -20.5073, 0.59", "3.13105, -133.808, -20.5399, 0.88", "3.28339, -134.917, -20.6245, 0.88", "3.3596, -135.587, -20.6964, 0.88", "3.4358, -136.666, -20.8258, 0.66", "3.43135, -137.785, -20.8765, 0.52", "3.36966, -138.883, -20.8307, 1.11", "3.30899, -139.399, -20.7631, 1.11", "3.18993, -140.205, -20.6128, 0.88", "3.04717, -141.281, -20.3804, 0.81", "2.94525, -142.256, -20.1676, 0.88", "2.93623, -142.982, -20.0503, 1.03", "3.01695, -144.117, -19.9408, 0.74", "3.12136, -144.966, -19.8864, 0.59", "3.30285, -145.95, -19.8447, 0.52", "3.50122, -146.713, -19.8483, 0.74", "3.9257, -148.058, -19.8909, 0.66", "4.2455, -148.998, -19.9288, 0.74", "4.52106, -149.813, -19.9505, 0.81", "4.74116, -150.578, -19.9417, 1.11", "4.93704, -151.408, -19.8981, 0.88", "4.95166, -151.47, -19.8973, 0.88", "5.21438, -152.415, -19.9748, 0.59", "5.52843, -153.374, -20.1425, 0.59", "5.87391, -154.35, -20.3656, 0.81", "6.31264, -155.542, -20.6591, 1.03", "7.1928, -157.704, -21.207, 1.03", "7.88538, -159.282, -21.5967, 0.81", "8.51265, -160.581, -21.9126, 0.59", "8.54121, -160.639, -21.9262, 0.59", "8.99443, -161.59, -22.1276, 0.74", "9.4519, -162.678, -22.2675, 0.66", "9.8308, -163.769, -22.2745, 0.66", "10.1743, -164.866, -22.2395, 0.66", "10.4371, -165.821, -22.2159, 0.96", "10.5989, -166.606, -22.2324, 1.18", "10.7187, -167.578, -22.3341, 1.03", "10.7357, -168.421, -22.516, 0.88", "10.6844, -169.394, -22.8408, 0.66", "10.6147, -169.992, -23.0859, 0.74", "10.4537, -171.143, -23.6006, 0.74", "10.309, -172.029, -23.9955, 0.81", "10.0895, -173.245, -24.5034, 0.81", "9.91111, -174.326, -24.8797, 1.03", "9.81204, -175.096, -25.0713, 1.11", "9.76053, -175.94, -25.2037, 0.81", "9.75545, -177.275, -25.2906, 0.66", "9.79299, -178.336, -25.2545, 0.81", "9.87005, -179.094, -25.1619, 0.81", "10.0069, -179.867, -25.0238, 0.81", "10.1362, -180.38, -24.9079, 1.03", "10.1559, -180.44, -24.8915, 1.03", "10.4794, -181.188, -24.6404, 0.74", "10.92, -182.007, -24.379, 0.44", "11.0832, -182.278, -24.3025, 0.74", "11.1192, -182.332, -24.2916, 0.74", "11.4101, -182.777, -24.2294, 0.74", "11.448, -182.839, -24.2226, 0.74", "12.1275, -184.093, -24.0806, 0.59", "12.3103, -184.48, -24.0368, 0.88", "12.6529, -185.337, -23.9474, 0.88", "13.018, -186.459, -23.8352, 0.66", "13.2143, -187.253, -23.7615, 0.74", "13.4207, -188.3, -23.7011, 0.88", "13.5356, -189.035, -23.7184, 0.44", "13.647, -189.7, -23.8101, 0.44", "13.771, -190.462, -23.9886, 0.52", "13.8976, -191.079, -24.2046, 0.81", "14.1653, -192.163, -24.648, 1.03", "14.5282, -193.383, -25.1645, 0.88", "14.9206, -194.535, -25.6112, 0.59", "15.1614, -195.164, -25.8254, 0.74", "15.6241, -196.297, -26.0934, 0.52", "15.8827, -196.919, -26.1511, 0.52", "16.2087, -197.744, -26.064, 0.81", "16.4482, -198.352, -25.8949, 1.03", "16.6082, -198.74, -25.7378, 1.03", "17.0603, -199.798, -25.2409, 0.52", "17.2316, -200.21, -25.0455, 0.66", "17.5146, -200.905, -24.7562, 0.66", "17.5399, -200.971, -24.7332, 0.66", "17.7784, -201.609, -24.5457, 0.81", "18.0863, -202.45, -24.344, 0.59", "18.4743, -203.504, -24.1482, 0.37", "18.682, -204.057, -24.0444, 0.88", "18.9661, -204.712, -23.9177, 1.18", "18.9945, -204.767, -23.905, 1.18", "19.3264, -205.27, -23.8272, 1.11", "19.7508, -205.796, -23.813, 0.96", "19.7943, -205.845, -23.8161, 0.96", "20.6274, -206.783, -23.9498, 0.59", "21.1145, -207.367, -24.0575, 0.81", "22.2039, -208.865, -24.3525, 0.59", "22.6547, -209.609, -24.5039, 0.88", "22.8999, -210.132, -24.6117, 0.88", "23.1003, -210.722, -24.7204, 0.81", "23.2531, -211.537, -24.8475, 0.59", "23.3173, -212.392, -24.9396, 0.66", "23.3048, -213.383, -24.9773, 1.03", "23.2959, -214.006, -24.9896, 1.33", "23.2963, -214.539, -25.008, 1.18", "23.3255, -215.256, -25.0659, 0.81", "23.4604, -216.18, -25.2146, 0.59", "23.7055, -217.06, -25.3755, 0.74", "23.9048, -217.6, -25.4465, 0.96", "23.926, -217.65, -25.4496, 0.96", "24.3791, -218.632, -25.4434, 0.96", "25.1607, -220.186, -25.3377, 0.74", "25.7751, -221.299, -25.194, 0.74", "26.344, -222.295, -25.0131, 0.88", "26.7787, -223.18, -24.7621, 0.88", "27.1407, -224.096, -24.4129, 0.59", "27.2707, -224.767, -24.0558, 0.59", "27.2321, -225.369, -23.6692, 0.59", "27.22, -225.414, -23.6413, 0.59", "26.4313, -227.27, -22.6265, 0.52", "25.9899, -228.06, -22.2617, 0.52", "25.076, -229.583, -21.7971, 1.18", "24.5411, -230.492, -21.6485, 1.18", "24.1496, -231.298, -21.6461, 0.52", "23.8002, -232.51, -21.8556, 0.52", "23.712, -233.488, -22.1708, 0.66", "23.7824, -235.084, -22.7831, 0.66", "23.9702, -235.997, -23.1916, 0.66", "24.4636, -237.59, -23.9053, 0.66", "25.1705, -239.283, -24.6183, 0.74", "25.4844, -239.882, -24.8431, 1.03", "25.8135, -240.429, -25.0169, 1.03", "26.522, -241.523, -25.2824, 0.66", "27.0387, -242.277, -25.4441, 0.37", "27.4917, -242.966, -25.5296, 0.74", "27.8629, -243.569, -25.5617, 1.03", "27.8972, -243.621, -25.5631, 1.03", "28.0589, -243.848, -25.5407, 1.25", "28.1015, -243.904, -25.5171, 1.25", "28.3752, -244.251, -25.3202, 1.25", "28.407, -244.299, -25.2929, 1.25", "28.6386, -244.706, -25.079, 1.25", "28.8422, -245.144, -24.879, 1.25", "29.2537, -246.289, -24.3837, 0.59", "29.5486, -247.187, -23.9892, 0.59", "29.8486, -248.193, -23.5473, 0.66", "30.0773, -248.959, -23.1967, 0.66", "30.3758, -249.922, -22.7287, 0.59", "30.6269, -250.699, -22.3255, 0.44", "30.8883, -251.345, -21.9257, 0.29", "30.9134, -251.384, -21.8925, 0.29", "31.3781, -251.782, -21.3348, 0.59", "31.8467, -252.097, -20.8075, 0.74", "31.8847, -252.122, -20.7605, 0.74", "32.4267, -252.512, -20.0548, 0.74", "32.4562, -252.539, -20.0063, 0.74", "33.0579, -253.198, -18.7422, 0.59", "33.3197, -253.533, -18.066, 0.81", "33.6753, -254.106, -16.9481, 0.66", "33.6943, -254.138, -16.8858, 0.66", "34.009, -254.684, -15.7299, 1.03", "34.2103, -255.035, -14.8224, 1.47", "34.2686, -255.194, -14.3211, 1.55", "34.3308, -255.524, -13.2017, 0.29", "34.3478, -255.762, -12.3854, 0.59", "34.3619, -256.125, -11.1865, 0.81", "34.355, -256.571, -9.74577, 1.18", "34.333, -257.184, -7.91333, 0.44", "34.3053, -257.611, -6.68092, 0.59", "34.3045, -257.634, -6.61965, 0.59", "34.3119, -257.97, -5.93679, 0.81", "34.3162, -258.001, -5.89268, 0.81", "34.4516, -258.521, -5.3109, 0.37", "34.6678, -259.11, -4.72689, 0.88", "34.8299, -259.585, -4.30907, 1.33", "34.9785, -260.099, -3.9069, 1.47", "35.3062, -261.243, -3.13806, 0.88", "35.3229, -261.297, -3.1056, 0.88", "35.5022, -261.813, -2.83288, 1.03", "35.8464, -262.669, -2.46514, 0.44", "36.238, -263.556, -2.14429, 0.44", "36.608, -264.335, -1.92722, 0.66", "36.6375, -264.39, -1.91566, 0.66", "36.9168, -264.899, -1.79161, 0.44", "37.2294, -265.45, -1.63944, 0.81", "37.4251, -265.777, -1.52624, 0.96", "37.7119, -266.266, -1.32948, 1.11", "38.0438, -266.9, -1.0465, 0.29", "38.3135, -267.437, -0.815453, 0.22", "38.3397, -267.493, -0.792854, 0.22", "38.6759, -268.165, -0.504777, 1.47", "38.7044, -268.216, -0.480628, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.08023, -119.454, -23.6894, 0.44", "4.50424, -120.949, -24.8873, 0.44", "4.98382, -122.438, -26.0732, 0.59", "6.38477, -126.324, -29.0776, 0.59", "7.07827, -128.121, -30.4097, 0.81", "8.01075, -130.396, -32.0491, 0.81", "8.90747, -132.524, -33.5295, 0.88", "9.4348, -133.746, -34.3276, 1.03", "10.2961, -135.552, -35.4279, 0.52", "10.7245, -136.366, -35.8266, 0.88", "11.4123, -137.664, -36.4382, 0.88", "11.7359, -138.383, -36.7529, 0.88", "11.7565, -138.477, -36.7977, 0.88", "11.7029, -139.754, -37.655, 0.44", "11.5583, -140.625, -38.3986, 0.74", "11.455, -141.638, -39.3293, 0.74", "11.4599, -142.906, -40.5388, 0.96", "11.7068, -144.648, -42.2359, 0.96", "12.2071, -146.422, -43.8816, 0.96", "12.8782, -148.168, -45.4601, 0.96", "13.8046, -150.168, -47.0953, 0.88", "14.8025, -152.088, -48.4851, 0.88", "15.7176, -153.801, -49.5563, 0.59", "16.6468, -155.543, -50.5328, 0.59", "17.3175, -156.904, -51.2379, 0.96", "17.9079, -158.291, -51.9158, 1.25", "18.3737, -159.654, -52.563, 1.33", "18.9552, -161.637, -53.4407, 0.96", "19.3744, -163.16, -54.0889, 0.81", "19.8683, -164.822, -54.8109, 0.88", "20.2038, -165.599, -55.101, 1.11", "20.2447, -165.663, -55.1266, 1.11", "21.0611, -166.61, -55.4596, 1.11", "21.7953, -167.269, -55.6039, 1.25", "21.9707, -167.403, -55.6362, 1.25", "23.2314, -168.301, -55.9901, 1.33", "24.5372, -169.271, -56.5687, 1.03", "25.2721, -169.886, -57.0486, 0.59", "25.8129, -170.401, -57.5458, 0.81", "27.0289, -171.824, -59.1705, 0.81", "27.7536, -172.953, -60.6017, 1.11", "28.2749, -174.16, -62.2061, 0.88", "28.7098, -175.611, -64.0917, 0.59", "28.9337, -176.471, -65.2041, 0.81", "29.3262, -177.943, -67.1296, 0.96", "29.692, -179.185, -68.6594, 0.81", "30.256, -180.858, -70.4927, 0.37", "30.8857, -182.399, -71.97, 1.03", "31.9379, -184.599, -73.7267, 0.96", "33.1467, -186.817, -75.2329, 1.18", "34.1388, -188.438, -76.2093, 1.18", "35.2539, -190.125, -77.1466, 1.18", "36.3562, -191.715, -77.9798, 0.81", "37.5896, -193.474, -78.813, 0.66", "38.2677, -194.456, -79.2151, 0.96", "39.588, -196.345, -79.8944, 1.25", "39.6471, -196.427, -79.9258, 1.25", "40.7787, -197.878, -80.4363, 1.11", "41.6127, -199.01, -80.7301, 0.81", "42.1208, -199.777, -80.8722, 1.25", "42.6656, -200.745, -80.9552, 1.25", "43.0837, -201.739, -80.9421, 0.66", "43.3848, -202.772, -81.0085, 0.59", "43.5251, -204.098, -81.1997, 0.59", "43.5057, -204.744, -81.3673, 0.88", "43.4966, -204.841, -81.3999, 0.88", "43.4, -206.078, -81.8975, 0.88", "43.4355, -208.289, -82.846, 0.59", "43.6047, -209.263, -83.288, 0.44", "43.6568, -209.437, -83.3606, 0.44", "43.9912, -210.319, -83.6994, 0.74", "44.5566, -211.698, -84.1569, 0.96", "45.0659, -212.854, -84.5458, 0.96", "45.8173, -214.61, -85.0554, 0.59", "46.1828, -215.54, -85.3395, 0.88", "46.2156, -215.633, -85.3685, 0.88", "46.5354, -216.629, -85.663, 0.96", "47.1839, -218.941, -86.3736, 0.59", "47.5436, -220.255, -86.7967, 1.03", "47.8508, -221.276, -87.1061, 1.18", "48.4198, -222.973, -87.6202, 0.88", "48.9047, -224.429, -88.0428, 0.74", "49.4086, -226.0, -88.4732, 0.66", "49.9617, -227.999, -88.9547, 0.52", "50.2307, -229.225, -89.2654, 0.81", "50.4112, -230.504, -89.6193, 0.37", "50.4262, -231.592, -89.9586, 0.37", "50.3601, -232.368, -90.2242, 0.88", "50.2277, -233.102, -90.5003, 1.18", "49.9748, -233.971, -90.8716, 1.33", "49.5371, -235.457, -91.5712, 0.88", "49.1431, -237.087, -92.3971, 0.74", "49.123, -237.179, -92.4455, 0.74", "48.6923, -239.345, -93.6247, 0.52", "48.4392, -240.72, -94.3918, 0.66", "48.0179, -243.211, -95.7858, 0.59", "47.8316, -244.626, -96.5249, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "27.6148, -172.905, -27.0496, 0.37", "28.5717, -173.122, -26.6033, 0.37", "29.6201, -173.436, -26.1182, 0.59", "30.2618, -173.635, -25.839, 0.59", "31.4185, -173.969, -25.3712, 0.59", "31.574, -174.012, -25.3111, 0.59", "32.4164, -174.231, -25.0281, 0.22", "32.8603, -174.309, -24.9587, 0.44", "33.5913, -174.378, -24.9979, 0.44", "34.1531, -174.408, -25.1146, 0.81", "34.2475, -174.405, -25.1431, 0.81", "34.918, -174.299, -25.411, 0.96", "36.3923, -173.927, -26.1862, 0.52", "36.876, -173.788, -26.4623, 0.52", "36.9423, -173.768, -26.5013, 0.52", "37.7645, -173.51, -26.986, 0.44", "39.2741, -173.011, -27.8342, 0.74", "40.6799, -172.523, -28.648, 0.29", "41.2871, -172.294, -28.9898, 0.29", "41.7013, -172.154, -29.2223, 0.59", "41.76, -172.139, -29.2554, 0.59", "42.2016, -172.076, -29.5325, 1.18", "43.6036, -172.012, -30.351, 1.11", "44.3817, -172.036, -30.8211, 0.37", "45.469, -172.114, -31.4879, 0.29", "46.7309, -172.237, -32.2257, 1.11", "48.4175, -172.415, -33.1432, 0.66", "49.4971, -172.546, -33.6939, 0.44", "50.8907, -172.724, -34.3893, 1.18", "51.4203, -172.789, -34.6682, 1.62", "52.2066, -172.854, -35.0763, 1.18", "53.1244, -172.884, -35.5056, 0.74", "53.1888, -172.884, -35.5324, 0.74", "54.8671, -172.823, -36.3819, 0.59", "54.9284, -172.818, -36.4148, 0.59" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "27.6148, -172.905, -27.0496, 0.59", "27.6426, -174.52, -26.556, 0.59", "27.6777, -175.328, -26.0642, 0.66", "27.7117, -175.73, -25.7114, 1.03", "27.7183, -175.88, -25.5661, 1.03", "27.7005, -176.172, -25.1953, 1.03", "27.6102, -176.931, -24.0986, 0.74", "27.37, -178.006, -22.2004, 1.03", "27.2404, -178.626, -20.7707, 1.11", "27.1911, -178.886, -20.1491, 0.74", "26.9335, -180.032, -17.5205, 0.74", "26.9222, -180.075, -17.4215, 0.74", "26.7917, -180.57, -16.3819, 0.66", "26.3529, -182.82, -12.5527, 0.66", "26.2745, -183.509, -11.614, 0.52", "26.2575, -184.4, -10.6592, 0.74", "26.2605, -184.451, -10.6208, 0.74", "26.3298, -185.189, -10.1834, 0.88", "26.5779, -187.085, -9.37214, 0.52", "26.7011, -188.006, -9.16321, 0.52", "26.8561, -188.969, -8.94136, 0.52", "27.0308, -189.899, -8.74808, 0.44", "27.1518, -190.622, -8.61726, 0.37", "27.3513, -191.891, -8.38752, 0.37", "27.5238, -192.903, -8.23283, 0.59", "27.6371, -193.496, -8.11956, 0.88", "27.6509, -193.558, -8.10197, 0.88", "27.7852, -194.07, -7.91789, 0.96", "28.1666, -195.438, -7.2064, 0.44", "28.3903, -196.163, -6.75019, 0.59", "28.4052, -196.207, -6.71604, 0.59", "28.801, -197.261, -5.88416, 0.81", "28.9296, -197.627, -5.59993, 0.96", "29.4423, -199.193, -4.43245, 0.52", "29.5459, -199.565, -4.17824, 0.74", "29.8441, -200.848, -3.38269, 0.52", "30.0253, -201.684, -2.97244, 0.74", "30.1735, -202.45, -2.66548, 0.44", "30.2759, -203.119, -2.38288, 0.29", "30.3258, -203.542, -2.17999, 0.37", "30.3774, -204.162, -1.75424, 0.59", "30.449, -204.9, -1.13905, 0.59", "30.6357, -206.077, -0.0234962, 0.81", "30.9689, -207.287, 1.24777, 0.44", "31.4329, -208.4, 2.54933, 0.88", "32.1074, -209.56, 4.05122, 0.74", "32.4771, -209.968, 4.65136, 0.29", "33.1869, -210.447, 5.45629, 0.37", "34.1218, -210.604, 5.80541, 0.37", "34.9363, -210.542, 5.82171, 0.66", "35.0009, -210.531, 5.81406, 0.66", "36.0111, -210.293, 5.57595, 0.29", "36.0817, -210.274, 5.56003, 0.29", "37.1962, -209.933, 5.37117, 0.15", "38.2445, -209.56, 5.13303, 0.15", "40.4964, -215.963, 11.147, 0.15", "41.895, -222.501, 17.2742, 0.15", "44.4722, -229.679, 22.1823, 0.15", "48.7325, -235.23, 27.9513, 0.15" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.48512, -323.486, -39.6889, 1.18", "-1.86787, -324.521, -39.4573, 1.18", "-1.21368, -325.553, -39.197, 0.96", "-0.926364, -325.986, -39.0924, 1.47", "-0.575776, -326.503, -38.9804, 1.84", "-0.14294, -327.131, -38.8532, 1.33", "0.453695, -328.0, -38.704, 0.74", "0.487229, -328.049, -38.7003, 0.74", "0.930411, -328.678, -38.6706, 0.81", "1.29085, -329.184, -38.6712, 0.44", "1.32412, -329.232, -38.6768, 0.44", "1.83049, -330.054, -38.8467, 0.29", "2.2712, -330.794, -39.0694, 0.44", "2.5422, -331.255, -39.2196, 0.81", "2.81974, -331.69, -39.3519, 0.81", "3.43074, -332.51, -39.5701, 0.37", "3.47359, -332.561, -39.5785, 0.37", "3.96681, -333.107, -39.6157, 0.81", "4.47008, -333.674, -39.6052, 1.11", "5.13797, -334.495, -39.535, 1.11", "5.91583, -335.588, -39.3879, 0.29", "6.43067, -336.457, -39.2348, 0.29", "6.73028, -337.101, -39.1029, 0.66", "6.99, -337.929, -38.9182, 0.88", "7.12718, -338.643, -38.7571, 1.03", "7.149, -339.248, -38.6316, 1.03", "7.07625, -339.965, -38.466, 0.74", "6.89585, -340.97, -38.2115, 0.22", "6.76353, -341.612, -38.013, 0.74", "6.75033, -341.672, -37.9897, 0.74", "6.6294, -342.248, -37.7393, 0.74", "6.61693, -342.301, -37.7159, 0.74", "6.45068, -342.979, -37.436, 0.29", "6.35071, -343.469, -37.2781, 0.29", "6.26019, -344.107, -37.1085, 1.03", "6.19623, -344.764, -37.0089, 1.4", "6.14567, -345.502, -36.9666, 0.52", "6.10088, -345.972, -36.9746, 0.29", "5.97213, -346.742, -37.1081, 0.37", "5.8526, -347.219, -37.28, 0.66", "5.61875, -347.955, -37.7177, 0.37", "5.49604, -348.285, -38.0169, 0.96", "5.37743, -348.607, -38.3576, 0.96", "5.06215, -349.407, -39.2861, 0.37", "4.77357, -350.152, -40.2217, 0.74", "4.50123, -350.957, -41.2748, 1.25", "4.13727, -352.408, -43.2525, 0.29", "4.03852, -352.896, -43.9442, 0.29", "4.03358, -352.932, -43.9981, 0.29", "4.0193, -353.453, -44.7604, 0.88", "4.04062, -353.697, -45.1144, 1.18", "4.21972, -354.407, -46.1218, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.48512, -323.486, -39.6889, 0.44", "-1.63952, -324.302, -39.8976, 0.44", "-0.612493, -325.321, -40.1233, 0.44", "-0.554173, -325.384, -40.1342, 0.44", "-0.150179, -325.831, -40.2043, 0.29", "0.348606, -326.367, -40.2867, 0.81", "0.92658, -326.955, -40.3803, 1.11", "0.971691, -327.003, -40.3842, 1.11", "1.60895, -327.709, -40.4517, 0.44", "1.65705, -327.765, -40.458, 0.44", "2.23871, -328.476, -40.5535, 0.37", "2.63302, -329.003, -40.6189, 0.37", "3.25255, -329.919, -40.7237, 0.29", "3.6049, -330.449, -40.7939, 0.74", "3.81173, -330.756, -40.8406, 0.81", "3.90083, -330.889, -40.8688, 0.81", "4.40766, -331.642, -41.0639, 0.44", "4.86718, -332.295, -41.2604, 0.29", "5.39972, -332.972, -41.4985, 0.52", "5.71404, -333.336, -41.6402, 0.52", "6.53649, -334.27, -42.0487, 0.29", "7.11116, -334.937, -42.387, 0.59", "7.15345, -334.991, -42.4201, 0.59", "7.39066, -335.36, -42.6402, 0.59", "7.42316, -335.417, -42.6741, 0.59", "7.98733, -336.538, -43.3419, 0.81", "8.2661, -337.178, -43.7228, 1.03", "8.61727, -338.106, -44.3103, 0.59", "8.97601, -339.124, -44.9607, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-70.9194, -115.441, 4.41832, 0.37", "-77.3655, -125.317, 8.13442, 0.37", "-86.3409, -133.568, 10.1983, 0.37", "-96.7429, -140.193, 11.0898, 0.37", "-106.028, -147.894, 13.8036, 0.37", "-115.386, -155.335, 16.9612, 0.37", "-123.6, -164.284, 19.2694, 0.37", "-130.545, -174.082, 22.2126, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-70.9194, -115.441, 4.41832, 0.29", "-74.9577, -122.404, 6.9791, 0.37", "-78.0701, -129.946, 9.16264, 0.37", "-80.9721, -137.75, 10.5831, 0.37", "-84.3034, -145.13, 12.9879, 0.37", "-88.4734, -152.407, 13.9884, 0.37", "-92.5789, -159.462, 16.1623, 0.37", "-96.6994, -165.953, 19.6585, 0.37", "-100.964, -172.276, 23.2893, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "110.441, 127.616, 39.5122, 0.29", "116.606, 135.455, 43.8932, 0.29", "123.858, 142.108, 48.5616, 0.29", "130.429, 148.915, 53.9604, 0.29", "137.73, 155.405, 58.7797, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "110.441, 127.616, 39.5122, 0.44", "114.513, 132.633, 42.4305, 0.29", "118.172, 137.489, 46.0785, 0.29", "122.619, 141.618, 49.7477, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-130.404, -212.731, -22.6762, 0.29", "-135.829, -220.016, -26.2961, 0.29", "-141.632, -226.252, -31.0953, 0.29", "-146.796, -232.196, -36.8944, 0.29", "-153.18, -238.477, -40.8188, 0.29", "-159.481, -244.892, -44.6598, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-130.404, -212.731, -22.6762, 0.44", "-135.393, -222.421, -26.7649, 0.29", "-139.662, -232.424, -30.9165, 0.29", "-142.84, -243.161, -34.1005, 0.29", "-146.816, -253.763, -36.803, 0.29", "-151.026, -264.441, -38.7517, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-129.579, -154.431, 9.87375, 0.22", "-129.003, -153.741, 10.4844, 0.22", "-128.734, -153.437, 10.7518, 0.52", "-128.526, -153.235, 10.9309, 0.74", "-127.839, -152.651, 11.4681, 0.37", "-127.04, -152.023, 12.034, 0.37", "-126.745, -151.79, 12.2431, 0.37", "-126.614, -151.701, 12.3248, 0.37", "-125.978, -151.304, 12.7182, 0.37", "-125.674, -151.137, 12.8907, 0.88", "-125.181, -150.929, 13.0771, 0.88", "-119.865, -147.273, 18.0987, 0.88", "-114.569, -142.409, 21.9881, 0.88" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-129.579, -154.431, 9.87375, 0.44", "-129.616, -152.576, 9.73902, 0.44", "-129.582, -150.786, 9.64035, 0.37", "-129.578, -150.703, 9.64036, 0.37", "-129.534, -149.259, 9.68859, 0.37", "-129.536, -149.112, 9.70073, 0.37", "-129.618, -147.35, 9.89461, 0.37", "-129.625, -147.256, 9.91345, 0.37", "-129.782, -146.102, 10.1866, 0.29", "-130.017, -144.878, 10.4724, 0.29", "-130.307, -143.756, 10.734, 0.29", "-130.394, -143.487, 10.7921, 0.66", "-130.474, -143.288, 10.824, 0.66", "-130.749, -142.61, 10.8773, 0.66", "-131.2, -141.528, 10.8586, 0.29", "-131.405, -141.07, 10.8227, 0.44", "-131.488, -140.902, 10.8024, 0.44", "-131.941, -140.097, 10.7077, 0.37", "-132.481, -139.218, 10.6136, 0.37", "-132.532, -139.14, 10.6066, 0.37", "-133.524, -137.719, 10.5043, 0.29", "-134.115, -136.866, 10.4586, 0.44", "-134.286, -136.615, 10.4569, 0.44", "-134.831, -135.803, 10.4947, 0.44", "-135.353, -134.999, 10.5498, 0.29", "-135.46, -134.825, 10.5649, 0.29", "-135.745, -134.317, 10.6234, 0.44", "-136.053, -133.753, 10.6942, 0.44", "-136.102, -133.657, 10.7062, 0.44", "-136.422, -132.978, 10.7846, 0.44", "-136.714, -132.239, 10.8884, 0.44", "-136.74, -132.147, 10.9014, 0.44", "-136.916, -131.303, 11.0094, 0.37", "-136.989, -130.889, 11.0536, 0.37", "-137.144, -129.821, 11.1352, 0.44", "-137.25, -128.872, 11.1923, 0.44", "-137.332, -127.838, 11.1583, 0.44", "-137.424, -126.392, 11.029, 0.44", "-137.516, -125.06, 10.8518, 0.74", "-137.659, -123.288, 10.5436, 0.81", "-137.726, -122.561, 10.3814, 0.74", "-137.99, -120.022, 9.6712, 0.29", "-137.999, -119.943, 9.64593, 0.29", "-138.056, -119.373, 9.44822, 0.29", "-138.071, -119.178, 9.38731, 0.29", "-138.108, -118.693, 9.29158, 0.44", "-138.113, -118.601, 9.28079, 0.44", "-138.138, -117.934, 9.25956, 0.44", "-138.142, -116.852, 9.2177, 0.88", "-138.098, -115.331, 9.15075, 0.52", "-138.051, -114.147, 9.0992, 0.52", "-138.008, -113.192, 9.04079, 0.44", "-137.976, -112.142, 8.96388, 0.29", "-137.959, -111.356, 8.89628, 0.59", "-137.96, -111.051, 8.86731, 0.59", "-137.992, -110.284, 8.7918, 0.59", "-138.029, -109.521, 8.71786, 0.29", "-138.085, -108.476, 8.64048, 0.29", "-138.088, -108.368, 8.63342, 0.29", "-138.107, -107.58, 8.573, 0.59", "-138.108, -107.456, 8.56336, 0.59", "-138.116, -106.575, 8.50672, 0.66", "-138.121, -105.6, 8.45991, 0.66", "-138.115, -104.564, 8.41084, 0.29", "-138.099, -103.117, 8.34568, 0.29", "-138.095, -103.009, 8.34149, 0.29", "-138.017, -101.172, 8.34064, 0.29", "-138.009, -100.964, 8.34826, 0.29", "-137.977, -99.7891, 8.43066, 0.52", "-137.977, -99.5842, 8.45173, 0.52", "-138.003, -98.3631, 8.61787, 0.81", "-138.07, -97.2017, 8.7734, 0.52", "-138.159, -96.2523, 8.90248, 0.52", "-138.264, -95.3738, 8.99956, 0.74", "-138.411, -94.3286, 9.07633, 0.88", "-138.45, -93.9374, 9.07826, 0.88", "-138.45, -92.6935, 8.95541, 0.88", "-138.438, -92.5998, 8.93847, 0.88", "-138.289, -91.9477, 8.79746, 0.66", "-137.994, -90.9522, 8.62707, 0.44", "-137.512, -89.472, 8.49389, 0.37", "-137.056, -88.0125, 8.45812, 0.29", "-136.744, -87.0222, 8.48142, 0.29", "-136.719, -86.93, 8.48765, 0.29", "-136.337, -85.2357, 8.6824, 0.29", "-135.965, -83.1055, 9.01249, 0.29", "-135.844, -81.8541, 9.24666, 0.37", "-135.837, -81.653, 9.28356, 0.37", "-135.831, -80.5941, 9.43472, 0.37", "-135.818, -79.5449, 9.5718, 0.37", "-135.815, -79.3541, 9.59198, 0.37", "-135.831, -77.9049, 9.76834, 0.52", "-135.885, -76.4293, 9.96763, 0.44", "-135.97, -74.8763, 10.1906, 1.11", "-136.072, -72.7996, 10.5024, 0.29", "-136.076, -72.693, 10.5228, 0.29", "-136.109, -71.0994, 10.8628, 0.29", "-136.102, -70.1974, 11.0678, 0.29", "-136.101, -70.1192, 11.0856, 0.29", "-136.031, -68.5125, 11.4223, 0.37", "-135.895, -66.1203, 11.8544, 0.37", "-135.753, -64.4242, 12.1439, 0.37", "-135.589, -63.0691, 12.3656, 0.81", "-135.47, -62.1755, 12.503, 1.03", "-135.277, -60.6666, 12.7053, 0.29", "-135.156, -59.6409, 12.8115, 0.29", "-135.082, -58.9467, 12.841, 0.44", "-135.076, -58.8538, 12.8448, 0.44", "-135.063, -58.3533, 12.864, 0.44", "-135.099, -57.1046, 12.9567, 0.29", "-135.112, -56.9174, 12.9765, 0.29", "-135.266, -55.3557, 13.1749, 0.29", "-135.278, -55.2614, 13.1876, 0.29", "-135.548, -53.5598, 13.4249, 0.29", "-135.714, -52.564, 13.5659, 0.66", "-135.826, -51.8453, 13.6683, 0.74", "-135.845, -51.6592, 13.6931, 0.74", "-135.913, -49.922, 13.9024, 0.29", "-135.909, -49.7436, 13.92, 0.29", "-135.841, -48.6635, 13.9784, 0.29", "-135.781, -47.9092, 13.9941, 0.74", "-135.646, -46.7145, 14.0123, 0.22", "-135.394, -44.9955, 14.0327, 0.22", "-135.059, -43.4363, 14.0521, 1.03", "-134.676, -41.8684, 14.0721, 0.29", "-134.597, -41.5744, 14.0763, 0.29", "-134.148, -39.9869, 14.1011, 0.29", "-134.06, -39.6966, 14.1066, 0.29", "-133.236, -37.2241, 14.1655, 0.29", "-133.154, -36.9776, 14.1745, 0.29", "-132.588, -35.2537, 14.2045, 0.29", "-132.557, -35.1494, 14.203, 0.29", "-132.226, -33.7923, 14.1332, 0.44", "-132.207, -33.6987, 14.1254, 0.44", "-132.04, -32.5576, 13.9866, 0.44", "-131.874, -31.3736, 13.8293, 0.74", "-131.863, -31.2792, 13.8151, 0.74", "-131.812, -30.7245, 13.7339, 1.03", "-131.752, -29.6979, 13.6035, 0.59", "-131.756, -28.6169, 13.6146, 0.29", "-131.768, -28.4149, 13.645, 0.29", "-131.855, -27.7167, 13.837, 0.29", "-131.871, -27.6144, 13.8699, 0.29", "-132.073, -26.5354, 14.2551, 0.88", "-132.384, -24.964, 14.8065, 0.88", "-132.418, -24.7871, 14.863, 0.88", "-132.543, -24.0442, 15.077, 0.66", "-132.629, -23.3092, 15.3099, 0.29", "-132.682, -22.5465, 15.559, 0.29", "-132.72, -21.077, 16.0289, 0.29", "-132.706, -20.3343, 16.2451, 0.44", "-132.702, -20.2313, 16.2794, 0.44", "-132.632, -18.7225, 16.9475, 0.37", "-132.615, -17.7045, 17.4441, 0.29", "-132.618, -17.618, 17.4854, 0.29", "-132.667, -16.9148, 17.8101, 0.74", "-132.678, -16.8415, 17.8379, 0.74", "-133.045, -14.9437, 18.4337, 0.29", "-133.456, -13.2035, 18.8318, 0.29", "-133.816, -11.7445, 19.1585, 0.22", "-133.888, -11.4631, 19.2213, 0.22", "-134.403, -9.53587, 19.6193, 0.29", "-134.43, -9.43246, 19.6386, 0.29", "-134.863, -7.75889, 19.8821, 0.29", "-135.225, -6.34289, 20.1427, 0.29", "-135.583, -4.89313, 20.47, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-203.75, -207.963, 20.2677, 0.37", "-203.96, -208.488, 19.815, 0.37", "-204.499, -209.589, 18.9053, 0.37", "-204.972, -210.531, 18.1884, 0.29", "-205.264, -211.086, 17.7527, 0.44", "-205.555, -211.64, 17.3282, 0.44", "-206.125, -212.74, 16.515, 0.29", "-206.35, -213.144, 16.23, 0.37", "-206.7, -213.722, 15.8692, 0.37", "-207.429, -214.871, 15.085, 0.37", "-207.765, -215.402, 14.701, 0.37", "-207.991, -215.779, 14.4203, 0.66", "-208.022, -215.831, 14.3832, 0.66", "-208.248, -216.167, 14.1277, 0.74", "-208.89, -216.988, 13.4656, 0.37", "-209.315, -217.466, 13.1007, 0.37", "-209.366, -217.514, 13.0562, 0.37", "-209.762, -217.844, 12.7064, 0.37", "-213.193, -226.219, 8.31676, 0.37", "-215.311, -235.455, 4.94371, 0.37" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-203.75, -207.963, 20.2677, 0.29", "-204.549, -207.847, 20.624, 0.29", "-205.274, -207.787, 21.0372, 0.52", "-206.305, -207.769, 21.6213, 0.44", "-206.668, -207.802, 21.8147, 0.29", "-207.358, -207.913, 22.143, 0.29", "-207.923, -208.018, 22.424, 0.44", "-209.277, -208.32, 23.1483, 0.29", "-209.844, -208.445, 23.4358, 0.29", "-210.665, -208.641, 23.8426, 0.29", "-211.442, -208.832, 24.267, 0.29", "-212.26, -209.023, 24.7382, 0.29", "-212.299, -209.033, 24.7612, 0.29", "-213.008, -209.153, 25.1478, 0.44", "-214.03, -209.231, 25.7916, 0.44", "-214.129, -209.226, 25.8616, 0.44", "-214.669, -209.193, 26.2757, 0.66", "-215.251, -209.21, 26.6288, 0.66", "-221.932, -209.82, 30.5706, 0.66", "-227.544, -210.399, 35.9284, 0.66" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "38.7044, -268.216, -0.480628, 0.52", "37.964, -268.893, -1.15994, 0.52", "37.4032, -269.45, -1.6996, 0.29", "36.8321, -270.101, -2.28933, 0.22", "36.5307, -270.45, -2.58121, 0.52", "36.2547, -270.771, -2.83766, 0.74", "35.9021, -271.186, -3.16048, 0.81", "35.5756, -271.571, -3.46357, 0.66", "35.1288, -272.13, -3.90895, 0.29", "34.6147, -272.853, -4.39866, 0.29", "34.5825, -272.901, -4.42887, 0.29", "34.4825, -273.057, -4.52289, 0.66", "34.193, -273.501, -4.79299, 0.81", "33.8323, -274.047, -5.13675, 0.22", "33.5322, -274.519, -5.4453, 0.22", "33.4137, -274.757, -5.60587, 0.52", "33.2702, -275.057, -5.80275, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "38.7044, -268.216, -0.480628, 1.18", "38.8871, -269.346, 0.0892546, 1.18", "38.9351, -269.868, 0.319948, 1.4", "38.9019, -270.859, 0.723919, 0.37", "38.6933, -271.761, 1.0427, 0.44", "38.4117, -272.51, 1.24192, 0.66", "37.8446, -273.561, 1.46171, 0.66", "37.4864, -274.091, 1.52484, 0.66", "36.6116, -275.287, 1.61018, 0.59", "35.4373, -276.827, 1.67187, 0.37", "34.743, -277.739, 1.70345, 1.55", "33.5976, -279.385, 1.79423, 0.37", "32.9963, -280.436, 1.87487, 0.44", "32.5401, -281.507, 2.00392, 0.44", "32.3962, -282.125, 2.09573, 0.88", "32.3562, -282.705, 2.19735, 1.03", "32.3463, -283.844, 2.38551, 0.37", "32.3805, -284.733, 2.48339, 0.37", "32.383, -285.174, 2.52079, 0.88", "32.373, -285.771, 2.56025, 0.96", "32.3279, -286.756, 2.59602, 0.96", "32.2628, -287.974, 2.63052, 0.29", "32.1444, -289.216, 2.74428, 0.29", "32.0873, -289.662, 2.8124, 0.66", "31.9847, -290.173, 2.93545, 0.88", "31.9651, -290.248, 2.95929, 0.88", "31.772, -290.867, 3.19931, 0.74", "31.179, -292.408, 3.81675, 0.29", "30.8294, -293.22, 4.11076, 0.29", "30.4293, -294.311, 4.49522, 1.11", "30.2866, -294.853, 4.69905, 1.11", "30.2753, -294.929, 4.7285, 1.11", "30.2515, -295.576, 4.9788, 1.11", "30.3211, -297.083, 5.6203, 0.29", "30.4099, -298.357, 6.19784, 0.29", "30.487, -299.471, 6.69772, 0.29", "30.5109, -300.093, 6.97552, 0.81", "30.4906, -300.848, 7.31697, 0.96", "30.2882, -302.296, 8.08798, 0.96", "30.0738, -303.146, 8.5699, 0.37", "29.7782, -303.983, 9.04138, 0.88", "29.5006, -304.658, 9.4038, 0.88", "28.9222, -305.997, 10.0807, 0.59", "28.1583, -307.807, 10.8962, 0.44", "27.8953, -308.528, 11.1643, 0.59", "27.7026, -309.112, 11.3371, 0.59", "27.4526, -310.041, 11.5175, 0.88", "27.3018, -310.882, 11.6103, 0.29", "27.2029, -311.866, 11.6466, 0.29", "27.1258, -312.887, 11.6759, 0.37", "27.0253, -314.003, 11.7595, 0.96", "26.9399, -314.812, 11.8449, 1.33", "26.7335, -316.152, 12.0683, 0.37", "26.5302, -317.109, 12.2577, 0.52", "26.1973, -318.345, 12.5208, 0.44", "25.9995, -318.994, 12.6678, 0.29", "25.7823, -319.695, 12.8405, 0.88", "25.3864, -320.938, 13.1297, 0.74", "25.1144, -321.753, 13.3495, 0.29", "24.9063, -322.518, 13.5903, 0.59", "24.7101, -323.346, 13.8521, 0.74", "24.5294, -324.018, 14.0918, 0.88", "24.5047, -324.1, 14.1209, 0.88", "23.944, -325.767, 14.6199, 0.52", "23.6556, -326.415, 14.7732, 0.52", "23.0886, -327.367, 14.9317, 0.52", "22.4528, -328.343, 15.0427, 0.96", "22.0874, -328.847, 15.1153, 1.33", "21.5561, -329.566, 15.2544, 0.59", "20.8926, -330.482, 15.4373, 0.37", "19.9961, -331.805, 15.7704, 0.44", "19.5407, -332.597, 15.9893, 0.66", "18.8718, -334.076, 16.3845, 0.96", "18.2992, -335.588, 16.8067, 0.44", "18.0568, -336.366, 17.0198, 1.03", "17.8536, -337.3, 17.2667, 1.18", "17.7019, -338.59, 17.5205, 0.29", "17.6595, -339.821, 17.6543, 0.29", "17.67, -340.005, 17.6568, 0.88", "17.706, -340.445, 17.6331, 1.25", "17.7392, -341.348, 17.5807, 0.66", "17.7217, -342.335, 17.5149, 0.59", "17.6317, -343.699, 17.4211, 0.52", "17.5443, -344.504, 17.3504, 0.52", "17.3907, -345.658, 17.2477, 0.52", "17.1978, -346.743, 17.1794, 0.37", "17.0138, -347.746, 17.0917, 0.29", "16.9515, -348.144, 17.0553, 0.74", "16.9258, -348.381, 17.0329, 0.74", "16.9019, -349.042, 16.957, 0.74", "16.9473, -350.112, 16.8132, 0.81", "17.1168, -351.756, 16.503, 0.81", "17.2732, -352.828, 16.3072, 0.81", "17.4777, -354.021, 16.1126, 0.81", "17.4918, -354.098, 16.1013, 0.81", "17.6951, -355.149, 15.9668, 0.59", "17.9645, -356.462, 15.8289, 0.44", "18.1071, -357.306, 15.8071, 0.44", "18.2672, -358.277, 15.8261, 0.29", "18.3773, -359.1, 15.8703, 0.74", "18.4196, -359.591, 15.8945, 0.96", "18.418, -359.67, 15.9002, 0.96", "18.3076, -360.497, 15.9522, 0.52", "18.006, -361.699, 16.0084, 0.52", "17.6401, -362.816, 16.072, 0.52", "17.3852, -363.556, 16.1328, 0.59", "16.9652, -364.833, 16.2809, 0.74", "16.7546, -365.539, 16.3888, 0.52", "16.4182, -366.839, 16.6079, 0.37", "16.4017, -366.918, 16.6222, 0.37", "16.2796, -368.12, 16.874, 0.44", "16.2984, -368.988, 17.0691, 0.37", "16.3939, -369.598, 17.1906, 0.74", "16.5792, -370.529, 17.3501, 0.29", "16.5931, -370.595, 17.3563, 0.29", "16.6722, -371.031, 17.3846, 0.44", "16.68, -371.098, 17.3848, 0.44", "16.715, -371.693, 17.3529, 0.44", "16.7393, -372.859, 17.2847, 0.22", "16.7337, -373.683, 17.2805, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "47.8316, -244.626, -96.5249, 0.29", "47.4461, -244.242, -97.6049, 0.29", "47.3893, -244.194, -97.7364, 0.29", "47.0979, -243.948, -98.328, 0.29", "46.3593, -243.296, -99.6829, 0.29", "46.103, -243.034, -100.182, 0.59", "45.4024, -242.214, -101.56, 0.59", "45.0319, -241.685, -102.306, 0.37", "44.8507, -241.362, -102.707, 0.66", "44.6772, -240.993, -103.138, 0.88", "44.1274, -239.637, -104.629, 0.22", "43.9452, -239.106, -105.196, 0.44", "43.809, -238.626, -105.668, 0.59", "43.6429, -237.804, -106.527, 0.29", "43.5211, -237.096, -107.324, 0.74", "43.3957, -236.283, -108.312, 1.03" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "47.8316, -244.626, -96.5249, 0.52", "47.7938, -246.841, -99.2247, 0.52", "47.7851, -246.905, -99.285, 0.52", "47.6814, -247.511, -99.7542, 0.52", "47.3267, -249.646, -101.165, 1.33", "47.1901, -250.474, -101.666, 1.77", "47.0243, -251.699, -102.308, 0.66", "46.8043, -253.228, -102.878, 0.66", "46.6084, -255.277, -103.64, 0.66", "46.6011, -256.396, -104.076, 0.88", "46.6344, -256.685, -104.184, 0.88", "47.002, -258.465, -104.867, 0.88", "47.021, -258.533, -104.895, 0.88", "47.775, -260.669, -105.737, 0.66", "48.4912, -262.317, -106.441, 0.44", "48.9661, -263.311, -106.928, 0.96", "49.6781, -264.719, -107.68, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-100.964, -172.276, 23.2893, 0.29", "-101.051, -180.727, 31.9068, 0.29", "-101.659, -188.62, 41.018, 0.29", "-102.609, -196.806, 49.8377, 0.29", "-105.709, -206.682, 56.0454, 0.29", "-107.704, -216.57, 62.6732, 0.29", "-109.282, -226.323, 69.6078, 0.29", "-110.911, -235.743, 76.976, 0.29", "-112.389, -245.645, 83.7186, 0.29", "-113.622, -255.9, 89.9635, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-100.964, -172.276, 23.2893, 0.44", "-105.919, -180.332, 20.8139, 0.29", "-111.9, -187.401, 17.6785, 0.29", "-117.362, -194.907, 14.6112, 0.29", "-121.495, -202.846, 10.6786, 0.29", "-124.373, -210.75, 5.69646, 0.29", "-126.492, -218.321, -0.114529, 0.29", "-129.088, -225.01, -6.75512, 0.29", "-132.745, -231.19, -13.3901, 0.29", "-135.14, -238.856, -18.9645, 0.29", "-137.654, -247.465, -22.8549, 0.29", "-140.736, -256.496, -24.9814, 0.29", "-145.461, -265.046, -25.3717, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "137.73, 155.405, 58.7797, 0.29", "142.722, 160.801, 62.682, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "137.73, 155.405, 58.7797, 0.44", "141.454, 158.643, 61.0046, 0.29", "145.474, 161.697, 62.9595, 0.29", "149.432, 164.67, 65.1493, 0.29", "153.797, 167.166, 67.1552, 0.29", "157.639, 169.61, 70.0835, 0.29", "161.806, 171.571, 72.9275, 0.29", "165.174, 173.782, 76.5431, 0.29", "168.634, 175.579, 80.2987, 0.29", "172.383, 176.287, 84.1389, 0.29", "176.46, 177.422, 87.5146, 0.29", "181.226, 178.65, 89.7693, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-135.583, -4.89313, 20.47, 0.22", "-136.621, -4.92011, 20.4108, 0.22", "-138.338, -4.96483, 20.3127, 0.22", "-139.089, -4.98438, 20.2698, 0.52", "-139.551, -4.99641, 20.2434, 0.74", "-149.48, -3.60423, 20.5882, 0.74", "-159.409, -2.72686, 21.7217, 0.74", "-168.904, -0.492588, 24.0626, 0.74", "-178.231, 0.458599, 27.6343, 0.74", "-186.997, 3.16556, 31.6912, 0.74", "-194.721, 5.74803, 37.5489, 0.74", "-201.009, 8.85533, 44.7215, 0.74", "-206.92, 12.7714, 51.8181, 0.74", "-213.075, 17.4067, 58.2427, 0.74", "-218.727, 21.1221, 65.6509, 0.74" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-135.583, -4.89313, 20.47, 0.44", "-135.543, -3.92116, 20.7634, 0.44", "-135.524, -3.21164, 20.9642, 0.66", "-135.524, -3.08, 20.9992, 0.66", "-135.527, -2.68163, 21.1024, 0.59", "-135.523, -1.76729, 21.3319, 0.29", "-135.48, -0.303169, 21.6881, 0.29", "-135.476, -0.150425, 21.7302, 0.29", "-135.446, 0.908974, 22.0581, 0.52", "-135.443, 0.988778, 22.0847, 0.52", "-135.397, 2.06869, 22.4666, 0.52", "-135.311, 3.37656, 22.9516, 1.03", "-135.145, 4.96666, 23.5814, 0.29", "-135.136, 5.03492, 23.6095, 0.29", "-134.97, 5.94578, 24.0191, 0.29", "-134.809, 6.58065, 24.3097, 0.52", "-134.605, 7.22056, 24.61, 0.52", "-134.336, 7.91481, 24.9189, 0.96", "-134.313, 7.96765, 24.94, 0.96", "-133.637, 9.55744, 25.5704, 0.29", "-133.085, 10.8816, 26.0908, 0.29", "-133.058, 10.9559, 26.119, 0.29", "-132.693, 12.1988, 26.5566, 0.29", "-132.612, 12.6227, 26.6863, 0.59", "-132.591, 12.8369, 26.7448, 0.59", "-132.618, 13.4207, 26.8769, 0.52", "-132.696, 14.0379, 27.0171, 0.66", "-132.784, 14.689, 27.165, 0.66", "-132.943, 15.6969, 27.3933, 0.29", "-132.963, 15.8478, 27.4374, 0.29", "-133.029, 16.4917, 27.6593, 0.29", "-133.064, 16.9771, 27.8991, 0.52", "-133.066, 17.0389, 27.9363, 0.52", "-133.05, 17.9077, 28.521, 0.37", "-132.986, 18.9349, 29.2694, 0.59", "-132.93, 19.4389, 29.6378, 0.96", "-132.729, 20.8398, 30.6731, 0.37", "-132.712, 20.9217, 30.737, 0.37", "-132.479, 21.8567, 31.4781, 0.37", "-132.461, 21.9129, 31.5233, 0.37", "-132.235, 22.5736, 32.0075, 0.37", "-132.18, 22.7665, 32.1211, 0.37", "-131.916, 24.2243, 32.7276, 0.59", "-131.881, 24.498, 32.8309, 0.88", "-131.874, 24.5683, 32.8541, 0.88", "-131.818, 25.1441, 33.0257, 0.88", "-131.603, 27.2466, 33.5771, 0.29", "-131.372, 29.097, 33.944, 0.29", "-131.334, 29.3627, 33.9826, 0.29", "-131.024, 31.5154, 34.3381, 0.29", "-130.989, 31.8147, 34.3928, 0.29", "-130.848, 33.2352, 34.6723, 0.37", "-130.736, 34.9892, 35.0572, 0.37", "-130.724, 35.837, 35.3104, 0.37", "-130.77, 37.121, 35.7893, 0.29", "-130.908, 38.3697, 36.3356, 0.29", "-130.931, 38.5099, 36.406, 0.29", "-131.1, 39.1181, 36.8022, 0.29", "-131.645, 40.4721, 37.9794, 1.18", "-131.751, 40.7329, 38.2193, 1.47" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "49.6781, -264.719, -107.68, 0.88", "49.4771, -265.427, -108.0, 0.88", "49.3482, -265.932, -108.197, 1.47", "49.2488, -266.427, -108.365, 1.69", "49.1061, -267.442, -108.659, 0.59", "49.103, -267.476, -108.669, 0.59", "49.0698, -268.098, -108.847, 0.29", "49.0753, -268.587, -108.971, 0.44", "49.1093, -269.014, -109.113, 0.66", "49.1783, -269.48, -109.336, 1.11", "49.2694, -269.934, -109.579, 1.47", "49.3121, -270.165, -109.712, 1.47", "49.3181, -270.202, -109.734, 1.47", "49.4427, -271.294, -110.349, 1.11", "49.483, -272.287, -110.826, 0.59", "49.4908, -272.799, -111.015, 0.81", "49.4989, -273.272, -111.14, 1.11", "49.5211, -273.756, -111.225, 1.25", "49.5685, -274.463, -111.286, 0.66", "49.633, -275.265, -111.262, 0.52", "49.708, -276.028, -111.199, 1.03", "49.7497, -276.403, -111.178, 1.25", "49.856, -277.192, -111.158, 0.66", "49.89, -277.429, -111.166, 0.44", "49.9457, -277.737, -111.195, 0.96", "50.0009, -278.006, -111.234, 1.25", "50.134, -278.702, -111.364, 1.11", "50.2338, -279.254, -111.486, 0.96", "50.344, -279.854, -111.603, 0.66", "50.4551, -280.484, -111.699, 0.59", "50.4625, -280.527, -111.704, 0.59", "50.5287, -281.011, -111.729, 0.59", "50.5513, -281.662, -111.702, 0.52", "50.4809, -282.298, -111.626, 0.81", "50.3492, -282.769, -111.533, 1.03", "50.3227, -282.829, -111.519, 1.03", "50.1016, -283.266, -111.412, 1.03", "49.7429, -283.835, -111.252, 0.52", "49.5109, -284.144, -111.154, 1.11", "49.2291, -284.474, -111.08, 1.33", "49.2, -284.505, -111.072, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "49.6781, -264.719, -107.68, 0.52", "50.7792, -264.971, -107.14, 0.52", "52.79, -265.422, -106.067, 0.29", "53.978, -265.71, -105.445, 0.59", "54.6893, -265.886, -105.038, 0.96", "56.8589, -266.429, -103.783, 0.22", "58.3419, -266.79, -102.94, 0.59", "58.4211, -266.808, -102.895, 0.59", "59.5137, -267.069, -102.338, 0.52", "61.1354, -267.556, -101.49, 0.37", "61.8319, -267.819, -101.148, 0.81", "62.3929, -268.072, -100.929, 0.96", "63.8166, -268.773, -100.454, 0.37", "65.1232, -269.432, -100.205, 0.37", "66.3756, -270.094, -100.181, 0.44", "67.1008, -270.493, -100.298, 0.44", "68.08, -271.037, -100.472, 0.22", "68.778, -271.401, -100.606, 0.44", "71.3816, -272.616, -101.148, 0.37", "72.4165, -273.05, -101.368, 0.52", "73.5762, -273.493, -101.616, 0.59", "74.8917, -273.94, -101.833, 0.81", "76.2556, -274.364, -101.971, 0.29", "77.4723, -274.69, -101.99, 0.52", "78.1252, -274.834, -101.927, 0.81", "78.7939, -274.931, -101.886, 1.11", "79.0789, -274.955, -101.882, 1.11", "79.6427, -274.976, -101.906, 0.96", "80.6741, -274.931, -101.855, 0.59", "82.348, -274.703, -101.514, 0.29", "83.1671, -274.583, -101.276, 0.52", "83.8036, -274.49, -101.056, 0.66", "83.8877, -274.481, -101.024, 0.66", "85.9957, -274.335, -100.12, 0.52", "87.5985, -274.283, -99.379, 0.74", "89.1773, -274.26, -98.6319, 0.22", "89.6126, -274.274, -98.4468, 0.74", "90.4137, -274.345, -98.1314, 0.81", "92.2045, -274.628, -97.5209, 0.22", "92.7696, -274.781, -97.3867, 0.66", "93.3056, -274.963, -97.2806, 0.74", "94.6067, -275.503, -97.0007, 0.22", "95.7341, -276.049, -96.7151, 0.66", "96.1261, -276.264, -96.6101, 0.81", "96.8247, -276.726, -96.4219, 0.52", "96.8866, -276.768, -96.4046, 0.52", "97.8395, -277.463, -96.1682, 0.22", "99.0953, -278.442, -95.9272, 0.74", "99.7723, -278.955, -95.9217, 0.81", "99.9193, -279.06, -95.9334, 0.81", "100.642, -279.535, -96.0666, 0.59", "101.349, -279.964, -96.3367, 0.29", "102.098, -280.415, -96.7521, 1.03", "103.222, -281.184, -97.5163, 1.03", "103.426, -281.347, -97.6664, 1.25", "104.161, -282.06, -98.2069, 0.66", "105.327, -283.398, -99.0501, 0.52", "106.017, -284.312, -99.4977, 0.37", "106.512, -285.092, -99.7929, 0.29", "106.927, -285.908, -99.9752, 0.29", "107.562, -287.369, -100.175, 0.29", "107.761, -287.886, -100.229, 0.81", "108.035, -288.602, -100.281, 1.03", "108.074, -288.686, -100.29, 1.03", "108.727, -289.817, -100.472, 0.59", "109.434, -290.853, -100.611, 0.44", "110.26, -292.006, -100.717, 0.88", "110.5, -292.331, -100.734, 1.25", "110.945, -292.896, -100.711, 1.55", "111.553, -293.594, -100.618, 0.29", "112.605, -294.634, -100.141, 0.29", "113.526, -295.483, -99.5427, 0.29", "113.583, -295.537, -99.4995, 0.29", "114.457, -296.376, -98.8182, 1.47", "115.196, -297.112, -98.2326, 1.77", "117.131, -299.034, -96.7124, 0.37", "117.797, -299.692, -96.1893, 0.22", "118.68, -300.555, -95.4752, 0.29", "119.074, -300.967, -95.1582, 0.52", "119.562, -301.552, -94.7819, 0.66", "119.611, -301.621, -94.7445, 0.66" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-218.727, 21.1221, 65.6509, 0.37", "-228.698, 24.4279, 70.5683, 0.37", "-239.311, 26.2846, 74.8628, 0.37", "-248.772, 29.0094, 80.9944, 0.37", "-258.652, 30.0963, 86.9718, 0.37", "-269.38, 28.7653, 91.1739, 0.37", "-279.436, 27.8563, 96.8828, 0.37", "-288.828, 25.9139, 103.404, 0.37", "-296.133, 22.9193, 111.901, 0.37", "-302.462, 17.0526, 119.651, 0.37", "-308.322, 9.40238, 126.105, 0.37", "-313.195, 1.73224, 133.313, 0.37", "-318.026, -5.90335, 140.585, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-218.727, 21.1221, 65.6509, 0.29", "-227.521, 23.4169, 71.1736, 0.37", "-236.641, 25.9398, 76.0291, 0.37", "-246.23, 27.6052, 80.3155, 0.37", "-254.359, 30.5147, 86.525, 0.37", "-261.875, 32.7327, 93.7152, 0.37", "-269.918, 33.6968, 100.605, 0.37", "-278.925, 36.1076, 105.72, 0.37", "-288.397, 39.872, 108.758, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-131.751, 40.7329, 38.2193, 0.59", "-130.407, 40.5479, 39.3417, 0.59", "-130.348, 40.5383, 39.3922, 0.59", "-129.145, 40.4531, 40.4503, 0.29", "-128.505, 40.4997, 41.016, 0.29", "-128.446, 40.508, 41.0692, 0.29", "-127.133, 40.8386, 42.2139, 0.29", "-127.092, 40.8578, 42.2503, 0.29", "-125.944, 41.4959, 43.2275, 0.29", "-124.641, 42.3118, 44.2268, 0.29", "-124.533, 42.3814, 44.3028, 0.29", "-123.363, 43.111, 45.0601, 0.74", "-122.361, 43.6934, 45.6768, 0.29", "-122.076, 43.8228, 45.8587, 0.29", "-120.634, 44.3757, 46.7427, 0.29", "-119.949, 44.5831, 47.1582, 0.29", "-118.827, 44.8431, 47.8464, 0.29", "-117.451, 44.982, 48.7269, 0.29", "-116.277, 44.9953, 49.502, 0.88", "-110.087, 48.4333, 56.2071, 0.88", "-105.298, 51.405, 64.1645, 0.88", "-100.008, 54.9876, 71.5318, 0.88", "-93.9722, 58.4621, 78.3571, 0.88", "-87.8351, 61.155, 85.4406, 0.88", "-82.2542, 64.5567, 92.6776, 0.88", "-76.2047, 67.2089, 99.8513, 0.88", "-69.337, 68.8077, 106.587, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-131.751, 40.7329, 38.2193, 0.59", "-132.104, 41.581, 38.8255, 0.59", "-132.385, 42.3234, 39.3952, 0.59", "-132.624, 43.0323, 39.9973, 0.37", "-132.903, 43.93, 40.7842, 0.29", "-133.116, 44.7529, 41.5719, 0.29", "-133.129, 44.8096, 41.6285, 0.29", "-133.25, 45.504, 42.3802, 0.29", "-133.348, 46.1023, 43.0632, 0.66", "-133.397, 46.4895, 43.481, 0.81", "-133.5, 47.4069, 44.3285, 0.29", "-133.507, 47.4675, 44.3821, 0.29", "-133.611, 48.315, 45.0388, 0.29", "-133.619, 48.3748, 45.0777, 0.29", "-133.711, 49.385, 45.6127, 0.52", "-133.786, 50.1054, 45.936, 0.74", "-133.799, 50.1808, 45.9637, 0.74", "-133.927, 50.8561, 46.2523, 0.74", "-133.941, 50.92, 46.2821, 0.74", "-134.181, 51.8296, 46.7329, 0.29", "-134.475, 52.7644, 47.2226, 0.29", "-134.914, 54.0158, 47.8913, 0.29", "-135.272, 55.101, 48.4565, 0.29", "-135.305, 55.2243, 48.5217, 0.29", "-135.467, 56.2498, 49.0494, 0.29", "-135.473, 56.3136, 49.0816, 0.29", "-135.433, 57.3552, 49.5859, 0.29", "-135.25, 58.9357, 50.3163, 0.29", "-134.965, 61.0363, 51.2176, 0.29", "-134.678, 62.957, 52.0332, 0.29", "-134.66, 63.0847, 52.0901, 0.29", "-134.425, 64.9783, 52.9601, 0.29", "-134.411, 65.1141, 53.0238, 0.29", "-134.261, 67.3096, 54.0707, 0.29", "-134.259, 67.3829, 54.1056, 0.29", "-134.351, 69.3466, 55.0735, 0.29", "-134.359, 69.4189, 55.1094, 0.29", "-134.692, 70.9137, 55.8128, 0.29", "-134.788, 71.3034, 55.9811, 0.74", "-134.807, 71.3764, 56.011, 0.74", "-134.946, 71.8748, 56.1905, 0.59", "-135.363, 73.1799, 56.4933, 0.29", "-135.67, 73.9703, 56.6579, 0.88", "-135.953, 74.4583, 56.7283, 0.96" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "49.2, -284.505, -111.072, 0.52", "48.6173, -285.433, -110.932, 0.52", "48.179, -286.177, -110.826, 0.37", "47.7803, -286.899, -110.696, 0.29", "47.4633, -287.449, -110.586, 0.66", "47.1823, -287.927, -110.488, 0.66", "47.1427, -287.993, -110.474, 0.66", "46.883, -288.441, -110.382, 0.59", "46.4062, -289.226, -110.235, 0.29", "45.9202, -290.05, -110.092, 0.29", "45.7288, -290.396, -110.037, 0.66", "45.4387, -290.968, -109.957, 0.96", "45.2322, -291.45, -109.896, 1.18", "44.8586, -292.463, -109.788, 0.29", "44.6498, -293.13, -109.737, 0.29", "44.5358, -293.526, -109.704, 0.52", "44.4882, -293.662, -109.675, 0.52", "44.2573, -294.156, -109.495, 0.22", "43.9988, -294.554, -109.288, 0.44", "43.7272, -294.881, -109.037, 0.66", "43.3458, -295.279, -108.705, 0.66", "42.4007, -296.214, -107.937, 0.29", "42.1295, -296.488, -107.726, 0.96", "41.8571, -296.788, -107.516, 1.25", "41.0097, -297.89, -106.827, 0.52", "40.5402, -298.622, -106.443, 0.52", "40.187, -299.255, -106.175, 0.29", "39.886, -299.821, -106.009, 0.37", "39.555, -300.411, -105.861, 0.44", "39.2879, -300.804, -105.787, 0.44", "38.8174, -301.365, -105.74, 0.22", "38.5115, -301.645, -105.718, 0.37", "37.956, -302.049, -105.642, 0.59", "37.1906, -302.519, -105.506, 1.18", "36.4542, -302.934, -105.319, 0.74", "36.3884, -302.97, -105.298, 0.74", "35.3393, -303.567, -104.887, 0.37", "34.3575, -304.198, -104.418, 0.29", "34.1231, -304.356, -104.269, 0.59", "33.5676, -304.701, -103.798, 0.74", "33.5069, -304.733, -103.732, 0.74", "33.2017, -304.866, -103.303, 0.74", "33.1716, -304.874, -103.256, 0.74", "32.5993, -304.962, -102.357, 0.29", "31.9297, -305.025, -101.302, 0.59", "31.3635, -305.051, -100.398, 0.96", "30.3853, -305.08, -98.8053, 0.59", "29.9864, -305.08, -98.1361, 0.29", "29.9516, -305.081, -98.077, 0.29", "29.3259, -305.121, -96.9635, 0.88", "28.7809, -305.152, -95.9314, 1.03" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "49.2, -284.505, -111.072, 0.52", "49.3731, -285.485, -111.896, 0.52", "49.3811, -285.538, -111.934, 0.52", "49.4779, -286.327, -112.463, 0.66", "49.6493, -288.059, -113.506, 0.44", "49.7346, -289.351, -114.25, 0.37", "49.7577, -290.062, -114.626, 0.66", "49.7454, -290.862, -114.979, 0.88", "49.6935, -291.769, -115.349, 0.88", "49.6156, -292.581, -115.644, 0.88", "49.5123, -293.69, -116.018, 0.59", "49.4586, -294.702, -116.387, 0.37", "49.4531, -295.759, -116.829, 0.37", "49.5281, -296.891, -117.367, 0.74", "49.5944, -297.374, -117.606, 1.11", "49.9005, -299.067, -118.532, 0.74", "50.0662, -299.867, -118.99, 0.44", "50.0772, -299.923, -119.022, 0.44", "50.2888, -301.116, -119.67, 1.03", "50.3761, -301.753, -119.96, 1.33", "50.4615, -303.186, -120.475, 0.66", "50.4474, -304.483, -120.781, 0.66", "50.3876, -305.77, -121.019, 0.88", "50.3858, -305.836, -121.028, 0.88", "50.3728, -306.833, -121.108, 1.11", "50.3899, -308.321, -121.176, 1.03", "50.4369, -309.426, -121.16, 0.52", "50.4393, -309.493, -121.165, 0.52", "50.4484, -310.633, -121.337, 0.88", "50.4349, -311.367, -121.49, 0.96", "50.3977, -312.023, -121.706, 0.96", "50.3135, -312.701, -122.025, 0.66", "49.9228, -314.62, -123.048, 0.44", "49.7555, -315.323, -123.437, 0.96", "49.5655, -315.966, -123.814, 1.25", "49.1564, -317.286, -124.611, 1.11", "48.7827, -318.432, -125.371, 0.74", "48.5687, -319.031, -125.796, 0.74" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-135.953, 74.4583, 56.7283, 0.29", "-137.376, 74.966, 56.6845, 0.29", "-137.462, 74.9921, 56.6817, 0.29", "-138.502, 75.3952, 56.5218, 0.29", "-138.583, 75.4293, 56.5058, 0.29", "-139.509, 75.8687, 56.3454, 0.66", "-140.211, 76.2283, 56.2388, 0.81", "-140.272, 76.2601, 56.2304, 0.81", "-142.111, 77.2188, 56.109, 0.29", "-142.279, 77.3072, 56.1063, 0.29", "-143.627, 78.028, 56.165, 0.29", "-145.179, 78.8893, 56.3278, 0.29", "-145.247, 78.927, 56.34, 0.29", "-146.675, 79.6643, 56.6918, 0.44", "-146.742, 79.6978, 56.7166, 0.44", "-147.278, 79.9813, 56.9257, 0.44", "-147.34, 80.0168, 56.9525, 0.44", "-148.439, 80.7388, 57.46, 0.29", "-148.566, 80.8375, 57.5103, 0.29", "-149.378, 81.5784, 57.7715, 0.29", "-149.777, 81.9573, 57.9021, 0.59", "-149.893, 82.0732, 57.9414, 0.59", "-150.244, 82.4168, 58.0557, 0.59", "-151.11, 83.2514, 58.3261, 0.37", "-151.24, 83.3682, 58.3639, 0.37", "-151.923, 84.0207, 58.5141, 0.37", "-151.978, 84.0767, 58.5242, 0.37", "-152.742, 84.8322, 58.6313, 0.37", "-152.863, 84.9504, 58.6441, 0.37", "-153.679, 85.6673, 58.7232, 0.37", "-154.781, 86.5403, 58.8245, 0.22", "-154.927, 86.6389, 58.8391, 0.22", "-155.758, 87.119, 58.9368, 0.22", "-155.829, 87.1523, 58.9473, 0.22", "-156.811, 87.3474, 59.2223, 0.81", "-157.155, 87.3597, 59.3452, 0.81", "-158.121, 87.3064, 59.6978, 0.22", "-158.196, 87.2978, 59.7214, 0.22", "-159.038, 87.1401, 59.9881, 0.22", "-161.394, 86.657, 60.6663, 0.22", "-161.554, 86.6233, 60.7089, 0.22", "-162.694, 86.3859, 61.0021, 0.22", "-163.781, 86.1609, 61.2676, 0.22", "-165.433, 85.8543, 61.6512, 0.22", "-166.612, 85.6732, 61.9062, 0.22", "-166.701, 85.6683, 61.9225, 0.22", "-168.004, 85.7748, 62.2182, 0.52", "-168.378, 85.8992, 62.3337, 0.81", "-168.513, 85.9827, 62.3839, 0.81", "-168.818, 86.2487, 62.4937, 0.81", "-168.88, 86.3118, 62.5086, 0.81", "-169.81, 87.281, 62.6151, 0.37", "-170.315, 87.8486, 62.6256, 0.59", "-170.367, 87.9082, 62.624, 0.59", "-171.009, 88.6746, 62.5989, 0.44", "-172.053, 90.0147, 62.3835, 0.29", "-172.152, 90.1481, 62.351, 0.29", "-172.701, 90.9197, 61.9959, 0.29", "-172.736, 90.971, 61.967, 0.29", "-173.282, 91.7337, 61.4984, 0.29", "-174.154, 93.0601, 60.4536, 0.29", "-174.183, 93.1037, 60.4146, 0.29", "-175.239, 94.5285, 58.9515, 0.29", "-175.271, 94.5661, 58.9087, 0.29", "-175.61, 94.9312, 58.4878, 0.66", "-177.241, 96.4716, 56.615, 0.37", "-177.35, 96.5608, 56.508, 0.37", "-177.994, 97.0149, 55.9625, 0.29", "-178.672, 97.4066, 55.5381, 0.15", "-179.099, 97.6292, 55.3125, 0.74", "-179.305, 97.7139, 55.2386, 0.74", "-180.735, 98.1452, 54.9845, 0.37", "-181.412, 98.3748, 54.8828, 0.29", "-182.32, 98.7184, 54.8166, 0.29", "-182.425, 98.7583, 54.8162, 0.29", "-183.75, 99.2415, 54.9223, 0.29", "-183.906, 99.2994, 54.9498, 0.29", "-184.775, 99.6272, 55.1916, 0.29", "-185.613, 99.9636, 55.4306, 0.29", "-185.685, 99.9936, 55.4458, 0.29", "-186.8, 100.457, 55.6165, 0.29", "-187.863, 100.923, 55.6758, 0.29", "-188.069, 101.01, 55.6731, 0.29", "-189.017, 101.474, 55.5633, 0.29", "-190.048, 102.081, 55.3918, 0.52", "-190.561, 102.433, 55.3054, 0.66", "-191.713, 103.345, 55.1022, 0.29", "-192.978, 104.438, 54.8837, 1.11", "-194.241, 105.601, 54.6088, 0.29", "-194.91, 106.258, 54.4428, 0.29", "-195.482, 106.834, 54.3089, 0.74", "-195.605, 106.96, 54.2768, 0.74", "-195.946, 107.319, 54.1804, 0.74", "-197.711, 109.092, 53.5829, 0.29", "-197.796, 109.167, 53.5545, 0.29", "-198.456, 109.724, 53.3211, 0.29", "-198.504, 109.766, 53.3042, 0.29", "-199.332, 110.489, 53.0385, 0.59", "-200.885, 111.914, 52.6391, 0.29", "-200.948, 111.978, 52.6336, 0.29", "-201.397, 112.487, 52.6325, 0.29", "-201.624, 112.819, 52.6675, 0.59", "-201.669, 112.895, 52.682, 0.59", "-201.999, 113.554, 52.8563, 0.59", "-202.307, 114.236, 53.0754, 0.29", "-202.597, 114.793, 53.2384, 0.29", "-203.563, 116.412, 53.6663, 0.29", "-203.603, 116.467, 53.6797, 0.29", "-204.188, 117.18, 53.8444, 0.29", "-204.469, 117.47, 53.905, 0.29", "-205.293, 118.158, 54.0327, 0.52", "-205.672, 118.409, 54.0836, 0.59", "-206.819, 119.021, 54.2432, 0.22", "-207.127, 119.194, 54.2752, 0.22", "-207.748, 119.591, 54.3428, 0.22", "-208.32, 120.029, 54.4171, 0.81", "-208.705, 120.363, 54.4696, 1.03", "-209.323, 120.922, 54.5426, 0.52", "-210.455, 121.952, 54.6509, 0.29", "-211.76, 123.113, 54.757, 0.22", "-213.001, 124.278, 54.8617, 0.22", "-213.146, 124.424, 54.8757, 0.22", "-213.753, 125.047, 54.9392, 0.74", "-214.083, 125.378, 54.978, 0.74", "-214.505, 125.74, 55.0597, 0.74", "-223.323, 131.997, 53.8783, 0.74" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-135.953, 74.4583, 56.7283, 0.29", "-135.856, 75.0979, 56.8001, 0.29", "-135.667, 76.2255, 56.8818, 0.29", "-135.659, 76.2729, 56.8847, 0.29", "-135.486, 77.3355, 56.947, 0.29", "-135.478, 77.3887, 56.9503, 0.29", "-135.3, 78.9729, 57.0564, 0.52", "-135.233, 79.8628, 57.1248, 0.52", "-135.211, 80.5053, 57.1732, 0.52", "-135.213, 80.6866, 57.1846, 0.52", "-135.264, 81.4632, 57.2911, 0.52", "-135.344, 82.0483, 57.4199, 0.81", "-135.374, 82.156, 57.4581, 0.81", "-135.542, 82.5979, 57.6698, 0.66", "-135.738, 83.0177, 57.8923, 0.37", "-136.379, 84.2749, 58.5981, 0.37", "-136.403, 84.3191, 58.6213, 0.37", "-136.659, 84.7636, 58.8298, 0.52", "-136.696, 84.8287, 58.8531, 0.52", "-137.161, 85.6532, 59.076, 0.44", "-137.214, 85.7491, 59.0932, 0.44", "-137.602, 86.4388, 59.1273, 0.44", "-137.713, 86.6502, 59.1389, 0.44", "-138.211, 87.7285, 59.2104, 0.44", "-138.233, 87.7795, 59.2144, 0.44", "-138.431, 88.3071, 59.2651, 0.52", "-138.467, 88.4194, 59.2739, 0.52", "-138.663, 89.1142, 59.328, 0.37", "-138.859, 89.9251, 59.3797, 0.74", "-138.87, 89.9792, 59.3833, 0.74", "-138.95, 90.3544, 59.409, 0.74", "-139.309, 92.1286, 59.5919, 0.52", "-139.319, 92.1826, 59.5988, 0.52", "-139.586, 93.6427, 59.8286, 0.52", "-139.893, 95.3693, 60.1429, 0.52", "-139.905, 95.4388, 60.157, 0.52", "-140.096, 96.5525, 60.4123, 0.88", "-140.137, 96.7921, 60.4763, 0.88", "-140.357, 98.1364, 60.8344, 0.52", "-140.489, 98.9917, 61.061, 0.52", "-140.51, 99.1498, 61.1087, 0.52", "-140.619, 99.9416, 61.3243, 0.52", "-140.656, 100.163, 61.3743, 0.52", "-140.772, 100.71, 61.4948, 0.59", "-140.922, 101.343, 61.6271, 0.37", "-141.175, 102.361, 61.8322, 0.44", "-141.447, 103.465, 62.0435, 0.22", "-141.695, 104.458, 62.224, 0.22", "-141.799, 104.88, 62.306, 0.37", "-142.04, 105.861, 62.5022, 0.22", "-142.063, 105.96, 62.522, 0.22", "-142.245, 106.785, 62.7276, 0.22", "-142.254, 106.836, 62.7462, 0.22", "-142.367, 107.671, 63.0724, 0.22", "-142.372, 107.715, 63.0899, 0.22", "-142.499, 108.806, 63.5243, 0.22", "-142.63, 110.033, 63.9992, 0.66", "-142.68, 110.504, 64.1749, 0.96", "-142.766, 111.37, 64.5072, 0.22", "-142.841, 112.115, 64.7919, 0.22", "-142.847, 112.173, 64.8149, 0.22", "-142.893, 112.604, 64.9911, 0.59", "-142.95, 112.98, 65.1125, 0.88", "-143.113, 113.868, 65.3684, 0.44", "-143.226, 114.401, 65.5017, 0.29", "-143.26, 114.566, 65.5353, 0.29", "-143.336, 114.957, 65.5983, 0.29", "-143.484, 115.95, 65.6614, 0.74", "-143.537, 116.429, 65.6521, 0.29", "-143.584, 116.926, 65.6122, 0.44", "-143.616, 117.328, 65.5812, 0.59", "-143.62, 117.383, 65.5784, 0.59", "-143.705, 118.584, 65.5504, 0.22", "-143.719, 118.761, 65.5547, 0.22", "-143.813, 119.759, 65.6549, 0.22", "-143.818, 119.812, 65.6641, 0.22", "-143.859, 120.402, 65.8081, 0.44", "-143.862, 120.462, 65.827, 0.44", "-143.873, 120.771, 65.9594, 0.44", "-143.861, 121.773, 66.4284, 0.29", "-143.828, 122.138, 66.6275, 0.44", "-143.816, 122.24, 66.6863, 0.44", "-143.742, 122.703, 66.9831, 0.44" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "48.5687, -319.031, -125.796, 0.29", "48.0131, -319.204, -125.71, 0.29", "47.3583, -319.516, -125.627, 0.29", "47.2403, -319.582, -125.613, 0.59", "46.8212, -319.823, -125.564, 0.66", "46.7375, -319.869, -125.563, 0.66", "46.302, -320.102, -125.573, 0.66", "45.5416, -320.543, -125.612, 0.22", "45.231, -320.733, -125.631, 0.66", "44.8665, -320.957, -125.657, 0.66", "43.8906, -321.552, -125.741, 0.22", "43.3228, -321.889, -125.796, 0.22", "42.5277, -322.345, -125.884, 0.22", "41.969, -322.639, -125.948, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "48.5687, -319.031, -125.796, 0.29", "48.7811, -320.106, -126.042, 0.29", "48.9468, -320.76, -126.227, 0.29", "49.0151, -321.086, -126.316, 0.74", "49.0663, -321.375, -126.408, 0.88", "49.0775, -321.447, -126.432, 0.88", "49.1394, -321.954, -126.593, 0.88", "49.2677, -322.834, -126.821, 0.22", "49.3304, -323.336, -126.955, 0.22", "49.3943, -323.917, -127.126, 0.88", "49.4016, -323.964, -127.14, 0.88", "49.5205, -324.561, -127.308, 0.74", "49.7363, -325.29, -127.494, 0.37", "49.7589, -325.333, -127.503, 0.37", "50.4405, -326.225, -127.589, 0.29", "50.8184, -326.626, -127.591, 0.59", "50.9325, -326.733, -127.588, 0.59", "51.4985, -327.199, -127.559, 0.88", "52.349, -327.826, -127.382, 0.74", "53.3552, -328.515, -127.077, 0.29", "53.8912, -328.86, -126.88, 0.74", "53.9307, -328.886, -126.865, 0.74", "54.2535, -329.093, -126.723, 0.74", "55.703, -329.976, -125.961, 0.44", "56.1733, -330.252, -125.651, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-143.742, 122.703, 66.9831, 0.29", "-142.358, 122.079, 67.0687, 0.29", "-142.201, 122.002, 67.0703, 0.29", "-141.713, 121.759, 67.0645, 0.29", "-141.634, 121.72, 67.0635, 0.29", "-140.509, 121.161, 67.0502, 0.29", "-140.021, 120.919, 67.0444, 0.81", "-139.468, 120.656, 66.9678, 1.03", "-139.392, 120.615, 66.9566, 1.03", "-129.469, 114.084, 64.8821, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-143.742, 122.703, 66.9831, 0.44", "-144.019, 123.921, 66.9337, 0.44", "-144.316, 125.284, 66.8673, 0.37", "-144.814, 127.791, 66.8195, 0.29", "-145.271, 130.02, 66.8221, 0.29", "-145.465, 131.026, 66.8278, 0.74", "-145.557, 131.519, 66.8315, 0.74", "-145.658, 132.155, 66.8266, 0.44", "-145.825, 133.625, 66.8183, 0.37", "-145.929, 135.168, 66.8068, 0.29", "-146.008, 136.717, 66.7912, 0.29", "-146.012, 136.873, 66.7916, 0.29", "-146.042, 139.02, 66.8102, 0.29", "-146.042, 139.429, 66.8114, 0.29", "-146.038, 140.756, 66.7908, 0.29", "-146.036, 140.823, 66.7917, 0.29", "-146.114, 142.094, 66.8658, 0.29", "-146.257, 142.766, 66.9197, 0.44", "-146.306, 142.902, 66.9339, 0.44", "-146.516, 143.382, 66.9787, 0.29", "-146.556, 143.462, 66.9847, 0.29", "-147.204, 144.689, 66.9888, 0.29", "-148.346, 146.755, 66.8686, 0.29", "-148.474, 146.995, 66.8506, 0.29", "-148.859, 147.737, 66.7862, 0.74", "-149.167, 148.356, 66.729, 0.88", "-149.773, 149.598, 66.6091, 0.52", "-150.314, 150.723, 66.4983, 0.37", "-151.071, 152.281, 66.3751, 0.29", "-151.19, 152.526, 66.3614, 0.29", "-152.163, 154.53, 66.2975, 0.29", "-152.244, 154.698, 66.2976, 0.29", "-152.897, 156.094, 66.367, 0.29", "-153.15, 156.633, 66.422, 0.52", "-153.354, 157.059, 66.4959, 0.66", "-153.415, 157.189, 66.5263, 0.66", "-153.639, 157.665, 66.6896, 0.66", "-153.681, 157.747, 66.718, 0.66", "-154.134, 158.561, 66.9736, 0.29", "-154.285, 158.812, 67.0481, 0.22", "-154.576, 159.278, 67.1913, 0.52", "-154.733, 159.541, 67.2659, 0.52", "-155.115, 160.202, 67.4407, 0.29", "-155.605, 161.095, 67.6353, 0.29", "-156.302, 162.495, 67.919, 0.29", "-156.341, 162.581, 67.9374, 0.29", "-156.957, 164.044, 68.2533, 0.29", "-157.01, 164.179, 68.2824, 0.29", "-157.583, 165.787, 68.6205, 0.29", "-158.035, 167.133, 68.8693, 0.29", "-158.099, 167.328, 68.8876, 0.29", "-158.32, 167.99, 68.9045, 0.29", "-158.338, 168.045, 68.902, 0.29", "-158.627, 168.9, 68.8134, 0.88", "-158.714, 169.155, 68.7696, 0.88", "-159.115, 170.361, 68.5219, 0.22", "-159.499, 171.541, 68.2402, 0.22", "-159.557, 171.722, 68.1942, 0.22", "-159.967, 173.017, 67.8569, 0.22", "-159.984, 173.073, 67.8425, 0.22", "-160.569, 174.783, 67.2818, 0.52", "-161.022, 176.005, 66.8316, 0.29", "-161.242, 176.543, 66.6006, 0.37", "-161.288, 176.65, 66.5512, 0.37", "-161.553, 177.235, 66.2668, 0.37", "-162.404, 178.996, 65.2882, 0.22", "-162.927, 180.04, 64.6798, 0.22", "-162.953, 180.096, 64.6495, 0.22", "-163.205, 180.664, 64.3501, 0.52", "-163.548, 181.471, 63.9493, 0.66", "-164.225, 183.103, 63.0989, 0.15", "-164.744, 184.456, 62.4175, 0.15", "-165.014, 185.124, 62.0283, 0.29", "-165.038, 185.18, 61.9946, 0.29", "-165.216, 185.572, 61.7407, 0.29", "-165.796, 186.777, 60.9475, 0.44", "-165.966, 187.092, 60.6969, 0.44", "-166.45, 187.857, 60.0531, 0.22", "-166.718, 188.274, 59.727, 0.52", "-166.749, 188.324, 59.6909, 0.52", "-166.979, 188.695, 59.4562, 0.88", "-168.311, 190.941, 58.3147, 0.29", "-169.419, 192.832, 57.4292, 0.29", "-169.775, 193.512, 57.158, 0.29", "-169.802, 193.572, 57.1375, 0.29", "-170.241, 194.802, 56.7915, 0.29", "-170.517, 195.928, 56.5578, 0.29", "-170.523, 195.985, 56.5516, 0.29", "-170.538, 197.679, 56.332, 0.29", "-170.497, 198.949, 56.16, 0.59", "-170.46, 199.58, 56.0696, 0.59", "-170.404, 200.673, 55.9131, 0.22", "-170.366, 201.907, 55.7404, 0.22", "-170.366, 202.06, 55.7199, 0.22", "-170.433, 203.946, 55.4822, 0.22", "-170.443, 204.092, 55.4649, 0.22", "-170.714, 207.05, 55.1317, 0.22", "-170.725, 207.127, 55.1239, 0.22", "-171.037, 208.875, 54.9633, 0.22", "-171.083, 209.078, 54.947, 0.22", "-171.166, 209.368, 54.9279, 0.59", "-171.36, 209.962, 54.8944, 0.59", "-171.933, 211.407, 54.7279, 0.29", "-172.213, 212.053, 54.6246, 0.59", "-172.682, 213.046, 54.4315, 0.52", "-173.084, 213.905, 54.2438, 0.74", "-173.426, 214.646, 54.0633, 0.74", "-174.069, 216.128, 53.6561, 0.22", "-174.318, 216.754, 53.4578, 0.44", "-174.524, 217.315, 53.278, 0.74", "-174.634, 217.644, 53.1812, 1.03", "-174.651, 217.697, 53.1665, 1.03", "-174.872, 218.426, 53.0116, 1.03", "-174.889, 218.492, 53.0076, 1.03", "-175.167, 219.571, 52.9377, 0.37", "-175.449, 220.639, 52.8615, 0.29", "-176.901, 229.975, 52.2413, 0.29", "-179.269, 239.118, 52.9242, 0.29", "-181.328, 248.294, 54.0356, 0.29", "-182.784, 257.385, 56.2496, 0.29", "-183.27, 266.401, 59.1019, 0.29", "-184.377, 274.651, 63.6175, 0.29" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-129.469, 114.084, 64.8821, 0.22", "-122.053, 108.535, 63.7146, 0.22", "-114.768, 102.701, 63.5093, 0.22", "-106.895, 97.6857, 63.4414, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-129.469, 114.084, 64.8821, 0.22", "-121.725, 109.832, 63.6622, 0.22", "-113.971, 105.574, 62.5326, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "axon_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "axon_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_91", "dend_88", "dend_88", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_DBC_30f853b5ca_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_92, id: dend_92, parent: soma_0
create dend_92
public dend_92
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_92
create dend_98
public dend_98
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_102, id: dend_102, parent: dend_98
create dend_102
public dend_102
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_93
create dend_97
public dend_97
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_65, id: dend_65, parent: dend_41
create dend_65
public dend_65
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_87, id: dend_87, parent: dend_67
create dend_87
public dend_87
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_91, id: dend_91, parent: dend_87
create dend_91
public dend_91
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_72
create dend_86
public dend_86
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_83, id: dend_83, parent: dend_73
create dend_83
public dend_83
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_74
create dend_82
public dend_82
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_81, id: dend_81, parent: dend_75
create dend_81
public dend_81
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_92, dend_25, dend_0, axon_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, axon_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_107
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_92(0), soma_0(0.45000180399916434)
    connect dend_25(0), soma_0(0.45000180399916434)
    connect dend_0(0), soma_0(0.45000180399916434)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_102(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_65(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_87(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_91(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_86(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_83(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_81(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.46438, -10.9587, 0.660551, 2.48146 ) }
    soma_0 { pt3dadd( -1.32683, -9.87667, 0.597834, 3.97794 ) }
    soma_0 { pt3dadd( -1.18928, -8.79467, 0.535117, 5.03907 ) }
    soma_0 { pt3dadd( -1.05173, -7.71267, 0.4724, 6.13889 ) }
    soma_0 { pt3dadd( -0.914177, -6.63067, 0.409682, 7.21767 ) }
    soma_0 { pt3dadd( -0.776625, -5.54866, 0.346965, 8.03623 ) }
    soma_0 { pt3dadd( -0.639073, -4.46666, 0.284248, 8.69756 ) }
    soma_0 { pt3dadd( -0.501522, -3.38466, 0.221531, 9.05897 ) }
    soma_0 { pt3dadd( -0.36397, -2.30266, 0.158814, 9.32273 ) }
    soma_0 { pt3dadd( -0.226418, -1.22066, 0.0960968, 9.64559 ) }
    soma_0 { pt3dadd( -0.0888665, -0.138661, 0.0333797, 9.88524 ) }
    soma_0 { pt3dadd( 0.0486852, 0.943339, -0.0293375, 9.94228 ) }
    soma_0 { pt3dadd( 0.186237, 2.02534, -0.0920546, 10.0768 ) }
    soma_0 { pt3dadd( 0.323789, 3.10734, -0.154772, 10.303 ) }
    soma_0 { pt3dadd( 0.46134, 4.18934, -0.217489, 10.477 ) }
    soma_0 { pt3dadd( 0.598892, 5.27134, -0.280206, 10.0133 ) }
    soma_0 { pt3dadd( 0.736444, 6.35334, -0.342923, 9.03357 ) }
    soma_0 { pt3dadd( 0.873996, 7.43534, -0.40564, 7.79644 ) }
    soma_0 { pt3dadd( 1.01155, 8.51734, -0.468357, 6.40893 ) }
    soma_0 { pt3dadd( 1.1491, 9.59934, -0.531074, 4.35077 ) }
    soma_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 2.55388 ) }
    // Section: dend_92, id: dend_92, parent: soma_0 (entry count 21/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 2.53825, -1.0616, -8.8572, 1.11 ) }
    dend_92 { pt3dadd( 2.58973, -2.0139, -8.97194, 1.11 ) }
    dend_92 { pt3dadd( 2.67764, -3.79321, -9.23766, 1.11 ) }
    dend_92 { pt3dadd( 2.7328, -4.79799, -9.42182, 1.03 ) }
    dend_92 { pt3dadd( 2.80392, -6.12223, -9.67688, 1.03 ) }
    dend_92 { pt3dadd( 2.86551, -7.74243, -10.1649, 1.03 ) }
    dend_92 { pt3dadd( 2.86667, -9.0546, -10.6722, 1.18 ) }
    dend_92 { pt3dadd( 2.82511, -10.3225, -11.2661, 1.18 ) }
    dend_92 { pt3dadd( 2.7388, -11.6057, -11.9962, 1.4 ) }
    dend_92 { pt3dadd( 2.63226, -12.3464, -12.5945, 1.55 ) }
    dend_92 { pt3dadd( 2.13793, -14.7503, -15.0109, 1.25 ) }
    dend_92 { pt3dadd( 1.8391, -15.974, -16.5884, 1.25 ) }
    dend_92 { pt3dadd( 1.7117, -16.4975, -17.4188, 1.47 ) }
    dend_92 { pt3dadd( 1.50527, -17.6736, -19.4846, 1.69 ) }
    dend_92 { pt3dadd( 1.29187, -20.0282, -23.7611, 1.69 ) }
    dend_92 { pt3dadd( 1.2921, -20.0596, -23.8175, 1.69 ) }
    dend_92 { pt3dadd( 1.51082, -22.0934, -27.25, 1.33 ) }
    dend_92 { pt3dadd( 1.75254, -23.467, -29.3644, 1.11 ) }
    dend_92 { pt3dadd( 1.99994, -24.7549, -31.0818, 1.25 ) }
    dend_92 { pt3dadd( 2.23459, -26.0119, -32.3382, 1.4 ) }
    dend_92 { pt3dadd( 2.33507, -26.871, -32.9059, 1.4 ) }
    dend_92 { pt3dadd( 2.33584, -27.9619, -33.5051, 1.33 ) }
    dend_92 { pt3dadd( 2.11496, -29.4346, -34.0657, 1.18 ) }
    dend_92 { pt3dadd( 1.78024, -30.5483, -34.486, 1.18 ) }
    dend_92 { pt3dadd( 1.22551, -31.8741, -35.0858, 1.33 ) }
    dend_92 { pt3dadd( 0.478915, -33.5613, -35.9654, 1.03 ) }
    dend_92 { pt3dadd( -0.0340039, -34.828, -36.6595, 1.25 ) }
    dend_92 { pt3dadd( -0.299563, -35.6223, -37.1003, 1.62 ) }
    dend_92 { pt3dadd( -0.777443, -37.4548, -38.1016, 1.62 ) }
    dend_92 { pt3dadd( -1.01259, -38.7698, -38.7663, 1.03 ) }
    dend_92 { pt3dadd( -1.20659, -40.9533, -39.7135, 1.03 ) }
    dend_92 { pt3dadd( -1.22863, -42.6103, -40.2994, 1.18 ) }
    dend_92 { pt3dadd( -1.16122, -44.1622, -40.7633, 1.18 ) }
    dend_92 { pt3dadd( -1.11664, -44.7029, -40.9066, 1.55 ) }
    dend_92 { pt3dadd( -1.02676, -45.6166, -41.0956, 1.55 ) }
    dend_92 { pt3dadd( -0.91921, -46.8666, -41.3602, 1.69 ) }
    dend_92 { pt3dadd( -0.841959, -48.1595, -41.7262, 1.84 ) }
    dend_92 { pt3dadd( -0.800134, -49.3371, -42.1745, 1.47 ) }
    dend_92 { pt3dadd( -0.761704, -50.9476, -42.8684, 1.18 ) }
    dend_92 { pt3dadd( -0.761296, -52.3331, -43.5268, 1.18 ) }
    dend_92 { pt3dadd( -0.793368, -53.9136, -44.3464, 1.18 ) }
    dend_92 { pt3dadd( -0.79687, -55.671, -45.1833, 1.33 ) }
    dend_92 { pt3dadd( -0.719667, -57.1312, -45.7254, 1.03 ) }
    dend_92 { pt3dadd( -0.606673, -58.2496, -46.1143, 1.03 ) }
    dend_92 { pt3dadd( -0.441963, -59.421, -46.4682, 1.03 ) }
    dend_92 { pt3dadd( -0.222551, -60.8941, -46.8822, 1.33 ) }
    dend_92 { pt3dadd( 0.160321, -63.911, -47.724, 1.33 ) }
    dend_92 { pt3dadd( 0.410093, -66.5613, -48.5466, 1.33 ) }
    dend_92 { pt3dadd( 0.534238, -68.4489, -49.2203, 1.18 ) }
    dend_92 { pt3dadd( 0.59798, -69.5248, -49.6593, 1.4 ) }
    dend_92 { pt3dadd( 0.736114, -71.499, -50.6359, 1.4 ) }
    dend_92 { pt3dadd( 0.88559, -73.5642, -51.852, 1.33 ) }
    dend_92 { pt3dadd( 1.02363, -75.3865, -53.1611, 1.18 ) }
    dend_92 { pt3dadd( 1.03084, -75.4547, -53.2142, 1.18 ) }
    dend_92 { pt3dadd( 1.20798, -76.6652, -54.1499, 1.47 ) }
    dend_92 { pt3dadd( 1.55152, -78.4, -55.5289, 1.84 ) }
    dend_92 { pt3dadd( 1.84409, -79.4561, -56.3449, 1.62 ) }
    dend_92 { pt3dadd( 2.28871, -80.726, -57.2884, 1.55 ) }
    dend_92 { pt3dadd( 2.83476, -82.2075, -58.3823, 1.33 ) }
    dend_92 { pt3dadd( 3.25894, -83.4908, -59.3598, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.511751, -10.1116, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.491917, -10.1846, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.330553, -10.7783, 0.0228061, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 84/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.07825, 10.7084, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 1.43295, 11.4497, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 2.10203, 12.8306, 0.142806, 2.14 ) }
    dend_0 { pt3dadd( 2.56852, 13.8244, 0.147454, 1.92 ) }
    dend_0 { pt3dadd( 2.74289, 14.207, 0.150315, 1.92 ) }
    dend_0 { pt3dadd( 2.99869, 14.7534, 0.155177, 1.92 ) }
    dend_0 { pt3dadd( 3.17107, 15.1102, 0.158508, 1.92 ) }
    dend_0 { pt3dadd( 3.44365, 15.6448, 0.164229, 1.92 ) }
    dend_0 { pt3dadd( 3.66394, 16.0636, 0.168835, 1.99 ) }
    dend_0 { pt3dadd( 3.99508, 16.6919, 0.174931, 1.99 ) }
    dend_0 { pt3dadd( 4.4822, 17.6669, 0.182776, 1.99 ) }
    dend_0 { pt3dadd( 4.88225, 18.4779, 0.188124, 1.99 ) }
    dend_0 { pt3dadd( 5.30486, 19.3749, 0.192448, 1.99 ) }
    dend_0 { pt3dadd( 5.76823, 20.4402, 0.175388, 2.21 ) }
    dend_0 { pt3dadd( 6.15931, 21.4651, 0.140699, 2.21 ) }
    dend_0 { pt3dadd( 6.4059, 22.2339, 0.0922148, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 6.49059, 22.5689, 0.0570979, 1.99 ) }
    dend_0 { pt3dadd( 6.64233, 23.3179, -0.0428313, 1.99 ) }
    dend_0 { pt3dadd( 6.78854, 24.2788, -0.18673, 2.06 ) }
    dend_0 { pt3dadd( 6.92287, 25.4809, -0.398533, 1.92 ) }
    dend_0 { pt3dadd( 7.02362, 26.6428, -0.638925, 1.92 ) }
    dend_0 { pt3dadd( 7.12434, 27.9405, -0.956869, 1.99 ) }
    dend_0 { pt3dadd( 7.16939, 28.6214, -1.1505, 2.14 ) }
    dend_0 { pt3dadd( 7.24134, 29.7613, -1.49078, 2.14 ) }
    dend_0 { pt3dadd( 7.3249, 31.166, -1.9251, 1.99 ) }
    dend_0 { pt3dadd( 7.36375, 32.0216, -2.2176, 2.06 ) }
    dend_0 { pt3dadd( 7.37991, 33.0448, -2.58773, 2.43 ) }
    dend_0 { pt3dadd( 7.38147, 33.8389, -2.90779, 2.65 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 0.551478 ) }
    axon_0 { pt3dadd( 3.17833, 25.5615, -0.593792, 0.551478 ) }
    axon_0 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.551478 ) }
    // Section: dend_98, id: dend_98, parent: dend_92 (entry count 15/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 3.25894, -83.4908, -59.3598, 0.52 ) }
    dend_98 { pt3dadd( 2.27288, -84.7261, -60.8131, 0.52 ) }
    dend_98 { pt3dadd( 1.62594, -85.7596, -61.9381, 0.52 ) }
    dend_98 { pt3dadd( 1.29472, -86.5841, -62.7882, 0.52 ) }
    dend_98 { pt3dadd( 1.02142, -87.8418, -64.0496, 0.52 ) }
    dend_98 { pt3dadd( 0.970699, -88.4737, -64.6835, 1.11 ) }
    dend_98 { pt3dadd( 0.962846, -89.2459, -65.417, 1.4 ) }
    dend_98 { pt3dadd( 1.08458, -89.8507, -65.9292, 1.69 ) }
    dend_98 { pt3dadd( 1.46605, -90.9999, -66.8237, 1.62 ) }
    dend_98 { pt3dadd( 1.86172, -91.9444, -67.5286, 1.4 ) }
    dend_98 { pt3dadd( 2.44102, -93.2073, -68.4175, 0.88 ) }
    dend_98 { pt3dadd( 2.80523, -94.004, -68.9741, 0.66 ) }
    dend_98 { pt3dadd( 3.30886, -95.1544, -69.7167, 0.66 ) }
    dend_98 { pt3dadd( 3.60061, -95.8478, -70.1617, 0.88 ) }
    dend_98 { pt3dadd( 3.92673, -96.6687, -70.6462, 1.11 ) }
    dend_98 { pt3dadd( 4.22169, -97.3574, -71.013, 1.18 ) }
    dend_98 { pt3dadd( 4.54262, -98.0207, -71.3355, 1.18 ) }
    dend_98 { pt3dadd( 4.81675, -98.5259, -71.6135, 1.18 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 33/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 3.25894, -83.4908, -59.3598, 0.66 ) }
    dend_93 { pt3dadd( 2.45298, -84.5547, -59.0501, 0.66 ) }
    dend_93 { pt3dadd( 1.72967, -85.2857, -58.7831, 0.52 ) }
    dend_93 { pt3dadd( 1.67172, -85.3369, -58.7662, 0.52 ) }
    dend_93 { pt3dadd( 0.603762, -86.201, -58.491, 0.74 ) }
    dend_93 { pt3dadd( -0.422489, -87.0298, -58.2737, 0.88 ) }
    dend_93 { pt3dadd( -1.20298, -87.6518, -58.0971, 0.74 ) }
    dend_93 { pt3dadd( -2.30199, -88.4699, -57.8021, 0.37 ) }
    dend_93 { pt3dadd( -3.10194, -89.0789, -57.5391, 1.18 ) }
    dend_93 { pt3dadd( -3.95612, -89.8067, -57.1906, 1.4 ) }
    dend_93 { pt3dadd( -4.85449, -90.6586, -56.7505, 0.96 ) }
    dend_93 { pt3dadd( -5.69761, -91.5994, -56.1049, 0.74 ) }
    dend_93 { pt3dadd( -6.43857, -92.5796, -55.2636, 0.29 ) }
    dend_93 { pt3dadd( -7.02759, -93.5231, -54.3762, 0.74 ) }
    dend_93 { pt3dadd( -7.36781, -94.1686, -53.7352, 0.96 ) }
    dend_93 { pt3dadd( -7.38831, -94.2149, -53.6911, 0.96 ) }
    dend_93 { pt3dadd( -8.12018, -96.0627, -52.1162, 0.59 ) }
    dend_93 { pt3dadd( -8.43403, -96.9013, -51.5839, 1.11 ) }
    dend_93 { pt3dadd( -8.70433, -97.5823, -51.2654, 1.25 ) }
    dend_93 { pt3dadd( -9.02212, -98.2601, -51.0754, 1.18 ) }
    dend_93 { pt3dadd( -9.68122, -99.4324, -50.867, 0.81 ) }
    dend_93 { pt3dadd( -10.3053, -100.432, -50.7854, 0.59 ) }
    dend_93 { pt3dadd( -11.0286, -101.481, -50.8323, 0.44 ) }
    dend_93 { pt3dadd( -11.0842, -101.554, -50.8368, 0.44 ) }
    dend_93 { pt3dadd( -11.7491, -102.308, -50.8692, 0.29 ) }
    dend_93 { pt3dadd( -12.8656, -103.405, -50.9099, 0.29 ) }
    dend_93 { pt3dadd( -13.5865, -104.068, -50.928, 0.81 ) }
    dend_93 { pt3dadd( -14.1374, -104.601, -50.9374, 1.33 ) }
    dend_93 { pt3dadd( -14.6857, -105.217, -50.9884, 1.33 ) }
    dend_93 { pt3dadd( -15.4466, -106.3, -51.1993, 0.96 ) }
    dend_93 { pt3dadd( -15.8501, -107.093, -51.4283, 0.81 ) }
    dend_93 { pt3dadd( -16.162, -107.978, -51.7522, 0.81 ) }
    dend_93 { pt3dadd( -16.4452, -109.082, -52.2017, 0.74 ) }
    dend_93 { pt3dadd( -16.725, -110.58, -52.842, 0.44 ) }
    dend_93 { pt3dadd( -16.897, -111.939, -53.4816, 0.66 ) }
    dend_93 { pt3dadd( -16.9707, -112.822, -53.9385, 0.74 ) }
    dend_93 { pt3dadd( -17.0506, -113.619, -54.3642, 1.03 ) }
    dend_93 { pt3dadd( -17.194, -114.537, -54.8648, 1.25 ) }
    dend_93 { pt3dadd( -17.423, -115.485, -55.3608, 1.11 ) }
    dend_93 { pt3dadd( -17.795, -116.629, -55.9105, 0.59 ) }
    dend_93 { pt3dadd( -18.1377, -117.553, -56.3267, 0.59 ) }
    dend_93 { pt3dadd( -18.508, -118.522, -56.7819, 0.66 ) }
    dend_93 { pt3dadd( -18.78, -119.224, -57.1087, 0.66 ) }
    dend_93 { pt3dadd( -19.1874, -120.303, -57.5682, 0.52 ) }
    dend_93 { pt3dadd( -19.5386, -121.311, -57.9777, 0.52 ) }
    dend_93 { pt3dadd( -19.8135, -122.208, -58.2976, 0.59 ) }
    dend_93 { pt3dadd( -20.0972, -123.379, -58.7178, 1.25 ) }
    dend_93 { pt3dadd( -20.1821, -123.835, -58.8851, 1.4 ) }
    dend_93 { pt3dadd( -20.3014, -124.666, -59.1898, 1.4 ) }
    dend_93 { pt3dadd( -20.4798, -125.883, -59.5799, 0.88 ) }
    dend_93 { pt3dadd( -20.612, -126.659, -59.7889, 0.52 ) }
    dend_93 { pt3dadd( -20.9135, -127.992, -60.1073, 0.52 ) }
    dend_93 { pt3dadd( -21.2051, -128.811, -60.1975, 0.52 ) }
    dend_93 { pt3dadd( -21.246, -128.894, -60.1953, 0.52 ) }
    dend_93 { pt3dadd( -21.9915, -130.11, -59.943, 0.52 ) }
    dend_93 { pt3dadd( -22.0331, -130.173, -59.9215, 0.52 ) }
    dend_93 { pt3dadd( -22.3763, -130.695, -59.7115, 0.96 ) }
    dend_93 { pt3dadd( -23.2576, -132.106, -59.0763, 1.33 ) }
    dend_93 { pt3dadd( -23.8562, -133.19, -58.6348, 0.66 ) }
    dend_93 { pt3dadd( -24.3821, -134.255, -58.2764, 0.59 ) }
    dend_93 { pt3dadd( -24.8359, -135.298, -58.017, 0.74 ) }
    dend_93 { pt3dadd( -24.8713, -135.382, -58.0011, 0.74 ) }
    dend_93 { pt3dadd( -25.2343, -136.265, -57.902, 0.74 ) }
    dend_93 { pt3dadd( -25.5325, -136.965, -57.9027, 1.03 ) }
    dend_93 { pt3dadd( -25.8289, -137.522, -57.9349, 1.25 ) }
    dend_93 { pt3dadd( -26.2647, -138.217, -58.0238, 1.18 ) }
    dend_93 { pt3dadd( -26.7164, -138.843, -58.1314, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_93 { pt3dadd( -27.2131, -139.469, -58.2658, 0.29 ) }
    dend_93 { pt3dadd( -27.6581, -139.982, -58.4014, 0.29 ) }
    dend_93 { pt3dadd( -28.0098, -140.37, -58.5131, 0.81 ) }
    dend_93 { pt3dadd( -28.3135, -140.706, -58.6132, 1.11 ) }
    dend_93 { pt3dadd( -28.7604, -141.24, -58.7666, 1.11 ) }
    dend_93 { pt3dadd( -29.2484, -141.941, -58.9355, 0.59 ) }
    dend_93 { pt3dadd( -29.2868, -142.022, -58.9487, 0.59 ) }
    dend_93 { pt3dadd( -29.4834, -142.774, -59.0134, 0.44 ) }
    dend_93 { pt3dadd( -29.4881, -142.853, -59.0143, 0.44 ) }
    dend_93 { pt3dadd( -29.4006, -143.679, -58.9715, 0.44 ) }
    dend_93 { pt3dadd( -29.2359, -144.39, -58.9166, 0.81 ) }
    dend_93 { pt3dadd( -29.0155, -145.133, -58.8502, 1.11 ) }
    dend_93 { pt3dadd( -28.868, -145.6, -58.8257, 1.11 ) }
    dend_93 { pt3dadd( -28.6577, -146.257, -58.8242, 0.88 ) }
    dend_93 { pt3dadd( -28.4874, -146.857, -58.8517, 0.66 ) }
    dend_93 { pt3dadd( -28.2976, -147.642, -58.9227, 0.66 ) }
    dend_93 { pt3dadd( -28.1487, -148.444, -59.0207, 0.44 ) }
    dend_93 { pt3dadd( -28.0423, -149.302, -59.142, 0.29 ) }
    dend_93 { pt3dadd( -27.9963, -150.261, -59.2904, 0.88 ) }
    dend_93 { pt3dadd( -28.0231, -150.983, -59.4019, 0.88 ) }
    dend_93 { pt3dadd( -28.096, -151.556, -59.4873, 0.88 ) }
    dend_93 { pt3dadd( -28.263, -152.355, -59.5928, 0.74 ) }
    dend_93 { pt3dadd( -28.4769, -153.149, -59.6872, 0.37 ) }
    dend_93 { pt3dadd( -28.7057, -153.888, -59.7522, 0.29 ) }
    dend_93 { pt3dadd( -29.0539, -154.964, -59.8305, 0.29 ) }
    dend_93 { pt3dadd( -29.3349, -155.844, -59.8934, 0.81 ) }
    dend_93 { pt3dadd( -29.5793, -156.661, -59.9468, 1.03 ) }
    dend_93 { pt3dadd( -29.6017, -156.75, -59.9513, 1.03 ) }
    dend_93 { pt3dadd( -29.7333, -157.471, -59.9717, 1.18 ) }
    dend_93 { pt3dadd( -29.848, -158.286, -59.9852, 1.33 ) }
    dend_93 { pt3dadd( -29.9283, -159.002, -59.9921, 1.33 ) }
    dend_93 { pt3dadd( -30.0283, -160.096, -60.0059, 0.59 ) }
    dend_93 { pt3dadd( -30.1255, -161.178, -60.0267, 0.44 ) }
    dend_93 { pt3dadd( -30.2191, -162.14, -60.0526, 0.44 ) }
    dend_93 { pt3dadd( -30.3096, -163.021, -60.0787, 0.81 ) }
    dend_93 { pt3dadd( -30.4198, -164.007, -60.1112, 1.11 ) }
    dend_93 { pt3dadd( -30.5462, -164.91, -60.1495, 1.11 ) }
    dend_93 { pt3dadd( -30.6627, -165.467, -60.1868, 1.25 ) }
    dend_93 { pt3dadd( -30.9347, -166.334, -60.2759, 1.11 ) }
    dend_93 { pt3dadd( -31.3561, -167.39, -60.4404, 0.66 ) }
    dend_93 { pt3dadd( -31.6963, -168.131, -60.5859, 0.37 ) }
    dend_93 { pt3dadd( -32.0738, -168.828, -60.7547, 0.29 ) }
    dend_93 { pt3dadd( -32.6239, -169.826, -61.0061, 0.37 ) }
    dend_93 { pt3dadd( -32.9451, -170.55, -61.2073, 0.52 ) }
    dend_93 { pt3dadd( -33.1842, -171.343, -61.3956, 0.88 ) }
    dend_93 { pt3dadd( -33.2768, -171.899, -61.4997, 1.03 ) }
    dend_93 { pt3dadd( -33.2887, -172.146, -61.5338, 1.03 ) }
    dend_93 { pt3dadd( -33.324, -173.438, -61.5967, 0.74 ) }
    dend_93 { pt3dadd( -33.3715, -174.907, -61.5866, 0.59 ) }
    dend_93 { pt3dadd( -33.4399, -176.06, -61.5526, 0.59 ) }
    dend_93 { pt3dadd( -33.5039, -176.67, -61.4949, 1.4 ) }
    dend_93 { pt3dadd( -33.5931, -177.361, -61.4052, 1.77 ) }
    dend_93 { pt3dadd( -33.9141, -179.253, -61.0599, 0.81 ) }
    dend_93 { pt3dadd( -34.1284, -180.211, -60.8332, 0.81 ) }
    dend_93 { pt3dadd( -34.4964, -181.518, -60.4133, 0.81 ) }
    dend_93 { pt3dadd( -34.8546, -182.794, -59.9521, 1.11 ) }
    dend_93 { pt3dadd( -35.0189, -183.429, -59.6952, 1.11 ) }
    dend_93 { pt3dadd( -35.2445, -184.44, -59.2559, 0.88 ) }
    dend_93 { pt3dadd( -35.27, -184.559, -59.2007, 0.88 ) }
    dend_93 { pt3dadd( -35.5411, -185.553, -58.7333, 0.59 ) }
    dend_93 { pt3dadd( -35.9073, -186.564, -58.3049, 0.59 ) }
    dend_93 { pt3dadd( -36.2154, -187.353, -58.022, 0.52 ) }
    dend_93 { pt3dadd( -36.4973, -188.025, -57.8004, 0.52 ) }
    dend_93 { pt3dadd( -37.1536, -189.608, -57.3638, 0.74 ) }
    dend_93 { pt3dadd( -37.4579, -190.335, -57.1874, 1.33 ) }
    dend_93 { pt3dadd( -37.867, -191.278, -57.0114, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 66/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.330553, -10.7783, 0.0228061, 2.73 ) }
    dend_41 { pt3dadd( -0.0372202, -12.979, 0.0386335, 2.73 ) }
    dend_41 { pt3dadd( 0.235241, -15.2293, 0.0536243, 2.14 ) }
    dend_41 { pt3dadd( 0.422502, -17.0018, 0.0642443, 2.14 ) }
    dend_41 { pt3dadd( 0.612174, -19.0308, 0.0753292, 2.28 ) }
    dend_41 { pt3dadd( 0.776756, -20.9696, 0.0612101, 2.14 ) }
    dend_41 { pt3dadd( 0.985711, -23.4839, 0.0259152, 1.92 ) }
    dend_41 { pt3dadd( 1.11147, -25.3313, -0.0352171, 2.06 ) }
    dend_41 { pt3dadd( 1.24376, -27.9001, -0.15859, 1.84 ) }
    dend_41 { pt3dadd( 1.30188, -30.2959, -0.337371, 1.84 ) }
    dend_41 { pt3dadd( 1.30699, -32.1026, -0.510309, 1.84 ) }
    dend_41 { pt3dadd( 1.2571, -34.3782, -0.78977, 1.92 ) }
    dend_41 { pt3dadd( 1.12634, -36.5636, -1.15274, 1.92 ) }
    dend_41 { pt3dadd( 0.921454, -38.3645, -1.52985, 1.92 ) }
    dend_41 { pt3dadd( 0.577078, -40.1724, -1.96346, 1.84 ) }
    dend_41 { pt3dadd( 0.087566, -42.1056, -2.46448, 1.84 ) }
    dend_41 { pt3dadd( -0.283336, -43.2688, -2.78756, 1.77 ) }
    dend_41 { pt3dadd( -1.17355, -45.6907, -3.50972, 1.69 ) }
    dend_41 { pt3dadd( -2.20073, -48.221, -4.28497, 1.69 ) }
    dend_41 { pt3dadd( -3.10725, -50.2825, -4.94924, 1.84 ) }
    dend_41 { pt3dadd( -3.14319, -50.3549, -4.97226, 1.84 ) }
    dend_41 { pt3dadd( -3.6899, -51.3007, -5.29507, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 88/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.330553, -10.7783, 0.0228061, 0.96 ) }
    dend_26 { pt3dadd( -0.346926, -12.1593, -0.753678, 0.96 ) }
    dend_26 { pt3dadd( -0.442201, -13.5474, -1.4024, 1.25 ) }
    dend_26 { pt3dadd( -0.656922, -15.1871, -2.05122, 0.96 ) }
    dend_26 { pt3dadd( -0.865737, -16.256, -2.36151, 1.25 ) }
    dend_26 { pt3dadd( -1.05769, -17.0121, -2.53741, 1.47 ) }
    dend_26 { pt3dadd( -1.33648, -17.9893, -2.7356, 1.11 ) }
    dend_26 { pt3dadd( -1.76816, -19.2452, -2.88891, 0.96 ) }
    dend_26 { pt3dadd( -2.28268, -20.4453, -2.95286, 1.11 ) }
    dend_26 { pt3dadd( -3.06214, -21.9643, -2.99228, 1.11 ) }
    dend_26 { pt3dadd( -3.63118, -22.9489, -3.04038, 1.11 ) }
    dend_26 { pt3dadd( -3.67949, -23.0246, -3.04594, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( -4.34605, -23.9393, -3.15048, 0.96 ) }
    dend_26 { pt3dadd( -4.37737, -23.9774, -3.15823, 0.96 ) }
    dend_26 { pt3dadd( -5.01379, -24.6365, -3.38142, 1.03 ) }
    dend_26 { pt3dadd( -5.47846, -25.0892, -3.60219, 1.25 ) }
    dend_26 { pt3dadd( -5.5232, -25.1362, -3.62455, 1.25 ) }
    dend_26 { pt3dadd( -6.14771, -25.8263, -3.94688, 0.88 ) }
    dend_26 { pt3dadd( -6.73614, -26.5263, -4.26651, 0.88 ) }
    dend_26 { pt3dadd( -7.47344, -27.4766, -4.71235, 1.11 ) }
    dend_26 { pt3dadd( -8.0443, -28.2908, -5.08729, 1.11 ) }
    dend_26 { pt3dadd( -8.57941, -29.119, -5.46379, 1.25 ) }
    dend_26 { pt3dadd( -8.62868, -29.208, -5.50055, 1.25 ) }
    dend_26 { pt3dadd( -9.07163, -30.2139, -5.88676, 0.96 ) }
    dend_26 { pt3dadd( -9.45484, -31.2655, -6.25173, 0.96 ) }
    dend_26 { pt3dadd( -9.73072, -32.1457, -6.53358, 1.03 ) }
    dend_26 { pt3dadd( -9.75011, -32.2087, -6.55264, 1.03 ) }
    dend_26 { pt3dadd( -10.0953, -33.3043, -6.86717, 1.03 ) }
    dend_26 { pt3dadd( -10.3686, -34.1602, -7.08887, 1.03 ) }
    dend_26 { pt3dadd( -10.6151, -34.9238, -7.24327, 1.25 ) }
    dend_26 { pt3dadd( -10.8785, -35.7302, -7.36116, 1.62 ) }
    dend_26 { pt3dadd( -11.3001, -36.9406, -7.50325, 1.25 ) }
    dend_26 { pt3dadd( -11.6306, -37.8304, -7.58581, 1.18 ) }
    dend_26 { pt3dadd( -11.9084, -38.4732, -7.6086, 1.18 ) }
    dend_26 { pt3dadd( -12.287, -39.2558, -7.5844, 1.33 ) }
    dend_26 { pt3dadd( -12.7776, -40.1508, -7.52199, 1.33 ) }
    dend_26 { pt3dadd( -13.2376, -40.9316, -7.4635, 1.03 ) }
    dend_26 { pt3dadd( -13.2658, -40.9759, -7.46015, 1.03 ) }
    dend_26 { pt3dadd( -13.781, -41.7956, -7.46038, 0.81 ) }
    dend_26 { pt3dadd( -14.1529, -42.4266, -7.54215, 0.66 ) }
    dend_26 { pt3dadd( -14.5008, -43.0701, -7.74446, 0.81 ) }
    dend_26 { pt3dadd( -14.8892, -43.8734, -8.15568, 1.03 ) }
    dend_26 { pt3dadd( -15.0734, -44.3139, -8.43887, 1.33 ) }
    dend_26 { pt3dadd( -15.2592, -44.9078, -8.86399, 1.62 ) }
    dend_26 { pt3dadd( -15.4096, -45.6095, -9.38948, 1.55 ) }
    dend_26 { pt3dadd( -15.5335, -46.3978, -9.94598, 1.18 ) }
    dend_26 { pt3dadd( -15.6598, -47.3403, -10.5396, 0.96 ) }
    dend_26 { pt3dadd( -15.6667, -47.393, -10.5686, 0.96 ) }
    dend_26 { pt3dadd( -15.8203, -48.6172, -11.155, 0.88 ) }
    dend_26 { pt3dadd( -15.9631, -49.6735, -11.5664, 0.88 ) }
    dend_26 { pt3dadd( -16.0793, -50.5988, -11.8423, 1.18 ) }
    dend_26 { pt3dadd( -16.1812, -51.5324, -12.0668, 1.4 ) }
    dend_26 { pt3dadd( -16.3013, -52.5725, -12.295, 1.4 ) }
    dend_26 { pt3dadd( -16.4077, -53.2926, -12.4716, 1.18 ) }
    dend_26 { pt3dadd( -16.5779, -54.1182, -12.6937, 0.96 ) }
    dend_26 { pt3dadd( -16.7805, -54.8601, -12.9414, 1.11 ) }
    dend_26 { pt3dadd( -17.1166, -55.7872, -13.3705, 0.88 ) }
    dend_26 { pt3dadd( -17.4122, -56.4981, -13.7472, 0.74 ) }
    dend_26 { pt3dadd( -17.7774, -57.2025, -14.1803, 0.96 ) }
    dend_26 { pt3dadd( -18.0664, -57.6603, -14.5195, 1.25 ) }
    dend_26 { pt3dadd( -18.5128, -58.2228, -15.0335, 1.33 ) }
    dend_26 { pt3dadd( -19.1189, -58.8, -15.6816, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.38147, 33.8389, -2.90779, 1.4 ) }
    dend_14 { pt3dadd( 6.92217, 35.1011, -3.22227, 1.4 ) }
    dend_14 { pt3dadd( 6.66289, 35.9805, -3.38327, 1.4 ) }
    dend_14 { pt3dadd( 6.34453, 37.2583, -3.44177, 1.25 ) }
    dend_14 { pt3dadd( 6.30248, 37.4589, -3.41818, 1.25 ) }
    dend_14 { pt3dadd( 6.18938, 38.0663, -3.29374, 1.03 ) }
    dend_14 { pt3dadd( 6.06169, 38.7971, -3.11563, 1.03 ) }
    dend_14 { pt3dadd( 5.98079, 39.5015, -2.87329, 1.18 ) }
    dend_14 { pt3dadd( 5.87352, 40.6031, -2.31747, 1.33 ) }
    dend_14 { pt3dadd( 5.79205, 41.6038, -1.66708, 1.33 ) }
    dend_14 { pt3dadd( 5.74536, 42.3057, -1.18352, 1.47 ) }
    dend_14 { pt3dadd( 5.72569, 42.8235, -0.824809, 1.47 ) }
    dend_14 { pt3dadd( 5.72511, 43.5421, -0.362045, 1.47 ) }
    dend_14 { pt3dadd( 5.78016, 45.1018, 0.517822, 1.4 ) }
    dend_14 { pt3dadd( 5.85117, 46.0851, 0.978783, 1.4 ) }
    dend_14 { pt3dadd( 5.91791, 46.7361, 1.22809, 1.4 ) }
    dend_14 { pt3dadd( 6.03876, 47.6381, 1.52016, 1.62 ) }
    dend_14 { pt3dadd( 6.19931, 48.6869, 1.78511, 1.18 ) }
    dend_14 { pt3dadd( 6.34755, 49.5439, 1.91592, 1.18 ) }
    dend_14 { pt3dadd( 6.36046, 49.6129, 1.91831, 1.18 ) }
    dend_14 { pt3dadd( 6.54986, 50.7573, 1.92664, 1.18 ) }
    dend_14 { pt3dadd( 6.67778, 51.6758, 1.93818, 1.47 ) }
    dend_14 { pt3dadd( 6.71119, 51.9639, 1.94292, 1.47 ) }
    dend_14 { pt3dadd( 6.81645, 52.9409, 1.96118, 1.4 ) }
    dend_14 { pt3dadd( 6.92823, 53.9755, 1.98252, 1.33 ) }
    dend_14 { pt3dadd( 7.05879, 55.2161, 2.01041, 1.33 ) }
    dend_14 { pt3dadd( 7.17104, 56.3828, 2.04125, 1.62 ) }
    dend_14 { pt3dadd( 7.2345, 57.2319, 2.06689, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 78/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.38147, 33.8389, -2.90779, 1.18 ) }
    dend_1 { pt3dadd( 8.89269, 34.0927, -3.04447, 1.18 ) }
    dend_1 { pt3dadd( 10.373, 34.2415, -2.96472, 0.96 ) }
    dend_1 { pt3dadd( 11.1882, 34.3064, -2.90406, 1.25 ) }
    dend_1 { pt3dadd( 11.2841, 34.3169, -2.8904, 1.25 ) }
    dend_1 { pt3dadd( 12.6801, 34.5145, -2.68182, 1.25 ) }
    dend_1 { pt3dadd( 13.978, 34.7638, -2.49063, 1.25 ) }
    dend_1 { pt3dadd( 16.323, 35.2589, -2.14595, 1.18 ) }
    dend_1 { pt3dadd( 17.4081, 35.5411, -1.99293, 0.81 ) }
    dend_1 { pt3dadd( 18.9161, 36.0226, -1.7622, 0.96 ) }
    dend_1 { pt3dadd( 20.0647, 36.5092, -1.61565, 0.96 ) }
    dend_1 { pt3dadd( 20.9558, 37.0664, -1.55104, 0.96 ) }
    dend_1 { pt3dadd( 21.0133, 37.114, -1.55558, 0.96 ) }
    dend_1 { pt3dadd( 21.8793, 37.9688, -1.82625, 0.96 ) }
    dend_1 { pt3dadd( 21.9358, 38.0295, -1.84936, 0.96 ) }
    dend_1 { pt3dadd( 22.6549, 38.8319, -2.22821, 1.18 ) }
    dend_1 { pt3dadd( 23.5845, 39.8682, -2.72782, 1.4 ) }
    dend_1 { pt3dadd( 24.3575, 40.6889, -3.14093, 1.33 ) }
    dend_1 { pt3dadd( 24.4486, 40.779, -3.18268, 1.33 ) }
    dend_1 { pt3dadd( 25.3709, 41.5929, -3.52885, 1.18 ) }
    dend_1 { pt3dadd( 25.5398, 41.7113, -3.56511, 1.18 ) }
    dend_1 { pt3dadd( 26.3262, 42.1544, -3.63116, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 26.5513, 42.2516, -3.61192, 1.18 ) }
    dend_1 { pt3dadd( 27.741, 42.6924, -3.38389, 0.96 ) }
    dend_1 { pt3dadd( 28.9127, 43.1071, -3.09403, 0.96 ) }
    dend_1 { pt3dadd( 30.5773, 43.7185, -2.56158, 1.03 ) }
    dend_1 { pt3dadd( 30.7014, 43.773, -2.51961, 1.03 ) }
    dend_1 { pt3dadd( 32.5521, 44.7833, -1.87914, 1.03 ) }
    dend_1 { pt3dadd( 32.6698, 44.8513, -1.83667, 1.03 ) }
    dend_1 { pt3dadd( 33.3427, 45.2947, -1.57893, 1.03 ) }
    dend_1 { pt3dadd( 34.2425, 46.0049, -1.21524, 1.18 ) }
    dend_1 { pt3dadd( 35.3212, 47.1237, -0.876881, 1.4 ) }
    dend_1 { pt3dadd( 36.1585, 48.1088, -0.692108, 1.62 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 6.9617, 55.322, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 8.85338, 70.2023, -0.593792, 0.15 ) }
    // Section: dend_102, id: dend_102, parent: dend_98 (entry count 14/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 4.81675, -98.5259, -71.6135, 0.52 ) }
    dend_102 { pt3dadd( 4.00081, -99.0845, -72.2442, 0.52 ) }
    dend_102 { pt3dadd( 2.97228, -99.8378, -72.9679, 0.52 ) }
    dend_102 { pt3dadd( 2.57985, -100.179, -73.2748, 0.96 ) }
    dend_102 { pt3dadd( 1.76788, -101.059, -74.0524, 1.33 ) }
    dend_102 { pt3dadd( 1.34903, -101.623, -74.5276, 0.81 ) }
    dend_102 { pt3dadd( 0.873781, -102.464, -75.1863, 0.52 ) }
    dend_102 { pt3dadd( 0.861081, -102.514, -75.2186, 0.52 ) }
    dend_102 { pt3dadd( 0.946926, -103.69, -75.9789, 0.88 ) }
    dend_102 { pt3dadd( 1.21887, -104.562, -76.576, 1.25 ) }
    dend_102 { pt3dadd( 1.46707, -105.039, -76.927, 1.47 ) }
    dend_102 { pt3dadd( 1.88894, -105.676, -77.4481, 1.47 ) }
    dend_102 { pt3dadd( 2.44489, -106.385, -78.0579, 0.88 ) }
    dend_102 { pt3dadd( 3.29408, -107.409, -78.9714, 0.88 ) }
    dend_102 { pt3dadd( 3.7343, -107.921, -79.4764, 0.37 ) }
    dend_102 { pt3dadd( 4.18821, -108.519, -80.0983, 0.66 ) }
    dend_102 { pt3dadd( 4.21768, -108.57, -80.1555, 0.66 ) }
    dend_102 { pt3dadd( 4.34068, -108.916, -80.5432, 0.96 ) }
    dend_102 { pt3dadd( 4.4688, -109.858, -81.4988, 1.11 ) }
    dend_102 { pt3dadd( 4.3708, -111.222, -82.6394, 0.44 ) }
    dend_102 { pt3dadd( 4.23855, -111.96, -83.1777, 0.44 ) }
    dend_102 { pt3dadd( 3.99298, -113.063, -83.9445, 0.52 ) }
    dend_102 { pt3dadd( 3.85259, -113.672, -84.3677, 0.74 ) }
    dend_102 { pt3dadd( 3.66525, -114.349, -84.8038, 0.74 ) }
    dend_102 { pt3dadd( 3.39088, -115.199, -85.3382, 1.03 ) }
    dend_102 { pt3dadd( 2.97819, -116.617, -86.2642, 0.88 ) }
    dend_102 { pt3dadd( 2.6648, -117.986, -87.2215, 1.18 ) }
    dend_102 { pt3dadd( 2.47213, -119.303, -88.2551, 0.96 ) }
    dend_102 { pt3dadd( 2.41872, -120.372, -89.3125, 0.59 ) }
    dend_102 { pt3dadd( 2.431, -121.552, -90.6839, 0.29 ) }
    dend_102 { pt3dadd( 2.47811, -122.42, -91.8139, 0.88 ) }
    dend_102 { pt3dadd( 2.49007, -122.675, -92.1721, 1.47 ) }
    dend_102 { pt3dadd( 2.53045, -123.735, -93.6853, 1.33 ) }
    dend_102 { pt3dadd( 2.5428, -125.316, -95.9124, 0.52 ) }
    dend_102 { pt3dadd( 2.52476, -125.739, -96.472, 0.29 ) }
    dend_102 { pt3dadd( 2.4635, -126.11, -96.8612, 0.96 ) }
    dend_102 { pt3dadd( 2.1693, -127.15, -97.7653, 1.77 ) }
    dend_102 { pt3dadd( 2.04232, -127.589, -98.1243, 1.77 ) }
    dend_102 { pt3dadd( 1.74805, -128.561, -98.8122, 1.11 ) }
    dend_102 { pt3dadd( 1.55879, -129.359, -99.4585, 0.37 ) }
    dend_102 { pt3dadd( 1.50336, -129.902, -100.108, 0.29 ) }
    dend_102 { pt3dadd( 1.50218, -130.696, -101.274, 0.74 ) }
    dend_102 { pt3dadd( 1.64505, -131.834, -103.154, 1.33 ) }
    dend_102 { pt3dadd( 1.65219, -131.868, -103.216, 1.33 ) }
    dend_102 { pt3dadd( 1.96554, -132.905, -105.375, 1.55 ) }
    dend_102 { pt3dadd( 2.4089, -134.209, -108.283, 0.96 ) }
    dend_102 { pt3dadd( 2.41858, -134.241, -108.353, 0.96 ) }
    dend_102 { pt3dadd( 2.50775, -134.646, -109.163, 1.18 ) }
    dend_102 { pt3dadd( 2.51216, -134.677, -109.216, 1.18 ) }
    dend_102 { pt3dadd( 2.57893, -135.979, -110.962, 0.44 ) }
    dend_102 { pt3dadd( 2.47946, -136.679, -111.595, 0.37 ) }
    dend_102 { pt3dadd( 2.33808, -137.273, -112.19, 0.52 ) }
    dend_102 { pt3dadd( 2.22945, -137.738, -112.76, 0.81 ) }
    dend_102 { pt3dadd( 2.11048, -138.293, -113.476, 1.33 ) }
    dend_102 { pt3dadd( 2.05219, -138.67, -113.974, 0.96 ) }
    dend_102 { pt3dadd( 1.97751, -139.866, -115.572, 1.25 ) }
    dend_102 { pt3dadd( 2.09153, -142.352, -118.979, 0.52 ) }
    dend_102 { pt3dadd( 2.25189, -143.515, -120.64, 0.44 ) }
    dend_102 { pt3dadd( 2.39311, -144.094, -121.488, 0.59 ) }
    dend_102 { pt3dadd( 2.73275, -145.056, -122.92, 0.59 ) }
    dend_102 { pt3dadd( 3.18344, -145.976, -124.259, 0.74 ) }
    dend_102 { pt3dadd( 3.49913, -146.455, -124.891, 1.18 ) }
    dend_102 { pt3dadd( 3.53303, -146.5, -124.936, 1.18 ) }
    dend_102 { pt3dadd( 3.92095, -146.942, -125.343, 1.47 ) }
    dend_102 { pt3dadd( 3.96265, -146.985, -125.382, 1.47 ) }
    dend_102 { pt3dadd( 4.93434, -148.007, -126.139, 1.18 ) }
    dend_102 { pt3dadd( 4.97657, -148.059, -126.17, 1.18 ) }
    dend_102 { pt3dadd( 5.36145, -148.675, -126.48, 1.18 ) }
    dend_102 { pt3dadd( 5.82925, -149.735, -126.997, 0.52 ) }
    dend_102 { pt3dadd( 6.00523, -150.439, -127.33, 0.29 ) }
    dend_102 { pt3dadd( 6.11624, -151.247, -127.731, 0.29 ) }
    dend_102 { pt3dadd( 6.15239, -151.801, -128.017, 0.88 ) }
    dend_102 { pt3dadd( 6.16528, -152.56, -128.45, 1.11 ) }
    dend_102 { pt3dadd( 6.11939, -154.011, -129.329, 0.81 ) }
    dend_102 { pt3dadd( 6.07914, -154.935, -129.988, 0.37 ) }
    dend_102 { pt3dadd( 6.05276, -155.91, -131.001, 0.29 ) }
    dend_102 { pt3dadd( 6.03911, -156.357, -131.601, 0.96 ) }
    dend_102 { pt3dadd( 6.03574, -156.399, -131.674, 0.96 ) }
    dend_102 { pt3dadd( 5.97247, -156.761, -132.421, 1.18 ) }
    dend_102 { pt3dadd( 5.71907, -157.526, -134.154, 1.11 ) }
    dend_102 { pt3dadd( 5.04685, -158.848, -137.267, 0.44 ) }
    dend_102 { pt3dadd( 4.7633, -159.252, -138.229, 0.74 ) }
    dend_102 { pt3dadd( 4.1936, -159.949, -139.772, 0.59 ) }
    dend_102 { pt3dadd( 3.8311, -160.36, -140.585, 0.81 ) }
    dend_102 { pt3dadd( 3.25669, -160.947, -141.569, 0.44 ) }
    dend_102 { pt3dadd( 2.86328, -161.374, -142.02, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_102 { pt3dadd( 2.82275, -161.43, -142.047, 0.59 ) }
    dend_102 { pt3dadd( 2.379, -162.259, -142.333, 0.52 ) }
    dend_102 { pt3dadd( 2.10644, -162.927, -142.514, 1.03 ) }
    dend_102 { pt3dadd( 1.85775, -163.72, -142.737, 1.4 ) }
    dend_102 { pt3dadd( 1.53998, -164.938, -143.057, 1.33 ) }
    dend_102 { pt3dadd( 1.34313, -165.787, -143.343, 1.11 ) }
    dend_102 { pt3dadd( 1.21803, -166.627, -143.766, 0.59 ) }
    dend_102 { pt3dadd( 1.21508, -166.689, -143.807, 0.59 ) }
    dend_102 { pt3dadd( 1.25781, -167.247, -144.276, 0.44 ) }
    dend_102 { pt3dadd( 1.44051, -168.13, -145.221, 0.44 ) }
    dend_102 { pt3dadd( 1.73813, -169.099, -146.45, 0.74 ) }
    dend_102 { pt3dadd( 2.22371, -170.469, -148.336, 0.74 ) }
    dend_102 { pt3dadd( 2.34499, -170.796, -148.79, 1.25 ) }
    dend_102 { pt3dadd( 2.69203, -171.809, -150.198, 1.55 ) }
    dend_102 { pt3dadd( 3.03259, -172.898, -151.733, 1.77 ) }
    dend_102 { pt3dadd( 3.35354, -174.226, -153.631, 0.74 ) }
    dend_102 { pt3dadd( 3.42805, -174.936, -154.569, 0.52 ) }
    dend_102 { pt3dadd( 3.3994, -175.422, -155.15, 0.52 ) }
    dend_102 { pt3dadd( 3.21688, -176.456, -156.333, 0.96 ) }
    dend_102 { pt3dadd( 3.07653, -176.895, -156.772, 1.18 ) }
    dend_102 { pt3dadd( 2.55834, -177.966, -157.755, 0.52 ) }
    dend_102 { pt3dadd( 2.21837, -178.487, -158.219, 0.52 ) }
    dend_102 { pt3dadd( 1.97197, -178.799, -158.51, 0.66 ) }
    dend_102 { pt3dadd( 1.93189, -178.842, -158.552, 0.66 ) }
    dend_102 { pt3dadd( 1.58417, -179.16, -158.854, 0.44 ) }
    dend_102 { pt3dadd( 0.665297, -179.891, -159.543, 0.29 ) }
    dend_102 { pt3dadd( 0.609295, -179.926, -159.571, 0.29 ) }
    dend_102 { pt3dadd( 0.170532, -180.151, -159.772, 0.52 ) }
    dend_102 { pt3dadd( -0.277861, -180.364, -159.934, 0.81 ) }
    dend_102 { pt3dadd( -0.817297, -180.64, -160.058, 0.96 ) }
    dend_102 { pt3dadd( -1.34656, -180.927, -160.115, 1.11 ) }
    dend_102 { pt3dadd( -2.07015, -181.368, -160.097, 0.29 ) }
    dend_102 { pt3dadd( -2.16152, -181.429, -160.091, 0.29 ) }
    dend_102 { pt3dadd( -2.95395, -181.975, -160.003, 0.29 ) }
    dend_102 { pt3dadd( -3.6795, -182.463, -159.901, 0.88 ) }
    dend_102 { pt3dadd( -3.94162, -182.635, -159.856, 1.03 ) }
    dend_102 { pt3dadd( -4.53994, -182.99, -159.756, 1.18 ) }
    dend_102 { pt3dadd( -5.45849, -183.444, -159.639, 0.29 ) }
    dend_102 { pt3dadd( -6.55992, -183.887, -159.556, 0.29 ) }
    dend_102 { pt3dadd( -7.01896, -184.034, -159.56, 0.59 ) }
    dend_102 { pt3dadd( -7.08778, -184.054, -159.568, 0.59 ) }
    dend_102 { pt3dadd( -7.88626, -184.289, -159.729, 0.59 ) }
    dend_102 { pt3dadd( -8.66644, -184.566, -159.965, 1.11 ) }
    dend_102 { pt3dadd( -9.32335, -184.863, -160.227, 1.4 ) }
    dend_102 { pt3dadd( -10.1151, -185.306, -160.598, 0.96 ) }
    dend_102 { pt3dadd( -10.9057, -185.85, -160.998, 0.59 ) }
    dend_102 { pt3dadd( -11.8109, -186.589, -161.469, 0.37 ) }
    dend_102 { pt3dadd( -12.4872, -187.253, -161.823, 0.37 ) }
    dend_102 { pt3dadd( -12.8958, -187.692, -162.002, 0.74 ) }
    dend_102 { pt3dadd( -12.9428, -187.747, -162.019, 0.74 ) }
    dend_102 { pt3dadd( -13.405, -188.344, -162.118, 0.74 ) }
    dend_102 { pt3dadd( -13.7646, -188.83, -162.163, 1.03 ) }
    dend_102 { pt3dadd( -14.1794, -189.404, -162.178, 1.33 ) }
    dend_102 { pt3dadd( -14.8109, -190.183, -162.169, 1.47 ) }
    dend_102 { pt3dadd( -15.5238, -190.994, -162.153, 0.37 ) }
    dend_102 { pt3dadd( -16.3996, -191.962, -162.136, 1.18 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 56/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 4.81675, -98.5259, -71.6135, 0.52 ) }
    dend_99 { pt3dadd( 5.04894, -99.2166, -70.5597, 0.52 ) }
    dend_99 { pt3dadd( 5.33074, -100.09, -69.4544, 0.44 ) }
    dend_99 { pt3dadd( 5.47814, -100.584, -68.9546, 0.88 ) }
    dend_99 { pt3dadd( 5.48953, -100.627, -68.9188, 0.88 ) }
    dend_99 { pt3dadd( 5.58329, -101.021, -68.6418, 1.03 ) }
    dend_99 { pt3dadd( 5.67859, -101.472, -68.3695, 0.81 ) }
    dend_99 { pt3dadd( 5.78387, -102.083, -68.1629, 0.29 ) }
    dend_99 { pt3dadd( 5.88051, -102.765, -68.0234, 0.22 ) }
    dend_99 { pt3dadd( 5.94004, -103.285, -67.9348, 0.52 ) }
    dend_99 { pt3dadd( 5.96199, -103.564, -67.8893, 0.74 ) }
    dend_99 { pt3dadd( 5.98522, -104.286, -67.7807, 0.29 ) }
    dend_99 { pt3dadd( 5.9719, -104.914, -67.69, 0.29 ) }
    dend_99 { pt3dadd( 5.92975, -105.534, -67.6104, 0.74 ) }
    dend_99 { pt3dadd( 5.89029, -105.885, -67.5642, 1.03 ) }
    dend_99 { pt3dadd( 5.83346, -106.32, -67.5065, 0.96 ) }
    dend_99 { pt3dadd( 5.7618, -106.778, -67.449, 0.59 ) }
    dend_99 { pt3dadd( 5.65731, -107.426, -67.3477, 0.22 ) }
    dend_99 { pt3dadd( 5.60623, -107.827, -67.2682, 0.37 ) }
    dend_99 { pt3dadd( 5.60163, -107.929, -67.2443, 0.37 ) }
    dend_99 { pt3dadd( 5.63667, -108.354, -67.1427, 0.37 ) }
    dend_99 { pt3dadd( 5.64853, -108.406, -67.1306, 0.37 ) }
    dend_99 { pt3dadd( 5.93224, -109.186, -67.0421, 0.29 ) }
    dend_99 { pt3dadd( 6.17335, -109.718, -67.0295, 0.88 ) }
    dend_99 { pt3dadd( 6.33219, -110.053, -67.0401, 1.18 ) }
    dend_99 { pt3dadd( 6.63963, -110.718, -67.0894, 0.29 ) }
    dend_99 { pt3dadd( 6.92786, -111.35, -67.1621, 0.29 ) }
    dend_99 { pt3dadd( 7.34089, -112.32, -67.2564, 0.52 ) }
    dend_99 { pt3dadd( 7.50932, -112.757, -67.2936, 0.81 ) }
    dend_99 { pt3dadd( 7.75696, -113.465, -67.3184, 0.22 ) }
    dend_99 { pt3dadd( 7.85811, -113.798, -67.3128, 0.59 ) }
    dend_99 { pt3dadd( 7.87632, -113.87, -67.309, 0.59 ) }
    dend_99 { pt3dadd( 8.10994, -115.004, -67.2209, 0.44 ) }
    dend_99 { pt3dadd( 8.24926, -115.801, -67.1378, 0.66 ) }
    dend_99 { pt3dadd( 8.34014, -116.34, -67.0932, 0.59 ) }
    dend_99 { pt3dadd( 8.41988, -116.793, -67.0787, 0.44 ) }
    dend_99 { pt3dadd( 8.55523, -117.534, -67.0937, 0.96 ) }
    dend_99 { pt3dadd( 8.69279, -118.101, -67.1642, 1.33 ) }
    dend_99 { pt3dadd( 8.89865, -118.677, -67.3195, 0.59 ) }
    dend_99 { pt3dadd( 8.92609, -118.733, -67.3382, 0.59 ) }
    dend_99 { pt3dadd( 9.23829, -119.214, -67.5379, 0.59 ) }
    dend_99 { pt3dadd( 9.26525, -119.251, -67.5575, 0.59 ) }
    dend_99 { pt3dadd( 9.83226, -120.035, -68.0748, 0.29 ) }
    dend_99 { pt3dadd( 10.0788, -120.412, -68.3594, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_99 { pt3dadd( 10.2696, -120.763, -68.6074, 0.44 ) }
    dend_99 { pt3dadd( 10.513, -121.289, -68.9513, 0.44 ) }
    dend_99 { pt3dadd( 10.7594, -121.966, -69.3459, 1.33 ) }
    dend_99 { pt3dadd( 11.0198, -122.781, -69.7726, 1.11 ) }
    dend_99 { pt3dadd( 11.2195, -123.54, -70.1214, 0.52 ) }
    dend_99 { pt3dadd( 11.4185, -124.234, -70.4301, 0.29 ) }
    dend_99 { pt3dadd( 11.4327, -124.284, -70.4509, 0.29 ) }
    dend_99 { pt3dadd( 11.5724, -124.716, -70.5861, 0.29 ) }
    dend_99 { pt3dadd( 11.8566, -125.293, -70.676, 0.29 ) }
    dend_99 { pt3dadd( 12.0603, -125.575, -70.6555, 0.96 ) }
    dend_99 { pt3dadd( 12.3527, -125.819, -70.5809, 1.25 ) }
    // Section: dend_97, id: dend_97, parent: dend_93 (entry count 11/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -37.867, -191.278, -57.0114, 0.29 ) }
    dend_97 { pt3dadd( -39.5612, -191.347, -57.1572, 0.29 ) }
    dend_97 { pt3dadd( -40.681, -191.489, -57.1794, 0.29 ) }
    dend_97 { pt3dadd( -41.0244, -191.541, -57.1855, 0.74 ) }
    dend_97 { pt3dadd( -41.1116, -191.556, -57.1879, 0.74 ) }
    dend_97 { pt3dadd( -41.6627, -191.646, -57.2195, 0.74 ) }
    dend_97 { pt3dadd( -42.7875, -191.797, -57.4048, 0.29 ) }
    dend_97 { pt3dadd( -43.5854, -191.926, -57.6722, 0.29 ) }
    dend_97 { pt3dadd( -43.9403, -191.963, -57.8431, 0.74 ) }
    dend_97 { pt3dadd( -44.22, -191.971, -58.0227, 1.11 ) }
    dend_97 { pt3dadd( -44.6739, -191.98, -58.3462, 1.11 ) }
    dend_97 { pt3dadd( -45.8146, -192.007, -59.2548, 0.29 ) }
    dend_97 { pt3dadd( -46.1883, -192.035, -59.5575, 0.37 ) }
    dend_97 { pt3dadd( -46.7806, -192.126, -59.9247, 0.37 ) }
    dend_97 { pt3dadd( -47.5221, -192.297, -60.2572, 0.66 ) }
    dend_97 { pt3dadd( -48.343, -192.549, -60.5247, 0.52 ) }
    dend_97 { pt3dadd( -48.8596, -192.73, -60.648, 0.96 ) }
    dend_97 { pt3dadd( -49.8327, -193.097, -60.8236, 1.33 ) }
    dend_97 { pt3dadd( -51.2295, -193.602, -61.1078, 0.59 ) }
    dend_97 { pt3dadd( -51.8683, -193.819, -61.2174, 0.37 ) }
    dend_97 { pt3dadd( -52.3807, -193.981, -61.2996, 0.22 ) }
    dend_97 { pt3dadd( -53.2694, -194.251, -61.46, 0.22 ) }
    dend_97 { pt3dadd( -54.0219, -194.488, -61.6089, 0.66 ) }
    dend_97 { pt3dadd( -54.9653, -194.837, -61.8352, 0.66 ) }
    dend_97 { pt3dadd( -56.3862, -195.489, -62.2238, 0.52 ) }
    dend_97 { pt3dadd( -56.5912, -195.598, -62.2769, 0.29 ) }
    dend_97 { pt3dadd( -57.1408, -195.945, -62.4368, 0.74 ) }
    dend_97 { pt3dadd( -57.3918, -196.114, -62.4894, 0.74 ) }
    dend_97 { pt3dadd( -58.5562, -196.938, -62.6979, 0.37 ) }
    dend_97 { pt3dadd( -59.5282, -197.677, -62.8752, 0.44 ) }
    dend_97 { pt3dadd( -59.9904, -198.046, -62.9934, 0.59 ) }
    dend_97 { pt3dadd( -60.7908, -198.678, -63.2083, 0.52 ) }
    dend_97 { pt3dadd( -62.4765, -199.942, -63.6961, 0.37 ) }
    dend_97 { pt3dadd( -63.2297, -200.462, -63.9354, 0.37 ) }
    dend_97 { pt3dadd( -64.0871, -200.996, -64.2442, 0.29 ) }
    dend_97 { pt3dadd( -65.1417, -201.593, -64.6564, 0.59 ) }
    dend_97 { pt3dadd( -65.3499, -201.712, -64.7464, 0.88 ) }
    dend_97 { pt3dadd( -65.9894, -202.061, -65.0704, 0.66 ) }
    dend_97 { pt3dadd( -66.6834, -202.447, -65.5443, 0.15 ) }
    dend_97 { pt3dadd( -67.4609, -202.775, -66.0717, 0.15 ) }
    dend_97 { pt3dadd( -67.5218, -202.791, -66.114, 0.15 ) }
    dend_97 { pt3dadd( -68.201, -202.926, -66.657, 0.59 ) }
    dend_97 { pt3dadd( -68.6333, -203.031, -67.0589, 0.88 ) }
    dend_97 { pt3dadd( -68.6788, -203.047, -67.1067, 0.88 ) }
    dend_97 { pt3dadd( -69.0057, -203.2, -67.4855, 0.88 ) }
    dend_97 { pt3dadd( -69.4948, -203.51, -68.097, 0.88 ) }
    dend_97 { pt3dadd( -70.2359, -204.151, -69.067, 0.29 ) }
    dend_97 { pt3dadd( -70.6075, -204.545, -69.5625, 0.29 ) }
    dend_97 { pt3dadd( -70.9271, -204.955, -69.9814, 0.66 ) }
    dend_97 { pt3dadd( -71.1957, -205.323, -70.3057, 0.81 ) }
    dend_97 { pt3dadd( -71.5804, -205.911, -70.7278, 0.66 ) }
    dend_97 { pt3dadd( -72.0855, -206.72, -71.2106, 0.29 ) }
    dend_97 { pt3dadd( -72.3542, -207.147, -71.4299, 0.81 ) }
    dend_97 { pt3dadd( -72.5581, -207.457, -71.5873, 0.81 ) }
    dend_97 { pt3dadd( -73.0891, -208.156, -71.971, 0.22 ) }
    dend_97 { pt3dadd( -73.5104, -208.598, -72.2074, 0.22 ) }
    dend_97 { pt3dadd( -73.7974, -208.853, -72.3291, 0.81 ) }
    dend_97 { pt3dadd( -74.0628, -209.049, -72.4237, 0.96 ) }
    dend_97 { pt3dadd( -75.0149, -209.586, -72.6351, 0.22 ) }
    dend_97 { pt3dadd( -75.7085, -209.8, -72.6348, 0.22 ) }
    dend_97 { pt3dadd( -76.7829, -209.935, -72.4508, 0.74 ) }
    dend_97 { pt3dadd( -77.1685, -209.954, -72.3587, 1.18 ) }
    dend_97 { pt3dadd( -77.855, -209.963, -72.1703, 0.74 ) }
    dend_97 { pt3dadd( -79.4742, -209.93, -71.699, 0.59 ) }
    dend_97 { pt3dadd( -81.6716, -209.839, -71.0513, 0.44 ) }
    dend_97 { pt3dadd( -83.4324, -209.817, -70.5675, 0.37 ) }
    dend_97 { pt3dadd( -83.5187, -209.82, -70.5488, 0.37 ) }
    dend_97 { pt3dadd( -83.9806, -209.863, -70.4694, 0.66 ) }
    dend_97 { pt3dadd( -84.4308, -209.973, -70.3843, 0.74 ) }
    dend_97 { pt3dadd( -85.5782, -210.423, -70.1789, 0.29 ) }
    dend_97 { pt3dadd( -86.3916, -210.827, -70.0342, 0.29 ) }
    dend_97 { pt3dadd( -87.2302, -211.221, -69.8637, 0.29 ) }
    dend_97 { pt3dadd( -87.4494, -211.322, -69.8088, 0.74 ) }
    dend_97 { pt3dadd( -89.7038, -212.349, -69.0614, 0.66 ) }
    dend_97 { pt3dadd( -90.7455, -212.817, -68.6041, 0.22 ) }
    dend_97 { pt3dadd( -91.061, -212.941, -68.4139, 0.22 ) }
    dend_97 { pt3dadd( -91.8179, -213.144, -67.8648, 0.44 ) }
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 88/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -37.867, -191.278, -57.0114, 0.37 ) }
    dend_94 { pt3dadd( -37.4668, -192.893, -58.0596, 0.37 ) }
    dend_94 { pt3dadd( -37.2775, -193.78, -58.5751, 0.37 ) }
    dend_94 { pt3dadd( -37.2693, -193.833, -58.6021, 0.37 ) }
    dend_94 { pt3dadd( -37.21, -194.395, -58.865, 0.81 ) }
    dend_94 { pt3dadd( -37.1466, -195.233, -59.2278, 0.88 ) }
    dend_94 { pt3dadd( -37.1282, -195.582, -59.3685, 0.88 ) }
    dend_94 { pt3dadd( -37.1198, -196.29, -59.605, 0.52 ) }
    dend_94 { pt3dadd( -37.1374, -197.092, -59.8728, 0.52 ) }
    dend_94 { pt3dadd( -37.1778, -197.823, -60.1609, 0.52 ) }
    dend_94 { pt3dadd( -37.228, -198.22, -60.3446, 0.96 ) }
    dend_94 { pt3dadd( -37.2973, -198.562, -60.5162, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_94 { pt3dadd( -37.5277, -199.469, -61.0295, 0.37 ) }
    dend_94 { pt3dadd( -37.7002, -199.998, -61.3618, 0.29 ) }
    dend_94 { pt3dadd( -37.9084, -200.505, -61.7284, 0.59 ) }
    dend_94 { pt3dadd( -38.1488, -200.961, -62.0876, 0.96 ) }
    dend_94 { pt3dadd( -38.3527, -201.284, -62.3506, 1.18 ) }
    dend_94 { pt3dadd( -38.3832, -201.325, -62.3834, 1.18 ) }
    dend_94 { pt3dadd( -38.577, -201.574, -62.5826, 1.18 ) }
    dend_94 { pt3dadd( -38.8895, -202.041, -62.9395, 1.03 ) }
    dend_94 { pt3dadd( -39.2123, -202.607, -63.3248, 0.59 ) }
    dend_94 { pt3dadd( -39.4115, -202.995, -63.5466, 0.52 ) }
    dend_94 { pt3dadd( -39.5803, -203.319, -63.7044, 0.66 ) }
    dend_94 { pt3dadd( -40.0489, -204.138, -64.0482, 0.29 ) }
    dend_94 { pt3dadd( -40.4103, -204.7, -64.236, 0.44 ) }
    dend_94 { pt3dadd( -40.5933, -204.955, -64.2904, 0.52 ) }
    dend_94 { pt3dadd( -41.231, -205.755, -64.3992, 0.66 ) }
    dend_94 { pt3dadd( -41.6255, -206.2, -64.4434, 0.37 ) }
    dend_94 { pt3dadd( -42.0974, -206.685, -64.4818, 0.88 ) }
    dend_94 { pt3dadd( -42.389, -206.956, -64.5029, 1.18 ) }
    dend_94 { pt3dadd( -42.971, -207.48, -64.5696, 0.96 ) }
    dend_94 { pt3dadd( -43.365, -207.857, -64.6329, 0.66 ) }
    dend_94 { pt3dadd( -43.6335, -208.146, -64.6766, 1.03 ) }
    dend_94 { pt3dadd( -44.0854, -208.712, -64.7183, 0.52 ) }
    dend_94 { pt3dadd( -44.5754, -209.45, -64.7176, 0.52 ) }
    dend_94 { pt3dadd( -44.8514, -209.97, -64.6924, 1.11 ) }
    dend_94 { pt3dadd( -45.0658, -210.503, -64.6402, 1.11 ) }
    dend_94 { pt3dadd( -45.3373, -211.372, -64.5373, 0.74 ) }
    dend_94 { pt3dadd( -45.4654, -211.869, -64.4758, 0.44 ) }
    dend_94 { pt3dadd( -45.6354, -212.632, -64.3824, 0.59 ) }
    dend_94 { pt3dadd( -45.8599, -213.673, -64.2833, 0.59 ) }
    dend_94 { pt3dadd( -46.1005, -214.656, -64.2401, 0.59 ) }
    dend_94 { pt3dadd( -46.3309, -215.481, -64.2398, 0.52 ) }
    dend_94 { pt3dadd( -46.5006, -216.001, -64.2704, 1.18 ) }
    dend_94 { pt3dadd( -46.6246, -216.331, -64.299, 1.33 ) }
    dend_94 { pt3dadd( -47.0082, -217.202, -64.4085, 1.18 ) }
    dend_94 { pt3dadd( -47.3545, -217.883, -64.5117, 0.88 ) }
    dend_94 { pt3dadd( -47.653, -218.422, -64.6028, 0.52 ) }
    dend_94 { pt3dadd( -47.9786, -219.028, -64.7015, 0.66 ) }
    dend_94 { pt3dadd( -48.0086, -219.092, -64.707, 0.66 ) }
    dend_94 { pt3dadd( -48.2082, -219.646, -64.7104, 0.81 ) }
    dend_94 { pt3dadd( -48.4112, -220.29, -64.6917, 0.44 ) }
    dend_94 { pt3dadd( -48.6042, -220.997, -64.6473, 0.44 ) }
    dend_94 { pt3dadd( -48.8149, -221.873, -64.5669, 0.44 ) }
    dend_94 { pt3dadd( -49.0369, -223.0, -64.4185, 0.37 ) }
    dend_94 { pt3dadd( -49.1645, -223.742, -64.2988, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_41 (entry count 44/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -3.6899, -51.3007, -5.29507, 1.03 ) }
    dend_65 { pt3dadd( -5.11118, -51.6936, -5.29028, 1.03 ) }
    dend_65 { pt3dadd( -6.10241, -52.1058, -5.14153, 1.03 ) }
    dend_65 { pt3dadd( -7.31901, -52.7683, -4.88917, 0.96 ) }
    dend_65 { pt3dadd( -8.12393, -53.3225, -4.70969, 0.96 ) }
    dend_65 { pt3dadd( -8.22886, -53.4026, -4.6856, 0.96 ) }
    dend_65 { pt3dadd( -10.2853, -55.1915, -4.22155, 0.81 ) }
    dend_65 { pt3dadd( -11.0312, -56.0262, -4.01916, 1.11 ) }
    dend_65 { pt3dadd( -11.76, -56.937, -3.80968, 1.11 ) }
    dend_65 { pt3dadd( -12.6931, -58.1531, -3.54408, 1.03 ) }
    dend_65 { pt3dadd( -12.7396, -58.2111, -3.53263, 1.03 ) }
    dend_65 { pt3dadd( -13.7365, -59.3477, -3.30046, 1.03 ) }
    dend_65 { pt3dadd( -14.4558, -60.1332, -3.17938, 1.25 ) }
    dend_65 { pt3dadd( -15.0759, -60.7801, -3.02645, 1.4 ) }
    dend_65 { pt3dadd( -15.5066, -61.2097, -2.89077, 1.4 ) }
    dend_65 { pt3dadd( -16.3416, -62.0589, -2.54096, 1.25 ) }
    dend_65 { pt3dadd( -17.2056, -63.0682, -2.10161, 1.11 ) }
    dend_65 { pt3dadd( -17.6648, -63.7084, -1.82021, 1.11 ) }
    dend_65 { pt3dadd( -18.1492, -64.5642, -1.46802, 1.03 ) }
    dend_65 { pt3dadd( -18.2071, -64.6913, -1.4256, 1.03 ) }
    dend_65 { pt3dadd( -18.5766, -65.631, -1.23527, 0.81 ) }
    dend_65 { pt3dadd( -18.9405, -66.662, -1.15203, 0.96 ) }
    dend_65 { pt3dadd( -19.3088, -67.7885, -1.1512, 0.96 ) }
    dend_65 { pt3dadd( -19.7031, -69.068, -1.18672, 0.81 ) }
    dend_65 { pt3dadd( -19.9437, -70.0099, -1.25163, 0.74 ) }
    dend_65 { pt3dadd( -20.2606, -71.4222, -1.39545, 0.81 ) }
    dend_65 { pt3dadd( -20.3986, -72.1931, -1.49965, 1.11 ) }
    dend_65 { pt3dadd( -20.5386, -73.3023, -1.65601, 1.11 ) }
    dend_65 { pt3dadd( -20.5978, -74.1435, -1.77382, 1.11 ) }
    dend_65 { pt3dadd( -20.6477, -75.7771, -1.99055, 0.88 ) }
    dend_65 { pt3dadd( -20.6527, -76.5983, -2.0612, 1.11 ) }
    dend_65 { pt3dadd( -20.6378, -77.5623, -2.1254, 1.11 ) }
    dend_65 { pt3dadd( -20.6192, -78.3088, -2.18447, 1.33 ) }
    dend_65 { pt3dadd( -20.6113, -79.0831, -2.24973, 0.96 ) }
    dend_65 { pt3dadd( -20.6207, -80.0091, -2.32873, 1.11 ) }
    dend_65 { pt3dadd( -20.6259, -81.1401, -2.41584, 1.11 ) }
    dend_65 { pt3dadd( -20.605, -82.0838, -2.50246, 1.4 ) }
    dend_65 { pt3dadd( -20.5834, -82.9121, -2.59767, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -3.6899, -51.3007, -5.29507, 1.47 ) }
    dend_42 { pt3dadd( -3.67908, -53.2726, -5.30894, 1.47 ) }
    dend_42 { pt3dadd( -3.67241, -54.4879, -5.31749, 1.47 ) }
    dend_42 { pt3dadd( -3.65789, -57.1353, -5.33611, 1.47 ) }
    dend_42 { pt3dadd( -3.64821, -58.901, -5.34853, 1.62 ) }
    dend_42 { pt3dadd( -3.63635, -61.0619, -5.36373, 1.92 ) }
    dend_42 { pt3dadd( -3.62489, -63.1524, -5.37844, 1.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -19.1189, -58.8, -15.6816, 0.88 ) }
    dend_30 { pt3dadd( -20.7737, -58.9845, -15.8011, 0.88 ) }
    dend_30 { pt3dadd( -21.2618, -59.0671, -15.8733, 1.11 ) }
    dend_30 { pt3dadd( -21.8103, -59.1892, -16.0136, 0.88 ) }
    dend_30 { pt3dadd( -22.492, -59.3554, -16.2144, 0.81 ) }
    dend_30 { pt3dadd( -23.2785, -59.5947, -16.4867, 0.74 ) }
    dend_30 { pt3dadd( -24.0173, -59.8798, -16.7647, 0.96 ) }
    dend_30 { pt3dadd( -24.7176, -60.2434, -17.1137, 0.96 ) }
    dend_30 { pt3dadd( -25.6519, -60.8454, -17.6004, 0.81 ) }
    dend_30 { pt3dadd( -25.6942, -60.8793, -17.6228, 0.81 ) }
    dend_30 { pt3dadd( -26.427, -61.5808, -18.0139, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -27.0466, -62.2543, -18.3439, 0.74 ) }
    dend_30 { pt3dadd( -27.2679, -62.5031, -18.4512, 1.03 ) }
    dend_30 { pt3dadd( -27.6941, -62.9651, -18.6401, 1.11 ) }
    dend_30 { pt3dadd( -28.4287, -63.6961, -18.9238, 1.11 ) }
    dend_30 { pt3dadd( -28.4864, -63.7477, -18.9465, 1.11 ) }
    dend_30 { pt3dadd( -29.3614, -64.4234, -19.283, 0.88 ) }
    dend_30 { pt3dadd( -30.3986, -65.1577, -19.6907, 0.88 ) }
    dend_30 { pt3dadd( -30.8589, -65.4627, -19.8745, 1.25 ) }
    dend_30 { pt3dadd( -31.4393, -65.8155, -20.1109, 1.25 ) }
    dend_30 { pt3dadd( -32.2404, -66.2678, -20.4438, 1.4 ) }
    dend_30 { pt3dadd( -32.8322, -66.6003, -20.6876, 1.62 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -19.1189, -58.8, -15.6816, 0.74 ) }
    dend_27 { pt3dadd( -18.5278, -59.3701, -16.6924, 0.74 ) }
    dend_27 { pt3dadd( -17.7628, -60.1227, -18.0515, 0.44 ) }
    dend_27 { pt3dadd( -17.7107, -60.1764, -18.143, 0.44 ) }
    dend_27 { pt3dadd( -17.1943, -60.7314, -18.9839, 0.44 ) }
    dend_27 { pt3dadd( -16.2746, -61.7368, -20.4029, 1.03 ) }
    dend_27 { pt3dadd( -14.5243, -63.787, -23.1221, 1.03 ) }
    dend_27 { pt3dadd( -13.9872, -64.4579, -24.0075, 1.33 ) }
    dend_27 { pt3dadd( -13.2978, -65.4203, -25.2331, 1.11 ) }
    dend_27 { pt3dadd( -12.8444, -66.1076, -26.1622, 0.59 ) }
    dend_27 { pt3dadd( -12.2282, -67.143, -27.6178, 0.44 ) }
    dend_27 { pt3dadd( -11.5876, -68.5196, -29.4821, 0.44 ) }
    dend_27 { pt3dadd( -11.2351, -69.4329, -30.7357, 0.88 ) }
    dend_27 { pt3dadd( -11.1032, -69.8563, -31.3809, 1.25 ) }
    dend_27 { pt3dadd( -10.7449, -71.5079, -34.0189, 1.25 ) }
    dend_27 { pt3dadd( -10.7389, -71.5506, -34.0905, 1.25 ) }
    dend_27 { pt3dadd( -10.727, -71.7488, -34.3988, 1.25 ) }
    dend_27 { pt3dadd( -10.7254, -71.7954, -34.4573, 1.25 ) }
    dend_27 { pt3dadd( -10.6392, -73.3896, -35.7187, 0.74 ) }
    dend_27 { pt3dadd( -10.5637, -74.3533, -36.2936, 0.74 ) }
    dend_27 { pt3dadd( -10.5591, -74.4289, -36.3268, 0.74 ) }
    dend_27 { pt3dadd( -10.4987, -75.1124, -36.6827, 0.74 ) }
    dend_27 { pt3dadd( -10.3781, -76.0739, -37.3382, 0.81 ) }
    dend_27 { pt3dadd( -10.2866, -76.8845, -37.9759, 0.81 ) }
    dend_27 { pt3dadd( -10.1516, -78.5168, -39.4889, 0.44 ) }
    dend_27 { pt3dadd( -10.1504, -78.5737, -39.549, 0.44 ) }
    dend_27 { pt3dadd( -10.1686, -79.5669, -40.6698, 0.74 ) }
    dend_27 { pt3dadd( -10.2131, -80.8938, -42.2791, 0.88 ) }
    dend_27 { pt3dadd( -10.2275, -81.521, -43.0367, 1.03 ) }
    dend_27 { pt3dadd( -10.247, -82.5331, -44.1866, 1.03 ) }
    dend_27 { pt3dadd( -10.2511, -83.185, -44.7988, 1.18 ) }
    dend_27 { pt3dadd( -10.2494, -83.2433, -44.8457, 1.18 ) }
    dend_27 { pt3dadd( -10.1162, -84.607, -45.6351, 0.52 ) }
    dend_27 { pt3dadd( -9.86814, -85.5992, -45.978, 0.44 ) }
    dend_27 { pt3dadd( -9.62162, -86.1189, -46.1088, 0.81 ) }
    dend_27 { pt3dadd( -9.35651, -86.5474, -46.1878, 0.88 ) }
    dend_27 { pt3dadd( -9.25542, -86.698, -46.2225, 0.88 ) }
    dend_27 { pt3dadd( -8.80126, -87.4091, -46.4045, 0.74 ) }
    dend_27 { pt3dadd( -8.29795, -88.2861, -46.6497, 0.44 ) }
    dend_27 { pt3dadd( -7.86654, -89.1981, -46.9542, 0.59 ) }
    dend_27 { pt3dadd( -7.41873, -90.4545, -47.3783, 0.52 ) }
    dend_27 { pt3dadd( -7.14199, -91.4538, -47.731, 0.88 ) }
    dend_27 { pt3dadd( -6.99542, -92.1388, -47.9716, 1.18 ) }
    dend_27 { pt3dadd( -6.84159, -93.1262, -48.3486, 0.52 ) }
    dend_27 { pt3dadd( -6.79209, -93.7777, -48.6074, 0.44 ) }
    dend_27 { pt3dadd( -6.78526, -94.7387, -48.9685, 0.44 ) }
    dend_27 { pt3dadd( -6.82383, -95.5895, -49.2735, 0.74 ) }
    dend_27 { pt3dadd( -6.86199, -96.0688, -49.4448, 0.74 ) }
    dend_27 { pt3dadd( -7.00827, -97.6029, -50.0282, 0.59 ) }
    dend_27 { pt3dadd( -7.14285, -98.7255, -50.4554, 0.66 ) }
    dend_27 { pt3dadd( -7.21575, -99.3615, -50.7146, 1.18 ) }
    dend_27 { pt3dadd( -7.31816, -100.336, -51.1095, 1.33 ) }
    dend_27 { pt3dadd( -7.39021, -101.295, -51.4546, 1.11 ) }
    dend_27 { pt3dadd( -7.39004, -101.374, -51.482, 1.11 ) }
    dend_27 { pt3dadd( -7.3222, -102.271, -51.7505, 0.96 ) }
    dend_27 { pt3dadd( -7.15286, -103.444, -52.085, 0.66 ) }
    dend_27 { pt3dadd( -6.99362, -104.341, -52.368, 0.37 ) }
    dend_27 { pt3dadd( -6.86354, -105.208, -52.6717, 0.29 ) }
    dend_27 { pt3dadd( -6.6945, -106.733, -53.2952, 1.03 ) }
    dend_27 { pt3dadd( -6.63613, -107.491, -53.6322, 1.33 ) }
    dend_27 { pt3dadd( -6.59913, -108.1, -53.914, 1.47 ) }
    dend_27 { pt3dadd( -6.54119, -109.662, -54.5899, 0.37 ) }
    dend_27 { pt3dadd( -6.49279, -110.613, -55.0117, 0.37 ) }
    dend_27 { pt3dadd( -6.44377, -111.932, -55.5652, 0.29 ) }
    dend_27 { pt3dadd( -6.42636, -112.427, -55.7404, 0.44 ) }
    dend_27 { pt3dadd( -6.39755, -113.175, -55.9679, 0.59 ) }
    dend_27 { pt3dadd( -6.34848, -114.356, -56.2661, 0.59 ) }
    dend_27 { pt3dadd( -6.26284, -115.853, -56.5799, 0.74 ) }
    dend_27 { pt3dadd( -6.17213, -116.958, -56.781, 0.59 ) }
    dend_27 { pt3dadd( -6.11094, -117.953, -56.9387, 0.44 ) }
    dend_27 { pt3dadd( -6.03444, -119.29, -57.1618, 0.44 ) }
    dend_27 { pt3dadd( -6.01763, -119.378, -57.2005, 0.44 ) }
    dend_27 { pt3dadd( -5.71715, -120.249, -57.7854, 0.96 ) }
    dend_27 { pt3dadd( -5.47255, -120.753, -58.1971, 1.4 ) }
    dend_27 { pt3dadd( -5.43833, -120.813, -58.2488, 1.4 ) }
    dend_27 { pt3dadd( -5.09387, -121.375, -58.7385, 1.18 ) }
    dend_27 { pt3dadd( -2.97182, -124.871, -61.7567, 0.59 ) }
    dend_27 { pt3dadd( -2.54695, -125.607, -62.3704, 0.88 ) }
    dend_27 { pt3dadd( -2.17617, -126.299, -62.9291, 1.03 ) }
    dend_27 { pt3dadd( -1.80689, -127.063, -63.5281, 0.52 ) }
    dend_27 { pt3dadd( -1.468, -127.948, -64.1475, 0.37 ) }
    dend_27 { pt3dadd( -1.25024, -128.848, -64.6541, 0.37 ) }
    dend_27 { pt3dadd( -1.2457, -128.916, -64.6713, 0.37 ) }
    dend_27 { pt3dadd( -1.22793, -129.225, -64.7451, 1.03 ) }
    dend_27 { pt3dadd( -1.19084, -129.886, -64.8755, 1.03 ) }
    dend_27 { pt3dadd( -1.07746, -130.903, -65.0497, 0.44 ) }
    dend_27 { pt3dadd( -0.807194, -131.989, -65.2695, 0.37 ) }
    dend_27 { pt3dadd( -0.40143, -133.052, -65.4962, 0.88 ) }
    dend_27 { pt3dadd( -0.111129, -133.678, -65.677, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( 0.120534, -134.145, -65.8376, 1.25 ) }
    dend_27 { pt3dadd( 0.581249, -135.038, -66.2106, 0.81 ) }
    dend_27 { pt3dadd( 1.3972, -136.693, -66.9873, 0.29 ) }
    dend_27 { pt3dadd( 1.58006, -137.13, -67.1983, 0.29 ) }
    dend_27 { pt3dadd( 1.93222, -138.152, -67.7314, 0.37 ) }
    dend_27 { pt3dadd( 2.20719, -139.09, -68.2567, 0.37 ) }
    dend_27 { pt3dadd( 2.43559, -140.05, -68.7831, 0.66 ) }
    dend_27 { pt3dadd( 2.56739, -140.85, -69.1796, 1.25 ) }
    dend_27 { pt3dadd( 2.6796, -141.681, -69.5086, 1.4 ) }
    dend_27 { pt3dadd( 2.9186, -143.16, -70.0124, 0.81 ) }
    dend_27 { pt3dadd( 3.19736, -144.507, -70.3796, 0.59 ) }
    dend_27 { pt3dadd( 3.38632, -145.253, -70.5491, 0.29 ) }
    dend_27 { pt3dadd( 3.65883, -146.213, -70.7205, 0.29 ) }
    dend_27 { pt3dadd( 4.06162, -147.327, -71.0775, 0.29 ) }
    dend_27 { pt3dadd( 4.22616, -147.71, -71.2591, 1.03 ) }
    dend_27 { pt3dadd( 4.25859, -147.777, -71.2975, 1.03 ) }
    dend_27 { pt3dadd( 4.57284, -148.384, -71.6856, 1.4 ) }
    dend_27 { pt3dadd( 5.02568, -149.265, -72.2997, 1.4 ) }
    dend_27 { pt3dadd( 6.36945, -151.919, -74.2102, 0.52 ) }
    dend_27 { pt3dadd( 6.85902, -153.0, -74.9669, 0.74 ) }
    dend_27 { pt3dadd( 6.90298, -153.113, -75.0406, 0.74 ) }
    dend_27 { pt3dadd( 7.19521, -153.968, -75.5569, 0.52 ) }
    dend_27 { pt3dadd( 7.433, -154.836, -76.0298, 0.52 ) }
    dend_27 { pt3dadd( 7.54962, -155.567, -76.33, 0.74 ) }
    dend_27 { pt3dadd( 7.62418, -156.586, -76.6302, 0.66 ) }
    dend_27 { pt3dadd( 7.81357, -158.239, -77.3089, 0.59 ) }
    dend_27 { pt3dadd( 7.8265, -158.3, -77.3422, 0.59 ) }
    dend_27 { pt3dadd( 8.0318, -159.018, -77.7904, 0.52 ) }
    dend_27 { pt3dadd( 8.29268, -159.793, -78.2845, 1.18 ) }
    dend_27 { pt3dadd( 8.76927, -161.102, -79.1086, 1.62 ) }
    dend_27 { pt3dadd( 9.58137, -163.064, -80.3518, 1.18 ) }
    dend_27 { pt3dadd( 10.1548, -164.385, -81.1325, 0.52 ) }
    dend_27 { pt3dadd( 10.5893, -165.387, -81.6766, 0.37 ) }
    dend_27 { pt3dadd( 10.9932, -166.333, -82.1304, 0.74 ) }
    dend_27 { pt3dadd( 11.1589, -166.779, -82.3093, 1.11 ) }
    dend_27 { pt3dadd( 11.4723, -168.128, -82.6832, 0.88 ) }
    dend_27 { pt3dadd( 11.4964, -168.906, -82.8342, 0.81 ) }
    dend_27 { pt3dadd( 11.3434, -169.896, -83.0579, 0.44 ) }
    dend_27 { pt3dadd( 11.1074, -170.653, -83.2781, 0.59 ) }
    dend_27 { pt3dadd( 10.77, -171.45, -83.5907, 0.59 ) }
    dend_27 { pt3dadd( 10.3168, -172.356, -83.993, 0.37 ) }
    dend_27 { pt3dadd( 9.71507, -173.445, -84.4834, 0.29 ) }
    dend_27 { pt3dadd( 9.32314, -174.165, -84.8289, 0.81 ) }
    dend_27 { pt3dadd( 9.00574, -174.821, -85.1573, 1.11 ) }
    dend_27 { pt3dadd( 8.48689, -176.047, -85.7597, 1.4 ) }
    dend_27 { pt3dadd( 8.26404, -176.645, -86.0367, 1.33 ) }
    dend_27 { pt3dadd( 7.94404, -177.627, -86.4352, 0.81 ) }
    dend_27 { pt3dadd( 7.65465, -178.576, -86.7436, 0.52 ) }
    dend_27 { pt3dadd( 7.26958, -179.837, -87.0594, 0.44 ) }
    dend_27 { pt3dadd( 6.98919, -180.783, -87.2396, 0.37 ) }
    dend_27 { pt3dadd( 6.66986, -181.881, -87.3209, 0.37 ) }
    dend_27 { pt3dadd( 6.39665, -182.918, -87.3315, 0.66 ) }
    dend_27 { pt3dadd( 6.15199, -184.01, -87.2678, 0.96 ) }
    dend_27 { pt3dadd( 6.00574, -184.855, -87.159, 1.03 ) }
    dend_27 { pt3dadd( 5.90206, -185.701, -86.9955, 1.25 ) }
    dend_27 { pt3dadd( 5.87511, -187.256, -86.6368, 0.81 ) }
    dend_27 { pt3dadd( 5.91584, -187.927, -86.4759, 0.52 ) }
    dend_27 { pt3dadd( 6.01073, -188.858, -86.2934, 0.52 ) }
    dend_27 { pt3dadd( 6.08305, -189.548, -86.1993, 0.29 ) }
    dend_27 { pt3dadd( 6.14325, -190.559, -86.1341, 0.29 ) }
    dend_27 { pt3dadd( 6.15077, -191.946, -86.1997, 0.29 ) }
    dend_27 { pt3dadd( 6.05797, -192.829, -86.3682, 0.81 ) }
    dend_27 { pt3dadd( 5.84925, -193.734, -86.6145, 1.11 ) }
    dend_27 { pt3dadd( 5.58954, -194.467, -86.8721, 1.11 ) }
    dend_27 { pt3dadd( 5.25188, -195.191, -87.1694, 0.74 ) }
    dend_27 { pt3dadd( 4.81477, -195.927, -87.5248, 0.37 ) }
    dend_27 { pt3dadd( 4.17005, -196.909, -88.0693, 0.29 ) }
    dend_27 { pt3dadd( 3.97527, -197.248, -88.2457, 0.74 ) }
    dend_27 { pt3dadd( 3.93859, -197.33, -88.2825, 0.74 ) }
    dend_27 { pt3dadd( 3.79654, -197.89, -88.5321, 0.96 ) }
    dend_27 { pt3dadd( 3.77872, -198.031, -88.5911, 0.96 ) }
    dend_27 { pt3dadd( 3.69364, -199.307, -89.069, 0.29 ) }
    dend_27 { pt3dadd( 3.62791, -200.13, -89.3744, 0.29 ) }
    dend_27 { pt3dadd( 3.55171, -200.703, -89.5803, 0.81 ) }
    dend_27 { pt3dadd( 3.3016, -201.906, -90.0042, 1.03 ) }
    dend_27 { pt3dadd( 3.08124, -202.615, -90.2522, 0.81 ) }
    dend_27 { pt3dadd( 2.69116, -203.523, -90.5888, 0.29 ) }
    dend_27 { pt3dadd( 2.14957, -204.453, -90.9555, 0.29 ) }
    dend_27 { pt3dadd( 1.80415, -204.925, -91.1651, 0.44 ) }
    dend_27 { pt3dadd( 1.35762, -205.48, -91.4142, 0.44 ) }
    dend_27 { pt3dadd( 0.767704, -206.107, -91.6926, 0.66 ) }
    dend_27 { pt3dadd( 0.0836925, -206.743, -92.0261, 0.96 ) }
    dend_27 { pt3dadd( -0.2795, -207.034, -92.2146, 1.4 ) }
    dend_27 { pt3dadd( -1.27315, -207.767, -92.7726, 1.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 84/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.2345, 57.2319, 2.06689, 1.11 ) }
    dend_20 { pt3dadd( 6.95508, 58.6936, 2.25424, 1.11 ) }
    dend_20 { pt3dadd( 6.86083, 59.1168, 2.30265, 0.96 ) }
    dend_20 { pt3dadd( 6.70809, 59.6653, 2.35929, 0.96 ) }
    dend_20 { pt3dadd( 6.51902, 60.2781, 2.41943, 0.96 ) }
    dend_20 { pt3dadd( 6.27122, 60.994, 2.48923, 0.96 ) }
    dend_20 { pt3dadd( 5.86919, 62.0764, 2.59482, 0.96 ) }
    dend_20 { pt3dadd( 5.84216, 62.1309, 2.59853, 0.96 ) }
    dend_20 { pt3dadd( 5.38487, 62.9661, 2.66099, 1.11 ) }
    dend_20 { pt3dadd( 5.33819, 63.0447, 2.66765, 1.11 ) }
    dend_20 { pt3dadd( 4.93746, 63.6824, 2.72706, 1.11 ) }
    dend_20 { pt3dadd( 4.89874, 63.7398, 2.73321, 1.11 ) }
    dend_20 { pt3dadd( 4.46395, 64.3684, 2.80572, 1.33 ) }
    dend_20 { pt3dadd( 4.06852, 64.9509, 2.87066, 1.18 ) }
    dend_20 { pt3dadd( 3.66236, 65.6055, 2.93666, 0.96 ) }
    dend_20 { pt3dadd( 3.62945, 65.6683, 2.94189, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 3.38745, 66.2065, 2.98156, 0.88 ) }
    dend_20 { pt3dadd( 3.11981, 66.9239, 3.02554, 0.88 ) }
    dend_20 { pt3dadd( 3.10421, 66.9822, 3.02822, 0.88 ) }
    dend_20 { pt3dadd( 2.93916, 67.9072, 3.0578, 0.88 ) }
    dend_20 { pt3dadd( 2.84416, 68.8164, 3.07527, 1.11 ) }
    dend_20 { pt3dadd( 2.83995, 68.9034, 3.07635, 1.11 ) }
    dend_20 { pt3dadd( 2.84629, 69.6598, 3.08006, 1.11 ) }
    dend_20 { pt3dadd( 2.87726, 70.3025, 3.08251, 1.33 ) }
    dend_20 { pt3dadd( 2.9078, 70.7025, 3.0843, 1.33 ) }
    dend_20 { pt3dadd( 3.00172, 71.422, 3.05612, 1.18 ) }
    dend_20 { pt3dadd( 3.12172, 72.1273, 3.00269, 1.18 ) }
    dend_20 { pt3dadd( 3.13984, 72.2096, 2.98939, 1.18 ) }
    dend_20 { pt3dadd( 3.32942, 72.9007, 2.8276, 1.11 ) }
    dend_20 { pt3dadd( 3.55189, 73.5914, 2.62697, 1.11 ) }
    dend_20 { pt3dadd( 3.80794, 74.2799, 2.39452, 1.03 ) }
    dend_20 { pt3dadd( 4.04839, 74.9031, 2.1629, 0.88 ) }
    dend_20 { pt3dadd( 4.38806, 75.8637, 1.79196, 0.88 ) }
    dend_20 { pt3dadd( 4.41911, 75.9779, 1.75006, 0.88 ) }
    dend_20 { pt3dadd( 4.58148, 76.7837, 1.52532, 0.88 ) }
    dend_20 { pt3dadd( 4.58778, 76.8437, 1.51604, 0.88 ) }
    dend_20 { pt3dadd( 4.56577, 77.4961, 1.52109, 0.88 ) }
    dend_20 { pt3dadd( 4.43702, 78.3469, 1.62491, 0.88 ) }
    dend_20 { pt3dadd( 4.27982, 78.9554, 1.75396, 0.88 ) }
    dend_20 { pt3dadd( 3.96759, 79.8886, 1.95815, 0.96 ) }
    dend_20 { pt3dadd( 3.88732, 80.0663, 1.99822, 0.96 ) }
    dend_20 { pt3dadd( 3.62411, 80.5847, 2.10778, 1.47 ) }
    dend_20 { pt3dadd( 3.36506, 81.0717, 2.21234, 1.62 ) }
    dend_20 { pt3dadd( 3.003, 81.7157, 2.36361, 1.11 ) }
    dend_20 { pt3dadd( 2.64165, 82.3542, 2.50229, 1.11 ) }
    dend_20 { pt3dadd( 2.18402, 83.1598, 2.64984, 1.11 ) }
    dend_20 { pt3dadd( 1.8218, 83.8594, 2.78279, 0.96 ) }
    dend_20 { pt3dadd( 1.51509, 84.5217, 2.91398, 0.96 ) }
    dend_20 { pt3dadd( 1.15933, 85.3164, 3.07426, 0.96 ) }
    dend_20 { pt3dadd( 1.13424, 85.3818, 3.08635, 0.96 ) }
    dend_20 { pt3dadd( 0.978065, 85.8639, 3.14779, 0.96 ) }
    dend_20 { pt3dadd( 0.737, 86.7368, 3.15818, 1.18 ) }
    dend_20 { pt3dadd( 0.715555, 86.8201, 3.15141, 1.18 ) }
    dend_20 { pt3dadd( 0.441325, 87.8788, 3.00153, 1.18 ) }
    dend_20 { pt3dadd( 0.162477, 88.9689, 2.81016, 1.03 ) }
    dend_20 { pt3dadd( -0.0413873, 89.7475, 2.67331, 0.88 ) }
    dend_20 { pt3dadd( -0.323001, 90.8017, 2.48018, 1.03 ) }
    dend_20 { pt3dadd( -0.520307, 91.5317, 2.34717, 1.03 ) }
    dend_20 { pt3dadd( -0.622356, 91.9441, 2.2835, 1.03 ) }
    dend_20 { pt3dadd( -0.641668, 92.0538, 2.27072, 1.03 ) }
    dend_20 { pt3dadd( -0.745079, 92.7401, 2.23548, 1.03 ) }
    dend_20 { pt3dadd( -0.762178, 92.8694, 2.23847, 1.03 ) }
    dend_20 { pt3dadd( -0.848803, 93.4819, 2.32368, 1.03 ) }
    dend_20 { pt3dadd( -1.01168, 94.5257, 2.50553, 1.18 ) }
    dend_20 { pt3dadd( -1.15924, 95.4481, 2.70785, 1.18 ) }
    dend_20 { pt3dadd( -1.25289, 96.0116, 2.85012, 1.18 ) }
    dend_20 { pt3dadd( -1.35757, 96.6207, 3.02381, 1.18 ) }
    dend_20 { pt3dadd( -1.58535, 97.8909, 3.40213, 1.18 ) }
    dend_20 { pt3dadd( -1.74281, 98.7852, 3.69938, 1.18 ) }
    dend_20 { pt3dadd( -1.89621, 99.6995, 4.01978, 1.18 ) }
    dend_20 { pt3dadd( -1.90575, 99.7583, 4.03933, 1.18 ) }
    dend_20 { pt3dadd( -1.99142, 100.294, 4.18694, 1.18 ) }
    dend_20 { pt3dadd( -2.15333, 101.269, 4.38989, 1.47 ) }
    dend_20 { pt3dadd( -2.26001, 101.94, 4.47908, 1.47 ) }
    dend_20 { pt3dadd( -2.37026, 102.608, 4.55026, 1.33 ) }
    dend_20 { pt3dadd( -2.52907, 103.61, 4.62784, 1.03 ) }
    dend_20 { pt3dadd( -2.75374, 104.993, 4.72358, 0.96 ) }
    dend_20 { pt3dadd( -2.94113, 106.127, 4.79116, 0.96 ) }
    dend_20 { pt3dadd( -3.08172, 106.933, 4.81467, 0.96 ) }
    dend_20 { pt3dadd( -3.20738, 107.614, 4.81241, 1.11 ) }
    dend_20 { pt3dadd( -3.27831, 108.013, 4.80609, 1.11 ) }
    dend_20 { pt3dadd( -3.40729, 108.828, 4.77719, 1.25 ) }
    dend_20 { pt3dadd( -3.45363, 109.195, 4.75818, 1.25 ) }
    dend_20 { pt3dadd( -3.5779, 110.121, 4.69187, 1.03 ) }
    dend_20 { pt3dadd( -3.60242, 110.26, 4.68118, 1.03 ) }
    dend_20 { pt3dadd( -3.67938, 110.684, 4.6652, 1.03 ) }
    dend_20 { pt3dadd( -3.75968, 111.106, 4.66755, 1.03 ) }
    dend_20 { pt3dadd( -3.83609, 111.61, 4.71771, 1.03 ) }
    dend_20 { pt3dadd( -3.94509, 112.434, 4.86834, 1.03 ) }
    dend_20 { pt3dadd( -4.00552, 113.044, 5.02456, 1.03 ) }
    dend_20 { pt3dadd( -4.04903, 113.608, 5.22419, 1.03 ) }
    dend_20 { pt3dadd( -4.05567, 113.718, 5.27173, 1.03 ) }
    dend_20 { pt3dadd( -4.09471, 114.577, 5.68613, 1.03 ) }
    dend_20 { pt3dadd( -4.09704, 114.631, 5.71464, 1.03 ) }
    dend_20 { pt3dadd( -4.1593, 115.576, 6.21767, 1.03 ) }
    dend_20 { pt3dadd( -4.25201, 116.553, 6.69476, 1.03 ) }
    dend_20 { pt3dadd( -4.26244, 116.638, 6.72857, 1.03 ) }
    dend_20 { pt3dadd( -4.32305, 117.301, 6.93839, 1.03 ) }
    dend_20 { pt3dadd( -4.3256, 117.362, 6.95431, 1.03 ) }
    dend_20 { pt3dadd( -4.29115, 118.468, 7.20226, 1.03 ) }
    dend_20 { pt3dadd( -4.27853, 118.596, 7.22463, 1.03 ) }
    dend_20 { pt3dadd( -4.18421, 119.359, 7.31781, 1.25 ) }
    dend_20 { pt3dadd( -4.04588, 120.476, 7.44722, 1.25 ) }
    dend_20 { pt3dadd( -3.92334, 121.417, 7.55198, 1.25 ) }
    dend_20 { pt3dadd( -3.83962, 122.272, 7.64307, 0.88 ) }
    dend_20 { pt3dadd( -3.7975, 123.118, 7.71112, 0.74 ) }
    dend_20 { pt3dadd( -3.81832, 123.826, 7.73786, 1.18 ) }
    dend_20 { pt3dadd( -3.94209, 124.944, 7.73399, 1.4 ) }
    dend_20 { pt3dadd( -3.96957, 125.073, 7.72841, 1.4 ) }
    dend_20 { pt3dadd( -4.23162, 125.968, 7.6554, 1.4 ) }
    dend_20 { pt3dadd( -4.57672, 126.934, 7.57245, 1.18 ) }
    dend_20 { pt3dadd( -4.91578, 127.815, 7.49088, 1.03 ) }
    dend_20 { pt3dadd( -4.93817, 127.871, 7.48489, 1.03 ) }
    dend_20 { pt3dadd( -5.27312, 128.687, 7.38709, 1.03 ) }
    dend_20 { pt3dadd( -5.44342, 129.11, 7.33855, 0.88 ) }
    dend_20 { pt3dadd( -5.88996, 130.297, 7.22241, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( -5.91136, 130.356, 7.22119, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.2345, 57.2319, 2.06689, 0.52 ) }
    dend_15 { pt3dadd( 6.88882, 57.8411, 1.66068, 0.52 ) }
    dend_15 { pt3dadd( 6.56973, 58.2875, 1.35906, 0.74 ) }
    dend_15 { pt3dadd( 6.25867, 58.606, 1.11765, 0.74 ) }
    dend_15 { pt3dadd( 6.13466, 58.7147, 1.0299, 0.74 ) }
    dend_15 { pt3dadd( 5.89064, 58.8921, 0.815585, 0.74 ) }
    dend_15 { pt3dadd( 5.48081, 59.1471, 0.385586, 0.44 ) }
    dend_15 { pt3dadd( 5.24526, 59.2642, 0.11928, 0.81 ) }
    dend_15 { pt3dadd( 4.82405, 59.463, -0.389157, 0.81 ) }
    dend_15 { pt3dadd( 4.80145, 59.4744, -0.420198, 0.81 ) }
    dend_15 { pt3dadd( 4.00889, 59.9444, -1.56613, 1.03 ) }
    dend_15 { pt3dadd( 3.47365, 60.3302, -2.40083, 0.81 ) }
    dend_15 { pt3dadd( 3.32295, 60.4656, -2.65094, 0.81 ) }
    dend_15 { pt3dadd( 3.00619, 60.7971, -3.16102, 0.88 ) }
    dend_15 { pt3dadd( 2.63911, 61.2133, -3.69394, 0.81 ) }
    dend_15 { pt3dadd( 2.33293, 61.5254, -4.05483, 0.81 ) }
    dend_15 { pt3dadd( 1.87513, 61.9273, -4.45162, 0.59 ) }
    dend_15 { pt3dadd( 1.60702, 62.1006, -4.65276, 0.59 ) }
    dend_15 { pt3dadd( 1.13091, 62.2795, -5.01198, 0.88 ) }
    dend_15 { pt3dadd( 0.505814, 62.401, -5.78846, 0.88 ) }
    dend_15 { pt3dadd( 0.0207403, 62.4456, -6.56174, 0.88 ) }
    dend_15 { pt3dadd( -0.217548, 62.4527, -7.00024, 1.25 ) }
    dend_15 { pt3dadd( -0.648495, 62.448, -7.85842, 1.25 ) }
    dend_15 { pt3dadd( -1.15375, 62.4387, -8.92385, 1.11 ) }
    dend_15 { pt3dadd( -2.71664, 62.4684, -12.4794, 1.03 ) }
    dend_15 { pt3dadd( -3.13738, 62.5009, -13.5128, 0.66 ) }
    dend_15 { pt3dadd( -3.15227, 62.5044, -13.5549, 0.66 ) }
    dend_15 { pt3dadd( -3.4105, 62.6233, -14.3881, 0.52 ) }
    dend_15 { pt3dadd( -3.51325, 62.707, -14.7681, 0.52 ) }
    dend_15 { pt3dadd( -3.63995, 62.8995, -15.3385, 0.52 ) }
    dend_15 { pt3dadd( -3.64136, 62.9241, -15.3775, 0.52 ) }
    dend_15 { pt3dadd( -3.53, 63.5816, -16.3626, 1.25 ) }
    dend_15 { pt3dadd( -3.50756, 63.729, -16.5869, 1.69 ) }
    dend_15 { pt3dadd( -3.50214, 63.7573, -16.6305, 1.69 ) }
    dend_15 { pt3dadd( -3.4852, 63.9103, -16.8685, 1.69 ) }
    dend_15 { pt3dadd( -3.55149, 64.6218, -17.9782, 0.88 ) }
    dend_15 { pt3dadd( -3.77357, 65.3539, -18.988, 0.59 ) }
    dend_15 { pt3dadd( -3.9159, 65.6212, -19.323, 0.81 ) }
    dend_15 { pt3dadd( -3.9341, 65.6508, -19.3621, 0.81 ) }
    dend_15 { pt3dadd( -4.10213, 65.9196, -19.7454, 1.11 ) }
    dend_15 { pt3dadd( -4.44588, 66.4798, -20.5526, 1.11 ) }
    dend_15 { pt3dadd( -4.62774, 66.7924, -20.9819, 0.96 ) }
    dend_15 { pt3dadd( -4.92738, 67.3934, -21.8273, 0.88 ) }
    dend_15 { pt3dadd( -5.23281, 68.1397, -22.8237, 0.81 ) }
    dend_15 { pt3dadd( -5.44211, 68.8053, -23.7029, 0.52 ) }
    dend_15 { pt3dadd( -5.47679, 69.006, -24.0035, 0.52 ) }
    dend_15 { pt3dadd( -5.47374, 69.2614, -24.3992, 0.59 ) }
    dend_15 { pt3dadd( -5.46251, 69.3127, -24.4794, 0.59 ) }
    dend_15 { pt3dadd( -5.3233, 69.6617, -24.9975, 0.59 ) }
    dend_15 { pt3dadd( -5.04639, 70.2357, -25.8284, 0.81 ) }
    dend_15 { pt3dadd( -4.61231, 70.9987, -26.9996, 1.4 ) }
    dend_15 { pt3dadd( -4.45604, 71.231, -27.4164, 1.62 ) }
    dend_15 { pt3dadd( -4.21315, 71.514, -28.0165, 1.84 ) }
    dend_15 { pt3dadd( -4.19651, 71.5299, -28.055, 1.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 36.1585, 48.1088, -0.692108, 1.18 ) }
    dend_3 { pt3dadd( 36.695, 48.8418, 0.499093, 1.18 ) }
    dend_3 { pt3dadd( 37.0112, 49.3588, 1.09114, 0.96 ) }
    dend_3 { pt3dadd( 37.0364, 49.4044, 1.12427, 0.96 ) }
    dend_3 { pt3dadd( 37.42, 50.0803, 1.42335, 0.74 ) }
    dend_3 { pt3dadd( 37.449, 50.1313, 1.4376, 0.74 ) }
    dend_3 { pt3dadd( 37.6868, 50.5332, 1.50165, 0.88 ) }
    dend_3 { pt3dadd( 38.0475, 51.1027, 1.49629, 0.88 ) }
    dend_3 { pt3dadd( 38.4551, 51.6763, 1.47487, 0.59 ) }
    dend_3 { pt3dadd( 38.895, 52.1684, 1.50032, 0.52 ) }
    dend_3 { pt3dadd( 39.2829, 52.517, 1.55192, 0.81 ) }
    dend_3 { pt3dadd( 39.8199, 52.9719, 1.64279, 0.52 ) }
    dend_3 { pt3dadd( 40.7318, 53.657, 1.85103, 0.88 ) }
    dend_3 { pt3dadd( 40.8828, 53.7551, 1.90228, 0.88 ) }
    dend_3 { pt3dadd( 41.7881, 54.2364, 2.31584, 1.33 ) }
    dend_3 { pt3dadd( 41.9396, 54.2998, 2.40569, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 36.1585, 48.1088, -0.692108, 1.11 ) }
    dend_2 { pt3dadd( 37.9063, 47.0078, -3.23782, 1.11 ) }
    dend_2 { pt3dadd( 38.5423, 46.6954, -3.9712, 1.03 ) }
    dend_2 { pt3dadd( 39.2987, 46.3525, -4.73548, 0.88 ) }
    dend_2 { pt3dadd( 40.747, 45.7356, -5.94928, 0.59 ) }
    dend_2 { pt3dadd( 41.5746, 45.3608, -6.59426, 0.81 ) }
    dend_2 { pt3dadd( 42.3167, 45.0055, -7.16515, 0.81 ) }
    dend_2 { pt3dadd( 42.9706, 44.7101, -7.59733, 1.03 ) }
    dend_2 { pt3dadd( 43.2467, 44.6106, -7.80443, 1.03 ) }
    dend_2 { pt3dadd( 44.1759, 44.3193, -8.6609, 1.03 ) }
    dend_2 { pt3dadd( 45.4884, 43.8233, -10.0828, 0.66 ) }
    dend_2 { pt3dadd( 46.4521, 43.362, -11.3114, 0.81 ) }
    dend_2 { pt3dadd( 47.3122, 42.8266, -12.5714, 0.59 ) }
    dend_2 { pt3dadd( 48.0623, 42.2365, -13.8359, 0.96 ) }
    dend_2 { pt3dadd( 49.045, 41.2924, -15.6746, 0.59 ) }
    dend_2 { pt3dadd( 49.6742, 40.5458, -17.0006, 0.59 ) }
    dend_2 { pt3dadd( 50.2638, 39.7521, -18.2236, 0.96 ) }
    dend_2 { pt3dadd( 50.8121, 38.9869, -19.2203, 0.81 ) }
    dend_2 { pt3dadd( 51.3905, 38.2042, -20.0539, 0.81 ) }
    dend_2 { pt3dadd( 51.78, 37.7505, -20.4531, 0.96 ) }
    dend_2 { pt3dadd( 52.7374, 36.9376, -21.1591, 0.37 ) }
    dend_2 { pt3dadd( 53.6808, 36.4298, -21.7304, 0.37 ) }
    dend_2 { pt3dadd( 54.8614, 36.0446, -22.3408, 0.44 ) }
    dend_2 { pt3dadd( 55.6633, 35.8996, -22.7369, 0.81 ) }
    dend_2 { pt3dadd( 56.6084, 35.7998, -23.1967, 1.03 ) }
    dend_2 { pt3dadd( 58.0003, 35.6551, -23.8971, 0.52 ) }
    dend_2 { pt3dadd( 58.4914, 35.5634, -24.1699, 0.44 ) }
    dend_2 { pt3dadd( 58.5528, 35.5402, -24.2143, 0.44 ) }
    dend_2 { pt3dadd( 59.7386, 34.7535, -25.188, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 60.1377, 34.3967, -25.5305, 0.88 ) }
    dend_2 { pt3dadd( 60.8297, 33.6541, -26.0772, 1.03 ) }
    dend_2 { pt3dadd( 61.7663, 32.6034, -26.6528, 1.03 ) }
    dend_2 { pt3dadd( 62.6313, 31.6739, -27.0903, 0.96 ) }
    dend_2 { pt3dadd( 63.5707, 30.8003, -27.4448, 0.52 ) }
    dend_2 { pt3dadd( 63.629, 30.7523, -27.4594, 0.52 ) }
    dend_2 { pt3dadd( 64.3744, 30.2816, -27.5722, 0.59 ) }
    dend_2 { pt3dadd( 65.4154, 29.8308, -27.6085, 0.59 ) }
    dend_2 { pt3dadd( 66.195, 29.5971, -27.5522, 0.29 ) }
    dend_2 { pt3dadd( 67.3604, 29.3256, -27.4103, 0.29 ) }
    dend_2 { pt3dadd( 67.435, 29.309, -27.4013, 0.29 ) }
    dend_2 { pt3dadd( 68.355, 29.0561, -27.2954, 0.66 ) }
    dend_2 { pt3dadd( 69.0932, 28.8123, -27.2148, 0.81 ) }
    dend_2 { pt3dadd( 70.0011, 28.3959, -27.108, 0.88 ) }
    dend_2 { pt3dadd( 70.1314, 28.3146, -27.0817, 0.88 ) }
    dend_2 { pt3dadd( 70.8377, 27.7683, -26.9034, 1.03 ) }
    dend_2 { pt3dadd( 71.4031, 27.3052, -26.7633, 1.03 ) }
    dend_2 { pt3dadd( 71.4607, 27.2557, -26.7507, 1.03 ) }
    dend_2 { pt3dadd( 72.1938, 26.6133, -26.5912, 0.81 ) }
    dend_2 { pt3dadd( 73.4015, 25.5773, -26.3491, 0.37 ) }
    dend_2 { pt3dadd( 74.0613, 25.0476, -26.2411, 0.66 ) }
    dend_2 { pt3dadd( 74.6161, 24.6227, -26.1711, 0.66 ) }
    dend_2 { pt3dadd( 75.4069, 24.0376, -26.1395, 0.52 ) }
    dend_2 { pt3dadd( 76.0538, 23.5811, -26.1871, 0.52 ) }
    dend_2 { pt3dadd( 76.9782, 22.936, -26.3506, 0.96 ) }
    dend_2 { pt3dadd( 77.6517, 22.4286, -26.542, 1.25 ) }
    dend_2 { pt3dadd( 78.4701, 21.7752, -26.8022, 1.03 ) }
    dend_2 { pt3dadd( 79.3438, 21.0328, -27.105, 0.81 ) }
    dend_2 { pt3dadd( 80.2749, 20.2496, -27.4487, 0.66 ) }
    dend_2 { pt3dadd( 80.755, 19.878, -27.6224, 0.74 ) }
    dend_2 { pt3dadd( 81.3197, 19.4746, -27.8107, 0.74 ) }
    dend_2 { pt3dadd( 82.172, 18.9206, -28.0319, 0.37 ) }
    dend_2 { pt3dadd( 82.2282, 18.8886, -28.0409, 0.37 ) }
    dend_2 { pt3dadd( 83.0185, 18.4885, -28.0906, 0.29 ) }
    dend_2 { pt3dadd( 84.1527, 17.975, -28.2375, 0.66 ) }
    dend_2 { pt3dadd( 84.9674, 17.6204, -28.4066, 1.03 ) }
    dend_2 { pt3dadd( 85.8183, 17.2418, -28.6284, 0.74 ) }
    dend_2 { pt3dadd( 86.8083, 16.766, -28.93, 0.74 ) }
    dend_2 { pt3dadd( 87.4168, 16.4306, -29.1307, 0.96 ) }
    dend_2 { pt3dadd( 88.8529, 15.5004, -29.6393, 1.18 ) }
    dend_2 { pt3dadd( 89.4012, 15.1153, -29.8469, 0.96 ) }
    dend_2 { pt3dadd( 90.106, 14.6039, -30.1105, 0.44 ) }
    dend_2 { pt3dadd( 90.1738, 14.5541, -30.1353, 0.44 ) }
    dend_2 { pt3dadd( 91.0146, 13.9116, -30.4523, 0.66 ) }
    dend_2 { pt3dadd( 91.5656, 13.4863, -30.676, 0.81 ) }
    dend_2 { pt3dadd( 91.8298, 13.2821, -30.8083, 0.81 ) }
    dend_2 { pt3dadd( 92.4496, 12.8233, -31.1858, 0.66 ) }
    dend_2 { pt3dadd( 92.6662, 12.6735, -31.3234, 0.66 ) }
    dend_2 { pt3dadd( 93.4787, 12.1481, -31.7858, 0.66 ) }
    dend_2 { pt3dadd( 94.4221, 11.5847, -32.2709, 0.44 ) }
    dend_2 { pt3dadd( 95.8826, 10.7141, -32.932, 0.37 ) }
    dend_2 { pt3dadd( 96.6482, 10.2308, -33.2431, 0.88 ) }
    dend_2 { pt3dadd( 97.7526, 9.50783, -33.5821, 0.88 ) }
    dend_2 { pt3dadd( 98.6562, 8.93094, -33.7631, 1.03 ) }
    dend_2 { pt3dadd( 99.3864, 8.48618, -33.8236, 1.03 ) }
    dend_2 { pt3dadd( 100.089, 8.10045, -33.8152, 0.74 ) }
    dend_2 { pt3dadd( 100.965, 7.66949, -33.7464, 0.52 ) }
    dend_2 { pt3dadd( 102.081, 7.15939, -33.6709, 0.52 ) }
    dend_2 { pt3dadd( 103.027, 6.72845, -33.6226, 0.29 ) }
    dend_2 { pt3dadd( 103.108, 6.68967, -33.625, 0.29 ) }
    dend_2 { pt3dadd( 103.835, 6.27776, -33.6723, 0.29 ) }
    dend_2 { pt3dadd( 104.448, 5.84669, -33.7581, 0.59 ) }
    dend_2 { pt3dadd( 104.536, 5.77072, -33.7771, 0.59 ) }
    dend_2 { pt3dadd( 105.151, 5.05531, -34.0083, 0.88 ) }
    dend_2 { pt3dadd( 105.696, 4.2294, -34.256, 0.74 ) }
    dend_2 { pt3dadd( 106.166, 3.33562, -34.5697, 0.44 ) }
    dend_2 { pt3dadd( 106.488, 2.55922, -34.87, 0.29 ) }
    dend_2 { pt3dadd( 106.636, 2.11783, -35.0554, 0.59 ) }
    dend_2 { pt3dadd( 106.801, 1.43393, -35.357, 0.44 ) }
    dend_2 { pt3dadd( 106.882, 0.847292, -35.6349, 0.44 ) }
    dend_2 { pt3dadd( 106.91, -0.277947, -36.1469, 0.81 ) }
    dend_2 { pt3dadd( 106.903, -0.348202, -36.1775, 0.81 ) }
    dend_2 { pt3dadd( 106.791, -1.01958, -36.4123, 1.03 ) }
    dend_2 { pt3dadd( 106.63, -1.83055, -36.6437, 0.88 ) }
    dend_2 { pt3dadd( 106.616, -1.9037, -36.6601, 0.88 ) }
    dend_2 { pt3dadd( 106.464, -2.9438, -36.8358, 0.59 ) }
    dend_2 { pt3dadd( 106.397, -3.68626, -36.9118, 0.59 ) }
    dend_2 { pt3dadd( 106.376, -4.52435, -36.9796, 0.88 ) }
    dend_2 { pt3dadd( 106.383, -4.75636, -36.9941, 0.88 ) }
    dend_2 { pt3dadd( 106.512, -5.89903, -37.0319, 0.37 ) }
    dend_2 { pt3dadd( 106.64, -6.58663, -37.0498, 0.74 ) }
    dend_2 { pt3dadd( 106.811, -7.24775, -37.061, 0.96 ) }
    dend_2 { pt3dadd( 107.059, -8.16608, -37.1141, 0.96 ) }
    dend_2 { pt3dadd( 107.078, -8.23938, -37.12, 0.96 ) }
    dend_2 { pt3dadd( 107.296, -9.02894, -37.2275, 1.25 ) }
    dend_2 { pt3dadd( 107.65, -10.0965, -37.418, 0.44 ) }
    dend_2 { pt3dadd( 107.915, -10.751, -37.5987, 0.37 ) }
    dend_2 { pt3dadd( 108.375, -11.7085, -37.9292, 0.96 ) }
    dend_2 { pt3dadd( 108.821, -12.5157, -38.2414, 0.96 ) }
    dend_2 { pt3dadd( 109.545, -13.6507, -38.7434, 0.74 ) }
    dend_2 { pt3dadd( 110.16, -14.5066, -39.1972, 0.74 ) }
    dend_2 { pt3dadd( 110.969, -15.5098, -39.7832, 0.29 ) }
    dend_2 { pt3dadd( 111.388, -16.0007, -40.0511, 0.52 ) }
    dend_2 { pt3dadd( 112.038, -16.7629, -40.4095, 0.88 ) }
    dend_2 { pt3dadd( 112.589, -17.431, -40.6816, 1.03 ) }
    dend_2 { pt3dadd( 113.514, -18.6418, -41.0591, 0.29 ) }
    dend_2 { pt3dadd( 113.896, -19.1911, -41.1378, 0.88 ) }
    dend_2 { pt3dadd( 114.612, -20.2256, -41.0311, 0.81 ) }
    dend_2 { pt3dadd( 115.042, -20.7875, -40.8136, 0.96 ) }
    dend_2 { pt3dadd( 115.545, -21.3578, -40.4064, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 115.596, -21.4097, -40.3541, 0.59 ) }
    dend_2 { pt3dadd( 116.661, -22.3788, -39.1554, 0.52 ) }
    dend_2 { pt3dadd( 117.265, -22.9244, -38.4988, 0.52 ) }
    dend_2 { pt3dadd( 117.958, -23.5764, -37.8265, 0.88 ) }
    dend_2 { pt3dadd( 118.004, -23.6241, -37.7872, 0.88 ) }
    dend_2 { pt3dadd( 118.246, -23.9131, -37.5902, 1.03 ) }
    dend_2 { pt3dadd( 118.743, -24.6133, -37.2157, 1.03 ) }
    dend_2 { pt3dadd( 119.176, -25.4122, -36.8949, 0.44 ) }
    dend_2 { pt3dadd( 119.562, -26.3235, -36.5567, 0.44 ) }
    dend_2 { pt3dadd( 119.888, -27.2032, -36.2472, 0.44 ) }
    dend_2 { pt3dadd( 120.225, -28.0981, -35.9165, 0.52 ) }
    dend_2 { pt3dadd( 120.483, -28.7486, -35.6713, 0.44 ) }
    dend_2 { pt3dadd( 120.885, -29.7032, -35.3139, 0.44 ) }
    dend_2 { pt3dadd( 121.172, -30.3529, -35.0877, 0.81 ) }
    dend_2 { pt3dadd( 121.496, -31.0494, -34.89, 0.81 ) }
    dend_2 { pt3dadd( 121.926, -31.887, -34.6824, 0.37 ) }
    dend_2 { pt3dadd( 122.374, -32.7208, -34.5244, 0.81 ) }
    dend_2 { pt3dadd( 122.676, -33.2529, -34.4343, 0.88 ) }
    dend_2 { pt3dadd( 122.907, -33.6526, -34.3787, 0.88 ) }
    dend_2 { pt3dadd( 123.295, -34.3405, -34.2715, 0.66 ) }
    dend_2 { pt3dadd( 123.87, -35.3927, -34.0965, 0.44 ) }
    dend_2 { pt3dadd( 124.379, -36.2769, -33.9526, 0.29 ) }
    dend_2 { pt3dadd( 124.812, -36.9465, -33.8892, 0.59 ) }
    dend_2 { pt3dadd( 125.245, -37.5733, -33.8707, 0.74 ) }
    dend_2 { pt3dadd( 125.34, -37.7078, -33.875, 0.74 ) }
    dend_2 { pt3dadd( 125.777, -38.3534, -33.972, 0.59 ) }
    dend_2 { pt3dadd( 126.383, -39.3339, -34.2557, 0.44 ) }
    dend_2 { pt3dadd( 126.987, -40.4163, -34.6332, 0.44 ) }
    dend_2 { pt3dadd( 127.249, -40.9656, -34.8373, 0.44 ) }
    dend_2 { pt3dadd( 127.557, -41.7259, -35.1157, 0.74 ) }
    dend_2 { pt3dadd( 127.914, -42.7587, -35.4823, 0.74 ) }
    dend_2 { pt3dadd( 128.23, -43.86, -35.8571, 0.29 ) }
    dend_2 { pt3dadd( 128.345, -44.3278, -36.0123, 0.96 ) }
    dend_2 { pt3dadd( 128.478, -44.8436, -36.1647, 0.96 ) }
    dend_2 { pt3dadd( 128.704, -45.5763, -36.3807, 0.81 ) }
    dend_2 { pt3dadd( 128.732, -45.6481, -36.3991, 0.81 ) }
    dend_2 { pt3dadd( 129.002, -46.2049, -36.4885, 0.96 ) }
    dend_2 { pt3dadd( 129.449, -47.0105, -36.6137, 0.52 ) }
    dend_2 { pt3dadd( 129.783, -47.572, -36.71, 0.52 ) }
    dend_2 { pt3dadd( 129.816, -47.6277, -36.7192, 0.52 ) }
    dend_2 { pt3dadd( 130.227, -48.4044, -36.874, 0.44 ) }
    dend_2 { pt3dadd( 130.669, -49.3282, -37.0765, 0.59 ) }
    dend_2 { pt3dadd( 131.275, -50.6977, -37.3801, 0.29 ) }
    dend_2 { pt3dadd( 131.484, -51.1913, -37.4877, 0.96 ) }
    dend_2 { pt3dadd( 131.811, -52.0112, -37.6697, 1.33 ) }
    dend_2 { pt3dadd( 132.344, -53.3994, -37.9681, 0.29 ) }
    dend_2 { pt3dadd( 132.814, -54.6442, -38.2212, 0.29 ) }
    dend_2 { pt3dadd( 133.08, -55.3495, -38.3516, 0.88 ) }
    dend_2 { pt3dadd( 133.108, -55.4234, -38.3597, 0.88 ) }
    dend_2 { pt3dadd( 133.406, -56.2564, -38.3885, 0.88 ) }
    dend_2 { pt3dadd( 133.843, -57.5421, -38.3159, 0.29 ) }
    dend_2 { pt3dadd( 134.157, -58.5117, -38.1587, 0.29 ) }
    dend_2 { pt3dadd( 134.244, -58.8167, -38.0831, 0.66 ) }
    dend_2 { pt3dadd( 134.508, -59.9082, -37.7696, 0.66 ) }
    dend_2 { pt3dadd( 134.687, -60.7071, -37.5178, 0.66 ) }
    dend_2 { pt3dadd( 134.844, -61.4345, -37.2711, 0.96 ) }
    dend_2 { pt3dadd( 134.972, -62.1182, -37.0455, 0.74 ) }
    dend_2 { pt3dadd( 135.104, -62.891, -36.7871, 0.52 ) }
    dend_2 { pt3dadd( 135.269, -63.8596, -36.4431, 0.44 ) }
    dend_2 { pt3dadd( 135.317, -64.0976, -36.3617, 0.44 ) }
    dend_2 { pt3dadd( 135.549, -65.0983, -36.0601, 0.37 ) }
    dend_2 { pt3dadd( 135.861, -66.2947, -35.7387, 0.37 ) }
    dend_2 { pt3dadd( 136.206, -67.5703, -35.4322, 0.74 ) }
    dend_2 { pt3dadd( 136.541, -68.6273, -35.2738, 0.29 ) }
    dend_2 { pt3dadd( 136.967, -69.6536, -35.1963, 0.29 ) }
    dend_2 { pt3dadd( 137.497, -70.7217, -35.2331, 0.74 ) }
    dend_2 { pt3dadd( 137.769, -71.1462, -35.3087, 1.03 ) }
    dend_2 { pt3dadd( 137.815, -71.2042, -35.3284, 1.03 ) }
    dend_2 { pt3dadd( 138.849, -72.3185, -35.8509, 0.22 ) }
    dend_2 { pt3dadd( 139.711, -73.1997, -36.3323, 0.22 ) }
    dend_2 { pt3dadd( 140.236, -73.7252, -36.6217, 0.81 ) }
    dend_2 { pt3dadd( 140.796, -74.3023, -36.9011, 0.81 ) }
    dend_2 { pt3dadd( 140.845, -74.3566, -36.9252, 0.81 ) }
    dend_2 { pt3dadd( 141.575, -75.2824, -37.2536, 0.29 ) }
    dend_2 { pt3dadd( 142.036, -76.0453, -37.507, 0.44 ) }
    dend_2 { pt3dadd( 142.084, -76.1373, -37.5487, 0.44 ) }
    dend_2 { pt3dadd( 142.378, -76.6711, -37.8307, 0.44 ) }
    dend_2 { pt3dadd( 142.413, -76.7387, -37.8784, 0.44 ) }
    dend_2 { pt3dadd( 142.775, -77.5291, -38.48, 0.52 ) }
    dend_2 { pt3dadd( 143.262, -78.8237, -39.5867, 0.52 ) }
    dend_2 { pt3dadd( 143.55, -79.6248, -40.3768, 0.66 ) }
    dend_2 { pt3dadd( 143.748, -80.1305, -40.9615, 0.59 ) }
    dend_2 { pt3dadd( 144.213, -81.2726, -42.4508, 0.37 ) }
    dend_2 { pt3dadd( 144.424, -81.7774, -43.1195, 0.29 ) }
    dend_2 { pt3dadd( 144.856, -82.7985, -44.4953, 0.74 ) }
    dend_2 { pt3dadd( 145.365, -84.0189, -46.0476, 0.81 ) }
    dend_2 { pt3dadd( 145.988, -85.5962, -47.986, 0.29 ) }
    dend_2 { pt3dadd( 146.195, -86.1634, -48.7103, 0.66 ) }
    dend_2 { pt3dadd( 146.465, -86.8632, -49.6052, 0.29 ) }
    dend_2 { pt3dadd( 146.764, -87.6375, -50.5882, 0.59 ) }
    dend_2 { pt3dadd( 146.945, -88.1277, -51.1872, 0.74 ) }
    dend_2 { pt3dadd( 147.342, -89.3341, -52.5853, 1.33 ) }
    dend_2 { pt3dadd( 147.964, -91.3208, -54.8398, 0.29 ) }
    dend_2 { pt3dadd( 148.089, -91.6857, -55.2584, 0.59 ) }
    dend_2 { pt3dadd( 148.184, -91.9326, -55.5425, 0.59 ) }
    dend_2 { pt3dadd( 148.742, -93.1137, -56.8029, 0.52 ) }
    dend_2 { pt3dadd( 149.051, -93.6485, -57.3218, 0.74 ) }
    dend_2 { pt3dadd( 149.328, -94.0416, -57.6228, 0.74 ) }
    dend_2 { pt3dadd( 149.965, -94.801, -58.0664, 0.37 ) }
    dend_2 { pt3dadd( 150.937, -95.8893, -58.7164, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 151.668, -96.6504, -59.1311, 0.37 ) }
    dend_2 { pt3dadd( 152.061, -97.0374, -59.3099, 0.66 ) }
    dend_2 { pt3dadd( 152.44, -97.407, -59.4876, 0.88 ) }
    dend_2 { pt3dadd( 152.744, -97.7097, -59.6404, 0.88 ) }
    dend_2 { pt3dadd( 154.016, -99.0006, -60.299, 0.29 ) }
    dend_2 { pt3dadd( 155.066, -100.128, -60.876, 0.22 ) }
    dend_2 { pt3dadd( 155.268, -100.363, -60.9937, 0.66 ) }
    dend_2 { pt3dadd( 155.979, -101.249, -61.4265, 0.22 ) }
    dend_2 { pt3dadd( 156.238, -101.614, -61.6129, 0.52 ) }
    dend_2 { pt3dadd( 156.67, -102.324, -61.9637, 0.29 ) }
    dend_2 { pt3dadd( 156.867, -102.733, -62.1407, 0.74 ) }
    dend_2 { pt3dadd( 157.032, -103.185, -62.34, 0.74 ) }
    dend_2 { pt3dadd( 157.314, -104.117, -62.764, 0.22 ) }
    dend_2 { pt3dadd( 157.6, -105.246, -63.2698, 0.37 ) }
    dend_2 { pt3dadd( 157.717, -105.751, -63.5288, 0.37 ) }
    dend_2 { pt3dadd( 157.825, -106.307, -63.8307, 0.59 ) }
    dend_2 { pt3dadd( 157.923, -106.788, -64.0884, 0.59 ) }
    dend_2 { pt3dadd( 158.08, -107.613, -64.5244, 0.22 ) }
    dend_2 { pt3dadd( 158.157, -107.982, -64.7094, 0.52 ) }
    dend_2 { pt3dadd( 158.499, -109.259, -65.3251, 0.29 ) }
    dend_2 { pt3dadd( 158.691, -109.884, -65.6678, 1.11 ) }
    dend_2 { pt3dadd( 158.909, -110.536, -66.064, 1.18 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 22/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -16.3996, -191.962, -162.136, 0.29 ) }
    dend_104 { pt3dadd( -16.6996, -193.686, -162.436, 0.29 ) }
    dend_104 { pt3dadd( -16.9436, -194.753, -162.622, 0.29 ) }
    dend_104 { pt3dadd( -17.373, -196.011, -162.708, 0.22 ) }
    dend_104 { pt3dadd( -17.7543, -196.76, -162.649, 0.74 ) }
    dend_104 { pt3dadd( -18.1036, -197.307, -162.504, 0.88 ) }
    dend_104 { pt3dadd( -18.152, -197.38, -162.478, 0.88 ) }
    dend_104 { pt3dadd( -18.507, -197.801, -162.266, 0.88 ) }
    dend_104 { pt3dadd( -19.5773, -198.902, -161.557, 0.29 ) }
    dend_104 { pt3dadd( -20.5105, -199.795, -160.821, 0.29 ) }
    dend_104 { pt3dadd( -21.429, -200.667, -159.989, 0.88 ) }
    dend_104 { pt3dadd( -21.9819, -201.184, -159.454, 0.88 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 34/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -16.3996, -191.962, -162.136, 0.59 ) }
    dend_103 { pt3dadd( -17.5408, -193.962, -167.768, 0.59 ) }
    dend_103 { pt3dadd( -17.8509, -194.504, -169.222, 0.37 ) }
    dend_103 { pt3dadd( -18.2999, -195.138, -170.934, 0.37 ) }
    dend_103 { pt3dadd( -18.9352, -195.988, -173.128, 0.96 ) }
    dend_103 { pt3dadd( -19.5494, -196.827, -175.164, 1.33 ) }
    dend_103 { pt3dadd( -20.8018, -198.653, -179.301, 0.59 ) }
    dend_103 { pt3dadd( -21.0981, -199.189, -180.265, 0.29 ) }
    dend_103 { pt3dadd( -21.49, -200.027, -181.761, 0.29 ) }
    dend_103 { pt3dadd( -21.666, -200.615, -182.838, 0.88 ) }
    dend_103 { pt3dadd( -21.7377, -200.987, -183.551, 0.88 ) }
    dend_103 { pt3dadd( -21.8251, -201.77, -185.073, 0.66 ) }
    dend_103 { pt3dadd( -21.8496, -202.768, -186.989, 0.88 ) }
    dend_103 { pt3dadd( -21.8016, -204.334, -189.921, 1.4 ) }
    dend_103 { pt3dadd( -21.641, -207.364, -195.622, 0.59 ) }
    dend_103 { pt3dadd( -21.643, -208.698, -198.271, 0.59 ) }
    dend_103 { pt3dadd( -21.6493, -209.214, -199.329, 0.52 ) }
    dend_103 { pt3dadd( -21.6445, -209.557, -200.041, 1.03 ) }
    dend_103 { pt3dadd( -21.6504, -210.045, -201.039, 0.88 ) }
    dend_103 { pt3dadd( -21.776, -211.798, -204.599, 0.22 ) }
    dend_103 { pt3dadd( -22.0249, -212.875, -206.774, 0.59 ) }
    dend_103 { pt3dadd( -22.434, -213.986, -209.333, 0.74 ) }
    dend_103 { pt3dadd( -22.8746, -214.961, -211.839, 0.44 ) }
    dend_103 { pt3dadd( -23.1701, -215.515, -213.3, 0.74 ) }
    dend_103 { pt3dadd( -23.7476, -216.579, -215.919, 1.11 ) }
    dend_103 { pt3dadd( -24.0804, -217.177, -217.182, 0.96 ) }
    dend_103 { pt3dadd( -25.4158, -219.387, -221.295, 0.74 ) }
    dend_103 { pt3dadd( -25.451, -219.433, -221.374, 0.74 ) }
    dend_103 { pt3dadd( -26.1058, -220.217, -222.64, 0.74 ) }
    dend_103 { pt3dadd( -27.0461, -221.43, -224.399, 0.74 ) }
    dend_103 { pt3dadd( -28.0262, -222.762, -226.022, 0.37 ) }
    dend_103 { pt3dadd( -28.5333, -223.523, -226.871, 1.03 ) }
    dend_103 { pt3dadd( -29.048, -224.361, -227.636, 1.18 ) }
    dend_103 { pt3dadd( -30.4709, -226.706, -229.806, 0.29 ) }
    dend_103 { pt3dadd( -30.9506, -227.487, -230.542, 0.59 ) }
    dend_103 { pt3dadd( -31.3489, -228.117, -231.087, 0.59 ) }
    dend_103 { pt3dadd( -31.916, -229.108, -231.78, 0.44 ) }
    dend_103 { pt3dadd( -32.348, -229.922, -232.246, 0.29 ) }
    dend_103 { pt3dadd( -32.3975, -230.014, -232.289, 0.29 ) }
    dend_103 { pt3dadd( -32.8176, -230.736, -232.553, 0.59 ) }
    dend_103 { pt3dadd( -33.1697, -231.518, -233.102, 0.59 ) }
    dend_103 { pt3dadd( -33.3393, -232.254, -233.849, 0.44 ) }
    dend_103 { pt3dadd( -33.351, -233.017, -234.823, 0.29 ) }
    dend_103 { pt3dadd( -33.2605, -233.892, -236.174, 0.88 ) }
    dend_103 { pt3dadd( -33.0676, -234.84, -237.851, 1.11 ) }
    dend_103 { pt3dadd( -32.4887, -236.978, -242.032, 0.74 ) }
    dend_103 { pt3dadd( -32.1499, -238.183, -244.457, 0.59 ) }
    dend_103 { pt3dadd( -31.7816, -239.537, -247.221, 0.29 ) }
    dend_103 { pt3dadd( -31.4537, -240.998, -250.209, 0.74 ) }
    dend_103 { pt3dadd( -31.1726, -242.955, -254.136, 1.03 ) }
    dend_103 { pt3dadd( -31.1621, -244.915, -257.863, 0.52 ) }
    dend_103 { pt3dadd( -31.3304, -245.67, -259.095, 0.44 ) }
    dend_103 { pt3dadd( -31.5509, -246.19, -259.818, 0.88 ) }
    dend_103 { pt3dadd( -32.164, -247.17, -260.882, 1.11 ) }
    dend_103 { pt3dadd( -32.6371, -247.742, -261.292, 1.11 ) }
    dend_103 { pt3dadd( -33.6898, -248.776, -261.728, 0.59 ) }
    dend_103 { pt3dadd( -34.8713, -249.882, -262.027, 0.44 ) }
    dend_103 { pt3dadd( -35.5363, -250.548, -262.228, 0.66 ) }
    dend_103 { pt3dadd( -36.6778, -251.848, -262.626, 0.59 ) }
    dend_103 { pt3dadd( -37.3947, -252.902, -263.281, 0.37 ) }
    dend_103 { pt3dadd( -37.9371, -253.83, -264.104, 0.44 ) }
    dend_103 { pt3dadd( -38.5221, -254.958, -265.355, 0.66 ) }
    dend_103 { pt3dadd( -38.9237, -255.824, -266.452, 0.81 ) }
    dend_103 { pt3dadd( -39.2638, -256.64, -267.576, 0.88 ) }
    dend_103 { pt3dadd( -40.9811, -260.643, -273.558, 0.52 ) }
    dend_103 { pt3dadd( -41.2792, -261.224, -274.519, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_103 { pt3dadd( -41.4774, -261.53, -275.09, 0.59 ) }
    dend_103 { pt3dadd( -41.7675, -261.837, -275.717, 0.59 ) }
    dend_103 { pt3dadd( -42.6498, -262.435, -276.96, 0.37 ) }
    dend_103 { pt3dadd( -43.7431, -262.879, -277.865, 0.37 ) }
    dend_103 { pt3dadd( -45.1083, -263.193, -278.272, 0.37 ) }
    dend_103 { pt3dadd( -45.2249, -263.218, -278.307, 0.37 ) }
    dend_103 { pt3dadd( -46.9887, -263.533, -278.807, 0.22 ) }
    dend_103 { pt3dadd( -47.7004, -263.606, -278.987, 0.37 ) }
    dend_103 { pt3dadd( -48.3798, -263.603, -279.112, 0.37 ) }
    dend_103 { pt3dadd( -49.9671, -263.493, -279.423, 0.29 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 10/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 12.3527, -125.819, -70.5809, 0.29 ) }
    dend_101 { pt3dadd( 13.1841, -126.134, -71.0423, 0.29 ) }
    dend_101 { pt3dadd( 13.5526, -126.31, -71.2484, 0.37 ) }
    dend_101 { pt3dadd( 13.6129, -126.344, -71.2787, 0.37 ) }
    dend_101 { pt3dadd( 14.3316, -126.862, -71.6505, 0.22 ) }
    dend_101 { pt3dadd( 14.3933, -126.91, -71.6823, 0.22 ) }
    dend_101 { pt3dadd( 14.7885, -127.227, -71.8812, 0.52 ) }
    dend_101 { pt3dadd( 14.8373, -127.275, -71.9055, 0.52 ) }
    dend_101 { pt3dadd( 15.2449, -127.699, -72.0666, 0.52 ) }
    dend_101 { pt3dadd( 15.9749, -128.437, -72.2945, 0.22 ) }
    dend_101 { pt3dadd( 16.0269, -128.488, -72.3071, 0.22 ) }
    dend_101 { pt3dadd( 16.261, -128.718, -72.364, 0.37 ) }
    dend_101 { pt3dadd( 16.6782, -129.127, -72.4642, 0.22 ) }
    dend_101 { pt3dadd( 17.5256, -129.956, -72.6511, 0.96 ) }
    dend_101 { pt3dadd( 17.5788, -130.009, -72.6601, 0.96 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 25/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 12.3527, -125.819, -70.5809, 0.37 ) }
    dend_100 { pt3dadd( 13.3215, -127.565, -71.7773, 0.37 ) }
    dend_100 { pt3dadd( 13.9068, -128.82, -72.6209, 0.66 ) }
    dend_100 { pt3dadd( 14.159, -129.446, -73.0231, 0.88 ) }
    dend_100 { pt3dadd( 14.3946, -130.137, -73.4428, 1.18 ) }
    dend_100 { pt3dadd( 15.0143, -132.319, -74.6975, 0.44 ) }
    dend_100 { pt3dadd( 15.1582, -132.913, -75.0146, 0.29 ) }
    dend_100 { pt3dadd( 15.2732, -133.846, -75.4553, 0.88 ) }
    dend_100 { pt3dadd( 15.3035, -134.388, -75.6714, 1.11 ) }
    dend_100 { pt3dadd( 15.3249, -135.083, -75.8936, 0.66 ) }
    dend_100 { pt3dadd( 15.3257, -135.995, -76.0781, 0.37 ) }
    dend_100 { pt3dadd( 15.3264, -136.841, -76.0823, 0.52 ) }
    dend_100 { pt3dadd( 15.3394, -137.006, -76.068, 0.52 ) }
    dend_100 { pt3dadd( 15.5244, -138.018, -75.913, 0.59 ) }
    dend_100 { pt3dadd( 15.6853, -138.665, -75.786, 0.66 ) }
    dend_100 { pt3dadd( 15.7254, -138.806, -75.7447, 0.66 ) }
    dend_100 { pt3dadd( 15.9494, -139.622, -75.4673, 0.37 ) }
    dend_100 { pt3dadd( 16.1213, -140.544, -75.0084, 0.37 ) }
    dend_100 { pt3dadd( 16.2234, -141.241, -74.6005, 0.37 ) }
    dend_100 { pt3dadd( 16.3193, -141.971, -74.1369, 0.96 ) }
    dend_100 { pt3dadd( 16.4825, -143.072, -73.3923, 1.25 ) }
    dend_100 { pt3dadd( 16.6701, -144.039, -72.7315, 0.96 ) }
    dend_100 { pt3dadd( 17.1595, -146.373, -71.0157, 0.52 ) }
    dend_100 { pt3dadd( 17.3721, -147.327, -70.2853, 0.59 ) }
    dend_100 { pt3dadd( 17.5097, -147.894, -69.8421, 0.74 ) }
    dend_100 { pt3dadd( 17.7039, -148.601, -69.2983, 0.74 ) }
    dend_100 { pt3dadd( 18.0726, -149.728, -68.518, 0.29 ) }
    dend_100 { pt3dadd( 18.4495, -150.721, -67.8875, 0.66 ) }
    dend_100 { pt3dadd( 18.4779, -150.792, -67.8573, 0.66 ) }
    dend_100 { pt3dadd( 18.6708, -151.421, -67.6436, 0.29 ) }
    dend_100 { pt3dadd( 18.816, -152.088, -67.474, 0.74 ) }
    dend_100 { pt3dadd( 18.9171, -152.804, -67.3599, 0.88 ) }
    dend_100 { pt3dadd( 18.9274, -152.885, -67.35, 0.88 ) }
    dend_100 { pt3dadd( 19.0773, -153.807, -67.2677, 0.37 ) }
    dend_100 { pt3dadd( 19.2659, -154.793, -67.1551, 0.59 ) }
    dend_100 { pt3dadd( 19.3923, -155.367, -67.0764, 0.88 ) }
    dend_100 { pt3dadd( 19.6377, -156.351, -66.9243, 0.29 ) }
    dend_100 { pt3dadd( 19.8388, -157.111, -66.7718, 0.22 ) }
    dend_100 { pt3dadd( 19.9339, -157.461, -66.6916, 0.81 ) }
    dend_100 { pt3dadd( 20.0999, -158.035, -66.5405, 1.18 ) }
    dend_100 { pt3dadd( 20.1246, -158.113, -66.5181, 1.18 ) }
    dend_100 { pt3dadd( 20.4083, -158.989, -66.249, 1.03 ) }
    dend_100 { pt3dadd( 20.711, -160.205, -65.8013, 0.29 ) }
    dend_100 { pt3dadd( 20.8796, -161.333, -65.3724, 0.22 ) }
    dend_100 { pt3dadd( 20.8826, -161.444, -65.3266, 0.22 ) }
    dend_100 { pt3dadd( 20.8396, -162.275, -64.9702, 0.29 ) }
    dend_100 { pt3dadd( 20.7851, -162.986, -64.6659, 1.18 ) }
    dend_100 { pt3dadd( 20.6735, -164.444, -63.9901, 0.74 ) }
    dend_100 { pt3dadd( 20.6251, -165.194, -63.6369, 0.52 ) }
    dend_100 { pt3dadd( 20.5798, -166.151, -63.1239, 0.29 ) }
    dend_100 { pt3dadd( 20.5392, -166.941, -62.6425, 0.52 ) }
    dend_100 { pt3dadd( 20.5026, -167.742, -62.0805, 0.96 ) }
    dend_100 { pt3dadd( 20.523, -168.818, -61.2988, 1.18 ) }
    dend_100 { pt3dadd( 20.5915, -169.833, -60.5028, 1.03 ) }
    dend_100 { pt3dadd( 20.6908, -171.198, -59.379, 0.74 ) }
    dend_100 { pt3dadd( 20.7686, -172.662, -58.1905, 0.66 ) }
    dend_100 { pt3dadd( 20.7724, -173.565, -57.4994, 1.03 ) }
    dend_100 { pt3dadd( 20.734, -174.824, -56.6315, 0.88 ) }
    dend_100 { pt3dadd( 20.6811, -176.276, -55.7885, 0.74 ) }
    dend_100 { pt3dadd( 20.659, -177.38, -55.2796, 0.74 ) }
    dend_100 { pt3dadd( 20.6646, -178.416, -54.9489, 0.74 ) }
    dend_100 { pt3dadd( 20.694, -179.668, -54.6859, 0.52 ) }
    dend_100 { pt3dadd( 20.7296, -180.68, -54.5315, 0.52 ) }
    dend_100 { pt3dadd( 20.7791, -181.745, -54.4067, 0.44 ) }
    dend_100 { pt3dadd( 20.859, -182.763, -54.334, 0.74 ) }
    dend_100 { pt3dadd( 20.9434, -183.514, -54.2777, 0.96 ) }
    dend_100 { pt3dadd( 21.0362, -184.196, -54.2209, 0.96 ) }
    dend_100 { pt3dadd( 21.2456, -185.599, -54.1005, 0.37 ) }
    dend_100 { pt3dadd( 21.4551, -186.778, -53.9946, 0.37 ) }
    dend_100 { pt3dadd( 21.4689, -186.846, -53.9882, 0.37 ) }
    dend_100 { pt3dadd( 21.7218, -187.735, -53.886, 0.66 ) }
    dend_100 { pt3dadd( 21.9297, -188.399, -53.8081, 0.88 ) }
    dend_100 { pt3dadd( 22.2307, -189.248, -53.7103, 0.59 ) }
    dend_100 { pt3dadd( 22.5645, -190.047, -53.6334, 0.22 ) }
    dend_100 { pt3dadd( 22.6045, -190.121, -53.6226, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_100 { pt3dadd( 23.1347, -190.98, -53.4695, 0.22 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 1/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -49.1645, -223.742, -64.2988, 0.52 ) }
    dend_96 { pt3dadd( -47.8985, -224.239, -63.4648, 0.52 ) }
    dend_96 { pt3dadd( -47.264, -224.554, -63.0797, 0.52 ) }
    dend_96 { pt3dadd( -46.5325, -224.972, -62.7514, 0.66 ) }
    dend_96 { pt3dadd( -45.7457, -225.46, -62.4768, 0.59 ) }
    dend_96 { pt3dadd( -44.7789, -226.111, -62.1774, 0.29 ) }
    dend_96 { pt3dadd( -44.4775, -226.332, -62.1134, 0.59 ) }
    dend_96 { pt3dadd( -44.0875, -226.632, -62.1072, 0.59 ) }
    dend_96 { pt3dadd( -42.9767, -227.536, -62.1719, 0.29 ) }
    dend_96 { pt3dadd( -42.3628, -228.071, -62.2355, 0.88 ) }
    dend_96 { pt3dadd( -42.094, -228.305, -62.2781, 0.88 ) }
    dend_96 { pt3dadd( -40.5671, -229.428, -62.6379, 0.29 ) }
    dend_96 { pt3dadd( -39.5185, -230.072, -62.9319, 0.59 ) }
    dend_96 { pt3dadd( -39.0264, -230.305, -63.102, 0.44 ) }
    dend_96 { pt3dadd( -38.9743, -230.325, -63.1226, 0.44 ) }
    dend_96 { pt3dadd( -37.7711, -230.693, -63.6322, 0.44 ) }
    dend_96 { pt3dadd( -35.6225, -231.196, -64.5704, 0.29 ) }
    dend_96 { pt3dadd( -35.1711, -231.269, -64.7678, 0.29 ) }
    dend_96 { pt3dadd( -33.1853, -231.518, -65.5563, 0.29 ) }
    dend_96 { pt3dadd( -33.1234, -231.525, -65.5828, 0.29 ) }
    dend_96 { pt3dadd( -33.0671, -231.532, -65.6059, 0.44 ) }
    dend_96 { pt3dadd( -32.9557, -231.546, -65.6494, 0.44 ) }
    dend_96 { pt3dadd( -32.1115, -231.656, -65.9786, 0.29 ) }
    dend_96 { pt3dadd( -31.4005, -231.742, -66.2542, 0.81 ) }
    dend_96 { pt3dadd( -25.7661, -232.396, -68.4273, 0.29 ) }
    dend_96 { pt3dadd( -24.5563, -232.533, -68.8972, 0.22 ) }
    dend_96 { pt3dadd( -23.2824, -232.689, -69.4064, 0.44 ) }
    dend_96 { pt3dadd( -20.8335, -233.045, -70.4551, 0.29 ) }
    dend_96 { pt3dadd( -20.3591, -233.121, -70.6716, 0.88 ) }
    dend_96 { pt3dadd( -20.0326, -233.195, -70.8309, 0.88 ) }
    dend_96 { pt3dadd( -19.9805, -233.21, -70.8551, 0.88 ) }
    dend_96 { pt3dadd( -17.4157, -234.003, -72.131, 0.29 ) }
    dend_96 { pt3dadd( -14.9051, -234.759, -73.4565, 0.52 ) }
    dend_96 { pt3dadd( -14.855, -234.774, -73.4838, 0.52 ) }
    dend_96 { pt3dadd( -11.5812, -235.714, -75.3038, 0.22 ) }
    dend_96 { pt3dadd( -10.8165, -235.92, -75.7309, 0.37 ) }
    dend_96 { pt3dadd( -9.33846, -236.298, -76.5601, 0.96 ) }
    dend_96 { pt3dadd( -7.38669, -236.72, -77.6565, 0.22 ) }
    dend_96 { pt3dadd( -7.05817, -236.774, -77.8372, 0.59 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 40/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -49.1645, -223.742, -64.2988, 0.81 ) }
    dend_95 { pt3dadd( -49.2565, -224.407, -64.4738, 0.81 ) }
    dend_95 { pt3dadd( -49.3388, -225.031, -64.6143, 1.03 ) }
    dend_95 { pt3dadd( -49.4531, -225.96, -64.7926, 0.96 ) }
    dend_95 { pt3dadd( -49.5434, -226.796, -64.9231, 0.74 ) }
    dend_95 { pt3dadd( -49.6581, -227.527, -64.9548, 0.29 ) }
    dend_95 { pt3dadd( -49.7475, -227.978, -64.942, 0.29 ) }
    dend_95 { pt3dadd( -49.828, -228.31, -64.9, 0.52 ) }
    dend_95 { pt3dadd( -49.929, -228.602, -64.8377, 0.52 ) }
    dend_95 { pt3dadd( -50.0951, -228.971, -64.7324, 0.52 ) }
    dend_95 { pt3dadd( -50.7102, -230.23, -64.3657, 0.29 ) }
    dend_95 { pt3dadd( -50.9785, -230.795, -64.2169, 0.52 ) }
    dend_95 { pt3dadd( -51.1349, -231.14, -64.1234, 0.81 ) }
    dend_95 { pt3dadd( -51.4159, -231.804, -63.9188, 0.88 ) }
    dend_95 { pt3dadd( -51.5938, -232.344, -63.7309, 1.18 ) }
    dend_95 { pt3dadd( -51.7727, -233.051, -63.4687, 1.4 ) }
    dend_95 { pt3dadd( -51.9303, -234.097, -63.0711, 0.52 ) }
    dend_95 { pt3dadd( -52.0007, -235.05, -62.6664, 0.52 ) }
    dend_95 { pt3dadd( -52.0051, -236.178, -62.1664, 0.52 ) }
    dend_95 { pt3dadd( -51.9494, -237.33, -61.6536, 0.74 ) }
    dend_95 { pt3dadd( -51.9446, -237.399, -61.624, 0.74 ) }
    dend_95 { pt3dadd( -51.8872, -238.222, -61.3291, 0.29 ) }
    dend_95 { pt3dadd( -51.8408, -239.161, -61.0911, 0.29 ) }
    dend_95 { pt3dadd( -51.8027, -240.197, -60.9452, 0.66 ) }
    dend_95 { pt3dadd( -51.7971, -240.766, -60.9183, 0.88 ) }
    dend_95 { pt3dadd( -51.8306, -241.532, -60.9296, 0.88 ) }
    dend_95 { pt3dadd( -51.8712, -242.711, -61.0015, 0.29 ) }
    dend_95 { pt3dadd( -51.8781, -243.208, -61.0495, 0.88 ) }
    dend_95 { pt3dadd( -51.8747, -243.284, -61.0635, 0.88 ) }
    dend_95 { pt3dadd( -51.8175, -243.807, -61.1836, 1.03 ) }
    dend_95 { pt3dadd( -51.8049, -243.891, -61.203, 1.03 ) }
    dend_95 { pt3dadd( -51.6145, -245.143, -61.4666, 0.74 ) }
    dend_95 { pt3dadd( -51.4573, -246.056, -61.5969, 0.88 ) }
    dend_95 { pt3dadd( -51.2326, -247.288, -61.7206, 1.18 ) }
    dend_95 { pt3dadd( -51.1311, -247.892, -61.7577, 1.18 ) }
    dend_95 { pt3dadd( -51.0255, -248.59, -61.7696, 0.66 ) }
    dend_95 { pt3dadd( -50.9059, -249.519, -61.7375, 0.29 ) }
    dend_95 { pt3dadd( -50.8176, -250.433, -61.6428, 0.29 ) }
    dend_95 { pt3dadd( -50.7776, -251.052, -61.5534, 0.59 ) }
    dend_95 { pt3dadd( -50.7556, -251.82, -61.4033, 0.74 ) }
    dend_95 { pt3dadd( -50.7473, -252.588, -61.2512, 0.74 ) }
    dend_95 { pt3dadd( -50.7861, -253.042, -61.1314, 0.74 ) }
    dend_95 { pt3dadd( -50.878, -253.506, -60.9964, 0.88 ) }
    dend_95 { pt3dadd( -51.0819, -254.247, -60.7599, 0.81 ) }
    dend_95 { pt3dadd( -51.3501, -255.145, -60.4284, 0.81 ) }
    dend_95 { pt3dadd( -51.6237, -256.017, -60.0586, 0.59 ) }
    dend_95 { pt3dadd( -52.1114, -257.585, -59.3228, 0.37 ) }
    dend_95 { pt3dadd( -52.3155, -258.275, -58.9674, 0.52 ) }
    dend_95 { pt3dadd( -52.4551, -258.838, -58.6514, 0.44 ) }
    dend_95 { pt3dadd( -52.5342, -259.337, -58.3461, 0.52 ) }
    dend_95 { pt3dadd( -52.5409, -259.474, -58.2611, 0.52 ) }
    dend_95 { pt3dadd( -52.4764, -259.985, -57.9918, 0.37 ) }
    dend_95 { pt3dadd( -52.4405, -260.134, -57.9397, 0.37 ) }
    dend_95 { pt3dadd( -52.3327, -260.756, -57.7669, 0.81 ) }
    dend_95 { pt3dadd( -52.3098, -261.222, -57.7174, 0.96 ) }
    dend_95 { pt3dadd( -52.3098, -261.289, -57.7225, 0.96 ) }
    dend_95 { pt3dadd( -52.3313, -261.685, -57.8022, 0.81 ) }
    dend_95 { pt3dadd( -52.3832, -262.493, -58.06, 0.52 ) }
    dend_95 { pt3dadd( -52.4223, -263.033, -58.2543, 0.52 ) }
    dend_95 { pt3dadd( -52.4894, -263.978, -58.6055, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_95 { pt3dadd( -52.558, -264.95, -58.9534, 0.74 ) }
    dend_95 { pt3dadd( -52.605, -265.623, -59.1834, 0.88 ) }
    dend_95 { pt3dadd( -52.6933, -266.593, -59.4526, 0.52 ) }
    dend_95 { pt3dadd( -52.8125, -267.569, -59.6489, 0.52 ) }
    dend_95 { pt3dadd( -52.9344, -268.275, -59.7239, 0.74 ) }
    dend_95 { pt3dadd( -53.0808, -268.948, -59.7255, 0.44 ) }
    dend_95 { pt3dadd( -53.1206, -269.102, -59.7135, 0.44 ) }
    dend_95 { pt3dadd( -53.4915, -270.307, -59.5836, 0.44 ) }
    dend_95 { pt3dadd( -53.7729, -271.009, -59.4926, 0.22 ) }
    dend_95 { pt3dadd( -54.0973, -271.663, -59.44, 0.22 ) }
    dend_95 { pt3dadd( -54.35, -272.138, -59.4627, 0.74 ) }
    dend_95 { pt3dadd( -54.3843, -272.203, -59.4737, 0.74 ) }
    dend_95 { pt3dadd( -54.6511, -272.734, -59.6187, 0.96 ) }
    dend_95 { pt3dadd( -54.6813, -272.8, -59.6448, 0.96 ) }
    dend_95 { pt3dadd( -54.9384, -273.432, -59.8824, 0.96 ) }
    dend_95 { pt3dadd( -55.2577, -274.559, -60.2498, 0.44 ) }
    dend_95 { pt3dadd( -55.4259, -275.156, -60.3752, 0.52 ) }
    dend_95 { pt3dadd( -55.4458, -275.227, -60.3846, 0.52 ) }
    dend_95 { pt3dadd( -55.6076, -275.824, -60.4479, 0.81 ) }
    dend_95 { pt3dadd( -55.8074, -276.658, -60.5272, 0.74 ) }
    dend_95 { pt3dadd( -56.0688, -277.861, -60.6168, 0.37 ) }
    dend_95 { pt3dadd( -56.4303, -279.381, -60.7222, 0.37 ) }
    dend_95 { pt3dadd( -56.5919, -279.938, -60.7525, 1.18 ) }
    dend_95 { pt3dadd( -56.9214, -280.951, -60.8006, 0.96 ) }
    dend_95 { pt3dadd( -57.3065, -282.028, -60.8472, 0.52 ) }
    dend_95 { pt3dadd( -57.783, -283.248, -60.8995, 0.52 ) }
    dend_95 { pt3dadd( -58.3539, -284.607, -60.9365, 0.74 ) }
    dend_95 { pt3dadd( -58.9213, -286.04, -60.9663, 0.81 ) }
    dend_95 { pt3dadd( -58.9541, -286.118, -60.9634, 0.81 ) }
    dend_95 { pt3dadd( -59.2514, -286.741, -60.8797, 1.03 ) }
    dend_95 { pt3dadd( -59.2918, -286.817, -60.8642, 1.03 ) }
    dend_95 { pt3dadd( -59.6648, -287.517, -60.6856, 0.52 ) }
    dend_95 { pt3dadd( -59.9935, -288.196, -60.5081, 0.37 ) }
    dend_95 { pt3dadd( -60.2676, -288.863, -60.3599, 0.88 ) }
    dend_95 { pt3dadd( -60.556, -289.585, -60.2083, 0.96 ) }
    dend_95 { pt3dadd( -60.7698, -290.147, -60.0868, 0.74 ) }
    dend_95 { pt3dadd( -60.997, -290.816, -59.9465, 0.22 ) }
    dend_95 { pt3dadd( -61.1971, -291.5, -59.7865, 0.22 ) }
    dend_95 { pt3dadd( -61.3094, -292.091, -59.6129, 0.74 ) }
    dend_95 { pt3dadd( -61.3369, -292.513, -59.4568, 1.03 ) }
    dend_95 { pt3dadd( -61.3086, -293.023, -59.2321, 1.03 ) }
    dend_95 { pt3dadd( -61.2249, -293.65, -58.8651, 0.59 ) }
    dend_95 { pt3dadd( -61.0669, -294.503, -58.2866, 0.37 ) }
    dend_95 { pt3dadd( -60.8997, -295.339, -57.6828, 0.22 ) }
    dend_95 { pt3dadd( -60.7921, -295.969, -57.2416, 0.81 ) }
    dend_95 { pt3dadd( -60.7186, -296.485, -56.9068, 0.81 ) }
    dend_95 { pt3dadd( -60.6216, -297.441, -56.3642, 0.29 ) }
    dend_95 { pt3dadd( -60.5827, -297.931, -56.1175, 0.59 ) }
    dend_95 { pt3dadd( -60.5441, -298.447, -55.9041, 0.74 ) }
    dend_95 { pt3dadd( -60.5114, -299.256, -55.6354, 0.74 ) }
    dend_95 { pt3dadd( -60.4809, -300.0, -55.4437, 0.52 ) }
    dend_95 { pt3dadd( -60.3438, -301.233, -55.2538, 0.22 ) }
    dend_95 { pt3dadd( -60.2411, -301.881, -55.2141, 0.22 ) }
    dend_95 { pt3dadd( -60.1625, -302.344, -55.202, 0.74 ) }
    dend_95 { pt3dadd( -60.0586, -302.959, -55.2128, 0.74 ) }
    dend_95 { pt3dadd( -59.8147, -304.429, -55.2939, 0.22 ) }
    dend_95 { pt3dadd( -59.6078, -305.989, -55.4522, 0.81 ) }
    dend_95 { pt3dadd( -59.555, -306.631, -55.5353, 0.81 ) }
    dend_95 { pt3dadd( -59.5239, -307.724, -55.6752, 0.22 ) }
    dend_95 { pt3dadd( -59.5485, -308.608, -55.7685, 0.22 ) }
    dend_95 { pt3dadd( -59.5773, -308.986, -55.7998, 0.81 ) }
    dend_95 { pt3dadd( -59.6524, -309.54, -55.8277, 1.03 ) }
    dend_95 { pt3dadd( -59.8916, -310.822, -55.8263, 0.29 ) }
    dend_95 { pt3dadd( -59.9757, -311.289, -55.8245, 0.29 ) }
    dend_95 { pt3dadd( -60.172, -312.358, -55.826, 0.29 ) }
    dend_95 { pt3dadd( -60.358, -313.274, -55.8189, 0.15 ) }
    dend_95 { pt3dadd( -60.438, -313.641, -55.82, 0.52 ) }
    dend_95 { pt3dadd( -60.5031, -313.949, -55.8195, 0.66 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 68/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -20.5834, -82.9121, -2.59767, 0.96 ) }
    dend_67 { pt3dadd( -20.3071, -83.9711, -2.98257, 0.96 ) }
    dend_67 { pt3dadd( -20.0485, -85.0891, -3.36454, 0.96 ) }
    dend_67 { pt3dadd( -19.8027, -86.3384, -3.75392, 0.96 ) }
    dend_67 { pt3dadd( -19.5871, -87.6306, -4.12347, 0.81 ) }
    dend_67 { pt3dadd( -19.4024, -88.9267, -4.51358, 0.66 ) }
    dend_67 { pt3dadd( -19.2727, -90.0221, -4.84076, 0.66 ) }
    dend_67 { pt3dadd( -19.264, -90.1464, -4.87501, 0.66 ) }
    dend_67 { pt3dadd( -19.2231, -90.9604, -5.09896, 0.88 ) }
    dend_67 { pt3dadd( -19.1888, -91.4984, -5.24272, 1.03 ) }
    dend_67 { pt3dadd( -18.9735, -92.8783, -5.63186, 0.74 ) }
    dend_67 { pt3dadd( -18.7488, -93.713, -5.87532, 0.74 ) }
    dend_67 { pt3dadd( -18.4096, -94.6019, -6.14204, 0.74 ) }
    dend_67 { pt3dadd( -17.8996, -95.7056, -6.46585, 0.96 ) }
    dend_67 { pt3dadd( -17.5414, -96.358, -6.64702, 1.03 ) }
    dend_67 { pt3dadd( -17.0443, -97.2307, -6.85004, 1.03 ) }
    dend_67 { pt3dadd( -16.4608, -98.3285, -7.0322, 0.88 ) }
    dend_67 { pt3dadd( -16.1387, -99.0639, -7.12659, 0.88 ) }
    dend_67 { pt3dadd( -16.0844, -99.2968, -7.1444, 0.88 ) }
    dend_67 { pt3dadd( -16.1271, -99.8764, -7.10414, 0.59 ) }
    dend_67 { pt3dadd( -16.578, -100.996, -6.93382, 0.52 ) }
    dend_67 { pt3dadd( -17.1621, -101.831, -6.75529, 0.74 ) }
    dend_67 { pt3dadd( -17.6882, -102.367, -6.56791, 0.66 ) }
    dend_67 { pt3dadd( -18.434, -103.014, -6.29525, 0.52 ) }
    dend_67 { pt3dadd( -19.6229, -103.958, -5.82375, 0.52 ) }
    dend_67 { pt3dadd( -20.2243, -104.413, -5.57241, 0.74 ) }
    dend_67 { pt3dadd( -21.0003, -105.003, -5.24821, 1.03 ) }
    dend_67 { pt3dadd( -21.972, -105.806, -4.85958, 1.03 ) }
    dend_67 { pt3dadd( -22.6343, -106.407, -4.61878, 1.03 ) }
    dend_67 { pt3dadd( -23.5318, -107.326, -4.33268, 0.74 ) }
    dend_67 { pt3dadd( -24.0837, -107.971, -4.21673, 0.66 ) }
    dend_67 { pt3dadd( -24.6429, -108.716, -4.09326, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_67 { pt3dadd( -25.0863, -109.418, -3.97608, 0.52 ) }
    dend_67 { pt3dadd( -25.1161, -109.474, -3.96825, 0.52 ) }
    dend_67 { pt3dadd( -25.3964, -110.073, -3.85051, 0.66 ) }
    dend_67 { pt3dadd( -25.6355, -110.67, -3.71024, 0.81 ) }
    dend_67 { pt3dadd( -25.9609, -111.499, -3.46687, 0.52 ) }
    dend_67 { pt3dadd( -26.3626, -112.519, -3.20721, 0.52 ) }
    dend_67 { pt3dadd( -26.448, -112.726, -3.19, 0.81 ) }
    dend_67 { pt3dadd( -26.7611, -113.394, -3.26618, 0.81 ) }
    dend_67 { pt3dadd( -27.0765, -113.933, -3.44827, 0.96 ) }
    dend_67 { pt3dadd( -27.5875, -114.615, -3.86817, 1.03 ) }
    dend_67 { pt3dadd( -28.3505, -115.355, -4.5319, 1.18 ) }
    dend_67 { pt3dadd( -29.3168, -116.113, -5.36007, 0.81 ) }
    dend_67 { pt3dadd( -29.7921, -116.439, -5.76817, 0.88 ) }
    dend_67 { pt3dadd( -30.3947, -116.794, -6.26291, 1.18 ) }
    dend_67 { pt3dadd( -31.0356, -117.148, -6.7459, 1.55 ) }
    dend_67 { pt3dadd( -31.9778, -117.677, -7.32841, 0.66 ) }
    dend_67 { pt3dadd( -32.4158, -117.957, -7.51748, 0.66 ) }
    dend_67 { pt3dadd( -32.8135, -118.278, -7.61593, 0.52 ) }
    dend_67 { pt3dadd( -33.5013, -118.97, -7.70682, 0.52 ) }
    dend_67 { pt3dadd( -34.0257, -119.637, -7.7163, 0.37 ) }
    dend_67 { pt3dadd( -34.595, -120.545, -7.60273, 0.37 ) }
    dend_67 { pt3dadd( -34.9372, -121.222, -7.47501, 0.74 ) }
    dend_67 { pt3dadd( -35.3057, -122.016, -7.27965, 1.25 ) }
    dend_67 { pt3dadd( -35.3285, -122.063, -7.26642, 1.25 ) }
    dend_67 { pt3dadd( -35.6833, -122.746, -7.07496, 1.18 ) }
    dend_67 { pt3dadd( -36.2586, -123.722, -6.81368, 1.03 ) }
    dend_67 { pt3dadd( -36.6514, -124.309, -6.68765, 0.66 ) }
    dend_67 { pt3dadd( -37.1403, -124.987, -6.57654, 0.37 ) }
    dend_67 { pt3dadd( -37.7878, -125.847, -6.49617, 0.37 ) }
    dend_67 { pt3dadd( -38.2417, -126.427, -6.47536, 0.44 ) }
    dend_67 { pt3dadd( -38.2887, -126.483, -6.47745, 0.44 ) }
    dend_67 { pt3dadd( -38.8871, -127.145, -6.56744, 0.37 ) }
    dend_67 { pt3dadd( -39.3304, -127.633, -6.64805, 0.59 ) }
    dend_67 { pt3dadd( -39.6011, -127.943, -6.70659, 0.59 ) }
    dend_67 { pt3dadd( -40.0563, -128.522, -6.82215, 0.44 ) }
    dend_67 { pt3dadd( -40.4245, -129.02, -6.92252, 0.66 ) }
    dend_67 { pt3dadd( -40.8334, -129.589, -7.03316, 0.88 ) }
    dend_67 { pt3dadd( -41.2824, -130.239, -7.15469, 0.88 ) }
    dend_67 { pt3dadd( -41.9107, -131.155, -7.34045, 0.66 ) }
    dend_67 { pt3dadd( -42.3931, -131.885, -7.5041, 0.96 ) }
    dend_67 { pt3dadd( -42.7491, -132.41, -7.63504, 1.18 ) }
    dend_67 { pt3dadd( -43.5235, -133.446, -7.90495, 0.88 ) }
    dend_67 { pt3dadd( -43.8477, -133.813, -8.00821, 0.96 ) }
    dend_67 { pt3dadd( -44.636, -134.506, -8.22785, 0.59 ) }
    dend_67 { pt3dadd( -44.6819, -134.533, -8.23823, 0.59 ) }
    dend_67 { pt3dadd( -45.6096, -134.869, -8.37781, 0.59 ) }
    dend_67 { pt3dadd( -46.4249, -135.05, -8.46848, 0.52 ) }
    dend_67 { pt3dadd( -47.0168, -135.137, -8.51536, 0.52 ) }
    dend_67 { pt3dadd( -47.6315, -135.234, -8.51103, 0.74 ) }
    dend_67 { pt3dadd( -48.2801, -135.352, -8.46266, 0.96 ) }
    dend_67 { pt3dadd( -48.9157, -135.495, -8.40503, 0.81 ) }
    dend_67 { pt3dadd( -50.0353, -135.818, -8.29291, 0.96 ) }
    dend_67 { pt3dadd( -50.7601, -136.082, -8.22915, 0.96 ) }
    dend_67 { pt3dadd( -51.8571, -136.534, -8.12919, 0.44 ) }
    dend_67 { pt3dadd( -52.5231, -136.844, -8.07375, 0.44 ) }
    dend_67 { pt3dadd( -53.2416, -137.212, -8.03435, 0.66 ) }
    dend_67 { pt3dadd( -53.8449, -137.522, -8.03645, 0.59 ) }
    dend_67 { pt3dadd( -54.5557, -137.891, -8.06679, 0.59 ) }
    dend_67 { pt3dadd( -54.6215, -137.925, -8.07359, 0.59 ) }
    dend_67 { pt3dadd( -55.165, -138.212, -8.18172, 0.88 ) }
    dend_67 { pt3dadd( -56.1408, -138.799, -8.39964, 0.96 ) }
    dend_67 { pt3dadd( -56.8591, -139.297, -8.57617, 0.37 ) }
    dend_67 { pt3dadd( -56.9628, -139.383, -8.59596, 0.37 ) }
    dend_67 { pt3dadd( -57.622, -140.069, -8.67368, 0.37 ) }
    dend_67 { pt3dadd( -58.1105, -140.688, -8.69118, 0.29 ) }
    dend_67 { pt3dadd( -58.5409, -141.367, -8.66218, 0.29 ) }
    dend_67 { pt3dadd( -58.8402, -141.905, -8.61493, 0.52 ) }
    dend_67 { pt3dadd( -59.475, -143.051, -8.49823, 1.03 ) }
    dend_67 { pt3dadd( -59.8078, -143.611, -8.44609, 1.25 ) }
    dend_67 { pt3dadd( -60.0913, -144.048, -8.41799, 1.25 ) }
    dend_67 { pt3dadd( -60.6761, -144.786, -8.40189, 0.88 ) }
    dend_67 { pt3dadd( -61.2847, -145.405, -8.43739, 0.74 ) }
    dend_67 { pt3dadd( -61.9473, -145.974, -8.54255, 0.74 ) }
    dend_67 { pt3dadd( -62.4857, -146.376, -8.67683, 0.96 ) }
    dend_67 { pt3dadd( -63.2384, -146.894, -8.88288, 0.66 ) }
    dend_67 { pt3dadd( -63.8695, -147.324, -9.10289, 0.74 ) }
    dend_67 { pt3dadd( -64.2428, -147.589, -9.24947, 1.03 ) }
    dend_67 { pt3dadd( -64.7634, -147.999, -9.47329, 1.4 ) }
    dend_67 { pt3dadd( -64.8034, -148.036, -9.49148, 1.4 ) }
    dend_67 { pt3dadd( -65.1762, -148.469, -9.66501, 1.4 ) }
    dend_67 { pt3dadd( -65.8366, -149.504, -9.95865, 0.52 ) }
    dend_67 { pt3dadd( -66.1543, -150.151, -10.1072, 0.81 ) }
    dend_67 { pt3dadd( -66.3663, -150.618, -10.198, 0.88 ) }
    dend_67 { pt3dadd( -66.5761, -151.099, -10.2732, 0.52 ) }
    dend_67 { pt3dadd( -66.9026, -151.813, -10.3799, 0.44 ) }
    dend_67 { pt3dadd( -67.1908, -152.423, -10.4615, 0.44 ) }
    dend_67 { pt3dadd( -67.48, -152.928, -10.5127, 0.44 ) }
    dend_67 { pt3dadd( -67.8314, -153.404, -10.5965, 0.66 ) }
    dend_67 { pt3dadd( -67.9276, -153.493, -10.6082, 0.66 ) }
    dend_67 { pt3dadd( -68.3464, -153.759, -10.6267, 0.88 ) }
    dend_67 { pt3dadd( -68.4307, -153.798, -10.6263, 0.88 ) }
    dend_67 { pt3dadd( -68.981, -154.043, -10.5998, 0.96 ) }
    dend_67 { pt3dadd( -69.2993, -154.204, -10.5759, 0.66 ) }
    dend_67 { pt3dadd( -70.0825, -154.653, -10.5144, 0.52 ) }
    dend_67 { pt3dadd( -70.6151, -154.985, -10.4804, 0.44 ) }
    dend_67 { pt3dadd( -71.0055, -155.257, -10.4654, 0.74 ) }
    dend_67 { pt3dadd( -71.498, -155.638, -10.4635, 0.81 ) }
    dend_67 { pt3dadd( -72.1073, -156.204, -10.4851, 0.52 ) }
    dend_67 { pt3dadd( -72.1565, -156.259, -10.4929, 0.52 ) }
    dend_67 { pt3dadd( -72.4631, -156.657, -10.588, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_67 { pt3dadd( -72.9022, -157.31, -10.7563, 0.96 ) }
    dend_67 { pt3dadd( -73.1395, -157.711, -10.8647, 1.11 ) }
    dend_67 { pt3dadd( -73.4906, -158.312, -11.028, 0.81 ) }
    dend_67 { pt3dadd( -73.9614, -159.085, -11.2725, 0.66 ) }
    dend_67 { pt3dadd( -73.9904, -159.128, -11.2889, 0.66 ) }
    dend_67 { pt3dadd( -74.4747, -159.721, -11.5329, 0.52 ) }
    dend_67 { pt3dadd( -74.9922, -160.159, -11.7361, 0.37 ) }
    dend_67 { pt3dadd( -75.4459, -160.384, -11.8224, 0.29 ) }
    dend_67 { pt3dadd( -76.2238, -160.614, -11.8506, 0.66 ) }
    dend_67 { pt3dadd( -76.6862, -160.721, -11.8213, 0.74 ) }
    dend_67 { pt3dadd( -77.6254, -160.985, -11.6842, 0.29 ) }
    dend_67 { pt3dadd( -78.0629, -161.136, -11.5962, 0.66 ) }
    dend_67 { pt3dadd( -78.6626, -161.407, -11.4577, 0.88 ) }
    dend_67 { pt3dadd( -79.2401, -161.737, -11.324, 0.88 ) }
    dend_67 { pt3dadd( -79.5649, -161.952, -11.2516, 0.88 ) }
    dend_67 { pt3dadd( -80.5015, -162.623, -11.0934, 0.58 ) }
    dend_67 { pt3dadd( -81.1004, -163.081, -11.0449, 0.81 ) }
    dend_67 { pt3dadd( -81.6333, -163.502, -11.0269, 1.11 ) }
    dend_67 { pt3dadd( -82.1091, -163.89, -11.0387, 0.74 ) }
    dend_67 { pt3dadd( -82.6472, -164.322, -11.0529, 0.88 ) }
    dend_67 { pt3dadd( -83.182, -164.71, -11.0767, 0.81 ) }
    dend_67 { pt3dadd( -83.709, -165.045, -11.116, 0.74 ) }
    dend_67 { pt3dadd( -84.5621, -165.534, -11.1725, 0.44 ) }
    dend_67 { pt3dadd( -85.3561, -165.964, -11.2215, 0.74 ) }
    dend_67 { pt3dadd( -85.9968, -166.284, -11.2544, 0.88 ) }
    dend_67 { pt3dadd( -86.869, -166.623, -11.2249, 0.52 ) }
    dend_67 { pt3dadd( -87.3722, -166.788, -11.1605, 0.59 ) }
    dend_67 { pt3dadd( -88.3112, -167.064, -10.9714, 0.59 ) }
    dend_67 { pt3dadd( -88.3615, -167.079, -10.9584, 0.59 ) }
    dend_67 { pt3dadd( -88.8601, -167.282, -10.8117, 0.66 ) }
    dend_67 { pt3dadd( -90.2475, -168.115, -10.4397, 0.59 ) }
    dend_67 { pt3dadd( -90.8712, -168.624, -10.2852, 0.59 ) }
    dend_67 { pt3dadd( -91.2652, -169.025, -10.2235, 0.81 ) }
    dend_67 { pt3dadd( -91.833, -169.693, -10.1852, 0.52 ) }
    dend_67 { pt3dadd( -92.419, -170.45, -10.221, 0.66 ) }
    dend_67 { pt3dadd( -93.0512, -171.363, -10.3575, 0.44 ) }
    dend_67 { pt3dadd( -93.4063, -171.954, -10.4981, 1.11 ) }
    dend_67 { pt3dadd( -94.0757, -173.09, -10.805, 0.59 ) }
    dend_67 { pt3dadd( -94.1074, -173.143, -10.8183, 0.59 ) }
    dend_67 { pt3dadd( -94.4949, -173.757, -10.9608, 0.44 ) }
    dend_67 { pt3dadd( -94.6856, -174.024, -11.0164, 0.44 ) }
    dend_67 { pt3dadd( -95.3339, -174.777, -11.1038, 0.44 ) }
    dend_67 { pt3dadd( -95.794, -175.196, -11.1163, 0.37 ) }
    dend_67 { pt3dadd( -96.3272, -175.558, -11.0772, 0.29 ) }
    dend_67 { pt3dadd( -96.793, -175.82, -10.9938, 0.66 ) }
    dend_67 { pt3dadd( -97.257, -176.026, -10.8767, 1.03 ) }
    dend_67 { pt3dadd( -97.8357, -176.234, -10.7201, 1.03 ) }
    dend_67 { pt3dadd( -98.2681, -176.361, -10.6041, 0.81 ) }
    dend_67 { pt3dadd( -99.0115, -176.596, -10.4183, 0.52 ) }
    dend_67 { pt3dadd( -99.8249, -176.947, -10.2436, 0.66 ) }
    dend_67 { pt3dadd( -100.275, -177.221, -10.1559, 0.29 ) }
    dend_67 { pt3dadd( -100.496, -177.392, -10.1197, 0.59 ) }
    dend_67 { pt3dadd( -100.892, -177.725, -10.0861, 0.81 ) }
    dend_67 { pt3dadd( -101.352, -178.097, -10.0747, 0.81 ) }
    dend_67 { pt3dadd( -101.943, -178.503, -10.1063, 0.52 ) }
    dend_67 { pt3dadd( -102.673, -178.94, -10.2089, 0.74 ) }
    dend_67 { pt3dadd( -102.723, -178.965, -10.2161, 0.74 ) }
    dend_67 { pt3dadd( -103.486, -179.312, -10.3262, 0.44 ) }
    dend_67 { pt3dadd( -104.025, -179.55, -10.412, 0.74 ) }
    dend_67 { pt3dadd( -104.613, -179.811, -10.5115, 1.11 ) }
    dend_67 { pt3dadd( -105.478, -180.223, -10.6638, 0.59 ) }
    dend_67 { pt3dadd( -105.991, -180.517, -10.7565, 0.66 ) }
    dend_67 { pt3dadd( -106.502, -180.887, -10.8503, 0.81 ) }
    dend_67 { pt3dadd( -107.09, -181.443, -10.9587, 0.52 ) }
    dend_67 { pt3dadd( -107.462, -181.859, -11.0274, 0.66 ) }
    dend_67 { pt3dadd( -107.792, -182.248, -11.0872, 0.66 ) }
    dend_67 { pt3dadd( -108.121, -182.621, -11.171, 0.44 ) }
    dend_67 { pt3dadd( -108.164, -182.666, -11.1846, 0.44 ) }
    dend_67 { pt3dadd( -108.852, -183.218, -11.4236, 0.37 ) }
    dend_67 { pt3dadd( -108.969, -183.279, -11.4657, 0.37 ) }
    dend_67 { pt3dadd( -109.773, -183.461, -11.7563, 0.37 ) }
    dend_67 { pt3dadd( -110.502, -183.474, -12.0671, 0.29 ) }
    dend_67 { pt3dadd( -110.936, -183.434, -12.2669, 0.37 ) }
    dend_67 { pt3dadd( -111.398, -183.374, -12.4645, 0.44 ) }
    dend_67 { pt3dadd( -112.034, -183.237, -12.747, 0.37 ) }
    dend_67 { pt3dadd( -112.902, -183.011, -13.1334, 0.29 ) }
    dend_67 { pt3dadd( -113.865, -182.681, -13.5565, 0.22 ) }
    dend_67 { pt3dadd( -114.064, -182.604, -13.6317, 0.44 ) }
    dend_67 { pt3dadd( -114.966, -182.233, -14.021, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 79/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -20.5834, -82.9121, -2.59767, 0.74 ) }
    dend_66 { pt3dadd( -21.1129, -83.3711, -2.77086, 0.74 ) }
    dend_66 { pt3dadd( -21.7591, -83.935, -2.98217, 0.44 ) }
    dend_66 { pt3dadd( -22.3946, -84.4813, -3.19336, 0.59 ) }
    dend_66 { pt3dadd( -23.1642, -85.148, -3.49202, 0.37 ) }
    dend_66 { pt3dadd( -23.7535, -85.6648, -3.72091, 0.59 ) }
    dend_66 { pt3dadd( -24.0073, -85.8855, -3.82048, 0.88 ) }
    dend_66 { pt3dadd( -24.0635, -85.9344, -3.84531, 0.88 ) }
    dend_66 { pt3dadd( -24.2961, -86.1388, -3.96218, 1.11 ) }
    dend_66 { pt3dadd( -24.8033, -86.5281, -4.2555, 0.88 ) }
    dend_66 { pt3dadd( -25.411, -86.8939, -4.64709, 0.37 ) }
    dend_66 { pt3dadd( -25.7792, -87.0715, -4.90697, 0.66 ) }
    dend_66 { pt3dadd( -26.3285, -87.3034, -5.34476, 0.81 ) }
    dend_66 { pt3dadd( -26.8285, -87.5123, -5.76105, 0.74 ) }
    dend_66 { pt3dadd( -27.516, -87.7897, -6.35071, 0.88 ) }
    dend_66 { pt3dadd( -28.0004, -87.979, -6.76672, 0.74 ) }
    dend_66 { pt3dadd( -28.7163, -88.29, -7.43678, 0.52 ) }
    dend_66 { pt3dadd( -29.5636, -88.7245, -8.23285, 0.52 ) }
    dend_66 { pt3dadd( -30.0975, -89.0362, -8.67712, 0.74 ) }
    dend_66 { pt3dadd( -30.15, -89.0697, -8.70949, 0.74 ) }
    dend_66 { pt3dadd( -30.8586, -89.4303, -8.68776, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_66 { pt3dadd( -31.9656, -89.8967, -8.32611, 1.03 ) }
    dend_66 { pt3dadd( -32.6885, -90.1674, -8.01052, 1.18 ) }
    dend_66 { pt3dadd( -33.7816, -90.5248, -7.46948, 0.96 ) }
    dend_66 { pt3dadd( -35.3175, -90.9709, -6.66305, 1.18 ) }
    dend_66 { pt3dadd( -39.8014, -92.1683, -4.30288, 0.66 ) }
    dend_66 { pt3dadd( -40.4572, -92.3337, -3.93356, 0.66 ) }
    dend_66 { pt3dadd( -41.1549, -92.5122, -3.5318, 0.81 ) }
    dend_66 { pt3dadd( -41.8073, -92.6933, -3.17456, 0.81 ) }
    dend_66 { pt3dadd( -41.8856, -92.7201, -3.13558, 0.81 ) }
    dend_66 { pt3dadd( -42.7717, -93.1219, -2.7225, 0.88 ) }
    dend_66 { pt3dadd( -44.2268, -93.8491, -2.0242, 0.88 ) }
    dend_66 { pt3dadd( -45.1531, -94.2858, -1.46288, 0.74 ) }
    dend_66 { pt3dadd( -45.5812, -94.4826, -1.17385, 0.96 ) }
    dend_66 { pt3dadd( -47.4441, -95.361, 0.131511, 0.44 ) }
    dend_66 { pt3dadd( -49.0599, -96.1368, 1.28663, 1.25 ) }
    dend_66 { pt3dadd( -51.2599, -97.2321, 2.89864, 0.59 ) }
    dend_66 { pt3dadd( -52.5525, -97.8884, 3.79802, 0.96 ) }
    dend_66 { pt3dadd( -52.614, -97.9213, 3.83883, 0.96 ) }
    dend_66 { pt3dadd( -53.3929, -98.3884, 4.29996, 0.59 ) }
    dend_66 { pt3dadd( -54.1145, -98.8976, 4.61991, 0.52 ) }
    dend_66 { pt3dadd( -55.3559, -99.9135, 5.00453, 0.81 ) }
    dend_66 { pt3dadd( -56.7785, -101.276, 5.32166, 0.44 ) }
    dend_66 { pt3dadd( -57.4775, -101.986, 5.45041, 0.59 ) }
    dend_66 { pt3dadd( -58.1123, -102.635, 5.6019, 0.74 ) }
    dend_66 { pt3dadd( -58.8212, -103.33, 5.84862, 0.44 ) }
    dend_66 { pt3dadd( -59.65, -104.132, 6.20315, 0.44 ) }
    dend_66 { pt3dadd( -60.5719, -105.045, 6.63625, 0.29 ) }
    dend_66 { pt3dadd( -61.3755, -105.87, 7.08901, 0.44 ) }
    dend_66 { pt3dadd( -62.4153, -106.901, 7.79492, 0.81 ) }
    dend_66 { pt3dadd( -63.6425, -108.059, 8.77227, 1.03 ) }
    dend_66 { pt3dadd( -63.6852, -108.098, 8.81243, 1.03 ) }
    dend_66 { pt3dadd( -72.0458, -114.87, 11.5181, 1.03 ) }
    dend_66 { pt3dadd( -80.6781, -121.512, 13.6291, 1.03 ) }
    dend_66 { pt3dadd( -88.1437, -129.527, 15.3939, 1.03 ) }
    dend_66 { pt3dadd( -96.3085, -137.031, 15.7449, 1.03 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 35/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -3.62489, -63.1524, -5.37844, 1.4 ) }
    dend_48 { pt3dadd( -3.10335, -63.6749, -5.38521, 1.4 ) }
    dend_48 { pt3dadd( -2.24618, -64.4862, -5.49114, 1.11 ) }
    dend_48 { pt3dadd( -1.19766, -65.5176, -5.79427, 0.96 ) }
    dend_48 { pt3dadd( -0.386803, -66.3634, -6.16882, 0.96 ) }
    dend_48 { pt3dadd( 0.260543, -67.0944, -6.59026, 1.11 ) }
    dend_48 { pt3dadd( 0.98248, -67.9514, -7.11888, 1.25 ) }
    dend_48 { pt3dadd( 1.89618, -69.0898, -7.89898, 1.18 ) }
    dend_48 { pt3dadd( 2.88637, -70.4383, -8.83934, 1.18 ) }
    dend_48 { pt3dadd( 3.60293, -71.5706, -9.59398, 1.03 ) }
    dend_48 { pt3dadd( 4.38328, -73.081, -10.5012, 0.88 ) }
    dend_48 { pt3dadd( 4.68002, -73.8188, -10.8682, 0.96 ) }
    dend_48 { pt3dadd( 5.10945, -75.1862, -11.405, 1.11 ) }
    dend_48 { pt3dadd( 5.4452, -76.6381, -11.8231, 1.11 ) }
    dend_48 { pt3dadd( 5.59987, -77.654, -12.0031, 0.96 ) }
    dend_48 { pt3dadd( 5.70709, -79.0078, -12.1475, 1.11 ) }
    dend_48 { pt3dadd( 5.70463, -80.8818, -12.2982, 1.18 ) }
    dend_48 { pt3dadd( 5.64166, -81.8053, -12.3943, 1.18 ) }
    dend_48 { pt3dadd( 5.51711, -82.8415, -12.528, 1.18 ) }
    dend_48 { pt3dadd( 5.22606, -84.8137, -12.8218, 0.96 ) }
    dend_48 { pt3dadd( 5.01728, -86.13, -13.0409, 1.03 ) }
    dend_48 { pt3dadd( 4.6856, -88.1526, -13.4328, 1.03 ) }
    dend_48 { pt3dadd( 4.43024, -89.6119, -13.7616, 1.33 ) }
    dend_48 { pt3dadd( 4.25431, -90.6812, -14.0309, 1.55 ) }
    dend_48 { pt3dadd( 4.13767, -91.5589, -14.2836, 1.33 ) }
    dend_48 { pt3dadd( 3.99667, -92.9571, -14.7275, 1.03 ) }
    dend_48 { pt3dadd( 3.93091, -94.1286, -15.0932, 1.33 ) }
    dend_48 { pt3dadd( 3.91306, -95.1672, -15.4063, 1.33 ) }
    dend_48 { pt3dadd( 3.8918, -97.133, -15.9593, 1.25 ) }
    dend_48 { pt3dadd( 3.84594, -99.2523, -16.5758, 1.03 ) }
    dend_48 { pt3dadd( 3.7961, -100.454, -16.9384, 0.96 ) }
    dend_48 { pt3dadd( 3.68317, -101.968, -17.4145, 0.96 ) }
    dend_48 { pt3dadd( 3.57362, -102.899, -17.7147, 0.96 ) }
    dend_48 { pt3dadd( 3.38348, -104.275, -18.1859, 0.96 ) }
    dend_48 { pt3dadd( 3.12514, -105.559, -18.6558, 1.11 ) }
    dend_48 { pt3dadd( 2.93403, -106.181, -18.8966, 1.25 ) }
    dend_48 { pt3dadd( 2.4817, -107.257, -19.3857, 1.4 ) }
    dend_48 { pt3dadd( 2.10131, -107.899, -19.7508, 1.4 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -3.62489, -63.1524, -5.37844, 1.11 ) }
    dend_43 { pt3dadd( -4.20687, -65.1895, -3.5266, 1.11 ) }
    dend_43 { pt3dadd( -4.2853, -65.6601, -3.23826, 1.11 ) }
    dend_43 { pt3dadd( -4.38008, -66.4229, -2.84896, 1.03 ) }
    dend_43 { pt3dadd( -4.46288, -67.5928, -2.37391, 1.11 ) }
    dend_43 { pt3dadd( -4.46435, -67.6472, -2.35705, 1.11 ) }
    dend_43 { pt3dadd( -4.48087, -68.6275, -2.11106, 1.11 ) }
    dend_43 { pt3dadd( -4.43806, -69.7379, -1.97751, 1.11 ) }
    dend_43 { pt3dadd( -4.43573, -69.7961, -1.97087, 1.11 ) }
    dend_43 { pt3dadd( -4.40026, -70.7942, -1.86881, 1.11 ) }
    dend_43 { pt3dadd( -4.36326, -72.0326, -1.77376, 1.03 ) }
    dend_43 { pt3dadd( -4.35073, -72.8315, -1.72555, 1.33 ) }
    dend_43 { pt3dadd( -4.37447, -73.7829, -1.68006, 1.18 ) }
    dend_43 { pt3dadd( -4.50494, -74.9833, -1.63945, 0.88 ) }
    dend_43 { pt3dadd( -4.51436, -75.0411, -1.63822, 0.88 ) }
    dend_43 { pt3dadd( -4.83656, -76.3481, -1.6073, 0.88 ) }
    dend_43 { pt3dadd( -5.16862, -77.3751, -1.586, 0.88 ) }
    dend_43 { pt3dadd( -5.52531, -78.2692, -1.57471, 1.11 ) }
    dend_43 { pt3dadd( -6.06249, -79.4692, -1.51372, 0.88 ) }
    dend_43 { pt3dadd( -6.08469, -79.5147, -1.50841, 0.88 ) }
    dend_43 { pt3dadd( -6.48218, -80.3585, -1.36462, 0.88 ) }
    dend_43 { pt3dadd( -6.55353, -80.5125, -1.32725, 0.88 ) }
    dend_43 { pt3dadd( -6.80905, -81.2338, -1.11695, 0.96 ) }
    dend_43 { pt3dadd( -7.14689, -82.7001, -0.660858, 0.81 ) }
    dend_43 { pt3dadd( -7.21194, -83.14, -0.527053, 1.18 ) }
    dend_43 { pt3dadd( -7.29599, -83.8727, -0.321319, 0.96 ) }
    dend_43 { pt3dadd( -7.30479, -83.9844, -0.294431, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_43 { pt3dadd( -7.35654, -85.0384, -0.0758548, 0.74 ) }
    dend_43 { pt3dadd( -7.3683, -85.774, -0.00540379, 0.96 ) }
    dend_43 { pt3dadd( -7.37238, -86.4005, -0.0287509, 1.03 ) }
    dend_43 { pt3dadd( -7.3713, -86.5142, -0.0473302, 1.03 ) }
    dend_43 { pt3dadd( -7.35485, -87.255, -0.233228, 1.33 ) }
    dend_43 { pt3dadd( -7.32271, -88.0066, -0.481101, 1.55 ) }
    dend_43 { pt3dadd( -7.25471, -89.1474, -0.935066, 1.25 ) }
    dend_43 { pt3dadd( -7.14983, -89.9995, -1.30688, 1.4 ) }
    dend_43 { pt3dadd( -6.95697, -91.1942, -1.8327, 1.55 ) }
    dend_43 { pt3dadd( -6.80414, -92.0487, -2.20748, 1.11 ) }
    dend_43 { pt3dadd( -6.58632, -93.1297, -2.6892, 0.74 ) }
    dend_43 { pt3dadd( -6.57528, -93.1888, -2.7135, 0.74 ) }
    dend_43 { pt3dadd( -6.45456, -93.94, -2.99248, 0.74 ) }
    dend_43 { pt3dadd( -6.38132, -94.4774, -3.13193, 0.96 ) }
    dend_43 { pt3dadd( -6.37336, -94.5524, -3.14086, 0.96 ) }
    dend_43 { pt3dadd( -6.30163, -95.5695, -3.20186, 1.11 ) }
    dend_43 { pt3dadd( -6.20905, -96.42, -3.21016, 1.11 ) }
    dend_43 { pt3dadd( -6.05939, -97.5611, -3.29224, 1.25 ) }
    dend_43 { pt3dadd( -5.81187, -99.2932, -3.48234, 0.96 ) }
    dend_43 { pt3dadd( -5.60044, -100.508, -3.67106, 0.96 ) }
    dend_43 { pt3dadd( -5.42565, -101.386, -3.83339, 1.11 ) }
    dend_43 { pt3dadd( -5.0261, -103.146, -4.20112, 1.11 ) }
    dend_43 { pt3dadd( -4.60853, -104.814, -4.61423, 1.25 ) }
    dend_43 { pt3dadd( -4.48283, -105.31, -4.75233, 1.55 ) }
    dend_43 { pt3dadd( -4.25642, -106.314, -5.1109, 1.47 ) }
    dend_43 { pt3dadd( -4.24694, -106.367, -5.12685, 1.47 ) }
    dend_43 { pt3dadd( -4.18611, -107.001, -5.25126, 0.88 ) }
    dend_43 { pt3dadd( -4.21001, -107.857, -5.25304, 0.59 ) }
    dend_43 { pt3dadd( -4.27801, -108.733, -5.08559, 0.74 ) }
    dend_43 { pt3dadd( -4.3465, -109.354, -4.92187, 1.03 ) }
    dend_43 { pt3dadd( -4.503, -110.572, -4.56129, 1.03 ) }
    dend_43 { pt3dadd( -4.57579, -111.105, -4.40199, 1.25 ) }
    dend_43 { pt3dadd( -4.74543, -112.327, -4.03007, 1.25 ) }
    dend_43 { pt3dadd( -4.87285, -113.258, -3.74248, 0.74 ) }
    dend_43 { pt3dadd( -4.97895, -114.026, -3.54791, 0.74 ) }
    dend_43 { pt3dadd( -5.07604, -114.815, -3.4623, 0.96 ) }
    dend_43 { pt3dadd( -5.08053, -114.866, -3.46652, 0.96 ) }
    dend_43 { pt3dadd( -5.11964, -115.761, -3.64608, 1.18 ) }
    dend_43 { pt3dadd( -5.11904, -115.825, -3.66525, 1.18 ) }
    dend_43 { pt3dadd( -5.04872, -116.959, -4.03599, 1.33 ) }
    dend_43 { pt3dadd( -4.91624, -118.313, -4.45249, 1.03 ) }
    dend_43 { pt3dadd( -4.79942, -119.423, -4.75338, 0.88 ) }
    dend_43 { pt3dadd( -4.76033, -119.841, -4.85324, 1.33 ) }
    dend_43 { pt3dadd( -4.70081, -120.695, -5.02596, 1.33 ) }
    dend_43 { pt3dadd( -4.6703, -121.653, -5.17297, 1.55 ) }
    dend_43 { pt3dadd( -4.70458, -122.601, -5.2437, 1.33 ) }
    dend_43 { pt3dadd( -4.82528, -123.464, -5.25715, 1.11 ) }
    dend_43 { pt3dadd( -5.05351, -124.385, -5.2495, 0.66 ) }
    dend_43 { pt3dadd( -5.36368, -125.288, -5.23341, 0.66 ) }
    dend_43 { pt3dadd( -5.74288, -126.153, -5.20909, 0.74 ) }
    dend_43 { pt3dadd( -6.20122, -127.063, -5.17399, 0.59 ) }
    dend_43 { pt3dadd( -6.50917, -127.671, -5.13946, 0.88 ) }
    dend_43 { pt3dadd( -6.77495, -128.289, -5.09959, 0.96 ) }
    dend_43 { pt3dadd( -6.94147, -128.892, -5.0592, 0.88 ) }
    dend_43 { pt3dadd( -6.94416, -128.948, -5.05063, 0.88 ) }
    dend_43 { pt3dadd( -6.83811, -129.751, -4.88256, 0.74 ) }
    dend_43 { pt3dadd( -6.67095, -130.517, -4.70847, 1.25 ) }
    dend_43 { pt3dadd( -6.48348, -131.35, -4.50377, 1.25 ) }
    dend_43 { pt3dadd( -6.31476, -132.277, -4.26981, 1.03 ) }
    dend_43 { pt3dadd( -6.16456, -133.835, -3.8785, 0.74 ) }
    dend_43 { pt3dadd( -6.16043, -134.719, -3.66088, 0.59 ) }
    dend_43 { pt3dadd( -6.22617, -135.241, -3.53977, 0.81 ) }
    dend_43 { pt3dadd( -6.43572, -135.972, -3.39825, 0.88 ) }
    dend_43 { pt3dadd( -6.77764, -136.82, -3.27592, 1.03 ) }
    dend_43 { pt3dadd( -7.07834, -137.538, -3.21995, 1.11 ) }
    dend_43 { pt3dadd( -7.14227, -137.699, -3.22957, 1.11 ) }
    dend_43 { pt3dadd( -7.40918, -138.497, -3.36269, 0.96 ) }
    dend_43 { pt3dadd( -7.65892, -139.402, -3.5794, 1.11 ) }
    dend_43 { pt3dadd( -7.84776, -140.31, -3.84951, 0.96 ) }
    dend_43 { pt3dadd( -8.05355, -141.637, -4.29076, 1.18 ) }
    dend_43 { pt3dadd( -8.2541, -143.06, -4.71842, 1.03 ) }
    dend_43 { pt3dadd( -8.45707, -144.52, -5.12591, 0.96 ) }
    dend_43 { pt3dadd( -8.46825, -144.621, -5.15151, 0.96 ) }
    dend_43 { pt3dadd( -8.54572, -145.683, -5.36728, 0.96 ) }
    dend_43 { pt3dadd( -8.57357, -146.46, -5.43618, 1.4 ) }
    dend_43 { pt3dadd( -8.5559, -147.979, -5.36518, 1.11 ) }
    dend_43 { pt3dadd( -8.55111, -148.053, -5.35267, 1.11 ) }
    dend_43 { pt3dadd( -8.46647, -148.938, -5.16168, 1.25 ) }
    dend_43 { pt3dadd( -8.3406, -150.088, -4.91838, 1.11 ) }
    dend_43 { pt3dadd( -8.17272, -151.352, -4.67324, 0.88 ) }
    dend_43 { pt3dadd( -8.06313, -152.044, -4.56569, 1.18 ) }
    dend_43 { pt3dadd( -7.84253, -153.141, -4.45885, 1.25 ) }
    dend_43 { pt3dadd( -7.70399, -153.892, -4.39563, 1.4 ) }
    dend_43 { pt3dadd( -7.6944, -153.956, -4.39194, 1.4 ) }
    dend_43 { pt3dadd( -7.5787, -155.066, -4.34345, 1.03 ) }
    dend_43 { pt3dadd( -7.57361, -155.24, -4.3402, 1.03 ) }
    dend_43 { pt3dadd( -7.62229, -156.189, -4.30998, 0.74 ) }
    dend_43 { pt3dadd( -7.74637, -157.006, -4.23271, 0.74 ) }
    dend_43 { pt3dadd( -7.91935, -157.643, -4.1417, 0.96 ) }
    dend_43 { pt3dadd( -8.26739, -158.588, -3.97704, 0.88 ) }
    dend_43 { pt3dadd( -8.67147, -159.44, -3.80146, 0.88 ) }
    dend_43 { pt3dadd( -9.06262, -160.168, -3.64087, 0.88 ) }
    dend_43 { pt3dadd( -9.65132, -161.122, -3.41114, 1.11 ) }
    dend_43 { pt3dadd( -10.071, -161.788, -3.25036, 1.25 ) }
    dend_43 { pt3dadd( -10.4557, -162.424, -3.11022, 1.4 ) }
    dend_43 { pt3dadd( -10.5647, -162.615, -3.08361, 1.4 ) }
    dend_43 { pt3dadd( -10.8161, -163.157, -3.0458, 1.4 ) }
    dend_43 { pt3dadd( -10.8753, -163.319, -3.06497, 1.4 ) }
    dend_43 { pt3dadd( -11.1269, -164.279, -3.36239, 1.25 ) }
    dend_43 { pt3dadd( -11.2656, -165.006, -3.64808, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -11.3391, -165.652, -3.95818, 0.96 ) }
    dend_43 { pt3dadd( -11.4045, -166.568, -4.44271, 0.96 ) }
    dend_43 { pt3dadd( -11.4679, -168.112, -5.38607, 0.81 ) }
    dend_43 { pt3dadd( -11.4825, -169.404, -6.2813, 0.81 ) }
    dend_43 { pt3dadd( -11.4889, -169.98, -6.72134, 1.03 ) }
    dend_43 { pt3dadd( -11.5296, -171.344, -7.76896, 1.03 ) }
    dend_43 { pt3dadd( -11.5326, -171.41, -7.81777, 1.03 ) }
    dend_43 { pt3dadd( -11.6063, -172.555, -8.60601, 1.55 ) }
    dend_43 { pt3dadd( -11.7202, -173.925, -9.39675, 0.88 ) }
    dend_43 { pt3dadd( -11.8537, -175.223, -10.0669, 0.81 ) }
    dend_43 { pt3dadd( -11.9815, -176.232, -10.5691, 0.81 ) }
    dend_43 { pt3dadd( -12.091, -176.974, -10.9114, 0.96 ) }
    dend_43 { pt3dadd( -12.2038, -177.752, -11.2419, 0.96 ) }
    dend_43 { pt3dadd( -12.3117, -178.544, -11.5257, 0.74 ) }
    dend_43 { pt3dadd( -12.4754, -179.843, -11.9485, 1.25 ) }
    dend_43 { pt3dadd( -12.5805, -181.091, -12.3471, 0.81 ) }
    dend_43 { pt3dadd( -12.5843, -181.145, -12.3639, 0.81 ) }
    dend_43 { pt3dadd( -12.6565, -182.047, -12.561, 0.81 ) }
    dend_43 { pt3dadd( -12.734, -182.753, -12.6535, 1.18 ) }
    dend_43 { pt3dadd( -12.7471, -182.862, -12.6561, 1.18 ) }
    dend_43 { pt3dadd( -12.8439, -183.625, -12.5973, 1.18 ) }
    dend_43 { pt3dadd( -12.9856, -184.957, -12.4279, 0.81 ) }
    dend_43 { pt3dadd( -13.1179, -186.263, -12.2644, 0.81 ) }
    dend_43 { pt3dadd( -13.1869, -186.972, -12.1735, 1.11 ) }
    dend_43 { pt3dadd( -13.3046, -188.158, -12.0433, 1.11 ) }
    dend_43 { pt3dadd( -13.3157, -188.281, -12.0277, 1.11 ) }
    dend_43 { pt3dadd( -13.3952, -189.314, -11.8073, 0.96 ) }
    dend_43 { pt3dadd( -13.4192, -189.818, -11.6699, 1.25 ) }
    dend_43 { pt3dadd( -13.4215, -189.873, -11.6541, 1.25 ) }
    dend_43 { pt3dadd( -13.4635, -190.821, -11.3465, 1.25 ) }
    dend_43 { pt3dadd( -13.5709, -192.343, -10.8266, 1.03 ) }
    dend_43 { pt3dadd( -13.7282, -194.168, -10.1944, 0.81 ) }
    dend_43 { pt3dadd( -13.7806, -194.799, -9.98164, 1.11 ) }
    dend_43 { pt3dadd( -13.852, -195.892, -9.65313, 0.96 ) }
    dend_43 { pt3dadd( -13.8626, -196.07, -9.60877, 0.96 ) }
    dend_43 { pt3dadd( -13.9111, -197.0, -9.4273, 0.81 ) }
    dend_43 { pt3dadd( -13.9154, -197.076, -9.42188, 0.81 ) }
    dend_43 { pt3dadd( -14.0009, -198.371, -9.4472, 0.96 ) }
    dend_43 { pt3dadd( -14.0501, -199.204, -9.46503, 1.18 ) }
    dend_43 { pt3dadd( -14.0935, -200.097, -9.48546, 1.03 ) }
    dend_43 { pt3dadd( -14.0973, -200.156, -9.48674, 1.03 ) }
    dend_43 { pt3dadd( -14.1883, -201.183, -9.50707, 0.74 ) }
    dend_43 { pt3dadd( -14.3465, -202.569, -9.55121, 0.74 ) }
    dend_43 { pt3dadd( -14.4455, -203.326, -9.61196, 0.81 ) }
    dend_43 { pt3dadd( -14.4547, -203.401, -9.62052, 0.81 ) }
    dend_43 { pt3dadd( -14.519, -204.131, -9.72624, 0.81 ) }
    dend_43 { pt3dadd( -14.5677, -205.222, -9.90613, 0.81 ) }
    dend_43 { pt3dadd( -14.5411, -206.495, -10.1681, 1.03 ) }
    dend_43 { pt3dadd( -14.4769, -207.581, -10.4213, 1.03 ) }
    dend_43 { pt3dadd( -14.4742, -207.637, -10.4344, 1.03 ) }
    dend_43 { pt3dadd( -14.4653, -208.384, -10.6045, 1.25 ) }
    dend_43 { pt3dadd( -14.474, -209.091, -10.7615, 0.96 ) }
    dend_43 { pt3dadd( -14.5337, -210.034, -10.9376, 0.81 ) }
    dend_43 { pt3dadd( -14.6099, -210.639, -11.0271, 1.11 ) }
    dend_43 { pt3dadd( -14.7406, -211.543, -11.1315, 1.33 ) }
    dend_43 { pt3dadd( -14.8777, -212.423, -11.2406, 1.33 ) }
    dend_43 { pt3dadd( -14.8873, -212.487, -11.2501, 1.33 ) }
    dend_43 { pt3dadd( -15.0395, -213.689, -11.4433, 0.74 ) }
    dend_43 { pt3dadd( -15.1268, -214.945, -11.6784, 0.96 ) }
    dend_43 { pt3dadd( -15.1032, -215.991, -11.9012, 0.96 ) }
    dend_43 { pt3dadd( -15.0918, -216.094, -11.9207, 0.96 ) }
    dend_43 { pt3dadd( -14.9042, -217.155, -12.0912, 0.96 ) }
    dend_43 { pt3dadd( -14.7156, -218.108, -12.1662, 0.81 ) }
    dend_43 { pt3dadd( -14.5116, -219.134, -12.162, 0.66 ) }
    dend_43 { pt3dadd( -14.3496, -220.14, -12.0778, 0.66 ) }
    dend_43 { pt3dadd( -14.2478, -221.102, -11.9494, 1.33 ) }
    dend_43 { pt3dadd( -14.2125, -221.908, -11.7887, 1.33 ) }
    dend_43 { pt3dadd( -14.2476, -223.363, -11.4051, 1.11 ) }
    dend_43 { pt3dadd( -14.3022, -224.405, -11.1001, 1.18 ) }
    dend_43 { pt3dadd( -14.3425, -224.988, -10.9246, 1.4 ) }
    dend_43 { pt3dadd( -14.3877, -225.888, -10.691, 1.11 ) }
    dend_43 { pt3dadd( -14.3732, -226.943, -10.4939, 0.59 ) }
    dend_43 { pt3dadd( -14.3058, -227.625, -10.4126, 0.52 ) }
    dend_43 { pt3dadd( -14.1328, -228.558, -10.368, 0.88 ) }
    dend_43 { pt3dadd( -13.9005, -229.476, -10.3755, 1.18 ) }
    dend_43 { pt3dadd( -13.6369, -230.472, -10.4288, 1.03 ) }
    dend_43 { pt3dadd( -13.3, -231.73, -10.5538, 0.96 ) }
    dend_43 { pt3dadd( -12.9984, -232.978, -10.7574, 0.81 ) }
    dend_43 { pt3dadd( -12.8542, -233.714, -10.9016, 1.11 ) }
    dend_43 { pt3dadd( -12.7509, -234.572, -11.0951, 1.69 ) }
    dend_43 { pt3dadd( -12.6983, -235.533, -11.3426, 1.18 ) }
    dend_43 { pt3dadd( -12.7006, -235.596, -11.3565, 1.18 ) }
    dend_43 { pt3dadd( -12.8107, -236.6, -11.506, 0.59 ) }
    dend_43 { pt3dadd( -12.8179, -236.656, -11.5022, 0.59 ) }
    dend_43 { pt3dadd( -12.9024, -237.508, -11.2663, 1.03 ) }
    dend_43 { pt3dadd( -12.9086, -237.604, -11.226, 1.03 ) }
    dend_43 { pt3dadd( -12.9022, -238.85, -10.6282, 1.25 ) }
    dend_43 { pt3dadd( -12.8784, -239.384, -10.3654, 1.25 ) }
    dend_43 { pt3dadd( -12.793, -240.655, -9.73935, 0.96 ) }
    dend_43 { pt3dadd( -12.7538, -241.38, -9.42044, 0.66 ) }
    dend_43 { pt3dadd( -12.7289, -242.025, -9.17885, 0.66 ) }
    dend_43 { pt3dadd( -12.7232, -242.586, -9.02402, 0.37 ) }
    dend_43 { pt3dadd( -12.7416, -243.351, -8.96717, 0.52 ) }
    dend_43 { pt3dadd( -12.8189, -244.241, -9.01964, 0.81 ) }
    dend_43 { pt3dadd( -12.9442, -244.947, -9.14518, 1.11 ) }
    dend_43 { pt3dadd( -13.1065, -245.648, -9.33148, 1.4 ) }
    dend_43 { pt3dadd( -13.3223, -246.516, -9.60094, 1.4 ) }
    dend_43 { pt3dadd( -13.7312, -248.028, -10.1225, 0.81 ) }
    dend_43 { pt3dadd( -13.9475, -248.881, -10.4473, 0.66 ) }
    dend_43 { pt3dadd( -14.1072, -249.698, -10.7769, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -14.2174, -250.812, -11.2223, 0.37 ) }
    dend_43 { pt3dadd( -14.2301, -251.43, -11.464, 0.88 ) }
    dend_43 { pt3dadd( -14.2289, -251.484, -11.4823, 0.88 ) }
    dend_43 { pt3dadd( -14.2228, -252.055, -11.6079, 1.25 ) }
    dend_43 { pt3dadd( -14.2439, -252.721, -11.7271, 1.25 ) }
    dend_43 { pt3dadd( -14.3199, -253.478, -11.8296, 0.88 ) }
    dend_43 { pt3dadd( -14.5778, -254.762, -11.9435, 0.66 ) }
    dend_43 { pt3dadd( -14.9249, -255.961, -12.0378, 0.66 ) }
    dend_43 { pt3dadd( -15.3355, -257.095, -12.1319, 0.88 ) }
    dend_43 { pt3dadd( -15.6753, -257.907, -12.233, 0.88 ) }
    dend_43 { pt3dadd( -15.9776, -258.579, -12.3602, 1.11 ) }
    dend_43 { pt3dadd( -16.2427, -259.19, -12.5003, 1.18 ) }
    dend_43 { pt3dadd( -16.4273, -259.668, -12.5981, 1.18 ) }
    dend_43 { pt3dadd( -16.8881, -261.101, -12.8911, 0.88 ) }
    dend_43 { pt3dadd( -17.1894, -262.324, -13.1302, 1.25 ) }
    dend_43 { pt3dadd( -17.4289, -263.669, -13.3622, 0.74 ) }
    dend_43 { pt3dadd( -17.5717, -264.773, -13.5206, 0.59 ) }
    dend_43 { pt3dadd( -17.6857, -266.038, -13.6592, 1.03 ) }
    dend_43 { pt3dadd( -17.732, -266.803, -13.6937, 0.74 ) }
    dend_43 { pt3dadd( -17.7617, -267.677, -13.6427, 0.59 ) }
    dend_43 { pt3dadd( -17.7732, -267.855, -13.6147, 0.59 ) }
    dend_43 { pt3dadd( -17.8902, -268.758, -13.4165, 0.74 ) }
    dend_43 { pt3dadd( -17.905, -268.814, -13.4097, 0.74 ) }
    dend_43 { pt3dadd( -18.1777, -269.638, -13.4361, 0.59 ) }
    dend_43 { pt3dadd( -18.1998, -269.7, -13.4424, 0.59 ) }
    dend_43 { pt3dadd( -18.5548, -270.786, -13.6051, 0.74 ) }
    dend_43 { pt3dadd( -18.8686, -271.883, -13.8014, 0.59 ) }
    dend_43 { pt3dadd( -19.1806, -273.308, -14.1035, 0.59 ) }
    dend_43 { pt3dadd( -19.4063, -274.598, -14.4172, 0.59 ) }
    dend_43 { pt3dadd( -19.5074, -275.512, -14.6729, 0.59 ) }
    dend_43 { pt3dadd( -19.554, -276.315, -14.9165, 0.81 ) }
    dend_43 { pt3dadd( -19.5513, -276.486, -14.9733, 0.81 ) }
    dend_43 { pt3dadd( -19.4774, -277.161, -15.2064, 0.81 ) }
    dend_43 { pt3dadd( -19.4685, -277.208, -15.2171, 0.81 ) }
    dend_43 { pt3dadd( -19.3631, -278.03, -15.2998, 0.81 ) }
    dend_43 { pt3dadd( -19.3618, -278.08, -15.2976, 0.81 ) }
    dend_43 { pt3dadd( -19.3983, -278.947, -15.198, 0.66 ) }
    dend_43 { pt3dadd( -19.4005, -278.998, -15.1911, 0.66 ) }
    dend_43 { pt3dadd( -19.4484, -280.001, -15.0363, 0.66 ) }
    dend_43 { pt3dadd( -19.4541, -281.23, -14.847, 0.44 ) }
    dend_43 { pt3dadd( -19.4124, -282.864, -14.5891, 0.66 ) }
    dend_43 { pt3dadd( -19.281, -284.274, -14.3382, 0.96 ) }
    dend_43 { pt3dadd( -19.093, -285.468, -14.1026, 0.96 ) }
    dend_43 { pt3dadd( -19.0741, -285.556, -14.0847, 0.96 ) }
    dend_43 { pt3dadd( -18.7248, -286.708, -13.8386, 0.81 ) }
    dend_43 { pt3dadd( -18.6834, -286.815, -13.817, 0.81 ) }
    dend_43 { pt3dadd( -18.1702, -287.994, -13.6481, 0.74 ) }
    dend_43 { pt3dadd( -18.1465, -288.047, -13.6399, 0.74 ) }
    dend_43 { pt3dadd( -17.9474, -288.603, -13.5606, 0.96 ) }
    dend_43 { pt3dadd( -17.9153, -288.716, -13.5555, 0.96 ) }
    dend_43 { pt3dadd( -17.7327, -289.676, -13.547, 0.96 ) }
    dend_43 { pt3dadd( -17.6395, -290.36, -13.5749, 0.96 ) }
    dend_43 { pt3dadd( -17.637, -290.418, -13.5824, 0.96 ) }
    dend_43 { pt3dadd( -17.6014, -291.291, -13.7011, 0.52 ) }
    dend_43 { pt3dadd( -17.5643, -292.251, -13.8473, 0.52 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -32.8322, -66.6003, -20.6876, 0.74 ) }
    dend_34 { pt3dadd( -33.3932, -66.6276, -20.2582, 0.74 ) }
    dend_34 { pt3dadd( -33.4405, -66.6402, -20.2078, 0.74 ) }
    dend_34 { pt3dadd( -34.0605, -66.9258, -19.4051, 0.52 ) }
    dend_34 { pt3dadd( -34.3815, -67.0967, -18.9831, 0.44 ) }
    dend_34 { pt3dadd( -34.9227, -67.3835, -18.3112, 0.44 ) }
    dend_34 { pt3dadd( -35.4538, -67.6553, -17.7018, 0.96 ) }
    dend_34 { pt3dadd( -36.4344, -68.2137, -16.6344, 0.74 ) }
    dend_34 { pt3dadd( -37.0388, -68.5671, -16.0478, 0.74 ) }
    dend_34 { pt3dadd( -37.3424, -68.7571, -15.7988, 0.74 ) }
    dend_34 { pt3dadd( -37.7891, -69.0164, -15.4886, 0.59 ) }
    dend_34 { pt3dadd( -38.1911, -69.2124, -15.2553, 0.52 ) }
    dend_34 { pt3dadd( -38.7771, -69.4485, -14.9771, 0.52 ) }
    dend_34 { pt3dadd( -39.182, -69.5859, -14.8257, 0.88 ) }
    dend_34 { pt3dadd( -39.8611, -69.7852, -14.5783, 0.59 ) }
    dend_34 { pt3dadd( -40.8886, -70.0515, -14.13, 0.96 ) }
    dend_34 { pt3dadd( -42.0284, -70.3244, -13.5601, 1.33 ) }
    dend_34 { pt3dadd( -42.4607, -70.4236, -13.3194, 1.33 ) }
    dend_34 { pt3dadd( -43.1556, -70.5844, -12.9137, 0.44 ) }
    dend_34 { pt3dadd( -43.5679, -70.6678, -12.674, 0.44 ) }
    dend_34 { pt3dadd( -44.4707, -70.8162, -12.1916, 0.44 ) }
    dend_34 { pt3dadd( -44.5171, -70.8231, -12.1712, 0.44 ) }
    dend_34 { pt3dadd( -45.2669, -70.902, -11.9073, 0.81 ) }
    dend_34 { pt3dadd( -45.7789, -70.9576, -11.6769, 0.96 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 79/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -32.8322, -66.6003, -20.6876, 0.59 ) }
    dend_31 { pt3dadd( -33.9686, -67.7486, -21.2758, 0.59 ) }
    dend_31 { pt3dadd( -34.5713, -68.4028, -21.547, 0.52 ) }
    dend_31 { pt3dadd( -34.9299, -68.7931, -21.7124, 0.88 ) }
    dend_31 { pt3dadd( -35.6129, -69.4745, -22.0771, 0.88 ) }
    dend_31 { pt3dadd( -36.0976, -69.909, -22.4454, 0.88 ) }
    dend_31 { pt3dadd( -36.539, -70.2571, -22.8389, 1.03 ) }
    dend_31 { pt3dadd( -37.184, -70.6265, -23.4527, 0.59 ) }
    dend_31 { pt3dadd( -37.7456, -70.8099, -24.0969, 0.44 ) }
    dend_31 { pt3dadd( -38.4975, -70.8588, -25.0327, 0.74 ) }
    dend_31 { pt3dadd( -39.7818, -70.6092, -26.7524, 0.44 ) }
    dend_31 { pt3dadd( -40.1113, -70.4725, -27.1831, 0.44 ) }
    dend_31 { pt3dadd( -40.4895, -70.2718, -27.6515, 0.44 ) }
    dend_31 { pt3dadd( -40.932, -70.0138, -28.1445, 0.74 ) }
    dend_31 { pt3dadd( -41.2382, -69.8502, -28.425, 0.96 ) }
    dend_31 { pt3dadd( -41.2922, -69.8309, -28.4592, 0.96 ) }
    dend_31 { pt3dadd( -41.8743, -69.7236, -28.6981, 0.88 ) }
    dend_31 { pt3dadd( -43.1146, -69.5548, -29.2077, 0.44 ) }
    dend_31 { pt3dadd( -43.4943, -69.4996, -29.3607, 0.44 ) }
    dend_31 { pt3dadd( -43.5535, -69.4858, -29.3927, 0.44 ) }
    dend_31 { pt3dadd( -43.9812, -69.3411, -29.6509, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_31 { pt3dadd( -44.6114, -69.0602, -30.0679, 0.44 ) }
    dend_31 { pt3dadd( -45.0251, -68.8243, -30.3463, 0.81 ) }
    dend_31 { pt3dadd( -45.4021, -68.5555, -30.6179, 1.33 ) }
    dend_31 { pt3dadd( -46.6344, -67.6135, -31.5531, 1.33 ) }
    dend_31 { pt3dadd( -47.1472, -67.234, -31.9323, 1.25 ) }
    dend_31 { pt3dadd( -47.7399, -66.8176, -32.3589, 0.96 ) }
    dend_31 { pt3dadd( -48.3761, -66.4108, -32.8229, 0.88 ) }
    dend_31 { pt3dadd( -49.1121, -65.9764, -33.3334, 0.74 ) }
    dend_31 { pt3dadd( -49.689, -65.6637, -33.6976, 0.74 ) }
    dend_31 { pt3dadd( -50.4909, -65.2544, -34.1624, 0.66 ) }
    dend_31 { pt3dadd( -50.9252, -65.0334, -34.4384, 0.52 ) }
    dend_31 { pt3dadd( -51.6352, -64.6654, -34.8926, 0.29 ) }
    dend_31 { pt3dadd( -52.0939, -64.3954, -35.2522, 0.37 ) }
    dend_31 { pt3dadd( -52.1447, -64.3609, -35.2972, 0.37 ) }
    dend_31 { pt3dadd( -52.8907, -63.6897, -36.0935, 0.88 ) }
    dend_31 { pt3dadd( -53.1129, -63.4094, -36.4247, 1.25 ) }
    dend_31 { pt3dadd( -53.4046, -62.9947, -36.9667, 1.18 ) }
    dend_31 { pt3dadd( -53.9636, -62.2411, -38.0162, 0.66 ) }
    dend_31 { pt3dadd( -53.9928, -62.2065, -38.0679, 0.66 ) }
    dend_31 { pt3dadd( -54.3895, -61.8019, -38.6711, 0.74 ) }
    dend_31 { pt3dadd( -55.2587, -61.0746, -39.7956, 0.88 ) }
    dend_31 { pt3dadd( -55.9131, -60.5918, -40.5858, 0.52 ) }
    dend_31 { pt3dadd( -56.4303, -60.3021, -41.1082, 0.88 ) }
    dend_31 { pt3dadd( -57.025, -60.099, -41.5666, 1.03 ) }
    dend_31 { pt3dadd( -57.6802, -59.9503, -42.0122, 1.33 ) }
    dend_31 { pt3dadd( -58.2851, -59.8775, -42.3557, 0.88 ) }
    dend_31 { pt3dadd( -58.3464, -59.8717, -42.3863, 0.88 ) }
    dend_31 { pt3dadd( -59.1323, -59.7908, -42.8096, 0.59 ) }
    dend_31 { pt3dadd( -60.1231, -59.6728, -43.4478, 0.52 ) }
    dend_31 { pt3dadd( -60.2333, -59.6558, -43.5282, 0.52 ) }
    dend_31 { pt3dadd( -60.5706, -59.5766, -43.7918, 0.81 ) }
    dend_31 { pt3dadd( -61.6598, -59.1562, -44.7976, 0.29 ) }
    dend_31 { pt3dadd( -61.7037, -59.1368, -44.844, 0.29 ) }
    dend_31 { pt3dadd( -62.0668, -58.9467, -45.3548, 0.29 ) }
    dend_31 { pt3dadd( -62.2055, -58.8718, -45.5795, 0.88 ) }
    dend_31 { pt3dadd( -62.3602, -58.808, -45.873, 1.18 ) }
    dend_31 { pt3dadd( -63.0738, -58.6044, -47.347, 0.37 ) }
    dend_31 { pt3dadd( -63.5108, -58.5497, -48.2473, 0.74 ) }
    dend_31 { pt3dadd( -64.1043, -58.5669, -49.4941, 1.03 ) }
    dend_31 { pt3dadd( -64.1336, -58.5719, -49.554, 1.03 ) }
    dend_31 { pt3dadd( -64.7859, -58.7516, -50.8005, 0.44 ) }
    dend_31 { pt3dadd( -64.9651, -58.8087, -51.1061, 1.18 ) }
    dend_31 { pt3dadd( -65.3018, -58.914, -51.5646, 1.47 ) }
    dend_31 { pt3dadd( -66.1725, -59.1046, -52.9145, 0.81 ) }
    dend_31 { pt3dadd( -66.5391, -59.1634, -53.5014, 0.52 ) }
    dend_31 { pt3dadd( -67.0578, -59.2292, -54.3477, 0.37 ) }
    dend_31 { pt3dadd( -67.367, -59.2608, -54.8465, 0.37 ) }
    dend_31 { pt3dadd( -67.7621, -59.3037, -55.4935, 1.18 ) }
    dend_31 { pt3dadd( -69.7757, -59.5547, -58.8959, 0.81 ) }
    dend_31 { pt3dadd( -69.8447, -59.5644, -59.0117, 0.81 ) }
    dend_31 { pt3dadd( -70.228, -59.6347, -59.6629, 0.81 ) }
    dend_31 { pt3dadd( -70.5025, -59.6891, -60.0905, 0.88 ) }
    dend_31 { pt3dadd( -70.7915, -59.7635, -60.5247, 0.81 ) }
    dend_31 { pt3dadd( -71.4676, -59.9959, -61.4031, 0.29 ) }
    dend_31 { pt3dadd( -71.6329, -60.0577, -61.5466, 0.29 ) }
    dend_31 { pt3dadd( -71.9098, -60.1856, -61.8426, 0.29 ) }
    dend_31 { pt3dadd( -72.4037, -60.4702, -62.4473, 1.18 ) }
    dend_31 { pt3dadd( -73.4335, -61.2409, -63.7812, 0.59 ) }
    dend_31 { pt3dadd( -73.7523, -61.5463, -64.1863, 1.33 ) }
    dend_31 { pt3dadd( -73.7915, -61.5914, -64.2334, 1.33 ) }
    dend_31 { pt3dadd( -74.5424, -62.5369, -65.0836, 0.74 ) }
    dend_31 { pt3dadd( -74.916, -63.0519, -65.4892, 0.66 ) }
    dend_31 { pt3dadd( -75.3446, -63.6744, -65.9756, 0.37 ) }
    dend_31 { pt3dadd( -75.7859, -64.303, -66.4314, 0.88 ) }
    dend_31 { pt3dadd( -76.244, -64.9498, -66.9208, 1.03 ) }
    dend_31 { pt3dadd( -76.6224, -65.4857, -67.3528, 0.88 ) }
    dend_31 { pt3dadd( -76.6532, -65.5317, -67.3902, 0.88 ) }
    dend_31 { pt3dadd( -77.3716, -66.7567, -68.4384, 0.74 ) }
    dend_31 { pt3dadd( -77.6989, -67.3598, -69.0718, 0.44 ) }
    dend_31 { pt3dadd( -77.8738, -67.6783, -69.4572, 1.47 ) }
    dend_31 { pt3dadd( -78.2447, -68.2952, -70.3156, 1.03 ) }
    dend_31 { pt3dadd( -78.4796, -68.6088, -70.8244, 0.74 ) }
    dend_31 { pt3dadd( -78.7163, -68.8265, -71.2348, 0.74 ) }
    dend_31 { pt3dadd( -79.7115, -69.3936, -72.636, 0.52 ) }
    dend_31 { pt3dadd( -80.2116, -69.5745, -73.3139, 0.66 ) }
    dend_31 { pt3dadd( -80.6758, -69.7184, -73.9659, 0.37 ) }
    dend_31 { pt3dadd( -81.007, -69.8335, -74.5416, 0.29 ) }
    dend_31 { pt3dadd( -81.3021, -69.9455, -75.1261, 0.29 ) }
    dend_31 { pt3dadd( -81.636, -70.088, -75.8588, 0.74 ) }
    dend_31 { pt3dadd( -82.0822, -70.3255, -76.9354, 0.96 ) }
    dend_31 { pt3dadd( -82.6549, -70.6465, -78.4466, 0.96 ) }
    dend_31 { pt3dadd( -83.4651, -71.0632, -80.7184, 0.88 ) }
    dend_31 { pt3dadd( -83.4847, -71.0706, -80.771, 0.88 ) }
    dend_31 { pt3dadd( -83.8537, -71.1573, -81.703, 0.88 ) }
    dend_31 { pt3dadd( -84.037, -71.1727, -82.1096, 1.03 ) }
    dend_31 { pt3dadd( -84.3611, -71.1781, -82.7116, 1.03 ) }
    dend_31 { pt3dadd( -84.9192, -71.2072, -83.5761, 0.74 ) }
    dend_31 { pt3dadd( -85.5587, -71.3222, -84.4893, 0.37 ) }
    dend_31 { pt3dadd( -85.594, -71.3351, -84.5469, 0.37 ) }
    dend_31 { pt3dadd( -86.2396, -71.6784, -85.7165, 0.37 ) }
    dend_31 { pt3dadd( -86.7902, -72.0556, -86.8354, 0.37 ) }
    dend_31 { pt3dadd( -87.2846, -72.4495, -87.8802, 0.88 ) }
    dend_31 { pt3dadd( -87.7677, -72.8328, -88.8445, 1.18 ) }
    dend_31 { pt3dadd( -88.4805, -73.3497, -90.3816, 0.59 ) }
    dend_31 { pt3dadd( -88.5089, -73.3646, -90.4423, 0.59 ) }
    dend_31 { pt3dadd( -89.176, -73.529, -91.7779, 0.44 ) }
    dend_31 { pt3dadd( -89.3727, -73.5196, -92.2178, 0.37 ) }
    dend_31 { pt3dadd( -89.7125, -73.4178, -93.0506, 0.37 ) }
    dend_31 { pt3dadd( -90.4914, -73.0503, -94.9512, 1.03 ) }
    dend_31 { pt3dadd( -90.8952, -72.8217, -95.8897, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -91.2476, -72.6406, -96.652, 1.25 ) }
    dend_31 { pt3dadd( -92.119, -72.2815, -98.5671, 1.18 ) }
    dend_31 { pt3dadd( -92.1448, -72.2776, -98.6285, 1.18 ) }
    dend_31 { pt3dadd( -92.5356, -72.3254, -99.5217, 0.59 ) }
    dend_31 { pt3dadd( -92.7807, -72.4161, -100.024, 0.74 ) }
    dend_31 { pt3dadd( -93.0529, -72.5668, -100.566, 0.74 ) }
    dend_31 { pt3dadd( -93.9518, -73.1741, -102.379, 0.88 ) }
    dend_31 { pt3dadd( -94.7315, -73.7775, -104.41, 0.52 ) }
    dend_31 { pt3dadd( -94.9247, -73.9457, -105.01, 1.18 ) }
    dend_31 { pt3dadd( -95.2235, -74.2478, -106.163, 1.55 ) }
    dend_31 { pt3dadd( -95.3658, -74.4021, -106.776, 1.25 ) }
    dend_31 { pt3dadd( -95.8683, -74.9702, -108.982, 0.74 ) }
    dend_31 { pt3dadd( -96.8156, -76.0932, -113.131, 0.74 ) }
    dend_31 { pt3dadd( -96.9251, -76.2321, -113.646, 1.4 ) }
    dend_31 { pt3dadd( -97.4286, -76.8887, -116.212, 0.74 ) }
    dend_31 { pt3dadd( -97.4559, -76.921, -116.35, 0.74 ) }
    dend_31 { pt3dadd( -97.6318, -77.0938, -117.193, 0.59 ) }
    dend_31 { pt3dadd( -97.6504, -77.1062, -117.258, 0.59 ) }
    dend_31 { pt3dadd( -98.5332, -77.4743, -119.204, 0.59 ) }
    dend_31 { pt3dadd( -98.5863, -77.493, -119.302, 0.59 ) }
    dend_31 { pt3dadd( -99.1319, -77.6422, -120.196, 0.66 ) }
    dend_31 { pt3dadd( -99.4525, -77.7221, -120.727, 0.88 ) }
    dend_31 { pt3dadd( -100.6, -77.958, -122.624, 0.44 ) }
    dend_31 { pt3dadd( -100.756, -77.9924, -122.852, 1.03 ) }
    dend_31 { pt3dadd( -101.665, -78.2245, -123.844, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 25/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -1.27315, -207.767, -92.7726, 0.29 ) }
    dend_29 { pt3dadd( -2.42054, -208.37, -93.1775, 0.29 ) }
    dend_29 { pt3dadd( -3.13332, -208.716, -93.4135, 0.29 ) }
    dend_29 { pt3dadd( -4.16187, -209.185, -93.8314, 0.22 ) }
    dend_29 { pt3dadd( -4.61044, -209.413, -94.0236, 0.81 ) }
    dend_29 { pt3dadd( -5.0475, -209.651, -94.2129, 0.81 ) }
    dend_29 { pt3dadd( -5.41399, -209.863, -94.4028, 0.81 ) }
    dend_29 { pt3dadd( -6.02361, -210.242, -94.7784, 0.52 ) }
    dend_29 { pt3dadd( -7.19181, -211.032, -95.6105, 0.22 ) }
    dend_29 { pt3dadd( -7.95795, -211.6, -96.197, 0.22 ) }
    dend_29 { pt3dadd( -8.31054, -211.884, -96.4838, 0.81 ) }
    dend_29 { pt3dadd( -9.30549, -212.734, -97.3172, 0.96 ) }
    dend_29 { pt3dadd( -9.54277, -212.955, -97.5488, 1.11 ) }
    dend_29 { pt3dadd( -10.2979, -213.744, -98.4665, 0.22 ) }
    dend_29 { pt3dadd( -10.6623, -214.145, -98.9425, 0.22 ) }
    dend_29 { pt3dadd( -10.8653, -214.366, -99.2177, 0.74 ) }
    dend_29 { pt3dadd( -11.0884, -214.624, -99.5329, 0.96 ) }
    dend_29 { pt3dadd( -11.8784, -215.606, -100.735, 0.59 ) }
    dend_29 { pt3dadd( -12.6022, -216.534, -101.924, 0.29 ) }
    dend_29 { pt3dadd( -13.0926, -217.171, -102.852, 0.22 ) }
    dend_29 { pt3dadd( -13.2221, -217.334, -103.106, 0.37 ) }
    dend_29 { pt3dadd( -13.8312, -218.049, -104.296, 0.22 ) }
    dend_29 { pt3dadd( -14.3354, -218.63, -105.286, 0.81 ) }
    dend_29 { pt3dadd( -14.5567, -218.881, -105.706, 1.03 ) }
    dend_29 { pt3dadd( -15.2954, -219.79, -107.328, 0.37 ) }
    dend_29 { pt3dadd( -15.5439, -220.111, -107.928, 0.52 ) }
    dend_29 { pt3dadd( -16.1245, -220.87, -109.346, 0.29 ) }
    dend_29 { pt3dadd( -16.3631, -221.17, -109.884, 0.66 ) }
    dend_29 { pt3dadd( -16.5643, -221.427, -110.313, 0.81 ) }
    dend_29 { pt3dadd( -17.4065, -222.615, -112.303, 0.29 ) }
    dend_29 { pt3dadd( -17.6091, -222.941, -112.811, 0.44 ) }
    dend_29 { pt3dadd( -17.6329, -222.986, -112.884, 0.44 ) }
    dend_29 { pt3dadd( -17.8456, -223.42, -113.558, 0.59 ) }
    dend_29 { pt3dadd( -18.0717, -224.03, -114.494, 1.03 ) }
    dend_29 { pt3dadd( -18.3223, -225.206, -116.284, 1.03 ) }
    dend_29 { pt3dadd( -18.3956, -226.233, -117.819, 0.29 ) }
    dend_29 { pt3dadd( -18.3904, -227.178, -119.241, 0.88 ) }
    dend_29 { pt3dadd( -18.3841, -227.517, -119.755, 1.25 ) }
    dend_29 { pt3dadd( -18.3729, -229.721, -123.106, 0.29 ) }
    dend_29 { pt3dadd( -18.3793, -231.094, -125.189, 0.37 ) }
    dend_29 { pt3dadd( -18.4138, -232.107, -126.665, 0.81 ) }
    dend_29 { pt3dadd( -18.472, -233.036, -128.02, 0.44 ) }
    dend_29 { pt3dadd( -18.5455, -233.611, -128.835, 0.37 ) }
    dend_29 { pt3dadd( -18.7072, -234.43, -129.948, 0.37 ) }
    dend_29 { pt3dadd( -19.0734, -235.504, -131.234, 0.37 ) }
    dend_29 { pt3dadd( -19.4454, -236.334, -132.137, 0.37 ) }
    dend_29 { pt3dadd( -19.7612, -237.02, -132.827, 1.11 ) }
    dend_29 { pt3dadd( -19.9706, -237.471, -133.264, 1.25 ) }
    dend_29 { pt3dadd( -20.496, -238.524, -134.338, 0.81 ) }
    dend_29 { pt3dadd( -21.0245, -239.453, -135.286, 0.52 ) }
    dend_29 { pt3dadd( -21.3203, -239.863, -135.668, 0.52 ) }
    dend_29 { pt3dadd( -21.3625, -239.918, -135.724, 0.52 ) }
    dend_29 { pt3dadd( -21.9004, -240.597, -136.399, 0.52 ) }
    dend_29 { pt3dadd( -22.8495, -241.74, -137.617, 0.44 ) }
    dend_29 { pt3dadd( -23.3043, -242.267, -138.178, 0.44 ) }
    dend_29 { pt3dadd( -24.0457, -243.169, -139.233, 0.74 ) }
    dend_29 { pt3dadd( -24.9581, -244.349, -140.669, 0.74 ) }
    dend_29 { pt3dadd( -24.9888, -244.392, -140.72, 0.74 ) }
    dend_29 { pt3dadd( -25.6882, -245.474, -141.992, 0.37 ) }
    dend_29 { pt3dadd( -25.9488, -245.888, -142.487, 0.81 ) }
    dend_29 { pt3dadd( -26.8296, -247.168, -144.197, 0.29 ) }
    dend_29 { pt3dadd( -27.1425, -247.565, -144.789, 0.29 ) }
    dend_29 { pt3dadd( -27.4674, -247.951, -145.299, 0.88 ) }
    dend_29 { pt3dadd( -27.5985, -248.113, -145.506, 1.25 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -1.27315, -207.767, -92.7726, 0.59 ) }
    dend_28 { pt3dadd( -0.54902, -210.804, -93.5886, 0.59 ) }
    dend_28 { pt3dadd( -0.273304, -212.067, -93.8736, 0.59 ) }
    dend_28 { pt3dadd( -0.192925, -212.419, -93.9418, 0.81 ) }
    dend_28 { pt3dadd( 0.0120869, -213.234, -94.0722, 0.81 ) }
    dend_28 { pt3dadd( 0.333926, -214.41, -94.2349, 0.15 ) }
    dend_28 { pt3dadd( 0.65931, -215.486, -94.3579, 0.15 ) }
    dend_28 { pt3dadd( 0.685279, -215.562, -94.3506, 0.15 ) }
    dend_28 { pt3dadd( 0.858492, -216.01, -94.3092, 0.59 ) }
    dend_28 { pt3dadd( 1.12719, -216.672, -94.2517, 0.88 ) }
    dend_28 { pt3dadd( 1.19467, -216.842, -94.2386, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_28 { pt3dadd( 1.38728, -217.44, -94.2046, 0.88 ) }
    dend_28 { pt3dadd( 1.6861, -218.711, -94.1229, 0.52 ) }
    dend_28 { pt3dadd( 1.83315, -219.761, -94.0563, 0.44 ) }
    dend_28 { pt3dadd( 1.86623, -220.355, -94.0207, 0.74 ) }
    dend_28 { pt3dadd( 1.85783, -221.108, -93.9756, 0.44 ) }
    dend_28 { pt3dadd( 1.77931, -222.153, -93.8678, 0.29 ) }
    dend_28 { pt3dadd( 1.66409, -222.87, -93.7733, 0.88 ) }
    dend_28 { pt3dadd( 1.55157, -223.534, -93.6612, 0.96 ) }
    dend_28 { pt3dadd( 1.42064, -224.558, -93.4547, 0.81 ) }
    dend_28 { pt3dadd( 1.35114, -225.733, -93.2026, 0.29 ) }
    dend_28 { pt3dadd( 1.38903, -226.959, -92.9552, 0.44 ) }
    dend_28 { pt3dadd( 1.49534, -227.824, -92.7754, 0.22 ) }
    dend_28 { pt3dadd( 1.80049, -229.192, -92.5031, 0.22 ) }
    dend_28 { pt3dadd( 2.09173, -230.013, -92.3331, 0.59 ) }
    dend_28 { pt3dadd( 2.53534, -230.926, -92.0888, 0.81 ) }
    dend_28 { pt3dadd( 2.99893, -231.713, -91.8504, 0.81 ) }
    dend_28 { pt3dadd( 3.37602, -232.312, -91.6679, 0.88 ) }
    dend_28 { pt3dadd( 4.01239, -233.444, -91.3088, 0.37 ) }
    dend_28 { pt3dadd( 4.44797, -234.61, -90.9691, 0.59 ) }
    dend_28 { pt3dadd( 4.71413, -235.779, -90.6846, 0.96 ) }
    dend_28 { pt3dadd( 4.81526, -236.619, -90.5109, 0.59 ) }
    dend_28 { pt3dadd( 4.83392, -237.645, -90.3453, 0.29 ) }
    dend_28 { pt3dadd( 4.74867, -239.084, -90.279, 0.29 ) }
    dend_28 { pt3dadd( 4.55524, -240.662, -90.3458, 0.74 ) }
    dend_28 { pt3dadd( 4.42436, -241.582, -90.4499, 0.96 ) }
    dend_28 { pt3dadd( 4.40772, -241.719, -90.4685, 0.96 ) }
    dend_28 { pt3dadd( 4.33617, -242.46, -90.5569, 0.96 ) }
    dend_28 { pt3dadd( 4.23232, -243.823, -90.6955, 0.44 ) }
    dend_28 { pt3dadd( 4.17862, -244.763, -90.7668, 0.29 ) }
    dend_28 { pt3dadd( 4.02934, -246.031, -90.78, 0.59 ) }
    dend_28 { pt3dadd( 3.80986, -247.071, -90.722, 1.03 ) }
    dend_28 { pt3dadd( 3.71781, -247.39, -90.6921, 1.11 ) }
    dend_28 { pt3dadd( 3.50744, -248.015, -90.6053, 0.96 ) }
    dend_28 { pt3dadd( 3.23137, -248.763, -90.4724, 0.96 ) }
    dend_28 { pt3dadd( 2.78794, -249.881, -90.2676, 0.37 ) }
    dend_28 { pt3dadd( 2.34181, -250.98, -90.0826, 0.22 ) }
    dend_28 { pt3dadd( 2.0808, -251.686, -89.9851, 0.44 ) }
    dend_28 { pt3dadd( 1.68764, -252.889, -89.8183, 0.44 ) }
    dend_28 { pt3dadd( 1.48486, -253.738, -89.6961, 0.66 ) }
    dend_28 { pt3dadd( 1.37866, -254.604, -89.5734, 0.88 ) }
    dend_28 { pt3dadd( 1.33447, -255.519, -89.4678, 0.29 ) }
    dend_28 { pt3dadd( 1.29115, -256.536, -89.2554, 0.29 ) }
    dend_28 { pt3dadd( 1.28771, -256.647, -89.224, 0.29 ) }
    dend_28 { pt3dadd( 1.23851, -257.613, -88.9103, 0.29 ) }
    dend_28 { pt3dadd( 1.15296, -258.843, -88.5007, 0.29 ) }
    dend_28 { pt3dadd( 1.03884, -260.235, -88.0383, 0.29 ) }
    dend_28 { pt3dadd( 0.797018, -261.991, -87.3762, 0.59 ) }
    dend_28 { pt3dadd( 0.694109, -262.435, -87.202, 0.74 ) }
    dend_28 { pt3dadd( 0.353316, -263.591, -86.7626, 0.29 ) }
    dend_28 { pt3dadd( 0.0419588, -264.496, -86.4454, 0.29 ) }
    dend_28 { pt3dadd( 0.0177512, -264.582, -86.4185, 0.29 ) }
    dend_28 { pt3dadd( -0.121837, -265.654, -86.1769, 0.81 ) }
    dend_28 { pt3dadd( -0.128825, -266.322, -86.1054, 1.25 ) }
    dend_28 { pt3dadd( -0.0908837, -267.055, -86.0747, 0.88 ) }
    dend_28 { pt3dadd( 0.0782137, -268.278, -86.0761, 0.52 ) }
    dend_28 { pt3dadd( 0.373078, -269.769, -86.0624, 0.29 ) }
    dend_28 { pt3dadd( 0.546346, -270.516, -86.0563, 0.66 ) }
    dend_28 { pt3dadd( 0.842328, -271.491, -86.0525, 0.74 ) }
    dend_28 { pt3dadd( 1.46363, -273.092, -85.9908, 0.22 ) }
    dend_28 { pt3dadd( 1.88044, -274.019, -85.926, 0.22 ) }
    dend_28 { pt3dadd( 2.35048, -274.939, -85.7833, 0.88 ) }
    dend_28 { pt3dadd( 2.39537, -275.03, -85.7605, 0.88 ) }
    dend_28 { pt3dadd( 2.79272, -275.844, -85.4851, 0.81 ) }
    dend_28 { pt3dadd( 3.21516, -276.714, -85.1616, 0.74 ) }
    dend_28 { pt3dadd( 3.24878, -276.795, -85.1312, 0.74 ) }
    dend_28 { pt3dadd( 3.57051, -278.005, -84.7918, 0.29 ) }
    dend_28 { pt3dadd( 3.77422, -279.207, -84.5484, 0.74 ) }
    dend_28 { pt3dadd( 3.80174, -279.624, -84.4797, 0.81 ) }
    dend_28 { pt3dadd( 3.73857, -280.822, -84.3674, 0.22 ) }
    dend_28 { pt3dadd( 3.64247, -281.423, -84.3514, 0.66 ) }
    dend_28 { pt3dadd( 3.51369, -282.035, -84.3702, 0.74 ) }
    dend_28 { pt3dadd( 3.49237, -282.113, -84.3787, 0.74 ) }
    dend_28 { pt3dadd( 3.20235, -283.005, -84.5095, 0.74 ) }
    dend_28 { pt3dadd( 2.80111, -284.041, -84.6892, 0.22 ) }
    dend_28 { pt3dadd( 2.42193, -284.879, -84.9454, 0.22 ) }
    dend_28 { pt3dadd( 2.39194, -284.945, -84.972, 0.22 ) }
    dend_28 { pt3dadd( 2.21172, -285.421, -85.1953, 0.66 ) }
    dend_28 { pt3dadd( 2.19123, -285.512, -85.239, 0.66 ) }
    dend_28 { pt3dadd( 2.15318, -286.008, -85.4849, 0.66 ) }
    dend_28 { pt3dadd( 2.1167, -287.388, -86.1202, 0.52 ) }
    dend_28 { pt3dadd( 2.11588, -287.457, -86.1633, 0.52 ) }
    dend_28 { pt3dadd( 2.07622, -288.382, -86.7597, 0.22 ) }
    dend_28 { pt3dadd( 2.01521, -289.138, -87.2401, 1.03 ) }
    dend_28 { pt3dadd( 1.9813, -289.601, -87.5429, 1.11 ) }
    dend_28 { pt3dadd( 1.9208, -290.452, -88.0777, 0.88 ) }
    dend_28 { pt3dadd( 1.68419, -293.189, -89.6531, 0.22 ) }
    dend_28 { pt3dadd( 1.62744, -293.848, -90.0171, 0.88 ) }
    dend_28 { pt3dadd( 1.5581, -294.558, -90.4111, 0.59 ) }
    dend_28 { pt3dadd( 1.46892, -295.616, -90.9687, 0.52 ) }
    dend_28 { pt3dadd( 1.42652, -296.573, -91.4111, 0.81 ) }
    dend_28 { pt3dadd( 1.46694, -297.272, -91.7627, 0.81 ) }
    dend_28 { pt3dadd( 1.68248, -298.744, -92.6599, 0.29 ) }
    dend_28 { pt3dadd( 1.69625, -298.805, -92.7045, 0.29 ) }
    dend_28 { pt3dadd( 1.86239, -299.33, -93.16, 0.96 ) }
    dend_28 { pt3dadd( 2.06566, -299.84, -93.6724, 1.25 ) }
    dend_28 { pt3dadd( 3.16191, -302.116, -96.2106, 0.52 ) }
    dend_28 { pt3dadd( 3.97403, -303.596, -97.9732, 0.44 ) }
    dend_28 { pt3dadd( 4.22584, -303.998, -98.4613, 0.66 ) }
    dend_28 { pt3dadd( 5.02277, -305.183, -99.8774, 0.52 ) }
    dend_28 { pt3dadd( 5.95694, -306.451, -101.358, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_28 { pt3dadd( 6.19705, -306.754, -101.688, 0.59 ) }
    dend_28 { pt3dadd( 6.3017, -306.884, -101.799, 0.59 ) }
    dend_28 { pt3dadd( 7.37241, -308.137, -102.694, 0.22 ) }
    dend_28 { pt3dadd( 7.43323, -308.209, -102.743, 0.22 ) }
    dend_28 { pt3dadd( 7.86783, -308.722, -102.965, 0.59 ) }
    dend_28 { pt3dadd( 8.00607, -308.879, -103.0, 0.59 ) }
    dend_28 { pt3dadd( 8.19661, -309.09, -103.053, 0.59 ) }
    dend_28 { pt3dadd( 8.25858, -309.159, -103.068, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -5.91136, 130.356, 7.22119, 0.29 ) }
    dend_24 { pt3dadd( -7.32294, 131.277, 6.56718, 0.29 ) }
    dend_24 { pt3dadd( -8.30735, 131.894, 6.20527, 0.29 ) }
    dend_24 { pt3dadd( -9.6778, 132.737, 5.77162, 0.66 ) }
    dend_24 { pt3dadd( -10.8701, 133.471, 5.36432, 0.29 ) }
    dend_24 { pt3dadd( -11.4672, 133.842, 5.15556, 0.37 ) }
    dend_24 { pt3dadd( -12.7007, 134.616, 4.72698, 0.37 ) }
    dend_24 { pt3dadd( -13.9806, 135.454, 4.34127, 0.59 ) }
    dend_24 { pt3dadd( -14.6221, 135.88, 4.14619, 0.81 ) }
    dend_24 { pt3dadd( -15.7152, 136.608, 3.83385, 0.37 ) }
    dend_24 { pt3dadd( -16.0625, 136.865, 3.75499, 0.88 ) }
    dend_24 { pt3dadd( -16.5605, 137.277, 3.63142, 1.03 ) }
    dend_24 { pt3dadd( -17.1824, 137.863, 3.47101, 0.81 ) }
    dend_24 { pt3dadd( -17.6696, 138.375, 3.35647, 0.37 ) }
    dend_24 { pt3dadd( -17.728, 138.448, 3.34764, 0.37 ) }
    dend_24 { pt3dadd( -18.2915, 139.325, 3.32372, 0.37 ) }
    dend_24 { pt3dadd( -18.3482, 139.431, 3.32048, 0.37 ) }
    dend_24 { pt3dadd( -18.7486, 140.299, 3.41249, 0.37 ) }
    dend_24 { pt3dadd( -18.779, 140.377, 3.42966, 0.37 ) }
    dend_24 { pt3dadd( -19.2228, 141.532, 3.7914, 0.22 ) }
    dend_24 { pt3dadd( -19.4683, 142.169, 4.01805, 0.74 ) }
    dend_24 { pt3dadd( -19.4956, 142.244, 4.04697, 0.74 ) }
    dend_24 { pt3dadd( -20.1213, 143.999, 4.70915, 0.29 ) }
    dend_24 { pt3dadd( -20.2406, 144.353, 4.85245, 0.66 ) }
    dend_24 { pt3dadd( -20.4076, 144.837, 5.05224, 0.66 ) }
    dend_24 { pt3dadd( -20.7178, 145.694, 5.41008, 0.37 ) }
    dend_24 { pt3dadd( -20.9277, 146.309, 5.64283, 0.29 ) }
    dend_24 { pt3dadd( -21.1201, 146.935, 5.82526, 0.29 ) }
    dend_24 { pt3dadd( -21.3602, 147.868, 5.99888, 0.96 ) }
    dend_24 { pt3dadd( -21.3807, 147.946, 6.01362, 0.96 ) }
    dend_24 { pt3dadd( -21.4934, 148.455, 6.10679, 0.66 ) }
    dend_24 { pt3dadd( -21.6459, 149.233, 6.24478, 0.29 ) }
    dend_24 { pt3dadd( -21.809, 150.004, 6.35868, 0.29 ) }
    dend_24 { pt3dadd( -21.8275, 150.084, 6.36521, 0.29 ) }
    dend_24 { pt3dadd( -22.0154, 150.875, 6.37711, 1.11 ) }
    dend_24 { pt3dadd( -22.1393, 151.631, 6.37407, 1.47 ) }
    dend_24 { pt3dadd( -22.1598, 151.839, 6.37076, 1.47 ) }
    dend_24 { pt3dadd( -22.227, 152.893, 6.34362, 0.66 ) }
    dend_24 { pt3dadd( -22.2636, 153.716, 6.32487, 0.37 ) }
    dend_24 { pt3dadd( -22.3062, 154.75, 6.30496, 0.37 ) }
    dend_24 { pt3dadd( -22.3557, 156.363, 6.17425, 0.29 ) }
    dend_24 { pt3dadd( -22.4205, 158.071, 5.96185, 0.29 ) }
    dend_24 { pt3dadd( -22.426, 158.246, 5.93845, 0.29 ) }
    dend_24 { pt3dadd( -22.4347, 159.343, 5.77501, 0.96 ) }
    dend_24 { pt3dadd( -22.4364, 159.934, 5.67736, 1.18 ) }
    dend_24 { pt3dadd( -22.4726, 161.867, 5.24593, 0.37 ) }
    dend_24 { pt3dadd( -22.5326, 162.507, 5.03166, 0.37 ) }
    dend_24 { pt3dadd( -28.7355, 172.364, 3.88759, 0.37 ) }
    dend_24 { pt3dadd( -32.7196, 183.102, 1.48534, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.91136, 130.356, 7.22119, 1.03 ) }
    dend_21 { pt3dadd( -5.97181, 130.761, 7.35296, 1.03 ) }
    dend_21 { pt3dadd( -6.14687, 131.732, 7.63213, 1.4 ) }
    dend_21 { pt3dadd( -6.35354, 132.956, 7.93121, 1.4 ) }
    dend_21 { pt3dadd( -6.36516, 133.032, 7.94787, 1.4 ) }
    dend_21 { pt3dadd( -6.51028, 134.146, 8.16057, 1.25 ) }
    dend_21 { pt3dadd( -6.62625, 135.324, 8.38591, 0.81 ) }
    dend_21 { pt3dadd( -6.6312, 135.4, 8.40389, 0.81 ) }
    dend_21 { pt3dadd( -6.66419, 136.271, 8.62145, 0.96 ) }
    dend_21 { pt3dadd( -6.66618, 136.578, 8.69206, 0.96 ) }
    dend_21 { pt3dadd( -6.66069, 137.443, 8.90129, 1.18 ) }
    dend_21 { pt3dadd( -6.62731, 138.432, 9.16414, 0.96 ) }
    dend_21 { pt3dadd( -6.59864, 139.832, 9.4761, 1.18 ) }
    dend_21 { pt3dadd( -6.59966, 139.947, 9.49699, 1.18 ) }
    dend_21 { pt3dadd( -6.62947, 140.89, 9.60543, 1.18 ) }
    dend_21 { pt3dadd( -6.66616, 141.967, 9.61992, 0.96 ) }
    dend_21 { pt3dadd( -6.66975, 142.064, 9.61128, 0.96 ) }
    dend_21 { pt3dadd( -6.69716, 143.375, 9.39458, 1.47 ) }
    dend_21 { pt3dadd( -6.69678, 143.452, 9.3777, 1.47 ) }
    dend_21 { pt3dadd( -6.63174, 144.66, 9.13955, 1.18 ) }
    dend_21 { pt3dadd( -6.48384, 145.905, 8.90858, 0.81 ) }
    dend_21 { pt3dadd( -6.45605, 146.043, 8.89014, 0.81 ) }
    dend_21 { pt3dadd( -6.26291, 146.899, 8.91409, 0.74 ) }
    dend_21 { pt3dadd( -6.24769, 146.967, 8.93009, 0.74 ) }
    dend_21 { pt3dadd( -6.17533, 147.545, 9.13159, 0.74 ) }
    dend_21 { pt3dadd( -6.17766, 147.617, 9.16364, 0.74 ) }
    dend_21 { pt3dadd( -6.28629, 148.217, 9.4283, 0.81 ) }
    dend_21 { pt3dadd( -6.66425, 149.534, 9.94695, 1.18 ) }
    dend_21 { pt3dadd( -6.85765, 150.063, 10.136, 1.4 ) }
    dend_21 { pt3dadd( -7.23419, 151.018, 10.4476, 0.96 ) }
    dend_21 { pt3dadd( -7.61564, 151.94, 10.7238, 0.96 ) }
    dend_21 { pt3dadd( -7.95653, 152.763, 10.937, 0.96 ) }
    dend_21 { pt3dadd( -8.37676, 153.793, 11.1311, 0.96 ) }
    dend_21 { pt3dadd( -8.4036, 153.865, 11.1457, 0.96 ) }
    dend_21 { pt3dadd( -8.58237, 154.401, 11.3008, 0.96 ) }
    dend_21 { pt3dadd( -8.69741, 154.799, 11.4398, 1.18 ) }
    dend_21 { pt3dadd( -8.7437, 154.988, 11.5166, 1.18 ) }
    dend_21 { pt3dadd( -8.92556, 155.771, 11.8427, 1.18 ) }
    dend_21 { pt3dadd( -9.28209, 157.354, 12.4606, 0.96 ) }
    dend_21 { pt3dadd( -9.57888, 158.652, 12.9679, 0.66 ) }
    dend_21 { pt3dadd( -9.72583, 159.274, 13.212, 0.66 ) }
    dend_21 { pt3dadd( -9.93055, 160.105, 13.5132, 0.88 ) }
    dend_21 { pt3dadd( -10.1337, 160.952, 13.7936, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_21 { pt3dadd( -10.3204, 161.757, 14.032, 1.03 ) }
    dend_21 { pt3dadd( -10.5119, 162.632, 14.227, 1.03 ) }
    dend_21 { pt3dadd( -10.5257, 162.698, 14.2426, 1.03 ) }
    dend_21 { pt3dadd( -10.6848, 163.447, 14.402, 1.11 ) }
    dend_21 { pt3dadd( -10.8572, 164.24, 14.5387, 1.11 ) }
    dend_21 { pt3dadd( -10.8831, 164.353, 14.556, 1.11 ) }
    dend_21 { pt3dadd( -11.1632, 165.519, 14.6973, 0.96 ) }
    dend_21 { pt3dadd( -11.3639, 166.332, 14.814, 0.96 ) }
    dend_21 { pt3dadd( -11.6188, 167.433, 15.0011, 1.4 ) }
    dend_21 { pt3dadd( -11.7853, 168.205, 15.1479, 1.03 ) }
    dend_21 { pt3dadd( -11.9651, 169.167, 15.3284, 1.25 ) }
    dend_21 { pt3dadd( -12.1218, 170.35, 15.5447, 0.88 ) }
    dend_21 { pt3dadd( -12.1847, 171.456, 15.741, 0.88 ) }
    dend_21 { pt3dadd( -12.176, 172.414, 15.9198, 0.88 ) }
    dend_21 { pt3dadd( -12.1556, 172.634, 15.9612, 0.88 ) }
    dend_21 { pt3dadd( -12.0447, 173.428, 16.0937, 0.88 ) }
    dend_21 { pt3dadd( -11.898, 174.517, 16.2327, 0.81 ) }
    dend_21 { pt3dadd( -11.7797, 175.525, 16.3143, 0.81 ) }
    dend_21 { pt3dadd( -11.7767, 175.594, 16.3159, 0.81 ) }
    dend_21 { pt3dadd( -11.8026, 176.267, 16.3677, 0.96 ) }
    dend_21 { pt3dadd( -11.9481, 177.42, 16.4989, 0.96 ) }
    dend_21 { pt3dadd( -12.1874, 178.657, 16.6729, 1.03 ) }
    dend_21 { pt3dadd( -12.2014, 178.716, 16.6824, 1.03 ) }
    dend_21 { pt3dadd( -12.6054, 180.219, 16.9355, 1.03 ) }
    dend_21 { pt3dadd( -12.9392, 181.464, 17.1405, 1.03 ) }
    dend_21 { pt3dadd( -13.2476, 182.707, 17.3391, 1.03 ) }
    dend_21 { pt3dadd( -13.3397, 183.174, 17.4116, 1.03 ) }
    dend_21 { pt3dadd( -13.4138, 183.76, 17.4923, 1.03 ) }
    dend_21 { pt3dadd( -13.4878, 184.702, 17.599, 0.88 ) }
    dend_21 { pt3dadd( -13.4983, 185.854, 17.6829, 0.88 ) }
    dend_21 { pt3dadd( -13.4569, 186.846, 17.6979, 1.11 ) }
    dend_21 { pt3dadd( -13.4163, 187.253, 17.6861, 1.11 ) }
    dend_21 { pt3dadd( -13.2977, 188.341, 17.611, 1.11 ) }
    dend_21 { pt3dadd( -13.2786, 188.488, 17.5956, 1.11 ) }
    dend_21 { pt3dadd( -13.168, 189.248, 17.4911, 0.96 ) }
    dend_21 { pt3dadd( -13.1608, 189.305, 17.4812, 0.96 ) }
    dend_21 { pt3dadd( -13.0609, 190.516, 17.2566, 0.88 ) }
    dend_21 { pt3dadd( -13.022, 191.434, 17.0862, 0.66 ) }
    dend_21 { pt3dadd( -13.0198, 191.574, 17.0625, 0.66 ) }
    dend_21 { pt3dadd( -12.9997, 192.43, 16.943, 0.66 ) }
    dend_21 { pt3dadd( -12.9965, 192.508, 16.9352, 0.66 ) }
    dend_21 { pt3dadd( -12.9145, 193.41, 16.8969, 0.96 ) }
    dend_21 { pt3dadd( -12.8939, 193.548, 16.9007, 0.96 ) }
    dend_21 { pt3dadd( -12.702, 194.434, 16.9226, 0.96 ) }
    dend_21 { pt3dadd( -12.6615, 194.597, 16.9262, 0.96 ) }
    dend_21 { pt3dadd( -12.5421, 195.068, 16.9381, 0.96 ) }
    dend_21 { pt3dadd( -12.3259, 195.964, 17.012, 0.96 ) }
    dend_21 { pt3dadd( -12.1744, 196.613, 17.0929, 1.18 ) }
    dend_21 { pt3dadd( -12.0222, 197.377, 17.2053, 0.74 ) }
    dend_21 { pt3dadd( -11.8969, 198.284, 17.3499, 0.74 ) }
    dend_21 { pt3dadd( -11.8529, 198.979, 17.4616, 1.18 ) }
    dend_21 { pt3dadd( -11.9094, 200.061, 17.6286, 0.66 ) }
    dend_21 { pt3dadd( -12.0519, 200.873, 17.7437, 0.66 ) }
    dend_21 { pt3dadd( -12.3128, 201.846, 17.8651, 0.66 ) }
    dend_21 { pt3dadd( -12.6432, 202.801, 17.9708, 1.18 ) }
    dend_21 { pt3dadd( -12.9162, 203.489, 18.0156, 1.18 ) }
    dend_21 { pt3dadd( -13.488, 204.835, 18.0351, 0.96 ) }
    dend_21 { pt3dadd( -13.8843, 205.754, 18.037, 0.96 ) }
    dend_21 { pt3dadd( -14.1619, 206.421, 18.0576, 0.66 ) }
    dend_21 { pt3dadd( -14.1826, 206.476, 18.0608, 0.66 ) }
    dend_21 { pt3dadd( -14.539, 207.559, 18.1516, 0.59 ) }
    dend_21 { pt3dadd( -14.7362, 208.251, 18.2259, 1.03 ) }
    dend_21 { pt3dadd( -15.0674, 209.519, 18.4643, 0.81 ) }
    dend_21 { pt3dadd( -15.2466, 210.195, 18.6309, 1.03 ) }
    dend_21 { pt3dadd( -15.2849, 210.327, 18.6674, 1.03 ) }
    dend_21 { pt3dadd( -15.5462, 211.153, 18.9012, 1.03 ) }
    dend_21 { pt3dadd( -15.6452, 211.431, 18.9838, 1.03 ) }
    dend_21 { pt3dadd( -16.0699, 212.55, 19.2834, 0.96 ) }
    dend_21 { pt3dadd( -16.4362, 213.561, 19.493, 0.96 ) }
    dend_21 { pt3dadd( -16.6729, 214.335, 19.635, 0.96 ) }
    dend_21 { pt3dadd( -16.869, 215.12, 19.7605, 1.11 ) }
    dend_21 { pt3dadd( -16.9702, 215.693, 19.8335, 1.33 ) }
    dend_21 { pt3dadd( -16.9795, 215.771, 19.8402, 1.33 ) }
    dend_21 { pt3dadd( -17.015, 216.827, 19.8608, 0.88 ) }
    dend_21 { pt3dadd( -16.9825, 217.639, 19.8792, 1.11 ) }
    dend_21 { pt3dadd( -16.9632, 217.787, 19.8891, 1.11 ) }
    dend_21 { pt3dadd( -16.8151, 218.431, 19.9624, 1.11 ) }
    dend_21 { pt3dadd( -16.7939, 218.495, 19.9722, 1.11 ) }
    dend_21 { pt3dadd( -16.5326, 219.144, 20.1543, 0.88 ) }
    dend_21 { pt3dadd( -16.5054, 219.204, 20.1764, 0.81 ) }
    dend_21 { pt3dadd( -16.2096, 219.86, 20.4261, 1.03 ) }
    dend_21 { pt3dadd( -16.0036, 220.34, 20.6159, 1.03 ) }
    dend_21 { pt3dadd( -15.6995, 221.137, 20.9259, 0.81 ) }
    dend_21 { pt3dadd( -15.3195, 222.347, 21.3689, 0.74 ) }
    dend_21 { pt3dadd( -15.1071, 223.23, 21.665, 0.74 ) }
    dend_21 { pt3dadd( -14.9481, 224.127, 21.9626, 0.88 ) }
    dend_21 { pt3dadd( -14.8851, 224.63, 22.1203, 0.88 ) }
    dend_21 { pt3dadd( -14.8395, 225.379, 22.3566, 0.88 ) }
    dend_21 { pt3dadd( -14.8323, 225.875, 22.5022, 0.88 ) }
    dend_21 { pt3dadd( -14.8121, 226.557, 22.6655, 0.88 ) }
    dend_21 { pt3dadd( -14.7321, 227.532, 22.8896, 0.88 ) }
    dend_21 { pt3dadd( -14.6543, 228.03, 23.0174, 0.88 ) }
    dend_21 { pt3dadd( -14.6257, 228.173, 23.0527, 0.88 ) }
    dend_21 { pt3dadd( -14.4125, 229.047, 23.2695, 0.88 ) }
    dend_21 { pt3dadd( -14.1815, 229.964, 23.4785, 0.88 ) }
    dend_21 { pt3dadd( -13.9206, 230.969, 23.6835, 0.44 ) }
    dend_21 { pt3dadd( -13.7131, 231.888, 23.871, 0.81 ) }
    dend_21 { pt3dadd( -13.6017, 232.581, 24.0248, 1.25 ) }
    dend_21 { pt3dadd( -13.5044, 233.452, 24.2289, 0.96 ) }
    dend_21 { pt3dadd( -13.4567, 234.584, 24.5011, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_21 { pt3dadd( -13.4636, 234.933, 24.585, 1.47 ) }
    dend_21 { pt3dadd( -13.5618, 236.402, 24.907, 1.11 ) }
    dend_21 { pt3dadd( -13.6552, 237.288, 25.0684, 0.96 ) }
    dend_21 { pt3dadd( -13.6635, 237.355, 25.08, 0.96 ) }
    dend_21 { pt3dadd( -13.7491, 238.139, 25.1867, 0.96 ) }
    dend_21 { pt3dadd( -13.7541, 238.2, 25.1923, 0.96 ) }
    dend_21 { pt3dadd( -13.7833, 239.202, 25.2502, 0.96 ) }
    dend_21 { pt3dadd( -13.7782, 239.342, 25.2491, 0.96 ) }
    dend_21 { pt3dadd( -13.6745, 240.647, 25.2124, 0.96 ) }
    dend_21 { pt3dadd( -13.5054, 242.137, 25.096, 0.96 ) }
    dend_21 { pt3dadd( -13.3156, 243.474, 24.9436, 0.96 ) }
    dend_21 { pt3dadd( -13.1886, 244.279, 24.8632, 0.96 ) }
    dend_21 { pt3dadd( -13.0588, 244.997, 24.7952, 0.96 ) }
    dend_21 { pt3dadd( -12.8675, 245.972, 24.7146, 1.11 ) }
    dend_21 { pt3dadd( -12.558, 247.423, 24.6141, 1.11 ) }
    dend_21 { pt3dadd( -12.545, 247.483, 24.6152, 1.11 ) }
    dend_21 { pt3dadd( -12.274, 248.769, 24.8166, 1.11 ) }
    dend_21 { pt3dadd( -12.2621, 248.834, 24.8347, 1.11 ) }
    dend_21 { pt3dadd( -12.126, 249.659, 25.1502, 1.11 ) }
    dend_21 { pt3dadd( -12.019, 250.334, 25.4494, 1.18 ) }
    dend_21 { pt3dadd( -11.8592, 251.484, 26.0106, 0.88 ) }
    dend_21 { pt3dadd( -11.7468, 252.293, 26.37, 0.66 ) }
    dend_21 { pt3dadd( -11.7391, 252.359, 26.3945, 0.66 ) }
    dend_21 { pt3dadd( -11.7229, 252.981, 26.5972, 0.81 ) }
    dend_21 { pt3dadd( -11.757, 253.784, 26.8148, 0.81 ) }
    dend_21 { pt3dadd( -11.762, 253.853, 26.8288, 0.81 ) }
    dend_21 { pt3dadd( -11.8259, 254.611, 26.9184, 0.66 ) }
    dend_21 { pt3dadd( -11.8854, 255.41, 26.9819, 1.18 ) }
    dend_21 { pt3dadd( -11.9694, 256.677, 27.0685, 1.03 ) }
    dend_21 { pt3dadd( -12.0153, 257.478, 27.1132, 0.88 ) }
    dend_21 { pt3dadd( -12.0533, 258.496, 27.1352, 0.74 ) }
    dend_21 { pt3dadd( -12.0694, 259.659, 27.1268, 1.25 ) }
    dend_21 { pt3dadd( -12.0683, 260.277, 27.1011, 1.03 ) }
    dend_21 { pt3dadd( -12.0629, 260.425, 27.0924, 1.03 ) }
    dend_21 { pt3dadd( -11.9948, 261.443, 26.993, 1.03 ) }
    dend_21 { pt3dadd( -11.9495, 262.266, 26.9683, 1.03 ) }
    dend_21 { pt3dadd( -11.9428, 262.337, 26.9743, 1.03 ) }
    dend_21 { pt3dadd( -11.8001, 263.375, 27.1841, 1.25 ) }
    dend_21 { pt3dadd( -11.7872, 263.439, 27.2057, 1.25 ) }
    dend_21 { pt3dadd( -11.5235, 264.495, 27.6418, 1.4 ) }
    dend_21 { pt3dadd( -11.049, 266.109, 28.4408, 0.74 ) }
    dend_21 { pt3dadd( -10.7487, 267.092, 28.9624, 0.59 ) }
    dend_21 { pt3dadd( -10.7215, 267.177, 29.008, 0.59 ) }
    dend_21 { pt3dadd( -10.3203, 268.327, 29.6119, 0.59 ) }
    dend_21 { pt3dadd( -10.1007, 268.977, 29.9095, 0.81 ) }
    dend_21 { pt3dadd( -10.0814, 269.039, 29.9323, 0.81 ) }
    dend_21 { pt3dadd( -9.89117, 269.808, 30.0735, 0.81 ) }
    dend_21 { pt3dadd( -9.85592, 270.014, 30.0951, 0.81 ) }
    dend_21 { pt3dadd( -9.74178, 270.875, 30.1489, 1.03 ) }
    dend_21 { pt3dadd( -9.65077, 271.737, 30.1635, 1.25 ) }
    dend_21 { pt3dadd( -9.56562, 272.395, 30.2137, 1.25 ) }
    dend_21 { pt3dadd( -9.55651, 272.453, 30.2206, 1.25 ) }
    dend_21 { pt3dadd( -9.4136, 273.288, 30.4016, 0.96 ) }
    dend_21 { pt3dadd( -9.1986, 274.496, 30.7415, 0.74 ) }
    dend_21 { pt3dadd( -9.1126, 275.037, 30.9537, 0.74 ) }
    dend_21 { pt3dadd( -8.93477, 276.24, 31.513, 0.88 ) }
    dend_21 { pt3dadd( -8.86192, 276.838, 31.81, 0.74 ) }
    dend_21 { pt3dadd( -8.73651, 278.093, 32.4411, 0.74 ) }
    dend_21 { pt3dadd( -8.69537, 278.722, 32.7591, 0.74 ) }
    dend_21 { pt3dadd( -8.66716, 279.972, 33.3684, 0.96 ) }
    dend_21 { pt3dadd( -8.67749, 280.718, 33.6927, 1.03 ) }
    dend_21 { pt3dadd( -8.72206, 281.467, 33.9558, 1.03 ) }
    dend_21 { pt3dadd( -8.77084, 282.216, 34.171, 1.18 ) }
    dend_21 { pt3dadd( -8.80343, 283.036, 34.321, 0.59 ) }
    dend_21 { pt3dadd( -8.80727, 283.523, 34.384, 0.37 ) }
    dend_21 { pt3dadd( -8.79221, 283.915, 34.4044, 0.81 ) }
    dend_21 { pt3dadd( -8.76308, 284.325, 34.4138, 0.81 ) }
    dend_21 { pt3dadd( -8.70593, 285.092, 34.412, 0.81 ) }
    dend_21 { pt3dadd( -8.68328, 285.805, 34.3935, 0.81 ) }
    dend_21 { pt3dadd( -8.71305, 286.4, 34.3658, 0.88 ) }
    dend_21 { pt3dadd( -8.79319, 286.877, 34.3377, 0.81 ) }
    dend_21 { pt3dadd( -9.01281, 287.649, 34.2862, 0.74 ) }
    dend_21 { pt3dadd( -9.30014, 288.408, 34.2329, 0.74 ) }
    dend_21 { pt3dadd( -9.66945, 289.183, 34.178, 0.96 ) }
    dend_21 { pt3dadd( -10.0774, 289.955, 34.1314, 0.44 ) }
    dend_21 { pt3dadd( -10.4818, 290.688, 34.098, 0.44 ) }
    dend_21 { pt3dadd( -10.8619, 291.384, 34.0822, 0.96 ) }
    dend_21 { pt3dadd( -10.8997, 291.455, 34.0829, 0.96 ) }
    dend_21 { pt3dadd( -11.1461, 291.977, 34.0904, 0.96 ) }
    dend_21 { pt3dadd( -11.4165, 292.643, 34.103, 0.96 ) }
    dend_21 { pt3dadd( -11.4823, 292.84, 34.1165, 0.96 ) }
    dend_21 { pt3dadd( -11.7017, 293.446, 34.1817, 0.81 ) }
    dend_21 { pt3dadd( -11.7764, 293.647, 34.2246, 0.81 ) }
    dend_21 { pt3dadd( -12.1237, 294.524, 34.4678, 0.81 ) }
    dend_21 { pt3dadd( -12.1477, 294.585, 34.4873, 0.81 ) }
    dend_21 { pt3dadd( -12.4574, 295.388, 34.768, 0.96 ) }
    dend_21 { pt3dadd( -12.7825, 296.309, 35.0921, 0.81 ) }
    dend_21 { pt3dadd( -13.1651, 297.509, 35.5234, 0.81 ) }
    dend_21 { pt3dadd( -13.1819, 297.572, 35.5451, 0.81 ) }
    dend_21 { pt3dadd( -13.3292, 298.403, 35.7981, 0.81 ) }
    dend_21 { pt3dadd( -13.3356, 298.47, 35.8133, 0.81 ) }
    dend_21 { pt3dadd( -13.326, 299.275, 35.8483, 0.59 ) }
    dend_21 { pt3dadd( -13.3187, 299.379, 35.8464, 0.59 ) }
    dend_21 { pt3dadd( -13.2752, 299.95, 35.7787, 0.59 ) }
    dend_21 { pt3dadd( -13.2072, 300.762, 35.6667, 0.59 ) }
    dend_21 { pt3dadd( -13.1151, 301.716, 35.4989, 0.81 ) }
    dend_21 { pt3dadd( -12.9633, 303.094, 35.2189, 0.81 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 97/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -4.19651, 71.5299, -28.055, 0.52 ) }
    dend_17 { pt3dadd( -3.53677, 72.937, -31.1342, 0.52 ) }
    dend_17 { pt3dadd( -3.52079, 72.9794, -31.2115, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_17 { pt3dadd( -3.19858, 74.0243, -32.697, 0.44 ) }
    dend_17 { pt3dadd( -3.1799, 74.1013, -32.7855, 0.44 ) }
    dend_17 { pt3dadd( -3.01683, 74.7783, -33.5884, 0.88 ) }
    dend_17 { pt3dadd( -2.82326, 75.3919, -34.3777, 1.11 ) }
    dend_17 { pt3dadd( -2.80131, 75.4581, -34.4535, 1.11 ) }
    dend_17 { pt3dadd( -2.46575, 76.2009, -35.4226, 1.03 ) }
    dend_17 { pt3dadd( -1.88367, 77.1735, -36.8813, 0.37 ) }
    dend_17 { pt3dadd( -1.11687, 78.1531, -38.7965, 0.44 ) }
    dend_17 { pt3dadd( -0.678762, 78.573, -39.8524, 0.44 ) }
    dend_17 { pt3dadd( -0.608806, 78.6353, -40.0219, 0.44 ) }
    dend_17 { pt3dadd( -0.290677, 79.0184, -40.9803, 0.44 ) }
    dend_17 { pt3dadd( -0.267221, 79.0797, -41.1028, 0.44 ) }
    dend_17 { pt3dadd( -0.152881, 80.1154, -42.7232, 0.96 ) }
    dend_17 { pt3dadd( -0.170404, 80.5379, -43.2074, 1.33 ) }
    dend_17 { pt3dadd( -0.244018, 81.5458, -44.2008, 1.18 ) }
    dend_17 { pt3dadd( -0.358247, 83.0816, -45.578, 0.81 ) }
    dend_17 { pt3dadd( -0.456117, 84.7569, -46.8965, 0.37 ) }
    dend_17 { pt3dadd( -0.457942, 84.8527, -46.9665, 0.37 ) }
    dend_17 { pt3dadd( -0.422945, 85.8165, -47.5743, 0.66 ) }
    dend_17 { pt3dadd( -0.359282, 86.4398, -47.9837, 0.88 ) }
    dend_17 { pt3dadd( -0.320518, 86.6427, -48.1089, 0.88 ) }
    dend_17 { pt3dadd( -0.100335, 87.5653, -48.6731, 0.88 ) }
    dend_17 { pt3dadd( 0.165669, 88.7205, -49.3904, 0.74 ) }
    dend_17 { pt3dadd( 0.345493, 89.7435, -50.0062, 0.59 ) }
    dend_17 { pt3dadd( 0.528812, 91.1981, -50.8452, 1.03 ) }
    dend_17 { pt3dadd( 0.604701, 92.3411, -51.4375, 0.29 ) }
    dend_17 { pt3dadd( 0.662363, 93.6854, -52.0447, 0.81 ) }
    dend_17 { pt3dadd( 0.676282, 94.3884, -52.308, 0.88 ) }
    dend_17 { pt3dadd( 0.686981, 95.2177, -52.5388, 0.96 ) }
    dend_17 { pt3dadd( 0.684483, 96.0465, -52.7532, 0.66 ) }
    dend_17 { pt3dadd( 0.696158, 97.5232, -53.0731, 0.22 ) }
    dend_17 { pt3dadd( 0.738301, 98.891, -53.372, 1.62 ) }
    dend_17 { pt3dadd( 0.801776, 99.831, -53.5646, 1.99 ) }
    dend_17 { pt3dadd( 0.876166, 100.668, -53.7251, 1.77 ) }
    dend_17 { pt3dadd( 1.04473, 102.411, -54.0069, 1.25 ) }
    dend_17 { pt3dadd( 1.18393, 103.706, -54.1535, 0.81 ) }
    dend_17 { pt3dadd( 1.30668, 104.699, -54.2178, 0.66 ) }
    dend_17 { pt3dadd( 1.43896, 105.759, -54.2402, 0.81 ) }
    dend_17 { pt3dadd( 1.62044, 107.014, -54.2183, 0.29 ) }
    dend_17 { pt3dadd( 1.8631, 108.5, -54.1223, 0.29 ) }
    dend_17 { pt3dadd( 2.01616, 109.269, -54.0113, 0.44 ) }
    dend_17 { pt3dadd( 2.03817, 109.369, -53.9966, 0.44 ) }
    dend_17 { pt3dadd( 2.28596, 110.527, -53.8469, 0.59 ) }
    dend_17 { pt3dadd( 2.45224, 111.306, -53.7741, 1.11 ) }
    dend_17 { pt3dadd( 2.62705, 112.171, -53.7285, 1.11 ) }
    dend_17 { pt3dadd( 2.84602, 113.28, -53.6925, 0.88 ) }
    dend_17 { pt3dadd( 3.14517, 114.887, -53.6632, 0.52 ) }
    dend_17 { pt3dadd( 3.47331, 116.685, -53.6402, 0.52 ) }
    dend_17 { pt3dadd( 3.776, 118.341, -53.6321, 0.66 ) }
    dend_17 { pt3dadd( 4.03176, 119.709, -53.6456, 0.29 ) }
    dend_17 { pt3dadd( 4.29132, 121.024, -53.692, 0.81 ) }
    dend_17 { pt3dadd( 4.31405, 121.129, -53.7002, 0.81 ) }
    dend_17 { pt3dadd( 4.49188, 121.807, -53.7978, 1.03 ) }
    dend_17 { pt3dadd( 4.56743, 122.04, -53.8534, 1.03 ) }
    dend_17 { pt3dadd( 4.83715, 122.821, -54.0958, 1.03 ) }
    dend_17 { pt3dadd( 5.14391, 123.683, -54.4017, 0.96 ) }
    dend_17 { pt3dadd( 5.37998, 124.453, -54.6728, 0.66 ) }
    dend_17 { pt3dadd( 5.60971, 125.482, -54.982, 0.52 ) }
    dend_17 { pt3dadd( 5.68704, 126.213, -55.1432, 0.44 ) }
    dend_17 { pt3dadd( 5.72021, 127.612, -55.3677, 0.44 ) }
    dend_17 { pt3dadd( 5.70261, 127.836, -55.3835, 0.44 ) }
    dend_17 { pt3dadd( 5.56714, 128.688, -55.3638, 0.37 ) }
    dend_17 { pt3dadd( 5.33364, 129.756, -55.2435, 0.37 ) }
    dend_17 { pt3dadd( 5.01707, 131.124, -54.9908, 1.03 ) }
    dend_17 { pt3dadd( 4.99685, 131.224, -54.9722, 1.03 ) }
    dend_17 { pt3dadd( 4.86653, 132.085, -54.83, 1.18 ) }
    dend_17 { pt3dadd( 4.78649, 132.945, -54.715, 0.59 ) }
    dend_17 { pt3dadd( 4.7631, 133.934, -54.62, 0.37 ) }
    dend_17 { pt3dadd( 4.81523, 135.011, -54.5662, 0.29 ) }
    dend_17 { pt3dadd( 4.99062, 136.435, -54.5079, 0.22 ) }
    dend_17 { pt3dadd( 5.09061, 137.112, -54.4748, 0.44 ) }
    dend_17 { pt3dadd( 5.12954, 137.337, -54.4644, 0.44 ) }
    dend_17 { pt3dadd( 5.34276, 138.263, -54.3363, 0.44 ) }
    dend_17 { pt3dadd( 5.37305, 138.359, -54.3105, 0.44 ) }
    dend_17 { pt3dadd( 5.85944, 139.692, -53.8375, 0.74 ) }
    dend_17 { pt3dadd( 6.26164, 140.739, -53.408, 1.33 ) }
    dend_17 { pt3dadd( 6.77981, 142.03, -52.8476, 1.4 ) }
    dend_17 { pt3dadd( 7.59932, 144.04, -51.9675, 0.52 ) }
    dend_17 { pt3dadd( 8.11979, 145.345, -51.4077, 0.59 ) }
    dend_17 { pt3dadd( 8.48268, 146.32, -51.0195, 0.74 ) }
    dend_17 { pt3dadd( 8.71314, 146.994, -50.7895, 0.74 ) }
    dend_17 { pt3dadd( 8.74637, 147.106, -50.7588, 0.74 ) }
    dend_17 { pt3dadd( 8.92986, 147.927, -50.6058, 0.44 ) }
    dend_17 { pt3dadd( 9.07694, 149.102, -50.531, 0.52 ) }
    dend_17 { pt3dadd( 9.16218, 149.879, -50.5208, 0.66 ) }
    dend_17 { pt3dadd( 9.26282, 150.577, -50.497, 0.44 ) }
    dend_17 { pt3dadd( 9.42494, 151.538, -50.4499, 0.22 ) }
    dend_17 { pt3dadd( 9.65786, 152.882, -50.3607, 0.66 ) }
    dend_17 { pt3dadd( 9.75713, 153.551, -50.3168, 0.88 ) }
    dend_17 { pt3dadd( 9.87567, 154.492, -50.2553, 0.29 ) }
    dend_17 { pt3dadd( 9.99239, 155.633, -50.1737, 0.22 ) }
    dend_17 { pt3dadd( 10.053, 156.397, -50.1184, 0.37 ) }
    dend_17 { pt3dadd( 10.082, 157.187, -50.0886, 0.52 ) }
    dend_17 { pt3dadd( 10.0598, 158.394, -50.1206, 0.29 ) }
    dend_17 { pt3dadd( 10.0442, 159.026, -50.1565, 0.59 ) }
    dend_17 { pt3dadd( 10.0501, 159.267, -50.173, 0.59 ) }
    dend_17 { pt3dadd( 10.1253, 159.914, -50.2355, 0.59 ) }
    dend_17 { pt3dadd( 10.1466, 160.014, -50.2453, 0.59 ) }
    dend_17 { pt3dadd( 10.4037, 160.94, -50.3248, 0.59 ) }
    dend_17 { pt3dadd( 10.8603, 162.293, -50.3748, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_17 { pt3dadd( 11.2429, 163.404, -50.3877, 0.59 ) }
    dend_17 { pt3dadd( 11.5539, 164.329, -50.3833, 1.03 ) }
    dend_17 { pt3dadd( 11.8461, 165.257, -50.3604, 1.03 ) }
    dend_17 { pt3dadd( 12.1031, 166.197, -50.3168, 0.81 ) }
    dend_17 { pt3dadd( 12.3286, 167.198, -50.25, 0.59 ) }
    dend_17 { pt3dadd( 12.5003, 168.271, -50.1669, 0.37 ) }
    dend_17 { pt3dadd( 12.6537, 169.806, -50.0509, 0.37 ) }
    dend_17 { pt3dadd( 12.7507, 171.072, -49.9549, 0.37 ) }
    dend_17 { pt3dadd( 12.8124, 172.096, -49.8846, 0.44 ) }
    dend_17 { pt3dadd( 12.8643, 173.173, -49.8255, 0.44 ) }
    dend_17 { pt3dadd( 12.9364, 174.185, -49.7837, 0.29 ) }
    dend_17 { pt3dadd( 13.0717, 175.488, -49.7251, 0.29 ) }
    dend_17 { pt3dadd( 13.2314, 176.485, -49.6897, 0.81 ) }
    dend_17 { pt3dadd( 13.4602, 177.43, -49.6426, 1.11 ) }
    dend_17 { pt3dadd( 13.7491, 178.372, -49.5846, 0.81 ) }
    dend_17 { pt3dadd( 14.2222, 179.746, -49.4806, 0.52 ) }
    dend_17 { pt3dadd( 14.2585, 179.843, -49.472, 0.52 ) }
    dend_17 { pt3dadd( 14.6918, 181.064, -49.3307, 0.52 ) }
    dend_17 { pt3dadd( 15.0986, 182.404, -49.1424, 0.29 ) }
    dend_17 { pt3dadd( 15.336, 183.337, -48.9974, 0.59 ) }
    dend_17 { pt3dadd( 15.4929, 184.287, -48.8404, 0.81 ) }
    dend_17 { pt3dadd( 15.505, 184.492, -48.8059, 0.81 ) }
    dend_17 { pt3dadd( 15.5395, 185.401, -48.6684, 0.81 ) }
    dend_17 { pt3dadd( 15.5752, 186.277, -48.5707, 0.66 ) }
    dend_17 { pt3dadd( 15.5808, 186.395, -48.5635, 0.66 ) }
    dend_17 { pt3dadd( 15.6549, 187.482, -48.5091, 0.44 ) }
    dend_17 { pt3dadd( 15.7509, 188.781, -48.449, 0.37 ) }
    dend_17 { pt3dadd( 15.8475, 189.988, -48.4003, 0.37 ) }
    dend_17 { pt3dadd( 15.9519, 191.294, -48.3505, 0.52 ) }
    dend_17 { pt3dadd( 16.0232, 192.355, -48.3061, 0.37 ) }
    dend_17 { pt3dadd( 16.0528, 193.205, -48.2598, 0.37 ) }
    dend_17 { pt3dadd( 16.0668, 194.099, -48.2086, 0.81 ) }
    dend_17 { pt3dadd( 16.0563, 194.938, -48.1557, 0.88 ) }
    dend_17 { pt3dadd( 16.022, 195.671, -48.0953, 0.59 ) }
    dend_17 { pt3dadd( 15.9962, 196.11, -48.0563, 0.44 ) }
    dend_17 { pt3dadd( 15.9699, 197.425, -47.9679, 0.37 ) }
    dend_17 { pt3dadd( 16.0212, 198.976, -47.9095, 0.37 ) }
    dend_17 { pt3dadd( 16.091, 199.738, -47.9356, 0.66 ) }
    dend_17 { pt3dadd( 16.1073, 199.855, -47.9463, 0.66 ) }
    dend_17 { pt3dadd( 16.3527, 200.984, -48.1267, 0.74 ) }
    dend_17 { pt3dadd( 16.4948, 201.553, -48.2366, 0.88 ) }
    dend_17 { pt3dadd( 16.8745, 202.829, -48.5514, 0.59 ) }
    dend_17 { pt3dadd( 17.2842, 204.082, -48.9211, 0.29 ) }
    dend_17 { pt3dadd( 17.3227, 204.188, -48.9569, 0.29 ) }
    dend_17 { pt3dadd( 17.961, 205.841, -49.567, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.19651, 71.5299, -28.055, 0.59 ) }
    dend_16 { pt3dadd( -4.06268, 72.2594, -27.9382, 0.59 ) }
    dend_16 { pt3dadd( -3.97087, 72.7836, -27.8402, 0.29 ) }
    dend_16 { pt3dadd( -3.9004, 73.2213, -27.7569, 0.29 ) }
    dend_16 { pt3dadd( -3.8163, 73.7982, -27.6482, 0.29 ) }
    dend_16 { pt3dadd( -3.64878, 75.1241, -27.3963, 0.29 ) }
    dend_16 { pt3dadd( -3.55449, 75.9832, -27.2362, 0.74 ) }
    dend_16 { pt3dadd( -3.51782, 76.5462, -27.1346, 0.74 ) }
    dend_16 { pt3dadd( -3.49852, 77.1286, -27.0403, 0.52 ) }
    dend_16 { pt3dadd( -3.49593, 77.4823, -26.9939, 0.44 ) }
    dend_16 { pt3dadd( -3.49976, 77.9216, -26.9466, 0.29 ) }
    dend_16 { pt3dadd( -3.51147, 78.4408, -26.9112, 0.29 ) }
    dend_16 { pt3dadd( -3.5227, 79.1284, -26.8869, 0.66 ) }
    dend_16 { pt3dadd( -3.51717, 79.5748, -26.866, 0.96 ) }
    dend_16 { pt3dadd( -3.48868, 79.9871, -26.8404, 0.66 ) }
    dend_16 { pt3dadd( -3.47113, 80.1385, -26.8293, 0.66 ) }
    dend_16 { pt3dadd( -3.4014, 80.5952, -26.791, 0.44 ) }
    dend_16 { pt3dadd( -3.33415, 81.0642, -26.7405, 0.29 ) }
    dend_16 { pt3dadd( -3.27584, 81.5271, -26.682, 0.22 ) }
    dend_16 { pt3dadd( -3.21441, 82.2817, -26.5231, 0.29 ) }
    dend_16 { pt3dadd( -3.21341, 82.3428, -26.5068, 0.29 ) }
    dend_16 { pt3dadd( -3.22831, 82.9178, -26.3351, 0.37 ) }
    dend_16 { pt3dadd( -3.28251, 83.5428, -26.1381, 0.66 ) }
    dend_16 { pt3dadd( -3.34156, 83.9766, -25.9965, 0.96 ) }
    dend_16 { pt3dadd( -3.48328, 84.9651, -25.6864, 0.81 ) }
    dend_16 { pt3dadd( -3.55734, 85.5925, -25.5039, 0.59 ) }
    dend_16 { pt3dadd( -3.56145, 85.6611, -25.4873, 0.59 ) }
    dend_16 { pt3dadd( -3.56174, 86.4003, -25.3474, 0.59 ) }
    dend_16 { pt3dadd( -3.53356, 86.8649, -25.2865, 0.66 ) }
    dend_16 { pt3dadd( -3.41341, 87.8503, -25.2112, 0.22 ) }
    dend_16 { pt3dadd( -3.3179, 88.3408, -25.2096, 0.22 ) }
    dend_16 { pt3dadd( -3.1606, 88.9468, -25.212, 0.74 ) }
    dend_16 { pt3dadd( -3.01707, 89.459, -25.2142, 0.81 ) }
    dend_16 { pt3dadd( -2.99702, 89.529, -25.2143, 0.81 ) }
    dend_16 { pt3dadd( -2.85693, 90.0919, -25.2094, 0.88 ) }
    dend_16 { pt3dadd( -2.75829, 90.5461, -25.1964, 0.81 ) }
    dend_16 { pt3dadd( -2.65079, 91.0981, -25.1816, 0.29 ) }
    dend_16 { pt3dadd( -2.52737, 92.0497, -25.1479, 0.29 ) }
    dend_16 { pt3dadd( -2.4108, 93.4094, -25.0948, 0.74 ) }
    dend_16 { pt3dadd( -2.38459, 94.0688, -25.0671, 1.11 ) }
    dend_16 { pt3dadd( -2.39305, 94.6497, -25.0422, 0.88 ) }
    dend_16 { pt3dadd( -2.45221, 95.6048, -24.9896, 0.22 ) }
    dend_16 { pt3dadd( -2.54873, 96.6025, -24.9269, 0.22 ) }
    dend_16 { pt3dadd( -2.56035, 96.7017, -24.9234, 0.22 ) }
    dend_16 { pt3dadd( -2.59339, 96.9537, -24.9338, 0.22 ) }
    dend_16 { pt3dadd( -2.66349, 97.5291, -24.9871, 0.74 ) }
    dend_16 { pt3dadd( -2.71031, 97.8901, -25.0294, 1.11 ) }
    dend_16 { pt3dadd( -2.8132, 98.579, -25.1481, 1.25 ) }
    dend_16 { pt3dadd( -2.92652, 99.3658, -25.304, 0.74 ) }
    dend_16 { pt3dadd( -3.09393, 100.427, -25.5439, 0.22 ) }
    dend_16 { pt3dadd( -3.20129, 101.064, -25.6933, 0.37 ) }
    dend_16 { pt3dadd( -3.35229, 101.914, -25.8903, 0.37 ) }
    dend_16 { pt3dadd( -3.57182, 103.125, -26.1489, 0.52 ) }
    dend_16 { pt3dadd( -3.65851, 103.618, -26.2411, 0.88 ) }
    dend_16 { pt3dadd( -3.83071, 104.654, -26.39, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_16 { pt3dadd( -3.92405, 105.306, -26.4644, 0.66 ) }
    dend_16 { pt3dadd( -4.01347, 106.037, -26.5356, 0.29 ) }
    dend_16 { pt3dadd( -4.09237, 106.851, -26.5953, 0.22 ) }
    dend_16 { pt3dadd( -4.14624, 107.539, -26.6132, 0.22 ) }
    dend_16 { pt3dadd( -4.19147, 108.198, -26.6205, 0.44 ) }
    dend_16 { pt3dadd( -4.21083, 108.637, -26.6161, 0.59 ) }
    dend_16 { pt3dadd( -4.22008, 109.269, -26.62, 0.37 ) }
    dend_16 { pt3dadd( -4.20927, 109.889, -26.6312, 0.29 ) }
    dend_16 { pt3dadd( -4.16628, 110.62, -26.653, 0.44 ) }
    dend_16 { pt3dadd( -4.08967, 111.31, -26.7052, 0.29 ) }
    dend_16 { pt3dadd( -3.95071, 112.072, -26.8439, 0.66 ) }
    dend_16 { pt3dadd( -3.86733, 112.539, -26.9555, 1.03 ) }
    dend_16 { pt3dadd( -3.81533, 112.834, -27.0382, 1.25 ) }
    dend_16 { pt3dadd( -3.73332, 113.421, -27.2131, 0.44 ) }
    dend_16 { pt3dadd( -3.65785, 114.318, -27.4842, 0.52 ) }
    dend_16 { pt3dadd( -3.6347, 115.373, -27.7994, 0.29 ) }
    dend_16 { pt3dadd( -3.6638, 116.628, -28.1551, 0.29 ) }
    dend_16 { pt3dadd( -3.66585, 116.72, -28.1784, 0.29 ) }
    dend_16 { pt3dadd( -3.67895, 117.289, -28.322, 0.29 ) }
    dend_16 { pt3dadd( -3.65282, 118.08, -28.511, 0.81 ) }
    dend_16 { pt3dadd( -3.64453, 118.151, -28.5244, 0.81 ) }
    dend_16 { pt3dadd( -3.54413, 118.609, -28.6166, 0.88 ) }
    dend_16 { pt3dadd( -3.34532, 119.282, -28.8323, 0.88 ) }
    dend_16 { pt3dadd( -3.18224, 119.87, -29.0423, 0.44 ) }
    dend_16 { pt3dadd( -2.98108, 120.655, -29.3414, 0.22 ) }
    dend_16 { pt3dadd( -2.83771, 121.421, -29.6833, 0.22 ) }
    dend_16 { pt3dadd( -2.71934, 122.388, -30.1492, 0.81 ) }
    dend_16 { pt3dadd( -2.68319, 123.167, -30.5363, 0.88 ) }
    dend_16 { pt3dadd( -2.69797, 123.713, -30.7943, 0.96 ) }
    dend_16 { pt3dadd( -2.72983, 124.178, -30.9996, 0.96 ) }
    dend_16 { pt3dadd( -2.8693, 125.327, -31.4983, 0.44 ) }
    dend_16 { pt3dadd( -2.87584, 125.392, -31.5246, 0.44 ) }
    dend_16 { pt3dadd( -2.90528, 126.021, -31.7238, 0.44 ) }
    dend_16 { pt3dadd( -2.91405, 126.901, -31.9579, 0.66 ) }
    dend_16 { pt3dadd( -2.91304, 127.048, -31.9947, 0.66 ) }
    dend_16 { pt3dadd( -2.9163, 127.456, -32.1205, 0.88 ) }
    dend_16 { pt3dadd( -2.92324, 128.153, -32.3468, 0.52 ) }
    dend_16 { pt3dadd( -2.92563, 128.778, -32.588, 0.37 ) }
    dend_16 { pt3dadd( -2.96433, 130.193, -33.2174, 1.11 ) }
    dend_16 { pt3dadd( -2.98989, 130.529, -33.3779, 1.25 ) }
    dend_16 { pt3dadd( -3.15841, 131.86, -34.0076, 0.22 ) }
    dend_16 { pt3dadd( -3.1717, 131.923, -34.0371, 0.22 ) }
    dend_16 { pt3dadd( -3.32835, 132.378, -34.2641, 0.22 ) }
    dend_16 { pt3dadd( -3.57418, 132.928, -34.5342, 0.22 ) }
    dend_16 { pt3dadd( -3.76038, 133.283, -34.6718, 0.74 ) }
    dend_16 { pt3dadd( -3.94711, 133.616, -34.7891, 1.03 ) }
    dend_16 { pt3dadd( -4.23607, 134.123, -34.9303, 0.81 ) }
    dend_16 { pt3dadd( -4.71899, 135.002, -35.1857, 0.52 ) }
    dend_16 { pt3dadd( -4.89192, 135.312, -35.3117, 0.37 ) }
    dend_16 { pt3dadd( -5.2065, 135.91, -35.6189, 0.29 ) }
    dend_16 { pt3dadd( -5.48572, 136.525, -35.9614, 0.59 ) }
    dend_16 { pt3dadd( -5.61616, 136.903, -36.1753, 0.96 ) }
    dend_16 { pt3dadd( -5.70721, 137.279, -36.3838, 1.11 ) }
    dend_16 { pt3dadd( -5.90078, 138.44, -36.9406, 0.37 ) }
    dend_16 { pt3dadd( -5.90978, 138.504, -36.9694, 0.37 ) }
    dend_16 { pt3dadd( -6.00954, 139.205, -37.2276, 0.29 ) }
    dend_16 { pt3dadd( -6.1165, 139.925, -37.3829, 0.29 ) }
    dend_16 { pt3dadd( -6.13119, 139.993, -37.3881, 0.29 ) }
    dend_16 { pt3dadd( -6.33136, 140.697, -37.3499, 0.37 ) }
    dend_16 { pt3dadd( -6.43451, 141.051, -37.2946, 0.59 ) }
    dend_16 { pt3dadd( -6.64948, 141.768, -37.1732, 0.74 ) }
    dend_16 { pt3dadd( -6.83644, 142.353, -37.0654, 0.52 ) }
    dend_16 { pt3dadd( -7.10944, 143.245, -36.901, 0.22 ) }
    dend_16 { pt3dadd( -7.26929, 143.874, -36.7976, 0.22 ) }
    dend_16 { pt3dadd( -7.38169, 144.382, -36.749, 0.22 ) }
    dend_16 { pt3dadd( -7.53249, 145.13, -36.7259, 0.74 ) }
    dend_16 { pt3dadd( -7.64949, 145.78, -36.7453, 0.88 ) }
    dend_16 { pt3dadd( -7.75175, 146.369, -36.7918, 0.74 ) }
    dend_16 { pt3dadd( -7.87175, 147.098, -36.8688, 0.66 ) }
    dend_16 { pt3dadd( -8.09789, 148.317, -37.0111, 0.29 ) }
    dend_16 { pt3dadd( -8.27839, 149.134, -37.1079, 0.29 ) }
    dend_16 { pt3dadd( -8.37584, 149.562, -37.1628, 0.44 ) }
    dend_16 { pt3dadd( -8.40823, 149.71, -37.1815, 0.44 ) }
    dend_16 { pt3dadd( -8.48979, 150.139, -37.2261, 0.44 ) }
    dend_16 { pt3dadd( -8.54644, 150.552, -37.2523, 0.29 ) }
    dend_16 { pt3dadd( -8.56343, 150.969, -37.2538, 0.74 ) }
    dend_16 { pt3dadd( -8.53152, 151.562, -37.2583, 0.96 ) }
    dend_16 { pt3dadd( -8.49658, 151.866, -37.2636, 0.88 ) }
    dend_16 { pt3dadd( -8.38673, 152.597, -37.282, 0.29 ) }
    dend_16 { pt3dadd( -8.29784, 153.097, -37.2973, 0.44 ) }
    dend_16 { pt3dadd( -8.17444, 153.737, -37.3178, 0.29 ) }
    dend_16 { pt3dadd( -8.02113, 154.672, -37.337, 0.37 ) }
    dend_16 { pt3dadd( -7.95689, 155.068, -37.3433, 0.59 ) }
    dend_16 { pt3dadd( -7.85003, 155.649, -37.356, 0.74 ) }
    dend_16 { pt3dadd( -7.78468, 156.013, -37.3635, 0.52 ) }
    dend_16 { pt3dadd( -7.70167, 156.465, -37.3631, 0.37 ) }
    dend_16 { pt3dadd( -7.50496, 157.533, -37.3158, 0.52 ) }
    dend_16 { pt3dadd( -7.33958, 158.41, -37.2485, 0.44 ) }
    dend_16 { pt3dadd( -7.08472, 159.696, -37.1265, 0.88 ) }
    dend_16 { pt3dadd( -6.97392, 160.209, -37.0732, 1.25 ) }
    dend_16 { pt3dadd( -6.86421, 160.725, -37.0165, 1.03 ) }
    dend_16 { pt3dadd( -6.692, 161.536, -36.9219, 0.29 ) }
    dend_16 { pt3dadd( -6.55382, 162.24, -36.8359, 0.44 ) }
    dend_16 { pt3dadd( -6.46257, 163.04, -36.7491, 0.37 ) }
    dend_16 { pt3dadd( -6.42916, 163.811, -36.6846, 0.74 ) }
    dend_16 { pt3dadd( -6.43006, 164.616, -36.6508, 0.74 ) }
    dend_16 { pt3dadd( -6.43452, 164.687, -36.6508, 0.74 ) }
    dend_16 { pt3dadd( -6.52789, 165.485, -36.6696, 0.74 ) }
    dend_16 { pt3dadd( -6.66264, 166.362, -36.6867, 0.22 ) }
    dend_16 { pt3dadd( -6.73447, 166.816, -36.6946, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_16 { pt3dadd( -6.81165, 167.325, -36.6995, 0.96 ) }
    dend_16 { pt3dadd( -6.91788, 168.12, -36.701, 0.22 ) }
    dend_16 { pt3dadd( -6.98476, 168.769, -36.6959, 0.66 ) }
    dend_16 { pt3dadd( -7.01953, 169.36, -36.684, 1.03 ) }
    dend_16 { pt3dadd( -7.02462, 170.181, -36.6185, 0.81 ) }
    dend_16 { pt3dadd( -7.01996, 171.07, -36.5139, 0.52 ) }
    dend_16 { pt3dadd( -7.02384, 171.573, -36.4485, 0.44 ) }
    dend_16 { pt3dadd( -7.05676, 172.616, -36.3041, 0.37 ) }
    dend_16 { pt3dadd( -7.11396, 173.535, -36.1707, 0.88 ) }
    dend_16 { pt3dadd( -7.18874, 174.54, -36.025, 1.25 ) }
    dend_16 { pt3dadd( -7.22989, 175.13, -35.9447, 0.88 ) }
    dend_16 { pt3dadd( -7.26862, 175.927, -35.8529, 0.44 ) }
    dend_16 { pt3dadd( -7.30969, 176.795, -35.7726, 0.59 ) }
    dend_16 { pt3dadd( -7.33134, 177.312, -35.7399, 0.81 ) }
    dend_16 { pt3dadd( -7.34848, 177.886, -35.7249, 0.59 ) }
    dend_16 { pt3dadd( -7.35329, 178.612, -35.7342, 0.37 ) }
    dend_16 { pt3dadd( -7.30799, 179.793, -35.7334, 0.52 ) }
    dend_16 { pt3dadd( -7.26494, 180.549, -35.7118, 0.37 ) }
    dend_16 { pt3dadd( -7.2528, 180.897, -35.6985, 0.74 ) }
    dend_16 { pt3dadd( -7.26687, 181.414, -35.6692, 0.88 ) }
    dend_16 { pt3dadd( -7.30534, 181.695, -35.6569, 0.88 ) }
    dend_16 { pt3dadd( -7.42115, 182.2, -35.6901, 1.11 ) }
    dend_16 { pt3dadd( -7.53896, 182.716, -35.7788, 1.03 ) }
    dend_16 { pt3dadd( -7.64158, 183.205, -35.8941, 0.37 ) }
    dend_16 { pt3dadd( -7.74929, 183.793, -36.0544, 0.37 ) }
    dend_16 { pt3dadd( -7.86991, 184.681, -36.3428, 0.66 ) }
    dend_16 { pt3dadd( -8.00094, 186.043, -36.8025, 0.29 ) }
    dend_16 { pt3dadd( -8.05855, 186.947, -37.1036, 0.52 ) }
    dend_16 { pt3dadd( -8.06078, 187.007, -37.1228, 0.52 ) }
    dend_16 { pt3dadd( -8.06575, 187.51, -37.2673, 0.66 ) }
    dend_16 { pt3dadd( -8.05382, 188.39, -37.467, 0.37 ) }
    dend_16 { pt3dadd( -8.03097, 189.386, -37.6144, 0.66 ) }
    dend_16 { pt3dadd( -8.02137, 190.117, -37.6707, 0.59 ) }
    dend_16 { pt3dadd( -8.02248, 190.641, -37.6811, 0.74 ) }
    dend_16 { pt3dadd( -8.02299, 191.336, -37.6599, 0.37 ) }
    dend_16 { pt3dadd( -7.99832, 192.273, -37.5172, 0.59 ) }
    dend_16 { pt3dadd( -7.99114, 192.411, -37.4819, 0.59 ) }
    dend_16 { pt3dadd( -7.95363, 192.951, -37.3216, 0.37 ) }
    dend_16 { pt3dadd( -7.86543, 194.021, -36.9824, 0.29 ) }
    dend_16 { pt3dadd( -7.79188, 194.942, -36.7038, 0.52 ) }
    dend_16 { pt3dadd( -7.67903, 196.415, -36.2718, 0.22 ) }
    dend_16 { pt3dadd( -7.59543, 197.328, -36.0351, 0.52 ) }
    dend_16 { pt3dadd( -7.56205, 197.812, -35.9302, 0.81 ) }
    dend_16 { pt3dadd( -7.55154, 198.377, -35.8374, 0.52 ) }
    dend_16 { pt3dadd( -7.58523, 199.382, -35.754, 0.74 ) }
    dend_16 { pt3dadd( -7.59319, 199.452, -35.753, 0.74 ) }
    dend_16 { pt3dadd( -7.79556, 200.372, -35.7982, 1.33 ) }
    dend_16 { pt3dadd( -7.99444, 201.079, -35.8169, 0.88 ) }
    dend_16 { pt3dadd( -8.26198, 201.874, -35.8122, 0.66 ) }
    dend_16 { pt3dadd( -8.56099, 202.63, -35.7714, 0.52 ) }
    dend_16 { pt3dadd( -8.94247, 203.504, -35.7036, 0.52 ) }
    dend_16 { pt3dadd( -9.27365, 204.213, -35.6445, 0.52 ) }
    dend_16 { pt3dadd( -9.6829, 204.995, -35.5717, 0.29 ) }
    dend_16 { pt3dadd( -9.95859, 205.543, -35.5235, 0.52 ) }
    dend_16 { pt3dadd( -10.2217, 206.055, -35.472, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 41.9396, 54.2998, 2.40569, 0.59 ) }
    dend_11 { pt3dadd( 41.9432, 55.062, 0.110207, 0.59 ) }
    dend_11 { pt3dadd( 42.0266, 55.4626, -1.0116, 0.74 ) }
    dend_11 { pt3dadd( 42.0323, 55.4797, -1.05735, 0.74 ) }
    dend_11 { pt3dadd( 42.1143, 55.6636, -1.50489, 0.74 ) }
    dend_11 { pt3dadd( 42.297, 55.9524, -2.20713, 0.96 ) }
    dend_11 { pt3dadd( 42.3105, 55.9685, -2.2516, 0.96 ) }
    dend_11 { pt3dadd( 42.5633, 56.0949, -2.67216, 0.96 ) }
    dend_11 { pt3dadd( 42.588, 56.1054, -2.71335, 0.96 ) }
    dend_11 { pt3dadd( 43.0401, 56.3219, -3.53155, 0.52 ) }
    dend_11 { pt3dadd( 43.3184, 56.4738, -4.0801, 0.52 ) }
    dend_11 { pt3dadd( 43.686, 56.6876, -4.82554, 0.81 ) }
    dend_11 { pt3dadd( 43.8911, 56.8106, -5.22769, 0.88 ) }
    dend_11 { pt3dadd( 44.2343, 57.0169, -5.94405, 0.52 ) }
    dend_11 { pt3dadd( 44.3419, 57.0805, -6.15456, 0.74 ) }
    dend_11 { pt3dadd( 44.3777, 57.1089, -6.24167, 0.74 ) }
    dend_11 { pt3dadd( 44.4827, 57.2404, -6.57927, 0.29 ) }
    dend_11 { pt3dadd( 44.5983, 57.4363, -7.00814, 0.59 ) }
    dend_11 { pt3dadd( 44.7251, 57.8253, -7.82007, 0.74 ) }
    dend_11 { pt3dadd( 44.7807, 58.056, -8.28396, 0.59 ) }
    dend_11 { pt3dadd( 44.8722, 58.6321, -9.42209, 1.03 ) }
    dend_11 { pt3dadd( 44.8776, 58.6696, -9.49206, 1.03 ) }
    dend_11 { pt3dadd( 44.8912, 58.7977, -9.71838, 0.74 ) }
    dend_11 { pt3dadd( 44.9438, 59.3773, -10.6311, 0.44 ) }
    dend_11 { pt3dadd( 44.977, 59.6199, -10.9574, 0.59 ) }
    dend_11 { pt3dadd( 45.0704, 60.0669, -11.5418, 0.66 ) }
    dend_11 { pt3dadd( 45.1784, 60.3302, -11.8668, 0.74 ) }
    dend_11 { pt3dadd( 45.1919, 60.3586, -11.9031, 0.74 ) }
    dend_11 { pt3dadd( 45.2494, 60.4614, -12.0347, 0.74 ) }
    dend_11 { pt3dadd( 45.2665, 60.4858, -12.064, 0.74 ) }
    dend_11 { pt3dadd( 45.5693, 61.0683, -12.7611, 0.29 ) }
    dend_11 { pt3dadd( 45.6143, 61.2757, -12.9817, 0.66 ) }
    dend_11 { pt3dadd( 45.6119, 61.3484, -13.054, 0.66 ) }
    dend_11 { pt3dadd( 45.5862, 61.5218, -13.2466, 0.88 ) }
    dend_11 { pt3dadd( 45.5739, 61.5555, -13.2882, 0.88 ) }
    dend_11 { pt3dadd( 45.2583, 62.2267, -14.1169, 0.29 ) }
    dend_11 { pt3dadd( 44.9326, 62.8115, -14.8372, 0.29 ) }
    dend_11 { pt3dadd( 44.5033, 63.5093, -15.7065, 1.11 ) }
    dend_11 { pt3dadd( 44.0707, 64.1663, -16.5324, 0.96 ) }
    dend_11 { pt3dadd( 43.2128, 65.4198, -18.0717, 0.66 ) }
    dend_11 { pt3dadd( 43.0408, 65.6649, -18.3624, 0.66 ) }
    dend_11 { pt3dadd( 42.9822, 65.7471, -18.453, 0.66 ) }
    dend_11 { pt3dadd( 42.6889, 66.1847, -18.8957, 0.59 ) }
    dend_11 { pt3dadd( 42.6446, 66.2647, -18.9627, 0.59 ) }
    dend_11 { pt3dadd( 42.3687, 66.9807, -19.3883, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_11 { pt3dadd( 42.3642, 67.0133, -19.4035, 0.52 ) }
    dend_11 { pt3dadd( 42.3439, 67.3712, -19.5809, 0.96 ) }
    dend_11 { pt3dadd( 42.3543, 67.793, -19.7893, 1.11 ) }
    dend_11 { pt3dadd( 42.4607, 68.6591, -20.199, 0.29 ) }
    dend_11 { pt3dadd( 42.4678, 68.6963, -20.2204, 0.29 ) }
    dend_11 { pt3dadd( 42.5397, 68.938, -20.4217, 0.52 ) }
    dend_11 { pt3dadd( 42.5491, 68.9666, -20.4514, 0.52 ) }
    dend_11 { pt3dadd( 42.5843, 69.0646, -20.5694, 0.74 ) }
    dend_11 { pt3dadd( 42.5923, 69.0947, -20.6061, 0.74 ) }
    dend_11 { pt3dadd( 42.7178, 69.6313, -21.154, 0.74 ) }
    dend_11 { pt3dadd( 42.8051, 70.1532, -21.5909, 0.59 ) }
    dend_11 { pt3dadd( 42.8096, 70.1921, -21.6188, 0.59 ) }
    dend_11 { pt3dadd( 42.8573, 70.5531, -21.8442, 0.29 ) }
    dend_11 { pt3dadd( 42.942, 71.1543, -22.1569, 0.29 ) }
    dend_11 { pt3dadd( 43.0058, 71.6542, -22.3791, 0.88 ) }
    dend_11 { pt3dadd( 43.0458, 71.9425, -22.4693, 1.11 ) }
    dend_11 { pt3dadd( 43.0517, 71.9828, -22.4801, 1.11 ) }
    dend_11 { pt3dadd( 43.1255, 72.3841, -22.5977, 0.88 ) }
    dend_11 { pt3dadd( 43.1609, 72.541, -22.6617, 0.52 ) }
    dend_11 { pt3dadd( 43.3485, 73.1292, -22.9641, 0.37 ) }
    dend_11 { pt3dadd( 43.5253, 73.6204, -23.2707, 0.22 ) }
    dend_11 { pt3dadd( 43.5404, 73.6591, -23.2969, 0.22 ) }
    dend_11 { pt3dadd( 43.6379, 73.9114, -23.461, 0.74 ) }
    dend_11 { pt3dadd( 43.8195, 74.5063, -23.8382, 0.88 ) }
    dend_11 { pt3dadd( 43.911, 74.7986, -24.0226, 0.22 ) }
    dend_11 { pt3dadd( 44.0016, 75.0636, -24.2157, 0.29 ) }
    dend_11 { pt3dadd( 44.0148, 75.0984, -24.2462, 0.29 ) }
    dend_11 { pt3dadd( 44.0879, 75.3615, -24.5395, 0.29 ) }
    dend_11 { pt3dadd( 44.1626, 75.8429, -25.2334, 0.88 ) }
    dend_11 { pt3dadd( 44.1844, 76.0048, -25.5049, 1.18 ) }
    dend_11 { pt3dadd( 44.2352, 76.4644, -26.3677, 0.29 ) }
    dend_11 { pt3dadd( 44.2565, 76.6602, -26.7582, 0.88 ) }
    dend_11 { pt3dadd( 44.3417, 77.3238, -28.0711, 1.33 ) }
    dend_11 { pt3dadd( 44.4287, 77.8526, -29.1351, 0.52 ) }
    dend_11 { pt3dadd( 44.4652, 78.0354, -29.4904, 1.25 ) }
    dend_11 { pt3dadd( 44.4694, 78.0566, -29.5266, 1.25 ) }
    dend_11 { pt3dadd( 44.5754, 78.6115, -30.3137, 0.29 ) }
    dend_11 { pt3dadd( 44.64, 78.9084, -30.6711, 0.29 ) }
    dend_11 { pt3dadd( 44.7422, 79.1997, -30.9332, 0.59 ) }
    dend_11 { pt3dadd( 44.8036, 79.37, -31.0653, 0.96 ) }
    dend_11 { pt3dadd( 44.9275, 79.717, -31.3378, 0.96 ) }
    dend_11 { pt3dadd( 45.1377, 80.2388, -31.7872, 0.59 ) }
    dend_11 { pt3dadd( 45.1538, 80.2717, -31.8182, 0.59 ) }
    dend_11 { pt3dadd( 45.2851, 80.5182, -32.062, 0.29 ) }
    dend_11 { pt3dadd( 45.4807, 80.8727, -32.394, 0.44 ) }
    dend_11 { pt3dadd( 45.6062, 81.0909, -32.5867, 0.66 ) }
    dend_11 { pt3dadd( 45.7914, 81.4419, -32.8645, 0.29 ) }
    dend_11 { pt3dadd( 45.9211, 81.6727, -33.0299, 0.22 ) }
    dend_11 { pt3dadd( 46.0889, 81.9833, -33.2488, 0.66 ) }
    dend_11 { pt3dadd( 46.179, 82.1485, -33.3654, 0.74 ) }
    dend_11 { pt3dadd( 46.2742, 82.3245, -33.482, 0.59 ) }
    dend_11 { pt3dadd( 46.6164, 82.9098, -33.896, 0.22 ) }
    dend_11 { pt3dadd( 46.7701, 83.1209, -34.0977, 0.44 ) }
    dend_11 { pt3dadd( 46.7944, 83.1451, -34.1329, 0.44 ) }
    dend_11 { pt3dadd( 46.9368, 83.244, -34.3379, 0.59 ) }
    dend_11 { pt3dadd( 46.9588, 83.2576, -34.3712, 0.59 ) }
    dend_11 { pt3dadd( 47.1733, 83.373, -34.696, 0.59 ) }
    dend_11 { pt3dadd( 47.5298, 83.5488, -35.2096, 0.22 ) }
    dend_11 { pt3dadd( 47.7223, 83.6704, -35.4852, 0.59 ) }
    dend_11 { pt3dadd( 47.8516, 83.7622, -35.6631, 0.66 ) }
    dend_11 { pt3dadd( 48.0798, 83.9766, -36.0145, 0.66 ) }
    dend_11 { pt3dadd( 48.0998, 83.999, -36.0458, 0.66 ) }
    dend_11 { pt3dadd( 48.3519, 84.347, -36.4615, 0.22 ) }
    dend_11 { pt3dadd( 48.5324, 84.6188, -36.7469, 0.66 ) }
    dend_11 { pt3dadd( 48.6114, 84.7448, -36.8741, 0.96 ) }
    dend_11 { pt3dadd( 49.0269, 85.418, -37.5324, 0.22 ) }
    dend_11 { pt3dadd( 49.1576, 85.6598, -37.7763, 0.22 ) }
    dend_11 { pt3dadd( 49.2969, 86.0441, -38.2001, 0.59 ) }
    dend_11 { pt3dadd( 49.331, 86.2431, -38.4381, 0.96 ) }
    dend_11 { pt3dadd( 49.3388, 86.3384, -38.5615, 1.18 ) }
    dend_11 { pt3dadd( 49.3401, 86.3632, -38.5956, 1.18 ) }
    dend_11 { pt3dadd( 49.4071, 86.9398, -39.4799, 0.44 ) }
    dend_11 { pt3dadd( 49.4943, 87.3542, -40.2027, 0.37 ) }
    dend_11 { pt3dadd( 49.5851, 87.634, -40.7397, 0.29 ) }
    dend_11 { pt3dadd( 49.6582, 87.7922, -41.0551, 0.44 ) }
    dend_11 { pt3dadd( 49.7197, 87.9094, -41.2812, 0.44 ) }
    dend_11 { pt3dadd( 49.9457, 88.2359, -41.8767, 0.22 ) }
    dend_11 { pt3dadd( 50.1693, 88.4407, -42.2682, 0.81 ) }
    dend_11 { pt3dadd( 50.2157, 88.4747, -42.3377, 0.81 ) }
    dend_11 { pt3dadd( 50.3695, 88.5674, -42.5639, 0.96 ) }
    dend_11 { pt3dadd( 50.9538, 88.8907, -43.4389, 0.37 ) }
    dend_11 { pt3dadd( 51.2888, 89.0863, -43.9437, 0.37 ) }
    dend_11 { pt3dadd( 51.584, 89.3056, -44.4533, 0.29 ) }
    dend_11 { pt3dadd( 51.5992, 89.3177, -44.484, 0.29 ) }
    dend_11 { pt3dadd( 51.7851, 89.4648, -44.8869, 0.29 ) }
    dend_11 { pt3dadd( 51.9295, 89.5733, -45.1987, 0.74 ) }
    dend_11 { pt3dadd( 52.1427, 89.6971, -45.5624, 1.03 ) }
    dend_11 { pt3dadd( 52.5417, 89.9343, -46.2074, 0.88 ) }
    dend_11 { pt3dadd( 53.164, 90.2555, -46.9791, 0.29 ) }
    dend_11 { pt3dadd( 53.4075, 90.3483, -47.2159, 0.44 ) }
    dend_11 { pt3dadd( 53.7841, 90.4483, -47.5133, 0.29 ) }
    dend_11 { pt3dadd( 54.4362, 90.5402, -47.9296, 1.33 ) }
    dend_11 { pt3dadd( 54.689, 90.5451, -48.0557, 1.69 ) }
    dend_11 { pt3dadd( 55.578, 90.5063, -48.391, 0.29 ) }
    dend_11 { pt3dadd( 55.9768, 90.478, -48.5114, 0.29 ) }
    dend_11 { pt3dadd( 56.2158, 90.4534, -48.5911, 0.66 ) }
    dend_11 { pt3dadd( 56.2505, 90.4486, -48.6052, 0.66 ) }
    dend_11 { pt3dadd( 56.4905, 90.4149, -48.7418, 0.66 ) }
    dend_11 { pt3dadd( 56.8858, 90.3484, -49.0174, 0.22 ) }
    dend_11 { pt3dadd( 57.1094, 90.2867, -49.215, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( 57.1461, 90.2749, -49.2455, 0.44 ) }
    dend_11 { pt3dadd( 57.4208, 90.1758, -49.4638, 0.44 ) }
    dend_11 { pt3dadd( 57.4453, 90.1672, -49.4892, 0.44 ) }
    dend_11 { pt3dadd( 57.7411, 90.0775, -49.8401, 0.29 ) }
    dend_11 { pt3dadd( 58.0314, 89.9951, -50.2643, 0.29 ) }
    dend_11 { pt3dadd( 58.2288, 89.9428, -50.5975, 0.74 ) }
    dend_11 { pt3dadd( 58.333, 89.9176, -50.7853, 0.96 ) }
    dend_11 { pt3dadd( 58.8437, 89.8206, -51.8093, 0.37 ) }
    dend_11 { pt3dadd( 58.9499, 89.8116, -52.0438, 1.03 ) }
    dend_11 { pt3dadd( 59.1766, 89.8463, -52.6582, 1.03 ) }
    dend_11 { pt3dadd( 59.2595, 89.8863, -52.952, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 11/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 41.9396, 54.2998, 2.40569, 0.88 ) }
    dend_4 { pt3dadd( 44.2079, 54.7309, 3.01448, 0.88 ) }
    dend_4 { pt3dadd( 45.2521, 55.0457, 3.2425, 0.66 ) }
    dend_4 { pt3dadd( 45.8106, 55.2717, 3.37697, 0.66 ) }
    dend_4 { pt3dadd( 45.8607, 55.2972, 3.39063, 0.66 ) }
    dend_4 { pt3dadd( 46.4097, 55.6519, 3.56625, 0.66 ) }
    dend_4 { pt3dadd( 46.4555, 55.6865, 3.5821, 0.66 ) }
    dend_4 { pt3dadd( 46.9396, 56.2292, 3.78128, 0.74 ) }
    dend_4 { pt3dadd( 47.6815, 57.1074, 4.19172, 0.44 ) }
    dend_4 { pt3dadd( 48.019, 57.4944, 4.40754, 0.37 ) }
    dend_4 { pt3dadd( 48.5091, 58.0383, 4.73666, 0.37 ) }
    dend_4 { pt3dadd( 48.7395, 58.2908, 4.89747, 0.59 ) }
    dend_4 { pt3dadd( 49.2834, 58.8944, 5.27744, 0.59 ) }
    dend_4 { pt3dadd( 49.6739, 59.336, 5.54195, 0.59 ) }
    dend_4 { pt3dadd( 49.849, 59.5474, 5.63362, 0.88 ) }
    dend_4 { pt3dadd( 49.8935, 59.5923, 5.65058, 0.88 ) }
    dend_4 { pt3dadd( 50.3795, 59.9669, 5.81298, 1.18 ) }
    dend_4 { pt3dadd( 50.4831, 60.0313, 5.84879, 1.18 ) }
    dend_4 { pt3dadd( 50.813, 60.2097, 5.97323, 0.88 ) }
    dend_4 { pt3dadd( 51.5371, 60.5814, 6.25891, 0.44 ) }
    dend_4 { pt3dadd( 52.3738, 61.0192, 6.57288, 0.74 ) }
    dend_4 { pt3dadd( 53.4696, 61.5836, 6.97084, 1.33 ) }
    dend_4 { pt3dadd( 54.4569, 62.1013, 7.32303, 0.96 ) }
    dend_4 { pt3dadd( 55.4545, 62.6476, 7.67613, 0.52 ) }
    dend_4 { pt3dadd( 56.0517, 63.0015, 7.8933, 0.44 ) }
    dend_4 { pt3dadd( 56.8323, 63.4802, 8.19595, 0.37 ) }
    dend_4 { pt3dadd( 57.5983, 63.9719, 8.54303, 0.37 ) }
    dend_4 { pt3dadd( 58.1007, 64.2912, 8.81035, 0.37 ) }
    dend_4 { pt3dadd( 58.2327, 64.3716, 8.8962, 0.37 ) }
    dend_4 { pt3dadd( 58.6823, 64.6111, 9.24261, 0.59 ) }
    dend_4 { pt3dadd( 59.6794, 65.076, 10.156, 0.88 ) }
    dend_4 { pt3dadd( 60.4148, 65.3862, 10.9408, 0.88 ) }
    dend_4 { pt3dadd( 60.9562, 65.6195, 11.5937, 0.52 ) }
    dend_4 { pt3dadd( 61.2815, 65.7518, 12.0075, 0.52 ) }
    dend_4 { pt3dadd( 61.3105, 65.7655, 12.0447, 0.52 ) }
    dend_4 { pt3dadd( 61.5417, 65.9274, 12.3392, 0.52 ) }
    dend_4 { pt3dadd( 61.5679, 65.9705, 12.3675, 0.52 ) }
    dend_4 { pt3dadd( 61.7193, 66.3171, 12.4585, 0.74 ) }
    dend_4 { pt3dadd( 61.7514, 66.3973, 12.469, 0.74 ) }
    dend_4 { pt3dadd( 61.9676, 66.8978, 12.5041, 0.37 ) }
    dend_4 { pt3dadd( 62.2989, 67.6456, 12.5375, 0.44 ) }
    dend_4 { pt3dadd( 62.5596, 68.2844, 12.522, 0.44 ) }
    dend_4 { pt3dadd( 62.7613, 68.8162, 12.4891, 0.74 ) }
    dend_4 { pt3dadd( 62.8003, 68.9247, 12.4779, 0.74 ) }
    dend_4 { pt3dadd( 63.0208, 69.6233, 12.4011, 0.74 ) }
    dend_4 { pt3dadd( 63.0364, 69.6786, 12.3944, 0.74 ) }
    dend_4 { pt3dadd( 63.2503, 70.5099, 12.3037, 0.66 ) }
    dend_4 { pt3dadd( 63.2646, 70.5676, 12.2994, 0.66 ) }
    dend_4 { pt3dadd( 63.4035, 71.0658, 12.2737, 0.74 ) }
    dend_4 { pt3dadd( 63.671, 71.9516, 12.2602, 0.29 ) }
    dend_4 { pt3dadd( 63.8643, 72.4712, 12.2895, 0.44 ) }
    dend_4 { pt3dadd( 64.1221, 73.0566, 12.3633, 0.22 ) }
    dend_4 { pt3dadd( 64.3407, 73.4773, 12.4589, 0.66 ) }
    dend_4 { pt3dadd( 64.5108, 73.7913, 12.5492, 0.66 ) }
    dend_4 { pt3dadd( 64.5421, 73.8469, 12.5712, 0.66 ) }
    dend_4 { pt3dadd( 64.9787, 74.5211, 12.8854, 0.44 ) }
    dend_4 { pt3dadd( 65.0089, 74.5692, 12.9035, 0.44 ) }
    dend_4 { pt3dadd( 65.1615, 74.8193, 12.9689, 0.52 ) }
    dend_4 { pt3dadd( 65.2469, 74.979, 12.9961, 0.52 ) }
    dend_4 { pt3dadd( 65.3938, 75.3036, 13.0319, 0.52 ) }
    dend_4 { pt3dadd( 65.678, 76.0371, 13.103, 0.29 ) }
    dend_4 { pt3dadd( 65.9118, 76.7463, 13.1914, 0.29 ) }
    dend_4 { pt3dadd( 65.926, 76.7929, 13.2017, 0.29 ) }
    dend_4 { pt3dadd( 66.0696, 77.3021, 13.355, 0.44 ) }
    dend_4 { pt3dadd( 66.1125, 77.4738, 13.4238, 0.44 ) }
    dend_4 { pt3dadd( 66.2472, 77.977, 13.706, 0.44 ) }
    dend_4 { pt3dadd( 66.3647, 78.4203, 14.032, 0.59 ) }
    dend_4 { pt3dadd( 66.5113, 78.7867, 14.3458, 0.74 ) }
    dend_4 { pt3dadd( 66.5361, 78.8338, 14.3849, 0.74 ) }
    dend_4 { pt3dadd( 66.7679, 79.1827, 14.6427, 0.74 ) }
    dend_4 { pt3dadd( 67.2643, 79.6639, 14.9991, 0.52 ) }
    dend_4 { pt3dadd( 67.3068, 79.6962, 15.0216, 0.52 ) }
    dend_4 { pt3dadd( 67.8147, 80.0686, 15.2542, 0.44 ) }
    dend_4 { pt3dadd( 68.1092, 80.2715, 15.3932, 0.29 ) }
    dend_4 { pt3dadd( 68.5628, 80.6003, 15.6381, 0.29 ) }
    dend_4 { pt3dadd( 69.5489, 81.2633, 16.2569, 0.29 ) }
    dend_4 { pt3dadd( 69.8989, 81.5098, 16.5, 0.37 ) }
    dend_4 { pt3dadd( 70.3665, 81.855, 16.8362, 0.44 ) }
    dend_4 { pt3dadd( 71.0229, 82.3644, 17.3362, 0.96 ) }
    dend_4 { pt3dadd( 71.4303, 82.6841, 17.6358, 1.25 ) }
    dend_4 { pt3dadd( 72.4956, 83.489, 18.3059, 0.52 ) }
    dend_4 { pt3dadd( 72.9394, 83.844, 18.5303, 0.52 ) }
    dend_4 { pt3dadd( 73.3386, 84.1395, 18.6779, 0.66 ) }
    dend_4 { pt3dadd( 73.3924, 84.1758, 18.6904, 0.66 ) }
    dend_4 { pt3dadd( 73.898, 84.5348, 18.747, 0.44 ) }
    dend_4 { pt3dadd( 74.6262, 85.076, 18.7804, 0.29 ) }
    dend_4 { pt3dadd( 74.8439, 85.274, 18.7969, 0.52 ) }
    dend_4 { pt3dadd( 75.2013, 85.6045, 18.8672, 0.52 ) }
    dend_4 { pt3dadd( 75.6452, 86.025, 18.9857, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_4 { pt3dadd( 75.9777, 86.3545, 19.0681, 0.29 ) }
    dend_4 { pt3dadd( 76.2767, 86.6199, 19.1452, 0.52 ) }
    dend_4 { pt3dadd( 76.9103, 87.165, 19.2685, 0.88 ) }
    dend_4 { pt3dadd( 77.2301, 87.4243, 19.3142, 0.52 ) }
    dend_4 { pt3dadd( 77.9332, 87.9623, 19.3708, 0.44 ) }
    dend_4 { pt3dadd( 78.4761, 88.3682, 19.3785, 0.59 ) }
    dend_4 { pt3dadd( 79.4544, 89.0198, 19.3426, 0.29 ) }
    dend_4 { pt3dadd( 80.1701, 89.4481, 19.2894, 0.29 ) }
    dend_4 { pt3dadd( 85.7614, 94.7485, 22.0601, 0.29 ) }
    dend_4 { pt3dadd( 89.9356, 101.23, 24.8182, 0.29 ) }
    // Section: dend_87, id: dend_87, parent: dend_67 (entry count 10/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -114.966, -182.233, -14.021, 0.29 ) }
    dend_87 { pt3dadd( -115.178, -183.067, -13.8709, 0.29 ) }
    dend_87 { pt3dadd( -115.251, -183.351, -13.8198, 0.74 ) }
    dend_87 { pt3dadd( -115.386, -183.882, -13.7241, 0.29 ) }
    dend_87 { pt3dadd( -115.513, -184.381, -13.6342, 0.29 ) }
    dend_87 { pt3dadd( -115.686, -185.06, -13.5119, 0.37 ) }
    dend_87 { pt3dadd( -117.406, -192.038, -13.2317, 0.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 17/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -114.966, -182.233, -14.021, 0.37 ) }
    dend_68 { pt3dadd( -115.895, -182.418, -13.1377, 0.37 ) }
    dend_68 { pt3dadd( -116.402, -182.513, -12.711, 0.37 ) }
    dend_68 { pt3dadd( -117.339, -182.659, -11.9242, 0.44 ) }
    dend_68 { pt3dadd( -118.0, -182.76, -11.3936, 0.37 ) }
    dend_68 { pt3dadd( -119.311, -182.992, -10.3817, 0.88 ) }
    dend_68 { pt3dadd( -119.77, -183.096, -10.0, 1.11 ) }
    dend_68 { pt3dadd( -120.33, -183.24, -9.53744, 0.81 ) }
    dend_68 { pt3dadd( -121.65, -183.677, -8.36096, 0.29 ) }
    dend_68 { pt3dadd( -122.076, -183.828, -7.99826, 0.29 ) }
    dend_68 { pt3dadd( -122.455, -183.963, -7.66614, 0.74 ) }
    dend_68 { pt3dadd( -123.73, -184.397, -6.62973, 0.44 ) }
    dend_68 { pt3dadd( -124.126, -184.523, -6.30405, 0.44 ) }
    dend_68 { pt3dadd( -124.998, -184.74, -5.63539, 0.29 ) }
    dend_68 { pt3dadd( -125.938, -184.99, -4.84575, 0.29 ) }
    dend_68 { pt3dadd( -126.559, -185.149, -4.17108, 0.59 ) }
    dend_68 { pt3dadd( -126.983, -185.244, -3.66784, 0.66 ) }
    dend_68 { pt3dadd( -127.607, -185.363, -2.91074, 0.44 ) }
    dend_68 { pt3dadd( -128.185, -185.472, -2.14522, 0.37 ) }
    dend_68 { pt3dadd( -129.579, -185.754, -0.145542, 0.66 ) }
    dend_68 { pt3dadd( -130.919, -186.065, 1.86747, 0.81 ) }
    dend_68 { pt3dadd( -131.223, -186.127, 2.30204, 0.88 ) }
    dend_68 { pt3dadd( -131.487, -186.179, 2.69855, 0.88 ) }
    dend_68 { pt3dadd( -131.532, -186.187, 2.76623, 0.88 ) }
    dend_68 { pt3dadd( -132.323, -186.313, 3.88523, 0.52 ) }
    dend_68 { pt3dadd( -132.817, -186.309, 4.33326, 0.52 ) }
    dend_68 { pt3dadd( -134.49, -186.3, 5.49981, 1.69 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 44/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 2.10131, -107.899, -19.7508, 0.74 ) }
    dend_52 { pt3dadd( 2.11432, -109.249, -20.359, 0.74 ) }
    dend_52 { pt3dadd( 2.22302, -110.35, -20.8083, 0.74 ) }
    dend_52 { pt3dadd( 2.43533, -111.862, -21.3622, 0.88 ) }
    dend_52 { pt3dadd( 2.59142, -112.789, -21.6747, 0.88 ) }
    dend_52 { pt3dadd( 2.84731, -114.309, -22.1869, 0.81 ) }
    dend_52 { pt3dadd( 3.19445, -116.371, -22.8818, 0.88 ) }
    dend_52 { pt3dadd( 3.49383, -117.635, -23.2461, 0.88 ) }
    dend_52 { pt3dadd( 3.75987, -118.519, -23.4832, 1.33 ) }
    dend_52 { pt3dadd( 4.08023, -119.454, -23.6894, 1.18 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 54/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 2.10131, -107.899, -19.7508, 0.59 ) }
    dend_49 { pt3dadd( 2.20718, -108.889, -19.9543, 0.59 ) }
    dend_49 { pt3dadd( 2.34624, -110.184, -20.4235, 0.52 ) }
    dend_49 { pt3dadd( 2.53295, -111.484, -20.946, 0.44 ) }
    dend_49 { pt3dadd( 2.7128, -112.608, -21.4144, 0.44 ) }
    dend_49 { pt3dadd( 3.00433, -114.13, -22.0161, 0.59 ) }
    dend_49 { pt3dadd( 3.39884, -115.949, -22.7386, 0.74 ) }
    dend_49 { pt3dadd( 3.73649, -117.311, -23.3266, 0.59 ) }
    dend_49 { pt3dadd( 4.01445, -118.296, -23.7695, 0.59 ) }
    dend_49 { pt3dadd( 4.04001, -118.374, -23.8026, 0.59 ) }
    dend_49 { pt3dadd( 4.584, -119.894, -24.3391, 0.59 ) }
    dend_49 { pt3dadd( 5.21962, -121.52, -24.7033, 0.74 ) }
    dend_49 { pt3dadd( 5.61244, -122.443, -24.8294, 0.74 ) }
    dend_49 { pt3dadd( 6.27736, -123.937, -24.9764, 0.66 ) }
    dend_49 { pt3dadd( 6.91059, -125.31, -25.0824, 0.59 ) }
    dend_49 { pt3dadd( 6.99949, -125.48, -25.0816, 0.59 ) }
    dend_49 { pt3dadd( 7.8097, -126.733, -24.9206, 0.59 ) }
    dend_49 { pt3dadd( 8.156, -127.167, -24.7974, 0.81 ) }
    dend_49 { pt3dadd( 8.2213, -127.243, -24.7711, 0.81 ) }
    dend_49 { pt3dadd( 8.84868, -127.96, -24.5214, 0.81 ) }
    dend_49 { pt3dadd( 10.0089, -129.329, -24.1774, 0.66 ) }
    dend_49 { pt3dadd( 10.8344, -130.408, -23.9991, 0.66 ) }
    dend_49 { pt3dadd( 11.5284, -131.469, -23.8468, 0.66 ) }
    dend_49 { pt3dadd( 12.2138, -132.664, -23.6361, 0.81 ) }
    dend_49 { pt3dadd( 12.6964, -133.615, -23.4587, 0.96 ) }
    dend_49 { pt3dadd( 13.32, -135.035, -23.2007, 0.52 ) }
    dend_49 { pt3dadd( 13.7546, -136.153, -23.0195, 0.52 ) }
    dend_49 { pt3dadd( 14.285, -137.618, -22.7194, 0.81 ) }
    dend_49 { pt3dadd( 14.7255, -138.789, -22.4363, 0.81 ) }
    dend_49 { pt3dadd( 15.1341, -139.862, -22.1514, 0.81 ) }
    dend_49 { pt3dadd( 15.1671, -139.957, -22.126, 0.81 ) }
    dend_49 { pt3dadd( 15.6356, -141.402, -21.7752, 0.81 ) }
    dend_49 { pt3dadd( 15.688, -141.572, -21.7457, 0.81 ) }
    dend_49 { pt3dadd( 16.1496, -143.28, -21.5458, 0.81 ) }
    dend_49 { pt3dadd( 16.4295, -144.577, -21.4183, 0.81 ) }
    dend_49 { pt3dadd( 16.64, -145.8, -21.2845, 0.66 ) }
    dend_49 { pt3dadd( 16.6539, -145.901, -21.2684, 0.66 ) }
    dend_49 { pt3dadd( 16.7876, -147.199, -21.0162, 0.37 ) }
    dend_49 { pt3dadd( 16.9557, -148.737, -20.6904, 0.66 ) }
    dend_49 { pt3dadd( 17.0339, -149.445, -20.526, 0.96 ) }
    dend_49 { pt3dadd( 17.2209, -150.84, -20.1299, 0.74 ) }
    dend_49 { pt3dadd( 17.4672, -152.517, -19.5947, 0.96 ) }
    dend_49 { pt3dadd( 17.6484, -153.801, -19.1986, 0.81 ) }
    dend_49 { pt3dadd( 17.8579, -155.318, -18.753, 0.74 ) }
    dend_49 { pt3dadd( 17.8668, -155.393, -18.7374, 0.74 ) }
    dend_49 { pt3dadd( 18.0495, -156.988, -18.5389, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_49 { pt3dadd( 18.0633, -157.078, -18.5374, 0.74 ) }
    dend_49 { pt3dadd( 18.4382, -158.63, -18.8249, 0.44 ) }
    dend_49 { pt3dadd( 18.6783, -159.429, -19.0565, 0.44 ) }
    dend_49 { pt3dadd( 19.2248, -161.047, -19.6564, 1.4 ) }
    dend_49 { pt3dadd( 19.638, -162.076, -20.1356, 1.18 ) }
    dend_49 { pt3dadd( 20.2369, -163.333, -20.8745, 1.03 ) }
    dend_49 { pt3dadd( 21.3917, -165.373, -22.197, 0.66 ) }
    dend_49 { pt3dadd( 21.9003, -166.128, -22.7064, 0.66 ) }
    dend_49 { pt3dadd( 22.0259, -166.297, -22.8183, 0.66 ) }
    dend_49 { pt3dadd( 23.2316, -167.815, -23.7574, 0.81 ) }
    dend_49 { pt3dadd( 24.1366, -168.932, -24.4941, 0.96 ) }
    dend_49 { pt3dadd( 25.3402, -170.375, -25.4842, 0.74 ) }
    dend_49 { pt3dadd( 26.2983, -171.459, -26.1879, 0.74 ) }
    dend_49 { pt3dadd( 27.0477, -172.279, -26.7057, 0.96 ) }
    dend_49 { pt3dadd( 27.6148, -172.905, -27.0496, 1.25 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 15/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -17.5643, -292.251, -13.8473, 0.29 ) }
    dend_47 { pt3dadd( -16.5153, -292.233, -13.8496, 0.29 ) }
    dend_47 { pt3dadd( -15.8794, -292.222, -13.8511, 0.29 ) }
    dend_47 { pt3dadd( -14.6378, -292.201, -13.8539, 0.22 ) }
    dend_47 { pt3dadd( -14.0297, -292.19, -13.8552, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 20/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -17.5643, -292.251, -13.8473, 0.59 ) }
    dend_44 { pt3dadd( -17.7477, -293.137, -13.9534, 0.59 ) }
    dend_44 { pt3dadd( -17.7623, -293.194, -13.9603, 0.59 ) }
    dend_44 { pt3dadd( -18.0305, -294.105, -14.0588, 0.52 ) }
    dend_44 { pt3dadd( -18.3127, -295.025, -14.1524, 0.66 ) }
    dend_44 { pt3dadd( -18.5576, -295.894, -14.2285, 0.66 ) }
    dend_44 { pt3dadd( -18.7988, -296.795, -14.3009, 0.81 ) }
    dend_44 { pt3dadd( -18.8524, -296.978, -14.3116, 0.81 ) }
    dend_44 { pt3dadd( -19.0843, -297.891, -14.309, 0.81 ) }
    dend_44 { pt3dadd( -19.1081, -298.012, -14.3007, 0.81 ) }
    dend_44 { pt3dadd( -19.1891, -299.074, -14.0932, 0.81 ) }
    dend_44 { pt3dadd( -19.1896, -299.139, -14.0824, 0.81 ) }
    dend_44 { pt3dadd( -19.1612, -300.1, -14.0675, 0.59 ) }
    dend_44 { pt3dadd( -19.1274, -301.058, -14.1549, 0.37 ) }
    dend_44 { pt3dadd( -19.0884, -301.642, -14.316, 0.74 ) }
    dend_44 { pt3dadd( -19.0075, -302.794, -14.9684, 0.81 ) }
    dend_44 { pt3dadd( -18.8842, -303.997, -15.8851, 0.52 ) }
    dend_44 { pt3dadd( -18.6578, -305.432, -17.1629, 0.52 ) }
    dend_44 { pt3dadd( -18.6513, -305.469, -17.1993, 0.52 ) }
    dend_44 { pt3dadd( -18.415, -306.506, -18.4733, 0.96 ) }
    dend_44 { pt3dadd( -18.0283, -307.73, -20.2531, 1.69 ) }
    dend_44 { pt3dadd( -17.8255, -308.185, -21.0237, 0.37 ) }
    dend_44 { pt3dadd( -17.4663, -308.755, -22.1292, 0.37 ) }
    dend_44 { pt3dadd( -17.2687, -309.004, -22.6421, 0.66 ) }
    dend_44 { pt3dadd( -16.2553, -310.141, -25.0283, 1.25 ) }
    dend_44 { pt3dadd( -15.4853, -310.893, -26.6672, 0.44 ) }
    dend_44 { pt3dadd( -14.9688, -311.352, -27.6644, 0.81 ) }
    dend_44 { pt3dadd( -13.9552, -312.23, -29.5523, 0.37 ) }
    dend_44 { pt3dadd( -13.5349, -312.574, -30.2638, 0.29 ) }
    dend_44 { pt3dadd( -12.8954, -313.055, -31.1786, 0.29 ) }
    dend_44 { pt3dadd( -12.5755, -313.297, -31.5304, 0.96 ) }
    dend_44 { pt3dadd( -12.221, -313.555, -31.8582, 0.96 ) }
    dend_44 { pt3dadd( -11.4513, -314.151, -32.4919, 0.44 ) }
    dend_44 { pt3dadd( -11.1668, -314.355, -32.7389, 0.81 ) }
    dend_44 { pt3dadd( -10.7713, -314.605, -33.114, 1.03 ) }
    dend_44 { pt3dadd( -10.7262, -314.633, -33.156, 1.03 ) }
    dend_44 { pt3dadd( -9.52474, -315.435, -34.2415, 0.37 ) }
    dend_44 { pt3dadd( -8.71858, -316.01, -34.9592, 1.4 ) }
    dend_44 { pt3dadd( -7.34076, -317.165, -36.3749, 0.37 ) }
    dend_44 { pt3dadd( -6.96511, -317.533, -36.799, 0.66 ) }
    dend_44 { pt3dadd( -6.43638, -318.11, -37.4026, 0.29 ) }
    dend_44 { pt3dadd( -5.99468, -318.626, -37.8545, 0.96 ) }
    dend_44 { pt3dadd( -5.79898, -318.876, -38.023, 0.96 ) }
    dend_44 { pt3dadd( -4.36183, -320.875, -39.063, 0.37 ) }
    dend_44 { pt3dadd( -4.18002, -321.163, -39.1609, 0.59 ) }
    dend_44 { pt3dadd( -3.66887, -321.956, -39.4435, 0.29 ) }
    dend_44 { pt3dadd( -3.10305, -322.749, -39.7918, 0.96 ) }
    dend_44 { pt3dadd( -3.06965, -322.792, -39.8122, 0.96 ) }
    dend_44 { pt3dadd( -2.76297, -323.159, -39.8893, 1.33 ) }
    dend_44 { pt3dadd( -2.72663, -323.201, -39.8662, 1.33 ) }
    dend_44 { pt3dadd( -2.48512, -323.486, -39.6889, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -45.7789, -70.9576, -11.6769, 0.29 ) }
    dend_40 { pt3dadd( -45.2622, -72.2952, -11.2936, 0.29 ) }
    dend_40 { pt3dadd( -44.894, -73.2482, -11.0206, 0.37 ) }
    dend_40 { pt3dadd( -44.5541, -74.128, -10.7685, 0.37 ) }
    dend_40 { pt3dadd( -44.0672, -75.3881, -10.4074, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -45.7789, -70.9576, -11.6769, 0.37 ) }
    dend_35 { pt3dadd( -46.6196, -71.6208, -11.4345, 0.37 ) }
    dend_35 { pt3dadd( -47.1969, -72.02, -11.1743, 0.37 ) }
    dend_35 { pt3dadd( -47.8598, -72.4055, -10.8351, 0.81 ) }
    dend_35 { pt3dadd( -48.3015, -72.6347, -10.5088, 1.25 ) }
    dend_35 { pt3dadd( -48.6295, -72.7932, -10.2238, 1.25 ) }
    dend_35 { pt3dadd( -50.0221, -73.4733, -8.99317, 0.44 ) }
    dend_35 { pt3dadd( -50.1176, -73.515, -8.90199, 0.44 ) }
    dend_35 { pt3dadd( -50.4409, -73.6443, -8.59049, 0.74 ) }
    dend_35 { pt3dadd( -51.7253, -74.1605, -7.4067, 0.52 ) }
    dend_35 { pt3dadd( -52.4033, -74.4713, -6.83894, 0.59 ) }
    dend_35 { pt3dadd( -52.9203, -74.7595, -6.53289, 0.44 ) }
    dend_35 { pt3dadd( -53.3528, -75.0564, -6.4267, 0.29 ) }
    dend_35 { pt3dadd( -53.8207, -75.4213, -6.39009, 0.29 ) }
    dend_35 { pt3dadd( -54.4102, -75.9607, -6.45298, 1.11 ) }
    dend_35 { pt3dadd( -54.7787, -76.3493, -6.56413, 1.33 ) }
    dend_35 { pt3dadd( -55.6326, -77.4491, -6.91727, 0.74 ) }
    dend_35 { pt3dadd( -56.0398, -78.0981, -7.1109, 0.74 ) }
    dend_35 { pt3dadd( -56.2469, -78.516, -7.22187, 1.11 ) }
    dend_35 { pt3dadd( -56.4685, -79.0413, -7.32569, 0.88 ) }
    dend_35 { pt3dadd( -56.7078, -79.6931, -7.41118, 0.66 ) }
    dend_35 { pt3dadd( -56.9605, -80.4704, -7.47103, 0.37 ) }
    dend_35 { pt3dadd( -57.0881, -80.9959, -7.47802, 0.37 ) }
    dend_35 { pt3dadd( -57.2543, -81.8117, -7.48875, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_35 { pt3dadd( -57.3989, -82.7144, -7.50638, 0.37 ) }
    dend_35 { pt3dadd( -57.4865, -83.3843, -7.52552, 0.29 ) }
    dend_35 { pt3dadd( -57.5389, -84.0255, -7.53098, 0.59 ) }
    dend_35 { pt3dadd( -57.5707, -84.6803, -7.50684, 0.81 ) }
    dend_35 { pt3dadd( -57.5697, -84.7334, -7.50478, 0.81 ) }
    dend_35 { pt3dadd( -57.5053, -85.4564, -7.45553, 0.74 ) }
    dend_35 { pt3dadd( -57.4381, -85.9128, -7.42435, 1.11 ) }
    dend_35 { pt3dadd( -57.2667, -86.9189, -7.33792, 0.59 ) }
    dend_35 { pt3dadd( -57.1914, -87.3794, -7.28966, 1.03 ) }
    dend_35 { pt3dadd( -57.0671, -88.2789, -7.16582, 0.52 ) }
    dend_35 { pt3dadd( -56.9814, -89.0309, -7.05182, 0.74 ) }
    dend_35 { pt3dadd( -56.9359, -89.5617, -6.97084, 0.66 ) }
    dend_35 { pt3dadd( -56.8726, -90.5256, -6.82964, 0.44 ) }
    dend_35 { pt3dadd( -56.861, -91.3798, -6.70674, 0.44 ) }
    dend_35 { pt3dadd( -56.9248, -92.2729, -6.57081, 0.44 ) }
    dend_35 { pt3dadd( -56.9907, -92.6327, -6.51273, 0.81 ) }
    dend_35 { pt3dadd( -57.1671, -93.2783, -6.41852, 1.18 ) }
    dend_35 { pt3dadd( -57.2574, -93.5218, -6.37998, 1.33 ) }
    dend_35 { pt3dadd( -57.6939, -94.5107, -6.19877, 0.44 ) }
    dend_35 { pt3dadd( -58.0631, -95.2845, -6.05828, 0.59 ) }
    dend_35 { pt3dadd( -58.3544, -95.8586, -5.88632, 0.81 ) }
    dend_35 { pt3dadd( -58.508, -96.1283, -5.77576, 0.81 ) }
    dend_35 { pt3dadd( -58.9116, -96.7291, -5.42994, 0.37 ) }
    dend_35 { pt3dadd( -59.3766, -97.3174, -5.02844, 0.74 ) }
    dend_35 { pt3dadd( -59.5724, -97.5267, -4.85925, 0.96 ) }
    dend_35 { pt3dadd( -60.6732, -98.6165, -3.86257, 0.59 ) }
    dend_35 { pt3dadd( -61.1579, -99.0554, -3.42284, 0.81 ) }
    dend_35 { pt3dadd( -62.1356, -99.8628, -2.53779, 0.52 ) }
    dend_35 { pt3dadd( -62.7399, -100.297, -2.00642, 0.52 ) }
    dend_35 { pt3dadd( -63.2831, -100.635, -1.57017, 0.74 ) }
    dend_35 { pt3dadd( -66.9201, -107.948, 1.87854, 0.74 ) }
    dend_35 { pt3dadd( -70.9194, -115.441, 4.41832, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -101.665, -78.2245, -123.844, 0.52 ) }
    dend_33 { pt3dadd( -101.577, -79.5046, -124.135, 0.52 ) }
    dend_33 { pt3dadd( -101.464, -80.9857, -124.439, 0.88 ) }
    dend_33 { pt3dadd( -101.391, -81.6814, -124.55, 0.88 ) }
    dend_33 { pt3dadd( -101.226, -82.8482, -124.713, 0.37 ) }
    dend_33 { pt3dadd( -101.149, -83.3561, -124.769, 0.29 ) }
    dend_33 { pt3dadd( -101.087, -83.8224, -124.812, 0.88 ) }
    dend_33 { pt3dadd( -101.075, -83.9174, -124.817, 0.88 ) }
    dend_33 { pt3dadd( -101.017, -84.6517, -124.784, 0.88 ) }
    dend_33 { pt3dadd( -100.987, -85.6072, -124.709, 0.29 ) }
    dend_33 { pt3dadd( -101.008, -86.2526, -124.615, 0.29 ) }
    dend_33 { pt3dadd( -101.061, -86.8387, -124.525, 0.22 ) }
    dend_33 { pt3dadd( -101.165, -87.4986, -124.418, 0.22 ) }
    dend_33 { pt3dadd( -101.238, -87.8113, -124.367, 0.81 ) }
    dend_33 { pt3dadd( -101.419, -88.3649, -124.272, 1.25 ) }
    dend_33 { pt3dadd( -101.754, -89.2587, -124.094, 0.37 ) }
    dend_33 { pt3dadd( -102.082, -90.0911, -123.933, 0.22 ) }
    dend_33 { pt3dadd( -102.287, -90.5988, -123.837, 0.66 ) }
    dend_33 { pt3dadd( -102.489, -91.0749, -123.75, 0.81 ) }
    dend_33 { pt3dadd( -102.918, -92.026, -123.586, 0.22 ) }
    dend_33 { pt3dadd( -103.143, -92.4855, -123.513, 0.88 ) }
    dend_33 { pt3dadd( -103.278, -92.7375, -123.478, 1.03 ) }
    dend_33 { pt3dadd( -103.472, -93.12, -123.424, 1.03 ) }
    dend_33 { pt3dadd( -103.661, -93.5263, -123.36, 0.74 ) }
    dend_33 { pt3dadd( -103.686, -93.5938, -123.348, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 57/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -101.665, -78.2245, -123.844, 0.22 ) }
    dend_32 { pt3dadd( -102.954, -78.2633, -125.597, 0.22 ) }
    dend_32 { pt3dadd( -103.473, -78.3196, -126.249, 0.22 ) }
    dend_32 { pt3dadd( -104.04, -78.4093, -126.884, 0.81 ) }
    dend_32 { pt3dadd( -104.349, -78.4728, -127.191, 1.11 ) }
    dend_32 { pt3dadd( -104.735, -78.5682, -127.526, 1.03 ) }
    dend_32 { pt3dadd( -105.831, -78.8592, -128.383, 0.22 ) }
    dend_32 { pt3dadd( -106.037, -78.9325, -128.503, 0.66 ) }
    dend_32 { pt3dadd( -106.499, -79.1151, -128.766, 0.96 ) }
    dend_32 { pt3dadd( -107.034, -79.3005, -129.026, 0.29 ) }
    dend_32 { pt3dadd( -107.651, -79.4647, -129.315, 0.29 ) }
    dend_32 { pt3dadd( -107.888, -79.5087, -129.414, 0.96 ) }
    dend_32 { pt3dadd( -108.366, -79.561, -129.609, 1.18 ) }
    dend_32 { pt3dadd( -108.411, -79.5622, -129.631, 1.18 ) }
    dend_32 { pt3dadd( -108.996, -79.5403, -129.959, 0.88 ) }
    dend_32 { pt3dadd( -109.084, -79.5355, -130.009, 0.88 ) }
    dend_32 { pt3dadd( -109.45, -79.5308, -130.216, 0.66 ) }
    dend_32 { pt3dadd( -110.324, -79.6018, -130.754, 0.29 ) }
    dend_32 { pt3dadd( -110.488, -79.6238, -130.854, 0.29 ) }
    dend_32 { pt3dadd( -111.17, -79.7468, -131.272, 0.29 ) }
    dend_32 { pt3dadd( -111.522, -79.7993, -131.546, 0.59 ) }
    dend_32 { pt3dadd( -111.802, -79.8236, -131.786, 0.59 ) }
    dend_32 { pt3dadd( -112.629, -79.8557, -132.567, 0.29 ) }
    dend_32 { pt3dadd( -112.856, -79.8534, -132.784, 1.03 ) }
    dend_32 { pt3dadd( -113.183, -79.8145, -133.16, 1.33 ) }
    dend_32 { pt3dadd( -114.143, -79.5396, -134.52, 0.29 ) }
    dend_32 { pt3dadd( -114.314, -79.4673, -134.777, 0.29 ) }
    dend_32 { pt3dadd( -114.346, -79.4508, -134.827, 0.29 ) }
    dend_32 { pt3dadd( -114.615, -79.317, -135.3, 0.59 ) }
    dend_32 { pt3dadd( -115.248, -79.0716, -136.473, 0.81 ) }
    dend_32 { pt3dadd( -115.669, -78.9843, -137.347, 0.52 ) }
    dend_32 { pt3dadd( -115.878, -78.999, -137.815, 1.11 ) }
    dend_32 { pt3dadd( -116.243, -79.1, -138.731, 1.4 ) }
    dend_32 { pt3dadd( -116.771, -79.2841, -140.124, 0.29 ) }
    dend_32 { pt3dadd( -116.889, -79.3426, -140.464, 0.88 ) }
    dend_32 { pt3dadd( -117.363, -79.7157, -141.868, 0.52 ) }
    dend_32 { pt3dadd( -117.713, -80.108, -143.004, 0.81 ) }
    dend_32 { pt3dadd( -117.83, -80.2842, -143.448, 0.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -12.9633, 303.094, 35.2189, 0.37 ) }
    dend_23 { pt3dadd( -12.7183, 303.093, 34.8443, 0.37 ) }
    dend_23 { pt3dadd( -12.2467, 303.04, 34.1211, 0.66 ) }
    dend_23 { pt3dadd( -12.2148, 303.033, 34.0743, 0.66 ) }
    dend_23 { pt3dadd( -11.9817, 302.981, 33.7351, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_23 { pt3dadd( -11.944, 302.973, 33.6809, 0.29 ) }
    dend_23 { pt3dadd( -11.3412, 302.879, 32.7315, 0.29 ) }
    dend_23 { pt3dadd( -11.3114, 302.876, 32.6836, 0.29 ) }
    dend_23 { pt3dadd( -11.1666, 302.887, 32.4623, 0.66 ) }
    dend_23 { pt3dadd( -11.0017, 302.91, 32.193, 0.52 ) }
    dend_23 { pt3dadd( -10.9735, 302.918, 32.1421, 0.52 ) }
    dend_23 { pt3dadd( -10.453, 303.146, 31.2101, 0.22 ) }
    dend_23 { pt3dadd( -10.19, 303.362, 30.7708, 0.22 ) }
    dend_23 { pt3dadd( -10.0512, 303.489, 30.5286, 0.29 ) }
    dend_23 { pt3dadd( -4.95778, 305.616, 24.6414, 0.29 ) }
    dend_23 { pt3dadd( 0.0240568, 309.184, 19.39, 0.29 ) }
    dend_23 { pt3dadd( 3.64904, 313.315, 13.4804, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -12.9633, 303.094, 35.2189, 0.29 ) }
    dend_22 { pt3dadd( -12.7501, 304.221, 35.2101, 0.29 ) }
    dend_22 { pt3dadd( -12.7005, 304.601, 35.203, 0.29 ) }
    dend_22 { pt3dadd( -12.6977, 304.652, 35.2052, 0.29 ) }
    dend_22 { pt3dadd( -12.6924, 305.235, 35.2531, 0.29 ) }
    dend_22 { pt3dadd( -12.6936, 305.278, 35.2576, 0.29 ) }
    dend_22 { pt3dadd( -12.7466, 306.061, 35.3894, 0.29 ) }
    dend_22 { pt3dadd( -12.7558, 306.102, 35.3996, 0.29 ) }
    dend_22 { pt3dadd( -12.844, 306.586, 35.5562, 0.52 ) }
    dend_22 { pt3dadd( -12.8553, 306.683, 35.5887, 0.52 ) }
    dend_22 { pt3dadd( -12.8633, 306.886, 35.6502, 0.52 ) }
    dend_22 { pt3dadd( -12.858, 307.379, 35.7781, 0.22 ) }
    dend_22 { pt3dadd( -12.8319, 307.861, 35.8702, 0.22 ) }
    dend_22 { pt3dadd( -12.795, 308.343, 35.9455, 0.44 ) }
    dend_22 { pt3dadd( -12.7532, 308.713, 35.9803, 0.44 ) }
    dend_22 { pt3dadd( -12.6871, 309.237, 36.0174, 0.22 ) }
    dend_22 { pt3dadd( -12.6798, 309.289, 36.0186, 0.22 ) }
    dend_22 { pt3dadd( -12.5674, 310.021, 35.962, 0.22 ) }
    dend_22 { pt3dadd( -12.8378, 317.184, 36.0776, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 17.961, 205.841, -49.567, 0.66 ) }
    dend_19 { pt3dadd( 18.1758, 206.528, -49.6664, 0.66 ) }
    dend_19 { pt3dadd( 18.3984, 207.173, -49.7876, 0.29 ) }
    dend_19 { pt3dadd( 18.4234, 207.241, -49.8024, 0.29 ) }
    dend_19 { pt3dadd( 18.6762, 207.898, -49.96, 0.29 ) }
    dend_19 { pt3dadd( 19.0979, 209.041, -50.2121, 0.29 ) }
    dend_19 { pt3dadd( 19.2686, 209.542, -50.3055, 0.52 ) }
    dend_19 { pt3dadd( 19.3224, 209.708, -50.3324, 0.52 ) }
    dend_19 { pt3dadd( 19.3982, 209.951, -50.3703, 0.52 ) }
    dend_19 { pt3dadd( 19.532, 210.4, -50.4323, 0.37 ) }
    dend_19 { pt3dadd( 19.6996, 211.028, -50.4941, 0.37 ) }
    dend_19 { pt3dadd( 19.8702, 212.01, -50.4743, 0.88 ) }
    dend_19 { pt3dadd( 19.8899, 212.145, -50.4635, 0.88 ) }
    dend_19 { pt3dadd( 19.9681, 212.689, -50.4084, 1.03 ) }
    dend_19 { pt3dadd( 20.051, 213.211, -50.358, 1.18 ) }
    dend_19 { pt3dadd( 20.157, 213.777, -50.3165, 0.66 ) }
    dend_19 { pt3dadd( 20.3126, 214.472, -50.2891, 0.52 ) }
    dend_19 { pt3dadd( 20.399, 214.804, -50.2881, 0.59 ) }
    dend_19 { pt3dadd( 20.5092, 215.158, -50.315, 0.44 ) }
    dend_19 { pt3dadd( 20.8562, 216.094, -50.4726, 0.29 ) }
    dend_19 { pt3dadd( 21.0025, 216.446, -50.5601, 0.37 ) }
    dend_19 { pt3dadd( 21.0287, 216.514, -50.5823, 0.37 ) }
    dend_19 { pt3dadd( 21.1626, 216.915, -50.7195, 0.22 ) }
    dend_19 { pt3dadd( 21.4073, 217.724, -50.9397, 0.59 ) }
    dend_19 { pt3dadd( 21.529, 218.152, -51.0322, 0.88 ) }
    dend_19 { pt3dadd( 21.7275, 218.878, -51.151, 0.52 ) }
    dend_19 { pt3dadd( 21.973, 219.8, -51.2621, 0.29 ) }
    dend_19 { pt3dadd( 22.1518, 220.483, -51.3161, 0.29 ) }
    dend_19 { pt3dadd( 22.3819, 221.405, -51.3397, 0.59 ) }
    dend_19 { pt3dadd( 22.4029, 221.478, -51.3349, 0.59 ) }
    dend_19 { pt3dadd( 22.5724, 221.97, -51.2736, 0.29 ) }
    dend_19 { pt3dadd( 22.6157, 222.073, -51.2558, 0.29 ) }
    dend_19 { pt3dadd( 23.0169, 222.803, -51.1683, 0.52 ) }
    dend_19 { pt3dadd( 23.1943, 223.139, -51.1629, 0.66 ) }
    dend_19 { pt3dadd( 23.5755, 223.957, -51.1981, 0.52 ) }
    dend_19 { pt3dadd( 23.6063, 224.027, -51.2021, 0.52 ) }
    dend_19 { pt3dadd( 23.8108, 224.524, -51.2358, 0.29 ) }
    dend_19 { pt3dadd( 24.2063, 225.75, -51.3715, 0.29 ) }
    dend_19 { pt3dadd( 24.4157, 226.659, -51.5096, 0.66 ) }
    dend_19 { pt3dadd( 24.4827, 226.991, -51.5551, 0.88 ) }
    dend_19 { pt3dadd( 24.4952, 227.063, -51.5643, 0.88 ) }
    dend_19 { pt3dadd( 24.6087, 227.742, -51.6078, 0.52 ) }
    dend_19 { pt3dadd( 24.7442, 228.636, -51.5966, 0.52 ) }
    dend_19 { pt3dadd( 24.8639, 229.388, -51.5534, 0.29 ) }
    dend_19 { pt3dadd( 25.0597, 230.364, -51.508, 0.29 ) }
    dend_19 { pt3dadd( 25.2422, 231.112, -51.4794, 1.03 ) }
    dend_19 { pt3dadd( 25.4627, 231.901, -51.4578, 0.74 ) }
    dend_19 { pt3dadd( 25.7824, 232.772, -51.433, 0.29 ) }
    dend_19 { pt3dadd( 26.3112, 233.968, -51.407, 0.44 ) }
    dend_19 { pt3dadd( 26.6121, 234.576, -51.4109, 0.37 ) }
    dend_19 { pt3dadd( 26.9845, 235.285, -51.4401, 0.37 ) }
    dend_19 { pt3dadd( 27.4313, 236.026, -51.4837, 0.96 ) }
    dend_19 { pt3dadd( 28.1025, 236.992, -51.5798, 0.37 ) }
    dend_19 { pt3dadd( 28.5886, 237.617, -51.6579, 0.37 ) }
    dend_19 { pt3dadd( 29.0438, 238.152, -51.7332, 0.59 ) }
    dend_19 { pt3dadd( 29.2936, 238.44, -51.788, 0.88 ) }
    dend_19 { pt3dadd( 29.4408, 238.614, -51.8285, 0.88 ) }
    dend_19 { pt3dadd( 29.8914, 239.164, -51.982, 0.59 ) }
    dend_19 { pt3dadd( 29.9273, 239.212, -51.9978, 0.52 ) }
    dend_19 { pt3dadd( 30.8185, 240.421, -52.4229, 0.15 ) }
    dend_19 { pt3dadd( 31.2054, 240.98, -52.6321, 0.59 ) }
    dend_19 { pt3dadd( 31.2449, 241.038, -52.6546, 0.59 ) }
    dend_19 { pt3dadd( 31.5486, 241.464, -52.8567, 0.59 ) }
    dend_19 { pt3dadd( 31.5879, 241.517, -52.887, 0.59 ) }
    dend_19 { pt3dadd( 31.9082, 241.95, -53.1575, 0.88 ) }
    dend_19 { pt3dadd( 32.341, 242.565, -53.561, 1.18 ) }
    dend_19 { pt3dadd( 32.5324, 242.845, -53.7374, 1.18 ) }
    dend_19 { pt3dadd( 33.245, 243.94, -54.3488, 0.15 ) }
    dend_19 { pt3dadd( 33.7513, 244.782, -54.7479, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_19 { pt3dadd( 34.0109, 245.265, -54.9309, 0.52 ) }
    dend_19 { pt3dadd( 34.2961, 245.857, -55.1058, 0.66 ) }
    dend_19 { pt3dadd( 34.4462, 246.215, -55.1809, 0.74 ) }
    dend_19 { pt3dadd( 34.7166, 246.962, -55.2807, 0.29 ) }
    dend_19 { pt3dadd( 34.9511, 247.686, -55.3421, 0.37 ) }
    dend_19 { pt3dadd( 35.3143, 248.598, -55.4215, 0.29 ) }
    dend_19 { pt3dadd( 35.3505, 248.673, -55.4301, 0.29 ) }
    dend_19 { pt3dadd( 35.9358, 249.614, -55.6307, 0.52 ) }
    dend_19 { pt3dadd( 35.9792, 249.671, -55.6496, 0.52 ) }
    dend_19 { pt3dadd( 36.637, 250.37, -55.987, 0.81 ) }
    dend_19 { pt3dadd( 37.3789, 251.043, -56.3962, 0.37 ) }
    dend_19 { pt3dadd( 37.4317, 251.085, -56.4251, 0.37 ) }
    dend_19 { pt3dadd( 38.2007, 251.763, -56.8348, 0.29 ) }
    dend_19 { pt3dadd( 38.5387, 252.092, -57.0088, 0.37 ) }
    dend_19 { pt3dadd( 38.5782, 252.137, -57.0291, 0.37 ) }
    dend_19 { pt3dadd( 38.9598, 252.656, -57.2427, 0.37 ) }
    dend_19 { pt3dadd( 39.5915, 253.489, -57.5443, 0.29 ) }
    dend_19 { pt3dadd( 40.3587, 254.386, -57.8548, 0.37 ) }
    dend_19 { pt3dadd( 40.6545, 254.714, -57.9629, 0.88 ) }
    dend_19 { pt3dadd( 40.9972, 255.069, -58.0985, 0.96 ) }
    dend_19 { pt3dadd( 41.8934, 255.847, -58.4668, 0.52 ) }
    dend_19 { pt3dadd( 43.0828, 256.722, -58.9902, 0.66 ) }
    dend_19 { pt3dadd( 43.5643, 257.019, -59.2056, 0.66 ) }
    dend_19 { pt3dadd( 44.2203, 257.355, -59.5052, 0.29 ) }
    dend_19 { pt3dadd( 44.9848, 257.711, -59.8542, 0.44 ) }
    dend_19 { pt3dadd( 45.8861, 258.107, -60.2579, 1.11 ) }
    dend_19 { pt3dadd( 46.61, 258.423, -60.576, 1.11 ) }
    dend_19 { pt3dadd( 47.7018, 258.938, -61.0821, 1.11 ) }
    dend_19 { pt3dadd( 48.1918, 259.153, -61.2818, 1.55 ) }
    dend_19 { pt3dadd( 49.0408, 259.479, -61.5942, 1.55 ) }
    dend_19 { pt3dadd( 49.1548, 259.514, -61.6313, 1.55 ) }
    dend_19 { pt3dadd( 49.8794, 259.681, -61.8229, 1.55 ) }
    dend_19 { pt3dadd( 49.9394, 259.691, -61.8371, 1.55 ) }
    dend_19 { pt3dadd( 50.8936, 259.798, -62.0497, 2.06 ) }
    dend_19 { pt3dadd( 50.9657, 259.805, -62.0635, 2.06 ) }
    dend_19 { pt3dadd( 52.9505, 259.907, -62.418, 0.52 ) }
    dend_19 { pt3dadd( 54.134, 259.942, -62.6299, 0.74 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.961, 205.841, -49.567, 0.74 ) }
    dend_18 { pt3dadd( 18.0955, 204.66, -49.5052, 0.74 ) }
    dend_18 { pt3dadd( 18.0994, 204.596, -49.5013, 0.74 ) }
    dend_18 { pt3dadd( 18.1218, 203.799, -49.4509, 0.37 ) }
    dend_18 { pt3dadd( 18.1159, 202.652, -49.3686, 0.22 ) }
    dend_18 { pt3dadd( 18.0889, 202.106, -49.322, 0.37 ) }
    dend_18 { pt3dadd( 18.0367, 201.436, -49.2654, 0.15 ) }
    dend_18 { pt3dadd( 17.8999, 200.417, -49.1785, 0.15 ) }
    dend_18 { pt3dadd( 17.8362, 199.964, -49.1383, 0.44 ) }
    dend_18 { pt3dadd( 17.7574, 199.472, -49.0889, 0.44 ) }
    dend_18 { pt3dadd( 17.5682, 198.529, -48.9808, 0.22 ) }
    dend_18 { pt3dadd( 17.3114, 197.444, -48.8744, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 59.2595, 89.8863, -52.952, 0.22 ) }
    dend_13 { pt3dadd( 59.1777, 90.8403, -54.5523, 0.22 ) }
    dend_13 { pt3dadd( 59.1488, 91.1775, -55.1178, 0.74 ) }
    dend_13 { pt3dadd( 59.1334, 91.3565, -55.4181, 0.74 ) }
    dend_13 { pt3dadd( 59.0127, 92.763, -57.7774, 0.29 ) }
    dend_13 { pt3dadd( 58.9831, 93.1084, -58.3568, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 59.2595, 89.8863, -52.952, 0.22 ) }
    dend_12 { pt3dadd( 59.5992, 89.5584, -53.9402, 0.22 ) }
    dend_12 { pt3dadd( 59.8299, 89.3896, -54.6754, 0.66 ) }
    dend_12 { pt3dadd( 59.9834, 89.2969, -55.1633, 0.66 ) }
    dend_12 { pt3dadd( 60.1766, 89.2156, -55.726, 0.52 ) }
    dend_12 { pt3dadd( 60.5887, 89.176, -56.8251, 0.22 ) }
    dend_12 { pt3dadd( 60.8112, 89.2183, -57.3343, 0.22 ) }
    dend_12 { pt3dadd( 61.2029, 89.427, -58.0036, 0.59 ) }
    dend_12 { pt3dadd( 61.426, 89.5697, -58.3116, 0.74 ) }
    dend_12 { pt3dadd( 61.7753, 89.7849, -58.7137, 0.74 ) }
    dend_12 { pt3dadd( 62.5428, 90.2325, -59.447, 0.29 ) }
    dend_12 { pt3dadd( 63.2501, 90.6236, -59.9984, 0.29 ) }
    dend_12 { pt3dadd( 64.1452, 91.1112, -60.644, 0.59 ) }
    dend_12 { pt3dadd( 64.5747, 91.3323, -60.9214, 0.52 ) }
    dend_12 { pt3dadd( 65.4305, 91.758, -61.4552, 0.22 ) }
    dend_12 { pt3dadd( 65.9069, 91.9586, -61.7438, 0.29 ) }
    dend_12 { pt3dadd( 66.5731, 92.1355, -62.1259, 0.29 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 89.9356, 101.23, 24.8182, 0.29 ) }
    dend_6 { pt3dadd( 96.104, 107.357, 27.7745, 0.29 ) }
    dend_6 { pt3dadd( 100.788, 114.517, 31.1094, 0.29 ) }
    dend_6 { pt3dadd( 105.598, 121.451, 34.7299, 0.29 ) }
    dend_6 { pt3dadd( 110.441, 127.616, 39.5122, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 77/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 89.9356, 101.23, 24.8182, 0.44 ) }
    dend_5 { pt3dadd( 96.1475, 106.604, 27.0605, 0.29 ) }
    dend_5 { pt3dadd( 102.239, 112.204, 29.0719, 0.29 ) }
    dend_5 { pt3dadd( 107.432, 118.863, 30.1621, 0.29 ) }
    dend_5 { pt3dadd( 111.316, 126.047, 32.5721, 0.29 ) }
    dend_5 { pt3dadd( 113.844, 134.047, 34.0223, 0.29 ) }
    dend_5 { pt3dadd( 116.664, 141.845, 35.9597, 0.29 ) }
    dend_5 { pt3dadd( 119.648, 149.247, 38.9251, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_87 (entry count 85/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -117.406, -192.038, -13.2317, 0.29 ) }
    dend_91 { pt3dadd( -117.84, -196.992, -12.7288, 0.29 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 87/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -117.406, -192.038, -13.2317, 0.44 ) }
    dend_88 { pt3dadd( -124.974, -202.217, -16.8487, 0.29 ) }
    dend_88 { pt3dadd( -130.404, -212.731, -22.6762, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 90/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -134.49, -186.3, 5.49981, 0.66 ) }
    dend_72 { pt3dadd( -134.825, -185.211, 6.24376, 0.66 ) }
    dend_72 { pt3dadd( -134.955, -184.539, 6.64096, 0.29 ) }
    dend_72 { pt3dadd( -135.063, -183.776, 7.02113, 0.29 ) }
    dend_72 { pt3dadd( -135.071, -183.713, 7.04558, 0.29 ) }
    dend_72 { pt3dadd( -135.239, -182.51, 7.43428, 0.52 ) }
    dend_72 { pt3dadd( -135.273, -182.274, 7.49954, 0.74 ) }
    dend_72 { pt3dadd( -135.366, -181.344, 7.65531, 0.37 ) }
    dend_72 { pt3dadd( -135.441, -180.542, 7.75822, 0.37 ) }
    dend_72 { pt3dadd( -135.532, -179.75, 7.82512, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_72 { pt3dadd( -135.575, -179.265, 7.84573, 0.59 ) }
    dend_72 { pt3dadd( -135.603, -178.727, 7.83823, 0.59 ) }
    dend_72 { pt3dadd( -135.584, -178.106, 7.8371, 0.59 ) }
    dend_72 { pt3dadd( -135.473, -177.282, 7.85097, 0.52 ) }
    dend_72 { pt3dadd( -135.323, -176.677, 7.87616, 0.96 ) }
    dend_72 { pt3dadd( -135.08, -175.958, 7.92591, 0.37 ) }
    dend_72 { pt3dadd( -134.898, -175.514, 7.95739, 0.29 ) }
    dend_72 { pt3dadd( -134.503, -174.679, 8.01766, 0.29 ) }
    dend_72 { pt3dadd( -134.172, -174.003, 8.06678, 0.29 ) }
    dend_72 { pt3dadd( -133.958, -173.56, 8.09881, 0.52 ) }
    dend_72 { pt3dadd( -133.934, -173.499, 8.10191, 0.52 ) }
    dend_72 { pt3dadd( -133.826, -173.129, 8.11488, 0.52 ) }
    dend_72 { pt3dadd( -133.68, -172.402, 8.13554, 0.37 ) }
    dend_72 { pt3dadd( -133.552, -171.564, 8.15531, 0.37 ) }
    dend_72 { pt3dadd( -133.545, -171.496, 8.15689, 0.37 ) }
    dend_72 { pt3dadd( -133.442, -170.148, 8.18876, 0.37 ) }
    dend_72 { pt3dadd( -133.393, -168.935, 8.21931, 0.37 ) }
    dend_72 { pt3dadd( -133.378, -167.427, 8.25892, 0.37 ) }
    dend_72 { pt3dadd( -133.379, -167.303, 8.26261, 0.37 ) }
    dend_72 { pt3dadd( -133.351, -166.133, 8.28859, 0.37 ) }
    dend_72 { pt3dadd( -133.348, -166.074, 8.28974, 0.37 ) }
    dend_72 { pt3dadd( -133.285, -165.325, 8.30516, 0.88 ) }
    dend_72 { pt3dadd( -133.267, -165.175, 8.30665, 0.88 ) }
    dend_72 { pt3dadd( -133.084, -164.247, 8.30875, 0.29 ) }
    dend_72 { pt3dadd( -132.788, -163.084, 8.31333, 0.29 ) }
    dend_72 { pt3dadd( -132.555, -162.347, 8.31675, 0.44 ) }
    dend_72 { pt3dadd( -132.373, -161.799, 8.32197, 0.44 ) }
    dend_72 { pt3dadd( -132.152, -161.154, 8.31221, 0.29 ) }
    dend_72 { pt3dadd( -132.125, -161.071, 8.30952, 0.29 ) }
    dend_72 { pt3dadd( -131.782, -160.15, 8.26909, 0.66 ) }
    dend_72 { pt3dadd( -131.686, -159.925, 8.27035, 0.66 ) }
    dend_72 { pt3dadd( -131.504, -159.535, 8.28345, 0.59 ) }
    dend_72 { pt3dadd( -131.05, -158.554, 8.34588, 0.37 ) }
    dend_72 { pt3dadd( -131.023, -158.493, 8.35436, 0.37 ) }
    dend_72 { pt3dadd( -130.415, -157.105, 8.63564, 0.37 ) }
    dend_72 { pt3dadd( -130.096, -156.303, 8.86115, 0.37 ) }
    dend_72 { pt3dadd( -129.876, -155.76, 9.04043, 0.37 ) }
    dend_72 { pt3dadd( -129.79, -155.551, 9.12767, 0.88 ) }
    dend_72 { pt3dadd( -129.537, -154.914, 9.49733, 0.74 ) }
    dend_72 { pt3dadd( -129.521, -154.858, 9.53252, 0.74 ) }
    dend_72 { pt3dadd( -129.579, -154.431, 9.87375, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 41/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -134.49, -186.3, 5.49981, 0.52 ) }
    dend_69 { pt3dadd( -135.199, -186.86, 5.44846, 0.52 ) }
    dend_69 { pt3dadd( -135.88, -187.334, 5.40497, 0.29 ) }
    dend_69 { pt3dadd( -136.543, -187.766, 5.36567, 0.29 ) }
    dend_69 { pt3dadd( -137.579, -188.401, 5.31275, 0.44 ) }
    dend_69 { pt3dadd( -138.453, -188.933, 5.27136, 0.37 ) }
    dend_69 { pt3dadd( -138.836, -189.166, 5.25391, 0.66 ) }
    dend_69 { pt3dadd( -139.183, -189.348, 5.24216, 0.88 ) }
    dend_69 { pt3dadd( -139.63, -189.542, 5.19918, 0.88 ) }
    dend_69 { pt3dadd( -140.294, -189.792, 5.09389, 0.44 ) }
    dend_69 { pt3dadd( -141.106, -190.092, 4.91416, 0.44 ) }
    dend_69 { pt3dadd( -141.163, -190.113, 4.89894, 0.44 ) }
    dend_69 { pt3dadd( -141.866, -190.351, 4.69696, 0.44 ) }
    dend_69 { pt3dadd( -143.015, -190.713, 4.35489, 0.29 ) }
    dend_69 { pt3dadd( -143.734, -190.916, 4.1422, 0.29 ) }
    dend_69 { pt3dadd( -144.638, -191.124, 3.94054, 0.29 ) }
    dend_69 { pt3dadd( -144.708, -191.137, 3.93093, 0.74 ) }
    dend_69 { pt3dadd( -144.768, -191.148, 3.92753, 0.74 ) }
    dend_69 { pt3dadd( -145.399, -191.282, 3.89558, 0.74 ) }
    dend_69 { pt3dadd( -145.953, -191.442, 3.87981, 0.74 ) }
    dend_69 { pt3dadd( -147.093, -191.837, 3.79319, 0.29 ) }
    dend_69 { pt3dadd( -147.701, -192.095, 3.68827, 0.29 ) }
    dend_69 { pt3dadd( -148.536, -192.497, 3.4808, 0.29 ) }
    dend_69 { pt3dadd( -149.602, -193.073, 3.13608, 0.29 ) }
    dend_69 { pt3dadd( -150.101, -193.372, 2.97358, 0.59 ) }
    dend_69 { pt3dadd( -150.341, -193.515, 2.89749, 0.59 ) }
    dend_69 { pt3dadd( -151.058, -193.91, 2.68255, 0.37 ) }
    dend_69 { pt3dadd( -151.182, -193.956, 2.68391, 0.37 ) }
    dend_69 { pt3dadd( -151.841, -194.07, 2.90153, 0.37 ) }
    dend_69 { pt3dadd( -152.913, -194.147, 3.37858, 0.29 ) }
    dend_69 { pt3dadd( -153.569, -194.195, 3.78945, 0.29 ) }
    dend_69 { pt3dadd( -154.069, -194.237, 4.16978, 0.59 ) }
    dend_69 { pt3dadd( -155.046, -194.381, 5.04443, 0.59 ) }
    dend_69 { pt3dadd( -155.578, -194.498, 5.56993, 0.59 ) }
    dend_69 { pt3dadd( -155.971, -194.643, 6.03376, 0.59 ) }
    dend_69 { pt3dadd( -157.027, -195.248, 7.38037, 0.44 ) }
    dend_69 { pt3dadd( -157.056, -195.27, 7.41779, 0.44 ) }
    dend_69 { pt3dadd( -157.476, -195.648, 7.96183, 0.44 ) }
    dend_69 { pt3dadd( -157.505, -195.675, 7.99563, 0.44 ) }
    dend_69 { pt3dadd( -158.133, -196.219, 8.64409, 0.59 ) }
    dend_69 { pt3dadd( -158.567, -196.54, 8.99781, 0.59 ) }
    dend_69 { pt3dadd( -159.227, -196.924, 9.34807, 0.29 ) }
    dend_69 { pt3dadd( -159.276, -196.949, 9.37273, 0.29 ) }
    dend_69 { pt3dadd( -160.454, -197.441, 9.852, 0.44 ) }
    dend_69 { pt3dadd( -160.981, -197.643, 10.0056, 0.96 ) }
    dend_69 { pt3dadd( -161.518, -197.832, 10.1046, 1.33 ) }
    dend_69 { pt3dadd( -162.217, -198.08, 10.2059, 0.88 ) }
    dend_69 { pt3dadd( -163.371, -198.523, 10.3088, 0.44 ) }
    dend_69 { pt3dadd( -164.281, -198.89, 10.3311, 0.44 ) }
    dend_69 { pt3dadd( -165.27, -199.294, 10.2793, 0.52 ) }
    dend_69 { pt3dadd( -165.986, -199.557, 10.2329, 0.52 ) }
    dend_69 { pt3dadd( -166.046, -199.576, 10.2282, 0.52 ) }
    dend_69 { pt3dadd( -166.973, -199.812, 10.1389, 0.37 ) }
    dend_69 { pt3dadd( -167.656, -199.941, 10.0577, 0.37 ) }
    dend_69 { pt3dadd( -168.372, -200.022, 10.0192, 0.37 ) }
    dend_69 { pt3dadd( -169.365, -200.052, 10.0444, 0.52 ) }
    dend_69 { pt3dadd( -169.684, -200.045, 10.0603, 0.96 ) }
    dend_69 { pt3dadd( -170.037, -200.024, 10.071, 0.96 ) }
    dend_69 { pt3dadd( -170.504, -199.975, 10.075, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_69 { pt3dadd( -171.127, -199.925, 10.0642, 0.81 ) }
    dend_69 { pt3dadd( -172.189, -199.919, 10.0149, 0.37 ) }
    dend_69 { pt3dadd( -172.241, -199.923, 10.0111, 0.37 ) }
    dend_69 { pt3dadd( -173.127, -200.051, 9.93029, 0.37 ) }
    dend_69 { pt3dadd( -173.641, -200.15, 9.87622, 0.59 ) }
    dend_69 { pt3dadd( -174.019, -200.229, 9.8331, 0.66 ) }
    dend_69 { pt3dadd( -174.607, -200.35, 9.7628, 0.52 ) }
    dend_69 { pt3dadd( -175.347, -200.468, 9.63475, 0.29 ) }
    dend_69 { pt3dadd( -175.417, -200.475, 9.62328, 0.29 ) }
    dend_69 { pt3dadd( -176.108, -200.509, 9.52359, 0.29 ) }
    dend_69 { pt3dadd( -176.795, -200.547, 9.45472, 0.44 ) }
    dend_69 { pt3dadd( -177.257, -200.584, 9.42148, 0.44 ) }
    dend_69 { pt3dadd( -178.191, -200.686, 9.3779, 0.44 ) }
    dend_69 { pt3dadd( -179.128, -200.828, 9.35552, 0.37 ) }
    dend_69 { pt3dadd( -179.558, -200.907, 9.37796, 0.37 ) }
    dend_69 { pt3dadd( -180.792, -201.15, 9.61117, 0.37 ) }
    dend_69 { pt3dadd( -181.353, -201.264, 9.7973, 0.37 ) }
    dend_69 { pt3dadd( -181.916, -201.376, 10.0643, 0.37 ) }
    dend_69 { pt3dadd( -182.407, -201.451, 10.3714, 0.37 ) }
    dend_69 { pt3dadd( -183.198, -201.512, 10.9589, 0.37 ) }
    dend_69 { pt3dadd( -184.061, -201.506, 11.6504, 0.37 ) }
    dend_69 { pt3dadd( -184.337, -201.492, 11.8902, 0.81 ) }
    dend_69 { pt3dadd( -184.544, -201.504, 12.0622, 1.11 ) }
    dend_69 { pt3dadd( -184.971, -201.587, 12.3906, 1.11 ) }
    dend_69 { pt3dadd( -185.014, -201.6, 12.4167, 1.11 ) }
    dend_69 { pt3dadd( -185.707, -201.877, 12.7472, 0.59 ) }
    dend_69 { pt3dadd( -186.752, -202.355, 13.211, 0.44 ) }
    dend_69 { pt3dadd( -187.44, -202.669, 13.5452, 0.66 ) }
    dend_69 { pt3dadd( -187.486, -202.689, 13.5673, 0.66 ) }
    dend_69 { pt3dadd( -187.969, -202.882, 13.7766, 0.66 ) }
    dend_69 { pt3dadd( -188.763, -203.141, 14.0687, 0.44 ) }
    dend_69 { pt3dadd( -188.856, -203.17, 14.1045, 0.44 ) }
    dend_69 { pt3dadd( -189.625, -203.408, 14.3804, 0.37 ) }
    dend_69 { pt3dadd( -190.429, -203.684, 14.6754, 0.37 ) }
    dend_69 { pt3dadd( -191.175, -203.966, 14.9391, 0.88 ) }
    dend_69 { pt3dadd( -191.689, -204.179, 15.1092, 1.18 ) }
    dend_69 { pt3dadd( -193.208, -204.801, 15.5913, 0.37 ) }
    dend_69 { pt3dadd( -193.893, -205.067, 15.8179, 0.29 ) }
    dend_69 { pt3dadd( -194.328, -205.225, 15.9685, 0.81 ) }
    dend_69 { pt3dadd( -194.391, -205.245, 15.994, 0.81 ) }
    dend_69 { pt3dadd( -194.665, -205.332, 16.1213, 0.81 ) }
    dend_69 { pt3dadd( -195.795, -205.677, 16.6659, 0.37 ) }
    dend_69 { pt3dadd( -196.222, -205.792, 16.8686, 0.74 ) }
    dend_69 { pt3dadd( -196.68, -205.925, 17.0985, 0.74 ) }
    dend_69 { pt3dadd( -197.515, -206.166, 17.5108, 0.81 ) }
    dend_69 { pt3dadd( -198.646, -206.513, 18.0625, 0.29 ) }
    dend_69 { pt3dadd( -199.031, -206.64, 18.2493, 0.29 ) }
    dend_69 { pt3dadd( -199.076, -206.657, 18.2693, 0.29 ) }
    dend_69 { pt3dadd( -199.593, -206.865, 18.4756, 0.74 ) }
    dend_69 { pt3dadd( -199.994, -207.02, 18.6329, 0.81 ) }
    dend_69 { pt3dadd( -201.009, -207.342, 19.0068, 0.37 ) }
    dend_69 { pt3dadd( -201.066, -207.356, 19.0281, 0.37 ) }
    dend_69 { pt3dadd( -201.681, -207.503, 19.2719, 0.29 ) }
    dend_69 { pt3dadd( -202.166, -207.616, 19.4742, 0.29 ) }
    dend_69 { pt3dadd( -202.901, -207.778, 19.8222, 0.52 ) }
    dend_69 { pt3dadd( -203.523, -207.925, 20.1439, 0.88 ) }
    dend_69 { pt3dadd( -203.75, -207.963, 20.2677, 1.03 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 57/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.08023, -119.454, -23.6894, 0.96 ) }
    dend_62 { pt3dadd( 3.46211, -121.616, -23.2449, 0.96 ) }
    dend_62 { pt3dadd( 3.11301, -122.957, -22.9458, 0.96 ) }
    dend_62 { pt3dadd( 2.84906, -124.123, -22.6763, 1.03 ) }
    dend_62 { pt3dadd( 2.72469, -124.822, -22.511, 1.25 ) }
    dend_62 { pt3dadd( 2.5896, -125.707, -22.2997, 1.11 ) }
    dend_62 { pt3dadd( 2.41679, -126.989, -21.9554, 0.74 ) }
    dend_62 { pt3dadd( 2.36997, -128.028, -21.6848, 0.96 ) }
    dend_62 { pt3dadd( 2.37211, -128.779, -21.4494, 0.74 ) }
    dend_62 { pt3dadd( 2.4348, -129.935, -21.0645, 0.59 ) }
    dend_62 { pt3dadd( 2.44205, -129.995, -21.046, 0.59 ) }
    dend_62 { pt3dadd( 2.66451, -131.388, -20.6886, 0.59 ) }
    dend_62 { pt3dadd( 2.91601, -132.622, -20.5086, 0.59 ) }
    dend_62 { pt3dadd( 2.92852, -132.678, -20.5073, 0.59 ) }
    dend_62 { pt3dadd( 3.13105, -133.808, -20.5399, 0.88 ) }
    dend_62 { pt3dadd( 3.28339, -134.917, -20.6245, 0.88 ) }
    dend_62 { pt3dadd( 3.3596, -135.587, -20.6964, 0.88 ) }
    dend_62 { pt3dadd( 3.4358, -136.666, -20.8258, 0.66 ) }
    dend_62 { pt3dadd( 3.43135, -137.785, -20.8765, 0.52 ) }
    dend_62 { pt3dadd( 3.36966, -138.883, -20.8307, 1.11 ) }
    dend_62 { pt3dadd( 3.30899, -139.399, -20.7631, 1.11 ) }
    dend_62 { pt3dadd( 3.18993, -140.205, -20.6128, 0.88 ) }
    dend_62 { pt3dadd( 3.04717, -141.281, -20.3804, 0.81 ) }
    dend_62 { pt3dadd( 2.94525, -142.256, -20.1676, 0.88 ) }
    dend_62 { pt3dadd( 2.93623, -142.982, -20.0503, 1.03 ) }
    dend_62 { pt3dadd( 3.01695, -144.117, -19.9408, 0.74 ) }
    dend_62 { pt3dadd( 3.12136, -144.966, -19.8864, 0.59 ) }
    dend_62 { pt3dadd( 3.30285, -145.95, -19.8447, 0.52 ) }
    dend_62 { pt3dadd( 3.50122, -146.713, -19.8483, 0.74 ) }
    dend_62 { pt3dadd( 3.9257, -148.058, -19.8909, 0.66 ) }
    dend_62 { pt3dadd( 4.2455, -148.998, -19.9288, 0.74 ) }
    dend_62 { pt3dadd( 4.52106, -149.813, -19.9505, 0.81 ) }
    dend_62 { pt3dadd( 4.74116, -150.578, -19.9417, 1.11 ) }
    dend_62 { pt3dadd( 4.93704, -151.408, -19.8981, 0.88 ) }
    dend_62 { pt3dadd( 4.95166, -151.47, -19.8973, 0.88 ) }
    dend_62 { pt3dadd( 5.21438, -152.415, -19.9748, 0.59 ) }
    dend_62 { pt3dadd( 5.52843, -153.374, -20.1425, 0.59 ) }
    dend_62 { pt3dadd( 5.87391, -154.35, -20.3656, 0.81 ) }
    dend_62 { pt3dadd( 6.31264, -155.542, -20.6591, 1.03 ) }
    dend_62 { pt3dadd( 7.1928, -157.704, -21.207, 1.03 ) }
    dend_62 { pt3dadd( 7.88538, -159.282, -21.5967, 0.81 ) }
    dend_62 { pt3dadd( 8.51265, -160.581, -21.9126, 0.59 ) }
    dend_62 { pt3dadd( 8.54121, -160.639, -21.9262, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_62 { pt3dadd( 8.99443, -161.59, -22.1276, 0.74 ) }
    dend_62 { pt3dadd( 9.4519, -162.678, -22.2675, 0.66 ) }
    dend_62 { pt3dadd( 9.8308, -163.769, -22.2745, 0.66 ) }
    dend_62 { pt3dadd( 10.1743, -164.866, -22.2395, 0.66 ) }
    dend_62 { pt3dadd( 10.4371, -165.821, -22.2159, 0.96 ) }
    dend_62 { pt3dadd( 10.5989, -166.606, -22.2324, 1.18 ) }
    dend_62 { pt3dadd( 10.7187, -167.578, -22.3341, 1.03 ) }
    dend_62 { pt3dadd( 10.7357, -168.421, -22.516, 0.88 ) }
    dend_62 { pt3dadd( 10.6844, -169.394, -22.8408, 0.66 ) }
    dend_62 { pt3dadd( 10.6147, -169.992, -23.0859, 0.74 ) }
    dend_62 { pt3dadd( 10.4537, -171.143, -23.6006, 0.74 ) }
    dend_62 { pt3dadd( 10.309, -172.029, -23.9955, 0.81 ) }
    dend_62 { pt3dadd( 10.0895, -173.245, -24.5034, 0.81 ) }
    dend_62 { pt3dadd( 9.91111, -174.326, -24.8797, 1.03 ) }
    dend_62 { pt3dadd( 9.81204, -175.096, -25.0713, 1.11 ) }
    dend_62 { pt3dadd( 9.76053, -175.94, -25.2037, 0.81 ) }
    dend_62 { pt3dadd( 9.75545, -177.275, -25.2906, 0.66 ) }
    dend_62 { pt3dadd( 9.79299, -178.336, -25.2545, 0.81 ) }
    dend_62 { pt3dadd( 9.87005, -179.094, -25.1619, 0.81 ) }
    dend_62 { pt3dadd( 10.0069, -179.867, -25.0238, 0.81 ) }
    dend_62 { pt3dadd( 10.1362, -180.38, -24.9079, 1.03 ) }
    dend_62 { pt3dadd( 10.1559, -180.44, -24.8915, 1.03 ) }
    dend_62 { pt3dadd( 10.4794, -181.188, -24.6404, 0.74 ) }
    dend_62 { pt3dadd( 10.92, -182.007, -24.379, 0.44 ) }
    dend_62 { pt3dadd( 11.0832, -182.278, -24.3025, 0.74 ) }
    dend_62 { pt3dadd( 11.1192, -182.332, -24.2916, 0.74 ) }
    dend_62 { pt3dadd( 11.4101, -182.777, -24.2294, 0.74 ) }
    dend_62 { pt3dadd( 11.448, -182.839, -24.2226, 0.74 ) }
    dend_62 { pt3dadd( 12.1275, -184.093, -24.0806, 0.59 ) }
    dend_62 { pt3dadd( 12.3103, -184.48, -24.0368, 0.88 ) }
    dend_62 { pt3dadd( 12.6529, -185.337, -23.9474, 0.88 ) }
    dend_62 { pt3dadd( 13.018, -186.459, -23.8352, 0.66 ) }
    dend_62 { pt3dadd( 13.2143, -187.253, -23.7615, 0.74 ) }
    dend_62 { pt3dadd( 13.4207, -188.3, -23.7011, 0.88 ) }
    dend_62 { pt3dadd( 13.5356, -189.035, -23.7184, 0.44 ) }
    dend_62 { pt3dadd( 13.647, -189.7, -23.8101, 0.44 ) }
    dend_62 { pt3dadd( 13.771, -190.462, -23.9886, 0.52 ) }
    dend_62 { pt3dadd( 13.8976, -191.079, -24.2046, 0.81 ) }
    dend_62 { pt3dadd( 14.1653, -192.163, -24.648, 1.03 ) }
    dend_62 { pt3dadd( 14.5282, -193.383, -25.1645, 0.88 ) }
    dend_62 { pt3dadd( 14.9206, -194.535, -25.6112, 0.59 ) }
    dend_62 { pt3dadd( 15.1614, -195.164, -25.8254, 0.74 ) }
    dend_62 { pt3dadd( 15.6241, -196.297, -26.0934, 0.52 ) }
    dend_62 { pt3dadd( 15.8827, -196.919, -26.1511, 0.52 ) }
    dend_62 { pt3dadd( 16.2087, -197.744, -26.064, 0.81 ) }
    dend_62 { pt3dadd( 16.4482, -198.352, -25.8949, 1.03 ) }
    dend_62 { pt3dadd( 16.6082, -198.74, -25.7378, 1.03 ) }
    dend_62 { pt3dadd( 17.0603, -199.798, -25.2409, 0.52 ) }
    dend_62 { pt3dadd( 17.2316, -200.21, -25.0455, 0.66 ) }
    dend_62 { pt3dadd( 17.5146, -200.905, -24.7562, 0.66 ) }
    dend_62 { pt3dadd( 17.5399, -200.971, -24.7332, 0.66 ) }
    dend_62 { pt3dadd( 17.7784, -201.609, -24.5457, 0.81 ) }
    dend_62 { pt3dadd( 18.0863, -202.45, -24.344, 0.59 ) }
    dend_62 { pt3dadd( 18.4743, -203.504, -24.1482, 0.37 ) }
    dend_62 { pt3dadd( 18.682, -204.057, -24.0444, 0.88 ) }
    dend_62 { pt3dadd( 18.9661, -204.712, -23.9177, 1.18 ) }
    dend_62 { pt3dadd( 18.9945, -204.767, -23.905, 1.18 ) }
    dend_62 { pt3dadd( 19.3264, -205.27, -23.8272, 1.11 ) }
    dend_62 { pt3dadd( 19.7508, -205.796, -23.813, 0.96 ) }
    dend_62 { pt3dadd( 19.7943, -205.845, -23.8161, 0.96 ) }
    dend_62 { pt3dadd( 20.6274, -206.783, -23.9498, 0.59 ) }
    dend_62 { pt3dadd( 21.1145, -207.367, -24.0575, 0.81 ) }
    dend_62 { pt3dadd( 22.2039, -208.865, -24.3525, 0.59 ) }
    dend_62 { pt3dadd( 22.6547, -209.609, -24.5039, 0.88 ) }
    dend_62 { pt3dadd( 22.8999, -210.132, -24.6117, 0.88 ) }
    dend_62 { pt3dadd( 23.1003, -210.722, -24.7204, 0.81 ) }
    dend_62 { pt3dadd( 23.2531, -211.537, -24.8475, 0.59 ) }
    dend_62 { pt3dadd( 23.3173, -212.392, -24.9396, 0.66 ) }
    dend_62 { pt3dadd( 23.3048, -213.383, -24.9773, 1.03 ) }
    dend_62 { pt3dadd( 23.2959, -214.006, -24.9896, 1.33 ) }
    dend_62 { pt3dadd( 23.2963, -214.539, -25.008, 1.18 ) }
    dend_62 { pt3dadd( 23.3255, -215.256, -25.0659, 0.81 ) }
    dend_62 { pt3dadd( 23.4604, -216.18, -25.2146, 0.59 ) }
    dend_62 { pt3dadd( 23.7055, -217.06, -25.3755, 0.74 ) }
    dend_62 { pt3dadd( 23.9048, -217.6, -25.4465, 0.96 ) }
    dend_62 { pt3dadd( 23.926, -217.65, -25.4496, 0.96 ) }
    dend_62 { pt3dadd( 24.3791, -218.632, -25.4434, 0.96 ) }
    dend_62 { pt3dadd( 25.1607, -220.186, -25.3377, 0.74 ) }
    dend_62 { pt3dadd( 25.7751, -221.299, -25.194, 0.74 ) }
    dend_62 { pt3dadd( 26.344, -222.295, -25.0131, 0.88 ) }
    dend_62 { pt3dadd( 26.7787, -223.18, -24.7621, 0.88 ) }
    dend_62 { pt3dadd( 27.1407, -224.096, -24.4129, 0.59 ) }
    dend_62 { pt3dadd( 27.2707, -224.767, -24.0558, 0.59 ) }
    dend_62 { pt3dadd( 27.2321, -225.369, -23.6692, 0.59 ) }
    dend_62 { pt3dadd( 27.22, -225.414, -23.6413, 0.59 ) }
    dend_62 { pt3dadd( 26.4313, -227.27, -22.6265, 0.52 ) }
    dend_62 { pt3dadd( 25.9899, -228.06, -22.2617, 0.52 ) }
    dend_62 { pt3dadd( 25.076, -229.583, -21.7971, 1.18 ) }
    dend_62 { pt3dadd( 24.5411, -230.492, -21.6485, 1.18 ) }
    dend_62 { pt3dadd( 24.1496, -231.298, -21.6461, 0.52 ) }
    dend_62 { pt3dadd( 23.8002, -232.51, -21.8556, 0.52 ) }
    dend_62 { pt3dadd( 23.712, -233.488, -22.1708, 0.66 ) }
    dend_62 { pt3dadd( 23.7824, -235.084, -22.7831, 0.66 ) }
    dend_62 { pt3dadd( 23.9702, -235.997, -23.1916, 0.66 ) }
    dend_62 { pt3dadd( 24.4636, -237.59, -23.9053, 0.66 ) }
    dend_62 { pt3dadd( 25.1705, -239.283, -24.6183, 0.74 ) }
    dend_62 { pt3dadd( 25.4844, -239.882, -24.8431, 1.03 ) }
    dend_62 { pt3dadd( 25.8135, -240.429, -25.0169, 1.03 ) }
    dend_62 { pt3dadd( 26.522, -241.523, -25.2824, 0.66 ) }
    dend_62 { pt3dadd( 27.0387, -242.277, -25.4441, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_62 { pt3dadd( 27.4917, -242.966, -25.5296, 0.74 ) }
    dend_62 { pt3dadd( 27.8629, -243.569, -25.5617, 1.03 ) }
    dend_62 { pt3dadd( 27.8972, -243.621, -25.5631, 1.03 ) }
    dend_62 { pt3dadd( 28.0589, -243.848, -25.5407, 1.25 ) }
    dend_62 { pt3dadd( 28.1015, -243.904, -25.5171, 1.25 ) }
    dend_62 { pt3dadd( 28.3752, -244.251, -25.3202, 1.25 ) }
    dend_62 { pt3dadd( 28.407, -244.299, -25.2929, 1.25 ) }
    dend_62 { pt3dadd( 28.6386, -244.706, -25.079, 1.25 ) }
    dend_62 { pt3dadd( 28.8422, -245.144, -24.879, 1.25 ) }
    dend_62 { pt3dadd( 29.2537, -246.289, -24.3837, 0.59 ) }
    dend_62 { pt3dadd( 29.5486, -247.187, -23.9892, 0.59 ) }
    dend_62 { pt3dadd( 29.8486, -248.193, -23.5473, 0.66 ) }
    dend_62 { pt3dadd( 30.0773, -248.959, -23.1967, 0.66 ) }
    dend_62 { pt3dadd( 30.3758, -249.922, -22.7287, 0.59 ) }
    dend_62 { pt3dadd( 30.6269, -250.699, -22.3255, 0.44 ) }
    dend_62 { pt3dadd( 30.8883, -251.345, -21.9257, 0.29 ) }
    dend_62 { pt3dadd( 30.9134, -251.384, -21.8925, 0.29 ) }
    dend_62 { pt3dadd( 31.3781, -251.782, -21.3348, 0.59 ) }
    dend_62 { pt3dadd( 31.8467, -252.097, -20.8075, 0.74 ) }
    dend_62 { pt3dadd( 31.8847, -252.122, -20.7605, 0.74 ) }
    dend_62 { pt3dadd( 32.4267, -252.512, -20.0548, 0.74 ) }
    dend_62 { pt3dadd( 32.4562, -252.539, -20.0063, 0.74 ) }
    dend_62 { pt3dadd( 33.0579, -253.198, -18.7422, 0.59 ) }
    dend_62 { pt3dadd( 33.3197, -253.533, -18.066, 0.81 ) }
    dend_62 { pt3dadd( 33.6753, -254.106, -16.9481, 0.66 ) }
    dend_62 { pt3dadd( 33.6943, -254.138, -16.8858, 0.66 ) }
    dend_62 { pt3dadd( 34.009, -254.684, -15.7299, 1.03 ) }
    dend_62 { pt3dadd( 34.2103, -255.035, -14.8224, 1.47 ) }
    dend_62 { pt3dadd( 34.2686, -255.194, -14.3211, 1.55 ) }
    dend_62 { pt3dadd( 34.3308, -255.524, -13.2017, 0.29 ) }
    dend_62 { pt3dadd( 34.3478, -255.762, -12.3854, 0.59 ) }
    dend_62 { pt3dadd( 34.3619, -256.125, -11.1865, 0.81 ) }
    dend_62 { pt3dadd( 34.355, -256.571, -9.74577, 1.18 ) }
    dend_62 { pt3dadd( 34.333, -257.184, -7.91333, 0.44 ) }
    dend_62 { pt3dadd( 34.3053, -257.611, -6.68092, 0.59 ) }
    dend_62 { pt3dadd( 34.3045, -257.634, -6.61965, 0.59 ) }
    dend_62 { pt3dadd( 34.3119, -257.97, -5.93679, 0.81 ) }
    dend_62 { pt3dadd( 34.3162, -258.001, -5.89268, 0.81 ) }
    dend_62 { pt3dadd( 34.4516, -258.521, -5.3109, 0.37 ) }
    dend_62 { pt3dadd( 34.6678, -259.11, -4.72689, 0.88 ) }
    dend_62 { pt3dadd( 34.8299, -259.585, -4.30907, 1.33 ) }
    dend_62 { pt3dadd( 34.9785, -260.099, -3.9069, 1.47 ) }
    dend_62 { pt3dadd( 35.3062, -261.243, -3.13806, 0.88 ) }
    dend_62 { pt3dadd( 35.3229, -261.297, -3.1056, 0.88 ) }
    dend_62 { pt3dadd( 35.5022, -261.813, -2.83288, 1.03 ) }
    dend_62 { pt3dadd( 35.8464, -262.669, -2.46514, 0.44 ) }
    dend_62 { pt3dadd( 36.238, -263.556, -2.14429, 0.44 ) }
    dend_62 { pt3dadd( 36.608, -264.335, -1.92722, 0.66 ) }
    dend_62 { pt3dadd( 36.6375, -264.39, -1.91566, 0.66 ) }
    dend_62 { pt3dadd( 36.9168, -264.899, -1.79161, 0.44 ) }
    dend_62 { pt3dadd( 37.2294, -265.45, -1.63944, 0.81 ) }
    dend_62 { pt3dadd( 37.4251, -265.777, -1.52624, 0.96 ) }
    dend_62 { pt3dadd( 37.7119, -266.266, -1.32948, 1.11 ) }
    dend_62 { pt3dadd( 38.0438, -266.9, -1.0465, 0.29 ) }
    dend_62 { pt3dadd( 38.3135, -267.437, -0.815453, 0.22 ) }
    dend_62 { pt3dadd( 38.3397, -267.493, -0.792854, 0.22 ) }
    dend_62 { pt3dadd( 38.6759, -268.165, -0.504777, 1.47 ) }
    dend_62 { pt3dadd( 38.7044, -268.216, -0.480628, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.08023, -119.454, -23.6894, 0.44 ) }
    dend_53 { pt3dadd( 4.50424, -120.949, -24.8873, 0.44 ) }
    dend_53 { pt3dadd( 4.98382, -122.438, -26.0732, 0.59 ) }
    dend_53 { pt3dadd( 6.38477, -126.324, -29.0776, 0.59 ) }
    dend_53 { pt3dadd( 7.07827, -128.121, -30.4097, 0.81 ) }
    dend_53 { pt3dadd( 8.01075, -130.396, -32.0491, 0.81 ) }
    dend_53 { pt3dadd( 8.90747, -132.524, -33.5295, 0.88 ) }
    dend_53 { pt3dadd( 9.4348, -133.746, -34.3276, 1.03 ) }
    dend_53 { pt3dadd( 10.2961, -135.552, -35.4279, 0.52 ) }
    dend_53 { pt3dadd( 10.7245, -136.366, -35.8266, 0.88 ) }
    dend_53 { pt3dadd( 11.4123, -137.664, -36.4382, 0.88 ) }
    dend_53 { pt3dadd( 11.7359, -138.383, -36.7529, 0.88 ) }
    dend_53 { pt3dadd( 11.7565, -138.477, -36.7977, 0.88 ) }
    dend_53 { pt3dadd( 11.7029, -139.754, -37.655, 0.44 ) }
    dend_53 { pt3dadd( 11.5583, -140.625, -38.3986, 0.74 ) }
    dend_53 { pt3dadd( 11.455, -141.638, -39.3293, 0.74 ) }
    dend_53 { pt3dadd( 11.4599, -142.906, -40.5388, 0.96 ) }
    dend_53 { pt3dadd( 11.7068, -144.648, -42.2359, 0.96 ) }
    dend_53 { pt3dadd( 12.2071, -146.422, -43.8816, 0.96 ) }
    dend_53 { pt3dadd( 12.8782, -148.168, -45.4601, 0.96 ) }
    dend_53 { pt3dadd( 13.8046, -150.168, -47.0953, 0.88 ) }
    dend_53 { pt3dadd( 14.8025, -152.088, -48.4851, 0.88 ) }
    dend_53 { pt3dadd( 15.7176, -153.801, -49.5563, 0.59 ) }
    dend_53 { pt3dadd( 16.6468, -155.543, -50.5328, 0.59 ) }
    dend_53 { pt3dadd( 17.3175, -156.904, -51.2379, 0.96 ) }
    dend_53 { pt3dadd( 17.9079, -158.291, -51.9158, 1.25 ) }
    dend_53 { pt3dadd( 18.3737, -159.654, -52.563, 1.33 ) }
    dend_53 { pt3dadd( 18.9552, -161.637, -53.4407, 0.96 ) }
    dend_53 { pt3dadd( 19.3744, -163.16, -54.0889, 0.81 ) }
    dend_53 { pt3dadd( 19.8683, -164.822, -54.8109, 0.88 ) }
    dend_53 { pt3dadd( 20.2038, -165.599, -55.101, 1.11 ) }
    dend_53 { pt3dadd( 20.2447, -165.663, -55.1266, 1.11 ) }
    dend_53 { pt3dadd( 21.0611, -166.61, -55.4596, 1.11 ) }
    dend_53 { pt3dadd( 21.7953, -167.269, -55.6039, 1.25 ) }
    dend_53 { pt3dadd( 21.9707, -167.403, -55.6362, 1.25 ) }
    dend_53 { pt3dadd( 23.2314, -168.301, -55.9901, 1.33 ) }
    dend_53 { pt3dadd( 24.5372, -169.271, -56.5687, 1.03 ) }
    dend_53 { pt3dadd( 25.2721, -169.886, -57.0486, 0.59 ) }
    dend_53 { pt3dadd( 25.8129, -170.401, -57.5458, 0.81 ) }
    dend_53 { pt3dadd( 27.0289, -171.824, -59.1705, 0.81 ) }
    dend_53 { pt3dadd( 27.7536, -172.953, -60.6017, 1.11 ) }
    dend_53 { pt3dadd( 28.2749, -174.16, -62.2061, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_53 { pt3dadd( 28.7098, -175.611, -64.0917, 0.59 ) }
    dend_53 { pt3dadd( 28.9337, -176.471, -65.2041, 0.81 ) }
    dend_53 { pt3dadd( 29.3262, -177.943, -67.1296, 0.96 ) }
    dend_53 { pt3dadd( 29.692, -179.185, -68.6594, 0.81 ) }
    dend_53 { pt3dadd( 30.256, -180.858, -70.4927, 0.37 ) }
    dend_53 { pt3dadd( 30.8857, -182.399, -71.97, 1.03 ) }
    dend_53 { pt3dadd( 31.9379, -184.599, -73.7267, 0.96 ) }
    dend_53 { pt3dadd( 33.1467, -186.817, -75.2329, 1.18 ) }
    dend_53 { pt3dadd( 34.1388, -188.438, -76.2093, 1.18 ) }
    dend_53 { pt3dadd( 35.2539, -190.125, -77.1466, 1.18 ) }
    dend_53 { pt3dadd( 36.3562, -191.715, -77.9798, 0.81 ) }
    dend_53 { pt3dadd( 37.5896, -193.474, -78.813, 0.66 ) }
    dend_53 { pt3dadd( 38.2677, -194.456, -79.2151, 0.96 ) }
    dend_53 { pt3dadd( 39.588, -196.345, -79.8944, 1.25 ) }
    dend_53 { pt3dadd( 39.6471, -196.427, -79.9258, 1.25 ) }
    dend_53 { pt3dadd( 40.7787, -197.878, -80.4363, 1.11 ) }
    dend_53 { pt3dadd( 41.6127, -199.01, -80.7301, 0.81 ) }
    dend_53 { pt3dadd( 42.1208, -199.777, -80.8722, 1.25 ) }
    dend_53 { pt3dadd( 42.6656, -200.745, -80.9552, 1.25 ) }
    dend_53 { pt3dadd( 43.0837, -201.739, -80.9421, 0.66 ) }
    dend_53 { pt3dadd( 43.3848, -202.772, -81.0085, 0.59 ) }
    dend_53 { pt3dadd( 43.5251, -204.098, -81.1997, 0.59 ) }
    dend_53 { pt3dadd( 43.5057, -204.744, -81.3673, 0.88 ) }
    dend_53 { pt3dadd( 43.4966, -204.841, -81.3999, 0.88 ) }
    dend_53 { pt3dadd( 43.4, -206.078, -81.8975, 0.88 ) }
    dend_53 { pt3dadd( 43.4355, -208.289, -82.846, 0.59 ) }
    dend_53 { pt3dadd( 43.6047, -209.263, -83.288, 0.44 ) }
    dend_53 { pt3dadd( 43.6568, -209.437, -83.3606, 0.44 ) }
    dend_53 { pt3dadd( 43.9912, -210.319, -83.6994, 0.74 ) }
    dend_53 { pt3dadd( 44.5566, -211.698, -84.1569, 0.96 ) }
    dend_53 { pt3dadd( 45.0659, -212.854, -84.5458, 0.96 ) }
    dend_53 { pt3dadd( 45.8173, -214.61, -85.0554, 0.59 ) }
    dend_53 { pt3dadd( 46.1828, -215.54, -85.3395, 0.88 ) }
    dend_53 { pt3dadd( 46.2156, -215.633, -85.3685, 0.88 ) }
    dend_53 { pt3dadd( 46.5354, -216.629, -85.663, 0.96 ) }
    dend_53 { pt3dadd( 47.1839, -218.941, -86.3736, 0.59 ) }
    dend_53 { pt3dadd( 47.5436, -220.255, -86.7967, 1.03 ) }
    dend_53 { pt3dadd( 47.8508, -221.276, -87.1061, 1.18 ) }
    dend_53 { pt3dadd( 48.4198, -222.973, -87.6202, 0.88 ) }
    dend_53 { pt3dadd( 48.9047, -224.429, -88.0428, 0.74 ) }
    dend_53 { pt3dadd( 49.4086, -226.0, -88.4732, 0.66 ) }
    dend_53 { pt3dadd( 49.9617, -227.999, -88.9547, 0.52 ) }
    dend_53 { pt3dadd( 50.2307, -229.225, -89.2654, 0.81 ) }
    dend_53 { pt3dadd( 50.4112, -230.504, -89.6193, 0.37 ) }
    dend_53 { pt3dadd( 50.4262, -231.592, -89.9586, 0.37 ) }
    dend_53 { pt3dadd( 50.3601, -232.368, -90.2242, 0.88 ) }
    dend_53 { pt3dadd( 50.2277, -233.102, -90.5003, 1.18 ) }
    dend_53 { pt3dadd( 49.9748, -233.971, -90.8716, 1.33 ) }
    dend_53 { pt3dadd( 49.5371, -235.457, -91.5712, 0.88 ) }
    dend_53 { pt3dadd( 49.1431, -237.087, -92.3971, 0.74 ) }
    dend_53 { pt3dadd( 49.123, -237.179, -92.4455, 0.74 ) }
    dend_53 { pt3dadd( 48.6923, -239.345, -93.6247, 0.52 ) }
    dend_53 { pt3dadd( 48.4392, -240.72, -94.3918, 0.66 ) }
    dend_53 { pt3dadd( 48.0179, -243.211, -95.7858, 0.59 ) }
    dend_53 { pt3dadd( 47.8316, -244.626, -96.5249, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 27.6148, -172.905, -27.0496, 0.37 ) }
    dend_51 { pt3dadd( 28.5717, -173.122, -26.6033, 0.37 ) }
    dend_51 { pt3dadd( 29.6201, -173.436, -26.1182, 0.59 ) }
    dend_51 { pt3dadd( 30.2618, -173.635, -25.839, 0.59 ) }
    dend_51 { pt3dadd( 31.4185, -173.969, -25.3712, 0.59 ) }
    dend_51 { pt3dadd( 31.574, -174.012, -25.3111, 0.59 ) }
    dend_51 { pt3dadd( 32.4164, -174.231, -25.0281, 0.22 ) }
    dend_51 { pt3dadd( 32.8603, -174.309, -24.9587, 0.44 ) }
    dend_51 { pt3dadd( 33.5913, -174.378, -24.9979, 0.44 ) }
    dend_51 { pt3dadd( 34.1531, -174.408, -25.1146, 0.81 ) }
    dend_51 { pt3dadd( 34.2475, -174.405, -25.1431, 0.81 ) }
    dend_51 { pt3dadd( 34.918, -174.299, -25.411, 0.96 ) }
    dend_51 { pt3dadd( 36.3923, -173.927, -26.1862, 0.52 ) }
    dend_51 { pt3dadd( 36.876, -173.788, -26.4623, 0.52 ) }
    dend_51 { pt3dadd( 36.9423, -173.768, -26.5013, 0.52 ) }
    dend_51 { pt3dadd( 37.7645, -173.51, -26.986, 0.44 ) }
    dend_51 { pt3dadd( 39.2741, -173.011, -27.8342, 0.74 ) }
    dend_51 { pt3dadd( 40.6799, -172.523, -28.648, 0.29 ) }
    dend_51 { pt3dadd( 41.2871, -172.294, -28.9898, 0.29 ) }
    dend_51 { pt3dadd( 41.7013, -172.154, -29.2223, 0.59 ) }
    dend_51 { pt3dadd( 41.76, -172.139, -29.2554, 0.59 ) }
    dend_51 { pt3dadd( 42.2016, -172.076, -29.5325, 1.18 ) }
    dend_51 { pt3dadd( 43.6036, -172.012, -30.351, 1.11 ) }
    dend_51 { pt3dadd( 44.3817, -172.036, -30.8211, 0.37 ) }
    dend_51 { pt3dadd( 45.469, -172.114, -31.4879, 0.29 ) }
    dend_51 { pt3dadd( 46.7309, -172.237, -32.2257, 1.11 ) }
    dend_51 { pt3dadd( 48.4175, -172.415, -33.1432, 0.66 ) }
    dend_51 { pt3dadd( 49.4971, -172.546, -33.6939, 0.44 ) }
    dend_51 { pt3dadd( 50.8907, -172.724, -34.3893, 1.18 ) }
    dend_51 { pt3dadd( 51.4203, -172.789, -34.6682, 1.62 ) }
    dend_51 { pt3dadd( 52.2066, -172.854, -35.0763, 1.18 ) }
    dend_51 { pt3dadd( 53.1244, -172.884, -35.5056, 0.74 ) }
    dend_51 { pt3dadd( 53.1888, -172.884, -35.5324, 0.74 ) }
    dend_51 { pt3dadd( 54.8671, -172.823, -36.3819, 0.59 ) }
    dend_51 { pt3dadd( 54.9284, -172.818, -36.4148, 0.59 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 90/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 27.6148, -172.905, -27.0496, 0.59 ) }
    dend_50 { pt3dadd( 27.6426, -174.52, -26.556, 0.59 ) }
    dend_50 { pt3dadd( 27.6777, -175.328, -26.0642, 0.66 ) }
    dend_50 { pt3dadd( 27.7117, -175.73, -25.7114, 1.03 ) }
    dend_50 { pt3dadd( 27.7183, -175.88, -25.5661, 1.03 ) }
    dend_50 { pt3dadd( 27.7005, -176.172, -25.1953, 1.03 ) }
    dend_50 { pt3dadd( 27.6102, -176.931, -24.0986, 0.74 ) }
    dend_50 { pt3dadd( 27.37, -178.006, -22.2004, 1.03 ) }
    dend_50 { pt3dadd( 27.2404, -178.626, -20.7707, 1.11 ) }
    dend_50 { pt3dadd( 27.1911, -178.886, -20.1491, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_50 { pt3dadd( 26.9335, -180.032, -17.5205, 0.74 ) }
    dend_50 { pt3dadd( 26.9222, -180.075, -17.4215, 0.74 ) }
    dend_50 { pt3dadd( 26.7917, -180.57, -16.3819, 0.66 ) }
    dend_50 { pt3dadd( 26.3529, -182.82, -12.5527, 0.66 ) }
    dend_50 { pt3dadd( 26.2745, -183.509, -11.614, 0.52 ) }
    dend_50 { pt3dadd( 26.2575, -184.4, -10.6592, 0.74 ) }
    dend_50 { pt3dadd( 26.2605, -184.451, -10.6208, 0.74 ) }
    dend_50 { pt3dadd( 26.3298, -185.189, -10.1834, 0.88 ) }
    dend_50 { pt3dadd( 26.5779, -187.085, -9.37214, 0.52 ) }
    dend_50 { pt3dadd( 26.7011, -188.006, -9.16321, 0.52 ) }
    dend_50 { pt3dadd( 26.8561, -188.969, -8.94136, 0.52 ) }
    dend_50 { pt3dadd( 27.0308, -189.899, -8.74808, 0.44 ) }
    dend_50 { pt3dadd( 27.1518, -190.622, -8.61726, 0.37 ) }
    dend_50 { pt3dadd( 27.3513, -191.891, -8.38752, 0.37 ) }
    dend_50 { pt3dadd( 27.5238, -192.903, -8.23283, 0.59 ) }
    dend_50 { pt3dadd( 27.6371, -193.496, -8.11956, 0.88 ) }
    dend_50 { pt3dadd( 27.6509, -193.558, -8.10197, 0.88 ) }
    dend_50 { pt3dadd( 27.7852, -194.07, -7.91789, 0.96 ) }
    dend_50 { pt3dadd( 28.1666, -195.438, -7.2064, 0.44 ) }
    dend_50 { pt3dadd( 28.3903, -196.163, -6.75019, 0.59 ) }
    dend_50 { pt3dadd( 28.4052, -196.207, -6.71604, 0.59 ) }
    dend_50 { pt3dadd( 28.801, -197.261, -5.88416, 0.81 ) }
    dend_50 { pt3dadd( 28.9296, -197.627, -5.59993, 0.96 ) }
    dend_50 { pt3dadd( 29.4423, -199.193, -4.43245, 0.52 ) }
    dend_50 { pt3dadd( 29.5459, -199.565, -4.17824, 0.74 ) }
    dend_50 { pt3dadd( 29.8441, -200.848, -3.38269, 0.52 ) }
    dend_50 { pt3dadd( 30.0253, -201.684, -2.97244, 0.74 ) }
    dend_50 { pt3dadd( 30.1735, -202.45, -2.66548, 0.44 ) }
    dend_50 { pt3dadd( 30.2759, -203.119, -2.38288, 0.29 ) }
    dend_50 { pt3dadd( 30.3258, -203.542, -2.17999, 0.37 ) }
    dend_50 { pt3dadd( 30.3774, -204.162, -1.75424, 0.59 ) }
    dend_50 { pt3dadd( 30.449, -204.9, -1.13905, 0.59 ) }
    dend_50 { pt3dadd( 30.6357, -206.077, -0.0234962, 0.81 ) }
    dend_50 { pt3dadd( 30.9689, -207.287, 1.24777, 0.44 ) }
    dend_50 { pt3dadd( 31.4329, -208.4, 2.54933, 0.88 ) }
    dend_50 { pt3dadd( 32.1074, -209.56, 4.05122, 0.74 ) }
    dend_50 { pt3dadd( 32.4771, -209.968, 4.65136, 0.29 ) }
    dend_50 { pt3dadd( 33.1869, -210.447, 5.45629, 0.37 ) }
    dend_50 { pt3dadd( 34.1218, -210.604, 5.80541, 0.37 ) }
    dend_50 { pt3dadd( 34.9363, -210.542, 5.82171, 0.66 ) }
    dend_50 { pt3dadd( 35.0009, -210.531, 5.81406, 0.66 ) }
    dend_50 { pt3dadd( 36.0111, -210.293, 5.57595, 0.29 ) }
    dend_50 { pt3dadd( 36.0817, -210.274, 5.56003, 0.29 ) }
    dend_50 { pt3dadd( 37.1962, -209.933, 5.37117, 0.15 ) }
    dend_50 { pt3dadd( 38.2445, -209.56, 5.13303, 0.15 ) }
    dend_50 { pt3dadd( 40.4964, -215.963, 11.147, 0.15 ) }
    dend_50 { pt3dadd( 41.895, -222.501, 17.2742, 0.15 ) }
    dend_50 { pt3dadd( 44.4722, -229.679, 22.1823, 0.15 ) }
    dend_50 { pt3dadd( 48.7325, -235.23, 27.9513, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 49/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.48512, -323.486, -39.6889, 1.18 ) }
    dend_46 { pt3dadd( -1.86787, -324.521, -39.4573, 1.18 ) }
    dend_46 { pt3dadd( -1.21368, -325.553, -39.197, 0.96 ) }
    dend_46 { pt3dadd( -0.926364, -325.986, -39.0924, 1.47 ) }
    dend_46 { pt3dadd( -0.575776, -326.503, -38.9804, 1.84 ) }
    dend_46 { pt3dadd( -0.14294, -327.131, -38.8532, 1.33 ) }
    dend_46 { pt3dadd( 0.453695, -328.0, -38.704, 0.74 ) }
    dend_46 { pt3dadd( 0.487229, -328.049, -38.7003, 0.74 ) }
    dend_46 { pt3dadd( 0.930411, -328.678, -38.6706, 0.81 ) }
    dend_46 { pt3dadd( 1.29085, -329.184, -38.6712, 0.44 ) }
    dend_46 { pt3dadd( 1.32412, -329.232, -38.6768, 0.44 ) }
    dend_46 { pt3dadd( 1.83049, -330.054, -38.8467, 0.29 ) }
    dend_46 { pt3dadd( 2.2712, -330.794, -39.0694, 0.44 ) }
    dend_46 { pt3dadd( 2.5422, -331.255, -39.2196, 0.81 ) }
    dend_46 { pt3dadd( 2.81974, -331.69, -39.3519, 0.81 ) }
    dend_46 { pt3dadd( 3.43074, -332.51, -39.5701, 0.37 ) }
    dend_46 { pt3dadd( 3.47359, -332.561, -39.5785, 0.37 ) }
    dend_46 { pt3dadd( 3.96681, -333.107, -39.6157, 0.81 ) }
    dend_46 { pt3dadd( 4.47008, -333.674, -39.6052, 1.11 ) }
    dend_46 { pt3dadd( 5.13797, -334.495, -39.535, 1.11 ) }
    dend_46 { pt3dadd( 5.91583, -335.588, -39.3879, 0.29 ) }
    dend_46 { pt3dadd( 6.43067, -336.457, -39.2348, 0.29 ) }
    dend_46 { pt3dadd( 6.73028, -337.101, -39.1029, 0.66 ) }
    dend_46 { pt3dadd( 6.99, -337.929, -38.9182, 0.88 ) }
    dend_46 { pt3dadd( 7.12718, -338.643, -38.7571, 1.03 ) }
    dend_46 { pt3dadd( 7.149, -339.248, -38.6316, 1.03 ) }
    dend_46 { pt3dadd( 7.07625, -339.965, -38.466, 0.74 ) }
    dend_46 { pt3dadd( 6.89585, -340.97, -38.2115, 0.22 ) }
    dend_46 { pt3dadd( 6.76353, -341.612, -38.013, 0.74 ) }
    dend_46 { pt3dadd( 6.75033, -341.672, -37.9897, 0.74 ) }
    dend_46 { pt3dadd( 6.6294, -342.248, -37.7393, 0.74 ) }
    dend_46 { pt3dadd( 6.61693, -342.301, -37.7159, 0.74 ) }
    dend_46 { pt3dadd( 6.45068, -342.979, -37.436, 0.29 ) }
    dend_46 { pt3dadd( 6.35071, -343.469, -37.2781, 0.29 ) }
    dend_46 { pt3dadd( 6.26019, -344.107, -37.1085, 1.03 ) }
    dend_46 { pt3dadd( 6.19623, -344.764, -37.0089, 1.4 ) }
    dend_46 { pt3dadd( 6.14567, -345.502, -36.9666, 0.52 ) }
    dend_46 { pt3dadd( 6.10088, -345.972, -36.9746, 0.29 ) }
    dend_46 { pt3dadd( 5.97213, -346.742, -37.1081, 0.37 ) }
    dend_46 { pt3dadd( 5.8526, -347.219, -37.28, 0.66 ) }
    dend_46 { pt3dadd( 5.61875, -347.955, -37.7177, 0.37 ) }
    dend_46 { pt3dadd( 5.49604, -348.285, -38.0169, 0.96 ) }
    dend_46 { pt3dadd( 5.37743, -348.607, -38.3576, 0.96 ) }
    dend_46 { pt3dadd( 5.06215, -349.407, -39.2861, 0.37 ) }
    dend_46 { pt3dadd( 4.77357, -350.152, -40.2217, 0.74 ) }
    dend_46 { pt3dadd( 4.50123, -350.957, -41.2748, 1.25 ) }
    dend_46 { pt3dadd( 4.13727, -352.408, -43.2525, 0.29 ) }
    dend_46 { pt3dadd( 4.03852, -352.896, -43.9442, 0.29 ) }
    dend_46 { pt3dadd( 4.03358, -352.932, -43.9981, 0.29 ) }
    dend_46 { pt3dadd( 4.0193, -353.453, -44.7604, 0.88 ) }
    dend_46 { pt3dadd( 4.04062, -353.697, -45.1144, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_46 { pt3dadd( 4.21972, -354.407, -46.1218, 0.52 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 1/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.48512, -323.486, -39.6889, 0.44 ) }
    dend_45 { pt3dadd( -1.63952, -324.302, -39.8976, 0.44 ) }
    dend_45 { pt3dadd( -0.612493, -325.321, -40.1233, 0.44 ) }
    dend_45 { pt3dadd( -0.554173, -325.384, -40.1342, 0.44 ) }
    dend_45 { pt3dadd( -0.150179, -325.831, -40.2043, 0.29 ) }
    dend_45 { pt3dadd( 0.348606, -326.367, -40.2867, 0.81 ) }
    dend_45 { pt3dadd( 0.92658, -326.955, -40.3803, 1.11 ) }
    dend_45 { pt3dadd( 0.971691, -327.003, -40.3842, 1.11 ) }
    dend_45 { pt3dadd( 1.60895, -327.709, -40.4517, 0.44 ) }
    dend_45 { pt3dadd( 1.65705, -327.765, -40.458, 0.44 ) }
    dend_45 { pt3dadd( 2.23871, -328.476, -40.5535, 0.37 ) }
    dend_45 { pt3dadd( 2.63302, -329.003, -40.6189, 0.37 ) }
    dend_45 { pt3dadd( 3.25255, -329.919, -40.7237, 0.29 ) }
    dend_45 { pt3dadd( 3.6049, -330.449, -40.7939, 0.74 ) }
    dend_45 { pt3dadd( 3.81173, -330.756, -40.8406, 0.81 ) }
    dend_45 { pt3dadd( 3.90083, -330.889, -40.8688, 0.81 ) }
    dend_45 { pt3dadd( 4.40766, -331.642, -41.0639, 0.44 ) }
    dend_45 { pt3dadd( 4.86718, -332.295, -41.2604, 0.29 ) }
    dend_45 { pt3dadd( 5.39972, -332.972, -41.4985, 0.52 ) }
    dend_45 { pt3dadd( 5.71404, -333.336, -41.6402, 0.52 ) }
    dend_45 { pt3dadd( 6.53649, -334.27, -42.0487, 0.29 ) }
    dend_45 { pt3dadd( 7.11116, -334.937, -42.387, 0.59 ) }
    dend_45 { pt3dadd( 7.15345, -334.991, -42.4201, 0.59 ) }
    dend_45 { pt3dadd( 7.39066, -335.36, -42.6402, 0.59 ) }
    dend_45 { pt3dadd( 7.42316, -335.417, -42.6741, 0.59 ) }
    dend_45 { pt3dadd( 7.98733, -336.538, -43.3419, 0.81 ) }
    dend_45 { pt3dadd( 8.2661, -337.178, -43.7228, 1.03 ) }
    dend_45 { pt3dadd( 8.61727, -338.106, -44.3103, 0.59 ) }
    dend_45 { pt3dadd( 8.97601, -339.124, -44.9607, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 30/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -70.9194, -115.441, 4.41832, 0.37 ) }
    dend_39 { pt3dadd( -77.3655, -125.317, 8.13442, 0.37 ) }
    dend_39 { pt3dadd( -86.3409, -133.568, 10.1983, 0.37 ) }
    dend_39 { pt3dadd( -96.7429, -140.193, 11.0898, 0.37 ) }
    dend_39 { pt3dadd( -106.028, -147.894, 13.8036, 0.37 ) }
    dend_39 { pt3dadd( -115.386, -155.335, 16.9612, 0.37 ) }
    dend_39 { pt3dadd( -123.6, -164.284, 19.2694, 0.37 ) }
    dend_39 { pt3dadd( -130.545, -174.082, 22.2126, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 38/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -70.9194, -115.441, 4.41832, 0.29 ) }
    dend_36 { pt3dadd( -74.9577, -122.404, 6.9791, 0.37 ) }
    dend_36 { pt3dadd( -78.0701, -129.946, 9.16264, 0.37 ) }
    dend_36 { pt3dadd( -80.9721, -137.75, 10.5831, 0.37 ) }
    dend_36 { pt3dadd( -84.3034, -145.13, 12.9879, 0.37 ) }
    dend_36 { pt3dadd( -88.4734, -152.407, 13.9884, 0.37 ) }
    dend_36 { pt3dadd( -92.5789, -159.462, 16.1623, 0.37 ) }
    dend_36 { pt3dadd( -96.6994, -165.953, 19.6585, 0.37 ) }
    dend_36 { pt3dadd( -100.964, -172.276, 23.2893, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 110.441, 127.616, 39.5122, 0.29 ) }
    dend_8 { pt3dadd( 116.606, 135.455, 43.8932, 0.29 ) }
    dend_8 { pt3dadd( 123.858, 142.108, 48.5616, 0.29 ) }
    dend_8 { pt3dadd( 130.429, 148.915, 53.9604, 0.29 ) }
    dend_8 { pt3dadd( 137.73, 155.405, 58.7797, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 110.441, 127.616, 39.5122, 0.44 ) }
    dend_7 { pt3dadd( 114.513, 132.633, 42.4305, 0.29 ) }
    dend_7 { pt3dadd( 118.172, 137.489, 46.0785, 0.29 ) }
    dend_7 { pt3dadd( 122.619, 141.618, 49.7477, 0.29 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 56/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -130.404, -212.731, -22.6762, 0.29 ) }
    dend_90 { pt3dadd( -135.829, -220.016, -26.2961, 0.29 ) }
    dend_90 { pt3dadd( -141.632, -226.252, -31.0953, 0.29 ) }
    dend_90 { pt3dadd( -146.796, -232.196, -36.8944, 0.29 ) }
    dend_90 { pt3dadd( -153.18, -238.477, -40.8188, 0.29 ) }
    dend_90 { pt3dadd( -159.481, -244.892, -44.6598, 0.29 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 62/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -130.404, -212.731, -22.6762, 0.44 ) }
    dend_89 { pt3dadd( -135.393, -222.421, -26.7649, 0.29 ) }
    dend_89 { pt3dadd( -139.662, -232.424, -30.9165, 0.29 ) }
    dend_89 { pt3dadd( -142.84, -243.161, -34.1005, 0.29 ) }
    dend_89 { pt3dadd( -146.816, -253.763, -36.803, 0.29 ) }
    dend_89 { pt3dadd( -151.026, -264.441, -38.7517, 0.29 ) }
    // Section: dend_86, id: dend_86, parent: dend_72 (entry count 68/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -129.579, -154.431, 9.87375, 0.22 ) }
    dend_86 { pt3dadd( -129.003, -153.741, 10.4844, 0.22 ) }
    dend_86 { pt3dadd( -128.734, -153.437, 10.7518, 0.52 ) }
    dend_86 { pt3dadd( -128.526, -153.235, 10.9309, 0.74 ) }
    dend_86 { pt3dadd( -127.839, -152.651, 11.4681, 0.37 ) }
    dend_86 { pt3dadd( -127.04, -152.023, 12.034, 0.37 ) }
    dend_86 { pt3dadd( -126.745, -151.79, 12.2431, 0.37 ) }
    dend_86 { pt3dadd( -126.614, -151.701, 12.3248, 0.37 ) }
    dend_86 { pt3dadd( -125.978, -151.304, 12.7182, 0.37 ) }
    dend_86 { pt3dadd( -125.674, -151.137, 12.8907, 0.88 ) }
    dend_86 { pt3dadd( -125.181, -150.929, 13.0771, 0.88 ) }
    dend_86 { pt3dadd( -119.865, -147.273, 18.0987, 0.88 ) }
    dend_86 { pt3dadd( -114.569, -142.409, 21.9881, 0.88 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -129.579, -154.431, 9.87375, 0.44 ) }
    dend_73 { pt3dadd( -129.616, -152.576, 9.73902, 0.44 ) }
    dend_73 { pt3dadd( -129.582, -150.786, 9.64035, 0.37 ) }
    dend_73 { pt3dadd( -129.578, -150.703, 9.64036, 0.37 ) }
    dend_73 { pt3dadd( -129.534, -149.259, 9.68859, 0.37 ) }
    dend_73 { pt3dadd( -129.536, -149.112, 9.70073, 0.37 ) }
    dend_73 { pt3dadd( -129.618, -147.35, 9.89461, 0.37 ) }
    dend_73 { pt3dadd( -129.625, -147.256, 9.91345, 0.37 ) }
    dend_73 { pt3dadd( -129.782, -146.102, 10.1866, 0.29 ) }
    dend_73 { pt3dadd( -130.017, -144.878, 10.4724, 0.29 ) }
    dend_73 { pt3dadd( -130.307, -143.756, 10.734, 0.29 ) }
    dend_73 { pt3dadd( -130.394, -143.487, 10.7921, 0.66 ) }
    dend_73 { pt3dadd( -130.474, -143.288, 10.824, 0.66 ) }
    dend_73 { pt3dadd( -130.749, -142.61, 10.8773, 0.66 ) }
    dend_73 { pt3dadd( -131.2, -141.528, 10.8586, 0.29 ) }
    dend_73 { pt3dadd( -131.405, -141.07, 10.8227, 0.44 ) }
    dend_73 { pt3dadd( -131.488, -140.902, 10.8024, 0.44 ) }
    dend_73 { pt3dadd( -131.941, -140.097, 10.7077, 0.37 ) }
    dend_73 { pt3dadd( -132.481, -139.218, 10.6136, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_73 { pt3dadd( -132.532, -139.14, 10.6066, 0.37 ) }
    dend_73 { pt3dadd( -133.524, -137.719, 10.5043, 0.29 ) }
    dend_73 { pt3dadd( -134.115, -136.866, 10.4586, 0.44 ) }
    dend_73 { pt3dadd( -134.286, -136.615, 10.4569, 0.44 ) }
    dend_73 { pt3dadd( -134.831, -135.803, 10.4947, 0.44 ) }
    dend_73 { pt3dadd( -135.353, -134.999, 10.5498, 0.29 ) }
    dend_73 { pt3dadd( -135.46, -134.825, 10.5649, 0.29 ) }
    dend_73 { pt3dadd( -135.745, -134.317, 10.6234, 0.44 ) }
    dend_73 { pt3dadd( -136.053, -133.753, 10.6942, 0.44 ) }
    dend_73 { pt3dadd( -136.102, -133.657, 10.7062, 0.44 ) }
    dend_73 { pt3dadd( -136.422, -132.978, 10.7846, 0.44 ) }
    dend_73 { pt3dadd( -136.714, -132.239, 10.8884, 0.44 ) }
    dend_73 { pt3dadd( -136.74, -132.147, 10.9014, 0.44 ) }
    dend_73 { pt3dadd( -136.916, -131.303, 11.0094, 0.37 ) }
    dend_73 { pt3dadd( -136.989, -130.889, 11.0536, 0.37 ) }
    dend_73 { pt3dadd( -137.144, -129.821, 11.1352, 0.44 ) }
    dend_73 { pt3dadd( -137.25, -128.872, 11.1923, 0.44 ) }
    dend_73 { pt3dadd( -137.332, -127.838, 11.1583, 0.44 ) }
    dend_73 { pt3dadd( -137.424, -126.392, 11.029, 0.44 ) }
    dend_73 { pt3dadd( -137.516, -125.06, 10.8518, 0.74 ) }
    dend_73 { pt3dadd( -137.659, -123.288, 10.5436, 0.81 ) }
    dend_73 { pt3dadd( -137.726, -122.561, 10.3814, 0.74 ) }
    dend_73 { pt3dadd( -137.99, -120.022, 9.6712, 0.29 ) }
    dend_73 { pt3dadd( -137.999, -119.943, 9.64593, 0.29 ) }
    dend_73 { pt3dadd( -138.056, -119.373, 9.44822, 0.29 ) }
    dend_73 { pt3dadd( -138.071, -119.178, 9.38731, 0.29 ) }
    dend_73 { pt3dadd( -138.108, -118.693, 9.29158, 0.44 ) }
    dend_73 { pt3dadd( -138.113, -118.601, 9.28079, 0.44 ) }
    dend_73 { pt3dadd( -138.138, -117.934, 9.25956, 0.44 ) }
    dend_73 { pt3dadd( -138.142, -116.852, 9.2177, 0.88 ) }
    dend_73 { pt3dadd( -138.098, -115.331, 9.15075, 0.52 ) }
    dend_73 { pt3dadd( -138.051, -114.147, 9.0992, 0.52 ) }
    dend_73 { pt3dadd( -138.008, -113.192, 9.04079, 0.44 ) }
    dend_73 { pt3dadd( -137.976, -112.142, 8.96388, 0.29 ) }
    dend_73 { pt3dadd( -137.959, -111.356, 8.89628, 0.59 ) }
    dend_73 { pt3dadd( -137.96, -111.051, 8.86731, 0.59 ) }
    dend_73 { pt3dadd( -137.992, -110.284, 8.7918, 0.59 ) }
    dend_73 { pt3dadd( -138.029, -109.521, 8.71786, 0.29 ) }
    dend_73 { pt3dadd( -138.085, -108.476, 8.64048, 0.29 ) }
    dend_73 { pt3dadd( -138.088, -108.368, 8.63342, 0.29 ) }
    dend_73 { pt3dadd( -138.107, -107.58, 8.573, 0.59 ) }
    dend_73 { pt3dadd( -138.108, -107.456, 8.56336, 0.59 ) }
    dend_73 { pt3dadd( -138.116, -106.575, 8.50672, 0.66 ) }
    dend_73 { pt3dadd( -138.121, -105.6, 8.45991, 0.66 ) }
    dend_73 { pt3dadd( -138.115, -104.564, 8.41084, 0.29 ) }
    dend_73 { pt3dadd( -138.099, -103.117, 8.34568, 0.29 ) }
    dend_73 { pt3dadd( -138.095, -103.009, 8.34149, 0.29 ) }
    dend_73 { pt3dadd( -138.017, -101.172, 8.34064, 0.29 ) }
    dend_73 { pt3dadd( -138.009, -100.964, 8.34826, 0.29 ) }
    dend_73 { pt3dadd( -137.977, -99.7891, 8.43066, 0.52 ) }
    dend_73 { pt3dadd( -137.977, -99.5842, 8.45173, 0.52 ) }
    dend_73 { pt3dadd( -138.003, -98.3631, 8.61787, 0.81 ) }
    dend_73 { pt3dadd( -138.07, -97.2017, 8.7734, 0.52 ) }
    dend_73 { pt3dadd( -138.159, -96.2523, 8.90248, 0.52 ) }
    dend_73 { pt3dadd( -138.264, -95.3738, 8.99956, 0.74 ) }
    dend_73 { pt3dadd( -138.411, -94.3286, 9.07633, 0.88 ) }
    dend_73 { pt3dadd( -138.45, -93.9374, 9.07826, 0.88 ) }
    dend_73 { pt3dadd( -138.45, -92.6935, 8.95541, 0.88 ) }
    dend_73 { pt3dadd( -138.438, -92.5998, 8.93847, 0.88 ) }
    dend_73 { pt3dadd( -138.289, -91.9477, 8.79746, 0.66 ) }
    dend_73 { pt3dadd( -137.994, -90.9522, 8.62707, 0.44 ) }
    dend_73 { pt3dadd( -137.512, -89.472, 8.49389, 0.37 ) }
    dend_73 { pt3dadd( -137.056, -88.0125, 8.45812, 0.29 ) }
    dend_73 { pt3dadd( -136.744, -87.0222, 8.48142, 0.29 ) }
    dend_73 { pt3dadd( -136.719, -86.93, 8.48765, 0.29 ) }
    dend_73 { pt3dadd( -136.337, -85.2357, 8.6824, 0.29 ) }
    dend_73 { pt3dadd( -135.965, -83.1055, 9.01249, 0.29 ) }
    dend_73 { pt3dadd( -135.844, -81.8541, 9.24666, 0.37 ) }
    dend_73 { pt3dadd( -135.837, -81.653, 9.28356, 0.37 ) }
    dend_73 { pt3dadd( -135.831, -80.5941, 9.43472, 0.37 ) }
    dend_73 { pt3dadd( -135.818, -79.5449, 9.5718, 0.37 ) }
    dend_73 { pt3dadd( -135.815, -79.3541, 9.59198, 0.37 ) }
    dend_73 { pt3dadd( -135.831, -77.9049, 9.76834, 0.52 ) }
    dend_73 { pt3dadd( -135.885, -76.4293, 9.96763, 0.44 ) }
    dend_73 { pt3dadd( -135.97, -74.8763, 10.1906, 1.11 ) }
    dend_73 { pt3dadd( -136.072, -72.7996, 10.5024, 0.29 ) }
    dend_73 { pt3dadd( -136.076, -72.693, 10.5228, 0.29 ) }
    dend_73 { pt3dadd( -136.109, -71.0994, 10.8628, 0.29 ) }
    dend_73 { pt3dadd( -136.102, -70.1974, 11.0678, 0.29 ) }
    dend_73 { pt3dadd( -136.101, -70.1192, 11.0856, 0.29 ) }
    dend_73 { pt3dadd( -136.031, -68.5125, 11.4223, 0.37 ) }
    dend_73 { pt3dadd( -135.895, -66.1203, 11.8544, 0.37 ) }
    dend_73 { pt3dadd( -135.753, -64.4242, 12.1439, 0.37 ) }
    dend_73 { pt3dadd( -135.589, -63.0691, 12.3656, 0.81 ) }
    dend_73 { pt3dadd( -135.47, -62.1755, 12.503, 1.03 ) }
    dend_73 { pt3dadd( -135.277, -60.6666, 12.7053, 0.29 ) }
    dend_73 { pt3dadd( -135.156, -59.6409, 12.8115, 0.29 ) }
    dend_73 { pt3dadd( -135.082, -58.9467, 12.841, 0.44 ) }
    dend_73 { pt3dadd( -135.076, -58.8538, 12.8448, 0.44 ) }
    dend_73 { pt3dadd( -135.063, -58.3533, 12.864, 0.44 ) }
    dend_73 { pt3dadd( -135.099, -57.1046, 12.9567, 0.29 ) }
    dend_73 { pt3dadd( -135.112, -56.9174, 12.9765, 0.29 ) }
    dend_73 { pt3dadd( -135.266, -55.3557, 13.1749, 0.29 ) }
    dend_73 { pt3dadd( -135.278, -55.2614, 13.1876, 0.29 ) }
    dend_73 { pt3dadd( -135.548, -53.5598, 13.4249, 0.29 ) }
    dend_73 { pt3dadd( -135.714, -52.564, 13.5659, 0.66 ) }
    dend_73 { pt3dadd( -135.826, -51.8453, 13.6683, 0.74 ) }
    dend_73 { pt3dadd( -135.845, -51.6592, 13.6931, 0.74 ) }
    dend_73 { pt3dadd( -135.913, -49.922, 13.9024, 0.29 ) }
    dend_73 { pt3dadd( -135.909, -49.7436, 13.92, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_73 { pt3dadd( -135.841, -48.6635, 13.9784, 0.29 ) }
    dend_73 { pt3dadd( -135.781, -47.9092, 13.9941, 0.74 ) }
    dend_73 { pt3dadd( -135.646, -46.7145, 14.0123, 0.22 ) }
    dend_73 { pt3dadd( -135.394, -44.9955, 14.0327, 0.22 ) }
    dend_73 { pt3dadd( -135.059, -43.4363, 14.0521, 1.03 ) }
    dend_73 { pt3dadd( -134.676, -41.8684, 14.0721, 0.29 ) }
    dend_73 { pt3dadd( -134.597, -41.5744, 14.0763, 0.29 ) }
    dend_73 { pt3dadd( -134.148, -39.9869, 14.1011, 0.29 ) }
    dend_73 { pt3dadd( -134.06, -39.6966, 14.1066, 0.29 ) }
    dend_73 { pt3dadd( -133.236, -37.2241, 14.1655, 0.29 ) }
    dend_73 { pt3dadd( -133.154, -36.9776, 14.1745, 0.29 ) }
    dend_73 { pt3dadd( -132.588, -35.2537, 14.2045, 0.29 ) }
    dend_73 { pt3dadd( -132.557, -35.1494, 14.203, 0.29 ) }
    dend_73 { pt3dadd( -132.226, -33.7923, 14.1332, 0.44 ) }
    dend_73 { pt3dadd( -132.207, -33.6987, 14.1254, 0.44 ) }
    dend_73 { pt3dadd( -132.04, -32.5576, 13.9866, 0.44 ) }
    dend_73 { pt3dadd( -131.874, -31.3736, 13.8293, 0.74 ) }
    dend_73 { pt3dadd( -131.863, -31.2792, 13.8151, 0.74 ) }
    dend_73 { pt3dadd( -131.812, -30.7245, 13.7339, 1.03 ) }
    dend_73 { pt3dadd( -131.752, -29.6979, 13.6035, 0.59 ) }
    dend_73 { pt3dadd( -131.756, -28.6169, 13.6146, 0.29 ) }
    dend_73 { pt3dadd( -131.768, -28.4149, 13.645, 0.29 ) }
    dend_73 { pt3dadd( -131.855, -27.7167, 13.837, 0.29 ) }
    dend_73 { pt3dadd( -131.871, -27.6144, 13.8699, 0.29 ) }
    dend_73 { pt3dadd( -132.073, -26.5354, 14.2551, 0.88 ) }
    dend_73 { pt3dadd( -132.384, -24.964, 14.8065, 0.88 ) }
    dend_73 { pt3dadd( -132.418, -24.7871, 14.863, 0.88 ) }
    dend_73 { pt3dadd( -132.543, -24.0442, 15.077, 0.66 ) }
    dend_73 { pt3dadd( -132.629, -23.3092, 15.3099, 0.29 ) }
    dend_73 { pt3dadd( -132.682, -22.5465, 15.559, 0.29 ) }
    dend_73 { pt3dadd( -132.72, -21.077, 16.0289, 0.29 ) }
    dend_73 { pt3dadd( -132.706, -20.3343, 16.2451, 0.44 ) }
    dend_73 { pt3dadd( -132.702, -20.2313, 16.2794, 0.44 ) }
    dend_73 { pt3dadd( -132.632, -18.7225, 16.9475, 0.37 ) }
    dend_73 { pt3dadd( -132.615, -17.7045, 17.4441, 0.29 ) }
    dend_73 { pt3dadd( -132.618, -17.618, 17.4854, 0.29 ) }
    dend_73 { pt3dadd( -132.667, -16.9148, 17.8101, 0.74 ) }
    dend_73 { pt3dadd( -132.678, -16.8415, 17.8379, 0.74 ) }
    dend_73 { pt3dadd( -133.045, -14.9437, 18.4337, 0.29 ) }
    dend_73 { pt3dadd( -133.456, -13.2035, 18.8318, 0.29 ) }
    dend_73 { pt3dadd( -133.816, -11.7445, 19.1585, 0.22 ) }
    dend_73 { pt3dadd( -133.888, -11.4631, 19.2213, 0.22 ) }
    dend_73 { pt3dadd( -134.403, -9.53587, 19.6193, 0.29 ) }
    dend_73 { pt3dadd( -134.43, -9.43246, 19.6386, 0.29 ) }
    dend_73 { pt3dadd( -134.863, -7.75889, 19.8821, 0.29 ) }
    dend_73 { pt3dadd( -135.225, -6.34289, 20.1427, 0.29 ) }
    dend_73 { pt3dadd( -135.583, -4.89313, 20.47, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 47/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -203.75, -207.963, 20.2677, 0.37 ) }
    dend_71 { pt3dadd( -203.96, -208.488, 19.815, 0.37 ) }
    dend_71 { pt3dadd( -204.499, -209.589, 18.9053, 0.37 ) }
    dend_71 { pt3dadd( -204.972, -210.531, 18.1884, 0.29 ) }
    dend_71 { pt3dadd( -205.264, -211.086, 17.7527, 0.44 ) }
    dend_71 { pt3dadd( -205.555, -211.64, 17.3282, 0.44 ) }
    dend_71 { pt3dadd( -206.125, -212.74, 16.515, 0.29 ) }
    dend_71 { pt3dadd( -206.35, -213.144, 16.23, 0.37 ) }
    dend_71 { pt3dadd( -206.7, -213.722, 15.8692, 0.37 ) }
    dend_71 { pt3dadd( -207.429, -214.871, 15.085, 0.37 ) }
    dend_71 { pt3dadd( -207.765, -215.402, 14.701, 0.37 ) }
    dend_71 { pt3dadd( -207.991, -215.779, 14.4203, 0.66 ) }
    dend_71 { pt3dadd( -208.022, -215.831, 14.3832, 0.66 ) }
    dend_71 { pt3dadd( -208.248, -216.167, 14.1277, 0.74 ) }
    dend_71 { pt3dadd( -208.89, -216.988, 13.4656, 0.37 ) }
    dend_71 { pt3dadd( -209.315, -217.466, 13.1007, 0.37 ) }
    dend_71 { pt3dadd( -209.366, -217.514, 13.0562, 0.37 ) }
    dend_71 { pt3dadd( -209.762, -217.844, 12.7064, 0.37 ) }
    dend_71 { pt3dadd( -213.193, -226.219, 8.31676, 0.37 ) }
    dend_71 { pt3dadd( -215.311, -235.455, 4.94371, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 67/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -203.75, -207.963, 20.2677, 0.29 ) }
    dend_70 { pt3dadd( -204.549, -207.847, 20.624, 0.29 ) }
    dend_70 { pt3dadd( -205.274, -207.787, 21.0372, 0.52 ) }
    dend_70 { pt3dadd( -206.305, -207.769, 21.6213, 0.44 ) }
    dend_70 { pt3dadd( -206.668, -207.802, 21.8147, 0.29 ) }
    dend_70 { pt3dadd( -207.358, -207.913, 22.143, 0.29 ) }
    dend_70 { pt3dadd( -207.923, -208.018, 22.424, 0.44 ) }
    dend_70 { pt3dadd( -209.277, -208.32, 23.1483, 0.29 ) }
    dend_70 { pt3dadd( -209.844, -208.445, 23.4358, 0.29 ) }
    dend_70 { pt3dadd( -210.665, -208.641, 23.8426, 0.29 ) }
    dend_70 { pt3dadd( -211.442, -208.832, 24.267, 0.29 ) }
    dend_70 { pt3dadd( -212.26, -209.023, 24.7382, 0.29 ) }
    dend_70 { pt3dadd( -212.299, -209.033, 24.7612, 0.29 ) }
    dend_70 { pt3dadd( -213.008, -209.153, 25.1478, 0.44 ) }
    dend_70 { pt3dadd( -214.03, -209.231, 25.7916, 0.44 ) }
    dend_70 { pt3dadd( -214.129, -209.226, 25.8616, 0.44 ) }
    dend_70 { pt3dadd( -214.669, -209.193, 26.2757, 0.66 ) }
    dend_70 { pt3dadd( -215.251, -209.21, 26.6288, 0.66 ) }
    dend_70 { pt3dadd( -221.932, -209.82, 30.5706, 0.66 ) }
    dend_70 { pt3dadd( -227.544, -210.399, 35.9284, 0.66 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 87/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 38.7044, -268.216, -0.480628, 0.52 ) }
    dend_64 { pt3dadd( 37.964, -268.893, -1.15994, 0.52 ) }
    dend_64 { pt3dadd( 37.4032, -269.45, -1.6996, 0.29 ) }
    dend_64 { pt3dadd( 36.8321, -270.101, -2.28933, 0.22 ) }
    dend_64 { pt3dadd( 36.5307, -270.45, -2.58121, 0.52 ) }
    dend_64 { pt3dadd( 36.2547, -270.771, -2.83766, 0.74 ) }
    dend_64 { pt3dadd( 35.9021, -271.186, -3.16048, 0.81 ) }
    dend_64 { pt3dadd( 35.5756, -271.571, -3.46357, 0.66 ) }
    dend_64 { pt3dadd( 35.1288, -272.13, -3.90895, 0.29 ) }
    dend_64 { pt3dadd( 34.6147, -272.853, -4.39866, 0.29 ) }
    dend_64 { pt3dadd( 34.5825, -272.901, -4.42887, 0.29 ) }
    dend_64 { pt3dadd( 34.4825, -273.057, -4.52289, 0.66 ) }
    dend_64 { pt3dadd( 34.193, -273.501, -4.79299, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_64 { pt3dadd( 33.8323, -274.047, -5.13675, 0.22 ) }
    dend_64 { pt3dadd( 33.5322, -274.519, -5.4453, 0.22 ) }
    dend_64 { pt3dadd( 33.4137, -274.757, -5.60587, 0.52 ) }
    dend_64 { pt3dadd( 33.2702, -275.057, -5.80275, 0.52 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 38.7044, -268.216, -0.480628, 1.18 ) }
    dend_63 { pt3dadd( 38.8871, -269.346, 0.0892546, 1.18 ) }
    dend_63 { pt3dadd( 38.9351, -269.868, 0.319948, 1.4 ) }
    dend_63 { pt3dadd( 38.9019, -270.859, 0.723919, 0.37 ) }
    dend_63 { pt3dadd( 38.6933, -271.761, 1.0427, 0.44 ) }
    dend_63 { pt3dadd( 38.4117, -272.51, 1.24192, 0.66 ) }
    dend_63 { pt3dadd( 37.8446, -273.561, 1.46171, 0.66 ) }
    dend_63 { pt3dadd( 37.4864, -274.091, 1.52484, 0.66 ) }
    dend_63 { pt3dadd( 36.6116, -275.287, 1.61018, 0.59 ) }
    dend_63 { pt3dadd( 35.4373, -276.827, 1.67187, 0.37 ) }
    dend_63 { pt3dadd( 34.743, -277.739, 1.70345, 1.55 ) }
    dend_63 { pt3dadd( 33.5976, -279.385, 1.79423, 0.37 ) }
    dend_63 { pt3dadd( 32.9963, -280.436, 1.87487, 0.44 ) }
    dend_63 { pt3dadd( 32.5401, -281.507, 2.00392, 0.44 ) }
    dend_63 { pt3dadd( 32.3962, -282.125, 2.09573, 0.88 ) }
    dend_63 { pt3dadd( 32.3562, -282.705, 2.19735, 1.03 ) }
    dend_63 { pt3dadd( 32.3463, -283.844, 2.38551, 0.37 ) }
    dend_63 { pt3dadd( 32.3805, -284.733, 2.48339, 0.37 ) }
    dend_63 { pt3dadd( 32.383, -285.174, 2.52079, 0.88 ) }
    dend_63 { pt3dadd( 32.373, -285.771, 2.56025, 0.96 ) }
    dend_63 { pt3dadd( 32.3279, -286.756, 2.59602, 0.96 ) }
    dend_63 { pt3dadd( 32.2628, -287.974, 2.63052, 0.29 ) }
    dend_63 { pt3dadd( 32.1444, -289.216, 2.74428, 0.29 ) }
    dend_63 { pt3dadd( 32.0873, -289.662, 2.8124, 0.66 ) }
    dend_63 { pt3dadd( 31.9847, -290.173, 2.93545, 0.88 ) }
    dend_63 { pt3dadd( 31.9651, -290.248, 2.95929, 0.88 ) }
    dend_63 { pt3dadd( 31.772, -290.867, 3.19931, 0.74 ) }
    dend_63 { pt3dadd( 31.179, -292.408, 3.81675, 0.29 ) }
    dend_63 { pt3dadd( 30.8294, -293.22, 4.11076, 0.29 ) }
    dend_63 { pt3dadd( 30.4293, -294.311, 4.49522, 1.11 ) }
    dend_63 { pt3dadd( 30.2866, -294.853, 4.69905, 1.11 ) }
    dend_63 { pt3dadd( 30.2753, -294.929, 4.7285, 1.11 ) }
    dend_63 { pt3dadd( 30.2515, -295.576, 4.9788, 1.11 ) }
    dend_63 { pt3dadd( 30.3211, -297.083, 5.6203, 0.29 ) }
    dend_63 { pt3dadd( 30.4099, -298.357, 6.19784, 0.29 ) }
    dend_63 { pt3dadd( 30.487, -299.471, 6.69772, 0.29 ) }
    dend_63 { pt3dadd( 30.5109, -300.093, 6.97552, 0.81 ) }
    dend_63 { pt3dadd( 30.4906, -300.848, 7.31697, 0.96 ) }
    dend_63 { pt3dadd( 30.2882, -302.296, 8.08798, 0.96 ) }
    dend_63 { pt3dadd( 30.0738, -303.146, 8.5699, 0.37 ) }
    dend_63 { pt3dadd( 29.7782, -303.983, 9.04138, 0.88 ) }
    dend_63 { pt3dadd( 29.5006, -304.658, 9.4038, 0.88 ) }
    dend_63 { pt3dadd( 28.9222, -305.997, 10.0807, 0.59 ) }
    dend_63 { pt3dadd( 28.1583, -307.807, 10.8962, 0.44 ) }
    dend_63 { pt3dadd( 27.8953, -308.528, 11.1643, 0.59 ) }
    dend_63 { pt3dadd( 27.7026, -309.112, 11.3371, 0.59 ) }
    dend_63 { pt3dadd( 27.4526, -310.041, 11.5175, 0.88 ) }
    dend_63 { pt3dadd( 27.3018, -310.882, 11.6103, 0.29 ) }
    dend_63 { pt3dadd( 27.2029, -311.866, 11.6466, 0.29 ) }
    dend_63 { pt3dadd( 27.1258, -312.887, 11.6759, 0.37 ) }
    dend_63 { pt3dadd( 27.0253, -314.003, 11.7595, 0.96 ) }
    dend_63 { pt3dadd( 26.9399, -314.812, 11.8449, 1.33 ) }
    dend_63 { pt3dadd( 26.7335, -316.152, 12.0683, 0.37 ) }
    dend_63 { pt3dadd( 26.5302, -317.109, 12.2577, 0.52 ) }
    dend_63 { pt3dadd( 26.1973, -318.345, 12.5208, 0.44 ) }
    dend_63 { pt3dadd( 25.9995, -318.994, 12.6678, 0.29 ) }
    dend_63 { pt3dadd( 25.7823, -319.695, 12.8405, 0.88 ) }
    dend_63 { pt3dadd( 25.3864, -320.938, 13.1297, 0.74 ) }
    dend_63 { pt3dadd( 25.1144, -321.753, 13.3495, 0.29 ) }
    dend_63 { pt3dadd( 24.9063, -322.518, 13.5903, 0.59 ) }
    dend_63 { pt3dadd( 24.7101, -323.346, 13.8521, 0.74 ) }
    dend_63 { pt3dadd( 24.5294, -324.018, 14.0918, 0.88 ) }
    dend_63 { pt3dadd( 24.5047, -324.1, 14.1209, 0.88 ) }
    dend_63 { pt3dadd( 23.944, -325.767, 14.6199, 0.52 ) }
    dend_63 { pt3dadd( 23.6556, -326.415, 14.7732, 0.52 ) }
    dend_63 { pt3dadd( 23.0886, -327.367, 14.9317, 0.52 ) }
    dend_63 { pt3dadd( 22.4528, -328.343, 15.0427, 0.96 ) }
    dend_63 { pt3dadd( 22.0874, -328.847, 15.1153, 1.33 ) }
    dend_63 { pt3dadd( 21.5561, -329.566, 15.2544, 0.59 ) }
    dend_63 { pt3dadd( 20.8926, -330.482, 15.4373, 0.37 ) }
    dend_63 { pt3dadd( 19.9961, -331.805, 15.7704, 0.44 ) }
    dend_63 { pt3dadd( 19.5407, -332.597, 15.9893, 0.66 ) }
    dend_63 { pt3dadd( 18.8718, -334.076, 16.3845, 0.96 ) }
    dend_63 { pt3dadd( 18.2992, -335.588, 16.8067, 0.44 ) }
    dend_63 { pt3dadd( 18.0568, -336.366, 17.0198, 1.03 ) }
    dend_63 { pt3dadd( 17.8536, -337.3, 17.2667, 1.18 ) }
    dend_63 { pt3dadd( 17.7019, -338.59, 17.5205, 0.29 ) }
    dend_63 { pt3dadd( 17.6595, -339.821, 17.6543, 0.29 ) }
    dend_63 { pt3dadd( 17.67, -340.005, 17.6568, 0.88 ) }
    dend_63 { pt3dadd( 17.706, -340.445, 17.6331, 1.25 ) }
    dend_63 { pt3dadd( 17.7392, -341.348, 17.5807, 0.66 ) }
    dend_63 { pt3dadd( 17.7217, -342.335, 17.5149, 0.59 ) }
    dend_63 { pt3dadd( 17.6317, -343.699, 17.4211, 0.52 ) }
    dend_63 { pt3dadd( 17.5443, -344.504, 17.3504, 0.52 ) }
    dend_63 { pt3dadd( 17.3907, -345.658, 17.2477, 0.52 ) }
    dend_63 { pt3dadd( 17.1978, -346.743, 17.1794, 0.37 ) }
    dend_63 { pt3dadd( 17.0138, -347.746, 17.0917, 0.29 ) }
    dend_63 { pt3dadd( 16.9515, -348.144, 17.0553, 0.74 ) }
    dend_63 { pt3dadd( 16.9258, -348.381, 17.0329, 0.74 ) }
    dend_63 { pt3dadd( 16.9019, -349.042, 16.957, 0.74 ) }
    dend_63 { pt3dadd( 16.9473, -350.112, 16.8132, 0.81 ) }
    dend_63 { pt3dadd( 17.1168, -351.756, 16.503, 0.81 ) }
    dend_63 { pt3dadd( 17.2732, -352.828, 16.3072, 0.81 ) }
    dend_63 { pt3dadd( 17.4777, -354.021, 16.1126, 0.81 ) }
    dend_63 { pt3dadd( 17.4918, -354.098, 16.1013, 0.81 ) }
    dend_63 { pt3dadd( 17.6951, -355.149, 15.9668, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_63 { pt3dadd( 17.9645, -356.462, 15.8289, 0.44 ) }
    dend_63 { pt3dadd( 18.1071, -357.306, 15.8071, 0.44 ) }
    dend_63 { pt3dadd( 18.2672, -358.277, 15.8261, 0.29 ) }
    dend_63 { pt3dadd( 18.3773, -359.1, 15.8703, 0.74 ) }
    dend_63 { pt3dadd( 18.4196, -359.591, 15.8945, 0.96 ) }
    dend_63 { pt3dadd( 18.418, -359.67, 15.9002, 0.96 ) }
    dend_63 { pt3dadd( 18.3076, -360.497, 15.9522, 0.52 ) }
    dend_63 { pt3dadd( 18.006, -361.699, 16.0084, 0.52 ) }
    dend_63 { pt3dadd( 17.6401, -362.816, 16.072, 0.52 ) }
    dend_63 { pt3dadd( 17.3852, -363.556, 16.1328, 0.59 ) }
    dend_63 { pt3dadd( 16.9652, -364.833, 16.2809, 0.74 ) }
    dend_63 { pt3dadd( 16.7546, -365.539, 16.3888, 0.52 ) }
    dend_63 { pt3dadd( 16.4182, -366.839, 16.6079, 0.37 ) }
    dend_63 { pt3dadd( 16.4017, -366.918, 16.6222, 0.37 ) }
    dend_63 { pt3dadd( 16.2796, -368.12, 16.874, 0.44 ) }
    dend_63 { pt3dadd( 16.2984, -368.988, 17.0691, 0.37 ) }
    dend_63 { pt3dadd( 16.3939, -369.598, 17.1906, 0.74 ) }
    dend_63 { pt3dadd( 16.5792, -370.529, 17.3501, 0.29 ) }
    dend_63 { pt3dadd( 16.5931, -370.595, 17.3563, 0.29 ) }
    dend_63 { pt3dadd( 16.6722, -371.031, 17.3846, 0.44 ) }
    dend_63 { pt3dadd( 16.68, -371.098, 17.3848, 0.44 ) }
    dend_63 { pt3dadd( 16.715, -371.693, 17.3529, 0.44 ) }
    dend_63 { pt3dadd( 16.7393, -372.859, 17.2847, 0.22 ) }
    dend_63 { pt3dadd( 16.7337, -373.683, 17.2805, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 47.8316, -244.626, -96.5249, 0.29 ) }
    dend_61 { pt3dadd( 47.4461, -244.242, -97.6049, 0.29 ) }
    dend_61 { pt3dadd( 47.3893, -244.194, -97.7364, 0.29 ) }
    dend_61 { pt3dadd( 47.0979, -243.948, -98.328, 0.29 ) }
    dend_61 { pt3dadd( 46.3593, -243.296, -99.6829, 0.29 ) }
    dend_61 { pt3dadd( 46.103, -243.034, -100.182, 0.59 ) }
    dend_61 { pt3dadd( 45.4024, -242.214, -101.56, 0.59 ) }
    dend_61 { pt3dadd( 45.0319, -241.685, -102.306, 0.37 ) }
    dend_61 { pt3dadd( 44.8507, -241.362, -102.707, 0.66 ) }
    dend_61 { pt3dadd( 44.6772, -240.993, -103.138, 0.88 ) }
    dend_61 { pt3dadd( 44.1274, -239.637, -104.629, 0.22 ) }
    dend_61 { pt3dadd( 43.9452, -239.106, -105.196, 0.44 ) }
    dend_61 { pt3dadd( 43.809, -238.626, -105.668, 0.59 ) }
    dend_61 { pt3dadd( 43.6429, -237.804, -106.527, 0.29 ) }
    dend_61 { pt3dadd( 43.5211, -237.096, -107.324, 0.74 ) }
    dend_61 { pt3dadd( 43.3957, -236.283, -108.312, 1.03 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 40/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 47.8316, -244.626, -96.5249, 0.52 ) }
    dend_54 { pt3dadd( 47.7938, -246.841, -99.2247, 0.52 ) }
    dend_54 { pt3dadd( 47.7851, -246.905, -99.285, 0.52 ) }
    dend_54 { pt3dadd( 47.6814, -247.511, -99.7542, 0.52 ) }
    dend_54 { pt3dadd( 47.3267, -249.646, -101.165, 1.33 ) }
    dend_54 { pt3dadd( 47.1901, -250.474, -101.666, 1.77 ) }
    dend_54 { pt3dadd( 47.0243, -251.699, -102.308, 0.66 ) }
    dend_54 { pt3dadd( 46.8043, -253.228, -102.878, 0.66 ) }
    dend_54 { pt3dadd( 46.6084, -255.277, -103.64, 0.66 ) }
    dend_54 { pt3dadd( 46.6011, -256.396, -104.076, 0.88 ) }
    dend_54 { pt3dadd( 46.6344, -256.685, -104.184, 0.88 ) }
    dend_54 { pt3dadd( 47.002, -258.465, -104.867, 0.88 ) }
    dend_54 { pt3dadd( 47.021, -258.533, -104.895, 0.88 ) }
    dend_54 { pt3dadd( 47.775, -260.669, -105.737, 0.66 ) }
    dend_54 { pt3dadd( 48.4912, -262.317, -106.441, 0.44 ) }
    dend_54 { pt3dadd( 48.9661, -263.311, -106.928, 0.96 ) }
    dend_54 { pt3dadd( 49.6781, -264.719, -107.68, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -100.964, -172.276, 23.2893, 0.29 ) }
    dend_38 { pt3dadd( -101.051, -180.727, 31.9068, 0.29 ) }
    dend_38 { pt3dadd( -101.659, -188.62, 41.018, 0.29 ) }
    dend_38 { pt3dadd( -102.609, -196.806, 49.8377, 0.29 ) }
    dend_38 { pt3dadd( -105.709, -206.682, 56.0454, 0.29 ) }
    dend_38 { pt3dadd( -107.704, -216.57, 62.6732, 0.29 ) }
    dend_38 { pt3dadd( -109.282, -226.323, 69.6078, 0.29 ) }
    dend_38 { pt3dadd( -110.911, -235.743, 76.976, 0.29 ) }
    dend_38 { pt3dadd( -112.389, -245.645, 83.7186, 0.29 ) }
    dend_38 { pt3dadd( -113.622, -255.9, 89.9635, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -100.964, -172.276, 23.2893, 0.44 ) }
    dend_37 { pt3dadd( -105.919, -180.332, 20.8139, 0.29 ) }
    dend_37 { pt3dadd( -111.9, -187.401, 17.6785, 0.29 ) }
    dend_37 { pt3dadd( -117.362, -194.907, 14.6112, 0.29 ) }
    dend_37 { pt3dadd( -121.495, -202.846, 10.6786, 0.29 ) }
    dend_37 { pt3dadd( -124.373, -210.75, 5.69646, 0.29 ) }
    dend_37 { pt3dadd( -126.492, -218.321, -0.114529, 0.29 ) }
    dend_37 { pt3dadd( -129.088, -225.01, -6.75512, 0.29 ) }
    dend_37 { pt3dadd( -132.745, -231.19, -13.3901, 0.29 ) }
    dend_37 { pt3dadd( -135.14, -238.856, -18.9645, 0.29 ) }
    dend_37 { pt3dadd( -137.654, -247.465, -22.8549, 0.29 ) }
    dend_37 { pt3dadd( -140.736, -256.496, -24.9814, 0.29 ) }
    dend_37 { pt3dadd( -145.461, -265.046, -25.3717, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 80/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 137.73, 155.405, 58.7797, 0.29 ) }
    dend_10 { pt3dadd( 142.722, 160.801, 62.682, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 137.73, 155.405, 58.7797, 0.44 ) }
    dend_9 { pt3dadd( 141.454, 158.643, 61.0046, 0.29 ) }
    dend_9 { pt3dadd( 145.474, 161.697, 62.9595, 0.29 ) }
    dend_9 { pt3dadd( 149.432, 164.67, 65.1493, 0.29 ) }
    dend_9 { pt3dadd( 153.797, 167.166, 67.1552, 0.29 ) }
    dend_9 { pt3dadd( 157.639, 169.61, 70.0835, 0.29 ) }
    dend_9 { pt3dadd( 161.806, 171.571, 72.9275, 0.29 ) }
    dend_9 { pt3dadd( 165.174, 173.782, 76.5431, 0.29 ) }
    dend_9 { pt3dadd( 168.634, 175.579, 80.2987, 0.29 ) }
    dend_9 { pt3dadd( 172.383, 176.287, 84.1389, 0.29 ) }
    dend_9 { pt3dadd( 176.46, 177.422, 87.5146, 0.29 ) }
    dend_9 { pt3dadd( 181.226, 178.65, 89.7693, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_73 (entry count 94/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -135.583, -4.89313, 20.47, 0.22 ) }
    dend_83 { pt3dadd( -136.621, -4.92011, 20.4108, 0.22 ) }
    dend_83 { pt3dadd( -138.338, -4.96483, 20.3127, 0.22 ) }
    dend_83 { pt3dadd( -139.089, -4.98438, 20.2698, 0.52 ) }
    dend_83 { pt3dadd( -139.551, -4.99641, 20.2434, 0.74 ) }
    dend_83 { pt3dadd( -149.48, -3.60423, 20.5882, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_83 { pt3dadd( -159.409, -2.72686, 21.7217, 0.74 ) }
    dend_83 { pt3dadd( -168.904, -0.492588, 24.0626, 0.74 ) }
    dend_83 { pt3dadd( -178.231, 0.458599, 27.6343, 0.74 ) }
    dend_83 { pt3dadd( -186.997, 3.16556, 31.6912, 0.74 ) }
    dend_83 { pt3dadd( -194.721, 5.74803, 37.5489, 0.74 ) }
    dend_83 { pt3dadd( -201.009, 8.85533, 44.7215, 0.74 ) }
    dend_83 { pt3dadd( -206.92, 12.7714, 51.8181, 0.74 ) }
    dend_83 { pt3dadd( -213.075, 17.4067, 58.2427, 0.74 ) }
    dend_83 { pt3dadd( -218.727, 21.1221, 65.6509, 0.74 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 9/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -135.583, -4.89313, 20.47, 0.44 ) }
    dend_74 { pt3dadd( -135.543, -3.92116, 20.7634, 0.44 ) }
    dend_74 { pt3dadd( -135.524, -3.21164, 20.9642, 0.66 ) }
    dend_74 { pt3dadd( -135.524, -3.08, 20.9992, 0.66 ) }
    dend_74 { pt3dadd( -135.527, -2.68163, 21.1024, 0.59 ) }
    dend_74 { pt3dadd( -135.523, -1.76729, 21.3319, 0.29 ) }
    dend_74 { pt3dadd( -135.48, -0.303169, 21.6881, 0.29 ) }
    dend_74 { pt3dadd( -135.476, -0.150425, 21.7302, 0.29 ) }
    dend_74 { pt3dadd( -135.446, 0.908974, 22.0581, 0.52 ) }
    dend_74 { pt3dadd( -135.443, 0.988778, 22.0847, 0.52 ) }
    dend_74 { pt3dadd( -135.397, 2.06869, 22.4666, 0.52 ) }
    dend_74 { pt3dadd( -135.311, 3.37656, 22.9516, 1.03 ) }
    dend_74 { pt3dadd( -135.145, 4.96666, 23.5814, 0.29 ) }
    dend_74 { pt3dadd( -135.136, 5.03492, 23.6095, 0.29 ) }
    dend_74 { pt3dadd( -134.97, 5.94578, 24.0191, 0.29 ) }
    dend_74 { pt3dadd( -134.809, 6.58065, 24.3097, 0.52 ) }
    dend_74 { pt3dadd( -134.605, 7.22056, 24.61, 0.52 ) }
    dend_74 { pt3dadd( -134.336, 7.91481, 24.9189, 0.96 ) }
    dend_74 { pt3dadd( -134.313, 7.96765, 24.94, 0.96 ) }
    dend_74 { pt3dadd( -133.637, 9.55744, 25.5704, 0.29 ) }
    dend_74 { pt3dadd( -133.085, 10.8816, 26.0908, 0.29 ) }
    dend_74 { pt3dadd( -133.058, 10.9559, 26.119, 0.29 ) }
    dend_74 { pt3dadd( -132.693, 12.1988, 26.5566, 0.29 ) }
    dend_74 { pt3dadd( -132.612, 12.6227, 26.6863, 0.59 ) }
    dend_74 { pt3dadd( -132.591, 12.8369, 26.7448, 0.59 ) }
    dend_74 { pt3dadd( -132.618, 13.4207, 26.8769, 0.52 ) }
    dend_74 { pt3dadd( -132.696, 14.0379, 27.0171, 0.66 ) }
    dend_74 { pt3dadd( -132.784, 14.689, 27.165, 0.66 ) }
    dend_74 { pt3dadd( -132.943, 15.6969, 27.3933, 0.29 ) }
    dend_74 { pt3dadd( -132.963, 15.8478, 27.4374, 0.29 ) }
    dend_74 { pt3dadd( -133.029, 16.4917, 27.6593, 0.29 ) }
    dend_74 { pt3dadd( -133.064, 16.9771, 27.8991, 0.52 ) }
    dend_74 { pt3dadd( -133.066, 17.0389, 27.9363, 0.52 ) }
    dend_74 { pt3dadd( -133.05, 17.9077, 28.521, 0.37 ) }
    dend_74 { pt3dadd( -132.986, 18.9349, 29.2694, 0.59 ) }
    dend_74 { pt3dadd( -132.93, 19.4389, 29.6378, 0.96 ) }
    dend_74 { pt3dadd( -132.729, 20.8398, 30.6731, 0.37 ) }
    dend_74 { pt3dadd( -132.712, 20.9217, 30.737, 0.37 ) }
    dend_74 { pt3dadd( -132.479, 21.8567, 31.4781, 0.37 ) }
    dend_74 { pt3dadd( -132.461, 21.9129, 31.5233, 0.37 ) }
    dend_74 { pt3dadd( -132.235, 22.5736, 32.0075, 0.37 ) }
    dend_74 { pt3dadd( -132.18, 22.7665, 32.1211, 0.37 ) }
    dend_74 { pt3dadd( -131.916, 24.2243, 32.7276, 0.59 ) }
    dend_74 { pt3dadd( -131.881, 24.498, 32.8309, 0.88 ) }
    dend_74 { pt3dadd( -131.874, 24.5683, 32.8541, 0.88 ) }
    dend_74 { pt3dadd( -131.818, 25.1441, 33.0257, 0.88 ) }
    dend_74 { pt3dadd( -131.603, 27.2466, 33.5771, 0.29 ) }
    dend_74 { pt3dadd( -131.372, 29.097, 33.944, 0.29 ) }
    dend_74 { pt3dadd( -131.334, 29.3627, 33.9826, 0.29 ) }
    dend_74 { pt3dadd( -131.024, 31.5154, 34.3381, 0.29 ) }
    dend_74 { pt3dadd( -130.989, 31.8147, 34.3928, 0.29 ) }
    dend_74 { pt3dadd( -130.848, 33.2352, 34.6723, 0.37 ) }
    dend_74 { pt3dadd( -130.736, 34.9892, 35.0572, 0.37 ) }
    dend_74 { pt3dadd( -130.724, 35.837, 35.3104, 0.37 ) }
    dend_74 { pt3dadd( -130.77, 37.121, 35.7893, 0.29 ) }
    dend_74 { pt3dadd( -130.908, 38.3697, 36.3356, 0.29 ) }
    dend_74 { pt3dadd( -130.931, 38.5099, 36.406, 0.29 ) }
    dend_74 { pt3dadd( -131.1, 39.1181, 36.8022, 0.29 ) }
    dend_74 { pt3dadd( -131.645, 40.4721, 37.9794, 1.18 ) }
    dend_74 { pt3dadd( -131.751, 40.7329, 38.2193, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 69/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 49.6781, -264.719, -107.68, 0.88 ) }
    dend_56 { pt3dadd( 49.4771, -265.427, -108.0, 0.88 ) }
    dend_56 { pt3dadd( 49.3482, -265.932, -108.197, 1.47 ) }
    dend_56 { pt3dadd( 49.2488, -266.427, -108.365, 1.69 ) }
    dend_56 { pt3dadd( 49.1061, -267.442, -108.659, 0.59 ) }
    dend_56 { pt3dadd( 49.103, -267.476, -108.669, 0.59 ) }
    dend_56 { pt3dadd( 49.0698, -268.098, -108.847, 0.29 ) }
    dend_56 { pt3dadd( 49.0753, -268.587, -108.971, 0.44 ) }
    dend_56 { pt3dadd( 49.1093, -269.014, -109.113, 0.66 ) }
    dend_56 { pt3dadd( 49.1783, -269.48, -109.336, 1.11 ) }
    dend_56 { pt3dadd( 49.2694, -269.934, -109.579, 1.47 ) }
    dend_56 { pt3dadd( 49.3121, -270.165, -109.712, 1.47 ) }
    dend_56 { pt3dadd( 49.3181, -270.202, -109.734, 1.47 ) }
    dend_56 { pt3dadd( 49.4427, -271.294, -110.349, 1.11 ) }
    dend_56 { pt3dadd( 49.483, -272.287, -110.826, 0.59 ) }
    dend_56 { pt3dadd( 49.4908, -272.799, -111.015, 0.81 ) }
    dend_56 { pt3dadd( 49.4989, -273.272, -111.14, 1.11 ) }
    dend_56 { pt3dadd( 49.5211, -273.756, -111.225, 1.25 ) }
    dend_56 { pt3dadd( 49.5685, -274.463, -111.286, 0.66 ) }
    dend_56 { pt3dadd( 49.633, -275.265, -111.262, 0.52 ) }
    dend_56 { pt3dadd( 49.708, -276.028, -111.199, 1.03 ) }
    dend_56 { pt3dadd( 49.7497, -276.403, -111.178, 1.25 ) }
    dend_56 { pt3dadd( 49.856, -277.192, -111.158, 0.66 ) }
    dend_56 { pt3dadd( 49.89, -277.429, -111.166, 0.44 ) }
    dend_56 { pt3dadd( 49.9457, -277.737, -111.195, 0.96 ) }
    dend_56 { pt3dadd( 50.0009, -278.006, -111.234, 1.25 ) }
    dend_56 { pt3dadd( 50.134, -278.702, -111.364, 1.11 ) }
    dend_56 { pt3dadd( 50.2338, -279.254, -111.486, 0.96 ) }
    dend_56 { pt3dadd( 50.344, -279.854, -111.603, 0.66 ) }
    dend_56 { pt3dadd( 50.4551, -280.484, -111.699, 0.59 ) }
    dend_56 { pt3dadd( 50.4625, -280.527, -111.704, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_56 { pt3dadd( 50.5287, -281.011, -111.729, 0.59 ) }
    dend_56 { pt3dadd( 50.5513, -281.662, -111.702, 0.52 ) }
    dend_56 { pt3dadd( 50.4809, -282.298, -111.626, 0.81 ) }
    dend_56 { pt3dadd( 50.3492, -282.769, -111.533, 1.03 ) }
    dend_56 { pt3dadd( 50.3227, -282.829, -111.519, 1.03 ) }
    dend_56 { pt3dadd( 50.1016, -283.266, -111.412, 1.03 ) }
    dend_56 { pt3dadd( 49.7429, -283.835, -111.252, 0.52 ) }
    dend_56 { pt3dadd( 49.5109, -284.144, -111.154, 1.11 ) }
    dend_56 { pt3dadd( 49.2291, -284.474, -111.08, 1.33 ) }
    dend_56 { pt3dadd( 49.2, -284.505, -111.072, 1.33 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 10/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 49.6781, -264.719, -107.68, 0.52 ) }
    dend_55 { pt3dadd( 50.7792, -264.971, -107.14, 0.52 ) }
    dend_55 { pt3dadd( 52.79, -265.422, -106.067, 0.29 ) }
    dend_55 { pt3dadd( 53.978, -265.71, -105.445, 0.59 ) }
    dend_55 { pt3dadd( 54.6893, -265.886, -105.038, 0.96 ) }
    dend_55 { pt3dadd( 56.8589, -266.429, -103.783, 0.22 ) }
    dend_55 { pt3dadd( 58.3419, -266.79, -102.94, 0.59 ) }
    dend_55 { pt3dadd( 58.4211, -266.808, -102.895, 0.59 ) }
    dend_55 { pt3dadd( 59.5137, -267.069, -102.338, 0.52 ) }
    dend_55 { pt3dadd( 61.1354, -267.556, -101.49, 0.37 ) }
    dend_55 { pt3dadd( 61.8319, -267.819, -101.148, 0.81 ) }
    dend_55 { pt3dadd( 62.3929, -268.072, -100.929, 0.96 ) }
    dend_55 { pt3dadd( 63.8166, -268.773, -100.454, 0.37 ) }
    dend_55 { pt3dadd( 65.1232, -269.432, -100.205, 0.37 ) }
    dend_55 { pt3dadd( 66.3756, -270.094, -100.181, 0.44 ) }
    dend_55 { pt3dadd( 67.1008, -270.493, -100.298, 0.44 ) }
    dend_55 { pt3dadd( 68.08, -271.037, -100.472, 0.22 ) }
    dend_55 { pt3dadd( 68.778, -271.401, -100.606, 0.44 ) }
    dend_55 { pt3dadd( 71.3816, -272.616, -101.148, 0.37 ) }
    dend_55 { pt3dadd( 72.4165, -273.05, -101.368, 0.52 ) }
    dend_55 { pt3dadd( 73.5762, -273.493, -101.616, 0.59 ) }
    dend_55 { pt3dadd( 74.8917, -273.94, -101.833, 0.81 ) }
    dend_55 { pt3dadd( 76.2556, -274.364, -101.971, 0.29 ) }
    dend_55 { pt3dadd( 77.4723, -274.69, -101.99, 0.52 ) }
    dend_55 { pt3dadd( 78.1252, -274.834, -101.927, 0.81 ) }
    dend_55 { pt3dadd( 78.7939, -274.931, -101.886, 1.11 ) }
    dend_55 { pt3dadd( 79.0789, -274.955, -101.882, 1.11 ) }
    dend_55 { pt3dadd( 79.6427, -274.976, -101.906, 0.96 ) }
    dend_55 { pt3dadd( 80.6741, -274.931, -101.855, 0.59 ) }
    dend_55 { pt3dadd( 82.348, -274.703, -101.514, 0.29 ) }
    dend_55 { pt3dadd( 83.1671, -274.583, -101.276, 0.52 ) }
    dend_55 { pt3dadd( 83.8036, -274.49, -101.056, 0.66 ) }
    dend_55 { pt3dadd( 83.8877, -274.481, -101.024, 0.66 ) }
    dend_55 { pt3dadd( 85.9957, -274.335, -100.12, 0.52 ) }
    dend_55 { pt3dadd( 87.5985, -274.283, -99.379, 0.74 ) }
    dend_55 { pt3dadd( 89.1773, -274.26, -98.6319, 0.22 ) }
    dend_55 { pt3dadd( 89.6126, -274.274, -98.4468, 0.74 ) }
    dend_55 { pt3dadd( 90.4137, -274.345, -98.1314, 0.81 ) }
    dend_55 { pt3dadd( 92.2045, -274.628, -97.5209, 0.22 ) }
    dend_55 { pt3dadd( 92.7696, -274.781, -97.3867, 0.66 ) }
    dend_55 { pt3dadd( 93.3056, -274.963, -97.2806, 0.74 ) }
    dend_55 { pt3dadd( 94.6067, -275.503, -97.0007, 0.22 ) }
    dend_55 { pt3dadd( 95.7341, -276.049, -96.7151, 0.66 ) }
    dend_55 { pt3dadd( 96.1261, -276.264, -96.6101, 0.81 ) }
    dend_55 { pt3dadd( 96.8247, -276.726, -96.4219, 0.52 ) }
    dend_55 { pt3dadd( 96.8866, -276.768, -96.4046, 0.52 ) }
    dend_55 { pt3dadd( 97.8395, -277.463, -96.1682, 0.22 ) }
    dend_55 { pt3dadd( 99.0953, -278.442, -95.9272, 0.74 ) }
    dend_55 { pt3dadd( 99.7723, -278.955, -95.9217, 0.81 ) }
    dend_55 { pt3dadd( 99.9193, -279.06, -95.9334, 0.81 ) }
    dend_55 { pt3dadd( 100.642, -279.535, -96.0666, 0.59 ) }
    dend_55 { pt3dadd( 101.349, -279.964, -96.3367, 0.29 ) }
    dend_55 { pt3dadd( 102.098, -280.415, -96.7521, 1.03 ) }
    dend_55 { pt3dadd( 103.222, -281.184, -97.5163, 1.03 ) }
    dend_55 { pt3dadd( 103.426, -281.347, -97.6664, 1.25 ) }
    dend_55 { pt3dadd( 104.161, -282.06, -98.2069, 0.66 ) }
    dend_55 { pt3dadd( 105.327, -283.398, -99.0501, 0.52 ) }
    dend_55 { pt3dadd( 106.017, -284.312, -99.4977, 0.37 ) }
    dend_55 { pt3dadd( 106.512, -285.092, -99.7929, 0.29 ) }
    dend_55 { pt3dadd( 106.927, -285.908, -99.9752, 0.29 ) }
    dend_55 { pt3dadd( 107.562, -287.369, -100.175, 0.29 ) }
    dend_55 { pt3dadd( 107.761, -287.886, -100.229, 0.81 ) }
    dend_55 { pt3dadd( 108.035, -288.602, -100.281, 1.03 ) }
    dend_55 { pt3dadd( 108.074, -288.686, -100.29, 1.03 ) }
    dend_55 { pt3dadd( 108.727, -289.817, -100.472, 0.59 ) }
    dend_55 { pt3dadd( 109.434, -290.853, -100.611, 0.44 ) }
    dend_55 { pt3dadd( 110.26, -292.006, -100.717, 0.88 ) }
    dend_55 { pt3dadd( 110.5, -292.331, -100.734, 1.25 ) }
    dend_55 { pt3dadd( 110.945, -292.896, -100.711, 1.55 ) }
    dend_55 { pt3dadd( 111.553, -293.594, -100.618, 0.29 ) }
    dend_55 { pt3dadd( 112.605, -294.634, -100.141, 0.29 ) }
    dend_55 { pt3dadd( 113.526, -295.483, -99.5427, 0.29 ) }
    dend_55 { pt3dadd( 113.583, -295.537, -99.4995, 0.29 ) }
    dend_55 { pt3dadd( 114.457, -296.376, -98.8182, 1.47 ) }
    dend_55 { pt3dadd( 115.196, -297.112, -98.2326, 1.77 ) }
    dend_55 { pt3dadd( 117.131, -299.034, -96.7124, 0.37 ) }
    dend_55 { pt3dadd( 117.797, -299.692, -96.1893, 0.22 ) }
    dend_55 { pt3dadd( 118.68, -300.555, -95.4752, 0.29 ) }
    dend_55 { pt3dadd( 119.074, -300.967, -95.1582, 0.52 ) }
    dend_55 { pt3dadd( 119.562, -301.552, -94.7819, 0.66 ) }
    dend_55 { pt3dadd( 119.611, -301.621, -94.7445, 0.66 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 91/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -218.727, 21.1221, 65.6509, 0.37 ) }
    dend_85 { pt3dadd( -228.698, 24.4279, 70.5683, 0.37 ) }
    dend_85 { pt3dadd( -239.311, 26.2846, 74.8628, 0.37 ) }
    dend_85 { pt3dadd( -248.772, 29.0094, 80.9944, 0.37 ) }
    dend_85 { pt3dadd( -258.652, 30.0963, 86.9718, 0.37 ) }
    dend_85 { pt3dadd( -269.38, 28.7653, 91.1739, 0.37 ) }
    dend_85 { pt3dadd( -279.436, 27.8563, 96.8828, 0.37 ) }
    dend_85 { pt3dadd( -288.828, 25.9139, 103.404, 0.37 ) }
    dend_85 { pt3dadd( -296.133, 22.9193, 111.901, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_85 { pt3dadd( -302.462, 17.0526, 119.651, 0.37 ) }
    dend_85 { pt3dadd( -308.322, 9.40238, 126.105, 0.37 ) }
    dend_85 { pt3dadd( -313.195, 1.73224, 133.313, 0.37 ) }
    dend_85 { pt3dadd( -318.026, -5.90335, 140.585, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 4/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -218.727, 21.1221, 65.6509, 0.29 ) }
    dend_84 { pt3dadd( -227.521, 23.4169, 71.1736, 0.37 ) }
    dend_84 { pt3dadd( -236.641, 25.9398, 76.0291, 0.37 ) }
    dend_84 { pt3dadd( -246.23, 27.6052, 80.3155, 0.37 ) }
    dend_84 { pt3dadd( -254.359, 30.5147, 86.525, 0.37 ) }
    dend_84 { pt3dadd( -261.875, 32.7327, 93.7152, 0.37 ) }
    dend_84 { pt3dadd( -269.918, 33.6968, 100.605, 0.37 ) }
    dend_84 { pt3dadd( -278.925, 36.1076, 105.72, 0.37 ) }
    dend_84 { pt3dadd( -288.397, 39.872, 108.758, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_74 (entry count 13/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -131.751, 40.7329, 38.2193, 0.59 ) }
    dend_82 { pt3dadd( -130.407, 40.5479, 39.3417, 0.59 ) }
    dend_82 { pt3dadd( -130.348, 40.5383, 39.3922, 0.59 ) }
    dend_82 { pt3dadd( -129.145, 40.4531, 40.4503, 0.29 ) }
    dend_82 { pt3dadd( -128.505, 40.4997, 41.016, 0.29 ) }
    dend_82 { pt3dadd( -128.446, 40.508, 41.0692, 0.29 ) }
    dend_82 { pt3dadd( -127.133, 40.8386, 42.2139, 0.29 ) }
    dend_82 { pt3dadd( -127.092, 40.8578, 42.2503, 0.29 ) }
    dend_82 { pt3dadd( -125.944, 41.4959, 43.2275, 0.29 ) }
    dend_82 { pt3dadd( -124.641, 42.3118, 44.2268, 0.29 ) }
    dend_82 { pt3dadd( -124.533, 42.3814, 44.3028, 0.29 ) }
    dend_82 { pt3dadd( -123.363, 43.111, 45.0601, 0.74 ) }
    dend_82 { pt3dadd( -122.361, 43.6934, 45.6768, 0.29 ) }
    dend_82 { pt3dadd( -122.076, 43.8228, 45.8587, 0.29 ) }
    dend_82 { pt3dadd( -120.634, 44.3757, 46.7427, 0.29 ) }
    dend_82 { pt3dadd( -119.949, 44.5831, 47.1582, 0.29 ) }
    dend_82 { pt3dadd( -118.827, 44.8431, 47.8464, 0.29 ) }
    dend_82 { pt3dadd( -117.451, 44.982, 48.7269, 0.29 ) }
    dend_82 { pt3dadd( -116.277, 44.9953, 49.502, 0.88 ) }
    dend_82 { pt3dadd( -110.087, 48.4333, 56.2071, 0.88 ) }
    dend_82 { pt3dadd( -105.298, 51.405, 64.1645, 0.88 ) }
    dend_82 { pt3dadd( -100.008, 54.9876, 71.5318, 0.88 ) }
    dend_82 { pt3dadd( -93.9722, 58.4621, 78.3571, 0.88 ) }
    dend_82 { pt3dadd( -87.8351, 61.155, 85.4406, 0.88 ) }
    dend_82 { pt3dadd( -82.2542, 64.5567, 92.6776, 0.88 ) }
    dend_82 { pt3dadd( -76.2047, 67.2089, 99.8513, 0.88 ) }
    dend_82 { pt3dadd( -69.337, 68.8077, 106.587, 0.88 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 40/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -131.751, 40.7329, 38.2193, 0.59 ) }
    dend_75 { pt3dadd( -132.104, 41.581, 38.8255, 0.59 ) }
    dend_75 { pt3dadd( -132.385, 42.3234, 39.3952, 0.59 ) }
    dend_75 { pt3dadd( -132.624, 43.0323, 39.9973, 0.37 ) }
    dend_75 { pt3dadd( -132.903, 43.93, 40.7842, 0.29 ) }
    dend_75 { pt3dadd( -133.116, 44.7529, 41.5719, 0.29 ) }
    dend_75 { pt3dadd( -133.129, 44.8096, 41.6285, 0.29 ) }
    dend_75 { pt3dadd( -133.25, 45.504, 42.3802, 0.29 ) }
    dend_75 { pt3dadd( -133.348, 46.1023, 43.0632, 0.66 ) }
    dend_75 { pt3dadd( -133.397, 46.4895, 43.481, 0.81 ) }
    dend_75 { pt3dadd( -133.5, 47.4069, 44.3285, 0.29 ) }
    dend_75 { pt3dadd( -133.507, 47.4675, 44.3821, 0.29 ) }
    dend_75 { pt3dadd( -133.611, 48.315, 45.0388, 0.29 ) }
    dend_75 { pt3dadd( -133.619, 48.3748, 45.0777, 0.29 ) }
    dend_75 { pt3dadd( -133.711, 49.385, 45.6127, 0.52 ) }
    dend_75 { pt3dadd( -133.786, 50.1054, 45.936, 0.74 ) }
    dend_75 { pt3dadd( -133.799, 50.1808, 45.9637, 0.74 ) }
    dend_75 { pt3dadd( -133.927, 50.8561, 46.2523, 0.74 ) }
    dend_75 { pt3dadd( -133.941, 50.92, 46.2821, 0.74 ) }
    dend_75 { pt3dadd( -134.181, 51.8296, 46.7329, 0.29 ) }
    dend_75 { pt3dadd( -134.475, 52.7644, 47.2226, 0.29 ) }
    dend_75 { pt3dadd( -134.914, 54.0158, 47.8913, 0.29 ) }
    dend_75 { pt3dadd( -135.272, 55.101, 48.4565, 0.29 ) }
    dend_75 { pt3dadd( -135.305, 55.2243, 48.5217, 0.29 ) }
    dend_75 { pt3dadd( -135.467, 56.2498, 49.0494, 0.29 ) }
    dend_75 { pt3dadd( -135.473, 56.3136, 49.0816, 0.29 ) }
    dend_75 { pt3dadd( -135.433, 57.3552, 49.5859, 0.29 ) }
    dend_75 { pt3dadd( -135.25, 58.9357, 50.3163, 0.29 ) }
    dend_75 { pt3dadd( -134.965, 61.0363, 51.2176, 0.29 ) }
    dend_75 { pt3dadd( -134.678, 62.957, 52.0332, 0.29 ) }
    dend_75 { pt3dadd( -134.66, 63.0847, 52.0901, 0.29 ) }
    dend_75 { pt3dadd( -134.425, 64.9783, 52.9601, 0.29 ) }
    dend_75 { pt3dadd( -134.411, 65.1141, 53.0238, 0.29 ) }
    dend_75 { pt3dadd( -134.261, 67.3096, 54.0707, 0.29 ) }
    dend_75 { pt3dadd( -134.259, 67.3829, 54.1056, 0.29 ) }
    dend_75 { pt3dadd( -134.351, 69.3466, 55.0735, 0.29 ) }
    dend_75 { pt3dadd( -134.359, 69.4189, 55.1094, 0.29 ) }
    dend_75 { pt3dadd( -134.692, 70.9137, 55.8128, 0.29 ) }
    dend_75 { pt3dadd( -134.788, 71.3034, 55.9811, 0.74 ) }
    dend_75 { pt3dadd( -134.807, 71.3764, 56.011, 0.74 ) }
    dend_75 { pt3dadd( -134.946, 71.8748, 56.1905, 0.59 ) }
    dend_75 { pt3dadd( -135.363, 73.1799, 56.4933, 0.29 ) }
    dend_75 { pt3dadd( -135.67, 73.9703, 56.6579, 0.88 ) }
    dend_75 { pt3dadd( -135.953, 74.4583, 56.7283, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 84/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 49.2, -284.505, -111.072, 0.52 ) }
    dend_60 { pt3dadd( 48.6173, -285.433, -110.932, 0.52 ) }
    dend_60 { pt3dadd( 48.179, -286.177, -110.826, 0.37 ) }
    dend_60 { pt3dadd( 47.7803, -286.899, -110.696, 0.29 ) }
    dend_60 { pt3dadd( 47.4633, -287.449, -110.586, 0.66 ) }
    dend_60 { pt3dadd( 47.1823, -287.927, -110.488, 0.66 ) }
    dend_60 { pt3dadd( 47.1427, -287.993, -110.474, 0.66 ) }
    dend_60 { pt3dadd( 46.883, -288.441, -110.382, 0.59 ) }
    dend_60 { pt3dadd( 46.4062, -289.226, -110.235, 0.29 ) }
    dend_60 { pt3dadd( 45.9202, -290.05, -110.092, 0.29 ) }
    dend_60 { pt3dadd( 45.7288, -290.396, -110.037, 0.66 ) }
    dend_60 { pt3dadd( 45.4387, -290.968, -109.957, 0.96 ) }
    dend_60 { pt3dadd( 45.2322, -291.45, -109.896, 1.18 ) }
    dend_60 { pt3dadd( 44.8586, -292.463, -109.788, 0.29 ) }
    dend_60 { pt3dadd( 44.6498, -293.13, -109.737, 0.29 ) }
    dend_60 { pt3dadd( 44.5358, -293.526, -109.704, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_60 { pt3dadd( 44.4882, -293.662, -109.675, 0.52 ) }
    dend_60 { pt3dadd( 44.2573, -294.156, -109.495, 0.22 ) }
    dend_60 { pt3dadd( 43.9988, -294.554, -109.288, 0.44 ) }
    dend_60 { pt3dadd( 43.7272, -294.881, -109.037, 0.66 ) }
    dend_60 { pt3dadd( 43.3458, -295.279, -108.705, 0.66 ) }
    dend_60 { pt3dadd( 42.4007, -296.214, -107.937, 0.29 ) }
    dend_60 { pt3dadd( 42.1295, -296.488, -107.726, 0.96 ) }
    dend_60 { pt3dadd( 41.8571, -296.788, -107.516, 1.25 ) }
    dend_60 { pt3dadd( 41.0097, -297.89, -106.827, 0.52 ) }
    dend_60 { pt3dadd( 40.5402, -298.622, -106.443, 0.52 ) }
    dend_60 { pt3dadd( 40.187, -299.255, -106.175, 0.29 ) }
    dend_60 { pt3dadd( 39.886, -299.821, -106.009, 0.37 ) }
    dend_60 { pt3dadd( 39.555, -300.411, -105.861, 0.44 ) }
    dend_60 { pt3dadd( 39.2879, -300.804, -105.787, 0.44 ) }
    dend_60 { pt3dadd( 38.8174, -301.365, -105.74, 0.22 ) }
    dend_60 { pt3dadd( 38.5115, -301.645, -105.718, 0.37 ) }
    dend_60 { pt3dadd( 37.956, -302.049, -105.642, 0.59 ) }
    dend_60 { pt3dadd( 37.1906, -302.519, -105.506, 1.18 ) }
    dend_60 { pt3dadd( 36.4542, -302.934, -105.319, 0.74 ) }
    dend_60 { pt3dadd( 36.3884, -302.97, -105.298, 0.74 ) }
    dend_60 { pt3dadd( 35.3393, -303.567, -104.887, 0.37 ) }
    dend_60 { pt3dadd( 34.3575, -304.198, -104.418, 0.29 ) }
    dend_60 { pt3dadd( 34.1231, -304.356, -104.269, 0.59 ) }
    dend_60 { pt3dadd( 33.5676, -304.701, -103.798, 0.74 ) }
    dend_60 { pt3dadd( 33.5069, -304.733, -103.732, 0.74 ) }
    dend_60 { pt3dadd( 33.2017, -304.866, -103.303, 0.74 ) }
    dend_60 { pt3dadd( 33.1716, -304.874, -103.256, 0.74 ) }
    dend_60 { pt3dadd( 32.5993, -304.962, -102.357, 0.29 ) }
    dend_60 { pt3dadd( 31.9297, -305.025, -101.302, 0.59 ) }
    dend_60 { pt3dadd( 31.3635, -305.051, -100.398, 0.96 ) }
    dend_60 { pt3dadd( 30.3853, -305.08, -98.8053, 0.59 ) }
    dend_60 { pt3dadd( 29.9864, -305.08, -98.1361, 0.29 ) }
    dend_60 { pt3dadd( 29.9516, -305.081, -98.077, 0.29 ) }
    dend_60 { pt3dadd( 29.3259, -305.121, -96.9635, 0.88 ) }
    dend_60 { pt3dadd( 28.7809, -305.152, -95.9314, 1.03 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 49.2, -284.505, -111.072, 0.52 ) }
    dend_57 { pt3dadd( 49.3731, -285.485, -111.896, 0.52 ) }
    dend_57 { pt3dadd( 49.3811, -285.538, -111.934, 0.52 ) }
    dend_57 { pt3dadd( 49.4779, -286.327, -112.463, 0.66 ) }
    dend_57 { pt3dadd( 49.6493, -288.059, -113.506, 0.44 ) }
    dend_57 { pt3dadd( 49.7346, -289.351, -114.25, 0.37 ) }
    dend_57 { pt3dadd( 49.7577, -290.062, -114.626, 0.66 ) }
    dend_57 { pt3dadd( 49.7454, -290.862, -114.979, 0.88 ) }
    dend_57 { pt3dadd( 49.6935, -291.769, -115.349, 0.88 ) }
    dend_57 { pt3dadd( 49.6156, -292.581, -115.644, 0.88 ) }
    dend_57 { pt3dadd( 49.5123, -293.69, -116.018, 0.59 ) }
    dend_57 { pt3dadd( 49.4586, -294.702, -116.387, 0.37 ) }
    dend_57 { pt3dadd( 49.4531, -295.759, -116.829, 0.37 ) }
    dend_57 { pt3dadd( 49.5281, -296.891, -117.367, 0.74 ) }
    dend_57 { pt3dadd( 49.5944, -297.374, -117.606, 1.11 ) }
    dend_57 { pt3dadd( 49.9005, -299.067, -118.532, 0.74 ) }
    dend_57 { pt3dadd( 50.0662, -299.867, -118.99, 0.44 ) }
    dend_57 { pt3dadd( 50.0772, -299.923, -119.022, 0.44 ) }
    dend_57 { pt3dadd( 50.2888, -301.116, -119.67, 1.03 ) }
    dend_57 { pt3dadd( 50.3761, -301.753, -119.96, 1.33 ) }
    dend_57 { pt3dadd( 50.4615, -303.186, -120.475, 0.66 ) }
    dend_57 { pt3dadd( 50.4474, -304.483, -120.781, 0.66 ) }
    dend_57 { pt3dadd( 50.3876, -305.77, -121.019, 0.88 ) }
    dend_57 { pt3dadd( 50.3858, -305.836, -121.028, 0.88 ) }
    dend_57 { pt3dadd( 50.3728, -306.833, -121.108, 1.11 ) }
    dend_57 { pt3dadd( 50.3899, -308.321, -121.176, 1.03 ) }
    dend_57 { pt3dadd( 50.4369, -309.426, -121.16, 0.52 ) }
    dend_57 { pt3dadd( 50.4393, -309.493, -121.165, 0.52 ) }
    dend_57 { pt3dadd( 50.4484, -310.633, -121.337, 0.88 ) }
    dend_57 { pt3dadd( 50.4349, -311.367, -121.49, 0.96 ) }
    dend_57 { pt3dadd( 50.3977, -312.023, -121.706, 0.96 ) }
    dend_57 { pt3dadd( 50.3135, -312.701, -122.025, 0.66 ) }
    dend_57 { pt3dadd( 49.9228, -314.62, -123.048, 0.44 ) }
    dend_57 { pt3dadd( 49.7555, -315.323, -123.437, 0.96 ) }
    dend_57 { pt3dadd( 49.5655, -315.966, -123.814, 1.25 ) }
    dend_57 { pt3dadd( 49.1564, -317.286, -124.611, 1.11 ) }
    dend_57 { pt3dadd( 48.7827, -318.432, -125.371, 0.74 ) }
    dend_57 { pt3dadd( 48.5687, -319.031, -125.796, 0.74 ) }
    // Section: dend_81, id: dend_81, parent: dend_75 (entry count 73/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -135.953, 74.4583, 56.7283, 0.29 ) }
    dend_81 { pt3dadd( -137.376, 74.966, 56.6845, 0.29 ) }
    dend_81 { pt3dadd( -137.462, 74.9921, 56.6817, 0.29 ) }
    dend_81 { pt3dadd( -138.502, 75.3952, 56.5218, 0.29 ) }
    dend_81 { pt3dadd( -138.583, 75.4293, 56.5058, 0.29 ) }
    dend_81 { pt3dadd( -139.509, 75.8687, 56.3454, 0.66 ) }
    dend_81 { pt3dadd( -140.211, 76.2283, 56.2388, 0.81 ) }
    dend_81 { pt3dadd( -140.272, 76.2601, 56.2304, 0.81 ) }
    dend_81 { pt3dadd( -142.111, 77.2188, 56.109, 0.29 ) }
    dend_81 { pt3dadd( -142.279, 77.3072, 56.1063, 0.29 ) }
    dend_81 { pt3dadd( -143.627, 78.028, 56.165, 0.29 ) }
    dend_81 { pt3dadd( -145.179, 78.8893, 56.3278, 0.29 ) }
    dend_81 { pt3dadd( -145.247, 78.927, 56.34, 0.29 ) }
    dend_81 { pt3dadd( -146.675, 79.6643, 56.6918, 0.44 ) }
    dend_81 { pt3dadd( -146.742, 79.6978, 56.7166, 0.44 ) }
    dend_81 { pt3dadd( -147.278, 79.9813, 56.9257, 0.44 ) }
    dend_81 { pt3dadd( -147.34, 80.0168, 56.9525, 0.44 ) }
    dend_81 { pt3dadd( -148.439, 80.7388, 57.46, 0.29 ) }
    dend_81 { pt3dadd( -148.566, 80.8375, 57.5103, 0.29 ) }
    dend_81 { pt3dadd( -149.378, 81.5784, 57.7715, 0.29 ) }
    dend_81 { pt3dadd( -149.777, 81.9573, 57.9021, 0.59 ) }
    dend_81 { pt3dadd( -149.893, 82.0732, 57.9414, 0.59 ) }
    dend_81 { pt3dadd( -150.244, 82.4168, 58.0557, 0.59 ) }
    dend_81 { pt3dadd( -151.11, 83.2514, 58.3261, 0.37 ) }
    dend_81 { pt3dadd( -151.24, 83.3682, 58.3639, 0.37 ) }
    dend_81 { pt3dadd( -151.923, 84.0207, 58.5141, 0.37 ) }
    dend_81 { pt3dadd( -151.978, 84.0767, 58.5242, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_81 { pt3dadd( -152.742, 84.8322, 58.6313, 0.37 ) }
    dend_81 { pt3dadd( -152.863, 84.9504, 58.6441, 0.37 ) }
    dend_81 { pt3dadd( -153.679, 85.6673, 58.7232, 0.37 ) }
    dend_81 { pt3dadd( -154.781, 86.5403, 58.8245, 0.22 ) }
    dend_81 { pt3dadd( -154.927, 86.6389, 58.8391, 0.22 ) }
    dend_81 { pt3dadd( -155.758, 87.119, 58.9368, 0.22 ) }
    dend_81 { pt3dadd( -155.829, 87.1523, 58.9473, 0.22 ) }
    dend_81 { pt3dadd( -156.811, 87.3474, 59.2223, 0.81 ) }
    dend_81 { pt3dadd( -157.155, 87.3597, 59.3452, 0.81 ) }
    dend_81 { pt3dadd( -158.121, 87.3064, 59.6978, 0.22 ) }
    dend_81 { pt3dadd( -158.196, 87.2978, 59.7214, 0.22 ) }
    dend_81 { pt3dadd( -159.038, 87.1401, 59.9881, 0.22 ) }
    dend_81 { pt3dadd( -161.394, 86.657, 60.6663, 0.22 ) }
    dend_81 { pt3dadd( -161.554, 86.6233, 60.7089, 0.22 ) }
    dend_81 { pt3dadd( -162.694, 86.3859, 61.0021, 0.22 ) }
    dend_81 { pt3dadd( -163.781, 86.1609, 61.2676, 0.22 ) }
    dend_81 { pt3dadd( -165.433, 85.8543, 61.6512, 0.22 ) }
    dend_81 { pt3dadd( -166.612, 85.6732, 61.9062, 0.22 ) }
    dend_81 { pt3dadd( -166.701, 85.6683, 61.9225, 0.22 ) }
    dend_81 { pt3dadd( -168.004, 85.7748, 62.2182, 0.52 ) }
    dend_81 { pt3dadd( -168.378, 85.8992, 62.3337, 0.81 ) }
    dend_81 { pt3dadd( -168.513, 85.9827, 62.3839, 0.81 ) }
    dend_81 { pt3dadd( -168.818, 86.2487, 62.4937, 0.81 ) }
    dend_81 { pt3dadd( -168.88, 86.3118, 62.5086, 0.81 ) }
    dend_81 { pt3dadd( -169.81, 87.281, 62.6151, 0.37 ) }
    dend_81 { pt3dadd( -170.315, 87.8486, 62.6256, 0.59 ) }
    dend_81 { pt3dadd( -170.367, 87.9082, 62.624, 0.59 ) }
    dend_81 { pt3dadd( -171.009, 88.6746, 62.5989, 0.44 ) }
    dend_81 { pt3dadd( -172.053, 90.0147, 62.3835, 0.29 ) }
    dend_81 { pt3dadd( -172.152, 90.1481, 62.351, 0.29 ) }
    dend_81 { pt3dadd( -172.701, 90.9197, 61.9959, 0.29 ) }
    dend_81 { pt3dadd( -172.736, 90.971, 61.967, 0.29 ) }
    dend_81 { pt3dadd( -173.282, 91.7337, 61.4984, 0.29 ) }
    dend_81 { pt3dadd( -174.154, 93.0601, 60.4536, 0.29 ) }
    dend_81 { pt3dadd( -174.183, 93.1037, 60.4146, 0.29 ) }
    dend_81 { pt3dadd( -175.239, 94.5285, 58.9515, 0.29 ) }
    dend_81 { pt3dadd( -175.271, 94.5661, 58.9087, 0.29 ) }
    dend_81 { pt3dadd( -175.61, 94.9312, 58.4878, 0.66 ) }
    dend_81 { pt3dadd( -177.241, 96.4716, 56.615, 0.37 ) }
    dend_81 { pt3dadd( -177.35, 96.5608, 56.508, 0.37 ) }
    dend_81 { pt3dadd( -177.994, 97.0149, 55.9625, 0.29 ) }
    dend_81 { pt3dadd( -178.672, 97.4066, 55.5381, 0.15 ) }
    dend_81 { pt3dadd( -179.099, 97.6292, 55.3125, 0.74 ) }
    dend_81 { pt3dadd( -179.305, 97.7139, 55.2386, 0.74 ) }
    dend_81 { pt3dadd( -180.735, 98.1452, 54.9845, 0.37 ) }
    dend_81 { pt3dadd( -181.412, 98.3748, 54.8828, 0.29 ) }
    dend_81 { pt3dadd( -182.32, 98.7184, 54.8166, 0.29 ) }
    dend_81 { pt3dadd( -182.425, 98.7583, 54.8162, 0.29 ) }
    dend_81 { pt3dadd( -183.75, 99.2415, 54.9223, 0.29 ) }
    dend_81 { pt3dadd( -183.906, 99.2994, 54.9498, 0.29 ) }
    dend_81 { pt3dadd( -184.775, 99.6272, 55.1916, 0.29 ) }
    dend_81 { pt3dadd( -185.613, 99.9636, 55.4306, 0.29 ) }
    dend_81 { pt3dadd( -185.685, 99.9936, 55.4458, 0.29 ) }
    dend_81 { pt3dadd( -186.8, 100.457, 55.6165, 0.29 ) }
    dend_81 { pt3dadd( -187.863, 100.923, 55.6758, 0.29 ) }
    dend_81 { pt3dadd( -188.069, 101.01, 55.6731, 0.29 ) }
    dend_81 { pt3dadd( -189.017, 101.474, 55.5633, 0.29 ) }
    dend_81 { pt3dadd( -190.048, 102.081, 55.3918, 0.52 ) }
    dend_81 { pt3dadd( -190.561, 102.433, 55.3054, 0.66 ) }
    dend_81 { pt3dadd( -191.713, 103.345, 55.1022, 0.29 ) }
    dend_81 { pt3dadd( -192.978, 104.438, 54.8837, 1.11 ) }
    dend_81 { pt3dadd( -194.241, 105.601, 54.6088, 0.29 ) }
    dend_81 { pt3dadd( -194.91, 106.258, 54.4428, 0.29 ) }
    dend_81 { pt3dadd( -195.482, 106.834, 54.3089, 0.74 ) }
    dend_81 { pt3dadd( -195.605, 106.96, 54.2768, 0.74 ) }
    dend_81 { pt3dadd( -195.946, 107.319, 54.1804, 0.74 ) }
    dend_81 { pt3dadd( -197.711, 109.092, 53.5829, 0.29 ) }
    dend_81 { pt3dadd( -197.796, 109.167, 53.5545, 0.29 ) }
    dend_81 { pt3dadd( -198.456, 109.724, 53.3211, 0.29 ) }
    dend_81 { pt3dadd( -198.504, 109.766, 53.3042, 0.29 ) }
    dend_81 { pt3dadd( -199.332, 110.489, 53.0385, 0.59 ) }
    dend_81 { pt3dadd( -200.885, 111.914, 52.6391, 0.29 ) }
    dend_81 { pt3dadd( -200.948, 111.978, 52.6336, 0.29 ) }
    dend_81 { pt3dadd( -201.397, 112.487, 52.6325, 0.29 ) }
    dend_81 { pt3dadd( -201.624, 112.819, 52.6675, 0.59 ) }
    dend_81 { pt3dadd( -201.669, 112.895, 52.682, 0.59 ) }
    dend_81 { pt3dadd( -201.999, 113.554, 52.8563, 0.59 ) }
    dend_81 { pt3dadd( -202.307, 114.236, 53.0754, 0.29 ) }
    dend_81 { pt3dadd( -202.597, 114.793, 53.2384, 0.29 ) }
    dend_81 { pt3dadd( -203.563, 116.412, 53.6663, 0.29 ) }
    dend_81 { pt3dadd( -203.603, 116.467, 53.6797, 0.29 ) }
    dend_81 { pt3dadd( -204.188, 117.18, 53.8444, 0.29 ) }
    dend_81 { pt3dadd( -204.469, 117.47, 53.905, 0.29 ) }
    dend_81 { pt3dadd( -205.293, 118.158, 54.0327, 0.52 ) }
    dend_81 { pt3dadd( -205.672, 118.409, 54.0836, 0.59 ) }
    dend_81 { pt3dadd( -206.819, 119.021, 54.2432, 0.22 ) }
    dend_81 { pt3dadd( -207.127, 119.194, 54.2752, 0.22 ) }
    dend_81 { pt3dadd( -207.748, 119.591, 54.3428, 0.22 ) }
    dend_81 { pt3dadd( -208.32, 120.029, 54.4171, 0.81 ) }
    dend_81 { pt3dadd( -208.705, 120.363, 54.4696, 1.03 ) }
    dend_81 { pt3dadd( -209.323, 120.922, 54.5426, 0.52 ) }
    dend_81 { pt3dadd( -210.455, 121.952, 54.6509, 0.29 ) }
    dend_81 { pt3dadd( -211.76, 123.113, 54.757, 0.22 ) }
    dend_81 { pt3dadd( -213.001, 124.278, 54.8617, 0.22 ) }
    dend_81 { pt3dadd( -213.146, 124.424, 54.8757, 0.22 ) }
    dend_81 { pt3dadd( -213.753, 125.047, 54.9392, 0.74 ) }
    dend_81 { pt3dadd( -214.083, 125.378, 54.978, 0.74 ) }
    dend_81 { pt3dadd( -214.505, 125.74, 55.0597, 0.74 ) }
    dend_81 { pt3dadd( -223.323, 131.997, 53.8783, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 99/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -135.953, 74.4583, 56.7283, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_76 { pt3dadd( -135.856, 75.0979, 56.8001, 0.29 ) }
    dend_76 { pt3dadd( -135.667, 76.2255, 56.8818, 0.29 ) }
    dend_76 { pt3dadd( -135.659, 76.2729, 56.8847, 0.29 ) }
    dend_76 { pt3dadd( -135.486, 77.3355, 56.947, 0.29 ) }
    dend_76 { pt3dadd( -135.478, 77.3887, 56.9503, 0.29 ) }
    dend_76 { pt3dadd( -135.3, 78.9729, 57.0564, 0.52 ) }
    dend_76 { pt3dadd( -135.233, 79.8628, 57.1248, 0.52 ) }
    dend_76 { pt3dadd( -135.211, 80.5053, 57.1732, 0.52 ) }
    dend_76 { pt3dadd( -135.213, 80.6866, 57.1846, 0.52 ) }
    dend_76 { pt3dadd( -135.264, 81.4632, 57.2911, 0.52 ) }
    dend_76 { pt3dadd( -135.344, 82.0483, 57.4199, 0.81 ) }
    dend_76 { pt3dadd( -135.374, 82.156, 57.4581, 0.81 ) }
    dend_76 { pt3dadd( -135.542, 82.5979, 57.6698, 0.66 ) }
    dend_76 { pt3dadd( -135.738, 83.0177, 57.8923, 0.37 ) }
    dend_76 { pt3dadd( -136.379, 84.2749, 58.5981, 0.37 ) }
    dend_76 { pt3dadd( -136.403, 84.3191, 58.6213, 0.37 ) }
    dend_76 { pt3dadd( -136.659, 84.7636, 58.8298, 0.52 ) }
    dend_76 { pt3dadd( -136.696, 84.8287, 58.8531, 0.52 ) }
    dend_76 { pt3dadd( -137.161, 85.6532, 59.076, 0.44 ) }
    dend_76 { pt3dadd( -137.214, 85.7491, 59.0932, 0.44 ) }
    dend_76 { pt3dadd( -137.602, 86.4388, 59.1273, 0.44 ) }
    dend_76 { pt3dadd( -137.713, 86.6502, 59.1389, 0.44 ) }
    dend_76 { pt3dadd( -138.211, 87.7285, 59.2104, 0.44 ) }
    dend_76 { pt3dadd( -138.233, 87.7795, 59.2144, 0.44 ) }
    dend_76 { pt3dadd( -138.431, 88.3071, 59.2651, 0.52 ) }
    dend_76 { pt3dadd( -138.467, 88.4194, 59.2739, 0.52 ) }
    dend_76 { pt3dadd( -138.663, 89.1142, 59.328, 0.37 ) }
    dend_76 { pt3dadd( -138.859, 89.9251, 59.3797, 0.74 ) }
    dend_76 { pt3dadd( -138.87, 89.9792, 59.3833, 0.74 ) }
    dend_76 { pt3dadd( -138.95, 90.3544, 59.409, 0.74 ) }
    dend_76 { pt3dadd( -139.309, 92.1286, 59.5919, 0.52 ) }
    dend_76 { pt3dadd( -139.319, 92.1826, 59.5988, 0.52 ) }
    dend_76 { pt3dadd( -139.586, 93.6427, 59.8286, 0.52 ) }
    dend_76 { pt3dadd( -139.893, 95.3693, 60.1429, 0.52 ) }
    dend_76 { pt3dadd( -139.905, 95.4388, 60.157, 0.52 ) }
    dend_76 { pt3dadd( -140.096, 96.5525, 60.4123, 0.88 ) }
    dend_76 { pt3dadd( -140.137, 96.7921, 60.4763, 0.88 ) }
    dend_76 { pt3dadd( -140.357, 98.1364, 60.8344, 0.52 ) }
    dend_76 { pt3dadd( -140.489, 98.9917, 61.061, 0.52 ) }
    dend_76 { pt3dadd( -140.51, 99.1498, 61.1087, 0.52 ) }
    dend_76 { pt3dadd( -140.619, 99.9416, 61.3243, 0.52 ) }
    dend_76 { pt3dadd( -140.656, 100.163, 61.3743, 0.52 ) }
    dend_76 { pt3dadd( -140.772, 100.71, 61.4948, 0.59 ) }
    dend_76 { pt3dadd( -140.922, 101.343, 61.6271, 0.37 ) }
    dend_76 { pt3dadd( -141.175, 102.361, 61.8322, 0.44 ) }
    dend_76 { pt3dadd( -141.447, 103.465, 62.0435, 0.22 ) }
    dend_76 { pt3dadd( -141.695, 104.458, 62.224, 0.22 ) }
    dend_76 { pt3dadd( -141.799, 104.88, 62.306, 0.37 ) }
    dend_76 { pt3dadd( -142.04, 105.861, 62.5022, 0.22 ) }
    dend_76 { pt3dadd( -142.063, 105.96, 62.522, 0.22 ) }
    dend_76 { pt3dadd( -142.245, 106.785, 62.7276, 0.22 ) }
    dend_76 { pt3dadd( -142.254, 106.836, 62.7462, 0.22 ) }
    dend_76 { pt3dadd( -142.367, 107.671, 63.0724, 0.22 ) }
    dend_76 { pt3dadd( -142.372, 107.715, 63.0899, 0.22 ) }
    dend_76 { pt3dadd( -142.499, 108.806, 63.5243, 0.22 ) }
    dend_76 { pt3dadd( -142.63, 110.033, 63.9992, 0.66 ) }
    dend_76 { pt3dadd( -142.68, 110.504, 64.1749, 0.96 ) }
    dend_76 { pt3dadd( -142.766, 111.37, 64.5072, 0.22 ) }
    dend_76 { pt3dadd( -142.841, 112.115, 64.7919, 0.22 ) }
    dend_76 { pt3dadd( -142.847, 112.173, 64.8149, 0.22 ) }
    dend_76 { pt3dadd( -142.893, 112.604, 64.9911, 0.59 ) }
    dend_76 { pt3dadd( -142.95, 112.98, 65.1125, 0.88 ) }
    dend_76 { pt3dadd( -143.113, 113.868, 65.3684, 0.44 ) }
    dend_76 { pt3dadd( -143.226, 114.401, 65.5017, 0.29 ) }
    dend_76 { pt3dadd( -143.26, 114.566, 65.5353, 0.29 ) }
    dend_76 { pt3dadd( -143.336, 114.957, 65.5983, 0.29 ) }
    dend_76 { pt3dadd( -143.484, 115.95, 65.6614, 0.74 ) }
    dend_76 { pt3dadd( -143.537, 116.429, 65.6521, 0.29 ) }
    dend_76 { pt3dadd( -143.584, 116.926, 65.6122, 0.44 ) }
    dend_76 { pt3dadd( -143.616, 117.328, 65.5812, 0.59 ) }
    dend_76 { pt3dadd( -143.62, 117.383, 65.5784, 0.59 ) }
    dend_76 { pt3dadd( -143.705, 118.584, 65.5504, 0.22 ) }
    dend_76 { pt3dadd( -143.719, 118.761, 65.5547, 0.22 ) }
    dend_76 { pt3dadd( -143.813, 119.759, 65.6549, 0.22 ) }
    dend_76 { pt3dadd( -143.818, 119.812, 65.6641, 0.22 ) }
    dend_76 { pt3dadd( -143.859, 120.402, 65.8081, 0.44 ) }
    dend_76 { pt3dadd( -143.862, 120.462, 65.827, 0.44 ) }
    dend_76 { pt3dadd( -143.873, 120.771, 65.9594, 0.44 ) }
    dend_76 { pt3dadd( -143.861, 121.773, 66.4284, 0.29 ) }
    dend_76 { pt3dadd( -143.828, 122.138, 66.6275, 0.44 ) }
    dend_76 { pt3dadd( -143.816, 122.24, 66.6863, 0.44 ) }
    dend_76 { pt3dadd( -143.742, 122.703, 66.9831, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 48.5687, -319.031, -125.796, 0.29 ) }
    dend_59 { pt3dadd( 48.0131, -319.204, -125.71, 0.29 ) }
    dend_59 { pt3dadd( 47.3583, -319.516, -125.627, 0.29 ) }
    dend_59 { pt3dadd( 47.2403, -319.582, -125.613, 0.59 ) }
    dend_59 { pt3dadd( 46.8212, -319.823, -125.564, 0.66 ) }
    dend_59 { pt3dadd( 46.7375, -319.869, -125.563, 0.66 ) }
    dend_59 { pt3dadd( 46.302, -320.102, -125.573, 0.66 ) }
    dend_59 { pt3dadd( 45.5416, -320.543, -125.612, 0.22 ) }
    dend_59 { pt3dadd( 45.231, -320.733, -125.631, 0.66 ) }
    dend_59 { pt3dadd( 44.8665, -320.957, -125.657, 0.66 ) }
    dend_59 { pt3dadd( 43.8906, -321.552, -125.741, 0.22 ) }
    dend_59 { pt3dadd( 43.3228, -321.889, -125.796, 0.22 ) }
    dend_59 { pt3dadd( 42.5277, -322.345, -125.884, 0.22 ) }
    dend_59 { pt3dadd( 41.969, -322.639, -125.948, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 96/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 48.5687, -319.031, -125.796, 0.29 ) }
    dend_58 { pt3dadd( 48.7811, -320.106, -126.042, 0.29 ) }
    dend_58 { pt3dadd( 48.9468, -320.76, -126.227, 0.29 ) }
    dend_58 { pt3dadd( 49.0151, -321.086, -126.316, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_58 { pt3dadd( 49.0663, -321.375, -126.408, 0.88 ) }
    dend_58 { pt3dadd( 49.0775, -321.447, -126.432, 0.88 ) }
    dend_58 { pt3dadd( 49.1394, -321.954, -126.593, 0.88 ) }
    dend_58 { pt3dadd( 49.2677, -322.834, -126.821, 0.22 ) }
    dend_58 { pt3dadd( 49.3304, -323.336, -126.955, 0.22 ) }
    dend_58 { pt3dadd( 49.3943, -323.917, -127.126, 0.88 ) }
    dend_58 { pt3dadd( 49.4016, -323.964, -127.14, 0.88 ) }
    dend_58 { pt3dadd( 49.5205, -324.561, -127.308, 0.74 ) }
    dend_58 { pt3dadd( 49.7363, -325.29, -127.494, 0.37 ) }
    dend_58 { pt3dadd( 49.7589, -325.333, -127.503, 0.37 ) }
    dend_58 { pt3dadd( 50.4405, -326.225, -127.589, 0.29 ) }
    dend_58 { pt3dadd( 50.8184, -326.626, -127.591, 0.59 ) }
    dend_58 { pt3dadd( 50.9325, -326.733, -127.588, 0.59 ) }
    dend_58 { pt3dadd( 51.4985, -327.199, -127.559, 0.88 ) }
    dend_58 { pt3dadd( 52.349, -327.826, -127.382, 0.74 ) }
    dend_58 { pt3dadd( 53.3552, -328.515, -127.077, 0.29 ) }
    dend_58 { pt3dadd( 53.8912, -328.86, -126.88, 0.74 ) }
    dend_58 { pt3dadd( 53.9307, -328.886, -126.865, 0.74 ) }
    dend_58 { pt3dadd( 54.2535, -329.093, -126.723, 0.74 ) }
    dend_58 { pt3dadd( 55.703, -329.976, -125.961, 0.44 ) }
    dend_58 { pt3dadd( 56.1733, -330.252, -125.651, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -143.742, 122.703, 66.9831, 0.29 ) }
    dend_78 { pt3dadd( -142.358, 122.079, 67.0687, 0.29 ) }
    dend_78 { pt3dadd( -142.201, 122.002, 67.0703, 0.29 ) }
    dend_78 { pt3dadd( -141.713, 121.759, 67.0645, 0.29 ) }
    dend_78 { pt3dadd( -141.634, 121.72, 67.0635, 0.29 ) }
    dend_78 { pt3dadd( -140.509, 121.161, 67.0502, 0.29 ) }
    dend_78 { pt3dadd( -140.021, 120.919, 67.0444, 0.81 ) }
    dend_78 { pt3dadd( -139.468, 120.656, 66.9678, 1.03 ) }
    dend_78 { pt3dadd( -139.392, 120.615, 66.9566, 1.03 ) }
    dend_78 { pt3dadd( -129.469, 114.084, 64.8821, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 31/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -143.742, 122.703, 66.9831, 0.44 ) }
    dend_77 { pt3dadd( -144.019, 123.921, 66.9337, 0.44 ) }
    dend_77 { pt3dadd( -144.316, 125.284, 66.8673, 0.37 ) }
    dend_77 { pt3dadd( -144.814, 127.791, 66.8195, 0.29 ) }
    dend_77 { pt3dadd( -145.271, 130.02, 66.8221, 0.29 ) }
    dend_77 { pt3dadd( -145.465, 131.026, 66.8278, 0.74 ) }
    dend_77 { pt3dadd( -145.557, 131.519, 66.8315, 0.74 ) }
    dend_77 { pt3dadd( -145.658, 132.155, 66.8266, 0.44 ) }
    dend_77 { pt3dadd( -145.825, 133.625, 66.8183, 0.37 ) }
    dend_77 { pt3dadd( -145.929, 135.168, 66.8068, 0.29 ) }
    dend_77 { pt3dadd( -146.008, 136.717, 66.7912, 0.29 ) }
    dend_77 { pt3dadd( -146.012, 136.873, 66.7916, 0.29 ) }
    dend_77 { pt3dadd( -146.042, 139.02, 66.8102, 0.29 ) }
    dend_77 { pt3dadd( -146.042, 139.429, 66.8114, 0.29 ) }
    dend_77 { pt3dadd( -146.038, 140.756, 66.7908, 0.29 ) }
    dend_77 { pt3dadd( -146.036, 140.823, 66.7917, 0.29 ) }
    dend_77 { pt3dadd( -146.114, 142.094, 66.8658, 0.29 ) }
    dend_77 { pt3dadd( -146.257, 142.766, 66.9197, 0.44 ) }
    dend_77 { pt3dadd( -146.306, 142.902, 66.9339, 0.44 ) }
    dend_77 { pt3dadd( -146.516, 143.382, 66.9787, 0.29 ) }
    dend_77 { pt3dadd( -146.556, 143.462, 66.9847, 0.29 ) }
    dend_77 { pt3dadd( -147.204, 144.689, 66.9888, 0.29 ) }
    dend_77 { pt3dadd( -148.346, 146.755, 66.8686, 0.29 ) }
    dend_77 { pt3dadd( -148.474, 146.995, 66.8506, 0.29 ) }
    dend_77 { pt3dadd( -148.859, 147.737, 66.7862, 0.74 ) }
    dend_77 { pt3dadd( -149.167, 148.356, 66.729, 0.88 ) }
    dend_77 { pt3dadd( -149.773, 149.598, 66.6091, 0.52 ) }
    dend_77 { pt3dadd( -150.314, 150.723, 66.4983, 0.37 ) }
    dend_77 { pt3dadd( -151.071, 152.281, 66.3751, 0.29 ) }
    dend_77 { pt3dadd( -151.19, 152.526, 66.3614, 0.29 ) }
    dend_77 { pt3dadd( -152.163, 154.53, 66.2975, 0.29 ) }
    dend_77 { pt3dadd( -152.244, 154.698, 66.2976, 0.29 ) }
    dend_77 { pt3dadd( -152.897, 156.094, 66.367, 0.29 ) }
    dend_77 { pt3dadd( -153.15, 156.633, 66.422, 0.52 ) }
    dend_77 { pt3dadd( -153.354, 157.059, 66.4959, 0.66 ) }
    dend_77 { pt3dadd( -153.415, 157.189, 66.5263, 0.66 ) }
    dend_77 { pt3dadd( -153.639, 157.665, 66.6896, 0.66 ) }
    dend_77 { pt3dadd( -153.681, 157.747, 66.718, 0.66 ) }
    dend_77 { pt3dadd( -154.134, 158.561, 66.9736, 0.29 ) }
    dend_77 { pt3dadd( -154.285, 158.812, 67.0481, 0.22 ) }
    dend_77 { pt3dadd( -154.576, 159.278, 67.1913, 0.52 ) }
    dend_77 { pt3dadd( -154.733, 159.541, 67.2659, 0.52 ) }
    dend_77 { pt3dadd( -155.115, 160.202, 67.4407, 0.29 ) }
    dend_77 { pt3dadd( -155.605, 161.095, 67.6353, 0.29 ) }
    dend_77 { pt3dadd( -156.302, 162.495, 67.919, 0.29 ) }
    dend_77 { pt3dadd( -156.341, 162.581, 67.9374, 0.29 ) }
    dend_77 { pt3dadd( -156.957, 164.044, 68.2533, 0.29 ) }
    dend_77 { pt3dadd( -157.01, 164.179, 68.2824, 0.29 ) }
    dend_77 { pt3dadd( -157.583, 165.787, 68.6205, 0.29 ) }
    dend_77 { pt3dadd( -158.035, 167.133, 68.8693, 0.29 ) }
    dend_77 { pt3dadd( -158.099, 167.328, 68.8876, 0.29 ) }
    dend_77 { pt3dadd( -158.32, 167.99, 68.9045, 0.29 ) }
    dend_77 { pt3dadd( -158.338, 168.045, 68.902, 0.29 ) }
    dend_77 { pt3dadd( -158.627, 168.9, 68.8134, 0.88 ) }
    dend_77 { pt3dadd( -158.714, 169.155, 68.7696, 0.88 ) }
    dend_77 { pt3dadd( -159.115, 170.361, 68.5219, 0.22 ) }
    dend_77 { pt3dadd( -159.499, 171.541, 68.2402, 0.22 ) }
    dend_77 { pt3dadd( -159.557, 171.722, 68.1942, 0.22 ) }
    dend_77 { pt3dadd( -159.967, 173.017, 67.8569, 0.22 ) }
    dend_77 { pt3dadd( -159.984, 173.073, 67.8425, 0.22 ) }
    dend_77 { pt3dadd( -160.569, 174.783, 67.2818, 0.52 ) }
    dend_77 { pt3dadd( -161.022, 176.005, 66.8316, 0.29 ) }
    dend_77 { pt3dadd( -161.242, 176.543, 66.6006, 0.37 ) }
    dend_77 { pt3dadd( -161.288, 176.65, 66.5512, 0.37 ) }
    dend_77 { pt3dadd( -161.553, 177.235, 66.2668, 0.37 ) }
    dend_77 { pt3dadd( -162.404, 178.996, 65.2882, 0.22 ) }
    dend_77 { pt3dadd( -162.927, 180.04, 64.6798, 0.22 ) }
    dend_77 { pt3dadd( -162.953, 180.096, 64.6495, 0.22 ) }
    dend_77 { pt3dadd( -163.205, 180.664, 64.3501, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_77 { pt3dadd( -163.548, 181.471, 63.9493, 0.66 ) }
    dend_77 { pt3dadd( -164.225, 183.103, 63.0989, 0.15 ) }
    dend_77 { pt3dadd( -164.744, 184.456, 62.4175, 0.15 ) }
    dend_77 { pt3dadd( -165.014, 185.124, 62.0283, 0.29 ) }
    dend_77 { pt3dadd( -165.038, 185.18, 61.9946, 0.29 ) }
    dend_77 { pt3dadd( -165.216, 185.572, 61.7407, 0.29 ) }
    dend_77 { pt3dadd( -165.796, 186.777, 60.9475, 0.44 ) }
    dend_77 { pt3dadd( -165.966, 187.092, 60.6969, 0.44 ) }
    dend_77 { pt3dadd( -166.45, 187.857, 60.0531, 0.22 ) }
    dend_77 { pt3dadd( -166.718, 188.274, 59.727, 0.52 ) }
    dend_77 { pt3dadd( -166.749, 188.324, 59.6909, 0.52 ) }
    dend_77 { pt3dadd( -166.979, 188.695, 59.4562, 0.88 ) }
    dend_77 { pt3dadd( -168.311, 190.941, 58.3147, 0.29 ) }
    dend_77 { pt3dadd( -169.419, 192.832, 57.4292, 0.29 ) }
    dend_77 { pt3dadd( -169.775, 193.512, 57.158, 0.29 ) }
    dend_77 { pt3dadd( -169.802, 193.572, 57.1375, 0.29 ) }
    dend_77 { pt3dadd( -170.241, 194.802, 56.7915, 0.29 ) }
    dend_77 { pt3dadd( -170.517, 195.928, 56.5578, 0.29 ) }
    dend_77 { pt3dadd( -170.523, 195.985, 56.5516, 0.29 ) }
    dend_77 { pt3dadd( -170.538, 197.679, 56.332, 0.29 ) }
    dend_77 { pt3dadd( -170.497, 198.949, 56.16, 0.59 ) }
    dend_77 { pt3dadd( -170.46, 199.58, 56.0696, 0.59 ) }
    dend_77 { pt3dadd( -170.404, 200.673, 55.9131, 0.22 ) }
    dend_77 { pt3dadd( -170.366, 201.907, 55.7404, 0.22 ) }
    dend_77 { pt3dadd( -170.366, 202.06, 55.7199, 0.22 ) }
    dend_77 { pt3dadd( -170.433, 203.946, 55.4822, 0.22 ) }
    dend_77 { pt3dadd( -170.443, 204.092, 55.4649, 0.22 ) }
    dend_77 { pt3dadd( -170.714, 207.05, 55.1317, 0.22 ) }
    dend_77 { pt3dadd( -170.725, 207.127, 55.1239, 0.22 ) }
    dend_77 { pt3dadd( -171.037, 208.875, 54.9633, 0.22 ) }
    dend_77 { pt3dadd( -171.083, 209.078, 54.947, 0.22 ) }
    dend_77 { pt3dadd( -171.166, 209.368, 54.9279, 0.59 ) }
    dend_77 { pt3dadd( -171.36, 209.962, 54.8944, 0.59 ) }
    dend_77 { pt3dadd( -171.933, 211.407, 54.7279, 0.29 ) }
    dend_77 { pt3dadd( -172.213, 212.053, 54.6246, 0.59 ) }
    dend_77 { pt3dadd( -172.682, 213.046, 54.4315, 0.52 ) }
    dend_77 { pt3dadd( -173.084, 213.905, 54.2438, 0.74 ) }
    dend_77 { pt3dadd( -173.426, 214.646, 54.0633, 0.74 ) }
    dend_77 { pt3dadd( -174.069, 216.128, 53.6561, 0.22 ) }
    dend_77 { pt3dadd( -174.318, 216.754, 53.4578, 0.44 ) }
    dend_77 { pt3dadd( -174.524, 217.315, 53.278, 0.74 ) }
    dend_77 { pt3dadd( -174.634, 217.644, 53.1812, 1.03 ) }
    dend_77 { pt3dadd( -174.651, 217.697, 53.1665, 1.03 ) }
    dend_77 { pt3dadd( -174.872, 218.426, 53.0116, 1.03 ) }
    dend_77 { pt3dadd( -174.889, 218.492, 53.0076, 1.03 ) }
    dend_77 { pt3dadd( -175.167, 219.571, 52.9377, 0.37 ) }
    dend_77 { pt3dadd( -175.449, 220.639, 52.8615, 0.29 ) }
    dend_77 { pt3dadd( -176.901, 229.975, 52.2413, 0.29 ) }
    dend_77 { pt3dadd( -179.269, 239.118, 52.9242, 0.29 ) }
    dend_77 { pt3dadd( -181.328, 248.294, 54.0356, 0.29 ) }
    dend_77 { pt3dadd( -182.784, 257.385, 56.2496, 0.29 ) }
    dend_77 { pt3dadd( -183.27, 266.401, 59.1019, 0.29 ) }
    dend_77 { pt3dadd( -184.377, 274.651, 63.6175, 0.29 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -129.469, 114.084, 64.8821, 0.22 ) }
    dend_80 { pt3dadd( -122.053, 108.535, 63.7146, 0.22 ) }
    dend_80 { pt3dadd( -114.768, 102.701, 63.5093, 0.22 ) }
    dend_80 { pt3dadd( -106.895, 97.6857, 63.4414, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 57/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -129.469, 114.084, 64.8821, 0.22 ) }
    dend_79 { pt3dadd( -121.725, 109.832, 63.6622, 0.22 ) }
    dend_79 { pt3dadd( -113.971, 105.574, 62.5326, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_92 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_81 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_92, dend_25, dend_0, axon_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, axon_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_5 = new SectionList()
    dend_92 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_54 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_92 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_93 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_102 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_97 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_103 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_100 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_96 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_95 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_67 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_66 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_48 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_35 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_5 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_53 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_50 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_39 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_8 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_73 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_63 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_38 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_37 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_9 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_83 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_74 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_55 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_85 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_84 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_82 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_81 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_76 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_77 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_65 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_15 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_98 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_99 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_101 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_6 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_7 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_51 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_33 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_10 OneSecGrp_SectionRef_89.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_32 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_87 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_91 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_94 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_68 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_88 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_104 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_61 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_54 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_72 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_64 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_56 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_86 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_60 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_57 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_45 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_59 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_58 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_70 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_71 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_46 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_75 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_78 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_79 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_80 OneSecGrp_SectionRef_107.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_65 all.append()
    dend_65 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_91 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_92 nseg = 5
    dend_93 nseg = 7
    dend_41 nseg = 3
    dend_26 nseg = 3
    dend_102 nseg = 7
    dend_97 nseg = 3
    dend_27 nseg = 9
    dend_20 nseg = 3
    dend_2 nseg = 11
    dend_103 nseg = 7
    dend_100 nseg = 3
    dend_96 nseg = 3
    dend_95 nseg = 5
    dend_67 nseg = 7
    dend_66 nseg = 5
    dend_48 nseg = 3
    dend_43 nseg = 13
    dend_31 nseg = 7
    dend_29 nseg = 3
    dend_28 nseg = 5
    dend_24 nseg = 3
    dend_21 nseg = 9
    dend_17 nseg = 7
    dend_16 nseg = 7
    dend_11 nseg = 3
    dend_4 nseg = 3
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_35 nseg = 3
    dend_19 nseg = 3
    dend_5 nseg = 3
    dend_69 nseg = 3
    dend_62 nseg = 9
    dend_53 nseg = 7
    dend_50 nseg = 5
    dend_39 nseg = 5
    dend_36 nseg = 3
    dend_8 nseg = 3
    dend_90 nseg = 3
    dend_89 nseg = 3
    dend_73 nseg = 7
    dend_63 nseg = 5
    dend_38 nseg = 5
    dend_37 nseg = 5
    dend_9 nseg = 3
    dend_83 nseg = 5
    dend_74 nseg = 3
    dend_55 nseg = 5
    dend_85 nseg = 7
    dend_84 nseg = 5
    dend_82 nseg = 5
    dend_81 nseg = 5
    dend_76 nseg = 3
    dend_77 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_DBC_30f853b5ca_0_0


