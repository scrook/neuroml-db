// Cell: bIR215_L23_BTC_e051419629_0_0
/*
{
  "id" : "bIR215_L23_BTC_e051419629_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.10599, -10.005, -3.63045, 2.05199", "1.00994, -8.98941, -3.26388, 3.40229", "0.913884, -7.97383, -2.89732, 4.43836", "0.817831, -6.95825, -2.53075, 5.9106", "0.721777, -5.94268, -2.16418, 7.4154", "0.625724, -4.9271, -1.79761, 8.65317", "0.52967, -3.91152, -1.43104, 9.36003", "0.433616, -2.89594, -1.06447, 10.0585", "0.337563, -1.88037, -0.697906, 10.4351", "0.241509, -0.864787, -0.331337, 10.6941", "0.145456, 0.150791, 0.0352311, 10.9531", "0.0494021, 1.16637, 0.4018, 11.2338", "-0.0466515, 2.18195, 0.768368, 11.5118", "-0.142705, 3.19752, 1.13494, 11.7095", "-0.238759, 4.2131, 1.5015, 10.7536", "-0.334812, 5.22868, 1.86807, 9.97", "-0.430866, 6.24426, 2.23464, 9.36435", "-0.526919, 7.25984, 2.60121, 8.19972", "-0.622973, 8.27541, 2.96778, 6.07377", "-0.719027, 9.29099, 3.33435, 3.38096", "-0.81508, 10.3066, 3.70092, 2.12602" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.00111, -9.59314, -3.03985, 2.66", "1.25626, -13.9103, -3.39507, 2.66", "1.53538, -18.6328, -3.78366, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995461318083
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.84111, 9.45687, 0.260152, 2.66", "4.02495, 10.1105, 5.16272, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995461318083
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.81508, 10.3066, 3.70092, 0.66", "-2.22748, 25.24, 3.70092, 0.66", "-3.63987, 40.1733, 3.70092, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "1.53538, -18.6328, -3.78366, 2.66", "1.82935, -19.0528, -1.77676, 2.66" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "1.53538, -18.6328, -3.78366, 0.66", "4.6387, -21.3518, -3.99494, 0.66", "8.31747, -24.575, -4.2454, 0.66", "11.238, -27.1339, -4.44424, 0.66" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.02495, 10.1105, 5.16272, 1.99", "8.13662, 15.6142, 3.06987, 1.99", "10.9764, 19.4154, 1.6244, 1.99", "13.4505, 22.727, 0.365105, 1.99", "16.3834, 26.6528, -1.12779, 1.99", "19.5629, 30.9087, -2.74616, 1.99", "21.883, 34.0142, -3.92708, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.02495, 10.1105, 5.16272, 1.33", "4.10525, 17.6326, 7.64737, 1.33", "4.29288, 23.4966, 9.62721, 1.33", "4.60696, 28.5936, 11.2436, 1.33", "4.99031, 34.1167, 12.7488, 0.66", "5.28457, 37.2533, 13.5059, 0.66", "5.73771, 42.0933, 14.4238, 0.66", "6.00659, 44.5934, 14.8184, 0.66", "6.50023, 48.7999, 15.1185, 0.66", "7.73807, 56.9866, 15.4534, 0.66", "8.25108, 60.4178, 15.5506, 0.66", "8.96055, 65.8884, 15.7305, 0.66", "9.25327, 68.7127, 15.8307, 0.66", "9.59233, 72.1515, 15.9419, 0.66", "10.035, 77.6311, 16.2288, 0.66", "10.3133, 80.4759, 16.4296, 0.66", "10.669, 84.561, 16.8531, 0.66", "10.9479, 88.5185, 17.4632, 0.66", "11.103, 91.4907, 17.9447, 0.66", "11.333, 94.4517, 18.4339, 0.66", "11.8424, 99.9034, 19.4358, 0.66", "12.3803, 103.85, 20.3027, 0.66", "12.9795, 107.44, 21.3456, 0.66", "13.5584, 109.81, 22.1251, 0.66", "14.1366, 112.015, 22.898, 0.66", "14.998, 114.731, 23.8654, 0.66", "15.9594, 117.428, 24.8624, 0.66", "17.5512, 121.143, 26.0978, 0.66", "19.5845, 125.543, 27.4698, 0.66", "20.9546, 128.668, 28.4246, 0.66", "21.6785, 130.464, 28.9137, 0.33", "22.1424, 131.616, 29.1649, 0.66", "23.3103, 134.693, 29.7745, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.63987, 40.1733, 3.70092, 0.33", "-5.05227, 55.1067, 3.70092, 0.33", "-6.46467, 70.04, 3.70092, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "1.82935, -19.0528, -1.77676, 2.0", "0.238654, -21.7232, -8.02028, 2.0" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "1.82935, -19.0528, -1.77676, 0.66", "2.02053, -23.6967, 1.61413, 0.66", "2.12226, -26.7844, 3.71254, 0.66", "2.13382, -28.9905, 4.96244, 0.66", "2.07879, -35.7093, 9.45732, 0.66", "2.1441, -37.7218, 10.9835, 0.66", "2.26395, -40.1178, 12.8865, 0.33", "2.3062, -41.1085, 13.7148, 0.66", "2.42584, -44.0156, 16.1915, 0.66", "3.17804, -51.5077, 22.2834, 0.66", "3.53989, -55.3775, 24.9015, 0.33", "3.58428, -56.1211, 25.3504, 0.66", "3.70873, -58.9524, 27.0321, 0.66", "3.8584, -61.4076, 28.4021, 0.33", "3.92508, -62.5241, 28.9767, 0.66", "3.98357, -67.1401, 30.3334, 0.33", "3.82788, -71.3535, 31.3986, 0.66", "3.67713, -75.6794, 32.5785, 0.33", "3.64501, -76.513, 32.8369, 0.66" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "11.238, -27.1339, -4.44424, 0.66", "13.7912, -27.1271, -6.78569, 0.66", "16.3358, -27.207, -9.21151, 0.66", "21.799, -27.5782, -14.3353, 0.66", "25.1786, -27.7126, -17.143, 0.66", "28.7217, -27.8496, -19.8259, 0.66", "31.7707, -27.9458, -22.0174, 0.66", "34.5491, -28.1958, -23.795, 0.66", "38.2779, -28.6548, -25.9991, 0.66", "43.2381, -29.2044, -28.5103, 0.66", "45.5295, -29.4528, -29.7214, 0.66", "47.2916, -29.6253, -30.7289, 0.33", "51.4795, -29.9734, -32.9412, 0.66", "54.6602, -30.2352, -34.5367, 0.66", "56.3021, -30.3768, -35.3919, 0.66", "58.1447, -30.5303, -36.4293, 0.33", "59.9501, -30.5682, -37.5384, 0.66", "62.1232, -30.526, -39.0908, 0.66", "64.0933, -30.4168, -40.7479, 0.33", "65.1368, -30.3489, -41.5851, 0.66", "66.8576, -30.2634, -43.0618, 0.33", "69.5914, -30.1235, -45.6348, 0.66", "72.5606, -30.1044, -48.4471, 0.66", "73.7082, -30.1624, -49.5906, 0.33", "76.3786, -30.3739, -52.2956, 0.66", "79.5313, -30.7096, -55.493, 0.33", "81.0402, -31.0002, -57.0754, 1.33", "82.6596, -31.4302, -58.6866, 0.66", "83.9058, -31.8702, -59.8189, 0.33", "84.6383, -32.199, -60.4796, 0.66", "85.5681, -32.7977, -61.4249, 0.33", "87.7129, -34.528, -63.5928, 1.33", "88.4892, -35.1725, -64.4074, 0.66", "90.8283, -37.0668, -66.8961, 0.33", "91.1906, -37.3446, -67.3684, 0.33", "92.8014, -38.5947, -69.5541, 0.66", "94.3251, -39.8222, -71.6938, 0.33", "95.4018, -40.6184, -73.191, 1.33", "96.834, -41.6355, -75.5166, 0.33", "99.3259, -43.2598, -80.646, 0.66" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "11.238, -27.1339, -4.44424, 0.66", "13.0931, -28.5219, -2.81006, 0.66", "14.3687, -29.5531, -1.23502, 0.66", "14.8253, -29.9323, -0.652024, 0.66", "16.4615, -31.2968, 1.43457, 0.66", "18.7621, -33.3597, 4.70852, 0.66", "19.0917, -33.6616, 5.20382, 1.33", "20.824, -35.4435, 8.35658, 0.33", "21.4502, -35.9317, 9.40571, 0.33", "21.5967, -36.0343, 9.6443, 0.66", "22.8116, -36.7281, 11.4076, 0.33", "24.0171, -37.2639, 13.0057, 0.66", "24.9631, -37.5746, 14.0985, 0.66", "29.8786, -38.5004, 18.6117, 0.66" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "21.883, 34.0142, -3.92708, 1.33", "28.1674, 34.9869, -7.98784, 1.33", "31.7946, 35.5483, -10.3316, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "21.883, 34.0142, -3.92708, 1.33", "27.4441, 35.1418, -14.9316, 1.33", "30.8731, 35.8372, -21.7169, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "0.238654, -21.7232, -8.02028, 0.66", "0.679674, -21.0671, -10.1179, 0.66", "0.944386, -20.5687, -11.6681, 0.66", "1.89427, -18.4645, -19.8395, 0.66", "1.82183, -17.2715, -26.7317, 0.66", "1.6342, -16.9888, -29.8926, 0.66", "1.38486, -16.7418, -33.4101, 0.66", "0.847977, -16.6178, -40.1642, 0.66", "0.292958, -16.8204, -44.8479, 0.66", "-1.69229, -17.8107, -56.0825, 0.66", "-3.31501, -18.5977, -64.2802, 0.66", "-3.76111, -18.9041, -66.4426, 0.66", "-4.36948, -19.4831, -69.3744, 0.66", "-6.04985, -21.3501, -78.1812, 0.66", "-7.46509, -23.564, -88.9126, 0.66", "-7.5347, -24.2202, -92.8826, 0.66", "-7.54738, -24.6682, -97.4294, 0.66", "-7.50293, -24.9328, -100.459, 0.66", "-7.0061, -25.9565, -112.997, 0.66", "-6.87539, -26.1296, -114.965, 0.66", "-5.93091, -27.4785, -129.299, 0.66", "-5.13602, -28.3421, -138.928, 0.33", "-5.03435, -28.407, -139.911, 1.33", "-4.75045, -28.5379, -141.807, 0.66", "-3.32735, -29.1848, -148.873, 0.33", "-2.37694, -29.5253, -152.607, 1.33", "-1.48103, -29.868, -154.805, 0.33", "-0.892563, -30.0657, -155.957, 0.66", "1.25894, -30.6565, -160.942, 0.33", "1.68895, -30.791, -162.186, 1.33", "2.24044, -30.9433, -163.731, 0.66", "3.22153, -31.158, -166.543, 0.33", "4.26099, -31.3723, -169.721, 1.33", "7.22353, -31.8088, -179.876, 0.33", "8.71661, -32.0216, -186.449, 0.33", "9.37653, -32.1653, -189.588, 0.33", "9.63652, -32.2334, -190.878, 0.33", "9.95799, -32.2625, -192.323, 0.33", "11.6667, -32.2229, -198.342, 0.66", "14.8053, -31.7542, -207.446, 0.33", "15.9276, -31.4514, -210.54, 0.33", "17.0007, -31.0731, -213.802, 0.66", "19.3911, -30.1069, -221.049, 0.33", "20.2621, -29.6825, -223.544, 0.66", "21.0861, -29.2404, -225.405, 0.33", "21.2894, -29.089, -225.79, 0.66", "23.9751, -26.2459, -232.54, 0.33", "24.3457, -25.7658, -233.796, 0.66" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "0.238654, -21.7232, -8.02028, 1.33", "-0.383671, -24.4897, -10.5077, 1.33", "-1.37686, -28.9047, -14.4775, 1.99" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "31.7946, 35.5483, -10.3316, 1.33", "34.3494, 35.9057, -7.81591, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "31.7946, 35.5483, -10.3316, 0.66", "32.2092, 36.6015, -11.0077, 0.66", "32.6154, 37.5139, -11.5612, 0.66", "33.0985, 38.6471, -12.0911, 0.66", "33.8434, 40.3453, -12.7474, 0.66", "35.2547, 43.5038, -13.759, 0.66", "35.8308, 44.7192, -14.0834, 0.66", "36.4201, 45.893, -14.3044, 0.66", "37.4285, 47.7317, -14.6146, 0.66", "37.8474, 48.4659, -14.7029, 0.66", "38.61, 49.7887, -14.7894, 0.66", "39.1827, 50.9274, -14.8182, 0.66", "40.6253, 53.8117, -15.1878, 0.66", "41.7958, 56.1822, -15.6894, 0.66", "42.5415, 57.7657, -16.1566, 0.66", "43.2275, 59.294, -16.6525, 0.66", "43.9313, 60.8444, -17.2408, 0.66", "45.1813, 63.7012, -18.3829, 0.66", "45.8364, 65.1661, -18.9747, 0.66", "46.8885, 67.5704, -19.8852, 0.66", "47.4372, 68.763, -20.3314, 0.33", "48.2798, 70.5658, -20.9329, 0.66", "48.873, 71.7644, -21.2402, 0.66", "49.4637, 72.9627, -21.4052, 0.66", "49.9773, 73.9941, -21.5596, 0.33", "50.4791, 74.9722, -21.6872, 0.66", "50.9256, 75.8853, -21.8061, 0.33", "51.2933, 76.6449, -21.8882, 0.66", "52.0859, 78.2115, -22.2114, 0.33", "52.6424, 79.3693, -22.5142, 0.66", "53.2974, 80.6848, -22.8948, 0.66", "53.657, 81.3261, -23.0879, 0.33", "54.0289, 81.9664, -23.2596, 0.33", "54.7825, 83.2462, -23.5503, 0.66", "55.2772, 84.1328, -23.691, 0.33", "55.6465, 84.7136, -23.7209, 0.33", "56.2534, 85.7444, -23.7709, 0.66", "57.1099, 87.2706, -23.9118, 0.66", "57.3751, 87.8013, -23.9976, 0.66", "58.1612, 89.7208, -24.3336, 0.66", "58.5139, 91.0011, -24.5533, 0.66", "58.9218, 93.5009, -25.0852, 0.66", "59.0693, 95.5544, -25.588, 0.66", "59.1068, 97.3938, -26.0224, 0.33", "59.0648, 99.0321, -26.3784, 0.66", "58.8847, 101.605, -26.8693, 0.33", "58.764, 103.151, -27.0684, 0.66", "58.6926, 104.772, -27.1019, 0.66", "58.6786, 106.664, -26.9833, 0.33", "58.7521, 107.467, -26.8998, 0.66", "58.8312, 108.045, -26.7725, 0.66", "59.159, 109.75, -26.1691, 0.33", "59.3212, 110.527, -25.7887, 0.66", "59.5608, 111.519, -25.2032, 0.33", "59.7954, 112.335, -24.6771, 0.66", "60.8772, 115.595, -22.4824, 0.66", "61.2474, 116.556, -21.8311, 0.33", "61.6464, 117.435, -21.2203, 0.33", "61.8729, 117.956, -20.8508, 0.66", "62.1991, 118.705, -20.32, 0.33", "62.5233, 119.465, -19.8512, 0.33", "62.8665, 120.318, -19.4039, 0.33", "62.9068, 120.474, -19.3034, 0.66", "63.2548, 122.37, -18.0059, 0.33", "63.3247, 122.937, -17.6261, 0.33", "63.3622, 123.252, -17.4202, 0.66", "63.7168, 125.235, -16.1725, 0.33", "63.7558, 125.403, -16.0808, 0.66", "64.2458, 126.759, -15.48, 0.33", "64.4605, 127.231, -15.3363, 0.66", "65.2323, 129.071, -14.7413, 0.33", "65.7143, 130.039, -14.5165, 0.33", "66.1839, 130.906, -14.3907, 0.33", "67.3276, 133.194, -14.0779, 0.66", "68.4306, 135.452, -13.7761, 0.66", "69.809, 138.444, -13.4198, 0.66", "71.3866, 142.013, -13.1953, 0.66", "72.1046, 143.666, -13.2026, 0.33", "73.6842, 147.421, -13.2901, 0.66", "73.9705, 148.127, -13.3411, 0.66", "74.3823, 149.117, -13.464, 0.66", "75.2783, 151.231, -13.9313, 0.66", "75.885, 153.337, -14.1793, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "30.8731, 35.8372, -21.7169, 0.66", "32.1956, 36.7075, -22.8711, 0.66", "33.5358, 37.452, -24.0712, 0.66", "35.7559, 38.6111, -26.2484, 0.66", "39.9512, 40.5147, -30.5546, 0.66", "41.348, 41.1198, -32.0836, 0.66", "44.2553, 42.3653, -35.3669, 0.66", "46.4209, 43.1613, -37.9966, 0.66", "47.543, 43.4561, -39.3066, 0.66", "51.4846, 44.1869, -43.7199, 0.66", "52.4129, 44.4006, -44.7261, 0.66", "53.6613, 44.7095, -46.0949, 0.66", "54.5043, 44.951, -46.9591, 0.33", "59.222, 46.5113, -51.4161, 0.66", "60.226, 46.8932, -52.2513, 1.33", "61.9177, 47.6513, -53.5959, 0.33", "62.649, 47.9986, -54.1788, 0.66", "65.3108, 49.4411, -56.4247, 0.33", "66.9004, 50.4044, -57.784, 1.33", "69.9313, 52.4866, -60.7271, 0.66", "70.8257, 53.014, -61.659, 0.66", "72.5226, 53.8819, -63.5324, 0.66", "73.4546, 54.2706, -64.6299, 0.66", "75.6805, 55.0755, -67.3862, 0.66", "77.6308, 55.7072, -69.9198, 0.66", "80.1664, 56.6231, -73.4387, 0.33", "80.7527, 56.842, -74.2332, 0.66", "83.8177, 57.9999, -78.3018, 0.33", "84.5107, 58.2804, -79.2067, 0.33", "85.5798, 58.8623, -80.7306, 1.33", "86.6657, 59.5034, -82.2768, 0.33", "87.2586, 59.8836, -83.1167, 0.66", "90.4148, 61.9487, -87.662, 0.33", "91.0962, 62.5, -88.7353, 0.33", "92.2736, 63.4748, -90.6483, 0.66", "96.0448, 65.9614, -95.8032, 0.33", "96.862, 66.4467, -96.8082, 0.33", "98.6808, 67.4487, -98.8879, 0.66", "100.67, 68.5008, -101.04, 0.33", "102.635, 69.3719, -103.016, 0.66", "108.039, 71.4833, -108.08, 0.33", "109.707, 72.095, -109.652, 0.66", "112.195, 72.948, -112.15, 0.33", "112.962, 73.1776, -112.921, 0.66", "115.565, 74.0014, -115.66, 0.66", "117.776, 74.9151, -118.185, 0.33", "119.827, 75.8465, -120.635, 0.66", "121.8, 76.6824, -122.944, 0.66", "125.58, 78.0342, -127.193, 0.66", "127.592, 78.6848, -129.451, 0.33", "129.917, 79.3366, -132.049, 0.66", "137.451, 81.5194, -140.304, 0.66", "139.284, 81.9863, -142.244, 0.66", "143.276, 82.9293, -146.565, 0.33", "144.355, 83.1603, -147.734, 0.66", "148.09, 83.8912, -151.796, 0.33", "150.757, 84.4751, -154.858, 0.66", "156.305, 85.5942, -161.608, 0.66", "158.067, 85.8938, -163.76, 1.99", "163.763, 86.6952, -170.816, 0.66", "165.247, 86.8872, -172.653, 0.66", "166.507, 87.0503, -174.257, 0.66", "174.503, 87.8709, -184.174, 0.66", "177.218, 88.2184, -187.485, 0.33", "179.392, 88.4109, -190.009, 0.66", "181.074, 88.5533, -192.071, 0.66", "183.169, 88.7026, -194.645, 0.66", "188.666, 89.105, -201.394, 0.66", "193.642, 89.5629, -207.656, 0.66", "204.067, 90.2682, -220.883, 0.33", "206.853, 90.3733, -224.413, 0.33", "211.402, 90.3328, -230.195, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "30.8731, 35.8372, -21.7169, 0.66", "31.7548, 37.2427, -24.3565, 0.66", "32.2635, 38.0395, -26.1837, 0.66", "32.9644, 39.1934, -28.7608, 0.66", "33.3766, 40.0153, -30.4984, 0.66", "33.5777, 40.4078, -31.3188, 0.66", "34.2795, 41.8374, -34.5365, 0.66", "34.9074, 43.1173, -38.0454, 0.66", "35.0778, 43.4701, -39.1123, 0.66", "35.5865, 44.7174, -42.324, 0.66", "35.8541, 45.8279, -44.9363, 0.66", "36.0338, 47.4811, -48.2075, 0.66", "36.0471, 48.8056, -50.3085, 0.66", "35.9423, 49.7085, -51.4528, 0.66", "35.2978, 52.6643, -54.5771, 0.66", "34.7857, 54.495, -55.9225, 0.66", "33.9162, 57.2363, -57.5591, 0.66", "33.4007, 58.8386, -58.3008, 0.66", "32.0303, 62.871, -59.8497, 0.66", "31.4724, 64.3764, -60.3642, 0.66", "29.9732, 67.8925, -61.2797, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "-1.37686, -28.9047, -14.4775, 1.33", "-2.89353, -34.033, -13.9107, 1.33", "-3.6036, -36.3364, -15.2, 1.33", "-3.63152, -36.4837, -15.2907, 1.33", "-3.97582, -38.4955, -16.4603, 0.66", "-4.19542, -40.1035, -17.3197, 0.66", "-4.5195, -42.2038, -18.3061, 0.66", "-5.86854, -52.4477, -22.8906, 0.66", "-6.34605, -56.2393, -24.3057, 0.66", "-6.53329, -58.8724, -25.0313, 0.66", "-6.67859, -61.4247, -25.5475, 0.66", "-6.93729, -66.0362, -26.3672, 0.66", "-7.17927, -71.1793, -27.0863, 0.66", "-7.37525, -74.1427, -27.2779, 0.66", "-7.83801, -81.3264, -27.8447, 0.66", "-8.09884, -85.1035, -28.1196, 0.66", "-8.5983, -92.7943, -28.72, 0.66", "-8.70941, -96.0549, -28.9869, 0.66", "-8.80739, -102.103, -29.6395, 0.66", "-8.83149, -106.43, -30.1742, 0.66", "-8.83589, -111.323, -30.9344, 0.66", "-8.70346, -116.752, -31.7289, 0.66", "-8.6017, -120.003, -32.1244, 0.66", "-8.4701, -127.105, -33.0084, 0.66", "-8.38528, -130.905, -33.4469, 0.66", "-8.2952, -135.928, -34.0613, 0.66", "-8.12666, -142.736, -34.9245, 0.66", "-8.13778, -145.738, -35.2316, 0.66", "-8.33389, -152.402, -35.744, 0.66", "-8.61389, -161.618, -35.8996, 0.66" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-1.37686, -28.9047, -14.4775, 1.33", "-2.95018, -29.7048, -12.6358, 1.33", "-7.03494, -31.7822, -7.85438, 1.33" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "34.3494, 35.9057, -7.81591, 1.33", "37.2504, 37.6708, -9.07681, 1.33", "38.0707, 38.1439, -9.34166, 1.33", "39.5694, 38.9754, -9.60443, 1.33", "41.479, 40.0526, -9.76916, 1.33", "44.293, 41.6057, -9.80242, 1.33", "48.7574, 43.8262, -9.41538, 1.33", "51.3021, 45.0164, -8.81477, 1.33", "53.9013, 46.2345, -7.91345, 0.66", "55.3232, 46.8032, -7.3476, 0.66", "58.8584, 48.0496, -6.09799, 0.66", "63.2079, 49.4927, -4.41121, 0.66", "65.8242, 50.3554, -3.35677, 0.66", "70.7018, 51.8973, -1.6623, 0.66", "77.2113, 53.8461, 0.338663, 0.66", "82.9565, 55.4323, 2.03114, 0.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "34.3494, 35.9057, -7.81591, 0.66", "37.2371, 34.0425, -4.56368, 0.66", "39.1694, 32.9597, -2.54656, 0.66", "41.9889, 31.5871, 0.174932, 0.66", "42.9333, 31.1546, 1.02423, 0.66", "44.2567, 30.542, 2.2663, 0.66", "45.9338, 29.7495, 3.98064, 0.66", "48.5418, 28.7272, 6.654, 0.66", "49.3758, 28.419, 7.46575, 0.33", "50.0086, 28.197, 8.06104, 0.66", "53.777, 26.9397, 11.7735, 0.66", "56.1744, 26.1959, 14.3043, 0.66", "57.2458, 25.8644, 15.4874, 0.66", "58.4387, 25.6023, 16.6942, 0.66", "59.4253, 25.5816, 17.6875, 0.33", "59.787, 25.6196, 18.0327, 0.66", "60.4671, 25.9195, 18.4719, 0.33", "60.8317, 26.1561, 18.6806, 0.66", "62.4527, 27.3982, 19.8791, 0.33", "64.2907, 29.3507, 21.3899, 0.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "75.885, 153.337, -14.1793, 0.33", "75.972, 154.326, -17.1847, 0.33", "76.0152, 154.818, -18.678, 0.66", "76.1234, 156.048, -22.4171, 0.33", "76.2017, 156.939, -25.1234, 0.66", "76.3679, 158.83, -30.8674, 0.33", "76.4401, 159.65, -33.3599, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "75.885, 153.337, -14.1793, 0.33", "75.569, 153.911, -15.5014, 0.33", "75.2356, 154.516, -16.8961, 0.66", "74.407, 156.021, -20.3621, 0.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "29.9732, 67.8925, -61.2797, 0.66", "30.5986, 70.8434, -67.7137, 0.66", "31.4668, 73.7405, -75.9522, 0.66", "31.8679, 76.2283, -83.0398, 0.66", "31.8946, 77.1042, -85.5451, 0.66", "31.7499, 78.7376, -89.9324, 0.66", "31.6243, 79.4488, -91.921, 0.66", "30.7566, 82.7552, -100.949, 0.66", "29.4316, 85.5247, -107.858, 0.66", "28.9599, 86.38, -110.241, 0.66", "27.6469, 88.6102, -116.414, 0.66", "26.1285, 91.2845, -123.325, 0.66", "25.1316, 93.2796, -128.402, 0.66", "24.0195, 95.8959, -134.927, 0.66", "23.02, 99.0901, -144.175, 0.33", "22.8661, 100.248, -147.887, 0.66", "22.8995, 100.564, -149.12, 0.66", "23.6565, 102.262, -157.264, 0.66", "24.5415, 102.989, -162.083, 0.33", "24.9533, 103.205, -163.822, 0.66", "26.6421, 104.1, -170.59, 0.33", "27.6273, 104.435, -174.112, 1.33", "30.1707, 105.319, -183.073, 0.33", "32.2003, 106.031, -189.826, 0.33", "32.6545, 106.162, -191.24, 0.66", "34.3121, 106.449, -196.117, 0.33", "36.7372, 106.8, -203.25, 0.66", "37.6432, 106.956, -205.852, 0.33", "38.7028, 107.173, -208.859, 0.66", "40.7319, 107.728, -215.111, 0.33", "42.1021, 108.415, -219.112, 0.66", "42.8293, 109.121, -221.154, 0.33", "43.4986, 110.416, -223.101, 0.66", "44.1086, 112.143, -224.755, 0.33", "44.6657, 115.116, -226.12, 0.66", "45.2943, 120.812, -227.4, 0.33", "45.5829, 124.229, -227.686, 0.66", "45.7031, 128.117, -227.538, 0.33", "45.6826, 129.337, -227.433, 0.66", "45.3968, 134.028, -227.081, 0.33", "45.1876, 135.551, -227.01, 0.66", "44.5385, 139.597, -226.873, 0.33", "42.7319, 149.553, -226.694, 0.66", "41.7699, 154.097, -226.668, 0.33", "39.9432, 162.135, -226.883, 0.33", "38.7183, 166.801, -227.221, 0.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "29.9732, 67.8925, -61.2797, 0.33", "30.2162, 70.5606, -62.6585, 0.33", "30.4558, 72.5202, -63.5519, 0.33", "30.5887, 73.6199, -64.0359, 0.66", "30.8963, 76.4318, -65.2639, 0.33", "30.9918, 77.4694, -65.7237, 0.66", "31.0181, 78.9614, -66.2488, 0.33", "30.934, 82.2786, -67.2481, 0.33", "30.8582, 83.3129, -67.5539, 0.66", "30.6241, 85.1183, -68.1084, 0.33", "30.4911, 85.934, -68.3555, 0.66", "29.9572, 90.5337, -69.8399, 0.33", "29.6592, 92.647, -70.5185, 1.33", "29.3068, 94.8375, -71.2554, 0.33", "29.1843, 95.6326, -71.5426, 0.66", "28.6219, 99.5391, -73.0638, 0.33", "28.1968, 102.745, -74.5716, 0.66", "27.5881, 107.167, -76.9624, 0.66", "27.3293, 109.01, -77.8431, 0.66", "26.9291, 112.196, -79.2877, 0.66", "26.6599, 114.435, -80.2289, 0.33", "26.2126, 118.053, -81.6999, 0.66", "25.787, 122.688, -83.4149, 0.66", "25.3062, 130.032, -85.5682, 0.33", "25.2259, 131.207, -85.8409, 0.66", "25.0293, 135.618, -86.6155, 0.33", "24.8515, 139.936, -87.2248, 0.33", "24.8113, 141.509, -87.3915, 0.66", "24.9679, 148.6, -88.404, 0.33", "25.0521, 149.659, -88.6265, 0.66", "25.5202, 153.873, -89.5086, 0.33", "25.7644, 155.709, -89.9342, 0.33", "26.3624, 159.092, -90.7229, 0.66", "27.2845, 163.767, -91.9713, 0.66", "28.2805, 168.07, -93.2448, 0.66", "29.0637, 172.021, -94.2975, 0.33", "29.275, 173.49, -94.6644, 0.33", "29.6886, 177.946, -95.771, 0.33", "29.6331, 179.061, -96.0333, 0.66", "29.3474, 181.157, -96.6261, 0.33", "29.139, 182.218, -97.0183, 0.66", "28.695, 184.447, -98.0778, 0.33", "28.2854, 186.415, -99.0224, 1.99", "27.0953, 190.512, -101.248, 0.33", "26.2742, 193.911, -103.093, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "-8.61389, -161.618, -35.8996, 0.33", "-9.16234, -164.469, -36.7659, 0.33", "-9.25146, -165.165, -36.8194, 0.66", "-9.42853, -166.444, -36.7691, 0.33", "-9.46969, -166.765, -36.7463, 0.66", "-10.0709, -171.271, -36.5781, 0.66", "-10.2712, -173.463, -36.6829, 0.33", "-10.5822, -178.249, -37.303, 0.66", "-10.8726, -183.377, -38.0477, 0.66", "-10.964, -185.468, -38.3562, 0.66", "-11.2736, -191.932, -39.1627, 0.66", "-11.5596, -198.333, -39.8584, 0.66", "-11.7211, -201.365, -40.2275, 0.66", "-11.9993, -205.586, -40.7443, 0.66", "-12.3231, -209.368, -41.1015, 0.66", "-12.7986, -214.156, -41.3415, 0.66", "-13.3703, -218.625, -41.3341, 0.66", "-13.9154, -222.035, -41.1353, 0.66", "-15.0421, -228.367, -40.7002, 0.66", "-15.7833, -232.441, -40.3501, 0.66", "-16.6992, -237.139, -39.8811, 0.66", "-17.5328, -241.503, -39.4073, 0.66", "-18.8114, -247.986, -38.603, 0.66", "-19.7476, -252.917, -37.9816, 0.66", "-20.6265, -258.284, -37.4434, 0.66", "-21.1542, -262.027, -37.101, 0.66", "-21.5531, -265.8, -36.8664, 0.66", "-21.838, -270.567, -36.6912, 0.66", "-22.0601, -275.157, -36.7943, 0.66", "-22.2662, -280.121, -37.1614, 0.66", "-22.4216, -284.312, -37.6783, 0.66", "-22.6357, -289.704, -38.4103, 0.66", "-22.9636, -294.932, -39.1312, 0.66", "-23.2792, -299.485, -39.726, 0.66", "-23.6069, -303.148, -40.1652, 0.66", "-23.8742, -305.404, -40.4048, 0.66", "-24.6737, -311.623, -41.3606, 0.66", "-25.6188, -318.546, -42.6962, 0.66", "-25.8869, -320.921, -43.2718, 0.33", "-26.0207, -322.448, -43.6578, 0.33", "-26.2766, -325.224, -44.3862, 0.66", "-26.7663, -330.514, -45.8873, 0.66", "-27.2646, -336.916, -47.8486, 0.66", "-27.4265, -338.944, -48.4695, 0.33", "-27.6772, -341.686, -49.1283, 0.33", "-27.8982, -344.628, -49.716, 0.66", "-28.0229, -346.611, -50.0872, 0.66", "-28.1766, -349.105, -50.4874, 0.33", "-28.2884, -350.788, -50.7513, 0.66", "-29.8175, -373.641, -54.2694, 0.66", "-29.9438, -375.453, -54.5654, 0.33", "-30.2713, -380.794, -55.5449, 0.66", "-30.3937, -382.675, -55.9064, 0.33", "-30.457, -383.792, -56.1166, 0.66", "-30.6122, -386.457, -56.5807, 0.33", "-30.7164, -387.718, -56.7241, 0.66", "-31.4693, -392.163, -57.2076, 0.33", "-31.7902, -393.54, -57.3057, 0.33", "-33.3402, -399.409, -57.714, 0.66", "-34.2368, -402.818, -57.8954, 0.66", "-34.9517, -405.568, -58.0033, 0.66", "-36.2835, -410.646, -58.0024, 0.66", "-37.427, -415.16, -57.8198, 0.66", "-38.0817, -418.299, -57.6438, 0.66", "-38.722, -422.027, -57.3714, 0.33", "-38.7975, -423.027, -57.2778, 0.66", "-38.7326, -425.925, -56.9765, 0.66", "-38.4515, -428.283, -56.6189, 0.66", "-38.0697, -430.93, -56.1678, 0.33", "-37.9624, -431.614, -56.0312, 0.66", "-37.5017, -434.873, -55.4199, 0.66", "-37.0093, -438.897, -54.7509, 0.66", "-36.7149, -442.281, -54.2868, 0.66", "-36.7083, -443.573, -54.1314, 0.66", "-36.873, -446.276, -53.9122, 0.33", "-37.0945, -448.384, -53.8162, 0.66", "-37.3277, -450.276, -53.9533, 0.33", "-37.5471, -452.126, -54.3097, 0.66", "-37.7987, -454.145, -54.8926, 0.33", "-38.276, -457.929, -56.0712, 0.33", "-38.367, -458.593, -56.2892, 0.66", "-38.8178, -462.756, -57.531, 0.33", "-38.9996, -465.2, -58.2282, 0.33", "-39.0275, -465.641, -58.2976, 0.66", "-39.0989, -467.338, -58.3222, 0.33", "-39.1432, -467.961, -58.229, 0.66", "-39.2293, -469.655, -57.8737, 0.33", "-39.3309, -471.506, -57.3702, 0.66", "-39.3404, -475.989, -56.4355, 0.33", "-39.3254, -476.981, -56.2823, 0.33", "-39.3148, -477.298, -56.2505, 0.66", "-39.1317, -480.911, -56.0568, 0.33", "-38.9925, -483.107, -56.0651, 0.33", "-38.7301, -486.911, -56.2836, 0.33", "-38.6974, -487.605, -56.3409, 0.66", "-38.7187, -490.3, -56.3726, 0.33", "-38.7187, -490.3, -56.3726, 0.66", "-38.9229, -492.265, -56.0879, 0.33", "-38.9229, -492.265, -56.0879, 0.66", "-38.9372, -494.964, -55.7971, 0.33", "-38.8714, -498.161, -55.5161, 0.33", "-38.8107, -499.501, -55.4246, 0.66", "-38.6897, -502.772, -55.2867, 0.33", "-38.5838, -507.822, -55.344, 0.33", "-38.5881, -508.955, -55.4052, 0.33", "-38.6131, -509.577, -55.4669, 0.66", "-38.7045, -511.274, -55.6436, 0.33", "-38.8949, -513.554, -55.8803, 0.66", "-39.5642, -518.771, -56.6115, 0.33", "-39.9383, -520.312, -56.8034, 0.66", "-40.7256, -523.356, -57.2132, 0.33" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-8.61389, -161.618, -35.8996, 0.66", "-6.30581, -162.782, -36.9679, 0.66", "-3.51191, -164.395, -38.3289, 0.33", "-3.03488, -164.687, -38.5639, 0.66", "2.37159, -168.055, -41.1784, 0.66", "6.9649, -170.974, -43.3019, 0.33", "8.48181, -171.94, -43.8944, 0.33", "10.581, -173.427, -44.6149, 0.33", "11.2504, -173.937, -44.7509, 0.66", "12.5319, -175.018, -44.5785, 0.33", "14.1665, -176.494, -43.9268, 0.66", "17.1578, -179.116, -42.187, 0.33", "19.2009, -180.952, -40.8469, 0.66", "21.3739, -182.809, -39.2858, 0.33", "25.8185, -186.828, -35.6648, 0.66" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-7.03494, -31.7822, -7.85438, 0.66", "-14.5427, -38.1114, -9.11977, 0.66", "-19.0909, -41.8474, -10.0607, 0.66", "-26.9238, -47.9535, -12.3241, 0.66", "-29.3687, -49.7466, -13.1134, 0.66", "-31.3939, -51.1969, -13.7955, 0.66", "-36.7212, -54.8567, -15.861, 0.66", "-39.7902, -56.8196, -17.197, 0.66", "-44.4541, -59.229, -19.612, 0.66", "-46.0865, -60.0602, -20.6276, 0.66", "-48.1949, -61.0633, -21.7767, 0.66", "-52.6454, -63.408, -23.6936, 0.66", "-55.8226, -65.172, -24.7829, 0.66", "-58.5437, -66.8781, -25.5501, 0.66", "-63.839, -70.537, -26.6374, 0.66", "-73.1972, -77.6315, -28.2211, 0.66", "-77.7604, -81.254, -28.6772, 0.66", "-81.1565, -84.1254, -28.836, 0.66", "-84.3431, -87.1748, -28.9766, 0.66", "-85.7366, -88.6808, -29.006, 0.66", "-87.0531, -90.3093, -28.9645, 0.66", "-90.3258, -95.1227, -28.8086, 0.66", "-93.7558, -99.4798, -28.8821, 0.66", "-97.4517, -104.015, -29.3742, 0.66", "-99.7762, -106.762, -30.1365, 0.66", "-102.599, -110.135, -31.4044, 0.66", "-106.914, -115.271, -33.5955, 0.66", "-112.13, -121.695, -36.5675, 0.66", "-118.94, -130.012, -40.8809, 0.66", "-124.557, -136.964, -44.9281, 0.66", "-126.445, -139.527, -46.3839, 0.66", "-130.688, -145.722, -49.9413, 0.66", "-131.705, -147.437, -50.8941, 0.66", "-135.286, -154.652, -54.5606, 0.66", "-137.605, -159.728, -56.6277, 0.66", "-140.59, -166.527, -58.7658, 0.66", "-143.087, -171.928, -60.5327, 0.66", "-144.024, -174.015, -61.276, 0.66", "-145.939, -177.666, -62.6871, 0.33", "-147.361, -179.991, -63.6896, 0.33", "-149.181, -182.418, -65.5359, 0.33", "-150.633, -184.129, -67.236, 1.33", "-151.912, -185.61, -68.7944, 0.66", "-154.928, -188.707, -72.5514, 0.66", "-158.147, -191.534, -76.3737, 0.66", "-164.492, -196.53, -83.8677, 0.33", "-165.472, -197.255, -84.9677, 0.33", "-166.964, -198.255, -86.5399, 0.66", "-170.99, -200.51, -90.3252, 0.33", "-172.861, -201.351, -91.7513, 0.33", "-173.961, -201.733, -92.3408, 0.33", "-177.886, -202.87, -93.6079, 0.33", "-182.427, -203.924, -95.4315, 0.66", "-184.785, -204.332, -96.4661, 0.33", "-185.517, -204.429, -96.797, 0.66", "-187.96, -204.743, -98.0223, 0.33", "-190.654, -205.027, -99.4295, 0.66", "-195.432, -205.628, -102.337, 0.33", "-196.907, -205.915, -103.204, 0.66", "-199.034, -206.568, -104.681, 0.33", "-200.31, -207.122, -105.626, 0.33", "-201.288, -207.765, -106.372, 0.66", "-204.733, -211.478, -108.893, 0.33", "-205.531, -212.97, -109.426, 0.66", "-206.726, -216.149, -110.235, 0.33", "-207.376, -218.803, -110.584, 0.33", "-207.777, -221.892, -110.729, 0.33", "-207.908, -223.949, -110.608, 0.33", "-207.951, -225.616, -110.373, 0.66", "-208.076, -226.886, -110.219, 0.33", "-208.548, -229.29, -109.937, 0.66", "-209.191, -231.58, -109.771, 0.66", "-210.774, -236.303, -109.412, 0.33", "-211.289, -237.695, -109.297, 0.66", "-213.135, -242.512, -108.89, 0.33", "-213.674, -243.903, -108.77, 0.66", "-214.729, -246.252, -108.539, 0.33", "-215.353, -247.37, -108.412, 0.66" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-7.03494, -31.7822, -7.85438, 0.66", "-10.2644, -30.9832, -8.56946, 0.66", "-16.2052, -29.5136, -9.8849, 0.66" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "82.9565, 55.4323, 2.03114, 0.33", "91.2747, 54.1431, 8.05237, 0.33", "94.067, 53.6531, 9.62353, 0.33", "94.6594, 53.5494, 9.89771, 0.66", "98.465, 52.9064, 10.9128, 0.33", "100.518, 52.5245, 11.511, 0.66", "102.281, 52.2472, 12.0809, 0.33", "103.422, 52.0953, 12.2547, 0.33", "105.552, 51.8931, 12.8231, 0.33", "109.42, 51.8042, 14.244, 0.66", "114.446, 52.4465, 16.4482, 0.66", "116.744, 52.9823, 17.598, 0.66", "118.575, 53.5431, 18.6008, 0.66", "120.836, 54.3693, 19.9246, 0.66", "122.942, 55.2842, 21.214, 0.66", "127.302, 57.3357, 23.9227, 0.66", "129.764, 58.5793, 25.3827, 0.33", "130.799, 59.0959, 26.0538, 0.66", "132.42, 59.9039, 27.2306, 0.33", "134.187, 60.7124, 28.4141, 0.66", "136.435, 61.6431, 29.9677, 0.33", "138.949, 62.5428, 31.9577, 0.66", "140.702, 63.1248, 33.2773, 0.33", "142.53, 63.8275, 34.5404, 0.33", "146.599, 65.6436, 37.3885, 0.66", "149.961, 67.2839, 39.2825, 0.33", "151.833, 68.333, 39.9718, 1.33", "153.861, 69.3456, 40.1737, 0.33", "156.711, 70.7639, 40.7476, 0.33", "157.481, 71.1116, 40.9695, 0.66", "161.236, 72.6639, 42.3653, 0.66", "162.93, 73.2804, 42.8767, 0.33", "166.496, 74.5983, 43.9403, 0.66", "173.011, 77.0369, 46.6346, 0.33", "174.969, 77.7063, 47.5977, 0.33", "176.173, 78.1185, 48.2671, 0.33", "176.964, 78.3913, 48.8337, 0.66", "179.196, 79.2495, 50.6018, 0.33", "182.079, 80.6729, 53.1416, 0.33", "183.424, 81.4075, 53.7771, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "82.9565, 55.4323, 2.03114, 0.66", "85.2856, 57.2279, 1.86839, 0.66", "87.4545, 59.1296, 1.57883, 0.66", "89.3435, 60.8535, 1.29926, 0.66", "91.7175, 63.0529, 0.802547, 0.66", "93.7958, 65.0558, 0.310558, 0.66", "97.3511, 68.5285, -0.562518, 0.66", "98.8243, 70.0691, -0.995432, 0.66", "100.114, 71.4951, -1.35702, 0.66", "101.9, 73.4605, -1.97703, 0.33", "103.873, 75.7036, -2.7811, 0.66", "104.637, 76.5113, -3.07892, 0.66", "105.355, 77.2462, -3.34667, 0.66", "106.941, 78.8164, -3.8903, 0.66", "108.848, 80.7436, -4.55063, 0.66", "110.109, 82.0004, -4.90168, 0.66", "111.974, 83.7311, -5.56303, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "-40.7256, -523.356, -57.2132, 0.66", "-42.824, -528.84, -58.1649, 0.66", "-43.1198, -532.358, -59.0568, 0.33", "-43.1034, -533.229, -59.3019, 0.66", "-43.0154, -537.918, -60.62, 0.33", "-42.9117, -543.437, -62.1713, 0.33", "-42.8341, -547.574, -63.3344, 1.99", "-41.6277, -558.789, -65.7483, 0.33", "-41.4765, -559.552, -65.9426, 0.66" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "-40.7256, -523.356, -57.2132, 0.33", "-42.1867, -521.561, -57.0899, 0.33", "-42.518, -521.154, -57.0619, 0.66" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-16.2052, -29.5136, -9.8849, 0.66", "-19.6769, -30.6442, -7.97867, 0.66", "-20.7716, -30.9412, -7.39126, 0.66", "-24.0728, -31.8656, -5.66058, 0.66", "-26.5345, -32.6318, -4.42685, 0.66", "-29.0436, -33.4298, -3.22359, 0.66", "-31.5155, -34.2531, -2.07514, 0.66", "-33.2426, -34.9735, -1.21574, 0.66", "-34.4608, -35.6062, -0.508014, 0.66", "-36.863, -37.1769, 1.02936, 0.66", "-38.7162, -38.6184, 2.26865, 0.66", "-39.4466, -39.3091, 2.79554, 0.66", "-42.2728, -42.2975, 4.94136, 0.66", "-44.9141, -45.3284, 6.75926, 0.66", "-47.0597, -47.8488, 8.04068, 0.66", "-48.0044, -49.0022, 8.47267, 0.66", "-49.3168, -50.583, 8.88592, 0.66", "-50.7508, -52.2206, 9.13966, 0.66", "-53.964, -55.6687, 9.34334, 0.66", "-56.9025, -58.7412, 9.37517, 0.66", "-58.7771, -60.7105, 9.53432, 0.66", "-60.5642, -62.7323, 9.80183, 0.33", "-61.1193, -63.3707, 9.93162, 0.66", "-63.5225, -66.3739, 10.7578, 0.66", "-64.463, -67.5879, 11.3184, 0.66", "-66.2701, -69.9352, 12.773, 0.66", "-67.443, -71.527, 13.9077, 0.66", "-68.0673, -72.4212, 14.5773, 0.66", "-69.1754, -73.9823, 15.8169, 0.66", "-70.5677, -75.9196, 17.4009, 0.66", "-72.4769, -78.3241, 19.5455, 0.66" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-16.2052, -29.5136, -9.8849, 0.33", "-18.118, -28.9676, -7.68968, 0.33", "-21.2536, -27.9131, -4.2934, 0.66", "-22.6594, -27.4403, -2.77064, 0.66", "-26.4035, -26.1811, 1.28484, 0.66", "-29.9209, -24.9982, 5.09469, 0.66", "-33.2667, -23.873, 8.71875, 0.66", "-35.312, -23.2938, 11.0004, 0.66" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "111.974, 83.7311, -5.56303, 0.33", "114.176, 84.6779, -4.71072, 0.33", "115.035, 85.0628, -4.37205, 0.33", "115.931, 85.5079, -3.94143, 0.66", "117.383, 86.3698, -3.19277, 0.33", "118.705, 87.2308, -2.44714, 0.33", "119.376, 87.7571, -1.97699, 0.33", "119.984, 88.4159, -1.36839, 0.66", "120.708, 89.3306, -0.489089, 0.66", "121.476, 90.4239, 0.570452, 0.33", "121.764, 90.9163, 1.03543, 0.66", "122.947, 92.8851, 2.85302, 0.33", "123.528, 93.7144, 3.64236, 0.66", "124.303, 94.6237, 4.60479, 0.33", "124.525, 94.8479, 4.85565, 0.66", "126.058, 96.2005, 6.55274, 0.33", "127.395, 97.3289, 8.01135, 0.33", "127.986, 97.7034, 8.54631, 0.66", "129.928, 98.8798, 10.3603, 0.33", "130.728, 99.393, 11.1487, 0.66", "134.153, 101.584, 14.5484, 0.66", "135.971, 102.729, 16.3472, 0.66", "139.561, 105.051, 20.0257, 0.66", "142.284, 106.833, 22.7714, 0.66", "144.269, 108.094, 24.6958, 1.33" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "111.974, 83.7311, -5.56303, 0.33", "113.156, 85.2039, -7.30173, 0.33", "113.627, 85.8412, -7.81266, 0.66", "114.541, 87.0779, -8.61582, 0.33", "115.186, 87.9668, -9.08147, 0.66", "119.304, 93.4602, -11.5752, 0.33", "120.747, 95.4303, -12.3312, 0.33", "123.954, 99.6292, -13.78, 0.66", "125.286, 101.387, -14.2146, 0.33", "126.765, 103.465, -14.5336, 0.66", "127.899, 104.97, -14.602, 0.33", "129.212, 106.625, -14.6345, 0.66", "130.496, 108.291, -14.7941, 0.33", "132.701, 110.928, -15.2341, 0.66", "133.998, 112.407, -15.5167, 0.33", "137.281, 115.975, -16.2986, 0.66", "141.098, 119.857, -17.173, 0.33", "142.091, 120.706, -17.4067, 0.33", "143.583, 121.887, -17.9514, 0.66", "145.204, 123.018, -18.6958, 0.33", "146.157, 123.637, -19.2591, 0.66", "147.985, 124.933, -20.3233, 0.33", "150.309, 126.462, -21.3798, 0.33", "155.908, 130.417, -23.6903, 0.33", "156.552, 130.91, -23.9349, 0.66", "161.324, 134.846, -25.4667, 0.33", "165.287, 138.493, -26.8071, 0.66", "167.905, 141.118, -27.6517, 0.33", "170.072, 143.434, -28.2126, 0.33", "172.319, 145.671, -28.5887, 0.33", "173.51, 146.848, -28.8216, 0.66", "178.048, 151.135, -29.813, 0.33", "179.475, 152.304, -30.1085, 0.66", "181.196, 153.528, -30.1647, 0.66", "184.314, 155.235, -29.7082, 0.33", "184.884, 155.507, -29.5179, 0.66", "187.681, 156.695, -28.2364, 0.66", "193.188, 158.808, -24.5756, 0.66", "197.071, 160.373, -21.7148, 0.33", "197.485, 160.547, -21.3391, 0.66", "200.57, 161.93, -18.1687, 0.33", "200.963, 162.117, -17.7609, 0.66", "204.622, 163.895, -14.0541, 0.33", "208.733, 166.023, -10.2232, 0.66", "214.183, 168.966, -5.40432, 0.33", "214.619, 169.2, -5.02013, 0.66", "216.611, 170.285, -3.26913, 0.33", "218.56, 171.607, -2.0446, 0.33", "220.485, 173.433, -1.89684, 0.33", "221.66, 174.967, -2.45191, 0.66", "222.841, 176.795, -3.82104, 0.33", "223.664, 178.098, -4.93467, 0.66", "227.39, 184.374, -10.697, 0.33", "228.202, 185.598, -11.8177, 0.66", "229.041, 186.687, -12.8671, 0.66", "234.053, 193.121, -19.5601, 0.33", "235.055, 194.359, -20.9432, 0.33", "235.5, 194.835, -21.4987, 0.66", "241.292, 199.689, -26.9383, 0.33", "241.92, 200.148, -27.4572, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-72.4769, -78.3241, 19.5455, 0.66", "-76.3332, -83.647, 21.6037, 0.66", "-77.4439, -85.0519, 22.2172, 0.66", "-78.6189, -86.3873, 22.8531, 0.66", "-80.2, -88.05, 23.6927, 0.66", "-81.6195, -89.4776, 24.419, 0.66", "-82.7296, -90.582, 24.965, 0.33", "-84.4273, -92.0232, 25.6703, 0.66", "-86.5393, -93.859, 26.532, 0.66", "-87.4761, -94.6811, 26.9084, 0.66", "-88.9928, -95.9787, 27.5161, 0.66", "-89.9772, -96.7912, 27.8511, 0.33", "-91.0817, -97.7862, 28.1213, 0.66", "-93.1784, -99.8531, 28.3933, 0.66", "-93.9066, -100.635, 28.4523, 0.66", "-94.4295, -101.199, 28.4997, 0.66", "-96.2576, -103.195, 28.6775, 0.33", "-96.9785, -104.023, 28.7474, 0.33", "-97.1449, -104.225, 28.7599, 0.66", "-98.6117, -106.016, 28.8945, 0.33", "-99.6087, -107.336, 29.0041, 0.66", "-100.102, -107.98, 29.125, 0.33", "-100.696, -108.804, 29.4623, 0.66" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-72.4769, -78.3241, 19.5455, 0.33", "-72.4981, -78.2827, 20.5976, 0.33", "-72.5543, -78.1729, 23.3927, 0.66" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-35.312, -23.2938, 11.0004, 0.66", "-34.5306, -21.518, 9.73274, 0.66" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-35.312, -23.2938, 11.0004, 0.66", "-38.9059, -22.6046, 15.3558, 0.66", "-40.8449, -22.2475, 17.3681, 0.66", "-43.2367, -21.9068, 19.5535, 0.66", "-48.3564, -21.4682, 23.5597, 0.66", "-52.7011, -21.256, 26.3689, 0.66", "-55.7226, -21.1085, 28.3225, 0.33", "-58.7597, -21.0189, 29.9012, 0.66", "-61.677, -20.9803, 31.1828, 0.33", "-65.7835, -21.1983, 32.532, 0.66", "-71.0135, -21.8057, 32.6487, 0.33" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_0", "apic_4", "apic_1", "dend_2", "dend_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_8", "dend_3", "apic_22", "apic_7", "dend_12", "dend_9", "dend_7", "dend_4", "apic_17", "apic_8", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "apic_19", "apic_18", "apic_16", "apic_9", "dend_18", "dend_15", "apic_21", "apic_20", "apic_13", "apic_10", "dend_17", "dend_16", "apic_15", "apic_14", "apic_12", "apic_11" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_0", "apic_4", "apic_1", "dend_2", "dend_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_8", "dend_3", "apic_22", "apic_7", "dend_12", "dend_9", "dend_7", "dend_4", "apic_17", "apic_8", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "apic_19", "apic_18", "apic_16", "apic_9", "dend_18", "dend_15", "apic_21", "apic_20", "apic_13", "apic_10", "dend_17", "dend_16", "apic_15", "apic_14", "apic_12", "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "apic_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "apic_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19", "apic_20", "apic_21", "apic_22" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "dend_0", "axon_0", "axon_0", "apic_4", "apic_1", "apic_1", "apic_1", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_8", "dend_8", "dend_3", "dend_3", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_7", "apic_7", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_8", "apic_8", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_9", "apic_9", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L23_BTC_e051419629_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_22, id: apic_22, parent: apic_6
create apic_22
public apic_22
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_17, id: apic_17, parent: apic_7
create apic_17
public apic_17
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_16, id: apic_16, parent: apic_8
create apic_16
public apic_16
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_13, id: apic_13, parent: apic_9
create apic_13
public apic_13
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_0, axon_0, axon_0, apic_4, apic_1, apic_1, apic_1, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_3, dend_3, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_7, apic_7, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_9, apic_9, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999995461318083)
    connect dend_0(0), soma_0(0.4999995461318083)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_22(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_17(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_16(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_13(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.10599, -10.005, -3.63045, 2.05199 ) }
    soma_0 { pt3dadd( 1.00994, -8.98941, -3.26388, 3.40229 ) }
    soma_0 { pt3dadd( 0.913884, -7.97383, -2.89732, 4.43836 ) }
    soma_0 { pt3dadd( 0.817831, -6.95825, -2.53075, 5.9106 ) }
    soma_0 { pt3dadd( 0.721777, -5.94268, -2.16418, 7.4154 ) }
    soma_0 { pt3dadd( 0.625724, -4.9271, -1.79761, 8.65317 ) }
    soma_0 { pt3dadd( 0.52967, -3.91152, -1.43104, 9.36003 ) }
    soma_0 { pt3dadd( 0.433616, -2.89594, -1.06447, 10.0585 ) }
    soma_0 { pt3dadd( 0.337563, -1.88037, -0.697906, 10.4351 ) }
    soma_0 { pt3dadd( 0.241509, -0.864787, -0.331337, 10.6941 ) }
    soma_0 { pt3dadd( 0.145456, 0.150791, 0.0352311, 10.9531 ) }
    soma_0 { pt3dadd( 0.0494021, 1.16637, 0.4018, 11.2338 ) }
    soma_0 { pt3dadd( -0.0466515, 2.18195, 0.768368, 11.5118 ) }
    soma_0 { pt3dadd( -0.142705, 3.19752, 1.13494, 11.7095 ) }
    soma_0 { pt3dadd( -0.238759, 4.2131, 1.5015, 10.7536 ) }
    soma_0 { pt3dadd( -0.334812, 5.22868, 1.86807, 9.97 ) }
    soma_0 { pt3dadd( -0.430866, 6.24426, 2.23464, 9.36435 ) }
    soma_0 { pt3dadd( -0.526919, 7.25984, 2.60121, 8.19972 ) }
    soma_0 { pt3dadd( -0.622973, 8.27541, 2.96778, 6.07377 ) }
    soma_0 { pt3dadd( -0.719027, 9.29099, 3.33435, 3.38096 ) }
    soma_0 { pt3dadd( -0.81508, 10.3066, 3.70092, 2.12602 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.00111, -9.59314, -3.03985, 2.66 ) }
    apic_0 { pt3dadd( 1.25626, -13.9103, -3.39507, 2.66 ) }
    apic_0 { pt3dadd( 1.53538, -18.6328, -3.78366, 2.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.84111, 9.45687, 0.260152, 2.66 ) }
    dend_0 { pt3dadd( 4.02495, 10.1105, 5.16272, 2.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.81508, 10.3066, 3.70092, 0.66 ) }
    axon_0 { pt3dadd( -2.22748, 25.24, 3.70092, 0.66 ) }
    axon_0 { pt3dadd( -3.63987, 40.1733, 3.70092, 0.66 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 29/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 1.53538, -18.6328, -3.78366, 2.66 ) }
    apic_4 { pt3dadd( 1.82935, -19.0528, -1.77676, 2.66 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 31/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 1.53538, -18.6328, -3.78366, 0.66 ) }
    apic_1 { pt3dadd( 4.6387, -21.3518, -3.99494, 0.66 ) }
    apic_1 { pt3dadd( 8.31747, -24.575, -4.2454, 0.66 ) }
    apic_1 { pt3dadd( 11.238, -27.1339, -4.44424, 0.66 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 35/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.02495, 10.1105, 5.16272, 1.99 ) }
    dend_2 { pt3dadd( 8.13662, 15.6142, 3.06987, 1.99 ) }
    dend_2 { pt3dadd( 10.9764, 19.4154, 1.6244, 1.99 ) }
    dend_2 { pt3dadd( 13.4505, 22.727, 0.365105, 1.99 ) }
    dend_2 { pt3dadd( 16.3834, 26.6528, -1.12779, 1.99 ) }
    dend_2 { pt3dadd( 19.5629, 30.9087, -2.74616, 1.99 ) }
    dend_2 { pt3dadd( 21.883, 34.0142, -3.92708, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 42/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.02495, 10.1105, 5.16272, 1.33 ) }
    dend_1 { pt3dadd( 4.10525, 17.6326, 7.64737, 1.33 ) }
    dend_1 { pt3dadd( 4.29288, 23.4966, 9.62721, 1.33 ) }
    dend_1 { pt3dadd( 4.60696, 28.5936, 11.2436, 1.33 ) }
    dend_1 { pt3dadd( 4.99031, 34.1167, 12.7488, 0.66 ) }
    dend_1 { pt3dadd( 5.28457, 37.2533, 13.5059, 0.66 ) }
    dend_1 { pt3dadd( 5.73771, 42.0933, 14.4238, 0.66 ) }
    dend_1 { pt3dadd( 6.00659, 44.5934, 14.8184, 0.66 ) }
    dend_1 { pt3dadd( 6.50023, 48.7999, 15.1185, 0.66 ) }
    dend_1 { pt3dadd( 7.73807, 56.9866, 15.4534, 0.66 ) }
    dend_1 { pt3dadd( 8.25108, 60.4178, 15.5506, 0.66 ) }
    dend_1 { pt3dadd( 8.96055, 65.8884, 15.7305, 0.66 ) }
    dend_1 { pt3dadd( 9.25327, 68.7127, 15.8307, 0.66 ) }
    dend_1 { pt3dadd( 9.59233, 72.1515, 15.9419, 0.66 ) }
    dend_1 { pt3dadd( 10.035, 77.6311, 16.2288, 0.66 ) }
    dend_1 { pt3dadd( 10.3133, 80.4759, 16.4296, 0.66 ) }
    dend_1 { pt3dadd( 10.669, 84.561, 16.8531, 0.66 ) }
    dend_1 { pt3dadd( 10.9479, 88.5185, 17.4632, 0.66 ) }
    dend_1 { pt3dadd( 11.103, 91.4907, 17.9447, 0.66 ) }
    dend_1 { pt3dadd( 11.333, 94.4517, 18.4339, 0.66 ) }
    dend_1 { pt3dadd( 11.8424, 99.9034, 19.4358, 0.66 ) }
    dend_1 { pt3dadd( 12.3803, 103.85, 20.3027, 0.66 ) }
    dend_1 { pt3dadd( 12.9795, 107.44, 21.3456, 0.66 ) }
    dend_1 { pt3dadd( 13.5584, 109.81, 22.1251, 0.66 ) }
    dend_1 { pt3dadd( 14.1366, 112.015, 22.898, 0.66 ) }
    dend_1 { pt3dadd( 14.998, 114.731, 23.8654, 0.66 ) }
    dend_1 { pt3dadd( 15.9594, 117.428, 24.8624, 0.66 ) }
    dend_1 { pt3dadd( 17.5512, 121.143, 26.0978, 0.66 ) }
    dend_1 { pt3dadd( 19.5845, 125.543, 27.4698, 0.66 ) }
    dend_1 { pt3dadd( 20.9546, 128.668, 28.4246, 0.66 ) }
    dend_1 { pt3dadd( 21.6785, 130.464, 28.9137, 0.33 ) }
    dend_1 { pt3dadd( 22.1424, 131.616, 29.1649, 0.66 ) }
    dend_1 { pt3dadd( 23.3103, 134.693, 29.7745, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 75/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.63987, 40.1733, 3.70092, 0.33 ) }
    axon_1 { pt3dadd( -5.05227, 55.1067, 3.70092, 0.33 ) }
    axon_1 { pt3dadd( -6.46467, 70.04, 3.70092, 0.33 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 78/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 1.82935, -19.0528, -1.77676, 2.0 ) }
    apic_6 { pt3dadd( 0.238654, -21.7232, -8.02028, 2.0 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 80/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 1.82935, -19.0528, -1.77676, 0.66 ) }
    apic_5 { pt3dadd( 2.02053, -23.6967, 1.61413, 0.66 ) }
    apic_5 { pt3dadd( 2.12226, -26.7844, 3.71254, 0.66 ) }
    apic_5 { pt3dadd( 2.13382, -28.9905, 4.96244, 0.66 ) }
    apic_5 { pt3dadd( 2.07879, -35.7093, 9.45732, 0.66 ) }
    apic_5 { pt3dadd( 2.1441, -37.7218, 10.9835, 0.66 ) }
    apic_5 { pt3dadd( 2.26395, -40.1178, 12.8865, 0.33 ) }
    apic_5 { pt3dadd( 2.3062, -41.1085, 13.7148, 0.66 ) }
    apic_5 { pt3dadd( 2.42584, -44.0156, 16.1915, 0.66 ) }
    apic_5 { pt3dadd( 3.17804, -51.5077, 22.2834, 0.66 ) }
    apic_5 { pt3dadd( 3.53989, -55.3775, 24.9015, 0.33 ) }
    apic_5 { pt3dadd( 3.58428, -56.1211, 25.3504, 0.66 ) }
    apic_5 { pt3dadd( 3.70873, -58.9524, 27.0321, 0.66 ) }
    apic_5 { pt3dadd( 3.8584, -61.4076, 28.4021, 0.33 ) }
    apic_5 { pt3dadd( 3.92508, -62.5241, 28.9767, 0.66 ) }
    apic_5 { pt3dadd( 3.98357, -67.1401, 30.3334, 0.33 ) }
    apic_5 { pt3dadd( 3.82788, -71.3535, 31.3986, 0.66 ) }
    apic_5 { pt3dadd( 3.67713, -75.6794, 32.5785, 0.33 ) }
    apic_5 { pt3dadd( 3.64501, -76.513, 32.8369, 0.66 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 99/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 11.238, -27.1339, -4.44424, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_3 { pt3dadd( 13.7912, -27.1271, -6.78569, 0.66 ) }
    apic_3 { pt3dadd( 16.3358, -27.207, -9.21151, 0.66 ) }
    apic_3 { pt3dadd( 21.799, -27.5782, -14.3353, 0.66 ) }
    apic_3 { pt3dadd( 25.1786, -27.7126, -17.143, 0.66 ) }
    apic_3 { pt3dadd( 28.7217, -27.8496, -19.8259, 0.66 ) }
    apic_3 { pt3dadd( 31.7707, -27.9458, -22.0174, 0.66 ) }
    apic_3 { pt3dadd( 34.5491, -28.1958, -23.795, 0.66 ) }
    apic_3 { pt3dadd( 38.2779, -28.6548, -25.9991, 0.66 ) }
    apic_3 { pt3dadd( 43.2381, -29.2044, -28.5103, 0.66 ) }
    apic_3 { pt3dadd( 45.5295, -29.4528, -29.7214, 0.66 ) }
    apic_3 { pt3dadd( 47.2916, -29.6253, -30.7289, 0.33 ) }
    apic_3 { pt3dadd( 51.4795, -29.9734, -32.9412, 0.66 ) }
    apic_3 { pt3dadd( 54.6602, -30.2352, -34.5367, 0.66 ) }
    apic_3 { pt3dadd( 56.3021, -30.3768, -35.3919, 0.66 ) }
    apic_3 { pt3dadd( 58.1447, -30.5303, -36.4293, 0.33 ) }
    apic_3 { pt3dadd( 59.9501, -30.5682, -37.5384, 0.66 ) }
    apic_3 { pt3dadd( 62.1232, -30.526, -39.0908, 0.66 ) }
    apic_3 { pt3dadd( 64.0933, -30.4168, -40.7479, 0.33 ) }
    apic_3 { pt3dadd( 65.1368, -30.3489, -41.5851, 0.66 ) }
    apic_3 { pt3dadd( 66.8576, -30.2634, -43.0618, 0.33 ) }
    apic_3 { pt3dadd( 69.5914, -30.1235, -45.6348, 0.66 ) }
    apic_3 { pt3dadd( 72.5606, -30.1044, -48.4471, 0.66 ) }
    apic_3 { pt3dadd( 73.7082, -30.1624, -49.5906, 0.33 ) }
    apic_3 { pt3dadd( 76.3786, -30.3739, -52.2956, 0.66 ) }
    apic_3 { pt3dadd( 79.5313, -30.7096, -55.493, 0.33 ) }
    apic_3 { pt3dadd( 81.0402, -31.0002, -57.0754, 1.33 ) }
    apic_3 { pt3dadd( 82.6596, -31.4302, -58.6866, 0.66 ) }
    apic_3 { pt3dadd( 83.9058, -31.8702, -59.8189, 0.33 ) }
    apic_3 { pt3dadd( 84.6383, -32.199, -60.4796, 0.66 ) }
    apic_3 { pt3dadd( 85.5681, -32.7977, -61.4249, 0.33 ) }
    apic_3 { pt3dadd( 87.7129, -34.528, -63.5928, 1.33 ) }
    apic_3 { pt3dadd( 88.4892, -35.1725, -64.4074, 0.66 ) }
    apic_3 { pt3dadd( 90.8283, -37.0668, -66.8961, 0.33 ) }
    apic_3 { pt3dadd( 91.1906, -37.3446, -67.3684, 0.33 ) }
    apic_3 { pt3dadd( 92.8014, -38.5947, -69.5541, 0.66 ) }
    apic_3 { pt3dadd( 94.3251, -39.8222, -71.6938, 0.33 ) }
    apic_3 { pt3dadd( 95.4018, -40.6184, -73.191, 1.33 ) }
    apic_3 { pt3dadd( 96.834, -41.6355, -75.5166, 0.33 ) }
    apic_3 { pt3dadd( 99.3259, -43.2598, -80.646, 0.66 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 39/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 11.238, -27.1339, -4.44424, 0.66 ) }
    apic_2 { pt3dadd( 13.0931, -28.5219, -2.81006, 0.66 ) }
    apic_2 { pt3dadd( 14.3687, -29.5531, -1.23502, 0.66 ) }
    apic_2 { pt3dadd( 14.8253, -29.9323, -0.652024, 0.66 ) }
    apic_2 { pt3dadd( 16.4615, -31.2968, 1.43457, 0.66 ) }
    apic_2 { pt3dadd( 18.7621, -33.3597, 4.70852, 0.66 ) }
    apic_2 { pt3dadd( 19.0917, -33.6616, 5.20382, 1.33 ) }
    apic_2 { pt3dadd( 20.824, -35.4435, 8.35658, 0.33 ) }
    apic_2 { pt3dadd( 21.4502, -35.9317, 9.40571, 0.33 ) }
    apic_2 { pt3dadd( 21.5967, -36.0343, 9.6443, 0.66 ) }
    apic_2 { pt3dadd( 22.8116, -36.7281, 11.4076, 0.33 ) }
    apic_2 { pt3dadd( 24.0171, -37.2639, 13.0057, 0.66 ) }
    apic_2 { pt3dadd( 24.9631, -37.5746, 14.0985, 0.66 ) }
    apic_2 { pt3dadd( 29.8786, -38.5004, 18.6117, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 21.883, 34.0142, -3.92708, 1.33 ) }
    dend_8 { pt3dadd( 28.1674, 34.9869, -7.98784, 1.33 ) }
    dend_8 { pt3dadd( 31.7946, 35.5483, -10.3316, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 56/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 21.883, 34.0142, -3.92708, 1.33 ) }
    dend_3 { pt3dadd( 27.4441, 35.1418, -14.9316, 1.33 ) }
    dend_3 { pt3dadd( 30.8731, 35.8372, -21.7169, 1.33 ) }
    // Section: apic_22, id: apic_22, parent: apic_6 (entry count 59/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 0.238654, -21.7232, -8.02028, 0.66 ) }
    apic_22 { pt3dadd( 0.679674, -21.0671, -10.1179, 0.66 ) }
    apic_22 { pt3dadd( 0.944386, -20.5687, -11.6681, 0.66 ) }
    apic_22 { pt3dadd( 1.89427, -18.4645, -19.8395, 0.66 ) }
    apic_22 { pt3dadd( 1.82183, -17.2715, -26.7317, 0.66 ) }
    apic_22 { pt3dadd( 1.6342, -16.9888, -29.8926, 0.66 ) }
    apic_22 { pt3dadd( 1.38486, -16.7418, -33.4101, 0.66 ) }
    apic_22 { pt3dadd( 0.847977, -16.6178, -40.1642, 0.66 ) }
    apic_22 { pt3dadd( 0.292958, -16.8204, -44.8479, 0.66 ) }
    apic_22 { pt3dadd( -1.69229, -17.8107, -56.0825, 0.66 ) }
    apic_22 { pt3dadd( -3.31501, -18.5977, -64.2802, 0.66 ) }
    apic_22 { pt3dadd( -3.76111, -18.9041, -66.4426, 0.66 ) }
    apic_22 { pt3dadd( -4.36948, -19.4831, -69.3744, 0.66 ) }
    apic_22 { pt3dadd( -6.04985, -21.3501, -78.1812, 0.66 ) }
    apic_22 { pt3dadd( -7.46509, -23.564, -88.9126, 0.66 ) }
    apic_22 { pt3dadd( -7.5347, -24.2202, -92.8826, 0.66 ) }
    apic_22 { pt3dadd( -7.54738, -24.6682, -97.4294, 0.66 ) }
    apic_22 { pt3dadd( -7.50293, -24.9328, -100.459, 0.66 ) }
    apic_22 { pt3dadd( -7.0061, -25.9565, -112.997, 0.66 ) }
    apic_22 { pt3dadd( -6.87539, -26.1296, -114.965, 0.66 ) }
    apic_22 { pt3dadd( -5.93091, -27.4785, -129.299, 0.66 ) }
    apic_22 { pt3dadd( -5.13602, -28.3421, -138.928, 0.33 ) }
    apic_22 { pt3dadd( -5.03435, -28.407, -139.911, 1.33 ) }
    apic_22 { pt3dadd( -4.75045, -28.5379, -141.807, 0.66 ) }
    apic_22 { pt3dadd( -3.32735, -29.1848, -148.873, 0.33 ) }
    apic_22 { pt3dadd( -2.37694, -29.5253, -152.607, 1.33 ) }
    apic_22 { pt3dadd( -1.48103, -29.868, -154.805, 0.33 ) }
    apic_22 { pt3dadd( -0.892563, -30.0657, -155.957, 0.66 ) }
    apic_22 { pt3dadd( 1.25894, -30.6565, -160.942, 0.33 ) }
    apic_22 { pt3dadd( 1.68895, -30.791, -162.186, 1.33 ) }
    apic_22 { pt3dadd( 2.24044, -30.9433, -163.731, 0.66 ) }
    apic_22 { pt3dadd( 3.22153, -31.158, -166.543, 0.33 ) }
    apic_22 { pt3dadd( 4.26099, -31.3723, -169.721, 1.33 ) }
    apic_22 { pt3dadd( 7.22353, -31.8088, -179.876, 0.33 ) }
    apic_22 { pt3dadd( 8.71661, -32.0216, -186.449, 0.33 ) }
    apic_22 { pt3dadd( 9.37653, -32.1653, -189.588, 0.33 ) }
    apic_22 { pt3dadd( 9.63652, -32.2334, -190.878, 0.33 ) }
    apic_22 { pt3dadd( 9.95799, -32.2625, -192.323, 0.33 ) }
    apic_22 { pt3dadd( 11.6667, -32.2229, -198.342, 0.66 ) }
    apic_22 { pt3dadd( 14.8053, -31.7542, -207.446, 0.33 ) }
    apic_22 { pt3dadd( 15.9276, -31.4514, -210.54, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_22 { pt3dadd( 17.0007, -31.0731, -213.802, 0.66 ) }
    apic_22 { pt3dadd( 19.3911, -30.1069, -221.049, 0.33 ) }
    apic_22 { pt3dadd( 20.2621, -29.6825, -223.544, 0.66 ) }
    apic_22 { pt3dadd( 21.0861, -29.2404, -225.405, 0.33 ) }
    apic_22 { pt3dadd( 21.2894, -29.089, -225.79, 0.66 ) }
    apic_22 { pt3dadd( 23.9751, -26.2459, -232.54, 0.33 ) }
    apic_22 { pt3dadd( 24.3457, -25.7658, -233.796, 0.66 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 7/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 0.238654, -21.7232, -8.02028, 1.33 ) }
    apic_7 { pt3dadd( -0.383671, -24.4897, -10.5077, 1.33 ) }
    apic_7 { pt3dadd( -1.37686, -28.9047, -14.4775, 1.99 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 10/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 31.7946, 35.5483, -10.3316, 1.33 ) }
    dend_12 { pt3dadd( 34.3494, 35.9057, -7.81591, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 12/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 31.7946, 35.5483, -10.3316, 0.66 ) }
    dend_9 { pt3dadd( 32.2092, 36.6015, -11.0077, 0.66 ) }
    dend_9 { pt3dadd( 32.6154, 37.5139, -11.5612, 0.66 ) }
    dend_9 { pt3dadd( 33.0985, 38.6471, -12.0911, 0.66 ) }
    dend_9 { pt3dadd( 33.8434, 40.3453, -12.7474, 0.66 ) }
    dend_9 { pt3dadd( 35.2547, 43.5038, -13.759, 0.66 ) }
    dend_9 { pt3dadd( 35.8308, 44.7192, -14.0834, 0.66 ) }
    dend_9 { pt3dadd( 36.4201, 45.893, -14.3044, 0.66 ) }
    dend_9 { pt3dadd( 37.4285, 47.7317, -14.6146, 0.66 ) }
    dend_9 { pt3dadd( 37.8474, 48.4659, -14.7029, 0.66 ) }
    dend_9 { pt3dadd( 38.61, 49.7887, -14.7894, 0.66 ) }
    dend_9 { pt3dadd( 39.1827, 50.9274, -14.8182, 0.66 ) }
    dend_9 { pt3dadd( 40.6253, 53.8117, -15.1878, 0.66 ) }
    dend_9 { pt3dadd( 41.7958, 56.1822, -15.6894, 0.66 ) }
    dend_9 { pt3dadd( 42.5415, 57.7657, -16.1566, 0.66 ) }
    dend_9 { pt3dadd( 43.2275, 59.294, -16.6525, 0.66 ) }
    dend_9 { pt3dadd( 43.9313, 60.8444, -17.2408, 0.66 ) }
    dend_9 { pt3dadd( 45.1813, 63.7012, -18.3829, 0.66 ) }
    dend_9 { pt3dadd( 45.8364, 65.1661, -18.9747, 0.66 ) }
    dend_9 { pt3dadd( 46.8885, 67.5704, -19.8852, 0.66 ) }
    dend_9 { pt3dadd( 47.4372, 68.763, -20.3314, 0.33 ) }
    dend_9 { pt3dadd( 48.2798, 70.5658, -20.9329, 0.66 ) }
    dend_9 { pt3dadd( 48.873, 71.7644, -21.2402, 0.66 ) }
    dend_9 { pt3dadd( 49.4637, 72.9627, -21.4052, 0.66 ) }
    dend_9 { pt3dadd( 49.9773, 73.9941, -21.5596, 0.33 ) }
    dend_9 { pt3dadd( 50.4791, 74.9722, -21.6872, 0.66 ) }
    dend_9 { pt3dadd( 50.9256, 75.8853, -21.8061, 0.33 ) }
    dend_9 { pt3dadd( 51.2933, 76.6449, -21.8882, 0.66 ) }
    dend_9 { pt3dadd( 52.0859, 78.2115, -22.2114, 0.33 ) }
    dend_9 { pt3dadd( 52.6424, 79.3693, -22.5142, 0.66 ) }
    dend_9 { pt3dadd( 53.2974, 80.6848, -22.8948, 0.66 ) }
    dend_9 { pt3dadd( 53.657, 81.3261, -23.0879, 0.33 ) }
    dend_9 { pt3dadd( 54.0289, 81.9664, -23.2596, 0.33 ) }
    dend_9 { pt3dadd( 54.7825, 83.2462, -23.5503, 0.66 ) }
    dend_9 { pt3dadd( 55.2772, 84.1328, -23.691, 0.33 ) }
    dend_9 { pt3dadd( 55.6465, 84.7136, -23.7209, 0.33 ) }
    dend_9 { pt3dadd( 56.2534, 85.7444, -23.7709, 0.66 ) }
    dend_9 { pt3dadd( 57.1099, 87.2706, -23.9118, 0.66 ) }
    dend_9 { pt3dadd( 57.3751, 87.8013, -23.9976, 0.66 ) }
    dend_9 { pt3dadd( 58.1612, 89.7208, -24.3336, 0.66 ) }
    dend_9 { pt3dadd( 58.5139, 91.0011, -24.5533, 0.66 ) }
    dend_9 { pt3dadd( 58.9218, 93.5009, -25.0852, 0.66 ) }
    dend_9 { pt3dadd( 59.0693, 95.5544, -25.588, 0.66 ) }
    dend_9 { pt3dadd( 59.1068, 97.3938, -26.0224, 0.33 ) }
    dend_9 { pt3dadd( 59.0648, 99.0321, -26.3784, 0.66 ) }
    dend_9 { pt3dadd( 58.8847, 101.605, -26.8693, 0.33 ) }
    dend_9 { pt3dadd( 58.764, 103.151, -27.0684, 0.66 ) }
    dend_9 { pt3dadd( 58.6926, 104.772, -27.1019, 0.66 ) }
    dend_9 { pt3dadd( 58.6786, 106.664, -26.9833, 0.33 ) }
    dend_9 { pt3dadd( 58.7521, 107.467, -26.8998, 0.66 ) }
    dend_9 { pt3dadd( 58.8312, 108.045, -26.7725, 0.66 ) }
    dend_9 { pt3dadd( 59.159, 109.75, -26.1691, 0.33 ) }
    dend_9 { pt3dadd( 59.3212, 110.527, -25.7887, 0.66 ) }
    dend_9 { pt3dadd( 59.5608, 111.519, -25.2032, 0.33 ) }
    dend_9 { pt3dadd( 59.7954, 112.335, -24.6771, 0.66 ) }
    dend_9 { pt3dadd( 60.8772, 115.595, -22.4824, 0.66 ) }
    dend_9 { pt3dadd( 61.2474, 116.556, -21.8311, 0.33 ) }
    dend_9 { pt3dadd( 61.6464, 117.435, -21.2203, 0.33 ) }
    dend_9 { pt3dadd( 61.8729, 117.956, -20.8508, 0.66 ) }
    dend_9 { pt3dadd( 62.1991, 118.705, -20.32, 0.33 ) }
    dend_9 { pt3dadd( 62.5233, 119.465, -19.8512, 0.33 ) }
    dend_9 { pt3dadd( 62.8665, 120.318, -19.4039, 0.33 ) }
    dend_9 { pt3dadd( 62.9068, 120.474, -19.3034, 0.66 ) }
    dend_9 { pt3dadd( 63.2548, 122.37, -18.0059, 0.33 ) }
    dend_9 { pt3dadd( 63.3247, 122.937, -17.6261, 0.33 ) }
    dend_9 { pt3dadd( 63.3622, 123.252, -17.4202, 0.66 ) }
    dend_9 { pt3dadd( 63.7168, 125.235, -16.1725, 0.33 ) }
    dend_9 { pt3dadd( 63.7558, 125.403, -16.0808, 0.66 ) }
    dend_9 { pt3dadd( 64.2458, 126.759, -15.48, 0.33 ) }
    dend_9 { pt3dadd( 64.4605, 127.231, -15.3363, 0.66 ) }
    dend_9 { pt3dadd( 65.2323, 129.071, -14.7413, 0.33 ) }
    dend_9 { pt3dadd( 65.7143, 130.039, -14.5165, 0.33 ) }
    dend_9 { pt3dadd( 66.1839, 130.906, -14.3907, 0.33 ) }
    dend_9 { pt3dadd( 67.3276, 133.194, -14.0779, 0.66 ) }
    dend_9 { pt3dadd( 68.4306, 135.452, -13.7761, 0.66 ) }
    dend_9 { pt3dadd( 69.809, 138.444, -13.4198, 0.66 ) }
    dend_9 { pt3dadd( 71.3866, 142.013, -13.1953, 0.66 ) }
    dend_9 { pt3dadd( 72.1046, 143.666, -13.2026, 0.33 ) }
    dend_9 { pt3dadd( 73.6842, 147.421, -13.2901, 0.66 ) }
    dend_9 { pt3dadd( 73.9705, 148.127, -13.3411, 0.66 ) }
    dend_9 { pt3dadd( 74.3823, 149.117, -13.464, 0.66 ) }
    dend_9 { pt3dadd( 75.2783, 151.231, -13.9313, 0.66 ) }
    dend_9 { pt3dadd( 75.885, 153.337, -14.1793, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 95/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 30.8731, 35.8372, -21.7169, 0.66 ) }
    dend_7 { pt3dadd( 32.1956, 36.7075, -22.8711, 0.66 ) }
    dend_7 { pt3dadd( 33.5358, 37.452, -24.0712, 0.66 ) }
    dend_7 { pt3dadd( 35.7559, 38.6111, -26.2484, 0.66 ) }
    dend_7 { pt3dadd( 39.9512, 40.5147, -30.5546, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_7 { pt3dadd( 41.348, 41.1198, -32.0836, 0.66 ) }
    dend_7 { pt3dadd( 44.2553, 42.3653, -35.3669, 0.66 ) }
    dend_7 { pt3dadd( 46.4209, 43.1613, -37.9966, 0.66 ) }
    dend_7 { pt3dadd( 47.543, 43.4561, -39.3066, 0.66 ) }
    dend_7 { pt3dadd( 51.4846, 44.1869, -43.7199, 0.66 ) }
    dend_7 { pt3dadd( 52.4129, 44.4006, -44.7261, 0.66 ) }
    dend_7 { pt3dadd( 53.6613, 44.7095, -46.0949, 0.66 ) }
    dend_7 { pt3dadd( 54.5043, 44.951, -46.9591, 0.33 ) }
    dend_7 { pt3dadd( 59.222, 46.5113, -51.4161, 0.66 ) }
    dend_7 { pt3dadd( 60.226, 46.8932, -52.2513, 1.33 ) }
    dend_7 { pt3dadd( 61.9177, 47.6513, -53.5959, 0.33 ) }
    dend_7 { pt3dadd( 62.649, 47.9986, -54.1788, 0.66 ) }
    dend_7 { pt3dadd( 65.3108, 49.4411, -56.4247, 0.33 ) }
    dend_7 { pt3dadd( 66.9004, 50.4044, -57.784, 1.33 ) }
    dend_7 { pt3dadd( 69.9313, 52.4866, -60.7271, 0.66 ) }
    dend_7 { pt3dadd( 70.8257, 53.014, -61.659, 0.66 ) }
    dend_7 { pt3dadd( 72.5226, 53.8819, -63.5324, 0.66 ) }
    dend_7 { pt3dadd( 73.4546, 54.2706, -64.6299, 0.66 ) }
    dend_7 { pt3dadd( 75.6805, 55.0755, -67.3862, 0.66 ) }
    dend_7 { pt3dadd( 77.6308, 55.7072, -69.9198, 0.66 ) }
    dend_7 { pt3dadd( 80.1664, 56.6231, -73.4387, 0.33 ) }
    dend_7 { pt3dadd( 80.7527, 56.842, -74.2332, 0.66 ) }
    dend_7 { pt3dadd( 83.8177, 57.9999, -78.3018, 0.33 ) }
    dend_7 { pt3dadd( 84.5107, 58.2804, -79.2067, 0.33 ) }
    dend_7 { pt3dadd( 85.5798, 58.8623, -80.7306, 1.33 ) }
    dend_7 { pt3dadd( 86.6657, 59.5034, -82.2768, 0.33 ) }
    dend_7 { pt3dadd( 87.2586, 59.8836, -83.1167, 0.66 ) }
    dend_7 { pt3dadd( 90.4148, 61.9487, -87.662, 0.33 ) }
    dend_7 { pt3dadd( 91.0962, 62.5, -88.7353, 0.33 ) }
    dend_7 { pt3dadd( 92.2736, 63.4748, -90.6483, 0.66 ) }
    dend_7 { pt3dadd( 96.0448, 65.9614, -95.8032, 0.33 ) }
    dend_7 { pt3dadd( 96.862, 66.4467, -96.8082, 0.33 ) }
    dend_7 { pt3dadd( 98.6808, 67.4487, -98.8879, 0.66 ) }
    dend_7 { pt3dadd( 100.67, 68.5008, -101.04, 0.33 ) }
    dend_7 { pt3dadd( 102.635, 69.3719, -103.016, 0.66 ) }
    dend_7 { pt3dadd( 108.039, 71.4833, -108.08, 0.33 ) }
    dend_7 { pt3dadd( 109.707, 72.095, -109.652, 0.66 ) }
    dend_7 { pt3dadd( 112.195, 72.948, -112.15, 0.33 ) }
    dend_7 { pt3dadd( 112.962, 73.1776, -112.921, 0.66 ) }
    dend_7 { pt3dadd( 115.565, 74.0014, -115.66, 0.66 ) }
    dend_7 { pt3dadd( 117.776, 74.9151, -118.185, 0.33 ) }
    dend_7 { pt3dadd( 119.827, 75.8465, -120.635, 0.66 ) }
    dend_7 { pt3dadd( 121.8, 76.6824, -122.944, 0.66 ) }
    dend_7 { pt3dadd( 125.58, 78.0342, -127.193, 0.66 ) }
    dend_7 { pt3dadd( 127.592, 78.6848, -129.451, 0.33 ) }
    dend_7 { pt3dadd( 129.917, 79.3366, -132.049, 0.66 ) }
    dend_7 { pt3dadd( 137.451, 81.5194, -140.304, 0.66 ) }
    dend_7 { pt3dadd( 139.284, 81.9863, -142.244, 0.66 ) }
    dend_7 { pt3dadd( 143.276, 82.9293, -146.565, 0.33 ) }
    dend_7 { pt3dadd( 144.355, 83.1603, -147.734, 0.66 ) }
    dend_7 { pt3dadd( 148.09, 83.8912, -151.796, 0.33 ) }
    dend_7 { pt3dadd( 150.757, 84.4751, -154.858, 0.66 ) }
    dend_7 { pt3dadd( 156.305, 85.5942, -161.608, 0.66 ) }
    dend_7 { pt3dadd( 158.067, 85.8938, -163.76, 1.99 ) }
    dend_7 { pt3dadd( 163.763, 86.6952, -170.816, 0.66 ) }
    dend_7 { pt3dadd( 165.247, 86.8872, -172.653, 0.66 ) }
    dend_7 { pt3dadd( 166.507, 87.0503, -174.257, 0.66 ) }
    dend_7 { pt3dadd( 174.503, 87.8709, -184.174, 0.66 ) }
    dend_7 { pt3dadd( 177.218, 88.2184, -187.485, 0.33 ) }
    dend_7 { pt3dadd( 179.392, 88.4109, -190.009, 0.66 ) }
    dend_7 { pt3dadd( 181.074, 88.5533, -192.071, 0.66 ) }
    dend_7 { pt3dadd( 183.169, 88.7026, -194.645, 0.66 ) }
    dend_7 { pt3dadd( 188.666, 89.105, -201.394, 0.66 ) }
    dend_7 { pt3dadd( 193.642, 89.5629, -207.656, 0.66 ) }
    dend_7 { pt3dadd( 204.067, 90.2682, -220.883, 0.33 ) }
    dend_7 { pt3dadd( 206.853, 90.3733, -224.413, 0.33 ) }
    dend_7 { pt3dadd( 211.402, 90.3328, -230.195, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 67/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 30.8731, 35.8372, -21.7169, 0.66 ) }
    dend_4 { pt3dadd( 31.7548, 37.2427, -24.3565, 0.66 ) }
    dend_4 { pt3dadd( 32.2635, 38.0395, -26.1837, 0.66 ) }
    dend_4 { pt3dadd( 32.9644, 39.1934, -28.7608, 0.66 ) }
    dend_4 { pt3dadd( 33.3766, 40.0153, -30.4984, 0.66 ) }
    dend_4 { pt3dadd( 33.5777, 40.4078, -31.3188, 0.66 ) }
    dend_4 { pt3dadd( 34.2795, 41.8374, -34.5365, 0.66 ) }
    dend_4 { pt3dadd( 34.9074, 43.1173, -38.0454, 0.66 ) }
    dend_4 { pt3dadd( 35.0778, 43.4701, -39.1123, 0.66 ) }
    dend_4 { pt3dadd( 35.5865, 44.7174, -42.324, 0.66 ) }
    dend_4 { pt3dadd( 35.8541, 45.8279, -44.9363, 0.66 ) }
    dend_4 { pt3dadd( 36.0338, 47.4811, -48.2075, 0.66 ) }
    dend_4 { pt3dadd( 36.0471, 48.8056, -50.3085, 0.66 ) }
    dend_4 { pt3dadd( 35.9423, 49.7085, -51.4528, 0.66 ) }
    dend_4 { pt3dadd( 35.2978, 52.6643, -54.5771, 0.66 ) }
    dend_4 { pt3dadd( 34.7857, 54.495, -55.9225, 0.66 ) }
    dend_4 { pt3dadd( 33.9162, 57.2363, -57.5591, 0.66 ) }
    dend_4 { pt3dadd( 33.4007, 58.8386, -58.3008, 0.66 ) }
    dend_4 { pt3dadd( 32.0303, 62.871, -59.8497, 0.66 ) }
    dend_4 { pt3dadd( 31.4724, 64.3764, -60.3642, 0.66 ) }
    dend_4 { pt3dadd( 29.9732, 67.8925, -61.2797, 0.66 ) }
    // Section: apic_17, id: apic_17, parent: apic_7 (entry count 88/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( -1.37686, -28.9047, -14.4775, 1.33 ) }
    apic_17 { pt3dadd( -2.89353, -34.033, -13.9107, 1.33 ) }
    apic_17 { pt3dadd( -3.6036, -36.3364, -15.2, 1.33 ) }
    apic_17 { pt3dadd( -3.63152, -36.4837, -15.2907, 1.33 ) }
    apic_17 { pt3dadd( -3.97582, -38.4955, -16.4603, 0.66 ) }
    apic_17 { pt3dadd( -4.19542, -40.1035, -17.3197, 0.66 ) }
    apic_17 { pt3dadd( -4.5195, -42.2038, -18.3061, 0.66 ) }
    apic_17 { pt3dadd( -5.86854, -52.4477, -22.8906, 0.66 ) }
    apic_17 { pt3dadd( -6.34605, -56.2393, -24.3057, 0.66 ) }
    apic_17 { pt3dadd( -6.53329, -58.8724, -25.0313, 0.66 ) }
    apic_17 { pt3dadd( -6.67859, -61.4247, -25.5475, 0.66 ) }
    apic_17 { pt3dadd( -6.93729, -66.0362, -26.3672, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_17 { pt3dadd( -7.17927, -71.1793, -27.0863, 0.66 ) }
    apic_17 { pt3dadd( -7.37525, -74.1427, -27.2779, 0.66 ) }
    apic_17 { pt3dadd( -7.83801, -81.3264, -27.8447, 0.66 ) }
    apic_17 { pt3dadd( -8.09884, -85.1035, -28.1196, 0.66 ) }
    apic_17 { pt3dadd( -8.5983, -92.7943, -28.72, 0.66 ) }
    apic_17 { pt3dadd( -8.70941, -96.0549, -28.9869, 0.66 ) }
    apic_17 { pt3dadd( -8.80739, -102.103, -29.6395, 0.66 ) }
    apic_17 { pt3dadd( -8.83149, -106.43, -30.1742, 0.66 ) }
    apic_17 { pt3dadd( -8.83589, -111.323, -30.9344, 0.66 ) }
    apic_17 { pt3dadd( -8.70346, -116.752, -31.7289, 0.66 ) }
    apic_17 { pt3dadd( -8.6017, -120.003, -32.1244, 0.66 ) }
    apic_17 { pt3dadd( -8.4701, -127.105, -33.0084, 0.66 ) }
    apic_17 { pt3dadd( -8.38528, -130.905, -33.4469, 0.66 ) }
    apic_17 { pt3dadd( -8.2952, -135.928, -34.0613, 0.66 ) }
    apic_17 { pt3dadd( -8.12666, -142.736, -34.9245, 0.66 ) }
    apic_17 { pt3dadd( -8.13778, -145.738, -35.2316, 0.66 ) }
    apic_17 { pt3dadd( -8.33389, -152.402, -35.744, 0.66 ) }
    apic_17 { pt3dadd( -8.61389, -161.618, -35.8996, 0.66 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 18/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -1.37686, -28.9047, -14.4775, 1.33 ) }
    apic_8 { pt3dadd( -2.95018, -29.7048, -12.6358, 1.33 ) }
    apic_8 { pt3dadd( -7.03494, -31.7822, -7.85438, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 21/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 34.3494, 35.9057, -7.81591, 1.33 ) }
    dend_14 { pt3dadd( 37.2504, 37.6708, -9.07681, 1.33 ) }
    dend_14 { pt3dadd( 38.0707, 38.1439, -9.34166, 1.33 ) }
    dend_14 { pt3dadd( 39.5694, 38.9754, -9.60443, 1.33 ) }
    dend_14 { pt3dadd( 41.479, 40.0526, -9.76916, 1.33 ) }
    dend_14 { pt3dadd( 44.293, 41.6057, -9.80242, 1.33 ) }
    dend_14 { pt3dadd( 48.7574, 43.8262, -9.41538, 1.33 ) }
    dend_14 { pt3dadd( 51.3021, 45.0164, -8.81477, 1.33 ) }
    dend_14 { pt3dadd( 53.9013, 46.2345, -7.91345, 0.66 ) }
    dend_14 { pt3dadd( 55.3232, 46.8032, -7.3476, 0.66 ) }
    dend_14 { pt3dadd( 58.8584, 48.0496, -6.09799, 0.66 ) }
    dend_14 { pt3dadd( 63.2079, 49.4927, -4.41121, 0.66 ) }
    dend_14 { pt3dadd( 65.8242, 50.3554, -3.35677, 0.66 ) }
    dend_14 { pt3dadd( 70.7018, 51.8973, -1.6623, 0.66 ) }
    dend_14 { pt3dadd( 77.2113, 53.8461, 0.338663, 0.66 ) }
    dend_14 { pt3dadd( 82.9565, 55.4323, 2.03114, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 34.3494, 35.9057, -7.81591, 0.66 ) }
    dend_13 { pt3dadd( 37.2371, 34.0425, -4.56368, 0.66 ) }
    dend_13 { pt3dadd( 39.1694, 32.9597, -2.54656, 0.66 ) }
    dend_13 { pt3dadd( 41.9889, 31.5871, 0.174932, 0.66 ) }
    dend_13 { pt3dadd( 42.9333, 31.1546, 1.02423, 0.66 ) }
    dend_13 { pt3dadd( 44.2567, 30.542, 2.2663, 0.66 ) }
    dend_13 { pt3dadd( 45.9338, 29.7495, 3.98064, 0.66 ) }
    dend_13 { pt3dadd( 48.5418, 28.7272, 6.654, 0.66 ) }
    dend_13 { pt3dadd( 49.3758, 28.419, 7.46575, 0.33 ) }
    dend_13 { pt3dadd( 50.0086, 28.197, 8.06104, 0.66 ) }
    dend_13 { pt3dadd( 53.777, 26.9397, 11.7735, 0.66 ) }
    dend_13 { pt3dadd( 56.1744, 26.1959, 14.3043, 0.66 ) }
    dend_13 { pt3dadd( 57.2458, 25.8644, 15.4874, 0.66 ) }
    dend_13 { pt3dadd( 58.4387, 25.6023, 16.6942, 0.66 ) }
    dend_13 { pt3dadd( 59.4253, 25.5816, 17.6875, 0.33 ) }
    dend_13 { pt3dadd( 59.787, 25.6196, 18.0327, 0.66 ) }
    dend_13 { pt3dadd( 60.4671, 25.9195, 18.4719, 0.33 ) }
    dend_13 { pt3dadd( 60.8317, 26.1561, 18.6806, 0.66 ) }
    dend_13 { pt3dadd( 62.4527, 27.3982, 19.8791, 0.33 ) }
    dend_13 { pt3dadd( 64.2907, 29.3507, 21.3899, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 75.885, 153.337, -14.1793, 0.33 ) }
    dend_11 { pt3dadd( 75.972, 154.326, -17.1847, 0.33 ) }
    dend_11 { pt3dadd( 76.0152, 154.818, -18.678, 0.66 ) }
    dend_11 { pt3dadd( 76.1234, 156.048, -22.4171, 0.33 ) }
    dend_11 { pt3dadd( 76.2017, 156.939, -25.1234, 0.66 ) }
    dend_11 { pt3dadd( 76.3679, 158.83, -30.8674, 0.33 ) }
    dend_11 { pt3dadd( 76.4401, 159.65, -33.3599, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 75.885, 153.337, -14.1793, 0.33 ) }
    dend_10 { pt3dadd( 75.569, 153.911, -15.5014, 0.33 ) }
    dend_10 { pt3dadd( 75.2356, 154.516, -16.8961, 0.66 ) }
    dend_10 { pt3dadd( 74.407, 156.021, -20.3621, 0.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 29.9732, 67.8925, -61.2797, 0.66 ) }
    dend_6 { pt3dadd( 30.5986, 70.8434, -67.7137, 0.66 ) }
    dend_6 { pt3dadd( 31.4668, 73.7405, -75.9522, 0.66 ) }
    dend_6 { pt3dadd( 31.8679, 76.2283, -83.0398, 0.66 ) }
    dend_6 { pt3dadd( 31.8946, 77.1042, -85.5451, 0.66 ) }
    dend_6 { pt3dadd( 31.7499, 78.7376, -89.9324, 0.66 ) }
    dend_6 { pt3dadd( 31.6243, 79.4488, -91.921, 0.66 ) }
    dend_6 { pt3dadd( 30.7566, 82.7552, -100.949, 0.66 ) }
    dend_6 { pt3dadd( 29.4316, 85.5247, -107.858, 0.66 ) }
    dend_6 { pt3dadd( 28.9599, 86.38, -110.241, 0.66 ) }
    dend_6 { pt3dadd( 27.6469, 88.6102, -116.414, 0.66 ) }
    dend_6 { pt3dadd( 26.1285, 91.2845, -123.325, 0.66 ) }
    dend_6 { pt3dadd( 25.1316, 93.2796, -128.402, 0.66 ) }
    dend_6 { pt3dadd( 24.0195, 95.8959, -134.927, 0.66 ) }
    dend_6 { pt3dadd( 23.02, 99.0901, -144.175, 0.33 ) }
    dend_6 { pt3dadd( 22.8661, 100.248, -147.887, 0.66 ) }
    dend_6 { pt3dadd( 22.8995, 100.564, -149.12, 0.66 ) }
    dend_6 { pt3dadd( 23.6565, 102.262, -157.264, 0.66 ) }
    dend_6 { pt3dadd( 24.5415, 102.989, -162.083, 0.33 ) }
    dend_6 { pt3dadd( 24.9533, 103.205, -163.822, 0.66 ) }
    dend_6 { pt3dadd( 26.6421, 104.1, -170.59, 0.33 ) }
    dend_6 { pt3dadd( 27.6273, 104.435, -174.112, 1.33 ) }
    dend_6 { pt3dadd( 30.1707, 105.319, -183.073, 0.33 ) }
    dend_6 { pt3dadd( 32.2003, 106.031, -189.826, 0.33 ) }
    dend_6 { pt3dadd( 32.6545, 106.162, -191.24, 0.66 ) }
    dend_6 { pt3dadd( 34.3121, 106.449, -196.117, 0.33 ) }
    dend_6 { pt3dadd( 36.7372, 106.8, -203.25, 0.66 ) }
    dend_6 { pt3dadd( 37.6432, 106.956, -205.852, 0.33 ) }
    dend_6 { pt3dadd( 38.7028, 107.173, -208.859, 0.66 ) }
    dend_6 { pt3dadd( 40.7319, 107.728, -215.111, 0.33 ) }
    dend_6 { pt3dadd( 42.1021, 108.415, -219.112, 0.66 ) }
    dend_6 { pt3dadd( 42.8293, 109.121, -221.154, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( 43.4986, 110.416, -223.101, 0.66 ) }
    dend_6 { pt3dadd( 44.1086, 112.143, -224.755, 0.33 ) }
    dend_6 { pt3dadd( 44.6657, 115.116, -226.12, 0.66 ) }
    dend_6 { pt3dadd( 45.2943, 120.812, -227.4, 0.33 ) }
    dend_6 { pt3dadd( 45.5829, 124.229, -227.686, 0.66 ) }
    dend_6 { pt3dadd( 45.7031, 128.117, -227.538, 0.33 ) }
    dend_6 { pt3dadd( 45.6826, 129.337, -227.433, 0.66 ) }
    dend_6 { pt3dadd( 45.3968, 134.028, -227.081, 0.33 ) }
    dend_6 { pt3dadd( 45.1876, 135.551, -227.01, 0.66 ) }
    dend_6 { pt3dadd( 44.5385, 139.597, -226.873, 0.33 ) }
    dend_6 { pt3dadd( 42.7319, 149.553, -226.694, 0.66 ) }
    dend_6 { pt3dadd( 41.7699, 154.097, -226.668, 0.33 ) }
    dend_6 { pt3dadd( 39.9432, 162.135, -226.883, 0.33 ) }
    dend_6 { pt3dadd( 38.7183, 166.801, -227.221, 0.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 14/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 29.9732, 67.8925, -61.2797, 0.33 ) }
    dend_5 { pt3dadd( 30.2162, 70.5606, -62.6585, 0.33 ) }
    dend_5 { pt3dadd( 30.4558, 72.5202, -63.5519, 0.33 ) }
    dend_5 { pt3dadd( 30.5887, 73.6199, -64.0359, 0.66 ) }
    dend_5 { pt3dadd( 30.8963, 76.4318, -65.2639, 0.33 ) }
    dend_5 { pt3dadd( 30.9918, 77.4694, -65.7237, 0.66 ) }
    dend_5 { pt3dadd( 31.0181, 78.9614, -66.2488, 0.33 ) }
    dend_5 { pt3dadd( 30.934, 82.2786, -67.2481, 0.33 ) }
    dend_5 { pt3dadd( 30.8582, 83.3129, -67.5539, 0.66 ) }
    dend_5 { pt3dadd( 30.6241, 85.1183, -68.1084, 0.33 ) }
    dend_5 { pt3dadd( 30.4911, 85.934, -68.3555, 0.66 ) }
    dend_5 { pt3dadd( 29.9572, 90.5337, -69.8399, 0.33 ) }
    dend_5 { pt3dadd( 29.6592, 92.647, -70.5185, 1.33 ) }
    dend_5 { pt3dadd( 29.3068, 94.8375, -71.2554, 0.33 ) }
    dend_5 { pt3dadd( 29.1843, 95.6326, -71.5426, 0.66 ) }
    dend_5 { pt3dadd( 28.6219, 99.5391, -73.0638, 0.33 ) }
    dend_5 { pt3dadd( 28.1968, 102.745, -74.5716, 0.66 ) }
    dend_5 { pt3dadd( 27.5881, 107.167, -76.9624, 0.66 ) }
    dend_5 { pt3dadd( 27.3293, 109.01, -77.8431, 0.66 ) }
    dend_5 { pt3dadd( 26.9291, 112.196, -79.2877, 0.66 ) }
    dend_5 { pt3dadd( 26.6599, 114.435, -80.2289, 0.33 ) }
    dend_5 { pt3dadd( 26.2126, 118.053, -81.6999, 0.66 ) }
    dend_5 { pt3dadd( 25.787, 122.688, -83.4149, 0.66 ) }
    dend_5 { pt3dadd( 25.3062, 130.032, -85.5682, 0.33 ) }
    dend_5 { pt3dadd( 25.2259, 131.207, -85.8409, 0.66 ) }
    dend_5 { pt3dadd( 25.0293, 135.618, -86.6155, 0.33 ) }
    dend_5 { pt3dadd( 24.8515, 139.936, -87.2248, 0.33 ) }
    dend_5 { pt3dadd( 24.8113, 141.509, -87.3915, 0.66 ) }
    dend_5 { pt3dadd( 24.9679, 148.6, -88.404, 0.33 ) }
    dend_5 { pt3dadd( 25.0521, 149.659, -88.6265, 0.66 ) }
    dend_5 { pt3dadd( 25.5202, 153.873, -89.5086, 0.33 ) }
    dend_5 { pt3dadd( 25.7644, 155.709, -89.9342, 0.33 ) }
    dend_5 { pt3dadd( 26.3624, 159.092, -90.7229, 0.66 ) }
    dend_5 { pt3dadd( 27.2845, 163.767, -91.9713, 0.66 ) }
    dend_5 { pt3dadd( 28.2805, 168.07, -93.2448, 0.66 ) }
    dend_5 { pt3dadd( 29.0637, 172.021, -94.2975, 0.33 ) }
    dend_5 { pt3dadd( 29.275, 173.49, -94.6644, 0.33 ) }
    dend_5 { pt3dadd( 29.6886, 177.946, -95.771, 0.33 ) }
    dend_5 { pt3dadd( 29.6331, 179.061, -96.0333, 0.66 ) }
    dend_5 { pt3dadd( 29.3474, 181.157, -96.6261, 0.33 ) }
    dend_5 { pt3dadd( 29.139, 182.218, -97.0183, 0.66 ) }
    dend_5 { pt3dadd( 28.695, 184.447, -98.0778, 0.33 ) }
    dend_5 { pt3dadd( 28.2854, 186.415, -99.0224, 1.99 ) }
    dend_5 { pt3dadd( 27.0953, 190.512, -101.248, 0.33 ) }
    dend_5 { pt3dadd( 26.2742, 193.911, -103.093, 0.66 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 59/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( -8.61389, -161.618, -35.8996, 0.33 ) }
    apic_19 { pt3dadd( -9.16234, -164.469, -36.7659, 0.33 ) }
    apic_19 { pt3dadd( -9.25146, -165.165, -36.8194, 0.66 ) }
    apic_19 { pt3dadd( -9.42853, -166.444, -36.7691, 0.33 ) }
    apic_19 { pt3dadd( -9.46969, -166.765, -36.7463, 0.66 ) }
    apic_19 { pt3dadd( -10.0709, -171.271, -36.5781, 0.66 ) }
    apic_19 { pt3dadd( -10.2712, -173.463, -36.6829, 0.33 ) }
    apic_19 { pt3dadd( -10.5822, -178.249, -37.303, 0.66 ) }
    apic_19 { pt3dadd( -10.8726, -183.377, -38.0477, 0.66 ) }
    apic_19 { pt3dadd( -10.964, -185.468, -38.3562, 0.66 ) }
    apic_19 { pt3dadd( -11.2736, -191.932, -39.1627, 0.66 ) }
    apic_19 { pt3dadd( -11.5596, -198.333, -39.8584, 0.66 ) }
    apic_19 { pt3dadd( -11.7211, -201.365, -40.2275, 0.66 ) }
    apic_19 { pt3dadd( -11.9993, -205.586, -40.7443, 0.66 ) }
    apic_19 { pt3dadd( -12.3231, -209.368, -41.1015, 0.66 ) }
    apic_19 { pt3dadd( -12.7986, -214.156, -41.3415, 0.66 ) }
    apic_19 { pt3dadd( -13.3703, -218.625, -41.3341, 0.66 ) }
    apic_19 { pt3dadd( -13.9154, -222.035, -41.1353, 0.66 ) }
    apic_19 { pt3dadd( -15.0421, -228.367, -40.7002, 0.66 ) }
    apic_19 { pt3dadd( -15.7833, -232.441, -40.3501, 0.66 ) }
    apic_19 { pt3dadd( -16.6992, -237.139, -39.8811, 0.66 ) }
    apic_19 { pt3dadd( -17.5328, -241.503, -39.4073, 0.66 ) }
    apic_19 { pt3dadd( -18.8114, -247.986, -38.603, 0.66 ) }
    apic_19 { pt3dadd( -19.7476, -252.917, -37.9816, 0.66 ) }
    apic_19 { pt3dadd( -20.6265, -258.284, -37.4434, 0.66 ) }
    apic_19 { pt3dadd( -21.1542, -262.027, -37.101, 0.66 ) }
    apic_19 { pt3dadd( -21.5531, -265.8, -36.8664, 0.66 ) }
    apic_19 { pt3dadd( -21.838, -270.567, -36.6912, 0.66 ) }
    apic_19 { pt3dadd( -22.0601, -275.157, -36.7943, 0.66 ) }
    apic_19 { pt3dadd( -22.2662, -280.121, -37.1614, 0.66 ) }
    apic_19 { pt3dadd( -22.4216, -284.312, -37.6783, 0.66 ) }
    apic_19 { pt3dadd( -22.6357, -289.704, -38.4103, 0.66 ) }
    apic_19 { pt3dadd( -22.9636, -294.932, -39.1312, 0.66 ) }
    apic_19 { pt3dadd( -23.2792, -299.485, -39.726, 0.66 ) }
    apic_19 { pt3dadd( -23.6069, -303.148, -40.1652, 0.66 ) }
    apic_19 { pt3dadd( -23.8742, -305.404, -40.4048, 0.66 ) }
    apic_19 { pt3dadd( -24.6737, -311.623, -41.3606, 0.66 ) }
    apic_19 { pt3dadd( -25.6188, -318.546, -42.6962, 0.66 ) }
    apic_19 { pt3dadd( -25.8869, -320.921, -43.2718, 0.33 ) }
    apic_19 { pt3dadd( -26.0207, -322.448, -43.6578, 0.33 ) }
    apic_19 { pt3dadd( -26.2766, -325.224, -44.3862, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_19 { pt3dadd( -26.7663, -330.514, -45.8873, 0.66 ) }
    apic_19 { pt3dadd( -27.2646, -336.916, -47.8486, 0.66 ) }
    apic_19 { pt3dadd( -27.4265, -338.944, -48.4695, 0.33 ) }
    apic_19 { pt3dadd( -27.6772, -341.686, -49.1283, 0.33 ) }
    apic_19 { pt3dadd( -27.8982, -344.628, -49.716, 0.66 ) }
    apic_19 { pt3dadd( -28.0229, -346.611, -50.0872, 0.66 ) }
    apic_19 { pt3dadd( -28.1766, -349.105, -50.4874, 0.33 ) }
    apic_19 { pt3dadd( -28.2884, -350.788, -50.7513, 0.66 ) }
    apic_19 { pt3dadd( -29.8175, -373.641, -54.2694, 0.66 ) }
    apic_19 { pt3dadd( -29.9438, -375.453, -54.5654, 0.33 ) }
    apic_19 { pt3dadd( -30.2713, -380.794, -55.5449, 0.66 ) }
    apic_19 { pt3dadd( -30.3937, -382.675, -55.9064, 0.33 ) }
    apic_19 { pt3dadd( -30.457, -383.792, -56.1166, 0.66 ) }
    apic_19 { pt3dadd( -30.6122, -386.457, -56.5807, 0.33 ) }
    apic_19 { pt3dadd( -30.7164, -387.718, -56.7241, 0.66 ) }
    apic_19 { pt3dadd( -31.4693, -392.163, -57.2076, 0.33 ) }
    apic_19 { pt3dadd( -31.7902, -393.54, -57.3057, 0.33 ) }
    apic_19 { pt3dadd( -33.3402, -399.409, -57.714, 0.66 ) }
    apic_19 { pt3dadd( -34.2368, -402.818, -57.8954, 0.66 ) }
    apic_19 { pt3dadd( -34.9517, -405.568, -58.0033, 0.66 ) }
    apic_19 { pt3dadd( -36.2835, -410.646, -58.0024, 0.66 ) }
    apic_19 { pt3dadd( -37.427, -415.16, -57.8198, 0.66 ) }
    apic_19 { pt3dadd( -38.0817, -418.299, -57.6438, 0.66 ) }
    apic_19 { pt3dadd( -38.722, -422.027, -57.3714, 0.33 ) }
    apic_19 { pt3dadd( -38.7975, -423.027, -57.2778, 0.66 ) }
    apic_19 { pt3dadd( -38.7326, -425.925, -56.9765, 0.66 ) }
    apic_19 { pt3dadd( -38.4515, -428.283, -56.6189, 0.66 ) }
    apic_19 { pt3dadd( -38.0697, -430.93, -56.1678, 0.33 ) }
    apic_19 { pt3dadd( -37.9624, -431.614, -56.0312, 0.66 ) }
    apic_19 { pt3dadd( -37.5017, -434.873, -55.4199, 0.66 ) }
    apic_19 { pt3dadd( -37.0093, -438.897, -54.7509, 0.66 ) }
    apic_19 { pt3dadd( -36.7149, -442.281, -54.2868, 0.66 ) }
    apic_19 { pt3dadd( -36.7083, -443.573, -54.1314, 0.66 ) }
    apic_19 { pt3dadd( -36.873, -446.276, -53.9122, 0.33 ) }
    apic_19 { pt3dadd( -37.0945, -448.384, -53.8162, 0.66 ) }
    apic_19 { pt3dadd( -37.3277, -450.276, -53.9533, 0.33 ) }
    apic_19 { pt3dadd( -37.5471, -452.126, -54.3097, 0.66 ) }
    apic_19 { pt3dadd( -37.7987, -454.145, -54.8926, 0.33 ) }
    apic_19 { pt3dadd( -38.276, -457.929, -56.0712, 0.33 ) }
    apic_19 { pt3dadd( -38.367, -458.593, -56.2892, 0.66 ) }
    apic_19 { pt3dadd( -38.8178, -462.756, -57.531, 0.33 ) }
    apic_19 { pt3dadd( -38.9996, -465.2, -58.2282, 0.33 ) }
    apic_19 { pt3dadd( -39.0275, -465.641, -58.2976, 0.66 ) }
    apic_19 { pt3dadd( -39.0989, -467.338, -58.3222, 0.33 ) }
    apic_19 { pt3dadd( -39.1432, -467.961, -58.229, 0.66 ) }
    apic_19 { pt3dadd( -39.2293, -469.655, -57.8737, 0.33 ) }
    apic_19 { pt3dadd( -39.3309, -471.506, -57.3702, 0.66 ) }
    apic_19 { pt3dadd( -39.3404, -475.989, -56.4355, 0.33 ) }
    apic_19 { pt3dadd( -39.3254, -476.981, -56.2823, 0.33 ) }
    apic_19 { pt3dadd( -39.3148, -477.298, -56.2505, 0.66 ) }
    apic_19 { pt3dadd( -39.1317, -480.911, -56.0568, 0.33 ) }
    apic_19 { pt3dadd( -38.9925, -483.107, -56.0651, 0.33 ) }
    apic_19 { pt3dadd( -38.7301, -486.911, -56.2836, 0.33 ) }
    apic_19 { pt3dadd( -38.6974, -487.605, -56.3409, 0.66 ) }
    apic_19 { pt3dadd( -38.7187, -490.3, -56.3726, 0.33 ) }
    apic_19 { pt3dadd( -38.7187, -490.3, -56.3726, 0.66 ) }
    apic_19 { pt3dadd( -38.9229, -492.265, -56.0879, 0.33 ) }
    apic_19 { pt3dadd( -38.9229, -492.265, -56.0879, 0.66 ) }
    apic_19 { pt3dadd( -38.9372, -494.964, -55.7971, 0.33 ) }
    apic_19 { pt3dadd( -38.8714, -498.161, -55.5161, 0.33 ) }
    apic_19 { pt3dadd( -38.8107, -499.501, -55.4246, 0.66 ) }
    apic_19 { pt3dadd( -38.6897, -502.772, -55.2867, 0.33 ) }
    apic_19 { pt3dadd( -38.5838, -507.822, -55.344, 0.33 ) }
    apic_19 { pt3dadd( -38.5881, -508.955, -55.4052, 0.33 ) }
    apic_19 { pt3dadd( -38.6131, -509.577, -55.4669, 0.66 ) }
    apic_19 { pt3dadd( -38.7045, -511.274, -55.6436, 0.33 ) }
    apic_19 { pt3dadd( -38.8949, -513.554, -55.8803, 0.66 ) }
    apic_19 { pt3dadd( -39.5642, -518.771, -56.6115, 0.33 ) }
    apic_19 { pt3dadd( -39.9383, -520.312, -56.8034, 0.66 ) }
    apic_19 { pt3dadd( -40.7256, -523.356, -57.2132, 0.33 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 70/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -8.61389, -161.618, -35.8996, 0.66 ) }
    apic_18 { pt3dadd( -6.30581, -162.782, -36.9679, 0.66 ) }
    apic_18 { pt3dadd( -3.51191, -164.395, -38.3289, 0.33 ) }
    apic_18 { pt3dadd( -3.03488, -164.687, -38.5639, 0.66 ) }
    apic_18 { pt3dadd( 2.37159, -168.055, -41.1784, 0.66 ) }
    apic_18 { pt3dadd( 6.9649, -170.974, -43.3019, 0.33 ) }
    apic_18 { pt3dadd( 8.48181, -171.94, -43.8944, 0.33 ) }
    apic_18 { pt3dadd( 10.581, -173.427, -44.6149, 0.33 ) }
    apic_18 { pt3dadd( 11.2504, -173.937, -44.7509, 0.66 ) }
    apic_18 { pt3dadd( 12.5319, -175.018, -44.5785, 0.33 ) }
    apic_18 { pt3dadd( 14.1665, -176.494, -43.9268, 0.66 ) }
    apic_18 { pt3dadd( 17.1578, -179.116, -42.187, 0.33 ) }
    apic_18 { pt3dadd( 19.2009, -180.952, -40.8469, 0.66 ) }
    apic_18 { pt3dadd( 21.3739, -182.809, -39.2858, 0.33 ) }
    apic_18 { pt3dadd( 25.8185, -186.828, -35.6648, 0.66 ) }
    // Section: apic_16, id: apic_16, parent: apic_8 (entry count 85/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -7.03494, -31.7822, -7.85438, 0.66 ) }
    apic_16 { pt3dadd( -14.5427, -38.1114, -9.11977, 0.66 ) }
    apic_16 { pt3dadd( -19.0909, -41.8474, -10.0607, 0.66 ) }
    apic_16 { pt3dadd( -26.9238, -47.9535, -12.3241, 0.66 ) }
    apic_16 { pt3dadd( -29.3687, -49.7466, -13.1134, 0.66 ) }
    apic_16 { pt3dadd( -31.3939, -51.1969, -13.7955, 0.66 ) }
    apic_16 { pt3dadd( -36.7212, -54.8567, -15.861, 0.66 ) }
    apic_16 { pt3dadd( -39.7902, -56.8196, -17.197, 0.66 ) }
    apic_16 { pt3dadd( -44.4541, -59.229, -19.612, 0.66 ) }
    apic_16 { pt3dadd( -46.0865, -60.0602, -20.6276, 0.66 ) }
    apic_16 { pt3dadd( -48.1949, -61.0633, -21.7767, 0.66 ) }
    apic_16 { pt3dadd( -52.6454, -63.408, -23.6936, 0.66 ) }
    apic_16 { pt3dadd( -55.8226, -65.172, -24.7829, 0.66 ) }
    apic_16 { pt3dadd( -58.5437, -66.8781, -25.5501, 0.66 ) }
    apic_16 { pt3dadd( -63.839, -70.537, -26.6374, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_16 { pt3dadd( -73.1972, -77.6315, -28.2211, 0.66 ) }
    apic_16 { pt3dadd( -77.7604, -81.254, -28.6772, 0.66 ) }
    apic_16 { pt3dadd( -81.1565, -84.1254, -28.836, 0.66 ) }
    apic_16 { pt3dadd( -84.3431, -87.1748, -28.9766, 0.66 ) }
    apic_16 { pt3dadd( -85.7366, -88.6808, -29.006, 0.66 ) }
    apic_16 { pt3dadd( -87.0531, -90.3093, -28.9645, 0.66 ) }
    apic_16 { pt3dadd( -90.3258, -95.1227, -28.8086, 0.66 ) }
    apic_16 { pt3dadd( -93.7558, -99.4798, -28.8821, 0.66 ) }
    apic_16 { pt3dadd( -97.4517, -104.015, -29.3742, 0.66 ) }
    apic_16 { pt3dadd( -99.7762, -106.762, -30.1365, 0.66 ) }
    apic_16 { pt3dadd( -102.599, -110.135, -31.4044, 0.66 ) }
    apic_16 { pt3dadd( -106.914, -115.271, -33.5955, 0.66 ) }
    apic_16 { pt3dadd( -112.13, -121.695, -36.5675, 0.66 ) }
    apic_16 { pt3dadd( -118.94, -130.012, -40.8809, 0.66 ) }
    apic_16 { pt3dadd( -124.557, -136.964, -44.9281, 0.66 ) }
    apic_16 { pt3dadd( -126.445, -139.527, -46.3839, 0.66 ) }
    apic_16 { pt3dadd( -130.688, -145.722, -49.9413, 0.66 ) }
    apic_16 { pt3dadd( -131.705, -147.437, -50.8941, 0.66 ) }
    apic_16 { pt3dadd( -135.286, -154.652, -54.5606, 0.66 ) }
    apic_16 { pt3dadd( -137.605, -159.728, -56.6277, 0.66 ) }
    apic_16 { pt3dadd( -140.59, -166.527, -58.7658, 0.66 ) }
    apic_16 { pt3dadd( -143.087, -171.928, -60.5327, 0.66 ) }
    apic_16 { pt3dadd( -144.024, -174.015, -61.276, 0.66 ) }
    apic_16 { pt3dadd( -145.939, -177.666, -62.6871, 0.33 ) }
    apic_16 { pt3dadd( -147.361, -179.991, -63.6896, 0.33 ) }
    apic_16 { pt3dadd( -149.181, -182.418, -65.5359, 0.33 ) }
    apic_16 { pt3dadd( -150.633, -184.129, -67.236, 1.33 ) }
    apic_16 { pt3dadd( -151.912, -185.61, -68.7944, 0.66 ) }
    apic_16 { pt3dadd( -154.928, -188.707, -72.5514, 0.66 ) }
    apic_16 { pt3dadd( -158.147, -191.534, -76.3737, 0.66 ) }
    apic_16 { pt3dadd( -164.492, -196.53, -83.8677, 0.33 ) }
    apic_16 { pt3dadd( -165.472, -197.255, -84.9677, 0.33 ) }
    apic_16 { pt3dadd( -166.964, -198.255, -86.5399, 0.66 ) }
    apic_16 { pt3dadd( -170.99, -200.51, -90.3252, 0.33 ) }
    apic_16 { pt3dadd( -172.861, -201.351, -91.7513, 0.33 ) }
    apic_16 { pt3dadd( -173.961, -201.733, -92.3408, 0.33 ) }
    apic_16 { pt3dadd( -177.886, -202.87, -93.6079, 0.33 ) }
    apic_16 { pt3dadd( -182.427, -203.924, -95.4315, 0.66 ) }
    apic_16 { pt3dadd( -184.785, -204.332, -96.4661, 0.33 ) }
    apic_16 { pt3dadd( -185.517, -204.429, -96.797, 0.66 ) }
    apic_16 { pt3dadd( -187.96, -204.743, -98.0223, 0.33 ) }
    apic_16 { pt3dadd( -190.654, -205.027, -99.4295, 0.66 ) }
    apic_16 { pt3dadd( -195.432, -205.628, -102.337, 0.33 ) }
    apic_16 { pt3dadd( -196.907, -205.915, -103.204, 0.66 ) }
    apic_16 { pt3dadd( -199.034, -206.568, -104.681, 0.33 ) }
    apic_16 { pt3dadd( -200.31, -207.122, -105.626, 0.33 ) }
    apic_16 { pt3dadd( -201.288, -207.765, -106.372, 0.66 ) }
    apic_16 { pt3dadd( -204.733, -211.478, -108.893, 0.33 ) }
    apic_16 { pt3dadd( -205.531, -212.97, -109.426, 0.66 ) }
    apic_16 { pt3dadd( -206.726, -216.149, -110.235, 0.33 ) }
    apic_16 { pt3dadd( -207.376, -218.803, -110.584, 0.33 ) }
    apic_16 { pt3dadd( -207.777, -221.892, -110.729, 0.33 ) }
    apic_16 { pt3dadd( -207.908, -223.949, -110.608, 0.33 ) }
    apic_16 { pt3dadd( -207.951, -225.616, -110.373, 0.66 ) }
    apic_16 { pt3dadd( -208.076, -226.886, -110.219, 0.33 ) }
    apic_16 { pt3dadd( -208.548, -229.29, -109.937, 0.66 ) }
    apic_16 { pt3dadd( -209.191, -231.58, -109.771, 0.66 ) }
    apic_16 { pt3dadd( -210.774, -236.303, -109.412, 0.33 ) }
    apic_16 { pt3dadd( -211.289, -237.695, -109.297, 0.66 ) }
    apic_16 { pt3dadd( -213.135, -242.512, -108.89, 0.33 ) }
    apic_16 { pt3dadd( -213.674, -243.903, -108.77, 0.66 ) }
    apic_16 { pt3dadd( -214.729, -246.252, -108.539, 0.33 ) }
    apic_16 { pt3dadd( -215.353, -247.37, -108.412, 0.66 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 63/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -7.03494, -31.7822, -7.85438, 0.66 ) }
    apic_9 { pt3dadd( -10.2644, -30.9832, -8.56946, 0.66 ) }
    apic_9 { pt3dadd( -16.2052, -29.5136, -9.8849, 0.66 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 66/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 82.9565, 55.4323, 2.03114, 0.33 ) }
    dend_18 { pt3dadd( 91.2747, 54.1431, 8.05237, 0.33 ) }
    dend_18 { pt3dadd( 94.067, 53.6531, 9.62353, 0.33 ) }
    dend_18 { pt3dadd( 94.6594, 53.5494, 9.89771, 0.66 ) }
    dend_18 { pt3dadd( 98.465, 52.9064, 10.9128, 0.33 ) }
    dend_18 { pt3dadd( 100.518, 52.5245, 11.511, 0.66 ) }
    dend_18 { pt3dadd( 102.281, 52.2472, 12.0809, 0.33 ) }
    dend_18 { pt3dadd( 103.422, 52.0953, 12.2547, 0.33 ) }
    dend_18 { pt3dadd( 105.552, 51.8931, 12.8231, 0.33 ) }
    dend_18 { pt3dadd( 109.42, 51.8042, 14.244, 0.66 ) }
    dend_18 { pt3dadd( 114.446, 52.4465, 16.4482, 0.66 ) }
    dend_18 { pt3dadd( 116.744, 52.9823, 17.598, 0.66 ) }
    dend_18 { pt3dadd( 118.575, 53.5431, 18.6008, 0.66 ) }
    dend_18 { pt3dadd( 120.836, 54.3693, 19.9246, 0.66 ) }
    dend_18 { pt3dadd( 122.942, 55.2842, 21.214, 0.66 ) }
    dend_18 { pt3dadd( 127.302, 57.3357, 23.9227, 0.66 ) }
    dend_18 { pt3dadd( 129.764, 58.5793, 25.3827, 0.33 ) }
    dend_18 { pt3dadd( 130.799, 59.0959, 26.0538, 0.66 ) }
    dend_18 { pt3dadd( 132.42, 59.9039, 27.2306, 0.33 ) }
    dend_18 { pt3dadd( 134.187, 60.7124, 28.4141, 0.66 ) }
    dend_18 { pt3dadd( 136.435, 61.6431, 29.9677, 0.33 ) }
    dend_18 { pt3dadd( 138.949, 62.5428, 31.9577, 0.66 ) }
    dend_18 { pt3dadd( 140.702, 63.1248, 33.2773, 0.33 ) }
    dend_18 { pt3dadd( 142.53, 63.8275, 34.5404, 0.33 ) }
    dend_18 { pt3dadd( 146.599, 65.6436, 37.3885, 0.66 ) }
    dend_18 { pt3dadd( 149.961, 67.2839, 39.2825, 0.33 ) }
    dend_18 { pt3dadd( 151.833, 68.333, 39.9718, 1.33 ) }
    dend_18 { pt3dadd( 153.861, 69.3456, 40.1737, 0.33 ) }
    dend_18 { pt3dadd( 156.711, 70.7639, 40.7476, 0.33 ) }
    dend_18 { pt3dadd( 157.481, 71.1116, 40.9695, 0.66 ) }
    dend_18 { pt3dadd( 161.236, 72.6639, 42.3653, 0.66 ) }
    dend_18 { pt3dadd( 162.93, 73.2804, 42.8767, 0.33 ) }
    dend_18 { pt3dadd( 166.496, 74.5983, 43.9403, 0.66 ) }
    dend_18 { pt3dadd( 173.011, 77.0369, 46.6346, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( 174.969, 77.7063, 47.5977, 0.33 ) }
    dend_18 { pt3dadd( 176.173, 78.1185, 48.2671, 0.33 ) }
    dend_18 { pt3dadd( 176.964, 78.3913, 48.8337, 0.66 ) }
    dend_18 { pt3dadd( 179.196, 79.2495, 50.6018, 0.33 ) }
    dend_18 { pt3dadd( 182.079, 80.6729, 53.1416, 0.33 ) }
    dend_18 { pt3dadd( 183.424, 81.4075, 53.7771, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 6/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 82.9565, 55.4323, 2.03114, 0.66 ) }
    dend_15 { pt3dadd( 85.2856, 57.2279, 1.86839, 0.66 ) }
    dend_15 { pt3dadd( 87.4545, 59.1296, 1.57883, 0.66 ) }
    dend_15 { pt3dadd( 89.3435, 60.8535, 1.29926, 0.66 ) }
    dend_15 { pt3dadd( 91.7175, 63.0529, 0.802547, 0.66 ) }
    dend_15 { pt3dadd( 93.7958, 65.0558, 0.310558, 0.66 ) }
    dend_15 { pt3dadd( 97.3511, 68.5285, -0.562518, 0.66 ) }
    dend_15 { pt3dadd( 98.8243, 70.0691, -0.995432, 0.66 ) }
    dend_15 { pt3dadd( 100.114, 71.4951, -1.35702, 0.66 ) }
    dend_15 { pt3dadd( 101.9, 73.4605, -1.97703, 0.33 ) }
    dend_15 { pt3dadd( 103.873, 75.7036, -2.7811, 0.66 ) }
    dend_15 { pt3dadd( 104.637, 76.5113, -3.07892, 0.66 ) }
    dend_15 { pt3dadd( 105.355, 77.2462, -3.34667, 0.66 ) }
    dend_15 { pt3dadd( 106.941, 78.8164, -3.8903, 0.66 ) }
    dend_15 { pt3dadd( 108.848, 80.7436, -4.55063, 0.66 ) }
    dend_15 { pt3dadd( 110.109, 82.0004, -4.90168, 0.66 ) }
    dend_15 { pt3dadd( 111.974, 83.7311, -5.56303, 0.66 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 23/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( -40.7256, -523.356, -57.2132, 0.66 ) }
    apic_21 { pt3dadd( -42.824, -528.84, -58.1649, 0.66 ) }
    apic_21 { pt3dadd( -43.1198, -532.358, -59.0568, 0.33 ) }
    apic_21 { pt3dadd( -43.1034, -533.229, -59.3019, 0.66 ) }
    apic_21 { pt3dadd( -43.0154, -537.918, -60.62, 0.33 ) }
    apic_21 { pt3dadd( -42.9117, -543.437, -62.1713, 0.33 ) }
    apic_21 { pt3dadd( -42.8341, -547.574, -63.3344, 1.99 ) }
    apic_21 { pt3dadd( -41.6277, -558.789, -65.7483, 0.33 ) }
    apic_21 { pt3dadd( -41.4765, -559.552, -65.9426, 0.66 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 32/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( -40.7256, -523.356, -57.2132, 0.33 ) }
    apic_20 { pt3dadd( -42.1867, -521.561, -57.0899, 0.33 ) }
    apic_20 { pt3dadd( -42.518, -521.154, -57.0619, 0.66 ) }
    // Section: apic_13, id: apic_13, parent: apic_9 (entry count 35/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -16.2052, -29.5136, -9.8849, 0.66 ) }
    apic_13 { pt3dadd( -19.6769, -30.6442, -7.97867, 0.66 ) }
    apic_13 { pt3dadd( -20.7716, -30.9412, -7.39126, 0.66 ) }
    apic_13 { pt3dadd( -24.0728, -31.8656, -5.66058, 0.66 ) }
    apic_13 { pt3dadd( -26.5345, -32.6318, -4.42685, 0.66 ) }
    apic_13 { pt3dadd( -29.0436, -33.4298, -3.22359, 0.66 ) }
    apic_13 { pt3dadd( -31.5155, -34.2531, -2.07514, 0.66 ) }
    apic_13 { pt3dadd( -33.2426, -34.9735, -1.21574, 0.66 ) }
    apic_13 { pt3dadd( -34.4608, -35.6062, -0.508014, 0.66 ) }
    apic_13 { pt3dadd( -36.863, -37.1769, 1.02936, 0.66 ) }
    apic_13 { pt3dadd( -38.7162, -38.6184, 2.26865, 0.66 ) }
    apic_13 { pt3dadd( -39.4466, -39.3091, 2.79554, 0.66 ) }
    apic_13 { pt3dadd( -42.2728, -42.2975, 4.94136, 0.66 ) }
    apic_13 { pt3dadd( -44.9141, -45.3284, 6.75926, 0.66 ) }
    apic_13 { pt3dadd( -47.0597, -47.8488, 8.04068, 0.66 ) }
    apic_13 { pt3dadd( -48.0044, -49.0022, 8.47267, 0.66 ) }
    apic_13 { pt3dadd( -49.3168, -50.583, 8.88592, 0.66 ) }
    apic_13 { pt3dadd( -50.7508, -52.2206, 9.13966, 0.66 ) }
    apic_13 { pt3dadd( -53.964, -55.6687, 9.34334, 0.66 ) }
    apic_13 { pt3dadd( -56.9025, -58.7412, 9.37517, 0.66 ) }
    apic_13 { pt3dadd( -58.7771, -60.7105, 9.53432, 0.66 ) }
    apic_13 { pt3dadd( -60.5642, -62.7323, 9.80183, 0.33 ) }
    apic_13 { pt3dadd( -61.1193, -63.3707, 9.93162, 0.66 ) }
    apic_13 { pt3dadd( -63.5225, -66.3739, 10.7578, 0.66 ) }
    apic_13 { pt3dadd( -64.463, -67.5879, 11.3184, 0.66 ) }
    apic_13 { pt3dadd( -66.2701, -69.9352, 12.773, 0.66 ) }
    apic_13 { pt3dadd( -67.443, -71.527, 13.9077, 0.66 ) }
    apic_13 { pt3dadd( -68.0673, -72.4212, 14.5773, 0.66 ) }
    apic_13 { pt3dadd( -69.1754, -73.9823, 15.8169, 0.66 ) }
    apic_13 { pt3dadd( -70.5677, -75.9196, 17.4009, 0.66 ) }
    apic_13 { pt3dadd( -72.4769, -78.3241, 19.5455, 0.66 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 66/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -16.2052, -29.5136, -9.8849, 0.33 ) }
    apic_10 { pt3dadd( -18.118, -28.9676, -7.68968, 0.33 ) }
    apic_10 { pt3dadd( -21.2536, -27.9131, -4.2934, 0.66 ) }
    apic_10 { pt3dadd( -22.6594, -27.4403, -2.77064, 0.66 ) }
    apic_10 { pt3dadd( -26.4035, -26.1811, 1.28484, 0.66 ) }
    apic_10 { pt3dadd( -29.9209, -24.9982, 5.09469, 0.66 ) }
    apic_10 { pt3dadd( -33.2667, -23.873, 8.71875, 0.66 ) }
    apic_10 { pt3dadd( -35.312, -23.2938, 11.0004, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 74/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 111.974, 83.7311, -5.56303, 0.33 ) }
    dend_17 { pt3dadd( 114.176, 84.6779, -4.71072, 0.33 ) }
    dend_17 { pt3dadd( 115.035, 85.0628, -4.37205, 0.33 ) }
    dend_17 { pt3dadd( 115.931, 85.5079, -3.94143, 0.66 ) }
    dend_17 { pt3dadd( 117.383, 86.3698, -3.19277, 0.33 ) }
    dend_17 { pt3dadd( 118.705, 87.2308, -2.44714, 0.33 ) }
    dend_17 { pt3dadd( 119.376, 87.7571, -1.97699, 0.33 ) }
    dend_17 { pt3dadd( 119.984, 88.4159, -1.36839, 0.66 ) }
    dend_17 { pt3dadd( 120.708, 89.3306, -0.489089, 0.66 ) }
    dend_17 { pt3dadd( 121.476, 90.4239, 0.570452, 0.33 ) }
    dend_17 { pt3dadd( 121.764, 90.9163, 1.03543, 0.66 ) }
    dend_17 { pt3dadd( 122.947, 92.8851, 2.85302, 0.33 ) }
    dend_17 { pt3dadd( 123.528, 93.7144, 3.64236, 0.66 ) }
    dend_17 { pt3dadd( 124.303, 94.6237, 4.60479, 0.33 ) }
    dend_17 { pt3dadd( 124.525, 94.8479, 4.85565, 0.66 ) }
    dend_17 { pt3dadd( 126.058, 96.2005, 6.55274, 0.33 ) }
    dend_17 { pt3dadd( 127.395, 97.3289, 8.01135, 0.33 ) }
    dend_17 { pt3dadd( 127.986, 97.7034, 8.54631, 0.66 ) }
    dend_17 { pt3dadd( 129.928, 98.8798, 10.3603, 0.33 ) }
    dend_17 { pt3dadd( 130.728, 99.393, 11.1487, 0.66 ) }
    dend_17 { pt3dadd( 134.153, 101.584, 14.5484, 0.66 ) }
    dend_17 { pt3dadd( 135.971, 102.729, 16.3472, 0.66 ) }
    dend_17 { pt3dadd( 139.561, 105.051, 20.0257, 0.66 ) }
    dend_17 { pt3dadd( 142.284, 106.833, 22.7714, 0.66 ) }
    dend_17 { pt3dadd( 144.269, 108.094, 24.6958, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 99/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 111.974, 83.7311, -5.56303, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_16 { pt3dadd( 113.156, 85.2039, -7.30173, 0.33 ) }
    dend_16 { pt3dadd( 113.627, 85.8412, -7.81266, 0.66 ) }
    dend_16 { pt3dadd( 114.541, 87.0779, -8.61582, 0.33 ) }
    dend_16 { pt3dadd( 115.186, 87.9668, -9.08147, 0.66 ) }
    dend_16 { pt3dadd( 119.304, 93.4602, -11.5752, 0.33 ) }
    dend_16 { pt3dadd( 120.747, 95.4303, -12.3312, 0.33 ) }
    dend_16 { pt3dadd( 123.954, 99.6292, -13.78, 0.66 ) }
    dend_16 { pt3dadd( 125.286, 101.387, -14.2146, 0.33 ) }
    dend_16 { pt3dadd( 126.765, 103.465, -14.5336, 0.66 ) }
    dend_16 { pt3dadd( 127.899, 104.97, -14.602, 0.33 ) }
    dend_16 { pt3dadd( 129.212, 106.625, -14.6345, 0.66 ) }
    dend_16 { pt3dadd( 130.496, 108.291, -14.7941, 0.33 ) }
    dend_16 { pt3dadd( 132.701, 110.928, -15.2341, 0.66 ) }
    dend_16 { pt3dadd( 133.998, 112.407, -15.5167, 0.33 ) }
    dend_16 { pt3dadd( 137.281, 115.975, -16.2986, 0.66 ) }
    dend_16 { pt3dadd( 141.098, 119.857, -17.173, 0.33 ) }
    dend_16 { pt3dadd( 142.091, 120.706, -17.4067, 0.33 ) }
    dend_16 { pt3dadd( 143.583, 121.887, -17.9514, 0.66 ) }
    dend_16 { pt3dadd( 145.204, 123.018, -18.6958, 0.33 ) }
    dend_16 { pt3dadd( 146.157, 123.637, -19.2591, 0.66 ) }
    dend_16 { pt3dadd( 147.985, 124.933, -20.3233, 0.33 ) }
    dend_16 { pt3dadd( 150.309, 126.462, -21.3798, 0.33 ) }
    dend_16 { pt3dadd( 155.908, 130.417, -23.6903, 0.33 ) }
    dend_16 { pt3dadd( 156.552, 130.91, -23.9349, 0.66 ) }
    dend_16 { pt3dadd( 161.324, 134.846, -25.4667, 0.33 ) }
    dend_16 { pt3dadd( 165.287, 138.493, -26.8071, 0.66 ) }
    dend_16 { pt3dadd( 167.905, 141.118, -27.6517, 0.33 ) }
    dend_16 { pt3dadd( 170.072, 143.434, -28.2126, 0.33 ) }
    dend_16 { pt3dadd( 172.319, 145.671, -28.5887, 0.33 ) }
    dend_16 { pt3dadd( 173.51, 146.848, -28.8216, 0.66 ) }
    dend_16 { pt3dadd( 178.048, 151.135, -29.813, 0.33 ) }
    dend_16 { pt3dadd( 179.475, 152.304, -30.1085, 0.66 ) }
    dend_16 { pt3dadd( 181.196, 153.528, -30.1647, 0.66 ) }
    dend_16 { pt3dadd( 184.314, 155.235, -29.7082, 0.33 ) }
    dend_16 { pt3dadd( 184.884, 155.507, -29.5179, 0.66 ) }
    dend_16 { pt3dadd( 187.681, 156.695, -28.2364, 0.66 ) }
    dend_16 { pt3dadd( 193.188, 158.808, -24.5756, 0.66 ) }
    dend_16 { pt3dadd( 197.071, 160.373, -21.7148, 0.33 ) }
    dend_16 { pt3dadd( 197.485, 160.547, -21.3391, 0.66 ) }
    dend_16 { pt3dadd( 200.57, 161.93, -18.1687, 0.33 ) }
    dend_16 { pt3dadd( 200.963, 162.117, -17.7609, 0.66 ) }
    dend_16 { pt3dadd( 204.622, 163.895, -14.0541, 0.33 ) }
    dend_16 { pt3dadd( 208.733, 166.023, -10.2232, 0.66 ) }
    dend_16 { pt3dadd( 214.183, 168.966, -5.40432, 0.33 ) }
    dend_16 { pt3dadd( 214.619, 169.2, -5.02013, 0.66 ) }
    dend_16 { pt3dadd( 216.611, 170.285, -3.26913, 0.33 ) }
    dend_16 { pt3dadd( 218.56, 171.607, -2.0446, 0.33 ) }
    dend_16 { pt3dadd( 220.485, 173.433, -1.89684, 0.33 ) }
    dend_16 { pt3dadd( 221.66, 174.967, -2.45191, 0.66 ) }
    dend_16 { pt3dadd( 222.841, 176.795, -3.82104, 0.33 ) }
    dend_16 { pt3dadd( 223.664, 178.098, -4.93467, 0.66 ) }
    dend_16 { pt3dadd( 227.39, 184.374, -10.697, 0.33 ) }
    dend_16 { pt3dadd( 228.202, 185.598, -11.8177, 0.66 ) }
    dend_16 { pt3dadd( 229.041, 186.687, -12.8671, 0.66 ) }
    dend_16 { pt3dadd( 234.053, 193.121, -19.5601, 0.33 ) }
    dend_16 { pt3dadd( 235.055, 194.359, -20.9432, 0.33 ) }
    dend_16 { pt3dadd( 235.5, 194.835, -21.4987, 0.66 ) }
    dend_16 { pt3dadd( 241.292, 199.689, -26.9383, 0.33 ) }
    dend_16 { pt3dadd( 241.92, 200.148, -27.4572, 0.66 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 59/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -72.4769, -78.3241, 19.5455, 0.66 ) }
    apic_15 { pt3dadd( -76.3332, -83.647, 21.6037, 0.66 ) }
    apic_15 { pt3dadd( -77.4439, -85.0519, 22.2172, 0.66 ) }
    apic_15 { pt3dadd( -78.6189, -86.3873, 22.8531, 0.66 ) }
    apic_15 { pt3dadd( -80.2, -88.05, 23.6927, 0.66 ) }
    apic_15 { pt3dadd( -81.6195, -89.4776, 24.419, 0.66 ) }
    apic_15 { pt3dadd( -82.7296, -90.582, 24.965, 0.33 ) }
    apic_15 { pt3dadd( -84.4273, -92.0232, 25.6703, 0.66 ) }
    apic_15 { pt3dadd( -86.5393, -93.859, 26.532, 0.66 ) }
    apic_15 { pt3dadd( -87.4761, -94.6811, 26.9084, 0.66 ) }
    apic_15 { pt3dadd( -88.9928, -95.9787, 27.5161, 0.66 ) }
    apic_15 { pt3dadd( -89.9772, -96.7912, 27.8511, 0.33 ) }
    apic_15 { pt3dadd( -91.0817, -97.7862, 28.1213, 0.66 ) }
    apic_15 { pt3dadd( -93.1784, -99.8531, 28.3933, 0.66 ) }
    apic_15 { pt3dadd( -93.9066, -100.635, 28.4523, 0.66 ) }
    apic_15 { pt3dadd( -94.4295, -101.199, 28.4997, 0.66 ) }
    apic_15 { pt3dadd( -96.2576, -103.195, 28.6775, 0.33 ) }
    apic_15 { pt3dadd( -96.9785, -104.023, 28.7474, 0.33 ) }
    apic_15 { pt3dadd( -97.1449, -104.225, 28.7599, 0.66 ) }
    apic_15 { pt3dadd( -98.6117, -106.016, 28.8945, 0.33 ) }
    apic_15 { pt3dadd( -99.6087, -107.336, 29.0041, 0.66 ) }
    apic_15 { pt3dadd( -100.102, -107.98, 29.125, 0.33 ) }
    apic_15 { pt3dadd( -100.696, -108.804, 29.4623, 0.66 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 82/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -72.4769, -78.3241, 19.5455, 0.33 ) }
    apic_14 { pt3dadd( -72.4981, -78.2827, 20.5976, 0.33 ) }
    apic_14 { pt3dadd( -72.5543, -78.1729, 23.3927, 0.66 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 85/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -35.312, -23.2938, 11.0004, 0.66 ) }
    apic_12 { pt3dadd( -34.5306, -21.518, 9.73274, 0.66 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 87/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -35.312, -23.2938, 11.0004, 0.66 ) }
    apic_11 { pt3dadd( -38.9059, -22.6046, 15.3558, 0.66 ) }
    apic_11 { pt3dadd( -40.8449, -22.2475, 17.3681, 0.66 ) }
    apic_11 { pt3dadd( -43.2367, -21.9068, 19.5535, 0.66 ) }
    apic_11 { pt3dadd( -48.3564, -21.4682, 23.5597, 0.66 ) }
    apic_11 { pt3dadd( -52.7011, -21.256, 26.3689, 0.66 ) }
    apic_11 { pt3dadd( -55.7226, -21.1085, 28.3225, 0.33 ) }
    apic_11 { pt3dadd( -58.7597, -21.0189, 29.9012, 0.66 ) }
    apic_11 { pt3dadd( -61.677, -20.9803, 31.1828, 0.33 ) }
    apic_11 { pt3dadd( -65.7835, -21.1983, 32.532, 0.66 ) }
    apic_11 { pt3dadd( -71.0135, -21.8057, 32.6487, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_22 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    apic_17 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    apic_19 ModelViewParmSubset_2.append()
    apic_18 ModelViewParmSubset_2.append()
    apic_16 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    apic_21 ModelViewParmSubset_2.append()
    apic_20 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    apic_15 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_22 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    apic_21 ModelViewParmSubset_4.append()
    apic_20 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_5 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_12 = new SectionList()
    apic_3 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    apic_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_9 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_4 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_22 = new SectionList()
    apic_17 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_14 OneSecGrp_SectionRef_24.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    apic_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_13 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_42 = new SectionList()
    apic_15 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_11 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_5 = new SectionList()
    apic_4 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_6 = new SectionList()
    apic_1 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_8 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_13 = new SectionList()
    apic_2 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_3 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    apic_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    apic_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_10 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_11 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    apic_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()
    apic_20 apical.append()
    apic_21 apical.append()
    apic_22 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_0, axon_0, axon_0, apic_4, apic_1, apic_1, apic_1, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_3, dend_3, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_7, apic_7, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_9, apic_9, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_9 all.append()
    apic_9 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_1 nseg = 7
    apic_5 nseg = 3
    apic_3 nseg = 7
    apic_22 nseg = 11
    dend_9 nseg = 7
    dend_7 nseg = 15
    dend_4 nseg = 3
    apic_17 nseg = 7
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_6 nseg = 11
    dend_5 nseg = 7
    apic_19 nseg = 19
    apic_18 nseg = 3
    apic_16 nseg = 17
    dend_18 nseg = 5
    dend_15 nseg = 3
    apic_13 nseg = 5
    dend_17 nseg = 3
    dend_16 nseg = 9
    apic_15 nseg = 3
    apic_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L23_BTC_e051419629_0_0


