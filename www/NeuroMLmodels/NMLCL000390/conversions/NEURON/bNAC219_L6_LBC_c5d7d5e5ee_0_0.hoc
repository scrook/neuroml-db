// Cell: bNAC219_L6_LBC_c5d7d5e5ee_0_0
/*
{
  "id" : "bNAC219_L6_LBC_c5d7d5e5ee_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-9.54279, 2.1457, 0.213728, 3.05026", "-8.50245, 1.95075, 0.185339, 5.11751", "-7.4621, 1.75581, 0.15695, 8.02784", "-6.42175, 1.56087, 0.12856, 9.03175", "-5.38141, 1.36592, 0.100171, 9.83239", "-4.34106, 1.17098, 0.0717818, 10.6884", "-3.30071, 0.976035, 0.0433924, 11.5727", "-2.26037, 0.781092, 0.0150031, 12.0226", "-1.22002, 0.586148, -0.0133862, 12.0435", "-0.179673, 0.391205, -0.0417756, 12.0367", "0.860674, 0.196261, -0.0701649, 12.0298", "1.90102, 0.0013176, -0.0985543, 12.0232", "2.94137, -0.193626, -0.126944, 12.0171", "3.98171, -0.388569, -0.155333, 12.011", "5.02206, -0.583513, -0.183722, 12.0049", "6.06241, -0.778456, -0.212112, 11.8239", "7.10276, -0.9734, -0.240501, 11.3971", "8.1431, -1.16834, -0.26889, 10.4445", "9.18345, -1.36329, -0.29728, 7.79982", "10.2238, -1.55823, -0.325669, 5.2634", "11.2641, -1.75317, -0.354058, 3.00159" ]
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "3.49319, 7.24505, -1.57561, 6.41", "3.48952, 7.38464, -1.61817, 6.41", "3.43815, 9.33917, -2.21414, 3.68", "3.40552, 10.5803, -2.59258, 3.61", "3.37845, 11.6103, -2.90665, 3.61", "3.3578, 12.396, -3.14621, 3.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500007958597263
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.51681, 3.50105, -6.38561, 2.06", "-11.5874, 6.26663, -5.48572, 2.06", "-13.0468, 8.13507, -5.03146, 1.18", "-13.8199, 9.08978, -4.84339, 1.18", "-14.6183, 10.0829, -4.68458, 1.18", "-15.4557, 11.1413, -4.46154, 1.18", "-16.3763, 12.3321, -4.18083, 1.18", "-17.6161, 13.851, -3.96579, 1.18", "-18.3148, 14.7197, -3.81353, 1.18", "-19.2847, 15.9505, -3.55821, 1.18", "-20.6345, 17.7327, -3.11134, 1.55", "-21.0819, 18.3522, -2.91586, 1.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500007958597263
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-9.51681, 3.50105, -6.38561, 0.81", "-11.237, 2.69566, -7.08283, 0.81", "-12.5431, 1.91342, -7.63399, 0.81", "-13.1381, 1.44789, -7.90435, 0.96", "-14.0421, 0.465452, -8.37178, 0.96", "-14.3877, -0.026129, -8.57495, 0.96", "-14.9784, -1.05657, -9.04812, 0.96", "-15.0868, -1.41088, -9.23219, 0.96", "-15.2654, -2.21058, -9.68066, 0.66", "-15.4876, -3.24193, -10.333, 1.18", "-15.6195, -3.74327, -10.6847, 1.18", "-16.0817, -4.99321, -11.6271, 1.18", "-16.7643, -6.40096, -12.7167, 1.18", "-17.3266, -7.43221, -13.4711, 1.11", "-17.719, -8.14604, -13.9383, 1.11", "-18.2233, -9.13425, -14.5715, 0.88", "-18.4853, -9.69472, -14.9853, 0.88", "-18.8887, -10.6821, -15.7408, 1.33", "-19.3011, -11.7969, -16.6575, 1.33", "-19.758, -13.0666, -17.8906, 1.03", "-20.1861, -14.4072, -19.321, 0.74", "-20.6939, -16.3504, -21.5384, 1.18", "-20.8025, -16.8583, -22.1474, 1.18", "-20.8707, -17.4172, -22.8324, 0.88", "-20.9065, -18.4345, -24.0256, 0.59", "-20.8883, -19.2263, -24.9332, 1.4", "-20.879, -19.7475, -25.4529, 1.4", "-20.8848, -20.3649, -26.0355, 1.77", "-21.0205, -21.8529, -27.5716, 0.88", "-21.1196, -22.4106, -28.1894, 0.88", "-21.516, -23.9796, -29.9171, 0.88", "-21.8325, -24.7594, -30.9578, 1.11", "-22.2044, -25.5078, -32.0216, 0.74", "-22.5023, -26.0328, -32.7684, 0.74", "-22.9855, -26.7876, -33.8276, 0.74", "-23.392, -27.4877, -34.7401, 1.47", "-24.2757, -29.2254, -36.6353, 0.07", "-24.563, -29.7983, -37.2642, 1.11", "-24.8752, -30.358, -37.8835, 0.07", "-25.1342, -30.7186, -38.3059, 0.66", "-25.6359, -31.2662, -38.9505, 1.33", "-26.6977, -32.1916, -40.1305, 0.07", "-27.6224, -32.8763, -40.9941, 1.18", "-27.9537, -33.081, -41.3026, 1.18", "-28.9556, -33.6148, -42.2341, 0.07", "-29.2373, -33.745, -42.5011, 0.07", "-30.2903, -34.1672, -43.493, 1.25", "-30.8817, -34.3733, -44.058, 0.81", "-31.9975, -34.7524, -45.0475, 0.37", "-32.7158, -35.0063, -45.6922, 1.18", "-33.8052, -35.4335, -46.6962, 0.44", "-34.1485, -35.6011, -47.0202, 0.44", "-34.3638, -35.7324, -47.2229, 0.44", "-35.1469, -36.3074, -48.0501, 1.47", "-35.8667, -36.9077, -48.8207, 0.07", "-36.4383, -37.428, -49.4273, 1.11", "-37.0183, -37.9746, -49.9765, 0.15", "-37.6141, -38.5265, -50.5014, 0.15", "-38.4452, -39.2975, -51.1758, 1.4", "-38.8547, -39.6749, -51.5102, 1.4", "-39.2, -40.0019, -51.7825, 1.4", "-40.1464, -40.9816, -52.6764, 0.22", "-40.6009, -41.53, -53.2304, 0.22", "-40.8944, -41.9507, -53.6881, 0.22", "-41.465, -42.8141, -54.8534, 1.99", "-41.8989, -43.527, -55.9197, 0.07", "-42.4472, -44.5356, -57.5189, 1.55", "-42.8735, -45.4037, -58.9699, 0.07", "-43.228, -46.1678, -60.2454, 1.47", "-43.8974, -47.582, -62.6701, 0.07", "-44.2069, -48.2319, -63.7206, 0.88", "-44.4901, -48.815, -64.5999, 0.29", "-44.7379, -49.3751, -65.2945, 0.29", "-44.9103, -49.8182, -65.7452, 1.25", "-45.4893, -51.5292, -67.1107, 0.29", "-45.8314, -52.675, -67.8158, 0.29", "-46.0705, -53.5444, -68.3109, 1.4", "-46.3995, -54.8958, -69.0115, 0.07", "-46.5538, -55.6828, -69.3824, 1.18", "-46.6387, -56.359, -69.6623, 1.18", "-46.671, -56.9355, -69.8954, 1.18", "-46.6941, -57.7112, -70.2912, 0.07", "-46.7124, -58.29, -70.6404, 0.07", "-46.7634, -58.6845, -70.9265, 1.03", "-47.0887, -59.9652, -71.9313, 0.07", "-47.6083, -61.1339, -72.9225, 0.07", "-47.995, -61.7337, -73.5093, 1.03", "-48.1759, -61.9627, -73.743, 1.03", "-49.0525, -62.9529, -74.7457, 0.07", "-49.6095, -63.5215, -75.3281, 0.59", "-50.6551, -64.4878, -76.3563, 0.07", "-51.7495, -65.5233, -77.4987, 0.59", "-52.2805, -66.0261, -78.1048, 0.07", "-52.6277, -66.3342, -78.5309, 0.96", "-53.2572, -66.8341, -79.3884, 0.07", "-53.6913, -67.0822, -80.0223, 0.59", "-54.6148, -67.3659, -81.3791, 0.07", "-55.1795, -67.3671, -82.182, 1.47", "-55.8722, -67.2088, -83.3247, 0.07", "-56.3684, -67.0448, -84.2527, 1.11", "-57.1241, -66.7551, -85.7121, 0.07", "-57.4007, -66.6554, -86.2378, 1.18", "-58.2808, -66.3806, -87.8566, 0.52", "-59.6193, -66.0314, -90.6191, 0.52", "-60.5208, -65.9103, -92.5897, 0.07", "-60.7376, -65.9075, -93.1421, 1.18", "-61.5378, -66.0443, -95.5958, 0.07", "-61.9368, -66.2192, -97.1567, 1.11", "-62.3804, -66.768, -100.138, 0.07", "-62.411, -66.9951, -101.035, 1.11", "-62.0947, -68.2505, -105.12, 0.44", "-61.9031, -68.6746, -106.41, 1.03", "-61.5346, -69.2697, -108.072, 1.03", "-60.9597, -70.092, -110.244, 0.07", "-60.5185, -70.6765, -111.824, 1.25", "-60.1078, -71.1938, -113.364, 0.59", "-59.7404, -71.6638, -115.139, 0.59", "-59.6012, -71.9, -116.54, 0.37", "-59.6019, -71.937, -117.134, 0.37", "-59.8149, -71.8227, -119.313, 0.81", "-59.8711, -71.7774, -119.681, 0.81", "-60.4691, -71.2494, -122.789, 0.52", "-60.643, -71.086, -123.549, 0.52", "-61.0618, -70.6936, -124.958, 0.52", "-61.9473, -69.9153, -127.238, 0.52", "-62.2171, -69.7085, -127.79, 0.52", "-62.3639, -69.6022, -128.051, 0.52", "-62.927, -69.2839, -128.824, 0.52", "-63.3741, -69.0758, -129.382, 0.52", "-64.6197, -68.6774, -130.564, 0.52", "-66.1304, -68.327, -131.76, 0.52", "-66.8496, -68.1993, -132.336, 0.15", "-67.6604, -68.0923, -132.998, 0.15", "-68.0362, -68.0749, -133.306, 0.15", "-68.9922, -68.0867, -134.052, 0.15", "-69.8417, -68.171, -134.571, 0.15", "-71.1454, -68.3153, -135.161, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500007958597263,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "9.58319, -4.96195, 5.49439, 1.11", "9.62811, -5.08656, 5.49439, 1.11", "9.91092, -5.8711, 5.49439, 1.11", "10.2382, -6.77899, 5.49439, 1.11", "10.5579, -7.66574, 5.49439, 1.11", "10.8707, -8.53369, 5.49439, 1.11", "11.3543, -9.87501, 5.49439, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500007958597263
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "5.25319, -7.0192, -1.63561, 1.18", "5.36364, -7.39079, -1.61748, 1.18", "5.8323, -8.76047, -1.55865, 1.18", "6.29131, -9.95465, -1.29773, 0.96", "6.66525, -10.8684, -1.04483, 0.96", "7.02013, -11.7356, -0.786721, 0.96", "7.62634, -13.2615, -0.322918, 1.33", "8.23376, -14.8882, 0.23126, 1.69", "9.25531, -17.9253, 1.45506, 0.88", "9.52612, -18.997, 1.93709, 0.88", "9.65094, -19.743, 2.29327, 0.88", "9.68767, -20.5103, 2.6578, 0.88", "9.55928, -21.8903, 3.2869, 0.52", "9.27747, -23.1512, 3.77546, 0.52", "8.86636, -24.3673, 4.15105, 0.81", "8.4867, -25.3325, 4.44999, 0.81", "7.75699, -27.0963, 4.96808, 0.81", "7.38733, -28.0015, 5.20874, 0.81", "6.75222, -29.676, 5.61161, 1.11", "6.16035, -31.2976, 6.00614, 0.81", "5.90861, -32.0002, 6.19317, 1.11", "5.45102, -33.3199, 6.56157, 0.88", "5.12887, -34.3077, 6.84304, 0.88", "4.53595, -36.3396, 7.40883, 0.88", "4.252, -37.4715, 7.70586, 0.59", "4.06785, -38.2667, 7.89597, 0.59", "3.71788, -39.7258, 8.22638, 0.59", "3.31514, -41.1391, 8.52731, 0.59", "3.00206, -42.0688, 8.70597, 0.59", "2.56067, -43.272, 8.89748, 0.81", "2.23476, -44.208, 9.06881, 0.81", "1.70542, -45.8017, 9.40774, 0.96", "1.25175, -47.3205, 9.76413, 0.96", "0.976361, -48.4489, 10.045, 0.96", "0.76451, -49.7009, 10.3822, 0.96", "0.560509, -51.8699, 11.0473, 0.44", "0.545386, -52.8343, 11.3696, 0.44", "0.563647, -53.5023, 11.6114, 0.44", "0.58437, -53.9597, 11.7872, 0.44", "0.595735, -55.2737, 12.2938, 0.52", "0.538645, -56.3274, 12.6758, 0.52", "0.478031, -57.005, 12.8804, 0.52", "0.360931, -58.32, 13.2379, 0.52", "0.225556, -60.1242, 13.6692, 0.81", "0.183622, -61.2577, 13.8958, 0.81", "0.149476, -62.3936, 14.0648, 0.66", "0.0861098, -64.2122, 14.2741, 0.66", "0.0310088, -65.7343, 14.4046, 0.66", "0.00511602, -66.8191, 14.4661, 0.66", "-0.0381341, -68.2456, 14.5102, 1.03", "-0.170726, -70.2574, 14.5714, 0.81", "-0.394149, -72.3657, 14.64, 0.81", "-0.586523, -73.6545, 14.7186, 0.81", "-0.877263, -75.342, 14.872, 0.81", "-1.0327, -76.2294, 14.9769, 0.81", "-1.36605, -78.4348, 15.2928, 0.81", "-1.4581, -79.2951, 15.439, 0.81", "-1.59183, -80.9538, 15.8042, 0.66", "-1.64836, -82.0819, 16.0972, 1.03", "-1.64719, -83.4799, 16.4848, 0.44", "-1.56494, -84.3314, 16.7252, 0.44", "-1.38088, -85.2045, 16.967, 0.52", "-0.968599, -86.8236, 17.3817, 0.96", "-0.518996, -88.5676, 17.8288, 0.37", "-0.337739, -89.3622, 18.052, 0.37", "-0.27346, -89.8655, 18.228, 0.37", "-0.251957, -90.8227, 18.6259, 0.37", "-0.336884, -91.6932, 19.029, 0.37", "-0.585084, -93.2067, 19.8354, 0.37", "-0.796392, -94.2446, 20.4514, 0.37", "-1.17189, -95.9858, 21.4892, 0.37", "-1.37826, -96.9702, 22.0749, 0.59", "-1.63025, -98.3542, 22.8728, 0.59", "-1.99972, -100.565, 24.0555, 0.29", "-2.03584, -100.781, 24.1566, 0.29", "-2.28659, -102.274, 24.757, 0.59", "-2.36167, -102.854, 24.9293, 0.59", "-2.50988, -104.278, 25.2475, 0.59", "-2.64115, -105.556, 25.461, 1.69", "-2.77509, -106.631, 25.5883, 1.69", "-2.94226, -108.208, 25.7699, 1.25", "-3.0753, -109.861, 25.9529, 0.66", "-3.1449, -110.915, 26.0655, 0.66", "-3.22469, -112.206, 26.1994, 0.37", "-3.27064, -113.112, 26.2627, 0.37", "-3.3404, -114.403, 26.3183, 1.4", "-3.48, -115.718, 26.3487, 1.18", "-3.63459, -116.7, 26.3595, 0.81", "-3.86859, -118.078, 26.3646, 0.37", "-4.0882, -119.227, 26.3699, 0.37", "-4.26973, -119.967, 26.3805, 0.37", "-4.71772, -121.423, 26.4233, 0.66", "-5.05773, -122.382, 26.472, 0.66", "-5.56227, -123.818, 26.5786, 0.66", "-5.94721, -125.16, 26.7066, 0.66", "-6.1591, -126.112, 26.8174, 0.66", "-6.27944, -127.121, 26.9507, 0.52", "-6.28217, -128.333, 27.1238, 0.52", "-6.16507, -130.029, 27.392, 0.66", "-5.8774, -132.151, 27.7705, 0.66", "-5.71112, -132.914, 27.9686, 0.66", "-5.29118, -134.31, 28.4127, 0.44", "-5.10392, -134.797, 28.6065, 0.44", "-4.73198, -135.572, 28.9886, 0.44", "-4.29279, -136.458, 29.4993, 0.44", "-3.27215, -138.521, 30.8632, 0.44", "-2.71706, -139.698, 31.6703, 0.44", "-2.30317, -140.6, 32.2901, 0.44", "-1.90747, -141.323, 32.8282, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500007958597263,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.91681, -3.5677, -8.44561, 1.03", "-7.93163, -3.57646, -8.52757, 1.03", "-8.1026, -3.75737, -9.58327, 1.03", "-8.20751, -3.91235, -10.3465, 1.03", "-8.44608, -4.17777, -11.7515, 1.03", "-8.62568, -4.32999, -12.6976, 1.03", "-10.4908, -5.56148, -21.6225, 1.25", "-10.76, -5.67879, -22.9054, 1.25", "-11.4658, -5.87273, -26.4596, 1.25", "-11.8803, -5.92598, -28.5728, 0.59", "-12.0997, -5.9264, -29.636, 0.59", "-12.2709, -5.90997, -30.2294, 0.96", "-13.6793, -5.5335, -31.2226, 0.07", "-14.1843, -5.3655, -31.5503, 0.07", "-14.7654, -5.24349, -31.9847, 0.37", "-15.6428, -5.2557, -32.9, 0.37", "-15.9625, -5.30105, -33.5278, 1.18", "-16.4792, -5.37235, -34.8027, 1.18", "-17.7361, -5.5315, -38.2343, 0.74", "-18.7255, -5.5386, -41.3029, 1.4", "-18.9746, -5.4955, -42.2387, 1.4", "-20.4498, -4.83761, -49.7675, 0.88", "-20.8267, -4.58274, -52.0013, 1.33", "-20.9329, -4.48748, -52.6894, 1.33", "-21.3996, -3.87033, -56.1187, 1.33", "-21.9816, -2.8464, -60.6628, 1.33", "-23.1427, -0.739184, -68.9808, 1.03", "-23.3206, -0.435799, -70.0847, 0.59", "-23.5743, -0.087844, -71.3743, 0.59", "-24.3905, 0.757014, -74.6118, 1.4", "-24.7232, 0.959922, -75.54, 1.4", "-27.7215, 1.95156, -81.5928, 0.59", "-28.518, 2.05944, -82.7787, 0.59", "-29.6396, 2.10252, -84.3997, 0.22", "-30.7845, 2.06792, -85.9764, 1.33", "-34.2608, 1.81061, -90.5365, 0.15", "-34.8647, 1.75767, -91.3295, 0.15", "-35.9437, 1.68497, -92.7968, 1.25", "-38.9346, 1.63545, -97.2213, 0.37", "-39.5536, 1.65955, -98.1807, 0.37", "-41.0799, 1.79406, -100.417, 1.55", "-41.7221, 1.89626, -101.351, 1.55", "-44.3659, 2.42914, -105.083, 0.52", "-44.8634, 2.54467, -105.692, 0.52", "-45.4269, 2.69529, -106.224, 0.52", "-46.8904, 3.15903, -107.415, 1.55", "-51.3952, 4.82502, -110.609, 0.29", "-53.0874, 5.5797, -111.809, 0.29", "-55.4854, 6.86939, -113.4, 1.25", "-57.8247, 8.41237, -115.333, 0.22", "-58.8621, 9.24817, -116.447, 0.22", "-59.315, 9.74298, -117.241, 0.22", "-60.4243, 11.13, -120.139, 1.25", "-60.6672, 11.4164, -121.124, 1.25", "-61.606, 12.3179, -125.879, 1.25", "-62.2182, 12.7174, -129.262, 1.25", "-63.3749, 13.1272, -135.076, 1.25", "-64.225, 13.2136, -138.674, 1.25", "-65.736, 13.1165, -143.855, 0.37", "-66.1829, 13.036, -145.118, 0.37", "-66.3365, 12.9951, -145.44, 0.37", "-67.2595, 12.7677, -146.756, 1.11", "-69.3559, 12.5196, -148.544, 0.74", "-70.5838, 12.571, -149.315, 0.22", "-71.7682, 12.7676, -149.853, 0.22", "-72.5525, 12.9713, -150.217, 0.22", "-74.2125, 13.5242, -150.968, 0.74", "-76.655, 14.6226, -152.202, 0.29", "-77.5666, 15.1154, -152.658, 0.74", "-78.7296, 15.8174, -153.299, 0.07", "-79.7712, 16.5236, -153.891, 0.07", "-80.1276, 16.775, -154.091, 0.37", "-82.2174, 18.1087, -155.533, 0.37", "-83.1381, 18.594, -156.184, 0.37", "-83.9631, 18.909, -156.842, 0.37", "-84.5627, 19.0458, -157.446, 0.37", "-85.0445, 19.1098, -157.967, 0.37", "-87.7718, 19.3106, -160.883, 0.37", "-88.6816, 19.2587, -161.833, 0.37", "-89.3442, 19.1932, -162.525, 0.37", "-91.8273, 18.9154, -164.969, 0.37", "-92.5772, 18.844, -165.647, 0.37", "-93.9041, 18.7595, -166.673, 0.37", "-96.9403, 18.639, -168.516, 0.15", "-97.676, 18.675, -168.965, 0.15", "-98.868, 18.8382, -169.645, 0.15", "-99.9973, 19.095, -170.215, 0.15", "-101.287, 19.5145, -170.876, 0.15", "-102.704, 20.1424, -171.572, 1.4", "-106.353, 22.1719, -173.205, 0.07", "-107.18, 22.6838, -173.624, 0.52", "-108.241, 23.3874, -174.199, 0.07", "-109.266, 24.1239, -174.76, 0.07", "-110.263, 24.9325, -175.323, 0.07", "-111.231, 25.7992, -175.834, 0.07", "-112.829, 27.0636, -176.496, 0.07", "-113.43, 27.4977, -176.801, 0.07" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500007958597263,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "11.9332, -0.272201, -1.25561, 1.25", "12.0138, -0.277046, -1.25561, 1.25", "13.054, -0.339562, -1.25561, 1.25", "14.0213, -0.397696, -1.25561, 1.25", "15.1319, -0.464443, -1.25561, 1.25", "15.7305, -0.500422, -1.25561, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500007958597263
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "11.2641, -1.75317, -0.354058, 1.17609", "26.0075, -4.51584, -0.354058, 1.17609", "40.7509, -7.27851, -0.354058, 1.17609" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "3.3578, 12.396, -3.14621, 1.55", "3.15898, 13.0651, -1.0717, 1.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "3.3578, 12.396, -3.14621, 0.88", "4.27584, 17.1291, -2.70611, 0.88", "4.40988, 17.7782, -2.62708, 0.88", "4.9862, 20.2001, -2.32918, 0.66", "5.78805, 23.2519, -1.98341, 1.18", "6.09053, 24.3454, -1.8456, 1.18", "6.449, 25.5905, -1.67399, 1.47", "6.8613, 27.0675, -1.26305, 1.47", "7.09093, 27.81, -1.06626, 1.47", "7.70083, 29.4063, -0.716063, 1.47", "8.38419, 31.2952, -0.579803, 1.47", "8.51448, 31.62, -0.55134, 1.84" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-21.0819, 18.3522, -2.91586, 0.52", "-22.96, 18.9253, -1.15557, 0.52", "-23.8298, 19.373, -0.243924, 0.37", "-24.392, 19.7656, 0.358357, 0.37", "-25.014, 20.3035, 1.02107, 0.81", "-25.6984, 20.9724, 1.71082, 0.81", "-27.7081, 22.9511, 3.42273, 0.81", "-28.2421, 23.5136, 3.77313, 0.81", "-28.7745, 24.1169, 4.07348, 0.81", "-29.1958, 24.6056, 4.33027, 0.81", "-29.7745, 25.2132, 4.68228, 0.81", "-31.1892, 26.312, 5.45846, 1.25", "-32.1192, 26.7942, 5.87122, 1.25", "-33.1013, 27.1913, 6.34123, 0.66", "-34.7236, 27.833, 7.26029, 1.03", "-35.5272, 28.1647, 7.76013, 1.03", "-36.9148, 28.8263, 8.67711, 1.03", "-37.7627, 29.3282, 9.26188, 1.03", "-38.6763, 29.9918, 9.87176, 0.74", "-40.0986, 31.338, 10.9087, 0.96", "-40.5532, 31.9158, 11.3137, 0.96", "-41.0603, 32.7845, 11.9188, 0.96", "-41.4014, 33.5444, 12.4303, 0.96", "-41.5628, 33.9798, 12.7142, 0.96", "-42.2158, 35.9499, 13.9821, 0.74", "-42.8166, 37.5069, 14.9839, 0.44", "-42.9783, 37.8933, 15.2478, 0.44", "-43.2786, 38.5868, 15.7139, 0.44", "-43.5301, 39.1133, 16.0169, 0.44", "-43.7426, 39.5333, 16.181, 0.44", "-44.2858, 40.5213, 16.3642, 0.81", "-44.4895, 40.8686, 16.4037, 0.81", "-45.613, 42.6071, 16.7532, 0.44", "-46.2375, 43.4492, 17.0341, 0.44", "-46.8516, 44.2222, 17.4147, 0.44", "-47.2203, 44.6803, 17.6614, 0.44", "-47.7382, 45.3272, 18.0434, 0.44", "-48.7413, 46.4573, 18.8208, 0.59", "-49.6429, 47.2342, 19.5505, 0.59", "-50.5609, 47.966, 20.4679, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-21.0819, 18.3522, -2.91586, 1.33", "-21.5469, 20.6857, -2.98832, 1.33", "-21.922, 22.0957, -3.04333, 0.96", "-22.4567, 23.7332, -3.1117, 1.33", "-23.1219, 25.4182, -3.18194, 1.03", "-23.8142, 26.8698, -3.23823, 1.03", "-24.2175, 27.7155, -3.27103, 1.03", "-24.8119, 28.7115, -3.37727, 1.03", "-25.3334, 29.4325, -3.43481, 1.03", "-26.1598, 30.3784, -3.4528, 1.03", "-27.0777, 31.2735, -3.45843, 1.92" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "11.3543, -9.87501, 5.49439, 0.74", "11.9391, -12.4993, 5.46341, 0.74", "12.3242, -14.3122, 5.46042, 0.44", "12.6255, -15.808, 5.45467, 0.44", "13.0307, -18.535, 5.40507, 0.52", "13.3135, -21.8233, 5.28969, 0.52", "13.3596, -22.7872, 5.2416, 0.52", "13.3484, -24.265, 5.19719, 0.52", "13.2364, -25.695, 5.10971, 0.52", "12.9948, -27.8771, 4.91219, 0.52", "12.7918, -29.6229, 4.6911, 0.37", "12.6447, -31.3304, 4.46013, 0.37", "12.5733, -32.8924, 4.33074, 0.37", "12.6064, -34.9199, 4.2511, 0.88", "12.8201, -37.4832, 4.2405, 0.52", "12.9847, -38.7396, 4.2892, 0.52", "13.2699, -40.6094, 4.4047, 0.44", "13.6568, -43.2076, 4.59555, 0.74", "13.9717, -45.0705, 4.74419, 0.29", "14.1876, -46.1139, 4.82673, 0.29", "14.6976, -48.2802, 4.96818, 0.96", "15.2441, -50.3388, 5.09443, 0.44", "15.544, -51.4499, 5.13387, 0.44", "15.958, -52.9127, 5.15757, 0.52", "16.289, -54.1552, 5.18037, 0.52", "16.6525, -55.4675, 5.1954, 0.52", "17.2974, -57.6689, 5.24086, 0.52", "17.5754, -58.8123, 5.28282, 0.52", "17.8475, -60.4305, 5.33693, 0.44", "17.9141, -61.2575, 5.37953, 0.44", "18.0196, -62.8691, 5.48096, 0.44", "18.0578, -63.9821, 5.54789, 0.44", "18.1178, -65.7159, 5.63828, 0.88", "18.1834, -66.8415, 5.72792, 0.88", "18.3497, -68.6736, 5.9264, 0.37", "18.561, -70.6432, 6.18229, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "11.3543, -9.87501, 5.49439, 0.66", "12.1903, -9.06762, 6.56338, 0.66", "12.3667, -8.90061, 6.77636, 0.66", "13.0103, -8.40731, 7.5066, 0.66", "13.2581, -8.24102, 7.7582, 0.66", "13.6272, -7.99336, 8.13292, 0.66", "14.5412, -7.38007, 9.06087, 0.96", "14.994, -7.10737, 9.48856, 0.96", "16.0109, -6.53034, 10.4551, 0.96", "16.5464, -6.2373, 10.9573, 0.44" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "15.7305, -0.500422, -1.25561, 0.74", "16.3757, 0.444939, -1.48822, 0.74", "17.0568, 1.2167, -1.73294, 0.74", "17.8765, 2.04278, -1.99651, 0.74", "19.234, 3.27827, -2.40778, 0.74", "20.1967, 4.07357, -2.67845, 0.74", "21.2032, 4.81122, -2.98561, 0.74", "22.5521, 5.61411, -3.40897, 0.74", "23.5929, 6.1613, -3.71804, 0.74", "24.5643, 6.62745, -3.97398, 0.96", "26.0757, 7.34565, -4.29239, 0.96", "27.9739, 8.34037, -4.74672, 0.59", "28.9722, 8.92338, -4.98793, 0.59", "30.2109, 9.66457, -5.30075, 0.74", "31.4249, 10.3788, -5.60676, 0.74", "32.5891, 11.097, -5.87873, 0.74", "35.0797, 12.7124, -6.39332, 0.74", "35.7476, 13.165, -6.50744, 1.4", "36.9352, 14.0269, -6.75326, 1.18", "37.646, 14.5641, -6.91668, 1.18", "38.4891, 15.2499, -7.11273, 1.03", "39.2948, 15.8905, -7.27384, 1.03", "40.4811, 16.7571, -7.4929, 0.66", "42.1024, 17.825, -7.88257, 0.66", "42.6155, 18.1451, -8.03031, 0.66", "43.1699, 18.4136, -8.22456, 0.66", "44.3264, 18.7328, -8.65505, 0.66", "46.1684, 18.9326, -9.29947, 0.66", "47.2684, 18.9872, -9.67643, 0.66", "47.4297, 18.9947, -9.72694, 0.96", "49.0088, 19.1505, -10.2122, 0.88", "50.5222, 19.4074, -10.6541, 0.88", "52.055, 19.8185, -11.1259, 0.59", "54.0748, 20.5189, -11.717, 0.59", "55.226, 20.9794, -12.0667, 0.59", "55.9519, 21.3099, -12.2736, 0.59", "57.1575, 21.9311, -12.5899, 0.59", "58.8137, 22.7663, -13.0364, 1.03", "59.6652, 23.1156, -13.2443, 1.03", "60.1409, 23.2601, -13.3416, 1.03", "61.93, 23.7666, -13.7772, 0.44", "62.3999, 23.914, -13.8933, 0.44", "63.5551, 24.3668, -14.1619, 0.59", "64.9252, 25.0933, -14.4236, 0.59", "65.8366, 25.6491, -14.5907, 0.59", "67.6246, 26.798, -14.9036, 0.88", "68.7296, 27.571, -15.1189, 0.88", "69.42, 28.1005, -15.3007, 0.88", "70.904, 29.3142, -15.756, 0.59", "72.295, 30.3847, -16.2069, 0.59", "73.3662, 31.119, -16.5908, 0.59", "74.5944, 31.9092, -17.0497, 0.59", "76.543, 33.1443, -17.7797, 0.59", "77.0244, 33.4566, -17.977, 0.59", "78.3764, 34.3723, -18.5418, 0.37", "79.7417, 35.3747, -19.0957, 1.47", "80.8206, 36.1763, -19.4771, 1.47", "83.1927, 37.926, -20.1873, 0.52", "84.8387, 39.1438, -20.6201, 0.96", "85.9794, 40.0012, -20.9234, 0.22", "86.3628, 40.2939, -21.0206, 0.22", "87.3096, 40.9715, -21.2218, 0.22", "88.0669, 41.4711, -21.3798, 1.03", "89.3161, 42.259, -21.6609, 0.07", "90.095, 42.7392, -21.8096, 0.88", "90.7906, 43.1709, -21.9065, 0.88", "91.2788, 43.476, -21.9593, 0.88", "95.2028, 45.9135, -22.2591, 0.07", "96.3657, 46.6114, -22.3072, 1.4", "97.6675, 47.3746, -22.3249, 0.37", "99.8051, 48.6148, -22.3808, 0.07", "100.599, 49.0658, -22.4048, 0.74", "101.539, 49.5828, -22.4265, 0.74", "102.203, 49.9347, -22.4284, 0.74", "104.583, 51.2011, -22.4319, 0.22", "105.896, 51.882, -22.4761, 1.03", "106.821, 52.3287, -22.5369, 1.03", "108.751, 53.1631, -22.6266, 0.15", "109.555, 53.4551, -22.6209, 0.59", "110.461, 53.7194, -22.5663, 0.59", "111.186, 53.859, -22.4822, 0.59", "112.742, 54.0477, -22.2436, 0.07", "114.396, 54.1607, -21.9868, 0.22", "116.366, 54.1986, -21.6861, 0.22", "117.515, 54.2011, -21.519, 1.62", "118.666, 54.196, -21.3606, 1.62", "120.084, 54.2124, -21.1796, 0.07", "121.316, 54.26, -21.0441, 0.07", "122.391, 54.3959, -20.9902, 0.07", "123.154, 54.5719, -21.0083, 0.07", "123.731, 54.7545, -21.0311, 0.07", "124.603, 55.0976, -21.1426, 1.11", "125.535, 55.5305, -21.3282, 1.11", "127.304, 56.426, -21.7648, 0.07", "128.076, 56.8183, -21.971, 0.07", "129.104, 57.3199, -22.2554, 0.07", "130.979, 58.222, -22.8017, 0.29", "131.543, 58.4736, -22.9624, 0.29", "132.379, 58.8127, -23.172, 0.29", "133.617, 59.273, -23.4525, 0.29", "134.006, 59.42, -23.5346, 0.96", "135.842, 60.1732, -23.9167, 0.07", "137.053, 60.6787, -24.1313, 0.07", "138.324, 61.2045, -24.3767, 0.07", "139.713, 61.7629, -24.6501, 0.74", "140.56, 62.0856, -24.8363, 0.74", "142.082, 62.6063, -25.1584, 0.07", "143.284, 62.956, -25.3943, 0.07", "143.832, 63.0964, -25.4912, 0.52", "145.197, 63.3896, -25.6964, 0.07", "146.84, 63.6717, -25.8668, 1.47", "148.857, 64.0385, -26.013, 0.07", "149.588, 64.1908, -26.0373, 0.96", "150.999, 64.5511, -26.0324, 0.07", "151.414, 64.6781, -26.0154, 0.07", "153.135, 65.2972, -25.8721, 0.07", "155.306, 66.187, -25.5935, 0.07", "156.527, 66.776, -25.3834, 1.18", "157.707, 67.397, -25.15, 0.07", "158.832, 68.0486, -24.9024, 0.07", "159.734, 68.6006, -24.6886, 0.37", "160.61, 69.1805, -24.4834, 0.37", "162.797, 70.6138, -24.012, 0.29", "163.581, 71.1296, -23.8672, 0.29", "164.248, 71.5724, -23.7701, 0.66", "165.973, 72.7499, -23.5533, 0.96", "167.155, 73.531, -23.4767, 0.07", "168.093, 74.1104, -23.4757, 0.52", "168.352, 74.2575, -23.4946, 0.52", "169.063, 74.64, -23.552, 0.52", "170.277, 75.2228, -23.6517, 0.52", "171.791, 75.9219, -23.7775, 0.22", "172.707, 76.3466, -23.8375, 1.18", "173.098, 76.5404, -23.8615, 0.07", "174.252, 77.1511, -23.9162, 0.07", "174.96, 77.6083, -23.9293, 0.07", "176.599, 78.906, -23.8898, 0.07", "177.022, 79.3198, -23.8557, 0.07", "177.664, 80.0526, -23.7888, 0.88", "178.365, 80.9708, -23.6966, 0.88", "179.482, 82.6895, -23.528, 0.07", "180.092, 83.7335, -23.4226, 0.07", "180.399, 84.2984, -23.3609, 0.07", "180.777, 84.9648, -23.2934, 1.03", "181.064, 85.4485, -23.2476, 1.03", "181.801, 86.5853, -23.1431, 0.07", "182.459, 87.4692, -23.0627, 0.07", "182.828, 87.9156, -23.0195, 0.07", "183.505, 88.6488, -22.9617, 0.07", "184.359, 89.49, -22.9047, 1.03", "185.661, 90.6079, -22.8359, 0.07", "186.285, 91.0721, -22.8085, 0.74", "187.264, 91.6709, -22.786, 0.74", "188.219, 92.1395, -22.779, 0.07", "188.816, 92.3549, -22.783, 0.07", "190.106, 92.6852, -22.7969, 0.07", "190.687, 92.8022, -22.8021, 0.81", "192.7, 93.2127, -22.7953, 0.07", "193.27, 93.343, -22.7557, 1.03", "194.216, 93.6045, -22.6275, 1.03", "195.922, 94.2306, -22.3095, 0.07", "196.288, 94.4059, -22.2239, 0.07", "196.932, 94.761, -22.0537, 0.96", "198.328, 95.6426, -21.6425, 0.22", "199.21, 96.2427, -21.3421, 0.22", "199.869, 96.7246, -21.0902, 0.22", "200.865, 97.4399, -20.7027, 0.22", "201.596, 97.921, -20.4441, 0.22", "202.471, 98.4197, -20.1862, 0.22", "203.396, 98.8929, -19.9813, 0.88", "203.722, 99.0448, -19.9124, 0.88", "204.907, 99.51, -19.6955, 0.22", "205.605, 99.7399, -19.5886, 0.22", "206.644, 100.01, -19.4698, 0.22", "207.511, 100.174, -19.4048, 0.22", "208.146, 100.292, -19.3565, 1.11", "209.456, 100.531, -19.2141, 0.07", "210.587, 100.758, -19.0673, 0.07", "211.152, 100.872, -18.9907, 0.07", "211.26, 100.897, -18.9752, 1.03", "213.046, 101.3, -18.7309, 0.07", "213.688, 101.451, -18.6487, 0.07", "215.055, 101.748, -18.5126, 0.07", "216.434, 101.981, -18.3488, 0.07", "217.091, 102.082, -18.2658, 1.18", "218.073, 102.252, -18.1408, 0.15", "218.967, 102.425, -18.0337, 0.15", "220.907, 102.977, -17.7393, 0.15", "222.354, 103.48, -17.4487, 0.44", "223.684, 104.032, -17.1822, 0.44", "225.457, 104.861, -16.843, 0.15", "226.607, 105.483, -16.6278, 0.15", "228.0, 106.362, -16.3822, 0.15", "230.312, 108.07, -16.0214, 0.15", "231.405, 108.926, -15.903, 0.15", "232.491, 109.774, -15.7952, 0.15", "233.284, 110.386, -15.7299, 0.15", "234.083, 111.017, -15.6836, 0.15", "234.711, 111.515, -15.6826, 0.15", "235.465, 112.353, -15.7634, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.7305, -0.500422, -1.25561, 0.66", "16.9065, -0.181421, -0.827802, 0.66", "17.4637, 0.0132363, -0.652447, 0.66", "18.4665, 0.407944, -0.373136, 0.66", "19.5383, 0.884356, -0.111009, 0.66", "20.3593, 1.26535, 0.0797242, 0.66", "21.4727, 1.79668, 0.320542, 0.66", "22.0267, 2.1134, 0.409881, 0.66", "22.4188, 2.35183, 0.462286, 0.66", "22.8778, 2.62188, 0.532374, 0.66", "23.8628, 3.13662, 0.739976, 0.66", "24.2703, 3.31548, 0.859629, 0.66", "25.216, 3.62497, 1.25632, 0.66", "26.178, 3.79483, 1.76068, 0.59", "27.2238, 3.82919, 2.41816, 0.59", "27.6801, 3.78898, 2.76807, 0.81", "27.9339, 3.74449, 2.97831, 0.81", "28.8359, 3.56635, 3.72629, 1.18", "29.7237, 3.36634, 4.4607, 1.18", "30.586, 3.15085, 5.15321, 1.62", "32.0146, 2.83997, 6.18345, 1.11", "32.7827, 2.70864, 6.69929, 0.74", "33.4308, 2.62581, 7.10068, 0.59", "33.5439, 2.61693, 7.1602, 0.59", "34.5541, 2.61523, 7.6241, 0.59", "35.6508, 2.66836, 7.97706, 0.44", "36.0123, 2.71746, 8.03411, 0.44", "36.5033, 2.83644, 8.14395, 0.44", "36.878, 2.94457, 8.24533, 0.44", "37.1918, 3.04887, 8.32804, 0.44", "37.4143, 3.11654, 8.39122, 0.44", "38.0537, 3.22775, 8.60843, 0.44", "39.2767, 3.26468, 9.02816, 0.88", "39.9238, 3.22822, 9.24576, 0.52", "40.456, 3.1863, 9.43175, 0.52", "41.5146, 3.11533, 9.79338, 0.52", "42.6026, 3.05573, 10.1409, 0.52", "43.4646, 3.02718, 10.4069, 0.52", "43.8628, 3.0251, 10.5124, 0.52", "44.5928, 3.03567, 10.7194, 0.52", "45.3608, 3.03603, 10.9435, 0.52", "45.8544, 3.0283, 11.0804, 0.52", "46.9587, 2.96091, 11.388, 0.52", "47.8099, 2.85846, 11.6082, 0.88", "48.5886, 2.73596, 11.8236, 0.88", "49.5081, 2.5628, 12.0709, 0.88", "50.2068, 2.43209, 12.2575, 0.52", "50.7808, 2.35308, 12.4039, 0.52", "51.5006, 2.33027, 12.5811, 0.52", "52.7584, 2.48681, 12.8971, 0.74", "53.5652, 2.70921, 13.0957, 0.74", "54.0076, 2.88759, 13.1974, 0.74", "54.6216, 3.18705, 13.3752, 0.52", "55.3714, 3.57239, 13.6093, 0.52", "55.9243, 3.84761, 13.7966, 0.52", "56.5088, 4.10483, 13.9915, 0.52", "56.9209, 4.23803, 14.1378, 0.74", "58.2077, 4.56767, 14.6676, 0.96", "59.0944, 4.7575, 15.0461, 0.96", "60.1011, 4.93886, 15.4735, 0.74", "60.6821, 5.02108, 15.7547, 0.74", "62.0917, 5.1792, 16.4764, 0.59", "63.426, 5.28919, 17.1879, 0.59", "63.8772, 5.31277, 17.4231, 0.59", "64.4776, 5.34039, 17.7495, 0.59", "66.0575, 5.41229, 18.5975, 0.59", "66.6022, 5.4386, 18.8835, 0.59", "67.7735, 5.48692, 19.4298, 0.59", "68.4125, 5.4916, 19.6675, 0.59", "68.9627, 5.49802, 19.8436, 0.59", "69.6143, 5.53805, 19.9904, 0.59", "70.2506, 5.60991, 20.0675, 0.59", "71.4238, 5.77453, 20.2083, 0.59", "72.278, 5.89418, 20.2991, 0.59", "72.8982, 5.95893, 20.3732, 0.59", "74.0426, 6.01595, 20.4762, 0.59", "74.9262, 6.04586, 20.5556, 0.59", "76.064, 6.08757, 20.6534, 0.88", "76.8764, 6.12581, 20.723, 1.11", "77.9793, 6.15887, 20.8278, 0.96", "79.0945, 6.13652, 20.944, 1.47" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.7509, -7.27851, -0.354058, 0.461342", "55.4943, -10.0412, -0.354058, 0.461342", "70.2377, -12.8038, -0.354058, 0.461342" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.15898, 13.0651, -1.0717, 1.25", "2.71829, 18.3881, -8.7004, 1.25", "2.70698, 19.042, -9.40587, 1.25", "2.82114, 20.9922, -11.0838, 1.25", "2.92368, 21.7705, -11.6623, 1.25", "3.00969, 22.339, -12.0197, 1.25", "3.18598, 23.7655, -12.7727, 0.81", "3.3184, 25.3327, -12.7568, 0.81", "3.32142, 26.3362, -12.8107, 0.81", "3.20396, 27.0889, -12.9131, 0.81", "2.83934, 28.36, -13.3814, 0.81", "2.39257, 29.698, -14.1062, 0.81", "2.05566, 30.6255, -14.9358, 0.81", "1.67634, 31.9289, -16.4353, 0.44", "1.54724, 32.7323, -17.4466, 1.47", "1.56695, 34.6744, -19.8927, 0.59", "1.71777, 35.4068, -20.8222, 0.59", "2.29495, 37.1574, -22.9323, 1.03", "2.56663, 37.788, -23.6708, 0.52", "2.96494, 38.6312, -24.5459, 1.03", "3.42313, 39.6119, -25.4653, 0.74", "4.11796, 41.4855, -26.9492, 0.44", "4.27521, 42.0316, -27.3525, 0.44", "4.63055, 43.4617, -28.2902, 0.96", "4.83629, 44.3043, -28.8561, 1.84", "5.00429, 44.9065, -29.2549, 1.84", "5.60137, 46.8028, -30.5286, 0.88", "5.76064, 47.345, -30.9366, 0.88", "5.84575, 47.7586, -31.2744, 0.88", "5.97493, 48.7174, -32.078, 1.4", "6.03417, 49.5099, -32.8136, 1.4", "6.07972, 51.3241, -34.4978, 0.66", "6.08642, 53.3058, -36.2601, 0.66", "6.07057, 54.1663, -37.0697, 0.66", "6.05161, 55.0841, -37.9498, 1.84", "5.98852, 57.6889, -40.4191, 0.52", "5.98004, 58.4659, -41.1083, 1.47", "6.00463, 59.2514, -41.6971, 1.47", "6.2439, 61.8303, -43.4132, 0.74", "6.32598, 62.4405, -43.8772, 0.29", "6.418, 63.0891, -44.3829, 0.29", "6.5123, 63.6335, -44.7916, 0.29", "6.64521, 64.4786, -45.4657, 0.88", "6.80453, 65.6671, -46.3862, 1.99", "7.13294, 68.6093, -48.4866, 0.37", "7.21543, 69.9335, -49.3669, 0.37", "7.2595, 71.245, -50.178, 0.37", "7.24094, 74.6021, -52.1372, 0.22", "7.19463, 75.6694, -52.6964, 0.88", "7.13005, 76.5567, -53.0653, 0.88", "6.89062, 78.69, -53.7283, 0.07", "6.76173, 79.536, -53.9475, 0.07", "6.49497, 80.9793, -54.2096, 0.07", "6.28335, 81.9953, -54.3182, 0.66", "6.0407, 83.5091, -54.4958, 0.81", "5.97559, 84.0657, -54.5629, 0.81", "5.73144, 86.9107, -54.9678, 0.07", "5.64225, 88.11, -55.14, 0.66", "5.56768, 89.4819, -55.324, 1.03", "5.43634, 92.3613, -55.7411, 0.07", "5.41116, 92.8644, -55.8164, 0.59", "5.2725, 95.7136, -56.231, 0.07", "5.23051, 96.6158, -56.3952, 1.11", "5.14386, 97.9212, -56.6439, 0.07", "5.04723, 99.1042, -56.8617, 0.07", "4.93459, 100.207, -57.0891, 0.07", "4.86568, 101.509, -57.3608, 1.4", "4.93952, 104.346, -57.9113, 0.07", "5.01924, 105.366, -58.1096, 1.18", "5.12515, 106.205, -58.2718, 1.18", "5.41491, 107.589, -58.5023, 0.07", "6.0655, 109.823, -58.8015, 0.07", "6.889, 112.127, -59.0136, 0.07", "7.24077, 112.914, -59.0415, 1.25", "7.46519, 113.359, -59.0535, 1.25", "8.69037, 115.689, -59.1635, 0.15", "9.26311, 116.741, -59.2423, 0.15", "9.62078, 117.383, -59.3139, 0.74", "10.432, 119.109, -59.6741, 0.07", "10.8533, 120.128, -59.9438, 0.07", "11.5596, 122.103, -60.5431, 0.07", "11.8221, 122.955, -60.8761, 1.33", "12.0428, 123.724, -61.2019, 1.33", "13.0267, 127.406, -62.8203, 0.07", "13.2472, 128.339, -63.2122, 0.96", "13.4104, 129.036, -63.4792, 0.96", "14.0615, 131.667, -64.4212, 0.07", "14.3419, 132.711, -64.7811, 0.81", "14.5402, 133.403, -65.0333, 0.81", "15.2683, 135.888, -65.9259, 0.07", "15.5167, 136.858, -66.273, 0.74", "16.1862, 139.89, -67.2999, 0.07", "16.3032, 140.554, -67.5004, 1.11", "16.701, 143.853, -68.6147, 0.07", "16.7711, 144.797, -68.9506, 0.66", "16.8032, 145.81, -69.324, 0.66", "16.7853, 147.186, -69.8141, 0.07", "16.7357, 148.339, -70.1776, 1.25", "16.4968, 152.285, -71.3057, 0.07", "16.4383, 153.159, -71.5195, 0.88", "16.4125, 153.795, -71.6693, 0.88", "16.4125, 154.058, -71.7251, 0.07", "16.4583, 155.634, -71.992, 0.07", "16.5557, 157.237, -72.1548, 0.07", "16.6017, 157.692, -72.1795, 0.52", "16.7726, 159.131, -72.32, 0.07", "16.9551, 160.454, -72.485, 0.07", "17.1425, 161.559, -72.6406, 0.74", "17.2475, 162.049, -72.7179, 0.74", "17.8564, 164.191, -73.0825, 0.07", "18.0972, 164.919, -73.2076, 0.59", "18.708, 166.506, -73.4746, 0.07", "19.2426, 167.79, -73.669, 0.07", "19.752, 168.95, -73.8003, 0.07", "19.9985, 169.522, -73.8408, 1.03", "20.3054, 170.234, -73.8546, 1.03", "20.8433, 171.54, -73.8777, 0.07", "21.1585, 172.423, -73.8893, 0.66", "21.9878, 174.997, -73.9367, 0.07", "22.2035, 175.736, -73.9851, 0.07", "22.2581, 175.917, -74.004, 1.25", "22.4749, 176.571, -74.0946, 1.25", "22.9579, 177.851, -74.3182, 0.22", "23.6485, 179.409, -74.6451, 0.81", "24.5345, 180.827, -74.8795, 0.07", "25.3875, 181.934, -75.0022, 0.07", "26.0629, 182.691, -75.0504, 0.07", "26.3956, 183.009, -75.0552, 0.74", "26.7794, 183.332, -75.0225, 0.74", "29.4445, 185.466, -74.5504, 0.07", "30.0165, 185.916, -74.4054, 0.07", "30.6754, 186.453, -74.2216, 0.37", "31.5656, 187.25, -73.8467, 0.37", "32.7205, 188.451, -73.1856, 0.07", "33.343, 189.215, -72.7144, 0.07", "33.7162, 189.843, -72.2341, 0.07", "34.0402, 190.493, -71.6263, 0.07", "34.933, 192.57, -69.5158, 0.07", "35.2732, 193.562, -68.4164, 0.07", "35.3583, 193.891, -68.0199, 0.07", "35.6428, 195.43, -65.9604, 0.07", "35.7073, 195.947, -65.2029, 0.07" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "8.51448, 31.62, -0.55134, 1.18", "8.34545, 34.0522, 0.429344, 1.18", "8.29683, 35.1567, 0.776611, 1.18", "8.25318, 35.9446, 0.990097, 1.18", "8.23961, 36.6418, 1.27351, 1.18", "8.22987, 37.6813, 1.75806, 1.18", "8.22622, 38.3131, 2.06526, 1.18", "8.20099, 39.6367, 2.6781, 1.18", "8.19525, 40.4368, 3.08947, 0.74", "8.21121, 42.9843, 4.52186, 0.59", "8.22193, 43.6494, 4.93601, 0.59", "8.23061, 44.3595, 5.44142, 0.81", "8.24375, 45.0695, 6.00549, 0.81", "8.24375, 45.0695, 6.00549, 1.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "8.51448, 31.62, -0.55134, 1.03", "12.2563, 33.0395, 0.562629, 1.03", "13.3588, 33.4917, 0.999043, 1.03", "14.4839, 33.9729, 1.44049, 1.03", "15.5061, 34.4252, 1.80127, 1.03", "16.7813, 35.0107, 2.20066, 0.96", "18.7794, 35.9723, 2.78829, 0.96", "21.0888, 37.3557, 3.2512, 0.66", "22.0049, 37.9607, 3.42919, 1.03", "23.1578, 38.8245, 3.61186, 1.03", "23.9774, 39.508, 3.66359, 1.03", "24.7275, 40.2481, 3.59586, 0.81", "25.6844, 41.5252, 3.25235, 0.81", "26.0675, 42.2234, 3.0217, 0.81", "26.7131, 43.7039, 2.58457, 1.18", "27.118, 44.8632, 2.27992, 1.18", "27.3885, 45.6993, 2.07323, 1.18", "27.8741, 47.0644, 1.72646, 1.18", "28.427, 48.2806, 1.47181, 0.66", "28.8502, 49.0356, 1.30486, 0.66", "29.2444, 49.5726, 1.17333, 0.66", "30.0149, 50.2925, 0.962857, 0.66", "31.0022, 50.8864, 0.730857, 0.66", "32.2694, 51.389, 0.458522, 0.66", "32.7464, 51.5293, 0.343704, 0.66", "33.4825, 51.7284, 0.192032, 0.66", "34.7271, 52.137, -0.0243764, 0.66", "35.9824, 52.6738, -0.211775, 0.66", "36.8317, 53.1682, -0.320343, 0.66", "37.2751, 53.5012, -0.375288, 0.66", "38.657, 54.7434, -0.519425, 0.88", "39.6823, 55.7872, -0.560912, 0.88", "40.5598, 56.7546, -0.565575, 0.88", "41.1872, 57.4823, -0.557909, 0.88", "41.9472, 58.3924, -0.495279, 1.18", "43.0022, 59.6437, -0.386636, 0.81", "44.3523, 61.2045, -0.26005, 0.81", "45.2367, 62.1512, -0.174305, 0.81", "45.7611, 62.6917, -0.1225, 0.81", "47.7604, 64.6786, 0.0208542, 0.96", "48.4463, 65.3694, 0.0541901, 0.96", "49.1451, 66.107, 0.0577051, 0.96", "49.8591, 66.9218, 0.0058248, 0.96", "50.3546, 67.5144, -0.0534969, 0.96", "51.4691, 68.9123, -0.217507, 0.66", "52.0604, 69.7658, -0.328379, 0.66", "52.7924, 70.9676, -0.424381, 0.66", "53.4564, 72.2655, -0.46339, 0.66", "53.8918, 73.2045, -0.467977, 0.66", "54.4436, 74.5399, -0.441042, 0.88", "54.9327, 75.7995, -0.398712, 0.88", "55.2497, 76.5518, -0.385103, 1.18", "55.8494, 77.8625, -0.455685, 1.18", "56.6082, 79.2061, -0.687668, 0.66", "57.2751, 80.1177, -0.996226, 0.66", "57.9333, 80.8045, -1.3711, 0.66", "59.0839, 81.7402, -2.05043, 0.66", "60.3564, 82.6211, -2.68571, 0.74", "61.3772, 83.2648, -3.12739, 0.74", "62.3571, 83.9169, -3.48283, 0.74", "63.2163, 84.5185, -3.67818, 0.74", "63.7521, 84.9889, -3.62786, 0.74", "65.1373, 86.4807, -3.01602, 0.74", "65.5623, 86.9395, -2.71591, 0.74", "66.1237, 87.5211, -2.25866, 0.74", "66.8653, 88.2242, -1.65549, 1.4", "67.9497, 89.1556, -0.855375, 0.96", "68.6456, 89.7065, -0.444052, 0.96", "69.9169, 90.6336, 0.0944224, 0.81", "70.6714, 91.1852, 0.343044, 0.81", "71.3562, 91.7082, 0.484783, 0.81", "72.6154, 92.7866, 0.572179, 0.81", "73.4071, 93.5714, 0.535343, 0.81", "73.7245, 93.9479, 0.485787, 0.81", "74.49, 95.0195, 0.253421, 0.81", "75.0259, 95.8264, 0.0572008, 0.81", "75.4711, 96.4912, -0.136227, 0.81", "76.0716, 97.3864, -0.438104, 0.81", "76.8439, 98.5079, -0.86406, 0.81", "77.6059, 99.5979, -1.37052, 0.81", "78.2434, 100.457, -1.8299, 0.52", "78.8146, 101.202, -2.24527, 0.52", "79.3155, 101.808, -2.61489, 0.52", "80.2679, 102.833, -3.26145, 1.03", "81.5953, 104.12, -4.07241, 0.66", "82.8907, 105.257, -4.78421, 0.66", "83.9392, 106.056, -5.29319, 1.03", "84.8708, 106.681, -5.69495, 0.88", "86.4866, 107.637, -6.20659, 0.88", "87.7593, 108.347, -6.47715, 0.88", "89.0522, 109.052, -6.65918, 0.74", "91.0296, 110.17, -6.87504, 0.74", "91.8386, 110.651, -6.94782, 0.74", "93.9328, 111.998, -7.10973, 0.74", "95.0833, 112.767, -7.21117, 0.74", "95.8569, 113.304, -7.28445, 0.74", "96.6386, 113.87, -7.38328, 0.74", "97.4573, 114.477, -7.52933, 0.74", "98.1709, 114.988, -7.71485, 0.74", "99.2323, 115.72, -8.07715, 0.74", "100.019, 116.255, -8.34769, 0.74", "101.12, 117.074, -8.7204, 0.74", "102.584, 118.382, -9.19704, 1.03", "104.072, 120.049, -9.64675, 0.74", "104.605, 120.799, -9.79198, 0.74", "104.911, 121.317, -9.86624, 0.74", "105.623, 122.691, -10.0214, 0.74", "106.365, 124.255, -10.1193, 0.74", "106.867, 125.351, -10.1519, 1.18", "107.709, 127.246, -10.1791, 1.03", "108.012, 127.877, -10.1917, 1.03", "108.894, 129.451, -10.2532, 0.81", "109.933, 130.93, -10.364, 0.81", "110.541, 131.653, -10.434, 0.81" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "8.51448, 31.62, -0.55134, 0.88", "8.26889, 33.6214, 0.22875, 0.88", "8.03316, 35.5775, 0.889679, 0.88", "7.93598, 36.5369, 1.16889, 0.88", "7.72998, 38.8199, 1.75859, 0.88", "7.61812, 40.145, 2.07006, 1.11", "7.48524, 41.5172, 2.37276, 1.11", "7.1406, 44.1454, 2.91819, 1.11", "6.81599, 45.9953, 3.27491, 1.11", "6.52959, 47.3797, 3.49199, 0.74", "6.26178, 48.5152, 3.60814, 0.74", "5.9231, 49.7026, 3.72409, 0.74", "5.42853, 51.1589, 3.88041, 0.74", "5.07569, 52.1131, 3.90732, 0.74", "4.69583, 53.3107, 3.76061, 0.74", "4.49377, 54.3785, 3.44642, 0.74", "4.47529, 54.9661, 3.17287, 0.74", "4.53067, 55.6327, 2.82609, 0.74", "4.8366, 58.1225, 1.43185, 0.74", "5.06085, 59.8903, 0.43521, 0.74", "5.16687, 60.8369, -0.0611318, 1.11", "5.42951, 63.4448, -1.36068, 0.59", "5.58767, 65.1984, -2.13337, 0.88", "5.759, 67.8086, -3.10374, 0.88", "5.78821, 68.7108, -3.35433, 1.18", "5.76658, 70.8354, -3.81392, 0.81", "5.70247, 72.5344, -4.09494, 0.81", "5.59598, 74.5253, -4.30257, 1.11", "5.52855, 75.5219, -4.38769, 1.11", "5.46152, 76.7675, -4.45467, 1.47", "5.3471, 79.2213, -4.58444, 1.03", "5.28757, 80.8513, -4.66082, 1.03", "5.23099, 82.4294, -4.70787, 1.03", "5.16138, 84.2508, -4.77435, 1.03", "5.10933, 85.9039, -4.83549, 1.03", "5.0671, 87.4942, -4.88608, 1.03", "5.04065, 88.4354, -4.90677, 1.03", "4.98461, 89.4749, -4.90819, 0.81", "4.82735, 90.9463, -4.86517, 0.81", "4.59595, 92.3713, -4.76933, 0.81", "4.09892, 94.4316, -4.64184, 0.59", "3.75981, 95.5738, -4.62807, 0.59", "3.4048, 96.6069, -4.71158, 1.18", "3.06202, 97.5005, -5.01347, 1.18", "2.87683, 98.0015, -5.28464, 1.18", "2.4843, 99.1824, -6.07355, 0.52", "2.07007, 100.765, -7.23393, 0.74", "1.81557, 102.232, -8.29822, 0.74", "1.54311, 105.786, -10.7933, 0.74", "1.59088, 107.332, -11.7751, 1.03", "1.73312, 108.428, -12.3728, 1.03", "2.05553, 109.876, -13.0081, 1.4", "2.48345, 111.303, -13.433, 1.4", "2.89628, 112.509, -13.7077, 0.15", "3.53875, 114.254, -13.9875, 0.22", "4.00145, 115.569, -14.2693, 1.03", "4.17353, 116.107, -14.4056, 1.55", "4.5228, 117.366, -14.7643, 1.03", "5.15969, 120.06, -15.5776, 0.44", "5.33206, 120.935, -15.8307, 0.44", "5.44678, 121.62, -16.0068, 0.44", "5.62187, 122.675, -16.2243, 1.18", "5.76965, 123.498, -16.3422, 1.18", "5.93572, 124.491, -16.4578, 1.18", "6.18048, 126.239, -16.583, 0.22", "6.36318, 127.82, -16.7224, 0.22", "6.4747, 129.104, -16.8444, 1.18", "6.57319, 130.535, -16.9877, 1.18", "6.6956, 133.669, -17.3043, 0.07", "6.71426, 135.392, -17.4701, 1.03", "6.68881, 136.229, -17.5414, 1.03", "6.64078, 137.226, -17.6132, 1.62", "6.54125, 138.303, -17.6603, 1.62", "6.45938, 138.97, -17.6654, 0.07", "6.21486, 140.781, -17.5877, 0.07", "6.02256, 141.995, -17.5347, 1.33", "5.89115, 142.698, -17.5015, 1.33", "5.39032, 145.09, -17.3806, 0.07", "5.19129, 145.884, -17.3346, 1.18", "5.07887, 146.289, -17.3091, 1.18", "4.35367, 148.318, -17.1497, 0.07", "4.00765, 149.139, -17.0204, 0.81", "3.5814, 149.989, -16.8189, 0.81", "3.14504, 150.738, -16.5764, 0.81", "3.14504, 150.738, -16.5764, 0.29", "2.15064, 152.178, -15.975, 0.29", "1.0637, 153.727, -15.2845, 0.81", "0.568912, 154.417, -14.9824, 1.33", "-0.183299, 155.478, -14.5471, 1.33", "-0.24808, 155.576, -14.5126, 0.07", "-0.643709, 156.211, -14.3276, 0.07", "-1.37209, 157.518, -14.0609, 0.07", "-1.93351, 158.527, -13.9246, 0.07", "-2.38409, 159.339, -13.8151, 0.07", "-3.01166, 160.477, -13.6623, 1.03", "-3.46287, 161.295, -13.5525, 1.03", "-4.59518, 163.338, -13.2773, 0.07", "-5.10621, 164.222, -13.1546, 1.25", "-5.77771, 165.437, -12.9912, 1.25", "-5.95616, 165.749, -12.9482, 1.25" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-27.0777, 31.2735, -3.45843, 0.66", "-29.5499, 33.2147, -5.61831, 0.66", "-30.3213, 33.8706, -6.21162, 0.66", "-31.006, 34.5196, -6.73807, 0.66", "-31.8607, 35.4047, -7.38233, 0.88", "-33.263, 37.0223, -8.44465, 0.88", "-34.6157, 38.7246, -9.51072, 0.88", "-35.2786, 39.7201, -10.0864, 1.33", "-36.2668, 41.2575, -11.0403, 0.96", "-36.8146, 42.1126, -11.5734, 0.96", "-37.4947, 43.1306, -12.2198, 0.96", "-38.9346, 45.1905, -13.5377, 0.96", "-40.5756, 47.3893, -14.8807, 1.11", "-41.3924, 48.3861, -15.4588, 1.11", "-42.494, 49.5935, -16.0642, 0.66", "-43.1886, 50.2885, -16.358, 1.18", "-44.2822, 51.3078, -16.6732, 1.18", "-45.8303, 52.7468, -16.9446, 0.74", "-46.3823, 53.2924, -17.005, 0.74", "-47.6468, 54.6464, -17.1847, 1.11", "-48.7964, 55.9481, -17.3845, 0.59", "-49.4394, 56.7291, -17.5211, 0.59", "-50.3116, 57.9009, -17.7767, 1.11", "-51.0265, 58.9699, -18.0358, 1.11", "-52.0846, 60.7124, -18.4629, 0.74", "-52.8347, 62.1254, -18.7863, 1.03", "-53.5324, 63.6503, -19.0903, 1.03", "-54.255, 65.4593, -19.3808, 1.03", "-54.7083, 66.7149, -19.5249, 1.03", "-55.1587, 67.9911, -19.6444, 1.03", "-55.8616, 70.1238, -19.7984, 1.03", "-56.3132, 71.3831, -19.8553, 1.03", "-56.9032, 72.862, -19.9355, 0.88", "-57.6112, 74.3837, -20.0399, 0.88", "-58.3613, 75.8369, -20.19, 0.88", "-58.6911, 76.4598, -20.2917, 0.88", "-59.6248, 78.1541, -20.6468, 0.88", "-60.6721, 80.0483, -21.0751, 0.88", "-61.548, 81.6668, -21.4406, 0.81", "-62.0476, 82.647, -21.6462, 0.81", "-63.1248, 85.0047, -22.0593, 0.81", "-63.6642, 86.2671, -22.2364, 1.11", "-64.4962, 88.3926, -22.4431, 0.59", "-65.1853, 90.1734, -22.5338, 0.59", "-65.8041, 91.8215, -22.5886, 0.96", "-66.7004, 94.1979, -22.6011, 0.96", "-67.2314, 95.5799, -22.5553, 0.96", "-67.9958, 97.6169, -22.4703, 0.96", "-68.5155, 99.0303, -22.3984, 0.44", "-68.6329, 99.3626, -22.4027, 0.44", "-68.8303, 99.8901, -22.4471, 0.44", "-69.0643, 100.475, -22.539, 1.18", "-69.4783, 101.52, -22.7185, 1.18", "-69.9522, 102.772, -22.9385, 1.18", "-70.9594, 105.475, -23.3754, 0.81", "-71.3634, 106.518, -23.5211, 0.81", "-71.6426, 107.218, -23.6065, 0.81", "-72.275, 108.714, -23.731, 0.66", "-72.6894, 109.647, -23.7649, 0.66", "-73.1873, 110.733, -23.8095, 1.03", "-73.8056, 112.023, -23.8437, 0.44", "-74.1604, 112.768, -23.9031, 0.44", "-74.8978, 114.239, -24.0934, 0.96", "-75.3797, 115.17, -24.274, 1.69", "-76.5397, 117.392, -24.8492, 0.07", "-77.0927, 118.493, -25.2154, 0.37", "-77.3979, 119.106, -25.4506, 0.37", "-77.9138, 120.175, -25.8874, 0.88", "-78.2621, 120.916, -26.2021, 1.4", "-79.0298, 122.646, -26.9081, 1.4", "-79.6575, 124.21, -27.4741, 1.03", "-80.1995, 125.781, -28.0036, 0.66", "-80.4181, 126.559, -28.2295, 0.66", "-80.6076, 127.393, -28.4323, 0.66", "-80.9231, 129.052, -28.7282, 1.47", "-81.0715, 130.039, -28.8513, 1.47", "-81.2659, 131.705, -29.0659, 0.88", "-81.5898, 135.041, -29.5325, 0.59", "-81.6705, 135.863, -29.651, 0.59", "-81.8692, 138.024, -29.9792, 1.55", "-81.9354, 138.757, -30.0992, 1.55", "-82.1482, 141.398, -30.5459, 0.07", "-82.2395, 142.831, -30.7811, 1.03", "-82.2926, 144.117, -30.9778, 1.03", "-82.3328, 145.6, -31.1949, 1.03", "-82.3413, 146.731, -31.3698, 1.03", "-82.3933, 150.304, -31.8971, 0.52", "-82.4043, 151.561, -32.0581, 0.52", "-82.4077, 152.5, -32.1817, 1.25", "-82.4167, 153.843, -32.3517, 1.25", "-82.4649, 155.96, -32.587, 0.15", "-82.5098, 157.077, -32.6943, 0.15", "-82.5975, 158.156, -32.7632, 1.03", "-82.7224, 159.325, -32.7925, 1.03", "-82.83, 160.235, -32.7625, 1.03", "-82.9588, 161.23, -32.6619, 0.44", "-83.1394, 162.695, -32.4208, 0.44", "-83.2339, 163.854, -32.2256, 0.44", "-83.2699, 164.542, -32.1136, 0.44", "-83.3167, 166.048, -31.8817, 0.81", "-83.3354, 167.273, -31.717, 0.81", "-83.3378, 168.205, -31.6102, 0.81", "-83.3504, 170.536, -31.3949, 0.22", "-83.3628, 172.245, -31.2808, 1.25", "-83.381, 173.08, -31.2337, 1.25", "-83.4575, 175.581, -31.1132, 0.29", "-83.5153, 176.661, -31.0369, 0.29", "-83.581, 177.56, -30.9555, 0.29", "-83.7068, 178.885, -30.812, 0.29", "-83.8485, 180.363, -30.6335, 1.18", "-83.9558, 181.683, -30.4628, 1.18", "-84.1, 183.869, -30.1626, 0.29", "-84.1624, 185.256, -29.9725, 0.81", "-84.1742, 186.266, -29.8407, 0.81", "-84.1674, 187.929, -29.6406, 0.22", "-84.1468, 189.098, -29.518, 0.22", "-84.1251, 189.837, -29.4568, 1.11", "-84.0868, 190.944, -29.4177, 1.11", "-84.0726, 193.125, -29.3742, 0.07", "-84.0797, 194.121, -29.3655, 0.07", "-84.1076, 195.125, -29.3801, 1.03", "-84.152, 196.039, -29.4306, 1.03", "-84.2604, 197.875, -29.5871, 0.44", "-84.3337, 198.904, -29.7026, 0.52", "-84.4318, 200.225, -29.883, 1.4", "-84.5214, 201.763, -30.1258, 0.15", "-84.5663, 203.323, -30.3781, 0.37", "-84.5538, 203.735, -30.4383, 0.37", "-84.4827, 204.559, -30.5369, 0.37", "-84.4022, 205.078, -30.5861, 0.37", "-84.056, 206.76, -30.688, 0.52", "-83.6756, 208.338, -30.7167, 0.52", "-83.2561, 209.966, -30.6993, 0.52", "-82.907, 211.356, -30.6738, 0.52", "-82.5611, 212.739, -30.6339, 0.52", "-82.2435, 214.223, -30.6486, 0.81", "-81.9957, 215.806, -30.7777, 0.29", "-81.9625, 216.374, -30.9049, 0.74", "-81.9974, 217.25, -31.2095, 0.74", "-82.1247, 218.492, -31.762, 1.18", "-82.4815, 220.709, -32.9087, 0.44", "-82.7952, 222.445, -33.8755, 0.74", "-83.2221, 224.837, -35.2366, 0.74", "-83.3828, 226.065, -35.9715, 0.74", "-83.5109, 227.671, -36.9589, 1.25", "-83.4944, 229.25, -37.9922, 0.44", "-83.382, 230.121, -38.5563, 0.44", "-83.1888, 230.921, -39.1527, 0.44", "-82.4331, 233.277, -41.069, 0.74", "-82.1405, 234.041, -41.7442, 0.74", "-81.4444, 235.732, -43.3062, 0.29", "-81.2572, 236.182, -43.7251, 0.74", "-80.2816, 238.661, -46.005, 0.29", "-79.8896, 239.722, -46.9218, 1.25", "-79.2153, 241.746, -48.4949, 0.15", "-79.0299, 242.341, -48.9313, 0.15", "-78.8631, 242.955, -49.349, 0.15", "-78.7324, 243.436, -49.674, 0.15", "-78.5449, 244.143, -50.0998, 0.15", "-78.1918, 245.653, -51.1208, 1.25", "-78.1354, 246.018, -51.3742, 1.25", "-77.9668, 247.813, -52.6499, 0.15", "-77.9767, 248.147, -52.9038, 0.15", "-78.0412, 248.661, -53.3184, 0.15", "-78.153, 249.18, -53.734, 0.15", "-78.2628, 249.608, -54.0994, 0.15", "-78.5187, 250.488, -54.8867, 1.4", "-79.0814, 252.17, -56.4185, 0.52", "-79.4761, 253.223, -57.3944, 0.07", "-80.0528, 254.524, -58.6311, 1.47", "-81.0799, 256.464, -60.4713, 0.29", "-81.3788, 256.959, -60.9161, 0.29", "-81.6928, 257.441, -61.35, 0.29", "-82.1832, 258.141, -61.9432, 0.81", "-83.6918, 260.118, -63.5465, 0.22", "-84.2202, 260.796, -64.1452, 0.22", "-84.8313, 261.595, -64.832, 1.25", "-86.2743, 263.579, -66.5591, 0.07", "-86.786, 264.327, -67.1834, 0.07", "-87.2245, 265.022, -67.7226, 0.52", "-88.4153, 267.41, -69.4194, 0.07", "-88.9906, 268.817, -70.3367, 0.07", "-89.2352, 269.525, -70.7477, 0.74", "-89.5906, 270.904, -71.3297, 0.29", "-89.7722, 271.868, -71.7001, 1.11", "-90.3252, 275.563, -72.9878, 0.07", "-90.4666, 276.832, -73.3532, 0.07", "-90.5088, 277.465, -73.5475, 0.96", "-90.6366, 280.978, -74.6543, 0.07", "-90.6497, 282.429, -75.1152, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-27.0777, 31.2735, -3.45843, 0.74", "-27.1096, 35.0667, -5.46619, 0.74", "-27.1263, 36.3121, -6.0071, 0.74", "-27.1359, 37.4043, -6.39171, 0.74", "-27.1471, 38.2236, -6.6355, 0.74", "-27.1687, 39.6249, -7.00481, 0.74", "-27.2052, 40.8143, -7.28403, 0.74", "-27.2523, 41.7881, -7.37786, 0.74", "-27.431, 43.4643, -7.74382, 0.74", "-27.5902, 44.661, -8.11738, 0.74", "-27.7362, 45.4627, -8.42021, 0.74", "-28.0112, 46.7688, -8.96731, 0.74", "-28.2204, 47.7174, -9.37817, 0.74", "-29.0731, 51.4811, -10.9688, 0.74", "-29.2232, 52.1448, -11.2389, 0.74", "-29.5876, 53.8731, -11.8667, 0.52", "-29.9096, 55.5937, -12.3998, 0.88", "-30.1384, 57.0714, -12.7647, 0.88", "-30.4087, 58.9457, -13.0941, 1.25", "-30.5706, 59.9981, -13.2026, 1.25", "-30.9682, 62.2038, -13.4525, 1.03", "-31.2647, 63.7956, -13.6487, 1.03", "-31.6346, 65.575, -13.8765, 1.03", "-31.87, 66.5555, -14.0038, 1.03", "-32.5781, 68.8913, -14.6647, 0.81", "-33.1126, 70.4201, -15.3016, 0.81", "-33.579, 71.665, -15.888, 0.81", "-34.4151, 73.8412, -16.861, 0.59", "-34.7632, 74.7671, -17.2368, 0.59", "-36.6116, 80.2795, -19.1586, 0.59", "-36.8209, 81.007, -19.3578, 0.59", "-37.5039, 83.7606, -19.8703, 0.59", "-37.9619, 86.0657, -20.2418, 0.59", "-38.2021, 87.7344, -20.4419, 0.88", "-38.3194, 89.1743, -20.5506, 0.88", "-38.3757, 91.0002, -20.5803, 0.52", "-38.3884, 93.2209, -20.8034, 0.52", "-38.3488, 96.1139, -21.3686, 0.59", "-38.326, 96.6638, -21.4978, 0.59", "-38.1988, 98.7282, -21.9593, 0.37", "-38.0967, 100.242, -22.2729, 1.25", "-37.9826, 101.798, -22.5625, 1.25", "-37.8002, 104.176, -22.9348, 0.52", "-37.6454, 106.202, -23.1757, 0.52", "-37.5184, 108.286, -23.4397, 0.52", "-37.4824, 109.432, -23.5923, 0.52", "-37.4644, 110.474, -23.8099, 0.52", "-37.4742, 111.487, -24.0934, 0.52", "-37.5225, 112.667, -24.5016, 1.33", "-37.6529, 113.904, -24.9553, 1.33", "-37.8324, 114.968, -25.384, 1.33", "-38.4483, 118.061, -26.6473, 0.07", "-38.7017, 119.197, -27.0896, 0.07", "-39.038, 120.591, -27.6218, 1.11", "-39.7592, 123.559, -28.6858, 0.07", "-40.27, 125.732, -29.4126, 0.07", "-40.5329, 126.905, -29.7612, 0.07", "-40.7782, 128.135, -29.9802, 0.52", "-41.0259, 130.045, -30.1943, 0.22", "-41.0879, 131.572, -30.1862, 0.22", "-41.0368, 132.815, -29.9618, 0.22", "-40.9816, 133.422, -29.7785, 0.22", "-40.582, 136.23, -28.7949, 1.55", "-40.3514, 137.387, -28.3372, 1.55", "-39.6717, 140.236, -27.1033, 0.29", "-39.1905, 142.102, -26.3045, 0.88", "-38.9258, 143.105, -25.9118, 0.88", "-38.487, 144.811, -25.3457, 0.22", "-37.9671, 146.807, -24.8335, 0.59", "-37.7209, 147.644, -24.6438, 0.59", "-37.469, 148.362, -24.5207, 0.59", "-37.0236, 149.526, -24.3857, 0.59", "-36.7551, 150.291, -24.2809, 0.59", "-36.1122, 152.445, -23.9365, 1.03", "-35.77, 153.733, -23.7355, 1.03", "-35.3743, 155.397, -23.4882, 1.03", "-35.1605, 156.402, -23.357, 0.07", "-34.8378, 158.683, -23.1019, 0.07", "-34.7397, 160.195, -23.0254, 0.29", "-34.7598, 161.264, -23.0361, 0.81", "-34.9599, 163.69, -23.1268, 0.37", "-35.1424, 165.019, -23.2226, 0.37", "-35.536, 167.43, -23.5021, 0.37", "-35.7878, 169.027, -23.7136, 0.88", "-35.9145, 169.863, -23.8685, 0.37", "-36.0116, 170.541, -24.0103, 0.37", "-36.1901, 171.864, -24.3149, 1.11", "-36.2497, 172.603, -24.4922, 1.11", "-36.2406, 174.805, -25.0081, 0.37", "-36.196, 177.087, -25.5862, 0.37", "-36.2023, 178.009, -25.8736, 0.37", "-36.1945, 178.368, -26.0418, 0.37", "-36.1623, 178.735, -26.2539, 0.37", "-35.987, 179.795, -26.9082, 1.4", "-35.5155, 181.69, -28.1208, 0.07", "-35.2108, 182.668, -28.6745, 1.25", "-34.1295, 185.522, -30.2238, 0.07", "-33.6702, 186.608, -30.7735, 0.07", "-32.8292, 188.429, -31.5821, 0.07", "-32.3321, 189.422, -31.9486, 0.07", "-31.7416, 190.555, -32.265, 0.07", "-31.0704, 191.955, -32.567, 0.07", "-30.665, 192.961, -32.7068, 1.11", "-29.891, 195.352, -33.0211, 0.07", "-29.4264, 197.203, -33.2518, 0.07", "-29.2024, 198.38, -33.3917, 1.55", "-28.89, 200.561, -33.6413, 0.07", "-28.8312, 201.201, -33.7114, 0.07", "-28.7682, 202.323, -33.8307, 0.07", "-28.7501, 203.564, -33.9965, 0.07", "-28.7348, 204.822, -34.1122, 0.44", "-28.72, 205.876, -34.1692, 0.44", "-28.6982, 206.546, -34.1849, 0.44", "-28.6614, 207.228, -34.1563, 1.33", "-28.5117, 209.516, -33.9691, 0.07", "-28.3575, 211.677, -33.7893, 0.07", "-28.2701, 212.824, -33.6989, 0.07", "-28.0912, 215.034, -33.5437, 1.62", "-27.8421, 217.98, -33.3742, 0.07", "-27.7744, 218.745, -33.342, 0.07", "-27.6485, 220.249, -33.3172, 0.29", "-27.5715, 221.312, -33.3828, 0.29", "-27.4853, 222.172, -33.4583, 0.29", "-27.3787, 223.119, -33.5715, 0.29", "-27.2859, 223.873, -33.6855, 0.29", "-27.0978, 225.385, -33.9665, 0.29", "-26.9161, 226.689, -34.2408, 0.29", "-26.5905, 228.807, -34.7558, 1.33", "-26.2138, 230.843, -35.2965, 0.07", "-25.9136, 232.343, -35.7164, 0.07", "-25.56, 234.143, -36.2236, 0.88", "-25.0974, 236.471, -37.0253, 0.07", "-24.972, 237.174, -37.2971, 0.74", "-24.7061, 239.113, -38.0861, 0.07", "-24.6013, 240.019, -38.4487, 0.88", "-24.3886, 241.906, -39.1823, 0.07", "-24.1459, 243.9, -39.8822, 0.52", "-23.9242, 245.428, -40.4514, 0.15", "-23.728, 246.754, -40.9646, 0.15", "-23.5702, 247.823, -41.3952, 0.15", "-23.269, 249.442, -42.0431, 0.15", "-22.9267, 250.898, -42.5772, 0.15", "-22.5214, 252.443, -42.9711, 0.15" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "16.5464, -6.2373, 10.9573, 0.37", "16.2829, -8.40074, 12.2855, 0.37", "16.1864, -8.98142, 12.5434, 0.37", "16.0924, -9.43261, 12.6944, 0.59", "15.9357, -10.0379, 12.8715, 0.59", "15.7628, -10.646, 13.027, 0.59", "15.6549, -11.0362, 13.136, 0.59", "15.4687, -11.7835, 13.3316, 0.29", "15.3808, -12.2908, 13.5206, 0.59", "15.2694, -13.2203, 13.9276, 0.44", "15.2313, -13.8109, 14.2135, 0.44", "15.2409, -14.511, 14.5639, 1.4", "15.3722, -16.1646, 15.3932, 0.37", "15.4441, -16.8677, 15.7267, 0.37", "15.52, -17.5552, 16.0167, 0.37", "15.5712, -18.0273, 16.1772, 0.37", "15.6871, -19.4266, 16.5412, 0.59", "15.701, -19.9855, 16.6629, 0.59", "15.692, -21.0649, 16.8664, 1.11", "15.678, -21.7382, 17.0062, 0.88", "15.6675, -22.6794, 17.2055, 0.88", "15.6626, -23.3083, 17.3356, 0.88", "15.663, -24.7512, 17.6226, 1.33", "15.7349, -26.5125, 17.9686, 0.74", "15.8041, -27.2555, 18.1443, 0.74", "15.8715, -27.8991, 18.3088, 0.74", "15.9434, -28.583, 18.4853, 0.74", "16.0173, -29.3018, 18.6542, 0.74", "16.1102, -30.0544, 18.7925, 0.52", "16.2272, -31.1446, 19.0363, 0.22", "16.311, -31.9761, 19.2568, 0.22", "16.3393, -32.5834, 19.445, 0.22", "16.3242, -33.1416, 19.6456, 0.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "16.5464, -6.2373, 10.9573, 0.59", "18.0785, -5.91269, 12.7719, 0.59", "18.6563, -5.84536, 13.3778, 0.81", "19.0288, -5.82755, 13.7031, 0.81", "19.451, -5.82019, 14.0204, 0.44", "20.8271, -5.79108, 14.9274, 0.74", "21.3552, -5.77296, 15.2362, 0.74", "21.6607, -5.77307, 15.3578, 0.74", "22.4305, -5.85459, 15.7174, 0.74", "22.8502, -5.92925, 15.9296, 0.74", "23.3874, -6.03407, 16.2022, 0.74", "23.906, -6.1123, 16.4627, 0.74", "24.3715, -6.17549, 16.7452, 0.52", "25.6715, -6.27823, 17.6129, 0.07", "25.9296, -6.29557, 17.7959, 0.07", "26.5971, -6.35662, 18.2893, 0.74", "27.4225, -6.44149, 18.8845, 0.44", "27.7197, -6.45924, 19.1096, 0.44", "28.2094, -6.45074, 19.4524, 0.44", "28.5574, -6.41373, 19.6742, 0.44", "29.1832, -6.40269, 20.0678, 0.44", "29.4131, -6.43435, 20.2041, 0.44", "30.4411, -6.66764, 20.7271, 0.66", "30.8979, -6.77844, 20.9625, 0.66", "31.3889, -6.8934, 21.255, 0.66", "32.4847, -7.13531, 21.8958, 0.29", "33.112, -7.26887, 22.2368, 0.29", "33.8384, -7.43619, 22.6194, 0.29", "34.7172, -7.66495, 23.0323, 0.52", "35.8646, -7.97344, 23.6672, 0.52" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "8.24375, 45.0695, 6.00549, 0.22", "8.6849, 45.5066, 5.96946, 0.22", "8.81962, 45.6576, 5.95713, 0.22", "9.01931, 45.9209, 5.93905, 1.03", "9.21556, 46.2027, 5.92001, 1.03", "9.41435, 46.4911, 5.89699, 0.22", "9.51013, 46.6157, 5.88267, 0.37", "9.69095, 46.8345, 5.82412, 0.37", "9.88947, 47.0736, 5.74492, 0.37", "10.0163, 47.2265, 5.68814, 0.37", "10.2217, 47.4578, 5.59257, 0.37", "10.5074, 47.7829, 5.45879, 0.37", "10.759, 48.0511, 5.3449, 1.18", "11.2067, 48.5117, 5.14956, 0.52", "11.4524, 48.7606, 5.04777, 0.81", "11.7919, 49.1084, 4.917, 0.81", "11.9841, 49.3183, 4.84994, 0.81", "12.2578, 49.6541, 4.74087, 0.52", "12.4481, 49.8767, 4.66569, 0.66", "12.6842, 50.1408, 4.56054, 0.66", "12.9359, 50.422, 4.44261, 0.66", "13.1484, 50.6505, 4.36079, 0.66", "13.695, 51.2038, 4.1868, 0.66", "14.0863, 51.5911, 4.08565, 1.03", "14.2303, 51.7236, 4.06341, 1.03", "14.7422, 52.1456, 4.03277, 0.44", "15.2613, 52.4955, 4.05973, 0.52", "15.4345, 52.5906, 4.08458, 0.52", "15.5751, 52.6611, 4.12038, 0.52", "15.9464, 52.856, 4.22287, 0.52", "16.223, 52.9947, 4.33164, 0.52", "16.5648, 53.1716, 4.48424, 0.29", "16.7585, 53.2756, 4.56505, 0.29", "17.2528, 53.5485, 4.77671, 0.29", "17.5858, 53.7449, 4.91746, 0.74", "18.3172, 54.2252, 5.2223, 0.81", "18.722, 54.5184, 5.394, 0.07", "18.9213, 54.6693, 5.46698, 0.07", "19.0353, 54.7519, 5.49781, 0.07", "19.3415, 54.9767, 5.53925, 0.07", "19.4962, 55.0917, 5.52974, 0.07", "19.6485, 55.2043, 5.51457, 0.07", "19.9398, 55.424, 5.524, 0.07", "20.2324, 55.6462, 5.54393, 0.07", "20.375, 55.7487, 5.5579, 0.07", "20.7298, 55.9767, 5.60465, 0.07", "21.4229, 56.3978, 5.72535, 0.07", "21.8397, 56.658, 5.83863, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "8.24375, 45.0695, 6.00549, 0.96", "7.3152, 46.0717, 6.46269, 0.96", "6.16943, 47.4232, 7.03587, 0.96", "4.90196, 48.9181, 7.66992, 0.66", "3.22936, 50.891, 8.50665, 0.96", "1.97705, 52.3681, 9.13311, 0.96", "0.421811, 54.2025, 9.91113, 0.96", "-0.204714, 55.0434, 10.2345, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "110.541, 131.653, -10.434, 0.37", "110.485, 133.754, -8.89639, 0.37", "110.471, 134.554, -8.37261, 0.37", "110.495, 135.291, -7.95072, 0.37", "110.749, 137.385, -7.02424, 0.37", "110.918, 138.501, -6.6351, 0.37", "111.006, 138.999, -6.47562, 0.37", "111.221, 139.82, -6.3133, 0.66", "111.543, 140.818, -6.16375, 0.66", "112.271, 142.682, -5.99792, 0.07", "112.779, 143.797, -5.98341, 0.07", "113.686, 145.561, -5.98197, 0.59", "114.73, 147.454, -6.00621, 0.29", "115.132, 148.194, -6.02019, 0.29", "115.604, 149.082, -6.04812, 0.29", "116.208, 150.211, -6.11366, 0.29", "116.617, 151.03, -6.1898, 0.29", "116.92, 151.766, -6.28209, 0.29", "117.259, 152.913, -6.40449, 0.29", "117.608, 154.458, -6.5535, 0.29", "117.793, 155.505, -6.64606, 0.29", "118.072, 157.372, -6.80481, 0.66", "118.263, 158.61, -6.91443, 0.66", "118.5, 160.023, -7.10076, 0.07", "118.705, 161.129, -7.28497, 0.07", "118.901, 162.199, -7.50966, 0.07", "119.035, 162.903, -7.68365, 0.07", "119.184, 163.673, -7.90182, 0.07", "119.619, 166.133, -8.77955, 0.59", "119.84, 167.34, -9.38606, 0.59", "120.002, 168.265, -9.97203, 0.07", "120.097, 168.837, -10.3757, 0.07", "120.189, 169.469, -10.872, 0.07", "120.351, 170.797, -12.0849, 0.07", "120.527, 172.197, -13.8467, 0.07", "120.57, 172.527, -14.4059, 0.07" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "110.541, 131.653, -10.434, 0.22", "111.847, 132.043, -10.933, 0.22", "112.498, 132.325, -11.1737, 0.22", "113.055, 132.579, -11.3792, 0.44", "114.38, 133.136, -11.8755, 0.44", "114.994, 133.365, -12.162, 0.44", "116.049, 133.74, -12.6933, 0.44", "116.913, 134.038, -13.1553, 0.74", "117.801, 134.361, -13.6393, 0.74", "118.881, 134.762, -14.2303, 0.74", "120.963, 135.527, -15.3752, 0.74", "122.031, 135.943, -16.034, 0.37", "123.196, 136.458, -16.8167, 0.37", "123.851, 136.849, -17.3176, 0.37", "124.587, 137.477, -17.9491, 0.37", "124.9, 137.859, -18.2527, 0.37", "125.871, 139.623, -19.305, 1.11", "126.219, 140.461, -19.7401, 1.11", "126.715, 141.755, -20.3709, 0.52", "127.082, 142.66, -20.8008, 0.52", "127.259, 143.121, -21.0063, 0.52", "127.696, 144.176, -21.4392, 0.81", "128.414, 145.565, -21.9048, 1.25", "129.149, 146.793, -22.3467, 0.22", "129.495, 147.251, -22.5152, 1.18" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.95616, 165.749, -12.9482, 0.07", "-9.22585, 168.764, -6.43422, 0.07", "-9.67229, 169.236, -5.60372, 0.44", "-10.2681, 169.972, -4.64697, 0.07", "-10.9393, 170.88, -3.66965, 0.88", "-12.0881, 172.534, -2.14246, 0.07", "-12.5553, 173.234, -1.5787, 0.07", "-12.9462, 173.947, -1.30045, 0.81", "-13.9952, 176.011, -0.604004, 0.07", "-14.5589, 177.188, -0.312209, 0.74", "-14.9964, 178.14, -0.163531, 0.22", "-15.4734, 179.181, -0.0580046, 0.22", "-15.6812, 179.639, -0.016746, 1.18", "-16.3734, 181.231, 0.102043, 0.07", "-17.3736, 183.813, 0.236851, 0.22", "-17.7305, 184.858, 0.264739, 0.22", "-18.1526, 186.203, 0.312589, 0.22", "-18.2893, 186.665, 0.332928, 0.22", "-18.5765, 187.666, 0.338687, 1.18", "-19.1052, 189.659, 0.274007, 0.07", "-19.3295, 190.582, 0.210108, 0.07", "-19.4567, 191.084, 0.163238, 0.07", "-19.6421, 191.857, 0.0793287, 1.25", "-20.2005, 194.032, -0.170766, 0.29", "-20.4257, 194.877, -0.270606, 0.29", "-20.5777, 195.405, -0.327866, 0.59", "-20.9937, 196.794, -0.453528, 0.07", "-21.215, 197.551, -0.503136, 0.44", "-21.6769, 199.061, -0.546268, 0.22", "-22.0135, 200.036, -0.508993, 0.66", "-22.7258, 201.926, -0.410358, 0.07", "-23.0056, 202.662, -0.36371, 0.07", "-23.5097, 204.034, -0.26312, 0.52", "-24.0771, 205.68, -0.101936, 0.22", "-24.6309, 207.493, 0.116177, 0.81", "-24.8531, 208.481, 0.254918, 0.81", "-25.0595, 209.953, 0.480327, 0.22", "-25.1331, 210.965, 0.636718, 0.22", "-25.1217, 212.387, 0.852389, 0.81", "-25.0835, 213.266, 0.973558, 0.81", "-25.0586, 215.126, 1.17563, 0.29", "-25.1344, 216.788, 1.33202, 0.29", "-25.2554, 217.891, 1.41716, 0.29", "-25.6061, 219.808, 1.52865, 0.29", "-25.9915, 221.332, 1.58478, 1.11", "-26.8842, 224.146, 1.66716, 0.07", "-27.4292, 225.569, 1.69746, 0.07", "-28.0148, 226.936, 1.71962, 0.44", "-28.5307, 227.968, 1.72776, 0.44", "-28.9337, 228.641, 1.72466, 0.44", "-30.0407, 230.361, 1.63993, 0.37", "-30.1426, 230.489, 1.63358, 0.81", "-30.7702, 231.161, 1.67074, 0.29", "-31.4295, 231.786, 1.81504, 0.29", "-32.2894, 232.544, 2.10482, 0.29", "-33.172, 233.253, 2.46103, 0.74", "-34.9559, 234.707, 3.29902, 0.07", "-36.1463, 235.803, 3.9424, 0.59", "-36.9788, 236.707, 4.60932, 0.07", "-37.4027, 237.256, 5.05247, 0.07", "-38.1606, 238.47, 6.05519, 0.66", "-38.6168, 239.39, 6.83351, 0.15", "-38.8331, 240.001, 7.31339, 0.66", "-39.6264, 243.099, 9.51828, 0.07", "-39.7252, 243.652, 9.92773, 0.07", "-39.8317, 244.593, 10.6339, 0.44", "-39.9313, 245.864, 11.5165, 0.44", "-39.9925, 246.43, 11.8379, 0.44", "-40.2067, 247.567, 12.2065, 1.11", "-40.636, 248.873, 12.1853, 0.07", "-41.2884, 250.142, 12.0096, 0.07", "-42.2718, 251.704, 11.6449, 0.37", "-43.0825, 252.859, 11.2762, 0.37", "-43.9895, 254.07, 10.7664, 0.07", "-44.8476, 255.11, 10.2474, 0.07", "-45.7382, 256.12, 9.63178, 0.07", "-46.7235, 257.142, 8.87842, 0.37", "-47.3664, 257.78, 8.38551, 0.37", "-48.7611, 259.058, 7.29903, 0.37", "-49.542, 259.682, 6.67636, 0.07", "-50.8029, 260.568, 5.69031, 0.07", "-52.2455, 261.441, 4.66097, 0.07", "-53.4797, 262.086, 3.92725, 0.07", "-54.6963, 262.683, 3.2822, 0.37", "-56.0759, 263.315, 2.70528, 0.07", "-56.638, 263.57, 2.50852, 0.07", "-57.8688, 264.099, 2.27279, 0.07", "-59.2183, 264.658, 2.19104, 0.07" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.95616, 165.749, -12.9482, 0.07", "-6.74182, 167.04, -12.9198, 0.07", "-7.24124, 167.909, -12.8907, 0.07", "-7.5474, 168.469, -12.9119, 0.07", "-7.88674, 169.14, -12.9557, 0.07", "-8.24065, 169.884, -13.0435, 0.07", "-8.92961, 171.421, -13.2618, 1.03", "-9.01569, 171.63, -13.2959, 1.03", "-9.55079, 173.124, -13.5792, 0.07", "-9.8575, 174.142, -13.7869, 0.66", "-10.1684, 175.418, -14.0566, 0.15", "-10.2416, 175.849, -14.1449, 0.74", "-10.2755, 176.462, -14.2543, 0.74", "-10.2301, 177.011, -14.3391, 0.74", "-10.0723, 177.721, -14.4249, 0.07", "-9.84187, 178.404, -14.5081, 0.07", "-9.42971, 179.359, -14.6141, 0.07", "-8.81046, 180.493, -14.7576, 0.07", "-7.73874, 182.105, -14.9809, 0.07", "-7.42869, 182.509, -15.0692, 0.07", "-6.91428, 183.102, -15.2365, 1.11", "-6.66759, 183.352, -15.3215, 1.11", "-5.47026, 184.41, -15.7459, 0.07", "-4.7414, 184.985, -16.0049, 1.03", "-3.01111, 186.264, -16.5795, 0.07", "-2.57791, 186.603, -16.7231, 0.52", "-2.05611, 187.06, -16.8914, 0.52", "-1.67472, 187.459, -17.0403, 0.52", "-1.42786, 187.753, -17.1473, 0.52", "-0.605577, 188.808, -17.4952, 0.07", "-0.0799889, 189.528, -17.6939, 0.07", "0.517936, 190.394, -17.9329, 1.69", "1.97632, 192.662, -18.5325, 0.07", "2.37426, 193.34, -18.7567, 0.07", "2.6814, 193.902, -18.9696, 0.07", "2.93906, 194.443, -19.1885, 0.07", "3.18447, 195.05, -19.4331, 0.07", "3.44415, 195.934, -19.7892, 1.11", "3.78619, 198.234, -20.6153, 0.07", "3.82312, 198.914, -20.864, 0.07", "3.82131, 200.072, -21.3297, 0.07", "3.78438, 200.745, -21.607, 0.59", "3.668, 201.884, -22.0759, 0.07", "3.56791, 202.497, -22.3352, 0.66", "3.41223, 203.15, -22.652, 0.07", "3.11105, 204.165, -23.2592, 0.66", "2.90069, 204.806, -23.6919, 0.07", "2.84944, 204.962, -23.8064, 0.07", "2.53349, 205.906, -24.5099, 1.18", "1.96022, 207.708, -25.8394, 0.22", "1.80485, 208.29, -26.2969, 0.22", "1.74549, 208.697, -26.68, 0.22", "1.73924, 209.675, -27.7049, 0.22", "1.77166, 209.948, -28.0341, 0.22", "1.9056, 210.368, -28.5787, 1.33", "2.56626, 211.65, -30.2753, 1.03", "3.57244, 213.264, -32.3875, 0.29", "3.83836, 213.644, -32.8969, 1.18", "4.51423, 214.6, -34.0499, 0.07", "5.12034, 215.515, -34.9974, 0.07", "5.59828, 216.335, -35.6736, 0.07", "5.96115, 217.076, -36.0509, 1.25", "6.28166, 218.058, -36.2899, 0.44", "6.66607, 219.838, -36.5386, 0.44", "6.78887, 220.843, -36.5725, 0.44", "6.78091, 221.443, -36.5684, 1.18", "6.73369, 221.894, -36.5453, 0.07", "6.51523, 223.444, -36.3988, 0.07", "6.44342, 223.885, -36.3335, 0.66", "6.42475, 223.997, -36.3186, 0.07", "6.26314, 225.177, -36.1891, 0.07", "6.17528, 226.053, -36.1114, 1.03", "6.14188, 226.456, -36.0876, 1.03", "6.1346, 226.582, -36.0804, 0.29", "6.09553, 227.433, -36.0691, 0.29", "6.07488, 228.043, -36.08, 0.81", "6.07216, 228.157, -36.0854, 0.15", "6.04806, 228.952, -36.1269, 0.15", "6.00162, 229.924, -36.1436, 0.15", "5.94362, 230.97, -36.2037, 0.96", "5.94362, 230.97, -36.2037, 0.07", "5.96312, 232.186, -36.3533, 0.07", "5.99462, 232.695, -36.4254, 0.07", "6.06314, 233.327, -36.5883, 0.88", "6.2426, 234.357, -36.9299, 0.15", "6.42682, 235.282, -37.2847, 0.15", "6.60073, 236.08, -37.6523, 0.15", "6.68767, 236.428, -37.8428, 1.11", "7.00843, 237.634, -38.5647, 0.07", "7.32958, 238.808, -39.3036, 0.07", "7.38928, 239.032, -39.425, 0.07", "7.50658, 239.543, -39.7685, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.3242, -33.1416, 19.6456, 0.07", "15.5535, -33.2237, 19.8099, 0.07", "15.1254, -33.2693, 19.9011, 0.07", "14.2598, -33.3616, 20.0855, 1.84" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.3242, -33.1416, 19.6456, 0.22", "16.7302, -33.0704, 20.143, 0.22", "17.3795, -32.9564, 20.9386, 0.22", "18.51, -32.7581, 22.3237, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-0.204714, 55.0434, 10.2345, 0.15", "-2.13973, 54.4005, 11.2711, 0.15", "-3.39618, 53.9715, 11.8627, 0.15", "-4.36451, 53.674, 12.3023, 0.15", "-5.5221, 53.3785, 12.7721, 0.15", "-6.45292, 53.1649, 13.1315, 0.15", "-8.19975, 52.7487, 13.8998, 0.15", "-10.2559, 52.2982, 14.8248, 0.15", "-11.2685, 52.1273, 15.3277, 0.15", "-13.059, 51.956, 16.3088, 0.15", "-13.8708, 51.9334, 16.8267, 0.15", "-15.8092, 51.943, 18.2301, 0.15", "-17.242, 51.9652, 19.4008, 0.15", "-18.1424, 51.9825, 20.1394, 0.15", "-19.6821, 51.9601, 21.3785, 0.15", "-20.8288, 51.902, 22.2592, 0.15", "-22.1405, 51.8267, 23.0996, 0.15", "-23.3244, 51.7305, 23.7153, 0.15", "-24.7823, 51.5146, 24.4671, 0.15", "-25.8328, 51.3294, 25.0071, 0.15", "-26.8802, 51.1383, 25.5369, 0.15", "-28.9383, 50.7897, 26.4941, 0.15", "-29.6703, 50.6718, 26.8328, 0.15", "-32.0131, 50.2653, 27.923, 0.15", "-34.1268, 49.8638, 28.9275, 0.15", "-36.2085, 49.4578, 29.9101, 0.15", "-37.6712, 49.1429, 30.6052, 0.15", "-39.0569, 48.7746, 31.2526, 0.15", "-39.7405, 48.5748, 31.5562, 0.15", "-41.1226, 48.1306, 32.1061, 0.15", "-41.8257, 47.8628, 32.3867, 0.15", "-42.8703, 47.413, 32.8381, 0.15", "-44.3777, 46.7152, 33.6039, 0.15", "-45.0242, 46.394, 33.9305, 0.15" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.204714, 55.0434, 10.2345, 0.74", "-0.868349, 55.5771, 10.4681, 0.74", "-1.06838, 55.7653, 10.5558, 0.74", "-1.61129, 56.3393, 10.8383, 0.74", "-2.15267, 57.1315, 11.3446, 1.03", "-2.39536, 57.528, 11.6397, 0.66", "-2.73873, 58.1654, 12.1183, 1.03", "-3.04903, 58.6751, 12.5445, 1.33", "-3.34592, 59.2882, 13.0302, 1.03", "-3.82179, 60.6622, 14.0322, 0.96", "-3.9572, 61.3191, 14.4824, 0.96", "-4.05743, 62.2387, 15.042, 0.74", "-4.02366, 64.8982, 16.4321, 0.74", "-3.63846, 67.7297, 17.5954, 0.74", "-3.46662, 68.4439, 17.7967, 0.74", "-3.16921, 69.3854, 17.9187, 0.74", "-2.94515, 69.9162, 17.9535, 0.74", "-2.54862, 70.7371, 17.978, 0.74", "-2.12588, 71.4796, 17.9689, 0.81", "-2.05269, 71.7097, 18.0036, 0.81", "-1.87103, 72.2861, 18.0754, 0.81", "-1.73941, 72.8722, 18.1284, 0.81", "-1.63947, 73.5902, 18.2078, 1.18" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "129.495, 147.251, -22.5152, 0.44", "130.505, 148.563, -23.1316, 0.44", "130.958, 149.174, -23.397, 0.44", "131.053, 149.309, -23.4479, 0.44", "131.892, 150.541, -23.8685, 1.4", "132.466, 151.414, -24.1305, 0.29", "132.768, 151.871, -24.2614, 0.29", "133.046, 152.246, -24.3422, 0.29", "133.678, 153.044, -24.4425, 0.29", "133.846, 153.245, -24.454, 0.29", "134.479, 153.979, -24.4401, 1.33", "134.945, 154.495, -24.4243, 1.33", "136.354, 155.979, -24.3723, 0.22", "136.812, 156.429, -24.3572, 0.22", "137.497, 157.055, -24.3297, 0.22", "137.982, 157.483, -24.3065, 0.74" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "129.495, 147.251, -22.5152, 0.59", "130.995, 147.503, -22.6808, 0.59", "132.516, 147.768, -22.7736, 0.07", "133.385, 147.92, -22.8225, 0.07", "135.045, 148.307, -22.9202, 1.18", "135.997, 148.565, -22.9295, 1.18", "138.567, 149.312, -22.8833, 0.22", "139.815, 149.754, -22.8041, 0.22", "140.751, 150.098, -22.7056, 0.22", "142.217, 150.699, -22.4895, 0.22", "143.553, 151.301, -22.2677, 1.11", "143.781, 151.425, -22.2091, 0.07", "144.628, 152.028, -21.9211, 0.07", "145.521, 152.795, -21.4974, 1.18", "147.015, 154.327, -20.645, 0.07", "147.492, 154.873, -20.3264, 0.96", "148.864, 156.449, -19.3463, 0.96", "149.665, 157.336, -18.7367, 0.29", "150.189, 157.901, -18.3105, 0.29", "150.791, 158.377, -17.8631, 0.29", "151.496, 158.639, -17.4741, 0.88", "153.775, 158.701, -16.7721, 0.29", "154.966, 158.454, -16.6266, 0.29", "155.394, 158.313, -16.6048, 0.29", "157.795, 157.255, -16.6362, 0.29", "158.028, 157.126, -16.6621, 0.29", "159.401, 156.275, -16.9463, 0.29", "160.259, 155.674, -17.1876, 0.29", "160.918, 155.181, -17.3793, 0.29", "161.553, 154.707, -17.578, 0.81", "163.655, 153.235, -18.3469, 0.22", "164.077, 152.931, -18.5016, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.63947, 73.5902, 18.2078, 0.74", "-0.673457, 74.9101, 17.5606, 0.74", "-0.475748, 75.2524, 17.4133, 0.74", "-0.217852, 75.7831, 17.2125, 0.74", "0.0731578, 76.5115, 16.9808, 0.59", "0.541768, 77.8481, 16.6021, 0.59", "0.687604, 78.2982, 16.4834, 0.59", "0.808182, 78.9292, 16.3329, 0.59", "0.863036, 79.2742, 16.269, 0.59", "0.944991, 79.8738, 16.1844, 0.59", "1.05269, 80.6407, 16.096, 0.59", "1.13812, 81.1858, 16.0457, 0.88", "1.3027, 82.0509, 15.9389, 0.59", "1.52107, 83.0854, 15.7483, 0.52", "1.62368, 83.5956, 15.6204, 0.52", "1.72473, 84.1544, 15.4577, 0.88", "1.7893, 84.6029, 15.3199, 0.88", "1.86786, 85.4102, 15.0795, 0.44", "1.90415, 86.301, 14.8373, 0.44", "1.89546, 87.2632, 14.6038, 0.74", "1.87333, 87.7497, 14.5118, 0.74", "1.84669, 88.1136, 14.4634, 0.74", "1.7514, 89.072, 14.3999, 0.59", "1.67485, 89.7307, 14.4001, 0.59", "1.57509, 90.7452, 14.4513, 0.59", "1.50037, 91.6861, 14.5189, 0.59", "1.45957, 92.3074, 14.5578, 0.59", "1.43, 93.0603, 14.5912, 0.59", "1.42563, 93.5567, 14.6047, 0.59", "1.44727, 94.2194, 14.6301, 0.59", "1.46636, 94.6287, 14.6589, 0.59", "1.49477, 95.162, 14.7028, 0.59", "1.53248, 95.8758, 14.7669, 0.59", "1.59569, 97.0007, 14.8698, 0.59", "1.65274, 98.0967, 14.9764, 0.37", "1.70826, 99.0131, 15.0542, 0.37", "1.76648, 99.5869, 15.1117, 0.74", "1.92603, 100.765, 15.2388, 0.29", "2.02682, 101.407, 15.3131, 0.29", "2.08709, 101.742, 15.3518, 0.29", "2.3266, 103.014, 15.4874, 0.59", "2.58871, 104.301, 15.6199, 0.52", "2.68112, 104.757, 15.6667, 0.52", "2.82373, 105.54, 15.7486, 0.52", "2.86873, 105.877, 15.7798, 0.52", "2.95421, 106.708, 15.8341, 0.52", "3.00891, 107.573, 15.8658, 0.52", "3.02717, 108.062, 15.8591, 0.52", "3.07159, 109.064, 15.8364, 0.74", "3.11708, 110.265, 15.7672, 0.07", "3.14504, 110.935, 15.7231, 0.07", "3.14858, 111.305, 15.6864, 0.07", "3.14226, 112.009, 15.602, 0.07", "3.13202, 112.551, 15.5272, 0.07", "3.10709, 113.319, 15.4117, 0.37", "3.07568, 113.874, 15.3373, 0.74", "2.99216, 115.227, 15.2366, 0.07", "2.96853, 115.642, 15.225, 0.07", "2.9374, 116.09, 15.2442, 0.07", "2.90428, 116.498, 15.2955, 0.07", "2.85197, 116.973, 15.4052, 1.18", "2.7254, 117.916, 15.6603, 0.44", "2.68374, 118.242, 15.7832, 0.44", "2.58914, 118.81, 16.0104, 0.44", "2.45111, 119.455, 16.302, 0.44", "2.2822, 120.106, 16.622, 2.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.63947, 73.5902, 18.2078, 0.74", "-1.5971, 74.6293, 18.2615, 0.74", "-1.58549, 75.5956, 18.3943, 0.74", "-1.62077, 76.2751, 18.5386, 0.74", "-1.74043, 77.4242, 18.885, 0.74", "-1.89297, 78.4, 19.2389, 0.74", "-2.04471, 79.1704, 19.5482, 0.52", "-2.2681, 80.2307, 20.0084, 0.81", "-2.4666, 81.1492, 20.4568, 0.81", "-2.67635, 82.1297, 20.9566, 0.66", "-2.84439, 82.8816, 21.3193, 0.66", "-2.95847, 83.4214, 21.5472, 0.66", "-3.14271, 84.2683, 21.8263, 0.66", "-3.44564, 85.6203, 22.166, 0.66", "-3.69786, 86.6644, 22.3686, 0.66", "-4.04748, 88.0204, 22.5702, 0.96", "-4.33144, 89.1682, 22.7053, 0.96", "-4.69764, 90.6636, 22.8494, 0.81", "-4.93224, 91.5219, 22.9116, 0.81", "-5.3273, 92.7996, 22.9823, 0.74", "-5.59341, 93.6434, 23.0354, 0.74", "-6.03346, 95.1742, 23.1386, 0.74", "-6.18393, 95.7929, 23.1713, 0.74", "-6.38715, 96.9735, 23.2236, 0.74", "-6.48508, 97.8401, 23.2493, 0.74", "-6.54402, 98.4973, 23.2829, 0.74", "-6.62251, 99.2705, 23.3419, 0.88", "-6.70431, 100.061, 23.4199, 0.88", "-6.81996, 101.201, 23.5188, 1.11", "-6.93738, 102.663, 23.6271, 0.66", "-7.05457, 103.985, 23.709, 0.81", "-7.16093, 104.986, 23.7689, 0.96", "-7.26811, 105.807, 23.812, 0.96", "-7.49062, 107.044, 23.864, 0.96", "-7.63895, 107.706, 23.8862, 0.96", "-7.82014, 108.434, 23.8997, 0.96", "-8.01374, 109.262, 23.8944, 0.96", "-8.31646, 110.682, 23.8752, 0.74", "-8.52626, 111.734, 23.8797, 0.74", "-8.6642, 112.401, 23.8911, 0.74", "-8.76905, 112.863, 23.8994, 0.74", "-8.8957, 113.488, 23.9052, 0.74", "-9.0415, 114.362, 23.9165, 0.74", "-9.12487, 115.273, 23.9004, 0.44", "-9.13282, 116.016, 23.8637, 0.66", "-9.09048, 117.189, 23.7717, 0.66", "-9.00262, 118.433, 23.6547, 0.66", "-8.89932, 119.496, 23.5348, 0.66", "-8.75034, 120.893, 23.3798, 0.66", "-8.65227, 122.14, 23.1868, 0.66", "-8.5942, 123.0, 23.0312, 0.66", "-8.55665, 123.889, 22.8422, 0.66", "-8.56005, 124.907, 22.6253, 0.66", "-8.60758, 126.143, 22.3773, 0.88", "-8.71727, 128.045, 22.0384, 0.66", "-8.80661, 129.638, 21.7667, 0.66", "-8.85045, 130.292, 21.6573, 0.66", "-8.92241, 131.352, 21.4944, 0.66", "-8.97811, 132.385, 21.3637, 0.66", "-9.00757, 133.383, 21.2662, 0.66", "-9.01984, 134.36, 21.2324, 0.37", "-9.09735, 135.588, 21.2146, 0.74", "-9.1859, 136.327, 21.2132, 1.18", "-9.34295, 137.254, 21.223, 0.59", "-9.46866, 137.872, 21.2366, 0.59", "-9.63105, 138.53, 21.268, 0.59", "-9.89133, 139.45, 21.3479, 0.59", "-10.2598, 140.766, 21.5335, 0.96", "-10.3743, 141.114, 21.5827, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.3743, 141.114, 21.5827, 0.44", "-9.85264, 142.961, 21.4835, 0.44", "-9.54753, 144.041, 21.4256, 0.66", "-9.24188, 145.123, 21.3675, 0.66", "-9.09873, 145.629, 21.3403, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-10.3743, 141.114, 21.5827, 0.59", "-12.4616, 142.997, 22.2611, 0.59", "-13.4513, 143.979, 22.585, 0.59", "-14.7068, 145.29, 23.0165, 0.59", "-16.3055, 147.028, 23.6104, 0.59", "-17.5149, 148.433, 24.0874, 0.59", "-19.087, 150.41, 24.7593, 1.11", "-19.9348, 151.687, 25.1998, 0.59", "-20.4348, 152.486, 25.4874, 0.59", "-21.1343, 153.665, 25.9664, 0.59", "-21.7826, 154.785, 26.4511, 0.59", "-22.6926, 156.547, 27.4194, 0.59", "-23.1056, 157.472, 28.0185, 0.59", "-23.6841, 158.932, 29.0033, 0.59", "-24.5318, 161.358, 30.6719, 0.81", "-24.7959, 162.441, 31.4625, 0.81", "-25.1818, 165.16, 33.4934, 0.59", "-25.2315, 166.055, 34.1445, 0.88", "-25.2228, 166.623, 34.522, 0.88", "-25.1639, 167.387, 34.9596, 0.88", "-24.9216, 170.337, 36.426, 0.59", "-24.8789, 171.362, 36.9117, 0.96", "-24.8508, 173.827, 37.9112, 0.59", "-24.833, 175.094, 38.4009, 0.59", "-24.8626, 176.751, 38.9879, 0.59", "-24.9935, 178.525, 39.5675, 0.59", "-25.3623, 180.881, 40.1506, 0.59", "-25.6478, 182.439, 40.479, 0.29", "-25.9504, 183.782, 40.6839, 0.66", "-26.5475, 185.704, 40.9414, 0.66", "-27.1637, 187.175, 41.131, 0.66", "-28.2675, 189.19, 41.4047, 0.66", "-28.9406, 190.154, 41.5425, 0.66", "-29.9472, 191.394, 41.8264, 0.52", "-30.8471, 192.435, 42.0978, 0.88", "-31.939, 193.666, 42.4866, 0.88", "-33.2827, 195.224, 43.0261, 0.52", "-34.7464, 196.981, 43.7065, 0.74", "-35.9576, 198.503, 44.3019, 0.96", "-37.6, 200.819, 45.1668, 0.96", "-38.8761, 202.868, 45.7849, 0.59", "-39.6358, 204.265, 46.1344, 0.59", "-40.192, 205.431, 46.3956, 0.59", "-40.7156, 206.628, 46.6314, 0.59", "-41.3508, 208.163, 46.888, 0.96", "-42.4145, 210.9, 47.3093, 0.44", "-42.9446, 212.331, 47.476, 0.96", "-43.5, 213.807, 47.6161, 0.96", "-44.3113, 215.893, 47.7278, 0.44", "-44.6743, 216.808, 47.7551, 0.44", "-45.0496, 217.694, 47.7594, 0.44", "-45.5278, 218.752, 47.7218, 0.88", "-46.1142, 219.992, 47.6278, 0.88", "-47.2708, 222.338, 47.441, 0.52", "-47.6913, 223.166, 47.3988, 0.52", "-48.894, 225.544, 47.3676, 0.07", "-49.4505, 226.64, 47.4215, 0.88", "-50.2406, 228.203, 47.6039, 0.88", "-50.8842, 229.639, 47.8834, 0.44", "-51.3902, 230.913, 48.1803, 0.44", "-52.2604, 233.43, 48.7725, 0.44", "-52.7681, 235.295, 49.2078, 1.18", "-53.0048, 236.415, 49.4413, 1.18", "-53.4703, 239.138, 49.8965, 0.07", "-53.718, 240.918, 50.1163, 0.66", "-53.8327, 242.17, 50.2331, 0.22", "-53.8676, 243.859, 50.336, 0.22", "-53.7975, 245.414, 50.3885, 0.59", "-53.6019, 247.279, 50.4165, 0.59", "-53.3881, 248.501, 50.4064, 0.59", "-52.9589, 250.266, 50.3958, 0.07", "-52.5198, 251.767, 50.3407, 0.59", "-52.2758, 252.499, 50.2894, 0.96", "-51.9597, 253.427, 50.2146, 0.96", "-51.6065, 254.591, 50.1394, 0.37", "-51.358, 255.751, 50.1213, 0.07", "-51.2684, 257.571, 50.1299, 0.07", "-51.4255, 259.164, 50.2132, 0.07", "-51.6826, 260.436, 50.338, 0.07", "-52.091, 261.825, 50.537, 0.07", "-52.3092, 262.408, 50.6474, 1.03", "-52.9378, 263.874, 50.963, 0.66", "-53.3771, 264.883, 51.1795, 0.66", "-53.7673, 265.903, 51.3656, 0.66", "-53.9786, 267.023, 51.6374, 0.66", "-54.028, 267.982, 51.9402, 0.66", "-54.0095, 268.534, 52.1371, 0.66", "-53.8894, 269.766, 52.6173, 0.07", "-53.8194, 270.311, 52.8212, 0.07", "-53.3714, 273.698, 54.0555, 0.37", "-53.1878, 275.047, 54.4399, 0.66", "-52.8512, 277.414, 54.9356, 0.07", "-52.76, 278.086, 55.0286, 0.07", "-52.5957, 279.352, 55.1018, 0.66", "-52.4298, 280.545, 55.0437, 1.11", "-52.022, 283.2, 54.5403, 0.07", "-51.8624, 283.988, 54.3523, 0.07", "-51.5595, 285.292, 54.0446, 0.07", "-51.2957, 286.478, 53.8266, 0.59", "-51.0778, 287.493, 53.6963, 0.59", "-50.8808, 288.585, 53.6585, 0.59", "-50.8656, 288.734, 53.6793, 1.03", "-50.8401, 290.585, 54.1442, 0.37", "-50.8738, 291.794, 54.66, 0.37", "-50.9017, 292.13, 54.851, 0.37", "-51.0316, 293.117, 55.5061, 0.37", "-51.2359, 294.258, 56.34, 0.37", "-51.4618, 295.195, 57.0797, 0.37", "-51.9937, 296.908, 58.3384, 0.07", "-52.2498, 297.624, 58.8278, 0.59", "-52.5223, 298.265, 59.218, 0.59", "-52.9632, 299.157, 59.7084, 0.59", "-53.5805, 300.331, 60.2519, 1.33", "-55.0362, 302.963, 61.2501, 0.07", "-55.6079, 303.972, 61.5588, 0.07", "-56.4367, 305.511, 61.9849, 0.37", "-57.0092, 306.596, 62.264, 0.37", "-57.9366, 308.408, 62.6911, 0.74", "-58.6331, 309.795, 63.0125, 0.15", "-58.8517, 310.215, 63.1249, 0.15", "-59.3089, 311.167, 63.3881, 0.15", "-59.8118, 312.318, 63.7241, 0.15", "-60.3082, 313.542, 64.0826, 0.81", "-60.677, 314.551, 64.3744, 0.81", "-61.0837, 315.893, 64.7338, 0.81", "-61.8634, 318.894, 65.4681, 0.29", "-62.2482, 320.606, 65.861, 0.44", "-62.5955, 322.318, 66.2497, 0.44", "-62.9353, 324.156, 66.6519, 0.44", "-63.2091, 325.508, 66.899, 0.88", "-63.5606, 327.114, 67.1509, 1.25", "-64.0642, 329.069, 67.3863, 0.66", "-64.8303, 331.836, 67.5952, 0.29", "-65.4263, 333.902, 67.6925, 0.74", "-66.2754, 336.657, 67.7513, 0.22", "-66.6926, 337.966, 67.7544, 0.22", "-67.4992, 340.586, 67.6843, 0.81", "-68.2778, 343.437, 67.5097, 0.37", "-68.7285, 345.341, 67.3189, 1.11", "-69.1683, 347.291, 67.0045, 0.44", "-69.3322, 348.185, 66.8168, 0.44", "-69.5228, 349.145, 66.5435, 0.44", "-69.8152, 350.704, 65.9866, 0.44", "-70.0578, 351.936, 65.4512, 0.44", "-70.5577, 354.605, 64.0901, 0.07", "-70.7147, 355.496, 63.6174, 0.07", "-70.978, 356.868, 62.9099, 0.07", "-71.3082, 358.218, 62.2888, 0.52", "-71.5595, 359.241, 61.9019, 0.52", "-71.8994, 360.874, 61.4564, 0.07", "-72.0041, 361.639, 61.3533, 0.15", "-72.1111, 362.51, 61.2854, 0.15", "-72.4087, 365.525, 61.2095, 0.59", "-72.5581, 367.328, 61.2711, 0.07", "-72.6151, 368.418, 61.3512, 0.88", "-72.6292, 371.431, 61.632, 0.29", "-72.5853, 372.514, 61.7246, 1.03", "-72.4561, 373.975, 61.8595, 0.07", "-72.1113, 376.237, 62.0839, 0.07", "-71.8234, 377.887, 62.0798, 0.07", "-71.6283, 378.823, 62.0068, 0.07", "-71.2987, 380.391, 61.6857, 0.07", "-71.0973, 381.38, 61.4051, 0.07", "-70.7699, 383.042, 60.8008, 0.07", "-70.2807, 386.034, 59.4835, 0.37", "-70.0691, 387.792, 58.7152, 0.07", "-69.9376, 389.833, 57.9348, 0.07", "-69.9335, 390.604, 57.6921, 0.07", "-69.9887, 391.618, 57.4859, 0.07", "-70.1677, 393.322, 57.3699, 1.4", "-70.3724, 395.219, 57.4986, 0.29", "-70.5962, 397.221, 57.7463, 0.07", "-70.7264, 398.28, 57.9657, 1.11", "-71.12, 400.674, 58.5926, 0.15", "-71.6758, 403.356, 59.4454, 0.15", "-72.2086, 405.367, 60.232, 0.59", "-72.6112, 406.508, 60.764, 0.81", "-73.4638, 408.372, 61.7891, 0.29", "-74.0121, 409.341, 62.4473, 0.29", "-74.5463, 410.091, 63.0748, 0.29", "-75.717, 411.457, 64.295, 0.29", "-76.9752, 412.856, 65.4855, 0.29", "-77.6408, 413.644, 66.0991, 0.29", "-78.8312, 415.078, 67.0375, 1.03", "-79.8903, 416.397, 67.7552, 0.44", "-81.5265, 418.537, 68.5719, 0.07", "-82.3859, 419.768, 68.8607, 0.07", "-83.2, 421.04, 68.9187, 0.44", "-84.4157, 423.021, 68.8061, 0.44", "-84.803, 423.68, 68.7159, 1.25", "-86.257, 426.23, 68.2785, 0.07", "-86.921, 427.4, 68.0432, 0.44", "-88.8934, 430.806, 67.3631, 0.07", "-89.5056, 431.918, 67.141, 0.07", "-89.887, 432.684, 66.9843, 0.07", "-90.3173, 433.594, 66.7779, 0.07", "-91.6152, 436.502, 66.1043, 0.07", "-92.327, 437.979, 65.698, 0.07", "-92.7419, 438.817, 65.4608, 0.07", "-93.6674, 440.665, 64.7691, 0.07", "-94.2335, 441.814, 64.2815, 0.07", "-94.5198, 442.379, 64.0239, 0.88", "-95.8186, 444.93, 62.8907, 0.07", "-96.0693, 445.441, 62.6692, 0.66", "-96.9973, 447.469, 61.9192, 0.22", "-97.2326, 448.082, 61.7344, 0.22", "-97.7557, 449.711, 61.3085, 0.81", "-98.1215, 451.837, 61.0241, 0.07", "-98.1597, 453.548, 61.053, 0.07", "-98.1129, 454.999, 61.2177, 0.07", "-97.9249, 456.38, 61.6687, 0.96", "-97.819, 456.902, 61.9156, 0.96", "-97.1079, 459.597, 63.6028, 0.07", "-96.8151, 460.673, 64.4561, 0.07", "-96.6697, 461.285, 65.006, 0.81", "-96.1324, 463.979, 67.386, 0.29", "-96.0598, 464.464, 67.7653, 0.29", "-96.009, 465.164, 68.2115, 1.03", "-96.0332, 466.055, 68.6037, 1.03", "-96.0902, 467.168, 68.9642, 1.03", "-96.2513, 469.255, 69.427, 0.29", "-96.4223, 470.787, 69.6423, 0.29", "-96.5905, 471.985, 69.802, 0.29", "-96.9504, 473.933, 70.0867, 0.29", "-97.3545, 475.573, 70.3794, 1.03", "-97.9374, 477.396, 70.7897, 0.07", "-98.0883, 477.784, 70.895, 0.59", "-98.9085, 479.522, 71.3712, 0.07", "-99.9945, 481.426, 71.9321, 0.07", "-100.804, 482.576, 72.3311, 0.07", "-101.994, 483.95, 72.8277, 0.07", "-102.761, 484.706, 73.1178, 0.07", "-104.021, 485.885, 73.564, 0.88", "-105.213, 486.958, 73.9561, 0.07", "-106.451, 488.115, 74.2078, 0.07", "-107.769, 489.547, 74.3552, 0.07", "-108.472, 490.418, 74.4009, 0.07", "-108.959, 491.156, 74.4259, 0.07", "-109.262, 491.771, 74.4515, 0.07", "-110.514, 495.198, 74.4965, 0.07", "-110.911, 496.704, 74.5381, 0.07", "-111.14, 497.745, 74.5821, 0.07", "-111.448, 499.273, 74.6402, 0.07", "-111.906, 501.63, 74.7671, 0.07", "-112.182, 503.263, 74.903, 0.07", "-112.508, 506.591, 75.395, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-9.09873, 145.629, 21.3403, 0.29", "-8.04953, 146.983, 21.8179, 0.29", "-7.67999, 147.602, 22.0466, 0.29", "-6.86558, 149.222, 22.7588, 0.29", "-5.92139, 151.215, 23.6558, 0.88", "-5.63961, 151.873, 23.9672, 0.88", "-5.25138, 152.852, 24.4356, 0.88", "-4.77573, 154.382, 25.1782, 0.37", "-3.94548, 157.381, 26.6658, 0.07", "-3.70278, 158.264, 27.159, 0.07", "-3.33212, 159.393, 27.7916, 0.07", "-3.14982, 159.896, 28.0898, 0.07", "-2.94809, 160.398, 28.398, 0.88", "-2.61047, 161.132, 28.8478, 0.88", "-1.6897, 162.786, 29.8526, 0.44", "-1.252, 163.451, 30.2631, 0.44", "-0.407353, 164.457, 30.9099, 0.44", "0.402385, 165.221, 31.4654, 0.96", "1.31266, 165.887, 31.9419, 0.07", "1.83164, 166.195, 32.1083, 0.07", "2.12425, 166.318, 32.1421, 0.07", "3.55931, 166.732, 32.2109, 0.07", "4.68949, 166.936, 32.2268, 0.52", "6.28581, 167.171, 32.1577, 0.52", "7.59826, 167.439, 32.0274, 0.07", "8.87877, 167.798, 31.8858, 0.07", "9.40512, 167.979, 31.8299, 0.07", "10.3541, 168.414, 31.745, 0.07", "11.5116, 169.005, 31.6808, 0.96", "13.2888, 169.981, 31.7214, 0.29", "14.1517, 170.514, 31.7786, 0.29", "14.6474, 170.877, 31.8314, 1.25", "16.1065, 172.017, 32.0118, 0.15", "16.7831, 172.581, 32.1203, 0.15", "17.5528, 173.272, 32.3114, 0.59", "18.6565, 174.319, 32.6715, 0.15", "19.6817, 175.339, 33.0104, 0.74" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-9.09873, 145.629, 21.3403, 0.22", "-8.84747, 147.237, 21.3841, 0.22", "-8.72691, 147.891, 21.4251, 0.22", "-8.57219, 148.731, 21.4946, 0.22", "-8.4795, 149.201, 21.5429, 0.22", "-8.24118, 150.24, 21.6763, 0.66", "-7.9957, 151.202, 21.8197, 0.07", "-7.88696, 151.548, 21.8953, 0.07", "-7.71432, 152.071, 22.0087, 1.03", "-7.48337, 152.785, 22.1919, 1.03", "-7.06211, 154.094, 22.5653, 0.37", "-6.70903, 155.24, 22.9149, 0.96", "-6.37994, 156.354, 23.2684, 0.29", "-6.12549, 157.252, 23.5594, 0.29", "-5.78835, 158.504, 23.9689, 0.29", "-5.66965, 159.008, 24.1315, 0.29", "-5.51755, 159.811, 24.3827, 0.29", "-5.40876, 160.562, 24.6039, 0.29", "-5.35894, 161.082, 24.7698, 0.29", "-5.30687, 162.067, 25.0899, 0.59", "-5.30457, 162.761, 25.2926, 0.59", "-5.32505, 163.374, 25.4781, 0.59", "-5.34356, 163.745, 25.5925, 0.96", "-5.41604, 165.105, 26.0075, 0.52", "-5.45419, 166.012, 26.2778, 0.07", "-5.50509, 167.774, 26.7839, 0.07", "-5.50599, 168.127, 26.8777, 0.07", "-5.48696, 169.015, 27.0915, 1.11", "-5.47246, 169.904, 27.2675, 1.11", "-5.46309, 170.693, 27.3859, 0.44", "-5.45319, 171.358, 27.4861, 0.44", "-5.40609, 172.66, 27.6499, 0.44", "-5.37191, 173.209, 27.713, 0.88", "-5.20257, 175.19, 27.9293, 0.52", "-5.06569, 176.512, 28.068, 0.52", "-4.83325, 178.306, 28.257, 0.52", "-4.50803, 180.346, 28.4792, 0.52", "-4.29876, 181.434, 28.6118, 0.52", "-4.09215, 182.333, 28.7443, 0.88", "-4.04182, 182.515, 28.7767, 0.07", "-3.72166, 183.639, 29.0233, 0.07", "-3.43096, 184.654, 29.2939, 1.11", "-2.9703, 186.284, 29.8161, 0.15", "-2.66477, 187.361, 30.2043, 0.22", "-2.48499, 187.983, 30.4481, 0.22", "-2.24638, 188.823, 30.7939, 0.96", "-2.2266, 188.896, 30.8255, 0.07", "-2.01129, 189.856, 31.2317, 0.07", "-1.87009, 190.668, 31.5536, 0.07", "-1.79377, 191.347, 31.7906, 0.96", "-1.74028, 192.053, 32.0091, 0.96", "-1.69784, 192.938, 32.2412, 0.07", "-1.6928, 193.973, 32.4778, 0.07", "-1.72033, 194.47, 32.5665, 0.07", "-1.76584, 194.895, 32.5906, 0.52", "-1.86796, 195.504, 32.5774, 0.96", "-2.06872, 196.266, 32.4985, 0.96", "-2.25398, 196.79, 32.41, 0.96", "-2.65447, 197.785, 32.2115, 0.44", "-3.21407, 199.073, 31.9173, 0.44", "-3.40714, 199.54, 31.7682, 0.88", "-3.81585, 200.53, 31.3908, 0.88", "-4.09019, 201.218, 31.1076, 0.88", "-4.29607, 201.823, 30.8684, 0.88", "-4.54733, 202.76, 30.5433, 0.88", "-4.7849, 204.262, 30.1991, 0.37", "-4.86111, 205.024, 30.0603, 0.37", "-4.91146, 205.645, 29.9711, 0.37", "-4.99555, 206.43, 29.896, 0.88", "-5.10911, 207.272, 29.8685, 0.37", "-5.31448, 208.845, 29.9527, 0.37", "-5.4116, 209.574, 30.038, 0.37", "-5.51111, 210.287, 30.1574, 1.25", "-5.67497, 211.205, 30.3451, 0.15", "-5.86165, 212.028, 30.5395, 0.66", "-6.19411, 213.308, 30.8704, 0.15", "-6.25329, 213.512, 30.9315, 0.15", "-6.57483, 214.744, 31.3554, 0.81", "-6.74087, 215.447, 31.6396, 0.81", "-6.85752, 215.879, 31.8548, 0.81" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_18", "dend_13", "dend_12", "dend_5", "dend_4", "dend_3", "dend_0", "dend_39", "dend_19", "dend_17", "dend_14", "dend_11", "dend_6", "dend_2", "dend_1", "dend_40", "dend_28", "dend_23", "dend_20", "dend_16", "dend_15", "dend_8", "dend_7", "dend_38", "dend_29", "dend_27", "dend_24", "dend_22", "dend_21", "dend_10", "dend_9", "dend_37", "dend_30", "dend_26", "dend_25", "dend_36", "dend_31", "dend_33", "dend_32", "dend_35", "dend_34" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_18", "dend_13", "dend_12", "dend_5", "dend_4", "dend_3", "dend_0", "dend_39", "dend_19", "dend_17", "dend_14", "dend_11", "dend_6", "dend_2", "dend_1", "dend_40", "dend_28", "dend_23", "dend_20", "dend_16", "dend_15", "dend_8", "dend_7", "dend_38", "dend_29", "dend_27", "dend_24", "dend_22", "dend_21", "dend_10", "dend_9", "dend_37", "dend_30", "dend_26", "dend_25", "dend_36", "dend_31", "dend_33", "dend_32", "dend_35", "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_LBC_c5d7d5e5ee_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_18
create dend_39
public dend_39
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_28, id: dend_28, parent: dend_19
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_38, id: dend_38, parent: dend_28
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_37, id: dend_37, parent: dend_29
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_18, dend_13, dend_12, dend_5, dend_4, dend_3, dend_0, dend_39, dend_19, dend_17, dend_14, dend_11, dend_6, dend_2, dend_1, dend_40, dend_28, dend_23, dend_20, dend_16, dend_15, dend_8, dend_7, dend_38, dend_29, dend_27, dend_24, dend_22, dend_21, dend_10, dend_9, dend_37, dend_30, dend_26, dend_25, dend_36, dend_31, dend_33, dend_32, dend_35, dend_34]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_18, dend_13, dend_12, dend_5, dend_4, dend_3, dend_0, dend_39, dend_19, dend_17, dend_14, dend_11, dend_6, dend_2, dend_1, dend_40, dend_28, dend_23, dend_20, dend_16, dend_15, dend_8, dend_7, dend_38, dend_29, dend_27, dend_24, dend_22, dend_21, dend_10, dend_9, dend_37, dend_30, dend_26, dend_25, dend_36, dend_31, dend_33, dend_32, dend_35, dend_34]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_18(0), soma_0(0.4500007958597263)
    connect dend_13(0), soma_0(0.4500007958597263)
    connect dend_12(0), soma_0(0.4500007958597263)
    connect dend_5(0), soma_0(0.4500007958597263)
    connect dend_4(0), soma_0(0.4500007958597263)
    connect dend_3(0), soma_0(0.4500007958597263)
    connect dend_0(0), soma_0(0.4500007958597263)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_28(0), dend_19(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_38(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_37(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -9.54279, 2.1457, 0.213728, 3.05026 ) }
    soma_0 { pt3dadd( -8.50245, 1.95075, 0.185339, 5.11751 ) }
    soma_0 { pt3dadd( -7.4621, 1.75581, 0.15695, 8.02784 ) }
    soma_0 { pt3dadd( -6.42175, 1.56087, 0.12856, 9.03175 ) }
    soma_0 { pt3dadd( -5.38141, 1.36592, 0.100171, 9.83239 ) }
    soma_0 { pt3dadd( -4.34106, 1.17098, 0.0717818, 10.6884 ) }
    soma_0 { pt3dadd( -3.30071, 0.976035, 0.0433924, 11.5727 ) }
    soma_0 { pt3dadd( -2.26037, 0.781092, 0.0150031, 12.0226 ) }
    soma_0 { pt3dadd( -1.22002, 0.586148, -0.0133862, 12.0435 ) }
    soma_0 { pt3dadd( -0.179673, 0.391205, -0.0417756, 12.0367 ) }
    soma_0 { pt3dadd( 0.860674, 0.196261, -0.0701649, 12.0298 ) }
    soma_0 { pt3dadd( 1.90102, 0.0013176, -0.0985543, 12.0232 ) }
    soma_0 { pt3dadd( 2.94137, -0.193626, -0.126944, 12.0171 ) }
    soma_0 { pt3dadd( 3.98171, -0.388569, -0.155333, 12.011 ) }
    soma_0 { pt3dadd( 5.02206, -0.583513, -0.183722, 12.0049 ) }
    soma_0 { pt3dadd( 6.06241, -0.778456, -0.212112, 11.8239 ) }
    soma_0 { pt3dadd( 7.10276, -0.9734, -0.240501, 11.3971 ) }
    soma_0 { pt3dadd( 8.1431, -1.16834, -0.26889, 10.4445 ) }
    soma_0 { pt3dadd( 9.18345, -1.36329, -0.29728, 7.79982 ) }
    soma_0 { pt3dadd( 10.2238, -1.55823, -0.325669, 5.2634 ) }
    soma_0 { pt3dadd( 11.2641, -1.75317, -0.354058, 3.00159 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 21/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 3.49319, 7.24505, -1.57561, 6.41 ) }
    dend_18 { pt3dadd( 3.48952, 7.38464, -1.61817, 6.41 ) }
    dend_18 { pt3dadd( 3.43815, 9.33917, -2.21414, 3.68 ) }
    dend_18 { pt3dadd( 3.40552, 10.5803, -2.59258, 3.61 ) }
    dend_18 { pt3dadd( 3.37845, 11.6103, -2.90665, 3.61 ) }
    dend_18 { pt3dadd( 3.3578, 12.396, -3.14621, 3.39 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 27/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.51681, 3.50105, -6.38561, 2.06 ) }
    dend_13 { pt3dadd( -11.5874, 6.26663, -5.48572, 2.06 ) }
    dend_13 { pt3dadd( -13.0468, 8.13507, -5.03146, 1.18 ) }
    dend_13 { pt3dadd( -13.8199, 9.08978, -4.84339, 1.18 ) }
    dend_13 { pt3dadd( -14.6183, 10.0829, -4.68458, 1.18 ) }
    dend_13 { pt3dadd( -15.4557, 11.1413, -4.46154, 1.18 ) }
    dend_13 { pt3dadd( -16.3763, 12.3321, -4.18083, 1.18 ) }
    dend_13 { pt3dadd( -17.6161, 13.851, -3.96579, 1.18 ) }
    dend_13 { pt3dadd( -18.3148, 14.7197, -3.81353, 1.18 ) }
    dend_13 { pt3dadd( -19.2847, 15.9505, -3.55821, 1.18 ) }
    dend_13 { pt3dadd( -20.6345, 17.7327, -3.11134, 1.55 ) }
    dend_13 { pt3dadd( -21.0819, 18.3522, -2.91586, 1.99 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -9.51681, 3.50105, -6.38561, 0.81 ) }
    dend_12 { pt3dadd( -11.237, 2.69566, -7.08283, 0.81 ) }
    dend_12 { pt3dadd( -12.5431, 1.91342, -7.63399, 0.81 ) }
    dend_12 { pt3dadd( -13.1381, 1.44789, -7.90435, 0.96 ) }
    dend_12 { pt3dadd( -14.0421, 0.465452, -8.37178, 0.96 ) }
    dend_12 { pt3dadd( -14.3877, -0.026129, -8.57495, 0.96 ) }
    dend_12 { pt3dadd( -14.9784, -1.05657, -9.04812, 0.96 ) }
    dend_12 { pt3dadd( -15.0868, -1.41088, -9.23219, 0.96 ) }
    dend_12 { pt3dadd( -15.2654, -2.21058, -9.68066, 0.66 ) }
    dend_12 { pt3dadd( -15.4876, -3.24193, -10.333, 1.18 ) }
    dend_12 { pt3dadd( -15.6195, -3.74327, -10.6847, 1.18 ) }
    dend_12 { pt3dadd( -16.0817, -4.99321, -11.6271, 1.18 ) }
    dend_12 { pt3dadd( -16.7643, -6.40096, -12.7167, 1.18 ) }
    dend_12 { pt3dadd( -17.3266, -7.43221, -13.4711, 1.11 ) }
    dend_12 { pt3dadd( -17.719, -8.14604, -13.9383, 1.11 ) }
    dend_12 { pt3dadd( -18.2233, -9.13425, -14.5715, 0.88 ) }
    dend_12 { pt3dadd( -18.4853, -9.69472, -14.9853, 0.88 ) }
    dend_12 { pt3dadd( -18.8887, -10.6821, -15.7408, 1.33 ) }
    dend_12 { pt3dadd( -19.3011, -11.7969, -16.6575, 1.33 ) }
    dend_12 { pt3dadd( -19.758, -13.0666, -17.8906, 1.03 ) }
    dend_12 { pt3dadd( -20.1861, -14.4072, -19.321, 0.74 ) }
    dend_12 { pt3dadd( -20.6939, -16.3504, -21.5384, 1.18 ) }
    dend_12 { pt3dadd( -20.8025, -16.8583, -22.1474, 1.18 ) }
    dend_12 { pt3dadd( -20.8707, -17.4172, -22.8324, 0.88 ) }
    dend_12 { pt3dadd( -20.9065, -18.4345, -24.0256, 0.59 ) }
    dend_12 { pt3dadd( -20.8883, -19.2263, -24.9332, 1.4 ) }
    dend_12 { pt3dadd( -20.879, -19.7475, -25.4529, 1.4 ) }
    dend_12 { pt3dadd( -20.8848, -20.3649, -26.0355, 1.77 ) }
    dend_12 { pt3dadd( -21.0205, -21.8529, -27.5716, 0.88 ) }
    dend_12 { pt3dadd( -21.1196, -22.4106, -28.1894, 0.88 ) }
    dend_12 { pt3dadd( -21.516, -23.9796, -29.9171, 0.88 ) }
    dend_12 { pt3dadd( -21.8325, -24.7594, -30.9578, 1.11 ) }
    dend_12 { pt3dadd( -22.2044, -25.5078, -32.0216, 0.74 ) }
    dend_12 { pt3dadd( -22.5023, -26.0328, -32.7684, 0.74 ) }
    dend_12 { pt3dadd( -22.9855, -26.7876, -33.8276, 0.74 ) }
    dend_12 { pt3dadd( -23.392, -27.4877, -34.7401, 1.47 ) }
    dend_12 { pt3dadd( -24.2757, -29.2254, -36.6353, 0.07 ) }
    dend_12 { pt3dadd( -24.563, -29.7983, -37.2642, 1.11 ) }
    dend_12 { pt3dadd( -24.8752, -30.358, -37.8835, 0.07 ) }
    dend_12 { pt3dadd( -25.1342, -30.7186, -38.3059, 0.66 ) }
    dend_12 { pt3dadd( -25.6359, -31.2662, -38.9505, 1.33 ) }
    dend_12 { pt3dadd( -26.6977, -32.1916, -40.1305, 0.07 ) }
    dend_12 { pt3dadd( -27.6224, -32.8763, -40.9941, 1.18 ) }
    dend_12 { pt3dadd( -27.9537, -33.081, -41.3026, 1.18 ) }
    dend_12 { pt3dadd( -28.9556, -33.6148, -42.2341, 0.07 ) }
    dend_12 { pt3dadd( -29.2373, -33.745, -42.5011, 0.07 ) }
    dend_12 { pt3dadd( -30.2903, -34.1672, -43.493, 1.25 ) }
    dend_12 { pt3dadd( -30.8817, -34.3733, -44.058, 0.81 ) }
    dend_12 { pt3dadd( -31.9975, -34.7524, -45.0475, 0.37 ) }
    dend_12 { pt3dadd( -32.7158, -35.0063, -45.6922, 1.18 ) }
    dend_12 { pt3dadd( -33.8052, -35.4335, -46.6962, 0.44 ) }
    dend_12 { pt3dadd( -34.1485, -35.6011, -47.0202, 0.44 ) }
    dend_12 { pt3dadd( -34.3638, -35.7324, -47.2229, 0.44 ) }
    dend_12 { pt3dadd( -35.1469, -36.3074, -48.0501, 1.47 ) }
    dend_12 { pt3dadd( -35.8667, -36.9077, -48.8207, 0.07 ) }
    dend_12 { pt3dadd( -36.4383, -37.428, -49.4273, 1.11 ) }
    dend_12 { pt3dadd( -37.0183, -37.9746, -49.9765, 0.15 ) }
    dend_12 { pt3dadd( -37.6141, -38.5265, -50.5014, 0.15 ) }
    dend_12 { pt3dadd( -38.4452, -39.2975, -51.1758, 1.4 ) }
    dend_12 { pt3dadd( -38.8547, -39.6749, -51.5102, 1.4 ) }
    dend_12 { pt3dadd( -39.2, -40.0019, -51.7825, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_12 { pt3dadd( -40.1464, -40.9816, -52.6764, 0.22 ) }
    dend_12 { pt3dadd( -40.6009, -41.53, -53.2304, 0.22 ) }
    dend_12 { pt3dadd( -40.8944, -41.9507, -53.6881, 0.22 ) }
    dend_12 { pt3dadd( -41.465, -42.8141, -54.8534, 1.99 ) }
    dend_12 { pt3dadd( -41.8989, -43.527, -55.9197, 0.07 ) }
    dend_12 { pt3dadd( -42.4472, -44.5356, -57.5189, 1.55 ) }
    dend_12 { pt3dadd( -42.8735, -45.4037, -58.9699, 0.07 ) }
    dend_12 { pt3dadd( -43.228, -46.1678, -60.2454, 1.47 ) }
    dend_12 { pt3dadd( -43.8974, -47.582, -62.6701, 0.07 ) }
    dend_12 { pt3dadd( -44.2069, -48.2319, -63.7206, 0.88 ) }
    dend_12 { pt3dadd( -44.4901, -48.815, -64.5999, 0.29 ) }
    dend_12 { pt3dadd( -44.7379, -49.3751, -65.2945, 0.29 ) }
    dend_12 { pt3dadd( -44.9103, -49.8182, -65.7452, 1.25 ) }
    dend_12 { pt3dadd( -45.4893, -51.5292, -67.1107, 0.29 ) }
    dend_12 { pt3dadd( -45.8314, -52.675, -67.8158, 0.29 ) }
    dend_12 { pt3dadd( -46.0705, -53.5444, -68.3109, 1.4 ) }
    dend_12 { pt3dadd( -46.3995, -54.8958, -69.0115, 0.07 ) }
    dend_12 { pt3dadd( -46.5538, -55.6828, -69.3824, 1.18 ) }
    dend_12 { pt3dadd( -46.6387, -56.359, -69.6623, 1.18 ) }
    dend_12 { pt3dadd( -46.671, -56.9355, -69.8954, 1.18 ) }
    dend_12 { pt3dadd( -46.6941, -57.7112, -70.2912, 0.07 ) }
    dend_12 { pt3dadd( -46.7124, -58.29, -70.6404, 0.07 ) }
    dend_12 { pt3dadd( -46.7634, -58.6845, -70.9265, 1.03 ) }
    dend_12 { pt3dadd( -47.0887, -59.9652, -71.9313, 0.07 ) }
    dend_12 { pt3dadd( -47.6083, -61.1339, -72.9225, 0.07 ) }
    dend_12 { pt3dadd( -47.995, -61.7337, -73.5093, 1.03 ) }
    dend_12 { pt3dadd( -48.1759, -61.9627, -73.743, 1.03 ) }
    dend_12 { pt3dadd( -49.0525, -62.9529, -74.7457, 0.07 ) }
    dend_12 { pt3dadd( -49.6095, -63.5215, -75.3281, 0.59 ) }
    dend_12 { pt3dadd( -50.6551, -64.4878, -76.3563, 0.07 ) }
    dend_12 { pt3dadd( -51.7495, -65.5233, -77.4987, 0.59 ) }
    dend_12 { pt3dadd( -52.2805, -66.0261, -78.1048, 0.07 ) }
    dend_12 { pt3dadd( -52.6277, -66.3342, -78.5309, 0.96 ) }
    dend_12 { pt3dadd( -53.2572, -66.8341, -79.3884, 0.07 ) }
    dend_12 { pt3dadd( -53.6913, -67.0822, -80.0223, 0.59 ) }
    dend_12 { pt3dadd( -54.6148, -67.3659, -81.3791, 0.07 ) }
    dend_12 { pt3dadd( -55.1795, -67.3671, -82.182, 1.47 ) }
    dend_12 { pt3dadd( -55.8722, -67.2088, -83.3247, 0.07 ) }
    dend_12 { pt3dadd( -56.3684, -67.0448, -84.2527, 1.11 ) }
    dend_12 { pt3dadd( -57.1241, -66.7551, -85.7121, 0.07 ) }
    dend_12 { pt3dadd( -57.4007, -66.6554, -86.2378, 1.18 ) }
    dend_12 { pt3dadd( -58.2808, -66.3806, -87.8566, 0.52 ) }
    dend_12 { pt3dadd( -59.6193, -66.0314, -90.6191, 0.52 ) }
    dend_12 { pt3dadd( -60.5208, -65.9103, -92.5897, 0.07 ) }
    dend_12 { pt3dadd( -60.7376, -65.9075, -93.1421, 1.18 ) }
    dend_12 { pt3dadd( -61.5378, -66.0443, -95.5958, 0.07 ) }
    dend_12 { pt3dadd( -61.9368, -66.2192, -97.1567, 1.11 ) }
    dend_12 { pt3dadd( -62.3804, -66.768, -100.138, 0.07 ) }
    dend_12 { pt3dadd( -62.411, -66.9951, -101.035, 1.11 ) }
    dend_12 { pt3dadd( -62.0947, -68.2505, -105.12, 0.44 ) }
    dend_12 { pt3dadd( -61.9031, -68.6746, -106.41, 1.03 ) }
    dend_12 { pt3dadd( -61.5346, -69.2697, -108.072, 1.03 ) }
    dend_12 { pt3dadd( -60.9597, -70.092, -110.244, 0.07 ) }
    dend_12 { pt3dadd( -60.5185, -70.6765, -111.824, 1.25 ) }
    dend_12 { pt3dadd( -60.1078, -71.1938, -113.364, 0.59 ) }
    dend_12 { pt3dadd( -59.7404, -71.6638, -115.139, 0.59 ) }
    dend_12 { pt3dadd( -59.6012, -71.9, -116.54, 0.37 ) }
    dend_12 { pt3dadd( -59.6019, -71.937, -117.134, 0.37 ) }
    dend_12 { pt3dadd( -59.8149, -71.8227, -119.313, 0.81 ) }
    dend_12 { pt3dadd( -59.8711, -71.7774, -119.681, 0.81 ) }
    dend_12 { pt3dadd( -60.4691, -71.2494, -122.789, 0.52 ) }
    dend_12 { pt3dadd( -60.643, -71.086, -123.549, 0.52 ) }
    dend_12 { pt3dadd( -61.0618, -70.6936, -124.958, 0.52 ) }
    dend_12 { pt3dadd( -61.9473, -69.9153, -127.238, 0.52 ) }
    dend_12 { pt3dadd( -62.2171, -69.7085, -127.79, 0.52 ) }
    dend_12 { pt3dadd( -62.3639, -69.6022, -128.051, 0.52 ) }
    dend_12 { pt3dadd( -62.927, -69.2839, -128.824, 0.52 ) }
    dend_12 { pt3dadd( -63.3741, -69.0758, -129.382, 0.52 ) }
    dend_12 { pt3dadd( -64.6197, -68.6774, -130.564, 0.52 ) }
    dend_12 { pt3dadd( -66.1304, -68.327, -131.76, 0.52 ) }
    dend_12 { pt3dadd( -66.8496, -68.1993, -132.336, 0.15 ) }
    dend_12 { pt3dadd( -67.6604, -68.0923, -132.998, 0.15 ) }
    dend_12 { pt3dadd( -68.0362, -68.0749, -133.306, 0.15 ) }
    dend_12 { pt3dadd( -68.9922, -68.0867, -134.052, 0.15 ) }
    dend_12 { pt3dadd( -69.8417, -68.171, -134.571, 0.15 ) }
    dend_12 { pt3dadd( -71.1454, -68.3153, -135.161, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 76/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 9.58319, -4.96195, 5.49439, 1.11 ) }
    dend_5 { pt3dadd( 9.62811, -5.08656, 5.49439, 1.11 ) }
    dend_5 { pt3dadd( 9.91092, -5.8711, 5.49439, 1.11 ) }
    dend_5 { pt3dadd( 10.2382, -6.77899, 5.49439, 1.11 ) }
    dend_5 { pt3dadd( 10.5579, -7.66574, 5.49439, 1.11 ) }
    dend_5 { pt3dadd( 10.8707, -8.53369, 5.49439, 1.11 ) }
    dend_5 { pt3dadd( 11.3543, -9.87501, 5.49439, 0.74 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 83/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 5.25319, -7.0192, -1.63561, 1.18 ) }
    dend_4 { pt3dadd( 5.36364, -7.39079, -1.61748, 1.18 ) }
    dend_4 { pt3dadd( 5.8323, -8.76047, -1.55865, 1.18 ) }
    dend_4 { pt3dadd( 6.29131, -9.95465, -1.29773, 0.96 ) }
    dend_4 { pt3dadd( 6.66525, -10.8684, -1.04483, 0.96 ) }
    dend_4 { pt3dadd( 7.02013, -11.7356, -0.786721, 0.96 ) }
    dend_4 { pt3dadd( 7.62634, -13.2615, -0.322918, 1.33 ) }
    dend_4 { pt3dadd( 8.23376, -14.8882, 0.23126, 1.69 ) }
    dend_4 { pt3dadd( 9.25531, -17.9253, 1.45506, 0.88 ) }
    dend_4 { pt3dadd( 9.52612, -18.997, 1.93709, 0.88 ) }
    dend_4 { pt3dadd( 9.65094, -19.743, 2.29327, 0.88 ) }
    dend_4 { pt3dadd( 9.68767, -20.5103, 2.6578, 0.88 ) }
    dend_4 { pt3dadd( 9.55928, -21.8903, 3.2869, 0.52 ) }
    dend_4 { pt3dadd( 9.27747, -23.1512, 3.77546, 0.52 ) }
    dend_4 { pt3dadd( 8.86636, -24.3673, 4.15105, 0.81 ) }
    dend_4 { pt3dadd( 8.4867, -25.3325, 4.44999, 0.81 ) }
    dend_4 { pt3dadd( 7.75699, -27.0963, 4.96808, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_4 { pt3dadd( 7.38733, -28.0015, 5.20874, 0.81 ) }
    dend_4 { pt3dadd( 6.75222, -29.676, 5.61161, 1.11 ) }
    dend_4 { pt3dadd( 6.16035, -31.2976, 6.00614, 0.81 ) }
    dend_4 { pt3dadd( 5.90861, -32.0002, 6.19317, 1.11 ) }
    dend_4 { pt3dadd( 5.45102, -33.3199, 6.56157, 0.88 ) }
    dend_4 { pt3dadd( 5.12887, -34.3077, 6.84304, 0.88 ) }
    dend_4 { pt3dadd( 4.53595, -36.3396, 7.40883, 0.88 ) }
    dend_4 { pt3dadd( 4.252, -37.4715, 7.70586, 0.59 ) }
    dend_4 { pt3dadd( 4.06785, -38.2667, 7.89597, 0.59 ) }
    dend_4 { pt3dadd( 3.71788, -39.7258, 8.22638, 0.59 ) }
    dend_4 { pt3dadd( 3.31514, -41.1391, 8.52731, 0.59 ) }
    dend_4 { pt3dadd( 3.00206, -42.0688, 8.70597, 0.59 ) }
    dend_4 { pt3dadd( 2.56067, -43.272, 8.89748, 0.81 ) }
    dend_4 { pt3dadd( 2.23476, -44.208, 9.06881, 0.81 ) }
    dend_4 { pt3dadd( 1.70542, -45.8017, 9.40774, 0.96 ) }
    dend_4 { pt3dadd( 1.25175, -47.3205, 9.76413, 0.96 ) }
    dend_4 { pt3dadd( 0.976361, -48.4489, 10.045, 0.96 ) }
    dend_4 { pt3dadd( 0.76451, -49.7009, 10.3822, 0.96 ) }
    dend_4 { pt3dadd( 0.560509, -51.8699, 11.0473, 0.44 ) }
    dend_4 { pt3dadd( 0.545386, -52.8343, 11.3696, 0.44 ) }
    dend_4 { pt3dadd( 0.563647, -53.5023, 11.6114, 0.44 ) }
    dend_4 { pt3dadd( 0.58437, -53.9597, 11.7872, 0.44 ) }
    dend_4 { pt3dadd( 0.595735, -55.2737, 12.2938, 0.52 ) }
    dend_4 { pt3dadd( 0.538645, -56.3274, 12.6758, 0.52 ) }
    dend_4 { pt3dadd( 0.478031, -57.005, 12.8804, 0.52 ) }
    dend_4 { pt3dadd( 0.360931, -58.32, 13.2379, 0.52 ) }
    dend_4 { pt3dadd( 0.225556, -60.1242, 13.6692, 0.81 ) }
    dend_4 { pt3dadd( 0.183622, -61.2577, 13.8958, 0.81 ) }
    dend_4 { pt3dadd( 0.149476, -62.3936, 14.0648, 0.66 ) }
    dend_4 { pt3dadd( 0.0861098, -64.2122, 14.2741, 0.66 ) }
    dend_4 { pt3dadd( 0.0310088, -65.7343, 14.4046, 0.66 ) }
    dend_4 { pt3dadd( 0.00511602, -66.8191, 14.4661, 0.66 ) }
    dend_4 { pt3dadd( -0.0381341, -68.2456, 14.5102, 1.03 ) }
    dend_4 { pt3dadd( -0.170726, -70.2574, 14.5714, 0.81 ) }
    dend_4 { pt3dadd( -0.394149, -72.3657, 14.64, 0.81 ) }
    dend_4 { pt3dadd( -0.586523, -73.6545, 14.7186, 0.81 ) }
    dend_4 { pt3dadd( -0.877263, -75.342, 14.872, 0.81 ) }
    dend_4 { pt3dadd( -1.0327, -76.2294, 14.9769, 0.81 ) }
    dend_4 { pt3dadd( -1.36605, -78.4348, 15.2928, 0.81 ) }
    dend_4 { pt3dadd( -1.4581, -79.2951, 15.439, 0.81 ) }
    dend_4 { pt3dadd( -1.59183, -80.9538, 15.8042, 0.66 ) }
    dend_4 { pt3dadd( -1.64836, -82.0819, 16.0972, 1.03 ) }
    dend_4 { pt3dadd( -1.64719, -83.4799, 16.4848, 0.44 ) }
    dend_4 { pt3dadd( -1.56494, -84.3314, 16.7252, 0.44 ) }
    dend_4 { pt3dadd( -1.38088, -85.2045, 16.967, 0.52 ) }
    dend_4 { pt3dadd( -0.968599, -86.8236, 17.3817, 0.96 ) }
    dend_4 { pt3dadd( -0.518996, -88.5676, 17.8288, 0.37 ) }
    dend_4 { pt3dadd( -0.337739, -89.3622, 18.052, 0.37 ) }
    dend_4 { pt3dadd( -0.27346, -89.8655, 18.228, 0.37 ) }
    dend_4 { pt3dadd( -0.251957, -90.8227, 18.6259, 0.37 ) }
    dend_4 { pt3dadd( -0.336884, -91.6932, 19.029, 0.37 ) }
    dend_4 { pt3dadd( -0.585084, -93.2067, 19.8354, 0.37 ) }
    dend_4 { pt3dadd( -0.796392, -94.2446, 20.4514, 0.37 ) }
    dend_4 { pt3dadd( -1.17189, -95.9858, 21.4892, 0.37 ) }
    dend_4 { pt3dadd( -1.37826, -96.9702, 22.0749, 0.59 ) }
    dend_4 { pt3dadd( -1.63025, -98.3542, 22.8728, 0.59 ) }
    dend_4 { pt3dadd( -1.99972, -100.565, 24.0555, 0.29 ) }
    dend_4 { pt3dadd( -2.03584, -100.781, 24.1566, 0.29 ) }
    dend_4 { pt3dadd( -2.28659, -102.274, 24.757, 0.59 ) }
    dend_4 { pt3dadd( -2.36167, -102.854, 24.9293, 0.59 ) }
    dend_4 { pt3dadd( -2.50988, -104.278, 25.2475, 0.59 ) }
    dend_4 { pt3dadd( -2.64115, -105.556, 25.461, 1.69 ) }
    dend_4 { pt3dadd( -2.77509, -106.631, 25.5883, 1.69 ) }
    dend_4 { pt3dadd( -2.94226, -108.208, 25.7699, 1.25 ) }
    dend_4 { pt3dadd( -3.0753, -109.861, 25.9529, 0.66 ) }
    dend_4 { pt3dadd( -3.1449, -110.915, 26.0655, 0.66 ) }
    dend_4 { pt3dadd( -3.22469, -112.206, 26.1994, 0.37 ) }
    dend_4 { pt3dadd( -3.27064, -113.112, 26.2627, 0.37 ) }
    dend_4 { pt3dadd( -3.3404, -114.403, 26.3183, 1.4 ) }
    dend_4 { pt3dadd( -3.48, -115.718, 26.3487, 1.18 ) }
    dend_4 { pt3dadd( -3.63459, -116.7, 26.3595, 0.81 ) }
    dend_4 { pt3dadd( -3.86859, -118.078, 26.3646, 0.37 ) }
    dend_4 { pt3dadd( -4.0882, -119.227, 26.3699, 0.37 ) }
    dend_4 { pt3dadd( -4.26973, -119.967, 26.3805, 0.37 ) }
    dend_4 { pt3dadd( -4.71772, -121.423, 26.4233, 0.66 ) }
    dend_4 { pt3dadd( -5.05773, -122.382, 26.472, 0.66 ) }
    dend_4 { pt3dadd( -5.56227, -123.818, 26.5786, 0.66 ) }
    dend_4 { pt3dadd( -5.94721, -125.16, 26.7066, 0.66 ) }
    dend_4 { pt3dadd( -6.1591, -126.112, 26.8174, 0.66 ) }
    dend_4 { pt3dadd( -6.27944, -127.121, 26.9507, 0.52 ) }
    dend_4 { pt3dadd( -6.28217, -128.333, 27.1238, 0.52 ) }
    dend_4 { pt3dadd( -6.16507, -130.029, 27.392, 0.66 ) }
    dend_4 { pt3dadd( -5.8774, -132.151, 27.7705, 0.66 ) }
    dend_4 { pt3dadd( -5.71112, -132.914, 27.9686, 0.66 ) }
    dend_4 { pt3dadd( -5.29118, -134.31, 28.4127, 0.44 ) }
    dend_4 { pt3dadd( -5.10392, -134.797, 28.6065, 0.44 ) }
    dend_4 { pt3dadd( -4.73198, -135.572, 28.9886, 0.44 ) }
    dend_4 { pt3dadd( -4.29279, -136.458, 29.4993, 0.44 ) }
    dend_4 { pt3dadd( -3.27215, -138.521, 30.8632, 0.44 ) }
    dend_4 { pt3dadd( -2.71706, -139.698, 31.6703, 0.44 ) }
    dend_4 { pt3dadd( -2.30317, -140.6, 32.2901, 0.44 ) }
    dend_4 { pt3dadd( -1.90747, -141.323, 32.8282, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 92/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.91681, -3.5677, -8.44561, 1.03 ) }
    dend_3 { pt3dadd( -7.93163, -3.57646, -8.52757, 1.03 ) }
    dend_3 { pt3dadd( -8.1026, -3.75737, -9.58327, 1.03 ) }
    dend_3 { pt3dadd( -8.20751, -3.91235, -10.3465, 1.03 ) }
    dend_3 { pt3dadd( -8.44608, -4.17777, -11.7515, 1.03 ) }
    dend_3 { pt3dadd( -8.62568, -4.32999, -12.6976, 1.03 ) }
    dend_3 { pt3dadd( -10.4908, -5.56148, -21.6225, 1.25 ) }
    dend_3 { pt3dadd( -10.76, -5.67879, -22.9054, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_3 { pt3dadd( -11.4658, -5.87273, -26.4596, 1.25 ) }
    dend_3 { pt3dadd( -11.8803, -5.92598, -28.5728, 0.59 ) }
    dend_3 { pt3dadd( -12.0997, -5.9264, -29.636, 0.59 ) }
    dend_3 { pt3dadd( -12.2709, -5.90997, -30.2294, 0.96 ) }
    dend_3 { pt3dadd( -13.6793, -5.5335, -31.2226, 0.07 ) }
    dend_3 { pt3dadd( -14.1843, -5.3655, -31.5503, 0.07 ) }
    dend_3 { pt3dadd( -14.7654, -5.24349, -31.9847, 0.37 ) }
    dend_3 { pt3dadd( -15.6428, -5.2557, -32.9, 0.37 ) }
    dend_3 { pt3dadd( -15.9625, -5.30105, -33.5278, 1.18 ) }
    dend_3 { pt3dadd( -16.4792, -5.37235, -34.8027, 1.18 ) }
    dend_3 { pt3dadd( -17.7361, -5.5315, -38.2343, 0.74 ) }
    dend_3 { pt3dadd( -18.7255, -5.5386, -41.3029, 1.4 ) }
    dend_3 { pt3dadd( -18.9746, -5.4955, -42.2387, 1.4 ) }
    dend_3 { pt3dadd( -20.4498, -4.83761, -49.7675, 0.88 ) }
    dend_3 { pt3dadd( -20.8267, -4.58274, -52.0013, 1.33 ) }
    dend_3 { pt3dadd( -20.9329, -4.48748, -52.6894, 1.33 ) }
    dend_3 { pt3dadd( -21.3996, -3.87033, -56.1187, 1.33 ) }
    dend_3 { pt3dadd( -21.9816, -2.8464, -60.6628, 1.33 ) }
    dend_3 { pt3dadd( -23.1427, -0.739184, -68.9808, 1.03 ) }
    dend_3 { pt3dadd( -23.3206, -0.435799, -70.0847, 0.59 ) }
    dend_3 { pt3dadd( -23.5743, -0.087844, -71.3743, 0.59 ) }
    dend_3 { pt3dadd( -24.3905, 0.757014, -74.6118, 1.4 ) }
    dend_3 { pt3dadd( -24.7232, 0.959922, -75.54, 1.4 ) }
    dend_3 { pt3dadd( -27.7215, 1.95156, -81.5928, 0.59 ) }
    dend_3 { pt3dadd( -28.518, 2.05944, -82.7787, 0.59 ) }
    dend_3 { pt3dadd( -29.6396, 2.10252, -84.3997, 0.22 ) }
    dend_3 { pt3dadd( -30.7845, 2.06792, -85.9764, 1.33 ) }
    dend_3 { pt3dadd( -34.2608, 1.81061, -90.5365, 0.15 ) }
    dend_3 { pt3dadd( -34.8647, 1.75767, -91.3295, 0.15 ) }
    dend_3 { pt3dadd( -35.9437, 1.68497, -92.7968, 1.25 ) }
    dend_3 { pt3dadd( -38.9346, 1.63545, -97.2213, 0.37 ) }
    dend_3 { pt3dadd( -39.5536, 1.65955, -98.1807, 0.37 ) }
    dend_3 { pt3dadd( -41.0799, 1.79406, -100.417, 1.55 ) }
    dend_3 { pt3dadd( -41.7221, 1.89626, -101.351, 1.55 ) }
    dend_3 { pt3dadd( -44.3659, 2.42914, -105.083, 0.52 ) }
    dend_3 { pt3dadd( -44.8634, 2.54467, -105.692, 0.52 ) }
    dend_3 { pt3dadd( -45.4269, 2.69529, -106.224, 0.52 ) }
    dend_3 { pt3dadd( -46.8904, 3.15903, -107.415, 1.55 ) }
    dend_3 { pt3dadd( -51.3952, 4.82502, -110.609, 0.29 ) }
    dend_3 { pt3dadd( -53.0874, 5.5797, -111.809, 0.29 ) }
    dend_3 { pt3dadd( -55.4854, 6.86939, -113.4, 1.25 ) }
    dend_3 { pt3dadd( -57.8247, 8.41237, -115.333, 0.22 ) }
    dend_3 { pt3dadd( -58.8621, 9.24817, -116.447, 0.22 ) }
    dend_3 { pt3dadd( -59.315, 9.74298, -117.241, 0.22 ) }
    dend_3 { pt3dadd( -60.4243, 11.13, -120.139, 1.25 ) }
    dend_3 { pt3dadd( -60.6672, 11.4164, -121.124, 1.25 ) }
    dend_3 { pt3dadd( -61.606, 12.3179, -125.879, 1.25 ) }
    dend_3 { pt3dadd( -62.2182, 12.7174, -129.262, 1.25 ) }
    dend_3 { pt3dadd( -63.3749, 13.1272, -135.076, 1.25 ) }
    dend_3 { pt3dadd( -64.225, 13.2136, -138.674, 1.25 ) }
    dend_3 { pt3dadd( -65.736, 13.1165, -143.855, 0.37 ) }
    dend_3 { pt3dadd( -66.1829, 13.036, -145.118, 0.37 ) }
    dend_3 { pt3dadd( -66.3365, 12.9951, -145.44, 0.37 ) }
    dend_3 { pt3dadd( -67.2595, 12.7677, -146.756, 1.11 ) }
    dend_3 { pt3dadd( -69.3559, 12.5196, -148.544, 0.74 ) }
    dend_3 { pt3dadd( -70.5838, 12.571, -149.315, 0.22 ) }
    dend_3 { pt3dadd( -71.7682, 12.7676, -149.853, 0.22 ) }
    dend_3 { pt3dadd( -72.5525, 12.9713, -150.217, 0.22 ) }
    dend_3 { pt3dadd( -74.2125, 13.5242, -150.968, 0.74 ) }
    dend_3 { pt3dadd( -76.655, 14.6226, -152.202, 0.29 ) }
    dend_3 { pt3dadd( -77.5666, 15.1154, -152.658, 0.74 ) }
    dend_3 { pt3dadd( -78.7296, 15.8174, -153.299, 0.07 ) }
    dend_3 { pt3dadd( -79.7712, 16.5236, -153.891, 0.07 ) }
    dend_3 { pt3dadd( -80.1276, 16.775, -154.091, 0.37 ) }
    dend_3 { pt3dadd( -82.2174, 18.1087, -155.533, 0.37 ) }
    dend_3 { pt3dadd( -83.1381, 18.594, -156.184, 0.37 ) }
    dend_3 { pt3dadd( -83.9631, 18.909, -156.842, 0.37 ) }
    dend_3 { pt3dadd( -84.5627, 19.0458, -157.446, 0.37 ) }
    dend_3 { pt3dadd( -85.0445, 19.1098, -157.967, 0.37 ) }
    dend_3 { pt3dadd( -87.7718, 19.3106, -160.883, 0.37 ) }
    dend_3 { pt3dadd( -88.6816, 19.2587, -161.833, 0.37 ) }
    dend_3 { pt3dadd( -89.3442, 19.1932, -162.525, 0.37 ) }
    dend_3 { pt3dadd( -91.8273, 18.9154, -164.969, 0.37 ) }
    dend_3 { pt3dadd( -92.5772, 18.844, -165.647, 0.37 ) }
    dend_3 { pt3dadd( -93.9041, 18.7595, -166.673, 0.37 ) }
    dend_3 { pt3dadd( -96.9403, 18.639, -168.516, 0.15 ) }
    dend_3 { pt3dadd( -97.676, 18.675, -168.965, 0.15 ) }
    dend_3 { pt3dadd( -98.868, 18.8382, -169.645, 0.15 ) }
    dend_3 { pt3dadd( -99.9973, 19.095, -170.215, 0.15 ) }
    dend_3 { pt3dadd( -101.287, 19.5145, -170.876, 0.15 ) }
    dend_3 { pt3dadd( -102.704, 20.1424, -171.572, 1.4 ) }
    dend_3 { pt3dadd( -106.353, 22.1719, -173.205, 0.07 ) }
    dend_3 { pt3dadd( -107.18, 22.6838, -173.624, 0.52 ) }
    dend_3 { pt3dadd( -108.241, 23.3874, -174.199, 0.07 ) }
    dend_3 { pt3dadd( -109.266, 24.1239, -174.76, 0.07 ) }
    dend_3 { pt3dadd( -110.263, 24.9325, -175.323, 0.07 ) }
    dend_3 { pt3dadd( -111.231, 25.7992, -175.834, 0.07 ) }
    dend_3 { pt3dadd( -112.829, 27.0636, -176.496, 0.07 ) }
    dend_3 { pt3dadd( -113.43, 27.4977, -176.801, 0.07 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 89/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 11.9332, -0.272201, -1.25561, 1.25 ) }
    dend_0 { pt3dadd( 12.0138, -0.277046, -1.25561, 1.25 ) }
    dend_0 { pt3dadd( 13.054, -0.339562, -1.25561, 1.25 ) }
    dend_0 { pt3dadd( 14.0213, -0.397696, -1.25561, 1.25 ) }
    dend_0 { pt3dadd( 15.1319, -0.464443, -1.25561, 1.25 ) }
    dend_0 { pt3dadd( 15.7305, -0.500422, -1.25561, 1.25 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 95/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 11.2641, -1.75317, -0.354058, 1.17609 ) }
    axon_0 { pt3dadd( 26.0075, -4.51584, -0.354058, 1.17609 ) }
    axon_0 { pt3dadd( 40.7509, -7.27851, -0.354058, 1.17609 ) }
    // Section: dend_39, id: dend_39, parent: dend_18 (entry count 98/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 3.3578, 12.396, -3.14621, 1.55 ) }
    dend_39 { pt3dadd( 3.15898, 13.0651, -1.0717, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 0/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 3.3578, 12.396, -3.14621, 0.88 ) }
    dend_19 { pt3dadd( 4.27584, 17.1291, -2.70611, 0.88 ) }
    dend_19 { pt3dadd( 4.40988, 17.7782, -2.62708, 0.88 ) }
    dend_19 { pt3dadd( 4.9862, 20.2001, -2.32918, 0.66 ) }
    dend_19 { pt3dadd( 5.78805, 23.2519, -1.98341, 1.18 ) }
    dend_19 { pt3dadd( 6.09053, 24.3454, -1.8456, 1.18 ) }
    dend_19 { pt3dadd( 6.449, 25.5905, -1.67399, 1.47 ) }
    dend_19 { pt3dadd( 6.8613, 27.0675, -1.26305, 1.47 ) }
    dend_19 { pt3dadd( 7.09093, 27.81, -1.06626, 1.47 ) }
    dend_19 { pt3dadd( 7.70083, 29.4063, -0.716063, 1.47 ) }
    dend_19 { pt3dadd( 8.38419, 31.2952, -0.579803, 1.47 ) }
    dend_19 { pt3dadd( 8.51448, 31.62, -0.55134, 1.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 12/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -21.0819, 18.3522, -2.91586, 0.52 ) }
    dend_17 { pt3dadd( -22.96, 18.9253, -1.15557, 0.52 ) }
    dend_17 { pt3dadd( -23.8298, 19.373, -0.243924, 0.37 ) }
    dend_17 { pt3dadd( -24.392, 19.7656, 0.358357, 0.37 ) }
    dend_17 { pt3dadd( -25.014, 20.3035, 1.02107, 0.81 ) }
    dend_17 { pt3dadd( -25.6984, 20.9724, 1.71082, 0.81 ) }
    dend_17 { pt3dadd( -27.7081, 22.9511, 3.42273, 0.81 ) }
    dend_17 { pt3dadd( -28.2421, 23.5136, 3.77313, 0.81 ) }
    dend_17 { pt3dadd( -28.7745, 24.1169, 4.07348, 0.81 ) }
    dend_17 { pt3dadd( -29.1958, 24.6056, 4.33027, 0.81 ) }
    dend_17 { pt3dadd( -29.7745, 25.2132, 4.68228, 0.81 ) }
    dend_17 { pt3dadd( -31.1892, 26.312, 5.45846, 1.25 ) }
    dend_17 { pt3dadd( -32.1192, 26.7942, 5.87122, 1.25 ) }
    dend_17 { pt3dadd( -33.1013, 27.1913, 6.34123, 0.66 ) }
    dend_17 { pt3dadd( -34.7236, 27.833, 7.26029, 1.03 ) }
    dend_17 { pt3dadd( -35.5272, 28.1647, 7.76013, 1.03 ) }
    dend_17 { pt3dadd( -36.9148, 28.8263, 8.67711, 1.03 ) }
    dend_17 { pt3dadd( -37.7627, 29.3282, 9.26188, 1.03 ) }
    dend_17 { pt3dadd( -38.6763, 29.9918, 9.87176, 0.74 ) }
    dend_17 { pt3dadd( -40.0986, 31.338, 10.9087, 0.96 ) }
    dend_17 { pt3dadd( -40.5532, 31.9158, 11.3137, 0.96 ) }
    dend_17 { pt3dadd( -41.0603, 32.7845, 11.9188, 0.96 ) }
    dend_17 { pt3dadd( -41.4014, 33.5444, 12.4303, 0.96 ) }
    dend_17 { pt3dadd( -41.5628, 33.9798, 12.7142, 0.96 ) }
    dend_17 { pt3dadd( -42.2158, 35.9499, 13.9821, 0.74 ) }
    dend_17 { pt3dadd( -42.8166, 37.5069, 14.9839, 0.44 ) }
    dend_17 { pt3dadd( -42.9783, 37.8933, 15.2478, 0.44 ) }
    dend_17 { pt3dadd( -43.2786, 38.5868, 15.7139, 0.44 ) }
    dend_17 { pt3dadd( -43.5301, 39.1133, 16.0169, 0.44 ) }
    dend_17 { pt3dadd( -43.7426, 39.5333, 16.181, 0.44 ) }
    dend_17 { pt3dadd( -44.2858, 40.5213, 16.3642, 0.81 ) }
    dend_17 { pt3dadd( -44.4895, 40.8686, 16.4037, 0.81 ) }
    dend_17 { pt3dadd( -45.613, 42.6071, 16.7532, 0.44 ) }
    dend_17 { pt3dadd( -46.2375, 43.4492, 17.0341, 0.44 ) }
    dend_17 { pt3dadd( -46.8516, 44.2222, 17.4147, 0.44 ) }
    dend_17 { pt3dadd( -47.2203, 44.6803, 17.6614, 0.44 ) }
    dend_17 { pt3dadd( -47.7382, 45.3272, 18.0434, 0.44 ) }
    dend_17 { pt3dadd( -48.7413, 46.4573, 18.8208, 0.59 ) }
    dend_17 { pt3dadd( -49.6429, 47.2342, 19.5505, 0.59 ) }
    dend_17 { pt3dadd( -50.5609, 47.966, 20.4679, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 52/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -21.0819, 18.3522, -2.91586, 1.33 ) }
    dend_14 { pt3dadd( -21.5469, 20.6857, -2.98832, 1.33 ) }
    dend_14 { pt3dadd( -21.922, 22.0957, -3.04333, 0.96 ) }
    dend_14 { pt3dadd( -22.4567, 23.7332, -3.1117, 1.33 ) }
    dend_14 { pt3dadd( -23.1219, 25.4182, -3.18194, 1.03 ) }
    dend_14 { pt3dadd( -23.8142, 26.8698, -3.23823, 1.03 ) }
    dend_14 { pt3dadd( -24.2175, 27.7155, -3.27103, 1.03 ) }
    dend_14 { pt3dadd( -24.8119, 28.7115, -3.37727, 1.03 ) }
    dend_14 { pt3dadd( -25.3334, 29.4325, -3.43481, 1.03 ) }
    dend_14 { pt3dadd( -26.1598, 30.3784, -3.4528, 1.03 ) }
    dend_14 { pt3dadd( -27.0777, 31.2735, -3.45843, 1.92 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 63/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 11.3543, -9.87501, 5.49439, 0.74 ) }
    dend_11 { pt3dadd( 11.9391, -12.4993, 5.46341, 0.74 ) }
    dend_11 { pt3dadd( 12.3242, -14.3122, 5.46042, 0.44 ) }
    dend_11 { pt3dadd( 12.6255, -15.808, 5.45467, 0.44 ) }
    dend_11 { pt3dadd( 13.0307, -18.535, 5.40507, 0.52 ) }
    dend_11 { pt3dadd( 13.3135, -21.8233, 5.28969, 0.52 ) }
    dend_11 { pt3dadd( 13.3596, -22.7872, 5.2416, 0.52 ) }
    dend_11 { pt3dadd( 13.3484, -24.265, 5.19719, 0.52 ) }
    dend_11 { pt3dadd( 13.2364, -25.695, 5.10971, 0.52 ) }
    dend_11 { pt3dadd( 12.9948, -27.8771, 4.91219, 0.52 ) }
    dend_11 { pt3dadd( 12.7918, -29.6229, 4.6911, 0.37 ) }
    dend_11 { pt3dadd( 12.6447, -31.3304, 4.46013, 0.37 ) }
    dend_11 { pt3dadd( 12.5733, -32.8924, 4.33074, 0.37 ) }
    dend_11 { pt3dadd( 12.6064, -34.9199, 4.2511, 0.88 ) }
    dend_11 { pt3dadd( 12.8201, -37.4832, 4.2405, 0.52 ) }
    dend_11 { pt3dadd( 12.9847, -38.7396, 4.2892, 0.52 ) }
    dend_11 { pt3dadd( 13.2699, -40.6094, 4.4047, 0.44 ) }
    dend_11 { pt3dadd( 13.6568, -43.2076, 4.59555, 0.74 ) }
    dend_11 { pt3dadd( 13.9717, -45.0705, 4.74419, 0.29 ) }
    dend_11 { pt3dadd( 14.1876, -46.1139, 4.82673, 0.29 ) }
    dend_11 { pt3dadd( 14.6976, -48.2802, 4.96818, 0.96 ) }
    dend_11 { pt3dadd( 15.2441, -50.3388, 5.09443, 0.44 ) }
    dend_11 { pt3dadd( 15.544, -51.4499, 5.13387, 0.44 ) }
    dend_11 { pt3dadd( 15.958, -52.9127, 5.15757, 0.52 ) }
    dend_11 { pt3dadd( 16.289, -54.1552, 5.18037, 0.52 ) }
    dend_11 { pt3dadd( 16.6525, -55.4675, 5.1954, 0.52 ) }
    dend_11 { pt3dadd( 17.2974, -57.6689, 5.24086, 0.52 ) }
    dend_11 { pt3dadd( 17.5754, -58.8123, 5.28282, 0.52 ) }
    dend_11 { pt3dadd( 17.8475, -60.4305, 5.33693, 0.44 ) }
    dend_11 { pt3dadd( 17.9141, -61.2575, 5.37953, 0.44 ) }
    dend_11 { pt3dadd( 18.0196, -62.8691, 5.48096, 0.44 ) }
    dend_11 { pt3dadd( 18.0578, -63.9821, 5.54789, 0.44 ) }
    dend_11 { pt3dadd( 18.1178, -65.7159, 5.63828, 0.88 ) }
    dend_11 { pt3dadd( 18.1834, -66.8415, 5.72792, 0.88 ) }
    dend_11 { pt3dadd( 18.3497, -68.6736, 5.9264, 0.37 ) }
    dend_11 { pt3dadd( 18.561, -70.6432, 6.18229, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 99/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 11.3543, -9.87501, 5.49439, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( 12.1903, -9.06762, 6.56338, 0.66 ) }
    dend_6 { pt3dadd( 12.3667, -8.90061, 6.77636, 0.66 ) }
    dend_6 { pt3dadd( 13.0103, -8.40731, 7.5066, 0.66 ) }
    dend_6 { pt3dadd( 13.2581, -8.24102, 7.7582, 0.66 ) }
    dend_6 { pt3dadd( 13.6272, -7.99336, 8.13292, 0.66 ) }
    dend_6 { pt3dadd( 14.5412, -7.38007, 9.06087, 0.96 ) }
    dend_6 { pt3dadd( 14.994, -7.10737, 9.48856, 0.96 ) }
    dend_6 { pt3dadd( 16.0109, -6.53034, 10.4551, 0.96 ) }
    dend_6 { pt3dadd( 16.5464, -6.2373, 10.9573, 0.44 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 15.7305, -0.500422, -1.25561, 0.74 ) }
    dend_2 { pt3dadd( 16.3757, 0.444939, -1.48822, 0.74 ) }
    dend_2 { pt3dadd( 17.0568, 1.2167, -1.73294, 0.74 ) }
    dend_2 { pt3dadd( 17.8765, 2.04278, -1.99651, 0.74 ) }
    dend_2 { pt3dadd( 19.234, 3.27827, -2.40778, 0.74 ) }
    dend_2 { pt3dadd( 20.1967, 4.07357, -2.67845, 0.74 ) }
    dend_2 { pt3dadd( 21.2032, 4.81122, -2.98561, 0.74 ) }
    dend_2 { pt3dadd( 22.5521, 5.61411, -3.40897, 0.74 ) }
    dend_2 { pt3dadd( 23.5929, 6.1613, -3.71804, 0.74 ) }
    dend_2 { pt3dadd( 24.5643, 6.62745, -3.97398, 0.96 ) }
    dend_2 { pt3dadd( 26.0757, 7.34565, -4.29239, 0.96 ) }
    dend_2 { pt3dadd( 27.9739, 8.34037, -4.74672, 0.59 ) }
    dend_2 { pt3dadd( 28.9722, 8.92338, -4.98793, 0.59 ) }
    dend_2 { pt3dadd( 30.2109, 9.66457, -5.30075, 0.74 ) }
    dend_2 { pt3dadd( 31.4249, 10.3788, -5.60676, 0.74 ) }
    dend_2 { pt3dadd( 32.5891, 11.097, -5.87873, 0.74 ) }
    dend_2 { pt3dadd( 35.0797, 12.7124, -6.39332, 0.74 ) }
    dend_2 { pt3dadd( 35.7476, 13.165, -6.50744, 1.4 ) }
    dend_2 { pt3dadd( 36.9352, 14.0269, -6.75326, 1.18 ) }
    dend_2 { pt3dadd( 37.646, 14.5641, -6.91668, 1.18 ) }
    dend_2 { pt3dadd( 38.4891, 15.2499, -7.11273, 1.03 ) }
    dend_2 { pt3dadd( 39.2948, 15.8905, -7.27384, 1.03 ) }
    dend_2 { pt3dadd( 40.4811, 16.7571, -7.4929, 0.66 ) }
    dend_2 { pt3dadd( 42.1024, 17.825, -7.88257, 0.66 ) }
    dend_2 { pt3dadd( 42.6155, 18.1451, -8.03031, 0.66 ) }
    dend_2 { pt3dadd( 43.1699, 18.4136, -8.22456, 0.66 ) }
    dend_2 { pt3dadd( 44.3264, 18.7328, -8.65505, 0.66 ) }
    dend_2 { pt3dadd( 46.1684, 18.9326, -9.29947, 0.66 ) }
    dend_2 { pt3dadd( 47.2684, 18.9872, -9.67643, 0.66 ) }
    dend_2 { pt3dadd( 47.4297, 18.9947, -9.72694, 0.96 ) }
    dend_2 { pt3dadd( 49.0088, 19.1505, -10.2122, 0.88 ) }
    dend_2 { pt3dadd( 50.5222, 19.4074, -10.6541, 0.88 ) }
    dend_2 { pt3dadd( 52.055, 19.8185, -11.1259, 0.59 ) }
    dend_2 { pt3dadd( 54.0748, 20.5189, -11.717, 0.59 ) }
    dend_2 { pt3dadd( 55.226, 20.9794, -12.0667, 0.59 ) }
    dend_2 { pt3dadd( 55.9519, 21.3099, -12.2736, 0.59 ) }
    dend_2 { pt3dadd( 57.1575, 21.9311, -12.5899, 0.59 ) }
    dend_2 { pt3dadd( 58.8137, 22.7663, -13.0364, 1.03 ) }
    dend_2 { pt3dadd( 59.6652, 23.1156, -13.2443, 1.03 ) }
    dend_2 { pt3dadd( 60.1409, 23.2601, -13.3416, 1.03 ) }
    dend_2 { pt3dadd( 61.93, 23.7666, -13.7772, 0.44 ) }
    dend_2 { pt3dadd( 62.3999, 23.914, -13.8933, 0.44 ) }
    dend_2 { pt3dadd( 63.5551, 24.3668, -14.1619, 0.59 ) }
    dend_2 { pt3dadd( 64.9252, 25.0933, -14.4236, 0.59 ) }
    dend_2 { pt3dadd( 65.8366, 25.6491, -14.5907, 0.59 ) }
    dend_2 { pt3dadd( 67.6246, 26.798, -14.9036, 0.88 ) }
    dend_2 { pt3dadd( 68.7296, 27.571, -15.1189, 0.88 ) }
    dend_2 { pt3dadd( 69.42, 28.1005, -15.3007, 0.88 ) }
    dend_2 { pt3dadd( 70.904, 29.3142, -15.756, 0.59 ) }
    dend_2 { pt3dadd( 72.295, 30.3847, -16.2069, 0.59 ) }
    dend_2 { pt3dadd( 73.3662, 31.119, -16.5908, 0.59 ) }
    dend_2 { pt3dadd( 74.5944, 31.9092, -17.0497, 0.59 ) }
    dend_2 { pt3dadd( 76.543, 33.1443, -17.7797, 0.59 ) }
    dend_2 { pt3dadd( 77.0244, 33.4566, -17.977, 0.59 ) }
    dend_2 { pt3dadd( 78.3764, 34.3723, -18.5418, 0.37 ) }
    dend_2 { pt3dadd( 79.7417, 35.3747, -19.0957, 1.47 ) }
    dend_2 { pt3dadd( 80.8206, 36.1763, -19.4771, 1.47 ) }
    dend_2 { pt3dadd( 83.1927, 37.926, -20.1873, 0.52 ) }
    dend_2 { pt3dadd( 84.8387, 39.1438, -20.6201, 0.96 ) }
    dend_2 { pt3dadd( 85.9794, 40.0012, -20.9234, 0.22 ) }
    dend_2 { pt3dadd( 86.3628, 40.2939, -21.0206, 0.22 ) }
    dend_2 { pt3dadd( 87.3096, 40.9715, -21.2218, 0.22 ) }
    dend_2 { pt3dadd( 88.0669, 41.4711, -21.3798, 1.03 ) }
    dend_2 { pt3dadd( 89.3161, 42.259, -21.6609, 0.07 ) }
    dend_2 { pt3dadd( 90.095, 42.7392, -21.8096, 0.88 ) }
    dend_2 { pt3dadd( 90.7906, 43.1709, -21.9065, 0.88 ) }
    dend_2 { pt3dadd( 91.2788, 43.476, -21.9593, 0.88 ) }
    dend_2 { pt3dadd( 95.2028, 45.9135, -22.2591, 0.07 ) }
    dend_2 { pt3dadd( 96.3657, 46.6114, -22.3072, 1.4 ) }
    dend_2 { pt3dadd( 97.6675, 47.3746, -22.3249, 0.37 ) }
    dend_2 { pt3dadd( 99.8051, 48.6148, -22.3808, 0.07 ) }
    dend_2 { pt3dadd( 100.599, 49.0658, -22.4048, 0.74 ) }
    dend_2 { pt3dadd( 101.539, 49.5828, -22.4265, 0.74 ) }
    dend_2 { pt3dadd( 102.203, 49.9347, -22.4284, 0.74 ) }
    dend_2 { pt3dadd( 104.583, 51.2011, -22.4319, 0.22 ) }
    dend_2 { pt3dadd( 105.896, 51.882, -22.4761, 1.03 ) }
    dend_2 { pt3dadd( 106.821, 52.3287, -22.5369, 1.03 ) }
    dend_2 { pt3dadd( 108.751, 53.1631, -22.6266, 0.15 ) }
    dend_2 { pt3dadd( 109.555, 53.4551, -22.6209, 0.59 ) }
    dend_2 { pt3dadd( 110.461, 53.7194, -22.5663, 0.59 ) }
    dend_2 { pt3dadd( 111.186, 53.859, -22.4822, 0.59 ) }
    dend_2 { pt3dadd( 112.742, 54.0477, -22.2436, 0.07 ) }
    dend_2 { pt3dadd( 114.396, 54.1607, -21.9868, 0.22 ) }
    dend_2 { pt3dadd( 116.366, 54.1986, -21.6861, 0.22 ) }
    dend_2 { pt3dadd( 117.515, 54.2011, -21.519, 1.62 ) }
    dend_2 { pt3dadd( 118.666, 54.196, -21.3606, 1.62 ) }
    dend_2 { pt3dadd( 120.084, 54.2124, -21.1796, 0.07 ) }
    dend_2 { pt3dadd( 121.316, 54.26, -21.0441, 0.07 ) }
    dend_2 { pt3dadd( 122.391, 54.3959, -20.9902, 0.07 ) }
    dend_2 { pt3dadd( 123.154, 54.5719, -21.0083, 0.07 ) }
    dend_2 { pt3dadd( 123.731, 54.7545, -21.0311, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 124.603, 55.0976, -21.1426, 1.11 ) }
    dend_2 { pt3dadd( 125.535, 55.5305, -21.3282, 1.11 ) }
    dend_2 { pt3dadd( 127.304, 56.426, -21.7648, 0.07 ) }
    dend_2 { pt3dadd( 128.076, 56.8183, -21.971, 0.07 ) }
    dend_2 { pt3dadd( 129.104, 57.3199, -22.2554, 0.07 ) }
    dend_2 { pt3dadd( 130.979, 58.222, -22.8017, 0.29 ) }
    dend_2 { pt3dadd( 131.543, 58.4736, -22.9624, 0.29 ) }
    dend_2 { pt3dadd( 132.379, 58.8127, -23.172, 0.29 ) }
    dend_2 { pt3dadd( 133.617, 59.273, -23.4525, 0.29 ) }
    dend_2 { pt3dadd( 134.006, 59.42, -23.5346, 0.96 ) }
    dend_2 { pt3dadd( 135.842, 60.1732, -23.9167, 0.07 ) }
    dend_2 { pt3dadd( 137.053, 60.6787, -24.1313, 0.07 ) }
    dend_2 { pt3dadd( 138.324, 61.2045, -24.3767, 0.07 ) }
    dend_2 { pt3dadd( 139.713, 61.7629, -24.6501, 0.74 ) }
    dend_2 { pt3dadd( 140.56, 62.0856, -24.8363, 0.74 ) }
    dend_2 { pt3dadd( 142.082, 62.6063, -25.1584, 0.07 ) }
    dend_2 { pt3dadd( 143.284, 62.956, -25.3943, 0.07 ) }
    dend_2 { pt3dadd( 143.832, 63.0964, -25.4912, 0.52 ) }
    dend_2 { pt3dadd( 145.197, 63.3896, -25.6964, 0.07 ) }
    dend_2 { pt3dadd( 146.84, 63.6717, -25.8668, 1.47 ) }
    dend_2 { pt3dadd( 148.857, 64.0385, -26.013, 0.07 ) }
    dend_2 { pt3dadd( 149.588, 64.1908, -26.0373, 0.96 ) }
    dend_2 { pt3dadd( 150.999, 64.5511, -26.0324, 0.07 ) }
    dend_2 { pt3dadd( 151.414, 64.6781, -26.0154, 0.07 ) }
    dend_2 { pt3dadd( 153.135, 65.2972, -25.8721, 0.07 ) }
    dend_2 { pt3dadd( 155.306, 66.187, -25.5935, 0.07 ) }
    dend_2 { pt3dadd( 156.527, 66.776, -25.3834, 1.18 ) }
    dend_2 { pt3dadd( 157.707, 67.397, -25.15, 0.07 ) }
    dend_2 { pt3dadd( 158.832, 68.0486, -24.9024, 0.07 ) }
    dend_2 { pt3dadd( 159.734, 68.6006, -24.6886, 0.37 ) }
    dend_2 { pt3dadd( 160.61, 69.1805, -24.4834, 0.37 ) }
    dend_2 { pt3dadd( 162.797, 70.6138, -24.012, 0.29 ) }
    dend_2 { pt3dadd( 163.581, 71.1296, -23.8672, 0.29 ) }
    dend_2 { pt3dadd( 164.248, 71.5724, -23.7701, 0.66 ) }
    dend_2 { pt3dadd( 165.973, 72.7499, -23.5533, 0.96 ) }
    dend_2 { pt3dadd( 167.155, 73.531, -23.4767, 0.07 ) }
    dend_2 { pt3dadd( 168.093, 74.1104, -23.4757, 0.52 ) }
    dend_2 { pt3dadd( 168.352, 74.2575, -23.4946, 0.52 ) }
    dend_2 { pt3dadd( 169.063, 74.64, -23.552, 0.52 ) }
    dend_2 { pt3dadd( 170.277, 75.2228, -23.6517, 0.52 ) }
    dend_2 { pt3dadd( 171.791, 75.9219, -23.7775, 0.22 ) }
    dend_2 { pt3dadd( 172.707, 76.3466, -23.8375, 1.18 ) }
    dend_2 { pt3dadd( 173.098, 76.5404, -23.8615, 0.07 ) }
    dend_2 { pt3dadd( 174.252, 77.1511, -23.9162, 0.07 ) }
    dend_2 { pt3dadd( 174.96, 77.6083, -23.9293, 0.07 ) }
    dend_2 { pt3dadd( 176.599, 78.906, -23.8898, 0.07 ) }
    dend_2 { pt3dadd( 177.022, 79.3198, -23.8557, 0.07 ) }
    dend_2 { pt3dadd( 177.664, 80.0526, -23.7888, 0.88 ) }
    dend_2 { pt3dadd( 178.365, 80.9708, -23.6966, 0.88 ) }
    dend_2 { pt3dadd( 179.482, 82.6895, -23.528, 0.07 ) }
    dend_2 { pt3dadd( 180.092, 83.7335, -23.4226, 0.07 ) }
    dend_2 { pt3dadd( 180.399, 84.2984, -23.3609, 0.07 ) }
    dend_2 { pt3dadd( 180.777, 84.9648, -23.2934, 1.03 ) }
    dend_2 { pt3dadd( 181.064, 85.4485, -23.2476, 1.03 ) }
    dend_2 { pt3dadd( 181.801, 86.5853, -23.1431, 0.07 ) }
    dend_2 { pt3dadd( 182.459, 87.4692, -23.0627, 0.07 ) }
    dend_2 { pt3dadd( 182.828, 87.9156, -23.0195, 0.07 ) }
    dend_2 { pt3dadd( 183.505, 88.6488, -22.9617, 0.07 ) }
    dend_2 { pt3dadd( 184.359, 89.49, -22.9047, 1.03 ) }
    dend_2 { pt3dadd( 185.661, 90.6079, -22.8359, 0.07 ) }
    dend_2 { pt3dadd( 186.285, 91.0721, -22.8085, 0.74 ) }
    dend_2 { pt3dadd( 187.264, 91.6709, -22.786, 0.74 ) }
    dend_2 { pt3dadd( 188.219, 92.1395, -22.779, 0.07 ) }
    dend_2 { pt3dadd( 188.816, 92.3549, -22.783, 0.07 ) }
    dend_2 { pt3dadd( 190.106, 92.6852, -22.7969, 0.07 ) }
    dend_2 { pt3dadd( 190.687, 92.8022, -22.8021, 0.81 ) }
    dend_2 { pt3dadd( 192.7, 93.2127, -22.7953, 0.07 ) }
    dend_2 { pt3dadd( 193.27, 93.343, -22.7557, 1.03 ) }
    dend_2 { pt3dadd( 194.216, 93.6045, -22.6275, 1.03 ) }
    dend_2 { pt3dadd( 195.922, 94.2306, -22.3095, 0.07 ) }
    dend_2 { pt3dadd( 196.288, 94.4059, -22.2239, 0.07 ) }
    dend_2 { pt3dadd( 196.932, 94.761, -22.0537, 0.96 ) }
    dend_2 { pt3dadd( 198.328, 95.6426, -21.6425, 0.22 ) }
    dend_2 { pt3dadd( 199.21, 96.2427, -21.3421, 0.22 ) }
    dend_2 { pt3dadd( 199.869, 96.7246, -21.0902, 0.22 ) }
    dend_2 { pt3dadd( 200.865, 97.4399, -20.7027, 0.22 ) }
    dend_2 { pt3dadd( 201.596, 97.921, -20.4441, 0.22 ) }
    dend_2 { pt3dadd( 202.471, 98.4197, -20.1862, 0.22 ) }
    dend_2 { pt3dadd( 203.396, 98.8929, -19.9813, 0.88 ) }
    dend_2 { pt3dadd( 203.722, 99.0448, -19.9124, 0.88 ) }
    dend_2 { pt3dadd( 204.907, 99.51, -19.6955, 0.22 ) }
    dend_2 { pt3dadd( 205.605, 99.7399, -19.5886, 0.22 ) }
    dend_2 { pt3dadd( 206.644, 100.01, -19.4698, 0.22 ) }
    dend_2 { pt3dadd( 207.511, 100.174, -19.4048, 0.22 ) }
    dend_2 { pt3dadd( 208.146, 100.292, -19.3565, 1.11 ) }
    dend_2 { pt3dadd( 209.456, 100.531, -19.2141, 0.07 ) }
    dend_2 { pt3dadd( 210.587, 100.758, -19.0673, 0.07 ) }
    dend_2 { pt3dadd( 211.152, 100.872, -18.9907, 0.07 ) }
    dend_2 { pt3dadd( 211.26, 100.897, -18.9752, 1.03 ) }
    dend_2 { pt3dadd( 213.046, 101.3, -18.7309, 0.07 ) }
    dend_2 { pt3dadd( 213.688, 101.451, -18.6487, 0.07 ) }
    dend_2 { pt3dadd( 215.055, 101.748, -18.5126, 0.07 ) }
    dend_2 { pt3dadd( 216.434, 101.981, -18.3488, 0.07 ) }
    dend_2 { pt3dadd( 217.091, 102.082, -18.2658, 1.18 ) }
    dend_2 { pt3dadd( 218.073, 102.252, -18.1408, 0.15 ) }
    dend_2 { pt3dadd( 218.967, 102.425, -18.0337, 0.15 ) }
    dend_2 { pt3dadd( 220.907, 102.977, -17.7393, 0.15 ) }
    dend_2 { pt3dadd( 222.354, 103.48, -17.4487, 0.44 ) }
    dend_2 { pt3dadd( 223.684, 104.032, -17.1822, 0.44 ) }
    dend_2 { pt3dadd( 225.457, 104.861, -16.843, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( 226.607, 105.483, -16.6278, 0.15 ) }
    dend_2 { pt3dadd( 228.0, 106.362, -16.3822, 0.15 ) }
    dend_2 { pt3dadd( 230.312, 108.07, -16.0214, 0.15 ) }
    dend_2 { pt3dadd( 231.405, 108.926, -15.903, 0.15 ) }
    dend_2 { pt3dadd( 232.491, 109.774, -15.7952, 0.15 ) }
    dend_2 { pt3dadd( 233.284, 110.386, -15.7299, 0.15 ) }
    dend_2 { pt3dadd( 234.083, 111.017, -15.6836, 0.15 ) }
    dend_2 { pt3dadd( 234.711, 111.515, -15.6826, 0.15 ) }
    dend_2 { pt3dadd( 235.465, 112.353, -15.7634, 0.15 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 9/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.7305, -0.500422, -1.25561, 0.66 ) }
    dend_1 { pt3dadd( 16.9065, -0.181421, -0.827802, 0.66 ) }
    dend_1 { pt3dadd( 17.4637, 0.0132363, -0.652447, 0.66 ) }
    dend_1 { pt3dadd( 18.4665, 0.407944, -0.373136, 0.66 ) }
    dend_1 { pt3dadd( 19.5383, 0.884356, -0.111009, 0.66 ) }
    dend_1 { pt3dadd( 20.3593, 1.26535, 0.0797242, 0.66 ) }
    dend_1 { pt3dadd( 21.4727, 1.79668, 0.320542, 0.66 ) }
    dend_1 { pt3dadd( 22.0267, 2.1134, 0.409881, 0.66 ) }
    dend_1 { pt3dadd( 22.4188, 2.35183, 0.462286, 0.66 ) }
    dend_1 { pt3dadd( 22.8778, 2.62188, 0.532374, 0.66 ) }
    dend_1 { pt3dadd( 23.8628, 3.13662, 0.739976, 0.66 ) }
    dend_1 { pt3dadd( 24.2703, 3.31548, 0.859629, 0.66 ) }
    dend_1 { pt3dadd( 25.216, 3.62497, 1.25632, 0.66 ) }
    dend_1 { pt3dadd( 26.178, 3.79483, 1.76068, 0.59 ) }
    dend_1 { pt3dadd( 27.2238, 3.82919, 2.41816, 0.59 ) }
    dend_1 { pt3dadd( 27.6801, 3.78898, 2.76807, 0.81 ) }
    dend_1 { pt3dadd( 27.9339, 3.74449, 2.97831, 0.81 ) }
    dend_1 { pt3dadd( 28.8359, 3.56635, 3.72629, 1.18 ) }
    dend_1 { pt3dadd( 29.7237, 3.36634, 4.4607, 1.18 ) }
    dend_1 { pt3dadd( 30.586, 3.15085, 5.15321, 1.62 ) }
    dend_1 { pt3dadd( 32.0146, 2.83997, 6.18345, 1.11 ) }
    dend_1 { pt3dadd( 32.7827, 2.70864, 6.69929, 0.74 ) }
    dend_1 { pt3dadd( 33.4308, 2.62581, 7.10068, 0.59 ) }
    dend_1 { pt3dadd( 33.5439, 2.61693, 7.1602, 0.59 ) }
    dend_1 { pt3dadd( 34.5541, 2.61523, 7.6241, 0.59 ) }
    dend_1 { pt3dadd( 35.6508, 2.66836, 7.97706, 0.44 ) }
    dend_1 { pt3dadd( 36.0123, 2.71746, 8.03411, 0.44 ) }
    dend_1 { pt3dadd( 36.5033, 2.83644, 8.14395, 0.44 ) }
    dend_1 { pt3dadd( 36.878, 2.94457, 8.24533, 0.44 ) }
    dend_1 { pt3dadd( 37.1918, 3.04887, 8.32804, 0.44 ) }
    dend_1 { pt3dadd( 37.4143, 3.11654, 8.39122, 0.44 ) }
    dend_1 { pt3dadd( 38.0537, 3.22775, 8.60843, 0.44 ) }
    dend_1 { pt3dadd( 39.2767, 3.26468, 9.02816, 0.88 ) }
    dend_1 { pt3dadd( 39.9238, 3.22822, 9.24576, 0.52 ) }
    dend_1 { pt3dadd( 40.456, 3.1863, 9.43175, 0.52 ) }
    dend_1 { pt3dadd( 41.5146, 3.11533, 9.79338, 0.52 ) }
    dend_1 { pt3dadd( 42.6026, 3.05573, 10.1409, 0.52 ) }
    dend_1 { pt3dadd( 43.4646, 3.02718, 10.4069, 0.52 ) }
    dend_1 { pt3dadd( 43.8628, 3.0251, 10.5124, 0.52 ) }
    dend_1 { pt3dadd( 44.5928, 3.03567, 10.7194, 0.52 ) }
    dend_1 { pt3dadd( 45.3608, 3.03603, 10.9435, 0.52 ) }
    dend_1 { pt3dadd( 45.8544, 3.0283, 11.0804, 0.52 ) }
    dend_1 { pt3dadd( 46.9587, 2.96091, 11.388, 0.52 ) }
    dend_1 { pt3dadd( 47.8099, 2.85846, 11.6082, 0.88 ) }
    dend_1 { pt3dadd( 48.5886, 2.73596, 11.8236, 0.88 ) }
    dend_1 { pt3dadd( 49.5081, 2.5628, 12.0709, 0.88 ) }
    dend_1 { pt3dadd( 50.2068, 2.43209, 12.2575, 0.52 ) }
    dend_1 { pt3dadd( 50.7808, 2.35308, 12.4039, 0.52 ) }
    dend_1 { pt3dadd( 51.5006, 2.33027, 12.5811, 0.52 ) }
    dend_1 { pt3dadd( 52.7584, 2.48681, 12.8971, 0.74 ) }
    dend_1 { pt3dadd( 53.5652, 2.70921, 13.0957, 0.74 ) }
    dend_1 { pt3dadd( 54.0076, 2.88759, 13.1974, 0.74 ) }
    dend_1 { pt3dadd( 54.6216, 3.18705, 13.3752, 0.52 ) }
    dend_1 { pt3dadd( 55.3714, 3.57239, 13.6093, 0.52 ) }
    dend_1 { pt3dadd( 55.9243, 3.84761, 13.7966, 0.52 ) }
    dend_1 { pt3dadd( 56.5088, 4.10483, 13.9915, 0.52 ) }
    dend_1 { pt3dadd( 56.9209, 4.23803, 14.1378, 0.74 ) }
    dend_1 { pt3dadd( 58.2077, 4.56767, 14.6676, 0.96 ) }
    dend_1 { pt3dadd( 59.0944, 4.7575, 15.0461, 0.96 ) }
    dend_1 { pt3dadd( 60.1011, 4.93886, 15.4735, 0.74 ) }
    dend_1 { pt3dadd( 60.6821, 5.02108, 15.7547, 0.74 ) }
    dend_1 { pt3dadd( 62.0917, 5.1792, 16.4764, 0.59 ) }
    dend_1 { pt3dadd( 63.426, 5.28919, 17.1879, 0.59 ) }
    dend_1 { pt3dadd( 63.8772, 5.31277, 17.4231, 0.59 ) }
    dend_1 { pt3dadd( 64.4776, 5.34039, 17.7495, 0.59 ) }
    dend_1 { pt3dadd( 66.0575, 5.41229, 18.5975, 0.59 ) }
    dend_1 { pt3dadd( 66.6022, 5.4386, 18.8835, 0.59 ) }
    dend_1 { pt3dadd( 67.7735, 5.48692, 19.4298, 0.59 ) }
    dend_1 { pt3dadd( 68.4125, 5.4916, 19.6675, 0.59 ) }
    dend_1 { pt3dadd( 68.9627, 5.49802, 19.8436, 0.59 ) }
    dend_1 { pt3dadd( 69.6143, 5.53805, 19.9904, 0.59 ) }
    dend_1 { pt3dadd( 70.2506, 5.60991, 20.0675, 0.59 ) }
    dend_1 { pt3dadd( 71.4238, 5.77453, 20.2083, 0.59 ) }
    dend_1 { pt3dadd( 72.278, 5.89418, 20.2991, 0.59 ) }
    dend_1 { pt3dadd( 72.8982, 5.95893, 20.3732, 0.59 ) }
    dend_1 { pt3dadd( 74.0426, 6.01595, 20.4762, 0.59 ) }
    dend_1 { pt3dadd( 74.9262, 6.04586, 20.5556, 0.59 ) }
    dend_1 { pt3dadd( 76.064, 6.08757, 20.6534, 0.88 ) }
    dend_1 { pt3dadd( 76.8764, 6.12581, 20.723, 1.11 ) }
    dend_1 { pt3dadd( 77.9793, 6.15887, 20.8278, 0.96 ) }
    dend_1 { pt3dadd( 79.0945, 6.13652, 20.944, 1.47 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 90/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.7509, -7.27851, -0.354058, 0.461342 ) }
    axon_1 { pt3dadd( 55.4943, -10.0412, -0.354058, 0.461342 ) }
    axon_1 { pt3dadd( 70.2377, -12.8038, -0.354058, 0.461342 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 93/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.15898, 13.0651, -1.0717, 1.25 ) }
    dend_40 { pt3dadd( 2.71829, 18.3881, -8.7004, 1.25 ) }
    dend_40 { pt3dadd( 2.70698, 19.042, -9.40587, 1.25 ) }
    dend_40 { pt3dadd( 2.82114, 20.9922, -11.0838, 1.25 ) }
    dend_40 { pt3dadd( 2.92368, 21.7705, -11.6623, 1.25 ) }
    dend_40 { pt3dadd( 3.00969, 22.339, -12.0197, 1.25 ) }
    dend_40 { pt3dadd( 3.18598, 23.7655, -12.7727, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_40 { pt3dadd( 3.3184, 25.3327, -12.7568, 0.81 ) }
    dend_40 { pt3dadd( 3.32142, 26.3362, -12.8107, 0.81 ) }
    dend_40 { pt3dadd( 3.20396, 27.0889, -12.9131, 0.81 ) }
    dend_40 { pt3dadd( 2.83934, 28.36, -13.3814, 0.81 ) }
    dend_40 { pt3dadd( 2.39257, 29.698, -14.1062, 0.81 ) }
    dend_40 { pt3dadd( 2.05566, 30.6255, -14.9358, 0.81 ) }
    dend_40 { pt3dadd( 1.67634, 31.9289, -16.4353, 0.44 ) }
    dend_40 { pt3dadd( 1.54724, 32.7323, -17.4466, 1.47 ) }
    dend_40 { pt3dadd( 1.56695, 34.6744, -19.8927, 0.59 ) }
    dend_40 { pt3dadd( 1.71777, 35.4068, -20.8222, 0.59 ) }
    dend_40 { pt3dadd( 2.29495, 37.1574, -22.9323, 1.03 ) }
    dend_40 { pt3dadd( 2.56663, 37.788, -23.6708, 0.52 ) }
    dend_40 { pt3dadd( 2.96494, 38.6312, -24.5459, 1.03 ) }
    dend_40 { pt3dadd( 3.42313, 39.6119, -25.4653, 0.74 ) }
    dend_40 { pt3dadd( 4.11796, 41.4855, -26.9492, 0.44 ) }
    dend_40 { pt3dadd( 4.27521, 42.0316, -27.3525, 0.44 ) }
    dend_40 { pt3dadd( 4.63055, 43.4617, -28.2902, 0.96 ) }
    dend_40 { pt3dadd( 4.83629, 44.3043, -28.8561, 1.84 ) }
    dend_40 { pt3dadd( 5.00429, 44.9065, -29.2549, 1.84 ) }
    dend_40 { pt3dadd( 5.60137, 46.8028, -30.5286, 0.88 ) }
    dend_40 { pt3dadd( 5.76064, 47.345, -30.9366, 0.88 ) }
    dend_40 { pt3dadd( 5.84575, 47.7586, -31.2744, 0.88 ) }
    dend_40 { pt3dadd( 5.97493, 48.7174, -32.078, 1.4 ) }
    dend_40 { pt3dadd( 6.03417, 49.5099, -32.8136, 1.4 ) }
    dend_40 { pt3dadd( 6.07972, 51.3241, -34.4978, 0.66 ) }
    dend_40 { pt3dadd( 6.08642, 53.3058, -36.2601, 0.66 ) }
    dend_40 { pt3dadd( 6.07057, 54.1663, -37.0697, 0.66 ) }
    dend_40 { pt3dadd( 6.05161, 55.0841, -37.9498, 1.84 ) }
    dend_40 { pt3dadd( 5.98852, 57.6889, -40.4191, 0.52 ) }
    dend_40 { pt3dadd( 5.98004, 58.4659, -41.1083, 1.47 ) }
    dend_40 { pt3dadd( 6.00463, 59.2514, -41.6971, 1.47 ) }
    dend_40 { pt3dadd( 6.2439, 61.8303, -43.4132, 0.74 ) }
    dend_40 { pt3dadd( 6.32598, 62.4405, -43.8772, 0.29 ) }
    dend_40 { pt3dadd( 6.418, 63.0891, -44.3829, 0.29 ) }
    dend_40 { pt3dadd( 6.5123, 63.6335, -44.7916, 0.29 ) }
    dend_40 { pt3dadd( 6.64521, 64.4786, -45.4657, 0.88 ) }
    dend_40 { pt3dadd( 6.80453, 65.6671, -46.3862, 1.99 ) }
    dend_40 { pt3dadd( 7.13294, 68.6093, -48.4866, 0.37 ) }
    dend_40 { pt3dadd( 7.21543, 69.9335, -49.3669, 0.37 ) }
    dend_40 { pt3dadd( 7.2595, 71.245, -50.178, 0.37 ) }
    dend_40 { pt3dadd( 7.24094, 74.6021, -52.1372, 0.22 ) }
    dend_40 { pt3dadd( 7.19463, 75.6694, -52.6964, 0.88 ) }
    dend_40 { pt3dadd( 7.13005, 76.5567, -53.0653, 0.88 ) }
    dend_40 { pt3dadd( 6.89062, 78.69, -53.7283, 0.07 ) }
    dend_40 { pt3dadd( 6.76173, 79.536, -53.9475, 0.07 ) }
    dend_40 { pt3dadd( 6.49497, 80.9793, -54.2096, 0.07 ) }
    dend_40 { pt3dadd( 6.28335, 81.9953, -54.3182, 0.66 ) }
    dend_40 { pt3dadd( 6.0407, 83.5091, -54.4958, 0.81 ) }
    dend_40 { pt3dadd( 5.97559, 84.0657, -54.5629, 0.81 ) }
    dend_40 { pt3dadd( 5.73144, 86.9107, -54.9678, 0.07 ) }
    dend_40 { pt3dadd( 5.64225, 88.11, -55.14, 0.66 ) }
    dend_40 { pt3dadd( 5.56768, 89.4819, -55.324, 1.03 ) }
    dend_40 { pt3dadd( 5.43634, 92.3613, -55.7411, 0.07 ) }
    dend_40 { pt3dadd( 5.41116, 92.8644, -55.8164, 0.59 ) }
    dend_40 { pt3dadd( 5.2725, 95.7136, -56.231, 0.07 ) }
    dend_40 { pt3dadd( 5.23051, 96.6158, -56.3952, 1.11 ) }
    dend_40 { pt3dadd( 5.14386, 97.9212, -56.6439, 0.07 ) }
    dend_40 { pt3dadd( 5.04723, 99.1042, -56.8617, 0.07 ) }
    dend_40 { pt3dadd( 4.93459, 100.207, -57.0891, 0.07 ) }
    dend_40 { pt3dadd( 4.86568, 101.509, -57.3608, 1.4 ) }
    dend_40 { pt3dadd( 4.93952, 104.346, -57.9113, 0.07 ) }
    dend_40 { pt3dadd( 5.01924, 105.366, -58.1096, 1.18 ) }
    dend_40 { pt3dadd( 5.12515, 106.205, -58.2718, 1.18 ) }
    dend_40 { pt3dadd( 5.41491, 107.589, -58.5023, 0.07 ) }
    dend_40 { pt3dadd( 6.0655, 109.823, -58.8015, 0.07 ) }
    dend_40 { pt3dadd( 6.889, 112.127, -59.0136, 0.07 ) }
    dend_40 { pt3dadd( 7.24077, 112.914, -59.0415, 1.25 ) }
    dend_40 { pt3dadd( 7.46519, 113.359, -59.0535, 1.25 ) }
    dend_40 { pt3dadd( 8.69037, 115.689, -59.1635, 0.15 ) }
    dend_40 { pt3dadd( 9.26311, 116.741, -59.2423, 0.15 ) }
    dend_40 { pt3dadd( 9.62078, 117.383, -59.3139, 0.74 ) }
    dend_40 { pt3dadd( 10.432, 119.109, -59.6741, 0.07 ) }
    dend_40 { pt3dadd( 10.8533, 120.128, -59.9438, 0.07 ) }
    dend_40 { pt3dadd( 11.5596, 122.103, -60.5431, 0.07 ) }
    dend_40 { pt3dadd( 11.8221, 122.955, -60.8761, 1.33 ) }
    dend_40 { pt3dadd( 12.0428, 123.724, -61.2019, 1.33 ) }
    dend_40 { pt3dadd( 13.0267, 127.406, -62.8203, 0.07 ) }
    dend_40 { pt3dadd( 13.2472, 128.339, -63.2122, 0.96 ) }
    dend_40 { pt3dadd( 13.4104, 129.036, -63.4792, 0.96 ) }
    dend_40 { pt3dadd( 14.0615, 131.667, -64.4212, 0.07 ) }
    dend_40 { pt3dadd( 14.3419, 132.711, -64.7811, 0.81 ) }
    dend_40 { pt3dadd( 14.5402, 133.403, -65.0333, 0.81 ) }
    dend_40 { pt3dadd( 15.2683, 135.888, -65.9259, 0.07 ) }
    dend_40 { pt3dadd( 15.5167, 136.858, -66.273, 0.74 ) }
    dend_40 { pt3dadd( 16.1862, 139.89, -67.2999, 0.07 ) }
    dend_40 { pt3dadd( 16.3032, 140.554, -67.5004, 1.11 ) }
    dend_40 { pt3dadd( 16.701, 143.853, -68.6147, 0.07 ) }
    dend_40 { pt3dadd( 16.7711, 144.797, -68.9506, 0.66 ) }
    dend_40 { pt3dadd( 16.8032, 145.81, -69.324, 0.66 ) }
    dend_40 { pt3dadd( 16.7853, 147.186, -69.8141, 0.07 ) }
    dend_40 { pt3dadd( 16.7357, 148.339, -70.1776, 1.25 ) }
    dend_40 { pt3dadd( 16.4968, 152.285, -71.3057, 0.07 ) }
    dend_40 { pt3dadd( 16.4383, 153.159, -71.5195, 0.88 ) }
    dend_40 { pt3dadd( 16.4125, 153.795, -71.6693, 0.88 ) }
    dend_40 { pt3dadd( 16.4125, 154.058, -71.7251, 0.07 ) }
    dend_40 { pt3dadd( 16.4583, 155.634, -71.992, 0.07 ) }
    dend_40 { pt3dadd( 16.5557, 157.237, -72.1548, 0.07 ) }
    dend_40 { pt3dadd( 16.6017, 157.692, -72.1795, 0.52 ) }
    dend_40 { pt3dadd( 16.7726, 159.131, -72.32, 0.07 ) }
    dend_40 { pt3dadd( 16.9551, 160.454, -72.485, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_40 { pt3dadd( 17.1425, 161.559, -72.6406, 0.74 ) }
    dend_40 { pt3dadd( 17.2475, 162.049, -72.7179, 0.74 ) }
    dend_40 { pt3dadd( 17.8564, 164.191, -73.0825, 0.07 ) }
    dend_40 { pt3dadd( 18.0972, 164.919, -73.2076, 0.59 ) }
    dend_40 { pt3dadd( 18.708, 166.506, -73.4746, 0.07 ) }
    dend_40 { pt3dadd( 19.2426, 167.79, -73.669, 0.07 ) }
    dend_40 { pt3dadd( 19.752, 168.95, -73.8003, 0.07 ) }
    dend_40 { pt3dadd( 19.9985, 169.522, -73.8408, 1.03 ) }
    dend_40 { pt3dadd( 20.3054, 170.234, -73.8546, 1.03 ) }
    dend_40 { pt3dadd( 20.8433, 171.54, -73.8777, 0.07 ) }
    dend_40 { pt3dadd( 21.1585, 172.423, -73.8893, 0.66 ) }
    dend_40 { pt3dadd( 21.9878, 174.997, -73.9367, 0.07 ) }
    dend_40 { pt3dadd( 22.2035, 175.736, -73.9851, 0.07 ) }
    dend_40 { pt3dadd( 22.2581, 175.917, -74.004, 1.25 ) }
    dend_40 { pt3dadd( 22.4749, 176.571, -74.0946, 1.25 ) }
    dend_40 { pt3dadd( 22.9579, 177.851, -74.3182, 0.22 ) }
    dend_40 { pt3dadd( 23.6485, 179.409, -74.6451, 0.81 ) }
    dend_40 { pt3dadd( 24.5345, 180.827, -74.8795, 0.07 ) }
    dend_40 { pt3dadd( 25.3875, 181.934, -75.0022, 0.07 ) }
    dend_40 { pt3dadd( 26.0629, 182.691, -75.0504, 0.07 ) }
    dend_40 { pt3dadd( 26.3956, 183.009, -75.0552, 0.74 ) }
    dend_40 { pt3dadd( 26.7794, 183.332, -75.0225, 0.74 ) }
    dend_40 { pt3dadd( 29.4445, 185.466, -74.5504, 0.07 ) }
    dend_40 { pt3dadd( 30.0165, 185.916, -74.4054, 0.07 ) }
    dend_40 { pt3dadd( 30.6754, 186.453, -74.2216, 0.37 ) }
    dend_40 { pt3dadd( 31.5656, 187.25, -73.8467, 0.37 ) }
    dend_40 { pt3dadd( 32.7205, 188.451, -73.1856, 0.07 ) }
    dend_40 { pt3dadd( 33.343, 189.215, -72.7144, 0.07 ) }
    dend_40 { pt3dadd( 33.7162, 189.843, -72.2341, 0.07 ) }
    dend_40 { pt3dadd( 34.0402, 190.493, -71.6263, 0.07 ) }
    dend_40 { pt3dadd( 34.933, 192.57, -69.5158, 0.07 ) }
    dend_40 { pt3dadd( 35.2732, 193.562, -68.4164, 0.07 ) }
    dend_40 { pt3dadd( 35.3583, 193.891, -68.0199, 0.07 ) }
    dend_40 { pt3dadd( 35.6428, 195.43, -65.9604, 0.07 ) }
    dend_40 { pt3dadd( 35.7073, 195.947, -65.2029, 0.07 ) }
    // Section: dend_28, id: dend_28, parent: dend_19 (entry count 35/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 8.51448, 31.62, -0.55134, 1.18 ) }
    dend_28 { pt3dadd( 8.34545, 34.0522, 0.429344, 1.18 ) }
    dend_28 { pt3dadd( 8.29683, 35.1567, 0.776611, 1.18 ) }
    dend_28 { pt3dadd( 8.25318, 35.9446, 0.990097, 1.18 ) }
    dend_28 { pt3dadd( 8.23961, 36.6418, 1.27351, 1.18 ) }
    dend_28 { pt3dadd( 8.22987, 37.6813, 1.75806, 1.18 ) }
    dend_28 { pt3dadd( 8.22622, 38.3131, 2.06526, 1.18 ) }
    dend_28 { pt3dadd( 8.20099, 39.6367, 2.6781, 1.18 ) }
    dend_28 { pt3dadd( 8.19525, 40.4368, 3.08947, 0.74 ) }
    dend_28 { pt3dadd( 8.21121, 42.9843, 4.52186, 0.59 ) }
    dend_28 { pt3dadd( 8.22193, 43.6494, 4.93601, 0.59 ) }
    dend_28 { pt3dadd( 8.23061, 44.3595, 5.44142, 0.81 ) }
    dend_28 { pt3dadd( 8.24375, 45.0695, 6.00549, 0.81 ) }
    dend_28 { pt3dadd( 8.24375, 45.0695, 6.00549, 1.33 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 8.51448, 31.62, -0.55134, 1.03 ) }
    dend_23 { pt3dadd( 12.2563, 33.0395, 0.562629, 1.03 ) }
    dend_23 { pt3dadd( 13.3588, 33.4917, 0.999043, 1.03 ) }
    dend_23 { pt3dadd( 14.4839, 33.9729, 1.44049, 1.03 ) }
    dend_23 { pt3dadd( 15.5061, 34.4252, 1.80127, 1.03 ) }
    dend_23 { pt3dadd( 16.7813, 35.0107, 2.20066, 0.96 ) }
    dend_23 { pt3dadd( 18.7794, 35.9723, 2.78829, 0.96 ) }
    dend_23 { pt3dadd( 21.0888, 37.3557, 3.2512, 0.66 ) }
    dend_23 { pt3dadd( 22.0049, 37.9607, 3.42919, 1.03 ) }
    dend_23 { pt3dadd( 23.1578, 38.8245, 3.61186, 1.03 ) }
    dend_23 { pt3dadd( 23.9774, 39.508, 3.66359, 1.03 ) }
    dend_23 { pt3dadd( 24.7275, 40.2481, 3.59586, 0.81 ) }
    dend_23 { pt3dadd( 25.6844, 41.5252, 3.25235, 0.81 ) }
    dend_23 { pt3dadd( 26.0675, 42.2234, 3.0217, 0.81 ) }
    dend_23 { pt3dadd( 26.7131, 43.7039, 2.58457, 1.18 ) }
    dend_23 { pt3dadd( 27.118, 44.8632, 2.27992, 1.18 ) }
    dend_23 { pt3dadd( 27.3885, 45.6993, 2.07323, 1.18 ) }
    dend_23 { pt3dadd( 27.8741, 47.0644, 1.72646, 1.18 ) }
    dend_23 { pt3dadd( 28.427, 48.2806, 1.47181, 0.66 ) }
    dend_23 { pt3dadd( 28.8502, 49.0356, 1.30486, 0.66 ) }
    dend_23 { pt3dadd( 29.2444, 49.5726, 1.17333, 0.66 ) }
    dend_23 { pt3dadd( 30.0149, 50.2925, 0.962857, 0.66 ) }
    dend_23 { pt3dadd( 31.0022, 50.8864, 0.730857, 0.66 ) }
    dend_23 { pt3dadd( 32.2694, 51.389, 0.458522, 0.66 ) }
    dend_23 { pt3dadd( 32.7464, 51.5293, 0.343704, 0.66 ) }
    dend_23 { pt3dadd( 33.4825, 51.7284, 0.192032, 0.66 ) }
    dend_23 { pt3dadd( 34.7271, 52.137, -0.0243764, 0.66 ) }
    dend_23 { pt3dadd( 35.9824, 52.6738, -0.211775, 0.66 ) }
    dend_23 { pt3dadd( 36.8317, 53.1682, -0.320343, 0.66 ) }
    dend_23 { pt3dadd( 37.2751, 53.5012, -0.375288, 0.66 ) }
    dend_23 { pt3dadd( 38.657, 54.7434, -0.519425, 0.88 ) }
    dend_23 { pt3dadd( 39.6823, 55.7872, -0.560912, 0.88 ) }
    dend_23 { pt3dadd( 40.5598, 56.7546, -0.565575, 0.88 ) }
    dend_23 { pt3dadd( 41.1872, 57.4823, -0.557909, 0.88 ) }
    dend_23 { pt3dadd( 41.9472, 58.3924, -0.495279, 1.18 ) }
    dend_23 { pt3dadd( 43.0022, 59.6437, -0.386636, 0.81 ) }
    dend_23 { pt3dadd( 44.3523, 61.2045, -0.26005, 0.81 ) }
    dend_23 { pt3dadd( 45.2367, 62.1512, -0.174305, 0.81 ) }
    dend_23 { pt3dadd( 45.7611, 62.6917, -0.1225, 0.81 ) }
    dend_23 { pt3dadd( 47.7604, 64.6786, 0.0208542, 0.96 ) }
    dend_23 { pt3dadd( 48.4463, 65.3694, 0.0541901, 0.96 ) }
    dend_23 { pt3dadd( 49.1451, 66.107, 0.0577051, 0.96 ) }
    dend_23 { pt3dadd( 49.8591, 66.9218, 0.0058248, 0.96 ) }
    dend_23 { pt3dadd( 50.3546, 67.5144, -0.0534969, 0.96 ) }
    dend_23 { pt3dadd( 51.4691, 68.9123, -0.217507, 0.66 ) }
    dend_23 { pt3dadd( 52.0604, 69.7658, -0.328379, 0.66 ) }
    dend_23 { pt3dadd( 52.7924, 70.9676, -0.424381, 0.66 ) }
    dend_23 { pt3dadd( 53.4564, 72.2655, -0.46339, 0.66 ) }
    dend_23 { pt3dadd( 53.8918, 73.2045, -0.467977, 0.66 ) }
    dend_23 { pt3dadd( 54.4436, 74.5399, -0.441042, 0.88 ) }
    dend_23 { pt3dadd( 54.9327, 75.7995, -0.398712, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_23 { pt3dadd( 55.2497, 76.5518, -0.385103, 1.18 ) }
    dend_23 { pt3dadd( 55.8494, 77.8625, -0.455685, 1.18 ) }
    dend_23 { pt3dadd( 56.6082, 79.2061, -0.687668, 0.66 ) }
    dend_23 { pt3dadd( 57.2751, 80.1177, -0.996226, 0.66 ) }
    dend_23 { pt3dadd( 57.9333, 80.8045, -1.3711, 0.66 ) }
    dend_23 { pt3dadd( 59.0839, 81.7402, -2.05043, 0.66 ) }
    dend_23 { pt3dadd( 60.3564, 82.6211, -2.68571, 0.74 ) }
    dend_23 { pt3dadd( 61.3772, 83.2648, -3.12739, 0.74 ) }
    dend_23 { pt3dadd( 62.3571, 83.9169, -3.48283, 0.74 ) }
    dend_23 { pt3dadd( 63.2163, 84.5185, -3.67818, 0.74 ) }
    dend_23 { pt3dadd( 63.7521, 84.9889, -3.62786, 0.74 ) }
    dend_23 { pt3dadd( 65.1373, 86.4807, -3.01602, 0.74 ) }
    dend_23 { pt3dadd( 65.5623, 86.9395, -2.71591, 0.74 ) }
    dend_23 { pt3dadd( 66.1237, 87.5211, -2.25866, 0.74 ) }
    dend_23 { pt3dadd( 66.8653, 88.2242, -1.65549, 1.4 ) }
    dend_23 { pt3dadd( 67.9497, 89.1556, -0.855375, 0.96 ) }
    dend_23 { pt3dadd( 68.6456, 89.7065, -0.444052, 0.96 ) }
    dend_23 { pt3dadd( 69.9169, 90.6336, 0.0944224, 0.81 ) }
    dend_23 { pt3dadd( 70.6714, 91.1852, 0.343044, 0.81 ) }
    dend_23 { pt3dadd( 71.3562, 91.7082, 0.484783, 0.81 ) }
    dend_23 { pt3dadd( 72.6154, 92.7866, 0.572179, 0.81 ) }
    dend_23 { pt3dadd( 73.4071, 93.5714, 0.535343, 0.81 ) }
    dend_23 { pt3dadd( 73.7245, 93.9479, 0.485787, 0.81 ) }
    dend_23 { pt3dadd( 74.49, 95.0195, 0.253421, 0.81 ) }
    dend_23 { pt3dadd( 75.0259, 95.8264, 0.0572008, 0.81 ) }
    dend_23 { pt3dadd( 75.4711, 96.4912, -0.136227, 0.81 ) }
    dend_23 { pt3dadd( 76.0716, 97.3864, -0.438104, 0.81 ) }
    dend_23 { pt3dadd( 76.8439, 98.5079, -0.86406, 0.81 ) }
    dend_23 { pt3dadd( 77.6059, 99.5979, -1.37052, 0.81 ) }
    dend_23 { pt3dadd( 78.2434, 100.457, -1.8299, 0.52 ) }
    dend_23 { pt3dadd( 78.8146, 101.202, -2.24527, 0.52 ) }
    dend_23 { pt3dadd( 79.3155, 101.808, -2.61489, 0.52 ) }
    dend_23 { pt3dadd( 80.2679, 102.833, -3.26145, 1.03 ) }
    dend_23 { pt3dadd( 81.5953, 104.12, -4.07241, 0.66 ) }
    dend_23 { pt3dadd( 82.8907, 105.257, -4.78421, 0.66 ) }
    dend_23 { pt3dadd( 83.9392, 106.056, -5.29319, 1.03 ) }
    dend_23 { pt3dadd( 84.8708, 106.681, -5.69495, 0.88 ) }
    dend_23 { pt3dadd( 86.4866, 107.637, -6.20659, 0.88 ) }
    dend_23 { pt3dadd( 87.7593, 108.347, -6.47715, 0.88 ) }
    dend_23 { pt3dadd( 89.0522, 109.052, -6.65918, 0.74 ) }
    dend_23 { pt3dadd( 91.0296, 110.17, -6.87504, 0.74 ) }
    dend_23 { pt3dadd( 91.8386, 110.651, -6.94782, 0.74 ) }
    dend_23 { pt3dadd( 93.9328, 111.998, -7.10973, 0.74 ) }
    dend_23 { pt3dadd( 95.0833, 112.767, -7.21117, 0.74 ) }
    dend_23 { pt3dadd( 95.8569, 113.304, -7.28445, 0.74 ) }
    dend_23 { pt3dadd( 96.6386, 113.87, -7.38328, 0.74 ) }
    dend_23 { pt3dadd( 97.4573, 114.477, -7.52933, 0.74 ) }
    dend_23 { pt3dadd( 98.1709, 114.988, -7.71485, 0.74 ) }
    dend_23 { pt3dadd( 99.2323, 115.72, -8.07715, 0.74 ) }
    dend_23 { pt3dadd( 100.019, 116.255, -8.34769, 0.74 ) }
    dend_23 { pt3dadd( 101.12, 117.074, -8.7204, 0.74 ) }
    dend_23 { pt3dadd( 102.584, 118.382, -9.19704, 1.03 ) }
    dend_23 { pt3dadd( 104.072, 120.049, -9.64675, 0.74 ) }
    dend_23 { pt3dadd( 104.605, 120.799, -9.79198, 0.74 ) }
    dend_23 { pt3dadd( 104.911, 121.317, -9.86624, 0.74 ) }
    dend_23 { pt3dadd( 105.623, 122.691, -10.0214, 0.74 ) }
    dend_23 { pt3dadd( 106.365, 124.255, -10.1193, 0.74 ) }
    dend_23 { pt3dadd( 106.867, 125.351, -10.1519, 1.18 ) }
    dend_23 { pt3dadd( 107.709, 127.246, -10.1791, 1.03 ) }
    dend_23 { pt3dadd( 108.012, 127.877, -10.1917, 1.03 ) }
    dend_23 { pt3dadd( 108.894, 129.451, -10.2532, 0.81 ) }
    dend_23 { pt3dadd( 109.933, 130.93, -10.364, 0.81 ) }
    dend_23 { pt3dadd( 110.541, 131.653, -10.434, 0.81 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 63/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 8.51448, 31.62, -0.55134, 0.88 ) }
    dend_20 { pt3dadd( 8.26889, 33.6214, 0.22875, 0.88 ) }
    dend_20 { pt3dadd( 8.03316, 35.5775, 0.889679, 0.88 ) }
    dend_20 { pt3dadd( 7.93598, 36.5369, 1.16889, 0.88 ) }
    dend_20 { pt3dadd( 7.72998, 38.8199, 1.75859, 0.88 ) }
    dend_20 { pt3dadd( 7.61812, 40.145, 2.07006, 1.11 ) }
    dend_20 { pt3dadd( 7.48524, 41.5172, 2.37276, 1.11 ) }
    dend_20 { pt3dadd( 7.1406, 44.1454, 2.91819, 1.11 ) }
    dend_20 { pt3dadd( 6.81599, 45.9953, 3.27491, 1.11 ) }
    dend_20 { pt3dadd( 6.52959, 47.3797, 3.49199, 0.74 ) }
    dend_20 { pt3dadd( 6.26178, 48.5152, 3.60814, 0.74 ) }
    dend_20 { pt3dadd( 5.9231, 49.7026, 3.72409, 0.74 ) }
    dend_20 { pt3dadd( 5.42853, 51.1589, 3.88041, 0.74 ) }
    dend_20 { pt3dadd( 5.07569, 52.1131, 3.90732, 0.74 ) }
    dend_20 { pt3dadd( 4.69583, 53.3107, 3.76061, 0.74 ) }
    dend_20 { pt3dadd( 4.49377, 54.3785, 3.44642, 0.74 ) }
    dend_20 { pt3dadd( 4.47529, 54.9661, 3.17287, 0.74 ) }
    dend_20 { pt3dadd( 4.53067, 55.6327, 2.82609, 0.74 ) }
    dend_20 { pt3dadd( 4.8366, 58.1225, 1.43185, 0.74 ) }
    dend_20 { pt3dadd( 5.06085, 59.8903, 0.43521, 0.74 ) }
    dend_20 { pt3dadd( 5.16687, 60.8369, -0.0611318, 1.11 ) }
    dend_20 { pt3dadd( 5.42951, 63.4448, -1.36068, 0.59 ) }
    dend_20 { pt3dadd( 5.58767, 65.1984, -2.13337, 0.88 ) }
    dend_20 { pt3dadd( 5.759, 67.8086, -3.10374, 0.88 ) }
    dend_20 { pt3dadd( 5.78821, 68.7108, -3.35433, 1.18 ) }
    dend_20 { pt3dadd( 5.76658, 70.8354, -3.81392, 0.81 ) }
    dend_20 { pt3dadd( 5.70247, 72.5344, -4.09494, 0.81 ) }
    dend_20 { pt3dadd( 5.59598, 74.5253, -4.30257, 1.11 ) }
    dend_20 { pt3dadd( 5.52855, 75.5219, -4.38769, 1.11 ) }
    dend_20 { pt3dadd( 5.46152, 76.7675, -4.45467, 1.47 ) }
    dend_20 { pt3dadd( 5.3471, 79.2213, -4.58444, 1.03 ) }
    dend_20 { pt3dadd( 5.28757, 80.8513, -4.66082, 1.03 ) }
    dend_20 { pt3dadd( 5.23099, 82.4294, -4.70787, 1.03 ) }
    dend_20 { pt3dadd( 5.16138, 84.2508, -4.77435, 1.03 ) }
    dend_20 { pt3dadd( 5.10933, 85.9039, -4.83549, 1.03 ) }
    dend_20 { pt3dadd( 5.0671, 87.4942, -4.88608, 1.03 ) }
    dend_20 { pt3dadd( 5.04065, 88.4354, -4.90677, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( 4.98461, 89.4749, -4.90819, 0.81 ) }
    dend_20 { pt3dadd( 4.82735, 90.9463, -4.86517, 0.81 ) }
    dend_20 { pt3dadd( 4.59595, 92.3713, -4.76933, 0.81 ) }
    dend_20 { pt3dadd( 4.09892, 94.4316, -4.64184, 0.59 ) }
    dend_20 { pt3dadd( 3.75981, 95.5738, -4.62807, 0.59 ) }
    dend_20 { pt3dadd( 3.4048, 96.6069, -4.71158, 1.18 ) }
    dend_20 { pt3dadd( 3.06202, 97.5005, -5.01347, 1.18 ) }
    dend_20 { pt3dadd( 2.87683, 98.0015, -5.28464, 1.18 ) }
    dend_20 { pt3dadd( 2.4843, 99.1824, -6.07355, 0.52 ) }
    dend_20 { pt3dadd( 2.07007, 100.765, -7.23393, 0.74 ) }
    dend_20 { pt3dadd( 1.81557, 102.232, -8.29822, 0.74 ) }
    dend_20 { pt3dadd( 1.54311, 105.786, -10.7933, 0.74 ) }
    dend_20 { pt3dadd( 1.59088, 107.332, -11.7751, 1.03 ) }
    dend_20 { pt3dadd( 1.73312, 108.428, -12.3728, 1.03 ) }
    dend_20 { pt3dadd( 2.05553, 109.876, -13.0081, 1.4 ) }
    dend_20 { pt3dadd( 2.48345, 111.303, -13.433, 1.4 ) }
    dend_20 { pt3dadd( 2.89628, 112.509, -13.7077, 0.15 ) }
    dend_20 { pt3dadd( 3.53875, 114.254, -13.9875, 0.22 ) }
    dend_20 { pt3dadd( 4.00145, 115.569, -14.2693, 1.03 ) }
    dend_20 { pt3dadd( 4.17353, 116.107, -14.4056, 1.55 ) }
    dend_20 { pt3dadd( 4.5228, 117.366, -14.7643, 1.03 ) }
    dend_20 { pt3dadd( 5.15969, 120.06, -15.5776, 0.44 ) }
    dend_20 { pt3dadd( 5.33206, 120.935, -15.8307, 0.44 ) }
    dend_20 { pt3dadd( 5.44678, 121.62, -16.0068, 0.44 ) }
    dend_20 { pt3dadd( 5.62187, 122.675, -16.2243, 1.18 ) }
    dend_20 { pt3dadd( 5.76965, 123.498, -16.3422, 1.18 ) }
    dend_20 { pt3dadd( 5.93572, 124.491, -16.4578, 1.18 ) }
    dend_20 { pt3dadd( 6.18048, 126.239, -16.583, 0.22 ) }
    dend_20 { pt3dadd( 6.36318, 127.82, -16.7224, 0.22 ) }
    dend_20 { pt3dadd( 6.4747, 129.104, -16.8444, 1.18 ) }
    dend_20 { pt3dadd( 6.57319, 130.535, -16.9877, 1.18 ) }
    dend_20 { pt3dadd( 6.6956, 133.669, -17.3043, 0.07 ) }
    dend_20 { pt3dadd( 6.71426, 135.392, -17.4701, 1.03 ) }
    dend_20 { pt3dadd( 6.68881, 136.229, -17.5414, 1.03 ) }
    dend_20 { pt3dadd( 6.64078, 137.226, -17.6132, 1.62 ) }
    dend_20 { pt3dadd( 6.54125, 138.303, -17.6603, 1.62 ) }
    dend_20 { pt3dadd( 6.45938, 138.97, -17.6654, 0.07 ) }
    dend_20 { pt3dadd( 6.21486, 140.781, -17.5877, 0.07 ) }
    dend_20 { pt3dadd( 6.02256, 141.995, -17.5347, 1.33 ) }
    dend_20 { pt3dadd( 5.89115, 142.698, -17.5015, 1.33 ) }
    dend_20 { pt3dadd( 5.39032, 145.09, -17.3806, 0.07 ) }
    dend_20 { pt3dadd( 5.19129, 145.884, -17.3346, 1.18 ) }
    dend_20 { pt3dadd( 5.07887, 146.289, -17.3091, 1.18 ) }
    dend_20 { pt3dadd( 4.35367, 148.318, -17.1497, 0.07 ) }
    dend_20 { pt3dadd( 4.00765, 149.139, -17.0204, 0.81 ) }
    dend_20 { pt3dadd( 3.5814, 149.989, -16.8189, 0.81 ) }
    dend_20 { pt3dadd( 3.14504, 150.738, -16.5764, 0.81 ) }
    dend_20 { pt3dadd( 3.14504, 150.738, -16.5764, 0.29 ) }
    dend_20 { pt3dadd( 2.15064, 152.178, -15.975, 0.29 ) }
    dend_20 { pt3dadd( 1.0637, 153.727, -15.2845, 0.81 ) }
    dend_20 { pt3dadd( 0.568912, 154.417, -14.9824, 1.33 ) }
    dend_20 { pt3dadd( -0.183299, 155.478, -14.5471, 1.33 ) }
    dend_20 { pt3dadd( -0.24808, 155.576, -14.5126, 0.07 ) }
    dend_20 { pt3dadd( -0.643709, 156.211, -14.3276, 0.07 ) }
    dend_20 { pt3dadd( -1.37209, 157.518, -14.0609, 0.07 ) }
    dend_20 { pt3dadd( -1.93351, 158.527, -13.9246, 0.07 ) }
    dend_20 { pt3dadd( -2.38409, 159.339, -13.8151, 0.07 ) }
    dend_20 { pt3dadd( -3.01166, 160.477, -13.6623, 1.03 ) }
    dend_20 { pt3dadd( -3.46287, 161.295, -13.5525, 1.03 ) }
    dend_20 { pt3dadd( -4.59518, 163.338, -13.2773, 0.07 ) }
    dend_20 { pt3dadd( -5.10621, 164.222, -13.1546, 1.25 ) }
    dend_20 { pt3dadd( -5.77771, 165.437, -12.9912, 1.25 ) }
    dend_20 { pt3dadd( -5.95616, 165.749, -12.9482, 1.25 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 63/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -27.0777, 31.2735, -3.45843, 0.66 ) }
    dend_16 { pt3dadd( -29.5499, 33.2147, -5.61831, 0.66 ) }
    dend_16 { pt3dadd( -30.3213, 33.8706, -6.21162, 0.66 ) }
    dend_16 { pt3dadd( -31.006, 34.5196, -6.73807, 0.66 ) }
    dend_16 { pt3dadd( -31.8607, 35.4047, -7.38233, 0.88 ) }
    dend_16 { pt3dadd( -33.263, 37.0223, -8.44465, 0.88 ) }
    dend_16 { pt3dadd( -34.6157, 38.7246, -9.51072, 0.88 ) }
    dend_16 { pt3dadd( -35.2786, 39.7201, -10.0864, 1.33 ) }
    dend_16 { pt3dadd( -36.2668, 41.2575, -11.0403, 0.96 ) }
    dend_16 { pt3dadd( -36.8146, 42.1126, -11.5734, 0.96 ) }
    dend_16 { pt3dadd( -37.4947, 43.1306, -12.2198, 0.96 ) }
    dend_16 { pt3dadd( -38.9346, 45.1905, -13.5377, 0.96 ) }
    dend_16 { pt3dadd( -40.5756, 47.3893, -14.8807, 1.11 ) }
    dend_16 { pt3dadd( -41.3924, 48.3861, -15.4588, 1.11 ) }
    dend_16 { pt3dadd( -42.494, 49.5935, -16.0642, 0.66 ) }
    dend_16 { pt3dadd( -43.1886, 50.2885, -16.358, 1.18 ) }
    dend_16 { pt3dadd( -44.2822, 51.3078, -16.6732, 1.18 ) }
    dend_16 { pt3dadd( -45.8303, 52.7468, -16.9446, 0.74 ) }
    dend_16 { pt3dadd( -46.3823, 53.2924, -17.005, 0.74 ) }
    dend_16 { pt3dadd( -47.6468, 54.6464, -17.1847, 1.11 ) }
    dend_16 { pt3dadd( -48.7964, 55.9481, -17.3845, 0.59 ) }
    dend_16 { pt3dadd( -49.4394, 56.7291, -17.5211, 0.59 ) }
    dend_16 { pt3dadd( -50.3116, 57.9009, -17.7767, 1.11 ) }
    dend_16 { pt3dadd( -51.0265, 58.9699, -18.0358, 1.11 ) }
    dend_16 { pt3dadd( -52.0846, 60.7124, -18.4629, 0.74 ) }
    dend_16 { pt3dadd( -52.8347, 62.1254, -18.7863, 1.03 ) }
    dend_16 { pt3dadd( -53.5324, 63.6503, -19.0903, 1.03 ) }
    dend_16 { pt3dadd( -54.255, 65.4593, -19.3808, 1.03 ) }
    dend_16 { pt3dadd( -54.7083, 66.7149, -19.5249, 1.03 ) }
    dend_16 { pt3dadd( -55.1587, 67.9911, -19.6444, 1.03 ) }
    dend_16 { pt3dadd( -55.8616, 70.1238, -19.7984, 1.03 ) }
    dend_16 { pt3dadd( -56.3132, 71.3831, -19.8553, 1.03 ) }
    dend_16 { pt3dadd( -56.9032, 72.862, -19.9355, 0.88 ) }
    dend_16 { pt3dadd( -57.6112, 74.3837, -20.0399, 0.88 ) }
    dend_16 { pt3dadd( -58.3613, 75.8369, -20.19, 0.88 ) }
    dend_16 { pt3dadd( -58.6911, 76.4598, -20.2917, 0.88 ) }
    dend_16 { pt3dadd( -59.6248, 78.1541, -20.6468, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( -60.6721, 80.0483, -21.0751, 0.88 ) }
    dend_16 { pt3dadd( -61.548, 81.6668, -21.4406, 0.81 ) }
    dend_16 { pt3dadd( -62.0476, 82.647, -21.6462, 0.81 ) }
    dend_16 { pt3dadd( -63.1248, 85.0047, -22.0593, 0.81 ) }
    dend_16 { pt3dadd( -63.6642, 86.2671, -22.2364, 1.11 ) }
    dend_16 { pt3dadd( -64.4962, 88.3926, -22.4431, 0.59 ) }
    dend_16 { pt3dadd( -65.1853, 90.1734, -22.5338, 0.59 ) }
    dend_16 { pt3dadd( -65.8041, 91.8215, -22.5886, 0.96 ) }
    dend_16 { pt3dadd( -66.7004, 94.1979, -22.6011, 0.96 ) }
    dend_16 { pt3dadd( -67.2314, 95.5799, -22.5553, 0.96 ) }
    dend_16 { pt3dadd( -67.9958, 97.6169, -22.4703, 0.96 ) }
    dend_16 { pt3dadd( -68.5155, 99.0303, -22.3984, 0.44 ) }
    dend_16 { pt3dadd( -68.6329, 99.3626, -22.4027, 0.44 ) }
    dend_16 { pt3dadd( -68.8303, 99.8901, -22.4471, 0.44 ) }
    dend_16 { pt3dadd( -69.0643, 100.475, -22.539, 1.18 ) }
    dend_16 { pt3dadd( -69.4783, 101.52, -22.7185, 1.18 ) }
    dend_16 { pt3dadd( -69.9522, 102.772, -22.9385, 1.18 ) }
    dend_16 { pt3dadd( -70.9594, 105.475, -23.3754, 0.81 ) }
    dend_16 { pt3dadd( -71.3634, 106.518, -23.5211, 0.81 ) }
    dend_16 { pt3dadd( -71.6426, 107.218, -23.6065, 0.81 ) }
    dend_16 { pt3dadd( -72.275, 108.714, -23.731, 0.66 ) }
    dend_16 { pt3dadd( -72.6894, 109.647, -23.7649, 0.66 ) }
    dend_16 { pt3dadd( -73.1873, 110.733, -23.8095, 1.03 ) }
    dend_16 { pt3dadd( -73.8056, 112.023, -23.8437, 0.44 ) }
    dend_16 { pt3dadd( -74.1604, 112.768, -23.9031, 0.44 ) }
    dend_16 { pt3dadd( -74.8978, 114.239, -24.0934, 0.96 ) }
    dend_16 { pt3dadd( -75.3797, 115.17, -24.274, 1.69 ) }
    dend_16 { pt3dadd( -76.5397, 117.392, -24.8492, 0.07 ) }
    dend_16 { pt3dadd( -77.0927, 118.493, -25.2154, 0.37 ) }
    dend_16 { pt3dadd( -77.3979, 119.106, -25.4506, 0.37 ) }
    dend_16 { pt3dadd( -77.9138, 120.175, -25.8874, 0.88 ) }
    dend_16 { pt3dadd( -78.2621, 120.916, -26.2021, 1.4 ) }
    dend_16 { pt3dadd( -79.0298, 122.646, -26.9081, 1.4 ) }
    dend_16 { pt3dadd( -79.6575, 124.21, -27.4741, 1.03 ) }
    dend_16 { pt3dadd( -80.1995, 125.781, -28.0036, 0.66 ) }
    dend_16 { pt3dadd( -80.4181, 126.559, -28.2295, 0.66 ) }
    dend_16 { pt3dadd( -80.6076, 127.393, -28.4323, 0.66 ) }
    dend_16 { pt3dadd( -80.9231, 129.052, -28.7282, 1.47 ) }
    dend_16 { pt3dadd( -81.0715, 130.039, -28.8513, 1.47 ) }
    dend_16 { pt3dadd( -81.2659, 131.705, -29.0659, 0.88 ) }
    dend_16 { pt3dadd( -81.5898, 135.041, -29.5325, 0.59 ) }
    dend_16 { pt3dadd( -81.6705, 135.863, -29.651, 0.59 ) }
    dend_16 { pt3dadd( -81.8692, 138.024, -29.9792, 1.55 ) }
    dend_16 { pt3dadd( -81.9354, 138.757, -30.0992, 1.55 ) }
    dend_16 { pt3dadd( -82.1482, 141.398, -30.5459, 0.07 ) }
    dend_16 { pt3dadd( -82.2395, 142.831, -30.7811, 1.03 ) }
    dend_16 { pt3dadd( -82.2926, 144.117, -30.9778, 1.03 ) }
    dend_16 { pt3dadd( -82.3328, 145.6, -31.1949, 1.03 ) }
    dend_16 { pt3dadd( -82.3413, 146.731, -31.3698, 1.03 ) }
    dend_16 { pt3dadd( -82.3933, 150.304, -31.8971, 0.52 ) }
    dend_16 { pt3dadd( -82.4043, 151.561, -32.0581, 0.52 ) }
    dend_16 { pt3dadd( -82.4077, 152.5, -32.1817, 1.25 ) }
    dend_16 { pt3dadd( -82.4167, 153.843, -32.3517, 1.25 ) }
    dend_16 { pt3dadd( -82.4649, 155.96, -32.587, 0.15 ) }
    dend_16 { pt3dadd( -82.5098, 157.077, -32.6943, 0.15 ) }
    dend_16 { pt3dadd( -82.5975, 158.156, -32.7632, 1.03 ) }
    dend_16 { pt3dadd( -82.7224, 159.325, -32.7925, 1.03 ) }
    dend_16 { pt3dadd( -82.83, 160.235, -32.7625, 1.03 ) }
    dend_16 { pt3dadd( -82.9588, 161.23, -32.6619, 0.44 ) }
    dend_16 { pt3dadd( -83.1394, 162.695, -32.4208, 0.44 ) }
    dend_16 { pt3dadd( -83.2339, 163.854, -32.2256, 0.44 ) }
    dend_16 { pt3dadd( -83.2699, 164.542, -32.1136, 0.44 ) }
    dend_16 { pt3dadd( -83.3167, 166.048, -31.8817, 0.81 ) }
    dend_16 { pt3dadd( -83.3354, 167.273, -31.717, 0.81 ) }
    dend_16 { pt3dadd( -83.3378, 168.205, -31.6102, 0.81 ) }
    dend_16 { pt3dadd( -83.3504, 170.536, -31.3949, 0.22 ) }
    dend_16 { pt3dadd( -83.3628, 172.245, -31.2808, 1.25 ) }
    dend_16 { pt3dadd( -83.381, 173.08, -31.2337, 1.25 ) }
    dend_16 { pt3dadd( -83.4575, 175.581, -31.1132, 0.29 ) }
    dend_16 { pt3dadd( -83.5153, 176.661, -31.0369, 0.29 ) }
    dend_16 { pt3dadd( -83.581, 177.56, -30.9555, 0.29 ) }
    dend_16 { pt3dadd( -83.7068, 178.885, -30.812, 0.29 ) }
    dend_16 { pt3dadd( -83.8485, 180.363, -30.6335, 1.18 ) }
    dend_16 { pt3dadd( -83.9558, 181.683, -30.4628, 1.18 ) }
    dend_16 { pt3dadd( -84.1, 183.869, -30.1626, 0.29 ) }
    dend_16 { pt3dadd( -84.1624, 185.256, -29.9725, 0.81 ) }
    dend_16 { pt3dadd( -84.1742, 186.266, -29.8407, 0.81 ) }
    dend_16 { pt3dadd( -84.1674, 187.929, -29.6406, 0.22 ) }
    dend_16 { pt3dadd( -84.1468, 189.098, -29.518, 0.22 ) }
    dend_16 { pt3dadd( -84.1251, 189.837, -29.4568, 1.11 ) }
    dend_16 { pt3dadd( -84.0868, 190.944, -29.4177, 1.11 ) }
    dend_16 { pt3dadd( -84.0726, 193.125, -29.3742, 0.07 ) }
    dend_16 { pt3dadd( -84.0797, 194.121, -29.3655, 0.07 ) }
    dend_16 { pt3dadd( -84.1076, 195.125, -29.3801, 1.03 ) }
    dend_16 { pt3dadd( -84.152, 196.039, -29.4306, 1.03 ) }
    dend_16 { pt3dadd( -84.2604, 197.875, -29.5871, 0.44 ) }
    dend_16 { pt3dadd( -84.3337, 198.904, -29.7026, 0.52 ) }
    dend_16 { pt3dadd( -84.4318, 200.225, -29.883, 1.4 ) }
    dend_16 { pt3dadd( -84.5214, 201.763, -30.1258, 0.15 ) }
    dend_16 { pt3dadd( -84.5663, 203.323, -30.3781, 0.37 ) }
    dend_16 { pt3dadd( -84.5538, 203.735, -30.4383, 0.37 ) }
    dend_16 { pt3dadd( -84.4827, 204.559, -30.5369, 0.37 ) }
    dend_16 { pt3dadd( -84.4022, 205.078, -30.5861, 0.37 ) }
    dend_16 { pt3dadd( -84.056, 206.76, -30.688, 0.52 ) }
    dend_16 { pt3dadd( -83.6756, 208.338, -30.7167, 0.52 ) }
    dend_16 { pt3dadd( -83.2561, 209.966, -30.6993, 0.52 ) }
    dend_16 { pt3dadd( -82.907, 211.356, -30.6738, 0.52 ) }
    dend_16 { pt3dadd( -82.5611, 212.739, -30.6339, 0.52 ) }
    dend_16 { pt3dadd( -82.2435, 214.223, -30.6486, 0.81 ) }
    dend_16 { pt3dadd( -81.9957, 215.806, -30.7777, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( -81.9625, 216.374, -30.9049, 0.74 ) }
    dend_16 { pt3dadd( -81.9974, 217.25, -31.2095, 0.74 ) }
    dend_16 { pt3dadd( -82.1247, 218.492, -31.762, 1.18 ) }
    dend_16 { pt3dadd( -82.4815, 220.709, -32.9087, 0.44 ) }
    dend_16 { pt3dadd( -82.7952, 222.445, -33.8755, 0.74 ) }
    dend_16 { pt3dadd( -83.2221, 224.837, -35.2366, 0.74 ) }
    dend_16 { pt3dadd( -83.3828, 226.065, -35.9715, 0.74 ) }
    dend_16 { pt3dadd( -83.5109, 227.671, -36.9589, 1.25 ) }
    dend_16 { pt3dadd( -83.4944, 229.25, -37.9922, 0.44 ) }
    dend_16 { pt3dadd( -83.382, 230.121, -38.5563, 0.44 ) }
    dend_16 { pt3dadd( -83.1888, 230.921, -39.1527, 0.44 ) }
    dend_16 { pt3dadd( -82.4331, 233.277, -41.069, 0.74 ) }
    dend_16 { pt3dadd( -82.1405, 234.041, -41.7442, 0.74 ) }
    dend_16 { pt3dadd( -81.4444, 235.732, -43.3062, 0.29 ) }
    dend_16 { pt3dadd( -81.2572, 236.182, -43.7251, 0.74 ) }
    dend_16 { pt3dadd( -80.2816, 238.661, -46.005, 0.29 ) }
    dend_16 { pt3dadd( -79.8896, 239.722, -46.9218, 1.25 ) }
    dend_16 { pt3dadd( -79.2153, 241.746, -48.4949, 0.15 ) }
    dend_16 { pt3dadd( -79.0299, 242.341, -48.9313, 0.15 ) }
    dend_16 { pt3dadd( -78.8631, 242.955, -49.349, 0.15 ) }
    dend_16 { pt3dadd( -78.7324, 243.436, -49.674, 0.15 ) }
    dend_16 { pt3dadd( -78.5449, 244.143, -50.0998, 0.15 ) }
    dend_16 { pt3dadd( -78.1918, 245.653, -51.1208, 1.25 ) }
    dend_16 { pt3dadd( -78.1354, 246.018, -51.3742, 1.25 ) }
    dend_16 { pt3dadd( -77.9668, 247.813, -52.6499, 0.15 ) }
    dend_16 { pt3dadd( -77.9767, 248.147, -52.9038, 0.15 ) }
    dend_16 { pt3dadd( -78.0412, 248.661, -53.3184, 0.15 ) }
    dend_16 { pt3dadd( -78.153, 249.18, -53.734, 0.15 ) }
    dend_16 { pt3dadd( -78.2628, 249.608, -54.0994, 0.15 ) }
    dend_16 { pt3dadd( -78.5187, 250.488, -54.8867, 1.4 ) }
    dend_16 { pt3dadd( -79.0814, 252.17, -56.4185, 0.52 ) }
    dend_16 { pt3dadd( -79.4761, 253.223, -57.3944, 0.07 ) }
    dend_16 { pt3dadd( -80.0528, 254.524, -58.6311, 1.47 ) }
    dend_16 { pt3dadd( -81.0799, 256.464, -60.4713, 0.29 ) }
    dend_16 { pt3dadd( -81.3788, 256.959, -60.9161, 0.29 ) }
    dend_16 { pt3dadd( -81.6928, 257.441, -61.35, 0.29 ) }
    dend_16 { pt3dadd( -82.1832, 258.141, -61.9432, 0.81 ) }
    dend_16 { pt3dadd( -83.6918, 260.118, -63.5465, 0.22 ) }
    dend_16 { pt3dadd( -84.2202, 260.796, -64.1452, 0.22 ) }
    dend_16 { pt3dadd( -84.8313, 261.595, -64.832, 1.25 ) }
    dend_16 { pt3dadd( -86.2743, 263.579, -66.5591, 0.07 ) }
    dend_16 { pt3dadd( -86.786, 264.327, -67.1834, 0.07 ) }
    dend_16 { pt3dadd( -87.2245, 265.022, -67.7226, 0.52 ) }
    dend_16 { pt3dadd( -88.4153, 267.41, -69.4194, 0.07 ) }
    dend_16 { pt3dadd( -88.9906, 268.817, -70.3367, 0.07 ) }
    dend_16 { pt3dadd( -89.2352, 269.525, -70.7477, 0.74 ) }
    dend_16 { pt3dadd( -89.5906, 270.904, -71.3297, 0.29 ) }
    dend_16 { pt3dadd( -89.7722, 271.868, -71.7001, 1.11 ) }
    dend_16 { pt3dadd( -90.3252, 275.563, -72.9878, 0.07 ) }
    dend_16 { pt3dadd( -90.4666, 276.832, -73.3532, 0.07 ) }
    dend_16 { pt3dadd( -90.5088, 277.465, -73.5475, 0.96 ) }
    dend_16 { pt3dadd( -90.6366, 280.978, -74.6543, 0.07 ) }
    dend_16 { pt3dadd( -90.6497, 282.429, -75.1152, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 53/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -27.0777, 31.2735, -3.45843, 0.74 ) }
    dend_15 { pt3dadd( -27.1096, 35.0667, -5.46619, 0.74 ) }
    dend_15 { pt3dadd( -27.1263, 36.3121, -6.0071, 0.74 ) }
    dend_15 { pt3dadd( -27.1359, 37.4043, -6.39171, 0.74 ) }
    dend_15 { pt3dadd( -27.1471, 38.2236, -6.6355, 0.74 ) }
    dend_15 { pt3dadd( -27.1687, 39.6249, -7.00481, 0.74 ) }
    dend_15 { pt3dadd( -27.2052, 40.8143, -7.28403, 0.74 ) }
    dend_15 { pt3dadd( -27.2523, 41.7881, -7.37786, 0.74 ) }
    dend_15 { pt3dadd( -27.431, 43.4643, -7.74382, 0.74 ) }
    dend_15 { pt3dadd( -27.5902, 44.661, -8.11738, 0.74 ) }
    dend_15 { pt3dadd( -27.7362, 45.4627, -8.42021, 0.74 ) }
    dend_15 { pt3dadd( -28.0112, 46.7688, -8.96731, 0.74 ) }
    dend_15 { pt3dadd( -28.2204, 47.7174, -9.37817, 0.74 ) }
    dend_15 { pt3dadd( -29.0731, 51.4811, -10.9688, 0.74 ) }
    dend_15 { pt3dadd( -29.2232, 52.1448, -11.2389, 0.74 ) }
    dend_15 { pt3dadd( -29.5876, 53.8731, -11.8667, 0.52 ) }
    dend_15 { pt3dadd( -29.9096, 55.5937, -12.3998, 0.88 ) }
    dend_15 { pt3dadd( -30.1384, 57.0714, -12.7647, 0.88 ) }
    dend_15 { pt3dadd( -30.4087, 58.9457, -13.0941, 1.25 ) }
    dend_15 { pt3dadd( -30.5706, 59.9981, -13.2026, 1.25 ) }
    dend_15 { pt3dadd( -30.9682, 62.2038, -13.4525, 1.03 ) }
    dend_15 { pt3dadd( -31.2647, 63.7956, -13.6487, 1.03 ) }
    dend_15 { pt3dadd( -31.6346, 65.575, -13.8765, 1.03 ) }
    dend_15 { pt3dadd( -31.87, 66.5555, -14.0038, 1.03 ) }
    dend_15 { pt3dadd( -32.5781, 68.8913, -14.6647, 0.81 ) }
    dend_15 { pt3dadd( -33.1126, 70.4201, -15.3016, 0.81 ) }
    dend_15 { pt3dadd( -33.579, 71.665, -15.888, 0.81 ) }
    dend_15 { pt3dadd( -34.4151, 73.8412, -16.861, 0.59 ) }
    dend_15 { pt3dadd( -34.7632, 74.7671, -17.2368, 0.59 ) }
    dend_15 { pt3dadd( -36.6116, 80.2795, -19.1586, 0.59 ) }
    dend_15 { pt3dadd( -36.8209, 81.007, -19.3578, 0.59 ) }
    dend_15 { pt3dadd( -37.5039, 83.7606, -19.8703, 0.59 ) }
    dend_15 { pt3dadd( -37.9619, 86.0657, -20.2418, 0.59 ) }
    dend_15 { pt3dadd( -38.2021, 87.7344, -20.4419, 0.88 ) }
    dend_15 { pt3dadd( -38.3194, 89.1743, -20.5506, 0.88 ) }
    dend_15 { pt3dadd( -38.3757, 91.0002, -20.5803, 0.52 ) }
    dend_15 { pt3dadd( -38.3884, 93.2209, -20.8034, 0.52 ) }
    dend_15 { pt3dadd( -38.3488, 96.1139, -21.3686, 0.59 ) }
    dend_15 { pt3dadd( -38.326, 96.6638, -21.4978, 0.59 ) }
    dend_15 { pt3dadd( -38.1988, 98.7282, -21.9593, 0.37 ) }
    dend_15 { pt3dadd( -38.0967, 100.242, -22.2729, 1.25 ) }
    dend_15 { pt3dadd( -37.9826, 101.798, -22.5625, 1.25 ) }
    dend_15 { pt3dadd( -37.8002, 104.176, -22.9348, 0.52 ) }
    dend_15 { pt3dadd( -37.6454, 106.202, -23.1757, 0.52 ) }
    dend_15 { pt3dadd( -37.5184, 108.286, -23.4397, 0.52 ) }
    dend_15 { pt3dadd( -37.4824, 109.432, -23.5923, 0.52 ) }
    dend_15 { pt3dadd( -37.4644, 110.474, -23.8099, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( -37.4742, 111.487, -24.0934, 0.52 ) }
    dend_15 { pt3dadd( -37.5225, 112.667, -24.5016, 1.33 ) }
    dend_15 { pt3dadd( -37.6529, 113.904, -24.9553, 1.33 ) }
    dend_15 { pt3dadd( -37.8324, 114.968, -25.384, 1.33 ) }
    dend_15 { pt3dadd( -38.4483, 118.061, -26.6473, 0.07 ) }
    dend_15 { pt3dadd( -38.7017, 119.197, -27.0896, 0.07 ) }
    dend_15 { pt3dadd( -39.038, 120.591, -27.6218, 1.11 ) }
    dend_15 { pt3dadd( -39.7592, 123.559, -28.6858, 0.07 ) }
    dend_15 { pt3dadd( -40.27, 125.732, -29.4126, 0.07 ) }
    dend_15 { pt3dadd( -40.5329, 126.905, -29.7612, 0.07 ) }
    dend_15 { pt3dadd( -40.7782, 128.135, -29.9802, 0.52 ) }
    dend_15 { pt3dadd( -41.0259, 130.045, -30.1943, 0.22 ) }
    dend_15 { pt3dadd( -41.0879, 131.572, -30.1862, 0.22 ) }
    dend_15 { pt3dadd( -41.0368, 132.815, -29.9618, 0.22 ) }
    dend_15 { pt3dadd( -40.9816, 133.422, -29.7785, 0.22 ) }
    dend_15 { pt3dadd( -40.582, 136.23, -28.7949, 1.55 ) }
    dend_15 { pt3dadd( -40.3514, 137.387, -28.3372, 1.55 ) }
    dend_15 { pt3dadd( -39.6717, 140.236, -27.1033, 0.29 ) }
    dend_15 { pt3dadd( -39.1905, 142.102, -26.3045, 0.88 ) }
    dend_15 { pt3dadd( -38.9258, 143.105, -25.9118, 0.88 ) }
    dend_15 { pt3dadd( -38.487, 144.811, -25.3457, 0.22 ) }
    dend_15 { pt3dadd( -37.9671, 146.807, -24.8335, 0.59 ) }
    dend_15 { pt3dadd( -37.7209, 147.644, -24.6438, 0.59 ) }
    dend_15 { pt3dadd( -37.469, 148.362, -24.5207, 0.59 ) }
    dend_15 { pt3dadd( -37.0236, 149.526, -24.3857, 0.59 ) }
    dend_15 { pt3dadd( -36.7551, 150.291, -24.2809, 0.59 ) }
    dend_15 { pt3dadd( -36.1122, 152.445, -23.9365, 1.03 ) }
    dend_15 { pt3dadd( -35.77, 153.733, -23.7355, 1.03 ) }
    dend_15 { pt3dadd( -35.3743, 155.397, -23.4882, 1.03 ) }
    dend_15 { pt3dadd( -35.1605, 156.402, -23.357, 0.07 ) }
    dend_15 { pt3dadd( -34.8378, 158.683, -23.1019, 0.07 ) }
    dend_15 { pt3dadd( -34.7397, 160.195, -23.0254, 0.29 ) }
    dend_15 { pt3dadd( -34.7598, 161.264, -23.0361, 0.81 ) }
    dend_15 { pt3dadd( -34.9599, 163.69, -23.1268, 0.37 ) }
    dend_15 { pt3dadd( -35.1424, 165.019, -23.2226, 0.37 ) }
    dend_15 { pt3dadd( -35.536, 167.43, -23.5021, 0.37 ) }
    dend_15 { pt3dadd( -35.7878, 169.027, -23.7136, 0.88 ) }
    dend_15 { pt3dadd( -35.9145, 169.863, -23.8685, 0.37 ) }
    dend_15 { pt3dadd( -36.0116, 170.541, -24.0103, 0.37 ) }
    dend_15 { pt3dadd( -36.1901, 171.864, -24.3149, 1.11 ) }
    dend_15 { pt3dadd( -36.2497, 172.603, -24.4922, 1.11 ) }
    dend_15 { pt3dadd( -36.2406, 174.805, -25.0081, 0.37 ) }
    dend_15 { pt3dadd( -36.196, 177.087, -25.5862, 0.37 ) }
    dend_15 { pt3dadd( -36.2023, 178.009, -25.8736, 0.37 ) }
    dend_15 { pt3dadd( -36.1945, 178.368, -26.0418, 0.37 ) }
    dend_15 { pt3dadd( -36.1623, 178.735, -26.2539, 0.37 ) }
    dend_15 { pt3dadd( -35.987, 179.795, -26.9082, 1.4 ) }
    dend_15 { pt3dadd( -35.5155, 181.69, -28.1208, 0.07 ) }
    dend_15 { pt3dadd( -35.2108, 182.668, -28.6745, 1.25 ) }
    dend_15 { pt3dadd( -34.1295, 185.522, -30.2238, 0.07 ) }
    dend_15 { pt3dadd( -33.6702, 186.608, -30.7735, 0.07 ) }
    dend_15 { pt3dadd( -32.8292, 188.429, -31.5821, 0.07 ) }
    dend_15 { pt3dadd( -32.3321, 189.422, -31.9486, 0.07 ) }
    dend_15 { pt3dadd( -31.7416, 190.555, -32.265, 0.07 ) }
    dend_15 { pt3dadd( -31.0704, 191.955, -32.567, 0.07 ) }
    dend_15 { pt3dadd( -30.665, 192.961, -32.7068, 1.11 ) }
    dend_15 { pt3dadd( -29.891, 195.352, -33.0211, 0.07 ) }
    dend_15 { pt3dadd( -29.4264, 197.203, -33.2518, 0.07 ) }
    dend_15 { pt3dadd( -29.2024, 198.38, -33.3917, 1.55 ) }
    dend_15 { pt3dadd( -28.89, 200.561, -33.6413, 0.07 ) }
    dend_15 { pt3dadd( -28.8312, 201.201, -33.7114, 0.07 ) }
    dend_15 { pt3dadd( -28.7682, 202.323, -33.8307, 0.07 ) }
    dend_15 { pt3dadd( -28.7501, 203.564, -33.9965, 0.07 ) }
    dend_15 { pt3dadd( -28.7348, 204.822, -34.1122, 0.44 ) }
    dend_15 { pt3dadd( -28.72, 205.876, -34.1692, 0.44 ) }
    dend_15 { pt3dadd( -28.6982, 206.546, -34.1849, 0.44 ) }
    dend_15 { pt3dadd( -28.6614, 207.228, -34.1563, 1.33 ) }
    dend_15 { pt3dadd( -28.5117, 209.516, -33.9691, 0.07 ) }
    dend_15 { pt3dadd( -28.3575, 211.677, -33.7893, 0.07 ) }
    dend_15 { pt3dadd( -28.2701, 212.824, -33.6989, 0.07 ) }
    dend_15 { pt3dadd( -28.0912, 215.034, -33.5437, 1.62 ) }
    dend_15 { pt3dadd( -27.8421, 217.98, -33.3742, 0.07 ) }
    dend_15 { pt3dadd( -27.7744, 218.745, -33.342, 0.07 ) }
    dend_15 { pt3dadd( -27.6485, 220.249, -33.3172, 0.29 ) }
    dend_15 { pt3dadd( -27.5715, 221.312, -33.3828, 0.29 ) }
    dend_15 { pt3dadd( -27.4853, 222.172, -33.4583, 0.29 ) }
    dend_15 { pt3dadd( -27.3787, 223.119, -33.5715, 0.29 ) }
    dend_15 { pt3dadd( -27.2859, 223.873, -33.6855, 0.29 ) }
    dend_15 { pt3dadd( -27.0978, 225.385, -33.9665, 0.29 ) }
    dend_15 { pt3dadd( -26.9161, 226.689, -34.2408, 0.29 ) }
    dend_15 { pt3dadd( -26.5905, 228.807, -34.7558, 1.33 ) }
    dend_15 { pt3dadd( -26.2138, 230.843, -35.2965, 0.07 ) }
    dend_15 { pt3dadd( -25.9136, 232.343, -35.7164, 0.07 ) }
    dend_15 { pt3dadd( -25.56, 234.143, -36.2236, 0.88 ) }
    dend_15 { pt3dadd( -25.0974, 236.471, -37.0253, 0.07 ) }
    dend_15 { pt3dadd( -24.972, 237.174, -37.2971, 0.74 ) }
    dend_15 { pt3dadd( -24.7061, 239.113, -38.0861, 0.07 ) }
    dend_15 { pt3dadd( -24.6013, 240.019, -38.4487, 0.88 ) }
    dend_15 { pt3dadd( -24.3886, 241.906, -39.1823, 0.07 ) }
    dend_15 { pt3dadd( -24.1459, 243.9, -39.8822, 0.52 ) }
    dend_15 { pt3dadd( -23.9242, 245.428, -40.4514, 0.15 ) }
    dend_15 { pt3dadd( -23.728, 246.754, -40.9646, 0.15 ) }
    dend_15 { pt3dadd( -23.5702, 247.823, -41.3952, 0.15 ) }
    dend_15 { pt3dadd( -23.269, 249.442, -42.0431, 0.15 ) }
    dend_15 { pt3dadd( -22.9267, 250.898, -42.5772, 0.15 ) }
    dend_15 { pt3dadd( -22.5214, 252.443, -42.9711, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 96/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 16.5464, -6.2373, 10.9573, 0.37 ) }
    dend_8 { pt3dadd( 16.2829, -8.40074, 12.2855, 0.37 ) }
    dend_8 { pt3dadd( 16.1864, -8.98142, 12.5434, 0.37 ) }
    dend_8 { pt3dadd( 16.0924, -9.43261, 12.6944, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_8 { pt3dadd( 15.9357, -10.0379, 12.8715, 0.59 ) }
    dend_8 { pt3dadd( 15.7628, -10.646, 13.027, 0.59 ) }
    dend_8 { pt3dadd( 15.6549, -11.0362, 13.136, 0.59 ) }
    dend_8 { pt3dadd( 15.4687, -11.7835, 13.3316, 0.29 ) }
    dend_8 { pt3dadd( 15.3808, -12.2908, 13.5206, 0.59 ) }
    dend_8 { pt3dadd( 15.2694, -13.2203, 13.9276, 0.44 ) }
    dend_8 { pt3dadd( 15.2313, -13.8109, 14.2135, 0.44 ) }
    dend_8 { pt3dadd( 15.2409, -14.511, 14.5639, 1.4 ) }
    dend_8 { pt3dadd( 15.3722, -16.1646, 15.3932, 0.37 ) }
    dend_8 { pt3dadd( 15.4441, -16.8677, 15.7267, 0.37 ) }
    dend_8 { pt3dadd( 15.52, -17.5552, 16.0167, 0.37 ) }
    dend_8 { pt3dadd( 15.5712, -18.0273, 16.1772, 0.37 ) }
    dend_8 { pt3dadd( 15.6871, -19.4266, 16.5412, 0.59 ) }
    dend_8 { pt3dadd( 15.701, -19.9855, 16.6629, 0.59 ) }
    dend_8 { pt3dadd( 15.692, -21.0649, 16.8664, 1.11 ) }
    dend_8 { pt3dadd( 15.678, -21.7382, 17.0062, 0.88 ) }
    dend_8 { pt3dadd( 15.6675, -22.6794, 17.2055, 0.88 ) }
    dend_8 { pt3dadd( 15.6626, -23.3083, 17.3356, 0.88 ) }
    dend_8 { pt3dadd( 15.663, -24.7512, 17.6226, 1.33 ) }
    dend_8 { pt3dadd( 15.7349, -26.5125, 17.9686, 0.74 ) }
    dend_8 { pt3dadd( 15.8041, -27.2555, 18.1443, 0.74 ) }
    dend_8 { pt3dadd( 15.8715, -27.8991, 18.3088, 0.74 ) }
    dend_8 { pt3dadd( 15.9434, -28.583, 18.4853, 0.74 ) }
    dend_8 { pt3dadd( 16.0173, -29.3018, 18.6542, 0.74 ) }
    dend_8 { pt3dadd( 16.1102, -30.0544, 18.7925, 0.52 ) }
    dend_8 { pt3dadd( 16.2272, -31.1446, 19.0363, 0.22 ) }
    dend_8 { pt3dadd( 16.311, -31.9761, 19.2568, 0.22 ) }
    dend_8 { pt3dadd( 16.3393, -32.5834, 19.445, 0.22 ) }
    dend_8 { pt3dadd( 16.3242, -33.1416, 19.6456, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 29/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 16.5464, -6.2373, 10.9573, 0.59 ) }
    dend_7 { pt3dadd( 18.0785, -5.91269, 12.7719, 0.59 ) }
    dend_7 { pt3dadd( 18.6563, -5.84536, 13.3778, 0.81 ) }
    dend_7 { pt3dadd( 19.0288, -5.82755, 13.7031, 0.81 ) }
    dend_7 { pt3dadd( 19.451, -5.82019, 14.0204, 0.44 ) }
    dend_7 { pt3dadd( 20.8271, -5.79108, 14.9274, 0.74 ) }
    dend_7 { pt3dadd( 21.3552, -5.77296, 15.2362, 0.74 ) }
    dend_7 { pt3dadd( 21.6607, -5.77307, 15.3578, 0.74 ) }
    dend_7 { pt3dadd( 22.4305, -5.85459, 15.7174, 0.74 ) }
    dend_7 { pt3dadd( 22.8502, -5.92925, 15.9296, 0.74 ) }
    dend_7 { pt3dadd( 23.3874, -6.03407, 16.2022, 0.74 ) }
    dend_7 { pt3dadd( 23.906, -6.1123, 16.4627, 0.74 ) }
    dend_7 { pt3dadd( 24.3715, -6.17549, 16.7452, 0.52 ) }
    dend_7 { pt3dadd( 25.6715, -6.27823, 17.6129, 0.07 ) }
    dend_7 { pt3dadd( 25.9296, -6.29557, 17.7959, 0.07 ) }
    dend_7 { pt3dadd( 26.5971, -6.35662, 18.2893, 0.74 ) }
    dend_7 { pt3dadd( 27.4225, -6.44149, 18.8845, 0.44 ) }
    dend_7 { pt3dadd( 27.7197, -6.45924, 19.1096, 0.44 ) }
    dend_7 { pt3dadd( 28.2094, -6.45074, 19.4524, 0.44 ) }
    dend_7 { pt3dadd( 28.5574, -6.41373, 19.6742, 0.44 ) }
    dend_7 { pt3dadd( 29.1832, -6.40269, 20.0678, 0.44 ) }
    dend_7 { pt3dadd( 29.4131, -6.43435, 20.2041, 0.44 ) }
    dend_7 { pt3dadd( 30.4411, -6.66764, 20.7271, 0.66 ) }
    dend_7 { pt3dadd( 30.8979, -6.77844, 20.9625, 0.66 ) }
    dend_7 { pt3dadd( 31.3889, -6.8934, 21.255, 0.66 ) }
    dend_7 { pt3dadd( 32.4847, -7.13531, 21.8958, 0.29 ) }
    dend_7 { pt3dadd( 33.112, -7.26887, 22.2368, 0.29 ) }
    dend_7 { pt3dadd( 33.8384, -7.43619, 22.6194, 0.29 ) }
    dend_7 { pt3dadd( 34.7172, -7.66495, 23.0323, 0.52 ) }
    dend_7 { pt3dadd( 35.8646, -7.97344, 23.6672, 0.52 ) }
    // Section: dend_38, id: dend_38, parent: dend_28 (entry count 59/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 8.24375, 45.0695, 6.00549, 0.22 ) }
    dend_38 { pt3dadd( 8.6849, 45.5066, 5.96946, 0.22 ) }
    dend_38 { pt3dadd( 8.81962, 45.6576, 5.95713, 0.22 ) }
    dend_38 { pt3dadd( 9.01931, 45.9209, 5.93905, 1.03 ) }
    dend_38 { pt3dadd( 9.21556, 46.2027, 5.92001, 1.03 ) }
    dend_38 { pt3dadd( 9.41435, 46.4911, 5.89699, 0.22 ) }
    dend_38 { pt3dadd( 9.51013, 46.6157, 5.88267, 0.37 ) }
    dend_38 { pt3dadd( 9.69095, 46.8345, 5.82412, 0.37 ) }
    dend_38 { pt3dadd( 9.88947, 47.0736, 5.74492, 0.37 ) }
    dend_38 { pt3dadd( 10.0163, 47.2265, 5.68814, 0.37 ) }
    dend_38 { pt3dadd( 10.2217, 47.4578, 5.59257, 0.37 ) }
    dend_38 { pt3dadd( 10.5074, 47.7829, 5.45879, 0.37 ) }
    dend_38 { pt3dadd( 10.759, 48.0511, 5.3449, 1.18 ) }
    dend_38 { pt3dadd( 11.2067, 48.5117, 5.14956, 0.52 ) }
    dend_38 { pt3dadd( 11.4524, 48.7606, 5.04777, 0.81 ) }
    dend_38 { pt3dadd( 11.7919, 49.1084, 4.917, 0.81 ) }
    dend_38 { pt3dadd( 11.9841, 49.3183, 4.84994, 0.81 ) }
    dend_38 { pt3dadd( 12.2578, 49.6541, 4.74087, 0.52 ) }
    dend_38 { pt3dadd( 12.4481, 49.8767, 4.66569, 0.66 ) }
    dend_38 { pt3dadd( 12.6842, 50.1408, 4.56054, 0.66 ) }
    dend_38 { pt3dadd( 12.9359, 50.422, 4.44261, 0.66 ) }
    dend_38 { pt3dadd( 13.1484, 50.6505, 4.36079, 0.66 ) }
    dend_38 { pt3dadd( 13.695, 51.2038, 4.1868, 0.66 ) }
    dend_38 { pt3dadd( 14.0863, 51.5911, 4.08565, 1.03 ) }
    dend_38 { pt3dadd( 14.2303, 51.7236, 4.06341, 1.03 ) }
    dend_38 { pt3dadd( 14.7422, 52.1456, 4.03277, 0.44 ) }
    dend_38 { pt3dadd( 15.2613, 52.4955, 4.05973, 0.52 ) }
    dend_38 { pt3dadd( 15.4345, 52.5906, 4.08458, 0.52 ) }
    dend_38 { pt3dadd( 15.5751, 52.6611, 4.12038, 0.52 ) }
    dend_38 { pt3dadd( 15.9464, 52.856, 4.22287, 0.52 ) }
    dend_38 { pt3dadd( 16.223, 52.9947, 4.33164, 0.52 ) }
    dend_38 { pt3dadd( 16.5648, 53.1716, 4.48424, 0.29 ) }
    dend_38 { pt3dadd( 16.7585, 53.2756, 4.56505, 0.29 ) }
    dend_38 { pt3dadd( 17.2528, 53.5485, 4.77671, 0.29 ) }
    dend_38 { pt3dadd( 17.5858, 53.7449, 4.91746, 0.74 ) }
    dend_38 { pt3dadd( 18.3172, 54.2252, 5.2223, 0.81 ) }
    dend_38 { pt3dadd( 18.722, 54.5184, 5.394, 0.07 ) }
    dend_38 { pt3dadd( 18.9213, 54.6693, 5.46698, 0.07 ) }
    dend_38 { pt3dadd( 19.0353, 54.7519, 5.49781, 0.07 ) }
    dend_38 { pt3dadd( 19.3415, 54.9767, 5.53925, 0.07 ) }
    dend_38 { pt3dadd( 19.4962, 55.0917, 5.52974, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_38 { pt3dadd( 19.6485, 55.2043, 5.51457, 0.07 ) }
    dend_38 { pt3dadd( 19.9398, 55.424, 5.524, 0.07 ) }
    dend_38 { pt3dadd( 20.2324, 55.6462, 5.54393, 0.07 ) }
    dend_38 { pt3dadd( 20.375, 55.7487, 5.5579, 0.07 ) }
    dend_38 { pt3dadd( 20.7298, 55.9767, 5.60465, 0.07 ) }
    dend_38 { pt3dadd( 21.4229, 56.3978, 5.72535, 0.07 ) }
    dend_38 { pt3dadd( 21.8397, 56.658, 5.83863, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 7/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 8.24375, 45.0695, 6.00549, 0.96 ) }
    dend_29 { pt3dadd( 7.3152, 46.0717, 6.46269, 0.96 ) }
    dend_29 { pt3dadd( 6.16943, 47.4232, 7.03587, 0.96 ) }
    dend_29 { pt3dadd( 4.90196, 48.9181, 7.66992, 0.66 ) }
    dend_29 { pt3dadd( 3.22936, 50.891, 8.50665, 0.96 ) }
    dend_29 { pt3dadd( 1.97705, 52.3681, 9.13311, 0.96 ) }
    dend_29 { pt3dadd( 0.421811, 54.2025, 9.91113, 0.96 ) }
    dend_29 { pt3dadd( -0.204714, 55.0434, 10.2345, 0.96 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 15/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 110.541, 131.653, -10.434, 0.37 ) }
    dend_27 { pt3dadd( 110.485, 133.754, -8.89639, 0.37 ) }
    dend_27 { pt3dadd( 110.471, 134.554, -8.37261, 0.37 ) }
    dend_27 { pt3dadd( 110.495, 135.291, -7.95072, 0.37 ) }
    dend_27 { pt3dadd( 110.749, 137.385, -7.02424, 0.37 ) }
    dend_27 { pt3dadd( 110.918, 138.501, -6.6351, 0.37 ) }
    dend_27 { pt3dadd( 111.006, 138.999, -6.47562, 0.37 ) }
    dend_27 { pt3dadd( 111.221, 139.82, -6.3133, 0.66 ) }
    dend_27 { pt3dadd( 111.543, 140.818, -6.16375, 0.66 ) }
    dend_27 { pt3dadd( 112.271, 142.682, -5.99792, 0.07 ) }
    dend_27 { pt3dadd( 112.779, 143.797, -5.98341, 0.07 ) }
    dend_27 { pt3dadd( 113.686, 145.561, -5.98197, 0.59 ) }
    dend_27 { pt3dadd( 114.73, 147.454, -6.00621, 0.29 ) }
    dend_27 { pt3dadd( 115.132, 148.194, -6.02019, 0.29 ) }
    dend_27 { pt3dadd( 115.604, 149.082, -6.04812, 0.29 ) }
    dend_27 { pt3dadd( 116.208, 150.211, -6.11366, 0.29 ) }
    dend_27 { pt3dadd( 116.617, 151.03, -6.1898, 0.29 ) }
    dend_27 { pt3dadd( 116.92, 151.766, -6.28209, 0.29 ) }
    dend_27 { pt3dadd( 117.259, 152.913, -6.40449, 0.29 ) }
    dend_27 { pt3dadd( 117.608, 154.458, -6.5535, 0.29 ) }
    dend_27 { pt3dadd( 117.793, 155.505, -6.64606, 0.29 ) }
    dend_27 { pt3dadd( 118.072, 157.372, -6.80481, 0.66 ) }
    dend_27 { pt3dadd( 118.263, 158.61, -6.91443, 0.66 ) }
    dend_27 { pt3dadd( 118.5, 160.023, -7.10076, 0.07 ) }
    dend_27 { pt3dadd( 118.705, 161.129, -7.28497, 0.07 ) }
    dend_27 { pt3dadd( 118.901, 162.199, -7.50966, 0.07 ) }
    dend_27 { pt3dadd( 119.035, 162.903, -7.68365, 0.07 ) }
    dend_27 { pt3dadd( 119.184, 163.673, -7.90182, 0.07 ) }
    dend_27 { pt3dadd( 119.619, 166.133, -8.77955, 0.59 ) }
    dend_27 { pt3dadd( 119.84, 167.34, -9.38606, 0.59 ) }
    dend_27 { pt3dadd( 120.002, 168.265, -9.97203, 0.07 ) }
    dend_27 { pt3dadd( 120.097, 168.837, -10.3757, 0.07 ) }
    dend_27 { pt3dadd( 120.189, 169.469, -10.872, 0.07 ) }
    dend_27 { pt3dadd( 120.351, 170.797, -12.0849, 0.07 ) }
    dend_27 { pt3dadd( 120.527, 172.197, -13.8467, 0.07 ) }
    dend_27 { pt3dadd( 120.57, 172.527, -14.4059, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 110.541, 131.653, -10.434, 0.22 ) }
    dend_24 { pt3dadd( 111.847, 132.043, -10.933, 0.22 ) }
    dend_24 { pt3dadd( 112.498, 132.325, -11.1737, 0.22 ) }
    dend_24 { pt3dadd( 113.055, 132.579, -11.3792, 0.44 ) }
    dend_24 { pt3dadd( 114.38, 133.136, -11.8755, 0.44 ) }
    dend_24 { pt3dadd( 114.994, 133.365, -12.162, 0.44 ) }
    dend_24 { pt3dadd( 116.049, 133.74, -12.6933, 0.44 ) }
    dend_24 { pt3dadd( 116.913, 134.038, -13.1553, 0.74 ) }
    dend_24 { pt3dadd( 117.801, 134.361, -13.6393, 0.74 ) }
    dend_24 { pt3dadd( 118.881, 134.762, -14.2303, 0.74 ) }
    dend_24 { pt3dadd( 120.963, 135.527, -15.3752, 0.74 ) }
    dend_24 { pt3dadd( 122.031, 135.943, -16.034, 0.37 ) }
    dend_24 { pt3dadd( 123.196, 136.458, -16.8167, 0.37 ) }
    dend_24 { pt3dadd( 123.851, 136.849, -17.3176, 0.37 ) }
    dend_24 { pt3dadd( 124.587, 137.477, -17.9491, 0.37 ) }
    dend_24 { pt3dadd( 124.9, 137.859, -18.2527, 0.37 ) }
    dend_24 { pt3dadd( 125.871, 139.623, -19.305, 1.11 ) }
    dend_24 { pt3dadd( 126.219, 140.461, -19.7401, 1.11 ) }
    dend_24 { pt3dadd( 126.715, 141.755, -20.3709, 0.52 ) }
    dend_24 { pt3dadd( 127.082, 142.66, -20.8008, 0.52 ) }
    dend_24 { pt3dadd( 127.259, 143.121, -21.0063, 0.52 ) }
    dend_24 { pt3dadd( 127.696, 144.176, -21.4392, 0.81 ) }
    dend_24 { pt3dadd( 128.414, 145.565, -21.9048, 1.25 ) }
    dend_24 { pt3dadd( 129.149, 146.793, -22.3467, 0.22 ) }
    dend_24 { pt3dadd( 129.495, 147.251, -22.5152, 1.18 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 76/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.95616, 165.749, -12.9482, 0.07 ) }
    dend_22 { pt3dadd( -9.22585, 168.764, -6.43422, 0.07 ) }
    dend_22 { pt3dadd( -9.67229, 169.236, -5.60372, 0.44 ) }
    dend_22 { pt3dadd( -10.2681, 169.972, -4.64697, 0.07 ) }
    dend_22 { pt3dadd( -10.9393, 170.88, -3.66965, 0.88 ) }
    dend_22 { pt3dadd( -12.0881, 172.534, -2.14246, 0.07 ) }
    dend_22 { pt3dadd( -12.5553, 173.234, -1.5787, 0.07 ) }
    dend_22 { pt3dadd( -12.9462, 173.947, -1.30045, 0.81 ) }
    dend_22 { pt3dadd( -13.9952, 176.011, -0.604004, 0.07 ) }
    dend_22 { pt3dadd( -14.5589, 177.188, -0.312209, 0.74 ) }
    dend_22 { pt3dadd( -14.9964, 178.14, -0.163531, 0.22 ) }
    dend_22 { pt3dadd( -15.4734, 179.181, -0.0580046, 0.22 ) }
    dend_22 { pt3dadd( -15.6812, 179.639, -0.016746, 1.18 ) }
    dend_22 { pt3dadd( -16.3734, 181.231, 0.102043, 0.07 ) }
    dend_22 { pt3dadd( -17.3736, 183.813, 0.236851, 0.22 ) }
    dend_22 { pt3dadd( -17.7305, 184.858, 0.264739, 0.22 ) }
    dend_22 { pt3dadd( -18.1526, 186.203, 0.312589, 0.22 ) }
    dend_22 { pt3dadd( -18.2893, 186.665, 0.332928, 0.22 ) }
    dend_22 { pt3dadd( -18.5765, 187.666, 0.338687, 1.18 ) }
    dend_22 { pt3dadd( -19.1052, 189.659, 0.274007, 0.07 ) }
    dend_22 { pt3dadd( -19.3295, 190.582, 0.210108, 0.07 ) }
    dend_22 { pt3dadd( -19.4567, 191.084, 0.163238, 0.07 ) }
    dend_22 { pt3dadd( -19.6421, 191.857, 0.0793287, 1.25 ) }
    dend_22 { pt3dadd( -20.2005, 194.032, -0.170766, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_22 { pt3dadd( -20.4257, 194.877, -0.270606, 0.29 ) }
    dend_22 { pt3dadd( -20.5777, 195.405, -0.327866, 0.59 ) }
    dend_22 { pt3dadd( -20.9937, 196.794, -0.453528, 0.07 ) }
    dend_22 { pt3dadd( -21.215, 197.551, -0.503136, 0.44 ) }
    dend_22 { pt3dadd( -21.6769, 199.061, -0.546268, 0.22 ) }
    dend_22 { pt3dadd( -22.0135, 200.036, -0.508993, 0.66 ) }
    dend_22 { pt3dadd( -22.7258, 201.926, -0.410358, 0.07 ) }
    dend_22 { pt3dadd( -23.0056, 202.662, -0.36371, 0.07 ) }
    dend_22 { pt3dadd( -23.5097, 204.034, -0.26312, 0.52 ) }
    dend_22 { pt3dadd( -24.0771, 205.68, -0.101936, 0.22 ) }
    dend_22 { pt3dadd( -24.6309, 207.493, 0.116177, 0.81 ) }
    dend_22 { pt3dadd( -24.8531, 208.481, 0.254918, 0.81 ) }
    dend_22 { pt3dadd( -25.0595, 209.953, 0.480327, 0.22 ) }
    dend_22 { pt3dadd( -25.1331, 210.965, 0.636718, 0.22 ) }
    dend_22 { pt3dadd( -25.1217, 212.387, 0.852389, 0.81 ) }
    dend_22 { pt3dadd( -25.0835, 213.266, 0.973558, 0.81 ) }
    dend_22 { pt3dadd( -25.0586, 215.126, 1.17563, 0.29 ) }
    dend_22 { pt3dadd( -25.1344, 216.788, 1.33202, 0.29 ) }
    dend_22 { pt3dadd( -25.2554, 217.891, 1.41716, 0.29 ) }
    dend_22 { pt3dadd( -25.6061, 219.808, 1.52865, 0.29 ) }
    dend_22 { pt3dadd( -25.9915, 221.332, 1.58478, 1.11 ) }
    dend_22 { pt3dadd( -26.8842, 224.146, 1.66716, 0.07 ) }
    dend_22 { pt3dadd( -27.4292, 225.569, 1.69746, 0.07 ) }
    dend_22 { pt3dadd( -28.0148, 226.936, 1.71962, 0.44 ) }
    dend_22 { pt3dadd( -28.5307, 227.968, 1.72776, 0.44 ) }
    dend_22 { pt3dadd( -28.9337, 228.641, 1.72466, 0.44 ) }
    dend_22 { pt3dadd( -30.0407, 230.361, 1.63993, 0.37 ) }
    dend_22 { pt3dadd( -30.1426, 230.489, 1.63358, 0.81 ) }
    dend_22 { pt3dadd( -30.7702, 231.161, 1.67074, 0.29 ) }
    dend_22 { pt3dadd( -31.4295, 231.786, 1.81504, 0.29 ) }
    dend_22 { pt3dadd( -32.2894, 232.544, 2.10482, 0.29 ) }
    dend_22 { pt3dadd( -33.172, 233.253, 2.46103, 0.74 ) }
    dend_22 { pt3dadd( -34.9559, 234.707, 3.29902, 0.07 ) }
    dend_22 { pt3dadd( -36.1463, 235.803, 3.9424, 0.59 ) }
    dend_22 { pt3dadd( -36.9788, 236.707, 4.60932, 0.07 ) }
    dend_22 { pt3dadd( -37.4027, 237.256, 5.05247, 0.07 ) }
    dend_22 { pt3dadd( -38.1606, 238.47, 6.05519, 0.66 ) }
    dend_22 { pt3dadd( -38.6168, 239.39, 6.83351, 0.15 ) }
    dend_22 { pt3dadd( -38.8331, 240.001, 7.31339, 0.66 ) }
    dend_22 { pt3dadd( -39.6264, 243.099, 9.51828, 0.07 ) }
    dend_22 { pt3dadd( -39.7252, 243.652, 9.92773, 0.07 ) }
    dend_22 { pt3dadd( -39.8317, 244.593, 10.6339, 0.44 ) }
    dend_22 { pt3dadd( -39.9313, 245.864, 11.5165, 0.44 ) }
    dend_22 { pt3dadd( -39.9925, 246.43, 11.8379, 0.44 ) }
    dend_22 { pt3dadd( -40.2067, 247.567, 12.2065, 1.11 ) }
    dend_22 { pt3dadd( -40.636, 248.873, 12.1853, 0.07 ) }
    dend_22 { pt3dadd( -41.2884, 250.142, 12.0096, 0.07 ) }
    dend_22 { pt3dadd( -42.2718, 251.704, 11.6449, 0.37 ) }
    dend_22 { pt3dadd( -43.0825, 252.859, 11.2762, 0.37 ) }
    dend_22 { pt3dadd( -43.9895, 254.07, 10.7664, 0.07 ) }
    dend_22 { pt3dadd( -44.8476, 255.11, 10.2474, 0.07 ) }
    dend_22 { pt3dadd( -45.7382, 256.12, 9.63178, 0.07 ) }
    dend_22 { pt3dadd( -46.7235, 257.142, 8.87842, 0.37 ) }
    dend_22 { pt3dadd( -47.3664, 257.78, 8.38551, 0.37 ) }
    dend_22 { pt3dadd( -48.7611, 259.058, 7.29903, 0.37 ) }
    dend_22 { pt3dadd( -49.542, 259.682, 6.67636, 0.07 ) }
    dend_22 { pt3dadd( -50.8029, 260.568, 5.69031, 0.07 ) }
    dend_22 { pt3dadd( -52.2455, 261.441, 4.66097, 0.07 ) }
    dend_22 { pt3dadd( -53.4797, 262.086, 3.92725, 0.07 ) }
    dend_22 { pt3dadd( -54.6963, 262.683, 3.2822, 0.37 ) }
    dend_22 { pt3dadd( -56.0759, 263.315, 2.70528, 0.07 ) }
    dend_22 { pt3dadd( -56.638, 263.57, 2.50852, 0.07 ) }
    dend_22 { pt3dadd( -57.8688, 264.099, 2.27279, 0.07 ) }
    dend_22 { pt3dadd( -59.2183, 264.658, 2.19104, 0.07 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 64/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.95616, 165.749, -12.9482, 0.07 ) }
    dend_21 { pt3dadd( -6.74182, 167.04, -12.9198, 0.07 ) }
    dend_21 { pt3dadd( -7.24124, 167.909, -12.8907, 0.07 ) }
    dend_21 { pt3dadd( -7.5474, 168.469, -12.9119, 0.07 ) }
    dend_21 { pt3dadd( -7.88674, 169.14, -12.9557, 0.07 ) }
    dend_21 { pt3dadd( -8.24065, 169.884, -13.0435, 0.07 ) }
    dend_21 { pt3dadd( -8.92961, 171.421, -13.2618, 1.03 ) }
    dend_21 { pt3dadd( -9.01569, 171.63, -13.2959, 1.03 ) }
    dend_21 { pt3dadd( -9.55079, 173.124, -13.5792, 0.07 ) }
    dend_21 { pt3dadd( -9.8575, 174.142, -13.7869, 0.66 ) }
    dend_21 { pt3dadd( -10.1684, 175.418, -14.0566, 0.15 ) }
    dend_21 { pt3dadd( -10.2416, 175.849, -14.1449, 0.74 ) }
    dend_21 { pt3dadd( -10.2755, 176.462, -14.2543, 0.74 ) }
    dend_21 { pt3dadd( -10.2301, 177.011, -14.3391, 0.74 ) }
    dend_21 { pt3dadd( -10.0723, 177.721, -14.4249, 0.07 ) }
    dend_21 { pt3dadd( -9.84187, 178.404, -14.5081, 0.07 ) }
    dend_21 { pt3dadd( -9.42971, 179.359, -14.6141, 0.07 ) }
    dend_21 { pt3dadd( -8.81046, 180.493, -14.7576, 0.07 ) }
    dend_21 { pt3dadd( -7.73874, 182.105, -14.9809, 0.07 ) }
    dend_21 { pt3dadd( -7.42869, 182.509, -15.0692, 0.07 ) }
    dend_21 { pt3dadd( -6.91428, 183.102, -15.2365, 1.11 ) }
    dend_21 { pt3dadd( -6.66759, 183.352, -15.3215, 1.11 ) }
    dend_21 { pt3dadd( -5.47026, 184.41, -15.7459, 0.07 ) }
    dend_21 { pt3dadd( -4.7414, 184.985, -16.0049, 1.03 ) }
    dend_21 { pt3dadd( -3.01111, 186.264, -16.5795, 0.07 ) }
    dend_21 { pt3dadd( -2.57791, 186.603, -16.7231, 0.52 ) }
    dend_21 { pt3dadd( -2.05611, 187.06, -16.8914, 0.52 ) }
    dend_21 { pt3dadd( -1.67472, 187.459, -17.0403, 0.52 ) }
    dend_21 { pt3dadd( -1.42786, 187.753, -17.1473, 0.52 ) }
    dend_21 { pt3dadd( -0.605577, 188.808, -17.4952, 0.07 ) }
    dend_21 { pt3dadd( -0.0799889, 189.528, -17.6939, 0.07 ) }
    dend_21 { pt3dadd( 0.517936, 190.394, -17.9329, 1.69 ) }
    dend_21 { pt3dadd( 1.97632, 192.662, -18.5325, 0.07 ) }
    dend_21 { pt3dadd( 2.37426, 193.34, -18.7567, 0.07 ) }
    dend_21 { pt3dadd( 2.6814, 193.902, -18.9696, 0.07 ) }
    dend_21 { pt3dadd( 2.93906, 194.443, -19.1885, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_21 { pt3dadd( 3.18447, 195.05, -19.4331, 0.07 ) }
    dend_21 { pt3dadd( 3.44415, 195.934, -19.7892, 1.11 ) }
    dend_21 { pt3dadd( 3.78619, 198.234, -20.6153, 0.07 ) }
    dend_21 { pt3dadd( 3.82312, 198.914, -20.864, 0.07 ) }
    dend_21 { pt3dadd( 3.82131, 200.072, -21.3297, 0.07 ) }
    dend_21 { pt3dadd( 3.78438, 200.745, -21.607, 0.59 ) }
    dend_21 { pt3dadd( 3.668, 201.884, -22.0759, 0.07 ) }
    dend_21 { pt3dadd( 3.56791, 202.497, -22.3352, 0.66 ) }
    dend_21 { pt3dadd( 3.41223, 203.15, -22.652, 0.07 ) }
    dend_21 { pt3dadd( 3.11105, 204.165, -23.2592, 0.66 ) }
    dend_21 { pt3dadd( 2.90069, 204.806, -23.6919, 0.07 ) }
    dend_21 { pt3dadd( 2.84944, 204.962, -23.8064, 0.07 ) }
    dend_21 { pt3dadd( 2.53349, 205.906, -24.5099, 1.18 ) }
    dend_21 { pt3dadd( 1.96022, 207.708, -25.8394, 0.22 ) }
    dend_21 { pt3dadd( 1.80485, 208.29, -26.2969, 0.22 ) }
    dend_21 { pt3dadd( 1.74549, 208.697, -26.68, 0.22 ) }
    dend_21 { pt3dadd( 1.73924, 209.675, -27.7049, 0.22 ) }
    dend_21 { pt3dadd( 1.77166, 209.948, -28.0341, 0.22 ) }
    dend_21 { pt3dadd( 1.9056, 210.368, -28.5787, 1.33 ) }
    dend_21 { pt3dadd( 2.56626, 211.65, -30.2753, 1.03 ) }
    dend_21 { pt3dadd( 3.57244, 213.264, -32.3875, 0.29 ) }
    dend_21 { pt3dadd( 3.83836, 213.644, -32.8969, 1.18 ) }
    dend_21 { pt3dadd( 4.51423, 214.6, -34.0499, 0.07 ) }
    dend_21 { pt3dadd( 5.12034, 215.515, -34.9974, 0.07 ) }
    dend_21 { pt3dadd( 5.59828, 216.335, -35.6736, 0.07 ) }
    dend_21 { pt3dadd( 5.96115, 217.076, -36.0509, 1.25 ) }
    dend_21 { pt3dadd( 6.28166, 218.058, -36.2899, 0.44 ) }
    dend_21 { pt3dadd( 6.66607, 219.838, -36.5386, 0.44 ) }
    dend_21 { pt3dadd( 6.78887, 220.843, -36.5725, 0.44 ) }
    dend_21 { pt3dadd( 6.78091, 221.443, -36.5684, 1.18 ) }
    dend_21 { pt3dadd( 6.73369, 221.894, -36.5453, 0.07 ) }
    dend_21 { pt3dadd( 6.51523, 223.444, -36.3988, 0.07 ) }
    dend_21 { pt3dadd( 6.44342, 223.885, -36.3335, 0.66 ) }
    dend_21 { pt3dadd( 6.42475, 223.997, -36.3186, 0.07 ) }
    dend_21 { pt3dadd( 6.26314, 225.177, -36.1891, 0.07 ) }
    dend_21 { pt3dadd( 6.17528, 226.053, -36.1114, 1.03 ) }
    dend_21 { pt3dadd( 6.14188, 226.456, -36.0876, 1.03 ) }
    dend_21 { pt3dadd( 6.1346, 226.582, -36.0804, 0.29 ) }
    dend_21 { pt3dadd( 6.09553, 227.433, -36.0691, 0.29 ) }
    dend_21 { pt3dadd( 6.07488, 228.043, -36.08, 0.81 ) }
    dend_21 { pt3dadd( 6.07216, 228.157, -36.0854, 0.15 ) }
    dend_21 { pt3dadd( 6.04806, 228.952, -36.1269, 0.15 ) }
    dend_21 { pt3dadd( 6.00162, 229.924, -36.1436, 0.15 ) }
    dend_21 { pt3dadd( 5.94362, 230.97, -36.2037, 0.96 ) }
    dend_21 { pt3dadd( 5.94362, 230.97, -36.2037, 0.07 ) }
    dend_21 { pt3dadd( 5.96312, 232.186, -36.3533, 0.07 ) }
    dend_21 { pt3dadd( 5.99462, 232.695, -36.4254, 0.07 ) }
    dend_21 { pt3dadd( 6.06314, 233.327, -36.5883, 0.88 ) }
    dend_21 { pt3dadd( 6.2426, 234.357, -36.9299, 0.15 ) }
    dend_21 { pt3dadd( 6.42682, 235.282, -37.2847, 0.15 ) }
    dend_21 { pt3dadd( 6.60073, 236.08, -37.6523, 0.15 ) }
    dend_21 { pt3dadd( 6.68767, 236.428, -37.8428, 1.11 ) }
    dend_21 { pt3dadd( 7.00843, 237.634, -38.5647, 0.07 ) }
    dend_21 { pt3dadd( 7.32958, 238.808, -39.3036, 0.07 ) }
    dend_21 { pt3dadd( 7.38928, 239.032, -39.425, 0.07 ) }
    dend_21 { pt3dadd( 7.50658, 239.543, -39.7685, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 56/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.3242, -33.1416, 19.6456, 0.07 ) }
    dend_10 { pt3dadd( 15.5535, -33.2237, 19.8099, 0.07 ) }
    dend_10 { pt3dadd( 15.1254, -33.2693, 19.9011, 0.07 ) }
    dend_10 { pt3dadd( 14.2598, -33.3616, 20.0855, 1.84 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 60/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.3242, -33.1416, 19.6456, 0.22 ) }
    dend_9 { pt3dadd( 16.7302, -33.0704, 20.143, 0.22 ) }
    dend_9 { pt3dadd( 17.3795, -32.9564, 20.9386, 0.22 ) }
    dend_9 { pt3dadd( 18.51, -32.7581, 22.3237, 1.33 ) }
    // Section: dend_37, id: dend_37, parent: dend_29 (entry count 64/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -0.204714, 55.0434, 10.2345, 0.15 ) }
    dend_37 { pt3dadd( -2.13973, 54.4005, 11.2711, 0.15 ) }
    dend_37 { pt3dadd( -3.39618, 53.9715, 11.8627, 0.15 ) }
    dend_37 { pt3dadd( -4.36451, 53.674, 12.3023, 0.15 ) }
    dend_37 { pt3dadd( -5.5221, 53.3785, 12.7721, 0.15 ) }
    dend_37 { pt3dadd( -6.45292, 53.1649, 13.1315, 0.15 ) }
    dend_37 { pt3dadd( -8.19975, 52.7487, 13.8998, 0.15 ) }
    dend_37 { pt3dadd( -10.2559, 52.2982, 14.8248, 0.15 ) }
    dend_37 { pt3dadd( -11.2685, 52.1273, 15.3277, 0.15 ) }
    dend_37 { pt3dadd( -13.059, 51.956, 16.3088, 0.15 ) }
    dend_37 { pt3dadd( -13.8708, 51.9334, 16.8267, 0.15 ) }
    dend_37 { pt3dadd( -15.8092, 51.943, 18.2301, 0.15 ) }
    dend_37 { pt3dadd( -17.242, 51.9652, 19.4008, 0.15 ) }
    dend_37 { pt3dadd( -18.1424, 51.9825, 20.1394, 0.15 ) }
    dend_37 { pt3dadd( -19.6821, 51.9601, 21.3785, 0.15 ) }
    dend_37 { pt3dadd( -20.8288, 51.902, 22.2592, 0.15 ) }
    dend_37 { pt3dadd( -22.1405, 51.8267, 23.0996, 0.15 ) }
    dend_37 { pt3dadd( -23.3244, 51.7305, 23.7153, 0.15 ) }
    dend_37 { pt3dadd( -24.7823, 51.5146, 24.4671, 0.15 ) }
    dend_37 { pt3dadd( -25.8328, 51.3294, 25.0071, 0.15 ) }
    dend_37 { pt3dadd( -26.8802, 51.1383, 25.5369, 0.15 ) }
    dend_37 { pt3dadd( -28.9383, 50.7897, 26.4941, 0.15 ) }
    dend_37 { pt3dadd( -29.6703, 50.6718, 26.8328, 0.15 ) }
    dend_37 { pt3dadd( -32.0131, 50.2653, 27.923, 0.15 ) }
    dend_37 { pt3dadd( -34.1268, 49.8638, 28.9275, 0.15 ) }
    dend_37 { pt3dadd( -36.2085, 49.4578, 29.9101, 0.15 ) }
    dend_37 { pt3dadd( -37.6712, 49.1429, 30.6052, 0.15 ) }
    dend_37 { pt3dadd( -39.0569, 48.7746, 31.2526, 0.15 ) }
    dend_37 { pt3dadd( -39.7405, 48.5748, 31.5562, 0.15 ) }
    dend_37 { pt3dadd( -41.1226, 48.1306, 32.1061, 0.15 ) }
    dend_37 { pt3dadd( -41.8257, 47.8628, 32.3867, 0.15 ) }
    dend_37 { pt3dadd( -42.8703, 47.413, 32.8381, 0.15 ) }
    dend_37 { pt3dadd( -44.3777, 46.7152, 33.6039, 0.15 ) }
    dend_37 { pt3dadd( -45.0242, 46.394, 33.9305, 0.15 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.204714, 55.0434, 10.2345, 0.74 ) }
    dend_30 { pt3dadd( -0.868349, 55.5771, 10.4681, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_30 { pt3dadd( -1.06838, 55.7653, 10.5558, 0.74 ) }
    dend_30 { pt3dadd( -1.61129, 56.3393, 10.8383, 0.74 ) }
    dend_30 { pt3dadd( -2.15267, 57.1315, 11.3446, 1.03 ) }
    dend_30 { pt3dadd( -2.39536, 57.528, 11.6397, 0.66 ) }
    dend_30 { pt3dadd( -2.73873, 58.1654, 12.1183, 1.03 ) }
    dend_30 { pt3dadd( -3.04903, 58.6751, 12.5445, 1.33 ) }
    dend_30 { pt3dadd( -3.34592, 59.2882, 13.0302, 1.03 ) }
    dend_30 { pt3dadd( -3.82179, 60.6622, 14.0322, 0.96 ) }
    dend_30 { pt3dadd( -3.9572, 61.3191, 14.4824, 0.96 ) }
    dend_30 { pt3dadd( -4.05743, 62.2387, 15.042, 0.74 ) }
    dend_30 { pt3dadd( -4.02366, 64.8982, 16.4321, 0.74 ) }
    dend_30 { pt3dadd( -3.63846, 67.7297, 17.5954, 0.74 ) }
    dend_30 { pt3dadd( -3.46662, 68.4439, 17.7967, 0.74 ) }
    dend_30 { pt3dadd( -3.16921, 69.3854, 17.9187, 0.74 ) }
    dend_30 { pt3dadd( -2.94515, 69.9162, 17.9535, 0.74 ) }
    dend_30 { pt3dadd( -2.54862, 70.7371, 17.978, 0.74 ) }
    dend_30 { pt3dadd( -2.12588, 71.4796, 17.9689, 0.81 ) }
    dend_30 { pt3dadd( -2.05269, 71.7097, 18.0036, 0.81 ) }
    dend_30 { pt3dadd( -1.87103, 72.2861, 18.0754, 0.81 ) }
    dend_30 { pt3dadd( -1.73941, 72.8722, 18.1284, 0.81 ) }
    dend_30 { pt3dadd( -1.63947, 73.5902, 18.2078, 1.18 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 129.495, 147.251, -22.5152, 0.44 ) }
    dend_26 { pt3dadd( 130.505, 148.563, -23.1316, 0.44 ) }
    dend_26 { pt3dadd( 130.958, 149.174, -23.397, 0.44 ) }
    dend_26 { pt3dadd( 131.053, 149.309, -23.4479, 0.44 ) }
    dend_26 { pt3dadd( 131.892, 150.541, -23.8685, 1.4 ) }
    dend_26 { pt3dadd( 132.466, 151.414, -24.1305, 0.29 ) }
    dend_26 { pt3dadd( 132.768, 151.871, -24.2614, 0.29 ) }
    dend_26 { pt3dadd( 133.046, 152.246, -24.3422, 0.29 ) }
    dend_26 { pt3dadd( 133.678, 153.044, -24.4425, 0.29 ) }
    dend_26 { pt3dadd( 133.846, 153.245, -24.454, 0.29 ) }
    dend_26 { pt3dadd( 134.479, 153.979, -24.4401, 1.33 ) }
    dend_26 { pt3dadd( 134.945, 154.495, -24.4243, 1.33 ) }
    dend_26 { pt3dadd( 136.354, 155.979, -24.3723, 0.22 ) }
    dend_26 { pt3dadd( 136.812, 156.429, -24.3572, 0.22 ) }
    dend_26 { pt3dadd( 137.497, 157.055, -24.3297, 0.22 ) }
    dend_26 { pt3dadd( 137.982, 157.483, -24.3065, 0.74 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 37/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 129.495, 147.251, -22.5152, 0.59 ) }
    dend_25 { pt3dadd( 130.995, 147.503, -22.6808, 0.59 ) }
    dend_25 { pt3dadd( 132.516, 147.768, -22.7736, 0.07 ) }
    dend_25 { pt3dadd( 133.385, 147.92, -22.8225, 0.07 ) }
    dend_25 { pt3dadd( 135.045, 148.307, -22.9202, 1.18 ) }
    dend_25 { pt3dadd( 135.997, 148.565, -22.9295, 1.18 ) }
    dend_25 { pt3dadd( 138.567, 149.312, -22.8833, 0.22 ) }
    dend_25 { pt3dadd( 139.815, 149.754, -22.8041, 0.22 ) }
    dend_25 { pt3dadd( 140.751, 150.098, -22.7056, 0.22 ) }
    dend_25 { pt3dadd( 142.217, 150.699, -22.4895, 0.22 ) }
    dend_25 { pt3dadd( 143.553, 151.301, -22.2677, 1.11 ) }
    dend_25 { pt3dadd( 143.781, 151.425, -22.2091, 0.07 ) }
    dend_25 { pt3dadd( 144.628, 152.028, -21.9211, 0.07 ) }
    dend_25 { pt3dadd( 145.521, 152.795, -21.4974, 1.18 ) }
    dend_25 { pt3dadd( 147.015, 154.327, -20.645, 0.07 ) }
    dend_25 { pt3dadd( 147.492, 154.873, -20.3264, 0.96 ) }
    dend_25 { pt3dadd( 148.864, 156.449, -19.3463, 0.96 ) }
    dend_25 { pt3dadd( 149.665, 157.336, -18.7367, 0.29 ) }
    dend_25 { pt3dadd( 150.189, 157.901, -18.3105, 0.29 ) }
    dend_25 { pt3dadd( 150.791, 158.377, -17.8631, 0.29 ) }
    dend_25 { pt3dadd( 151.496, 158.639, -17.4741, 0.88 ) }
    dend_25 { pt3dadd( 153.775, 158.701, -16.7721, 0.29 ) }
    dend_25 { pt3dadd( 154.966, 158.454, -16.6266, 0.29 ) }
    dend_25 { pt3dadd( 155.394, 158.313, -16.6048, 0.29 ) }
    dend_25 { pt3dadd( 157.795, 157.255, -16.6362, 0.29 ) }
    dend_25 { pt3dadd( 158.028, 157.126, -16.6621, 0.29 ) }
    dend_25 { pt3dadd( 159.401, 156.275, -16.9463, 0.29 ) }
    dend_25 { pt3dadd( 160.259, 155.674, -17.1876, 0.29 ) }
    dend_25 { pt3dadd( 160.918, 155.181, -17.3793, 0.29 ) }
    dend_25 { pt3dadd( 161.553, 154.707, -17.578, 0.81 ) }
    dend_25 { pt3dadd( 163.655, 153.235, -18.3469, 0.22 ) }
    dend_25 { pt3dadd( 164.077, 152.931, -18.5016, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 69/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.63947, 73.5902, 18.2078, 0.74 ) }
    dend_36 { pt3dadd( -0.673457, 74.9101, 17.5606, 0.74 ) }
    dend_36 { pt3dadd( -0.475748, 75.2524, 17.4133, 0.74 ) }
    dend_36 { pt3dadd( -0.217852, 75.7831, 17.2125, 0.74 ) }
    dend_36 { pt3dadd( 0.0731578, 76.5115, 16.9808, 0.59 ) }
    dend_36 { pt3dadd( 0.541768, 77.8481, 16.6021, 0.59 ) }
    dend_36 { pt3dadd( 0.687604, 78.2982, 16.4834, 0.59 ) }
    dend_36 { pt3dadd( 0.808182, 78.9292, 16.3329, 0.59 ) }
    dend_36 { pt3dadd( 0.863036, 79.2742, 16.269, 0.59 ) }
    dend_36 { pt3dadd( 0.944991, 79.8738, 16.1844, 0.59 ) }
    dend_36 { pt3dadd( 1.05269, 80.6407, 16.096, 0.59 ) }
    dend_36 { pt3dadd( 1.13812, 81.1858, 16.0457, 0.88 ) }
    dend_36 { pt3dadd( 1.3027, 82.0509, 15.9389, 0.59 ) }
    dend_36 { pt3dadd( 1.52107, 83.0854, 15.7483, 0.52 ) }
    dend_36 { pt3dadd( 1.62368, 83.5956, 15.6204, 0.52 ) }
    dend_36 { pt3dadd( 1.72473, 84.1544, 15.4577, 0.88 ) }
    dend_36 { pt3dadd( 1.7893, 84.6029, 15.3199, 0.88 ) }
    dend_36 { pt3dadd( 1.86786, 85.4102, 15.0795, 0.44 ) }
    dend_36 { pt3dadd( 1.90415, 86.301, 14.8373, 0.44 ) }
    dend_36 { pt3dadd( 1.89546, 87.2632, 14.6038, 0.74 ) }
    dend_36 { pt3dadd( 1.87333, 87.7497, 14.5118, 0.74 ) }
    dend_36 { pt3dadd( 1.84669, 88.1136, 14.4634, 0.74 ) }
    dend_36 { pt3dadd( 1.7514, 89.072, 14.3999, 0.59 ) }
    dend_36 { pt3dadd( 1.67485, 89.7307, 14.4001, 0.59 ) }
    dend_36 { pt3dadd( 1.57509, 90.7452, 14.4513, 0.59 ) }
    dend_36 { pt3dadd( 1.50037, 91.6861, 14.5189, 0.59 ) }
    dend_36 { pt3dadd( 1.45957, 92.3074, 14.5578, 0.59 ) }
    dend_36 { pt3dadd( 1.43, 93.0603, 14.5912, 0.59 ) }
    dend_36 { pt3dadd( 1.42563, 93.5567, 14.6047, 0.59 ) }
    dend_36 { pt3dadd( 1.44727, 94.2194, 14.6301, 0.59 ) }
    dend_36 { pt3dadd( 1.46636, 94.6287, 14.6589, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_36 { pt3dadd( 1.49477, 95.162, 14.7028, 0.59 ) }
    dend_36 { pt3dadd( 1.53248, 95.8758, 14.7669, 0.59 ) }
    dend_36 { pt3dadd( 1.59569, 97.0007, 14.8698, 0.59 ) }
    dend_36 { pt3dadd( 1.65274, 98.0967, 14.9764, 0.37 ) }
    dend_36 { pt3dadd( 1.70826, 99.0131, 15.0542, 0.37 ) }
    dend_36 { pt3dadd( 1.76648, 99.5869, 15.1117, 0.74 ) }
    dend_36 { pt3dadd( 1.92603, 100.765, 15.2388, 0.29 ) }
    dend_36 { pt3dadd( 2.02682, 101.407, 15.3131, 0.29 ) }
    dend_36 { pt3dadd( 2.08709, 101.742, 15.3518, 0.29 ) }
    dend_36 { pt3dadd( 2.3266, 103.014, 15.4874, 0.59 ) }
    dend_36 { pt3dadd( 2.58871, 104.301, 15.6199, 0.52 ) }
    dend_36 { pt3dadd( 2.68112, 104.757, 15.6667, 0.52 ) }
    dend_36 { pt3dadd( 2.82373, 105.54, 15.7486, 0.52 ) }
    dend_36 { pt3dadd( 2.86873, 105.877, 15.7798, 0.52 ) }
    dend_36 { pt3dadd( 2.95421, 106.708, 15.8341, 0.52 ) }
    dend_36 { pt3dadd( 3.00891, 107.573, 15.8658, 0.52 ) }
    dend_36 { pt3dadd( 3.02717, 108.062, 15.8591, 0.52 ) }
    dend_36 { pt3dadd( 3.07159, 109.064, 15.8364, 0.74 ) }
    dend_36 { pt3dadd( 3.11708, 110.265, 15.7672, 0.07 ) }
    dend_36 { pt3dadd( 3.14504, 110.935, 15.7231, 0.07 ) }
    dend_36 { pt3dadd( 3.14858, 111.305, 15.6864, 0.07 ) }
    dend_36 { pt3dadd( 3.14226, 112.009, 15.602, 0.07 ) }
    dend_36 { pt3dadd( 3.13202, 112.551, 15.5272, 0.07 ) }
    dend_36 { pt3dadd( 3.10709, 113.319, 15.4117, 0.37 ) }
    dend_36 { pt3dadd( 3.07568, 113.874, 15.3373, 0.74 ) }
    dend_36 { pt3dadd( 2.99216, 115.227, 15.2366, 0.07 ) }
    dend_36 { pt3dadd( 2.96853, 115.642, 15.225, 0.07 ) }
    dend_36 { pt3dadd( 2.9374, 116.09, 15.2442, 0.07 ) }
    dend_36 { pt3dadd( 2.90428, 116.498, 15.2955, 0.07 ) }
    dend_36 { pt3dadd( 2.85197, 116.973, 15.4052, 1.18 ) }
    dend_36 { pt3dadd( 2.7254, 117.916, 15.6603, 0.44 ) }
    dend_36 { pt3dadd( 2.68374, 118.242, 15.7832, 0.44 ) }
    dend_36 { pt3dadd( 2.58914, 118.81, 16.0104, 0.44 ) }
    dend_36 { pt3dadd( 2.45111, 119.455, 16.302, 0.44 ) }
    dend_36 { pt3dadd( 2.2822, 120.106, 16.622, 2.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 35/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.63947, 73.5902, 18.2078, 0.74 ) }
    dend_31 { pt3dadd( -1.5971, 74.6293, 18.2615, 0.74 ) }
    dend_31 { pt3dadd( -1.58549, 75.5956, 18.3943, 0.74 ) }
    dend_31 { pt3dadd( -1.62077, 76.2751, 18.5386, 0.74 ) }
    dend_31 { pt3dadd( -1.74043, 77.4242, 18.885, 0.74 ) }
    dend_31 { pt3dadd( -1.89297, 78.4, 19.2389, 0.74 ) }
    dend_31 { pt3dadd( -2.04471, 79.1704, 19.5482, 0.52 ) }
    dend_31 { pt3dadd( -2.2681, 80.2307, 20.0084, 0.81 ) }
    dend_31 { pt3dadd( -2.4666, 81.1492, 20.4568, 0.81 ) }
    dend_31 { pt3dadd( -2.67635, 82.1297, 20.9566, 0.66 ) }
    dend_31 { pt3dadd( -2.84439, 82.8816, 21.3193, 0.66 ) }
    dend_31 { pt3dadd( -2.95847, 83.4214, 21.5472, 0.66 ) }
    dend_31 { pt3dadd( -3.14271, 84.2683, 21.8263, 0.66 ) }
    dend_31 { pt3dadd( -3.44564, 85.6203, 22.166, 0.66 ) }
    dend_31 { pt3dadd( -3.69786, 86.6644, 22.3686, 0.66 ) }
    dend_31 { pt3dadd( -4.04748, 88.0204, 22.5702, 0.96 ) }
    dend_31 { pt3dadd( -4.33144, 89.1682, 22.7053, 0.96 ) }
    dend_31 { pt3dadd( -4.69764, 90.6636, 22.8494, 0.81 ) }
    dend_31 { pt3dadd( -4.93224, 91.5219, 22.9116, 0.81 ) }
    dend_31 { pt3dadd( -5.3273, 92.7996, 22.9823, 0.74 ) }
    dend_31 { pt3dadd( -5.59341, 93.6434, 23.0354, 0.74 ) }
    dend_31 { pt3dadd( -6.03346, 95.1742, 23.1386, 0.74 ) }
    dend_31 { pt3dadd( -6.18393, 95.7929, 23.1713, 0.74 ) }
    dend_31 { pt3dadd( -6.38715, 96.9735, 23.2236, 0.74 ) }
    dend_31 { pt3dadd( -6.48508, 97.8401, 23.2493, 0.74 ) }
    dend_31 { pt3dadd( -6.54402, 98.4973, 23.2829, 0.74 ) }
    dend_31 { pt3dadd( -6.62251, 99.2705, 23.3419, 0.88 ) }
    dend_31 { pt3dadd( -6.70431, 100.061, 23.4199, 0.88 ) }
    dend_31 { pt3dadd( -6.81996, 101.201, 23.5188, 1.11 ) }
    dend_31 { pt3dadd( -6.93738, 102.663, 23.6271, 0.66 ) }
    dend_31 { pt3dadd( -7.05457, 103.985, 23.709, 0.81 ) }
    dend_31 { pt3dadd( -7.16093, 104.986, 23.7689, 0.96 ) }
    dend_31 { pt3dadd( -7.26811, 105.807, 23.812, 0.96 ) }
    dend_31 { pt3dadd( -7.49062, 107.044, 23.864, 0.96 ) }
    dend_31 { pt3dadd( -7.63895, 107.706, 23.8862, 0.96 ) }
    dend_31 { pt3dadd( -7.82014, 108.434, 23.8997, 0.96 ) }
    dend_31 { pt3dadd( -8.01374, 109.262, 23.8944, 0.96 ) }
    dend_31 { pt3dadd( -8.31646, 110.682, 23.8752, 0.74 ) }
    dend_31 { pt3dadd( -8.52626, 111.734, 23.8797, 0.74 ) }
    dend_31 { pt3dadd( -8.6642, 112.401, 23.8911, 0.74 ) }
    dend_31 { pt3dadd( -8.76905, 112.863, 23.8994, 0.74 ) }
    dend_31 { pt3dadd( -8.8957, 113.488, 23.9052, 0.74 ) }
    dend_31 { pt3dadd( -9.0415, 114.362, 23.9165, 0.74 ) }
    dend_31 { pt3dadd( -9.12487, 115.273, 23.9004, 0.44 ) }
    dend_31 { pt3dadd( -9.13282, 116.016, 23.8637, 0.66 ) }
    dend_31 { pt3dadd( -9.09048, 117.189, 23.7717, 0.66 ) }
    dend_31 { pt3dadd( -9.00262, 118.433, 23.6547, 0.66 ) }
    dend_31 { pt3dadd( -8.89932, 119.496, 23.5348, 0.66 ) }
    dend_31 { pt3dadd( -8.75034, 120.893, 23.3798, 0.66 ) }
    dend_31 { pt3dadd( -8.65227, 122.14, 23.1868, 0.66 ) }
    dend_31 { pt3dadd( -8.5942, 123.0, 23.0312, 0.66 ) }
    dend_31 { pt3dadd( -8.55665, 123.889, 22.8422, 0.66 ) }
    dend_31 { pt3dadd( -8.56005, 124.907, 22.6253, 0.66 ) }
    dend_31 { pt3dadd( -8.60758, 126.143, 22.3773, 0.88 ) }
    dend_31 { pt3dadd( -8.71727, 128.045, 22.0384, 0.66 ) }
    dend_31 { pt3dadd( -8.80661, 129.638, 21.7667, 0.66 ) }
    dend_31 { pt3dadd( -8.85045, 130.292, 21.6573, 0.66 ) }
    dend_31 { pt3dadd( -8.92241, 131.352, 21.4944, 0.66 ) }
    dend_31 { pt3dadd( -8.97811, 132.385, 21.3637, 0.66 ) }
    dend_31 { pt3dadd( -9.00757, 133.383, 21.2662, 0.66 ) }
    dend_31 { pt3dadd( -9.01984, 134.36, 21.2324, 0.37 ) }
    dend_31 { pt3dadd( -9.09735, 135.588, 21.2146, 0.74 ) }
    dend_31 { pt3dadd( -9.1859, 136.327, 21.2132, 1.18 ) }
    dend_31 { pt3dadd( -9.34295, 137.254, 21.223, 0.59 ) }
    dend_31 { pt3dadd( -9.46866, 137.872, 21.2366, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_31 { pt3dadd( -9.63105, 138.53, 21.268, 0.59 ) }
    dend_31 { pt3dadd( -9.89133, 139.45, 21.3479, 0.59 ) }
    dend_31 { pt3dadd( -10.2598, 140.766, 21.5335, 0.96 ) }
    dend_31 { pt3dadd( -10.3743, 141.114, 21.5827, 1.33 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 4/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.3743, 141.114, 21.5827, 0.44 ) }
    dend_33 { pt3dadd( -9.85264, 142.961, 21.4835, 0.44 ) }
    dend_33 { pt3dadd( -9.54753, 144.041, 21.4256, 0.66 ) }
    dend_33 { pt3dadd( -9.24188, 145.123, 21.3675, 0.66 ) }
    dend_33 { pt3dadd( -9.09873, 145.629, 21.3403, 0.66 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 9/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -10.3743, 141.114, 21.5827, 0.59 ) }
    dend_32 { pt3dadd( -12.4616, 142.997, 22.2611, 0.59 ) }
    dend_32 { pt3dadd( -13.4513, 143.979, 22.585, 0.59 ) }
    dend_32 { pt3dadd( -14.7068, 145.29, 23.0165, 0.59 ) }
    dend_32 { pt3dadd( -16.3055, 147.028, 23.6104, 0.59 ) }
    dend_32 { pt3dadd( -17.5149, 148.433, 24.0874, 0.59 ) }
    dend_32 { pt3dadd( -19.087, 150.41, 24.7593, 1.11 ) }
    dend_32 { pt3dadd( -19.9348, 151.687, 25.1998, 0.59 ) }
    dend_32 { pt3dadd( -20.4348, 152.486, 25.4874, 0.59 ) }
    dend_32 { pt3dadd( -21.1343, 153.665, 25.9664, 0.59 ) }
    dend_32 { pt3dadd( -21.7826, 154.785, 26.4511, 0.59 ) }
    dend_32 { pt3dadd( -22.6926, 156.547, 27.4194, 0.59 ) }
    dend_32 { pt3dadd( -23.1056, 157.472, 28.0185, 0.59 ) }
    dend_32 { pt3dadd( -23.6841, 158.932, 29.0033, 0.59 ) }
    dend_32 { pt3dadd( -24.5318, 161.358, 30.6719, 0.81 ) }
    dend_32 { pt3dadd( -24.7959, 162.441, 31.4625, 0.81 ) }
    dend_32 { pt3dadd( -25.1818, 165.16, 33.4934, 0.59 ) }
    dend_32 { pt3dadd( -25.2315, 166.055, 34.1445, 0.88 ) }
    dend_32 { pt3dadd( -25.2228, 166.623, 34.522, 0.88 ) }
    dend_32 { pt3dadd( -25.1639, 167.387, 34.9596, 0.88 ) }
    dend_32 { pt3dadd( -24.9216, 170.337, 36.426, 0.59 ) }
    dend_32 { pt3dadd( -24.8789, 171.362, 36.9117, 0.96 ) }
    dend_32 { pt3dadd( -24.8508, 173.827, 37.9112, 0.59 ) }
    dend_32 { pt3dadd( -24.833, 175.094, 38.4009, 0.59 ) }
    dend_32 { pt3dadd( -24.8626, 176.751, 38.9879, 0.59 ) }
    dend_32 { pt3dadd( -24.9935, 178.525, 39.5675, 0.59 ) }
    dend_32 { pt3dadd( -25.3623, 180.881, 40.1506, 0.59 ) }
    dend_32 { pt3dadd( -25.6478, 182.439, 40.479, 0.29 ) }
    dend_32 { pt3dadd( -25.9504, 183.782, 40.6839, 0.66 ) }
    dend_32 { pt3dadd( -26.5475, 185.704, 40.9414, 0.66 ) }
    dend_32 { pt3dadd( -27.1637, 187.175, 41.131, 0.66 ) }
    dend_32 { pt3dadd( -28.2675, 189.19, 41.4047, 0.66 ) }
    dend_32 { pt3dadd( -28.9406, 190.154, 41.5425, 0.66 ) }
    dend_32 { pt3dadd( -29.9472, 191.394, 41.8264, 0.52 ) }
    dend_32 { pt3dadd( -30.8471, 192.435, 42.0978, 0.88 ) }
    dend_32 { pt3dadd( -31.939, 193.666, 42.4866, 0.88 ) }
    dend_32 { pt3dadd( -33.2827, 195.224, 43.0261, 0.52 ) }
    dend_32 { pt3dadd( -34.7464, 196.981, 43.7065, 0.74 ) }
    dend_32 { pt3dadd( -35.9576, 198.503, 44.3019, 0.96 ) }
    dend_32 { pt3dadd( -37.6, 200.819, 45.1668, 0.96 ) }
    dend_32 { pt3dadd( -38.8761, 202.868, 45.7849, 0.59 ) }
    dend_32 { pt3dadd( -39.6358, 204.265, 46.1344, 0.59 ) }
    dend_32 { pt3dadd( -40.192, 205.431, 46.3956, 0.59 ) }
    dend_32 { pt3dadd( -40.7156, 206.628, 46.6314, 0.59 ) }
    dend_32 { pt3dadd( -41.3508, 208.163, 46.888, 0.96 ) }
    dend_32 { pt3dadd( -42.4145, 210.9, 47.3093, 0.44 ) }
    dend_32 { pt3dadd( -42.9446, 212.331, 47.476, 0.96 ) }
    dend_32 { pt3dadd( -43.5, 213.807, 47.6161, 0.96 ) }
    dend_32 { pt3dadd( -44.3113, 215.893, 47.7278, 0.44 ) }
    dend_32 { pt3dadd( -44.6743, 216.808, 47.7551, 0.44 ) }
    dend_32 { pt3dadd( -45.0496, 217.694, 47.7594, 0.44 ) }
    dend_32 { pt3dadd( -45.5278, 218.752, 47.7218, 0.88 ) }
    dend_32 { pt3dadd( -46.1142, 219.992, 47.6278, 0.88 ) }
    dend_32 { pt3dadd( -47.2708, 222.338, 47.441, 0.52 ) }
    dend_32 { pt3dadd( -47.6913, 223.166, 47.3988, 0.52 ) }
    dend_32 { pt3dadd( -48.894, 225.544, 47.3676, 0.07 ) }
    dend_32 { pt3dadd( -49.4505, 226.64, 47.4215, 0.88 ) }
    dend_32 { pt3dadd( -50.2406, 228.203, 47.6039, 0.88 ) }
    dend_32 { pt3dadd( -50.8842, 229.639, 47.8834, 0.44 ) }
    dend_32 { pt3dadd( -51.3902, 230.913, 48.1803, 0.44 ) }
    dend_32 { pt3dadd( -52.2604, 233.43, 48.7725, 0.44 ) }
    dend_32 { pt3dadd( -52.7681, 235.295, 49.2078, 1.18 ) }
    dend_32 { pt3dadd( -53.0048, 236.415, 49.4413, 1.18 ) }
    dend_32 { pt3dadd( -53.4703, 239.138, 49.8965, 0.07 ) }
    dend_32 { pt3dadd( -53.718, 240.918, 50.1163, 0.66 ) }
    dend_32 { pt3dadd( -53.8327, 242.17, 50.2331, 0.22 ) }
    dend_32 { pt3dadd( -53.8676, 243.859, 50.336, 0.22 ) }
    dend_32 { pt3dadd( -53.7975, 245.414, 50.3885, 0.59 ) }
    dend_32 { pt3dadd( -53.6019, 247.279, 50.4165, 0.59 ) }
    dend_32 { pt3dadd( -53.3881, 248.501, 50.4064, 0.59 ) }
    dend_32 { pt3dadd( -52.9589, 250.266, 50.3958, 0.07 ) }
    dend_32 { pt3dadd( -52.5198, 251.767, 50.3407, 0.59 ) }
    dend_32 { pt3dadd( -52.2758, 252.499, 50.2894, 0.96 ) }
    dend_32 { pt3dadd( -51.9597, 253.427, 50.2146, 0.96 ) }
    dend_32 { pt3dadd( -51.6065, 254.591, 50.1394, 0.37 ) }
    dend_32 { pt3dadd( -51.358, 255.751, 50.1213, 0.07 ) }
    dend_32 { pt3dadd( -51.2684, 257.571, 50.1299, 0.07 ) }
    dend_32 { pt3dadd( -51.4255, 259.164, 50.2132, 0.07 ) }
    dend_32 { pt3dadd( -51.6826, 260.436, 50.338, 0.07 ) }
    dend_32 { pt3dadd( -52.091, 261.825, 50.537, 0.07 ) }
    dend_32 { pt3dadd( -52.3092, 262.408, 50.6474, 1.03 ) }
    dend_32 { pt3dadd( -52.9378, 263.874, 50.963, 0.66 ) }
    dend_32 { pt3dadd( -53.3771, 264.883, 51.1795, 0.66 ) }
    dend_32 { pt3dadd( -53.7673, 265.903, 51.3656, 0.66 ) }
    dend_32 { pt3dadd( -53.9786, 267.023, 51.6374, 0.66 ) }
    dend_32 { pt3dadd( -54.028, 267.982, 51.9402, 0.66 ) }
    dend_32 { pt3dadd( -54.0095, 268.534, 52.1371, 0.66 ) }
    dend_32 { pt3dadd( -53.8894, 269.766, 52.6173, 0.07 ) }
    dend_32 { pt3dadd( -53.8194, 270.311, 52.8212, 0.07 ) }
    dend_32 { pt3dadd( -53.3714, 273.698, 54.0555, 0.37 ) }
    dend_32 { pt3dadd( -53.1878, 275.047, 54.4399, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -52.8512, 277.414, 54.9356, 0.07 ) }
    dend_32 { pt3dadd( -52.76, 278.086, 55.0286, 0.07 ) }
    dend_32 { pt3dadd( -52.5957, 279.352, 55.1018, 0.66 ) }
    dend_32 { pt3dadd( -52.4298, 280.545, 55.0437, 1.11 ) }
    dend_32 { pt3dadd( -52.022, 283.2, 54.5403, 0.07 ) }
    dend_32 { pt3dadd( -51.8624, 283.988, 54.3523, 0.07 ) }
    dend_32 { pt3dadd( -51.5595, 285.292, 54.0446, 0.07 ) }
    dend_32 { pt3dadd( -51.2957, 286.478, 53.8266, 0.59 ) }
    dend_32 { pt3dadd( -51.0778, 287.493, 53.6963, 0.59 ) }
    dend_32 { pt3dadd( -50.8808, 288.585, 53.6585, 0.59 ) }
    dend_32 { pt3dadd( -50.8656, 288.734, 53.6793, 1.03 ) }
    dend_32 { pt3dadd( -50.8401, 290.585, 54.1442, 0.37 ) }
    dend_32 { pt3dadd( -50.8738, 291.794, 54.66, 0.37 ) }
    dend_32 { pt3dadd( -50.9017, 292.13, 54.851, 0.37 ) }
    dend_32 { pt3dadd( -51.0316, 293.117, 55.5061, 0.37 ) }
    dend_32 { pt3dadd( -51.2359, 294.258, 56.34, 0.37 ) }
    dend_32 { pt3dadd( -51.4618, 295.195, 57.0797, 0.37 ) }
    dend_32 { pt3dadd( -51.9937, 296.908, 58.3384, 0.07 ) }
    dend_32 { pt3dadd( -52.2498, 297.624, 58.8278, 0.59 ) }
    dend_32 { pt3dadd( -52.5223, 298.265, 59.218, 0.59 ) }
    dend_32 { pt3dadd( -52.9632, 299.157, 59.7084, 0.59 ) }
    dend_32 { pt3dadd( -53.5805, 300.331, 60.2519, 1.33 ) }
    dend_32 { pt3dadd( -55.0362, 302.963, 61.2501, 0.07 ) }
    dend_32 { pt3dadd( -55.6079, 303.972, 61.5588, 0.07 ) }
    dend_32 { pt3dadd( -56.4367, 305.511, 61.9849, 0.37 ) }
    dend_32 { pt3dadd( -57.0092, 306.596, 62.264, 0.37 ) }
    dend_32 { pt3dadd( -57.9366, 308.408, 62.6911, 0.74 ) }
    dend_32 { pt3dadd( -58.6331, 309.795, 63.0125, 0.15 ) }
    dend_32 { pt3dadd( -58.8517, 310.215, 63.1249, 0.15 ) }
    dend_32 { pt3dadd( -59.3089, 311.167, 63.3881, 0.15 ) }
    dend_32 { pt3dadd( -59.8118, 312.318, 63.7241, 0.15 ) }
    dend_32 { pt3dadd( -60.3082, 313.542, 64.0826, 0.81 ) }
    dend_32 { pt3dadd( -60.677, 314.551, 64.3744, 0.81 ) }
    dend_32 { pt3dadd( -61.0837, 315.893, 64.7338, 0.81 ) }
    dend_32 { pt3dadd( -61.8634, 318.894, 65.4681, 0.29 ) }
    dend_32 { pt3dadd( -62.2482, 320.606, 65.861, 0.44 ) }
    dend_32 { pt3dadd( -62.5955, 322.318, 66.2497, 0.44 ) }
    dend_32 { pt3dadd( -62.9353, 324.156, 66.6519, 0.44 ) }
    dend_32 { pt3dadd( -63.2091, 325.508, 66.899, 0.88 ) }
    dend_32 { pt3dadd( -63.5606, 327.114, 67.1509, 1.25 ) }
    dend_32 { pt3dadd( -64.0642, 329.069, 67.3863, 0.66 ) }
    dend_32 { pt3dadd( -64.8303, 331.836, 67.5952, 0.29 ) }
    dend_32 { pt3dadd( -65.4263, 333.902, 67.6925, 0.74 ) }
    dend_32 { pt3dadd( -66.2754, 336.657, 67.7513, 0.22 ) }
    dend_32 { pt3dadd( -66.6926, 337.966, 67.7544, 0.22 ) }
    dend_32 { pt3dadd( -67.4992, 340.586, 67.6843, 0.81 ) }
    dend_32 { pt3dadd( -68.2778, 343.437, 67.5097, 0.37 ) }
    dend_32 { pt3dadd( -68.7285, 345.341, 67.3189, 1.11 ) }
    dend_32 { pt3dadd( -69.1683, 347.291, 67.0045, 0.44 ) }
    dend_32 { pt3dadd( -69.3322, 348.185, 66.8168, 0.44 ) }
    dend_32 { pt3dadd( -69.5228, 349.145, 66.5435, 0.44 ) }
    dend_32 { pt3dadd( -69.8152, 350.704, 65.9866, 0.44 ) }
    dend_32 { pt3dadd( -70.0578, 351.936, 65.4512, 0.44 ) }
    dend_32 { pt3dadd( -70.5577, 354.605, 64.0901, 0.07 ) }
    dend_32 { pt3dadd( -70.7147, 355.496, 63.6174, 0.07 ) }
    dend_32 { pt3dadd( -70.978, 356.868, 62.9099, 0.07 ) }
    dend_32 { pt3dadd( -71.3082, 358.218, 62.2888, 0.52 ) }
    dend_32 { pt3dadd( -71.5595, 359.241, 61.9019, 0.52 ) }
    dend_32 { pt3dadd( -71.8994, 360.874, 61.4564, 0.07 ) }
    dend_32 { pt3dadd( -72.0041, 361.639, 61.3533, 0.15 ) }
    dend_32 { pt3dadd( -72.1111, 362.51, 61.2854, 0.15 ) }
    dend_32 { pt3dadd( -72.4087, 365.525, 61.2095, 0.59 ) }
    dend_32 { pt3dadd( -72.5581, 367.328, 61.2711, 0.07 ) }
    dend_32 { pt3dadd( -72.6151, 368.418, 61.3512, 0.88 ) }
    dend_32 { pt3dadd( -72.6292, 371.431, 61.632, 0.29 ) }
    dend_32 { pt3dadd( -72.5853, 372.514, 61.7246, 1.03 ) }
    dend_32 { pt3dadd( -72.4561, 373.975, 61.8595, 0.07 ) }
    dend_32 { pt3dadd( -72.1113, 376.237, 62.0839, 0.07 ) }
    dend_32 { pt3dadd( -71.8234, 377.887, 62.0798, 0.07 ) }
    dend_32 { pt3dadd( -71.6283, 378.823, 62.0068, 0.07 ) }
    dend_32 { pt3dadd( -71.2987, 380.391, 61.6857, 0.07 ) }
    dend_32 { pt3dadd( -71.0973, 381.38, 61.4051, 0.07 ) }
    dend_32 { pt3dadd( -70.7699, 383.042, 60.8008, 0.07 ) }
    dend_32 { pt3dadd( -70.2807, 386.034, 59.4835, 0.37 ) }
    dend_32 { pt3dadd( -70.0691, 387.792, 58.7152, 0.07 ) }
    dend_32 { pt3dadd( -69.9376, 389.833, 57.9348, 0.07 ) }
    dend_32 { pt3dadd( -69.9335, 390.604, 57.6921, 0.07 ) }
    dend_32 { pt3dadd( -69.9887, 391.618, 57.4859, 0.07 ) }
    dend_32 { pt3dadd( -70.1677, 393.322, 57.3699, 1.4 ) }
    dend_32 { pt3dadd( -70.3724, 395.219, 57.4986, 0.29 ) }
    dend_32 { pt3dadd( -70.5962, 397.221, 57.7463, 0.07 ) }
    dend_32 { pt3dadd( -70.7264, 398.28, 57.9657, 1.11 ) }
    dend_32 { pt3dadd( -71.12, 400.674, 58.5926, 0.15 ) }
    dend_32 { pt3dadd( -71.6758, 403.356, 59.4454, 0.15 ) }
    dend_32 { pt3dadd( -72.2086, 405.367, 60.232, 0.59 ) }
    dend_32 { pt3dadd( -72.6112, 406.508, 60.764, 0.81 ) }
    dend_32 { pt3dadd( -73.4638, 408.372, 61.7891, 0.29 ) }
    dend_32 { pt3dadd( -74.0121, 409.341, 62.4473, 0.29 ) }
    dend_32 { pt3dadd( -74.5463, 410.091, 63.0748, 0.29 ) }
    dend_32 { pt3dadd( -75.717, 411.457, 64.295, 0.29 ) }
    dend_32 { pt3dadd( -76.9752, 412.856, 65.4855, 0.29 ) }
    dend_32 { pt3dadd( -77.6408, 413.644, 66.0991, 0.29 ) }
    dend_32 { pt3dadd( -78.8312, 415.078, 67.0375, 1.03 ) }
    dend_32 { pt3dadd( -79.8903, 416.397, 67.7552, 0.44 ) }
    dend_32 { pt3dadd( -81.5265, 418.537, 68.5719, 0.07 ) }
    dend_32 { pt3dadd( -82.3859, 419.768, 68.8607, 0.07 ) }
    dend_32 { pt3dadd( -83.2, 421.04, 68.9187, 0.44 ) }
    dend_32 { pt3dadd( -84.4157, 423.021, 68.8061, 0.44 ) }
    dend_32 { pt3dadd( -84.803, 423.68, 68.7159, 1.25 ) }
    dend_32 { pt3dadd( -86.257, 426.23, 68.2785, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -86.921, 427.4, 68.0432, 0.44 ) }
    dend_32 { pt3dadd( -88.8934, 430.806, 67.3631, 0.07 ) }
    dend_32 { pt3dadd( -89.5056, 431.918, 67.141, 0.07 ) }
    dend_32 { pt3dadd( -89.887, 432.684, 66.9843, 0.07 ) }
    dend_32 { pt3dadd( -90.3173, 433.594, 66.7779, 0.07 ) }
    dend_32 { pt3dadd( -91.6152, 436.502, 66.1043, 0.07 ) }
    dend_32 { pt3dadd( -92.327, 437.979, 65.698, 0.07 ) }
    dend_32 { pt3dadd( -92.7419, 438.817, 65.4608, 0.07 ) }
    dend_32 { pt3dadd( -93.6674, 440.665, 64.7691, 0.07 ) }
    dend_32 { pt3dadd( -94.2335, 441.814, 64.2815, 0.07 ) }
    dend_32 { pt3dadd( -94.5198, 442.379, 64.0239, 0.88 ) }
    dend_32 { pt3dadd( -95.8186, 444.93, 62.8907, 0.07 ) }
    dend_32 { pt3dadd( -96.0693, 445.441, 62.6692, 0.66 ) }
    dend_32 { pt3dadd( -96.9973, 447.469, 61.9192, 0.22 ) }
    dend_32 { pt3dadd( -97.2326, 448.082, 61.7344, 0.22 ) }
    dend_32 { pt3dadd( -97.7557, 449.711, 61.3085, 0.81 ) }
    dend_32 { pt3dadd( -98.1215, 451.837, 61.0241, 0.07 ) }
    dend_32 { pt3dadd( -98.1597, 453.548, 61.053, 0.07 ) }
    dend_32 { pt3dadd( -98.1129, 454.999, 61.2177, 0.07 ) }
    dend_32 { pt3dadd( -97.9249, 456.38, 61.6687, 0.96 ) }
    dend_32 { pt3dadd( -97.819, 456.902, 61.9156, 0.96 ) }
    dend_32 { pt3dadd( -97.1079, 459.597, 63.6028, 0.07 ) }
    dend_32 { pt3dadd( -96.8151, 460.673, 64.4561, 0.07 ) }
    dend_32 { pt3dadd( -96.6697, 461.285, 65.006, 0.81 ) }
    dend_32 { pt3dadd( -96.1324, 463.979, 67.386, 0.29 ) }
    dend_32 { pt3dadd( -96.0598, 464.464, 67.7653, 0.29 ) }
    dend_32 { pt3dadd( -96.009, 465.164, 68.2115, 1.03 ) }
    dend_32 { pt3dadd( -96.0332, 466.055, 68.6037, 1.03 ) }
    dend_32 { pt3dadd( -96.0902, 467.168, 68.9642, 1.03 ) }
    dend_32 { pt3dadd( -96.2513, 469.255, 69.427, 0.29 ) }
    dend_32 { pt3dadd( -96.4223, 470.787, 69.6423, 0.29 ) }
    dend_32 { pt3dadd( -96.5905, 471.985, 69.802, 0.29 ) }
    dend_32 { pt3dadd( -96.9504, 473.933, 70.0867, 0.29 ) }
    dend_32 { pt3dadd( -97.3545, 475.573, 70.3794, 1.03 ) }
    dend_32 { pt3dadd( -97.9374, 477.396, 70.7897, 0.07 ) }
    dend_32 { pt3dadd( -98.0883, 477.784, 70.895, 0.59 ) }
    dend_32 { pt3dadd( -98.9085, 479.522, 71.3712, 0.07 ) }
    dend_32 { pt3dadd( -99.9945, 481.426, 71.9321, 0.07 ) }
    dend_32 { pt3dadd( -100.804, 482.576, 72.3311, 0.07 ) }
    dend_32 { pt3dadd( -101.994, 483.95, 72.8277, 0.07 ) }
    dend_32 { pt3dadd( -102.761, 484.706, 73.1178, 0.07 ) }
    dend_32 { pt3dadd( -104.021, 485.885, 73.564, 0.88 ) }
    dend_32 { pt3dadd( -105.213, 486.958, 73.9561, 0.07 ) }
    dend_32 { pt3dadd( -106.451, 488.115, 74.2078, 0.07 ) }
    dend_32 { pt3dadd( -107.769, 489.547, 74.3552, 0.07 ) }
    dend_32 { pt3dadd( -108.472, 490.418, 74.4009, 0.07 ) }
    dend_32 { pt3dadd( -108.959, 491.156, 74.4259, 0.07 ) }
    dend_32 { pt3dadd( -109.262, 491.771, 74.4515, 0.07 ) }
    dend_32 { pt3dadd( -110.514, 495.198, 74.4965, 0.07 ) }
    dend_32 { pt3dadd( -110.911, 496.704, 74.5381, 0.07 ) }
    dend_32 { pt3dadd( -111.14, 497.745, 74.5821, 0.07 ) }
    dend_32 { pt3dadd( -111.448, 499.273, 74.6402, 0.07 ) }
    dend_32 { pt3dadd( -111.906, 501.63, 74.7671, 0.07 ) }
    dend_32 { pt3dadd( -112.182, 503.263, 74.903, 0.07 ) }
    dend_32 { pt3dadd( -112.508, 506.591, 75.395, 0.07 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 55/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -9.09873, 145.629, 21.3403, 0.29 ) }
    dend_35 { pt3dadd( -8.04953, 146.983, 21.8179, 0.29 ) }
    dend_35 { pt3dadd( -7.67999, 147.602, 22.0466, 0.29 ) }
    dend_35 { pt3dadd( -6.86558, 149.222, 22.7588, 0.29 ) }
    dend_35 { pt3dadd( -5.92139, 151.215, 23.6558, 0.88 ) }
    dend_35 { pt3dadd( -5.63961, 151.873, 23.9672, 0.88 ) }
    dend_35 { pt3dadd( -5.25138, 152.852, 24.4356, 0.88 ) }
    dend_35 { pt3dadd( -4.77573, 154.382, 25.1782, 0.37 ) }
    dend_35 { pt3dadd( -3.94548, 157.381, 26.6658, 0.07 ) }
    dend_35 { pt3dadd( -3.70278, 158.264, 27.159, 0.07 ) }
    dend_35 { pt3dadd( -3.33212, 159.393, 27.7916, 0.07 ) }
    dend_35 { pt3dadd( -3.14982, 159.896, 28.0898, 0.07 ) }
    dend_35 { pt3dadd( -2.94809, 160.398, 28.398, 0.88 ) }
    dend_35 { pt3dadd( -2.61047, 161.132, 28.8478, 0.88 ) }
    dend_35 { pt3dadd( -1.6897, 162.786, 29.8526, 0.44 ) }
    dend_35 { pt3dadd( -1.252, 163.451, 30.2631, 0.44 ) }
    dend_35 { pt3dadd( -0.407353, 164.457, 30.9099, 0.44 ) }
    dend_35 { pt3dadd( 0.402385, 165.221, 31.4654, 0.96 ) }
    dend_35 { pt3dadd( 1.31266, 165.887, 31.9419, 0.07 ) }
    dend_35 { pt3dadd( 1.83164, 166.195, 32.1083, 0.07 ) }
    dend_35 { pt3dadd( 2.12425, 166.318, 32.1421, 0.07 ) }
    dend_35 { pt3dadd( 3.55931, 166.732, 32.2109, 0.07 ) }
    dend_35 { pt3dadd( 4.68949, 166.936, 32.2268, 0.52 ) }
    dend_35 { pt3dadd( 6.28581, 167.171, 32.1577, 0.52 ) }
    dend_35 { pt3dadd( 7.59826, 167.439, 32.0274, 0.07 ) }
    dend_35 { pt3dadd( 8.87877, 167.798, 31.8858, 0.07 ) }
    dend_35 { pt3dadd( 9.40512, 167.979, 31.8299, 0.07 ) }
    dend_35 { pt3dadd( 10.3541, 168.414, 31.745, 0.07 ) }
    dend_35 { pt3dadd( 11.5116, 169.005, 31.6808, 0.96 ) }
    dend_35 { pt3dadd( 13.2888, 169.981, 31.7214, 0.29 ) }
    dend_35 { pt3dadd( 14.1517, 170.514, 31.7786, 0.29 ) }
    dend_35 { pt3dadd( 14.6474, 170.877, 31.8314, 1.25 ) }
    dend_35 { pt3dadd( 16.1065, 172.017, 32.0118, 0.15 ) }
    dend_35 { pt3dadd( 16.7831, 172.581, 32.1203, 0.15 ) }
    dend_35 { pt3dadd( 17.5528, 173.272, 32.3114, 0.59 ) }
    dend_35 { pt3dadd( 18.6565, 174.319, 32.6715, 0.15 ) }
    dend_35 { pt3dadd( 19.6817, 175.339, 33.0104, 0.74 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 92/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -9.09873, 145.629, 21.3403, 0.22 ) }
    dend_34 { pt3dadd( -8.84747, 147.237, 21.3841, 0.22 ) }
    dend_34 { pt3dadd( -8.72691, 147.891, 21.4251, 0.22 ) }
    dend_34 { pt3dadd( -8.57219, 148.731, 21.4946, 0.22 ) }
    dend_34 { pt3dadd( -8.4795, 149.201, 21.5429, 0.22 ) }
    dend_34 { pt3dadd( -8.24118, 150.24, 21.6763, 0.66 ) }
    dend_34 { pt3dadd( -7.9957, 151.202, 21.8197, 0.07 ) }
    dend_34 { pt3dadd( -7.88696, 151.548, 21.8953, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_34 { pt3dadd( -7.71432, 152.071, 22.0087, 1.03 ) }
    dend_34 { pt3dadd( -7.48337, 152.785, 22.1919, 1.03 ) }
    dend_34 { pt3dadd( -7.06211, 154.094, 22.5653, 0.37 ) }
    dend_34 { pt3dadd( -6.70903, 155.24, 22.9149, 0.96 ) }
    dend_34 { pt3dadd( -6.37994, 156.354, 23.2684, 0.29 ) }
    dend_34 { pt3dadd( -6.12549, 157.252, 23.5594, 0.29 ) }
    dend_34 { pt3dadd( -5.78835, 158.504, 23.9689, 0.29 ) }
    dend_34 { pt3dadd( -5.66965, 159.008, 24.1315, 0.29 ) }
    dend_34 { pt3dadd( -5.51755, 159.811, 24.3827, 0.29 ) }
    dend_34 { pt3dadd( -5.40876, 160.562, 24.6039, 0.29 ) }
    dend_34 { pt3dadd( -5.35894, 161.082, 24.7698, 0.29 ) }
    dend_34 { pt3dadd( -5.30687, 162.067, 25.0899, 0.59 ) }
    dend_34 { pt3dadd( -5.30457, 162.761, 25.2926, 0.59 ) }
    dend_34 { pt3dadd( -5.32505, 163.374, 25.4781, 0.59 ) }
    dend_34 { pt3dadd( -5.34356, 163.745, 25.5925, 0.96 ) }
    dend_34 { pt3dadd( -5.41604, 165.105, 26.0075, 0.52 ) }
    dend_34 { pt3dadd( -5.45419, 166.012, 26.2778, 0.07 ) }
    dend_34 { pt3dadd( -5.50509, 167.774, 26.7839, 0.07 ) }
    dend_34 { pt3dadd( -5.50599, 168.127, 26.8777, 0.07 ) }
    dend_34 { pt3dadd( -5.48696, 169.015, 27.0915, 1.11 ) }
    dend_34 { pt3dadd( -5.47246, 169.904, 27.2675, 1.11 ) }
    dend_34 { pt3dadd( -5.46309, 170.693, 27.3859, 0.44 ) }
    dend_34 { pt3dadd( -5.45319, 171.358, 27.4861, 0.44 ) }
    dend_34 { pt3dadd( -5.40609, 172.66, 27.6499, 0.44 ) }
    dend_34 { pt3dadd( -5.37191, 173.209, 27.713, 0.88 ) }
    dend_34 { pt3dadd( -5.20257, 175.19, 27.9293, 0.52 ) }
    dend_34 { pt3dadd( -5.06569, 176.512, 28.068, 0.52 ) }
    dend_34 { pt3dadd( -4.83325, 178.306, 28.257, 0.52 ) }
    dend_34 { pt3dadd( -4.50803, 180.346, 28.4792, 0.52 ) }
    dend_34 { pt3dadd( -4.29876, 181.434, 28.6118, 0.52 ) }
    dend_34 { pt3dadd( -4.09215, 182.333, 28.7443, 0.88 ) }
    dend_34 { pt3dadd( -4.04182, 182.515, 28.7767, 0.07 ) }
    dend_34 { pt3dadd( -3.72166, 183.639, 29.0233, 0.07 ) }
    dend_34 { pt3dadd( -3.43096, 184.654, 29.2939, 1.11 ) }
    dend_34 { pt3dadd( -2.9703, 186.284, 29.8161, 0.15 ) }
    dend_34 { pt3dadd( -2.66477, 187.361, 30.2043, 0.22 ) }
    dend_34 { pt3dadd( -2.48499, 187.983, 30.4481, 0.22 ) }
    dend_34 { pt3dadd( -2.24638, 188.823, 30.7939, 0.96 ) }
    dend_34 { pt3dadd( -2.2266, 188.896, 30.8255, 0.07 ) }
    dend_34 { pt3dadd( -2.01129, 189.856, 31.2317, 0.07 ) }
    dend_34 { pt3dadd( -1.87009, 190.668, 31.5536, 0.07 ) }
    dend_34 { pt3dadd( -1.79377, 191.347, 31.7906, 0.96 ) }
    dend_34 { pt3dadd( -1.74028, 192.053, 32.0091, 0.96 ) }
    dend_34 { pt3dadd( -1.69784, 192.938, 32.2412, 0.07 ) }
    dend_34 { pt3dadd( -1.6928, 193.973, 32.4778, 0.07 ) }
    dend_34 { pt3dadd( -1.72033, 194.47, 32.5665, 0.07 ) }
    dend_34 { pt3dadd( -1.76584, 194.895, 32.5906, 0.52 ) }
    dend_34 { pt3dadd( -1.86796, 195.504, 32.5774, 0.96 ) }
    dend_34 { pt3dadd( -2.06872, 196.266, 32.4985, 0.96 ) }
    dend_34 { pt3dadd( -2.25398, 196.79, 32.41, 0.96 ) }
    dend_34 { pt3dadd( -2.65447, 197.785, 32.2115, 0.44 ) }
    dend_34 { pt3dadd( -3.21407, 199.073, 31.9173, 0.44 ) }
    dend_34 { pt3dadd( -3.40714, 199.54, 31.7682, 0.88 ) }
    dend_34 { pt3dadd( -3.81585, 200.53, 31.3908, 0.88 ) }
    dend_34 { pt3dadd( -4.09019, 201.218, 31.1076, 0.88 ) }
    dend_34 { pt3dadd( -4.29607, 201.823, 30.8684, 0.88 ) }
    dend_34 { pt3dadd( -4.54733, 202.76, 30.5433, 0.88 ) }
    dend_34 { pt3dadd( -4.7849, 204.262, 30.1991, 0.37 ) }
    dend_34 { pt3dadd( -4.86111, 205.024, 30.0603, 0.37 ) }
    dend_34 { pt3dadd( -4.91146, 205.645, 29.9711, 0.37 ) }
    dend_34 { pt3dadd( -4.99555, 206.43, 29.896, 0.88 ) }
    dend_34 { pt3dadd( -5.10911, 207.272, 29.8685, 0.37 ) }
    dend_34 { pt3dadd( -5.31448, 208.845, 29.9527, 0.37 ) }
    dend_34 { pt3dadd( -5.4116, 209.574, 30.038, 0.37 ) }
    dend_34 { pt3dadd( -5.51111, 210.287, 30.1574, 1.25 ) }
    dend_34 { pt3dadd( -5.67497, 211.205, 30.3451, 0.15 ) }
    dend_34 { pt3dadd( -5.86165, 212.028, 30.5395, 0.66 ) }
    dend_34 { pt3dadd( -6.19411, 213.308, 30.8704, 0.15 ) }
    dend_34 { pt3dadd( -6.25329, 213.512, 30.9315, 0.15 ) }
    dend_34 { pt3dadd( -6.57483, 214.744, 31.3554, 0.81 ) }
    dend_34 { pt3dadd( -6.74087, 215.447, 31.6396, 0.81 ) }
    dend_34 { pt3dadd( -6.85752, 215.879, 31.8548, 0.81 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_18, dend_13, dend_12, dend_5, dend_4, dend_3, dend_0, dend_39, dend_19, dend_17, dend_14, dend_11, dend_6, dend_2, dend_1, dend_40, dend_28, dend_23, dend_20, dend_16, dend_15, dend_8, dend_7, dend_38, dend_29, dend_27, dend_24, dend_22, dend_21, dend_10, dend_9, dend_37, dend_30, dend_26, dend_25, dend_36, dend_31, dend_33, dend_32, dend_35, dend_34]}
    ModelViewParmSubset_2 = new SectionList()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_18, dend_13, dend_12, dend_5, dend_4, dend_3, dend_0, dend_39, dend_19, dend_17, dend_14, dend_11, dend_6, dend_2, dend_1, dend_40, dend_28, dend_23, dend_20, dend_16, dend_15, dend_8, dend_7, dend_38, dend_29, dend_27, dend_24, dend_22, dend_21, dend_10, dend_9, dend_37, dend_30, dend_26, dend_25, dend_36, dend_31, dend_33, dend_32, dend_35, dend_34]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_12 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_4 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_3 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_17 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_40 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_23 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_20 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_27 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_22 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_21 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_37 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_25 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_36 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_31 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_32 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_35 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_34 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_5 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_18 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_13 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_19 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_7 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_28 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_8 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_9 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_30 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_33 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_24 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_26 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_34 all.append()
    dend_34 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_12 nseg = 9
    dend_4 nseg = 7
    dend_3 nseg = 11
    dend_17 nseg = 3
    dend_11 nseg = 3
    dend_2 nseg = 13
    dend_1 nseg = 3
    dend_40 nseg = 11
    dend_23 nseg = 7
    dend_20 nseg = 7
    dend_16 nseg = 15
    dend_15 nseg = 11
    dend_27 nseg = 3
    dend_22 nseg = 7
    dend_21 nseg = 5
    dend_37 nseg = 3
    dend_25 nseg = 3
    dend_36 nseg = 3
    dend_31 nseg = 3
    dend_32 nseg = 21
    dend_35 nseg = 3
    dend_34 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_LBC_c5d7d5e5ee_0_0


