// Cell: Cell_486557284
/*
{
  "id" : "Cell_486557284",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "366.332, 511.254, 39.76, 10.4786", "371.571, 511.254, 39.76, 10.4786", "376.81, 511.254, 39.76, 10.4786" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "371.571, 511.254, 39.76, 1.0", "377.412, 525.07, 39.76, 1.0", "383.254, 538.886, 39.76, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "367.524, 513.344, 42.8739, 0.4188", "366.511, 513.778, 43.5378, 0.6186", "365.879, 514.568, 44.247, 0.54", "365.177, 515.412, 44.9224, 0.5164", "364.52, 516.317, 45.5347, 0.5644", "364.57, 517.433, 46.0779, 0.895", "364.685, 518.565, 46.5273, 1.022" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "372.441, 515.152, 44.0359, 0.3984", "373.027, 516.044, 44.8, 0.4896", "373.761, 516.873, 45.5381, 0.7426", "374.586, 517.615, 46.2196, 0.8056", "375.068, 518.552, 46.83, 0.836", "374.922, 519.657, 47.3584, 0.6234", "375.063, 520.775, 47.7904, 0.6196", "375.394, 521.864, 48.1303, 0.5498", "375.69, 522.966, 48.3879, 0.4946", "375.79, 524.093, 48.5677, 0.49", "375.656, 525.228, 48.6744, 0.6928", "375.591, 526.366, 48.7329, 0.731", "375.933, 527.393, 48.7805, 0.6098", "376.536, 528.354, 48.8858, 0.6318", "376.725, 529.449, 49.0927, 0.618", "376.726, 530.576, 49.3822, 0.628", "376.819, 531.704, 49.7216, 0.7044", "376.937, 532.834, 50.0822, 0.5638", "376.504, 533.87, 50.4563, 0.5312" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "370.606, 515.803, 40.0562, 0.2956", "370.369, 516.922, 40.1212, 0.3132", "370.131, 518.04, 40.1878, 0.3478", "369.894, 519.159, 40.2548, 0.402", "369.656, 520.278, 40.3231, 0.5514", "369.406, 521.394, 40.3928, 0.5912", "369.12, 522.501, 40.4645, 0.4444", "368.823, 523.607, 40.5406, 0.326", "368.527, 524.712, 40.6263, 0.2758", "368.294, 525.83, 40.7224, 0.2766", "368.121, 526.961, 40.84, 0.2784", "367.82, 528.059, 40.9928, 0.2818", "367.257, 529.05, 41.2034, 0.2882", "366.697, 530.036, 41.482, 0.2998", "366.141, 531.016, 41.8272, 0.3224", "365.621, 532.009, 42.2282, 0.3576", "365.337, 533.098, 42.66, 0.456", "365.141, 534.208, 43.099, 0.4772", "364.753, 535.252, 43.5372, 0.612", "364.164, 536.21, 43.9608, 0.6288", "363.699, 537.236, 44.3556, 0.6488", "363.322, 538.301, 44.714, 0.7368", "362.932, 539.369, 45.0181, 0.6556", "362.482, 540.416, 45.2474, 0.5462", "361.882, 541.383, 45.3978, 0.6004", "361.114, 542.226, 45.4835, 0.5984", "360.314, 543.042, 45.5238, 0.6336", "359.708, 543.996, 45.5395, 0.509", "359.258, 545.047, 45.5552, 0.5146", "358.745, 546.067, 45.5899, 0.5224", "358.182, 547.062, 45.6509, 0.5466", "357.696, 548.094, 45.743, 0.5446", "357.294, 549.164, 45.8662, 0.5406", "356.834, 550.207, 46.011, 0.5336", "356.223, 551.169, 46.174, 0.5194", "355.578, 552.11, 46.363, 0.4978", "355.11, 553.135, 46.5914, 0.4344", "354.514, 554.075, 46.8544, 0.4312", "353.49, 554.467, 47.1372, 0.5586", "352.45, 554.921, 47.4261, 0.604", "351.699, 555.754, 47.7369, 0.4684", "351.214, 556.776, 48.0634, 0.3702", "350.919, 557.872, 48.389, 0.3596", "350.694, 558.986, 48.7026, 0.4224", "350.623, 560.123, 48.9986, 0.5962", "350.418, 561.244, 49.2803, 0.64", "350.263, 562.356, 49.5522, 0.7008", "349.522, 563.214, 49.8145, 0.6836", "348.578, 563.855, 50.073, 0.5954", "347.765, 564.585, 50.3322, 0.477", "347.615, 565.713, 50.5971, 0.4938", "347.511, 566.839, 50.8777, 0.5246", "347.165, 567.918, 51.1767, 0.582", "346.742, 568.969, 51.4895, 0.4596", "346.528, 570.075, 51.8221, 0.4272", "346.41, 571.192, 52.178, 0.3394", "346.294, 572.313, 52.5353, 0.3102", "345.951, 573.343, 52.8755, 0.2934", "345.103, 574.063, 53.1955, 0.3102", "344.341, 574.876, 53.5004, 0.3354", "343.914, 575.918, 53.7858, 0.4136", "343.84, 577.045, 54.0495, 0.4046", "343.834, 578.186, 54.311, 0.4508", "343.629, 579.301, 54.5857, 0.457", "343.051, 580.256, 54.8842, 0.3988", "342.298, 581.103, 55.2168, 0.3988", "341.565, 581.96, 55.5912, 0.3338", "341.065, 582.958, 55.9997, 0.3", "340.674, 584.012, 56.4315, 0.2746", "340.617, 585.126, 56.8658, 0.2746", "340.692, 586.256, 57.2849, 0.2746", "340.782, 587.389, 57.6794, 0.2746", "340.87, 588.523, 58.0499, 0.2746", "340.959, 589.659, 58.4035, 0.2746", "341.032, 590.794, 58.7546, 0.2746", "341.047, 591.925, 59.1259, 0.2746", "341.034, 593.052, 59.5291, 0.2746", "340.992, 594.179, 59.9578, 0.2746", "340.809, 595.286, 60.4086, 0.2746", "340.133, 596.151, 60.8815, 0.2746", "339.488, 597.073, 61.3466, 0.2746", "338.468, 597.512, 61.7938, 0.2746", "337.448, 598.002, 62.1992, 0.2746", "336.72, 598.572, 62.5859, 0.2746", "336.335, 599.639, 62.9157, 0.2746", "335.93, 600.704, 63.1907, 0.2746", "335.635, 601.807, 63.4214, 0.2746", "335.337, 602.91, 63.6182, 0.2746", "335.276, 604.024, 63.8, 0.2746", "335.487, 605.143, 63.9848, 0.2746", "335.716, 606.259, 64.1763, 0.2746", "335.96, 607.374, 64.3667, 0.2748", "336.478, 608.372, 64.5515, 0.2748", "336.956, 609.402, 64.7284, 0.275", "337.52, 610.388, 64.9006, 0.2754", "338.137, 611.35, 65.0768, 0.2764", "338.511, 612.416, 65.2719, 0.2778", "339.005, 613.431, 65.4996, 0.2806", "339.654, 614.369, 65.7684, 0.2858", "340.156, 615.36, 66.1273, 0.295", "340.61, 616.363, 66.5806, 0.3134", "340.84, 617.434, 67.079, 0.3412", "340.74, 618.548, 67.5884, 0.4258", "340.326, 619.576, 68.0795, 0.4204", "340.181, 620.562, 68.5451, 0.5114", "340.636, 621.591, 68.9906, 0.4182", "341.017, 622.651, 69.4159, 0.3738", "341.271, 623.753, 69.8188, 0.354", "341.417, 624.879, 70.1977, 0.4728", "341.491, 626.015, 70.5544, 0.394", "341.793, 627.093, 70.8974, 0.327", "342.491, 627.967, 71.2404, 0.2776", "343.305, 628.756, 71.5968, 0.2802", "344.091, 629.567, 71.9771, 0.285", "344.776, 630.454, 72.3881, 0.2938", "345.416, 631.375, 72.8221, 0.3112", "346.033, 632.318, 73.25, 0.3382", "346.783, 633.157, 73.6515, 0.413", "347.734, 633.757, 74.0183, 0.4326", "348.705, 634.276, 74.3946, 0.359", "349.454, 634.877, 74.6547, 0.2994", "350.328, 635.613, 74.8252, 0.2736", "351.203, 636.35, 74.9274, 0.2728", "352.079, 637.088, 74.9806, 0.2712", "352.953, 637.825, 75.0, 0.2684", "353.828, 638.562, 74.9994, 0.2626", "354.703, 639.299, 74.9994, 0.2542", "355.577, 640.037, 74.9994, 0.2288", "356.452, 640.774, 74.9994, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "371.309, 506.163, 38.8906, 0.4628", "370.546, 505.346, 38.7528, 0.666", "369.526, 504.847, 38.6271, 0.7958", "368.837, 503.94, 38.554, 0.861", "368.305, 502.936, 38.5398, 0.9186", "367.575, 502.062, 38.5552, 0.8756", "366.734, 501.286, 38.5734, 0.8354", "365.912, 500.491, 38.5792, 0.7986", "365.116, 499.671, 38.5484, 0.775", "364.436, 498.76, 38.4678, 0.7436", "363.9, 497.751, 38.3401, 0.6258", "363.368, 496.741, 38.1598, 0.6964", "362.955, 495.691, 37.9123, 0.7958", "362.643, 494.609, 37.5956, 0.6786", "362.243, 493.555, 37.2414, 0.7788", "361.805, 492.509, 36.876, 0.567", "361.567, 491.42, 36.4988, 0.5038", "361.664, 490.302, 36.1259, 0.3882", "361.732, 489.173, 35.7846, 0.3962", "361.489, 488.074, 35.4855, 0.4744", "360.816, 487.19, 35.226, 0.542", "359.937, 486.464, 34.993, 0.5836", "359.511, 485.455, 34.7889, 0.6102", "358.941, 484.479, 34.613, 0.6764", "358.215, 483.6, 34.4526, 0.7164", "357.633, 482.625, 34.2871, 0.5054", "357.256, 481.565, 34.0934, 0.3548", "356.422, 480.799, 33.9007, 0.2822" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "367.581, 514.547, 39.9224, 0.5784", "366.8, 515.375, 39.8807, 0.9616", "366.174, 516.327, 39.7953, 0.9484", "365.306, 516.992, 39.6668, 1.0044", "364.213, 517.27, 39.5044, 1.174", "363.11, 517.547, 39.3277, 1.1712", "362.012, 517.858, 39.1588, 1.1028", "360.943, 518.258, 39.0239, 1.0538", "359.833, 518.499, 38.9287, 0.8156", "358.711, 518.384, 38.8234, 0.8598" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "373.44, 515.549, 39.2644, 0.3086", "373.357, 516.685, 39.1306, 0.3372", "373.411, 517.763, 38.9732, 0.3938", "373.953, 518.763, 38.8175, 0.482", "374.418, 519.8, 38.6912, 0.7248", "374.706, 520.902, 38.5986, 0.7912", "375.009, 522.002, 38.5476, 0.7178", "375.394, 523.069, 38.5896, 0.8496", "376.057, 523.979, 38.7316, 0.9364", "376.752, 524.859, 38.9561, 0.948", "377.578, 525.629, 39.2112, 0.779", "378.201, 526.581, 39.4478, 0.7022" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "374.947, 514.316, 38.5554, 0.353", "375.873, 514.957, 38.2533, 0.4478", "376.74, 515.679, 37.9, 0.461", "377.491, 516.524, 37.5197, 0.5884", "378.427, 517.152, 37.1216, 0.5526", "379.439, 517.666, 36.729, 0.6638", "380.555, 517.891, 36.3616, 0.6942" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "372.016, 506.721, 40.8419, 0.458", "372.127, 505.587, 41.1169, 0.5962", "372.483, 504.539, 41.4282, 0.9602", "373.158, 503.655, 41.7936, 1.1134" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "383.254, 538.886, 39.76, 1.0", "389.095, 552.702, 39.76, 1.0", "394.936, 566.518, 39.76, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "364.685, 518.565, 46.5273, 1.022", "365.893, 519.041, 47.154, 0.6338", "366.737, 519.8, 47.4051, 0.4546", "367.303, 520.775, 47.6532, 0.4498", "367.672, 521.824, 47.9634, 0.454" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "364.685, 518.565, 46.5273, 1.022", "364.141, 519.964, 47.0453, 0.5444", "363.137, 520.303, 47.1358, 0.4968", "362.01, 520.486, 47.2321, 0.663", "360.906, 520.78, 47.3242, 0.65", "359.819, 521.137, 47.4034, 0.5858", "358.872, 521.757, 47.4639, 0.6606", "358.082, 522.58, 47.5014, 0.7724", "357.271, 523.386, 47.5185, 0.6532", "356.199, 523.544, 47.5194, 0.6452", "355.055, 523.52, 47.5079, 0.74", "354.012, 523.946, 47.4877, 0.8418", "353.116, 524.652, 47.462, 0.931", "352.207, 525.344, 47.432, 0.8934", "351.285, 526.02, 47.3892, 0.8932", "350.347, 526.674, 47.3432, 0.786", "349.645, 527.57, 47.3166, 0.647", "349.029, 528.534, 47.3102, 0.5566", "348.001, 529.011, 47.3136, 0.4914", "346.881, 528.809, 47.3211, 0.562", "345.751, 528.634, 47.35, 0.6786" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "376.504, 533.87, 50.4563, 0.5312", "376.812, 534.408, 51.7336, 0.2288", "377.252, 534.962, 54.2402, 0.6102", "377.884, 535.559, 55.3162, 0.7018", "378.504, 536.368, 56.4794, 0.6418", "379.015, 537.275, 57.6582, 0.7292", "379.549, 538.157, 58.8227, 0.8434", "380.15, 539.026, 59.9222, 0.8284", "380.719, 539.95, 60.905, 0.7584", "381.241, 540.908, 61.8036, 0.6048", "381.72, 541.883, 62.6492, 0.6658", "382.044, 542.914, 63.4497, 0.6986", "382.254, 543.989, 64.195, 0.6942", "382.581, 545.042, 64.881, 0.5428", "383.049, 546.054, 65.4968, 0.501", "383.594, 547.044, 66.0285, 0.6366", "384.087, 548.064, 66.4807, 0.7688", "384.646, 548.952, 66.8618, 0.6772", "384.692, 550.08, 67.1745, 0.5396", "385.216, 551.068, 67.4531, 0.5866", "385.774, 552.045, 67.725, 0.5794", "386.154, 553.122, 68.0184, 0.5682", "386.828, 553.979, 68.3816, 0.5364", "387.72, 554.639, 68.8433, 0.529", "388.192, 555.621, 69.3837, 0.4936", "389.095, 556.196, 70.0025, 0.5348", "390.143, 556.553, 70.6518, 0.7788", "391.123, 557.059, 71.304, 0.8744", "391.972, 557.749, 71.9544, 0.9544", "392.85, 558.429, 72.5763, 0.8886", "393.756, 559.094, 73.1531, 0.8892", "394.625, 559.807, 73.6882, 0.7536", "395.636, 560.257, 74.209, 0.7086", "396.592, 560.861, 74.6844, 0.7676", "397.252, 561.786, 75.1022, 0.8706", "397.991, 562.639, 75.4981, 0.864", "398.854, 563.363, 75.8562, 0.6678", "399.786, 563.97, 76.1768, 0.51", "400.516, 564.835, 76.4733, 0.3612", "401.512, 565.258, 76.7575, 0.3036", "402.386, 565.838, 77.0095, 0.2814", "403.39, 566.177, 77.2562, 0.2872", "404.462, 566.541, 77.5236, 0.2988", "405.479, 567.057, 77.8282, 0.3144", "406.534, 567.481, 78.1869, 0.374", "407.443, 568.139, 78.6324, 0.3352", "408.258, 568.867, 79.2022, 0.3022", "409.047, 569.604, 79.8801, 0.2786", "409.786, 570.413, 80.617, 0.2822", "410.372, 571.342, 81.373, 0.2888", "410.71, 572.391, 82.1391, 0.3008", "410.885, 573.452, 82.9396, 0.3238", "411.218, 574.461, 83.7598, 0.3628", "411.797, 575.39, 84.5617, 0.4532", "412.436, 576.297, 85.3311, 0.5328", "413.08, 577.178, 86.0894, 0.421", "413.718, 578.039, 86.8501, 0.3294", "414.358, 578.896, 87.5913, 0.2826", "415.055, 579.762, 88.249, 0.288", "415.762, 580.641, 88.8006, 0.305", "416.444, 581.551, 89.2312, 0.305", "417.116, 582.473, 89.8195, 0.4576" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "376.504, 533.87, 50.4563, 0.5312", "376.0, 534.82, 51.1538, 0.5208", "376.155, 535.935, 51.553, 0.465", "376.203, 537.041, 51.9893, 0.5464", "376.316, 538.122, 52.4594, 0.4862", "376.878, 539.08, 52.9388, 0.4832", "377.494, 540.025, 53.4094, 0.6386", "377.904, 541.072, 53.8614, 0.6028", "378.169, 542.174, 54.2954, 0.5078", "378.256, 543.299, 54.7142, 0.4698", "378.154, 544.425, 55.1337, 0.6438", "378.211, 545.54, 55.5696, 0.6944", "378.511, 546.623, 56.0291, 0.9664", "378.926, 547.662, 56.5174, 1.0612", "379.347, 548.705, 57.0231, 0.939", "379.846, 549.719, 57.5268, 0.7846", "380.35, 550.733, 58.0294, 0.607", "380.629, 551.81, 58.557, 0.663", "380.546, 552.906, 59.1234, 0.7284", "380.411, 554.003, 59.7167, 0.5784", "380.444, 555.112, 60.3165, 0.4744", "380.238, 556.201, 60.916, 0.5802", "379.711, 557.114, 61.5182, 0.4692", "379.635, 558.114, 62.0029, 0.3818" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "356.422, 480.799, 33.9007, 0.2822", "356.46, 479.802, 33.7627, 0.288", "356.452, 478.659, 33.6832, 0.3008", "356.328, 477.529, 33.6809, 0.318", "355.905, 476.479, 33.763, 0.3808", "355.278, 475.529, 33.9049, 0.3476", "354.691, 474.551, 34.0763, 0.3254", "354.158, 473.542, 34.2555, 0.3226", "353.593, 472.551, 34.4232, 0.3578", "352.945, 471.609, 34.5702, 0.4566", "352.283, 470.676, 34.7032, 0.4786", "351.581, 469.777, 34.8387, 0.6158", "350.828, 468.92, 34.9821, 0.6292", "350.143, 468.01, 35.1299, 0.6796", "349.652, 466.989, 35.2817, 0.6508", "349.349, 465.887, 35.432, 0.5022", "348.971, 464.816, 35.5771, 0.4598", "348.587, 463.764, 35.7168, 0.3946", "348.528, 462.623, 35.8585, 0.4376", "348.467, 461.486, 36.0105, 0.4078", "348.184, 460.395, 36.1726, 0.4286", "347.571, 459.453, 36.3392, 0.5536", "346.848, 458.579, 36.5014, 0.5952", "346.396, 457.55, 36.6428, 0.4516", "345.989, 456.495, 36.752, 0.3396", "345.57, 455.441, 36.8236, 0.3002", "345.218, 454.356, 36.8589, 0.3244", "344.837, 453.278, 36.8614, 0.3564", "344.651, 452.16, 36.8385, 0.4776", "344.556, 451.022, 36.7956, 0.403", "344.329, 449.903, 36.7352, 0.3432", "344.029, 448.8, 36.6598, 0.3088", "343.684, 447.712, 36.5778, 0.3326", "343.207, 446.677, 36.4994, 0.4088", "342.721, 445.644, 36.4314, 0.3942", "342.582, 444.527, 36.379, 0.4386", "342.582, 443.384, 36.3448, 0.4018", "342.582, 442.24, 36.3272, 0.4534", "342.582, 441.095, 36.3224, 0.4246", "342.582, 439.952, 36.3266, 0.5194", "342.485, 438.813, 36.3378, 0.4342", "342.343, 437.678, 36.3546, 0.3974", "342.201, 436.543, 36.377, 0.4284", "342.133, 435.402, 36.4062, 0.4608", "342.125, 434.258, 36.4434, 0.412", "341.928, 433.134, 36.4916, 0.3946", "340.951, 432.588, 36.5509, 0.4652", "339.928, 432.076, 36.6226, 0.555", "338.932, 431.516, 36.715, 0.4626", "337.946, 430.94, 36.8278, 0.4038", "337.051, 430.232, 36.9524, 0.435", "336.174, 429.501, 37.079, 0.5", "335.249, 428.828, 37.1955, 0.356", "334.339, 428.139, 37.4175, 0.2288" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "356.422, 480.799, 33.9007, 0.2822", "355.615, 480.652, 32.4234, 0.4576", "354.735, 480.08, 31.0411, 0.4832", "354.067, 479.253, 30.4646, 0.5706", "353.506, 478.388, 29.783, 0.579", "352.938, 477.639, 28.9892, 0.4238", "352.14, 476.826, 28.3696, 0.2796", "351.48, 475.904, 27.3949, 0.2288" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "358.711, 518.384, 38.8234, 0.8598", "358.194, 517.531, 37.562, 0.6864", "357.41, 516.699, 37.5416, 0.8434", "356.343, 516.286, 37.5337, 0.8624", "355.235, 516.003, 37.5253, 0.8848", "354.184, 515.553, 37.5161, 0.9886" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "358.711, 518.384, 38.8234, 0.8598", "359.164, 519.276, 38.6092, 0.774", "358.596, 520.236, 38.5056, 0.723", "357.684, 520.925, 38.4202, 0.678", "357.086, 521.745, 38.3636, 0.5834", "356.823, 522.738, 38.3432, 0.462", "355.973, 523.501, 38.3522, 0.4336", "355.587, 524.519, 38.386, 0.5688", "355.538, 525.66, 38.4401, 0.5942", "355.452, 526.798, 38.5095, 0.5904", "355.233, 527.919, 38.5874, 0.6032", "355.008, 529.039, 38.6786, 0.5294", "354.533, 530.072, 38.7719, 0.407", "354.402, 531.196, 38.8326, 0.341", "354.233, 532.313, 38.8951, 0.3524", "353.578, 533.247, 38.9805, 0.4102", "353.023, 534.242, 39.0594, 0.5668", "352.569, 535.292, 39.1342, 0.6196", "351.945, 536.22, 39.2165, 0.497", "351.112, 537.0, 39.3173, 0.4252", "350.548, 537.953, 39.4388, 0.4508", "350.183, 539.033, 39.5713, 0.6436", "349.49, 539.897, 39.711, 0.7532", "348.758, 540.753, 39.8577, 0.7876", "348.129, 541.708, 40.0123, 0.7562", "347.373, 542.557, 40.1747, 0.7016", "346.746, 543.49, 40.3612, 0.5816", "345.963, 544.281, 40.5843, 0.451", "344.891, 544.287, 40.8363, 0.4494", "343.785, 544.474, 41.1043, 0.4232", "343.024, 545.274, 41.3846, 0.4858", "342.296, 546.146, 41.673, 0.5226", "341.55, 547.003, 41.9605, 0.5162", "341.312, 548.113, 42.2274, 0.6386", "340.554, 548.966, 42.4735, 0.6712", "340.009, 549.965, 42.7134, 0.7592", "339.635, 551.04, 42.9447, 0.7902", "338.897, 551.903, 43.1771, 0.8014", "338.349, 552.901, 43.4076, 0.8176", "337.918, 553.955, 43.6316, 0.6434", "337.51, 555.016, 43.8374, 0.6224", "336.883, 555.97, 44.0107, 0.72", "336.134, 556.823, 44.144, 0.6948", "335.391, 557.492, 44.2408, 0.5048", "335.395, 558.596, 44.3094, 0.393", "334.709, 559.447, 44.3369, 0.3892", "333.804, 560.145, 44.333, 0.5402", "333.116, 561.041, 44.3162, 0.5096", "332.503, 562.006, 44.3047, 0.5882", "331.615, 562.712, 44.3134, 0.534", "330.581, 563.195, 44.3598, 0.4882", "330.006, 564.151, 44.4517, 0.368", "329.217, 564.974, 44.5838, 0.3158", "328.359, 565.706, 44.7804, 0.3038", "327.348, 566.064, 45.0674, 0.3294", "326.58, 566.891, 45.3872, 0.3732", "325.932, 567.826, 45.7058, 0.4722", "325.322, 568.718, 46.0202, 0.569", "324.7, 569.657, 46.3156, 0.484", "324.238, 570.694, 46.6024, 0.4666", "323.951, 571.784, 46.8728, 0.438", "323.783, 572.906, 47.1299, 0.3688", "323.57, 574.024, 47.3525, 0.318", "323.337, 575.143, 47.5224, 0.3076", "323.104, 576.263, 47.6305, 0.3374", "322.871, 577.383, 47.6778, 0.3818", "322.637, 578.501, 47.6734, 0.5192", "322.403, 579.62, 47.6305, 0.5054", "322.169, 580.738, 47.5675, 0.4106", "321.935, 581.857, 47.502, 0.343", "321.725, 582.98, 47.4541, 0.3796", "321.537, 584.108, 47.4426, 0.3454", "321.352, 585.236, 47.4757, 0.3212", "321.168, 586.363, 47.5513, 0.3148", "321.002, 587.492, 47.6599, 0.345", "320.942, 588.631, 47.7823, 0.4256", "320.905, 589.774, 47.9002, 0.457", "320.868, 590.917, 48.0026, 0.399", "320.83, 592.06, 48.0852, 0.3992", "320.793, 593.204, 48.1499, 0.3346", "320.637, 594.336, 48.2023, 0.3012", "320.41, 595.457, 48.251, 0.2764", "320.174, 596.577, 48.3031, 0.278", "319.937, 597.695, 48.3633, 0.2812", "319.7, 598.814, 48.4344, 0.2866", "319.533, 599.945, 48.5229, 0.2972", "319.382, 601.076, 48.6298, 0.3162", "319.231, 602.207, 48.7519, 0.3534", "319.08, 603.339, 48.8818, 0.4122", "319.095, 604.479, 49.002, 0.5706", "319.157, 605.621, 49.1, 0.6262", "319.221, 606.764, 49.1728, 0.5116", "319.284, 607.906, 49.2248, 0.4412", "319.359, 609.047, 49.268, 0.535", "319.614, 610.157, 49.3436, 0.5358", "319.143, 611.19, 49.4617, 0.4604", "318.65, 612.214, 49.6082, 0.4674", "318.395, 613.321, 49.7577, 0.4516", "318.552, 614.44, 49.8876, 0.5642", "319.126, 615.429, 49.9766, 0.5424", "319.638, 616.45, 50.0111, 0.4752", "319.978, 617.54, 49.9906, 0.483", "320.169, 618.667, 49.9209, 0.5408", "320.36, 619.795, 49.8078, 0.4356", "320.551, 620.921, 49.6558, 0.358", "320.757, 622.043, 49.467, 0.3294", "321.056, 623.143, 49.236, 0.403", "321.391, 624.227, 48.9614, 0.3834", "321.727, 625.309, 48.648, 0.4174", "322.086, 626.379, 48.3067, 0.3682", "322.563, 627.399, 47.9455, 0.3642", "323.06, 628.403, 47.572, 0.3906", "323.718, 629.321, 47.2363, 0.5042", "324.467, 630.175, 46.9524, 0.6292", "324.633, 631.248, 46.7208, 0.591", "324.616, 632.391, 46.5679, 0.6874", "324.597, 633.535, 46.4909, 0.7402", "324.579, 634.677, 46.4772, 0.7626", "324.562, 635.821, 46.5091, 0.7118", "324.445, 636.955, 46.5931, 0.6102", "323.879, 637.907, 47.04, 0.4576" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "378.201, 526.581, 39.4478, 0.7022", "378.642, 527.559, 39.6091, 0.786" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "378.201, 526.581, 39.4478, 0.7022", "378.6, 526.431, 35.6034, 0.295", "378.931, 526.172, 34.3529, 0.3134", "379.649, 525.959, 33.0369, 0.3416", "380.66, 526.128, 31.8951, 0.4238", "381.566, 526.786, 30.982, 0.429", "382.547, 527.052, 30.1241, 0.4682", "383.402, 527.57, 29.4157, 0.6274", "384.049, 528.509, 28.9033, 0.7288", "384.583, 529.505, 28.5023, 0.7146", "385.044, 530.546, 28.1974, 0.7542", "386.083, 530.706, 28.0025, 0.7372", "387.227, 530.707, 27.844, 0.9152" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "380.555, 517.891, 36.3616, 0.6942", "380.812, 517.652, 36.7226, 0.4576", "381.673, 517.009, 36.188, 0.6086", "382.699, 516.549, 35.9478, 0.8646", "383.478, 516.223, 35.5258, 0.8244", "384.367, 515.684, 34.9549, 0.9606", "385.213, 515.096, 34.2849, 0.648", "386.294, 514.736, 33.7361, 0.5238", "387.413, 514.545, 33.3029, 0.3716", "388.506, 514.715, 32.9582, 0.3954", "389.534, 515.212, 32.6729, 0.3276", "390.563, 515.683, 32.4237, 0.288", "391.625, 515.335, 32.132, 0.2542", "392.688, 514.989, 31.7965, 0.2288", "393.751, 514.641, 30.9879, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "380.555, 517.891, 36.3616, 0.6942", "381.739, 518.701, 35.6544, 0.5238", "382.426, 519.606, 35.3097, 0.5006", "383.17, 520.435, 34.9538, 0.466", "384.179, 520.886, 34.559, 0.5906", "385.219, 521.282, 34.1236, 0.5928", "386.138, 521.92, 33.6739, 0.5624", "387.044, 522.593, 33.2265, 0.6734", "388.065, 523.039, 32.7841, 0.7536", "389.142, 523.37, 32.3509, 0.8256", "390.203, 523.758, 31.9452, 0.6452", "391.32, 523.862, 31.5826, 0.69", "392.456, 523.899, 31.2553, 0.5334", "393.519, 524.27, 30.9557, 0.491", "394.612, 524.569, 30.6774, 0.5826", "395.657, 525.01, 30.4248, 0.6118", "396.601, 525.649, 30.207, 0.6612", "397.708, 525.858, 30.0328, 0.5488", "398.84, 525.727, 29.8942, 0.644", "399.95, 525.462, 29.7777, 0.4914", "401.089, 525.367, 29.6937, 0.4322", "402.216, 525.168, 29.647, 0.3814", "403.185, 525.754, 29.7237, 0.6864" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "373.158, 503.655, 41.7936, 1.1134", "373.823, 502.369, 43.7441, 0.7022", "373.641, 501.365, 44.4105, 0.782", "372.884, 500.588, 45.1178, 0.5408", "371.832, 500.222, 45.8296, 0.3828", "370.77, 499.907, 46.5144, 0.2866", "369.859, 499.251, 47.1663, 0.2972", "368.863, 498.954, 47.7991, 0.3164", "367.826, 499.266, 48.4414, 0.3528", "367.198, 500.086, 49.1075, 0.4162", "366.975, 501.165, 49.7714, 0.5542", "366.772, 502.264, 50.4179, 0.71", "366.592, 503.374, 51.0398, 0.798", "366.483, 504.489, 51.6471, 0.7932", "366.239, 505.576, 52.2486, 0.9124", "365.908, 506.646, 52.8503, 0.9696", "365.955, 507.711, 53.4839, 0.9564", "366.281, 508.757, 54.145, 0.8248", "366.737, 509.762, 54.8142, 0.643", "366.966, 510.846, 55.4649, 0.6894", "367.075, 511.959, 56.0885, 0.7436", "367.521, 512.974, 56.6843, 0.7696", "367.868, 514.044, 57.2474, 0.7218", "367.987, 515.166, 57.7766, 0.6436", "368.471, 516.165, 58.3022, 0.4474" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "373.158, 503.655, 41.7936, 1.1134", "374.006, 502.595, 42.5692, 1.2026", "374.225, 501.512, 42.9738, 1.3364", "374.063, 500.395, 43.3199, 1.3236", "373.873, 499.272, 43.5943, 1.193", "373.703, 498.142, 43.8049, 1.2406", "373.486, 497.023, 43.986, 1.2954", "373.434, 495.892, 44.1504, 1.3288", "373.601, 494.767, 44.3027, 1.266", "373.858, 493.654, 44.4265, 1.2986", "374.183, 492.558, 44.5096, 1.3202", "374.603, 491.496, 44.5553, 1.3216", "375.215, 490.536, 44.5707, 1.2818" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "367.672, 521.824, 47.9634, 0.454", "368.001, 522.032, 48.3073, 0.3978", "367.899, 523.156, 48.6665, 0.3748", "367.781, 524.271, 49.0238, 0.3974", "367.476, 525.361, 49.3444, 0.5788", "367.453, 526.502, 49.6087, 0.4668", "367.592, 527.633, 49.8431, 0.377" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "367.672, 521.824, 47.9634, 0.454", "368.304, 522.115, 49.5614, 0.6684", "369.408, 522.238, 50.0578, 0.67", "370.182, 523.065, 50.4686, 0.5724", "370.579, 524.128, 50.794, 0.6508", "370.629, 525.269, 51.0362, 0.6832", "370.679, 526.362, 51.1868, 0.6048", "371.435, 527.217, 51.2576, 0.6732", "372.135, 528.112, 51.2971, 0.677", "372.929, 528.919, 51.2949, 0.8244", "373.62, 529.824, 51.2448, 0.645", "374.424, 530.624, 51.1764, 0.4518", "375.295, 531.364, 51.1263, 0.3302", "376.165, 532.105, 51.1221, 0.3302", "377.036, 532.847, 51.1862, 0.3802", "377.931, 533.554, 51.3335, 0.4572", "378.929, 534.076, 51.574, 0.6794", "379.917, 534.624, 51.8958, 0.7034", "380.969, 535.013, 52.2777, 0.5708", "382.074, 535.271, 52.7058, 0.499", "383.169, 535.128, 53.1754, 0.6674", "384.173, 534.621, 53.6889, 0.658", "385.236, 534.306, 54.2606, 0.6004", "386.281, 534.062, 54.9556, 0.6884", "387.053, 534.768, 55.7572, 0.8202", "388.006, 535.224, 56.6552, 0.7622", "389.032, 535.148, 57.6316, 0.748", "389.848, 534.553, 58.6614, 0.7248", "390.879, 534.404, 59.6954, 0.6672", "391.946, 534.351, 60.6836, 0.6322", "392.997, 534.423, 61.6162, 0.6764", "393.975, 534.885, 62.4764, 0.6866", "394.984, 535.313, 63.2405, 0.5948", "396.084, 535.512, 63.903, 0.5062", "397.188, 535.701, 64.4686, 0.4022", "398.215, 536.176, 64.9384, 0.3746", "399.191, 536.765, 65.3212, 0.438", "400.235, 537.21, 65.6608, 0.456", "401.346, 537.361, 66.0136, 0.5136", "402.432, 537.647, 66.379, 0.7328", "403.457, 538.128, 66.7621, 0.8234", "404.518, 538.495, 67.1768, 0.6932", "405.605, 538.644, 67.6472, 0.527", "406.717, 538.711, 68.1069, 0.5396", "407.79, 539.069, 68.546, 0.6066", "408.818, 539.481, 68.9794, 0.7474", "409.743, 540.138, 69.4028, 0.699", "410.769, 540.593, 69.8191, 0.5128", "411.522, 541.279, 70.2878, 0.4064", "412.225, 541.972, 70.8355, 0.421", "413.203, 542.534, 71.3479, 0.5642", "413.839, 543.435, 71.8077, 0.7236", "414.421, 544.414, 72.2058, 0.848", "415.181, 545.253, 72.5606, 0.7668", "416.101, 545.924, 72.8602, 0.7562", "416.991, 546.64, 73.1024, 0.7414", "417.882, 547.35, 73.3186, 0.6926", "418.909, 547.802, 73.5199, 0.704", "420.039, 547.823, 73.7358, 0.69", "421.058, 548.085, 73.9752, 0.6052", "421.928, 548.826, 74.2207, 0.5046", "423.049, 548.996, 74.4836, 0.5006", "424.136, 548.761, 74.8314, 0.7506", "425.236, 548.724, 75.2444, 0.6516", "426.322, 548.976, 75.6734, 0.6834", "427.437, 549.096, 76.0771, 0.612", "428.57, 549.138, 76.4599, 0.6542", "429.665, 549.433, 76.7942, 0.5718", "430.729, 549.111, 77.1016, 0.511", "431.866, 549.096, 77.3682, 0.4098", "433.001, 549.129, 77.5978, 0.3954", "434.087, 549.474, 77.7837, 0.4424", "435.124, 549.948, 77.9094, 0.6282", "436.134, 550.485, 77.9822, 0.7244", "437.153, 551.003, 78.0212, 0.7366", "438.152, 551.56, 78.0464, 0.6484", "439.117, 552.172, 78.0665, 0.565", "440.088, 552.78, 78.0856, 0.7086", "441.074, 553.359, 78.1052, 0.6702", "442.012, 554.01, 78.1228, 0.707", "442.864, 554.77, 78.1371, 0.4784", "443.681, 555.57, 78.1472, 0.3516", "444.491, 556.376, 78.1542, 0.2762", "445.174, 557.287, 78.1729, 0.2776", "445.831, 558.223, 78.2261, 0.28", "446.127, 559.297, 78.3314, 0.285", "446.698, 560.233, 78.5182, 0.2936", "447.445, 561.082, 78.7968, 0.311", "448.187, 561.926, 79.1613, 0.337", "448.923, 562.768, 79.5917, 0.4152", "449.515, 563.72, 80.0643, 0.4146", "450.084, 564.691, 80.5409, 0.435", "450.652, 565.667, 80.9903, 0.596", "451.254, 566.627, 81.3932, 0.5254", "452.08, 567.406, 81.739, 0.356", "452.896, 568.172, 82.4544, 0.2288" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "345.751, 528.634, 47.35, 0.6786", "344.662, 528.589, 47.4107, 0.7326", "343.555, 528.305, 47.4936, 0.7068", "342.437, 528.065, 47.5952, 0.5848", "341.379, 527.632, 47.7162, 0.4878" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "345.751, 528.634, 47.35, 0.6786", "345.028, 529.318, 47.0092, 0.4576", "344.373, 530.249, 46.9748, 0.429", "343.499, 530.951, 46.9616, 0.4556", "342.582, 531.635, 46.9412, 0.4348", "341.898, 532.538, 46.9028, 0.508", "340.996, 533.228, 46.8496, 0.5582", "340.098, 533.936, 46.786, 0.6092", "339.254, 534.709, 46.716, 0.6796", "338.555, 535.612, 46.6267, 0.6988", "337.576, 536.193, 46.5186, 0.5872", "336.444, 536.347, 46.3971, 0.6384", "335.396, 536.799, 46.263, 0.6228", "334.549, 537.565, 46.1076, 0.674", "333.8, 538.403, 45.9404, 0.6092", "333.609, 539.525, 45.7626, 0.5774", "333.23, 540.597, 45.5832, 0.5484", "332.627, 541.566, 45.416, 0.5774", "331.997, 542.516, 45.2732, 0.4574", "331.651, 543.589, 45.1609, 0.393", "331.702, 544.731, 45.0699, 0.42", "331.901, 545.852, 44.9904, 0.4462", "332.155, 546.954, 44.9039, 0.384", "331.992, 548.053, 44.8101, 0.3464", "331.762, 549.138, 44.7096, 0.3564", "331.953, 550.255, 44.6113, 0.4462", "332.205, 551.367, 44.5214, 0.4964", "332.171, 552.492, 44.4508, 0.4678", "331.83, 553.578, 44.4136, 0.5472", "331.448, 554.655, 44.4184, 0.5102", "331.051, 555.727, 44.4679, 0.4196", "330.509, 556.729, 44.571, 0.3592", "330.021, 557.754, 44.7465, 0.4114", "329.98, 558.86, 45.0075, 0.3984", "329.749, 559.971, 45.3334, 0.4474", "328.733, 560.436, 45.7198, 0.413", "327.699, 560.07, 46.1899, 0.4978", "326.755, 559.535, 46.7225, 0.3936", "325.778, 559.463, 47.339, 0.326", "324.717, 559.755, 47.917, 0.2758", "323.678, 559.388, 48.6934, 0.2782", "322.61, 559.8, 48.8354, 0.2814" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "379.635, 558.114, 62.0029, 0.3818", "380.025, 558.942, 62.4518, 0.333", "380.758, 559.795, 62.8919, 0.3792", "381.322, 560.764, 63.3349, 0.4848", "381.721, 561.82, 63.7764, 0.586", "382.024, 562.912, 64.2132, 0.546", "382.533, 563.931, 64.6422, 0.4322", "382.908, 565.003, 65.0748, 0.4134", "383.239, 566.067, 65.5536, 0.362", "383.273, 567.157, 66.0937, 0.347", "383.088, 568.257, 66.6646, 0.3872", "382.964, 569.362, 67.2602, 0.3602", "383.222, 570.417, 67.8678, 0.3434", "383.28, 571.508, 68.4569, 0.3808", "383.055, 572.61, 69.0323, 0.3474", "383.09, 573.717, 69.6058, 0.326", "383.087, 574.826, 70.2027, 0.3178", "382.854, 575.903, 70.8352, 0.3802", "383.523, 576.7, 71.505, 0.3464", "384.059, 577.65, 72.1994, 0.3242", "383.985, 578.737, 72.9086, 0.3142", "383.797, 579.832, 73.5874, 0.3734", "383.687, 580.865, 74.2697, 0.3338", "383.877, 581.948, 74.8947, 0.3", "383.698, 583.048, 75.4191, 0.2746", "383.386, 584.142, 75.8388, 0.2746", "383.084, 585.243, 76.1608, 0.2746", "382.826, 586.357, 76.4019, 0.2746", "382.353, 587.389, 76.5828, 0.2746", "381.392, 587.881, 76.7365, 0.2746", "380.385, 588.406, 76.8894, 0.2746", "379.567, 589.193, 77.0605, 0.2746", "378.801, 590.039, 77.266, 0.2746", "378.039, 590.885, 77.5163, 0.2746", "377.279, 591.728, 77.8156, 0.2746", "376.527, 592.577, 78.1614, 0.2746", "375.854, 593.489, 78.5411, 0.2746", "375.2, 594.418, 78.9429, 0.2746", "374.987, 595.478, 79.41, 0.2746", "374.941, 596.579, 79.9224, 0.2746", "374.62, 597.659, 80.4392, 0.2746", "374.241, 598.72, 80.9466, 0.2746", "373.681, 599.708, 81.4416, 0.2746", "373.143, 600.7, 81.9358, 0.2746", "372.881, 601.795, 82.4379, 0.2746", "372.784, 602.921, 82.9606, 0.2746", "372.555, 604.011, 83.5344, 0.2746", "372.373, 605.026, 84.2391, 0.2746", "372.2, 605.996, 85.0606, 0.2746", "371.817, 606.989, 85.8836, 0.2746", "371.366, 608.0, 86.6331, 0.2746", "370.923, 609.037, 87.2682, 0.2746", "370.48, 610.085, 87.7638, 0.2746", "370.206, 611.192, 88.121, 0.2744", "370.187, 612.334, 88.3719, 0.2744", "370.154, 613.476, 88.5634, 0.2742", "370.007, 614.608, 88.7354, 0.2736", "369.853, 615.739, 88.9106, 0.2728", "369.934, 616.873, 89.1075, 0.2712", "370.522, 617.85, 89.3133, 0.2684", "371.114, 618.827, 89.516, 0.2626", "371.716, 619.796, 89.7106, 0.2542", "372.326, 620.761, 89.8946, 0.2288", "372.928, 621.711, 90.3809, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "379.635, 558.114, 62.0029, 0.3818", "379.194, 558.455, 61.1635, 0.6864", "378.542, 559.057, 62.8062, 0.6106", "378.06, 560.003, 63.4875, 0.6696", "377.352, 560.832, 64.2449, 0.7422", "376.622, 561.63, 65.0586, 0.5962", "375.684, 562.193, 65.8756, 0.5454", "374.583, 562.244, 66.6565, 0.526", "373.882, 563.046, 67.4072, 0.5846", "373.356, 564.033, 68.1352, 0.4644", "372.315, 564.324, 68.8696, 0.4358", "371.458, 563.786, 69.6819, 0.355", "370.419, 563.825, 70.5477, 0.3402", "369.356, 563.874, 71.4512, 0.345", "368.43, 564.439, 72.3579, 0.4254", "367.611, 565.17, 73.2494, 0.457", "366.797, 565.882, 74.1339, 0.3988", "365.805, 566.297, 74.9916, 0.3988", "364.855, 566.798, 75.817, 0.3338", "364.603, 567.538, 76.6931, 0.2998", "364.936, 568.375, 77.6434, 0.2744", "365.517, 569.337, 78.4008, 0.2742", "365.542, 570.433, 78.9827, 0.2736", "365.197, 571.501, 79.4326, 0.2728", "365.951, 572.346, 79.8157, 0.2712", "366.493, 573.261, 80.278, 0.2684", "367.035, 574.176, 80.8058, 0.2626", "367.606, 575.115, 81.3456, 0.2542", "368.204, 576.078, 81.8216, 0.2288", "368.803, 577.043, 82.6342, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "354.184, 515.553, 37.5161, 0.9886", "353.332, 515.558, 37.5043, 0.8792", "352.242, 515.864, 37.4884, 0.7686", "351.115, 515.902, 37.4741, 0.5738", "350.183, 515.284, 37.4528, 0.6186", "349.268, 514.599, 37.4088, 0.5626", "348.192, 514.229, 37.3416, 0.6762", "347.174, 513.717, 37.2476, 0.7478", "346.273, 513.019, 37.1381, 0.6376", "345.304, 512.416, 37.0317, 0.4702", "344.206, 512.663, 36.9491, 0.4382", "343.253, 513.293, 36.9082, 0.4014" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "354.184, 515.553, 37.5161, 0.9886", "353.87, 514.625, 38.0604, 0.2288", "353.566, 513.553, 37.0502, 0.6384", "353.06, 512.577, 36.6282, 0.5674", "352.831, 511.574, 36.0853, 0.61", "352.771, 510.484, 35.5029, 0.532", "352.655, 509.404, 34.9003, 0.462", "352.784, 508.294, 34.3652, 0.4274", "352.399, 507.238, 33.9665, 0.5872", "351.671, 506.402, 33.6784, 0.4832", "351.7, 505.304, 33.4807, 0.4026", "351.527, 504.372, 33.3897, 0.3962", "351.762, 503.419, 33.4037, 0.3756", "352.18, 502.361, 33.4704, 0.3798", "352.235, 501.224, 33.5572, 0.4126", "351.912, 500.128, 33.6395, 0.5784", "351.631, 499.024, 33.6924, 0.605", "351.773, 497.889, 33.6963, 0.646", "351.807, 496.751, 33.6482, 0.5318", "351.561, 495.64, 33.5446, 0.5572", "351.7, 494.541, 33.4046, 0.5974", "352.374, 493.63, 33.2279, 0.7058", "352.7, 492.562, 33.0226, 0.7426", "352.532, 491.448, 32.7972, 0.6938", "352.03, 490.432, 32.5548, 0.7122", "351.451, 489.455, 32.3134, 0.675", "351.048, 488.393, 32.0818, 0.7256", "350.777, 487.286, 31.8685, 0.6942", "350.261, 486.344, 31.687, 0.7856", "349.452, 485.554, 31.5249, 0.6876", "348.943, 484.546, 31.3793, 0.661", "348.385, 483.559, 31.241, 0.5438", "347.774, 482.593, 31.1016, 0.4284", "347.23, 481.587, 30.9532, 0.4064", "346.674, 480.592, 30.7812, 0.3476", "346.455, 479.476, 30.5948, 0.3268", "346.057, 478.724, 30.3486, 0.3188", "346.41, 477.645, 30.0947, 0.3818", "347.199, 476.935, 29.8584, 0.3496", "348.094, 476.243, 29.6612, 0.3288", "348.348, 475.21, 29.5156, 0.3302", "348.271, 474.069, 29.4244, 0.3672", "347.779, 473.069, 29.3902, 0.4974", "347.487, 471.99, 29.4006, 0.4404", "347.433, 470.85, 29.4221, 0.409", "347.055, 469.813, 29.4417, 0.4498", "346.254, 469.009, 29.4414, 0.5016", "345.951, 467.926, 29.4227, 0.4834", "345.655, 466.822, 29.3913, 0.5472", "345.615, 465.681, 29.3574, 0.6508", "345.662, 464.539, 29.3406, 0.685", "345.575, 463.399, 29.3208, 0.599", "345.455, 462.262, 29.2824, 0.4782", "345.205, 461.146, 29.2177, 0.5244", "344.788, 460.084, 29.1189, 0.4436", "344.593, 458.964, 28.9727, 0.4142", "344.572, 457.825, 28.8016, 0.4614", "344.566, 456.684, 28.6286, 0.5122", "344.506, 455.55, 28.4598, 0.5578", "344.122, 454.482, 28.3237, 0.4198", "343.56, 453.524, 28.2106, 0.3278", "343.532, 452.381, 28.1448, 0.2792", "343.503, 451.237, 28.1277, 0.283", "343.782, 450.133, 28.1462, 0.2904", "344.121, 449.041, 28.1845, 0.3032", "344.462, 447.949, 28.2304, 0.33", "344.804, 446.858, 28.2741, 0.3668", "345.329, 445.843, 28.3069, 0.4962", "346.083, 444.986, 28.3273, 0.4398", "346.651, 443.996, 28.3388, 0.401", "346.925, 442.886, 28.3441, 0.466", "347.155, 441.766, 28.3461, 0.3814", "347.163, 440.623, 28.3466, 0.305", "347.29, 439.486, 28.3466, 0.2288", "348.078, 438.669, 28.3466, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "378.642, 527.559, 39.6091, 0.786", "378.497, 528.554, 39.6676, 0.7596", "378.535, 529.69, 39.6421, 0.6762", "378.768, 530.806, 39.5786, 0.4608", "378.573, 531.917, 39.4996, 0.3562", "378.327, 533.032, 39.3932, 0.3324", "378.046, 534.137, 39.2745, 0.3776", "377.919, 535.273, 39.1639, 0.4876", "377.711, 536.396, 39.0578, 0.5614", "377.435, 537.506, 38.9589, 0.6436", "377.208, 538.627, 38.8797, 0.6066" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "378.642, 527.559, 39.6091, 0.786", "379.749, 528.258, 38.2222, 0.6996", "380.396, 529.186, 37.8641, 0.5544", "380.961, 530.14, 37.5122, 0.515", "382.046, 530.366, 37.1594, 0.698", "383.158, 530.282, 36.8239, 0.7108", "384.251, 530.6, 36.5257, 0.7172", "385.314, 531.014, 36.2757, 0.8138", "386.285, 531.586, 36.0433, 0.8118", "387.04, 532.426, 35.7955, 0.77", "387.642, 533.398, 35.5751, 0.6498", "388.264, 534.33, 35.3791, 0.6338", "389.314, 534.764, 35.1856, 0.5142", "390.447, 534.81, 34.9658, 0.501", "391.564, 534.729, 34.6956, 0.6068", "392.645, 535.026, 34.3784, 0.8592", "393.639, 535.565, 34.0231, 0.825", "394.612, 536.143, 33.6426, 0.6816", "395.632, 536.638, 33.2553, 0.5766", "396.689, 537.039, 32.8661, 0.5154", "397.779, 537.118, 32.466, 0.668", "398.893, 536.962, 32.0678, 0.5756", "400.011, 537.021, 31.6775, 0.6248", "401.052, 537.412, 31.3001, 0.5608", "402.05, 537.942, 30.9523, 0.5088", "403.126, 538.266, 30.6564, 0.546", "404.219, 538.123, 30.4296, 0.6546", "405.262, 537.657, 30.2744, 0.6622", "406.341, 537.31, 30.1907, 0.7008", "407.474, 537.221, 30.172, 0.6536", "408.513, 537.67, 30.1776, 0.6854", "409.399, 538.364, 30.1902, 0.6244", "410.042, 539.309, 30.1994, 0.635", "410.579, 540.215, 30.2008, 0.5112", "411.689, 540.479, 30.1927, 0.5196", "412.828, 540.54, 30.177, 0.5256", "413.963, 540.59, 30.158, 0.582", "414.826, 541.634, 30.0482, 0.4088", "415.852, 542.08, 30.011, 0.4518", "416.85, 542.604, 29.9844, 0.4942", "417.72, 543.335, 29.9678, 0.5254", "418.833, 543.493, 29.96, 0.356", "419.39, 542.612, 29.96, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "368.471, 516.165, 58.3022, 0.4474", "368.47, 516.166, 58.749, 0.3316", "367.828, 516.747, 59.402, 0.286", "366.826, 517.245, 60.0138, 0.2956", "365.804, 517.748, 60.5416, 0.3146" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "368.471, 516.165, 58.3022, 0.4474", "368.913, 516.865, 58.408, 0.3378", "369.9, 517.197, 58.4489, 0.418", "370.33, 518.256, 58.49, 0.4114", "370.813, 519.294, 58.553, 0.4698", "371.379, 520.275, 58.6524, 0.4624", "372.078, 521.169, 58.7894, 0.5528", "372.665, 522.143, 58.9571, 0.673", "373.376, 523.033, 59.1536, 0.6674", "374.081, 523.927, 59.3597, 0.8506", "374.503, 524.962, 59.5669, 0.938", "374.557, 526.099, 59.7766, 0.9522", "374.591, 527.235, 59.997, 0.7812", "375.063, 528.217, 60.2529, 0.7366", "375.547, 529.201, 60.5766, 0.7026", "376.236, 530.061, 60.949, 0.6302", "376.25, 531.139, 61.3631, 0.544", "376.289, 532.264, 61.7957, 0.6068", "376.474, 533.382, 62.218, 0.7878", "376.939, 534.414, 62.6262, 0.81" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "375.215, 490.536, 44.5707, 1.2818", "375.855, 489.989, 43.7186, 0.4576", "376.735, 489.385, 42.7308, 0.5758", "377.374, 488.472, 42.324, 0.5636", "377.887, 487.474, 41.8636, 0.7456", "378.445, 486.502, 41.3731, 0.7764", "379.183, 485.673, 40.8825, 0.7204", "380.112, 485.034, 40.4124, 0.7084", "381.082, 484.463, 39.9686, 0.6976", "381.999, 483.816, 39.545, 0.621", "382.996, 483.334, 39.1518, 0.5272", "384.06, 483.47, 38.8066, 0.5746", "385.106, 483.933, 38.5221, 0.732", "386.219, 484.174, 38.2844, 0.687", "387.357, 484.128, 38.0828, 0.6368", "388.489, 483.976, 37.8907, 0.6132", "389.582, 483.661, 37.6835, 0.687", "390.701, 483.442, 37.464, 0.7128", "391.79, 483.782, 37.2462, 0.6136", "392.777, 484.354, 37.0157, 0.6834", "393.859, 484.706, 36.7343, 0.726", "394.975, 484.911, 36.3964, 0.7704", "396.104, 485.024, 36.0013, 0.5608", "397.206, 485.224, 35.5256, 0.4466", "398.272, 485.383, 34.9468, 0.5042", "399.337, 485.447, 34.2728, 0.447", "400.397, 485.703, 33.5552, 0.4516", "401.483, 485.943, 32.8496, 0.3796", "402.506, 485.653, 32.1888, 0.4102", "403.41, 485.003, 31.558, 0.3548", "403.915, 485.598, 30.844, 0.34", "404.573, 486.445, 30.2044, 0.3446", "405.492, 486.908, 29.6783, 0.4238", "406.614, 487.007, 29.218, 0.4576", "407.737, 486.889, 28.8467, 0.3814", "408.859, 486.695, 28.2932, 0.4576" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "375.215, 490.536, 44.5707, 1.2818", "375.627, 489.179, 44.5819, 1.1196", "375.881, 488.179, 44.6043, 1.1204" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "367.592, 527.633, 49.8431, 0.377", "368.188, 528.394, 50.8791, 0.3644", "368.119, 529.508, 51.2467, 0.3096", "368.306, 530.62, 51.5992, 0.2922", "368.441, 531.755, 51.8804, 0.307", "368.659, 532.878, 52.0892, 0.3362", "368.74, 534.017, 52.2502, 0.3828", "368.691, 535.157, 52.383, 0.5038", "368.77, 536.294, 52.542, 0.5612", "368.647, 537.418, 52.7498, 0.7906", "368.352, 538.506, 53.0102, 0.8496", "368.4, 539.632, 53.3106, 0.906", "368.687, 540.729, 53.6332, 0.809", "368.824, 541.849, 53.9734, 0.693", "368.85, 542.981, 54.3158, 0.6258", "368.87, 544.114, 54.6434, 0.6992", "368.696, 545.24, 54.9377, 0.5604", "368.311, 546.305, 55.2037, 0.494", "367.741, 547.29, 55.4621, 0.5874", "367.389, 548.359, 55.7295, 0.6238", "367.362, 549.485, 56.0123, 0.6692", "367.513, 550.612, 56.3125, 0.6308", "367.286, 551.633, 56.6303, 0.4706", "366.508, 552.459, 56.9685, 0.3756", "366.317, 553.469, 57.3283, 0.3634", "366.743, 554.493, 57.7136, 0.4602", "366.972, 555.583, 58.114, 0.516", "366.724, 556.674, 58.5175, 0.5348", "367.103, 557.711, 58.9148, 0.5224", "367.608, 558.727, 59.2878, 0.4988", "367.905, 559.823, 59.635, 0.4602", "367.991, 560.958, 59.9519, 0.3628", "367.934, 562.097, 60.2409, 0.3068", "367.814, 563.231, 60.5125, 0.287", "367.294, 564.17, 60.7936, 0.2988", "366.407, 564.868, 61.0744, 0.3142", "366.118, 565.89, 61.3704, 0.3734", "366.323, 567.009, 61.677, 0.3338", "366.411, 568.144, 61.9965, 0.3", "366.168, 569.25, 62.3445, 0.2746", "365.588, 570.221, 62.7259, 0.2746", "365.022, 571.2, 63.1473, 0.2746", "364.387, 572.128, 63.614, 0.2746", "364.001, 573.173, 64.1332, 0.2746", "363.762, 574.246, 64.7049, 0.2748", "363.595, 575.328, 65.3117, 0.2748", "363.353, 576.415, 65.9033, 0.2752", "362.975, 577.471, 66.4566, 0.2758", "362.465, 578.479, 66.9553, 0.2766", "361.986, 579.507, 67.3915, 0.2784", "361.55, 580.558, 67.7743, 0.2818", "361.1, 581.603, 68.1276, 0.2882", "360.576, 582.607, 68.4712, 0.2994", "359.934, 583.544, 68.8117, 0.3228", "359.441, 584.547, 69.1614, 0.3538", "359.221, 585.649, 69.5377, 0.4722", "358.834, 586.697, 69.9272, 0.3934", "358.335, 587.716, 70.3122, 0.3254", "357.852, 588.742, 70.6905, 0.2746", "357.395, 589.776, 71.0713, 0.2746", "356.909, 590.791, 71.4524, 0.2746", "356.276, 591.728, 71.8122, 0.2746", "355.604, 592.646, 72.1386, 0.2746", "355.026, 593.625, 72.4304, 0.2746", "354.539, 594.656, 72.6888, 0.2746", "354.014, 595.669, 72.9123, 0.2746", "353.471, 596.674, 73.1055, 0.2746", "353.26, 597.78, 73.2827, 0.2746", "353.191, 598.919, 73.4549, 0.2746", "353.132, 600.059, 73.626, 0.2746", "353.059, 601.198, 73.7951, 0.2746", "352.964, 602.337, 73.9578, 0.2746", "352.866, 603.475, 74.111, 0.2746", "352.766, 604.614, 74.2535, 0.2746", "352.668, 605.753, 74.3884, 0.2746", "352.481, 606.881, 74.5231, 0.2746", "352.234, 607.996, 74.6662, 0.2748", "351.978, 609.108, 74.8233, 0.2748", "351.779, 610.229, 75.0067, 0.275", "351.858, 611.362, 75.213, 0.2758", "351.826, 612.5, 75.4278, 0.2766", "351.718, 613.635, 75.6344, 0.2782", "351.584, 614.77, 75.822, 0.2814", "351.174, 615.833, 75.9853, 0.287", "350.718, 616.883, 76.1244, 0.2984", "350.487, 618.0, 76.249, 0.3136", "350.26, 619.12, 76.3672, 0.3724", "350.064, 620.246, 76.4764, 0.332", "349.875, 621.374, 76.5724, 0.2966", "349.628, 622.49, 76.652, 0.2684", "349.277, 623.578, 76.7122, 0.2626", "349.088, 624.706, 76.7528, 0.2542", "348.984, 625.846, 76.7766, 0.2288", "348.88, 626.985, 76.7959, 0.2288" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "367.592, 527.633, 49.8431, 0.377", "366.581, 528.441, 50.2513, 0.3618", "365.664, 529.108, 50.4582, 0.4576", "364.597, 529.487, 50.6512, 0.51", "363.504, 529.817, 50.8494, 0.53", "362.531, 530.379, 51.093, 0.483", "361.966, 531.343, 51.38, 0.5748", "361.449, 532.351, 51.6841, 0.564", "360.872, 533.328, 51.991, 0.507", "360.253, 534.277, 52.2962, 0.5796", "359.234, 534.754, 52.5826, 0.5368", "358.264, 535.355, 52.8111, 0.6318", "357.386, 536.088, 52.9729, 0.6476" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "341.379, 527.632, 47.7162, 0.4878", "340.409, 527.057, 48.5996, 0.5788", "339.654, 526.286, 48.9919, 0.4602", "339.249, 525.239, 49.4046, 0.397", "339.077, 524.119, 49.8201, 0.4336", "338.891, 523.006, 50.2278, 0.4422", "338.515, 521.937, 50.626, 0.5158", "338.218, 520.857, 51.0082, 0.6038", "338.069, 519.733, 51.3867, 0.5428", "337.807, 518.635, 51.7689, 0.6024", "337.388, 517.584, 52.1562, 0.5602", "336.846, 516.594, 52.5532, 0.5376", "336.234, 515.643, 52.9572, 0.4548", "335.655, 514.671, 53.3599, 0.4994", "335.108, 513.68, 53.7608, 0.5352", "334.412, 512.812, 54.1696, 0.6012", "333.549, 512.089, 54.5804, 0.4968", "332.601, 511.473, 54.9665, 0.49", "331.529, 511.159, 55.3266, 0.4826", "330.615, 510.598, 55.6819, 0.4462", "330.055, 509.631, 56.0221, 0.4882", "329.343, 508.757, 56.3184, 0.4924", "328.547, 507.942, 56.5692, 0.629", "327.84, 507.048, 56.7773, 0.714", "327.032, 506.243, 56.9279, 0.5432", "326.038, 505.691, 57.0181, 0.4502", "325.102, 505.039, 57.071, 0.3352", "324.635, 504.009, 57.111, 0.3024", "324.186, 502.956, 57.1547, 0.279", "324.03, 501.826, 57.2163, 0.2828", "323.968, 500.685, 57.2995, 0.2896", "323.665, 499.585, 57.4014, 0.3034", "323.368, 498.48, 57.5162, 0.3228", "322.897, 497.443, 57.6481, 0.3896", "322.036, 496.694, 57.7956, 0.364", "321.16, 495.993, 57.9547, 0.3556", "320.811, 494.906, 58.1252, 0.3796", "320.336, 493.871, 58.3114, 0.4604", "319.961, 492.815, 58.527, 0.6626", "319.211, 491.956, 58.765, 0.783", "318.682, 491.014, 59.0526, 0.8682", "318.591, 489.892, 59.367, 0.7804", "318.722, 488.765, 59.7041, 0.6676", "318.686, 487.663, 60.0642, 0.445", "318.3, 486.599, 60.4346, 0.3272", "317.92, 485.527, 60.797, 0.2778", "317.442, 484.608, 61.1996, 0.2806", "317.299, 483.488, 61.5975, 0.2854", "316.965, 482.402, 61.976, 0.2966", "316.532, 481.363, 62.3224, 0.305", "315.913, 480.416, 62.6371, 0.3814", "316.087, 479.679, 63.56, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "341.379, 527.632, 47.7162, 0.4878", "340.906, 527.769, 47.8458, 0.3672", "340.202, 528.364, 47.9898, 0.3148", "339.493, 529.141, 48.1463, 0.3018", "338.451, 529.603, 48.3255, 0.3258", "337.572, 530.29, 48.531, 0.3654", "336.842, 531.16, 48.7668, 0.464", "336.315, 532.158, 49.03, 0.523", "335.972, 533.24, 49.3069, 0.548", "335.296, 534.107, 49.595, 0.5468", "334.428, 534.839, 49.8868, 0.5448", "333.512, 535.516, 50.1626, 0.5412", "332.552, 536.132, 50.4241, 0.5342", "331.762, 536.95, 50.6764, 0.5218", "330.781, 537.524, 50.9236, 0.4976", "329.841, 538.172, 51.165, 0.4582", "329.093, 539.033, 51.3996, 0.3594", "327.991, 539.283, 51.6438, 0.3002", "327.309, 540.152, 51.91, 0.2748", "327.173, 541.241, 52.2189, 0.275", "326.413, 542.064, 52.5742, 0.2752", "325.626, 542.806, 52.9609, 0.276", "325.144, 543.796, 53.3744, 0.277", "324.293, 544.502, 53.8286, 0.2792", "323.315, 545.075, 54.2786, 0.283", "322.338, 545.647, 54.7268, 0.2902", "321.363, 546.219, 55.1785, 0.3046", "320.409, 546.789, 55.6598, 0.3246", "319.383, 547.191, 56.1621, 0.3934", "318.271, 547.377, 56.6434, 0.3702", "317.153, 547.563, 57.092, 0.3698", "316.03, 547.75, 57.5, 0.393", "314.904, 547.922, 57.8707, 0.5468", "313.77, 548.011, 58.2196, 0.5232", "312.634, 548.011, 58.5738, 0.607", "311.502, 548.011, 58.9571, 0.6", "310.374, 548.011, 59.3779, 0.4606", "309.25, 548.011, 59.8374, 0.357", "308.127, 548.011, 60.3296, 0.3276", "307.005, 548.011, 60.8457, 0.3998", "305.884, 548.011, 61.3752, 0.3772", "304.762, 548.011, 61.9097, 0.4062", "303.648, 547.939, 62.4436, 0.3476", "302.559, 547.656, 62.9712, 0.3248", "301.478, 547.336, 63.4903, 0.3228", "300.396, 547.017, 64.0041, 0.3538", "299.316, 546.689, 64.5187, 0.4724", "298.248, 546.334, 65.0443, 0.3934", "297.185, 545.972, 65.5914, 0.3258", "296.124, 545.61, 66.1674, 0.2752", "295.074, 545.233, 66.7738, 0.2758", "294.065, 544.775, 67.4131, 0.2766", "293.308, 544.088, 68.1061, 0.2784", "292.669, 543.302, 68.8512, 0.2818", "291.717, 542.779, 69.5822, 0.288", "290.641, 542.582, 70.259, 0.2998", "289.517, 542.537, 70.8568, 0.3208", "288.424, 542.741, 71.3712, 0.3622", "287.373, 543.155, 71.8077, 0.4284", "286.329, 543.597, 72.1767, 0.6024", "285.283, 544.038, 72.4828, 0.6752", "284.218, 544.447, 72.7264, 0.6512", "283.107, 544.687, 72.9084, 0.4618", "281.971, 544.822, 73.0296, 0.3578", "280.834, 544.942, 73.096, 0.3356", "279.695, 545.061, 73.1158, 0.3832", "278.558, 545.181, 73.0996, 0.4988", "277.417, 545.249, 73.0554, 0.5806", "276.274, 545.262, 72.9859, 0.6884", "275.13, 545.262, 72.8913, 0.6436", "273.986, 545.262, 72.7684, 0.834", "272.849, 545.18, 72.609, 0.7732", "271.726, 544.988, 72.4024, 0.6098", "270.613, 544.765, 72.1442, 0.5528", "269.502, 544.543, 71.8393, 0.6266", "268.393, 544.331, 71.4994, 0.5788", "267.278, 544.139, 71.1418, 0.6994", "266.161, 543.954, 70.7848, 0.5952", "265.042, 543.767, 70.4446, 0.6196", "263.922, 543.581, 70.1313, 0.7512", "262.818, 543.319, 69.8443, 0.5772", "261.714, 543.029, 69.6077, 0.4522", "260.609, 542.739, 69.419, 0.4068", "259.503, 542.449, 69.2717, 0.5604", "258.396, 542.159, 69.1592, 0.6074", "257.301, 541.842, 69.0738, 0.4746", "256.27, 541.346, 69.0094, 0.3828", "255.24, 540.849, 68.9598, 0.3764", "254.205, 540.363, 68.9254, 0.4852", "253.129, 540.034, 68.9088, 0.5582", "252.003, 540.232, 68.917, 0.6326", "250.935, 540.319, 68.9466, 0.6102", "250.224, 539.779, 68.999, 0.4322", "249.17, 539.35, 69.1037, 0.305", "248.116, 538.92, 69.2418, 0.2288", "247.063, 538.49, 69.6102, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "322.61, 559.8, 48.8354, 0.2814", "322.228, 559.81, 48.8228, 0.2872", "321.09, 559.838, 48.6612, 0.2988", "319.952, 559.867, 48.4019, 0.3144", "318.813, 559.895, 48.0866, 0.3738", "317.822, 559.924, 47.5941, 0.3346", "316.789, 559.924, 47.0271, 0.3014", "315.723, 559.991, 46.492, 0.2768", "314.656, 560.362, 46.1174, 0.279", "313.588, 560.753, 45.9836, 0.2826", "312.501, 561.043, 46.1135, 0.289", "311.424, 561.306, 46.4965, 0.3024", "310.358, 561.566, 47.0733, 0.321", "309.288, 561.653, 47.7814, 0.386", "308.216, 561.487, 48.5666, 0.358", "307.151, 561.275, 49.3878, 0.3398", "306.089, 561.062, 50.2222, 0.3738", "305.01, 560.973, 51.0499, 0.3346", "303.915, 561.011, 51.8568, 0.3014", "302.817, 561.057, 52.6352, 0.2768", "301.714, 561.103, 53.382, 0.279", "300.626, 561.258, 54.0982, 0.2826", "299.575, 561.586, 54.7873, 0.2892", "298.499, 561.758, 55.4467, 0.3028", "297.388, 561.738, 56.07, 0.3214", "296.293, 561.544, 56.644, 0.3872", "295.211, 561.212, 57.1581, 0.3588", "294.174, 560.761, 57.6131, 0.3482", "293.2, 560.18, 58.0247, 0.3538", "292.393, 559.408, 58.4167, 0.4722", "291.768, 558.47, 58.7978, 0.3934", "290.897, 557.804, 59.1643, 0.3254", "289.826, 557.452, 59.5118, 0.2746", "288.747, 557.667, 59.8346, 0.2748", "287.648, 557.956, 60.137, 0.2748", "286.522, 558.064, 60.4321, 0.275", "285.383, 558.089, 60.7082, 0.2754", "284.243, 558.091, 60.963, 0.2762", "283.104, 558.091, 61.2069, 0.2778", "281.969, 558.091, 61.4429, 0.2806", "280.833, 558.091, 61.6655, 0.285", "279.693, 558.12, 61.8551, 0.2954", "278.553, 558.192, 61.9945, 0.308", "277.411, 558.265, 62.0738, 0.3616", "276.27, 558.337, 62.0911, 0.3134", "275.139, 558.498, 62.0572, 0.2542", "274.121, 559.009, 61.8408, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "322.61, 559.8, 48.8354, 0.2814", "322.556, 559.807, 49.4007, 0.2288", "322.36, 560.597, 50.8066, 0.2962", "321.718, 561.241, 51.3915, 0.3162", "321.326, 562.127, 51.8837, 0.346", "321.038, 562.492, 52.6333, 0.4344", "320.268, 562.808, 53.6166, 0.4376", "319.639, 563.521, 54.6398, 0.5386", "320.154, 564.336, 55.6931, 0.4944", "320.882, 565.125, 56.6905, 0.389", "321.465, 566.029, 57.6005, 0.308", "321.839, 567.076, 58.3702, 0.2894", "322.288, 568.1, 59.0181, 0.3018", "322.669, 569.156, 59.5739, 0.3258", "323.093, 570.199, 60.0583, 0.3664", "323.594, 571.214, 60.4934, 0.4596", "324.452, 571.874, 60.909, 0.5448", "325.409, 572.482, 61.2973, 0.4442", "326.412, 573.012, 61.6493, 0.3672", "327.21, 573.817, 61.964, 0.3784", "327.284, 574.95, 62.2289, 0.3388", "327.074, 576.07, 62.4526, 0.3304", "327.298, 577.186, 62.8737, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "343.253, 513.293, 36.9082, 0.4014", "342.323, 512.97, 36.8942, 0.4514", "341.802, 511.956, 36.9085, 0.427" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "343.253, 513.293, 36.9082, 0.4014", "343.118, 513.192, 35.9136, 0.2288", "342.198, 513.527, 34.7141, 0.3288", "341.351, 514.172, 34.183, 0.378", "340.496, 514.907, 33.6496, 0.4526", "339.49, 514.929, 33.1321, 0.6708", "338.639, 514.219, 32.6332, 0.6878", "337.61, 514.197, 32.1289, 0.5414", "337.115, 515.168, 31.6977, 0.4478", "337.287, 516.281, 31.3468, 0.5546", "337.296, 517.359, 31.0671, 0.536", "336.367, 517.593, 30.8641, 0.6384", "335.324, 517.165, 30.7572, 0.6214", "334.255, 517.423, 30.6942, 0.678", "333.315, 518.07, 30.6625, 0.5848", "332.294, 518.537, 30.8, 0.6864" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "377.208, 538.627, 38.8797, 0.6066", "376.736, 539.064, 38.7489, 0.9152", "375.925, 539.866, 39.0835, 0.9072", "375.158, 540.712, 39.2154, 0.708", "374.542, 541.655, 39.38, 0.5504", "374.318, 542.77, 39.5864, 0.6008", "374.202, 543.901, 39.8264, 0.6352", "373.987, 545.016, 40.0949, 0.5282", "374.0, 546.135, 40.4037, 0.4706", "374.308, 547.223, 40.7355, 0.5964", "374.686, 548.293, 41.0749, 0.6154", "375.038, 549.368, 41.4198, 0.7754", "375.559, 550.367, 41.7684, 0.9248", "376.202, 551.303, 42.1081, 1.0016", "376.755, 552.288, 42.4368, 0.9712", "377.251, 553.306, 42.7507, 0.8392", "377.907, 554.234, 43.0399, 0.7318", "378.641, 555.107, 43.304, 0.554", "379.405, 555.95, 43.5518, 0.5752", "380.046, 556.849, 43.785, 0.515", "380.226, 557.961, 43.9953, 0.428", "380.066, 559.085, 44.1986, 0.3764", "379.807, 560.189, 44.4279, 0.4364", "379.988, 561.27, 44.6732, 0.476", "380.33, 562.361, 44.9033, 0.4412", "379.99, 563.405, 45.1324, 0.443", "379.178, 564.198, 45.3872, 0.5812", "378.338, 564.915, 45.6856, 0.641", "378.019, 565.98, 46.016, 0.5622", "377.512, 566.614, 46.4414, 0.4214", "376.457, 566.942, 46.9244, 0.3638", "375.617, 567.699, 47.4334, 0.4132", "375.075, 568.608, 47.9702, 0.4334", "374.747, 569.673, 48.5226, 0.3604", "373.85, 570.229, 49.1008, 0.302", "373.722, 571.128, 49.7557, 0.2784", "372.906, 571.446, 50.4773, 0.2816", "372.346, 572.056, 51.17, 0.2876", "371.797, 572.958, 51.8269, 0.3", "370.849, 573.543, 52.4423, 0.3164", "370.336, 574.462, 53.0155, 0.3778", "369.749, 575.413, 53.5553, 0.3418", "369.021, 576.261, 54.0966, 0.3144", "368.226, 577.046, 54.6552, 0.3024", "367.213, 577.506, 55.2275, 0.3208", "366.169, 577.94, 55.8026, 0.386", "365.071, 578.181, 56.3934, 0.357", "364.136, 578.798, 57.008, 0.3436", "363.376, 579.613, 57.6688, 0.3512", "362.831, 580.564, 58.4088, 0.4382", "362.387, 581.542, 59.2217, 0.4744", "361.39, 581.304, 60.1588, 0.4618", "360.342, 581.321, 61.166, 0.366", "359.651, 581.922, 62.2381, 0.3126", "359.111, 582.724, 63.3741, 0.2988", "358.756, 583.652, 64.5246, 0.3142", "358.079, 584.42, 65.6488, 0.3734", "357.595, 585.326, 66.7472, 0.3338", "356.8, 585.946, 67.835, 0.3", "355.889, 586.531, 68.8475, 0.2746", "355.047, 587.239, 69.7724, 0.2746", "354.301, 588.062, 70.6334, 0.2746", "353.528, 588.861, 71.4543, 0.2746", "352.694, 589.583, 72.2686, 0.2746", "352.049, 590.41, 73.1032, 0.2746", "351.634, 591.44, 73.9679, 0.2746", "351.113, 592.36, 74.9249, 0.2744", "350.56, 593.158, 76.0418, 0.2744", "350.088, 594.072, 77.252, 0.2742", "349.68, 595.091, 78.4823, 0.2736", "349.341, 595.846, 79.7367, 0.2728", "349.725, 596.199, 81.2543, 0.2712", "350.124, 596.365, 82.9478, 0.2684", "350.531, 596.233, 84.726, 0.2626", "350.461, 595.706, 86.4016, 0.2542", "349.63, 595.086, 87.8027, 0.2288", "348.665, 594.993, 90.2686, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "377.208, 538.627, 38.8797, 0.6066", "378.137, 539.839, 38.8002, 0.6368", "378.565, 540.899, 38.7724, 0.66", "379.035, 541.932, 38.7408, 0.776", "379.724, 542.845, 38.7038, 0.6388", "380.398, 543.768, 38.6607, 0.7214", "380.991, 544.743, 38.6128, 0.61", "381.473, 545.779, 38.5627, 0.544", "382.035, 546.773, 38.5126, 0.4248", "382.7, 547.704, 38.4608, 0.4184", "383.314, 548.668, 38.4037, 0.5098", "383.891, 549.655, 38.3362, 0.635", "384.471, 550.639, 38.2539, 0.625", "384.995, 551.656, 38.1632, 0.6352", "385.562, 552.638, 38.0668, 0.518", "386.371, 553.436, 37.9588, 0.5008", "387.265, 554.147, 37.8462, 0.6422", "388.056, 554.964, 37.7398, 0.7506", "388.753, 555.87, 37.6432, 0.783", "389.448, 556.776, 37.5567, 0.7462", "390.058, 557.744, 37.4819, 0.6894", "390.569, 558.759, 37.4209, 0.5282", "390.854, 559.862, 37.3576, 0.5014", "391.209, 560.916, 37.2663, 0.5042", "391.923, 561.799, 37.1386, 0.4826", "392.68, 562.654, 37.004, 0.5752", "393.268, 563.627, 36.8746, 0.5568", "393.689, 564.689, 36.7444, 0.5318", "394.21, 565.702, 36.6047, 0.4432", "395.022, 566.478, 36.4398, 0.4828", "395.827, 567.281, 36.2474, 0.4808", "396.741, 567.937, 36.0052, 0.6138", "397.474, 568.782, 35.7176, 0.6546", "397.956, 569.801, 35.4116, 0.5874", "398.635, 570.71, 35.1224, 0.4688", "399.611, 571.288, 34.8681, 0.4464", "400.615, 571.831, 34.659, 0.5932", "401.347, 572.706, 34.4982, 0.635", "402.09, 573.576, 34.384, 0.6898", "402.893, 574.391, 34.3078, 0.6708", "403.681, 575.219, 34.2605, 0.5348", "404.393, 576.115, 34.2367, 0.5444", "404.991, 577.09, 34.235, 0.4338", "405.459, 578.133, 34.2527, 0.3952", "405.51, 579.276, 34.2919, 0.4302", "405.366, 580.409, 34.3515, 0.4358", "405.167, 581.528, 34.4288, 0.5052", "405.069, 582.587, 34.6634, 0.5768", "405.046, 583.71, 34.8877, 0.5278", "405.068, 584.854, 35.0554, 0.4038", "405.141, 585.992, 35.168, 0.3354", "405.682, 587.0, 35.2279, 0.341", "406.597, 587.687, 35.2335, 0.3956", "407.312, 588.58, 35.187, 0.5084", "408.026, 589.474, 35.1173, 0.6616", "408.711, 590.39, 35.0314, 0.5306", "409.192, 591.418, 34.9311, 0.4738", "409.797, 591.757, 34.592, 0.3798", "410.509, 592.648, 34.3484, 0.3798", "411.224, 593.54, 34.1684, 0.449", "411.928, 594.44, 34.0278, 0.47", "412.322, 595.514, 33.9122, 0.5704", "412.713, 596.587, 33.812, 0.6868", "413.142, 597.614, 33.7039, 0.7854", "412.851, 598.715, 33.5622, 0.6226", "412.616, 599.821, 33.4222, 0.625", "412.592, 600.963, 33.2993, 0.5254", "412.565, 602.104, 33.1999, 0.6182", "412.553, 603.247, 33.1419, 0.5848", "412.374, 604.357, 33.1439, 0.6072", "411.941, 605.414, 33.2142, 0.4668", "411.508, 606.468, 33.3502, 0.404", "411.004, 607.475, 33.5546, 0.4714", "410.004, 607.403, 33.7963, 0.3914", "409.208, 608.177, 34.0332, 0.322", "408.637, 609.162, 34.2532, 0.2684", "408.479, 610.292, 34.4378, 0.2626", "408.479, 611.435, 34.5789, 0.2542", "408.479, 612.579, 34.6777, 0.2288", "408.479, 613.723, 34.8051, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_28",
    "id" : "apic_28",
    "points3d" : [ "365.804, 517.748, 60.5416, 0.3146", "365.378, 517.097, 61.4261, 0.2288", "364.827, 516.47, 63.9548, 0.5722", "364.138, 515.766, 64.9855, 0.4546", "363.503, 515.438, 66.2556, 0.3546", "362.848, 515.268, 67.6833, 0.2816", "361.9, 515.009, 69.0528, 0.2876", "360.851, 514.729, 70.2475, 0.2998", "359.769, 514.459, 71.2186, 0.3162", "358.672, 514.378, 71.9886, 0.377", "357.61, 514.762, 72.588, 0.3406", "356.608, 515.291, 73.0932, 0.3126", "355.633, 515.848, 73.5846, 0.2988", "354.603, 516.154, 74.0816, 0.3142", "353.515, 515.946, 74.5998, 0.3734", "352.581, 515.401, 75.1814, 0.3338", "351.747, 514.701, 75.8136, 0.3", "350.921, 513.951, 76.4392, 0.2748", "350.466, 512.943, 77.0378, 0.2748", "350.514, 511.839, 77.616, 0.275", "350.611, 510.722, 78.1612, 0.2754", "350.684, 509.592, 78.6554, 0.2762", "350.881, 508.48, 79.1168, 0.2778", "351.104, 507.378, 79.5651, 0.2802", "351.263, 506.259, 79.9921, 0.2854", "351.391, 505.131, 80.3872, 0.2946", "351.526, 504.005, 80.7671, 0.3114", "351.66, 502.882, 81.1331, 0.3446", "351.795, 501.757, 81.4778, 0.3954", "351.889, 500.626, 81.7883, 0.5422", "351.97, 499.49, 82.052, 0.5592", "352.156, 498.366, 82.5219, 0.4576" ],
    "parent" : "apic_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_27",
    "id" : "apic_27",
    "points3d" : [ "365.804, 517.748, 60.5416, 0.3146", "365.682, 517.915, 60.9706, 0.3436", "365.01, 518.835, 61.3564, 0.4276", "364.308, 519.731, 61.7095, 0.4374", "363.499, 520.525, 62.0388, 0.4772", "362.63, 521.251, 62.4044, 0.675", "361.8, 522.006, 62.8356, 0.6686", "360.917, 522.693, 63.3237, 0.6374", "360.02, 523.352, 63.8602, 0.6738", "359.191, 524.097, 64.4232, 0.5112", "358.451, 524.939, 64.99, 0.4134", "357.463, 525.45, 65.5673, 0.386", "356.473, 525.947, 66.1349, 0.5034", "355.623, 526.682, 66.6795, 0.5914", "354.682, 527.29, 67.1994, 0.6964", "353.633, 527.695, 67.7043, 0.7176", "352.611, 528.159, 68.1951, 0.6836", "351.611, 528.637, 68.6669, 0.5178", "350.51, 528.867, 69.1191, 0.4824", "349.97, 529.685, 69.5769, 0.4668", "349.057, 530.251, 70.0109, 0.423", "347.93, 530.395, 70.3816, 0.415", "346.812, 530.616, 70.6821, 0.5038", "345.738, 531.007, 70.917, 0.6234", "344.717, 531.522, 71.0892, 0.604", "343.787, 532.185, 71.2216, 0.5962", "342.969, 532.975, 71.3289, 0.4438", "342.434, 533.976, 71.4347, 0.373", "341.969, 535.017, 71.6038, 0.3588", "341.596, 536.085, 71.8623, 0.4506", "341.824, 537.099, 72.2408, 0.5042", "341.94, 538.193, 72.7112, 0.4824", "342.159, 539.281, 73.2634, 0.5752", "342.469, 540.355, 73.8674, 0.5564", "342.747, 541.443, 74.494, 0.532", "342.848, 542.563, 75.1251, 0.4384", "342.439, 543.597, 75.7588, 0.4976", "341.768, 543.726, 76.5198, 0.3934", "341.001, 544.24, 77.3973, 0.3254", "340.026, 544.609, 78.199, 0.2746", "338.913, 544.875, 78.8357, 0.2746", "337.777, 545.005, 79.3436, 0.2746", "336.718, 545.291, 79.7818, 0.2746", "335.875, 546.016, 80.2455, 0.2746", "335.033, 546.742, 80.7556, 0.2746", "334.19, 547.466, 81.3308, 0.2746", "333.348, 548.191, 81.9717, 0.2744", "332.505, 548.916, 82.6644, 0.2744", "331.663, 549.641, 83.3927, 0.2742", "330.821, 550.366, 84.142, 0.2736", "330.665, 550.375, 84.7283, 0.2728", "330.748, 550.586, 85.7198, 0.2712", "330.352, 550.889, 86.8451, 0.2684", "329.397, 551.378, 87.8354, 0.2626", "329.398, 552.522, 88.6379, 0.2542", "329.577, 553.376, 89.4247, 0.2288", "329.978, 553.868, 91.5037, 0.2288" ],
    "parent" : "apic_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "376.939, 534.414, 62.6262, 0.81", "376.541, 534.465, 64.7478, 0.6864", "375.904, 534.548, 67.8353, 0.499", "375.345, 535.077, 69.1284, 0.4166", "375.059, 535.941, 70.609, 0.4948", "374.763, 536.354, 72.3016, 0.4354", "374.893, 537.107, 74.0594, 0.403", "374.93, 538.071, 75.728, 0.422", "374.676, 538.978, 77.2862, 0.53", "374.676, 540.026, 78.7058, 0.834", "374.674, 541.072, 80.0159, 0.894", "374.297, 541.864, 81.289, 0.7044", "373.756, 542.718, 82.5026, 0.6694", "373.224, 543.624, 83.7007, 0.6718", "372.91, 544.621, 84.8548, 0.579", "372.657, 545.596, 85.9936, 0.6468", "372.425, 546.604, 87.075, 0.5254", "372.35, 547.6, 88.0964, 0.356", "371.929, 548.349, 90.3809, 0.2288" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "376.939, 534.414, 62.6262, 0.81", "376.93, 534.9, 63.0101, 0.771", "376.819, 536.033, 63.3721, 0.629", "376.934, 537.159, 63.721, 0.7058", "377.392, 538.194, 64.087, 0.7976", "377.652, 539.261, 64.5039, 0.7554", "377.652, 540.382, 64.9415, 0.565", "377.983, 541.454, 65.3699, 0.5296", "378.202, 542.561, 65.7961, 0.5202", "378.332, 543.689, 66.2015, 0.6892", "378.395, 544.825, 66.5762, 0.7854", "378.561, 545.945, 66.9402, 0.8718", "378.566, 547.064, 67.3204, 0.7928", "378.388, 548.172, 67.7068, 0.662" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "375.881, 488.179, 44.6043, 1.1204", "376.373, 488.005, 45.4882, 0.2288", "377.43, 487.835, 46.531, 0.3606", "378.561, 487.796, 46.9451, 0.427", "379.632, 488.041, 47.42, 0.5924", "380.422, 488.75, 47.9886, 0.6926", "380.936, 489.728, 48.6021, 0.5086", "381.537, 490.66, 49.2318, 0.3606", "382.054, 491.643, 49.8548, 0.2926", "382.321, 492.729, 50.4574, 0.3092", "382.25, 493.839, 51.0415, 0.3332", "382.124, 494.949, 51.6079, 0.4098", "381.884, 496.035, 52.1682, 0.3958", "381.388, 497.058, 52.6814, 0.4404", "380.949, 498.103, 53.1698, 0.4118", "380.669, 499.16, 53.6567, 0.4406", "380.597, 500.262, 54.1652, 0.5532", "380.135, 501.262, 54.714, 0.7048", "379.854, 502.315, 55.2941, 0.8056", "379.747, 503.421, 55.9042, 0.7224", "379.495, 504.486, 56.5429, 0.5086", "378.924, 505.42, 57.1875, 0.399", "378.453, 506.435, 57.7982, 0.4058", "378.345, 507.549, 58.3615, 0.5422", "377.943, 508.585, 58.9016, 0.6534", "377.68, 509.681, 59.4042, 0.8602", "377.489, 510.79, 59.8766, 0.7844", "377.263, 511.858, 60.3506, 0.5834", "377.517, 512.958, 60.7858, 0.5048", "377.809, 514.042, 61.1705, 0.534", "377.793, 515.183, 61.5026, 0.423", "377.83, 516.321, 61.794, 0.3336", "377.941, 517.453, 62.0676, 0.2898", "378.076, 518.566, 62.3616, 0.303", "378.518, 519.602, 62.6783, 0.3284", "379.007, 520.629, 63.0112, 0.3682", "379.421, 521.689, 63.3595, 0.4766", "379.544, 522.803, 63.7235, 0.5116", "379.525, 523.942, 64.1102, 0.6956", "379.805, 525.014, 64.5462, 0.6866", "379.9, 526.12, 65.0336, 0.5392", "379.504, 527.091, 65.6118, 0.4442", "379.66, 528.182, 66.2306, 0.5466", "379.425, 529.189, 66.9239, 0.526", "379.331, 530.289, 67.6197, 0.5944", "379.077, 531.399, 68.2595, 0.6638", "378.544, 532.18, 68.9788, 0.8418", "378.188, 532.667, 69.69, 0.9322", "377.763, 533.44, 70.4805, 0.661", "377.327, 534.487, 71.8556, 0.6864" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "375.881, 488.179, 44.6043, 1.1204", "376.113, 487.064, 44.6659, 0.9952", "376.327, 485.943, 44.749, 0.9202", "376.726, 484.88, 44.8361, 0.9338", "377.292, 483.886, 44.9179, 0.9046", "377.875, 482.902, 44.9994, 0.8844", "378.445, 481.91, 45.0904, 0.9122", "378.966, 480.895, 45.2054, 0.8752", "379.27, 479.809, 45.365, 0.7802", "379.352, 478.679, 45.5759, 0.9608", "379.4, 477.546, 45.822, 1.1646", "379.603, 476.434, 46.0788, 1.2642", "379.999, 475.367, 46.3254, 1.1982", "380.415, 474.305, 46.548, 1.1468", "380.613, 473.192, 46.7418, 1.1652", "380.5, 472.064, 46.9157, 1.104", "380.372, 470.935, 47.0828, 0.9992", "380.508, 469.812, 47.2466, 0.9892", "380.733, 468.692, 47.4032, 0.9912", "380.8, 467.557, 47.5493, 0.8952", "380.756, 466.414, 47.6837, 0.9714", "380.729, 465.272, 47.8052, 1.0248", "380.733, 464.129, 47.917, 1.0928", "380.786, 462.987, 48.0295, 0.912", "380.999, 461.872, 48.1519, 0.9206", "381.276, 460.764, 48.2796, 0.8698", "381.516, 459.647, 48.403, 0.8718", "381.635, 458.513, 48.5142, 0.867", "381.72, 457.372, 48.6077, 0.8982", "381.934, 456.252, 48.6808, 0.9896", "382.161, 455.132, 48.7304, 0.9978", "382.447, 454.026, 48.7715, 1.1076", "382.613, 452.902, 48.8205, 1.081", "382.818, 451.779, 48.8824, 1.0052", "383.131, 450.68, 48.946, 0.994" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "357.386, 536.088, 52.9729, 0.6476", "357.062, 535.709, 54.3763, 0.2288", "356.112, 535.512, 55.6606, 0.3496", "354.999, 535.469, 56.1775, 0.4338", "353.916, 535.736, 56.7344, 0.471", "352.886, 536.179, 57.3185, 0.4324", "351.81, 536.494, 57.9113, 0.4262", "350.734, 536.824, 58.4979, 0.555", "349.745, 537.351, 59.0722, 0.5684", "348.879, 538.046, 59.6736, 0.5462", "347.893, 538.551, 60.3036, 0.5016", "346.864, 538.966, 60.9557, 0.4356", "345.78, 539.177, 61.6277, 0.4614", "344.741, 539.539, 62.3188, 0.4766", "344.088, 540.418, 63.0193, 0.436", "343.187, 541.062, 63.7076, 0.4636", "342.154, 541.499, 64.367, 0.4744", "341.112, 541.925, 65.0014, 0.4618", "340.096, 542.421, 65.6152, 0.366", "339.1, 542.954, 66.2152, 0.3126", "338.149, 543.505, 66.8478, 0.2988", "337.363, 543.865, 67.6122, 0.3142", "337.082, 544.457, 68.5236, 0.3734", "336.078, 545.005, 69.2658, 0.3338", "335.074, 545.552, 69.8656, 0.3", "334.254, 546.194, 70.5104, 0.2746", "333.437, 546.845, 71.1642, 0.2746", "332.587, 547.605, 71.6741, 0.2746", "331.736, 548.367, 72.0846, 0.2746", "330.886, 549.128, 72.4466, 0.2746", "330.036, 549.889, 72.7642, 0.2746", "329.185, 550.651, 73.0447, 0.2748", "328.335, 551.411, 73.3275, 0.275", "327.484, 552.173, 73.6481, 0.2752", "326.634, 552.934, 74.0169, 0.276", "325.783, 553.695, 74.4391, 0.2768", "325.093, 554.189, 74.9932, 0.279", "324.25, 554.721, 75.742, 0.2828", "323.408, 555.253, 76.6237, 0.2898", "322.566, 555.784, 77.5821, 0.303", "321.605, 556.247, 78.4888, 0.3264", "320.55, 556.657, 79.2666, 0.3738", "319.548, 557.173, 79.9028, 0.4436", "318.705, 557.929, 80.4364, 0.6616", "317.763, 558.528, 80.9085, 0.6354", "316.703, 558.957, 81.3436, 0.617", "315.716, 559.421, 81.8975, 0.4354", "314.762, 559.899, 82.616, 0.3576", "313.808, 560.377, 83.4767, 0.329", "312.854, 560.856, 84.4556, 0.4014", "311.9, 561.334, 85.5319, 0.385", "310.946, 561.813, 86.6796, 0.3982", "310.093, 562.322, 87.9124, 0.4414", "309.358, 562.867, 89.255, 0.6572", "308.756, 563.471, 90.7284, 0.6272", "308.247, 564.116, 92.2751, 0.6018", "307.852, 564.591, 93.6835, 0.4068", "307.292, 565.295, 94.9785, 0.305", "306.784, 565.658, 96.199, 0.2288", "306.198, 566.154, 98.8016, 0.2288" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "357.386, 536.088, 52.9729, 0.6476", "356.777, 536.465, 53.0743, 0.5386", "355.754, 536.97, 53.1275, 0.5516", "354.717, 537.453, 53.1401, 0.447", "353.707, 537.989, 53.1244, 0.4208", "352.702, 538.536, 53.0942, 0.4738", "351.719, 539.12, 53.0569, 0.5354", "350.818, 539.82, 53.0135, 0.6002", "349.776, 540.179, 52.9556, 0.5006", "348.636, 540.256, 52.8965, 0.4678", "347.628, 540.734, 52.8444, 0.5852", "346.696, 541.397, 52.7929, 0.6246", "345.674, 541.898, 52.7321, 0.6472", "344.604, 542.299, 52.677, 0.7042", "343.613, 542.865, 52.6266, 0.7392", "342.641, 543.466, 52.5633, 0.6878", "341.681, 544.084, 52.4877, 0.7006", "340.943, 544.949, 52.4124, 0.655", "340.415, 545.959, 52.3463, 0.6802", "339.972, 547.014, 52.2936, 0.651", "339.543, 548.073, 52.2617, 0.5088", "339.048, 549.105, 52.2542, 0.4424", "338.531, 550.126, 52.2687, 0.5074", "337.99, 551.133, 52.3018, 0.6292", "337.425, 552.128, 52.3552, 0.621", "337.123, 553.225, 52.4269, 0.5974", "336.744, 554.302, 52.495, 0.5924", "336.082, 555.231, 52.5633, 0.6254", "335.258, 556.023, 52.6417, 0.7104", "334.47, 556.851, 52.7369, 0.7504", "333.645, 557.643, 52.8363, 0.7096", "332.875, 558.489, 52.9486, 0.7366", "332.331, 559.493, 53.0855, 0.7446", "331.73, 560.448, 53.2661, 0.7344", "330.76, 561.022, 53.4873, 0.607", "329.996, 561.86, 53.7264, 0.6704", "329.302, 562.763, 53.9504, 0.7066", "328.471, 563.519, 54.1542, 0.7104", "327.559, 564.165, 54.3248, 0.5676", "326.94, 565.12, 54.4544, 0.5716", "326.45, 566.152, 54.5507, 0.6484", "325.884, 567.14, 54.6171, 0.6822", "325.267, 568.1, 54.6602, 0.5866", "324.737, 569.114, 54.6888, 0.4914", "324.397, 570.188, 54.7196, 0.3734", "324.172, 571.306, 54.7792, 0.3274", "323.777, 572.374, 54.8912, 0.32", "323.306, 573.414, 55.0595, 0.3844", "322.835, 574.453, 55.2843, 0.3542", "322.364, 575.489, 55.5666, 0.3384", "321.906, 576.53, 55.9026, 0.3416", "321.502, 577.592, 56.2881, 0.4194", "320.987, 578.591, 56.7364, 0.4446", "320.267, 579.373, 57.2844, 0.3812", "320.066, 580.448, 57.895, 0.3402", "319.94, 581.544, 58.5315, 0.3496", "319.897, 582.663, 59.1525, 0.4118", "319.802, 583.781, 59.7355, 0.5384", "319.409, 584.844, 60.272, 0.7182", "319.071, 585.925, 60.7768, 0.6322", "318.754, 587.007, 61.2797, 0.6782", "318.438, 588.082, 61.8022, 0.6814", "318.121, 589.152, 62.3582, 0.6266", "317.784, 590.206, 62.9538, 0.5914", "317.444, 591.255, 63.5796, 0.435", "317.087, 592.297, 64.218, 0.3566", "316.579, 593.265, 64.8435, 0.3272", "315.811, 594.084, 65.4273, 0.3988", "315.039, 594.907, 65.9588, 0.3754", "314.263, 595.733, 66.4364, 0.4026", "313.473, 596.549, 66.8679, 0.341", "312.646, 597.325, 67.2706, 0.3128", "311.753, 598.011, 67.6771, 0.2994", "310.926, 598.767, 68.0963, 0.3152", "310.318, 599.7, 68.5157, 0.3756", "310.032, 600.79, 68.9276, 0.3382", "309.848, 601.908, 69.33, 0.308", "309.561, 603.0, 69.7292, 0.2892", "309.211, 604.077, 70.1187, 0.303", "308.851, 605.153, 70.4936, 0.322", "308.492, 606.231, 70.856, 0.3878", "308.112, 607.302, 71.2079, 0.3618", "307.66, 608.341, 71.5543, 0.3464", "307.153, 609.356, 71.9004, 0.386", "306.646, 610.37, 72.2512, 0.3584", "306.297, 611.434, 72.6085, 0.3402", "306.306, 612.554, 72.961, 0.3746", "306.505, 613.677, 73.299, 0.3362", "306.698, 614.799, 73.6302, 0.304", "306.935, 615.911, 73.9693, 0.2822", "307.348, 616.959, 74.3322, 0.2886", "307.887, 617.95, 74.7326, 0.3004", "308.465, 618.912, 75.1766, 0.322", "309.153, 619.793, 75.654, 0.3642", "309.934, 620.609, 76.1443, 0.4322", "310.739, 621.399, 76.6374, 0.608", "311.553, 622.182, 77.1313, 0.6928", "312.507, 622.749, 77.6266, 0.6476", "313.531, 623.211, 78.1502, 0.6322", "314.451, 623.839, 78.6912, 0.5", "315.301, 624.577, 79.2274, 0.5282", "315.905, 625.512, 79.7325, 0.3984", "316.08, 626.597, 80.225, 0.356", "316.532, 627.407, 81.6379, 0.2288" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "341.802, 511.956, 36.9085, 0.427", "341.169, 511.097, 36.9242, 0.4948", "340.268, 510.395, 36.934, 0.527" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "341.802, 511.956, 36.9085, 0.427", "341.522, 512.305, 36.3717, 0.4576", "340.613, 512.705, 35.2957, 0.5016", "339.489, 512.847, 34.8771, 0.6038", "338.376, 512.896, 34.431, 0.6432", "337.311, 512.544, 33.9973, 0.5306", "336.557, 512.796, 33.563, 0.5368", "335.779, 513.594, 33.1467, 0.4184", "334.839, 514.215, 32.7757, 0.373", "334.585, 515.315, 32.4708, 0.3588", "334.009, 516.239, 32.2272, 0.4508", "333.185, 517.017, 32.0272, 0.5032", "332.384, 517.824, 31.8444, 0.4878", "331.329, 518.208, 31.6574, 0.5478", "330.599, 519.052, 31.4485, 0.6886", "330.187, 520.108, 31.1959, 0.5752", "329.982, 521.159, 30.9005, 0.5832", "330.565, 522.114, 30.5906, 0.4522", "330.051, 523.067, 30.298, 0.461", "329.703, 524.141, 30.0294, 0.3978", "329.169, 525.094, 29.7671, 0.439", "328.86, 526.111, 29.4991, 0.434", "328.102, 526.939, 29.2085, 0.3618", "327.271, 527.688, 28.9122, 0.3048", "326.304, 528.286, 28.6303, 0.2832", "325.275, 528.777, 28.3917, 0.2908", "324.311, 528.529, 28.1775, 0.3044", "323.457, 529.253, 27.9863, 0.3304", "322.376, 529.528, 27.8359, 0.3752", "321.256, 529.528, 27.741, 0.476", "320.178, 529.627, 27.6945, 0.5764", "319.784, 528.684, 27.692, 0.4942", "319.523, 527.573, 27.7178, 0.5", "318.811, 526.708, 27.7595, 0.4322", "318.372, 525.692, 28.0686, 0.6864" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "378.388, 548.172, 67.7068, 0.662", "379.035, 549.009, 68.0722, 0.5732", "379.592, 549.999, 68.3567, 0.5764", "379.942, 551.084, 68.5779, 0.4554", "380.429, 552.113, 68.7616, 0.3892", "380.61, 553.227, 68.9349, 0.4132", "380.739, 554.125, 69.069, 0.4332", "380.793, 555.252, 69.2401, 0.36", "380.719, 556.388, 69.3874, 0.3012", "380.605, 557.526, 69.4949, 0.2768", "380.501, 558.666, 69.5677, 0.2786", "380.397, 559.805, 69.6136, 0.2822", "380.293, 560.944, 69.6427, 0.2888", "380.189, 562.083, 69.6564, 0.3006", "380.123, 563.224, 69.6794, 0.3238", "380.064, 564.366, 69.7124, 0.3626", "380.007, 565.508, 69.75, 0.4528", "379.949, 566.649, 69.7872, 0.5322", "379.854, 567.653, 69.7463, 0.4198", "379.78, 568.794, 69.708, 0.3276", "379.707, 569.936, 69.6727, 0.2786", "379.634, 571.078, 69.6433, 0.2826", "379.204, 572.08, 69.6217, 0.288", "378.627, 573.029, 69.6102, 0.305", "378.609, 574.161, 69.6102, 0.305", "378.934, 575.258, 69.6102, 0.4576" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "378.388, 548.172, 67.7068, 0.662", "377.792, 548.587, 69.1317, 0.6864", "377.086, 549.3, 71.0769, 0.4602", "376.211, 549.884, 71.8808, 0.3546", "376.158, 550.804, 72.8636, 0.331", "375.685, 551.616, 74.0132, 0.369", "374.983, 552.396, 75.2052, 0.5004", "374.303, 553.124, 76.4378, 0.4474", "374.229, 554.016, 77.6849, 0.4152", "373.398, 554.525, 78.8875, 0.492", "372.853, 555.236, 80.0744, 0.4304", "372.629, 556.098, 81.251, 0.3904", "372.652, 556.917, 82.2293, 0.4152", "372.587, 558.045, 83.0096, 0.4368", "372.411, 559.154, 83.634, 0.3672", "372.312, 560.192, 84.2691, 0.3134", "372.214, 561.229, 84.8999, 0.305", "371.733, 562.114, 85.4409, 0.305", "370.844, 562.833, 86.2268, 0.4576" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "383.131, 450.68, 48.946, 0.994", "383.421, 450.186, 50.6755, 0.2288", "382.522, 449.917, 51.8907, 0.2818", "381.48, 449.522, 52.367, 0.2882", "380.942, 448.642, 52.9348, 0.2998", "381.802, 447.926, 53.5416, 0.3232", "382.549, 447.461, 54.2321, 0.3544", "382.087, 446.475, 54.9604, 0.4736", "381.641, 445.456, 55.673, 0.3956", "381.046, 444.546, 56.3752, 0.33", "380.109, 444.006, 57.0842, 0.2828", "380.138, 443.029, 57.7934, 0.2898", "380.104, 441.91, 58.4839, 0.3024", "379.03, 441.884, 59.1816, 0.3284", "378.002, 442.123, 59.8746, 0.364", "377.444, 443.015, 60.6256, 0.4912", "376.626, 442.958, 61.4527, 0.4292", "376.305, 441.991, 62.3101, 0.387", "375.671, 441.109, 63.1579, 0.4148", "374.597, 440.917, 63.9755, 0.4064", "373.823, 440.133, 64.7517, 0.4544", "373.071, 439.312, 65.4752, 0.4638", "372.347, 438.467, 66.1578, 0.4114", "371.564, 437.684, 66.8223, 0.423", "371.024, 436.773, 67.4873, 0.3734", "370.722, 435.794, 68.1464, 0.399", "370.556, 434.674, 68.7551, 0.334", "370.488, 433.54, 69.3249, 0.3002", "370.505, 432.414, 69.8944, 0.275", "370.55, 431.335, 70.5004, 0.2754", "369.908, 430.46, 71.1483, 0.2764", "369.006, 429.84, 71.8528, 0.278", "368.478, 428.931, 72.6496, 0.281", "368.042, 428.111, 73.5879, 0.2864", "367.496, 427.237, 74.564, 0.2968", "367.153, 426.188, 75.4916, 0.3156", "366.952, 425.101, 76.3792, 0.3508", "366.728, 424.019, 77.2302, 0.415", "366.204, 423.109, 78.0419, 0.5396", "365.37, 422.407, 78.8558, 0.7438", "364.811, 421.511, 79.7143, 0.564", "364.426, 420.51, 80.6173, 0.4268", "364.065, 419.498, 81.5517, 0.3634", "363.704, 418.482, 82.4986, 0.4618", "363.825, 417.483, 83.4674, 0.5126", "363.457, 416.689, 84.5197, 0.558", "363.064, 415.996, 85.5089, 0.4206", "362.466, 415.269, 86.4522, 0.329", "361.545, 414.594, 87.1528, 0.2814", "360.69, 413.939, 87.6798, 0.2872", "360.684, 412.927, 88.209, 0.2976", "361.244, 412.0, 88.5623, 0.3194", "362.245, 411.448, 88.7978, 0.3476", "362.618, 410.458, 88.9647, 0.4604", "362.788, 409.328, 89.0999, 0.373", "362.957, 408.198, 89.2027, 0.2796", "363.126, 407.067, 89.3704, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "383.131, 450.68, 48.946, 0.994", "383.52, 449.315, 49.0524, 0.8192", "383.829, 448.214, 49.0991, 0.8738", "384.151, 447.116, 49.1473, 0.8608", "384.415, 446.003, 49.2044, 0.9342", "384.66, 444.89, 49.2755, 0.8266", "385.078, 443.828, 49.3724, 0.894", "385.435, 442.745, 49.488, 0.8688", "385.87, 441.688, 49.609, 0.8638", "386.377, 440.664, 49.7252, 0.8804", "386.856, 439.629, 49.8305, 0.7854", "387.132, 438.524, 49.9232, 0.7626", "387.237, 437.389, 50.0044, 0.8916", "387.555, 436.293, 50.0802, 0.9852", "387.988, 435.235, 50.157, 0.9502", "388.298, 434.135, 50.2424, 0.9834", "388.43, 433.014, 50.346, 0.7978", "388.236, 431.891, 50.4563, 0.7362", "387.918, 430.793, 50.5618, 0.6246", "387.666, 429.964, 50.652, 0.6354" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "340.268, 510.395, 36.934, 0.527", "339.186, 510.032, 36.1077, 0.5698", "338.076, 510.133, 35.8506, 0.588", "336.948, 510.287, 35.5746, 0.617", "335.818, 510.217, 35.2836, 0.6956", "334.698, 510.024, 34.9849, 0.7218", "333.569, 509.944, 34.6856, 0.662", "332.443, 510.072, 34.4014, 0.6212", "331.31, 510.145, 34.1278, 0.6624", "330.196, 509.947, 33.8724, 0.629", "329.08, 509.713, 33.6521, 0.643", "327.953, 509.533, 33.4782, 0.5278", "326.876, 509.868, 33.3558, 0.5424", "326.053, 510.653, 33.2844, 0.6064", "325.055, 511.208, 33.2548, 0.5464", "323.937, 511.453, 33.2665, 0.6152", "322.817, 511.679, 33.3208, 0.5542", "321.698, 511.907, 33.4149, 0.6726", "320.596, 512.193, 33.5364, 0.6812", "319.539, 512.622, 33.6652, 0.807", "318.536, 513.162, 33.7834, 0.7342", "317.423, 513.32, 33.8775, 0.7136", "316.369, 512.884, 33.9374, 0.807", "315.36, 512.419, 33.9612, 0.7986", "314.289, 512.722, 33.9606, 0.7488", "313.32, 513.309, 33.9416, 0.5932", "312.234, 513.669, 33.9105, 0.6128", "311.176, 514.085, 33.8775, 0.7566", "310.199, 514.68, 33.8453, 0.7274", "309.267, 515.34, 33.81, 0.7386", "308.347, 516.016, 33.7756, 0.6706", "307.515, 516.766, 33.7288, 0.7446", "306.584, 517.253, 33.6563, 0.5996", "305.462, 517.142, 33.563, 0.5546", "304.376, 516.795, 33.448, 0.758", "303.335, 516.334, 33.3054, 0.6592", "302.223, 516.113, 33.1652, 0.7268", "301.179, 516.522, 33.0406, 0.548", "300.403, 517.363, 32.914, 0.5502" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "340.268, 510.395, 36.934, 0.527", "339.73, 509.861, 36.9418, 0.5848", "338.948, 509.027, 36.962, 0.4708", "338.275, 508.104, 37.0202, 0.419", "337.645, 507.194, 37.1277, 0.4634", "336.527, 507.028, 37.2996, 0.5512", "335.407, 507.067, 37.5231, 0.456", "334.466, 506.532, 37.7955, 0.3904", "333.987, 505.514, 38.1349, 0.4156", "333.629, 504.447, 38.514, 0.4372", "333.179, 503.439, 38.9231, 0.3676", "332.499, 503.877, 39.3568, 0.3156", "331.4, 503.874, 39.762, 0.303", "330.386, 503.377, 40.1187, 0.3292", "329.434, 502.755, 40.4158, 0.3656" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "387.666, 429.964, 50.652, 0.6354", "387.225, 428.771, 50.7786, 0.5246", "387.363, 427.698, 50.8332, 0.5112", "387.997, 426.76, 50.9116, 0.6712", "388.358, 425.682, 51.0202, 0.7552", "388.521, 424.557, 51.1588, 0.8024", "388.644, 423.431, 51.3246, 0.7284", "388.932, 422.329, 51.5026, 0.9174", "389.235, 421.228, 51.6631, 1.0588", "389.423, 420.102, 51.7846, 1.1906", "389.628, 418.977, 51.8717, 1.1522", "389.836, 417.853, 51.9352, 1.0824", "390.07, 416.733, 51.982, 1.1738", "390.269, 415.607, 52.0195, 1.1874", "390.423, 414.474, 52.0542, 1.2816", "390.646, 413.352, 52.0887, 1.1232", "390.808, 412.221, 52.1223, 1.071", "391.028, 411.1, 52.155, 1.176", "391.261, 409.98, 52.1895, 1.3062", "391.531, 408.868, 52.2284, 1.1738", "391.675, 407.737, 52.2754, 1.1408", "391.706, 406.594, 52.3337, 1.193", "391.722, 405.45, 52.4048, 1.198", "391.825, 404.311, 52.4916, 1.1932", "392.074, 403.199, 52.6028, 1.2536", "392.394, 402.105, 52.7383, 1.2574", "392.829, 401.05, 52.8861, 1.3314", "393.302, 400.008, 53.0303, 1.375", "393.976, 397.84, 53.3394, 1.3918", "394.578, 395.657, 53.7076, 1.2404", "394.952, 394.579, 53.8986, 1.0818", "395.319, 393.498, 54.0786, 1.0536", "395.633, 392.4, 54.2371, 1.083", "395.557, 391.265, 54.3698, 0.972", "395.513, 390.122, 54.4807, 0.8822", "395.946, 389.074, 54.5773, 0.8384", "396.254, 387.974, 54.6692, 0.8504", "396.368, 386.838, 54.7714, 0.8742", "396.681, 385.742, 54.8923, 0.9142", "396.919, 384.625, 55.0222, 1.0064", "397.197, 383.516, 55.1446, 1.0898", "397.386, 382.388, 55.2541, 0.9846", "397.865, 381.35, 55.3722, 0.9054", "398.357, 380.324, 55.5041, 0.8816", "398.193, 379.195, 55.648, 0.9264", "398.333, 378.062, 55.8082, 1.0364", "398.646, 376.969, 55.9966, 1.1102", "398.996, 375.884, 56.1966, 1.1932", "399.479, 374.85, 56.3912, 1.1504", "399.883, 373.783, 56.5732, 1.1092", "400.045, 372.652, 56.74, 1.0776", "400.379, 371.56, 56.8924, 1.0298", "400.737, 370.474, 57.0357, 1.1186", "401.084, 369.388, 57.1866, 1.1078", "401.507, 368.33, 57.3376, 1.0244", "402.065, 367.334, 57.4815, 1.177", "402.614, 366.333, 57.6156, 1.3412", "403.051, 365.278, 57.7175, 1.3062", "403.326, 364.169, 57.7853, 1.289", "403.73, 363.099, 57.8253, 1.2534", "404.16, 362.039, 57.8488, 1.2072", "404.532, 360.957, 57.867, 1.0244", "404.921, 359.882, 57.8906, 0.9268", "405.314, 358.811, 57.9289, 0.946", "405.446, 357.676, 57.9846, 0.9278", "405.517, 356.537, 58.0577, 0.9276", "405.779, 355.426, 58.1515, 0.9904", "406.181, 354.361, 58.2697, 1.0296", "406.398, 353.241, 58.3996, 1.021", "406.575, 352.117, 58.5273, 0.9408", "406.972, 351.046, 58.6432, 0.874", "407.336, 349.962, 58.7415, 1.0408", "407.598, 348.849, 58.8202, 1.083", "407.889, 347.743, 58.8823, 1.085", "408.122, 346.625, 58.9336, 1.0008", "408.199, 345.483, 58.9826, 1.0418", "408.281, 344.345, 59.0363, 1.0776", "408.552, 343.237, 59.1004, 1.1088", "408.973, 342.174, 59.1786, 1.1116", "409.324, 341.087, 59.2754, 1.1522", "409.523, 339.966, 59.3972, 1.055", "409.563, 338.827, 59.5428, 1.028", "409.624, 337.687, 59.6991, 1.1498", "409.812, 336.561, 59.8559, 1.2268", "410.083, 335.451, 60.0076, 1.1752", "410.355, 334.341, 60.1518, 1.1092", "410.668, 333.241, 60.2899, 1.0704", "410.975, 332.141, 60.4296, 1.0522", "411.297, 331.045, 60.5844, 0.9858", "411.585, 329.943, 60.7606, 1.0206", "411.829, 328.829, 60.9501, 1.007", "412.095, 327.72, 61.145, 1.1322", "412.454, 326.637, 61.3413, 1.0914", "412.8, 325.552, 61.5387, 1.1938", "413.104, 324.453, 61.731, 1.2074", "413.423, 323.357, 61.9091, 1.173", "413.65, 322.238, 62.0696, 0.9418", "413.825, 321.109, 62.2132, 0.869", "414.11, 320.004, 62.3428, 1.0632", "414.494, 318.928, 62.4638, 1.1986", "414.902, 317.859, 62.5853, 1.1688", "415.357, 316.81, 62.718, 1.1052", "415.807, 315.762, 62.8726, 1.0254", "416.16, 314.681, 63.0543, 1.149", "416.361, 313.564, 63.2576, 0.9782", "416.43, 312.429, 63.4743, 1.0006", "416.509, 311.295, 63.6938, 0.9972", "416.782, 310.197, 63.8994, 0.9794", "417.255, 309.157, 64.0755, 1.0014", "417.774, 308.139, 64.2158, 1.006", "418.27, 307.109, 64.321, 0.9606", "418.623, 306.028, 64.3964, 0.9116", "418.841, 304.905, 64.4501, 1.1046", "419.167, 303.813, 64.4927, 1.2288", "419.643, 302.775, 64.5324, 1.2214", "420.192, 301.771, 64.5767, 1.2192", "420.777, 300.789, 64.6296, 1.1564", "421.286, 299.767, 64.6951, 1.0968", "421.66, 298.688, 64.776, 1.169", "421.984, 297.592, 64.8754, 1.3304", "422.335, 296.505, 64.9956, 1.4948", "423.04, 294.356, 65.2837, 1.5032", "423.528, 293.334, 65.4321, 1.3632", "423.742, 292.22, 65.5724, 1.2026", "423.854, 291.085, 65.6998, 1.1112", "424.112, 289.973, 65.8174, 1.0818", "424.447, 288.882, 65.9302, 1.037", "424.688, 287.77, 66.0352, 1.1342", "424.898, 286.65, 66.1217, 1.1252", "425.091, 285.53, 66.1836, 1.111", "425.15, 284.387, 66.2152, 1.074", "425.311, 283.261, 66.2108, 1.0584", "425.55, 282.145, 66.176, 0.9988", "425.772, 281.024, 66.1343, 1.0378", "426.0, 279.904, 66.1072, 1.0708", "426.24, 278.785, 66.1111, 1.0944", "426.54, 277.683, 66.157, 1.0912", "426.886, 276.594, 66.2536, 1.085", "427.194, 275.498, 66.402, 1.0738", "427.275, 274.376, 66.5882, 1.0518", "427.043, 273.27, 66.7965, 1.0166", "426.766, 272.17, 67.0155, 0.9242", "426.888, 271.072, 67.2252, 0.8856", "427.355, 270.034, 67.4066, 0.8562", "427.927, 269.045, 67.5522, 1.0546", "428.445, 268.028, 67.6617, 1.1108", "428.771, 266.939, 67.7387, 1.125", "429.016, 265.821, 67.7905, 1.1306", "429.304, 264.715, 67.8275, 1.014", "429.634, 263.619, 67.8597, 0.9546", "430.062, 262.561, 67.8882, 0.9996", "430.392, 261.474, 67.9146, 1.0162", "430.713, 260.378, 67.9426, 1.1428", "431.111, 259.306, 67.9764, 1.1412", "431.542, 258.247, 68.0196, 1.1414", "431.925, 257.17, 68.0744, 1.1264", "432.155, 256.053, 68.1442, 1.1748", "432.297, 254.92, 68.236, 1.1216", "432.53, 253.806, 68.35, 1.0314", "432.69, 252.68, 68.4729, 1.0518", "432.908, 251.562, 68.5916, 1.0932", "433.145, 250.445, 68.6963, 1.1532", "433.424, 249.337, 68.7806, 1.1164", "433.597, 248.211, 68.8422, 0.8516", "433.814, 247.093, 68.8848, 0.8558", "434.129, 245.993, 68.9153, 0.979", "434.405, 244.883, 68.9419, 1.104", "434.524, 243.75, 68.9702, 1.152", "434.749, 242.635, 69.0012, 1.2174", "435.008, 241.524, 69.0449, 1.2246", "435.247, 240.405, 69.1104, 1.1046", "435.389, 239.272, 69.2003, 1.0722", "435.467, 238.132, 69.3148, 1.2346", "435.673, 237.013, 69.4576, 1.3686", "435.943, 235.905, 69.6343, 1.5148", "436.19, 234.795, 69.8382, 1.3678", "436.327, 233.665, 70.0574, 1.2938", "436.484, 232.539, 70.2884, 1.3364", "436.698, 231.421, 70.5222, 1.4574", "437.145, 229.183, 70.9416, 1.3632", "437.356, 228.06, 71.1141, 1.2012", "437.562, 226.935, 71.265, 1.1154", "437.61, 225.797, 71.3997, 1.058", "437.815, 224.68, 71.5277, 1.144", "438.104, 223.575, 71.6618, 1.284", "438.408, 222.476, 71.8169, 1.4114", "439.132, 220.329, 72.1792, 1.2664", "439.497, 219.251, 72.3694, 1.2264", "439.814, 218.154, 72.5575, 1.311", "440.013, 217.033, 72.749, 1.385", "440.647, 214.843, 73.1161, 1.4254", "440.996, 213.755, 73.2813, 1.3842", "441.884, 211.656, 73.5725, 1.306", "442.339, 210.608, 73.705, 1.3986", "443.395, 208.584, 73.9816, 1.3504", "443.84, 207.536, 74.149, 1.2886", "444.228, 206.469, 74.347, 1.195", "444.817, 205.5, 74.562, 1.1476", "445.353, 204.493, 74.7659, 1.1358", "445.51, 203.367, 74.9414, 1.201", "445.778, 202.256, 75.0915, 1.1276", "446.186, 201.19, 75.2318, 1.2482", "446.516, 200.097, 75.3735, 1.1398", "447.058, 199.093, 75.5166, 1.1784", "447.615, 198.096, 75.6633, 1.2332", "448.074, 197.054, 75.8195, 1.4142", "448.56, 194.823, 76.0819, 1.767" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "387.666, 429.964, 50.652, 0.6354", "387.242, 429.318, 51.5368, 0.2288", "386.6, 428.46, 52.4398, 0.2746", "385.696, 427.853, 52.8086, 0.2746", "384.586, 427.68, 53.202, 0.2746", "383.454, 427.68, 53.6054, 0.2748", "382.321, 427.68, 54.0067, 0.2748", "381.184, 427.68, 54.3869, 0.2752", "380.045, 427.68, 54.7364, 0.2758", "378.905, 427.68, 55.078, 0.2766", "377.766, 427.68, 55.4226, 0.2784", "376.632, 427.726, 55.788, 0.2816", "375.535, 427.915, 56.2106, 0.2876", "374.453, 428.103, 56.7022, 0.2998", "373.343, 428.139, 57.2214, 0.316", "372.221, 428.139, 57.7354, 0.3768", "371.093, 428.139, 58.2184, 0.34", "369.958, 428.139, 58.6499, 0.3114", "368.821, 428.101, 59.0223, 0.2954", "367.712, 427.866, 59.3485, 0.3142", "366.627, 427.529, 59.6473, 0.3436", "365.62, 427.009, 59.9253, 0.423", "364.642, 426.424, 60.1866, 0.4514", "363.695, 425.793, 60.4416, 0.3942", "362.835, 425.052, 60.6928, 0.3644", "362.163, 424.138, 60.9294, 0.3944", "361.465, 423.235, 61.1461, 0.4954", "360.628, 422.463, 61.3438, 0.6922", "359.772, 421.707, 61.5269, 1.0088", "358.944, 420.919, 61.7002, 1.1434", "358.106, 420.142, 61.8752, 1.0724", "357.238, 419.403, 62.067, 0.8948", "356.405, 418.631, 62.2838, 0.7884", "355.613, 417.82, 62.5237, 0.6548", "354.647, 417.234, 62.7648, 0.784", "353.63, 416.717, 62.9846, 0.7956", "352.723, 416.028, 63.1672, 0.7804", "351.87, 415.266, 63.3044, 0.7002", "351.134, 414.393, 63.3959, 0.5772", "350.443, 413.482, 63.4497, 0.4506", "349.508, 412.839, 63.4774, 0.4112", "348.49, 412.317, 63.49, 0.5338", "347.458, 411.824, 63.4948, 0.4968", "346.42, 411.341, 63.4959, 0.5684", "345.425, 410.78, 63.4962, 0.4784", "344.465, 410.156, 63.4962, 0.476", "343.385, 409.791, 63.4962, 0.5892", "342.31, 409.402, 63.4962, 0.6864", "341.375, 408.747, 63.4962, 0.4972", "340.786, 407.774, 63.4962, 0.3388", "340.056, 406.893, 63.4962, 0.2542", "339.146, 406.202, 63.4962, 0.2288", "338.003, 406.159, 63.4962, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "300.403, 517.363, 32.914, 0.5502", "299.8, 517.677, 33.8226, 0.9152", "298.804, 518.195, 33.3505, 0.5692", "297.792, 518.722, 33.1607, 0.4514", "296.782, 519.248, 32.9538, 0.3372", "295.772, 519.773, 32.7401, 0.3062", "294.84, 520.429, 32.5382, 0.2858", "293.935, 521.125, 32.3658, 0.2954", "293.03, 521.823, 32.2358, 0.3128", "292.124, 522.522, 32.144, 0.3478", "291.268, 523.281, 32.0919, 0.4", "290.424, 524.053, 32.0762, 0.5572", "289.581, 524.825, 32.0905, 0.5544", "288.879, 525.729, 32.1266, 0.6058", "288.193, 526.644, 32.1787, 0.883", "287.507, 527.559, 32.2423, 0.9742", "286.82, 528.474, 32.3156, 0.9054", "285.872, 529.113, 32.4016, 0.7892", "284.816, 529.193, 32.5133, 0.7466", "283.806, 529.555, 32.6374, 0.5146", "282.697, 529.763, 32.7723, 0.3714", "281.558, 529.832, 32.919, 0.3134", "280.426, 529.983, 33.0719, 0.3426", "279.287, 530.024, 33.2256, 0.421", "278.352, 530.62, 33.3819, 0.4464", "277.76, 531.589, 33.5283, 0.3898", "276.948, 532.388, 33.6549, 0.3304", "276.162, 533.218, 33.88, 0.4576" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "300.403, 517.363, 32.914, 0.5502", "299.244, 517.503, 32.6026, 0.5974", "298.116, 517.639, 32.3658, 0.519", "296.996, 517.739, 32.0639, 0.3872", "295.89, 517.562, 31.7002, 0.3046", "294.803, 517.309, 31.2981, 0.2832", "293.682, 517.223, 30.9005, 0.2906", "292.547, 517.286, 30.546, 0.3038", "291.409, 517.35, 30.252, 0.331", "290.268, 517.415, 30.023, 0.3688", "289.141, 517.555, 29.8533, 0.5002", "288.058, 517.922, 29.7287, 0.4468", "286.975, 518.29, 29.6304, 0.4144", "285.891, 518.659, 29.542, 0.4906", "284.859, 519.117, 29.4512, 0.4272", "284.049, 519.911, 29.3496, 0.3888", "283.293, 520.731, 29.2326, 0.3902", "282.252, 521.182, 29.0914, 0.4984", "281.17, 521.2, 28.9212, 0.6422", "280.092, 520.853, 28.7311, 0.4994", "278.972, 520.644, 28.5527, 0.3922", "277.911, 520.841, 28.4077, 0.3452", "277.01, 521.535, 28.3016, 0.4334", "276.024, 522.052, 28.2383, 0.4348", "274.907, 522.279, 28.2178, 0.5372", "273.771, 522.39, 28.2344, 0.4698", "272.638, 522.528, 28.2736, 0.4518", "271.501, 522.648, 28.3024, 0.5848", "270.457, 523.077, 28.2979, 0.483", "269.555, 523.775, 28.2649, 0.3814", "268.658, 524.478, 28.0686, 0.4576" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "329.434, 502.755, 40.4158, 0.3656", "329.152, 502.719, 41.6732, 0.6864", "328.274, 502.944, 42.5312, 0.552", "327.894, 503.923, 42.8778, 0.5492", "327.025, 504.614, 43.2737, 0.5764", "326.617, 505.614, 43.7063, 0.697", "326.56, 506.739, 44.1613, 0.5796", "326.074, 507.61, 44.6264, 0.4156", "325.007, 507.925, 45.0887, 0.3098", "324.148, 508.524, 45.5605, 0.2926", "323.257, 509.181, 46.0418, 0.308", "322.242, 509.689, 46.5108, 0.337", "321.344, 510.373, 46.9862, 0.387", "320.622, 509.667, 47.4835, 0.499", "319.574, 509.994, 48.0304, 0.6124", "318.607, 510.35, 48.6329, 0.5952", "317.686, 509.848, 49.2985, 0.525", "316.657, 509.543, 49.9864, 0.5772", "315.844, 508.839, 50.6559, 0.7056", "315.221, 507.907, 51.2943, 0.7898", "314.847, 506.853, 51.8991, 0.7784", "314.625, 505.743, 52.4678, 0.8828", "314.476, 504.616, 53.011, 0.9262", "314.243, 503.506, 53.5618, 0.8188", "313.513, 503.9, 54.2217, 0.8442", "312.542, 504.39, 54.9598, 0.7198", "311.628, 504.99, 55.7648, 0.863", "310.641, 505.408, 56.632, 0.9142", "309.671, 505.794, 57.5618, 0.9058", "308.948, 506.563, 58.527, 0.7056", "308.247, 506.878, 59.5958, 0.5436", "307.23, 506.712, 60.664, 0.6006", "306.19, 506.799, 61.7058, 0.5748", "305.091, 506.89, 62.6772, 0.7068", "303.991, 506.983, 63.5894, 0.7638", "302.892, 507.116, 64.4577, 0.8666", "301.819, 507.386, 65.294, 0.6128", "300.748, 507.645, 66.1385, 0.4718", "299.687, 507.759, 67.062, 0.4382", "298.738, 508.112, 68.0714, 0.644", "297.925, 508.693, 69.1326, 0.6384", "297.221, 509.377, 70.1893, 0.4492", "297.089, 510.406, 71.1847, 0.2796", "297.041, 511.355, 73.2928, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "329.434, 502.755, 40.4158, 0.3656", "329.124, 502.174, 40.626, 0.4944", "328.573, 501.173, 40.7641, 0.434", "327.923, 500.233, 40.8355, 0.4026", "326.85, 499.941, 40.8568, 0.4096", "326.143, 499.07, 40.8531, 0.5652", "325.371, 498.227, 40.8363, 0.6164", "324.684, 497.312, 40.8162, 0.4922", "324.062, 496.354, 40.7926, 0.4104", "323.266, 495.535, 40.766, 0.4534", "322.629, 494.586, 40.7254, 0.5024", "322.093, 493.579, 40.6764, 0.5148", "321.681, 492.576, 40.628, 0.4612", "320.628, 492.133, 40.5737, 0.504", "319.633, 491.585, 40.5247, 0.5806", "318.708, 490.913, 40.4858, 0.5056", "317.694, 490.394, 40.4586, 0.5068", "316.65, 489.939, 40.4494, 0.513", "316.077, 489.083, 40.4438, 0.5046", "315.222, 488.819, 40.4239, 0.5874", "314.09, 488.717, 40.4012, 0.7192", "312.995, 488.397, 40.3897, 0.8396", "312.016, 487.819, 40.392, 0.75", "311.33, 486.921, 40.4225, 0.7318", "310.674, 485.987, 40.495, 0.6654", "309.923, 485.125, 40.5874, 0.7002", "309.021, 484.427, 40.6988, 0.6838", "308.31, 483.547, 40.8285, 0.5894", "307.216, 483.245, 40.9349, 0.4964", "306.215, 482.695, 41.0572, 0.383", "305.212, 482.149, 41.211, 0.3448", "304.195, 481.634, 41.3969, 0.3532", "303.176, 481.125, 41.6111, 0.4418", "302.158, 480.616, 41.8502, 0.481", "301.139, 480.111, 42.1053, 0.4738", "300.105, 479.63, 42.3657, 0.3896", "299.073, 479.153, 42.6264, 0.3508", "298.039, 478.677, 42.8854, 0.3944", "297.002, 478.213, 43.1376, 0.3724", "295.931, 477.823, 43.3745, 0.3734", "294.858, 477.434, 43.5896, 0.4024", "293.785, 477.043, 43.78, 0.552", "292.708, 476.664, 43.9449, 0.5922", "291.607, 476.357, 44.0829, 0.4464", "290.5, 476.066, 44.1986, 0.3298", "289.401, 475.753, 44.3019, 0.2826", "288.374, 475.267, 44.4105, 0.2892", "287.499, 474.532, 44.5446, 0.303", "286.625, 473.8, 44.7166, 0.322", "285.73, 473.101, 44.9296, 0.388", "284.735, 472.552, 45.1777, 0.3604", "283.703, 472.074, 45.4499, 0.3512", "282.67, 471.595, 45.7363, 0.359", "281.661, 471.076, 46.0292, 0.4826", "280.771, 470.371, 46.328, 0.4118", "279.953, 469.582, 46.6326, 0.3608", "279.136, 468.794, 46.9428, 0.3352", "278.429, 467.985, 47.2875, 0.4122", "278.041, 466.918, 47.6014, 0.4074", "277.655, 465.853, 47.8794, 0.428", "277.268, 464.791, 48.1211, 0.5528", "276.884, 463.733, 48.3286, 0.5932", "276.872, 462.701, 48.2572, 0.4486", "276.872, 461.559, 48.118, 0.3336", "276.872, 460.417, 47.957, 0.291", "276.872, 459.272, 47.7898, 0.2994", "276.872, 458.129, 47.6302, 0.3476", "276.872, 456.987, 47.4824, 0.2796", "276.872, 455.861, 47.0803, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "448.56, 194.823, 76.0819, 1.767", "449.165, 193.158, 77.18, 1.1694", "448.963, 192.049, 77.2806, 0.7566", "448.77, 190.923, 77.3416, 0.7038", "448.805, 189.783, 77.35, 0.8084", "448.926, 188.648, 77.3212, 0.7068", "449.086, 187.519, 77.2685, 0.8082", "449.134, 186.377, 77.2184, 0.7322", "449.135, 185.234, 77.2204, 0.958", "449.142, 184.092, 77.2876, 0.9708", "449.193, 182.953, 77.4024, 0.9044", "449.367, 181.824, 77.5488, 0.7622", "449.629, 180.711, 77.7216, 0.8188", "449.899, 179.603, 77.9223, 0.7424", "450.112, 178.492, 78.1682, 0.7956", "450.324, 177.386, 78.4638, 0.6342", "450.467, 176.268, 78.7788, 0.6806", "450.483, 175.129, 79.0751, 0.691", "450.355, 173.997, 79.3285, 0.621", "450.178, 172.868, 79.5514, 0.6958", "450.222, 171.738, 79.7706, 0.7562", "450.481, 170.631, 80.0005, 0.7902", "450.781, 169.533, 80.2486, 0.7734", "450.933, 168.411, 80.5171, 0.6742", "450.965, 167.278, 80.8111, 0.8198", "450.968, 166.149, 81.1266, 0.8626", "450.978, 165.016, 81.4394, 0.901", "451.059, 163.881, 81.7264, 0.9418", "451.429, 162.813, 81.9748, 0.9372", "451.769, 161.724, 82.1761, 0.8594", "451.871, 160.59, 82.3309, 0.593", "451.881, 159.447, 82.451, 0.4642", "451.883, 158.303, 82.5387, 0.5132", "451.902, 157.159, 82.6031, 0.5788", "452.042, 156.024, 82.6582, 0.823", "452.272, 154.906, 82.7162, 0.9104", "452.395, 153.768, 82.7786, 1.0156", "452.651, 152.656, 82.8512, 1.0286", "452.829, 151.53, 82.9497, 1.022", "453.094, 150.42, 83.0684, 0.9294", "453.25, 149.289, 83.1939, 0.9186", "453.423, 148.159, 83.3162, 0.803", "453.681, 147.045, 83.4302, 0.8258", "453.841, 145.914, 83.5318, 0.8608", "453.764, 144.775, 83.6195, 0.96", "453.863, 143.637, 83.699, 0.9778", "454.138, 142.53, 83.7827, 0.9012", "454.374, 141.412, 83.8793, 0.8356", "454.239, 140.282, 83.9784, 0.8004", "453.913, 139.187, 84.0602, 0.7728", "454.416, 138.163, 84.1336, 0.7648", "454.595, 137.034, 84.2122, 0.5432" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "448.56, 194.823, 76.0819, 1.767", "449.409, 193.215, 76.1995, 1.3398", "450.188, 192.38, 76.2272, 1.003", "450.962, 191.536, 76.258, 0.8116", "451.603, 190.59, 76.3118, 0.8736", "452.196, 189.616, 76.412, 1.023", "452.973, 188.782, 76.5582, 1.1322", "453.896, 188.114, 76.7343, 1.2346", "454.759, 187.368, 76.9266, 1.223", "455.577, 186.573, 77.1296, 1.266", "456.432, 185.82, 77.341, 1.26", "457.404, 185.222, 77.5438, 1.2066" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "454.595, 137.034, 84.2122, 0.5432", "454.443, 135.41, 83.7553, 0.335", "454.536, 134.271, 83.7295, 0.302", "454.698, 133.139, 83.6965, 0.2782", "454.857, 132.006, 83.6525, 0.2814", "454.999, 130.87, 83.5951, 0.2872", "455.139, 129.735, 83.5234, 0.2988", "455.408, 128.626, 83.4296, 0.3142", "455.714, 127.526, 83.3098, 0.3736", "455.988, 126.419, 83.1748, 0.3342", "456.256, 125.308, 83.0368, 0.3006", "456.451, 124.182, 82.9049, 0.2758", "456.574, 123.045, 82.7859, 0.2768", "456.694, 121.908, 82.6823, 0.279", "456.855, 120.775, 82.5927, 0.2826", "457.02, 119.644, 82.5115, 0.2892", "457.086, 118.502, 82.4298, 0.302", "457.044, 117.362, 82.3388, 0.3246", "456.934, 116.226, 82.2408, 0.3708", "456.608, 115.131, 82.1509, 0.4372", "456.296, 114.031, 82.0826, 0.6544", "456.296, 112.887, 82.0462, 0.5988", "456.296, 111.743, 82.0476, 0.662" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "454.595, 137.034, 84.2122, 0.5432", "454.614, 135.755, 84.4374, 0.3988", "454.574, 134.618, 84.6023, 0.369", "454.928, 133.57, 84.7706, 0.4228", "455.43, 132.545, 84.9316, 0.4508", "455.758, 131.455, 85.0786, 0.394", "456.187, 130.4, 85.1959, 0.3588", "456.542, 129.316, 85.2953, 0.41", "456.944, 128.247, 85.3919, 0.3976", "457.538, 127.276, 85.4946, 0.4384", "457.894, 126.203, 85.6024, 0.4328", "457.981, 125.068, 85.7326, 0.3594", "458.199, 123.951, 85.8964, 0.3002", "458.802, 123.005, 86.0936, 0.275", "458.933, 121.87, 86.3064, 0.2754", "459.182, 120.759, 86.5595, 0.2764", "459.392, 119.64, 86.8487, 0.278", "459.514, 118.514, 87.1794, 0.281", "459.445, 117.386, 87.563, 0.2864", "459.377, 116.265, 88.0004, 0.2966", "459.362, 115.139, 88.4733, 0.315", "459.523, 114.104, 88.9946, 0.35", "460.355, 113.43, 89.5714, 0.4134", "461.356, 112.917, 90.1169, 0.5368", "461.862, 111.926, 90.6058, 0.7388", "462.379, 110.909, 91.0423, 0.5546", "462.804, 109.852, 91.4463, 0.4096", "462.953, 108.747, 91.8683, 0.3308", "462.643, 107.657, 92.3101, 0.404", "462.342, 106.592, 92.7856, 0.393", "461.785, 105.669, 93.3318, 0.399", "461.852, 104.602, 93.9669, 0.5104", "461.798, 103.641, 94.7052, 0.4582", "461.117, 102.798, 95.4993, 0.4738", "460.358, 101.998, 96.32, 0.415", "460.054, 101.035, 97.1947, 0.5018", "460.097, 100.093, 98.1506, 0.4006", "459.449, 99.2592, 99.0721, 0.3388", "458.593, 98.5446, 99.9239, 0.3006", "458.153, 97.5215, 100.717, 0.3176", "458.206, 96.4553, 101.485, 0.38", "458.741, 95.6871, 102.241, 0.3458", "457.982, 94.8903, 103.009, 0.323", "457.258, 94.0562, 103.797, 0.3124", "456.645, 93.1652, 104.653, 0.37", "456.386, 92.2021, 105.58, 0.3276", "455.916, 91.4617, 106.589, 0.288", "455.075, 90.7993, 107.535, 0.2542", "454.761, 89.758, 108.383, 0.2288", "454.326, 88.7977, 110.029, 0.2288" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "457.404, 185.222, 77.5438, 1.2066", "457.317, 183.732, 79.1927, 0.6424", "457.361, 182.624, 79.6172, 0.4248", "457.649, 181.549, 80.08, 0.3898", "458.241, 180.622, 80.5361, 0.3656", "458.901, 179.726, 80.9556, 0.3534", "459.244, 178.65, 81.3126, 0.3988", "459.882, 177.87, 81.5878, 0.3832", "460.744, 177.168, 81.8026, 0.3808", "461.45, 176.272, 81.9829, 0.4754", "462.019, 175.286, 82.1338, 0.3992", "462.487, 174.244, 82.2394, 0.3366", "463.058, 173.255, 82.3015, 0.2954", "463.743, 172.341, 82.3446, 0.313", "464.44, 171.434, 82.4076, 0.3464", "465.153, 170.549, 82.525, 0.4048", "465.997, 169.906, 82.7532, 0.531", "466.273, 168.828, 83.0665, 0.6764", "466.387, 167.705, 83.4176, 0.6912", "466.603, 166.597, 83.7721, 0.809", "466.961, 165.52, 84.1047, 0.5916", "467.275, 164.426, 84.3962, 0.4724", "467.532, 163.314, 84.6322, 0.4752", "467.798, 162.204, 84.8184, 0.5374", "468.211, 161.147, 84.966, 0.6056", "468.807, 160.171, 85.073, 0.5046", "469.625, 159.432, 85.1418, 0.5046", "470.552, 158.79, 85.1866, 0.51", "471.286, 157.918, 85.2093, 0.4942", "471.973, 157.005, 85.2107, 0.5906", "472.685, 156.109, 85.202, 0.6166", "473.382, 155.203, 85.1925, 0.491", "474.116, 154.327, 85.1883, 0.4156", "475.071, 153.765, 85.1942, 0.4272", "476.038, 153.187, 85.2155, 0.6286", "476.666, 152.265, 85.255, 0.5854", "477.191, 151.251, 85.3138, 0.4684", "477.966, 150.433, 85.3933, 0.4332", "478.854, 149.714, 85.4952, 0.3998", "479.629, 148.882, 85.6282, 0.411", "480.369, 148.014, 85.7987, 0.5334", "481.233, 147.275, 85.9989, 0.4972", "482.193, 146.66, 86.2333, 0.5638", "483.032, 145.904, 86.5099, 0.4942", "483.589, 144.925, 86.8305, 0.3888", "483.722, 143.816, 87.1993, 0.3072", "483.78, 142.685, 87.605, 0.2882", "483.934, 141.564, 88.0432, 0.2994", "484.105, 140.444, 88.5097, 0.3228", "484.157, 139.322, 89.0179, 0.3538", "484.18, 138.204, 89.5787, 0.4722", "484.187, 137.09, 90.1888, 0.3934", "484.188, 135.976, 90.8446, 0.3254", "484.18, 134.867, 91.5471, 0.2746", "484.158, 133.768, 92.3031, 0.2746", "484.018, 132.69, 93.1148, 0.2746", "483.491, 131.743, 93.97, 0.2746", "483.442, 130.65, 94.8416, 0.2746", "483.97, 129.757, 95.788, 0.2746", "484.625, 129.145, 96.7834, 0.2746", "485.637, 129.04, 97.8135, 0.2746", "485.85, 128.304, 98.8691, 0.2746", "486.846, 128.049, 99.8626, 0.2746", "487.608, 127.26, 100.76, 0.2746", "488.219, 126.321, 101.559, 0.2746", "488.707, 125.308, 102.279, 0.2746", "489.656, 124.876, 102.995, 0.2746", "490.345, 124.011, 103.703, 0.2746", "490.925, 123.077, 104.423, 0.2748", "491.233, 122.018, 105.159, 0.275", "491.504, 120.954, 105.911, 0.2752", "491.727, 119.889, 106.683, 0.276", "492.134, 118.87, 107.449, 0.2768", "492.633, 117.878, 108.195, 0.279", "493.047, 116.876, 108.94, 0.2828", "493.786, 116.078, 109.7, 0.2896", "494.377, 115.156, 110.431, 0.3034", "494.614, 114.082, 111.139, 0.323", "494.638, 113.08, 111.897, 0.3898", "494.34, 112.33, 112.74, 0.3644", "493.979, 111.379, 113.413, 0.356", "493.649, 110.405, 113.874, 0.3814", "492.95, 109.595, 114.24, 0.4576" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "457.404, 185.222, 77.5438, 1.2066", "458.222, 184.761, 77.7448, 1.0846", "459.202, 184.169, 77.9167, 0.7438", "460.029, 183.389, 78.0774, 0.6646", "460.904, 182.674, 78.2695, 0.5814", "461.669, 181.839, 78.4784, 0.5764", "462.334, 180.914, 78.6733, 0.529", "463.159, 180.126, 78.8337, 0.625", "464.132, 179.525, 78.9516, 0.8272", "465.117, 178.945, 79.0233, 0.8562", "466.119, 178.393, 79.0521, 0.9864", "467.075, 177.764, 79.0566, 1.0848", "467.977, 177.064, 79.0544, 1.0468", "468.976, 176.508, 79.0552, 0.9024", "470.032, 176.073, 79.0622, 0.7648", "470.976, 175.428, 79.0742, 0.7926", "471.906, 174.761, 79.0894, 0.8454", "472.859, 174.13, 79.1062, 0.9364", "473.839, 173.544, 79.1188, 0.9104", "474.819, 172.957, 79.1084, 0.893", "475.722, 172.258, 79.0577, 0.9384", "476.504, 171.425, 78.9513, 0.8758", "477.357, 170.676, 78.7755, 1.0118", "478.304, 170.056, 78.5274, 0.9568", "479.272, 169.472, 78.2239, 0.9738", "480.273, 168.943, 77.8924, 0.8848", "481.283, 168.43, 77.555, 0.8474", "482.29, 167.911, 77.2279, 0.8442", "483.307, 167.41, 76.9247, 0.7466", "484.267, 166.809, 76.6534, 0.5546", "485.18, 166.128, 76.4341, 0.4794", "486.092, 165.44, 76.2933, 0.578", "486.992, 164.735, 76.2336, 0.7504", "487.885, 164.023, 76.2342, 0.892", "488.823, 163.372, 76.2675, 0.8736", "489.75, 162.708, 76.3076, 0.8322", "490.523, 161.878, 76.3288, 0.79", "491.06, 160.877, 76.316, 0.7724", "491.569, 159.861, 76.2639, 0.6736", "492.395, 159.124, 76.1726, 0.814", "493.436, 158.663, 76.0472, 0.874", "494.473, 158.192, 75.9021, 0.8142", "495.414, 157.555, 75.752, 0.6176", "496.228, 156.758, 75.6059, 0.6712", "497.063, 155.983, 75.4673, 0.5694", "497.999, 155.328, 75.3348, 0.4432", "498.956, 154.702, 75.2007, 0.3636", "499.952, 154.146, 75.0526, 0.3816", "501.018, 153.746, 74.8768, 0.5262", "502.047, 153.268, 74.6637, 0.483", "502.836, 152.478, 74.4055, 0.5428", "503.455, 151.526, 74.0891, 0.4304", "504.25, 150.759, 73.6985, 0.3892", "505.293, 150.428, 73.2351, 0.418", "506.358, 150.14, 72.7056, 0.4184", "507.412, 149.8, 72.1392, 0.4468", "508.363, 149.222, 71.5747, 0.5944", "509.193, 148.463, 71.0427, 0.637", "509.902, 147.589, 70.5471, 0.6938", "510.617, 146.719, 70.0823, 0.678", "511.454, 145.96, 69.6592, 0.5488", "512.093, 145.025, 69.2835, 0.5656", "512.561, 143.99, 68.9396, 0.4974", "512.809, 142.883, 68.6129, 0.3946", "513.306, 141.861, 68.3141, 0.3184", "514.267, 141.262, 68.028, 0.3084", "515.144, 140.536, 67.7491, 0.3394" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "456.296, 111.743, 82.0476, 0.662", "456.129, 110.596, 82.1615, 0.555", "455.965, 109.467, 82.2786, 0.5844", "455.862, 108.328, 82.4116, 0.496", "455.764, 107.19, 82.5457, 0.5682", "455.432, 106.096, 82.6885, 0.4724", "454.951, 105.06, 82.8531, 0.4924", "454.493, 104.026, 83.0575, 0.488", "454.324, 102.918, 83.312, 0.451", "453.734, 101.95, 83.6007, 0.5218", "453.093, 101.007, 83.8953, 0.4328", "452.957, 99.8995, 84.2066, 0.4244", "452.492, 98.8774, 84.539, 0.3342", "451.475, 98.3768, 84.8764, 0.3006", "450.572, 97.696, 85.2281, 0.2758", "449.749, 96.9223, 85.5938, 0.2768", "449.093, 96.0238, 85.9505, 0.279", "448.739, 94.9419, 86.2828, 0.2826", "448.191, 93.946, 86.6116, 0.2892", "447.639, 92.9699, 86.9739, 0.3028", "447.234, 91.9166, 87.3771, 0.3214", "446.582, 91.052, 87.8461, 0.387", "445.681, 90.445, 88.3968, 0.3588", "444.874, 89.6861, 88.9655, 0.3476", "444.037, 88.9336, 89.4958, 0.356", "443.271, 88.102, 89.9646, 0.4576", "442.652, 87.1958, 90.9423, 0.4576" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "456.296, 111.743, 82.0476, 0.662", "456.239, 110.797, 79.9588, 0.4038", "456.549, 109.712, 79.539, 0.4082", "457.003, 108.675, 79.107, 0.3512", "457.498, 107.655, 78.6755, 0.3332", "457.528, 106.578, 78.2454, 0.3308", "457.53, 105.455, 77.8302, 0.404", "458.179, 104.602, 77.4418, 0.3914", "458.886, 103.726, 77.0538, 0.4036", "459.041, 102.631, 76.657, 0.483", "459.139, 101.714, 76.2129, 0.5818", "459.331, 100.614, 75.8901, 0.5422", "459.946, 99.6534, 75.6689, 0.4068", "460.836, 98.9862, 75.4485, 0.4576" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "515.144, 140.536, 67.7491, 0.3394", "515.387, 140.172, 68.1789, 0.4576", "516.188, 139.415, 69.0598, 0.5574", "517.19, 138.891, 69.4204, 0.4192", "518.242, 138.489, 69.8407, 0.3264", "519.258, 138.058, 70.3461, 0.2766", "520.304, 137.675, 70.9036, 0.2782", "520.914, 136.783, 71.4834, 0.2814", "521.931, 136.355, 72.074, 0.287", "523.025, 136.288, 72.6774, 0.2988", "524.085, 136.174, 73.2906, 0.3142", "524.903, 135.492, 73.8886, 0.3734", "525.816, 135.216, 74.4646, 0.3338", "526.907, 135.039, 75.0134, 0.3", "527.137, 134.0, 75.5479, 0.2746", "527.807, 133.102, 76.0505, 0.2746", "528.455, 132.171, 76.4977, 0.2746", "529.044, 131.2, 76.8928, 0.2746", "529.615, 130.218, 77.2551, 0.2746", "530.199, 129.25, 77.6079, 0.2746", "530.814, 128.295, 77.9422, 0.2746", "531.436, 127.341, 78.2583, 0.2746", "532.058, 126.387, 78.5683, 0.2746", "532.746, 125.856, 78.8253, 0.2746", "533.654, 125.186, 79.1319, 0.2744", "534.563, 124.515, 79.4828, 0.2744", "535.471, 123.845, 79.8739, 0.2742", "536.379, 123.174, 80.299, 0.2736", "537.289, 122.504, 80.75, 0.2728", "538.197, 121.834, 81.2378, 0.2712", "539.105, 121.163, 81.732, 0.2684", "540.014, 120.493, 82.2198, 0.2626", "540.922, 119.823, 82.6904, 0.2542", "541.786, 119.174, 83.1956, 0.2288", "542.63, 118.536, 84.4304, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "515.144, 140.536, 67.7491, 0.3394", "515.692, 139.51, 67.2364, 0.5258", "516.125, 138.469, 66.9346, 0.5176", "516.832, 137.6, 66.6109, 0.434", "517.809, 137.046, 66.2698, 0.3808", "518.529, 136.175, 65.9078, 0.4754", "519.297, 135.35, 65.5357, 0.3988", "520.274, 134.824, 65.1714, 0.3358", "521.385, 134.628, 64.8287, 0.294", "522.419, 134.23, 64.512, 0.3112", "523.391, 133.634, 64.2222, 0.3384", "524.388, 133.085, 63.9492, 0.4134", "525.374, 132.523, 63.6779, 0.4334", "526.293, 131.864, 63.4018, 0.3606", "527.347, 131.512, 63.1355, 0.3022", "528.481, 131.457, 62.8975, 0.279", "529.612, 131.594, 62.6998, 0.2826", "530.752, 131.654, 62.5498, 0.289", "531.893, 131.573, 62.4476, 0.3024", "533.026, 131.428, 62.3843, 0.321", "534.153, 131.229, 62.347, 0.386", "535.278, 131.019, 62.3238, 0.3584", "536.404, 130.826, 62.3078, 0.34", "537.534, 130.637, 62.2947, 0.3746", "538.66, 130.439, 62.2796, 0.3358", "539.785, 130.232, 62.2577, 0.3036", "540.916, 130.066, 62.2412, 0.2814", "541.975, 129.651, 62.2373, 0.287", "542.831, 128.904, 62.2457, 0.2986", "543.54, 128.007, 62.2597, 0.314", "544.261, 127.119, 62.2765, 0.3732", "545.081, 126.321, 62.2933, 0.3336", "545.902, 125.524, 62.305, 0.2994", "546.811, 124.831, 62.3109, 0.2736", "547.743, 124.165, 62.3132, 0.2728", "548.673, 123.501, 62.3137, 0.2712", "549.604, 122.836, 62.3132, 0.2684", "550.535, 122.171, 62.3126, 0.2626", "551.465, 121.505, 62.3123, 0.2542", "552.396, 120.841, 62.3123, 0.2288", "553.328, 120.176, 62.3123, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_566",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_567",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_29", "dend_28", "dend_25", "dend_10", "dend_3", "dend_0", "apic_0", "dend_42", "dend_35", "dend_33", "dend_30", "dend_27", "dend_26", "dend_12", "dend_11", "dend_5", "dend_4", "dend_2", "dend_1", "apic_20", "apic_1", "dend_44", "dend_43", "dend_39", "dend_36", "dend_32", "dend_31", "dend_14", "dend_13", "dend_7", "dend_6", "apic_26", "apic_21", "apic_19", "apic_2", "dend_48", "dend_45", "dend_41", "dend_40", "dend_38", "dend_37", "dend_16", "dend_15", "dend_9", "dend_8", "apic_28", "apic_27", "apic_25", "apic_22", "apic_18", "apic_3", "dend_47", "dend_46", "dend_18", "dend_17", "apic_24", "apic_23", "apic_17", "apic_4", "dend_22", "dend_19", "apic_6", "apic_5", "dend_24", "dend_23", "dend_21", "dend_20", "apic_12", "apic_7", "apic_14", "apic_13", "apic_11", "apic_8", "apic_16", "apic_15", "apic_10", "apic_9" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_29", "dend_28", "dend_25", "dend_10", "dend_3", "dend_0", "dend_42", "dend_35", "dend_33", "dend_30", "dend_27", "dend_26", "dend_12", "dend_11", "dend_5", "dend_4", "dend_2", "dend_1", "dend_44", "dend_43", "dend_39", "dend_36", "dend_32", "dend_31", "dend_14", "dend_13", "dend_7", "dend_6", "dend_48", "dend_45", "dend_41", "dend_40", "dend_38", "dend_37", "dend_16", "dend_15", "dend_9", "dend_8", "dend_47", "dend_46", "dend_18", "dend_17", "dend_22", "dend_19", "dend_24", "dend_23", "dend_21", "dend_20" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_20", "apic_1", "apic_26", "apic_21", "apic_19", "apic_2", "apic_28", "apic_27", "apic_25", "apic_22", "apic_18", "apic_3", "apic_24", "apic_23", "apic_17", "apic_4", "apic_6", "apic_5", "apic_12", "apic_7", "apic_14", "apic_13", "apic_11", "apic_8", "apic_16", "apic_15", "apic_10", "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23889",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "apic_26", "apic_26", "apic_26", "apic_26", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_2", "apic_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.3852353"
  }, {
    "group" : "apic",
    "value" : "2.3852353"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "144.02812"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0048876847",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.8415574E-8",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.9137945",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "1.1235068E-5",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.3382055E-6",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.759904E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.9075467E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.13270073",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "8.5968295E-6",
    "erev" : "-92.95116"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "1.6383333E-6",
    "erev" : "-92.95116"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.2512523E-6",
    "erev" : "-92.95116"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "2.2470806E-4",
    "erev" : "-92.95116"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.0672595E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0010728297",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_486557284",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_486557284

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_20, id: apic_20, parent: apic_0
create apic_20
public apic_20
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: apic_26, id: apic_26, parent: apic_20
create apic_26
public apic_26
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_19, id: apic_19, parent: apic_1
create apic_19
public apic_19
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: apic_28, id: apic_28, parent: apic_26
create apic_28
public apic_28
// Section: apic_27, id: apic_27, parent: apic_26
create apic_27
public apic_27
// Section: apic_25, id: apic_25, parent: apic_21
create apic_25
public apic_25
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_18, id: apic_18, parent: apic_2
create apic_18
public apic_18
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: apic_24, id: apic_24, parent: apic_22
create apic_24
public apic_24
// Section: apic_23, id: apic_23, parent: apic_22
create apic_23
public apic_23
// Section: apic_17, id: apic_17, parent: apic_3
create apic_17
public apic_17
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: apic_12, id: apic_12, parent: apic_6
create apic_12
public apic_12
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_11, id: apic_11, parent: apic_7
create apic_11
public apic_11
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_566, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_566
// Group: {name=ModelViewParmSubset_567, groups=[], sections=[dend_34, dend_29, dend_28, dend_25, dend_10, dend_3, dend_0, apic_0, dend_42, dend_35, dend_33, dend_30, dend_27, dend_26, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, apic_20, apic_1, dend_44, dend_43, dend_39, dend_36, dend_32, dend_31, dend_14, dend_13, dend_7, dend_6, apic_26, apic_21, apic_19, apic_2, dend_48, dend_45, dend_41, dend_40, dend_38, dend_37, dend_16, dend_15, dend_9, dend_8, apic_28, apic_27, apic_25, apic_22, apic_18, apic_3, dend_47, dend_46, dend_18, dend_17, apic_24, apic_23, apic_17, apic_4, dend_22, dend_19, apic_6, apic_5, dend_24, dend_23, dend_21, dend_20, apic_12, apic_7, apic_14, apic_13, apic_11, apic_8, apic_16, apic_15, apic_10, apic_9]}
objref ModelViewParmSubset_567
// Group: {name=dend, groups=[], sections=[dend_34, dend_29, dend_28, dend_25, dend_10, dend_3, dend_0, dend_42, dend_35, dend_33, dend_30, dend_27, dend_26, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, dend_44, dend_43, dend_39, dend_36, dend_32, dend_31, dend_14, dend_13, dend_7, dend_6, dend_48, dend_45, dend_41, dend_40, dend_38, dend_37, dend_16, dend_15, dend_9, dend_8, dend_47, dend_46, dend_18, dend_17, dend_22, dend_19, dend_24, dend_23, dend_21, dend_20]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_26, apic_21, apic_19, apic_2, apic_28, apic_27, apic_25, apic_22, apic_18, apic_3, apic_24, apic_23, apic_17, apic_4, apic_6, apic_5, apic_12, apic_7, apic_14, apic_13, apic_11, apic_8, apic_16, apic_15, apic_10, apic_9]}
objref apic
// Group: {name=OneSecGrp_SectionRef_23889, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_23889
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_26, apic_26, apic_26, apic_26, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_486557284
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000000000000027)
    connect dend_34(0), soma_0(0.5000000000000027)
    connect dend_29(0), soma_0(0.5000000000000027)
    connect dend_28(0), soma_0(0.5000000000000027)
    connect dend_25(0), soma_0(0.5000000000000027)
    connect dend_10(0), soma_0(0.5000000000000027)
    connect dend_3(0), soma_0(0.5000000000000027)
    connect dend_0(0), soma_0(0.5000000000000027)
    connect apic_0(0), soma_0(0.5000000000000027)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_20(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect apic_26(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_19(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect apic_28(0), apic_26(1.0)
    connect apic_27(0), apic_26(1.0)
    connect apic_25(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_18(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect apic_24(0), apic_22(1.0)
    connect apic_23(0), apic_22(1.0)
    connect apic_17(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect apic_12(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_11(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 366.332, 511.254, 39.76, 10.4786 ) }
    soma_0 { pt3dadd( 371.571, 511.254, 39.76, 10.4786 ) }
    soma_0 { pt3dadd( 376.81, 511.254, 39.76, 10.4786 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 371.571, 511.254, 39.76, 1.0 ) }
    axon_0 { pt3dadd( 377.412, 525.07, 39.76, 1.0 ) }
    axon_0 { pt3dadd( 383.254, 538.886, 39.76, 1.0 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 367.524, 513.344, 42.8739, 0.4188 ) }
    dend_34 { pt3dadd( 366.511, 513.778, 43.5378, 0.6186 ) }
    dend_34 { pt3dadd( 365.879, 514.568, 44.247, 0.54 ) }
    dend_34 { pt3dadd( 365.177, 515.412, 44.9224, 0.5164 ) }
    dend_34 { pt3dadd( 364.52, 516.317, 45.5347, 0.5644 ) }
    dend_34 { pt3dadd( 364.57, 517.433, 46.0779, 0.895 ) }
    dend_34 { pt3dadd( 364.685, 518.565, 46.5273, 1.022 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 13/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 372.441, 515.152, 44.0359, 0.3984 ) }
    dend_29 { pt3dadd( 373.027, 516.044, 44.8, 0.4896 ) }
    dend_29 { pt3dadd( 373.761, 516.873, 45.5381, 0.7426 ) }
    dend_29 { pt3dadd( 374.586, 517.615, 46.2196, 0.8056 ) }
    dend_29 { pt3dadd( 375.068, 518.552, 46.83, 0.836 ) }
    dend_29 { pt3dadd( 374.922, 519.657, 47.3584, 0.6234 ) }
    dend_29 { pt3dadd( 375.063, 520.775, 47.7904, 0.6196 ) }
    dend_29 { pt3dadd( 375.394, 521.864, 48.1303, 0.5498 ) }
    dend_29 { pt3dadd( 375.69, 522.966, 48.3879, 0.4946 ) }
    dend_29 { pt3dadd( 375.79, 524.093, 48.5677, 0.49 ) }
    dend_29 { pt3dadd( 375.656, 525.228, 48.6744, 0.6928 ) }
    dend_29 { pt3dadd( 375.591, 526.366, 48.7329, 0.731 ) }
    dend_29 { pt3dadd( 375.933, 527.393, 48.7805, 0.6098 ) }
    dend_29 { pt3dadd( 376.536, 528.354, 48.8858, 0.6318 ) }
    dend_29 { pt3dadd( 376.725, 529.449, 49.0927, 0.618 ) }
    dend_29 { pt3dadd( 376.726, 530.576, 49.3822, 0.628 ) }
    dend_29 { pt3dadd( 376.819, 531.704, 49.7216, 0.7044 ) }
    dend_29 { pt3dadd( 376.937, 532.834, 50.0822, 0.5638 ) }
    dend_29 { pt3dadd( 376.504, 533.87, 50.4563, 0.5312 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 32/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 370.606, 515.803, 40.0562, 0.2956 ) }
    dend_28 { pt3dadd( 370.369, 516.922, 40.1212, 0.3132 ) }
    dend_28 { pt3dadd( 370.131, 518.04, 40.1878, 0.3478 ) }
    dend_28 { pt3dadd( 369.894, 519.159, 40.2548, 0.402 ) }
    dend_28 { pt3dadd( 369.656, 520.278, 40.3231, 0.5514 ) }
    dend_28 { pt3dadd( 369.406, 521.394, 40.3928, 0.5912 ) }
    dend_28 { pt3dadd( 369.12, 522.501, 40.4645, 0.4444 ) }
    dend_28 { pt3dadd( 368.823, 523.607, 40.5406, 0.326 ) }
    dend_28 { pt3dadd( 368.527, 524.712, 40.6263, 0.2758 ) }
    dend_28 { pt3dadd( 368.294, 525.83, 40.7224, 0.2766 ) }
    dend_28 { pt3dadd( 368.121, 526.961, 40.84, 0.2784 ) }
    dend_28 { pt3dadd( 367.82, 528.059, 40.9928, 0.2818 ) }
    dend_28 { pt3dadd( 367.257, 529.05, 41.2034, 0.2882 ) }
    dend_28 { pt3dadd( 366.697, 530.036, 41.482, 0.2998 ) }
    dend_28 { pt3dadd( 366.141, 531.016, 41.8272, 0.3224 ) }
    dend_28 { pt3dadd( 365.621, 532.009, 42.2282, 0.3576 ) }
    dend_28 { pt3dadd( 365.337, 533.098, 42.66, 0.456 ) }
    dend_28 { pt3dadd( 365.141, 534.208, 43.099, 0.4772 ) }
    dend_28 { pt3dadd( 364.753, 535.252, 43.5372, 0.612 ) }
    dend_28 { pt3dadd( 364.164, 536.21, 43.9608, 0.6288 ) }
    dend_28 { pt3dadd( 363.699, 537.236, 44.3556, 0.6488 ) }
    dend_28 { pt3dadd( 363.322, 538.301, 44.714, 0.7368 ) }
    dend_28 { pt3dadd( 362.932, 539.369, 45.0181, 0.6556 ) }
    dend_28 { pt3dadd( 362.482, 540.416, 45.2474, 0.5462 ) }
    dend_28 { pt3dadd( 361.882, 541.383, 45.3978, 0.6004 ) }
    dend_28 { pt3dadd( 361.114, 542.226, 45.4835, 0.5984 ) }
    dend_28 { pt3dadd( 360.314, 543.042, 45.5238, 0.6336 ) }
    dend_28 { pt3dadd( 359.708, 543.996, 45.5395, 0.509 ) }
    dend_28 { pt3dadd( 359.258, 545.047, 45.5552, 0.5146 ) }
    dend_28 { pt3dadd( 358.745, 546.067, 45.5899, 0.5224 ) }
    dend_28 { pt3dadd( 358.182, 547.062, 45.6509, 0.5466 ) }
    dend_28 { pt3dadd( 357.696, 548.094, 45.743, 0.5446 ) }
    dend_28 { pt3dadd( 357.294, 549.164, 45.8662, 0.5406 ) }
    dend_28 { pt3dadd( 356.834, 550.207, 46.011, 0.5336 ) }
    dend_28 { pt3dadd( 356.223, 551.169, 46.174, 0.5194 ) }
    dend_28 { pt3dadd( 355.578, 552.11, 46.363, 0.4978 ) }
    dend_28 { pt3dadd( 355.11, 553.135, 46.5914, 0.4344 ) }
    dend_28 { pt3dadd( 354.514, 554.075, 46.8544, 0.4312 ) }
    dend_28 { pt3dadd( 353.49, 554.467, 47.1372, 0.5586 ) }
    dend_28 { pt3dadd( 352.45, 554.921, 47.4261, 0.604 ) }
    dend_28 { pt3dadd( 351.699, 555.754, 47.7369, 0.4684 ) }
    dend_28 { pt3dadd( 351.214, 556.776, 48.0634, 0.3702 ) }
    dend_28 { pt3dadd( 350.919, 557.872, 48.389, 0.3596 ) }
    dend_28 { pt3dadd( 350.694, 558.986, 48.7026, 0.4224 ) }
    dend_28 { pt3dadd( 350.623, 560.123, 48.9986, 0.5962 ) }
    dend_28 { pt3dadd( 350.418, 561.244, 49.2803, 0.64 ) }
    dend_28 { pt3dadd( 350.263, 562.356, 49.5522, 0.7008 ) }
    dend_28 { pt3dadd( 349.522, 563.214, 49.8145, 0.6836 ) }
    dend_28 { pt3dadd( 348.578, 563.855, 50.073, 0.5954 ) }
    dend_28 { pt3dadd( 347.765, 564.585, 50.3322, 0.477 ) }
    dend_28 { pt3dadd( 347.615, 565.713, 50.5971, 0.4938 ) }
    dend_28 { pt3dadd( 347.511, 566.839, 50.8777, 0.5246 ) }
    dend_28 { pt3dadd( 347.165, 567.918, 51.1767, 0.582 ) }
    dend_28 { pt3dadd( 346.742, 568.969, 51.4895, 0.4596 ) }
    dend_28 { pt3dadd( 346.528, 570.075, 51.8221, 0.4272 ) }
    dend_28 { pt3dadd( 346.41, 571.192, 52.178, 0.3394 ) }
    dend_28 { pt3dadd( 346.294, 572.313, 52.5353, 0.3102 ) }
    dend_28 { pt3dadd( 345.951, 573.343, 52.8755, 0.2934 ) }
    dend_28 { pt3dadd( 345.103, 574.063, 53.1955, 0.3102 ) }
    dend_28 { pt3dadd( 344.341, 574.876, 53.5004, 0.3354 ) }
    dend_28 { pt3dadd( 343.914, 575.918, 53.7858, 0.4136 ) }
    dend_28 { pt3dadd( 343.84, 577.045, 54.0495, 0.4046 ) }
    dend_28 { pt3dadd( 343.834, 578.186, 54.311, 0.4508 ) }
    dend_28 { pt3dadd( 343.629, 579.301, 54.5857, 0.457 ) }
    dend_28 { pt3dadd( 343.051, 580.256, 54.8842, 0.3988 ) }
    dend_28 { pt3dadd( 342.298, 581.103, 55.2168, 0.3988 ) }
    dend_28 { pt3dadd( 341.565, 581.96, 55.5912, 0.3338 ) }
    dend_28 { pt3dadd( 341.065, 582.958, 55.9997, 0.3 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_28 { pt3dadd( 340.674, 584.012, 56.4315, 0.2746 ) }
    dend_28 { pt3dadd( 340.617, 585.126, 56.8658, 0.2746 ) }
    dend_28 { pt3dadd( 340.692, 586.256, 57.2849, 0.2746 ) }
    dend_28 { pt3dadd( 340.782, 587.389, 57.6794, 0.2746 ) }
    dend_28 { pt3dadd( 340.87, 588.523, 58.0499, 0.2746 ) }
    dend_28 { pt3dadd( 340.959, 589.659, 58.4035, 0.2746 ) }
    dend_28 { pt3dadd( 341.032, 590.794, 58.7546, 0.2746 ) }
    dend_28 { pt3dadd( 341.047, 591.925, 59.1259, 0.2746 ) }
    dend_28 { pt3dadd( 341.034, 593.052, 59.5291, 0.2746 ) }
    dend_28 { pt3dadd( 340.992, 594.179, 59.9578, 0.2746 ) }
    dend_28 { pt3dadd( 340.809, 595.286, 60.4086, 0.2746 ) }
    dend_28 { pt3dadd( 340.133, 596.151, 60.8815, 0.2746 ) }
    dend_28 { pt3dadd( 339.488, 597.073, 61.3466, 0.2746 ) }
    dend_28 { pt3dadd( 338.468, 597.512, 61.7938, 0.2746 ) }
    dend_28 { pt3dadd( 337.448, 598.002, 62.1992, 0.2746 ) }
    dend_28 { pt3dadd( 336.72, 598.572, 62.5859, 0.2746 ) }
    dend_28 { pt3dadd( 336.335, 599.639, 62.9157, 0.2746 ) }
    dend_28 { pt3dadd( 335.93, 600.704, 63.1907, 0.2746 ) }
    dend_28 { pt3dadd( 335.635, 601.807, 63.4214, 0.2746 ) }
    dend_28 { pt3dadd( 335.337, 602.91, 63.6182, 0.2746 ) }
    dend_28 { pt3dadd( 335.276, 604.024, 63.8, 0.2746 ) }
    dend_28 { pt3dadd( 335.487, 605.143, 63.9848, 0.2746 ) }
    dend_28 { pt3dadd( 335.716, 606.259, 64.1763, 0.2746 ) }
    dend_28 { pt3dadd( 335.96, 607.374, 64.3667, 0.2748 ) }
    dend_28 { pt3dadd( 336.478, 608.372, 64.5515, 0.2748 ) }
    dend_28 { pt3dadd( 336.956, 609.402, 64.7284, 0.275 ) }
    dend_28 { pt3dadd( 337.52, 610.388, 64.9006, 0.2754 ) }
    dend_28 { pt3dadd( 338.137, 611.35, 65.0768, 0.2764 ) }
    dend_28 { pt3dadd( 338.511, 612.416, 65.2719, 0.2778 ) }
    dend_28 { pt3dadd( 339.005, 613.431, 65.4996, 0.2806 ) }
    dend_28 { pt3dadd( 339.654, 614.369, 65.7684, 0.2858 ) }
    dend_28 { pt3dadd( 340.156, 615.36, 66.1273, 0.295 ) }
    dend_28 { pt3dadd( 340.61, 616.363, 66.5806, 0.3134 ) }
    dend_28 { pt3dadd( 340.84, 617.434, 67.079, 0.3412 ) }
    dend_28 { pt3dadd( 340.74, 618.548, 67.5884, 0.4258 ) }
    dend_28 { pt3dadd( 340.326, 619.576, 68.0795, 0.4204 ) }
    dend_28 { pt3dadd( 340.181, 620.562, 68.5451, 0.5114 ) }
    dend_28 { pt3dadd( 340.636, 621.591, 68.9906, 0.4182 ) }
    dend_28 { pt3dadd( 341.017, 622.651, 69.4159, 0.3738 ) }
    dend_28 { pt3dadd( 341.271, 623.753, 69.8188, 0.354 ) }
    dend_28 { pt3dadd( 341.417, 624.879, 70.1977, 0.4728 ) }
    dend_28 { pt3dadd( 341.491, 626.015, 70.5544, 0.394 ) }
    dend_28 { pt3dadd( 341.793, 627.093, 70.8974, 0.327 ) }
    dend_28 { pt3dadd( 342.491, 627.967, 71.2404, 0.2776 ) }
    dend_28 { pt3dadd( 343.305, 628.756, 71.5968, 0.2802 ) }
    dend_28 { pt3dadd( 344.091, 629.567, 71.9771, 0.285 ) }
    dend_28 { pt3dadd( 344.776, 630.454, 72.3881, 0.2938 ) }
    dend_28 { pt3dadd( 345.416, 631.375, 72.8221, 0.3112 ) }
    dend_28 { pt3dadd( 346.033, 632.318, 73.25, 0.3382 ) }
    dend_28 { pt3dadd( 346.783, 633.157, 73.6515, 0.413 ) }
    dend_28 { pt3dadd( 347.734, 633.757, 74.0183, 0.4326 ) }
    dend_28 { pt3dadd( 348.705, 634.276, 74.3946, 0.359 ) }
    dend_28 { pt3dadd( 349.454, 634.877, 74.6547, 0.2994 ) }
    dend_28 { pt3dadd( 350.328, 635.613, 74.8252, 0.2736 ) }
    dend_28 { pt3dadd( 351.203, 636.35, 74.9274, 0.2728 ) }
    dend_28 { pt3dadd( 352.079, 637.088, 74.9806, 0.2712 ) }
    dend_28 { pt3dadd( 352.953, 637.825, 75.0, 0.2684 ) }
    dend_28 { pt3dadd( 353.828, 638.562, 74.9994, 0.2626 ) }
    dend_28 { pt3dadd( 354.703, 639.299, 74.9994, 0.2542 ) }
    dend_28 { pt3dadd( 355.577, 640.037, 74.9994, 0.2288 ) }
    dend_28 { pt3dadd( 356.452, 640.774, 74.9994, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 61/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 371.309, 506.163, 38.8906, 0.4628 ) }
    dend_25 { pt3dadd( 370.546, 505.346, 38.7528, 0.666 ) }
    dend_25 { pt3dadd( 369.526, 504.847, 38.6271, 0.7958 ) }
    dend_25 { pt3dadd( 368.837, 503.94, 38.554, 0.861 ) }
    dend_25 { pt3dadd( 368.305, 502.936, 38.5398, 0.9186 ) }
    dend_25 { pt3dadd( 367.575, 502.062, 38.5552, 0.8756 ) }
    dend_25 { pt3dadd( 366.734, 501.286, 38.5734, 0.8354 ) }
    dend_25 { pt3dadd( 365.912, 500.491, 38.5792, 0.7986 ) }
    dend_25 { pt3dadd( 365.116, 499.671, 38.5484, 0.775 ) }
    dend_25 { pt3dadd( 364.436, 498.76, 38.4678, 0.7436 ) }
    dend_25 { pt3dadd( 363.9, 497.751, 38.3401, 0.6258 ) }
    dend_25 { pt3dadd( 363.368, 496.741, 38.1598, 0.6964 ) }
    dend_25 { pt3dadd( 362.955, 495.691, 37.9123, 0.7958 ) }
    dend_25 { pt3dadd( 362.643, 494.609, 37.5956, 0.6786 ) }
    dend_25 { pt3dadd( 362.243, 493.555, 37.2414, 0.7788 ) }
    dend_25 { pt3dadd( 361.805, 492.509, 36.876, 0.567 ) }
    dend_25 { pt3dadd( 361.567, 491.42, 36.4988, 0.5038 ) }
    dend_25 { pt3dadd( 361.664, 490.302, 36.1259, 0.3882 ) }
    dend_25 { pt3dadd( 361.732, 489.173, 35.7846, 0.3962 ) }
    dend_25 { pt3dadd( 361.489, 488.074, 35.4855, 0.4744 ) }
    dend_25 { pt3dadd( 360.816, 487.19, 35.226, 0.542 ) }
    dend_25 { pt3dadd( 359.937, 486.464, 34.993, 0.5836 ) }
    dend_25 { pt3dadd( 359.511, 485.455, 34.7889, 0.6102 ) }
    dend_25 { pt3dadd( 358.941, 484.479, 34.613, 0.6764 ) }
    dend_25 { pt3dadd( 358.215, 483.6, 34.4526, 0.7164 ) }
    dend_25 { pt3dadd( 357.633, 482.625, 34.2871, 0.5054 ) }
    dend_25 { pt3dadd( 357.256, 481.565, 34.0934, 0.3548 ) }
    dend_25 { pt3dadd( 356.422, 480.799, 33.9007, 0.2822 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 367.581, 514.547, 39.9224, 0.5784 ) }
    dend_10 { pt3dadd( 366.8, 515.375, 39.8807, 0.9616 ) }
    dend_10 { pt3dadd( 366.174, 516.327, 39.7953, 0.9484 ) }
    dend_10 { pt3dadd( 365.306, 516.992, 39.6668, 1.0044 ) }
    dend_10 { pt3dadd( 364.213, 517.27, 39.5044, 1.174 ) }
    dend_10 { pt3dadd( 363.11, 517.547, 39.3277, 1.1712 ) }
    dend_10 { pt3dadd( 362.012, 517.858, 39.1588, 1.1028 ) }
    dend_10 { pt3dadd( 360.943, 518.258, 39.0239, 1.0538 ) }
    dend_10 { pt3dadd( 359.833, 518.499, 38.9287, 0.8156 ) }
    dend_10 { pt3dadd( 358.711, 518.384, 38.8234, 0.8598 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 373.44, 515.549, 39.2644, 0.3086 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_3 { pt3dadd( 373.357, 516.685, 39.1306, 0.3372 ) }
    dend_3 { pt3dadd( 373.411, 517.763, 38.9732, 0.3938 ) }
    dend_3 { pt3dadd( 373.953, 518.763, 38.8175, 0.482 ) }
    dend_3 { pt3dadd( 374.418, 519.8, 38.6912, 0.7248 ) }
    dend_3 { pt3dadd( 374.706, 520.902, 38.5986, 0.7912 ) }
    dend_3 { pt3dadd( 375.009, 522.002, 38.5476, 0.7178 ) }
    dend_3 { pt3dadd( 375.394, 523.069, 38.5896, 0.8496 ) }
    dend_3 { pt3dadd( 376.057, 523.979, 38.7316, 0.9364 ) }
    dend_3 { pt3dadd( 376.752, 524.859, 38.9561, 0.948 ) }
    dend_3 { pt3dadd( 377.578, 525.629, 39.2112, 0.779 ) }
    dend_3 { pt3dadd( 378.201, 526.581, 39.4478, 0.7022 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 11/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 374.947, 514.316, 38.5554, 0.353 ) }
    dend_0 { pt3dadd( 375.873, 514.957, 38.2533, 0.4478 ) }
    dend_0 { pt3dadd( 376.74, 515.679, 37.9, 0.461 ) }
    dend_0 { pt3dadd( 377.491, 516.524, 37.5197, 0.5884 ) }
    dend_0 { pt3dadd( 378.427, 517.152, 37.1216, 0.5526 ) }
    dend_0 { pt3dadd( 379.439, 517.666, 36.729, 0.6638 ) }
    dend_0 { pt3dadd( 380.555, 517.891, 36.3616, 0.6942 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 18/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 372.016, 506.721, 40.8419, 0.458 ) }
    apic_0 { pt3dadd( 372.127, 505.587, 41.1169, 0.5962 ) }
    apic_0 { pt3dadd( 372.483, 504.539, 41.4282, 0.9602 ) }
    apic_0 { pt3dadd( 373.158, 503.655, 41.7936, 1.1134 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 22/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 383.254, 538.886, 39.76, 1.0 ) }
    axon_1 { pt3dadd( 389.095, 552.702, 39.76, 1.0 ) }
    axon_1 { pt3dadd( 394.936, 566.518, 39.76, 1.0 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 25/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 364.685, 518.565, 46.5273, 1.022 ) }
    dend_42 { pt3dadd( 365.893, 519.041, 47.154, 0.6338 ) }
    dend_42 { pt3dadd( 366.737, 519.8, 47.4051, 0.4546 ) }
    dend_42 { pt3dadd( 367.303, 520.775, 47.6532, 0.4498 ) }
    dend_42 { pt3dadd( 367.672, 521.824, 47.9634, 0.454 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 30/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 364.685, 518.565, 46.5273, 1.022 ) }
    dend_35 { pt3dadd( 364.141, 519.964, 47.0453, 0.5444 ) }
    dend_35 { pt3dadd( 363.137, 520.303, 47.1358, 0.4968 ) }
    dend_35 { pt3dadd( 362.01, 520.486, 47.2321, 0.663 ) }
    dend_35 { pt3dadd( 360.906, 520.78, 47.3242, 0.65 ) }
    dend_35 { pt3dadd( 359.819, 521.137, 47.4034, 0.5858 ) }
    dend_35 { pt3dadd( 358.872, 521.757, 47.4639, 0.6606 ) }
    dend_35 { pt3dadd( 358.082, 522.58, 47.5014, 0.7724 ) }
    dend_35 { pt3dadd( 357.271, 523.386, 47.5185, 0.6532 ) }
    dend_35 { pt3dadd( 356.199, 523.544, 47.5194, 0.6452 ) }
    dend_35 { pt3dadd( 355.055, 523.52, 47.5079, 0.74 ) }
    dend_35 { pt3dadd( 354.012, 523.946, 47.4877, 0.8418 ) }
    dend_35 { pt3dadd( 353.116, 524.652, 47.462, 0.931 ) }
    dend_35 { pt3dadd( 352.207, 525.344, 47.432, 0.8934 ) }
    dend_35 { pt3dadd( 351.285, 526.02, 47.3892, 0.8932 ) }
    dend_35 { pt3dadd( 350.347, 526.674, 47.3432, 0.786 ) }
    dend_35 { pt3dadd( 349.645, 527.57, 47.3166, 0.647 ) }
    dend_35 { pt3dadd( 349.029, 528.534, 47.3102, 0.5566 ) }
    dend_35 { pt3dadd( 348.001, 529.011, 47.3136, 0.4914 ) }
    dend_35 { pt3dadd( 346.881, 528.809, 47.3211, 0.562 ) }
    dend_35 { pt3dadd( 345.751, 528.634, 47.35, 0.6786 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 51/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 376.504, 533.87, 50.4563, 0.5312 ) }
    dend_33 { pt3dadd( 376.812, 534.408, 51.7336, 0.2288 ) }
    dend_33 { pt3dadd( 377.252, 534.962, 54.2402, 0.6102 ) }
    dend_33 { pt3dadd( 377.884, 535.559, 55.3162, 0.7018 ) }
    dend_33 { pt3dadd( 378.504, 536.368, 56.4794, 0.6418 ) }
    dend_33 { pt3dadd( 379.015, 537.275, 57.6582, 0.7292 ) }
    dend_33 { pt3dadd( 379.549, 538.157, 58.8227, 0.8434 ) }
    dend_33 { pt3dadd( 380.15, 539.026, 59.9222, 0.8284 ) }
    dend_33 { pt3dadd( 380.719, 539.95, 60.905, 0.7584 ) }
    dend_33 { pt3dadd( 381.241, 540.908, 61.8036, 0.6048 ) }
    dend_33 { pt3dadd( 381.72, 541.883, 62.6492, 0.6658 ) }
    dend_33 { pt3dadd( 382.044, 542.914, 63.4497, 0.6986 ) }
    dend_33 { pt3dadd( 382.254, 543.989, 64.195, 0.6942 ) }
    dend_33 { pt3dadd( 382.581, 545.042, 64.881, 0.5428 ) }
    dend_33 { pt3dadd( 383.049, 546.054, 65.4968, 0.501 ) }
    dend_33 { pt3dadd( 383.594, 547.044, 66.0285, 0.6366 ) }
    dend_33 { pt3dadd( 384.087, 548.064, 66.4807, 0.7688 ) }
    dend_33 { pt3dadd( 384.646, 548.952, 66.8618, 0.6772 ) }
    dend_33 { pt3dadd( 384.692, 550.08, 67.1745, 0.5396 ) }
    dend_33 { pt3dadd( 385.216, 551.068, 67.4531, 0.5866 ) }
    dend_33 { pt3dadd( 385.774, 552.045, 67.725, 0.5794 ) }
    dend_33 { pt3dadd( 386.154, 553.122, 68.0184, 0.5682 ) }
    dend_33 { pt3dadd( 386.828, 553.979, 68.3816, 0.5364 ) }
    dend_33 { pt3dadd( 387.72, 554.639, 68.8433, 0.529 ) }
    dend_33 { pt3dadd( 388.192, 555.621, 69.3837, 0.4936 ) }
    dend_33 { pt3dadd( 389.095, 556.196, 70.0025, 0.5348 ) }
    dend_33 { pt3dadd( 390.143, 556.553, 70.6518, 0.7788 ) }
    dend_33 { pt3dadd( 391.123, 557.059, 71.304, 0.8744 ) }
    dend_33 { pt3dadd( 391.972, 557.749, 71.9544, 0.9544 ) }
    dend_33 { pt3dadd( 392.85, 558.429, 72.5763, 0.8886 ) }
    dend_33 { pt3dadd( 393.756, 559.094, 73.1531, 0.8892 ) }
    dend_33 { pt3dadd( 394.625, 559.807, 73.6882, 0.7536 ) }
    dend_33 { pt3dadd( 395.636, 560.257, 74.209, 0.7086 ) }
    dend_33 { pt3dadd( 396.592, 560.861, 74.6844, 0.7676 ) }
    dend_33 { pt3dadd( 397.252, 561.786, 75.1022, 0.8706 ) }
    dend_33 { pt3dadd( 397.991, 562.639, 75.4981, 0.864 ) }
    dend_33 { pt3dadd( 398.854, 563.363, 75.8562, 0.6678 ) }
    dend_33 { pt3dadd( 399.786, 563.97, 76.1768, 0.51 ) }
    dend_33 { pt3dadd( 400.516, 564.835, 76.4733, 0.3612 ) }
    dend_33 { pt3dadd( 401.512, 565.258, 76.7575, 0.3036 ) }
    dend_33 { pt3dadd( 402.386, 565.838, 77.0095, 0.2814 ) }
    dend_33 { pt3dadd( 403.39, 566.177, 77.2562, 0.2872 ) }
    dend_33 { pt3dadd( 404.462, 566.541, 77.5236, 0.2988 ) }
    dend_33 { pt3dadd( 405.479, 567.057, 77.8282, 0.3144 ) }
    dend_33 { pt3dadd( 406.534, 567.481, 78.1869, 0.374 ) }
    dend_33 { pt3dadd( 407.443, 568.139, 78.6324, 0.3352 ) }
    dend_33 { pt3dadd( 408.258, 568.867, 79.2022, 0.3022 ) }
    dend_33 { pt3dadd( 409.047, 569.604, 79.8801, 0.2786 ) }
    dend_33 { pt3dadd( 409.786, 570.413, 80.617, 0.2822 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_33 { pt3dadd( 410.372, 571.342, 81.373, 0.2888 ) }
    dend_33 { pt3dadd( 410.71, 572.391, 82.1391, 0.3008 ) }
    dend_33 { pt3dadd( 410.885, 573.452, 82.9396, 0.3238 ) }
    dend_33 { pt3dadd( 411.218, 574.461, 83.7598, 0.3628 ) }
    dend_33 { pt3dadd( 411.797, 575.39, 84.5617, 0.4532 ) }
    dend_33 { pt3dadd( 412.436, 576.297, 85.3311, 0.5328 ) }
    dend_33 { pt3dadd( 413.08, 577.178, 86.0894, 0.421 ) }
    dend_33 { pt3dadd( 413.718, 578.039, 86.8501, 0.3294 ) }
    dend_33 { pt3dadd( 414.358, 578.896, 87.5913, 0.2826 ) }
    dend_33 { pt3dadd( 415.055, 579.762, 88.249, 0.288 ) }
    dend_33 { pt3dadd( 415.762, 580.641, 88.8006, 0.305 ) }
    dend_33 { pt3dadd( 416.444, 581.551, 89.2312, 0.305 ) }
    dend_33 { pt3dadd( 417.116, 582.473, 89.8195, 0.4576 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 13/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 376.504, 533.87, 50.4563, 0.5312 ) }
    dend_30 { pt3dadd( 376.0, 534.82, 51.1538, 0.5208 ) }
    dend_30 { pt3dadd( 376.155, 535.935, 51.553, 0.465 ) }
    dend_30 { pt3dadd( 376.203, 537.041, 51.9893, 0.5464 ) }
    dend_30 { pt3dadd( 376.316, 538.122, 52.4594, 0.4862 ) }
    dend_30 { pt3dadd( 376.878, 539.08, 52.9388, 0.4832 ) }
    dend_30 { pt3dadd( 377.494, 540.025, 53.4094, 0.6386 ) }
    dend_30 { pt3dadd( 377.904, 541.072, 53.8614, 0.6028 ) }
    dend_30 { pt3dadd( 378.169, 542.174, 54.2954, 0.5078 ) }
    dend_30 { pt3dadd( 378.256, 543.299, 54.7142, 0.4698 ) }
    dend_30 { pt3dadd( 378.154, 544.425, 55.1337, 0.6438 ) }
    dend_30 { pt3dadd( 378.211, 545.54, 55.5696, 0.6944 ) }
    dend_30 { pt3dadd( 378.511, 546.623, 56.0291, 0.9664 ) }
    dend_30 { pt3dadd( 378.926, 547.662, 56.5174, 1.0612 ) }
    dend_30 { pt3dadd( 379.347, 548.705, 57.0231, 0.939 ) }
    dend_30 { pt3dadd( 379.846, 549.719, 57.5268, 0.7846 ) }
    dend_30 { pt3dadd( 380.35, 550.733, 58.0294, 0.607 ) }
    dend_30 { pt3dadd( 380.629, 551.81, 58.557, 0.663 ) }
    dend_30 { pt3dadd( 380.546, 552.906, 59.1234, 0.7284 ) }
    dend_30 { pt3dadd( 380.411, 554.003, 59.7167, 0.5784 ) }
    dend_30 { pt3dadd( 380.444, 555.112, 60.3165, 0.4744 ) }
    dend_30 { pt3dadd( 380.238, 556.201, 60.916, 0.5802 ) }
    dend_30 { pt3dadd( 379.711, 557.114, 61.5182, 0.4692 ) }
    dend_30 { pt3dadd( 379.635, 558.114, 62.0029, 0.3818 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 37/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 356.422, 480.799, 33.9007, 0.2822 ) }
    dend_27 { pt3dadd( 356.46, 479.802, 33.7627, 0.288 ) }
    dend_27 { pt3dadd( 356.452, 478.659, 33.6832, 0.3008 ) }
    dend_27 { pt3dadd( 356.328, 477.529, 33.6809, 0.318 ) }
    dend_27 { pt3dadd( 355.905, 476.479, 33.763, 0.3808 ) }
    dend_27 { pt3dadd( 355.278, 475.529, 33.9049, 0.3476 ) }
    dend_27 { pt3dadd( 354.691, 474.551, 34.0763, 0.3254 ) }
    dend_27 { pt3dadd( 354.158, 473.542, 34.2555, 0.3226 ) }
    dend_27 { pt3dadd( 353.593, 472.551, 34.4232, 0.3578 ) }
    dend_27 { pt3dadd( 352.945, 471.609, 34.5702, 0.4566 ) }
    dend_27 { pt3dadd( 352.283, 470.676, 34.7032, 0.4786 ) }
    dend_27 { pt3dadd( 351.581, 469.777, 34.8387, 0.6158 ) }
    dend_27 { pt3dadd( 350.828, 468.92, 34.9821, 0.6292 ) }
    dend_27 { pt3dadd( 350.143, 468.01, 35.1299, 0.6796 ) }
    dend_27 { pt3dadd( 349.652, 466.989, 35.2817, 0.6508 ) }
    dend_27 { pt3dadd( 349.349, 465.887, 35.432, 0.5022 ) }
    dend_27 { pt3dadd( 348.971, 464.816, 35.5771, 0.4598 ) }
    dend_27 { pt3dadd( 348.587, 463.764, 35.7168, 0.3946 ) }
    dend_27 { pt3dadd( 348.528, 462.623, 35.8585, 0.4376 ) }
    dend_27 { pt3dadd( 348.467, 461.486, 36.0105, 0.4078 ) }
    dend_27 { pt3dadd( 348.184, 460.395, 36.1726, 0.4286 ) }
    dend_27 { pt3dadd( 347.571, 459.453, 36.3392, 0.5536 ) }
    dend_27 { pt3dadd( 346.848, 458.579, 36.5014, 0.5952 ) }
    dend_27 { pt3dadd( 346.396, 457.55, 36.6428, 0.4516 ) }
    dend_27 { pt3dadd( 345.989, 456.495, 36.752, 0.3396 ) }
    dend_27 { pt3dadd( 345.57, 455.441, 36.8236, 0.3002 ) }
    dend_27 { pt3dadd( 345.218, 454.356, 36.8589, 0.3244 ) }
    dend_27 { pt3dadd( 344.837, 453.278, 36.8614, 0.3564 ) }
    dend_27 { pt3dadd( 344.651, 452.16, 36.8385, 0.4776 ) }
    dend_27 { pt3dadd( 344.556, 451.022, 36.7956, 0.403 ) }
    dend_27 { pt3dadd( 344.329, 449.903, 36.7352, 0.3432 ) }
    dend_27 { pt3dadd( 344.029, 448.8, 36.6598, 0.3088 ) }
    dend_27 { pt3dadd( 343.684, 447.712, 36.5778, 0.3326 ) }
    dend_27 { pt3dadd( 343.207, 446.677, 36.4994, 0.4088 ) }
    dend_27 { pt3dadd( 342.721, 445.644, 36.4314, 0.3942 ) }
    dend_27 { pt3dadd( 342.582, 444.527, 36.379, 0.4386 ) }
    dend_27 { pt3dadd( 342.582, 443.384, 36.3448, 0.4018 ) }
    dend_27 { pt3dadd( 342.582, 442.24, 36.3272, 0.4534 ) }
    dend_27 { pt3dadd( 342.582, 441.095, 36.3224, 0.4246 ) }
    dend_27 { pt3dadd( 342.582, 439.952, 36.3266, 0.5194 ) }
    dend_27 { pt3dadd( 342.485, 438.813, 36.3378, 0.4342 ) }
    dend_27 { pt3dadd( 342.343, 437.678, 36.3546, 0.3974 ) }
    dend_27 { pt3dadd( 342.201, 436.543, 36.377, 0.4284 ) }
    dend_27 { pt3dadd( 342.133, 435.402, 36.4062, 0.4608 ) }
    dend_27 { pt3dadd( 342.125, 434.258, 36.4434, 0.412 ) }
    dend_27 { pt3dadd( 341.928, 433.134, 36.4916, 0.3946 ) }
    dend_27 { pt3dadd( 340.951, 432.588, 36.5509, 0.4652 ) }
    dend_27 { pt3dadd( 339.928, 432.076, 36.6226, 0.555 ) }
    dend_27 { pt3dadd( 338.932, 431.516, 36.715, 0.4626 ) }
    dend_27 { pt3dadd( 337.946, 430.94, 36.8278, 0.4038 ) }
    dend_27 { pt3dadd( 337.051, 430.232, 36.9524, 0.435 ) }
    dend_27 { pt3dadd( 336.174, 429.501, 37.079, 0.5 ) }
    dend_27 { pt3dadd( 335.249, 428.828, 37.1955, 0.356 ) }
    dend_27 { pt3dadd( 334.339, 428.139, 37.4175, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 356.422, 480.799, 33.9007, 0.2822 ) }
    dend_26 { pt3dadd( 355.615, 480.652, 32.4234, 0.4576 ) }
    dend_26 { pt3dadd( 354.735, 480.08, 31.0411, 0.4832 ) }
    dend_26 { pt3dadd( 354.067, 479.253, 30.4646, 0.5706 ) }
    dend_26 { pt3dadd( 353.506, 478.388, 29.783, 0.579 ) }
    dend_26 { pt3dadd( 352.938, 477.639, 28.9892, 0.4238 ) }
    dend_26 { pt3dadd( 352.14, 476.826, 28.3696, 0.2796 ) }
    dend_26 { pt3dadd( 351.48, 475.904, 27.3949, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 99/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 358.711, 518.384, 38.8234, 0.8598 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( 358.194, 517.531, 37.562, 0.6864 ) }
    dend_12 { pt3dadd( 357.41, 516.699, 37.5416, 0.8434 ) }
    dend_12 { pt3dadd( 356.343, 516.286, 37.5337, 0.8624 ) }
    dend_12 { pt3dadd( 355.235, 516.003, 37.5253, 0.8848 ) }
    dend_12 { pt3dadd( 354.184, 515.553, 37.5161, 0.9886 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 5/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 358.711, 518.384, 38.8234, 0.8598 ) }
    dend_11 { pt3dadd( 359.164, 519.276, 38.6092, 0.774 ) }
    dend_11 { pt3dadd( 358.596, 520.236, 38.5056, 0.723 ) }
    dend_11 { pt3dadd( 357.684, 520.925, 38.4202, 0.678 ) }
    dend_11 { pt3dadd( 357.086, 521.745, 38.3636, 0.5834 ) }
    dend_11 { pt3dadd( 356.823, 522.738, 38.3432, 0.462 ) }
    dend_11 { pt3dadd( 355.973, 523.501, 38.3522, 0.4336 ) }
    dend_11 { pt3dadd( 355.587, 524.519, 38.386, 0.5688 ) }
    dend_11 { pt3dadd( 355.538, 525.66, 38.4401, 0.5942 ) }
    dend_11 { pt3dadd( 355.452, 526.798, 38.5095, 0.5904 ) }
    dend_11 { pt3dadd( 355.233, 527.919, 38.5874, 0.6032 ) }
    dend_11 { pt3dadd( 355.008, 529.039, 38.6786, 0.5294 ) }
    dend_11 { pt3dadd( 354.533, 530.072, 38.7719, 0.407 ) }
    dend_11 { pt3dadd( 354.402, 531.196, 38.8326, 0.341 ) }
    dend_11 { pt3dadd( 354.233, 532.313, 38.8951, 0.3524 ) }
    dend_11 { pt3dadd( 353.578, 533.247, 38.9805, 0.4102 ) }
    dend_11 { pt3dadd( 353.023, 534.242, 39.0594, 0.5668 ) }
    dend_11 { pt3dadd( 352.569, 535.292, 39.1342, 0.6196 ) }
    dend_11 { pt3dadd( 351.945, 536.22, 39.2165, 0.497 ) }
    dend_11 { pt3dadd( 351.112, 537.0, 39.3173, 0.4252 ) }
    dend_11 { pt3dadd( 350.548, 537.953, 39.4388, 0.4508 ) }
    dend_11 { pt3dadd( 350.183, 539.033, 39.5713, 0.6436 ) }
    dend_11 { pt3dadd( 349.49, 539.897, 39.711, 0.7532 ) }
    dend_11 { pt3dadd( 348.758, 540.753, 39.8577, 0.7876 ) }
    dend_11 { pt3dadd( 348.129, 541.708, 40.0123, 0.7562 ) }
    dend_11 { pt3dadd( 347.373, 542.557, 40.1747, 0.7016 ) }
    dend_11 { pt3dadd( 346.746, 543.49, 40.3612, 0.5816 ) }
    dend_11 { pt3dadd( 345.963, 544.281, 40.5843, 0.451 ) }
    dend_11 { pt3dadd( 344.891, 544.287, 40.8363, 0.4494 ) }
    dend_11 { pt3dadd( 343.785, 544.474, 41.1043, 0.4232 ) }
    dend_11 { pt3dadd( 343.024, 545.274, 41.3846, 0.4858 ) }
    dend_11 { pt3dadd( 342.296, 546.146, 41.673, 0.5226 ) }
    dend_11 { pt3dadd( 341.55, 547.003, 41.9605, 0.5162 ) }
    dend_11 { pt3dadd( 341.312, 548.113, 42.2274, 0.6386 ) }
    dend_11 { pt3dadd( 340.554, 548.966, 42.4735, 0.6712 ) }
    dend_11 { pt3dadd( 340.009, 549.965, 42.7134, 0.7592 ) }
    dend_11 { pt3dadd( 339.635, 551.04, 42.9447, 0.7902 ) }
    dend_11 { pt3dadd( 338.897, 551.903, 43.1771, 0.8014 ) }
    dend_11 { pt3dadd( 338.349, 552.901, 43.4076, 0.8176 ) }
    dend_11 { pt3dadd( 337.918, 553.955, 43.6316, 0.6434 ) }
    dend_11 { pt3dadd( 337.51, 555.016, 43.8374, 0.6224 ) }
    dend_11 { pt3dadd( 336.883, 555.97, 44.0107, 0.72 ) }
    dend_11 { pt3dadd( 336.134, 556.823, 44.144, 0.6948 ) }
    dend_11 { pt3dadd( 335.391, 557.492, 44.2408, 0.5048 ) }
    dend_11 { pt3dadd( 335.395, 558.596, 44.3094, 0.393 ) }
    dend_11 { pt3dadd( 334.709, 559.447, 44.3369, 0.3892 ) }
    dend_11 { pt3dadd( 333.804, 560.145, 44.333, 0.5402 ) }
    dend_11 { pt3dadd( 333.116, 561.041, 44.3162, 0.5096 ) }
    dend_11 { pt3dadd( 332.503, 562.006, 44.3047, 0.5882 ) }
    dend_11 { pt3dadd( 331.615, 562.712, 44.3134, 0.534 ) }
    dend_11 { pt3dadd( 330.581, 563.195, 44.3598, 0.4882 ) }
    dend_11 { pt3dadd( 330.006, 564.151, 44.4517, 0.368 ) }
    dend_11 { pt3dadd( 329.217, 564.974, 44.5838, 0.3158 ) }
    dend_11 { pt3dadd( 328.359, 565.706, 44.7804, 0.3038 ) }
    dend_11 { pt3dadd( 327.348, 566.064, 45.0674, 0.3294 ) }
    dend_11 { pt3dadd( 326.58, 566.891, 45.3872, 0.3732 ) }
    dend_11 { pt3dadd( 325.932, 567.826, 45.7058, 0.4722 ) }
    dend_11 { pt3dadd( 325.322, 568.718, 46.0202, 0.569 ) }
    dend_11 { pt3dadd( 324.7, 569.657, 46.3156, 0.484 ) }
    dend_11 { pt3dadd( 324.238, 570.694, 46.6024, 0.4666 ) }
    dend_11 { pt3dadd( 323.951, 571.784, 46.8728, 0.438 ) }
    dend_11 { pt3dadd( 323.783, 572.906, 47.1299, 0.3688 ) }
    dend_11 { pt3dadd( 323.57, 574.024, 47.3525, 0.318 ) }
    dend_11 { pt3dadd( 323.337, 575.143, 47.5224, 0.3076 ) }
    dend_11 { pt3dadd( 323.104, 576.263, 47.6305, 0.3374 ) }
    dend_11 { pt3dadd( 322.871, 577.383, 47.6778, 0.3818 ) }
    dend_11 { pt3dadd( 322.637, 578.501, 47.6734, 0.5192 ) }
    dend_11 { pt3dadd( 322.403, 579.62, 47.6305, 0.5054 ) }
    dend_11 { pt3dadd( 322.169, 580.738, 47.5675, 0.4106 ) }
    dend_11 { pt3dadd( 321.935, 581.857, 47.502, 0.343 ) }
    dend_11 { pt3dadd( 321.725, 582.98, 47.4541, 0.3796 ) }
    dend_11 { pt3dadd( 321.537, 584.108, 47.4426, 0.3454 ) }
    dend_11 { pt3dadd( 321.352, 585.236, 47.4757, 0.3212 ) }
    dend_11 { pt3dadd( 321.168, 586.363, 47.5513, 0.3148 ) }
    dend_11 { pt3dadd( 321.002, 587.492, 47.6599, 0.345 ) }
    dend_11 { pt3dadd( 320.942, 588.631, 47.7823, 0.4256 ) }
    dend_11 { pt3dadd( 320.905, 589.774, 47.9002, 0.457 ) }
    dend_11 { pt3dadd( 320.868, 590.917, 48.0026, 0.399 ) }
    dend_11 { pt3dadd( 320.83, 592.06, 48.0852, 0.3992 ) }
    dend_11 { pt3dadd( 320.793, 593.204, 48.1499, 0.3346 ) }
    dend_11 { pt3dadd( 320.637, 594.336, 48.2023, 0.3012 ) }
    dend_11 { pt3dadd( 320.41, 595.457, 48.251, 0.2764 ) }
    dend_11 { pt3dadd( 320.174, 596.577, 48.3031, 0.278 ) }
    dend_11 { pt3dadd( 319.937, 597.695, 48.3633, 0.2812 ) }
    dend_11 { pt3dadd( 319.7, 598.814, 48.4344, 0.2866 ) }
    dend_11 { pt3dadd( 319.533, 599.945, 48.5229, 0.2972 ) }
    dend_11 { pt3dadd( 319.382, 601.076, 48.6298, 0.3162 ) }
    dend_11 { pt3dadd( 319.231, 602.207, 48.7519, 0.3534 ) }
    dend_11 { pt3dadd( 319.08, 603.339, 48.8818, 0.4122 ) }
    dend_11 { pt3dadd( 319.095, 604.479, 49.002, 0.5706 ) }
    dend_11 { pt3dadd( 319.157, 605.621, 49.1, 0.6262 ) }
    dend_11 { pt3dadd( 319.221, 606.764, 49.1728, 0.5116 ) }
    dend_11 { pt3dadd( 319.284, 607.906, 49.2248, 0.4412 ) }
    dend_11 { pt3dadd( 319.359, 609.047, 49.268, 0.535 ) }
    dend_11 { pt3dadd( 319.614, 610.157, 49.3436, 0.5358 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_11 { pt3dadd( 319.143, 611.19, 49.4617, 0.4604 ) }
    dend_11 { pt3dadd( 318.65, 612.214, 49.6082, 0.4674 ) }
    dend_11 { pt3dadd( 318.395, 613.321, 49.7577, 0.4516 ) }
    dend_11 { pt3dadd( 318.552, 614.44, 49.8876, 0.5642 ) }
    dend_11 { pt3dadd( 319.126, 615.429, 49.9766, 0.5424 ) }
    dend_11 { pt3dadd( 319.638, 616.45, 50.0111, 0.4752 ) }
    dend_11 { pt3dadd( 319.978, 617.54, 49.9906, 0.483 ) }
    dend_11 { pt3dadd( 320.169, 618.667, 49.9209, 0.5408 ) }
    dend_11 { pt3dadd( 320.36, 619.795, 49.8078, 0.4356 ) }
    dend_11 { pt3dadd( 320.551, 620.921, 49.6558, 0.358 ) }
    dend_11 { pt3dadd( 320.757, 622.043, 49.467, 0.3294 ) }
    dend_11 { pt3dadd( 321.056, 623.143, 49.236, 0.403 ) }
    dend_11 { pt3dadd( 321.391, 624.227, 48.9614, 0.3834 ) }
    dend_11 { pt3dadd( 321.727, 625.309, 48.648, 0.4174 ) }
    dend_11 { pt3dadd( 322.086, 626.379, 48.3067, 0.3682 ) }
    dend_11 { pt3dadd( 322.563, 627.399, 47.9455, 0.3642 ) }
    dend_11 { pt3dadd( 323.06, 628.403, 47.572, 0.3906 ) }
    dend_11 { pt3dadd( 323.718, 629.321, 47.2363, 0.5042 ) }
    dend_11 { pt3dadd( 324.467, 630.175, 46.9524, 0.6292 ) }
    dend_11 { pt3dadd( 324.633, 631.248, 46.7208, 0.591 ) }
    dend_11 { pt3dadd( 324.616, 632.391, 46.5679, 0.6874 ) }
    dend_11 { pt3dadd( 324.597, 633.535, 46.4909, 0.7402 ) }
    dend_11 { pt3dadd( 324.579, 634.677, 46.4772, 0.7626 ) }
    dend_11 { pt3dadd( 324.562, 635.821, 46.5091, 0.7118 ) }
    dend_11 { pt3dadd( 324.445, 636.955, 46.5931, 0.6102 ) }
    dend_11 { pt3dadd( 323.879, 637.907, 47.04, 0.4576 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 26/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 378.201, 526.581, 39.4478, 0.7022 ) }
    dend_5 { pt3dadd( 378.642, 527.559, 39.6091, 0.786 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 28/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 378.201, 526.581, 39.4478, 0.7022 ) }
    dend_4 { pt3dadd( 378.6, 526.431, 35.6034, 0.295 ) }
    dend_4 { pt3dadd( 378.931, 526.172, 34.3529, 0.3134 ) }
    dend_4 { pt3dadd( 379.649, 525.959, 33.0369, 0.3416 ) }
    dend_4 { pt3dadd( 380.66, 526.128, 31.8951, 0.4238 ) }
    dend_4 { pt3dadd( 381.566, 526.786, 30.982, 0.429 ) }
    dend_4 { pt3dadd( 382.547, 527.052, 30.1241, 0.4682 ) }
    dend_4 { pt3dadd( 383.402, 527.57, 29.4157, 0.6274 ) }
    dend_4 { pt3dadd( 384.049, 528.509, 28.9033, 0.7288 ) }
    dend_4 { pt3dadd( 384.583, 529.505, 28.5023, 0.7146 ) }
    dend_4 { pt3dadd( 385.044, 530.546, 28.1974, 0.7542 ) }
    dend_4 { pt3dadd( 386.083, 530.706, 28.0025, 0.7372 ) }
    dend_4 { pt3dadd( 387.227, 530.707, 27.844, 0.9152 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 41/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 380.555, 517.891, 36.3616, 0.6942 ) }
    dend_2 { pt3dadd( 380.812, 517.652, 36.7226, 0.4576 ) }
    dend_2 { pt3dadd( 381.673, 517.009, 36.188, 0.6086 ) }
    dend_2 { pt3dadd( 382.699, 516.549, 35.9478, 0.8646 ) }
    dend_2 { pt3dadd( 383.478, 516.223, 35.5258, 0.8244 ) }
    dend_2 { pt3dadd( 384.367, 515.684, 34.9549, 0.9606 ) }
    dend_2 { pt3dadd( 385.213, 515.096, 34.2849, 0.648 ) }
    dend_2 { pt3dadd( 386.294, 514.736, 33.7361, 0.5238 ) }
    dend_2 { pt3dadd( 387.413, 514.545, 33.3029, 0.3716 ) }
    dend_2 { pt3dadd( 388.506, 514.715, 32.9582, 0.3954 ) }
    dend_2 { pt3dadd( 389.534, 515.212, 32.6729, 0.3276 ) }
    dend_2 { pt3dadd( 390.563, 515.683, 32.4237, 0.288 ) }
    dend_2 { pt3dadd( 391.625, 515.335, 32.132, 0.2542 ) }
    dend_2 { pt3dadd( 392.688, 514.989, 31.7965, 0.2288 ) }
    dend_2 { pt3dadd( 393.751, 514.641, 30.9879, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 56/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 380.555, 517.891, 36.3616, 0.6942 ) }
    dend_1 { pt3dadd( 381.739, 518.701, 35.6544, 0.5238 ) }
    dend_1 { pt3dadd( 382.426, 519.606, 35.3097, 0.5006 ) }
    dend_1 { pt3dadd( 383.17, 520.435, 34.9538, 0.466 ) }
    dend_1 { pt3dadd( 384.179, 520.886, 34.559, 0.5906 ) }
    dend_1 { pt3dadd( 385.219, 521.282, 34.1236, 0.5928 ) }
    dend_1 { pt3dadd( 386.138, 521.92, 33.6739, 0.5624 ) }
    dend_1 { pt3dadd( 387.044, 522.593, 33.2265, 0.6734 ) }
    dend_1 { pt3dadd( 388.065, 523.039, 32.7841, 0.7536 ) }
    dend_1 { pt3dadd( 389.142, 523.37, 32.3509, 0.8256 ) }
    dend_1 { pt3dadd( 390.203, 523.758, 31.9452, 0.6452 ) }
    dend_1 { pt3dadd( 391.32, 523.862, 31.5826, 0.69 ) }
    dend_1 { pt3dadd( 392.456, 523.899, 31.2553, 0.5334 ) }
    dend_1 { pt3dadd( 393.519, 524.27, 30.9557, 0.491 ) }
    dend_1 { pt3dadd( 394.612, 524.569, 30.6774, 0.5826 ) }
    dend_1 { pt3dadd( 395.657, 525.01, 30.4248, 0.6118 ) }
    dend_1 { pt3dadd( 396.601, 525.649, 30.207, 0.6612 ) }
    dend_1 { pt3dadd( 397.708, 525.858, 30.0328, 0.5488 ) }
    dend_1 { pt3dadd( 398.84, 525.727, 29.8942, 0.644 ) }
    dend_1 { pt3dadd( 399.95, 525.462, 29.7777, 0.4914 ) }
    dend_1 { pt3dadd( 401.089, 525.367, 29.6937, 0.4322 ) }
    dend_1 { pt3dadd( 402.216, 525.168, 29.647, 0.3814 ) }
    dend_1 { pt3dadd( 403.185, 525.754, 29.7237, 0.6864 ) }
    // Section: apic_20, id: apic_20, parent: apic_0 (entry count 79/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 373.158, 503.655, 41.7936, 1.1134 ) }
    apic_20 { pt3dadd( 373.823, 502.369, 43.7441, 0.7022 ) }
    apic_20 { pt3dadd( 373.641, 501.365, 44.4105, 0.782 ) }
    apic_20 { pt3dadd( 372.884, 500.588, 45.1178, 0.5408 ) }
    apic_20 { pt3dadd( 371.832, 500.222, 45.8296, 0.3828 ) }
    apic_20 { pt3dadd( 370.77, 499.907, 46.5144, 0.2866 ) }
    apic_20 { pt3dadd( 369.859, 499.251, 47.1663, 0.2972 ) }
    apic_20 { pt3dadd( 368.863, 498.954, 47.7991, 0.3164 ) }
    apic_20 { pt3dadd( 367.826, 499.266, 48.4414, 0.3528 ) }
    apic_20 { pt3dadd( 367.198, 500.086, 49.1075, 0.4162 ) }
    apic_20 { pt3dadd( 366.975, 501.165, 49.7714, 0.5542 ) }
    apic_20 { pt3dadd( 366.772, 502.264, 50.4179, 0.71 ) }
    apic_20 { pt3dadd( 366.592, 503.374, 51.0398, 0.798 ) }
    apic_20 { pt3dadd( 366.483, 504.489, 51.6471, 0.7932 ) }
    apic_20 { pt3dadd( 366.239, 505.576, 52.2486, 0.9124 ) }
    apic_20 { pt3dadd( 365.908, 506.646, 52.8503, 0.9696 ) }
    apic_20 { pt3dadd( 365.955, 507.711, 53.4839, 0.9564 ) }
    apic_20 { pt3dadd( 366.281, 508.757, 54.145, 0.8248 ) }
    apic_20 { pt3dadd( 366.737, 509.762, 54.8142, 0.643 ) }
    apic_20 { pt3dadd( 366.966, 510.846, 55.4649, 0.6894 ) }
    apic_20 { pt3dadd( 367.075, 511.959, 56.0885, 0.7436 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_20 { pt3dadd( 367.521, 512.974, 56.6843, 0.7696 ) }
    apic_20 { pt3dadd( 367.868, 514.044, 57.2474, 0.7218 ) }
    apic_20 { pt3dadd( 367.987, 515.166, 57.7766, 0.6436 ) }
    apic_20 { pt3dadd( 368.471, 516.165, 58.3022, 0.4474 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 4/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 373.158, 503.655, 41.7936, 1.1134 ) }
    apic_1 { pt3dadd( 374.006, 502.595, 42.5692, 1.2026 ) }
    apic_1 { pt3dadd( 374.225, 501.512, 42.9738, 1.3364 ) }
    apic_1 { pt3dadd( 374.063, 500.395, 43.3199, 1.3236 ) }
    apic_1 { pt3dadd( 373.873, 499.272, 43.5943, 1.193 ) }
    apic_1 { pt3dadd( 373.703, 498.142, 43.8049, 1.2406 ) }
    apic_1 { pt3dadd( 373.486, 497.023, 43.986, 1.2954 ) }
    apic_1 { pt3dadd( 373.434, 495.892, 44.1504, 1.3288 ) }
    apic_1 { pt3dadd( 373.601, 494.767, 44.3027, 1.266 ) }
    apic_1 { pt3dadd( 373.858, 493.654, 44.4265, 1.2986 ) }
    apic_1 { pt3dadd( 374.183, 492.558, 44.5096, 1.3202 ) }
    apic_1 { pt3dadd( 374.603, 491.496, 44.5553, 1.3216 ) }
    apic_1 { pt3dadd( 375.215, 490.536, 44.5707, 1.2818 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 367.672, 521.824, 47.9634, 0.454 ) }
    dend_44 { pt3dadd( 368.001, 522.032, 48.3073, 0.3978 ) }
    dend_44 { pt3dadd( 367.899, 523.156, 48.6665, 0.3748 ) }
    dend_44 { pt3dadd( 367.781, 524.271, 49.0238, 0.3974 ) }
    dend_44 { pt3dadd( 367.476, 525.361, 49.3444, 0.5788 ) }
    dend_44 { pt3dadd( 367.453, 526.502, 49.6087, 0.4668 ) }
    dend_44 { pt3dadd( 367.592, 527.633, 49.8431, 0.377 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 24/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 367.672, 521.824, 47.9634, 0.454 ) }
    dend_43 { pt3dadd( 368.304, 522.115, 49.5614, 0.6684 ) }
    dend_43 { pt3dadd( 369.408, 522.238, 50.0578, 0.67 ) }
    dend_43 { pt3dadd( 370.182, 523.065, 50.4686, 0.5724 ) }
    dend_43 { pt3dadd( 370.579, 524.128, 50.794, 0.6508 ) }
    dend_43 { pt3dadd( 370.629, 525.269, 51.0362, 0.6832 ) }
    dend_43 { pt3dadd( 370.679, 526.362, 51.1868, 0.6048 ) }
    dend_43 { pt3dadd( 371.435, 527.217, 51.2576, 0.6732 ) }
    dend_43 { pt3dadd( 372.135, 528.112, 51.2971, 0.677 ) }
    dend_43 { pt3dadd( 372.929, 528.919, 51.2949, 0.8244 ) }
    dend_43 { pt3dadd( 373.62, 529.824, 51.2448, 0.645 ) }
    dend_43 { pt3dadd( 374.424, 530.624, 51.1764, 0.4518 ) }
    dend_43 { pt3dadd( 375.295, 531.364, 51.1263, 0.3302 ) }
    dend_43 { pt3dadd( 376.165, 532.105, 51.1221, 0.3302 ) }
    dend_43 { pt3dadd( 377.036, 532.847, 51.1862, 0.3802 ) }
    dend_43 { pt3dadd( 377.931, 533.554, 51.3335, 0.4572 ) }
    dend_43 { pt3dadd( 378.929, 534.076, 51.574, 0.6794 ) }
    dend_43 { pt3dadd( 379.917, 534.624, 51.8958, 0.7034 ) }
    dend_43 { pt3dadd( 380.969, 535.013, 52.2777, 0.5708 ) }
    dend_43 { pt3dadd( 382.074, 535.271, 52.7058, 0.499 ) }
    dend_43 { pt3dadd( 383.169, 535.128, 53.1754, 0.6674 ) }
    dend_43 { pt3dadd( 384.173, 534.621, 53.6889, 0.658 ) }
    dend_43 { pt3dadd( 385.236, 534.306, 54.2606, 0.6004 ) }
    dend_43 { pt3dadd( 386.281, 534.062, 54.9556, 0.6884 ) }
    dend_43 { pt3dadd( 387.053, 534.768, 55.7572, 0.8202 ) }
    dend_43 { pt3dadd( 388.006, 535.224, 56.6552, 0.7622 ) }
    dend_43 { pt3dadd( 389.032, 535.148, 57.6316, 0.748 ) }
    dend_43 { pt3dadd( 389.848, 534.553, 58.6614, 0.7248 ) }
    dend_43 { pt3dadd( 390.879, 534.404, 59.6954, 0.6672 ) }
    dend_43 { pt3dadd( 391.946, 534.351, 60.6836, 0.6322 ) }
    dend_43 { pt3dadd( 392.997, 534.423, 61.6162, 0.6764 ) }
    dend_43 { pt3dadd( 393.975, 534.885, 62.4764, 0.6866 ) }
    dend_43 { pt3dadd( 394.984, 535.313, 63.2405, 0.5948 ) }
    dend_43 { pt3dadd( 396.084, 535.512, 63.903, 0.5062 ) }
    dend_43 { pt3dadd( 397.188, 535.701, 64.4686, 0.4022 ) }
    dend_43 { pt3dadd( 398.215, 536.176, 64.9384, 0.3746 ) }
    dend_43 { pt3dadd( 399.191, 536.765, 65.3212, 0.438 ) }
    dend_43 { pt3dadd( 400.235, 537.21, 65.6608, 0.456 ) }
    dend_43 { pt3dadd( 401.346, 537.361, 66.0136, 0.5136 ) }
    dend_43 { pt3dadd( 402.432, 537.647, 66.379, 0.7328 ) }
    dend_43 { pt3dadd( 403.457, 538.128, 66.7621, 0.8234 ) }
    dend_43 { pt3dadd( 404.518, 538.495, 67.1768, 0.6932 ) }
    dend_43 { pt3dadd( 405.605, 538.644, 67.6472, 0.527 ) }
    dend_43 { pt3dadd( 406.717, 538.711, 68.1069, 0.5396 ) }
    dend_43 { pt3dadd( 407.79, 539.069, 68.546, 0.6066 ) }
    dend_43 { pt3dadd( 408.818, 539.481, 68.9794, 0.7474 ) }
    dend_43 { pt3dadd( 409.743, 540.138, 69.4028, 0.699 ) }
    dend_43 { pt3dadd( 410.769, 540.593, 69.8191, 0.5128 ) }
    dend_43 { pt3dadd( 411.522, 541.279, 70.2878, 0.4064 ) }
    dend_43 { pt3dadd( 412.225, 541.972, 70.8355, 0.421 ) }
    dend_43 { pt3dadd( 413.203, 542.534, 71.3479, 0.5642 ) }
    dend_43 { pt3dadd( 413.839, 543.435, 71.8077, 0.7236 ) }
    dend_43 { pt3dadd( 414.421, 544.414, 72.2058, 0.848 ) }
    dend_43 { pt3dadd( 415.181, 545.253, 72.5606, 0.7668 ) }
    dend_43 { pt3dadd( 416.101, 545.924, 72.8602, 0.7562 ) }
    dend_43 { pt3dadd( 416.991, 546.64, 73.1024, 0.7414 ) }
    dend_43 { pt3dadd( 417.882, 547.35, 73.3186, 0.6926 ) }
    dend_43 { pt3dadd( 418.909, 547.802, 73.5199, 0.704 ) }
    dend_43 { pt3dadd( 420.039, 547.823, 73.7358, 0.69 ) }
    dend_43 { pt3dadd( 421.058, 548.085, 73.9752, 0.6052 ) }
    dend_43 { pt3dadd( 421.928, 548.826, 74.2207, 0.5046 ) }
    dend_43 { pt3dadd( 423.049, 548.996, 74.4836, 0.5006 ) }
    dend_43 { pt3dadd( 424.136, 548.761, 74.8314, 0.7506 ) }
    dend_43 { pt3dadd( 425.236, 548.724, 75.2444, 0.6516 ) }
    dend_43 { pt3dadd( 426.322, 548.976, 75.6734, 0.6834 ) }
    dend_43 { pt3dadd( 427.437, 549.096, 76.0771, 0.612 ) }
    dend_43 { pt3dadd( 428.57, 549.138, 76.4599, 0.6542 ) }
    dend_43 { pt3dadd( 429.665, 549.433, 76.7942, 0.5718 ) }
    dend_43 { pt3dadd( 430.729, 549.111, 77.1016, 0.511 ) }
    dend_43 { pt3dadd( 431.866, 549.096, 77.3682, 0.4098 ) }
    dend_43 { pt3dadd( 433.001, 549.129, 77.5978, 0.3954 ) }
    dend_43 { pt3dadd( 434.087, 549.474, 77.7837, 0.4424 ) }
    dend_43 { pt3dadd( 435.124, 549.948, 77.9094, 0.6282 ) }
    dend_43 { pt3dadd( 436.134, 550.485, 77.9822, 0.7244 ) }
    dend_43 { pt3dadd( 437.153, 551.003, 78.0212, 0.7366 ) }
    dend_43 { pt3dadd( 438.152, 551.56, 78.0464, 0.6484 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_43 { pt3dadd( 439.117, 552.172, 78.0665, 0.565 ) }
    dend_43 { pt3dadd( 440.088, 552.78, 78.0856, 0.7086 ) }
    dend_43 { pt3dadd( 441.074, 553.359, 78.1052, 0.6702 ) }
    dend_43 { pt3dadd( 442.012, 554.01, 78.1228, 0.707 ) }
    dend_43 { pt3dadd( 442.864, 554.77, 78.1371, 0.4784 ) }
    dend_43 { pt3dadd( 443.681, 555.57, 78.1472, 0.3516 ) }
    dend_43 { pt3dadd( 444.491, 556.376, 78.1542, 0.2762 ) }
    dend_43 { pt3dadd( 445.174, 557.287, 78.1729, 0.2776 ) }
    dend_43 { pt3dadd( 445.831, 558.223, 78.2261, 0.28 ) }
    dend_43 { pt3dadd( 446.127, 559.297, 78.3314, 0.285 ) }
    dend_43 { pt3dadd( 446.698, 560.233, 78.5182, 0.2936 ) }
    dend_43 { pt3dadd( 447.445, 561.082, 78.7968, 0.311 ) }
    dend_43 { pt3dadd( 448.187, 561.926, 79.1613, 0.337 ) }
    dend_43 { pt3dadd( 448.923, 562.768, 79.5917, 0.4152 ) }
    dend_43 { pt3dadd( 449.515, 563.72, 80.0643, 0.4146 ) }
    dend_43 { pt3dadd( 450.084, 564.691, 80.5409, 0.435 ) }
    dend_43 { pt3dadd( 450.652, 565.667, 80.9903, 0.596 ) }
    dend_43 { pt3dadd( 451.254, 566.627, 81.3932, 0.5254 ) }
    dend_43 { pt3dadd( 452.08, 567.406, 81.739, 0.356 ) }
    dend_43 { pt3dadd( 452.896, 568.172, 82.4544, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 345.751, 528.634, 47.35, 0.6786 ) }
    dend_39 { pt3dadd( 344.662, 528.589, 47.4107, 0.7326 ) }
    dend_39 { pt3dadd( 343.555, 528.305, 47.4936, 0.7068 ) }
    dend_39 { pt3dadd( 342.437, 528.065, 47.5952, 0.5848 ) }
    dend_39 { pt3dadd( 341.379, 527.632, 47.7162, 0.4878 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 25/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 345.751, 528.634, 47.35, 0.6786 ) }
    dend_36 { pt3dadd( 345.028, 529.318, 47.0092, 0.4576 ) }
    dend_36 { pt3dadd( 344.373, 530.249, 46.9748, 0.429 ) }
    dend_36 { pt3dadd( 343.499, 530.951, 46.9616, 0.4556 ) }
    dend_36 { pt3dadd( 342.582, 531.635, 46.9412, 0.4348 ) }
    dend_36 { pt3dadd( 341.898, 532.538, 46.9028, 0.508 ) }
    dend_36 { pt3dadd( 340.996, 533.228, 46.8496, 0.5582 ) }
    dend_36 { pt3dadd( 340.098, 533.936, 46.786, 0.6092 ) }
    dend_36 { pt3dadd( 339.254, 534.709, 46.716, 0.6796 ) }
    dend_36 { pt3dadd( 338.555, 535.612, 46.6267, 0.6988 ) }
    dend_36 { pt3dadd( 337.576, 536.193, 46.5186, 0.5872 ) }
    dend_36 { pt3dadd( 336.444, 536.347, 46.3971, 0.6384 ) }
    dend_36 { pt3dadd( 335.396, 536.799, 46.263, 0.6228 ) }
    dend_36 { pt3dadd( 334.549, 537.565, 46.1076, 0.674 ) }
    dend_36 { pt3dadd( 333.8, 538.403, 45.9404, 0.6092 ) }
    dend_36 { pt3dadd( 333.609, 539.525, 45.7626, 0.5774 ) }
    dend_36 { pt3dadd( 333.23, 540.597, 45.5832, 0.5484 ) }
    dend_36 { pt3dadd( 332.627, 541.566, 45.416, 0.5774 ) }
    dend_36 { pt3dadd( 331.997, 542.516, 45.2732, 0.4574 ) }
    dend_36 { pt3dadd( 331.651, 543.589, 45.1609, 0.393 ) }
    dend_36 { pt3dadd( 331.702, 544.731, 45.0699, 0.42 ) }
    dend_36 { pt3dadd( 331.901, 545.852, 44.9904, 0.4462 ) }
    dend_36 { pt3dadd( 332.155, 546.954, 44.9039, 0.384 ) }
    dend_36 { pt3dadd( 331.992, 548.053, 44.8101, 0.3464 ) }
    dend_36 { pt3dadd( 331.762, 549.138, 44.7096, 0.3564 ) }
    dend_36 { pt3dadd( 331.953, 550.255, 44.6113, 0.4462 ) }
    dend_36 { pt3dadd( 332.205, 551.367, 44.5214, 0.4964 ) }
    dend_36 { pt3dadd( 332.171, 552.492, 44.4508, 0.4678 ) }
    dend_36 { pt3dadd( 331.83, 553.578, 44.4136, 0.5472 ) }
    dend_36 { pt3dadd( 331.448, 554.655, 44.4184, 0.5102 ) }
    dend_36 { pt3dadd( 331.051, 555.727, 44.4679, 0.4196 ) }
    dend_36 { pt3dadd( 330.509, 556.729, 44.571, 0.3592 ) }
    dend_36 { pt3dadd( 330.021, 557.754, 44.7465, 0.4114 ) }
    dend_36 { pt3dadd( 329.98, 558.86, 45.0075, 0.3984 ) }
    dend_36 { pt3dadd( 329.749, 559.971, 45.3334, 0.4474 ) }
    dend_36 { pt3dadd( 328.733, 560.436, 45.7198, 0.413 ) }
    dend_36 { pt3dadd( 327.699, 560.07, 46.1899, 0.4978 ) }
    dend_36 { pt3dadd( 326.755, 559.535, 46.7225, 0.3936 ) }
    dend_36 { pt3dadd( 325.778, 559.463, 47.339, 0.326 ) }
    dend_36 { pt3dadd( 324.717, 559.755, 47.917, 0.2758 ) }
    dend_36 { pt3dadd( 323.678, 559.388, 48.6934, 0.2782 ) }
    dend_36 { pt3dadd( 322.61, 559.8, 48.8354, 0.2814 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 67/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 379.635, 558.114, 62.0029, 0.3818 ) }
    dend_32 { pt3dadd( 380.025, 558.942, 62.4518, 0.333 ) }
    dend_32 { pt3dadd( 380.758, 559.795, 62.8919, 0.3792 ) }
    dend_32 { pt3dadd( 381.322, 560.764, 63.3349, 0.4848 ) }
    dend_32 { pt3dadd( 381.721, 561.82, 63.7764, 0.586 ) }
    dend_32 { pt3dadd( 382.024, 562.912, 64.2132, 0.546 ) }
    dend_32 { pt3dadd( 382.533, 563.931, 64.6422, 0.4322 ) }
    dend_32 { pt3dadd( 382.908, 565.003, 65.0748, 0.4134 ) }
    dend_32 { pt3dadd( 383.239, 566.067, 65.5536, 0.362 ) }
    dend_32 { pt3dadd( 383.273, 567.157, 66.0937, 0.347 ) }
    dend_32 { pt3dadd( 383.088, 568.257, 66.6646, 0.3872 ) }
    dend_32 { pt3dadd( 382.964, 569.362, 67.2602, 0.3602 ) }
    dend_32 { pt3dadd( 383.222, 570.417, 67.8678, 0.3434 ) }
    dend_32 { pt3dadd( 383.28, 571.508, 68.4569, 0.3808 ) }
    dend_32 { pt3dadd( 383.055, 572.61, 69.0323, 0.3474 ) }
    dend_32 { pt3dadd( 383.09, 573.717, 69.6058, 0.326 ) }
    dend_32 { pt3dadd( 383.087, 574.826, 70.2027, 0.3178 ) }
    dend_32 { pt3dadd( 382.854, 575.903, 70.8352, 0.3802 ) }
    dend_32 { pt3dadd( 383.523, 576.7, 71.505, 0.3464 ) }
    dend_32 { pt3dadd( 384.059, 577.65, 72.1994, 0.3242 ) }
    dend_32 { pt3dadd( 383.985, 578.737, 72.9086, 0.3142 ) }
    dend_32 { pt3dadd( 383.797, 579.832, 73.5874, 0.3734 ) }
    dend_32 { pt3dadd( 383.687, 580.865, 74.2697, 0.3338 ) }
    dend_32 { pt3dadd( 383.877, 581.948, 74.8947, 0.3 ) }
    dend_32 { pt3dadd( 383.698, 583.048, 75.4191, 0.2746 ) }
    dend_32 { pt3dadd( 383.386, 584.142, 75.8388, 0.2746 ) }
    dend_32 { pt3dadd( 383.084, 585.243, 76.1608, 0.2746 ) }
    dend_32 { pt3dadd( 382.826, 586.357, 76.4019, 0.2746 ) }
    dend_32 { pt3dadd( 382.353, 587.389, 76.5828, 0.2746 ) }
    dend_32 { pt3dadd( 381.392, 587.881, 76.7365, 0.2746 ) }
    dend_32 { pt3dadd( 380.385, 588.406, 76.8894, 0.2746 ) }
    dend_32 { pt3dadd( 379.567, 589.193, 77.0605, 0.2746 ) }
    dend_32 { pt3dadd( 378.801, 590.039, 77.266, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_32 { pt3dadd( 378.039, 590.885, 77.5163, 0.2746 ) }
    dend_32 { pt3dadd( 377.279, 591.728, 77.8156, 0.2746 ) }
    dend_32 { pt3dadd( 376.527, 592.577, 78.1614, 0.2746 ) }
    dend_32 { pt3dadd( 375.854, 593.489, 78.5411, 0.2746 ) }
    dend_32 { pt3dadd( 375.2, 594.418, 78.9429, 0.2746 ) }
    dend_32 { pt3dadd( 374.987, 595.478, 79.41, 0.2746 ) }
    dend_32 { pt3dadd( 374.941, 596.579, 79.9224, 0.2746 ) }
    dend_32 { pt3dadd( 374.62, 597.659, 80.4392, 0.2746 ) }
    dend_32 { pt3dadd( 374.241, 598.72, 80.9466, 0.2746 ) }
    dend_32 { pt3dadd( 373.681, 599.708, 81.4416, 0.2746 ) }
    dend_32 { pt3dadd( 373.143, 600.7, 81.9358, 0.2746 ) }
    dend_32 { pt3dadd( 372.881, 601.795, 82.4379, 0.2746 ) }
    dend_32 { pt3dadd( 372.784, 602.921, 82.9606, 0.2746 ) }
    dend_32 { pt3dadd( 372.555, 604.011, 83.5344, 0.2746 ) }
    dend_32 { pt3dadd( 372.373, 605.026, 84.2391, 0.2746 ) }
    dend_32 { pt3dadd( 372.2, 605.996, 85.0606, 0.2746 ) }
    dend_32 { pt3dadd( 371.817, 606.989, 85.8836, 0.2746 ) }
    dend_32 { pt3dadd( 371.366, 608.0, 86.6331, 0.2746 ) }
    dend_32 { pt3dadd( 370.923, 609.037, 87.2682, 0.2746 ) }
    dend_32 { pt3dadd( 370.48, 610.085, 87.7638, 0.2746 ) }
    dend_32 { pt3dadd( 370.206, 611.192, 88.121, 0.2744 ) }
    dend_32 { pt3dadd( 370.187, 612.334, 88.3719, 0.2744 ) }
    dend_32 { pt3dadd( 370.154, 613.476, 88.5634, 0.2742 ) }
    dend_32 { pt3dadd( 370.007, 614.608, 88.7354, 0.2736 ) }
    dend_32 { pt3dadd( 369.853, 615.739, 88.9106, 0.2728 ) }
    dend_32 { pt3dadd( 369.934, 616.873, 89.1075, 0.2712 ) }
    dend_32 { pt3dadd( 370.522, 617.85, 89.3133, 0.2684 ) }
    dend_32 { pt3dadd( 371.114, 618.827, 89.516, 0.2626 ) }
    dend_32 { pt3dadd( 371.716, 619.796, 89.7106, 0.2542 ) }
    dend_32 { pt3dadd( 372.326, 620.761, 89.8946, 0.2288 ) }
    dend_32 { pt3dadd( 372.928, 621.711, 90.3809, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 31/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 379.635, 558.114, 62.0029, 0.3818 ) }
    dend_31 { pt3dadd( 379.194, 558.455, 61.1635, 0.6864 ) }
    dend_31 { pt3dadd( 378.542, 559.057, 62.8062, 0.6106 ) }
    dend_31 { pt3dadd( 378.06, 560.003, 63.4875, 0.6696 ) }
    dend_31 { pt3dadd( 377.352, 560.832, 64.2449, 0.7422 ) }
    dend_31 { pt3dadd( 376.622, 561.63, 65.0586, 0.5962 ) }
    dend_31 { pt3dadd( 375.684, 562.193, 65.8756, 0.5454 ) }
    dend_31 { pt3dadd( 374.583, 562.244, 66.6565, 0.526 ) }
    dend_31 { pt3dadd( 373.882, 563.046, 67.4072, 0.5846 ) }
    dend_31 { pt3dadd( 373.356, 564.033, 68.1352, 0.4644 ) }
    dend_31 { pt3dadd( 372.315, 564.324, 68.8696, 0.4358 ) }
    dend_31 { pt3dadd( 371.458, 563.786, 69.6819, 0.355 ) }
    dend_31 { pt3dadd( 370.419, 563.825, 70.5477, 0.3402 ) }
    dend_31 { pt3dadd( 369.356, 563.874, 71.4512, 0.345 ) }
    dend_31 { pt3dadd( 368.43, 564.439, 72.3579, 0.4254 ) }
    dend_31 { pt3dadd( 367.611, 565.17, 73.2494, 0.457 ) }
    dend_31 { pt3dadd( 366.797, 565.882, 74.1339, 0.3988 ) }
    dend_31 { pt3dadd( 365.805, 566.297, 74.9916, 0.3988 ) }
    dend_31 { pt3dadd( 364.855, 566.798, 75.817, 0.3338 ) }
    dend_31 { pt3dadd( 364.603, 567.538, 76.6931, 0.2998 ) }
    dend_31 { pt3dadd( 364.936, 568.375, 77.6434, 0.2744 ) }
    dend_31 { pt3dadd( 365.517, 569.337, 78.4008, 0.2742 ) }
    dend_31 { pt3dadd( 365.542, 570.433, 78.9827, 0.2736 ) }
    dend_31 { pt3dadd( 365.197, 571.501, 79.4326, 0.2728 ) }
    dend_31 { pt3dadd( 365.951, 572.346, 79.8157, 0.2712 ) }
    dend_31 { pt3dadd( 366.493, 573.261, 80.278, 0.2684 ) }
    dend_31 { pt3dadd( 367.035, 574.176, 80.8058, 0.2626 ) }
    dend_31 { pt3dadd( 367.606, 575.115, 81.3456, 0.2542 ) }
    dend_31 { pt3dadd( 368.204, 576.078, 81.8216, 0.2288 ) }
    dend_31 { pt3dadd( 368.803, 577.043, 82.6342, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 61/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 354.184, 515.553, 37.5161, 0.9886 ) }
    dend_14 { pt3dadd( 353.332, 515.558, 37.5043, 0.8792 ) }
    dend_14 { pt3dadd( 352.242, 515.864, 37.4884, 0.7686 ) }
    dend_14 { pt3dadd( 351.115, 515.902, 37.4741, 0.5738 ) }
    dend_14 { pt3dadd( 350.183, 515.284, 37.4528, 0.6186 ) }
    dend_14 { pt3dadd( 349.268, 514.599, 37.4088, 0.5626 ) }
    dend_14 { pt3dadd( 348.192, 514.229, 37.3416, 0.6762 ) }
    dend_14 { pt3dadd( 347.174, 513.717, 37.2476, 0.7478 ) }
    dend_14 { pt3dadd( 346.273, 513.019, 37.1381, 0.6376 ) }
    dend_14 { pt3dadd( 345.304, 512.416, 37.0317, 0.4702 ) }
    dend_14 { pt3dadd( 344.206, 512.663, 36.9491, 0.4382 ) }
    dend_14 { pt3dadd( 343.253, 513.293, 36.9082, 0.4014 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 73/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 354.184, 515.553, 37.5161, 0.9886 ) }
    dend_13 { pt3dadd( 353.87, 514.625, 38.0604, 0.2288 ) }
    dend_13 { pt3dadd( 353.566, 513.553, 37.0502, 0.6384 ) }
    dend_13 { pt3dadd( 353.06, 512.577, 36.6282, 0.5674 ) }
    dend_13 { pt3dadd( 352.831, 511.574, 36.0853, 0.61 ) }
    dend_13 { pt3dadd( 352.771, 510.484, 35.5029, 0.532 ) }
    dend_13 { pt3dadd( 352.655, 509.404, 34.9003, 0.462 ) }
    dend_13 { pt3dadd( 352.784, 508.294, 34.3652, 0.4274 ) }
    dend_13 { pt3dadd( 352.399, 507.238, 33.9665, 0.5872 ) }
    dend_13 { pt3dadd( 351.671, 506.402, 33.6784, 0.4832 ) }
    dend_13 { pt3dadd( 351.7, 505.304, 33.4807, 0.4026 ) }
    dend_13 { pt3dadd( 351.527, 504.372, 33.3897, 0.3962 ) }
    dend_13 { pt3dadd( 351.762, 503.419, 33.4037, 0.3756 ) }
    dend_13 { pt3dadd( 352.18, 502.361, 33.4704, 0.3798 ) }
    dend_13 { pt3dadd( 352.235, 501.224, 33.5572, 0.4126 ) }
    dend_13 { pt3dadd( 351.912, 500.128, 33.6395, 0.5784 ) }
    dend_13 { pt3dadd( 351.631, 499.024, 33.6924, 0.605 ) }
    dend_13 { pt3dadd( 351.773, 497.889, 33.6963, 0.646 ) }
    dend_13 { pt3dadd( 351.807, 496.751, 33.6482, 0.5318 ) }
    dend_13 { pt3dadd( 351.561, 495.64, 33.5446, 0.5572 ) }
    dend_13 { pt3dadd( 351.7, 494.541, 33.4046, 0.5974 ) }
    dend_13 { pt3dadd( 352.374, 493.63, 33.2279, 0.7058 ) }
    dend_13 { pt3dadd( 352.7, 492.562, 33.0226, 0.7426 ) }
    dend_13 { pt3dadd( 352.532, 491.448, 32.7972, 0.6938 ) }
    dend_13 { pt3dadd( 352.03, 490.432, 32.5548, 0.7122 ) }
    dend_13 { pt3dadd( 351.451, 489.455, 32.3134, 0.675 ) }
    dend_13 { pt3dadd( 351.048, 488.393, 32.0818, 0.7256 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 350.777, 487.286, 31.8685, 0.6942 ) }
    dend_13 { pt3dadd( 350.261, 486.344, 31.687, 0.7856 ) }
    dend_13 { pt3dadd( 349.452, 485.554, 31.5249, 0.6876 ) }
    dend_13 { pt3dadd( 348.943, 484.546, 31.3793, 0.661 ) }
    dend_13 { pt3dadd( 348.385, 483.559, 31.241, 0.5438 ) }
    dend_13 { pt3dadd( 347.774, 482.593, 31.1016, 0.4284 ) }
    dend_13 { pt3dadd( 347.23, 481.587, 30.9532, 0.4064 ) }
    dend_13 { pt3dadd( 346.674, 480.592, 30.7812, 0.3476 ) }
    dend_13 { pt3dadd( 346.455, 479.476, 30.5948, 0.3268 ) }
    dend_13 { pt3dadd( 346.057, 478.724, 30.3486, 0.3188 ) }
    dend_13 { pt3dadd( 346.41, 477.645, 30.0947, 0.3818 ) }
    dend_13 { pt3dadd( 347.199, 476.935, 29.8584, 0.3496 ) }
    dend_13 { pt3dadd( 348.094, 476.243, 29.6612, 0.3288 ) }
    dend_13 { pt3dadd( 348.348, 475.21, 29.5156, 0.3302 ) }
    dend_13 { pt3dadd( 348.271, 474.069, 29.4244, 0.3672 ) }
    dend_13 { pt3dadd( 347.779, 473.069, 29.3902, 0.4974 ) }
    dend_13 { pt3dadd( 347.487, 471.99, 29.4006, 0.4404 ) }
    dend_13 { pt3dadd( 347.433, 470.85, 29.4221, 0.409 ) }
    dend_13 { pt3dadd( 347.055, 469.813, 29.4417, 0.4498 ) }
    dend_13 { pt3dadd( 346.254, 469.009, 29.4414, 0.5016 ) }
    dend_13 { pt3dadd( 345.951, 467.926, 29.4227, 0.4834 ) }
    dend_13 { pt3dadd( 345.655, 466.822, 29.3913, 0.5472 ) }
    dend_13 { pt3dadd( 345.615, 465.681, 29.3574, 0.6508 ) }
    dend_13 { pt3dadd( 345.662, 464.539, 29.3406, 0.685 ) }
    dend_13 { pt3dadd( 345.575, 463.399, 29.3208, 0.599 ) }
    dend_13 { pt3dadd( 345.455, 462.262, 29.2824, 0.4782 ) }
    dend_13 { pt3dadd( 345.205, 461.146, 29.2177, 0.5244 ) }
    dend_13 { pt3dadd( 344.788, 460.084, 29.1189, 0.4436 ) }
    dend_13 { pt3dadd( 344.593, 458.964, 28.9727, 0.4142 ) }
    dend_13 { pt3dadd( 344.572, 457.825, 28.8016, 0.4614 ) }
    dend_13 { pt3dadd( 344.566, 456.684, 28.6286, 0.5122 ) }
    dend_13 { pt3dadd( 344.506, 455.55, 28.4598, 0.5578 ) }
    dend_13 { pt3dadd( 344.122, 454.482, 28.3237, 0.4198 ) }
    dend_13 { pt3dadd( 343.56, 453.524, 28.2106, 0.3278 ) }
    dend_13 { pt3dadd( 343.532, 452.381, 28.1448, 0.2792 ) }
    dend_13 { pt3dadd( 343.503, 451.237, 28.1277, 0.283 ) }
    dend_13 { pt3dadd( 343.782, 450.133, 28.1462, 0.2904 ) }
    dend_13 { pt3dadd( 344.121, 449.041, 28.1845, 0.3032 ) }
    dend_13 { pt3dadd( 344.462, 447.949, 28.2304, 0.33 ) }
    dend_13 { pt3dadd( 344.804, 446.858, 28.2741, 0.3668 ) }
    dend_13 { pt3dadd( 345.329, 445.843, 28.3069, 0.4962 ) }
    dend_13 { pt3dadd( 346.083, 444.986, 28.3273, 0.4398 ) }
    dend_13 { pt3dadd( 346.651, 443.996, 28.3388, 0.401 ) }
    dend_13 { pt3dadd( 346.925, 442.886, 28.3441, 0.466 ) }
    dend_13 { pt3dadd( 347.155, 441.766, 28.3461, 0.3814 ) }
    dend_13 { pt3dadd( 347.163, 440.623, 28.3466, 0.305 ) }
    dend_13 { pt3dadd( 347.29, 439.486, 28.3466, 0.2288 ) }
    dend_13 { pt3dadd( 348.078, 438.669, 28.3466, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 48/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 378.642, 527.559, 39.6091, 0.786 ) }
    dend_7 { pt3dadd( 378.497, 528.554, 39.6676, 0.7596 ) }
    dend_7 { pt3dadd( 378.535, 529.69, 39.6421, 0.6762 ) }
    dend_7 { pt3dadd( 378.768, 530.806, 39.5786, 0.4608 ) }
    dend_7 { pt3dadd( 378.573, 531.917, 39.4996, 0.3562 ) }
    dend_7 { pt3dadd( 378.327, 533.032, 39.3932, 0.3324 ) }
    dend_7 { pt3dadd( 378.046, 534.137, 39.2745, 0.3776 ) }
    dend_7 { pt3dadd( 377.919, 535.273, 39.1639, 0.4876 ) }
    dend_7 { pt3dadd( 377.711, 536.396, 39.0578, 0.5614 ) }
    dend_7 { pt3dadd( 377.435, 537.506, 38.9589, 0.6436 ) }
    dend_7 { pt3dadd( 377.208, 538.627, 38.8797, 0.6066 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 59/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 378.642, 527.559, 39.6091, 0.786 ) }
    dend_6 { pt3dadd( 379.749, 528.258, 38.2222, 0.6996 ) }
    dend_6 { pt3dadd( 380.396, 529.186, 37.8641, 0.5544 ) }
    dend_6 { pt3dadd( 380.961, 530.14, 37.5122, 0.515 ) }
    dend_6 { pt3dadd( 382.046, 530.366, 37.1594, 0.698 ) }
    dend_6 { pt3dadd( 383.158, 530.282, 36.8239, 0.7108 ) }
    dend_6 { pt3dadd( 384.251, 530.6, 36.5257, 0.7172 ) }
    dend_6 { pt3dadd( 385.314, 531.014, 36.2757, 0.8138 ) }
    dend_6 { pt3dadd( 386.285, 531.586, 36.0433, 0.8118 ) }
    dend_6 { pt3dadd( 387.04, 532.426, 35.7955, 0.77 ) }
    dend_6 { pt3dadd( 387.642, 533.398, 35.5751, 0.6498 ) }
    dend_6 { pt3dadd( 388.264, 534.33, 35.3791, 0.6338 ) }
    dend_6 { pt3dadd( 389.314, 534.764, 35.1856, 0.5142 ) }
    dend_6 { pt3dadd( 390.447, 534.81, 34.9658, 0.501 ) }
    dend_6 { pt3dadd( 391.564, 534.729, 34.6956, 0.6068 ) }
    dend_6 { pt3dadd( 392.645, 535.026, 34.3784, 0.8592 ) }
    dend_6 { pt3dadd( 393.639, 535.565, 34.0231, 0.825 ) }
    dend_6 { pt3dadd( 394.612, 536.143, 33.6426, 0.6816 ) }
    dend_6 { pt3dadd( 395.632, 536.638, 33.2553, 0.5766 ) }
    dend_6 { pt3dadd( 396.689, 537.039, 32.8661, 0.5154 ) }
    dend_6 { pt3dadd( 397.779, 537.118, 32.466, 0.668 ) }
    dend_6 { pt3dadd( 398.893, 536.962, 32.0678, 0.5756 ) }
    dend_6 { pt3dadd( 400.011, 537.021, 31.6775, 0.6248 ) }
    dend_6 { pt3dadd( 401.052, 537.412, 31.3001, 0.5608 ) }
    dend_6 { pt3dadd( 402.05, 537.942, 30.9523, 0.5088 ) }
    dend_6 { pt3dadd( 403.126, 538.266, 30.6564, 0.546 ) }
    dend_6 { pt3dadd( 404.219, 538.123, 30.4296, 0.6546 ) }
    dend_6 { pt3dadd( 405.262, 537.657, 30.2744, 0.6622 ) }
    dend_6 { pt3dadd( 406.341, 537.31, 30.1907, 0.7008 ) }
    dend_6 { pt3dadd( 407.474, 537.221, 30.172, 0.6536 ) }
    dend_6 { pt3dadd( 408.513, 537.67, 30.1776, 0.6854 ) }
    dend_6 { pt3dadd( 409.399, 538.364, 30.1902, 0.6244 ) }
    dend_6 { pt3dadd( 410.042, 539.309, 30.1994, 0.635 ) }
    dend_6 { pt3dadd( 410.579, 540.215, 30.2008, 0.5112 ) }
    dend_6 { pt3dadd( 411.689, 540.479, 30.1927, 0.5196 ) }
    dend_6 { pt3dadd( 412.828, 540.54, 30.177, 0.5256 ) }
    dend_6 { pt3dadd( 413.963, 540.59, 30.158, 0.582 ) }
    dend_6 { pt3dadd( 414.826, 541.634, 30.0482, 0.4088 ) }
    dend_6 { pt3dadd( 415.852, 542.08, 30.011, 0.4518 ) }
    dend_6 { pt3dadd( 416.85, 542.604, 29.9844, 0.4942 ) }
    dend_6 { pt3dadd( 417.72, 543.335, 29.9678, 0.5254 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_6 { pt3dadd( 418.833, 543.493, 29.96, 0.356 ) }
    dend_6 { pt3dadd( 419.39, 542.612, 29.96, 0.2288 ) }
    // Section: apic_26, id: apic_26, parent: apic_20 (entry count 2/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 368.471, 516.165, 58.3022, 0.4474 ) }
    apic_26 { pt3dadd( 368.47, 516.166, 58.749, 0.3316 ) }
    apic_26 { pt3dadd( 367.828, 516.747, 59.402, 0.286 ) }
    apic_26 { pt3dadd( 366.826, 517.245, 60.0138, 0.2956 ) }
    apic_26 { pt3dadd( 365.804, 517.748, 60.5416, 0.3146 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 7/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 368.471, 516.165, 58.3022, 0.4474 ) }
    apic_21 { pt3dadd( 368.913, 516.865, 58.408, 0.3378 ) }
    apic_21 { pt3dadd( 369.9, 517.197, 58.4489, 0.418 ) }
    apic_21 { pt3dadd( 370.33, 518.256, 58.49, 0.4114 ) }
    apic_21 { pt3dadd( 370.813, 519.294, 58.553, 0.4698 ) }
    apic_21 { pt3dadd( 371.379, 520.275, 58.6524, 0.4624 ) }
    apic_21 { pt3dadd( 372.078, 521.169, 58.7894, 0.5528 ) }
    apic_21 { pt3dadd( 372.665, 522.143, 58.9571, 0.673 ) }
    apic_21 { pt3dadd( 373.376, 523.033, 59.1536, 0.6674 ) }
    apic_21 { pt3dadd( 374.081, 523.927, 59.3597, 0.8506 ) }
    apic_21 { pt3dadd( 374.503, 524.962, 59.5669, 0.938 ) }
    apic_21 { pt3dadd( 374.557, 526.099, 59.7766, 0.9522 ) }
    apic_21 { pt3dadd( 374.591, 527.235, 59.997, 0.7812 ) }
    apic_21 { pt3dadd( 375.063, 528.217, 60.2529, 0.7366 ) }
    apic_21 { pt3dadd( 375.547, 529.201, 60.5766, 0.7026 ) }
    apic_21 { pt3dadd( 376.236, 530.061, 60.949, 0.6302 ) }
    apic_21 { pt3dadd( 376.25, 531.139, 61.3631, 0.544 ) }
    apic_21 { pt3dadd( 376.289, 532.264, 61.7957, 0.6068 ) }
    apic_21 { pt3dadd( 376.474, 533.382, 62.218, 0.7878 ) }
    apic_21 { pt3dadd( 376.939, 534.414, 62.6262, 0.81 ) }
    // Section: apic_19, id: apic_19, parent: apic_1 (entry count 27/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 375.215, 490.536, 44.5707, 1.2818 ) }
    apic_19 { pt3dadd( 375.855, 489.989, 43.7186, 0.4576 ) }
    apic_19 { pt3dadd( 376.735, 489.385, 42.7308, 0.5758 ) }
    apic_19 { pt3dadd( 377.374, 488.472, 42.324, 0.5636 ) }
    apic_19 { pt3dadd( 377.887, 487.474, 41.8636, 0.7456 ) }
    apic_19 { pt3dadd( 378.445, 486.502, 41.3731, 0.7764 ) }
    apic_19 { pt3dadd( 379.183, 485.673, 40.8825, 0.7204 ) }
    apic_19 { pt3dadd( 380.112, 485.034, 40.4124, 0.7084 ) }
    apic_19 { pt3dadd( 381.082, 484.463, 39.9686, 0.6976 ) }
    apic_19 { pt3dadd( 381.999, 483.816, 39.545, 0.621 ) }
    apic_19 { pt3dadd( 382.996, 483.334, 39.1518, 0.5272 ) }
    apic_19 { pt3dadd( 384.06, 483.47, 38.8066, 0.5746 ) }
    apic_19 { pt3dadd( 385.106, 483.933, 38.5221, 0.732 ) }
    apic_19 { pt3dadd( 386.219, 484.174, 38.2844, 0.687 ) }
    apic_19 { pt3dadd( 387.357, 484.128, 38.0828, 0.6368 ) }
    apic_19 { pt3dadd( 388.489, 483.976, 37.8907, 0.6132 ) }
    apic_19 { pt3dadd( 389.582, 483.661, 37.6835, 0.687 ) }
    apic_19 { pt3dadd( 390.701, 483.442, 37.464, 0.7128 ) }
    apic_19 { pt3dadd( 391.79, 483.782, 37.2462, 0.6136 ) }
    apic_19 { pt3dadd( 392.777, 484.354, 37.0157, 0.6834 ) }
    apic_19 { pt3dadd( 393.859, 484.706, 36.7343, 0.726 ) }
    apic_19 { pt3dadd( 394.975, 484.911, 36.3964, 0.7704 ) }
    apic_19 { pt3dadd( 396.104, 485.024, 36.0013, 0.5608 ) }
    apic_19 { pt3dadd( 397.206, 485.224, 35.5256, 0.4466 ) }
    apic_19 { pt3dadd( 398.272, 485.383, 34.9468, 0.5042 ) }
    apic_19 { pt3dadd( 399.337, 485.447, 34.2728, 0.447 ) }
    apic_19 { pt3dadd( 400.397, 485.703, 33.5552, 0.4516 ) }
    apic_19 { pt3dadd( 401.483, 485.943, 32.8496, 0.3796 ) }
    apic_19 { pt3dadd( 402.506, 485.653, 32.1888, 0.4102 ) }
    apic_19 { pt3dadd( 403.41, 485.003, 31.558, 0.3548 ) }
    apic_19 { pt3dadd( 403.915, 485.598, 30.844, 0.34 ) }
    apic_19 { pt3dadd( 404.573, 486.445, 30.2044, 0.3446 ) }
    apic_19 { pt3dadd( 405.492, 486.908, 29.6783, 0.4238 ) }
    apic_19 { pt3dadd( 406.614, 487.007, 29.218, 0.4576 ) }
    apic_19 { pt3dadd( 407.737, 486.889, 28.8467, 0.3814 ) }
    apic_19 { pt3dadd( 408.859, 486.695, 28.2932, 0.4576 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 63/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 375.215, 490.536, 44.5707, 1.2818 ) }
    apic_2 { pt3dadd( 375.627, 489.179, 44.5819, 1.1196 ) }
    apic_2 { pt3dadd( 375.881, 488.179, 44.6043, 1.1204 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 66/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 367.592, 527.633, 49.8431, 0.377 ) }
    dend_48 { pt3dadd( 368.188, 528.394, 50.8791, 0.3644 ) }
    dend_48 { pt3dadd( 368.119, 529.508, 51.2467, 0.3096 ) }
    dend_48 { pt3dadd( 368.306, 530.62, 51.5992, 0.2922 ) }
    dend_48 { pt3dadd( 368.441, 531.755, 51.8804, 0.307 ) }
    dend_48 { pt3dadd( 368.659, 532.878, 52.0892, 0.3362 ) }
    dend_48 { pt3dadd( 368.74, 534.017, 52.2502, 0.3828 ) }
    dend_48 { pt3dadd( 368.691, 535.157, 52.383, 0.5038 ) }
    dend_48 { pt3dadd( 368.77, 536.294, 52.542, 0.5612 ) }
    dend_48 { pt3dadd( 368.647, 537.418, 52.7498, 0.7906 ) }
    dend_48 { pt3dadd( 368.352, 538.506, 53.0102, 0.8496 ) }
    dend_48 { pt3dadd( 368.4, 539.632, 53.3106, 0.906 ) }
    dend_48 { pt3dadd( 368.687, 540.729, 53.6332, 0.809 ) }
    dend_48 { pt3dadd( 368.824, 541.849, 53.9734, 0.693 ) }
    dend_48 { pt3dadd( 368.85, 542.981, 54.3158, 0.6258 ) }
    dend_48 { pt3dadd( 368.87, 544.114, 54.6434, 0.6992 ) }
    dend_48 { pt3dadd( 368.696, 545.24, 54.9377, 0.5604 ) }
    dend_48 { pt3dadd( 368.311, 546.305, 55.2037, 0.494 ) }
    dend_48 { pt3dadd( 367.741, 547.29, 55.4621, 0.5874 ) }
    dend_48 { pt3dadd( 367.389, 548.359, 55.7295, 0.6238 ) }
    dend_48 { pt3dadd( 367.362, 549.485, 56.0123, 0.6692 ) }
    dend_48 { pt3dadd( 367.513, 550.612, 56.3125, 0.6308 ) }
    dend_48 { pt3dadd( 367.286, 551.633, 56.6303, 0.4706 ) }
    dend_48 { pt3dadd( 366.508, 552.459, 56.9685, 0.3756 ) }
    dend_48 { pt3dadd( 366.317, 553.469, 57.3283, 0.3634 ) }
    dend_48 { pt3dadd( 366.743, 554.493, 57.7136, 0.4602 ) }
    dend_48 { pt3dadd( 366.972, 555.583, 58.114, 0.516 ) }
    dend_48 { pt3dadd( 366.724, 556.674, 58.5175, 0.5348 ) }
    dend_48 { pt3dadd( 367.103, 557.711, 58.9148, 0.5224 ) }
    dend_48 { pt3dadd( 367.608, 558.727, 59.2878, 0.4988 ) }
    dend_48 { pt3dadd( 367.905, 559.823, 59.635, 0.4602 ) }
    dend_48 { pt3dadd( 367.991, 560.958, 59.9519, 0.3628 ) }
    dend_48 { pt3dadd( 367.934, 562.097, 60.2409, 0.3068 ) }
    dend_48 { pt3dadd( 367.814, 563.231, 60.5125, 0.287 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_48 { pt3dadd( 367.294, 564.17, 60.7936, 0.2988 ) }
    dend_48 { pt3dadd( 366.407, 564.868, 61.0744, 0.3142 ) }
    dend_48 { pt3dadd( 366.118, 565.89, 61.3704, 0.3734 ) }
    dend_48 { pt3dadd( 366.323, 567.009, 61.677, 0.3338 ) }
    dend_48 { pt3dadd( 366.411, 568.144, 61.9965, 0.3 ) }
    dend_48 { pt3dadd( 366.168, 569.25, 62.3445, 0.2746 ) }
    dend_48 { pt3dadd( 365.588, 570.221, 62.7259, 0.2746 ) }
    dend_48 { pt3dadd( 365.022, 571.2, 63.1473, 0.2746 ) }
    dend_48 { pt3dadd( 364.387, 572.128, 63.614, 0.2746 ) }
    dend_48 { pt3dadd( 364.001, 573.173, 64.1332, 0.2746 ) }
    dend_48 { pt3dadd( 363.762, 574.246, 64.7049, 0.2748 ) }
    dend_48 { pt3dadd( 363.595, 575.328, 65.3117, 0.2748 ) }
    dend_48 { pt3dadd( 363.353, 576.415, 65.9033, 0.2752 ) }
    dend_48 { pt3dadd( 362.975, 577.471, 66.4566, 0.2758 ) }
    dend_48 { pt3dadd( 362.465, 578.479, 66.9553, 0.2766 ) }
    dend_48 { pt3dadd( 361.986, 579.507, 67.3915, 0.2784 ) }
    dend_48 { pt3dadd( 361.55, 580.558, 67.7743, 0.2818 ) }
    dend_48 { pt3dadd( 361.1, 581.603, 68.1276, 0.2882 ) }
    dend_48 { pt3dadd( 360.576, 582.607, 68.4712, 0.2994 ) }
    dend_48 { pt3dadd( 359.934, 583.544, 68.8117, 0.3228 ) }
    dend_48 { pt3dadd( 359.441, 584.547, 69.1614, 0.3538 ) }
    dend_48 { pt3dadd( 359.221, 585.649, 69.5377, 0.4722 ) }
    dend_48 { pt3dadd( 358.834, 586.697, 69.9272, 0.3934 ) }
    dend_48 { pt3dadd( 358.335, 587.716, 70.3122, 0.3254 ) }
    dend_48 { pt3dadd( 357.852, 588.742, 70.6905, 0.2746 ) }
    dend_48 { pt3dadd( 357.395, 589.776, 71.0713, 0.2746 ) }
    dend_48 { pt3dadd( 356.909, 590.791, 71.4524, 0.2746 ) }
    dend_48 { pt3dadd( 356.276, 591.728, 71.8122, 0.2746 ) }
    dend_48 { pt3dadd( 355.604, 592.646, 72.1386, 0.2746 ) }
    dend_48 { pt3dadd( 355.026, 593.625, 72.4304, 0.2746 ) }
    dend_48 { pt3dadd( 354.539, 594.656, 72.6888, 0.2746 ) }
    dend_48 { pt3dadd( 354.014, 595.669, 72.9123, 0.2746 ) }
    dend_48 { pt3dadd( 353.471, 596.674, 73.1055, 0.2746 ) }
    dend_48 { pt3dadd( 353.26, 597.78, 73.2827, 0.2746 ) }
    dend_48 { pt3dadd( 353.191, 598.919, 73.4549, 0.2746 ) }
    dend_48 { pt3dadd( 353.132, 600.059, 73.626, 0.2746 ) }
    dend_48 { pt3dadd( 353.059, 601.198, 73.7951, 0.2746 ) }
    dend_48 { pt3dadd( 352.964, 602.337, 73.9578, 0.2746 ) }
    dend_48 { pt3dadd( 352.866, 603.475, 74.111, 0.2746 ) }
    dend_48 { pt3dadd( 352.766, 604.614, 74.2535, 0.2746 ) }
    dend_48 { pt3dadd( 352.668, 605.753, 74.3884, 0.2746 ) }
    dend_48 { pt3dadd( 352.481, 606.881, 74.5231, 0.2746 ) }
    dend_48 { pt3dadd( 352.234, 607.996, 74.6662, 0.2748 ) }
    dend_48 { pt3dadd( 351.978, 609.108, 74.8233, 0.2748 ) }
    dend_48 { pt3dadd( 351.779, 610.229, 75.0067, 0.275 ) }
    dend_48 { pt3dadd( 351.858, 611.362, 75.213, 0.2758 ) }
    dend_48 { pt3dadd( 351.826, 612.5, 75.4278, 0.2766 ) }
    dend_48 { pt3dadd( 351.718, 613.635, 75.6344, 0.2782 ) }
    dend_48 { pt3dadd( 351.584, 614.77, 75.822, 0.2814 ) }
    dend_48 { pt3dadd( 351.174, 615.833, 75.9853, 0.287 ) }
    dend_48 { pt3dadd( 350.718, 616.883, 76.1244, 0.2984 ) }
    dend_48 { pt3dadd( 350.487, 618.0, 76.249, 0.3136 ) }
    dend_48 { pt3dadd( 350.26, 619.12, 76.3672, 0.3724 ) }
    dend_48 { pt3dadd( 350.064, 620.246, 76.4764, 0.332 ) }
    dend_48 { pt3dadd( 349.875, 621.374, 76.5724, 0.2966 ) }
    dend_48 { pt3dadd( 349.628, 622.49, 76.652, 0.2684 ) }
    dend_48 { pt3dadd( 349.277, 623.578, 76.7122, 0.2626 ) }
    dend_48 { pt3dadd( 349.088, 624.706, 76.7528, 0.2542 ) }
    dend_48 { pt3dadd( 348.984, 625.846, 76.7766, 0.2288 ) }
    dend_48 { pt3dadd( 348.88, 626.985, 76.7959, 0.2288 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 60/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 367.592, 527.633, 49.8431, 0.377 ) }
    dend_45 { pt3dadd( 366.581, 528.441, 50.2513, 0.3618 ) }
    dend_45 { pt3dadd( 365.664, 529.108, 50.4582, 0.4576 ) }
    dend_45 { pt3dadd( 364.597, 529.487, 50.6512, 0.51 ) }
    dend_45 { pt3dadd( 363.504, 529.817, 50.8494, 0.53 ) }
    dend_45 { pt3dadd( 362.531, 530.379, 51.093, 0.483 ) }
    dend_45 { pt3dadd( 361.966, 531.343, 51.38, 0.5748 ) }
    dend_45 { pt3dadd( 361.449, 532.351, 51.6841, 0.564 ) }
    dend_45 { pt3dadd( 360.872, 533.328, 51.991, 0.507 ) }
    dend_45 { pt3dadd( 360.253, 534.277, 52.2962, 0.5796 ) }
    dend_45 { pt3dadd( 359.234, 534.754, 52.5826, 0.5368 ) }
    dend_45 { pt3dadd( 358.264, 535.355, 52.8111, 0.6318 ) }
    dend_45 { pt3dadd( 357.386, 536.088, 52.9729, 0.6476 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 73/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 341.379, 527.632, 47.7162, 0.4878 ) }
    dend_41 { pt3dadd( 340.409, 527.057, 48.5996, 0.5788 ) }
    dend_41 { pt3dadd( 339.654, 526.286, 48.9919, 0.4602 ) }
    dend_41 { pt3dadd( 339.249, 525.239, 49.4046, 0.397 ) }
    dend_41 { pt3dadd( 339.077, 524.119, 49.8201, 0.4336 ) }
    dend_41 { pt3dadd( 338.891, 523.006, 50.2278, 0.4422 ) }
    dend_41 { pt3dadd( 338.515, 521.937, 50.626, 0.5158 ) }
    dend_41 { pt3dadd( 338.218, 520.857, 51.0082, 0.6038 ) }
    dend_41 { pt3dadd( 338.069, 519.733, 51.3867, 0.5428 ) }
    dend_41 { pt3dadd( 337.807, 518.635, 51.7689, 0.6024 ) }
    dend_41 { pt3dadd( 337.388, 517.584, 52.1562, 0.5602 ) }
    dend_41 { pt3dadd( 336.846, 516.594, 52.5532, 0.5376 ) }
    dend_41 { pt3dadd( 336.234, 515.643, 52.9572, 0.4548 ) }
    dend_41 { pt3dadd( 335.655, 514.671, 53.3599, 0.4994 ) }
    dend_41 { pt3dadd( 335.108, 513.68, 53.7608, 0.5352 ) }
    dend_41 { pt3dadd( 334.412, 512.812, 54.1696, 0.6012 ) }
    dend_41 { pt3dadd( 333.549, 512.089, 54.5804, 0.4968 ) }
    dend_41 { pt3dadd( 332.601, 511.473, 54.9665, 0.49 ) }
    dend_41 { pt3dadd( 331.529, 511.159, 55.3266, 0.4826 ) }
    dend_41 { pt3dadd( 330.615, 510.598, 55.6819, 0.4462 ) }
    dend_41 { pt3dadd( 330.055, 509.631, 56.0221, 0.4882 ) }
    dend_41 { pt3dadd( 329.343, 508.757, 56.3184, 0.4924 ) }
    dend_41 { pt3dadd( 328.547, 507.942, 56.5692, 0.629 ) }
    dend_41 { pt3dadd( 327.84, 507.048, 56.7773, 0.714 ) }
    dend_41 { pt3dadd( 327.032, 506.243, 56.9279, 0.5432 ) }
    dend_41 { pt3dadd( 326.038, 505.691, 57.0181, 0.4502 ) }
    dend_41 { pt3dadd( 325.102, 505.039, 57.071, 0.3352 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_41 { pt3dadd( 324.635, 504.009, 57.111, 0.3024 ) }
    dend_41 { pt3dadd( 324.186, 502.956, 57.1547, 0.279 ) }
    dend_41 { pt3dadd( 324.03, 501.826, 57.2163, 0.2828 ) }
    dend_41 { pt3dadd( 323.968, 500.685, 57.2995, 0.2896 ) }
    dend_41 { pt3dadd( 323.665, 499.585, 57.4014, 0.3034 ) }
    dend_41 { pt3dadd( 323.368, 498.48, 57.5162, 0.3228 ) }
    dend_41 { pt3dadd( 322.897, 497.443, 57.6481, 0.3896 ) }
    dend_41 { pt3dadd( 322.036, 496.694, 57.7956, 0.364 ) }
    dend_41 { pt3dadd( 321.16, 495.993, 57.9547, 0.3556 ) }
    dend_41 { pt3dadd( 320.811, 494.906, 58.1252, 0.3796 ) }
    dend_41 { pt3dadd( 320.336, 493.871, 58.3114, 0.4604 ) }
    dend_41 { pt3dadd( 319.961, 492.815, 58.527, 0.6626 ) }
    dend_41 { pt3dadd( 319.211, 491.956, 58.765, 0.783 ) }
    dend_41 { pt3dadd( 318.682, 491.014, 59.0526, 0.8682 ) }
    dend_41 { pt3dadd( 318.591, 489.892, 59.367, 0.7804 ) }
    dend_41 { pt3dadd( 318.722, 488.765, 59.7041, 0.6676 ) }
    dend_41 { pt3dadd( 318.686, 487.663, 60.0642, 0.445 ) }
    dend_41 { pt3dadd( 318.3, 486.599, 60.4346, 0.3272 ) }
    dend_41 { pt3dadd( 317.92, 485.527, 60.797, 0.2778 ) }
    dend_41 { pt3dadd( 317.442, 484.608, 61.1996, 0.2806 ) }
    dend_41 { pt3dadd( 317.299, 483.488, 61.5975, 0.2854 ) }
    dend_41 { pt3dadd( 316.965, 482.402, 61.976, 0.2966 ) }
    dend_41 { pt3dadd( 316.532, 481.363, 62.3224, 0.305 ) }
    dend_41 { pt3dadd( 315.913, 480.416, 62.6371, 0.3814 ) }
    dend_41 { pt3dadd( 316.087, 479.679, 63.56, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 25/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 341.379, 527.632, 47.7162, 0.4878 ) }
    dend_40 { pt3dadd( 340.906, 527.769, 47.8458, 0.3672 ) }
    dend_40 { pt3dadd( 340.202, 528.364, 47.9898, 0.3148 ) }
    dend_40 { pt3dadd( 339.493, 529.141, 48.1463, 0.3018 ) }
    dend_40 { pt3dadd( 338.451, 529.603, 48.3255, 0.3258 ) }
    dend_40 { pt3dadd( 337.572, 530.29, 48.531, 0.3654 ) }
    dend_40 { pt3dadd( 336.842, 531.16, 48.7668, 0.464 ) }
    dend_40 { pt3dadd( 336.315, 532.158, 49.03, 0.523 ) }
    dend_40 { pt3dadd( 335.972, 533.24, 49.3069, 0.548 ) }
    dend_40 { pt3dadd( 335.296, 534.107, 49.595, 0.5468 ) }
    dend_40 { pt3dadd( 334.428, 534.839, 49.8868, 0.5448 ) }
    dend_40 { pt3dadd( 333.512, 535.516, 50.1626, 0.5412 ) }
    dend_40 { pt3dadd( 332.552, 536.132, 50.4241, 0.5342 ) }
    dend_40 { pt3dadd( 331.762, 536.95, 50.6764, 0.5218 ) }
    dend_40 { pt3dadd( 330.781, 537.524, 50.9236, 0.4976 ) }
    dend_40 { pt3dadd( 329.841, 538.172, 51.165, 0.4582 ) }
    dend_40 { pt3dadd( 329.093, 539.033, 51.3996, 0.3594 ) }
    dend_40 { pt3dadd( 327.991, 539.283, 51.6438, 0.3002 ) }
    dend_40 { pt3dadd( 327.309, 540.152, 51.91, 0.2748 ) }
    dend_40 { pt3dadd( 327.173, 541.241, 52.2189, 0.275 ) }
    dend_40 { pt3dadd( 326.413, 542.064, 52.5742, 0.2752 ) }
    dend_40 { pt3dadd( 325.626, 542.806, 52.9609, 0.276 ) }
    dend_40 { pt3dadd( 325.144, 543.796, 53.3744, 0.277 ) }
    dend_40 { pt3dadd( 324.293, 544.502, 53.8286, 0.2792 ) }
    dend_40 { pt3dadd( 323.315, 545.075, 54.2786, 0.283 ) }
    dend_40 { pt3dadd( 322.338, 545.647, 54.7268, 0.2902 ) }
    dend_40 { pt3dadd( 321.363, 546.219, 55.1785, 0.3046 ) }
    dend_40 { pt3dadd( 320.409, 546.789, 55.6598, 0.3246 ) }
    dend_40 { pt3dadd( 319.383, 547.191, 56.1621, 0.3934 ) }
    dend_40 { pt3dadd( 318.271, 547.377, 56.6434, 0.3702 ) }
    dend_40 { pt3dadd( 317.153, 547.563, 57.092, 0.3698 ) }
    dend_40 { pt3dadd( 316.03, 547.75, 57.5, 0.393 ) }
    dend_40 { pt3dadd( 314.904, 547.922, 57.8707, 0.5468 ) }
    dend_40 { pt3dadd( 313.77, 548.011, 58.2196, 0.5232 ) }
    dend_40 { pt3dadd( 312.634, 548.011, 58.5738, 0.607 ) }
    dend_40 { pt3dadd( 311.502, 548.011, 58.9571, 0.6 ) }
    dend_40 { pt3dadd( 310.374, 548.011, 59.3779, 0.4606 ) }
    dend_40 { pt3dadd( 309.25, 548.011, 59.8374, 0.357 ) }
    dend_40 { pt3dadd( 308.127, 548.011, 60.3296, 0.3276 ) }
    dend_40 { pt3dadd( 307.005, 548.011, 60.8457, 0.3998 ) }
    dend_40 { pt3dadd( 305.884, 548.011, 61.3752, 0.3772 ) }
    dend_40 { pt3dadd( 304.762, 548.011, 61.9097, 0.4062 ) }
    dend_40 { pt3dadd( 303.648, 547.939, 62.4436, 0.3476 ) }
    dend_40 { pt3dadd( 302.559, 547.656, 62.9712, 0.3248 ) }
    dend_40 { pt3dadd( 301.478, 547.336, 63.4903, 0.3228 ) }
    dend_40 { pt3dadd( 300.396, 547.017, 64.0041, 0.3538 ) }
    dend_40 { pt3dadd( 299.316, 546.689, 64.5187, 0.4724 ) }
    dend_40 { pt3dadd( 298.248, 546.334, 65.0443, 0.3934 ) }
    dend_40 { pt3dadd( 297.185, 545.972, 65.5914, 0.3258 ) }
    dend_40 { pt3dadd( 296.124, 545.61, 66.1674, 0.2752 ) }
    dend_40 { pt3dadd( 295.074, 545.233, 66.7738, 0.2758 ) }
    dend_40 { pt3dadd( 294.065, 544.775, 67.4131, 0.2766 ) }
    dend_40 { pt3dadd( 293.308, 544.088, 68.1061, 0.2784 ) }
    dend_40 { pt3dadd( 292.669, 543.302, 68.8512, 0.2818 ) }
    dend_40 { pt3dadd( 291.717, 542.779, 69.5822, 0.288 ) }
    dend_40 { pt3dadd( 290.641, 542.582, 70.259, 0.2998 ) }
    dend_40 { pt3dadd( 289.517, 542.537, 70.8568, 0.3208 ) }
    dend_40 { pt3dadd( 288.424, 542.741, 71.3712, 0.3622 ) }
    dend_40 { pt3dadd( 287.373, 543.155, 71.8077, 0.4284 ) }
    dend_40 { pt3dadd( 286.329, 543.597, 72.1767, 0.6024 ) }
    dend_40 { pt3dadd( 285.283, 544.038, 72.4828, 0.6752 ) }
    dend_40 { pt3dadd( 284.218, 544.447, 72.7264, 0.6512 ) }
    dend_40 { pt3dadd( 283.107, 544.687, 72.9084, 0.4618 ) }
    dend_40 { pt3dadd( 281.971, 544.822, 73.0296, 0.3578 ) }
    dend_40 { pt3dadd( 280.834, 544.942, 73.096, 0.3356 ) }
    dend_40 { pt3dadd( 279.695, 545.061, 73.1158, 0.3832 ) }
    dend_40 { pt3dadd( 278.558, 545.181, 73.0996, 0.4988 ) }
    dend_40 { pt3dadd( 277.417, 545.249, 73.0554, 0.5806 ) }
    dend_40 { pt3dadd( 276.274, 545.262, 72.9859, 0.6884 ) }
    dend_40 { pt3dadd( 275.13, 545.262, 72.8913, 0.6436 ) }
    dend_40 { pt3dadd( 273.986, 545.262, 72.7684, 0.834 ) }
    dend_40 { pt3dadd( 272.849, 545.18, 72.609, 0.7732 ) }
    dend_40 { pt3dadd( 271.726, 544.988, 72.4024, 0.6098 ) }
    dend_40 { pt3dadd( 270.613, 544.765, 72.1442, 0.5528 ) }
    dend_40 { pt3dadd( 269.502, 544.543, 71.8393, 0.6266 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_40 { pt3dadd( 268.393, 544.331, 71.4994, 0.5788 ) }
    dend_40 { pt3dadd( 267.278, 544.139, 71.1418, 0.6994 ) }
    dend_40 { pt3dadd( 266.161, 543.954, 70.7848, 0.5952 ) }
    dend_40 { pt3dadd( 265.042, 543.767, 70.4446, 0.6196 ) }
    dend_40 { pt3dadd( 263.922, 543.581, 70.1313, 0.7512 ) }
    dend_40 { pt3dadd( 262.818, 543.319, 69.8443, 0.5772 ) }
    dend_40 { pt3dadd( 261.714, 543.029, 69.6077, 0.4522 ) }
    dend_40 { pt3dadd( 260.609, 542.739, 69.419, 0.4068 ) }
    dend_40 { pt3dadd( 259.503, 542.449, 69.2717, 0.5604 ) }
    dend_40 { pt3dadd( 258.396, 542.159, 69.1592, 0.6074 ) }
    dend_40 { pt3dadd( 257.301, 541.842, 69.0738, 0.4746 ) }
    dend_40 { pt3dadd( 256.27, 541.346, 69.0094, 0.3828 ) }
    dend_40 { pt3dadd( 255.24, 540.849, 68.9598, 0.3764 ) }
    dend_40 { pt3dadd( 254.205, 540.363, 68.9254, 0.4852 ) }
    dend_40 { pt3dadd( 253.129, 540.034, 68.9088, 0.5582 ) }
    dend_40 { pt3dadd( 252.003, 540.232, 68.917, 0.6326 ) }
    dend_40 { pt3dadd( 250.935, 540.319, 68.9466, 0.6102 ) }
    dend_40 { pt3dadd( 250.224, 539.779, 68.999, 0.4322 ) }
    dend_40 { pt3dadd( 249.17, 539.35, 69.1037, 0.305 ) }
    dend_40 { pt3dadd( 248.116, 538.92, 69.2418, 0.2288 ) }
    dend_40 { pt3dadd( 247.063, 538.49, 69.6102, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 322.61, 559.8, 48.8354, 0.2814 ) }
    dend_38 { pt3dadd( 322.228, 559.81, 48.8228, 0.2872 ) }
    dend_38 { pt3dadd( 321.09, 559.838, 48.6612, 0.2988 ) }
    dend_38 { pt3dadd( 319.952, 559.867, 48.4019, 0.3144 ) }
    dend_38 { pt3dadd( 318.813, 559.895, 48.0866, 0.3738 ) }
    dend_38 { pt3dadd( 317.822, 559.924, 47.5941, 0.3346 ) }
    dend_38 { pt3dadd( 316.789, 559.924, 47.0271, 0.3014 ) }
    dend_38 { pt3dadd( 315.723, 559.991, 46.492, 0.2768 ) }
    dend_38 { pt3dadd( 314.656, 560.362, 46.1174, 0.279 ) }
    dend_38 { pt3dadd( 313.588, 560.753, 45.9836, 0.2826 ) }
    dend_38 { pt3dadd( 312.501, 561.043, 46.1135, 0.289 ) }
    dend_38 { pt3dadd( 311.424, 561.306, 46.4965, 0.3024 ) }
    dend_38 { pt3dadd( 310.358, 561.566, 47.0733, 0.321 ) }
    dend_38 { pt3dadd( 309.288, 561.653, 47.7814, 0.386 ) }
    dend_38 { pt3dadd( 308.216, 561.487, 48.5666, 0.358 ) }
    dend_38 { pt3dadd( 307.151, 561.275, 49.3878, 0.3398 ) }
    dend_38 { pt3dadd( 306.089, 561.062, 50.2222, 0.3738 ) }
    dend_38 { pt3dadd( 305.01, 560.973, 51.0499, 0.3346 ) }
    dend_38 { pt3dadd( 303.915, 561.011, 51.8568, 0.3014 ) }
    dend_38 { pt3dadd( 302.817, 561.057, 52.6352, 0.2768 ) }
    dend_38 { pt3dadd( 301.714, 561.103, 53.382, 0.279 ) }
    dend_38 { pt3dadd( 300.626, 561.258, 54.0982, 0.2826 ) }
    dend_38 { pt3dadd( 299.575, 561.586, 54.7873, 0.2892 ) }
    dend_38 { pt3dadd( 298.499, 561.758, 55.4467, 0.3028 ) }
    dend_38 { pt3dadd( 297.388, 561.738, 56.07, 0.3214 ) }
    dend_38 { pt3dadd( 296.293, 561.544, 56.644, 0.3872 ) }
    dend_38 { pt3dadd( 295.211, 561.212, 57.1581, 0.3588 ) }
    dend_38 { pt3dadd( 294.174, 560.761, 57.6131, 0.3482 ) }
    dend_38 { pt3dadd( 293.2, 560.18, 58.0247, 0.3538 ) }
    dend_38 { pt3dadd( 292.393, 559.408, 58.4167, 0.4722 ) }
    dend_38 { pt3dadd( 291.768, 558.47, 58.7978, 0.3934 ) }
    dend_38 { pt3dadd( 290.897, 557.804, 59.1643, 0.3254 ) }
    dend_38 { pt3dadd( 289.826, 557.452, 59.5118, 0.2746 ) }
    dend_38 { pt3dadd( 288.747, 557.667, 59.8346, 0.2748 ) }
    dend_38 { pt3dadd( 287.648, 557.956, 60.137, 0.2748 ) }
    dend_38 { pt3dadd( 286.522, 558.064, 60.4321, 0.275 ) }
    dend_38 { pt3dadd( 285.383, 558.089, 60.7082, 0.2754 ) }
    dend_38 { pt3dadd( 284.243, 558.091, 60.963, 0.2762 ) }
    dend_38 { pt3dadd( 283.104, 558.091, 61.2069, 0.2778 ) }
    dend_38 { pt3dadd( 281.969, 558.091, 61.4429, 0.2806 ) }
    dend_38 { pt3dadd( 280.833, 558.091, 61.6655, 0.285 ) }
    dend_38 { pt3dadd( 279.693, 558.12, 61.8551, 0.2954 ) }
    dend_38 { pt3dadd( 278.553, 558.192, 61.9945, 0.308 ) }
    dend_38 { pt3dadd( 277.411, 558.265, 62.0738, 0.3616 ) }
    dend_38 { pt3dadd( 276.27, 558.337, 62.0911, 0.3134 ) }
    dend_38 { pt3dadd( 275.139, 558.498, 62.0572, 0.2542 ) }
    dend_38 { pt3dadd( 274.121, 559.009, 61.8408, 0.2288 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 68/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 322.61, 559.8, 48.8354, 0.2814 ) }
    dend_37 { pt3dadd( 322.556, 559.807, 49.4007, 0.2288 ) }
    dend_37 { pt3dadd( 322.36, 560.597, 50.8066, 0.2962 ) }
    dend_37 { pt3dadd( 321.718, 561.241, 51.3915, 0.3162 ) }
    dend_37 { pt3dadd( 321.326, 562.127, 51.8837, 0.346 ) }
    dend_37 { pt3dadd( 321.038, 562.492, 52.6333, 0.4344 ) }
    dend_37 { pt3dadd( 320.268, 562.808, 53.6166, 0.4376 ) }
    dend_37 { pt3dadd( 319.639, 563.521, 54.6398, 0.5386 ) }
    dend_37 { pt3dadd( 320.154, 564.336, 55.6931, 0.4944 ) }
    dend_37 { pt3dadd( 320.882, 565.125, 56.6905, 0.389 ) }
    dend_37 { pt3dadd( 321.465, 566.029, 57.6005, 0.308 ) }
    dend_37 { pt3dadd( 321.839, 567.076, 58.3702, 0.2894 ) }
    dend_37 { pt3dadd( 322.288, 568.1, 59.0181, 0.3018 ) }
    dend_37 { pt3dadd( 322.669, 569.156, 59.5739, 0.3258 ) }
    dend_37 { pt3dadd( 323.093, 570.199, 60.0583, 0.3664 ) }
    dend_37 { pt3dadd( 323.594, 571.214, 60.4934, 0.4596 ) }
    dend_37 { pt3dadd( 324.452, 571.874, 60.909, 0.5448 ) }
    dend_37 { pt3dadd( 325.409, 572.482, 61.2973, 0.4442 ) }
    dend_37 { pt3dadd( 326.412, 573.012, 61.6493, 0.3672 ) }
    dend_37 { pt3dadd( 327.21, 573.817, 61.964, 0.3784 ) }
    dend_37 { pt3dadd( 327.284, 574.95, 62.2289, 0.3388 ) }
    dend_37 { pt3dadd( 327.074, 576.07, 62.4526, 0.3304 ) }
    dend_37 { pt3dadd( 327.298, 577.186, 62.8737, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 91/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 343.253, 513.293, 36.9082, 0.4014 ) }
    dend_16 { pt3dadd( 342.323, 512.97, 36.8942, 0.4514 ) }
    dend_16 { pt3dadd( 341.802, 511.956, 36.9085, 0.427 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 94/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 343.253, 513.293, 36.9082, 0.4014 ) }
    dend_15 { pt3dadd( 343.118, 513.192, 35.9136, 0.2288 ) }
    dend_15 { pt3dadd( 342.198, 513.527, 34.7141, 0.3288 ) }
    dend_15 { pt3dadd( 341.351, 514.172, 34.183, 0.378 ) }
    dend_15 { pt3dadd( 340.496, 514.907, 33.6496, 0.4526 ) }
    dend_15 { pt3dadd( 339.49, 514.929, 33.1321, 0.6708 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( 338.639, 514.219, 32.6332, 0.6878 ) }
    dend_15 { pt3dadd( 337.61, 514.197, 32.1289, 0.5414 ) }
    dend_15 { pt3dadd( 337.115, 515.168, 31.6977, 0.4478 ) }
    dend_15 { pt3dadd( 337.287, 516.281, 31.3468, 0.5546 ) }
    dend_15 { pt3dadd( 337.296, 517.359, 31.0671, 0.536 ) }
    dend_15 { pt3dadd( 336.367, 517.593, 30.8641, 0.6384 ) }
    dend_15 { pt3dadd( 335.324, 517.165, 30.7572, 0.6214 ) }
    dend_15 { pt3dadd( 334.255, 517.423, 30.6942, 0.678 ) }
    dend_15 { pt3dadd( 333.315, 518.07, 30.6625, 0.5848 ) }
    dend_15 { pt3dadd( 332.294, 518.537, 30.8, 0.6864 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 10/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 377.208, 538.627, 38.8797, 0.6066 ) }
    dend_9 { pt3dadd( 376.736, 539.064, 38.7489, 0.9152 ) }
    dend_9 { pt3dadd( 375.925, 539.866, 39.0835, 0.9072 ) }
    dend_9 { pt3dadd( 375.158, 540.712, 39.2154, 0.708 ) }
    dend_9 { pt3dadd( 374.542, 541.655, 39.38, 0.5504 ) }
    dend_9 { pt3dadd( 374.318, 542.77, 39.5864, 0.6008 ) }
    dend_9 { pt3dadd( 374.202, 543.901, 39.8264, 0.6352 ) }
    dend_9 { pt3dadd( 373.987, 545.016, 40.0949, 0.5282 ) }
    dend_9 { pt3dadd( 374.0, 546.135, 40.4037, 0.4706 ) }
    dend_9 { pt3dadd( 374.308, 547.223, 40.7355, 0.5964 ) }
    dend_9 { pt3dadd( 374.686, 548.293, 41.0749, 0.6154 ) }
    dend_9 { pt3dadd( 375.038, 549.368, 41.4198, 0.7754 ) }
    dend_9 { pt3dadd( 375.559, 550.367, 41.7684, 0.9248 ) }
    dend_9 { pt3dadd( 376.202, 551.303, 42.1081, 1.0016 ) }
    dend_9 { pt3dadd( 376.755, 552.288, 42.4368, 0.9712 ) }
    dend_9 { pt3dadd( 377.251, 553.306, 42.7507, 0.8392 ) }
    dend_9 { pt3dadd( 377.907, 554.234, 43.0399, 0.7318 ) }
    dend_9 { pt3dadd( 378.641, 555.107, 43.304, 0.554 ) }
    dend_9 { pt3dadd( 379.405, 555.95, 43.5518, 0.5752 ) }
    dend_9 { pt3dadd( 380.046, 556.849, 43.785, 0.515 ) }
    dend_9 { pt3dadd( 380.226, 557.961, 43.9953, 0.428 ) }
    dend_9 { pt3dadd( 380.066, 559.085, 44.1986, 0.3764 ) }
    dend_9 { pt3dadd( 379.807, 560.189, 44.4279, 0.4364 ) }
    dend_9 { pt3dadd( 379.988, 561.27, 44.6732, 0.476 ) }
    dend_9 { pt3dadd( 380.33, 562.361, 44.9033, 0.4412 ) }
    dend_9 { pt3dadd( 379.99, 563.405, 45.1324, 0.443 ) }
    dend_9 { pt3dadd( 379.178, 564.198, 45.3872, 0.5812 ) }
    dend_9 { pt3dadd( 378.338, 564.915, 45.6856, 0.641 ) }
    dend_9 { pt3dadd( 378.019, 565.98, 46.016, 0.5622 ) }
    dend_9 { pt3dadd( 377.512, 566.614, 46.4414, 0.4214 ) }
    dend_9 { pt3dadd( 376.457, 566.942, 46.9244, 0.3638 ) }
    dend_9 { pt3dadd( 375.617, 567.699, 47.4334, 0.4132 ) }
    dend_9 { pt3dadd( 375.075, 568.608, 47.9702, 0.4334 ) }
    dend_9 { pt3dadd( 374.747, 569.673, 48.5226, 0.3604 ) }
    dend_9 { pt3dadd( 373.85, 570.229, 49.1008, 0.302 ) }
    dend_9 { pt3dadd( 373.722, 571.128, 49.7557, 0.2784 ) }
    dend_9 { pt3dadd( 372.906, 571.446, 50.4773, 0.2816 ) }
    dend_9 { pt3dadd( 372.346, 572.056, 51.17, 0.2876 ) }
    dend_9 { pt3dadd( 371.797, 572.958, 51.8269, 0.3 ) }
    dend_9 { pt3dadd( 370.849, 573.543, 52.4423, 0.3164 ) }
    dend_9 { pt3dadd( 370.336, 574.462, 53.0155, 0.3778 ) }
    dend_9 { pt3dadd( 369.749, 575.413, 53.5553, 0.3418 ) }
    dend_9 { pt3dadd( 369.021, 576.261, 54.0966, 0.3144 ) }
    dend_9 { pt3dadd( 368.226, 577.046, 54.6552, 0.3024 ) }
    dend_9 { pt3dadd( 367.213, 577.506, 55.2275, 0.3208 ) }
    dend_9 { pt3dadd( 366.169, 577.94, 55.8026, 0.386 ) }
    dend_9 { pt3dadd( 365.071, 578.181, 56.3934, 0.357 ) }
    dend_9 { pt3dadd( 364.136, 578.798, 57.008, 0.3436 ) }
    dend_9 { pt3dadd( 363.376, 579.613, 57.6688, 0.3512 ) }
    dend_9 { pt3dadd( 362.831, 580.564, 58.4088, 0.4382 ) }
    dend_9 { pt3dadd( 362.387, 581.542, 59.2217, 0.4744 ) }
    dend_9 { pt3dadd( 361.39, 581.304, 60.1588, 0.4618 ) }
    dend_9 { pt3dadd( 360.342, 581.321, 61.166, 0.366 ) }
    dend_9 { pt3dadd( 359.651, 581.922, 62.2381, 0.3126 ) }
    dend_9 { pt3dadd( 359.111, 582.724, 63.3741, 0.2988 ) }
    dend_9 { pt3dadd( 358.756, 583.652, 64.5246, 0.3142 ) }
    dend_9 { pt3dadd( 358.079, 584.42, 65.6488, 0.3734 ) }
    dend_9 { pt3dadd( 357.595, 585.326, 66.7472, 0.3338 ) }
    dend_9 { pt3dadd( 356.8, 585.946, 67.835, 0.3 ) }
    dend_9 { pt3dadd( 355.889, 586.531, 68.8475, 0.2746 ) }
    dend_9 { pt3dadd( 355.047, 587.239, 69.7724, 0.2746 ) }
    dend_9 { pt3dadd( 354.301, 588.062, 70.6334, 0.2746 ) }
    dend_9 { pt3dadd( 353.528, 588.861, 71.4543, 0.2746 ) }
    dend_9 { pt3dadd( 352.694, 589.583, 72.2686, 0.2746 ) }
    dend_9 { pt3dadd( 352.049, 590.41, 73.1032, 0.2746 ) }
    dend_9 { pt3dadd( 351.634, 591.44, 73.9679, 0.2746 ) }
    dend_9 { pt3dadd( 351.113, 592.36, 74.9249, 0.2744 ) }
    dend_9 { pt3dadd( 350.56, 593.158, 76.0418, 0.2744 ) }
    dend_9 { pt3dadd( 350.088, 594.072, 77.252, 0.2742 ) }
    dend_9 { pt3dadd( 349.68, 595.091, 78.4823, 0.2736 ) }
    dend_9 { pt3dadd( 349.341, 595.846, 79.7367, 0.2728 ) }
    dend_9 { pt3dadd( 349.725, 596.199, 81.2543, 0.2712 ) }
    dend_9 { pt3dadd( 350.124, 596.365, 82.9478, 0.2684 ) }
    dend_9 { pt3dadd( 350.531, 596.233, 84.726, 0.2626 ) }
    dend_9 { pt3dadd( 350.461, 595.706, 86.4016, 0.2542 ) }
    dend_9 { pt3dadd( 349.63, 595.086, 87.8027, 0.2288 ) }
    dend_9 { pt3dadd( 348.665, 594.993, 90.2686, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 87/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 377.208, 538.627, 38.8797, 0.6066 ) }
    dend_8 { pt3dadd( 378.137, 539.839, 38.8002, 0.6368 ) }
    dend_8 { pt3dadd( 378.565, 540.899, 38.7724, 0.66 ) }
    dend_8 { pt3dadd( 379.035, 541.932, 38.7408, 0.776 ) }
    dend_8 { pt3dadd( 379.724, 542.845, 38.7038, 0.6388 ) }
    dend_8 { pt3dadd( 380.398, 543.768, 38.6607, 0.7214 ) }
    dend_8 { pt3dadd( 380.991, 544.743, 38.6128, 0.61 ) }
    dend_8 { pt3dadd( 381.473, 545.779, 38.5627, 0.544 ) }
    dend_8 { pt3dadd( 382.035, 546.773, 38.5126, 0.4248 ) }
    dend_8 { pt3dadd( 382.7, 547.704, 38.4608, 0.4184 ) }
    dend_8 { pt3dadd( 383.314, 548.668, 38.4037, 0.5098 ) }
    dend_8 { pt3dadd( 383.891, 549.655, 38.3362, 0.635 ) }
    dend_8 { pt3dadd( 384.471, 550.639, 38.2539, 0.625 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_8 { pt3dadd( 384.995, 551.656, 38.1632, 0.6352 ) }
    dend_8 { pt3dadd( 385.562, 552.638, 38.0668, 0.518 ) }
    dend_8 { pt3dadd( 386.371, 553.436, 37.9588, 0.5008 ) }
    dend_8 { pt3dadd( 387.265, 554.147, 37.8462, 0.6422 ) }
    dend_8 { pt3dadd( 388.056, 554.964, 37.7398, 0.7506 ) }
    dend_8 { pt3dadd( 388.753, 555.87, 37.6432, 0.783 ) }
    dend_8 { pt3dadd( 389.448, 556.776, 37.5567, 0.7462 ) }
    dend_8 { pt3dadd( 390.058, 557.744, 37.4819, 0.6894 ) }
    dend_8 { pt3dadd( 390.569, 558.759, 37.4209, 0.5282 ) }
    dend_8 { pt3dadd( 390.854, 559.862, 37.3576, 0.5014 ) }
    dend_8 { pt3dadd( 391.209, 560.916, 37.2663, 0.5042 ) }
    dend_8 { pt3dadd( 391.923, 561.799, 37.1386, 0.4826 ) }
    dend_8 { pt3dadd( 392.68, 562.654, 37.004, 0.5752 ) }
    dend_8 { pt3dadd( 393.268, 563.627, 36.8746, 0.5568 ) }
    dend_8 { pt3dadd( 393.689, 564.689, 36.7444, 0.5318 ) }
    dend_8 { pt3dadd( 394.21, 565.702, 36.6047, 0.4432 ) }
    dend_8 { pt3dadd( 395.022, 566.478, 36.4398, 0.4828 ) }
    dend_8 { pt3dadd( 395.827, 567.281, 36.2474, 0.4808 ) }
    dend_8 { pt3dadd( 396.741, 567.937, 36.0052, 0.6138 ) }
    dend_8 { pt3dadd( 397.474, 568.782, 35.7176, 0.6546 ) }
    dend_8 { pt3dadd( 397.956, 569.801, 35.4116, 0.5874 ) }
    dend_8 { pt3dadd( 398.635, 570.71, 35.1224, 0.4688 ) }
    dend_8 { pt3dadd( 399.611, 571.288, 34.8681, 0.4464 ) }
    dend_8 { pt3dadd( 400.615, 571.831, 34.659, 0.5932 ) }
    dend_8 { pt3dadd( 401.347, 572.706, 34.4982, 0.635 ) }
    dend_8 { pt3dadd( 402.09, 573.576, 34.384, 0.6898 ) }
    dend_8 { pt3dadd( 402.893, 574.391, 34.3078, 0.6708 ) }
    dend_8 { pt3dadd( 403.681, 575.219, 34.2605, 0.5348 ) }
    dend_8 { pt3dadd( 404.393, 576.115, 34.2367, 0.5444 ) }
    dend_8 { pt3dadd( 404.991, 577.09, 34.235, 0.4338 ) }
    dend_8 { pt3dadd( 405.459, 578.133, 34.2527, 0.3952 ) }
    dend_8 { pt3dadd( 405.51, 579.276, 34.2919, 0.4302 ) }
    dend_8 { pt3dadd( 405.366, 580.409, 34.3515, 0.4358 ) }
    dend_8 { pt3dadd( 405.167, 581.528, 34.4288, 0.5052 ) }
    dend_8 { pt3dadd( 405.069, 582.587, 34.6634, 0.5768 ) }
    dend_8 { pt3dadd( 405.046, 583.71, 34.8877, 0.5278 ) }
    dend_8 { pt3dadd( 405.068, 584.854, 35.0554, 0.4038 ) }
    dend_8 { pt3dadd( 405.141, 585.992, 35.168, 0.3354 ) }
    dend_8 { pt3dadd( 405.682, 587.0, 35.2279, 0.341 ) }
    dend_8 { pt3dadd( 406.597, 587.687, 35.2335, 0.3956 ) }
    dend_8 { pt3dadd( 407.312, 588.58, 35.187, 0.5084 ) }
    dend_8 { pt3dadd( 408.026, 589.474, 35.1173, 0.6616 ) }
    dend_8 { pt3dadd( 408.711, 590.39, 35.0314, 0.5306 ) }
    dend_8 { pt3dadd( 409.192, 591.418, 34.9311, 0.4738 ) }
    dend_8 { pt3dadd( 409.797, 591.757, 34.592, 0.3798 ) }
    dend_8 { pt3dadd( 410.509, 592.648, 34.3484, 0.3798 ) }
    dend_8 { pt3dadd( 411.224, 593.54, 34.1684, 0.449 ) }
    dend_8 { pt3dadd( 411.928, 594.44, 34.0278, 0.47 ) }
    dend_8 { pt3dadd( 412.322, 595.514, 33.9122, 0.5704 ) }
    dend_8 { pt3dadd( 412.713, 596.587, 33.812, 0.6868 ) }
    dend_8 { pt3dadd( 413.142, 597.614, 33.7039, 0.7854 ) }
    dend_8 { pt3dadd( 412.851, 598.715, 33.5622, 0.6226 ) }
    dend_8 { pt3dadd( 412.616, 599.821, 33.4222, 0.625 ) }
    dend_8 { pt3dadd( 412.592, 600.963, 33.2993, 0.5254 ) }
    dend_8 { pt3dadd( 412.565, 602.104, 33.1999, 0.6182 ) }
    dend_8 { pt3dadd( 412.553, 603.247, 33.1419, 0.5848 ) }
    dend_8 { pt3dadd( 412.374, 604.357, 33.1439, 0.6072 ) }
    dend_8 { pt3dadd( 411.941, 605.414, 33.2142, 0.4668 ) }
    dend_8 { pt3dadd( 411.508, 606.468, 33.3502, 0.404 ) }
    dend_8 { pt3dadd( 411.004, 607.475, 33.5546, 0.4714 ) }
    dend_8 { pt3dadd( 410.004, 607.403, 33.7963, 0.3914 ) }
    dend_8 { pt3dadd( 409.208, 608.177, 34.0332, 0.322 ) }
    dend_8 { pt3dadd( 408.637, 609.162, 34.2532, 0.2684 ) }
    dend_8 { pt3dadd( 408.479, 610.292, 34.4378, 0.2626 ) }
    dend_8 { pt3dadd( 408.479, 611.435, 34.5789, 0.2542 ) }
    dend_8 { pt3dadd( 408.479, 612.579, 34.6777, 0.2288 ) }
    dend_8 { pt3dadd( 408.479, 613.723, 34.8051, 0.2288 ) }
    // Section: apic_28, id: apic_28, parent: apic_26 (entry count 67/100)
    apic_28 { pt3dclear() }
    apic_28 { pt3dadd( 365.804, 517.748, 60.5416, 0.3146 ) }
    apic_28 { pt3dadd( 365.378, 517.097, 61.4261, 0.2288 ) }
    apic_28 { pt3dadd( 364.827, 516.47, 63.9548, 0.5722 ) }
    apic_28 { pt3dadd( 364.138, 515.766, 64.9855, 0.4546 ) }
    apic_28 { pt3dadd( 363.503, 515.438, 66.2556, 0.3546 ) }
    apic_28 { pt3dadd( 362.848, 515.268, 67.6833, 0.2816 ) }
    apic_28 { pt3dadd( 361.9, 515.009, 69.0528, 0.2876 ) }
    apic_28 { pt3dadd( 360.851, 514.729, 70.2475, 0.2998 ) }
    apic_28 { pt3dadd( 359.769, 514.459, 71.2186, 0.3162 ) }
    apic_28 { pt3dadd( 358.672, 514.378, 71.9886, 0.377 ) }
    apic_28 { pt3dadd( 357.61, 514.762, 72.588, 0.3406 ) }
    apic_28 { pt3dadd( 356.608, 515.291, 73.0932, 0.3126 ) }
    apic_28 { pt3dadd( 355.633, 515.848, 73.5846, 0.2988 ) }
    apic_28 { pt3dadd( 354.603, 516.154, 74.0816, 0.3142 ) }
    apic_28 { pt3dadd( 353.515, 515.946, 74.5998, 0.3734 ) }
    apic_28 { pt3dadd( 352.581, 515.401, 75.1814, 0.3338 ) }
    apic_28 { pt3dadd( 351.747, 514.701, 75.8136, 0.3 ) }
    apic_28 { pt3dadd( 350.921, 513.951, 76.4392, 0.2748 ) }
    apic_28 { pt3dadd( 350.466, 512.943, 77.0378, 0.2748 ) }
    apic_28 { pt3dadd( 350.514, 511.839, 77.616, 0.275 ) }
    apic_28 { pt3dadd( 350.611, 510.722, 78.1612, 0.2754 ) }
    apic_28 { pt3dadd( 350.684, 509.592, 78.6554, 0.2762 ) }
    apic_28 { pt3dadd( 350.881, 508.48, 79.1168, 0.2778 ) }
    apic_28 { pt3dadd( 351.104, 507.378, 79.5651, 0.2802 ) }
    apic_28 { pt3dadd( 351.263, 506.259, 79.9921, 0.2854 ) }
    apic_28 { pt3dadd( 351.391, 505.131, 80.3872, 0.2946 ) }
    apic_28 { pt3dadd( 351.526, 504.005, 80.7671, 0.3114 ) }
    apic_28 { pt3dadd( 351.66, 502.882, 81.1331, 0.3446 ) }
    apic_28 { pt3dadd( 351.795, 501.757, 81.4778, 0.3954 ) }
    apic_28 { pt3dadd( 351.889, 500.626, 81.7883, 0.5422 ) }
    apic_28 { pt3dadd( 351.97, 499.49, 82.052, 0.5592 ) }
    apic_28 { pt3dadd( 352.156, 498.366, 82.5219, 0.4576 ) }
    // Section: apic_27, id: apic_27, parent: apic_26 (entry count 99/100)
    apic_27 { pt3dclear() }
    apic_27 { pt3dadd( 365.804, 517.748, 60.5416, 0.3146 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_27 { pt3dadd( 365.682, 517.915, 60.9706, 0.3436 ) }
    apic_27 { pt3dadd( 365.01, 518.835, 61.3564, 0.4276 ) }
    apic_27 { pt3dadd( 364.308, 519.731, 61.7095, 0.4374 ) }
    apic_27 { pt3dadd( 363.499, 520.525, 62.0388, 0.4772 ) }
    apic_27 { pt3dadd( 362.63, 521.251, 62.4044, 0.675 ) }
    apic_27 { pt3dadd( 361.8, 522.006, 62.8356, 0.6686 ) }
    apic_27 { pt3dadd( 360.917, 522.693, 63.3237, 0.6374 ) }
    apic_27 { pt3dadd( 360.02, 523.352, 63.8602, 0.6738 ) }
    apic_27 { pt3dadd( 359.191, 524.097, 64.4232, 0.5112 ) }
    apic_27 { pt3dadd( 358.451, 524.939, 64.99, 0.4134 ) }
    apic_27 { pt3dadd( 357.463, 525.45, 65.5673, 0.386 ) }
    apic_27 { pt3dadd( 356.473, 525.947, 66.1349, 0.5034 ) }
    apic_27 { pt3dadd( 355.623, 526.682, 66.6795, 0.5914 ) }
    apic_27 { pt3dadd( 354.682, 527.29, 67.1994, 0.6964 ) }
    apic_27 { pt3dadd( 353.633, 527.695, 67.7043, 0.7176 ) }
    apic_27 { pt3dadd( 352.611, 528.159, 68.1951, 0.6836 ) }
    apic_27 { pt3dadd( 351.611, 528.637, 68.6669, 0.5178 ) }
    apic_27 { pt3dadd( 350.51, 528.867, 69.1191, 0.4824 ) }
    apic_27 { pt3dadd( 349.97, 529.685, 69.5769, 0.4668 ) }
    apic_27 { pt3dadd( 349.057, 530.251, 70.0109, 0.423 ) }
    apic_27 { pt3dadd( 347.93, 530.395, 70.3816, 0.415 ) }
    apic_27 { pt3dadd( 346.812, 530.616, 70.6821, 0.5038 ) }
    apic_27 { pt3dadd( 345.738, 531.007, 70.917, 0.6234 ) }
    apic_27 { pt3dadd( 344.717, 531.522, 71.0892, 0.604 ) }
    apic_27 { pt3dadd( 343.787, 532.185, 71.2216, 0.5962 ) }
    apic_27 { pt3dadd( 342.969, 532.975, 71.3289, 0.4438 ) }
    apic_27 { pt3dadd( 342.434, 533.976, 71.4347, 0.373 ) }
    apic_27 { pt3dadd( 341.969, 535.017, 71.6038, 0.3588 ) }
    apic_27 { pt3dadd( 341.596, 536.085, 71.8623, 0.4506 ) }
    apic_27 { pt3dadd( 341.824, 537.099, 72.2408, 0.5042 ) }
    apic_27 { pt3dadd( 341.94, 538.193, 72.7112, 0.4824 ) }
    apic_27 { pt3dadd( 342.159, 539.281, 73.2634, 0.5752 ) }
    apic_27 { pt3dadd( 342.469, 540.355, 73.8674, 0.5564 ) }
    apic_27 { pt3dadd( 342.747, 541.443, 74.494, 0.532 ) }
    apic_27 { pt3dadd( 342.848, 542.563, 75.1251, 0.4384 ) }
    apic_27 { pt3dadd( 342.439, 543.597, 75.7588, 0.4976 ) }
    apic_27 { pt3dadd( 341.768, 543.726, 76.5198, 0.3934 ) }
    apic_27 { pt3dadd( 341.001, 544.24, 77.3973, 0.3254 ) }
    apic_27 { pt3dadd( 340.026, 544.609, 78.199, 0.2746 ) }
    apic_27 { pt3dadd( 338.913, 544.875, 78.8357, 0.2746 ) }
    apic_27 { pt3dadd( 337.777, 545.005, 79.3436, 0.2746 ) }
    apic_27 { pt3dadd( 336.718, 545.291, 79.7818, 0.2746 ) }
    apic_27 { pt3dadd( 335.875, 546.016, 80.2455, 0.2746 ) }
    apic_27 { pt3dadd( 335.033, 546.742, 80.7556, 0.2746 ) }
    apic_27 { pt3dadd( 334.19, 547.466, 81.3308, 0.2746 ) }
    apic_27 { pt3dadd( 333.348, 548.191, 81.9717, 0.2744 ) }
    apic_27 { pt3dadd( 332.505, 548.916, 82.6644, 0.2744 ) }
    apic_27 { pt3dadd( 331.663, 549.641, 83.3927, 0.2742 ) }
    apic_27 { pt3dadd( 330.821, 550.366, 84.142, 0.2736 ) }
    apic_27 { pt3dadd( 330.665, 550.375, 84.7283, 0.2728 ) }
    apic_27 { pt3dadd( 330.748, 550.586, 85.7198, 0.2712 ) }
    apic_27 { pt3dadd( 330.352, 550.889, 86.8451, 0.2684 ) }
    apic_27 { pt3dadd( 329.397, 551.378, 87.8354, 0.2626 ) }
    apic_27 { pt3dadd( 329.398, 552.522, 88.6379, 0.2542 ) }
    apic_27 { pt3dadd( 329.577, 553.376, 89.4247, 0.2288 ) }
    apic_27 { pt3dadd( 329.978, 553.868, 91.5037, 0.2288 ) }
    // Section: apic_25, id: apic_25, parent: apic_21 (entry count 56/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 376.939, 534.414, 62.6262, 0.81 ) }
    apic_25 { pt3dadd( 376.541, 534.465, 64.7478, 0.6864 ) }
    apic_25 { pt3dadd( 375.904, 534.548, 67.8353, 0.499 ) }
    apic_25 { pt3dadd( 375.345, 535.077, 69.1284, 0.4166 ) }
    apic_25 { pt3dadd( 375.059, 535.941, 70.609, 0.4948 ) }
    apic_25 { pt3dadd( 374.763, 536.354, 72.3016, 0.4354 ) }
    apic_25 { pt3dadd( 374.893, 537.107, 74.0594, 0.403 ) }
    apic_25 { pt3dadd( 374.93, 538.071, 75.728, 0.422 ) }
    apic_25 { pt3dadd( 374.676, 538.978, 77.2862, 0.53 ) }
    apic_25 { pt3dadd( 374.676, 540.026, 78.7058, 0.834 ) }
    apic_25 { pt3dadd( 374.674, 541.072, 80.0159, 0.894 ) }
    apic_25 { pt3dadd( 374.297, 541.864, 81.289, 0.7044 ) }
    apic_25 { pt3dadd( 373.756, 542.718, 82.5026, 0.6694 ) }
    apic_25 { pt3dadd( 373.224, 543.624, 83.7007, 0.6718 ) }
    apic_25 { pt3dadd( 372.91, 544.621, 84.8548, 0.579 ) }
    apic_25 { pt3dadd( 372.657, 545.596, 85.9936, 0.6468 ) }
    apic_25 { pt3dadd( 372.425, 546.604, 87.075, 0.5254 ) }
    apic_25 { pt3dadd( 372.35, 547.6, 88.0964, 0.356 ) }
    apic_25 { pt3dadd( 371.929, 548.349, 90.3809, 0.2288 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 75/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 376.939, 534.414, 62.6262, 0.81 ) }
    apic_22 { pt3dadd( 376.93, 534.9, 63.0101, 0.771 ) }
    apic_22 { pt3dadd( 376.819, 536.033, 63.3721, 0.629 ) }
    apic_22 { pt3dadd( 376.934, 537.159, 63.721, 0.7058 ) }
    apic_22 { pt3dadd( 377.392, 538.194, 64.087, 0.7976 ) }
    apic_22 { pt3dadd( 377.652, 539.261, 64.5039, 0.7554 ) }
    apic_22 { pt3dadd( 377.652, 540.382, 64.9415, 0.565 ) }
    apic_22 { pt3dadd( 377.983, 541.454, 65.3699, 0.5296 ) }
    apic_22 { pt3dadd( 378.202, 542.561, 65.7961, 0.5202 ) }
    apic_22 { pt3dadd( 378.332, 543.689, 66.2015, 0.6892 ) }
    apic_22 { pt3dadd( 378.395, 544.825, 66.5762, 0.7854 ) }
    apic_22 { pt3dadd( 378.561, 545.945, 66.9402, 0.8718 ) }
    apic_22 { pt3dadd( 378.566, 547.064, 67.3204, 0.7928 ) }
    apic_22 { pt3dadd( 378.388, 548.172, 67.7068, 0.662 ) }
    // Section: apic_18, id: apic_18, parent: apic_2 (entry count 89/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 375.881, 488.179, 44.6043, 1.1204 ) }
    apic_18 { pt3dadd( 376.373, 488.005, 45.4882, 0.2288 ) }
    apic_18 { pt3dadd( 377.43, 487.835, 46.531, 0.3606 ) }
    apic_18 { pt3dadd( 378.561, 487.796, 46.9451, 0.427 ) }
    apic_18 { pt3dadd( 379.632, 488.041, 47.42, 0.5924 ) }
    apic_18 { pt3dadd( 380.422, 488.75, 47.9886, 0.6926 ) }
    apic_18 { pt3dadd( 380.936, 489.728, 48.6021, 0.5086 ) }
    apic_18 { pt3dadd( 381.537, 490.66, 49.2318, 0.3606 ) }
    apic_18 { pt3dadd( 382.054, 491.643, 49.8548, 0.2926 ) }
    apic_18 { pt3dadd( 382.321, 492.729, 50.4574, 0.3092 ) }
    apic_18 { pt3dadd( 382.25, 493.839, 51.0415, 0.3332 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_18 { pt3dadd( 382.124, 494.949, 51.6079, 0.4098 ) }
    apic_18 { pt3dadd( 381.884, 496.035, 52.1682, 0.3958 ) }
    apic_18 { pt3dadd( 381.388, 497.058, 52.6814, 0.4404 ) }
    apic_18 { pt3dadd( 380.949, 498.103, 53.1698, 0.4118 ) }
    apic_18 { pt3dadd( 380.669, 499.16, 53.6567, 0.4406 ) }
    apic_18 { pt3dadd( 380.597, 500.262, 54.1652, 0.5532 ) }
    apic_18 { pt3dadd( 380.135, 501.262, 54.714, 0.7048 ) }
    apic_18 { pt3dadd( 379.854, 502.315, 55.2941, 0.8056 ) }
    apic_18 { pt3dadd( 379.747, 503.421, 55.9042, 0.7224 ) }
    apic_18 { pt3dadd( 379.495, 504.486, 56.5429, 0.5086 ) }
    apic_18 { pt3dadd( 378.924, 505.42, 57.1875, 0.399 ) }
    apic_18 { pt3dadd( 378.453, 506.435, 57.7982, 0.4058 ) }
    apic_18 { pt3dadd( 378.345, 507.549, 58.3615, 0.5422 ) }
    apic_18 { pt3dadd( 377.943, 508.585, 58.9016, 0.6534 ) }
    apic_18 { pt3dadd( 377.68, 509.681, 59.4042, 0.8602 ) }
    apic_18 { pt3dadd( 377.489, 510.79, 59.8766, 0.7844 ) }
    apic_18 { pt3dadd( 377.263, 511.858, 60.3506, 0.5834 ) }
    apic_18 { pt3dadd( 377.517, 512.958, 60.7858, 0.5048 ) }
    apic_18 { pt3dadd( 377.809, 514.042, 61.1705, 0.534 ) }
    apic_18 { pt3dadd( 377.793, 515.183, 61.5026, 0.423 ) }
    apic_18 { pt3dadd( 377.83, 516.321, 61.794, 0.3336 ) }
    apic_18 { pt3dadd( 377.941, 517.453, 62.0676, 0.2898 ) }
    apic_18 { pt3dadd( 378.076, 518.566, 62.3616, 0.303 ) }
    apic_18 { pt3dadd( 378.518, 519.602, 62.6783, 0.3284 ) }
    apic_18 { pt3dadd( 379.007, 520.629, 63.0112, 0.3682 ) }
    apic_18 { pt3dadd( 379.421, 521.689, 63.3595, 0.4766 ) }
    apic_18 { pt3dadd( 379.544, 522.803, 63.7235, 0.5116 ) }
    apic_18 { pt3dadd( 379.525, 523.942, 64.1102, 0.6956 ) }
    apic_18 { pt3dadd( 379.805, 525.014, 64.5462, 0.6866 ) }
    apic_18 { pt3dadd( 379.9, 526.12, 65.0336, 0.5392 ) }
    apic_18 { pt3dadd( 379.504, 527.091, 65.6118, 0.4442 ) }
    apic_18 { pt3dadd( 379.66, 528.182, 66.2306, 0.5466 ) }
    apic_18 { pt3dadd( 379.425, 529.189, 66.9239, 0.526 ) }
    apic_18 { pt3dadd( 379.331, 530.289, 67.6197, 0.5944 ) }
    apic_18 { pt3dadd( 379.077, 531.399, 68.2595, 0.6638 ) }
    apic_18 { pt3dadd( 378.544, 532.18, 68.9788, 0.8418 ) }
    apic_18 { pt3dadd( 378.188, 532.667, 69.69, 0.9322 ) }
    apic_18 { pt3dadd( 377.763, 533.44, 70.4805, 0.661 ) }
    apic_18 { pt3dadd( 377.327, 534.487, 71.8556, 0.6864 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 39/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 375.881, 488.179, 44.6043, 1.1204 ) }
    apic_3 { pt3dadd( 376.113, 487.064, 44.6659, 0.9952 ) }
    apic_3 { pt3dadd( 376.327, 485.943, 44.749, 0.9202 ) }
    apic_3 { pt3dadd( 376.726, 484.88, 44.8361, 0.9338 ) }
    apic_3 { pt3dadd( 377.292, 483.886, 44.9179, 0.9046 ) }
    apic_3 { pt3dadd( 377.875, 482.902, 44.9994, 0.8844 ) }
    apic_3 { pt3dadd( 378.445, 481.91, 45.0904, 0.9122 ) }
    apic_3 { pt3dadd( 378.966, 480.895, 45.2054, 0.8752 ) }
    apic_3 { pt3dadd( 379.27, 479.809, 45.365, 0.7802 ) }
    apic_3 { pt3dadd( 379.352, 478.679, 45.5759, 0.9608 ) }
    apic_3 { pt3dadd( 379.4, 477.546, 45.822, 1.1646 ) }
    apic_3 { pt3dadd( 379.603, 476.434, 46.0788, 1.2642 ) }
    apic_3 { pt3dadd( 379.999, 475.367, 46.3254, 1.1982 ) }
    apic_3 { pt3dadd( 380.415, 474.305, 46.548, 1.1468 ) }
    apic_3 { pt3dadd( 380.613, 473.192, 46.7418, 1.1652 ) }
    apic_3 { pt3dadd( 380.5, 472.064, 46.9157, 1.104 ) }
    apic_3 { pt3dadd( 380.372, 470.935, 47.0828, 0.9992 ) }
    apic_3 { pt3dadd( 380.508, 469.812, 47.2466, 0.9892 ) }
    apic_3 { pt3dadd( 380.733, 468.692, 47.4032, 0.9912 ) }
    apic_3 { pt3dadd( 380.8, 467.557, 47.5493, 0.8952 ) }
    apic_3 { pt3dadd( 380.756, 466.414, 47.6837, 0.9714 ) }
    apic_3 { pt3dadd( 380.729, 465.272, 47.8052, 1.0248 ) }
    apic_3 { pt3dadd( 380.733, 464.129, 47.917, 1.0928 ) }
    apic_3 { pt3dadd( 380.786, 462.987, 48.0295, 0.912 ) }
    apic_3 { pt3dadd( 380.999, 461.872, 48.1519, 0.9206 ) }
    apic_3 { pt3dadd( 381.276, 460.764, 48.2796, 0.8698 ) }
    apic_3 { pt3dadd( 381.516, 459.647, 48.403, 0.8718 ) }
    apic_3 { pt3dadd( 381.635, 458.513, 48.5142, 0.867 ) }
    apic_3 { pt3dadd( 381.72, 457.372, 48.6077, 0.8982 ) }
    apic_3 { pt3dadd( 381.934, 456.252, 48.6808, 0.9896 ) }
    apic_3 { pt3dadd( 382.161, 455.132, 48.7304, 0.9978 ) }
    apic_3 { pt3dadd( 382.447, 454.026, 48.7715, 1.1076 ) }
    apic_3 { pt3dadd( 382.613, 452.902, 48.8205, 1.081 ) }
    apic_3 { pt3dadd( 382.818, 451.779, 48.8824, 1.0052 ) }
    apic_3 { pt3dadd( 383.131, 450.68, 48.946, 0.994 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 74/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 357.386, 536.088, 52.9729, 0.6476 ) }
    dend_47 { pt3dadd( 357.062, 535.709, 54.3763, 0.2288 ) }
    dend_47 { pt3dadd( 356.112, 535.512, 55.6606, 0.3496 ) }
    dend_47 { pt3dadd( 354.999, 535.469, 56.1775, 0.4338 ) }
    dend_47 { pt3dadd( 353.916, 535.736, 56.7344, 0.471 ) }
    dend_47 { pt3dadd( 352.886, 536.179, 57.3185, 0.4324 ) }
    dend_47 { pt3dadd( 351.81, 536.494, 57.9113, 0.4262 ) }
    dend_47 { pt3dadd( 350.734, 536.824, 58.4979, 0.555 ) }
    dend_47 { pt3dadd( 349.745, 537.351, 59.0722, 0.5684 ) }
    dend_47 { pt3dadd( 348.879, 538.046, 59.6736, 0.5462 ) }
    dend_47 { pt3dadd( 347.893, 538.551, 60.3036, 0.5016 ) }
    dend_47 { pt3dadd( 346.864, 538.966, 60.9557, 0.4356 ) }
    dend_47 { pt3dadd( 345.78, 539.177, 61.6277, 0.4614 ) }
    dend_47 { pt3dadd( 344.741, 539.539, 62.3188, 0.4766 ) }
    dend_47 { pt3dadd( 344.088, 540.418, 63.0193, 0.436 ) }
    dend_47 { pt3dadd( 343.187, 541.062, 63.7076, 0.4636 ) }
    dend_47 { pt3dadd( 342.154, 541.499, 64.367, 0.4744 ) }
    dend_47 { pt3dadd( 341.112, 541.925, 65.0014, 0.4618 ) }
    dend_47 { pt3dadd( 340.096, 542.421, 65.6152, 0.366 ) }
    dend_47 { pt3dadd( 339.1, 542.954, 66.2152, 0.3126 ) }
    dend_47 { pt3dadd( 338.149, 543.505, 66.8478, 0.2988 ) }
    dend_47 { pt3dadd( 337.363, 543.865, 67.6122, 0.3142 ) }
    dend_47 { pt3dadd( 337.082, 544.457, 68.5236, 0.3734 ) }
    dend_47 { pt3dadd( 336.078, 545.005, 69.2658, 0.3338 ) }
    dend_47 { pt3dadd( 335.074, 545.552, 69.8656, 0.3 ) }
    dend_47 { pt3dadd( 334.254, 546.194, 70.5104, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( 333.437, 546.845, 71.1642, 0.2746 ) }
    dend_47 { pt3dadd( 332.587, 547.605, 71.6741, 0.2746 ) }
    dend_47 { pt3dadd( 331.736, 548.367, 72.0846, 0.2746 ) }
    dend_47 { pt3dadd( 330.886, 549.128, 72.4466, 0.2746 ) }
    dend_47 { pt3dadd( 330.036, 549.889, 72.7642, 0.2746 ) }
    dend_47 { pt3dadd( 329.185, 550.651, 73.0447, 0.2748 ) }
    dend_47 { pt3dadd( 328.335, 551.411, 73.3275, 0.275 ) }
    dend_47 { pt3dadd( 327.484, 552.173, 73.6481, 0.2752 ) }
    dend_47 { pt3dadd( 326.634, 552.934, 74.0169, 0.276 ) }
    dend_47 { pt3dadd( 325.783, 553.695, 74.4391, 0.2768 ) }
    dend_47 { pt3dadd( 325.093, 554.189, 74.9932, 0.279 ) }
    dend_47 { pt3dadd( 324.25, 554.721, 75.742, 0.2828 ) }
    dend_47 { pt3dadd( 323.408, 555.253, 76.6237, 0.2898 ) }
    dend_47 { pt3dadd( 322.566, 555.784, 77.5821, 0.303 ) }
    dend_47 { pt3dadd( 321.605, 556.247, 78.4888, 0.3264 ) }
    dend_47 { pt3dadd( 320.55, 556.657, 79.2666, 0.3738 ) }
    dend_47 { pt3dadd( 319.548, 557.173, 79.9028, 0.4436 ) }
    dend_47 { pt3dadd( 318.705, 557.929, 80.4364, 0.6616 ) }
    dend_47 { pt3dadd( 317.763, 558.528, 80.9085, 0.6354 ) }
    dend_47 { pt3dadd( 316.703, 558.957, 81.3436, 0.617 ) }
    dend_47 { pt3dadd( 315.716, 559.421, 81.8975, 0.4354 ) }
    dend_47 { pt3dadd( 314.762, 559.899, 82.616, 0.3576 ) }
    dend_47 { pt3dadd( 313.808, 560.377, 83.4767, 0.329 ) }
    dend_47 { pt3dadd( 312.854, 560.856, 84.4556, 0.4014 ) }
    dend_47 { pt3dadd( 311.9, 561.334, 85.5319, 0.385 ) }
    dend_47 { pt3dadd( 310.946, 561.813, 86.6796, 0.3982 ) }
    dend_47 { pt3dadd( 310.093, 562.322, 87.9124, 0.4414 ) }
    dend_47 { pt3dadd( 309.358, 562.867, 89.255, 0.6572 ) }
    dend_47 { pt3dadd( 308.756, 563.471, 90.7284, 0.6272 ) }
    dend_47 { pt3dadd( 308.247, 564.116, 92.2751, 0.6018 ) }
    dend_47 { pt3dadd( 307.852, 564.591, 93.6835, 0.4068 ) }
    dend_47 { pt3dadd( 307.292, 565.295, 94.9785, 0.305 ) }
    dend_47 { pt3dadd( 306.784, 565.658, 96.199, 0.2288 ) }
    dend_47 { pt3dadd( 306.198, 566.154, 98.8016, 0.2288 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 34/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 357.386, 536.088, 52.9729, 0.6476 ) }
    dend_46 { pt3dadd( 356.777, 536.465, 53.0743, 0.5386 ) }
    dend_46 { pt3dadd( 355.754, 536.97, 53.1275, 0.5516 ) }
    dend_46 { pt3dadd( 354.717, 537.453, 53.1401, 0.447 ) }
    dend_46 { pt3dadd( 353.707, 537.989, 53.1244, 0.4208 ) }
    dend_46 { pt3dadd( 352.702, 538.536, 53.0942, 0.4738 ) }
    dend_46 { pt3dadd( 351.719, 539.12, 53.0569, 0.5354 ) }
    dend_46 { pt3dadd( 350.818, 539.82, 53.0135, 0.6002 ) }
    dend_46 { pt3dadd( 349.776, 540.179, 52.9556, 0.5006 ) }
    dend_46 { pt3dadd( 348.636, 540.256, 52.8965, 0.4678 ) }
    dend_46 { pt3dadd( 347.628, 540.734, 52.8444, 0.5852 ) }
    dend_46 { pt3dadd( 346.696, 541.397, 52.7929, 0.6246 ) }
    dend_46 { pt3dadd( 345.674, 541.898, 52.7321, 0.6472 ) }
    dend_46 { pt3dadd( 344.604, 542.299, 52.677, 0.7042 ) }
    dend_46 { pt3dadd( 343.613, 542.865, 52.6266, 0.7392 ) }
    dend_46 { pt3dadd( 342.641, 543.466, 52.5633, 0.6878 ) }
    dend_46 { pt3dadd( 341.681, 544.084, 52.4877, 0.7006 ) }
    dend_46 { pt3dadd( 340.943, 544.949, 52.4124, 0.655 ) }
    dend_46 { pt3dadd( 340.415, 545.959, 52.3463, 0.6802 ) }
    dend_46 { pt3dadd( 339.972, 547.014, 52.2936, 0.651 ) }
    dend_46 { pt3dadd( 339.543, 548.073, 52.2617, 0.5088 ) }
    dend_46 { pt3dadd( 339.048, 549.105, 52.2542, 0.4424 ) }
    dend_46 { pt3dadd( 338.531, 550.126, 52.2687, 0.5074 ) }
    dend_46 { pt3dadd( 337.99, 551.133, 52.3018, 0.6292 ) }
    dend_46 { pt3dadd( 337.425, 552.128, 52.3552, 0.621 ) }
    dend_46 { pt3dadd( 337.123, 553.225, 52.4269, 0.5974 ) }
    dend_46 { pt3dadd( 336.744, 554.302, 52.495, 0.5924 ) }
    dend_46 { pt3dadd( 336.082, 555.231, 52.5633, 0.6254 ) }
    dend_46 { pt3dadd( 335.258, 556.023, 52.6417, 0.7104 ) }
    dend_46 { pt3dadd( 334.47, 556.851, 52.7369, 0.7504 ) }
    dend_46 { pt3dadd( 333.645, 557.643, 52.8363, 0.7096 ) }
    dend_46 { pt3dadd( 332.875, 558.489, 52.9486, 0.7366 ) }
    dend_46 { pt3dadd( 332.331, 559.493, 53.0855, 0.7446 ) }
    dend_46 { pt3dadd( 331.73, 560.448, 53.2661, 0.7344 ) }
    dend_46 { pt3dadd( 330.76, 561.022, 53.4873, 0.607 ) }
    dend_46 { pt3dadd( 329.996, 561.86, 53.7264, 0.6704 ) }
    dend_46 { pt3dadd( 329.302, 562.763, 53.9504, 0.7066 ) }
    dend_46 { pt3dadd( 328.471, 563.519, 54.1542, 0.7104 ) }
    dend_46 { pt3dadd( 327.559, 564.165, 54.3248, 0.5676 ) }
    dend_46 { pt3dadd( 326.94, 565.12, 54.4544, 0.5716 ) }
    dend_46 { pt3dadd( 326.45, 566.152, 54.5507, 0.6484 ) }
    dend_46 { pt3dadd( 325.884, 567.14, 54.6171, 0.6822 ) }
    dend_46 { pt3dadd( 325.267, 568.1, 54.6602, 0.5866 ) }
    dend_46 { pt3dadd( 324.737, 569.114, 54.6888, 0.4914 ) }
    dend_46 { pt3dadd( 324.397, 570.188, 54.7196, 0.3734 ) }
    dend_46 { pt3dadd( 324.172, 571.306, 54.7792, 0.3274 ) }
    dend_46 { pt3dadd( 323.777, 572.374, 54.8912, 0.32 ) }
    dend_46 { pt3dadd( 323.306, 573.414, 55.0595, 0.3844 ) }
    dend_46 { pt3dadd( 322.835, 574.453, 55.2843, 0.3542 ) }
    dend_46 { pt3dadd( 322.364, 575.489, 55.5666, 0.3384 ) }
    dend_46 { pt3dadd( 321.906, 576.53, 55.9026, 0.3416 ) }
    dend_46 { pt3dadd( 321.502, 577.592, 56.2881, 0.4194 ) }
    dend_46 { pt3dadd( 320.987, 578.591, 56.7364, 0.4446 ) }
    dend_46 { pt3dadd( 320.267, 579.373, 57.2844, 0.3812 ) }
    dend_46 { pt3dadd( 320.066, 580.448, 57.895, 0.3402 ) }
    dend_46 { pt3dadd( 319.94, 581.544, 58.5315, 0.3496 ) }
    dend_46 { pt3dadd( 319.897, 582.663, 59.1525, 0.4118 ) }
    dend_46 { pt3dadd( 319.802, 583.781, 59.7355, 0.5384 ) }
    dend_46 { pt3dadd( 319.409, 584.844, 60.272, 0.7182 ) }
    dend_46 { pt3dadd( 319.071, 585.925, 60.7768, 0.6322 ) }
    dend_46 { pt3dadd( 318.754, 587.007, 61.2797, 0.6782 ) }
    dend_46 { pt3dadd( 318.438, 588.082, 61.8022, 0.6814 ) }
    dend_46 { pt3dadd( 318.121, 589.152, 62.3582, 0.6266 ) }
    dend_46 { pt3dadd( 317.784, 590.206, 62.9538, 0.5914 ) }
    dend_46 { pt3dadd( 317.444, 591.255, 63.5796, 0.435 ) }
    dend_46 { pt3dadd( 317.087, 592.297, 64.218, 0.3566 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_46 { pt3dadd( 316.579, 593.265, 64.8435, 0.3272 ) }
    dend_46 { pt3dadd( 315.811, 594.084, 65.4273, 0.3988 ) }
    dend_46 { pt3dadd( 315.039, 594.907, 65.9588, 0.3754 ) }
    dend_46 { pt3dadd( 314.263, 595.733, 66.4364, 0.4026 ) }
    dend_46 { pt3dadd( 313.473, 596.549, 66.8679, 0.341 ) }
    dend_46 { pt3dadd( 312.646, 597.325, 67.2706, 0.3128 ) }
    dend_46 { pt3dadd( 311.753, 598.011, 67.6771, 0.2994 ) }
    dend_46 { pt3dadd( 310.926, 598.767, 68.0963, 0.3152 ) }
    dend_46 { pt3dadd( 310.318, 599.7, 68.5157, 0.3756 ) }
    dend_46 { pt3dadd( 310.032, 600.79, 68.9276, 0.3382 ) }
    dend_46 { pt3dadd( 309.848, 601.908, 69.33, 0.308 ) }
    dend_46 { pt3dadd( 309.561, 603.0, 69.7292, 0.2892 ) }
    dend_46 { pt3dadd( 309.211, 604.077, 70.1187, 0.303 ) }
    dend_46 { pt3dadd( 308.851, 605.153, 70.4936, 0.322 ) }
    dend_46 { pt3dadd( 308.492, 606.231, 70.856, 0.3878 ) }
    dend_46 { pt3dadd( 308.112, 607.302, 71.2079, 0.3618 ) }
    dend_46 { pt3dadd( 307.66, 608.341, 71.5543, 0.3464 ) }
    dend_46 { pt3dadd( 307.153, 609.356, 71.9004, 0.386 ) }
    dend_46 { pt3dadd( 306.646, 610.37, 72.2512, 0.3584 ) }
    dend_46 { pt3dadd( 306.297, 611.434, 72.6085, 0.3402 ) }
    dend_46 { pt3dadd( 306.306, 612.554, 72.961, 0.3746 ) }
    dend_46 { pt3dadd( 306.505, 613.677, 73.299, 0.3362 ) }
    dend_46 { pt3dadd( 306.698, 614.799, 73.6302, 0.304 ) }
    dend_46 { pt3dadd( 306.935, 615.911, 73.9693, 0.2822 ) }
    dend_46 { pt3dadd( 307.348, 616.959, 74.3322, 0.2886 ) }
    dend_46 { pt3dadd( 307.887, 617.95, 74.7326, 0.3004 ) }
    dend_46 { pt3dadd( 308.465, 618.912, 75.1766, 0.322 ) }
    dend_46 { pt3dadd( 309.153, 619.793, 75.654, 0.3642 ) }
    dend_46 { pt3dadd( 309.934, 620.609, 76.1443, 0.4322 ) }
    dend_46 { pt3dadd( 310.739, 621.399, 76.6374, 0.608 ) }
    dend_46 { pt3dadd( 311.553, 622.182, 77.1313, 0.6928 ) }
    dend_46 { pt3dadd( 312.507, 622.749, 77.6266, 0.6476 ) }
    dend_46 { pt3dadd( 313.531, 623.211, 78.1502, 0.6322 ) }
    dend_46 { pt3dadd( 314.451, 623.839, 78.6912, 0.5 ) }
    dend_46 { pt3dadd( 315.301, 624.577, 79.2274, 0.5282 ) }
    dend_46 { pt3dadd( 315.905, 625.512, 79.7325, 0.3984 ) }
    dend_46 { pt3dadd( 316.08, 626.597, 80.225, 0.356 ) }
    dend_46 { pt3dadd( 316.532, 627.407, 81.6379, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 38/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 341.802, 511.956, 36.9085, 0.427 ) }
    dend_18 { pt3dadd( 341.169, 511.097, 36.9242, 0.4948 ) }
    dend_18 { pt3dadd( 340.268, 510.395, 36.934, 0.527 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 41/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 341.802, 511.956, 36.9085, 0.427 ) }
    dend_17 { pt3dadd( 341.522, 512.305, 36.3717, 0.4576 ) }
    dend_17 { pt3dadd( 340.613, 512.705, 35.2957, 0.5016 ) }
    dend_17 { pt3dadd( 339.489, 512.847, 34.8771, 0.6038 ) }
    dend_17 { pt3dadd( 338.376, 512.896, 34.431, 0.6432 ) }
    dend_17 { pt3dadd( 337.311, 512.544, 33.9973, 0.5306 ) }
    dend_17 { pt3dadd( 336.557, 512.796, 33.563, 0.5368 ) }
    dend_17 { pt3dadd( 335.779, 513.594, 33.1467, 0.4184 ) }
    dend_17 { pt3dadd( 334.839, 514.215, 32.7757, 0.373 ) }
    dend_17 { pt3dadd( 334.585, 515.315, 32.4708, 0.3588 ) }
    dend_17 { pt3dadd( 334.009, 516.239, 32.2272, 0.4508 ) }
    dend_17 { pt3dadd( 333.185, 517.017, 32.0272, 0.5032 ) }
    dend_17 { pt3dadd( 332.384, 517.824, 31.8444, 0.4878 ) }
    dend_17 { pt3dadd( 331.329, 518.208, 31.6574, 0.5478 ) }
    dend_17 { pt3dadd( 330.599, 519.052, 31.4485, 0.6886 ) }
    dend_17 { pt3dadd( 330.187, 520.108, 31.1959, 0.5752 ) }
    dend_17 { pt3dadd( 329.982, 521.159, 30.9005, 0.5832 ) }
    dend_17 { pt3dadd( 330.565, 522.114, 30.5906, 0.4522 ) }
    dend_17 { pt3dadd( 330.051, 523.067, 30.298, 0.461 ) }
    dend_17 { pt3dadd( 329.703, 524.141, 30.0294, 0.3978 ) }
    dend_17 { pt3dadd( 329.169, 525.094, 29.7671, 0.439 ) }
    dend_17 { pt3dadd( 328.86, 526.111, 29.4991, 0.434 ) }
    dend_17 { pt3dadd( 328.102, 526.939, 29.2085, 0.3618 ) }
    dend_17 { pt3dadd( 327.271, 527.688, 28.9122, 0.3048 ) }
    dend_17 { pt3dadd( 326.304, 528.286, 28.6303, 0.2832 ) }
    dend_17 { pt3dadd( 325.275, 528.777, 28.3917, 0.2908 ) }
    dend_17 { pt3dadd( 324.311, 528.529, 28.1775, 0.3044 ) }
    dend_17 { pt3dadd( 323.457, 529.253, 27.9863, 0.3304 ) }
    dend_17 { pt3dadd( 322.376, 529.528, 27.8359, 0.3752 ) }
    dend_17 { pt3dadd( 321.256, 529.528, 27.741, 0.476 ) }
    dend_17 { pt3dadd( 320.178, 529.627, 27.6945, 0.5764 ) }
    dend_17 { pt3dadd( 319.784, 528.684, 27.692, 0.4942 ) }
    dend_17 { pt3dadd( 319.523, 527.573, 27.7178, 0.5 ) }
    dend_17 { pt3dadd( 318.811, 526.708, 27.7595, 0.4322 ) }
    dend_17 { pt3dadd( 318.372, 525.692, 28.0686, 0.6864 ) }
    // Section: apic_24, id: apic_24, parent: apic_22 (entry count 76/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 378.388, 548.172, 67.7068, 0.662 ) }
    apic_24 { pt3dadd( 379.035, 549.009, 68.0722, 0.5732 ) }
    apic_24 { pt3dadd( 379.592, 549.999, 68.3567, 0.5764 ) }
    apic_24 { pt3dadd( 379.942, 551.084, 68.5779, 0.4554 ) }
    apic_24 { pt3dadd( 380.429, 552.113, 68.7616, 0.3892 ) }
    apic_24 { pt3dadd( 380.61, 553.227, 68.9349, 0.4132 ) }
    apic_24 { pt3dadd( 380.739, 554.125, 69.069, 0.4332 ) }
    apic_24 { pt3dadd( 380.793, 555.252, 69.2401, 0.36 ) }
    apic_24 { pt3dadd( 380.719, 556.388, 69.3874, 0.3012 ) }
    apic_24 { pt3dadd( 380.605, 557.526, 69.4949, 0.2768 ) }
    apic_24 { pt3dadd( 380.501, 558.666, 69.5677, 0.2786 ) }
    apic_24 { pt3dadd( 380.397, 559.805, 69.6136, 0.2822 ) }
    apic_24 { pt3dadd( 380.293, 560.944, 69.6427, 0.2888 ) }
    apic_24 { pt3dadd( 380.189, 562.083, 69.6564, 0.3006 ) }
    apic_24 { pt3dadd( 380.123, 563.224, 69.6794, 0.3238 ) }
    apic_24 { pt3dadd( 380.064, 564.366, 69.7124, 0.3626 ) }
    apic_24 { pt3dadd( 380.007, 565.508, 69.75, 0.4528 ) }
    apic_24 { pt3dadd( 379.949, 566.649, 69.7872, 0.5322 ) }
    apic_24 { pt3dadd( 379.854, 567.653, 69.7463, 0.4198 ) }
    apic_24 { pt3dadd( 379.78, 568.794, 69.708, 0.3276 ) }
    apic_24 { pt3dadd( 379.707, 569.936, 69.6727, 0.2786 ) }
    apic_24 { pt3dadd( 379.634, 571.078, 69.6433, 0.2826 ) }
    apic_24 { pt3dadd( 379.204, 572.08, 69.6217, 0.288 ) }
    apic_24 { pt3dadd( 378.627, 573.029, 69.6102, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_24 { pt3dadd( 378.609, 574.161, 69.6102, 0.305 ) }
    apic_24 { pt3dadd( 378.934, 575.258, 69.6102, 0.4576 ) }
    // Section: apic_23, id: apic_23, parent: apic_22 (entry count 2/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 378.388, 548.172, 67.7068, 0.662 ) }
    apic_23 { pt3dadd( 377.792, 548.587, 69.1317, 0.6864 ) }
    apic_23 { pt3dadd( 377.086, 549.3, 71.0769, 0.4602 ) }
    apic_23 { pt3dadd( 376.211, 549.884, 71.8808, 0.3546 ) }
    apic_23 { pt3dadd( 376.158, 550.804, 72.8636, 0.331 ) }
    apic_23 { pt3dadd( 375.685, 551.616, 74.0132, 0.369 ) }
    apic_23 { pt3dadd( 374.983, 552.396, 75.2052, 0.5004 ) }
    apic_23 { pt3dadd( 374.303, 553.124, 76.4378, 0.4474 ) }
    apic_23 { pt3dadd( 374.229, 554.016, 77.6849, 0.4152 ) }
    apic_23 { pt3dadd( 373.398, 554.525, 78.8875, 0.492 ) }
    apic_23 { pt3dadd( 372.853, 555.236, 80.0744, 0.4304 ) }
    apic_23 { pt3dadd( 372.629, 556.098, 81.251, 0.3904 ) }
    apic_23 { pt3dadd( 372.652, 556.917, 82.2293, 0.4152 ) }
    apic_23 { pt3dadd( 372.587, 558.045, 83.0096, 0.4368 ) }
    apic_23 { pt3dadd( 372.411, 559.154, 83.634, 0.3672 ) }
    apic_23 { pt3dadd( 372.312, 560.192, 84.2691, 0.3134 ) }
    apic_23 { pt3dadd( 372.214, 561.229, 84.8999, 0.305 ) }
    apic_23 { pt3dadd( 371.733, 562.114, 85.4409, 0.305 ) }
    apic_23 { pt3dadd( 370.844, 562.833, 86.2268, 0.4576 ) }
    // Section: apic_17, id: apic_17, parent: apic_3 (entry count 21/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 383.131, 450.68, 48.946, 0.994 ) }
    apic_17 { pt3dadd( 383.421, 450.186, 50.6755, 0.2288 ) }
    apic_17 { pt3dadd( 382.522, 449.917, 51.8907, 0.2818 ) }
    apic_17 { pt3dadd( 381.48, 449.522, 52.367, 0.2882 ) }
    apic_17 { pt3dadd( 380.942, 448.642, 52.9348, 0.2998 ) }
    apic_17 { pt3dadd( 381.802, 447.926, 53.5416, 0.3232 ) }
    apic_17 { pt3dadd( 382.549, 447.461, 54.2321, 0.3544 ) }
    apic_17 { pt3dadd( 382.087, 446.475, 54.9604, 0.4736 ) }
    apic_17 { pt3dadd( 381.641, 445.456, 55.673, 0.3956 ) }
    apic_17 { pt3dadd( 381.046, 444.546, 56.3752, 0.33 ) }
    apic_17 { pt3dadd( 380.109, 444.006, 57.0842, 0.2828 ) }
    apic_17 { pt3dadd( 380.138, 443.029, 57.7934, 0.2898 ) }
    apic_17 { pt3dadd( 380.104, 441.91, 58.4839, 0.3024 ) }
    apic_17 { pt3dadd( 379.03, 441.884, 59.1816, 0.3284 ) }
    apic_17 { pt3dadd( 378.002, 442.123, 59.8746, 0.364 ) }
    apic_17 { pt3dadd( 377.444, 443.015, 60.6256, 0.4912 ) }
    apic_17 { pt3dadd( 376.626, 442.958, 61.4527, 0.4292 ) }
    apic_17 { pt3dadd( 376.305, 441.991, 62.3101, 0.387 ) }
    apic_17 { pt3dadd( 375.671, 441.109, 63.1579, 0.4148 ) }
    apic_17 { pt3dadd( 374.597, 440.917, 63.9755, 0.4064 ) }
    apic_17 { pt3dadd( 373.823, 440.133, 64.7517, 0.4544 ) }
    apic_17 { pt3dadd( 373.071, 439.312, 65.4752, 0.4638 ) }
    apic_17 { pt3dadd( 372.347, 438.467, 66.1578, 0.4114 ) }
    apic_17 { pt3dadd( 371.564, 437.684, 66.8223, 0.423 ) }
    apic_17 { pt3dadd( 371.024, 436.773, 67.4873, 0.3734 ) }
    apic_17 { pt3dadd( 370.722, 435.794, 68.1464, 0.399 ) }
    apic_17 { pt3dadd( 370.556, 434.674, 68.7551, 0.334 ) }
    apic_17 { pt3dadd( 370.488, 433.54, 69.3249, 0.3002 ) }
    apic_17 { pt3dadd( 370.505, 432.414, 69.8944, 0.275 ) }
    apic_17 { pt3dadd( 370.55, 431.335, 70.5004, 0.2754 ) }
    apic_17 { pt3dadd( 369.908, 430.46, 71.1483, 0.2764 ) }
    apic_17 { pt3dadd( 369.006, 429.84, 71.8528, 0.278 ) }
    apic_17 { pt3dadd( 368.478, 428.931, 72.6496, 0.281 ) }
    apic_17 { pt3dadd( 368.042, 428.111, 73.5879, 0.2864 ) }
    apic_17 { pt3dadd( 367.496, 427.237, 74.564, 0.2968 ) }
    apic_17 { pt3dadd( 367.153, 426.188, 75.4916, 0.3156 ) }
    apic_17 { pt3dadd( 366.952, 425.101, 76.3792, 0.3508 ) }
    apic_17 { pt3dadd( 366.728, 424.019, 77.2302, 0.415 ) }
    apic_17 { pt3dadd( 366.204, 423.109, 78.0419, 0.5396 ) }
    apic_17 { pt3dadd( 365.37, 422.407, 78.8558, 0.7438 ) }
    apic_17 { pt3dadd( 364.811, 421.511, 79.7143, 0.564 ) }
    apic_17 { pt3dadd( 364.426, 420.51, 80.6173, 0.4268 ) }
    apic_17 { pt3dadd( 364.065, 419.498, 81.5517, 0.3634 ) }
    apic_17 { pt3dadd( 363.704, 418.482, 82.4986, 0.4618 ) }
    apic_17 { pt3dadd( 363.825, 417.483, 83.4674, 0.5126 ) }
    apic_17 { pt3dadd( 363.457, 416.689, 84.5197, 0.558 ) }
    apic_17 { pt3dadd( 363.064, 415.996, 85.5089, 0.4206 ) }
    apic_17 { pt3dadd( 362.466, 415.269, 86.4522, 0.329 ) }
    apic_17 { pt3dadd( 361.545, 414.594, 87.1528, 0.2814 ) }
    apic_17 { pt3dadd( 360.69, 413.939, 87.6798, 0.2872 ) }
    apic_17 { pt3dadd( 360.684, 412.927, 88.209, 0.2976 ) }
    apic_17 { pt3dadd( 361.244, 412.0, 88.5623, 0.3194 ) }
    apic_17 { pt3dadd( 362.245, 411.448, 88.7978, 0.3476 ) }
    apic_17 { pt3dadd( 362.618, 410.458, 88.9647, 0.4604 ) }
    apic_17 { pt3dadd( 362.788, 409.328, 89.0999, 0.373 ) }
    apic_17 { pt3dadd( 362.957, 408.198, 89.2027, 0.2796 ) }
    apic_17 { pt3dadd( 363.126, 407.067, 89.3704, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 78/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 383.131, 450.68, 48.946, 0.994 ) }
    apic_4 { pt3dadd( 383.52, 449.315, 49.0524, 0.8192 ) }
    apic_4 { pt3dadd( 383.829, 448.214, 49.0991, 0.8738 ) }
    apic_4 { pt3dadd( 384.151, 447.116, 49.1473, 0.8608 ) }
    apic_4 { pt3dadd( 384.415, 446.003, 49.2044, 0.9342 ) }
    apic_4 { pt3dadd( 384.66, 444.89, 49.2755, 0.8266 ) }
    apic_4 { pt3dadd( 385.078, 443.828, 49.3724, 0.894 ) }
    apic_4 { pt3dadd( 385.435, 442.745, 49.488, 0.8688 ) }
    apic_4 { pt3dadd( 385.87, 441.688, 49.609, 0.8638 ) }
    apic_4 { pt3dadd( 386.377, 440.664, 49.7252, 0.8804 ) }
    apic_4 { pt3dadd( 386.856, 439.629, 49.8305, 0.7854 ) }
    apic_4 { pt3dadd( 387.132, 438.524, 49.9232, 0.7626 ) }
    apic_4 { pt3dadd( 387.237, 437.389, 50.0044, 0.8916 ) }
    apic_4 { pt3dadd( 387.555, 436.293, 50.0802, 0.9852 ) }
    apic_4 { pt3dadd( 387.988, 435.235, 50.157, 0.9502 ) }
    apic_4 { pt3dadd( 388.298, 434.135, 50.2424, 0.9834 ) }
    apic_4 { pt3dadd( 388.43, 433.014, 50.346, 0.7978 ) }
    apic_4 { pt3dadd( 388.236, 431.891, 50.4563, 0.7362 ) }
    apic_4 { pt3dadd( 387.918, 430.793, 50.5618, 0.6246 ) }
    apic_4 { pt3dadd( 387.666, 429.964, 50.652, 0.6354 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 98/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 340.268, 510.395, 36.934, 0.527 ) }
    dend_22 { pt3dadd( 339.186, 510.032, 36.1077, 0.5698 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_22 { pt3dadd( 338.076, 510.133, 35.8506, 0.588 ) }
    dend_22 { pt3dadd( 336.948, 510.287, 35.5746, 0.617 ) }
    dend_22 { pt3dadd( 335.818, 510.217, 35.2836, 0.6956 ) }
    dend_22 { pt3dadd( 334.698, 510.024, 34.9849, 0.7218 ) }
    dend_22 { pt3dadd( 333.569, 509.944, 34.6856, 0.662 ) }
    dend_22 { pt3dadd( 332.443, 510.072, 34.4014, 0.6212 ) }
    dend_22 { pt3dadd( 331.31, 510.145, 34.1278, 0.6624 ) }
    dend_22 { pt3dadd( 330.196, 509.947, 33.8724, 0.629 ) }
    dend_22 { pt3dadd( 329.08, 509.713, 33.6521, 0.643 ) }
    dend_22 { pt3dadd( 327.953, 509.533, 33.4782, 0.5278 ) }
    dend_22 { pt3dadd( 326.876, 509.868, 33.3558, 0.5424 ) }
    dend_22 { pt3dadd( 326.053, 510.653, 33.2844, 0.6064 ) }
    dend_22 { pt3dadd( 325.055, 511.208, 33.2548, 0.5464 ) }
    dend_22 { pt3dadd( 323.937, 511.453, 33.2665, 0.6152 ) }
    dend_22 { pt3dadd( 322.817, 511.679, 33.3208, 0.5542 ) }
    dend_22 { pt3dadd( 321.698, 511.907, 33.4149, 0.6726 ) }
    dend_22 { pt3dadd( 320.596, 512.193, 33.5364, 0.6812 ) }
    dend_22 { pt3dadd( 319.539, 512.622, 33.6652, 0.807 ) }
    dend_22 { pt3dadd( 318.536, 513.162, 33.7834, 0.7342 ) }
    dend_22 { pt3dadd( 317.423, 513.32, 33.8775, 0.7136 ) }
    dend_22 { pt3dadd( 316.369, 512.884, 33.9374, 0.807 ) }
    dend_22 { pt3dadd( 315.36, 512.419, 33.9612, 0.7986 ) }
    dend_22 { pt3dadd( 314.289, 512.722, 33.9606, 0.7488 ) }
    dend_22 { pt3dadd( 313.32, 513.309, 33.9416, 0.5932 ) }
    dend_22 { pt3dadd( 312.234, 513.669, 33.9105, 0.6128 ) }
    dend_22 { pt3dadd( 311.176, 514.085, 33.8775, 0.7566 ) }
    dend_22 { pt3dadd( 310.199, 514.68, 33.8453, 0.7274 ) }
    dend_22 { pt3dadd( 309.267, 515.34, 33.81, 0.7386 ) }
    dend_22 { pt3dadd( 308.347, 516.016, 33.7756, 0.6706 ) }
    dend_22 { pt3dadd( 307.515, 516.766, 33.7288, 0.7446 ) }
    dend_22 { pt3dadd( 306.584, 517.253, 33.6563, 0.5996 ) }
    dend_22 { pt3dadd( 305.462, 517.142, 33.563, 0.5546 ) }
    dend_22 { pt3dadd( 304.376, 516.795, 33.448, 0.758 ) }
    dend_22 { pt3dadd( 303.335, 516.334, 33.3054, 0.6592 ) }
    dend_22 { pt3dadd( 302.223, 516.113, 33.1652, 0.7268 ) }
    dend_22 { pt3dadd( 301.179, 516.522, 33.0406, 0.548 ) }
    dend_22 { pt3dadd( 300.403, 517.363, 32.914, 0.5502 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 37/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 340.268, 510.395, 36.934, 0.527 ) }
    dend_19 { pt3dadd( 339.73, 509.861, 36.9418, 0.5848 ) }
    dend_19 { pt3dadd( 338.948, 509.027, 36.962, 0.4708 ) }
    dend_19 { pt3dadd( 338.275, 508.104, 37.0202, 0.419 ) }
    dend_19 { pt3dadd( 337.645, 507.194, 37.1277, 0.4634 ) }
    dend_19 { pt3dadd( 336.527, 507.028, 37.2996, 0.5512 ) }
    dend_19 { pt3dadd( 335.407, 507.067, 37.5231, 0.456 ) }
    dend_19 { pt3dadd( 334.466, 506.532, 37.7955, 0.3904 ) }
    dend_19 { pt3dadd( 333.987, 505.514, 38.1349, 0.4156 ) }
    dend_19 { pt3dadd( 333.629, 504.447, 38.514, 0.4372 ) }
    dend_19 { pt3dadd( 333.179, 503.439, 38.9231, 0.3676 ) }
    dend_19 { pt3dadd( 332.499, 503.877, 39.3568, 0.3156 ) }
    dend_19 { pt3dadd( 331.4, 503.874, 39.762, 0.303 ) }
    dend_19 { pt3dadd( 330.386, 503.377, 40.1187, 0.3292 ) }
    dend_19 { pt3dadd( 329.434, 502.755, 40.4158, 0.3656 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 52/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 387.666, 429.964, 50.652, 0.6354 ) }
    apic_6 { pt3dadd( 387.225, 428.771, 50.7786, 0.5246 ) }
    apic_6 { pt3dadd( 387.363, 427.698, 50.8332, 0.5112 ) }
    apic_6 { pt3dadd( 387.997, 426.76, 50.9116, 0.6712 ) }
    apic_6 { pt3dadd( 388.358, 425.682, 51.0202, 0.7552 ) }
    apic_6 { pt3dadd( 388.521, 424.557, 51.1588, 0.8024 ) }
    apic_6 { pt3dadd( 388.644, 423.431, 51.3246, 0.7284 ) }
    apic_6 { pt3dadd( 388.932, 422.329, 51.5026, 0.9174 ) }
    apic_6 { pt3dadd( 389.235, 421.228, 51.6631, 1.0588 ) }
    apic_6 { pt3dadd( 389.423, 420.102, 51.7846, 1.1906 ) }
    apic_6 { pt3dadd( 389.628, 418.977, 51.8717, 1.1522 ) }
    apic_6 { pt3dadd( 389.836, 417.853, 51.9352, 1.0824 ) }
    apic_6 { pt3dadd( 390.07, 416.733, 51.982, 1.1738 ) }
    apic_6 { pt3dadd( 390.269, 415.607, 52.0195, 1.1874 ) }
    apic_6 { pt3dadd( 390.423, 414.474, 52.0542, 1.2816 ) }
    apic_6 { pt3dadd( 390.646, 413.352, 52.0887, 1.1232 ) }
    apic_6 { pt3dadd( 390.808, 412.221, 52.1223, 1.071 ) }
    apic_6 { pt3dadd( 391.028, 411.1, 52.155, 1.176 ) }
    apic_6 { pt3dadd( 391.261, 409.98, 52.1895, 1.3062 ) }
    apic_6 { pt3dadd( 391.531, 408.868, 52.2284, 1.1738 ) }
    apic_6 { pt3dadd( 391.675, 407.737, 52.2754, 1.1408 ) }
    apic_6 { pt3dadd( 391.706, 406.594, 52.3337, 1.193 ) }
    apic_6 { pt3dadd( 391.722, 405.45, 52.4048, 1.198 ) }
    apic_6 { pt3dadd( 391.825, 404.311, 52.4916, 1.1932 ) }
    apic_6 { pt3dadd( 392.074, 403.199, 52.6028, 1.2536 ) }
    apic_6 { pt3dadd( 392.394, 402.105, 52.7383, 1.2574 ) }
    apic_6 { pt3dadd( 392.829, 401.05, 52.8861, 1.3314 ) }
    apic_6 { pt3dadd( 393.302, 400.008, 53.0303, 1.375 ) }
    apic_6 { pt3dadd( 393.976, 397.84, 53.3394, 1.3918 ) }
    apic_6 { pt3dadd( 394.578, 395.657, 53.7076, 1.2404 ) }
    apic_6 { pt3dadd( 394.952, 394.579, 53.8986, 1.0818 ) }
    apic_6 { pt3dadd( 395.319, 393.498, 54.0786, 1.0536 ) }
    apic_6 { pt3dadd( 395.633, 392.4, 54.2371, 1.083 ) }
    apic_6 { pt3dadd( 395.557, 391.265, 54.3698, 0.972 ) }
    apic_6 { pt3dadd( 395.513, 390.122, 54.4807, 0.8822 ) }
    apic_6 { pt3dadd( 395.946, 389.074, 54.5773, 0.8384 ) }
    apic_6 { pt3dadd( 396.254, 387.974, 54.6692, 0.8504 ) }
    apic_6 { pt3dadd( 396.368, 386.838, 54.7714, 0.8742 ) }
    apic_6 { pt3dadd( 396.681, 385.742, 54.8923, 0.9142 ) }
    apic_6 { pt3dadd( 396.919, 384.625, 55.0222, 1.0064 ) }
    apic_6 { pt3dadd( 397.197, 383.516, 55.1446, 1.0898 ) }
    apic_6 { pt3dadd( 397.386, 382.388, 55.2541, 0.9846 ) }
    apic_6 { pt3dadd( 397.865, 381.35, 55.3722, 0.9054 ) }
    apic_6 { pt3dadd( 398.357, 380.324, 55.5041, 0.8816 ) }
    apic_6 { pt3dadd( 398.193, 379.195, 55.648, 0.9264 ) }
    apic_6 { pt3dadd( 398.333, 378.062, 55.8082, 1.0364 ) }
    apic_6 { pt3dadd( 398.646, 376.969, 55.9966, 1.1102 ) }
    apic_6 { pt3dadd( 398.996, 375.884, 56.1966, 1.1932 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_6 { pt3dadd( 399.479, 374.85, 56.3912, 1.1504 ) }
    apic_6 { pt3dadd( 399.883, 373.783, 56.5732, 1.1092 ) }
    apic_6 { pt3dadd( 400.045, 372.652, 56.74, 1.0776 ) }
    apic_6 { pt3dadd( 400.379, 371.56, 56.8924, 1.0298 ) }
    apic_6 { pt3dadd( 400.737, 370.474, 57.0357, 1.1186 ) }
    apic_6 { pt3dadd( 401.084, 369.388, 57.1866, 1.1078 ) }
    apic_6 { pt3dadd( 401.507, 368.33, 57.3376, 1.0244 ) }
    apic_6 { pt3dadd( 402.065, 367.334, 57.4815, 1.177 ) }
    apic_6 { pt3dadd( 402.614, 366.333, 57.6156, 1.3412 ) }
    apic_6 { pt3dadd( 403.051, 365.278, 57.7175, 1.3062 ) }
    apic_6 { pt3dadd( 403.326, 364.169, 57.7853, 1.289 ) }
    apic_6 { pt3dadd( 403.73, 363.099, 57.8253, 1.2534 ) }
    apic_6 { pt3dadd( 404.16, 362.039, 57.8488, 1.2072 ) }
    apic_6 { pt3dadd( 404.532, 360.957, 57.867, 1.0244 ) }
    apic_6 { pt3dadd( 404.921, 359.882, 57.8906, 0.9268 ) }
    apic_6 { pt3dadd( 405.314, 358.811, 57.9289, 0.946 ) }
    apic_6 { pt3dadd( 405.446, 357.676, 57.9846, 0.9278 ) }
    apic_6 { pt3dadd( 405.517, 356.537, 58.0577, 0.9276 ) }
    apic_6 { pt3dadd( 405.779, 355.426, 58.1515, 0.9904 ) }
    apic_6 { pt3dadd( 406.181, 354.361, 58.2697, 1.0296 ) }
    apic_6 { pt3dadd( 406.398, 353.241, 58.3996, 1.021 ) }
    apic_6 { pt3dadd( 406.575, 352.117, 58.5273, 0.9408 ) }
    apic_6 { pt3dadd( 406.972, 351.046, 58.6432, 0.874 ) }
    apic_6 { pt3dadd( 407.336, 349.962, 58.7415, 1.0408 ) }
    apic_6 { pt3dadd( 407.598, 348.849, 58.8202, 1.083 ) }
    apic_6 { pt3dadd( 407.889, 347.743, 58.8823, 1.085 ) }
    apic_6 { pt3dadd( 408.122, 346.625, 58.9336, 1.0008 ) }
    apic_6 { pt3dadd( 408.199, 345.483, 58.9826, 1.0418 ) }
    apic_6 { pt3dadd( 408.281, 344.345, 59.0363, 1.0776 ) }
    apic_6 { pt3dadd( 408.552, 343.237, 59.1004, 1.1088 ) }
    apic_6 { pt3dadd( 408.973, 342.174, 59.1786, 1.1116 ) }
    apic_6 { pt3dadd( 409.324, 341.087, 59.2754, 1.1522 ) }
    apic_6 { pt3dadd( 409.523, 339.966, 59.3972, 1.055 ) }
    apic_6 { pt3dadd( 409.563, 338.827, 59.5428, 1.028 ) }
    apic_6 { pt3dadd( 409.624, 337.687, 59.6991, 1.1498 ) }
    apic_6 { pt3dadd( 409.812, 336.561, 59.8559, 1.2268 ) }
    apic_6 { pt3dadd( 410.083, 335.451, 60.0076, 1.1752 ) }
    apic_6 { pt3dadd( 410.355, 334.341, 60.1518, 1.1092 ) }
    apic_6 { pt3dadd( 410.668, 333.241, 60.2899, 1.0704 ) }
    apic_6 { pt3dadd( 410.975, 332.141, 60.4296, 1.0522 ) }
    apic_6 { pt3dadd( 411.297, 331.045, 60.5844, 0.9858 ) }
    apic_6 { pt3dadd( 411.585, 329.943, 60.7606, 1.0206 ) }
    apic_6 { pt3dadd( 411.829, 328.829, 60.9501, 1.007 ) }
    apic_6 { pt3dadd( 412.095, 327.72, 61.145, 1.1322 ) }
    apic_6 { pt3dadd( 412.454, 326.637, 61.3413, 1.0914 ) }
    apic_6 { pt3dadd( 412.8, 325.552, 61.5387, 1.1938 ) }
    apic_6 { pt3dadd( 413.104, 324.453, 61.731, 1.2074 ) }
    apic_6 { pt3dadd( 413.423, 323.357, 61.9091, 1.173 ) }
    apic_6 { pt3dadd( 413.65, 322.238, 62.0696, 0.9418 ) }
    apic_6 { pt3dadd( 413.825, 321.109, 62.2132, 0.869 ) }
    apic_6 { pt3dadd( 414.11, 320.004, 62.3428, 1.0632 ) }
    apic_6 { pt3dadd( 414.494, 318.928, 62.4638, 1.1986 ) }
    apic_6 { pt3dadd( 414.902, 317.859, 62.5853, 1.1688 ) }
    apic_6 { pt3dadd( 415.357, 316.81, 62.718, 1.1052 ) }
    apic_6 { pt3dadd( 415.807, 315.762, 62.8726, 1.0254 ) }
    apic_6 { pt3dadd( 416.16, 314.681, 63.0543, 1.149 ) }
    apic_6 { pt3dadd( 416.361, 313.564, 63.2576, 0.9782 ) }
    apic_6 { pt3dadd( 416.43, 312.429, 63.4743, 1.0006 ) }
    apic_6 { pt3dadd( 416.509, 311.295, 63.6938, 0.9972 ) }
    apic_6 { pt3dadd( 416.782, 310.197, 63.8994, 0.9794 ) }
    apic_6 { pt3dadd( 417.255, 309.157, 64.0755, 1.0014 ) }
    apic_6 { pt3dadd( 417.774, 308.139, 64.2158, 1.006 ) }
    apic_6 { pt3dadd( 418.27, 307.109, 64.321, 0.9606 ) }
    apic_6 { pt3dadd( 418.623, 306.028, 64.3964, 0.9116 ) }
    apic_6 { pt3dadd( 418.841, 304.905, 64.4501, 1.1046 ) }
    apic_6 { pt3dadd( 419.167, 303.813, 64.4927, 1.2288 ) }
    apic_6 { pt3dadd( 419.643, 302.775, 64.5324, 1.2214 ) }
    apic_6 { pt3dadd( 420.192, 301.771, 64.5767, 1.2192 ) }
    apic_6 { pt3dadd( 420.777, 300.789, 64.6296, 1.1564 ) }
    apic_6 { pt3dadd( 421.286, 299.767, 64.6951, 1.0968 ) }
    apic_6 { pt3dadd( 421.66, 298.688, 64.776, 1.169 ) }
    apic_6 { pt3dadd( 421.984, 297.592, 64.8754, 1.3304 ) }
    apic_6 { pt3dadd( 422.335, 296.505, 64.9956, 1.4948 ) }
    apic_6 { pt3dadd( 423.04, 294.356, 65.2837, 1.5032 ) }
    apic_6 { pt3dadd( 423.528, 293.334, 65.4321, 1.3632 ) }
    apic_6 { pt3dadd( 423.742, 292.22, 65.5724, 1.2026 ) }
    apic_6 { pt3dadd( 423.854, 291.085, 65.6998, 1.1112 ) }
    apic_6 { pt3dadd( 424.112, 289.973, 65.8174, 1.0818 ) }
    apic_6 { pt3dadd( 424.447, 288.882, 65.9302, 1.037 ) }
    apic_6 { pt3dadd( 424.688, 287.77, 66.0352, 1.1342 ) }
    apic_6 { pt3dadd( 424.898, 286.65, 66.1217, 1.1252 ) }
    apic_6 { pt3dadd( 425.091, 285.53, 66.1836, 1.111 ) }
    apic_6 { pt3dadd( 425.15, 284.387, 66.2152, 1.074 ) }
    apic_6 { pt3dadd( 425.311, 283.261, 66.2108, 1.0584 ) }
    apic_6 { pt3dadd( 425.55, 282.145, 66.176, 0.9988 ) }
    apic_6 { pt3dadd( 425.772, 281.024, 66.1343, 1.0378 ) }
    apic_6 { pt3dadd( 426.0, 279.904, 66.1072, 1.0708 ) }
    apic_6 { pt3dadd( 426.24, 278.785, 66.1111, 1.0944 ) }
    apic_6 { pt3dadd( 426.54, 277.683, 66.157, 1.0912 ) }
    apic_6 { pt3dadd( 426.886, 276.594, 66.2536, 1.085 ) }
    apic_6 { pt3dadd( 427.194, 275.498, 66.402, 1.0738 ) }
    apic_6 { pt3dadd( 427.275, 274.376, 66.5882, 1.0518 ) }
    apic_6 { pt3dadd( 427.043, 273.27, 66.7965, 1.0166 ) }
    apic_6 { pt3dadd( 426.766, 272.17, 67.0155, 0.9242 ) }
    apic_6 { pt3dadd( 426.888, 271.072, 67.2252, 0.8856 ) }
    apic_6 { pt3dadd( 427.355, 270.034, 67.4066, 0.8562 ) }
    apic_6 { pt3dadd( 427.927, 269.045, 67.5522, 1.0546 ) }
    apic_6 { pt3dadd( 428.445, 268.028, 67.6617, 1.1108 ) }
    apic_6 { pt3dadd( 428.771, 266.939, 67.7387, 1.125 ) }
    apic_6 { pt3dadd( 429.016, 265.821, 67.7905, 1.1306 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_6 { pt3dadd( 429.304, 264.715, 67.8275, 1.014 ) }
    apic_6 { pt3dadd( 429.634, 263.619, 67.8597, 0.9546 ) }
    apic_6 { pt3dadd( 430.062, 262.561, 67.8882, 0.9996 ) }
    apic_6 { pt3dadd( 430.392, 261.474, 67.9146, 1.0162 ) }
    apic_6 { pt3dadd( 430.713, 260.378, 67.9426, 1.1428 ) }
    apic_6 { pt3dadd( 431.111, 259.306, 67.9764, 1.1412 ) }
    apic_6 { pt3dadd( 431.542, 258.247, 68.0196, 1.1414 ) }
    apic_6 { pt3dadd( 431.925, 257.17, 68.0744, 1.1264 ) }
    apic_6 { pt3dadd( 432.155, 256.053, 68.1442, 1.1748 ) }
    apic_6 { pt3dadd( 432.297, 254.92, 68.236, 1.1216 ) }
    apic_6 { pt3dadd( 432.53, 253.806, 68.35, 1.0314 ) }
    apic_6 { pt3dadd( 432.69, 252.68, 68.4729, 1.0518 ) }
    apic_6 { pt3dadd( 432.908, 251.562, 68.5916, 1.0932 ) }
    apic_6 { pt3dadd( 433.145, 250.445, 68.6963, 1.1532 ) }
    apic_6 { pt3dadd( 433.424, 249.337, 68.7806, 1.1164 ) }
    apic_6 { pt3dadd( 433.597, 248.211, 68.8422, 0.8516 ) }
    apic_6 { pt3dadd( 433.814, 247.093, 68.8848, 0.8558 ) }
    apic_6 { pt3dadd( 434.129, 245.993, 68.9153, 0.979 ) }
    apic_6 { pt3dadd( 434.405, 244.883, 68.9419, 1.104 ) }
    apic_6 { pt3dadd( 434.524, 243.75, 68.9702, 1.152 ) }
    apic_6 { pt3dadd( 434.749, 242.635, 69.0012, 1.2174 ) }
    apic_6 { pt3dadd( 435.008, 241.524, 69.0449, 1.2246 ) }
    apic_6 { pt3dadd( 435.247, 240.405, 69.1104, 1.1046 ) }
    apic_6 { pt3dadd( 435.389, 239.272, 69.2003, 1.0722 ) }
    apic_6 { pt3dadd( 435.467, 238.132, 69.3148, 1.2346 ) }
    apic_6 { pt3dadd( 435.673, 237.013, 69.4576, 1.3686 ) }
    apic_6 { pt3dadd( 435.943, 235.905, 69.6343, 1.5148 ) }
    apic_6 { pt3dadd( 436.19, 234.795, 69.8382, 1.3678 ) }
    apic_6 { pt3dadd( 436.327, 233.665, 70.0574, 1.2938 ) }
    apic_6 { pt3dadd( 436.484, 232.539, 70.2884, 1.3364 ) }
    apic_6 { pt3dadd( 436.698, 231.421, 70.5222, 1.4574 ) }
    apic_6 { pt3dadd( 437.145, 229.183, 70.9416, 1.3632 ) }
    apic_6 { pt3dadd( 437.356, 228.06, 71.1141, 1.2012 ) }
    apic_6 { pt3dadd( 437.562, 226.935, 71.265, 1.1154 ) }
    apic_6 { pt3dadd( 437.61, 225.797, 71.3997, 1.058 ) }
    apic_6 { pt3dadd( 437.815, 224.68, 71.5277, 1.144 ) }
    apic_6 { pt3dadd( 438.104, 223.575, 71.6618, 1.284 ) }
    apic_6 { pt3dadd( 438.408, 222.476, 71.8169, 1.4114 ) }
    apic_6 { pt3dadd( 439.132, 220.329, 72.1792, 1.2664 ) }
    apic_6 { pt3dadd( 439.497, 219.251, 72.3694, 1.2264 ) }
    apic_6 { pt3dadd( 439.814, 218.154, 72.5575, 1.311 ) }
    apic_6 { pt3dadd( 440.013, 217.033, 72.749, 1.385 ) }
    apic_6 { pt3dadd( 440.647, 214.843, 73.1161, 1.4254 ) }
    apic_6 { pt3dadd( 440.996, 213.755, 73.2813, 1.3842 ) }
    apic_6 { pt3dadd( 441.884, 211.656, 73.5725, 1.306 ) }
    apic_6 { pt3dadd( 442.339, 210.608, 73.705, 1.3986 ) }
    apic_6 { pt3dadd( 443.395, 208.584, 73.9816, 1.3504 ) }
    apic_6 { pt3dadd( 443.84, 207.536, 74.149, 1.2886 ) }
    apic_6 { pt3dadd( 444.228, 206.469, 74.347, 1.195 ) }
    apic_6 { pt3dadd( 444.817, 205.5, 74.562, 1.1476 ) }
    apic_6 { pt3dadd( 445.353, 204.493, 74.7659, 1.1358 ) }
    apic_6 { pt3dadd( 445.51, 203.367, 74.9414, 1.201 ) }
    apic_6 { pt3dadd( 445.778, 202.256, 75.0915, 1.1276 ) }
    apic_6 { pt3dadd( 446.186, 201.19, 75.2318, 1.2482 ) }
    apic_6 { pt3dadd( 446.516, 200.097, 75.3735, 1.1398 ) }
    apic_6 { pt3dadd( 447.058, 199.093, 75.5166, 1.1784 ) }
    apic_6 { pt3dadd( 447.615, 198.096, 75.6633, 1.2332 ) }
    apic_6 { pt3dadd( 448.074, 197.054, 75.8195, 1.4142 ) }
    apic_6 { pt3dadd( 448.56, 194.823, 76.0819, 1.767 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 59/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 387.666, 429.964, 50.652, 0.6354 ) }
    apic_5 { pt3dadd( 387.242, 429.318, 51.5368, 0.2288 ) }
    apic_5 { pt3dadd( 386.6, 428.46, 52.4398, 0.2746 ) }
    apic_5 { pt3dadd( 385.696, 427.853, 52.8086, 0.2746 ) }
    apic_5 { pt3dadd( 384.586, 427.68, 53.202, 0.2746 ) }
    apic_5 { pt3dadd( 383.454, 427.68, 53.6054, 0.2748 ) }
    apic_5 { pt3dadd( 382.321, 427.68, 54.0067, 0.2748 ) }
    apic_5 { pt3dadd( 381.184, 427.68, 54.3869, 0.2752 ) }
    apic_5 { pt3dadd( 380.045, 427.68, 54.7364, 0.2758 ) }
    apic_5 { pt3dadd( 378.905, 427.68, 55.078, 0.2766 ) }
    apic_5 { pt3dadd( 377.766, 427.68, 55.4226, 0.2784 ) }
    apic_5 { pt3dadd( 376.632, 427.726, 55.788, 0.2816 ) }
    apic_5 { pt3dadd( 375.535, 427.915, 56.2106, 0.2876 ) }
    apic_5 { pt3dadd( 374.453, 428.103, 56.7022, 0.2998 ) }
    apic_5 { pt3dadd( 373.343, 428.139, 57.2214, 0.316 ) }
    apic_5 { pt3dadd( 372.221, 428.139, 57.7354, 0.3768 ) }
    apic_5 { pt3dadd( 371.093, 428.139, 58.2184, 0.34 ) }
    apic_5 { pt3dadd( 369.958, 428.139, 58.6499, 0.3114 ) }
    apic_5 { pt3dadd( 368.821, 428.101, 59.0223, 0.2954 ) }
    apic_5 { pt3dadd( 367.712, 427.866, 59.3485, 0.3142 ) }
    apic_5 { pt3dadd( 366.627, 427.529, 59.6473, 0.3436 ) }
    apic_5 { pt3dadd( 365.62, 427.009, 59.9253, 0.423 ) }
    apic_5 { pt3dadd( 364.642, 426.424, 60.1866, 0.4514 ) }
    apic_5 { pt3dadd( 363.695, 425.793, 60.4416, 0.3942 ) }
    apic_5 { pt3dadd( 362.835, 425.052, 60.6928, 0.3644 ) }
    apic_5 { pt3dadd( 362.163, 424.138, 60.9294, 0.3944 ) }
    apic_5 { pt3dadd( 361.465, 423.235, 61.1461, 0.4954 ) }
    apic_5 { pt3dadd( 360.628, 422.463, 61.3438, 0.6922 ) }
    apic_5 { pt3dadd( 359.772, 421.707, 61.5269, 1.0088 ) }
    apic_5 { pt3dadd( 358.944, 420.919, 61.7002, 1.1434 ) }
    apic_5 { pt3dadd( 358.106, 420.142, 61.8752, 1.0724 ) }
    apic_5 { pt3dadd( 357.238, 419.403, 62.067, 0.8948 ) }
    apic_5 { pt3dadd( 356.405, 418.631, 62.2838, 0.7884 ) }
    apic_5 { pt3dadd( 355.613, 417.82, 62.5237, 0.6548 ) }
    apic_5 { pt3dadd( 354.647, 417.234, 62.7648, 0.784 ) }
    apic_5 { pt3dadd( 353.63, 416.717, 62.9846, 0.7956 ) }
    apic_5 { pt3dadd( 352.723, 416.028, 63.1672, 0.7804 ) }
    apic_5 { pt3dadd( 351.87, 415.266, 63.3044, 0.7002 ) }
    apic_5 { pt3dadd( 351.134, 414.393, 63.3959, 0.5772 ) }
    apic_5 { pt3dadd( 350.443, 413.482, 63.4497, 0.4506 ) }
    apic_5 { pt3dadd( 349.508, 412.839, 63.4774, 0.4112 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_5 { pt3dadd( 348.49, 412.317, 63.49, 0.5338 ) }
    apic_5 { pt3dadd( 347.458, 411.824, 63.4948, 0.4968 ) }
    apic_5 { pt3dadd( 346.42, 411.341, 63.4959, 0.5684 ) }
    apic_5 { pt3dadd( 345.425, 410.78, 63.4962, 0.4784 ) }
    apic_5 { pt3dadd( 344.465, 410.156, 63.4962, 0.476 ) }
    apic_5 { pt3dadd( 343.385, 409.791, 63.4962, 0.5892 ) }
    apic_5 { pt3dadd( 342.31, 409.402, 63.4962, 0.6864 ) }
    apic_5 { pt3dadd( 341.375, 408.747, 63.4962, 0.4972 ) }
    apic_5 { pt3dadd( 340.786, 407.774, 63.4962, 0.3388 ) }
    apic_5 { pt3dadd( 340.056, 406.893, 63.4962, 0.2542 ) }
    apic_5 { pt3dadd( 339.146, 406.202, 63.4962, 0.2288 ) }
    apic_5 { pt3dadd( 338.003, 406.159, 63.4962, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 12/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 300.403, 517.363, 32.914, 0.5502 ) }
    dend_24 { pt3dadd( 299.8, 517.677, 33.8226, 0.9152 ) }
    dend_24 { pt3dadd( 298.804, 518.195, 33.3505, 0.5692 ) }
    dend_24 { pt3dadd( 297.792, 518.722, 33.1607, 0.4514 ) }
    dend_24 { pt3dadd( 296.782, 519.248, 32.9538, 0.3372 ) }
    dend_24 { pt3dadd( 295.772, 519.773, 32.7401, 0.3062 ) }
    dend_24 { pt3dadd( 294.84, 520.429, 32.5382, 0.2858 ) }
    dend_24 { pt3dadd( 293.935, 521.125, 32.3658, 0.2954 ) }
    dend_24 { pt3dadd( 293.03, 521.823, 32.2358, 0.3128 ) }
    dend_24 { pt3dadd( 292.124, 522.522, 32.144, 0.3478 ) }
    dend_24 { pt3dadd( 291.268, 523.281, 32.0919, 0.4 ) }
    dend_24 { pt3dadd( 290.424, 524.053, 32.0762, 0.5572 ) }
    dend_24 { pt3dadd( 289.581, 524.825, 32.0905, 0.5544 ) }
    dend_24 { pt3dadd( 288.879, 525.729, 32.1266, 0.6058 ) }
    dend_24 { pt3dadd( 288.193, 526.644, 32.1787, 0.883 ) }
    dend_24 { pt3dadd( 287.507, 527.559, 32.2423, 0.9742 ) }
    dend_24 { pt3dadd( 286.82, 528.474, 32.3156, 0.9054 ) }
    dend_24 { pt3dadd( 285.872, 529.113, 32.4016, 0.7892 ) }
    dend_24 { pt3dadd( 284.816, 529.193, 32.5133, 0.7466 ) }
    dend_24 { pt3dadd( 283.806, 529.555, 32.6374, 0.5146 ) }
    dend_24 { pt3dadd( 282.697, 529.763, 32.7723, 0.3714 ) }
    dend_24 { pt3dadd( 281.558, 529.832, 32.919, 0.3134 ) }
    dend_24 { pt3dadd( 280.426, 529.983, 33.0719, 0.3426 ) }
    dend_24 { pt3dadd( 279.287, 530.024, 33.2256, 0.421 ) }
    dend_24 { pt3dadd( 278.352, 530.62, 33.3819, 0.4464 ) }
    dend_24 { pt3dadd( 277.76, 531.589, 33.5283, 0.3898 ) }
    dend_24 { pt3dadd( 276.948, 532.388, 33.6549, 0.3304 ) }
    dend_24 { pt3dadd( 276.162, 533.218, 33.88, 0.4576 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 40/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 300.403, 517.363, 32.914, 0.5502 ) }
    dend_23 { pt3dadd( 299.244, 517.503, 32.6026, 0.5974 ) }
    dend_23 { pt3dadd( 298.116, 517.639, 32.3658, 0.519 ) }
    dend_23 { pt3dadd( 296.996, 517.739, 32.0639, 0.3872 ) }
    dend_23 { pt3dadd( 295.89, 517.562, 31.7002, 0.3046 ) }
    dend_23 { pt3dadd( 294.803, 517.309, 31.2981, 0.2832 ) }
    dend_23 { pt3dadd( 293.682, 517.223, 30.9005, 0.2906 ) }
    dend_23 { pt3dadd( 292.547, 517.286, 30.546, 0.3038 ) }
    dend_23 { pt3dadd( 291.409, 517.35, 30.252, 0.331 ) }
    dend_23 { pt3dadd( 290.268, 517.415, 30.023, 0.3688 ) }
    dend_23 { pt3dadd( 289.141, 517.555, 29.8533, 0.5002 ) }
    dend_23 { pt3dadd( 288.058, 517.922, 29.7287, 0.4468 ) }
    dend_23 { pt3dadd( 286.975, 518.29, 29.6304, 0.4144 ) }
    dend_23 { pt3dadd( 285.891, 518.659, 29.542, 0.4906 ) }
    dend_23 { pt3dadd( 284.859, 519.117, 29.4512, 0.4272 ) }
    dend_23 { pt3dadd( 284.049, 519.911, 29.3496, 0.3888 ) }
    dend_23 { pt3dadd( 283.293, 520.731, 29.2326, 0.3902 ) }
    dend_23 { pt3dadd( 282.252, 521.182, 29.0914, 0.4984 ) }
    dend_23 { pt3dadd( 281.17, 521.2, 28.9212, 0.6422 ) }
    dend_23 { pt3dadd( 280.092, 520.853, 28.7311, 0.4994 ) }
    dend_23 { pt3dadd( 278.972, 520.644, 28.5527, 0.3922 ) }
    dend_23 { pt3dadd( 277.911, 520.841, 28.4077, 0.3452 ) }
    dend_23 { pt3dadd( 277.01, 521.535, 28.3016, 0.4334 ) }
    dend_23 { pt3dadd( 276.024, 522.052, 28.2383, 0.4348 ) }
    dend_23 { pt3dadd( 274.907, 522.279, 28.2178, 0.5372 ) }
    dend_23 { pt3dadd( 273.771, 522.39, 28.2344, 0.4698 ) }
    dend_23 { pt3dadd( 272.638, 522.528, 28.2736, 0.4518 ) }
    dend_23 { pt3dadd( 271.501, 522.648, 28.3024, 0.5848 ) }
    dend_23 { pt3dadd( 270.457, 523.077, 28.2979, 0.483 ) }
    dend_23 { pt3dadd( 269.555, 523.775, 28.2649, 0.3814 ) }
    dend_23 { pt3dadd( 268.658, 524.478, 28.0686, 0.4576 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 329.434, 502.755, 40.4158, 0.3656 ) }
    dend_21 { pt3dadd( 329.152, 502.719, 41.6732, 0.6864 ) }
    dend_21 { pt3dadd( 328.274, 502.944, 42.5312, 0.552 ) }
    dend_21 { pt3dadd( 327.894, 503.923, 42.8778, 0.5492 ) }
    dend_21 { pt3dadd( 327.025, 504.614, 43.2737, 0.5764 ) }
    dend_21 { pt3dadd( 326.617, 505.614, 43.7063, 0.697 ) }
    dend_21 { pt3dadd( 326.56, 506.739, 44.1613, 0.5796 ) }
    dend_21 { pt3dadd( 326.074, 507.61, 44.6264, 0.4156 ) }
    dend_21 { pt3dadd( 325.007, 507.925, 45.0887, 0.3098 ) }
    dend_21 { pt3dadd( 324.148, 508.524, 45.5605, 0.2926 ) }
    dend_21 { pt3dadd( 323.257, 509.181, 46.0418, 0.308 ) }
    dend_21 { pt3dadd( 322.242, 509.689, 46.5108, 0.337 ) }
    dend_21 { pt3dadd( 321.344, 510.373, 46.9862, 0.387 ) }
    dend_21 { pt3dadd( 320.622, 509.667, 47.4835, 0.499 ) }
    dend_21 { pt3dadd( 319.574, 509.994, 48.0304, 0.6124 ) }
    dend_21 { pt3dadd( 318.607, 510.35, 48.6329, 0.5952 ) }
    dend_21 { pt3dadd( 317.686, 509.848, 49.2985, 0.525 ) }
    dend_21 { pt3dadd( 316.657, 509.543, 49.9864, 0.5772 ) }
    dend_21 { pt3dadd( 315.844, 508.839, 50.6559, 0.7056 ) }
    dend_21 { pt3dadd( 315.221, 507.907, 51.2943, 0.7898 ) }
    dend_21 { pt3dadd( 314.847, 506.853, 51.8991, 0.7784 ) }
    dend_21 { pt3dadd( 314.625, 505.743, 52.4678, 0.8828 ) }
    dend_21 { pt3dadd( 314.476, 504.616, 53.011, 0.9262 ) }
    dend_21 { pt3dadd( 314.243, 503.506, 53.5618, 0.8188 ) }
    dend_21 { pt3dadd( 313.513, 503.9, 54.2217, 0.8442 ) }
    dend_21 { pt3dadd( 312.542, 504.39, 54.9598, 0.7198 ) }
    dend_21 { pt3dadd( 311.628, 504.99, 55.7648, 0.863 ) }
    dend_21 { pt3dadd( 310.641, 505.408, 56.632, 0.9142 ) }
    dend_21 { pt3dadd( 309.671, 505.794, 57.5618, 0.9058 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_21 { pt3dadd( 308.948, 506.563, 58.527, 0.7056 ) }
    dend_21 { pt3dadd( 308.247, 506.878, 59.5958, 0.5436 ) }
    dend_21 { pt3dadd( 307.23, 506.712, 60.664, 0.6006 ) }
    dend_21 { pt3dadd( 306.19, 506.799, 61.7058, 0.5748 ) }
    dend_21 { pt3dadd( 305.091, 506.89, 62.6772, 0.7068 ) }
    dend_21 { pt3dadd( 303.991, 506.983, 63.5894, 0.7638 ) }
    dend_21 { pt3dadd( 302.892, 507.116, 64.4577, 0.8666 ) }
    dend_21 { pt3dadd( 301.819, 507.386, 65.294, 0.6128 ) }
    dend_21 { pt3dadd( 300.748, 507.645, 66.1385, 0.4718 ) }
    dend_21 { pt3dadd( 299.687, 507.759, 67.062, 0.4382 ) }
    dend_21 { pt3dadd( 298.738, 508.112, 68.0714, 0.644 ) }
    dend_21 { pt3dadd( 297.925, 508.693, 69.1326, 0.6384 ) }
    dend_21 { pt3dadd( 297.221, 509.377, 70.1893, 0.4492 ) }
    dend_21 { pt3dadd( 297.089, 510.406, 71.1847, 0.2796 ) }
    dend_21 { pt3dadd( 297.041, 511.355, 73.2928, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 15/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 329.434, 502.755, 40.4158, 0.3656 ) }
    dend_20 { pt3dadd( 329.124, 502.174, 40.626, 0.4944 ) }
    dend_20 { pt3dadd( 328.573, 501.173, 40.7641, 0.434 ) }
    dend_20 { pt3dadd( 327.923, 500.233, 40.8355, 0.4026 ) }
    dend_20 { pt3dadd( 326.85, 499.941, 40.8568, 0.4096 ) }
    dend_20 { pt3dadd( 326.143, 499.07, 40.8531, 0.5652 ) }
    dend_20 { pt3dadd( 325.371, 498.227, 40.8363, 0.6164 ) }
    dend_20 { pt3dadd( 324.684, 497.312, 40.8162, 0.4922 ) }
    dend_20 { pt3dadd( 324.062, 496.354, 40.7926, 0.4104 ) }
    dend_20 { pt3dadd( 323.266, 495.535, 40.766, 0.4534 ) }
    dend_20 { pt3dadd( 322.629, 494.586, 40.7254, 0.5024 ) }
    dend_20 { pt3dadd( 322.093, 493.579, 40.6764, 0.5148 ) }
    dend_20 { pt3dadd( 321.681, 492.576, 40.628, 0.4612 ) }
    dend_20 { pt3dadd( 320.628, 492.133, 40.5737, 0.504 ) }
    dend_20 { pt3dadd( 319.633, 491.585, 40.5247, 0.5806 ) }
    dend_20 { pt3dadd( 318.708, 490.913, 40.4858, 0.5056 ) }
    dend_20 { pt3dadd( 317.694, 490.394, 40.4586, 0.5068 ) }
    dend_20 { pt3dadd( 316.65, 489.939, 40.4494, 0.513 ) }
    dend_20 { pt3dadd( 316.077, 489.083, 40.4438, 0.5046 ) }
    dend_20 { pt3dadd( 315.222, 488.819, 40.4239, 0.5874 ) }
    dend_20 { pt3dadd( 314.09, 488.717, 40.4012, 0.7192 ) }
    dend_20 { pt3dadd( 312.995, 488.397, 40.3897, 0.8396 ) }
    dend_20 { pt3dadd( 312.016, 487.819, 40.392, 0.75 ) }
    dend_20 { pt3dadd( 311.33, 486.921, 40.4225, 0.7318 ) }
    dend_20 { pt3dadd( 310.674, 485.987, 40.495, 0.6654 ) }
    dend_20 { pt3dadd( 309.923, 485.125, 40.5874, 0.7002 ) }
    dend_20 { pt3dadd( 309.021, 484.427, 40.6988, 0.6838 ) }
    dend_20 { pt3dadd( 308.31, 483.547, 40.8285, 0.5894 ) }
    dend_20 { pt3dadd( 307.216, 483.245, 40.9349, 0.4964 ) }
    dend_20 { pt3dadd( 306.215, 482.695, 41.0572, 0.383 ) }
    dend_20 { pt3dadd( 305.212, 482.149, 41.211, 0.3448 ) }
    dend_20 { pt3dadd( 304.195, 481.634, 41.3969, 0.3532 ) }
    dend_20 { pt3dadd( 303.176, 481.125, 41.6111, 0.4418 ) }
    dend_20 { pt3dadd( 302.158, 480.616, 41.8502, 0.481 ) }
    dend_20 { pt3dadd( 301.139, 480.111, 42.1053, 0.4738 ) }
    dend_20 { pt3dadd( 300.105, 479.63, 42.3657, 0.3896 ) }
    dend_20 { pt3dadd( 299.073, 479.153, 42.6264, 0.3508 ) }
    dend_20 { pt3dadd( 298.039, 478.677, 42.8854, 0.3944 ) }
    dend_20 { pt3dadd( 297.002, 478.213, 43.1376, 0.3724 ) }
    dend_20 { pt3dadd( 295.931, 477.823, 43.3745, 0.3734 ) }
    dend_20 { pt3dadd( 294.858, 477.434, 43.5896, 0.4024 ) }
    dend_20 { pt3dadd( 293.785, 477.043, 43.78, 0.552 ) }
    dend_20 { pt3dadd( 292.708, 476.664, 43.9449, 0.5922 ) }
    dend_20 { pt3dadd( 291.607, 476.357, 44.0829, 0.4464 ) }
    dend_20 { pt3dadd( 290.5, 476.066, 44.1986, 0.3298 ) }
    dend_20 { pt3dadd( 289.401, 475.753, 44.3019, 0.2826 ) }
    dend_20 { pt3dadd( 288.374, 475.267, 44.4105, 0.2892 ) }
    dend_20 { pt3dadd( 287.499, 474.532, 44.5446, 0.303 ) }
    dend_20 { pt3dadd( 286.625, 473.8, 44.7166, 0.322 ) }
    dend_20 { pt3dadd( 285.73, 473.101, 44.9296, 0.388 ) }
    dend_20 { pt3dadd( 284.735, 472.552, 45.1777, 0.3604 ) }
    dend_20 { pt3dadd( 283.703, 472.074, 45.4499, 0.3512 ) }
    dend_20 { pt3dadd( 282.67, 471.595, 45.7363, 0.359 ) }
    dend_20 { pt3dadd( 281.661, 471.076, 46.0292, 0.4826 ) }
    dend_20 { pt3dadd( 280.771, 470.371, 46.328, 0.4118 ) }
    dend_20 { pt3dadd( 279.953, 469.582, 46.6326, 0.3608 ) }
    dend_20 { pt3dadd( 279.136, 468.794, 46.9428, 0.3352 ) }
    dend_20 { pt3dadd( 278.429, 467.985, 47.2875, 0.4122 ) }
    dend_20 { pt3dadd( 278.041, 466.918, 47.6014, 0.4074 ) }
    dend_20 { pt3dadd( 277.655, 465.853, 47.8794, 0.428 ) }
    dend_20 { pt3dadd( 277.268, 464.791, 48.1211, 0.5528 ) }
    dend_20 { pt3dadd( 276.884, 463.733, 48.3286, 0.5932 ) }
    dend_20 { pt3dadd( 276.872, 462.701, 48.2572, 0.4486 ) }
    dend_20 { pt3dadd( 276.872, 461.559, 48.118, 0.3336 ) }
    dend_20 { pt3dadd( 276.872, 460.417, 47.957, 0.291 ) }
    dend_20 { pt3dadd( 276.872, 459.272, 47.7898, 0.2994 ) }
    dend_20 { pt3dadd( 276.872, 458.129, 47.6302, 0.3476 ) }
    dend_20 { pt3dadd( 276.872, 456.987, 47.4824, 0.2796 ) }
    dend_20 { pt3dadd( 276.872, 455.861, 47.0803, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_6 (entry count 84/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 448.56, 194.823, 76.0819, 1.767 ) }
    apic_12 { pt3dadd( 449.165, 193.158, 77.18, 1.1694 ) }
    apic_12 { pt3dadd( 448.963, 192.049, 77.2806, 0.7566 ) }
    apic_12 { pt3dadd( 448.77, 190.923, 77.3416, 0.7038 ) }
    apic_12 { pt3dadd( 448.805, 189.783, 77.35, 0.8084 ) }
    apic_12 { pt3dadd( 448.926, 188.648, 77.3212, 0.7068 ) }
    apic_12 { pt3dadd( 449.086, 187.519, 77.2685, 0.8082 ) }
    apic_12 { pt3dadd( 449.134, 186.377, 77.2184, 0.7322 ) }
    apic_12 { pt3dadd( 449.135, 185.234, 77.2204, 0.958 ) }
    apic_12 { pt3dadd( 449.142, 184.092, 77.2876, 0.9708 ) }
    apic_12 { pt3dadd( 449.193, 182.953, 77.4024, 0.9044 ) }
    apic_12 { pt3dadd( 449.367, 181.824, 77.5488, 0.7622 ) }
    apic_12 { pt3dadd( 449.629, 180.711, 77.7216, 0.8188 ) }
    apic_12 { pt3dadd( 449.899, 179.603, 77.9223, 0.7424 ) }
    apic_12 { pt3dadd( 450.112, 178.492, 78.1682, 0.7956 ) }
    apic_12 { pt3dadd( 450.324, 177.386, 78.4638, 0.6342 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_12 { pt3dadd( 450.467, 176.268, 78.7788, 0.6806 ) }
    apic_12 { pt3dadd( 450.483, 175.129, 79.0751, 0.691 ) }
    apic_12 { pt3dadd( 450.355, 173.997, 79.3285, 0.621 ) }
    apic_12 { pt3dadd( 450.178, 172.868, 79.5514, 0.6958 ) }
    apic_12 { pt3dadd( 450.222, 171.738, 79.7706, 0.7562 ) }
    apic_12 { pt3dadd( 450.481, 170.631, 80.0005, 0.7902 ) }
    apic_12 { pt3dadd( 450.781, 169.533, 80.2486, 0.7734 ) }
    apic_12 { pt3dadd( 450.933, 168.411, 80.5171, 0.6742 ) }
    apic_12 { pt3dadd( 450.965, 167.278, 80.8111, 0.8198 ) }
    apic_12 { pt3dadd( 450.968, 166.149, 81.1266, 0.8626 ) }
    apic_12 { pt3dadd( 450.978, 165.016, 81.4394, 0.901 ) }
    apic_12 { pt3dadd( 451.059, 163.881, 81.7264, 0.9418 ) }
    apic_12 { pt3dadd( 451.429, 162.813, 81.9748, 0.9372 ) }
    apic_12 { pt3dadd( 451.769, 161.724, 82.1761, 0.8594 ) }
    apic_12 { pt3dadd( 451.871, 160.59, 82.3309, 0.593 ) }
    apic_12 { pt3dadd( 451.881, 159.447, 82.451, 0.4642 ) }
    apic_12 { pt3dadd( 451.883, 158.303, 82.5387, 0.5132 ) }
    apic_12 { pt3dadd( 451.902, 157.159, 82.6031, 0.5788 ) }
    apic_12 { pt3dadd( 452.042, 156.024, 82.6582, 0.823 ) }
    apic_12 { pt3dadd( 452.272, 154.906, 82.7162, 0.9104 ) }
    apic_12 { pt3dadd( 452.395, 153.768, 82.7786, 1.0156 ) }
    apic_12 { pt3dadd( 452.651, 152.656, 82.8512, 1.0286 ) }
    apic_12 { pt3dadd( 452.829, 151.53, 82.9497, 1.022 ) }
    apic_12 { pt3dadd( 453.094, 150.42, 83.0684, 0.9294 ) }
    apic_12 { pt3dadd( 453.25, 149.289, 83.1939, 0.9186 ) }
    apic_12 { pt3dadd( 453.423, 148.159, 83.3162, 0.803 ) }
    apic_12 { pt3dadd( 453.681, 147.045, 83.4302, 0.8258 ) }
    apic_12 { pt3dadd( 453.841, 145.914, 83.5318, 0.8608 ) }
    apic_12 { pt3dadd( 453.764, 144.775, 83.6195, 0.96 ) }
    apic_12 { pt3dadd( 453.863, 143.637, 83.699, 0.9778 ) }
    apic_12 { pt3dadd( 454.138, 142.53, 83.7827, 0.9012 ) }
    apic_12 { pt3dadd( 454.374, 141.412, 83.8793, 0.8356 ) }
    apic_12 { pt3dadd( 454.239, 140.282, 83.9784, 0.8004 ) }
    apic_12 { pt3dadd( 453.913, 139.187, 84.0602, 0.7728 ) }
    apic_12 { pt3dadd( 454.416, 138.163, 84.1336, 0.7648 ) }
    apic_12 { pt3dadd( 454.595, 137.034, 84.2122, 0.5432 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 36/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 448.56, 194.823, 76.0819, 1.767 ) }
    apic_7 { pt3dadd( 449.409, 193.215, 76.1995, 1.3398 ) }
    apic_7 { pt3dadd( 450.188, 192.38, 76.2272, 1.003 ) }
    apic_7 { pt3dadd( 450.962, 191.536, 76.258, 0.8116 ) }
    apic_7 { pt3dadd( 451.603, 190.59, 76.3118, 0.8736 ) }
    apic_7 { pt3dadd( 452.196, 189.616, 76.412, 1.023 ) }
    apic_7 { pt3dadd( 452.973, 188.782, 76.5582, 1.1322 ) }
    apic_7 { pt3dadd( 453.896, 188.114, 76.7343, 1.2346 ) }
    apic_7 { pt3dadd( 454.759, 187.368, 76.9266, 1.223 ) }
    apic_7 { pt3dadd( 455.577, 186.573, 77.1296, 1.266 ) }
    apic_7 { pt3dadd( 456.432, 185.82, 77.341, 1.26 ) }
    apic_7 { pt3dadd( 457.404, 185.222, 77.5438, 1.2066 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 48/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 454.595, 137.034, 84.2122, 0.5432 ) }
    apic_14 { pt3dadd( 454.443, 135.41, 83.7553, 0.335 ) }
    apic_14 { pt3dadd( 454.536, 134.271, 83.7295, 0.302 ) }
    apic_14 { pt3dadd( 454.698, 133.139, 83.6965, 0.2782 ) }
    apic_14 { pt3dadd( 454.857, 132.006, 83.6525, 0.2814 ) }
    apic_14 { pt3dadd( 454.999, 130.87, 83.5951, 0.2872 ) }
    apic_14 { pt3dadd( 455.139, 129.735, 83.5234, 0.2988 ) }
    apic_14 { pt3dadd( 455.408, 128.626, 83.4296, 0.3142 ) }
    apic_14 { pt3dadd( 455.714, 127.526, 83.3098, 0.3736 ) }
    apic_14 { pt3dadd( 455.988, 126.419, 83.1748, 0.3342 ) }
    apic_14 { pt3dadd( 456.256, 125.308, 83.0368, 0.3006 ) }
    apic_14 { pt3dadd( 456.451, 124.182, 82.9049, 0.2758 ) }
    apic_14 { pt3dadd( 456.574, 123.045, 82.7859, 0.2768 ) }
    apic_14 { pt3dadd( 456.694, 121.908, 82.6823, 0.279 ) }
    apic_14 { pt3dadd( 456.855, 120.775, 82.5927, 0.2826 ) }
    apic_14 { pt3dadd( 457.02, 119.644, 82.5115, 0.2892 ) }
    apic_14 { pt3dadd( 457.086, 118.502, 82.4298, 0.302 ) }
    apic_14 { pt3dadd( 457.044, 117.362, 82.3388, 0.3246 ) }
    apic_14 { pt3dadd( 456.934, 116.226, 82.2408, 0.3708 ) }
    apic_14 { pt3dadd( 456.608, 115.131, 82.1509, 0.4372 ) }
    apic_14 { pt3dadd( 456.296, 114.031, 82.0826, 0.6544 ) }
    apic_14 { pt3dadd( 456.296, 112.887, 82.0462, 0.5988 ) }
    apic_14 { pt3dadd( 456.296, 111.743, 82.0476, 0.662 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 71/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 454.595, 137.034, 84.2122, 0.5432 ) }
    apic_13 { pt3dadd( 454.614, 135.755, 84.4374, 0.3988 ) }
    apic_13 { pt3dadd( 454.574, 134.618, 84.6023, 0.369 ) }
    apic_13 { pt3dadd( 454.928, 133.57, 84.7706, 0.4228 ) }
    apic_13 { pt3dadd( 455.43, 132.545, 84.9316, 0.4508 ) }
    apic_13 { pt3dadd( 455.758, 131.455, 85.0786, 0.394 ) }
    apic_13 { pt3dadd( 456.187, 130.4, 85.1959, 0.3588 ) }
    apic_13 { pt3dadd( 456.542, 129.316, 85.2953, 0.41 ) }
    apic_13 { pt3dadd( 456.944, 128.247, 85.3919, 0.3976 ) }
    apic_13 { pt3dadd( 457.538, 127.276, 85.4946, 0.4384 ) }
    apic_13 { pt3dadd( 457.894, 126.203, 85.6024, 0.4328 ) }
    apic_13 { pt3dadd( 457.981, 125.068, 85.7326, 0.3594 ) }
    apic_13 { pt3dadd( 458.199, 123.951, 85.8964, 0.3002 ) }
    apic_13 { pt3dadd( 458.802, 123.005, 86.0936, 0.275 ) }
    apic_13 { pt3dadd( 458.933, 121.87, 86.3064, 0.2754 ) }
    apic_13 { pt3dadd( 459.182, 120.759, 86.5595, 0.2764 ) }
    apic_13 { pt3dadd( 459.392, 119.64, 86.8487, 0.278 ) }
    apic_13 { pt3dadd( 459.514, 118.514, 87.1794, 0.281 ) }
    apic_13 { pt3dadd( 459.445, 117.386, 87.563, 0.2864 ) }
    apic_13 { pt3dadd( 459.377, 116.265, 88.0004, 0.2966 ) }
    apic_13 { pt3dadd( 459.362, 115.139, 88.4733, 0.315 ) }
    apic_13 { pt3dadd( 459.523, 114.104, 88.9946, 0.35 ) }
    apic_13 { pt3dadd( 460.355, 113.43, 89.5714, 0.4134 ) }
    apic_13 { pt3dadd( 461.356, 112.917, 90.1169, 0.5368 ) }
    apic_13 { pt3dadd( 461.862, 111.926, 90.6058, 0.7388 ) }
    apic_13 { pt3dadd( 462.379, 110.909, 91.0423, 0.5546 ) }
    apic_13 { pt3dadd( 462.804, 109.852, 91.4463, 0.4096 ) }
    apic_13 { pt3dadd( 462.953, 108.747, 91.8683, 0.3308 ) }
    apic_13 { pt3dadd( 462.643, 107.657, 92.3101, 0.404 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_13 { pt3dadd( 462.342, 106.592, 92.7856, 0.393 ) }
    apic_13 { pt3dadd( 461.785, 105.669, 93.3318, 0.399 ) }
    apic_13 { pt3dadd( 461.852, 104.602, 93.9669, 0.5104 ) }
    apic_13 { pt3dadd( 461.798, 103.641, 94.7052, 0.4582 ) }
    apic_13 { pt3dadd( 461.117, 102.798, 95.4993, 0.4738 ) }
    apic_13 { pt3dadd( 460.358, 101.998, 96.32, 0.415 ) }
    apic_13 { pt3dadd( 460.054, 101.035, 97.1947, 0.5018 ) }
    apic_13 { pt3dadd( 460.097, 100.093, 98.1506, 0.4006 ) }
    apic_13 { pt3dadd( 459.449, 99.2592, 99.0721, 0.3388 ) }
    apic_13 { pt3dadd( 458.593, 98.5446, 99.9239, 0.3006 ) }
    apic_13 { pt3dadd( 458.153, 97.5215, 100.717, 0.3176 ) }
    apic_13 { pt3dadd( 458.206, 96.4553, 101.485, 0.38 ) }
    apic_13 { pt3dadd( 458.741, 95.6871, 102.241, 0.3458 ) }
    apic_13 { pt3dadd( 457.982, 94.8903, 103.009, 0.323 ) }
    apic_13 { pt3dadd( 457.258, 94.0562, 103.797, 0.3124 ) }
    apic_13 { pt3dadd( 456.645, 93.1652, 104.653, 0.37 ) }
    apic_13 { pt3dadd( 456.386, 92.2021, 105.58, 0.3276 ) }
    apic_13 { pt3dadd( 455.916, 91.4617, 106.589, 0.288 ) }
    apic_13 { pt3dadd( 455.075, 90.7993, 107.535, 0.2542 ) }
    apic_13 { pt3dadd( 454.761, 89.758, 108.383, 0.2288 ) }
    apic_13 { pt3dadd( 454.326, 88.7977, 110.029, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_7 (entry count 21/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 457.404, 185.222, 77.5438, 1.2066 ) }
    apic_11 { pt3dadd( 457.317, 183.732, 79.1927, 0.6424 ) }
    apic_11 { pt3dadd( 457.361, 182.624, 79.6172, 0.4248 ) }
    apic_11 { pt3dadd( 457.649, 181.549, 80.08, 0.3898 ) }
    apic_11 { pt3dadd( 458.241, 180.622, 80.5361, 0.3656 ) }
    apic_11 { pt3dadd( 458.901, 179.726, 80.9556, 0.3534 ) }
    apic_11 { pt3dadd( 459.244, 178.65, 81.3126, 0.3988 ) }
    apic_11 { pt3dadd( 459.882, 177.87, 81.5878, 0.3832 ) }
    apic_11 { pt3dadd( 460.744, 177.168, 81.8026, 0.3808 ) }
    apic_11 { pt3dadd( 461.45, 176.272, 81.9829, 0.4754 ) }
    apic_11 { pt3dadd( 462.019, 175.286, 82.1338, 0.3992 ) }
    apic_11 { pt3dadd( 462.487, 174.244, 82.2394, 0.3366 ) }
    apic_11 { pt3dadd( 463.058, 173.255, 82.3015, 0.2954 ) }
    apic_11 { pt3dadd( 463.743, 172.341, 82.3446, 0.313 ) }
    apic_11 { pt3dadd( 464.44, 171.434, 82.4076, 0.3464 ) }
    apic_11 { pt3dadd( 465.153, 170.549, 82.525, 0.4048 ) }
    apic_11 { pt3dadd( 465.997, 169.906, 82.7532, 0.531 ) }
    apic_11 { pt3dadd( 466.273, 168.828, 83.0665, 0.6764 ) }
    apic_11 { pt3dadd( 466.387, 167.705, 83.4176, 0.6912 ) }
    apic_11 { pt3dadd( 466.603, 166.597, 83.7721, 0.809 ) }
    apic_11 { pt3dadd( 466.961, 165.52, 84.1047, 0.5916 ) }
    apic_11 { pt3dadd( 467.275, 164.426, 84.3962, 0.4724 ) }
    apic_11 { pt3dadd( 467.532, 163.314, 84.6322, 0.4752 ) }
    apic_11 { pt3dadd( 467.798, 162.204, 84.8184, 0.5374 ) }
    apic_11 { pt3dadd( 468.211, 161.147, 84.966, 0.6056 ) }
    apic_11 { pt3dadd( 468.807, 160.171, 85.073, 0.5046 ) }
    apic_11 { pt3dadd( 469.625, 159.432, 85.1418, 0.5046 ) }
    apic_11 { pt3dadd( 470.552, 158.79, 85.1866, 0.51 ) }
    apic_11 { pt3dadd( 471.286, 157.918, 85.2093, 0.4942 ) }
    apic_11 { pt3dadd( 471.973, 157.005, 85.2107, 0.5906 ) }
    apic_11 { pt3dadd( 472.685, 156.109, 85.202, 0.6166 ) }
    apic_11 { pt3dadd( 473.382, 155.203, 85.1925, 0.491 ) }
    apic_11 { pt3dadd( 474.116, 154.327, 85.1883, 0.4156 ) }
    apic_11 { pt3dadd( 475.071, 153.765, 85.1942, 0.4272 ) }
    apic_11 { pt3dadd( 476.038, 153.187, 85.2155, 0.6286 ) }
    apic_11 { pt3dadd( 476.666, 152.265, 85.255, 0.5854 ) }
    apic_11 { pt3dadd( 477.191, 151.251, 85.3138, 0.4684 ) }
    apic_11 { pt3dadd( 477.966, 150.433, 85.3933, 0.4332 ) }
    apic_11 { pt3dadd( 478.854, 149.714, 85.4952, 0.3998 ) }
    apic_11 { pt3dadd( 479.629, 148.882, 85.6282, 0.411 ) }
    apic_11 { pt3dadd( 480.369, 148.014, 85.7987, 0.5334 ) }
    apic_11 { pt3dadd( 481.233, 147.275, 85.9989, 0.4972 ) }
    apic_11 { pt3dadd( 482.193, 146.66, 86.2333, 0.5638 ) }
    apic_11 { pt3dadd( 483.032, 145.904, 86.5099, 0.4942 ) }
    apic_11 { pt3dadd( 483.589, 144.925, 86.8305, 0.3888 ) }
    apic_11 { pt3dadd( 483.722, 143.816, 87.1993, 0.3072 ) }
    apic_11 { pt3dadd( 483.78, 142.685, 87.605, 0.2882 ) }
    apic_11 { pt3dadd( 483.934, 141.564, 88.0432, 0.2994 ) }
    apic_11 { pt3dadd( 484.105, 140.444, 88.5097, 0.3228 ) }
    apic_11 { pt3dadd( 484.157, 139.322, 89.0179, 0.3538 ) }
    apic_11 { pt3dadd( 484.18, 138.204, 89.5787, 0.4722 ) }
    apic_11 { pt3dadd( 484.187, 137.09, 90.1888, 0.3934 ) }
    apic_11 { pt3dadd( 484.188, 135.976, 90.8446, 0.3254 ) }
    apic_11 { pt3dadd( 484.18, 134.867, 91.5471, 0.2746 ) }
    apic_11 { pt3dadd( 484.158, 133.768, 92.3031, 0.2746 ) }
    apic_11 { pt3dadd( 484.018, 132.69, 93.1148, 0.2746 ) }
    apic_11 { pt3dadd( 483.491, 131.743, 93.97, 0.2746 ) }
    apic_11 { pt3dadd( 483.442, 130.65, 94.8416, 0.2746 ) }
    apic_11 { pt3dadd( 483.97, 129.757, 95.788, 0.2746 ) }
    apic_11 { pt3dadd( 484.625, 129.145, 96.7834, 0.2746 ) }
    apic_11 { pt3dadd( 485.637, 129.04, 97.8135, 0.2746 ) }
    apic_11 { pt3dadd( 485.85, 128.304, 98.8691, 0.2746 ) }
    apic_11 { pt3dadd( 486.846, 128.049, 99.8626, 0.2746 ) }
    apic_11 { pt3dadd( 487.608, 127.26, 100.76, 0.2746 ) }
    apic_11 { pt3dadd( 488.219, 126.321, 101.559, 0.2746 ) }
    apic_11 { pt3dadd( 488.707, 125.308, 102.279, 0.2746 ) }
    apic_11 { pt3dadd( 489.656, 124.876, 102.995, 0.2746 ) }
    apic_11 { pt3dadd( 490.345, 124.011, 103.703, 0.2746 ) }
    apic_11 { pt3dadd( 490.925, 123.077, 104.423, 0.2748 ) }
    apic_11 { pt3dadd( 491.233, 122.018, 105.159, 0.275 ) }
    apic_11 { pt3dadd( 491.504, 120.954, 105.911, 0.2752 ) }
    apic_11 { pt3dadd( 491.727, 119.889, 106.683, 0.276 ) }
    apic_11 { pt3dadd( 492.134, 118.87, 107.449, 0.2768 ) }
    apic_11 { pt3dadd( 492.633, 117.878, 108.195, 0.279 ) }
    apic_11 { pt3dadd( 493.047, 116.876, 108.94, 0.2828 ) }
    apic_11 { pt3dadd( 493.786, 116.078, 109.7, 0.2896 ) }
    apic_11 { pt3dadd( 494.377, 115.156, 110.431, 0.3034 ) }
    apic_11 { pt3dadd( 494.614, 114.082, 111.139, 0.323 ) }
    apic_11 { pt3dadd( 494.638, 113.08, 111.897, 0.3898 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_11 { pt3dadd( 494.34, 112.33, 112.74, 0.3644 ) }
    apic_11 { pt3dadd( 493.979, 111.379, 113.413, 0.356 ) }
    apic_11 { pt3dadd( 493.649, 110.405, 113.874, 0.3814 ) }
    apic_11 { pt3dadd( 492.95, 109.595, 114.24, 0.4576 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 4/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 457.404, 185.222, 77.5438, 1.2066 ) }
    apic_8 { pt3dadd( 458.222, 184.761, 77.7448, 1.0846 ) }
    apic_8 { pt3dadd( 459.202, 184.169, 77.9167, 0.7438 ) }
    apic_8 { pt3dadd( 460.029, 183.389, 78.0774, 0.6646 ) }
    apic_8 { pt3dadd( 460.904, 182.674, 78.2695, 0.5814 ) }
    apic_8 { pt3dadd( 461.669, 181.839, 78.4784, 0.5764 ) }
    apic_8 { pt3dadd( 462.334, 180.914, 78.6733, 0.529 ) }
    apic_8 { pt3dadd( 463.159, 180.126, 78.8337, 0.625 ) }
    apic_8 { pt3dadd( 464.132, 179.525, 78.9516, 0.8272 ) }
    apic_8 { pt3dadd( 465.117, 178.945, 79.0233, 0.8562 ) }
    apic_8 { pt3dadd( 466.119, 178.393, 79.0521, 0.9864 ) }
    apic_8 { pt3dadd( 467.075, 177.764, 79.0566, 1.0848 ) }
    apic_8 { pt3dadd( 467.977, 177.064, 79.0544, 1.0468 ) }
    apic_8 { pt3dadd( 468.976, 176.508, 79.0552, 0.9024 ) }
    apic_8 { pt3dadd( 470.032, 176.073, 79.0622, 0.7648 ) }
    apic_8 { pt3dadd( 470.976, 175.428, 79.0742, 0.7926 ) }
    apic_8 { pt3dadd( 471.906, 174.761, 79.0894, 0.8454 ) }
    apic_8 { pt3dadd( 472.859, 174.13, 79.1062, 0.9364 ) }
    apic_8 { pt3dadd( 473.839, 173.544, 79.1188, 0.9104 ) }
    apic_8 { pt3dadd( 474.819, 172.957, 79.1084, 0.893 ) }
    apic_8 { pt3dadd( 475.722, 172.258, 79.0577, 0.9384 ) }
    apic_8 { pt3dadd( 476.504, 171.425, 78.9513, 0.8758 ) }
    apic_8 { pt3dadd( 477.357, 170.676, 78.7755, 1.0118 ) }
    apic_8 { pt3dadd( 478.304, 170.056, 78.5274, 0.9568 ) }
    apic_8 { pt3dadd( 479.272, 169.472, 78.2239, 0.9738 ) }
    apic_8 { pt3dadd( 480.273, 168.943, 77.8924, 0.8848 ) }
    apic_8 { pt3dadd( 481.283, 168.43, 77.555, 0.8474 ) }
    apic_8 { pt3dadd( 482.29, 167.911, 77.2279, 0.8442 ) }
    apic_8 { pt3dadd( 483.307, 167.41, 76.9247, 0.7466 ) }
    apic_8 { pt3dadd( 484.267, 166.809, 76.6534, 0.5546 ) }
    apic_8 { pt3dadd( 485.18, 166.128, 76.4341, 0.4794 ) }
    apic_8 { pt3dadd( 486.092, 165.44, 76.2933, 0.578 ) }
    apic_8 { pt3dadd( 486.992, 164.735, 76.2336, 0.7504 ) }
    apic_8 { pt3dadd( 487.885, 164.023, 76.2342, 0.892 ) }
    apic_8 { pt3dadd( 488.823, 163.372, 76.2675, 0.8736 ) }
    apic_8 { pt3dadd( 489.75, 162.708, 76.3076, 0.8322 ) }
    apic_8 { pt3dadd( 490.523, 161.878, 76.3288, 0.79 ) }
    apic_8 { pt3dadd( 491.06, 160.877, 76.316, 0.7724 ) }
    apic_8 { pt3dadd( 491.569, 159.861, 76.2639, 0.6736 ) }
    apic_8 { pt3dadd( 492.395, 159.124, 76.1726, 0.814 ) }
    apic_8 { pt3dadd( 493.436, 158.663, 76.0472, 0.874 ) }
    apic_8 { pt3dadd( 494.473, 158.192, 75.9021, 0.8142 ) }
    apic_8 { pt3dadd( 495.414, 157.555, 75.752, 0.6176 ) }
    apic_8 { pt3dadd( 496.228, 156.758, 75.6059, 0.6712 ) }
    apic_8 { pt3dadd( 497.063, 155.983, 75.4673, 0.5694 ) }
    apic_8 { pt3dadd( 497.999, 155.328, 75.3348, 0.4432 ) }
    apic_8 { pt3dadd( 498.956, 154.702, 75.2007, 0.3636 ) }
    apic_8 { pt3dadd( 499.952, 154.146, 75.0526, 0.3816 ) }
    apic_8 { pt3dadd( 501.018, 153.746, 74.8768, 0.5262 ) }
    apic_8 { pt3dadd( 502.047, 153.268, 74.6637, 0.483 ) }
    apic_8 { pt3dadd( 502.836, 152.478, 74.4055, 0.5428 ) }
    apic_8 { pt3dadd( 503.455, 151.526, 74.0891, 0.4304 ) }
    apic_8 { pt3dadd( 504.25, 150.759, 73.6985, 0.3892 ) }
    apic_8 { pt3dadd( 505.293, 150.428, 73.2351, 0.418 ) }
    apic_8 { pt3dadd( 506.358, 150.14, 72.7056, 0.4184 ) }
    apic_8 { pt3dadd( 507.412, 149.8, 72.1392, 0.4468 ) }
    apic_8 { pt3dadd( 508.363, 149.222, 71.5747, 0.5944 ) }
    apic_8 { pt3dadd( 509.193, 148.463, 71.0427, 0.637 ) }
    apic_8 { pt3dadd( 509.902, 147.589, 70.5471, 0.6938 ) }
    apic_8 { pt3dadd( 510.617, 146.719, 70.0823, 0.678 ) }
    apic_8 { pt3dadd( 511.454, 145.96, 69.6592, 0.5488 ) }
    apic_8 { pt3dadd( 512.093, 145.025, 69.2835, 0.5656 ) }
    apic_8 { pt3dadd( 512.561, 143.99, 68.9396, 0.4974 ) }
    apic_8 { pt3dadd( 512.809, 142.883, 68.6129, 0.3946 ) }
    apic_8 { pt3dadd( 513.306, 141.861, 68.3141, 0.3184 ) }
    apic_8 { pt3dadd( 514.267, 141.262, 68.028, 0.3084 ) }
    apic_8 { pt3dadd( 515.144, 140.536, 67.7491, 0.3394 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 71/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 456.296, 111.743, 82.0476, 0.662 ) }
    apic_16 { pt3dadd( 456.129, 110.596, 82.1615, 0.555 ) }
    apic_16 { pt3dadd( 455.965, 109.467, 82.2786, 0.5844 ) }
    apic_16 { pt3dadd( 455.862, 108.328, 82.4116, 0.496 ) }
    apic_16 { pt3dadd( 455.764, 107.19, 82.5457, 0.5682 ) }
    apic_16 { pt3dadd( 455.432, 106.096, 82.6885, 0.4724 ) }
    apic_16 { pt3dadd( 454.951, 105.06, 82.8531, 0.4924 ) }
    apic_16 { pt3dadd( 454.493, 104.026, 83.0575, 0.488 ) }
    apic_16 { pt3dadd( 454.324, 102.918, 83.312, 0.451 ) }
    apic_16 { pt3dadd( 453.734, 101.95, 83.6007, 0.5218 ) }
    apic_16 { pt3dadd( 453.093, 101.007, 83.8953, 0.4328 ) }
    apic_16 { pt3dadd( 452.957, 99.8995, 84.2066, 0.4244 ) }
    apic_16 { pt3dadd( 452.492, 98.8774, 84.539, 0.3342 ) }
    apic_16 { pt3dadd( 451.475, 98.3768, 84.8764, 0.3006 ) }
    apic_16 { pt3dadd( 450.572, 97.696, 85.2281, 0.2758 ) }
    apic_16 { pt3dadd( 449.749, 96.9223, 85.5938, 0.2768 ) }
    apic_16 { pt3dadd( 449.093, 96.0238, 85.9505, 0.279 ) }
    apic_16 { pt3dadd( 448.739, 94.9419, 86.2828, 0.2826 ) }
    apic_16 { pt3dadd( 448.191, 93.946, 86.6116, 0.2892 ) }
    apic_16 { pt3dadd( 447.639, 92.9699, 86.9739, 0.3028 ) }
    apic_16 { pt3dadd( 447.234, 91.9166, 87.3771, 0.3214 ) }
    apic_16 { pt3dadd( 446.582, 91.052, 87.8461, 0.387 ) }
    apic_16 { pt3dadd( 445.681, 90.445, 88.3968, 0.3588 ) }
    apic_16 { pt3dadd( 444.874, 89.6861, 88.9655, 0.3476 ) }
    apic_16 { pt3dadd( 444.037, 88.9336, 89.4958, 0.356 ) }
    apic_16 { pt3dadd( 443.271, 88.102, 89.9646, 0.4576 ) }
    apic_16 { pt3dadd( 442.652, 87.1958, 90.9423, 0.4576 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 98/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 456.296, 111.743, 82.0476, 0.662 ) }
    apic_15 { pt3dadd( 456.239, 110.797, 79.9588, 0.4038 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    apic_15 { pt3dadd( 456.549, 109.712, 79.539, 0.4082 ) }
    apic_15 { pt3dadd( 457.003, 108.675, 79.107, 0.3512 ) }
    apic_15 { pt3dadd( 457.498, 107.655, 78.6755, 0.3332 ) }
    apic_15 { pt3dadd( 457.528, 106.578, 78.2454, 0.3308 ) }
    apic_15 { pt3dadd( 457.53, 105.455, 77.8302, 0.404 ) }
    apic_15 { pt3dadd( 458.179, 104.602, 77.4418, 0.3914 ) }
    apic_15 { pt3dadd( 458.886, 103.726, 77.0538, 0.4036 ) }
    apic_15 { pt3dadd( 459.041, 102.631, 76.657, 0.483 ) }
    apic_15 { pt3dadd( 459.139, 101.714, 76.2129, 0.5818 ) }
    apic_15 { pt3dadd( 459.331, 100.614, 75.8901, 0.5422 ) }
    apic_15 { pt3dadd( 459.946, 99.6534, 75.6689, 0.4068 ) }
    apic_15 { pt3dadd( 460.836, 98.9862, 75.4485, 0.4576 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 12/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 515.144, 140.536, 67.7491, 0.3394 ) }
    apic_10 { pt3dadd( 515.387, 140.172, 68.1789, 0.4576 ) }
    apic_10 { pt3dadd( 516.188, 139.415, 69.0598, 0.5574 ) }
    apic_10 { pt3dadd( 517.19, 138.891, 69.4204, 0.4192 ) }
    apic_10 { pt3dadd( 518.242, 138.489, 69.8407, 0.3264 ) }
    apic_10 { pt3dadd( 519.258, 138.058, 70.3461, 0.2766 ) }
    apic_10 { pt3dadd( 520.304, 137.675, 70.9036, 0.2782 ) }
    apic_10 { pt3dadd( 520.914, 136.783, 71.4834, 0.2814 ) }
    apic_10 { pt3dadd( 521.931, 136.355, 72.074, 0.287 ) }
    apic_10 { pt3dadd( 523.025, 136.288, 72.6774, 0.2988 ) }
    apic_10 { pt3dadd( 524.085, 136.174, 73.2906, 0.3142 ) }
    apic_10 { pt3dadd( 524.903, 135.492, 73.8886, 0.3734 ) }
    apic_10 { pt3dadd( 525.816, 135.216, 74.4646, 0.3338 ) }
    apic_10 { pt3dadd( 526.907, 135.039, 75.0134, 0.3 ) }
    apic_10 { pt3dadd( 527.137, 134.0, 75.5479, 0.2746 ) }
    apic_10 { pt3dadd( 527.807, 133.102, 76.0505, 0.2746 ) }
    apic_10 { pt3dadd( 528.455, 132.171, 76.4977, 0.2746 ) }
    apic_10 { pt3dadd( 529.044, 131.2, 76.8928, 0.2746 ) }
    apic_10 { pt3dadd( 529.615, 130.218, 77.2551, 0.2746 ) }
    apic_10 { pt3dadd( 530.199, 129.25, 77.6079, 0.2746 ) }
    apic_10 { pt3dadd( 530.814, 128.295, 77.9422, 0.2746 ) }
    apic_10 { pt3dadd( 531.436, 127.341, 78.2583, 0.2746 ) }
    apic_10 { pt3dadd( 532.058, 126.387, 78.5683, 0.2746 ) }
    apic_10 { pt3dadd( 532.746, 125.856, 78.8253, 0.2746 ) }
    apic_10 { pt3dadd( 533.654, 125.186, 79.1319, 0.2744 ) }
    apic_10 { pt3dadd( 534.563, 124.515, 79.4828, 0.2744 ) }
    apic_10 { pt3dadd( 535.471, 123.845, 79.8739, 0.2742 ) }
    apic_10 { pt3dadd( 536.379, 123.174, 80.299, 0.2736 ) }
    apic_10 { pt3dadd( 537.289, 122.504, 80.75, 0.2728 ) }
    apic_10 { pt3dadd( 538.197, 121.834, 81.2378, 0.2712 ) }
    apic_10 { pt3dadd( 539.105, 121.163, 81.732, 0.2684 ) }
    apic_10 { pt3dadd( 540.014, 120.493, 82.2198, 0.2626 ) }
    apic_10 { pt3dadd( 540.922, 119.823, 82.6904, 0.2542 ) }
    apic_10 { pt3dadd( 541.786, 119.174, 83.1956, 0.2288 ) }
    apic_10 { pt3dadd( 542.63, 118.536, 84.4304, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 47/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 515.144, 140.536, 67.7491, 0.3394 ) }
    apic_9 { pt3dadd( 515.692, 139.51, 67.2364, 0.5258 ) }
    apic_9 { pt3dadd( 516.125, 138.469, 66.9346, 0.5176 ) }
    apic_9 { pt3dadd( 516.832, 137.6, 66.6109, 0.434 ) }
    apic_9 { pt3dadd( 517.809, 137.046, 66.2698, 0.3808 ) }
    apic_9 { pt3dadd( 518.529, 136.175, 65.9078, 0.4754 ) }
    apic_9 { pt3dadd( 519.297, 135.35, 65.5357, 0.3988 ) }
    apic_9 { pt3dadd( 520.274, 134.824, 65.1714, 0.3358 ) }
    apic_9 { pt3dadd( 521.385, 134.628, 64.8287, 0.294 ) }
    apic_9 { pt3dadd( 522.419, 134.23, 64.512, 0.3112 ) }
    apic_9 { pt3dadd( 523.391, 133.634, 64.2222, 0.3384 ) }
    apic_9 { pt3dadd( 524.388, 133.085, 63.9492, 0.4134 ) }
    apic_9 { pt3dadd( 525.374, 132.523, 63.6779, 0.4334 ) }
    apic_9 { pt3dadd( 526.293, 131.864, 63.4018, 0.3606 ) }
    apic_9 { pt3dadd( 527.347, 131.512, 63.1355, 0.3022 ) }
    apic_9 { pt3dadd( 528.481, 131.457, 62.8975, 0.279 ) }
    apic_9 { pt3dadd( 529.612, 131.594, 62.6998, 0.2826 ) }
    apic_9 { pt3dadd( 530.752, 131.654, 62.5498, 0.289 ) }
    apic_9 { pt3dadd( 531.893, 131.573, 62.4476, 0.3024 ) }
    apic_9 { pt3dadd( 533.026, 131.428, 62.3843, 0.321 ) }
    apic_9 { pt3dadd( 534.153, 131.229, 62.347, 0.386 ) }
    apic_9 { pt3dadd( 535.278, 131.019, 62.3238, 0.3584 ) }
    apic_9 { pt3dadd( 536.404, 130.826, 62.3078, 0.34 ) }
    apic_9 { pt3dadd( 537.534, 130.637, 62.2947, 0.3746 ) }
    apic_9 { pt3dadd( 538.66, 130.439, 62.2796, 0.3358 ) }
    apic_9 { pt3dadd( 539.785, 130.232, 62.2577, 0.3036 ) }
    apic_9 { pt3dadd( 540.916, 130.066, 62.2412, 0.2814 ) }
    apic_9 { pt3dadd( 541.975, 129.651, 62.2373, 0.287 ) }
    apic_9 { pt3dadd( 542.831, 128.904, 62.2457, 0.2986 ) }
    apic_9 { pt3dadd( 543.54, 128.007, 62.2597, 0.314 ) }
    apic_9 { pt3dadd( 544.261, 127.119, 62.2765, 0.3732 ) }
    apic_9 { pt3dadd( 545.081, 126.321, 62.2933, 0.3336 ) }
    apic_9 { pt3dadd( 545.902, 125.524, 62.305, 0.2994 ) }
    apic_9 { pt3dadd( 546.811, 124.831, 62.3109, 0.2736 ) }
    apic_9 { pt3dadd( 547.743, 124.165, 62.3132, 0.2728 ) }
    apic_9 { pt3dadd( 548.673, 123.501, 62.3137, 0.2712 ) }
    apic_9 { pt3dadd( 549.604, 122.836, 62.3132, 0.2684 ) }
    apic_9 { pt3dadd( 550.535, 122.171, 62.3126, 0.2626 ) }
    apic_9 { pt3dadd( 551.465, 121.505, 62.3123, 0.2542 ) }
    apic_9 { pt3dadd( 552.396, 120.841, 62.3123, 0.2288 ) }
    apic_9 { pt3dadd( 553.328, 120.176, 62.3123, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_566, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_566 = new SectionList()
    soma_0 ModelViewParmSubset_566.append()
    axon_0 ModelViewParmSubset_566.append()
    axon_1 ModelViewParmSubset_566.append()

    // Group: {name=ModelViewParmSubset_567, groups=[], sections=[dend_34, dend_29, dend_28, dend_25, dend_10, dend_3, dend_0, apic_0, dend_42, dend_35, dend_33, dend_30, dend_27, dend_26, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, apic_20, apic_1, dend_44, dend_43, dend_39, dend_36, dend_32, dend_31, dend_14, dend_13, dend_7, dend_6, apic_26, apic_21, apic_19, apic_2, dend_48, dend_45, dend_41, dend_40, dend_38, dend_37, dend_16, dend_15, dend_9, dend_8, apic_28, apic_27, apic_25, apic_22, apic_18, apic_3, dend_47, dend_46, dend_18, dend_17, apic_24, apic_23, apic_17, apic_4, dend_22, dend_19, apic_6, apic_5, dend_24, dend_23, dend_21, dend_20, apic_12, apic_7, apic_14, apic_13, apic_11, apic_8, apic_16, apic_15, apic_10, apic_9]}
    ModelViewParmSubset_567 = new SectionList()
    dend_34 ModelViewParmSubset_567.append()
    dend_29 ModelViewParmSubset_567.append()
    dend_28 ModelViewParmSubset_567.append()
    dend_25 ModelViewParmSubset_567.append()
    dend_10 ModelViewParmSubset_567.append()
    dend_3 ModelViewParmSubset_567.append()
    dend_0 ModelViewParmSubset_567.append()
    apic_0 ModelViewParmSubset_567.append()
    dend_42 ModelViewParmSubset_567.append()
    dend_35 ModelViewParmSubset_567.append()
    dend_33 ModelViewParmSubset_567.append()
    dend_30 ModelViewParmSubset_567.append()
    dend_27 ModelViewParmSubset_567.append()
    dend_26 ModelViewParmSubset_567.append()
    dend_12 ModelViewParmSubset_567.append()
    dend_11 ModelViewParmSubset_567.append()
    dend_5 ModelViewParmSubset_567.append()
    dend_4 ModelViewParmSubset_567.append()
    dend_2 ModelViewParmSubset_567.append()
    dend_1 ModelViewParmSubset_567.append()
    apic_20 ModelViewParmSubset_567.append()
    apic_1 ModelViewParmSubset_567.append()
    dend_44 ModelViewParmSubset_567.append()
    dend_43 ModelViewParmSubset_567.append()
    dend_39 ModelViewParmSubset_567.append()
    dend_36 ModelViewParmSubset_567.append()
    dend_32 ModelViewParmSubset_567.append()
    dend_31 ModelViewParmSubset_567.append()
    dend_14 ModelViewParmSubset_567.append()
    dend_13 ModelViewParmSubset_567.append()
    dend_7 ModelViewParmSubset_567.append()
    dend_6 ModelViewParmSubset_567.append()
    apic_26 ModelViewParmSubset_567.append()
    apic_21 ModelViewParmSubset_567.append()
    apic_19 ModelViewParmSubset_567.append()
    apic_2 ModelViewParmSubset_567.append()
    dend_48 ModelViewParmSubset_567.append()
    dend_45 ModelViewParmSubset_567.append()
    dend_41 ModelViewParmSubset_567.append()
    dend_40 ModelViewParmSubset_567.append()
    dend_38 ModelViewParmSubset_567.append()
    dend_37 ModelViewParmSubset_567.append()
    dend_16 ModelViewParmSubset_567.append()
    dend_15 ModelViewParmSubset_567.append()
    dend_9 ModelViewParmSubset_567.append()
    dend_8 ModelViewParmSubset_567.append()
    apic_28 ModelViewParmSubset_567.append()
    apic_27 ModelViewParmSubset_567.append()
    apic_25 ModelViewParmSubset_567.append()
    apic_22 ModelViewParmSubset_567.append()
    apic_18 ModelViewParmSubset_567.append()
    apic_3 ModelViewParmSubset_567.append()
    dend_47 ModelViewParmSubset_567.append()
    dend_46 ModelViewParmSubset_567.append()
    dend_18 ModelViewParmSubset_567.append()
    dend_17 ModelViewParmSubset_567.append()
    apic_24 ModelViewParmSubset_567.append()
    apic_23 ModelViewParmSubset_567.append()
    apic_17 ModelViewParmSubset_567.append()
    apic_4 ModelViewParmSubset_567.append()
    dend_22 ModelViewParmSubset_567.append()
    dend_19 ModelViewParmSubset_567.append()
    apic_6 ModelViewParmSubset_567.append()
    apic_5 ModelViewParmSubset_567.append()
    dend_24 ModelViewParmSubset_567.append()
    dend_23 ModelViewParmSubset_567.append()
    dend_21 ModelViewParmSubset_567.append()
    dend_20 ModelViewParmSubset_567.append()
    apic_12 ModelViewParmSubset_567.append()
    apic_7 ModelViewParmSubset_567.append()
    apic_14 ModelViewParmSubset_567.append()
    apic_13 ModelViewParmSubset_567.append()
    apic_11 ModelViewParmSubset_567.append()
    apic_8 ModelViewParmSubset_567.append()
    apic_16 ModelViewParmSubset_567.append()
    apic_15 ModelViewParmSubset_567.append()
    apic_10 ModelViewParmSubset_567.append()
    apic_9 ModelViewParmSubset_567.append()

    // Group: {name=dend, groups=[], sections=[dend_34, dend_29, dend_28, dend_25, dend_10, dend_3, dend_0, dend_42, dend_35, dend_33, dend_30, dend_27, dend_26, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, dend_44, dend_43, dend_39, dend_36, dend_32, dend_31, dend_14, dend_13, dend_7, dend_6, dend_48, dend_45, dend_41, dend_40, dend_38, dend_37, dend_16, dend_15, dend_9, dend_8, dend_47, dend_46, dend_18, dend_17, dend_22, dend_19, dend_24, dend_23, dend_21, dend_20]}
    dend = new SectionList()
    dend_34 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_25 dend.append()
    dend_10 dend.append()
    dend_3 dend.append()
    dend_0 dend.append()
    dend_42 dend.append()
    dend_35 dend.append()
    dend_33 dend.append()
    dend_30 dend.append()
    dend_27 dend.append()
    dend_26 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_2 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_1 dend.append()
    dend_44 dend.append()
    dend_43 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_48 dend.append()
    dend_45 dend.append()
    dend_41 dend.append()
    dend_40 dend.append()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_47 dend.append()
    dend_46 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_26, apic_21, apic_19, apic_2, apic_28, apic_27, apic_25, apic_22, apic_18, apic_3, apic_24, apic_23, apic_17, apic_4, apic_6, apic_5, apic_12, apic_7, apic_14, apic_13, apic_11, apic_8, apic_16, apic_15, apic_10, apic_9]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_20 apic.append()
    apic_1 apic.append()
    apic_26 apic.append()
    apic_21 apic.append()
    apic_19 apic.append()
    apic_2 apic.append()
    apic_28 apic.append()
    apic_27 apic.append()
    apic_25 apic.append()
    apic_22 apic.append()
    apic_18 apic.append()
    apic_3 apic.append()
    apic_24 apic.append()
    apic_23 apic.append()
    apic_17 apic.append()
    apic_4 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_12 apic.append()
    apic_7 apic.append()
    apic_14 apic.append()
    apic_13 apic.append()
    apic_11 apic.append()
    apic_8 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_10 apic.append()
    apic_9 apic.append()

    // Group: {name=OneSecGrp_SectionRef_23889, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_23889 = new SectionList()
    soma_0 OneSecGrp_SectionRef_23889.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_26, apic_26, apic_26, apic_26, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.3852353  // units: uF/cm2
    forsec apic cm = 2.3852353  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 144.02812  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0048876847  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 2.8415574E-8  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.9137945  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 1.1235068E-5  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 5.3382055E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 6.759904E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 4.9075467E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.13270073  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 8.5968295E-6  // units: S cm-2
        e_pas_nml2 = -92.95116  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 1.6383333E-6  // units: S cm-2
        e_pas_nml2 = -92.95116  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.2512523E-6  // units: S cm-2
        e_pas_nml2 = -92.95116  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 2.2470806E-4  // units: S cm-2
        e_pas_nml2 = -92.95116  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 2.0672595E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0010728297  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_486557284
    forsec soma {
        insert CaDynamics_486557284
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 7
    dend_33 nseg = 3
    dend_27 nseg = 3
    dend_11 nseg = 7
    dend_43 nseg = 5
    dend_36 nseg = 3
    dend_32 nseg = 3
    dend_13 nseg = 5
    dend_6 nseg = 3
    apic_19 nseg = 3
    dend_48 nseg = 5
    dend_41 nseg = 3
    dend_40 nseg = 5
    dend_38 nseg = 3
    dend_9 nseg = 5
    dend_8 nseg = 5
    apic_28 nseg = 3
    apic_27 nseg = 3
    apic_18 nseg = 3
    dend_47 nseg = 3
    dend_46 nseg = 7
    apic_17 nseg = 3
    dend_22 nseg = 3
    apic_6 nseg = 13
    apic_5 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 3
    apic_12 nseg = 3
    apic_13 nseg = 3
    apic_11 nseg = 5
    apic_8 nseg = 3
    apic_10 nseg = 3
    apic_9 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_486557284


