// Cell: bNAC219_L23_NBC_d27deeaf6a_0_0
/*
{
  "id" : "bNAC219_L23_NBC_d27deeaf6a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.89093, 6.3846, -1.48625, 2.82016", "-2.66386, 5.61657, -1.27833, 4.98681", "-2.43678, 4.84853, -1.07041, 7.51044", "-2.20971, 4.0805, -0.862483, 8.92538", "-1.98264, 3.31246, -0.65456, 10.0669", "-1.75557, 2.54443, -0.446636, 10.3676", "-1.52849, 1.7764, -0.238713, 10.6171", "-1.30142, 1.00836, -0.0307891, 10.1846", "-1.07435, 0.240325, 0.177134, 9.79445", "-0.847273, -0.52771, 0.385058, 9.58423", "-0.6202, -1.29574, 0.592981, 9.374", "-0.393128, -2.06378, 0.800905, 9.16378", "-0.166055, -2.83181, 1.00883, 8.95369", "0.0610184, -3.59985, 1.21675, 8.74371", "0.288091, -4.36788, 1.42468, 8.44292", "0.515164, -5.13592, 1.6326, 7.88171", "0.742237, -5.90395, 1.84052, 7.32051", "0.96931, -6.67199, 2.04845, 6.7381", "1.19638, -7.44002, 2.25637, 5.93312", "1.42346, -8.20806, 2.46429, 5.04519", "1.65053, -8.97609, 2.67222, 2.76105" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-2.9567, 3.84505, 8.71987, 1.11", "-3.8242, 6.22905, 8.68487, 0.83", "-4.18883, 7.61556, 8.82302, 0.83", "-5.09301, 11.6428, 9.44105, 0.83", "-5.40684, 13.9465, 10.0143, 0.83", "-5.61774, 15.9005, 10.5951, 1.11", "-5.65945, 18.4781, 11.5847, 0.83", "-5.38548, 21.6447, 13.1696, 0.83", "-5.24209, 22.7319, 13.8073, 0.83", "-4.71468, 25.8348, 15.8925, 0.55", "-4.05312, 29.7155, 18.8559, 0.55", "-3.46205, 33.5858, 21.9711, 0.55", "-3.09564, 36.462, 24.3551, 0.55", "-2.85087, 38.2065, 25.7616, 0.28", "-2.64781, 39.6771, 26.9945, 0.55", "-2.51596, 41.6707, 28.6878, 0.55", "-3.65396, 50.524, 30.7647, 0.55", "-6.0806, 59.1212, 32.8113, 0.55", "-9.55874, 66.8941, 36.1986, 0.55", "-13.3531, 74.4641, 39.7038, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-5.4967, 3.59505, -7.38013, 1.66", "-8.1401, 4.44706, -9.3989, 1.66", "-11.8966, 5.65784, -12.2678, 1.66", "-14.5373, 6.50896, -14.2845, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-4.2067, -0.704942, -10.0602, 1.11", "-6.28829, -0.744744, -9.94631, 1.11", "-9.02783, -0.67051, -9.7519, 1.11", "-11.9366, -0.463986, -9.53413, 1.11", "-14.4259, -0.26184, -9.41177, 1.11", "-18.3088, 0.0424143, -9.29597, 0.83", "-21.1198, 0.22029, -9.27384, 0.83", "-23.162, 0.340022, -9.30586, 1.39", "-25.4295, 0.485472, -9.39515, 1.11", "-27.4946, 0.655397, -9.54205, 1.11", "-30.9469, 0.873576, -9.87922, 1.11", "-34.2218, 0.888969, -10.267, 1.11", "-36.6132, 0.853498, -10.6565, 0.83", "-37.9878, 0.842711, -10.8964, 0.83", "-42.5903, 0.622878, -12.1601, 0.83", "-43.7712, 0.465195, -12.6585, 0.83", "-46.5465, -0.0967032, -14.3687, 0.83", "-49.3373, -0.712155, -16.4157, 0.83", "-52.2102, -1.31683, -18.8688, 0.83", "-57.5929, -2.38946, -23.6423, 0.83", "-62.3154, -3.30018, -28.17, 0.83", "-65.8833, -3.89665, -31.7549, 0.83", "-70.4435, -4.54562, -36.5993, 0.55", "-73.489, -4.94903, -39.9233, 0.28", "-76.5867, -5.26976, -43.3968, 0.55", "-79.6095, -5.23759, -46.421, 0.55", "-80.3207, -5.14509, -47.0988, 0.55", "-81.4626, -4.98884, -48.1529, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.5167, -3.18495, 11.1598, 1.66", "-5.58989, -4.31038, 12.3527, 1.39", "-7.92592, -6.76013, 14.9491, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.0967, -6.26495, 15.1098, 1.39", "-3.07842, -9.32875, 14.6078, 1.39", "-4.10636, -12.5368, 14.0821, 1.39", "-4.81618, -14.7521, 13.7191, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.8933, -8.84494, 6.44987, 4.16", "3.33228, -9.32498, 5.42192, 4.16", "4.93835, -11.0813, 1.66097, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "0.0933001, -4.30494, 3.93987, 1.11", "1.31793, -4.01124, 4.4001, 1.11", "2.37907, -3.30307, 5.59335, 1.11", "4.05821, -2.18246, 7.48156, 1.11", "5.42471, -1.2705, 9.0182, 0.83", "7.6023, 0.182758, 11.4669, 0.83", "9.65308, 1.55138, 13.773, 1.11", "11.4194, 3.20412, 16.8338, 1.11", "16.8582, 7.5204, 23.1912, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.8933, 4.86506, 1.41987, 1.39", "4.63828, 8.29566, 1.41987, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.65053, -8.97609, 2.67222, 0.823639", "5.90337, -23.3606, 2.67222, 0.823639", "10.1562, -37.7451, 2.67222, 0.823639" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-13.3531, 74.4641, 39.7038, 0.55", "-15.1171, 83.0213, 42.9699, 0.55", "-15.5323, 92.1647, 44.7675, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-13.3531, 74.4641, 39.7038, 0.55", "-13.7217, 86.4211, 45.3841, 0.55", "-12.4688, 97.1096, 53.1015, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-14.5373, 6.50896, -14.2845, 0.83", "-16.5561, 9.28802, -15.8489, 0.83", "-19.3934, 13.1937, -18.0475, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-14.5373, 6.50896, -14.2845, 1.11", "-17.9883, 8.1275, -15.092, 1.11", "-20.5219, 9.31574, -15.6848, 1.11", "-21.8756, 9.95063, -16.0015, 1.11", "-25.1669, 11.4942, -16.7716, 0.83", "-27.1715, 12.4344, -17.2407, 0.83", "-29.0624, 13.3212, -17.6831, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-81.4626, -4.98884, -48.1529, 0.28", "-81.128, -5.82816, -51.7594, 0.28", "-81.0553, -6.01056, -52.5431, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-81.4626, -4.98884, -48.1529, 0.28", "-83.2434, -7.16297, -51.8857, 0.28", "-84.2349, -8.30291, -53.7473, 1.11", "-85.2709, -9.38955, -55.4546, 1.11", "-86.0616, -10.1493, -56.6265, 0.28", "-86.6939, -10.6023, -57.4414, 1.39", "-89.6363, -12.367, -61.1295, 0.28", "-91.0846, -13.0348, -62.6867, 1.11", "-92.0829, -13.4034, -63.6434, 0.55", "-93.4876, -13.8502, -64.9442, 0.28", "-99.9903, -15.6026, -70.8849, 0.28", "-102.29, -16.1304, -72.911, 0.83", "-104.557, -16.517, -74.821, 0.28", "-105.779, -16.6793, -75.8608, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-7.92592, -6.76013, 14.9491, 0.83", "-8.81809, -8.75693, 17.6321, 0.83", "-9.37264, -9.8388, 18.8603, 0.55", "-10.2882, -11.2015, 20.6747, 0.55", "-11.3095, -12.331, 22.584, 0.55", "-12.8486, -13.589, 25.2916, 0.55", "-13.9331, -14.4754, 27.1993, 0.55", "-15.1912, -15.1592, 29.0021, 0.55", "-17.1557, -15.7671, 31.8762, 0.55", "-18.2622, -15.7088, 33.2274, 0.55", "-19.4635, -15.3281, 34.6125, 0.55", "-24.421, -18.2978, 42.4845, 0.55", "-30.8179, -22.5008, 48.549, 0.55", "-36.0258, -26.747, 55.6352, 0.55", "-42.8863, -28.8361, 62.2634, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-7.92592, -6.76013, 14.9491, 0.83", "-9.48783, -8.19803, 13.036, 0.83", "-11.5278, -10.0761, 10.5372, 0.83", "-15.5645, -13.7924, 5.59269, 0.83", "-16.376, -14.5394, 4.5987, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-4.81618, -14.7521, 13.7191, 0.83", "-6.11309, -16.9413, 13.7044, 0.83", "-6.95131, -18.0726, 13.6931, 0.83", "-8.40028, -19.9466, 13.6532, 0.83", "-10.132, -22.1863, 13.6056, 0.83", "-10.7416, -22.9747, 13.5888, 0.83", "-12.3519, -25.0574, 13.5445, 1.11", "-14.6693, -27.8104, 13.4734, 0.83", "-15.6303, -28.8504, 13.441, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-4.81618, -14.7521, 13.7191, 0.83", "-4.49576, -16.9296, 14.7502, 0.83", "-4.33378, -18.474, 15.3596, 0.83", "-4.16299, -19.6172, 15.7315, 0.83", "-3.63483, -22.957, 16.6897, 0.83", "-3.32705, -24.5592, 17.1104, 0.83", "-2.89827, -26.3891, 17.5604, 0.83", "-2.11675, -29.5328, 18.2601, 0.83", "-1.34617, -32.5566, 18.8948, 0.83", "-1.16544, -33.7024, 19.1283, 0.83", "-0.987091, -35.6793, 19.5483, 0.83", "-0.925162, -37.129, 19.8955, 0.83", "-0.923527, -38.7908, 20.3142, 0.83", "-1.03099, -42.6285, 21.3149, 0.83", "-1.40076, -48.4798, 22.7878, 0.55", "-1.50187, -50.9889, 23.3677, 0.55", "-1.57583, -53.2021, 23.8152, 0.55", "-1.60377, -55.7163, 24.2092, 0.55", "-1.48879, -58.3901, 24.4877, 0.55", "-1.19687, -60.5045, 24.545, 0.55", "-0.482476, -63.4455, 24.5198, 0.55", "0.197163, -66.1889, 24.4071, 0.55", "0.62961, -67.8741, 24.3439, 0.28", "0.905389, -68.8974, 24.3014, 0.83", "1.20516, -69.8956, 24.2588, 0.55", "2.1661, -72.7587, 24.1656, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.93835, -11.0813, 1.66097, 2.49", "5.58606, -13.5439, 0.810835, 2.49" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.93835, -11.0813, 1.66097, 1.39", "7.80494, -10.3881, -0.749521, 1.39", "9.20611, -10.0492, -1.92775, 1.11", "10.7924, -9.66558, -3.26164, 1.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "16.8582, 7.5204, 23.1912, 0.55", "21.4436, 11.7651, 30.0309, 0.55", "26.3253, 15.212, 37.1101, 0.55", "32.0278, 20.0553, 42.5736, 0.55", "37.6574, 23.7571, 48.9321, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "16.8582, 7.5204, 23.1912, 0.55", "24.8286, 10.8352, 28.8128, 0.55", "33.5251, 14.4178, 33.0145, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.63828, 8.29566, 1.41987, 1.11", "6.15399, 11.387, 2.33768, 1.11", "7.50024, 14.033, 2.72103, 1.11", "9.57108, 17.9813, 2.52765, 1.11", "10.9956, 20.7545, 2.21631, 1.11", "12.4312, 23.5302, 1.74085, 0.83", "14.4384, 27.0628, 0.896301, 0.83", "17.8311, 32.276, -1.1358, 0.83", "20.7827, 36.3503, -3.51103, 0.83", "21.94, 37.8307, -4.61789, 0.83", "23.9766, 40.3305, -6.86188, 0.55", "26.1642, 42.892, -9.48455, 0.83", "28.612, 45.6958, -12.5374, 0.55", "30.4335, 47.8139, -14.9556, 0.55", "31.4106, 48.9913, -16.3552, 0.55", "33.3306, 51.3358, -19.3372, 0.28", "33.7661, 51.9364, -20.1074, 0.83", "34.3135, 52.9195, -21.2751, 0.83", "36.6296, 57.7722, -26.9053, 0.55", "37.1379, 58.8555, -28.3424, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.63828, 8.29566, 1.41987, 0.55", "6.65525, 9.52416, 0.179491, 0.55", "7.40351, 9.95749, -0.428606, 0.55", "8.77247, 10.7385, -1.65621, 0.83", "9.65854, 11.2824, -2.60692, 0.83", "11.8136, 12.7893, -5.12903, 0.83", "12.2546, 13.1223, -5.67877, 0.83", "13.7983, 14.358, -7.90934, 0.83", "15.7598, 16.0399, -11.0354, 0.83", "17.4146, 17.7031, -14.0324, 0.83", "18.5884, 19.0613, -16.3221, 0.83", "19.0508, 19.6722, -17.2599, 0.83", "19.8526, 20.879, -18.8924, 0.83", "20.0435, 21.2352, -19.2802, 0.83", "20.368, 21.9524, -19.9367, 0.28", "20.735, 22.7547, -20.5376, 0.83", "21.7072, 24.7873, -21.8959, 0.83", "22.5721, 26.2073, -22.6795, 0.83", "23.9607, 28.0779, -23.684, 0.55", "24.3757, 28.5626, -23.9604, 0.83", "25.5494, 29.7996, -24.8168, 0.55", "26.0605, 30.3079, -25.2089, 0.83", "28.4162, 32.6044, -27.2243, 0.28", "29.6434, 33.8309, -28.4357, 0.83", "29.9149, 34.1303, -28.8227, 0.83", "31.5754, 36.0302, -31.723, 0.28", "31.7844, 36.2852, -32.1718, 0.55", "32.466, 37.2348, -33.9724, 0.28", "32.6846, 37.6129, -34.749, 1.11", "33.9888, 40.0574, -39.511, 0.55", "34.3669, 40.7661, -40.8397, 0.28", "34.63, 41.2391, -41.7358, 0.55", "34.8802, 41.6769, -42.5792, 0.28", "35.291, 42.3647, -43.8551, 0.55", "35.8091, 43.2443, -45.3974, 0.28", "36.2281, 44.1048, -46.1809, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.1562, -37.7451, 2.67222, 0.28", "14.409, -52.1295, 2.67222, 0.28", "18.6619, -66.514, 2.67222, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-19.3934, 13.1937, -18.0475, 0.55", "-23.7312, 16.1736, -22.6642, 0.55", "-26.7746, 18.3086, -24.9831, 1.11", "-30.6632, 21.1416, -27.8237, 0.83", "-33.1125, 22.8976, -29.5111, 0.83", "-36.3505, 25.2192, -31.7762, 0.83", "-40.4419, 28.2968, -34.6234, 0.83", "-43.1119, 30.2514, -36.2785, 0.55", "-46.1894, 32.7457, -38.0052, 0.28", "-47.3369, 33.7783, -38.6115, 0.83", "-49.6005, 36.0388, -40.0862, 0.83", "-51.3203, 37.9465, -41.504, 0.55", "-53.2026, 40.2115, -43.6143, 0.83", "-55.072, 42.536, -45.8226, 0.28", "-56.1875, 44.01, -47.2199, 0.28", "-57.1812, 45.4015, -48.613, 0.55", "-57.7658, 46.2426, -49.5004, 0.83", "-59.8986, 49.2948, -53.1425, 0.28", "-60.6366, 50.3825, -54.461, 0.83", "-62.3273, 52.9853, -57.5879, 0.55", "-62.8916, 53.8705, -58.6498, 0.28", "-63.9724, 55.7314, -60.7629, 1.11", "-65.2794, 57.9683, -63.1492, 0.28", "-66.4015, 59.6703, -64.8445, 0.55", "-67.1898, 60.6886, -65.9202, 0.28", "-67.9139, 61.5558, -66.7906, 0.83", "-69.0349, 62.7801, -68.2758, 0.28", "-70.2285, 63.9426, -69.8564, 0.55", "-71.8609, 65.4082, -71.9111, 0.83", "-75.7211, 69.0044, -77.0369, 0.28", "-76.6354, 69.8833, -78.2613, 0.83", "-80.363, 73.7681, -83.1977, 0.28", "-80.8504, 74.3292, -83.8484, 0.55", "-81.7801, 75.6825, -85.153, 1.11", "-83.874, 79.5211, -88.2308, 0.28", "-84.2273, 80.3465, -88.7591, 0.55", "-85.0465, 82.4785, -89.9298, 0.28", "-85.2579, 83.1167, -90.2408, 0.55", "-86.5486, 87.0615, -92.3692, 0.28", "-87.4205, 89.4228, -93.9679, 0.83", "-88.0702, 90.8709, -95.0634, 0.28", "-88.3341, 91.387, -95.5078, 0.83", "-90.8939, 95.9517, -99.6437, 0.28", "-91.2587, 96.571, -100.232, 0.83", "-93.3491, 99.739, -103.476, 0.28", "-93.9878, 100.655, -104.399, 0.55", "-96.2725, 103.737, -107.7, 0.28", "-97.4853, 105.261, -109.358, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-19.3934, 13.1937, -18.0475, 0.83", "-20.9923, 14.1649, -17.3734, 0.83", "-22.0199, 14.8478, -16.9888, 0.55", "-25.1142, 16.9249, -16.0759, 0.55", "-28.5368, 19.2879, -15.3163, 0.55", "-30.4466, 20.5757, -15.0381, 0.55", "-31.7408, 21.4263, -14.9457, 0.55", "-34.1615, 22.9452, -14.9875, 0.55", "-35.5818, 23.7575, -15.2139, 0.55", "-36.8746, 24.4153, -15.5689, 0.55", "-38.2307, 25.0042, -16.1794, 0.55", "-40.391, 25.766, -17.2671, 0.55", "-42.6291, 26.4033, -18.4564, 0.55", "-43.4129, 26.563, -18.8703, 0.28", "-44.6695, 26.8008, -19.493, 1.39", "-47.4773, 27.2464, -20.764, 0.28", "-48.1952, 27.3879, -21.0739, 0.83", "-49.095, 27.5739, -21.4571, 0.28", "-50.0996, 27.8674, -21.8436, 0.55", "-50.4093, 27.9783, -21.951, 0.28", "-51.7955, 28.568, -22.4011, 0.83", "-54.1067, 29.6355, -22.9501, 0.28", "-54.7863, 29.9652, -23.1268, 0.55", "-55.9252, 30.5396, -23.4358, 0.28", "-56.7533, 30.9271, -23.6592, 0.55", "-58.3079, 31.585, -24.0564, 0.28", "-58.7496, 31.7137, -24.1372, 0.83", "-60.9508, 32.073, -24.3859, 0.28", "-61.3748, 32.1258, -24.4312, 0.55", "-62.6912, 32.2107, -24.5541, 0.28", "-63.7244, 32.2306, -24.6257, 0.55", "-67.7996, 32.0565, -24.724, 0.28", "-68.4331, 32.0002, -24.7217, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-29.0624, 13.3212, -17.6831, 0.55", "-31.5228, 15.0484, -20.8668, 0.55", "-33.8469, 16.578, -23.5857, 0.55", "-35.8746, 17.7719, -25.6212, 0.83", "-37.4455, 18.6312, -26.8356, 0.83", "-39.5599, 19.7199, -28.2677, 0.28", "-40.301, 20.0705, -28.7409, 0.28", "-42.5157, 20.9565, -29.9005, 0.83", "-44.5948, 21.6596, -30.8719, 0.55", "-48.9283, 22.8382, -32.8165, 0.55", "-51.8666, 23.5038, -34.2148, 0.83", "-54.1794, 24.009, -35.5571, 0.28", "-54.713, 24.1238, -35.9256, 0.55", "-57.6641, 24.6517, -38.0297, 0.28", "-58.9573, 24.8545, -39.0423, 0.55", "-61.1231, 25.246, -40.7773, 0.55", "-64.0451, 25.8975, -42.8922, 0.28", "-64.9162, 26.128, -43.4651, 0.28", "-68.8948, 27.302, -45.8501, 0.55", "-72.7537, 28.4809, -47.766, 0.83", "-77.8322, 29.9886, -49.836, 0.28", "-78.9476, 30.3007, -50.2056, 0.55", "-81.6152, 31.0121, -50.9223, 0.55", "-82.8484, 31.3535, -51.237, 0.55", "-86.4478, 32.3574, -52.1691, 0.83", "-89.3445, 33.1017, -52.6471, 0.28", "-90.1476, 33.2866, -52.735, 0.55", "-93.0207, 33.985, -53.0239, 0.28", "-94.4478, 34.3376, -53.2322, 0.55", "-96.0375, 34.7148, -53.547, 0.28", "-97.0501, 34.9755, -53.7955, 0.83", "-98.7665, 35.4796, -54.2181, 0.28", "-100.42, 36.0408, -54.6159, 0.83", "-104.734, 37.9631, -55.5482, 0.28", "-106.261, 38.8583, -55.9077, 0.28", "-107.264, 39.5701, -56.199, 0.28", "-109.068, 41.0861, -56.9392, 0.83", "-110.672, 42.6286, -57.7387, 0.28", "-113.043, 45.2067, -59.145, 0.55", "-116.315, 49.1545, -61.3164, 0.28", "-117.805, 51.0309, -62.3343, 0.83", "-120.171, 54.0079, -63.9712, 0.28", "-120.95, 54.9519, -64.4751, 0.55", "-122.682, 56.985, -65.4583, 0.28", "-123.089, 57.4433, -65.6715, 0.83", "-126.624, 61.1367, -66.9198, 0.28", "-127.379, 61.882, -67.0647, 0.55", "-129.979, 64.378, -67.1613, 0.55", "-130.461, 64.8372, -67.1541, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-29.0624, 13.3212, -17.6831, 0.55", "-32.6444, 12.4594, -16.4941, 0.55", "-39.6947, 10.8398, -15.176, 0.83", "-46.5266, 9.34108, -14.4055, 0.83", "-50.3647, 8.52393, -14.2905, 0.55", "-52.429, 8.09233, -14.326, 0.55", "-58.6136, 6.735, -14.8073, 0.55", "-66.55, 5.18672, -16.2293, 0.28", "-67.9221, 4.89117, -16.7309, 0.55", "-71.458, 4.04007, -18.5125, 0.28", "-72.8518, 3.69226, -19.2519, 0.83", "-76.5691, 2.61238, -21.2156, 0.55", "-78.1565, 2.03525, -21.8936, 0.55", "-83.2883, 0.131595, -22.9083, 0.28", "-85.3193, -0.705133, -23.0477, 0.83", "-88.6078, -2.20628, -22.7342, 0.28", "-89.7772, -2.74846, -22.4358, 0.83", "-94.9634, -5.15162, -20.117, 0.28", "-96.2063, -5.82809, -19.4905, 0.83", "-97.4249, -6.55278, -18.7541, 0.28", "-97.9605, -6.90352, -18.4122, 0.83", "-100.587, -8.72397, -16.731, 0.28", "-101.97, -9.70325, -16.0335, 0.55", "-105.921, -12.5151, -15.5744, 0.28", "-106.227, -12.731, -15.5656, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-16.376, -14.5394, 4.5987, 0.83", "-16.9517, -14.8385, 5.02661, 0.83", "-18.5923, -15.7919, 6.01796, 0.55", "-20.8016, -16.852, 7.33035, 0.55", "-21.9804, -17.3526, 8.0398, 0.55", "-22.5929, -17.5818, 8.43854, 0.55", "-23.4806, -17.8607, 9.04803, 0.83", "-26.5418, -18.6594, 11.2159, 0.55", "-29.2127, -19.268, 13.0688, 0.55", "-31.481, -19.6894, 14.498, 0.55", "-32.9422, -19.8963, 15.4291, 0.55", "-35.0457, -20.1131, 16.7465, 0.55", "-36.3363, -20.1906, 17.5109, 0.55", "-38.0418, -20.3343, 18.3982, 0.55", "-39.6224, -20.6452, 19.048, 0.55", "-40.5687, -20.8997, 19.3139, 0.28", "-41.1448, -21.0939, 19.4359, 0.55", "-42.398, -21.5172, 19.6349, 0.55", "-45.528, -22.5823, 20.1699, 0.55", "-47.2183, -23.1636, 20.5362, 0.55", "-48.9953, -23.8409, 20.8881, 0.28", "-49.8554, -24.1847, 21.0306, 0.55", "-51.6614, -24.8617, 21.3073, 0.55", "-56.5037, -27.1171, 24.3789, 0.55", "-60.8358, -28.8261, 28.4139, 0.55", "-64.598, -30.9024, 32.8303, 0.55", "-68.448, -33.3762, 36.9567, 0.55", "-73.2858, -35.0176, 40.402, 0.55", "-78.8771, -35.7161, 42.8958, 0.55", "-84.8314, -36.0592, 44.4444, 0.55", "-90.6312, -36.0144, 46.5252, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-16.376, -14.5394, 4.5987, 0.83", "-18.5053, -16.9458, 2.30466, 0.83", "-20.4589, -18.7035, 0.369084, 0.83", "-22.8238, -20.5902, -1.97576, 0.83", "-26.2098, -22.9488, -5.16442, 0.83", "-28.7857, -24.8109, -7.82666, 0.83", "-30.3269, -25.9823, -9.49099, 0.83", "-32.9542, -28.0933, -12.558, 0.83", "-35.3081, -29.8912, -15.2689, 0.83", "-39.319, -32.8226, -19.5728, 0.83", "-44.1726, -36.1455, -24.217, 0.28", "-45.3399, -36.9756, -25.2321, 0.83", "-46.3901, -37.7818, -26.1057, 0.83", "-47.6118, -38.7821, -27.0481, 0.55", "-48.7445, -39.6072, -27.7173, 0.28", "-49.9844, -40.3438, -28.1935, 0.55", "-50.7778, -40.6755, -28.3649, 0.28", "-52.2239, -41.2409, -28.7181, 0.83", "-56.5949, -42.953, -29.9806, 0.28", "-57.5758, -43.3226, -30.3794, 0.55", "-58.6498, -43.7252, -30.8865, 0.28", "-59.1582, -43.9256, -31.1874, 0.55", "-60.4434, -44.4434, -32.0588, 0.28", "-60.8657, -44.6284, -32.4166, 0.83", "-62.9878, -45.7194, -34.6478, 0.55", "-63.9059, -46.2307, -35.7413, 0.83", "-65.5779, -47.1976, -37.9849, 0.28", "-65.9087, -47.3925, -38.4724, 0.55", "-67.3586, -48.253, -40.8558, 0.28", "-68.084, -48.754, -42.1221, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-15.6303, -28.8504, 13.441, 0.55", "-19.0455, -31.2007, 11.9119, 0.55", "-24.6381, -35.0036, 9.63033, 0.55", "-26.3185, -36.1246, 8.99263, 0.55", "-30.4101, -38.9191, 7.58125, 0.28", "-32.8307, -40.5872, 6.80376, 0.55", "-34.6995, -41.9012, 6.21502, 0.28", "-36.556, -43.1999, 5.71544, 0.28", "-37.3253, -43.7498, 5.57965, 0.55", "-40.1428, -45.7536, 5.26721, 0.28", "-40.6553, -46.169, 5.26913, 0.83", "-42.788, -48.1529, 5.35988, 0.28", "-43.9476, -49.3144, 5.44391, 0.55", "-45.4864, -50.9483, 5.58324, 0.28", "-46.9599, -52.5751, 5.75058, 0.55", "-48.9865, -54.8531, 6.07264, 0.55", "-49.1801, -55.0827, 6.11165, 0.83", "-50.4461, -56.6823, 6.47811, 0.28", "-50.6186, -56.916, 6.50906, 0.83", "-59.3378, -63.2056, 6.71001, 0.83", "-69.1466, -67.5961, 6.3405, 0.83", "-78.6813, -72.5645, 6.50954, 0.83", "-87.5177, -78.3797, 8.43981, 0.83", "-95.7925, -84.0905, 12.2528, 0.83", "-104.527, -87.4578, 17.5436, 0.83", "-112.887, -90.7832, 23.4326, 0.83", "-122.168, -92.764, 28.4892, 0.83", "-131.783, -95.9112, 32.1312, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-15.6303, -28.8504, 13.441, 0.83", "-15.7784, -31.2766, 14.5948, 0.83", "-16.1579, -34.6965, 16.3055, 0.83", "-16.2598, -36.4264, 17.208, 0.83", "-16.4697, -40.5936, 19.3201, 0.83", "-16.4885, -41.167, 19.5997, 0.83", "-16.5506, -43.6333, 20.6979, 0.83", "-16.6666, -46.3103, 21.8195, 0.83", "-16.9137, -50.2388, 23.4789, 0.83", "-17.0661, -53.7256, 24.8888, 0.83", "-17.0847, -55.2698, 25.4338, 0.83", "-17.096, -59.1973, 26.7619, 0.83", "-17.0809, -63.161, 28.0724, 0.83", "-15.8657, -70.2628, 33.082, 0.83", "-15.0623, -77.1003, 38.5237, 0.83", "-14.1683, -84.4994, 43.1564, 0.83", "-11.5205, -91.6273, 47.537, 0.83", "-7.87651, -98.4829, 51.6274, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "2.1661, -72.7587, 24.1656, 0.28", "1.49821, -76.0891, 23.2028, 0.28", "1.37083, -76.7243, 23.0191, 0.83", "0.693226, -80.103, 22.0423, 0.28", "-1.31993, -92.582, 19.6061, 0.28", "-1.69411, -105.449, 19.5812, 0.28", "-1.72009, -118.107, 21.9272, 0.28", "-3.65059, -130.212, 25.8568, 0.28", "-2.53656, -142.591, 29.2102, 0.28", "-0.331876, -154.724, 32.9018, 0.28", "0.791972, -167.536, 33.4627, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "2.1661, -72.7587, 24.1656, 0.55", "3.2522, -75.4913, 24.1529, 0.55", "3.91528, -77.1595, 24.1451, 0.55", "4.51436, -78.6667, 24.1381, 0.28", "9.6854, -88.5156, 22.6275, 0.28", "13.2746, -99.1504, 22.4292, 0.28", "16.3415, -109.774, 20.4957, 0.28", "20.9186, -119.942, 19.1944, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.58606, -13.5439, 0.810835, 1.94", "8.17198, -20.3725, -1.74231, 1.94" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.58606, -13.5439, 0.810835, 1.11", "2.27778, -17.8111, -4.73681, 1.11", "1.90012, -18.2252, -5.37062, 1.11", "0.0348323, -20.3934, -8.74455, 1.11", "-0.640051, -21.239, -10.1243, 1.11", "-1.77023, -22.6496, -12.5019, 1.11", "-3.13138, -24.3341, -15.3646, 1.11", "-4.84154, -26.2693, -18.7703, 1.11", "-5.71293, -27.0961, -20.4497, 0.83", "-7.26297, -28.3181, -23.318, 0.83", "-7.89315, -28.8185, -24.4275, 0.55", "-8.18313, -29.0372, -24.8953, 0.83", "-9.70744, -30.1237, -27.1018, 1.39", "-11.8634, -31.4593, -29.793, 1.11", "-13.2173, -32.2612, -31.4544, 0.55", "-13.9515, -32.7048, -32.3406, 0.83", "-16.4981, -34.3848, -35.6463, 0.55", "-17.4457, -35.0771, -36.9582, 0.28", "-17.8189, -35.3918, -37.5552, 0.55", "-20.5585, -37.7407, -41.96, 0.28", "-20.8682, -38.0151, -42.4855, 0.55", "-21.529, -38.6439, -43.7029, 0.28", "-22.2622, -39.4812, -45.1766, 1.39", "-24.739, -42.2319, -50.4087, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "10.7924, -9.66558, -3.26164, 1.11", "10.9441, -8.89254, -5.30523, 1.11", "11.0537, -8.27242, -6.75666, 0.83", "11.3193, -7.51033, -8.39368, 0.83", "12.219, -5.36227, -12.9984, 0.83", "13.1255, -3.74157, -16.6365, 0.83", "13.4349, -3.25052, -17.7291, 0.83", "13.872, -2.62338, -19.1741, 0.83", "16.0647, 0.785877, -26.4238, 0.83", "17.1653, 2.60744, -29.9475, 0.83", "17.9739, 4.19094, -32.6346, 0.83", "18.4526, 5.37733, -34.6022, 0.28", "18.6951, 6.17381, -35.9123, 1.39", "19.1091, 8.20801, -39.1054, 0.55", "19.3827, 11.0537, -43.3221, 0.55", "19.4425, 12.9712, -46.0843, 1.11", "19.2832, 17.6427, -52.8034, 0.55", "19.2248, 18.8028, -54.5715, 0.55", "19.1722, 20.4049, -57.2133, 1.11" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "10.7924, -9.66558, -3.26164, 1.11", "12.9531, -10.0203, -4.16975, 1.11", "17.0925, -10.3842, -5.46891, 1.11", "19.5917, -10.6158, -6.30272, 0.83", "21.0314, -10.7612, -6.88447, 0.83", "22.9913, -10.8806, -7.96289, 1.11", "25.3363, -10.9349, -9.47334, 1.11", "28.1875, -10.869, -11.4191, 1.11", "30.6706, -10.723, -13.191, 0.83", "33.7036, -10.5255, -15.582, 1.39", "38.266, -10.2835, -19.6278, 0.83", "41.533, -10.2129, -22.9171, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "33.5251, 14.4178, 33.0145, 0.55", "38.7768, 16.605, 36.081, 0.55", "44.5359, 18.4621, 38.3506, 0.55", "50.0678, 20.4821, 41.0126, 0.55", "55.5125, 21.5327, 44.332, 0.55", "61.1015, 21.925, 47.5534, 0.55", "66.1687, 23.2029, 51.3558, 0.55", "70.7398, 24.2115, 55.8117, 0.55", "75.2396, 24.6105, 60.4335, 0.55", "78.972, 24.2348, 65.6962, 0.55", "83.6206, 23.447, 70.1164, 0.55", "88.4111, 23.8565, 74.435, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "33.5251, 14.4178, 33.0145, 0.55", "42.5204, 15.0822, 40.1144, 0.55", "52.0063, 16.1898, 46.483, 0.55", "61.7357, 15.8635, 52.5658, 0.55", "71.8715, 16.1877, 57.9442, 0.55", "82.7091, 17.694, 61.4149, 0.55", "93.3541, 17.2469, 65.6869, 0.55", "104.14, 15.6945, 69.295, 0.55", "114.227, 11.9479, 73.2937, 0.55", "123.605, 7.6273, 78.3087, 0.55", "132.264, 3.17158, 84.3861, 0.55", "139.806, -2.91101, 90.5412, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.17198, -20.3725, -1.74231, 0.83", "9.25895, -20.132, -3.45405, 0.83", "12.0145, -19.024, -8.39712, 0.83", "12.9426, -18.4872, -9.90577, 0.83", "14.3321, -17.5804, -11.9782, 0.83", "18.1772, -14.8586, -17.1001, 0.83", "20.1273, -13.4957, -19.545, 0.83", "21.6263, -12.3909, -21.3352, 0.83", "24.6874, -10.023, -24.8187, 0.83", "27.3723, -8.08494, -27.8988, 0.55", "30.6744, -6.09487, -31.6364, 0.55", "32.3876, -5.36062, -33.5279, 0.55", "34.29, -4.85947, -35.6487, 0.55", "36.1041, -4.68321, -37.8636, 0.55", "38.2859, -4.74012, -40.8826, 0.55", "40.3082, -5.01393, -43.7305, 0.55", "41.6241, -5.32973, -45.6184, 0.55", "43.6437, -5.88446, -48.3919, 0.55", "45.7295, -6.39773, -51.1549, 0.55", "47.3832, -6.76559, -53.2146, 0.55", "49.3394, -7.01628, -55.4886, 0.55", "50.4547, -7.1285, -56.832, 0.55", "51.8232, -7.20701, -58.5421, 0.55", "54.1609, -7.15345, -61.7024, 0.55", "57.4337, -6.77831, -66.3993, 0.55", "58.6818, -6.60613, -68.3566, 0.55", "60.864, -6.15792, -72.0691, 0.55", "61.9618, -5.85576, -74.1643, 0.55", "63.8577, -5.24004, -78.1946, 0.55", "64.8946, -4.90426, -80.5614, 0.55", "66.394, -4.29652, -84.2648, 0.55", "66.9952, -4.04758, -85.813, 0.55", "67.8872, -3.54069, -88.1251, 0.55", "68.9731, -3.06877, -90.9179, 0.55", "69.4796, -2.85404, -92.2358, 0.55", "70.0432, -2.6513, -93.6725, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "8.17198, -20.3725, -1.74231, 1.39", "8.72162, -24.2749, -2.85313, 1.39", "9.15647, -27.3622, -3.73194, 1.39", "9.49933, -29.7965, -4.42487, 1.11", "10.021, -33.5002, -5.47914, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "41.533, -10.2129, -22.9171, 0.55", "43.1673, -5.28186, -30.6894, 0.55", "43.627, -3.70791, -32.9402, 0.28", "43.6926, -3.47068, -33.2528, 0.83", "44.1559, -1.66522, -35.4828, 0.28", "44.306, -1.04702, -36.2641, 0.55", "44.6449, 0.393652, -38.0869, 0.28", "44.7516, 0.977518, -38.7656, 0.55", "45.1261, 2.95343, -41.2663, 0.28", "45.2017, 3.33255, -41.7587, 0.55", "45.9386, 7.01981, -46.674, 0.28", "45.9742, 7.19203, -46.8993, 0.55", "46.392, 9.41438, -49.729, 0.28", "46.4579, 9.81579, -50.2108, 0.83", "46.7588, 12.0336, -52.642, 0.28", "46.8261, 12.5402, -53.1476, 0.55", "47.4184, 18.3028, -58.08, 0.28", "47.4475, 18.6098, -58.3314, 0.55", "47.5927, 19.8654, -59.4485, 0.28", "47.6463, 20.2876, -59.8317, 0.55", "47.9265, 22.5366, -61.9307, 0.28", "48.0116, 23.1677, -62.5477, 0.55", "48.2371, 24.6552, -64.2512, 0.28", "49.163, 29.325, -70.1744, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "41.533, -10.2129, -22.9171, 0.55", "48.7554, -8.76735, -28.3806, 0.55", "56.8331, -7.55591, -34.0816, 1.39", "57.9262, -7.40998, -34.7706, 1.39", "60.3945, -7.10014, -36.2063, 0.55", "67.8704, -6.23739, -40.1234, 0.55", "72.4798, -5.74471, -42.3571, 0.55", "78.4164, -5.37962, -44.6192, 0.55", "82.3361, -5.2893, -45.8337, 0.28", "83.5869, -5.27401, -46.1988, 0.55", "89.2942, -5.24146, -47.6867, 0.28", "90.5184, -5.23457, -47.971, 0.55", "97.4166, -5.07869, -49.8181, 0.28", "100.187, -4.88362, -50.8046, 0.28", "101.868, -4.69399, -51.5849, 0.28", "102.695, -4.56411, -52.0003, 0.55", "107.324, -3.55015, -54.622, 0.55", "112.771, -1.97571, -57.832, 0.28", "114.736, -1.23777, -59.0151, 0.55", "118.097, 0.179331, -61.1505, 0.28", "119.862, 0.981384, -62.2559, 0.55", "122.012, 2.02579, -63.5009, 0.55", "123.401, 2.84358, -64.1074, 0.28", "124.138, 3.33861, -64.3763, 0.55", "126.229, 4.86373, -65.1937, 0.28", "126.928, 5.39623, -65.512, 0.55", "129.469, 7.31571, -66.6959, 0.28", "131.589, 8.90418, -67.6584, 0.55", "135.531, 11.7878, -69.5415, 0.28", "135.851, 12.0241, -69.6984, 0.55", "139.642, 14.8101, -71.5297, 0.28", "141.217, 15.9581, -72.3157, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "70.0432, -2.6513, -93.6725, 0.55", "73.8346, -4.90617, -93.7024, 0.55", "75.7206, -6.02789, -93.7173, 0.55", "79.1027, -8.03938, -93.744, 0.28", "83.6678, -10.7199, -93.8737, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "70.0432, -2.6513, -93.6725, 0.28", "73.5881, 0.217318, -91.9577, 0.28", "76.5219, 2.59147, -90.5384, 0.55", "86.0749, 7.67231, -87.7356, 0.55", "95.0938, 13.2902, -84.2673, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "10.021, -33.5002, -5.47914, 0.83", "11.1755, -36.8024, -7.58861, 0.83", "12.0203, -38.9092, -8.36812, 0.83", "12.6935, -40.6507, -8.61749, 0.83", "14.2374, -44.815, -8.49679, 0.83", "16.2446, -50.3067, -7.90015, 0.83", "18.4543, -56.3695, -6.89656, 0.83", "20.8795, -63.2069, -5.11525, 0.83", "22.5639, -67.8373, -3.61106, 1.11", "24.0156, -71.7928, -2.03819, 0.83", "24.5452, -73.21, -1.31005, 0.83", "25.5161, -76.1283, 0.524525, 0.83", "26.3564, -79.8522, 3.01995, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.021, -33.5002, -5.47914, 0.83", "7.57971, -35.7399, -11.5318, 0.83", "7.17599, -36.1103, -12.5327, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "26.3564, -79.8522, 3.01995, 0.83", "26.7951, -81.937, 4.18886, 0.83", "27.0164, -83.4581, 4.93685, 0.83", "27.8509, -89.1941, 7.7575, 0.83", "28.6149, -94.4465, 10.3403, 0.83", "29.6357, -101.463, 13.7906, 0.83", "30.5299, -107.61, 16.8135, 0.55", "31.4968, -114.036, 20.0001, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "26.3564, -79.8522, 3.01995, 0.55", "28.8275, -81.3513, 1.91953, 0.55", "32.7242, -84.0014, -0.00472272, 0.55", "34.5274, -85.6572, -1.17064, 0.55", "35.6141, -86.8294, -1.88484, 0.55", "37.1954, -88.6475, -2.77717, 0.55", "38.4692, -90.1848, -3.42485, 0.55", "40.9442, -93.9764, -4.57236, 0.55", "43.641, -99.1867, -5.4413, 0.55", "45.2629, -103.099, -5.85297, 0.55", "47.2344, -108.776, -6.21666, 0.55", "47.9251, -111.116, -6.31309, 0.55", "50.0485, -119.48, -6.36436, 0.55", "50.9484, -123.899, -6.2253, 0.55", "51.4067, -126.688, -6.08483, 0.55", "51.6157, -129.131, -6.04623, 0.55", "51.6819, -131.634, -6.18978, 0.28", "51.72, -132.324, -6.28975, 0.55", "52.1408, -134.824, -7.06099, 0.28", "52.456, -135.84, -7.547, 0.55", "52.8785, -136.922, -8.11509, 0.55", "54.061, -139.817, -9.53259, 0.55", "54.6779, -141.096, -10.1877, 0.55", "55.7268, -143.034, -11.2624, 0.55", "57.5589, -146.108, -12.91, 0.28", "57.9191, -146.651, -13.216, 0.55", "60.0841, -149.667, -14.9294, 0.55", "62.8815, -153.217, -16.9796, 0.55", "66.138, -156.961, -19.2324, 0.28", "67.6293, -158.408, -20.16, 0.55", "69.7764, -160.214, -21.2599, 0.28", "70.331, -160.598, -21.4799, 0.55", "72.2276, -161.559, -21.9668, 0.28", "72.8927, -161.811, -21.9961, 0.55", "75.938, -162.826, -21.743, 0.28", "77.8344, -163.448, -21.5555, 0.55", "80.8908, -164.439, -21.0284, 0.28", "82.1923, -164.883, -20.7655, 0.28", "84.1818, -165.658, -20.2487, 0.55", "88.5302, -167.485, -18.9366, 0.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "7.17599, -36.1103, -12.5327, 0.83", "0.881189, -40.7757, -15.0269, 0.83", "-1.02261, -42.2281, -15.8025, 0.83", "-4.25426, -44.7024, -17.3844, 0.55", "-5.52989, -45.7547, -18.03, 0.55", "-7.18034, -47.1926, -18.9378, 0.55", "-10.0465, -49.835, -20.579, 0.55", "-12.6144, -52.6979, -22.0124, 0.55", "-15.8044, -56.8417, -23.9644, 0.28", "-17.2806, -59.1805, -24.9985, 0.83", "-18.8994, -62.0952, -26.1856, 0.28", "-19.5357, -63.3567, -26.6897, 1.11", "-22.5953, -69.8964, -29.0966, 0.28", "-23.6217, -72.2274, -29.8816, 1.39", "-27.583, -81.6523, -32.7795, 0.28", "-28.1968, -83.0679, -33.2365, 1.11", "-29.7629, -86.6594, -34.3578, 0.28", "-30.1016, -87.384, -34.6166, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "7.17599, -36.1103, -12.5327, 0.83", "6.13691, -39.4074, -18.9882, 0.83", "5.49054, -41.4584, -23.0038, 0.83", "5.04202, -42.8816, -25.7903, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "31.4968, -114.036, 20.0001, 0.55", "26.4844, -117.514, 17.7325, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "31.4968, -114.036, 20.0001, 0.55", "31.6975, -116.772, 20.0705, 0.55", "31.8874, -118.734, 20.0625, 0.55", "32.0688, -121.05, 20.062, 0.55", "32.2033, -122.97, 20.0674, 0.55", "32.3939, -126.677, 20.0049, 0.28", "32.4323, -127.795, 19.9809, 0.55", "32.4143, -129.91, 19.8487, 0.28", "32.4086, -131.378, 19.7465, 0.28", "32.4013, -131.981, 19.6868, 0.55", "32.3449, -135.161, 19.3478, 0.28", "32.314, -135.771, 19.3018, 0.55", "32.1639, -137.878, 19.115, 0.28", "32.088, -138.644, 19.0161, 0.55", "31.8328, -141.688, 18.5321, 0.28", "31.7764, -142.281, 18.4093, 0.55", "31.7134, -143.342, 18.1724, 0.28", "31.7124, -143.946, 18.0544, 0.55", "32.0277, -146.831, 17.6527, 0.28", "32.2099, -147.67, 17.5709, 0.55", "32.9559, -149.694, 17.5977, 0.28", "34.3949, -152.932, 17.8724, 0.55", "35.4879, -154.95, 18.2846, 0.55", "37.4066, -158.152, 19.3184, 0.28", "38.0475, -159.095, 19.7458, 0.55", "40.0898, -161.978, 21.2788, 0.28", "40.4173, -162.413, 21.5609, 0.55", "42.1739, -164.812, 23.2469, 0.28", "42.6342, -165.529, 23.7473, 0.28", "42.7885, -165.813, 23.9554, 0.55", "43.4343, -167.243, 24.9008, 0.28", "43.4453, -167.278, 24.9163, 0.55", "44.2577, -169.816, 25.92, 0.28", "44.538, -170.961, 26.2304, 0.55", "46.9896, -180.051, 29.0103, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "5.04202, -42.8816, -25.7903, 0.55", "2.57428, -45.1041, -25.9736, 0.55", "1.15215, -46.4197, -26.2421, 0.55", "-0.111795, -47.685, -26.5234, 0.28", "-1.25051, -48.8591, -26.7775, 0.28", "-1.78674, -49.4352, -27.0065, 0.83", "-3.29547, -51.1602, -27.7447, 0.28", "-3.90846, -51.9445, -28.1279, 0.83", "-5.24611, -53.7395, -28.9636, 0.83", "-5.74909, -54.4835, -29.2681, 0.83", "-8.38997, -58.6942, -30.7847, 0.28", "-9.85374, -61.0743, -31.6002, 0.28", "-10.499, -62.1538, -31.9297, 0.55", "-11.0683, -63.1258, -32.2143, 0.55", "-14.6044, -69.3193, -33.9805, 0.28", "-14.9916, -70.0284, -34.1423, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.04202, -42.8816, -25.7903, 0.83", "4.81822, -45.5509, -29.1113, 0.83", "4.72734, -46.8139, -30.2207, 0.28", "4.68055, -47.5639, -30.6837, 0.83", "4.50931, -51.0974, -32.3085, 0.55", "4.47642, -52.1385, -32.7098, 0.55", "4.3875, -54.1258, -33.5034, 0.28", "4.28187, -56.2951, -34.2418, 0.55", "4.18991, -58.5087, -35.0227, 0.55", "4.06208, -62.1395, -36.3458, 0.28", "4.02258, -63.4802, -36.8042, 1.11", "3.88961, -69.4424, -38.9368, 0.28", "3.86087, -70.8771, -39.4844, 1.11", "3.77014, -74.5655, -40.9081, 0.28", "3.74896, -75.4177, -41.1905, 1.11", "3.61183, -79.8806, -42.3206, 0.28", "3.58902, -80.4253, -42.4083, 0.83", "3.52925, -81.4026, -42.4562, 0.28", "3.37848, -82.5378, -42.4474, 0.55", "2.2839, -87.654, -42.2271, 0.28", "2.08096, -88.3536, -42.1991, 0.55", "1.53588, -89.6664, -42.2082, 0.28", "0.562659, -91.8298, -42.3352, 1.11", "-0.655128, -94.2827, -42.6104, 0.28", "-1.13873, -95.1727, -42.8049, 0.83", "-1.80992, -96.1938, -43.1897, 0.28", "-2.97134, -98.2106, -44.1119, 0.55", "-3.65514, -99.7303, -45.0249, 0.28", "-3.69732, -99.8747, -45.1224, 0.83", "-3.76266, -100.586, -45.7526, 0.28", "-3.75482, -100.773, -45.9173, 0.55", "-3.53802, -101.979, -47.0267, 0.28", "-3.22678, -103.092, -47.7932, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "26.4844, -117.514, 17.7325, 0.55", "23.0289, -120.277, 18.3169, 0.55", "19.7441, -123.031, 18.6419, 0.55", "18.0124, -124.545, 18.6355, 0.55", "15.3992, -127.134, 18.4218, 0.55", "12.8868, -129.826, 18.1129, 0.28", "11.9289, -130.931, 17.9211, 0.55", "10.5805, -132.684, 17.5144, 0.28", "9.17256, -134.745, 16.882, 1.39", "7.12058, -138.01, 15.9775, 0.28", "6.59765, -138.867, 15.8106, 0.83", "4.61834, -142.112, 15.4549, 0.28", "3.95064, -143.192, 15.4352, 0.55", "3.27264, -144.298, 15.5549, 0.55", "0.874359, -148.29, 16.4905, 0.28", "-0.248285, -150.052, 17.0343, 0.28", "-1.22508, -151.579, 17.5933, 0.55", "-2.55522, -153.678, 18.5666, 0.28", "-3.15569, -154.644, 18.9852, 0.55", "-4.57174, -157.232, 20.1138, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "26.4844, -117.514, 17.7325, 0.55", "24.7572, -116.075, 18.6056, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_48", "dend_45", "dend_40", "dend_33", "dend_8", "dend_3", "dend_0", "dend_57", "dend_56", "dend_52", "dend_49", "dend_47", "dend_46", "dend_44", "dend_41", "dend_37", "dend_34", "dend_14", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "dend_54", "dend_53", "dend_51", "dend_50", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_35", "dend_16", "dend_15", "dend_13", "dend_10", "dend_6", "dend_5", "dend_30", "dend_17", "dend_12", "dend_11", "dend_32", "dend_31", "dend_23", "dend_18", "dend_25", "dend_24", "dend_22", "dend_19", "dend_27", "dend_26", "dend_21", "dend_20", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_48", "dend_45", "dend_40", "dend_33", "dend_8", "dend_3", "dend_0", "dend_57", "dend_56", "dend_52", "dend_49", "dend_47", "dend_46", "dend_44", "dend_41", "dend_37", "dend_34", "dend_14", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "dend_54", "dend_53", "dend_51", "dend_50", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_35", "dend_16", "dend_15", "dend_13", "dend_10", "dend_6", "dend_5", "dend_30", "dend_17", "dend_12", "dend_11", "dend_32", "dend_31", "dend_23", "dend_18", "dend_25", "dend_24", "dend_22", "dend_19", "dend_27", "dend_26", "dend_21", "dend_20", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_56", "dend_56", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_14", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_NBC_d27deeaf6a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_16
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_33, dend_33, dend_33, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, axon_0, axon_0, dend_57, dend_57, dend_56, dend_56, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.49999965882319475)
    connect dend_48(0), soma_0(0.49999965882319475)
    connect dend_45(0), soma_0(0.49999965882319475)
    connect dend_40(0), soma_0(0.49999965882319475)
    connect dend_33(0), soma_0(0.49999965882319475)
    connect dend_8(0), soma_0(0.49999965882319475)
    connect dend_3(0), soma_0(0.49999965882319475)
    connect dend_0(0), soma_0(0.49999965882319475)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.89093, 6.3846, -1.48625, 2.82016 ) }
    soma_0 { pt3dadd( -2.66386, 5.61657, -1.27833, 4.98681 ) }
    soma_0 { pt3dadd( -2.43678, 4.84853, -1.07041, 7.51044 ) }
    soma_0 { pt3dadd( -2.20971, 4.0805, -0.862483, 8.92538 ) }
    soma_0 { pt3dadd( -1.98264, 3.31246, -0.65456, 10.0669 ) }
    soma_0 { pt3dadd( -1.75557, 2.54443, -0.446636, 10.3676 ) }
    soma_0 { pt3dadd( -1.52849, 1.7764, -0.238713, 10.6171 ) }
    soma_0 { pt3dadd( -1.30142, 1.00836, -0.0307891, 10.1846 ) }
    soma_0 { pt3dadd( -1.07435, 0.240325, 0.177134, 9.79445 ) }
    soma_0 { pt3dadd( -0.847273, -0.52771, 0.385058, 9.58423 ) }
    soma_0 { pt3dadd( -0.6202, -1.29574, 0.592981, 9.374 ) }
    soma_0 { pt3dadd( -0.393128, -2.06378, 0.800905, 9.16378 ) }
    soma_0 { pt3dadd( -0.166055, -2.83181, 1.00883, 8.95369 ) }
    soma_0 { pt3dadd( 0.0610184, -3.59985, 1.21675, 8.74371 ) }
    soma_0 { pt3dadd( 0.288091, -4.36788, 1.42468, 8.44292 ) }
    soma_0 { pt3dadd( 0.515164, -5.13592, 1.6326, 7.88171 ) }
    soma_0 { pt3dadd( 0.742237, -5.90395, 1.84052, 7.32051 ) }
    soma_0 { pt3dadd( 0.96931, -6.67199, 2.04845, 6.7381 ) }
    soma_0 { pt3dadd( 1.19638, -7.44002, 2.25637, 5.93312 ) }
    soma_0 { pt3dadd( 1.42346, -8.20806, 2.46429, 5.04519 ) }
    soma_0 { pt3dadd( 1.65053, -8.97609, 2.67222, 2.76105 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -2.9567, 3.84505, 8.71987, 1.11 ) }
    dend_55 { pt3dadd( -3.8242, 6.22905, 8.68487, 0.83 ) }
    dend_55 { pt3dadd( -4.18883, 7.61556, 8.82302, 0.83 ) }
    dend_55 { pt3dadd( -5.09301, 11.6428, 9.44105, 0.83 ) }
    dend_55 { pt3dadd( -5.40684, 13.9465, 10.0143, 0.83 ) }
    dend_55 { pt3dadd( -5.61774, 15.9005, 10.5951, 1.11 ) }
    dend_55 { pt3dadd( -5.65945, 18.4781, 11.5847, 0.83 ) }
    dend_55 { pt3dadd( -5.38548, 21.6447, 13.1696, 0.83 ) }
    dend_55 { pt3dadd( -5.24209, 22.7319, 13.8073, 0.83 ) }
    dend_55 { pt3dadd( -4.71468, 25.8348, 15.8925, 0.55 ) }
    dend_55 { pt3dadd( -4.05312, 29.7155, 18.8559, 0.55 ) }
    dend_55 { pt3dadd( -3.46205, 33.5858, 21.9711, 0.55 ) }
    dend_55 { pt3dadd( -3.09564, 36.462, 24.3551, 0.55 ) }
    dend_55 { pt3dadd( -2.85087, 38.2065, 25.7616, 0.28 ) }
    dend_55 { pt3dadd( -2.64781, 39.6771, 26.9945, 0.55 ) }
    dend_55 { pt3dadd( -2.51596, 41.6707, 28.6878, 0.55 ) }
    dend_55 { pt3dadd( -3.65396, 50.524, 30.7647, 0.55 ) }
    dend_55 { pt3dadd( -6.0806, 59.1212, 32.8113, 0.55 ) }
    dend_55 { pt3dadd( -9.55874, 66.8941, 36.1986, 0.55 ) }
    dend_55 { pt3dadd( -13.3531, 74.4641, 39.7038, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 41/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -5.4967, 3.59505, -7.38013, 1.66 ) }
    dend_48 { pt3dadd( -8.1401, 4.44706, -9.3989, 1.66 ) }
    dend_48 { pt3dadd( -11.8966, 5.65784, -12.2678, 1.66 ) }
    dend_48 { pt3dadd( -14.5373, 6.50896, -14.2845, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 45/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -4.2067, -0.704942, -10.0602, 1.11 ) }
    dend_45 { pt3dadd( -6.28829, -0.744744, -9.94631, 1.11 ) }
    dend_45 { pt3dadd( -9.02783, -0.67051, -9.7519, 1.11 ) }
    dend_45 { pt3dadd( -11.9366, -0.463986, -9.53413, 1.11 ) }
    dend_45 { pt3dadd( -14.4259, -0.26184, -9.41177, 1.11 ) }
    dend_45 { pt3dadd( -18.3088, 0.0424143, -9.29597, 0.83 ) }
    dend_45 { pt3dadd( -21.1198, 0.22029, -9.27384, 0.83 ) }
    dend_45 { pt3dadd( -23.162, 0.340022, -9.30586, 1.39 ) }
    dend_45 { pt3dadd( -25.4295, 0.485472, -9.39515, 1.11 ) }
    dend_45 { pt3dadd( -27.4946, 0.655397, -9.54205, 1.11 ) }
    dend_45 { pt3dadd( -30.9469, 0.873576, -9.87922, 1.11 ) }
    dend_45 { pt3dadd( -34.2218, 0.888969, -10.267, 1.11 ) }
    dend_45 { pt3dadd( -36.6132, 0.853498, -10.6565, 0.83 ) }
    dend_45 { pt3dadd( -37.9878, 0.842711, -10.8964, 0.83 ) }
    dend_45 { pt3dadd( -42.5903, 0.622878, -12.1601, 0.83 ) }
    dend_45 { pt3dadd( -43.7712, 0.465195, -12.6585, 0.83 ) }
    dend_45 { pt3dadd( -46.5465, -0.0967032, -14.3687, 0.83 ) }
    dend_45 { pt3dadd( -49.3373, -0.712155, -16.4157, 0.83 ) }
    dend_45 { pt3dadd( -52.2102, -1.31683, -18.8688, 0.83 ) }
    dend_45 { pt3dadd( -57.5929, -2.38946, -23.6423, 0.83 ) }
    dend_45 { pt3dadd( -62.3154, -3.30018, -28.17, 0.83 ) }
    dend_45 { pt3dadd( -65.8833, -3.89665, -31.7549, 0.83 ) }
    dend_45 { pt3dadd( -70.4435, -4.54562, -36.5993, 0.55 ) }
    dend_45 { pt3dadd( -73.489, -4.94903, -39.9233, 0.28 ) }
    dend_45 { pt3dadd( -76.5867, -5.26976, -43.3968, 0.55 ) }
    dend_45 { pt3dadd( -79.6095, -5.23759, -46.421, 0.55 ) }
    dend_45 { pt3dadd( -80.3207, -5.14509, -47.0988, 0.55 ) }
    dend_45 { pt3dadd( -81.4626, -4.98884, -48.1529, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 73/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.5167, -3.18495, 11.1598, 1.66 ) }
    dend_40 { pt3dadd( -5.58989, -4.31038, 12.3527, 1.39 ) }
    dend_40 { pt3dadd( -7.92592, -6.76013, 14.9491, 1.66 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 76/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.0967, -6.26495, 15.1098, 1.39 ) }
    dend_33 { pt3dadd( -3.07842, -9.32875, 14.6078, 1.39 ) }
    dend_33 { pt3dadd( -4.10636, -12.5368, 14.0821, 1.39 ) }
    dend_33 { pt3dadd( -4.81618, -14.7521, 13.7191, 1.39 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 80/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.8933, -8.84494, 6.44987, 4.16 ) }
    dend_8 { pt3dadd( 3.33228, -9.32498, 5.42192, 4.16 ) }
    dend_8 { pt3dadd( 4.93835, -11.0813, 1.66097, 3.05 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 83/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 0.0933001, -4.30494, 3.93987, 1.11 ) }
    dend_3 { pt3dadd( 1.31793, -4.01124, 4.4001, 1.11 ) }
    dend_3 { pt3dadd( 2.37907, -3.30307, 5.59335, 1.11 ) }
    dend_3 { pt3dadd( 4.05821, -2.18246, 7.48156, 1.11 ) }
    dend_3 { pt3dadd( 5.42471, -1.2705, 9.0182, 0.83 ) }
    dend_3 { pt3dadd( 7.6023, 0.182758, 11.4669, 0.83 ) }
    dend_3 { pt3dadd( 9.65308, 1.55138, 13.773, 1.11 ) }
    dend_3 { pt3dadd( 11.4194, 3.20412, 16.8338, 1.11 ) }
    dend_3 { pt3dadd( 16.8582, 7.5204, 23.1912, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.8933, 4.86506, 1.41987, 1.39 ) }
    dend_0 { pt3dadd( 4.63828, 8.29566, 1.41987, 1.39 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 94/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.65053, -8.97609, 2.67222, 0.823639 ) }
    axon_0 { pt3dadd( 5.90337, -23.3606, 2.67222, 0.823639 ) }
    axon_0 { pt3dadd( 10.1562, -37.7451, 2.67222, 0.823639 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 97/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -13.3531, 74.4641, 39.7038, 0.55 ) }
    dend_57 { pt3dadd( -15.1171, 83.0213, 42.9699, 0.55 ) }
    dend_57 { pt3dadd( -15.5323, 92.1647, 44.7675, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -13.3531, 74.4641, 39.7038, 0.55 ) }
    dend_56 { pt3dadd( -13.7217, 86.4211, 45.3841, 0.55 ) }
    dend_56 { pt3dadd( -12.4688, 97.1096, 53.1015, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -14.5373, 6.50896, -14.2845, 0.83 ) }
    dend_52 { pt3dadd( -16.5561, 9.28802, -15.8489, 0.83 ) }
    dend_52 { pt3dadd( -19.3934, 13.1937, -18.0475, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -14.5373, 6.50896, -14.2845, 1.11 ) }
    dend_49 { pt3dadd( -17.9883, 8.1275, -15.092, 1.11 ) }
    dend_49 { pt3dadd( -20.5219, 9.31574, -15.6848, 1.11 ) }
    dend_49 { pt3dadd( -21.8756, 9.95063, -16.0015, 1.11 ) }
    dend_49 { pt3dadd( -25.1669, 11.4942, -16.7716, 0.83 ) }
    dend_49 { pt3dadd( -27.1715, 12.4344, -17.2407, 0.83 ) }
    dend_49 { pt3dadd( -29.0624, 13.3212, -17.6831, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 13/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -81.4626, -4.98884, -48.1529, 0.28 ) }
    dend_47 { pt3dadd( -81.128, -5.82816, -51.7594, 0.28 ) }
    dend_47 { pt3dadd( -81.0553, -6.01056, -52.5431, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -81.4626, -4.98884, -48.1529, 0.28 ) }
    dend_46 { pt3dadd( -83.2434, -7.16297, -51.8857, 0.28 ) }
    dend_46 { pt3dadd( -84.2349, -8.30291, -53.7473, 1.11 ) }
    dend_46 { pt3dadd( -85.2709, -9.38955, -55.4546, 1.11 ) }
    dend_46 { pt3dadd( -86.0616, -10.1493, -56.6265, 0.28 ) }
    dend_46 { pt3dadd( -86.6939, -10.6023, -57.4414, 1.39 ) }
    dend_46 { pt3dadd( -89.6363, -12.367, -61.1295, 0.28 ) }
    dend_46 { pt3dadd( -91.0846, -13.0348, -62.6867, 1.11 ) }
    dend_46 { pt3dadd( -92.0829, -13.4034, -63.6434, 0.55 ) }
    dend_46 { pt3dadd( -93.4876, -13.8502, -64.9442, 0.28 ) }
    dend_46 { pt3dadd( -99.9903, -15.6026, -70.8849, 0.28 ) }
    dend_46 { pt3dadd( -102.29, -16.1304, -72.911, 0.83 ) }
    dend_46 { pt3dadd( -104.557, -16.517, -74.821, 0.28 ) }
    dend_46 { pt3dadd( -105.779, -16.6793, -75.8608, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 30/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -7.92592, -6.76013, 14.9491, 0.83 ) }
    dend_44 { pt3dadd( -8.81809, -8.75693, 17.6321, 0.83 ) }
    dend_44 { pt3dadd( -9.37264, -9.8388, 18.8603, 0.55 ) }
    dend_44 { pt3dadd( -10.2882, -11.2015, 20.6747, 0.55 ) }
    dend_44 { pt3dadd( -11.3095, -12.331, 22.584, 0.55 ) }
    dend_44 { pt3dadd( -12.8486, -13.589, 25.2916, 0.55 ) }
    dend_44 { pt3dadd( -13.9331, -14.4754, 27.1993, 0.55 ) }
    dend_44 { pt3dadd( -15.1912, -15.1592, 29.0021, 0.55 ) }
    dend_44 { pt3dadd( -17.1557, -15.7671, 31.8762, 0.55 ) }
    dend_44 { pt3dadd( -18.2622, -15.7088, 33.2274, 0.55 ) }
    dend_44 { pt3dadd( -19.4635, -15.3281, 34.6125, 0.55 ) }
    dend_44 { pt3dadd( -24.421, -18.2978, 42.4845, 0.55 ) }
    dend_44 { pt3dadd( -30.8179, -22.5008, 48.549, 0.55 ) }
    dend_44 { pt3dadd( -36.0258, -26.747, 55.6352, 0.55 ) }
    dend_44 { pt3dadd( -42.8863, -28.8361, 62.2634, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 45/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -7.92592, -6.76013, 14.9491, 0.83 ) }
    dend_41 { pt3dadd( -9.48783, -8.19803, 13.036, 0.83 ) }
    dend_41 { pt3dadd( -11.5278, -10.0761, 10.5372, 0.83 ) }
    dend_41 { pt3dadd( -15.5645, -13.7924, 5.59269, 0.83 ) }
    dend_41 { pt3dadd( -16.376, -14.5394, 4.5987, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -4.81618, -14.7521, 13.7191, 0.83 ) }
    dend_37 { pt3dadd( -6.11309, -16.9413, 13.7044, 0.83 ) }
    dend_37 { pt3dadd( -6.95131, -18.0726, 13.6931, 0.83 ) }
    dend_37 { pt3dadd( -8.40028, -19.9466, 13.6532, 0.83 ) }
    dend_37 { pt3dadd( -10.132, -22.1863, 13.6056, 0.83 ) }
    dend_37 { pt3dadd( -10.7416, -22.9747, 13.5888, 0.83 ) }
    dend_37 { pt3dadd( -12.3519, -25.0574, 13.5445, 1.11 ) }
    dend_37 { pt3dadd( -14.6693, -27.8104, 13.4734, 0.83 ) }
    dend_37 { pt3dadd( -15.6303, -28.8504, 13.441, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -4.81618, -14.7521, 13.7191, 0.83 ) }
    dend_34 { pt3dadd( -4.49576, -16.9296, 14.7502, 0.83 ) }
    dend_34 { pt3dadd( -4.33378, -18.474, 15.3596, 0.83 ) }
    dend_34 { pt3dadd( -4.16299, -19.6172, 15.7315, 0.83 ) }
    dend_34 { pt3dadd( -3.63483, -22.957, 16.6897, 0.83 ) }
    dend_34 { pt3dadd( -3.32705, -24.5592, 17.1104, 0.83 ) }
    dend_34 { pt3dadd( -2.89827, -26.3891, 17.5604, 0.83 ) }
    dend_34 { pt3dadd( -2.11675, -29.5328, 18.2601, 0.83 ) }
    dend_34 { pt3dadd( -1.34617, -32.5566, 18.8948, 0.83 ) }
    dend_34 { pt3dadd( -1.16544, -33.7024, 19.1283, 0.83 ) }
    dend_34 { pt3dadd( -0.987091, -35.6793, 19.5483, 0.83 ) }
    dend_34 { pt3dadd( -0.925162, -37.129, 19.8955, 0.83 ) }
    dend_34 { pt3dadd( -0.923527, -38.7908, 20.3142, 0.83 ) }
    dend_34 { pt3dadd( -1.03099, -42.6285, 21.3149, 0.83 ) }
    dend_34 { pt3dadd( -1.40076, -48.4798, 22.7878, 0.55 ) }
    dend_34 { pt3dadd( -1.50187, -50.9889, 23.3677, 0.55 ) }
    dend_34 { pt3dadd( -1.57583, -53.2021, 23.8152, 0.55 ) }
    dend_34 { pt3dadd( -1.60377, -55.7163, 24.2092, 0.55 ) }
    dend_34 { pt3dadd( -1.48879, -58.3901, 24.4877, 0.55 ) }
    dend_34 { pt3dadd( -1.19687, -60.5045, 24.545, 0.55 ) }
    dend_34 { pt3dadd( -0.482476, -63.4455, 24.5198, 0.55 ) }
    dend_34 { pt3dadd( 0.197163, -66.1889, 24.4071, 0.55 ) }
    dend_34 { pt3dadd( 0.62961, -67.8741, 24.3439, 0.28 ) }
    dend_34 { pt3dadd( 0.905389, -68.8974, 24.3014, 0.83 ) }
    dend_34 { pt3dadd( 1.20516, -69.8956, 24.2588, 0.55 ) }
    dend_34 { pt3dadd( 2.1661, -72.7587, 24.1656, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.93835, -11.0813, 1.66097, 2.49 ) }
    dend_14 { pt3dadd( 5.58606, -13.5439, 0.810835, 2.49 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.93835, -11.0813, 1.66097, 1.39 ) }
    dend_9 { pt3dadd( 7.80494, -10.3881, -0.749521, 1.39 ) }
    dend_9 { pt3dadd( 9.20611, -10.0492, -1.92775, 1.11 ) }
    dend_9 { pt3dadd( 10.7924, -9.66558, -3.26164, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 91/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 16.8582, 7.5204, 23.1912, 0.55 ) }
    dend_7 { pt3dadd( 21.4436, 11.7651, 30.0309, 0.55 ) }
    dend_7 { pt3dadd( 26.3253, 15.212, 37.1101, 0.55 ) }
    dend_7 { pt3dadd( 32.0278, 20.0553, 42.5736, 0.55 ) }
    dend_7 { pt3dadd( 37.6574, 23.7571, 48.9321, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 96/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 16.8582, 7.5204, 23.1912, 0.55 ) }
    dend_4 { pt3dadd( 24.8286, 10.8352, 28.8128, 0.55 ) }
    dend_4 { pt3dadd( 33.5251, 14.4178, 33.0145, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 99/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.63828, 8.29566, 1.41987, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 6.15399, 11.387, 2.33768, 1.11 ) }
    dend_2 { pt3dadd( 7.50024, 14.033, 2.72103, 1.11 ) }
    dend_2 { pt3dadd( 9.57108, 17.9813, 2.52765, 1.11 ) }
    dend_2 { pt3dadd( 10.9956, 20.7545, 2.21631, 1.11 ) }
    dend_2 { pt3dadd( 12.4312, 23.5302, 1.74085, 0.83 ) }
    dend_2 { pt3dadd( 14.4384, 27.0628, 0.896301, 0.83 ) }
    dend_2 { pt3dadd( 17.8311, 32.276, -1.1358, 0.83 ) }
    dend_2 { pt3dadd( 20.7827, 36.3503, -3.51103, 0.83 ) }
    dend_2 { pt3dadd( 21.94, 37.8307, -4.61789, 0.83 ) }
    dend_2 { pt3dadd( 23.9766, 40.3305, -6.86188, 0.55 ) }
    dend_2 { pt3dadd( 26.1642, 42.892, -9.48455, 0.83 ) }
    dend_2 { pt3dadd( 28.612, 45.6958, -12.5374, 0.55 ) }
    dend_2 { pt3dadd( 30.4335, 47.8139, -14.9556, 0.55 ) }
    dend_2 { pt3dadd( 31.4106, 48.9913, -16.3552, 0.55 ) }
    dend_2 { pt3dadd( 33.3306, 51.3358, -19.3372, 0.28 ) }
    dend_2 { pt3dadd( 33.7661, 51.9364, -20.1074, 0.83 ) }
    dend_2 { pt3dadd( 34.3135, 52.9195, -21.2751, 0.83 ) }
    dend_2 { pt3dadd( 36.6296, 57.7722, -26.9053, 0.55 ) }
    dend_2 { pt3dadd( 37.1379, 58.8555, -28.3424, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.63828, 8.29566, 1.41987, 0.55 ) }
    dend_1 { pt3dadd( 6.65525, 9.52416, 0.179491, 0.55 ) }
    dend_1 { pt3dadd( 7.40351, 9.95749, -0.428606, 0.55 ) }
    dend_1 { pt3dadd( 8.77247, 10.7385, -1.65621, 0.83 ) }
    dend_1 { pt3dadd( 9.65854, 11.2824, -2.60692, 0.83 ) }
    dend_1 { pt3dadd( 11.8136, 12.7893, -5.12903, 0.83 ) }
    dend_1 { pt3dadd( 12.2546, 13.1223, -5.67877, 0.83 ) }
    dend_1 { pt3dadd( 13.7983, 14.358, -7.90934, 0.83 ) }
    dend_1 { pt3dadd( 15.7598, 16.0399, -11.0354, 0.83 ) }
    dend_1 { pt3dadd( 17.4146, 17.7031, -14.0324, 0.83 ) }
    dend_1 { pt3dadd( 18.5884, 19.0613, -16.3221, 0.83 ) }
    dend_1 { pt3dadd( 19.0508, 19.6722, -17.2599, 0.83 ) }
    dend_1 { pt3dadd( 19.8526, 20.879, -18.8924, 0.83 ) }
    dend_1 { pt3dadd( 20.0435, 21.2352, -19.2802, 0.83 ) }
    dend_1 { pt3dadd( 20.368, 21.9524, -19.9367, 0.28 ) }
    dend_1 { pt3dadd( 20.735, 22.7547, -20.5376, 0.83 ) }
    dend_1 { pt3dadd( 21.7072, 24.7873, -21.8959, 0.83 ) }
    dend_1 { pt3dadd( 22.5721, 26.2073, -22.6795, 0.83 ) }
    dend_1 { pt3dadd( 23.9607, 28.0779, -23.684, 0.55 ) }
    dend_1 { pt3dadd( 24.3757, 28.5626, -23.9604, 0.83 ) }
    dend_1 { pt3dadd( 25.5494, 29.7996, -24.8168, 0.55 ) }
    dend_1 { pt3dadd( 26.0605, 30.3079, -25.2089, 0.83 ) }
    dend_1 { pt3dadd( 28.4162, 32.6044, -27.2243, 0.28 ) }
    dend_1 { pt3dadd( 29.6434, 33.8309, -28.4357, 0.83 ) }
    dend_1 { pt3dadd( 29.9149, 34.1303, -28.8227, 0.83 ) }
    dend_1 { pt3dadd( 31.5754, 36.0302, -31.723, 0.28 ) }
    dend_1 { pt3dadd( 31.7844, 36.2852, -32.1718, 0.55 ) }
    dend_1 { pt3dadd( 32.466, 37.2348, -33.9724, 0.28 ) }
    dend_1 { pt3dadd( 32.6846, 37.6129, -34.749, 1.11 ) }
    dend_1 { pt3dadd( 33.9888, 40.0574, -39.511, 0.55 ) }
    dend_1 { pt3dadd( 34.3669, 40.7661, -40.8397, 0.28 ) }
    dend_1 { pt3dadd( 34.63, 41.2391, -41.7358, 0.55 ) }
    dend_1 { pt3dadd( 34.8802, 41.6769, -42.5792, 0.28 ) }
    dend_1 { pt3dadd( 35.291, 42.3647, -43.8551, 0.55 ) }
    dend_1 { pt3dadd( 35.8091, 43.2443, -45.3974, 0.28 ) }
    dend_1 { pt3dadd( 36.2281, 44.1048, -46.1809, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.1562, -37.7451, 2.67222, 0.28 ) }
    axon_1 { pt3dadd( 14.409, -52.1295, 2.67222, 0.28 ) }
    axon_1 { pt3dadd( 18.6619, -66.514, 2.67222, 0.28 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 58/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -19.3934, 13.1937, -18.0475, 0.55 ) }
    dend_54 { pt3dadd( -23.7312, 16.1736, -22.6642, 0.55 ) }
    dend_54 { pt3dadd( -26.7746, 18.3086, -24.9831, 1.11 ) }
    dend_54 { pt3dadd( -30.6632, 21.1416, -27.8237, 0.83 ) }
    dend_54 { pt3dadd( -33.1125, 22.8976, -29.5111, 0.83 ) }
    dend_54 { pt3dadd( -36.3505, 25.2192, -31.7762, 0.83 ) }
    dend_54 { pt3dadd( -40.4419, 28.2968, -34.6234, 0.83 ) }
    dend_54 { pt3dadd( -43.1119, 30.2514, -36.2785, 0.55 ) }
    dend_54 { pt3dadd( -46.1894, 32.7457, -38.0052, 0.28 ) }
    dend_54 { pt3dadd( -47.3369, 33.7783, -38.6115, 0.83 ) }
    dend_54 { pt3dadd( -49.6005, 36.0388, -40.0862, 0.83 ) }
    dend_54 { pt3dadd( -51.3203, 37.9465, -41.504, 0.55 ) }
    dend_54 { pt3dadd( -53.2026, 40.2115, -43.6143, 0.83 ) }
    dend_54 { pt3dadd( -55.072, 42.536, -45.8226, 0.28 ) }
    dend_54 { pt3dadd( -56.1875, 44.01, -47.2199, 0.28 ) }
    dend_54 { pt3dadd( -57.1812, 45.4015, -48.613, 0.55 ) }
    dend_54 { pt3dadd( -57.7658, 46.2426, -49.5004, 0.83 ) }
    dend_54 { pt3dadd( -59.8986, 49.2948, -53.1425, 0.28 ) }
    dend_54 { pt3dadd( -60.6366, 50.3825, -54.461, 0.83 ) }
    dend_54 { pt3dadd( -62.3273, 52.9853, -57.5879, 0.55 ) }
    dend_54 { pt3dadd( -62.8916, 53.8705, -58.6498, 0.28 ) }
    dend_54 { pt3dadd( -63.9724, 55.7314, -60.7629, 1.11 ) }
    dend_54 { pt3dadd( -65.2794, 57.9683, -63.1492, 0.28 ) }
    dend_54 { pt3dadd( -66.4015, 59.6703, -64.8445, 0.55 ) }
    dend_54 { pt3dadd( -67.1898, 60.6886, -65.9202, 0.28 ) }
    dend_54 { pt3dadd( -67.9139, 61.5558, -66.7906, 0.83 ) }
    dend_54 { pt3dadd( -69.0349, 62.7801, -68.2758, 0.28 ) }
    dend_54 { pt3dadd( -70.2285, 63.9426, -69.8564, 0.55 ) }
    dend_54 { pt3dadd( -71.8609, 65.4082, -71.9111, 0.83 ) }
    dend_54 { pt3dadd( -75.7211, 69.0044, -77.0369, 0.28 ) }
    dend_54 { pt3dadd( -76.6354, 69.8833, -78.2613, 0.83 ) }
    dend_54 { pt3dadd( -80.363, 73.7681, -83.1977, 0.28 ) }
    dend_54 { pt3dadd( -80.8504, 74.3292, -83.8484, 0.55 ) }
    dend_54 { pt3dadd( -81.7801, 75.6825, -85.153, 1.11 ) }
    dend_54 { pt3dadd( -83.874, 79.5211, -88.2308, 0.28 ) }
    dend_54 { pt3dadd( -84.2273, 80.3465, -88.7591, 0.55 ) }
    dend_54 { pt3dadd( -85.0465, 82.4785, -89.9298, 0.28 ) }
    dend_54 { pt3dadd( -85.2579, 83.1167, -90.2408, 0.55 ) }
    dend_54 { pt3dadd( -86.5486, 87.0615, -92.3692, 0.28 ) }
    dend_54 { pt3dadd( -87.4205, 89.4228, -93.9679, 0.83 ) }
    dend_54 { pt3dadd( -88.0702, 90.8709, -95.0634, 0.28 ) }
    dend_54 { pt3dadd( -88.3341, 91.387, -95.5078, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_54 { pt3dadd( -90.8939, 95.9517, -99.6437, 0.28 ) }
    dend_54 { pt3dadd( -91.2587, 96.571, -100.232, 0.83 ) }
    dend_54 { pt3dadd( -93.3491, 99.739, -103.476, 0.28 ) }
    dend_54 { pt3dadd( -93.9878, 100.655, -104.399, 0.55 ) }
    dend_54 { pt3dadd( -96.2725, 103.737, -107.7, 0.28 ) }
    dend_54 { pt3dadd( -97.4853, 105.261, -109.358, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 6/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -19.3934, 13.1937, -18.0475, 0.83 ) }
    dend_53 { pt3dadd( -20.9923, 14.1649, -17.3734, 0.83 ) }
    dend_53 { pt3dadd( -22.0199, 14.8478, -16.9888, 0.55 ) }
    dend_53 { pt3dadd( -25.1142, 16.9249, -16.0759, 0.55 ) }
    dend_53 { pt3dadd( -28.5368, 19.2879, -15.3163, 0.55 ) }
    dend_53 { pt3dadd( -30.4466, 20.5757, -15.0381, 0.55 ) }
    dend_53 { pt3dadd( -31.7408, 21.4263, -14.9457, 0.55 ) }
    dend_53 { pt3dadd( -34.1615, 22.9452, -14.9875, 0.55 ) }
    dend_53 { pt3dadd( -35.5818, 23.7575, -15.2139, 0.55 ) }
    dend_53 { pt3dadd( -36.8746, 24.4153, -15.5689, 0.55 ) }
    dend_53 { pt3dadd( -38.2307, 25.0042, -16.1794, 0.55 ) }
    dend_53 { pt3dadd( -40.391, 25.766, -17.2671, 0.55 ) }
    dend_53 { pt3dadd( -42.6291, 26.4033, -18.4564, 0.55 ) }
    dend_53 { pt3dadd( -43.4129, 26.563, -18.8703, 0.28 ) }
    dend_53 { pt3dadd( -44.6695, 26.8008, -19.493, 1.39 ) }
    dend_53 { pt3dadd( -47.4773, 27.2464, -20.764, 0.28 ) }
    dend_53 { pt3dadd( -48.1952, 27.3879, -21.0739, 0.83 ) }
    dend_53 { pt3dadd( -49.095, 27.5739, -21.4571, 0.28 ) }
    dend_53 { pt3dadd( -50.0996, 27.8674, -21.8436, 0.55 ) }
    dend_53 { pt3dadd( -50.4093, 27.9783, -21.951, 0.28 ) }
    dend_53 { pt3dadd( -51.7955, 28.568, -22.4011, 0.83 ) }
    dend_53 { pt3dadd( -54.1067, 29.6355, -22.9501, 0.28 ) }
    dend_53 { pt3dadd( -54.7863, 29.9652, -23.1268, 0.55 ) }
    dend_53 { pt3dadd( -55.9252, 30.5396, -23.4358, 0.28 ) }
    dend_53 { pt3dadd( -56.7533, 30.9271, -23.6592, 0.55 ) }
    dend_53 { pt3dadd( -58.3079, 31.585, -24.0564, 0.28 ) }
    dend_53 { pt3dadd( -58.7496, 31.7137, -24.1372, 0.83 ) }
    dend_53 { pt3dadd( -60.9508, 32.073, -24.3859, 0.28 ) }
    dend_53 { pt3dadd( -61.3748, 32.1258, -24.4312, 0.55 ) }
    dend_53 { pt3dadd( -62.6912, 32.2107, -24.5541, 0.28 ) }
    dend_53 { pt3dadd( -63.7244, 32.2306, -24.6257, 0.55 ) }
    dend_53 { pt3dadd( -67.7996, 32.0565, -24.724, 0.28 ) }
    dend_53 { pt3dadd( -68.4331, 32.0002, -24.7217, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 39/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -29.0624, 13.3212, -17.6831, 0.55 ) }
    dend_51 { pt3dadd( -31.5228, 15.0484, -20.8668, 0.55 ) }
    dend_51 { pt3dadd( -33.8469, 16.578, -23.5857, 0.55 ) }
    dend_51 { pt3dadd( -35.8746, 17.7719, -25.6212, 0.83 ) }
    dend_51 { pt3dadd( -37.4455, 18.6312, -26.8356, 0.83 ) }
    dend_51 { pt3dadd( -39.5599, 19.7199, -28.2677, 0.28 ) }
    dend_51 { pt3dadd( -40.301, 20.0705, -28.7409, 0.28 ) }
    dend_51 { pt3dadd( -42.5157, 20.9565, -29.9005, 0.83 ) }
    dend_51 { pt3dadd( -44.5948, 21.6596, -30.8719, 0.55 ) }
    dend_51 { pt3dadd( -48.9283, 22.8382, -32.8165, 0.55 ) }
    dend_51 { pt3dadd( -51.8666, 23.5038, -34.2148, 0.83 ) }
    dend_51 { pt3dadd( -54.1794, 24.009, -35.5571, 0.28 ) }
    dend_51 { pt3dadd( -54.713, 24.1238, -35.9256, 0.55 ) }
    dend_51 { pt3dadd( -57.6641, 24.6517, -38.0297, 0.28 ) }
    dend_51 { pt3dadd( -58.9573, 24.8545, -39.0423, 0.55 ) }
    dend_51 { pt3dadd( -61.1231, 25.246, -40.7773, 0.55 ) }
    dend_51 { pt3dadd( -64.0451, 25.8975, -42.8922, 0.28 ) }
    dend_51 { pt3dadd( -64.9162, 26.128, -43.4651, 0.28 ) }
    dend_51 { pt3dadd( -68.8948, 27.302, -45.8501, 0.55 ) }
    dend_51 { pt3dadd( -72.7537, 28.4809, -47.766, 0.83 ) }
    dend_51 { pt3dadd( -77.8322, 29.9886, -49.836, 0.28 ) }
    dend_51 { pt3dadd( -78.9476, 30.3007, -50.2056, 0.55 ) }
    dend_51 { pt3dadd( -81.6152, 31.0121, -50.9223, 0.55 ) }
    dend_51 { pt3dadd( -82.8484, 31.3535, -51.237, 0.55 ) }
    dend_51 { pt3dadd( -86.4478, 32.3574, -52.1691, 0.83 ) }
    dend_51 { pt3dadd( -89.3445, 33.1017, -52.6471, 0.28 ) }
    dend_51 { pt3dadd( -90.1476, 33.2866, -52.735, 0.55 ) }
    dend_51 { pt3dadd( -93.0207, 33.985, -53.0239, 0.28 ) }
    dend_51 { pt3dadd( -94.4478, 34.3376, -53.2322, 0.55 ) }
    dend_51 { pt3dadd( -96.0375, 34.7148, -53.547, 0.28 ) }
    dend_51 { pt3dadd( -97.0501, 34.9755, -53.7955, 0.83 ) }
    dend_51 { pt3dadd( -98.7665, 35.4796, -54.2181, 0.28 ) }
    dend_51 { pt3dadd( -100.42, 36.0408, -54.6159, 0.83 ) }
    dend_51 { pt3dadd( -104.734, 37.9631, -55.5482, 0.28 ) }
    dend_51 { pt3dadd( -106.261, 38.8583, -55.9077, 0.28 ) }
    dend_51 { pt3dadd( -107.264, 39.5701, -56.199, 0.28 ) }
    dend_51 { pt3dadd( -109.068, 41.0861, -56.9392, 0.83 ) }
    dend_51 { pt3dadd( -110.672, 42.6286, -57.7387, 0.28 ) }
    dend_51 { pt3dadd( -113.043, 45.2067, -59.145, 0.55 ) }
    dend_51 { pt3dadd( -116.315, 49.1545, -61.3164, 0.28 ) }
    dend_51 { pt3dadd( -117.805, 51.0309, -62.3343, 0.83 ) }
    dend_51 { pt3dadd( -120.171, 54.0079, -63.9712, 0.28 ) }
    dend_51 { pt3dadd( -120.95, 54.9519, -64.4751, 0.55 ) }
    dend_51 { pt3dadd( -122.682, 56.985, -65.4583, 0.28 ) }
    dend_51 { pt3dadd( -123.089, 57.4433, -65.6715, 0.83 ) }
    dend_51 { pt3dadd( -126.624, 61.1367, -66.9198, 0.28 ) }
    dend_51 { pt3dadd( -127.379, 61.882, -67.0647, 0.55 ) }
    dend_51 { pt3dadd( -129.979, 64.378, -67.1613, 0.55 ) }
    dend_51 { pt3dadd( -130.461, 64.8372, -67.1541, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 88/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -29.0624, 13.3212, -17.6831, 0.55 ) }
    dend_50 { pt3dadd( -32.6444, 12.4594, -16.4941, 0.55 ) }
    dend_50 { pt3dadd( -39.6947, 10.8398, -15.176, 0.83 ) }
    dend_50 { pt3dadd( -46.5266, 9.34108, -14.4055, 0.83 ) }
    dend_50 { pt3dadd( -50.3647, 8.52393, -14.2905, 0.55 ) }
    dend_50 { pt3dadd( -52.429, 8.09233, -14.326, 0.55 ) }
    dend_50 { pt3dadd( -58.6136, 6.735, -14.8073, 0.55 ) }
    dend_50 { pt3dadd( -66.55, 5.18672, -16.2293, 0.28 ) }
    dend_50 { pt3dadd( -67.9221, 4.89117, -16.7309, 0.55 ) }
    dend_50 { pt3dadd( -71.458, 4.04007, -18.5125, 0.28 ) }
    dend_50 { pt3dadd( -72.8518, 3.69226, -19.2519, 0.83 ) }
    dend_50 { pt3dadd( -76.5691, 2.61238, -21.2156, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( -78.1565, 2.03525, -21.8936, 0.55 ) }
    dend_50 { pt3dadd( -83.2883, 0.131595, -22.9083, 0.28 ) }
    dend_50 { pt3dadd( -85.3193, -0.705133, -23.0477, 0.83 ) }
    dend_50 { pt3dadd( -88.6078, -2.20628, -22.7342, 0.28 ) }
    dend_50 { pt3dadd( -89.7772, -2.74846, -22.4358, 0.83 ) }
    dend_50 { pt3dadd( -94.9634, -5.15162, -20.117, 0.28 ) }
    dend_50 { pt3dadd( -96.2063, -5.82809, -19.4905, 0.83 ) }
    dend_50 { pt3dadd( -97.4249, -6.55278, -18.7541, 0.28 ) }
    dend_50 { pt3dadd( -97.9605, -6.90352, -18.4122, 0.83 ) }
    dend_50 { pt3dadd( -100.587, -8.72397, -16.731, 0.28 ) }
    dend_50 { pt3dadd( -101.97, -9.70325, -16.0335, 0.55 ) }
    dend_50 { pt3dadd( -105.921, -12.5151, -15.5744, 0.28 ) }
    dend_50 { pt3dadd( -106.227, -12.731, -15.5656, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 13/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -16.376, -14.5394, 4.5987, 0.83 ) }
    dend_43 { pt3dadd( -16.9517, -14.8385, 5.02661, 0.83 ) }
    dend_43 { pt3dadd( -18.5923, -15.7919, 6.01796, 0.55 ) }
    dend_43 { pt3dadd( -20.8016, -16.852, 7.33035, 0.55 ) }
    dend_43 { pt3dadd( -21.9804, -17.3526, 8.0398, 0.55 ) }
    dend_43 { pt3dadd( -22.5929, -17.5818, 8.43854, 0.55 ) }
    dend_43 { pt3dadd( -23.4806, -17.8607, 9.04803, 0.83 ) }
    dend_43 { pt3dadd( -26.5418, -18.6594, 11.2159, 0.55 ) }
    dend_43 { pt3dadd( -29.2127, -19.268, 13.0688, 0.55 ) }
    dend_43 { pt3dadd( -31.481, -19.6894, 14.498, 0.55 ) }
    dend_43 { pt3dadd( -32.9422, -19.8963, 15.4291, 0.55 ) }
    dend_43 { pt3dadd( -35.0457, -20.1131, 16.7465, 0.55 ) }
    dend_43 { pt3dadd( -36.3363, -20.1906, 17.5109, 0.55 ) }
    dend_43 { pt3dadd( -38.0418, -20.3343, 18.3982, 0.55 ) }
    dend_43 { pt3dadd( -39.6224, -20.6452, 19.048, 0.55 ) }
    dend_43 { pt3dadd( -40.5687, -20.8997, 19.3139, 0.28 ) }
    dend_43 { pt3dadd( -41.1448, -21.0939, 19.4359, 0.55 ) }
    dend_43 { pt3dadd( -42.398, -21.5172, 19.6349, 0.55 ) }
    dend_43 { pt3dadd( -45.528, -22.5823, 20.1699, 0.55 ) }
    dend_43 { pt3dadd( -47.2183, -23.1636, 20.5362, 0.55 ) }
    dend_43 { pt3dadd( -48.9953, -23.8409, 20.8881, 0.28 ) }
    dend_43 { pt3dadd( -49.8554, -24.1847, 21.0306, 0.55 ) }
    dend_43 { pt3dadd( -51.6614, -24.8617, 21.3073, 0.55 ) }
    dend_43 { pt3dadd( -56.5037, -27.1171, 24.3789, 0.55 ) }
    dend_43 { pt3dadd( -60.8358, -28.8261, 28.4139, 0.55 ) }
    dend_43 { pt3dadd( -64.598, -30.9024, 32.8303, 0.55 ) }
    dend_43 { pt3dadd( -68.448, -33.3762, 36.9567, 0.55 ) }
    dend_43 { pt3dadd( -73.2858, -35.0176, 40.402, 0.55 ) }
    dend_43 { pt3dadd( -78.8771, -35.7161, 42.8958, 0.55 ) }
    dend_43 { pt3dadd( -84.8314, -36.0592, 44.4444, 0.55 ) }
    dend_43 { pt3dadd( -90.6312, -36.0144, 46.5252, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 44/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -16.376, -14.5394, 4.5987, 0.83 ) }
    dend_42 { pt3dadd( -18.5053, -16.9458, 2.30466, 0.83 ) }
    dend_42 { pt3dadd( -20.4589, -18.7035, 0.369084, 0.83 ) }
    dend_42 { pt3dadd( -22.8238, -20.5902, -1.97576, 0.83 ) }
    dend_42 { pt3dadd( -26.2098, -22.9488, -5.16442, 0.83 ) }
    dend_42 { pt3dadd( -28.7857, -24.8109, -7.82666, 0.83 ) }
    dend_42 { pt3dadd( -30.3269, -25.9823, -9.49099, 0.83 ) }
    dend_42 { pt3dadd( -32.9542, -28.0933, -12.558, 0.83 ) }
    dend_42 { pt3dadd( -35.3081, -29.8912, -15.2689, 0.83 ) }
    dend_42 { pt3dadd( -39.319, -32.8226, -19.5728, 0.83 ) }
    dend_42 { pt3dadd( -44.1726, -36.1455, -24.217, 0.28 ) }
    dend_42 { pt3dadd( -45.3399, -36.9756, -25.2321, 0.83 ) }
    dend_42 { pt3dadd( -46.3901, -37.7818, -26.1057, 0.83 ) }
    dend_42 { pt3dadd( -47.6118, -38.7821, -27.0481, 0.55 ) }
    dend_42 { pt3dadd( -48.7445, -39.6072, -27.7173, 0.28 ) }
    dend_42 { pt3dadd( -49.9844, -40.3438, -28.1935, 0.55 ) }
    dend_42 { pt3dadd( -50.7778, -40.6755, -28.3649, 0.28 ) }
    dend_42 { pt3dadd( -52.2239, -41.2409, -28.7181, 0.83 ) }
    dend_42 { pt3dadd( -56.5949, -42.953, -29.9806, 0.28 ) }
    dend_42 { pt3dadd( -57.5758, -43.3226, -30.3794, 0.55 ) }
    dend_42 { pt3dadd( -58.6498, -43.7252, -30.8865, 0.28 ) }
    dend_42 { pt3dadd( -59.1582, -43.9256, -31.1874, 0.55 ) }
    dend_42 { pt3dadd( -60.4434, -44.4434, -32.0588, 0.28 ) }
    dend_42 { pt3dadd( -60.8657, -44.6284, -32.4166, 0.83 ) }
    dend_42 { pt3dadd( -62.9878, -45.7194, -34.6478, 0.55 ) }
    dend_42 { pt3dadd( -63.9059, -46.2307, -35.7413, 0.83 ) }
    dend_42 { pt3dadd( -65.5779, -47.1976, -37.9849, 0.28 ) }
    dend_42 { pt3dadd( -65.9087, -47.3925, -38.4724, 0.55 ) }
    dend_42 { pt3dadd( -67.3586, -48.253, -40.8558, 0.28 ) }
    dend_42 { pt3dadd( -68.084, -48.754, -42.1221, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 74/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -15.6303, -28.8504, 13.441, 0.55 ) }
    dend_39 { pt3dadd( -19.0455, -31.2007, 11.9119, 0.55 ) }
    dend_39 { pt3dadd( -24.6381, -35.0036, 9.63033, 0.55 ) }
    dend_39 { pt3dadd( -26.3185, -36.1246, 8.99263, 0.55 ) }
    dend_39 { pt3dadd( -30.4101, -38.9191, 7.58125, 0.28 ) }
    dend_39 { pt3dadd( -32.8307, -40.5872, 6.80376, 0.55 ) }
    dend_39 { pt3dadd( -34.6995, -41.9012, 6.21502, 0.28 ) }
    dend_39 { pt3dadd( -36.556, -43.1999, 5.71544, 0.28 ) }
    dend_39 { pt3dadd( -37.3253, -43.7498, 5.57965, 0.55 ) }
    dend_39 { pt3dadd( -40.1428, -45.7536, 5.26721, 0.28 ) }
    dend_39 { pt3dadd( -40.6553, -46.169, 5.26913, 0.83 ) }
    dend_39 { pt3dadd( -42.788, -48.1529, 5.35988, 0.28 ) }
    dend_39 { pt3dadd( -43.9476, -49.3144, 5.44391, 0.55 ) }
    dend_39 { pt3dadd( -45.4864, -50.9483, 5.58324, 0.28 ) }
    dend_39 { pt3dadd( -46.9599, -52.5751, 5.75058, 0.55 ) }
    dend_39 { pt3dadd( -48.9865, -54.8531, 6.07264, 0.55 ) }
    dend_39 { pt3dadd( -49.1801, -55.0827, 6.11165, 0.83 ) }
    dend_39 { pt3dadd( -50.4461, -56.6823, 6.47811, 0.28 ) }
    dend_39 { pt3dadd( -50.6186, -56.916, 6.50906, 0.83 ) }
    dend_39 { pt3dadd( -59.3378, -63.2056, 6.71001, 0.83 ) }
    dend_39 { pt3dadd( -69.1466, -67.5961, 6.3405, 0.83 ) }
    dend_39 { pt3dadd( -78.6813, -72.5645, 6.50954, 0.83 ) }
    dend_39 { pt3dadd( -87.5177, -78.3797, 8.43981, 0.83 ) }
    dend_39 { pt3dadd( -95.7925, -84.0905, 12.2528, 0.83 ) }
    dend_39 { pt3dadd( -104.527, -87.4578, 17.5436, 0.83 ) }
    dend_39 { pt3dadd( -112.887, -90.7832, 23.4326, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( -122.168, -92.764, 28.4892, 0.83 ) }
    dend_39 { pt3dadd( -131.783, -95.9112, 32.1312, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 2/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -15.6303, -28.8504, 13.441, 0.83 ) }
    dend_38 { pt3dadd( -15.7784, -31.2766, 14.5948, 0.83 ) }
    dend_38 { pt3dadd( -16.1579, -34.6965, 16.3055, 0.83 ) }
    dend_38 { pt3dadd( -16.2598, -36.4264, 17.208, 0.83 ) }
    dend_38 { pt3dadd( -16.4697, -40.5936, 19.3201, 0.83 ) }
    dend_38 { pt3dadd( -16.4885, -41.167, 19.5997, 0.83 ) }
    dend_38 { pt3dadd( -16.5506, -43.6333, 20.6979, 0.83 ) }
    dend_38 { pt3dadd( -16.6666, -46.3103, 21.8195, 0.83 ) }
    dend_38 { pt3dadd( -16.9137, -50.2388, 23.4789, 0.83 ) }
    dend_38 { pt3dadd( -17.0661, -53.7256, 24.8888, 0.83 ) }
    dend_38 { pt3dadd( -17.0847, -55.2698, 25.4338, 0.83 ) }
    dend_38 { pt3dadd( -17.096, -59.1973, 26.7619, 0.83 ) }
    dend_38 { pt3dadd( -17.0809, -63.161, 28.0724, 0.83 ) }
    dend_38 { pt3dadd( -15.8657, -70.2628, 33.082, 0.83 ) }
    dend_38 { pt3dadd( -15.0623, -77.1003, 38.5237, 0.83 ) }
    dend_38 { pt3dadd( -14.1683, -84.4994, 43.1564, 0.83 ) }
    dend_38 { pt3dadd( -11.5205, -91.6273, 47.537, 0.83 ) }
    dend_38 { pt3dadd( -7.87651, -98.4829, 51.6274, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 2.1661, -72.7587, 24.1656, 0.28 ) }
    dend_36 { pt3dadd( 1.49821, -76.0891, 23.2028, 0.28 ) }
    dend_36 { pt3dadd( 1.37083, -76.7243, 23.0191, 0.83 ) }
    dend_36 { pt3dadd( 0.693226, -80.103, 22.0423, 0.28 ) }
    dend_36 { pt3dadd( -1.31993, -92.582, 19.6061, 0.28 ) }
    dend_36 { pt3dadd( -1.69411, -105.449, 19.5812, 0.28 ) }
    dend_36 { pt3dadd( -1.72009, -118.107, 21.9272, 0.28 ) }
    dend_36 { pt3dadd( -3.65059, -130.212, 25.8568, 0.28 ) }
    dend_36 { pt3dadd( -2.53656, -142.591, 29.2102, 0.28 ) }
    dend_36 { pt3dadd( -0.331876, -154.724, 32.9018, 0.28 ) }
    dend_36 { pt3dadd( 0.791972, -167.536, 33.4627, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 31/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 2.1661, -72.7587, 24.1656, 0.55 ) }
    dend_35 { pt3dadd( 3.2522, -75.4913, 24.1529, 0.55 ) }
    dend_35 { pt3dadd( 3.91528, -77.1595, 24.1451, 0.55 ) }
    dend_35 { pt3dadd( 4.51436, -78.6667, 24.1381, 0.28 ) }
    dend_35 { pt3dadd( 9.6854, -88.5156, 22.6275, 0.28 ) }
    dend_35 { pt3dadd( 13.2746, -99.1504, 22.4292, 0.28 ) }
    dend_35 { pt3dadd( 16.3415, -109.774, 20.4957, 0.28 ) }
    dend_35 { pt3dadd( 20.9186, -119.942, 19.1944, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 39/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.58606, -13.5439, 0.810835, 1.94 ) }
    dend_16 { pt3dadd( 8.17198, -20.3725, -1.74231, 1.94 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 41/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.58606, -13.5439, 0.810835, 1.11 ) }
    dend_15 { pt3dadd( 2.27778, -17.8111, -4.73681, 1.11 ) }
    dend_15 { pt3dadd( 1.90012, -18.2252, -5.37062, 1.11 ) }
    dend_15 { pt3dadd( 0.0348323, -20.3934, -8.74455, 1.11 ) }
    dend_15 { pt3dadd( -0.640051, -21.239, -10.1243, 1.11 ) }
    dend_15 { pt3dadd( -1.77023, -22.6496, -12.5019, 1.11 ) }
    dend_15 { pt3dadd( -3.13138, -24.3341, -15.3646, 1.11 ) }
    dend_15 { pt3dadd( -4.84154, -26.2693, -18.7703, 1.11 ) }
    dend_15 { pt3dadd( -5.71293, -27.0961, -20.4497, 0.83 ) }
    dend_15 { pt3dadd( -7.26297, -28.3181, -23.318, 0.83 ) }
    dend_15 { pt3dadd( -7.89315, -28.8185, -24.4275, 0.55 ) }
    dend_15 { pt3dadd( -8.18313, -29.0372, -24.8953, 0.83 ) }
    dend_15 { pt3dadd( -9.70744, -30.1237, -27.1018, 1.39 ) }
    dend_15 { pt3dadd( -11.8634, -31.4593, -29.793, 1.11 ) }
    dend_15 { pt3dadd( -13.2173, -32.2612, -31.4544, 0.55 ) }
    dend_15 { pt3dadd( -13.9515, -32.7048, -32.3406, 0.83 ) }
    dend_15 { pt3dadd( -16.4981, -34.3848, -35.6463, 0.55 ) }
    dend_15 { pt3dadd( -17.4457, -35.0771, -36.9582, 0.28 ) }
    dend_15 { pt3dadd( -17.8189, -35.3918, -37.5552, 0.55 ) }
    dend_15 { pt3dadd( -20.5585, -37.7407, -41.96, 0.28 ) }
    dend_15 { pt3dadd( -20.8682, -38.0151, -42.4855, 0.55 ) }
    dend_15 { pt3dadd( -21.529, -38.6439, -43.7029, 0.28 ) }
    dend_15 { pt3dadd( -22.2622, -39.4812, -45.1766, 1.39 ) }
    dend_15 { pt3dadd( -24.739, -42.2319, -50.4087, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 65/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 10.7924, -9.66558, -3.26164, 1.11 ) }
    dend_13 { pt3dadd( 10.9441, -8.89254, -5.30523, 1.11 ) }
    dend_13 { pt3dadd( 11.0537, -8.27242, -6.75666, 0.83 ) }
    dend_13 { pt3dadd( 11.3193, -7.51033, -8.39368, 0.83 ) }
    dend_13 { pt3dadd( 12.219, -5.36227, -12.9984, 0.83 ) }
    dend_13 { pt3dadd( 13.1255, -3.74157, -16.6365, 0.83 ) }
    dend_13 { pt3dadd( 13.4349, -3.25052, -17.7291, 0.83 ) }
    dend_13 { pt3dadd( 13.872, -2.62338, -19.1741, 0.83 ) }
    dend_13 { pt3dadd( 16.0647, 0.785877, -26.4238, 0.83 ) }
    dend_13 { pt3dadd( 17.1653, 2.60744, -29.9475, 0.83 ) }
    dend_13 { pt3dadd( 17.9739, 4.19094, -32.6346, 0.83 ) }
    dend_13 { pt3dadd( 18.4526, 5.37733, -34.6022, 0.28 ) }
    dend_13 { pt3dadd( 18.6951, 6.17381, -35.9123, 1.39 ) }
    dend_13 { pt3dadd( 19.1091, 8.20801, -39.1054, 0.55 ) }
    dend_13 { pt3dadd( 19.3827, 11.0537, -43.3221, 0.55 ) }
    dend_13 { pt3dadd( 19.4425, 12.9712, -46.0843, 1.11 ) }
    dend_13 { pt3dadd( 19.2832, 17.6427, -52.8034, 0.55 ) }
    dend_13 { pt3dadd( 19.2248, 18.8028, -54.5715, 0.55 ) }
    dend_13 { pt3dadd( 19.1722, 20.4049, -57.2133, 1.11 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 10.7924, -9.66558, -3.26164, 1.11 ) }
    dend_10 { pt3dadd( 12.9531, -10.0203, -4.16975, 1.11 ) }
    dend_10 { pt3dadd( 17.0925, -10.3842, -5.46891, 1.11 ) }
    dend_10 { pt3dadd( 19.5917, -10.6158, -6.30272, 0.83 ) }
    dend_10 { pt3dadd( 21.0314, -10.7612, -6.88447, 0.83 ) }
    dend_10 { pt3dadd( 22.9913, -10.8806, -7.96289, 1.11 ) }
    dend_10 { pt3dadd( 25.3363, -10.9349, -9.47334, 1.11 ) }
    dend_10 { pt3dadd( 28.1875, -10.869, -11.4191, 1.11 ) }
    dend_10 { pt3dadd( 30.6706, -10.723, -13.191, 0.83 ) }
    dend_10 { pt3dadd( 33.7036, -10.5255, -15.582, 1.39 ) }
    dend_10 { pt3dadd( 38.266, -10.2835, -19.6278, 0.83 ) }
    dend_10 { pt3dadd( 41.533, -10.2129, -22.9171, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 33.5251, 14.4178, 33.0145, 0.55 ) }
    dend_6 { pt3dadd( 38.7768, 16.605, 36.081, 0.55 ) }
    dend_6 { pt3dadd( 44.5359, 18.4621, 38.3506, 0.55 ) }
    dend_6 { pt3dadd( 50.0678, 20.4821, 41.0126, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_6 { pt3dadd( 55.5125, 21.5327, 44.332, 0.55 ) }
    dend_6 { pt3dadd( 61.1015, 21.925, 47.5534, 0.55 ) }
    dend_6 { pt3dadd( 66.1687, 23.2029, 51.3558, 0.55 ) }
    dend_6 { pt3dadd( 70.7398, 24.2115, 55.8117, 0.55 ) }
    dend_6 { pt3dadd( 75.2396, 24.6105, 60.4335, 0.55 ) }
    dend_6 { pt3dadd( 78.972, 24.2348, 65.6962, 0.55 ) }
    dend_6 { pt3dadd( 83.6206, 23.447, 70.1164, 0.55 ) }
    dend_6 { pt3dadd( 88.4111, 23.8565, 74.435, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 33.5251, 14.4178, 33.0145, 0.55 ) }
    dend_5 { pt3dadd( 42.5204, 15.0822, 40.1144, 0.55 ) }
    dend_5 { pt3dadd( 52.0063, 16.1898, 46.483, 0.55 ) }
    dend_5 { pt3dadd( 61.7357, 15.8635, 52.5658, 0.55 ) }
    dend_5 { pt3dadd( 71.8715, 16.1877, 57.9442, 0.55 ) }
    dend_5 { pt3dadd( 82.7091, 17.694, 61.4149, 0.55 ) }
    dend_5 { pt3dadd( 93.3541, 17.2469, 65.6869, 0.55 ) }
    dend_5 { pt3dadd( 104.14, 15.6945, 69.295, 0.55 ) }
    dend_5 { pt3dadd( 114.227, 11.9479, 73.2937, 0.55 ) }
    dend_5 { pt3dadd( 123.605, 7.6273, 78.3087, 0.55 ) }
    dend_5 { pt3dadd( 132.264, 3.17158, 84.3861, 0.55 ) }
    dend_5 { pt3dadd( 139.806, -2.91101, 90.5412, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_16 (entry count 20/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.17198, -20.3725, -1.74231, 0.83 ) }
    dend_30 { pt3dadd( 9.25895, -20.132, -3.45405, 0.83 ) }
    dend_30 { pt3dadd( 12.0145, -19.024, -8.39712, 0.83 ) }
    dend_30 { pt3dadd( 12.9426, -18.4872, -9.90577, 0.83 ) }
    dend_30 { pt3dadd( 14.3321, -17.5804, -11.9782, 0.83 ) }
    dend_30 { pt3dadd( 18.1772, -14.8586, -17.1001, 0.83 ) }
    dend_30 { pt3dadd( 20.1273, -13.4957, -19.545, 0.83 ) }
    dend_30 { pt3dadd( 21.6263, -12.3909, -21.3352, 0.83 ) }
    dend_30 { pt3dadd( 24.6874, -10.023, -24.8187, 0.83 ) }
    dend_30 { pt3dadd( 27.3723, -8.08494, -27.8988, 0.55 ) }
    dend_30 { pt3dadd( 30.6744, -6.09487, -31.6364, 0.55 ) }
    dend_30 { pt3dadd( 32.3876, -5.36062, -33.5279, 0.55 ) }
    dend_30 { pt3dadd( 34.29, -4.85947, -35.6487, 0.55 ) }
    dend_30 { pt3dadd( 36.1041, -4.68321, -37.8636, 0.55 ) }
    dend_30 { pt3dadd( 38.2859, -4.74012, -40.8826, 0.55 ) }
    dend_30 { pt3dadd( 40.3082, -5.01393, -43.7305, 0.55 ) }
    dend_30 { pt3dadd( 41.6241, -5.32973, -45.6184, 0.55 ) }
    dend_30 { pt3dadd( 43.6437, -5.88446, -48.3919, 0.55 ) }
    dend_30 { pt3dadd( 45.7295, -6.39773, -51.1549, 0.55 ) }
    dend_30 { pt3dadd( 47.3832, -6.76559, -53.2146, 0.55 ) }
    dend_30 { pt3dadd( 49.3394, -7.01628, -55.4886, 0.55 ) }
    dend_30 { pt3dadd( 50.4547, -7.1285, -56.832, 0.55 ) }
    dend_30 { pt3dadd( 51.8232, -7.20701, -58.5421, 0.55 ) }
    dend_30 { pt3dadd( 54.1609, -7.15345, -61.7024, 0.55 ) }
    dend_30 { pt3dadd( 57.4337, -6.77831, -66.3993, 0.55 ) }
    dend_30 { pt3dadd( 58.6818, -6.60613, -68.3566, 0.55 ) }
    dend_30 { pt3dadd( 60.864, -6.15792, -72.0691, 0.55 ) }
    dend_30 { pt3dadd( 61.9618, -5.85576, -74.1643, 0.55 ) }
    dend_30 { pt3dadd( 63.8577, -5.24004, -78.1946, 0.55 ) }
    dend_30 { pt3dadd( 64.8946, -4.90426, -80.5614, 0.55 ) }
    dend_30 { pt3dadd( 66.394, -4.29652, -84.2648, 0.55 ) }
    dend_30 { pt3dadd( 66.9952, -4.04758, -85.813, 0.55 ) }
    dend_30 { pt3dadd( 67.8872, -3.54069, -88.1251, 0.55 ) }
    dend_30 { pt3dadd( 68.9731, -3.06877, -90.9179, 0.55 ) }
    dend_30 { pt3dadd( 69.4796, -2.85404, -92.2358, 0.55 ) }
    dend_30 { pt3dadd( 70.0432, -2.6513, -93.6725, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 56/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 8.17198, -20.3725, -1.74231, 1.39 ) }
    dend_17 { pt3dadd( 8.72162, -24.2749, -2.85313, 1.39 ) }
    dend_17 { pt3dadd( 9.15647, -27.3622, -3.73194, 1.39 ) }
    dend_17 { pt3dadd( 9.49933, -29.7965, -4.42487, 1.11 ) }
    dend_17 { pt3dadd( 10.021, -33.5002, -5.47914, 1.11 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 41.533, -10.2129, -22.9171, 0.55 ) }
    dend_12 { pt3dadd( 43.1673, -5.28186, -30.6894, 0.55 ) }
    dend_12 { pt3dadd( 43.627, -3.70791, -32.9402, 0.28 ) }
    dend_12 { pt3dadd( 43.6926, -3.47068, -33.2528, 0.83 ) }
    dend_12 { pt3dadd( 44.1559, -1.66522, -35.4828, 0.28 ) }
    dend_12 { pt3dadd( 44.306, -1.04702, -36.2641, 0.55 ) }
    dend_12 { pt3dadd( 44.6449, 0.393652, -38.0869, 0.28 ) }
    dend_12 { pt3dadd( 44.7516, 0.977518, -38.7656, 0.55 ) }
    dend_12 { pt3dadd( 45.1261, 2.95343, -41.2663, 0.28 ) }
    dend_12 { pt3dadd( 45.2017, 3.33255, -41.7587, 0.55 ) }
    dend_12 { pt3dadd( 45.9386, 7.01981, -46.674, 0.28 ) }
    dend_12 { pt3dadd( 45.9742, 7.19203, -46.8993, 0.55 ) }
    dend_12 { pt3dadd( 46.392, 9.41438, -49.729, 0.28 ) }
    dend_12 { pt3dadd( 46.4579, 9.81579, -50.2108, 0.83 ) }
    dend_12 { pt3dadd( 46.7588, 12.0336, -52.642, 0.28 ) }
    dend_12 { pt3dadd( 46.8261, 12.5402, -53.1476, 0.55 ) }
    dend_12 { pt3dadd( 47.4184, 18.3028, -58.08, 0.28 ) }
    dend_12 { pt3dadd( 47.4475, 18.6098, -58.3314, 0.55 ) }
    dend_12 { pt3dadd( 47.5927, 19.8654, -59.4485, 0.28 ) }
    dend_12 { pt3dadd( 47.6463, 20.2876, -59.8317, 0.55 ) }
    dend_12 { pt3dadd( 47.9265, 22.5366, -61.9307, 0.28 ) }
    dend_12 { pt3dadd( 48.0116, 23.1677, -62.5477, 0.55 ) }
    dend_12 { pt3dadd( 48.2371, 24.6552, -64.2512, 0.28 ) }
    dend_12 { pt3dadd( 49.163, 29.325, -70.1744, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 85/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 41.533, -10.2129, -22.9171, 0.55 ) }
    dend_11 { pt3dadd( 48.7554, -8.76735, -28.3806, 0.55 ) }
    dend_11 { pt3dadd( 56.8331, -7.55591, -34.0816, 1.39 ) }
    dend_11 { pt3dadd( 57.9262, -7.40998, -34.7706, 1.39 ) }
    dend_11 { pt3dadd( 60.3945, -7.10014, -36.2063, 0.55 ) }
    dend_11 { pt3dadd( 67.8704, -6.23739, -40.1234, 0.55 ) }
    dend_11 { pt3dadd( 72.4798, -5.74471, -42.3571, 0.55 ) }
    dend_11 { pt3dadd( 78.4164, -5.37962, -44.6192, 0.55 ) }
    dend_11 { pt3dadd( 82.3361, -5.2893, -45.8337, 0.28 ) }
    dend_11 { pt3dadd( 83.5869, -5.27401, -46.1988, 0.55 ) }
    dend_11 { pt3dadd( 89.2942, -5.24146, -47.6867, 0.28 ) }
    dend_11 { pt3dadd( 90.5184, -5.23457, -47.971, 0.55 ) }
    dend_11 { pt3dadd( 97.4166, -5.07869, -49.8181, 0.28 ) }
    dend_11 { pt3dadd( 100.187, -4.88362, -50.8046, 0.28 ) }
    dend_11 { pt3dadd( 101.868, -4.69399, -51.5849, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 102.695, -4.56411, -52.0003, 0.55 ) }
    dend_11 { pt3dadd( 107.324, -3.55015, -54.622, 0.55 ) }
    dend_11 { pt3dadd( 112.771, -1.97571, -57.832, 0.28 ) }
    dend_11 { pt3dadd( 114.736, -1.23777, -59.0151, 0.55 ) }
    dend_11 { pt3dadd( 118.097, 0.179331, -61.1505, 0.28 ) }
    dend_11 { pt3dadd( 119.862, 0.981384, -62.2559, 0.55 ) }
    dend_11 { pt3dadd( 122.012, 2.02579, -63.5009, 0.55 ) }
    dend_11 { pt3dadd( 123.401, 2.84358, -64.1074, 0.28 ) }
    dend_11 { pt3dadd( 124.138, 3.33861, -64.3763, 0.55 ) }
    dend_11 { pt3dadd( 126.229, 4.86373, -65.1937, 0.28 ) }
    dend_11 { pt3dadd( 126.928, 5.39623, -65.512, 0.55 ) }
    dend_11 { pt3dadd( 129.469, 7.31571, -66.6959, 0.28 ) }
    dend_11 { pt3dadd( 131.589, 8.90418, -67.6584, 0.55 ) }
    dend_11 { pt3dadd( 135.531, 11.7878, -69.5415, 0.28 ) }
    dend_11 { pt3dadd( 135.851, 12.0241, -69.6984, 0.55 ) }
    dend_11 { pt3dadd( 139.642, 14.8101, -71.5297, 0.28 ) }
    dend_11 { pt3dadd( 141.217, 15.9581, -72.3157, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 17/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 70.0432, -2.6513, -93.6725, 0.55 ) }
    dend_32 { pt3dadd( 73.8346, -4.90617, -93.7024, 0.55 ) }
    dend_32 { pt3dadd( 75.7206, -6.02789, -93.7173, 0.55 ) }
    dend_32 { pt3dadd( 79.1027, -8.03938, -93.744, 0.28 ) }
    dend_32 { pt3dadd( 83.6678, -10.7199, -93.8737, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 22/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 70.0432, -2.6513, -93.6725, 0.28 ) }
    dend_31 { pt3dadd( 73.5881, 0.217318, -91.9577, 0.28 ) }
    dend_31 { pt3dadd( 76.5219, 2.59147, -90.5384, 0.55 ) }
    dend_31 { pt3dadd( 86.0749, 7.67231, -87.7356, 0.55 ) }
    dend_31 { pt3dadd( 95.0938, 13.2902, -84.2673, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 10.021, -33.5002, -5.47914, 0.83 ) }
    dend_23 { pt3dadd( 11.1755, -36.8024, -7.58861, 0.83 ) }
    dend_23 { pt3dadd( 12.0203, -38.9092, -8.36812, 0.83 ) }
    dend_23 { pt3dadd( 12.6935, -40.6507, -8.61749, 0.83 ) }
    dend_23 { pt3dadd( 14.2374, -44.815, -8.49679, 0.83 ) }
    dend_23 { pt3dadd( 16.2446, -50.3067, -7.90015, 0.83 ) }
    dend_23 { pt3dadd( 18.4543, -56.3695, -6.89656, 0.83 ) }
    dend_23 { pt3dadd( 20.8795, -63.2069, -5.11525, 0.83 ) }
    dend_23 { pt3dadd( 22.5639, -67.8373, -3.61106, 1.11 ) }
    dend_23 { pt3dadd( 24.0156, -71.7928, -2.03819, 0.83 ) }
    dend_23 { pt3dadd( 24.5452, -73.21, -1.31005, 0.83 ) }
    dend_23 { pt3dadd( 25.5161, -76.1283, 0.524525, 0.83 ) }
    dend_23 { pt3dadd( 26.3564, -79.8522, 3.01995, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 40/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.021, -33.5002, -5.47914, 0.83 ) }
    dend_18 { pt3dadd( 7.57971, -35.7399, -11.5318, 0.83 ) }
    dend_18 { pt3dadd( 7.17599, -36.1103, -12.5327, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 43/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 26.3564, -79.8522, 3.01995, 0.83 ) }
    dend_25 { pt3dadd( 26.7951, -81.937, 4.18886, 0.83 ) }
    dend_25 { pt3dadd( 27.0164, -83.4581, 4.93685, 0.83 ) }
    dend_25 { pt3dadd( 27.8509, -89.1941, 7.7575, 0.83 ) }
    dend_25 { pt3dadd( 28.6149, -94.4465, 10.3403, 0.83 ) }
    dend_25 { pt3dadd( 29.6357, -101.463, 13.7906, 0.83 ) }
    dend_25 { pt3dadd( 30.5299, -107.61, 16.8135, 0.55 ) }
    dend_25 { pt3dadd( 31.4968, -114.036, 20.0001, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 26.3564, -79.8522, 3.01995, 0.55 ) }
    dend_24 { pt3dadd( 28.8275, -81.3513, 1.91953, 0.55 ) }
    dend_24 { pt3dadd( 32.7242, -84.0014, -0.00472272, 0.55 ) }
    dend_24 { pt3dadd( 34.5274, -85.6572, -1.17064, 0.55 ) }
    dend_24 { pt3dadd( 35.6141, -86.8294, -1.88484, 0.55 ) }
    dend_24 { pt3dadd( 37.1954, -88.6475, -2.77717, 0.55 ) }
    dend_24 { pt3dadd( 38.4692, -90.1848, -3.42485, 0.55 ) }
    dend_24 { pt3dadd( 40.9442, -93.9764, -4.57236, 0.55 ) }
    dend_24 { pt3dadd( 43.641, -99.1867, -5.4413, 0.55 ) }
    dend_24 { pt3dadd( 45.2629, -103.099, -5.85297, 0.55 ) }
    dend_24 { pt3dadd( 47.2344, -108.776, -6.21666, 0.55 ) }
    dend_24 { pt3dadd( 47.9251, -111.116, -6.31309, 0.55 ) }
    dend_24 { pt3dadd( 50.0485, -119.48, -6.36436, 0.55 ) }
    dend_24 { pt3dadd( 50.9484, -123.899, -6.2253, 0.55 ) }
    dend_24 { pt3dadd( 51.4067, -126.688, -6.08483, 0.55 ) }
    dend_24 { pt3dadd( 51.6157, -129.131, -6.04623, 0.55 ) }
    dend_24 { pt3dadd( 51.6819, -131.634, -6.18978, 0.28 ) }
    dend_24 { pt3dadd( 51.72, -132.324, -6.28975, 0.55 ) }
    dend_24 { pt3dadd( 52.1408, -134.824, -7.06099, 0.28 ) }
    dend_24 { pt3dadd( 52.456, -135.84, -7.547, 0.55 ) }
    dend_24 { pt3dadd( 52.8785, -136.922, -8.11509, 0.55 ) }
    dend_24 { pt3dadd( 54.061, -139.817, -9.53259, 0.55 ) }
    dend_24 { pt3dadd( 54.6779, -141.096, -10.1877, 0.55 ) }
    dend_24 { pt3dadd( 55.7268, -143.034, -11.2624, 0.55 ) }
    dend_24 { pt3dadd( 57.5589, -146.108, -12.91, 0.28 ) }
    dend_24 { pt3dadd( 57.9191, -146.651, -13.216, 0.55 ) }
    dend_24 { pt3dadd( 60.0841, -149.667, -14.9294, 0.55 ) }
    dend_24 { pt3dadd( 62.8815, -153.217, -16.9796, 0.55 ) }
    dend_24 { pt3dadd( 66.138, -156.961, -19.2324, 0.28 ) }
    dend_24 { pt3dadd( 67.6293, -158.408, -20.16, 0.55 ) }
    dend_24 { pt3dadd( 69.7764, -160.214, -21.2599, 0.28 ) }
    dend_24 { pt3dadd( 70.331, -160.598, -21.4799, 0.55 ) }
    dend_24 { pt3dadd( 72.2276, -161.559, -21.9668, 0.28 ) }
    dend_24 { pt3dadd( 72.8927, -161.811, -21.9961, 0.55 ) }
    dend_24 { pt3dadd( 75.938, -162.826, -21.743, 0.28 ) }
    dend_24 { pt3dadd( 77.8344, -163.448, -21.5555, 0.55 ) }
    dend_24 { pt3dadd( 80.8908, -164.439, -21.0284, 0.28 ) }
    dend_24 { pt3dadd( 82.1923, -164.883, -20.7655, 0.28 ) }
    dend_24 { pt3dadd( 84.1818, -165.658, -20.2487, 0.55 ) }
    dend_24 { pt3dadd( 88.5302, -167.485, -18.9366, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 91/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 7.17599, -36.1103, -12.5327, 0.83 ) }
    dend_22 { pt3dadd( 0.881189, -40.7757, -15.0269, 0.83 ) }
    dend_22 { pt3dadd( -1.02261, -42.2281, -15.8025, 0.83 ) }
    dend_22 { pt3dadd( -4.25426, -44.7024, -17.3844, 0.55 ) }
    dend_22 { pt3dadd( -5.52989, -45.7547, -18.03, 0.55 ) }
    dend_22 { pt3dadd( -7.18034, -47.1926, -18.9378, 0.55 ) }
    dend_22 { pt3dadd( -10.0465, -49.835, -20.579, 0.55 ) }
    dend_22 { pt3dadd( -12.6144, -52.6979, -22.0124, 0.55 ) }
    dend_22 { pt3dadd( -15.8044, -56.8417, -23.9644, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( -17.2806, -59.1805, -24.9985, 0.83 ) }
    dend_22 { pt3dadd( -18.8994, -62.0952, -26.1856, 0.28 ) }
    dend_22 { pt3dadd( -19.5357, -63.3567, -26.6897, 1.11 ) }
    dend_22 { pt3dadd( -22.5953, -69.8964, -29.0966, 0.28 ) }
    dend_22 { pt3dadd( -23.6217, -72.2274, -29.8816, 1.39 ) }
    dend_22 { pt3dadd( -27.583, -81.6523, -32.7795, 0.28 ) }
    dend_22 { pt3dadd( -28.1968, -83.0679, -33.2365, 1.11 ) }
    dend_22 { pt3dadd( -29.7629, -86.6594, -34.3578, 0.28 ) }
    dend_22 { pt3dadd( -30.1016, -87.384, -34.6166, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 7.17599, -36.1103, -12.5327, 0.83 ) }
    dend_19 { pt3dadd( 6.13691, -39.4074, -18.9882, 0.83 ) }
    dend_19 { pt3dadd( 5.49054, -41.4584, -23.0038, 0.83 ) }
    dend_19 { pt3dadd( 5.04202, -42.8816, -25.7903, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 31.4968, -114.036, 20.0001, 0.55 ) }
    dend_27 { pt3dadd( 26.4844, -117.514, 17.7325, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 15/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 31.4968, -114.036, 20.0001, 0.55 ) }
    dend_26 { pt3dadd( 31.6975, -116.772, 20.0705, 0.55 ) }
    dend_26 { pt3dadd( 31.8874, -118.734, 20.0625, 0.55 ) }
    dend_26 { pt3dadd( 32.0688, -121.05, 20.062, 0.55 ) }
    dend_26 { pt3dadd( 32.2033, -122.97, 20.0674, 0.55 ) }
    dend_26 { pt3dadd( 32.3939, -126.677, 20.0049, 0.28 ) }
    dend_26 { pt3dadd( 32.4323, -127.795, 19.9809, 0.55 ) }
    dend_26 { pt3dadd( 32.4143, -129.91, 19.8487, 0.28 ) }
    dend_26 { pt3dadd( 32.4086, -131.378, 19.7465, 0.28 ) }
    dend_26 { pt3dadd( 32.4013, -131.981, 19.6868, 0.55 ) }
    dend_26 { pt3dadd( 32.3449, -135.161, 19.3478, 0.28 ) }
    dend_26 { pt3dadd( 32.314, -135.771, 19.3018, 0.55 ) }
    dend_26 { pt3dadd( 32.1639, -137.878, 19.115, 0.28 ) }
    dend_26 { pt3dadd( 32.088, -138.644, 19.0161, 0.55 ) }
    dend_26 { pt3dadd( 31.8328, -141.688, 18.5321, 0.28 ) }
    dend_26 { pt3dadd( 31.7764, -142.281, 18.4093, 0.55 ) }
    dend_26 { pt3dadd( 31.7134, -143.342, 18.1724, 0.28 ) }
    dend_26 { pt3dadd( 31.7124, -143.946, 18.0544, 0.55 ) }
    dend_26 { pt3dadd( 32.0277, -146.831, 17.6527, 0.28 ) }
    dend_26 { pt3dadd( 32.2099, -147.67, 17.5709, 0.55 ) }
    dend_26 { pt3dadd( 32.9559, -149.694, 17.5977, 0.28 ) }
    dend_26 { pt3dadd( 34.3949, -152.932, 17.8724, 0.55 ) }
    dend_26 { pt3dadd( 35.4879, -154.95, 18.2846, 0.55 ) }
    dend_26 { pt3dadd( 37.4066, -158.152, 19.3184, 0.28 ) }
    dend_26 { pt3dadd( 38.0475, -159.095, 19.7458, 0.55 ) }
    dend_26 { pt3dadd( 40.0898, -161.978, 21.2788, 0.28 ) }
    dend_26 { pt3dadd( 40.4173, -162.413, 21.5609, 0.55 ) }
    dend_26 { pt3dadd( 42.1739, -164.812, 23.2469, 0.28 ) }
    dend_26 { pt3dadd( 42.6342, -165.529, 23.7473, 0.28 ) }
    dend_26 { pt3dadd( 42.7885, -165.813, 23.9554, 0.55 ) }
    dend_26 { pt3dadd( 43.4343, -167.243, 24.9008, 0.28 ) }
    dend_26 { pt3dadd( 43.4453, -167.278, 24.9163, 0.55 ) }
    dend_26 { pt3dadd( 44.2577, -169.816, 25.92, 0.28 ) }
    dend_26 { pt3dadd( 44.538, -170.961, 26.2304, 0.55 ) }
    dend_26 { pt3dadd( 46.9896, -180.051, 29.0103, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 50/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 5.04202, -42.8816, -25.7903, 0.55 ) }
    dend_21 { pt3dadd( 2.57428, -45.1041, -25.9736, 0.55 ) }
    dend_21 { pt3dadd( 1.15215, -46.4197, -26.2421, 0.55 ) }
    dend_21 { pt3dadd( -0.111795, -47.685, -26.5234, 0.28 ) }
    dend_21 { pt3dadd( -1.25051, -48.8591, -26.7775, 0.28 ) }
    dend_21 { pt3dadd( -1.78674, -49.4352, -27.0065, 0.83 ) }
    dend_21 { pt3dadd( -3.29547, -51.1602, -27.7447, 0.28 ) }
    dend_21 { pt3dadd( -3.90846, -51.9445, -28.1279, 0.83 ) }
    dend_21 { pt3dadd( -5.24611, -53.7395, -28.9636, 0.83 ) }
    dend_21 { pt3dadd( -5.74909, -54.4835, -29.2681, 0.83 ) }
    dend_21 { pt3dadd( -8.38997, -58.6942, -30.7847, 0.28 ) }
    dend_21 { pt3dadd( -9.85374, -61.0743, -31.6002, 0.28 ) }
    dend_21 { pt3dadd( -10.499, -62.1538, -31.9297, 0.55 ) }
    dend_21 { pt3dadd( -11.0683, -63.1258, -32.2143, 0.55 ) }
    dend_21 { pt3dadd( -14.6044, -69.3193, -33.9805, 0.28 ) }
    dend_21 { pt3dadd( -14.9916, -70.0284, -34.1423, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 66/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.04202, -42.8816, -25.7903, 0.83 ) }
    dend_20 { pt3dadd( 4.81822, -45.5509, -29.1113, 0.83 ) }
    dend_20 { pt3dadd( 4.72734, -46.8139, -30.2207, 0.28 ) }
    dend_20 { pt3dadd( 4.68055, -47.5639, -30.6837, 0.83 ) }
    dend_20 { pt3dadd( 4.50931, -51.0974, -32.3085, 0.55 ) }
    dend_20 { pt3dadd( 4.47642, -52.1385, -32.7098, 0.55 ) }
    dend_20 { pt3dadd( 4.3875, -54.1258, -33.5034, 0.28 ) }
    dend_20 { pt3dadd( 4.28187, -56.2951, -34.2418, 0.55 ) }
    dend_20 { pt3dadd( 4.18991, -58.5087, -35.0227, 0.55 ) }
    dend_20 { pt3dadd( 4.06208, -62.1395, -36.3458, 0.28 ) }
    dend_20 { pt3dadd( 4.02258, -63.4802, -36.8042, 1.11 ) }
    dend_20 { pt3dadd( 3.88961, -69.4424, -38.9368, 0.28 ) }
    dend_20 { pt3dadd( 3.86087, -70.8771, -39.4844, 1.11 ) }
    dend_20 { pt3dadd( 3.77014, -74.5655, -40.9081, 0.28 ) }
    dend_20 { pt3dadd( 3.74896, -75.4177, -41.1905, 1.11 ) }
    dend_20 { pt3dadd( 3.61183, -79.8806, -42.3206, 0.28 ) }
    dend_20 { pt3dadd( 3.58902, -80.4253, -42.4083, 0.83 ) }
    dend_20 { pt3dadd( 3.52925, -81.4026, -42.4562, 0.28 ) }
    dend_20 { pt3dadd( 3.37848, -82.5378, -42.4474, 0.55 ) }
    dend_20 { pt3dadd( 2.2839, -87.654, -42.2271, 0.28 ) }
    dend_20 { pt3dadd( 2.08096, -88.3536, -42.1991, 0.55 ) }
    dend_20 { pt3dadd( 1.53588, -89.6664, -42.2082, 0.28 ) }
    dend_20 { pt3dadd( 0.562659, -91.8298, -42.3352, 1.11 ) }
    dend_20 { pt3dadd( -0.655128, -94.2827, -42.6104, 0.28 ) }
    dend_20 { pt3dadd( -1.13873, -95.1727, -42.8049, 0.83 ) }
    dend_20 { pt3dadd( -1.80992, -96.1938, -43.1897, 0.28 ) }
    dend_20 { pt3dadd( -2.97134, -98.2106, -44.1119, 0.55 ) }
    dend_20 { pt3dadd( -3.65514, -99.7303, -45.0249, 0.28 ) }
    dend_20 { pt3dadd( -3.69732, -99.8747, -45.1224, 0.83 ) }
    dend_20 { pt3dadd( -3.76266, -100.586, -45.7526, 0.28 ) }
    dend_20 { pt3dadd( -3.75482, -100.773, -45.9173, 0.55 ) }
    dend_20 { pt3dadd( -3.53802, -101.979, -47.0267, 0.28 ) }
    dend_20 { pt3dadd( -3.22678, -103.092, -47.7932, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 26.4844, -117.514, 17.7325, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_29 { pt3dadd( 23.0289, -120.277, 18.3169, 0.55 ) }
    dend_29 { pt3dadd( 19.7441, -123.031, 18.6419, 0.55 ) }
    dend_29 { pt3dadd( 18.0124, -124.545, 18.6355, 0.55 ) }
    dend_29 { pt3dadd( 15.3992, -127.134, 18.4218, 0.55 ) }
    dend_29 { pt3dadd( 12.8868, -129.826, 18.1129, 0.28 ) }
    dend_29 { pt3dadd( 11.9289, -130.931, 17.9211, 0.55 ) }
    dend_29 { pt3dadd( 10.5805, -132.684, 17.5144, 0.28 ) }
    dend_29 { pt3dadd( 9.17256, -134.745, 16.882, 1.39 ) }
    dend_29 { pt3dadd( 7.12058, -138.01, 15.9775, 0.28 ) }
    dend_29 { pt3dadd( 6.59765, -138.867, 15.8106, 0.83 ) }
    dend_29 { pt3dadd( 4.61834, -142.112, 15.4549, 0.28 ) }
    dend_29 { pt3dadd( 3.95064, -143.192, 15.4352, 0.55 ) }
    dend_29 { pt3dadd( 3.27264, -144.298, 15.5549, 0.55 ) }
    dend_29 { pt3dadd( 0.874359, -148.29, 16.4905, 0.28 ) }
    dend_29 { pt3dadd( -0.248285, -150.052, 17.0343, 0.28 ) }
    dend_29 { pt3dadd( -1.22508, -151.579, 17.5933, 0.55 ) }
    dend_29 { pt3dadd( -2.55522, -153.678, 18.5666, 0.28 ) }
    dend_29 { pt3dadd( -3.15569, -154.644, 18.9852, 0.55 ) }
    dend_29 { pt3dadd( -4.57174, -157.232, 20.1138, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 26.4844, -117.514, 17.7325, 0.55 ) }
    dend_28 { pt3dadd( 24.7572, -116.075, 18.6056, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_45 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_44 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_1 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_54 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_53 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_51 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_43 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_39 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_38 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_36 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_6 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_5 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_30 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_11 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_26 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_20 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_29 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_8 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_40 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_33 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_48 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_9 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_52 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_41 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_37 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_17 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_4 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_47 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_57 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_56 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_25 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_27 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_28 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_33, dend_33, dend_33, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, axon_0, axon_0, dend_57, dend_57, dend_56, dend_56, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_55 nseg = 5
    dend_45 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_54 nseg = 7
    dend_53 nseg = 3
    dend_51 nseg = 7
    dend_50 nseg = 5
    dend_43 nseg = 5
    dend_42 nseg = 3
    dend_39 nseg = 7
    dend_38 nseg = 5
    dend_36 nseg = 5
    dend_35 nseg = 3
    dend_15 nseg = 3
    dend_13 nseg = 3
    dend_6 nseg = 3
    dend_5 nseg = 7
    dend_30 nseg = 5
    dend_12 nseg = 3
    dend_11 nseg = 5
    dend_23 nseg = 3
    dend_24 nseg = 5
    dend_22 nseg = 3
    dend_26 nseg = 3
    dend_20 nseg = 3
    dend_29 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_NBC_d27deeaf6a_0_0


