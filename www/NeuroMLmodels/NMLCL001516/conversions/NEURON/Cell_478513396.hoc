// Cell: Cell_478513396
/*
{
  "id" : "Cell_478513396",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "392.987, 654.025, 33.04, 11.6238", "398.798, 654.025, 33.04, 11.6238", "404.61, 654.025, 33.04, 11.6238" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "398.798, 654.025, 33.04, 1.0", "404.64, 667.841, 33.04, 1.0", "410.481, 681.657, 33.04, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "399.672, 658.477, 38.1688, 0.2288", "399.871, 659.497, 38.9043, 0.4532", "399.737, 660.595, 39.167, 0.6776", "399.718, 661.703, 39.4486, 0.6732", "400.085, 662.776, 39.6794, 0.6456", "400.616, 663.761, 39.7522, 0.6904" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "402.385, 657.213, 34.7469, 0.2288", "403.143, 657.698, 34.6592, 0.3762", "403.796, 658.237, 34.608, 0.4778", "404.379, 659.213, 34.655, 0.5794", "405.426, 659.654, 34.792, 0.5032", "406.54, 659.66, 35.1123, 0.5022", "407.652, 659.484, 35.5326, 0.5058", "408.612, 659.232, 36.188, 0.4854", "409.5, 658.66, 36.974, 0.579", "410.551, 658.6, 37.8381, 0.5718", "411.149, 658.151, 38.8945, 0.5214", "411.98, 657.878, 39.9896, 0.6076", "413.072, 657.885, 40.9237, 0.5824", "414.139, 658.227, 41.648, 0.7468", "415.15, 658.558, 42.1364, 0.713", "416.251, 658.478, 42.4407, 0.6916", "417.165, 657.992, 42.8103, 0.9114", "417.956, 657.211, 43.1981, 0.9728", "418.87, 656.585, 43.5652, 0.9362", "419.817, 656.261, 44.0642, 0.6846", "420.872, 656.011, 44.5911, 0.6526", "421.96, 655.809, 45.1184, 0.7708", "423.001, 655.437, 45.4538, 0.816", "424.123, 655.423, 45.682, 0.5998", "425.173, 655.455, 45.9894, 0.5102", "426.158, 655.621, 46.3795, 0.4356", "427.274, 655.4, 46.6558, 0.5394", "428.343, 655.276, 46.7524, 0.4722", "429.225, 654.553, 46.8294, 0.4634", "429.977, 653.716, 46.8882, 0.5708", "430.804, 652.978, 46.9126, 0.628", "431.816, 652.463, 47.0042, 0.5074", "432.865, 652.584, 47.1946, 0.4694", "433.871, 652.865, 47.5642, 0.4124", "434.967, 652.654, 47.8442, 0.4716", "436.068, 652.385, 48.1541, 0.4656" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "401.201, 658.587, 37.3752, 0.2288", "401.167, 659.713, 36.7727, 0.5108", "401.411, 660.711, 36.4479, 0.6068", "402.059, 661.573, 36.0898, 0.7172", "402.725, 662.495, 35.8084, 0.7928", "403.365, 663.442, 35.6202, 0.6448", "404.201, 664.193, 35.4928, 0.6238", "405.105, 664.883, 35.457, 0.7292", "406.098, 665.424, 35.5225, 0.6818", "407.05, 665.992, 35.7106, 0.6272", "407.846, 666.756, 35.9436, 0.593", "408.38, 667.715, 36.3468, 0.6632", "408.728, 668.748, 36.909, 0.6016", "408.966, 669.813, 37.5847, 0.7318", "408.951, 670.646, 38.4597, 0.7018", "409.371, 671.61, 39.3126, 0.5906", "410.375, 672.115, 40.0644, 0.4266", "411.204, 672.636, 40.8167, 0.3756", "411.893, 672.655, 41.5884, 0.4238", "412.992, 672.562, 42.0106, 0.5084", "413.899, 673.015, 42.28, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "397.3, 648.391, 37.8442, 1.564", "397.034, 647.395, 39.6278, 0.3188" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "404.034, 654.178, 33.2363, 0.2288", "404.971, 654.774, 33.1304, 0.3378", "406.042, 655.155, 33.0714, 0.389", "407.145, 655.117, 33.1526, 0.5014", "408.163, 654.704, 33.353, 0.6232", "409.201, 654.228, 33.5348, 0.5838", "410.272, 653.88, 33.6168, 0.654", "411.352, 653.598, 33.7618, 0.7744", "412.443, 653.46, 33.9497, 1.0468", "413.564, 653.243, 34.039, 1.3128", "414.651, 653.476, 33.9679, 1.3636", "415.775, 653.565, 33.822, 1.3188", "416.83, 653.587, 33.5538, 1.2226", "417.931, 653.683, 33.2651, 1.1088", "419.004, 654.058, 33.0725, 0.8134", "420.022, 654.45, 33.1486, 0.6748", "420.957, 654.876, 33.4984, 0.4912", "421.897, 654.847, 34.0771, 0.4804", "422.464, 655.771, 34.6783, 0.4632", "423.224, 656.519, 35.1039, 0.4168", "423.702, 657.321, 35.2428, 0.4024", "424.197, 658.301, 35.3626, 0.485", "424.478, 659.398, 35.429, 0.5644", "424.793, 660.325, 35.5984, 0.6132", "425.046, 661.339, 35.8358, 0.724", "425.115, 662.464, 36.1256, 0.6006", "424.932, 663.57, 36.325, 0.5952" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "396.339, 658.688, 33.822, 0.2288", "395.863, 659.728, 33.1598, 0.4062", "395.485, 660.725, 32.8401, 0.5952", "394.579, 661.136, 32.3627, 0.4978", "393.671, 661.733, 31.8497, 0.4308", "392.764, 662.426, 31.4488, 0.4428", "391.938, 663.216, 31.1685, 0.4902", "391.195, 664.087, 31.0013, 0.4552", "390.516, 665.007, 30.9411, 0.53", "389.829, 665.922, 30.9574, 0.4478", "389.189, 666.87, 31.0145, 0.452", "388.591, 667.846, 31.094, 0.3866", "388.06, 668.853, 31.2214, 0.3918", "387.49, 669.823, 31.4166, 0.4736", "386.849, 670.761, 31.6232, 0.5048", "386.177, 671.684, 31.794, 0.6882", "385.474, 672.56, 31.9698, 0.6482", "385.068, 673.6, 32.1202, 0.5882", "385.036, 674.74, 32.1107, 0.638", "384.829, 675.85, 31.9259, 0.8634", "384.401, 676.885, 31.5809, 0.8634", "383.786, 677.823, 31.1248, 0.6038", "382.931, 678.472, 30.511, 0.4684", "381.992, 678.997, 29.8038, 0.368", "381.177, 679.745, 29.0878, 0.3654", "380.454, 680.594, 28.392, 0.3864", "379.72, 681.394, 27.6841, 0.5274", "378.917, 682.123, 26.9803, 0.522", "377.958, 682.73, 26.3704, 0.435", "376.918, 683.205, 25.8431, 0.4186", "375.892, 683.688, 25.3216, 0.3704", "374.896, 684.202, 24.7575, 0.3684", "373.831, 684.492, 24.1431, 0.3978", "372.777, 684.308, 23.409, 0.52", "371.836, 683.87, 22.5312, 0.6474", "370.921, 683.378, 21.5458, 0.679", "369.949, 682.936, 20.5227, 0.587", "368.935, 682.629, 19.4823, 0.4608", "368.012, 682.3, 18.3957, 0.4686", "367.222, 681.837, 17.2727, 0.4536", "366.443, 681.278, 16.1871, 0.569", "365.413, 680.865, 15.2798, 0.5454", "364.293, 680.719, 14.5748, 0.5104", "363.193, 680.646, 14.0193, 0.4036", "362.263, 680.022, 13.5971, 0.4076", "361.634, 679.08, 13.2349, 0.3504", "361.284, 678.017, 12.8336, 0.33", "361.237, 676.921, 12.3292, 0.3324", "361.453, 675.844, 11.7269, 0.3712", "361.678, 674.815, 11.0109, 0.5048", "361.776, 673.768, 10.2205, 0.454", "361.707, 672.718, 9.4133, 0.4348", "360.991, 672.211, 8.6446, 0.4934", "359.883, 672.362, 8.008, 0.6032", "358.827, 672.751, 7.4906, 0.5716", "357.863, 673.306, 7.0517, 0.5116", "356.876, 673.805, 6.683, 0.406", "355.785, 673.987, 6.4052, 0.412", "354.651, 673.951, 6.2931, 0.3582", "353.538, 674.127, 6.3545, 0.346", "352.503, 674.592, 6.575, 0.3554", "351.525, 675.172, 6.9647, 0.446", "350.586, 675.808, 7.5066, 0.4886", "349.797, 676.49, 8.2696, 0.488", "349.669, 677.333, 9.2813, 0.417", "350.081, 678.231, 10.428, 0.396", "350.375, 679.152, 11.6935, 0.5046", "351.082, 679.558, 13.0488, 0.4492", "351.954, 679.116, 14.3503, 0.4492", "352.392, 678.183, 15.5219, 0.4068", "352.749, 677.207, 16.5472, 0.305", "353.728, 676.718, 18.2666, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "401.192, 649.25, 32.3764, 0.2288", "400.972, 648.227, 31.4188, 0.401", "400.904, 647.189, 30.9515, 0.3796", "401.329, 646.152, 30.5122, 0.4104", "401.511, 645.043, 30.2319, 0.3552", "401.475, 643.942, 29.9216, 0.3404", "401.219, 642.896, 29.582, 0.3454", "401.102, 641.76, 29.3804, 0.4262", "401.113, 640.634, 29.3689, 0.4572", "401.245, 639.511, 29.3591, 0.4054", "401.822, 638.525, 29.4092, 0.3812", "402.204, 637.636, 29.7259, 0.4452" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "410.481, 681.657, 33.04, 1.0", "416.322, 695.473, 33.04, 1.0", "422.164, 709.289, 33.04, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "400.616, 663.761, 39.7522, 0.6904", "401.292, 664.092, 39.7986, 0.5366", "402.236, 664.53, 39.7774, 0.4862", "403.178, 664.524, 39.5839, 0.3962", "403.809, 664.995, 39.4881, 0.4422", "404.521, 665.766, 39.6934, 0.4086", "405.326, 666.549, 40.1047, 0.4662", "406.035, 666.728, 40.8733, 0.4492", "406.438, 667.222, 41.9826, 0.5598", "407.118, 668.096, 43.0884, 0.5336", "407.982, 668.689, 44.1008, 0.4622", "408.82, 668.496, 45.1783, 0.4414", "409.855, 668.636, 46.163, 0.5474", "410.672, 669.176, 47.0912, 0.7286", "411.397, 669.969, 47.8918, 0.682", "412.276, 670.685, 48.5184, 0.6214", "413.344, 671.012, 48.9535, 0.6132", "414.452, 670.973, 49.3475, 0.5494", "415.586, 670.956, 49.7325, 0.4388", "416.654, 671.204, 49.9895, 0.4256", "417.712, 671.528, 50.381, 0.3844" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "400.616, 663.761, 39.7522, 0.6904", "401.748, 664.289, 40.3967, 0.4576", "402.141, 664.024, 42.6863, 0.4802", "402.478, 664.172, 43.759, 0.5412", "403.317, 664.402, 44.8064, 0.6392", "404.318, 664.195, 45.535, 0.6642", "405.386, 663.936, 46.0457, 0.558", "406.46, 663.555, 46.4626, 0.4136", "407.488, 663.062, 46.8174, 0.3484", "407.775, 662.947, 47.4981, 0.3898", "408.615, 663.078, 48.3711, 0.3646", "409.569, 663.669, 49.1095, 0.3562", "410.663, 663.863, 49.8114, 0.382", "411.673, 663.399, 50.4848, 0.4582", "412.525, 662.66, 51.1347, 0.6898", "413.306, 661.83, 51.73, 0.6822", "414.199, 661.188, 52.4017, 0.7292", "414.885, 661.362, 53.3697, 0.5206", "415.63, 661.552, 54.4659, 0.4256", "416.19, 661.203, 55.6209, 0.4334", "416.792, 660.939, 56.8434, 0.4716", "417.567, 661.559, 57.9233, 0.4272", "418.01, 662.518, 58.8196, 0.4462", "417.86, 663.553, 59.3975, 0.447", "418.021, 664.627, 59.7629, 0.3868", "418.386, 665.689, 59.9634, 0.3458", "418.96, 666.652, 60.0986, 0.385", "419.263, 667.574, 60.0785, 0.355", "419.162, 668.649, 60.2151, 0.3402", "419.043, 669.725, 60.5856, 0.3434", "418.885, 670.854, 61.0484, 0.43", "418.818, 671.99, 61.6042, 0.4284", "418.856, 672.994, 62.3913, 0.526", "419.219, 673.781, 63.4245, 0.4478", "419.391, 674.517, 64.6204, 0.4162", "419.193, 675.583, 65.746, 0.4938", "418.521, 676.439, 66.7699, 0.433", "418.027, 677.389, 67.5984, 0.4002", "417.711, 678.095, 68.5972, 0.4094", "417.98, 678.393, 69.8373, 0.5426", "418.585, 679.336, 70.9388, 0.684", "418.829, 680.254, 72.1246, 0.7724", "418.652, 681.284, 73.3062, 0.6358", "418.395, 682.343, 74.3938, 0.467", "417.942, 683.235, 75.4037, 0.4322", "418.504, 683.979, 76.3479, 0.3904", "418.421, 684.048, 77.4662, 0.4302", "418.928, 684.532, 78.6604, 0.393", "419.539, 685.384, 79.7126, 0.4052", "420.315, 686.177, 80.5157, 0.4908", "420.632, 687.227, 81.1381, 0.5734", "420.595, 688.251, 81.7807, 0.6382", "420.219, 689.293, 82.3155, 0.7292", "419.549, 690.183, 82.7028, 0.8114", "419.063, 690.874, 83.3384, 0.6964", "418.807, 691.905, 84.0837, 0.637", "418.762, 692.983, 84.8784, 0.4674", "418.983, 694.055, 85.6215, 0.4414", "419.388, 694.888, 86.4676, 0.3656", "419.188, 695.96, 87.2838, 0.3596", "418.909, 696.981, 88.0687, 0.3818", "418.878, 698.002, 88.8552, 0.4892", "418.832, 699.114, 89.4653, 0.5954", "419.034, 700.223, 89.8696, 0.557", "419.257, 701.283, 90.2787, 0.4836", "419.426, 702.362, 90.711, 0.3594", "419.747, 703.403, 91.0983, 0.3", "419.842, 704.445, 91.2976, 0.2746", "419.736, 705.56, 91.5751, 0.2746", "419.671, 706.635, 91.9394, 0.2746", "419.917, 707.688, 92.3233, 0.2746", "420.077, 708.735, 92.7268, 0.2746", "419.921, 709.827, 93.1022, 0.2746", "419.589, 710.914, 93.3923, 0.2746", "418.909, 711.751, 93.4301, 0.2746", "418.172, 712.615, 93.4074, 0.2746", "417.337, 713.308, 93.1896, 0.2744", "416.512, 714.08, 92.9628, 0.2744", "416.297, 715.203, 92.7402, 0.2742", "416.202, 716.328, 92.5145, 0.274", "415.699, 717.341, 92.2303, 0.2736", "415.31, 718.408, 91.9139, 0.2728", "415.055, 719.521, 91.5466, 0.2712", "414.814, 720.626, 91.11, 0.2684", "414.954, 721.692, 90.5498, 0.2626", "415.065, 722.595, 89.7876, 0.2542", "414.777, 723.482, 88.8936, 0.2288", "415.158, 724.038, 86.52, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "436.068, 652.385, 48.1541, 0.4656", "436.508, 652.507, 47.5854, 0.2288", "437.513, 652.524, 47.5866, 0.3056", "438.388, 652.686, 47.6524, 0.3328", "439.249, 652.403, 47.997, 0.3792", "440.357, 652.443, 48.3115, 0.4846", "441.298, 652.996, 48.7295, 0.5856", "442.273, 653.547, 49.1509, 0.5454", "443.384, 653.672, 49.49, 0.4314", "444.382, 653.885, 49.9106, 0.4118", "445.517, 653.972, 50.1827, 0.359", "446.536, 654.169, 50.3773, 0.3412", "447.273, 654.526, 50.7184, 0.3764", "448.22, 655.151, 50.9561, 0.3396", "449.28, 655.503, 51.0314, 0.3104", "450.038, 655.406, 50.7559, 0.2942", "451.083, 655.527, 50.512, 0.3104", "452.191, 655.725, 50.3182, 0.343", "453.288, 655.997, 50.08, 0.392", "454.286, 656.443, 49.7596, 0.5378", "455.037, 656.881, 49.2962, 0.5422", "455.658, 657.404, 48.7217, 0.4672", "456.48, 658.143, 48.246, 0.5042", "457.043, 659.068, 47.9094, 0.4052", "457.971, 659.409, 47.8377, 0.3474", "459.064, 659.731, 47.78, 0.3162", "460.121, 660.161, 47.7229, 0.3478", "461.134, 660.479, 47.56, 0.4302", "462.181, 660.51, 47.2368, 0.466", "463.179, 660.993, 46.9468, 0.4154", "464.257, 660.928, 46.8157, 0.4308", "465.26, 660.99, 46.7617, 0.3876", "466.133, 661.479, 46.5046, 0.426", "467.1, 661.572, 46.1051, 0.379", "468.158, 661.892, 45.7828, 0.4094", "469.122, 662.481, 45.449, 0.3532", "470.205, 662.769, 45.1612, 0.3368", "471.306, 663.073, 44.9445, 0.3374", "472.431, 663.197, 44.8137, 0.4174", "473.525, 663.433, 44.5992, 0.4124", "474.628, 663.527, 44.42, 0.4604", "475.667, 663.749, 44.2652, 0.5", "476.602, 663.901, 43.8841, 0.356", "477.391, 663.863, 42.28, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "436.068, 652.385, 48.1541, 0.4656", "437.056, 652.302, 48.3115, 0.56", "437.845, 651.713, 48.6833, 0.68", "438.635, 651.152, 49.1652, 0.7118", "439.753, 650.989, 49.5312, 0.7822", "440.875, 650.827, 49.889, 0.8568", "441.918, 650.399, 50.2628, 0.8076", "442.839, 649.806, 50.7382, 0.7128", "443.649, 649.402, 51.4427, 0.5542", "444.389, 649.149, 52.3947, 0.4054", "445.432, 649.322, 53.3478, 0.3394", "446.421, 648.973, 54.1464, 0.3426", "447.392, 648.884, 54.9489, 0.4258", "448.495, 649.012, 55.6676, 0.4332", "449.146, 649.46, 56.4449, 0.474", "449.022, 648.476, 57.2376, 0.6468", "449.337, 647.419, 57.8687, 0.7234", "450.119, 646.657, 58.3783, 0.906", "450.839, 646.13, 59.0173, 0.8172", "451.83, 645.949, 59.6786, 0.6688", "452.837, 645.987, 60.3949, 0.5442", "453.945, 646.093, 61.0526, 0.4966", "454.899, 646.443, 61.6493, 0.434", "455.822, 646.753, 62.1205, 0.4226", "456.845, 646.565, 62.6139, 0.5784", "457.518, 645.696, 63.1851, 0.4658", "458.331, 645.141, 63.9187, 0.3764", "459.27, 645.076, 64.7867, 0.3168", "460.037, 645.588, 65.7143, 0.3784", "460.522, 646.376, 66.6291, 0.343", "461.495, 646.506, 67.4366, 0.317", "462.517, 646.112, 67.9266, 0.306", "463.536, 645.685, 68.1388, 0.3336", "464.574, 645.32, 68.1383, 0.3808", "465.664, 645.092, 68.0971, 0.4866", "466.727, 644.701, 68.1097, 0.5954", "467.848, 644.633, 68.2066, 0.5336", "468.97, 644.532, 68.3852, 0.5546", "470.057, 644.311, 68.5448, 0.6222", "471.064, 644.04, 68.8601, 0.608", "472.134, 643.684, 69.1645, 0.5736", "473.188, 643.294, 69.3512, 0.5474", "474.076, 642.617, 69.4562, 0.5458", "474.954, 641.955, 69.6231, 0.543", "475.549, 641.197, 69.5439, 0.5366", "476.156, 640.351, 69.4812, 0.532", "476.722, 639.515, 69.6858, 0.4878", "477.438, 638.729, 70.0532, 0.5788", "478.475, 638.581, 70.5076, 0.5946", "479.566, 638.619, 70.7969, 0.451", "480.659, 638.853, 71.1183, 0.338", "481.768, 639.006, 71.3882, 0.2988", "482.882, 639.143, 71.5798, 0.3144", "484.008, 639.061, 71.6825, 0.374", "485.141, 638.919, 71.8038, 0.335", "486.147, 638.727, 72.1213, 0.3018", "487.286, 638.674, 72.3867, 0.278", "488.367, 638.632, 72.6183, 0.2812", "489.372, 638.675, 73.024, 0.2864", "490.406, 638.986, 73.4062, 0.2978", "491.395, 639.489, 73.7761, 0.3122", "492.5, 639.631, 74.0348, 0.37", "493.546, 639.88, 74.0995, 0.3276", "494.62, 639.951, 74.2395, 0.2882", "495.76, 639.978, 74.3498, 0.2542", "496.84, 639.638, 74.4904, 0.2288", "497.983, 639.61, 74.76, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "397.034, 647.395, 39.6278, 0.3188", "396.806, 647.125, 41.202, 0.2288", "396.169, 646.331, 42.3791, 0.3232", "395.294, 646.027, 42.9601, 0.3542", "394.201, 646.215, 43.5064, 0.4734", "393.079, 646.381, 43.8693, 0.3952", "391.962, 646.582, 44.086, 0.3292", "390.836, 646.714, 44.2484, 0.2816", "389.737, 646.791, 44.4279, 0.2874", "388.663, 647.092, 44.5875, 0.2994", "387.704, 647.706, 44.6835, 0.3156", "386.796, 648.363, 44.6793, 0.376", "385.76, 648.7, 44.5715, 0.3386", "384.665, 648.519, 44.4237, 0.309", "383.654, 648.035, 44.3654, 0.291", "382.684, 647.507, 44.422, 0.3062", "381.661, 646.998, 44.4914, 0.3278", "380.628, 646.517, 44.5631, 0.399", "379.617, 645.986, 44.6068, 0.3806", "378.599, 645.496, 44.5438, 0.3898", "377.55, 645.123, 44.3419, 0.4248", "376.49, 644.786, 44.0507, 0.632", "375.408, 644.523, 43.7304, 0.5546", "374.286, 644.416, 43.4608, 0.5922", "373.148, 644.344, 43.3272, 0.4688", "372.038, 644.114, 43.3166, 0.4914", "370.964, 643.724, 43.3896, 0.4564", "369.902, 643.317, 43.5462, 0.5368", "368.843, 642.929, 43.7858, 0.6674", "367.741, 642.713, 44.0476, 0.541", "366.623, 642.858, 44.2812, 0.4942", "365.554, 643.251, 44.504, 0.4122", "364.521, 643.707, 44.7518, 0.4652", "363.472, 644.123, 45.0005, 0.4846", "362.363, 644.231, 45.2024, 0.4448", "361.342, 643.823, 45.3824, 0.5096", "360.567, 643.024, 45.5599, 0.4152", "359.958, 642.067, 45.6772, 0.3656", "359.344, 641.109, 45.6688, 0.3524", "358.618, 640.252, 45.5176, 0.4032", "357.73, 639.56, 45.2766, 0.5898", "356.802, 638.894, 44.9952, 0.4868", "355.984, 638.106, 44.6662, 0.4162", "355.189, 637.328, 44.2562, 0.3864", "354.424, 636.564, 43.7508, 0.5278", "354.116, 635.606, 43.178, 0.5218", "354.222, 634.499, 42.616, 0.4392", "354.013, 633.425, 42.1327, 0.4038", "353.253, 632.631, 41.7287, 0.4536", "352.259, 632.202, 41.3146, 0.6722", "351.176, 632.07, 40.8957, 0.6922", "350.047, 632.06, 40.5854, 0.5416", "348.908, 632.059, 40.371, 0.4868", "347.797, 632.054, 40.1288, 0.4402", "346.69, 632.02, 39.8499, 0.543", "345.589, 631.807, 39.5968, 0.5026", "344.544, 631.434, 39.4775, 0.4042", "343.455, 631.194, 39.4414, 0.337", "342.315, 631.127, 39.415, 0.339", "341.176, 631.036, 39.3946, 0.4142", "340.062, 630.797, 39.3358, 0.4352", "338.993, 630.401, 39.205, 0.3636", "337.987, 629.89, 38.9704, 0.3082", "336.949, 629.471, 38.6403, 0.2896", "335.848, 629.27, 38.2547, 0.3024", "334.742, 629.093, 37.83, 0.3272", "333.632, 628.909, 37.4052, 0.3674", "332.516, 628.826, 36.997, 0.4692", "331.397, 628.713, 36.638, 0.5266", "330.317, 628.508, 36.304, 0.5838", "329.202, 628.429, 36.0567, 0.4704", "328.128, 628.531, 36.0553, 0.4108", "327.08, 628.854, 36.2379, 0.4842", "326.064, 629.343, 36.5078, 0.415", "325.04, 629.842, 36.7937, 0.3668", "323.935, 630.105, 37.0381, 0.3462", "322.849, 629.936, 37.2901, 0.4328", "321.841, 629.469, 37.5113, 0.4444", "320.892, 628.845, 37.6354, 0.5022", "320.031, 628.096, 37.6225, 0.6628", "319.217, 627.292, 37.4629, 0.9298", "318.414, 626.478, 37.1406, 1.1164", "317.637, 625.687, 36.584, 1.1298", "316.805, 625.095, 35.7566, 0.9384", "315.879, 625.012, 34.6472, 0.7174", "315.23, 625.639, 33.3528, 0.8022", "314.919, 626.537, 31.9864, 0.8474", "315.059, 627.372, 30.5808, 0.788", "315.242, 628.42, 29.3376, 0.4576", "315.023, 629.013, 26.5944, 0.2288" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "397.034, 647.395, 39.6278, 0.3188", "397.4, 647.535, 41.4344, 0.352", "398.46, 647.585, 43.0223, 0.4396", "399.525, 647.463, 44.3817, 0.4768", "400.507, 646.907, 45.4317, 0.4666", "401.434, 646.312, 46.2434, 0.3748", "402.337, 645.634, 46.9529, 0.3288", "403.089, 644.828, 47.6386, 0.3276", "404.025, 644.185, 48.2709, 0.3744", "404.943, 643.632, 48.9611, 0.4522", "405.645, 642.993, 49.7753, 0.6402", "406.54, 642.484, 50.6038, 0.7768", "407.493, 641.881, 51.3069, 0.6856" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "424.932, 663.57, 36.325, 0.5952", "424.828, 663.565, 35.0829, 0.2288", "424.498, 664.063, 34.3924, 0.383", "424.053, 664.943, 34.2356, 0.504", "423.44, 665.785, 33.9942, 0.562", "422.62, 666.56, 33.8705, 0.7908", "421.835, 667.375, 33.8066, 0.855", "421.148, 668.199, 33.9172, 0.892", "420.891, 669.271, 34.1342, 0.8998", "420.883, 670.384, 34.3874, 0.9814", "421.326, 671.431, 34.5696, 1.0362", "421.548, 672.518, 34.6287, 0.919", "422.022, 673.374, 34.473, 0.619", "422.373, 674.456, 34.3252, 0.4662", "422.842, 675.471, 34.1261, 0.5108", "423.298, 676.475, 33.899, 0.604", "423.33, 677.589, 33.6596, 0.7268", "422.807, 678.543, 33.3754, 0.7384", "422.573, 679.631, 33.18, 0.8934", "422.137, 680.656, 32.8429, 0.7622", "421.563, 681.611, 32.4156, 0.721", "421.02, 682.503, 31.8338, 0.5778", "420.572, 683.454, 31.1478, 0.6384", "420.068, 684.36, 30.3663, 0.7678", "419.434, 685.261, 29.6344, 0.925", "418.869, 686.185, 28.8938, 0.9308", "417.897, 686.702, 28.1767, 0.9572", "417.035, 687.287, 27.5525, 0.9308", "416.266, 687.877, 26.7855, 0.7882", "415.312, 688.345, 25.9743, 0.7494", "414.835, 688.881, 25.0079, 0.7272", "413.895, 689.362, 24.1539, 0.6734", "413.112, 689.883, 23.281, 0.6358", "412.714, 690.923, 22.5848, 0.7206", "412.86, 692.044, 22.0435, 0.587", "413.156, 692.883, 21.7865, 0.6052", "413.724, 693.6, 21.7008, 0.4938", "414.095, 694.533, 21.4476, 0.533", "414.885, 695.322, 21.1659, 0.5562", "415.552, 696.084, 20.7418, 0.6114", "416.061, 696.898, 20.2896, 0.6552", "417.108, 696.909, 19.8789, 0.792", "418.13, 697.003, 19.5726, 0.7754", "419.236, 697.181, 19.1786, 0.6826", "419.628, 697.925, 18.5797, 0.5842", "418.928, 698.685, 17.9471, 0.7306", "418.166, 698.717, 17.0673, 0.7786", "418.014, 699.351, 16.0617, 0.5782", "418.94, 699.698, 15.1239, 0.4678", "419.968, 700.109, 14.3977, 0.3688", "420.75, 700.485, 13.75, 0.3588", "421.667, 699.952, 13.089, 0.4124", "422.592, 699.555, 12.3934, 0.3898", "423.527, 699.062, 11.7006, 0.483", "424.538, 698.87, 10.08, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "424.932, 663.57, 36.325, 0.5952", "425.007, 664.008, 36.5182, 0.6452", "425.299, 665.087, 36.706, 0.675", "425.701, 666.069, 36.9365, 0.5794", "426.237, 667.013, 37.2092, 0.4472", "427.083, 667.747, 37.4382, 0.4408", "427.867, 668.546, 37.5024, 0.4138", "428.796, 669.091, 37.5805, 0.4384", "429.462, 669.857, 37.4172, 0.5788", "430.288, 670.216, 37.0247, 0.607", "431.228, 670.815, 36.6892, 0.6434", "432.227, 671.336, 36.4784, 0.5582", "433.322, 671.386, 36.5086, 0.4548", "434.387, 671.359, 36.5722, 0.4562", "435.361, 671.017, 36.9496, 0.436", "436.395, 670.813, 37.4937, 0.5102", "437.431, 671.047, 38.1648, 0.5638", "438.477, 671.211, 38.9068, 0.6122", "439.499, 671.52, 39.5452, 0.7212", "440.344, 671.584, 40.2763, 0.6006", "441.25, 672.077, 40.9556, 0.5716", "442.266, 672.583, 41.4145, 0.7158", "443.289, 673.039, 41.7432, 0.9374", "444.389, 673.27, 41.9846, 0.885", "445.46, 673.422, 42.1641, 0.7476", "446.57, 673.363, 42.1862, 0.689", "447.577, 673.521, 42.3122, 0.7724", "448.559, 673.906, 42.4782, 0.9096", "449.646, 674.239, 42.6395, 0.7918", "450.772, 674.433, 42.8268, 0.5476", "451.899, 674.486, 43.0052, 0.4498", "452.809, 674.947, 43.4076, 0.376" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "402.204, 637.636, 29.7259, 0.4452", "402.917, 637.094, 30.8, 0.4576" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "402.204, 637.636, 29.7259, 0.4452", "400.988, 636.618, 30.1098, 0.4932", "400.668, 635.558, 30.4539, 0.4682", "400.664, 634.433, 30.5939, 0.518", "400.885, 633.324, 30.5715, 0.6008", "401.435, 632.337, 30.41, 0.5722", "401.908, 631.329, 30.1059, 0.4882", "402.141, 630.21, 29.8105, 0.4816", "402.417, 629.103, 29.5392, 0.6602", "402.448, 627.998, 29.232, 0.7528", "402.385, 626.856, 29.0038, 0.9376", "401.998, 625.81, 28.9257, 0.9872", "401.113, 625.107, 28.8078, 1.1302", "400.129, 624.552, 28.6406, 1.1474", "399.233, 623.841, 28.4878, 1.0086", "398.366, 623.109, 28.3018, 0.895" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "417.712, 671.528, 50.381, 0.3844", "418.887, 671.349, 49.6485, 0.2288", "419.934, 671.403, 50.4325, 0.3362", "420.966, 671.577, 50.832, 0.378", "422.059, 671.663, 51.3358, 0.5184", "422.887, 671.597, 52.0268, 0.4746", "423.857, 671.521, 52.7881, 0.4964", "424.978, 671.53, 53.4775, 0.494", "426.016, 671.91, 54.0932, 0.4694", "427.15, 671.978, 54.4902, 0.52", "428.285, 671.895, 54.8086, 0.6056", "429.387, 672.111, 55.0472, 0.576", "430.435, 672.235, 55.1107, 0.5198", "431.481, 672.522, 55.2415, 0.421", "432.516, 672.846, 55.5442, 0.4408", "433.491, 672.991, 56.1212, 0.4074", "434.007, 672.162, 56.845, 0.4564", "434.887, 671.967, 57.5974, 0.4672", "434.718, 672.351, 58.553, 0.4178", "434.531, 673.197, 59.5594, 0.435", "434.966, 673.945, 60.4346, 0.3956", "435.473, 673.778, 61.413, 0.4396", "436.429, 673.438, 62.1368, 0.4112", "437.419, 673.175, 62.4795, 0.4348", "438.49, 672.854, 62.7052, 0.5652", "439.358, 672.317, 63.0451, 0.6166", "440.162, 671.69, 63.506, 0.4908", "441.089, 671.059, 63.8366, 0.4152", "441.742, 670.28, 64.1861, 0.4266", "442.826, 670.411, 64.512, 0.6276", "443.917, 670.323, 64.8726, 0.5836", "445.023, 670.043, 65.1641, 0.4648", "446.154, 670.048, 65.4903, 0.4266", "447.24, 670.359, 65.8784, 0.3858", "448.029, 671.011, 66.311, 0.3934", "448.932, 671.475, 66.8654, 0.4626", "449.893, 672.068, 67.4537, 0.5502", "450.749, 672.703, 68.1954, 0.4542", "451.593, 672.603, 69.1242, 0.3858", "451.768, 672.33, 70.2912, 0.4134", "452.642, 672.235, 71.4885, 0.402", "453.597, 672.098, 72.5544, 0.4542", "454.731, 672.208, 73.3947, 0.4258", "455.707, 672.662, 74.0009, 0.5226", "456.326, 673.584, 74.482, 0.434", "456.517, 674.595, 75.014, 0.4268", "457.112, 675.509, 75.4124, 0.3384", "458.117, 675.859, 75.9447, 0.3086", "459.065, 676.093, 76.6466, 0.2902", "459.426, 675.331, 77.3396, 0.3046", "459.579, 674.386, 78.1284, 0.3252", "459.49, 673.412, 78.965, 0.3936", "459.643, 672.284, 79.7098, 0.3722", "459.54, 671.202, 80.267, 0.367", "458.99, 670.325, 80.8567, 0.419", "458.186, 669.722, 81.5522, 0.444", "457.486, 669.533, 82.4138, 0.38", "456.896, 668.946, 83.323, 0.339", "456.895, 667.802, 83.9723, 0.3428", "456.98, 666.667, 84.3531, 0.4212", "457.12, 665.539, 84.485, 0.4492", "457.214, 664.431, 84.401, 0.3842", "457.656, 663.541, 84.0549, 0.3728", "457.856, 662.466, 83.7584, 0.2796", "457.829, 661.37, 83.7124, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "417.712, 671.528, 50.381, 0.3844", "416.815, 672.027, 50.939, 0.3882", "416.775, 672.654, 51.8034, 0.4656", "417.076, 673.559, 52.7355, 0.495", "417.475, 674.625, 53.4769, 0.6462", "417.361, 675.752, 54.0851, 0.6862", "417.423, 676.889, 54.4986, 0.7822", "417.854, 677.927, 54.7655, 0.8558", "418.71, 678.627, 54.955, 0.8116", "419.758, 678.997, 55.1065, 0.6906", "420.564, 679.772, 55.2152, 0.657", "421.03, 680.773, 55.3921, 0.583", "421.066, 681.897, 55.6377, 0.5028", "420.938, 682.994, 55.9552, 0.5348", "420.766, 684.039, 56.3749, 0.6328", "420.615, 685.126, 56.8044, 0.6272", "420.688, 686.243, 57.078, 0.6104", "420.661, 687.267, 57.0833, 0.61", "420.964, 688.346, 57.0797, 0.6896", "421.005, 689.46, 57.1463, 0.6754", "421.104, 690.532, 57.325, 0.7488", "420.961, 691.637, 57.3793, 0.6294", "420.701, 692.685, 57.3737, 0.5036", "420.418, 693.724, 57.5179, 0.4928", "420.469, 694.837, 57.6358, 0.5366", "420.992, 695.817, 57.6867, 0.537", "421.682, 696.728, 57.7114, 0.7014", "422.133, 697.759, 57.7436, 0.6696", "422.454, 698.844, 57.7231, 0.6436", "422.883, 699.863, 57.7394, 0.663", "423.596, 700.621, 57.8424, 0.6014", "424.268, 701.242, 57.6797, 0.7302", "425.198, 701.847, 57.5268, 0.7048", "426.173, 702.357, 57.4983, 0.5674", "427.102, 702.969, 57.4384, 0.5218", "428.013, 703.581, 57.3062, 0.567", "428.982, 704.178, 57.2158, 0.4788", "429.988, 704.661, 57.1026, 0.4634", "430.952, 705.236, 57.015, 0.4024", "431.68, 706.094, 56.9747, 0.4472", "432.145, 707.037, 56.9173, 0.4488", "432.149, 708.136, 57.0377, 0.3904", "431.916, 709.191, 57.1329, 0.352", "431.641, 710.167, 57.4109, 0.3976", "431.223, 711.206, 57.731, 0.3734", "431.672, 712.226, 58.0658, 0.3988", "432.556, 712.806, 58.4595, 0.334", "433.669, 712.874, 58.8423, 0.3", "434.484, 713.612, 59.2183, 0.2748", "435.314, 714.393, 59.5501, 0.2748", "436.165, 715.154, 59.8164, 0.2752", "437.056, 715.871, 60.0379, 0.2758", "437.945, 716.549, 60.279, 0.2768", "438.83, 717.025, 60.6553, 0.2786", "439.759, 717.442, 61.08, 0.282", "440.777, 717.945, 61.3626, 0.2882", "441.658, 718.386, 61.3726, 0.3008", "442.706, 718.772, 61.3494, 0.3178", "443.675, 719.239, 61.4636, 0.3804", "443.965, 720.32, 61.6316, 0.3466", "443.812, 721.33, 61.7879, 0.3248", "444.241, 721.843, 61.7644, 0.3152", "444.613, 722.64, 62.0782, 0.3754", "445.225, 723.381, 62.4484, 0.3376", "445.99, 724.207, 62.8676, 0.3068", "447.004, 724.662, 63.3338, 0.287", "447.862, 724.829, 64.1133, 0.2986", "448.893, 724.706, 65.0238, 0.314", "449.945, 724.298, 65.8045, 0.3732", "450.785, 723.627, 66.6557, 0.3336", "451.317, 723.598, 67.7821, 0.2994", "452.036, 724.008, 69.0586, 0.2736", "452.065, 725.048, 70.2128, 0.2728", "452.044, 725.886, 71.496, 0.2712", "451.586, 726.455, 72.8538, 0.2684", "451.072, 727.058, 74.1513, 0.2626", "450.996, 728.125, 75.1957, 0.2542", "451.443, 729.147, 75.9822, 0.2288", "452.339, 729.758, 77.28, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "407.493, 641.881, 51.3069, 0.6856", "407.951, 641.67, 53.2, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "407.493, 641.881, 51.3069, 0.6856", "408.789, 641.649, 51.8675, 0.5864", "409.904, 641.471, 52.3138, 0.5228", "411.023, 641.287, 52.6114, 0.5056", "412.161, 641.182, 52.75, 0.4422", "413.296, 641.062, 52.7733, 0.478", "414.424, 640.87, 52.7164, 0.486", "415.55, 640.765, 52.5703, 0.5556", "416.632, 640.749, 52.2956, 0.8772", "417.676, 640.721, 51.9184, 0.7678", "418.754, 640.584, 51.5696, 0.7872", "419.852, 640.293, 51.3878, 0.8874", "420.942, 639.996, 51.4469, 1.2188", "422.038, 639.772, 51.7496, 1.127", "423.113, 639.618, 52.2906, 0.9528", "424.091, 639.714, 53.0718, 0.6492", "424.978, 640.151, 54.0056, 0.4502", "425.98, 640.522, 54.9408, 0.3748", "427.082, 640.43, 55.7934, 0.4096", "428.108, 640.012, 56.6014, 0.5432", "429.023, 639.511, 57.4468, 0.685", "429.955, 639.002, 58.308, 0.7744", "430.93, 638.463, 59.1315, 0.6382", "431.97, 638.058, 59.939, 0.479", "433.03, 637.723, 60.755, 0.4168", "433.875, 637.294, 61.6896, 0.5432", "434.542, 636.542, 62.678, 0.5204", "435.11, 635.588, 63.6126, 0.5826", "435.632, 634.655, 64.5604, 0.648", "436.389, 633.911, 65.5088, 0.783", "437.297, 633.442, 66.4714, 0.9664", "438.236, 633.027, 67.426, 0.7166", "439.186, 632.483, 68.304, 0.5994", "440.24, 632.142, 69.1023, 0.532", "441.361, 632.065, 69.7922, 0.5956", "442.493, 632.062, 70.3884, 0.4846", "443.573, 632.074, 70.9881, 0.4742", "444.677, 632.139, 71.5669, 0.4212", "445.788, 632.365, 72.0054, 0.4882", "446.899, 632.235, 72.4329, 0.496", "447.768, 631.698, 72.9571, 0.6174", "448.629, 631.028, 73.4812, 0.7822", "449.273, 630.089, 73.8937, 0.9214", "449.665, 629.016, 74.1992, 1.0728", "450.051, 627.946, 74.3982, 1.1848", "450.44, 626.901, 74.4716, 1.296", "450.927, 625.867, 74.5634, 1.512", "452.617, 624.393, 74.8692, 1.1454", "453.322, 623.525, 75.2844, 1.0056", "454.04, 622.682, 75.7977, 0.8852", "454.905, 622.047, 76.4081, 1.1316", "455.656, 621.293, 77.0725, 1.1404", "456.405, 620.468, 77.684, 0.8156", "457.324, 619.802, 78.0951, 0.4946", "458.22, 619.1, 78.3703, 0.3646", "459.138, 618.418, 78.6038, 0.3834", "460.134, 617.904, 78.8897, 0.5296", "461.125, 617.514, 79.2957, 0.4888", "462.243, 617.437, 79.735, 0.5538", "463.378, 617.534, 80.1651, 0.4496", "464.414, 617.897, 80.6478, 0.4326", "465.517, 618.194, 81.0146, 0.4598" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "452.809, 674.947, 43.4076, 0.376", "453.676, 674.959, 43.92, 0.4038", "454.422, 674.724, 44.6953, 0.343", "455.363, 674.255, 45.4989, 0.317", "456.391, 673.822, 46.1667, 0.3058", "457.1, 673.005, 46.7452, 0.3346", "457.688, 672.126, 47.2864, 0.3752", "458.154, 671.096, 47.672, 0.513", "458.612, 670.064, 47.8439, 0.4644", "459.215, 669.122, 47.9248, 0.4778", "459.888, 668.222, 47.9531, 0.4584", "460.23, 667.175, 47.9184, 0.4078", "459.746, 666.228, 48.004, 0.3856", "459.727, 665.141, 48.2258, 0.4546", "459.871, 664.164, 48.5724, 0.5056", "460.527, 663.257, 48.8191, 0.5146", "461.564, 662.826, 48.9709, 0.4904", "462.533, 662.28, 48.9602, 0.4138", "463.23, 661.392, 48.8634, 0.4262", "463.717, 660.374, 48.7141, 0.3868", "464.432, 659.603, 48.5593, 0.3876", "464.152, 658.671, 48.2782, 0.4878", "464.298, 657.552, 48.1135, 0.423", "464.581, 656.461, 47.9685, 0.3754", "465.154, 655.584, 47.742, 0.3928", "466.073, 654.984, 47.5689, 0.3706", "466.865, 654.177, 47.4975, 0.364", "467.668, 653.377, 47.5521, 0.4134", "468.471, 652.722, 47.8708, 0.4334", "469.069, 651.815, 48.3431, 0.3606", "469.524, 650.938, 48.9972, 0.3026", "469.936, 650.013, 49.7258, 0.2794", "470.757, 649.379, 50.2785, 0.2834", "471.818, 649.146, 50.8178, 0.291", "472.88, 649.104, 51.1017, 0.306", "473.887, 648.645, 51.4044, 0.3274", "474.658, 647.884, 51.7516, 0.399", "475.442, 647.371, 52.1917, 0.3762", "476.306, 647.793, 52.7587, 0.4038", "477.404, 647.89, 53.38, 0.3432", "478.508, 647.808, 54.0434, 0.3172", "479.469, 648.036, 54.717, 0.3074", "480.177, 648.915, 55.3182, 0.33", "481.139, 649.005, 55.8264, 0.4042", "482.259, 648.808, 56.3111, 0.3854", "482.944, 648.862, 57.043, 0.422", "483.637, 649.49, 57.7416, 0.3716", "484.591, 649.842, 58.5494, 0.3954", "485.215, 650.718, 59.3972, 0.3276", "485.794, 651.679, 60.1896, 0.2882", "486.518, 652.158, 61.042, 0.2542", "487.434, 652.461, 61.9052, 0.2288", "488.374, 652.766, 63.84, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "452.809, 674.947, 43.4076, 0.376", "453.664, 675.008, 43.2253, 0.4576", "454.464, 675.618, 44.3243, 0.4676", "455.567, 675.849, 44.7353, 0.3768", "456.645, 676.102, 45.2175, 0.3318", "457.674, 675.821, 45.7307, 0.3356", "458.44, 675.557, 46.4495, 0.3782", "459.481, 675.302, 46.9885, 0.5128", "460.59, 675.1, 47.4228, 0.4938", "461.422, 675.04, 48.0343, 0.3878", "462.525, 674.781, 48.5374, 0.3056", "463.572, 674.81, 48.851, 0.2852", "464.568, 674.62, 49.0977, 0.294", "465.654, 674.632, 49.3727, 0.3114", "466.754, 674.705, 49.5956, 0.3386", "467.847, 674.91, 49.7081, 0.4136", "468.858, 675.262, 49.8764, 0.4338", "469.879, 675.675, 49.9946, 0.3612", "470.939, 675.617, 49.9134, 0.3036", "472.022, 675.762, 49.744, 0.2814", "473.066, 675.952, 49.4584, 0.287", "473.974, 676.436, 49.3545, 0.2988", "474.96, 676.445, 49.152, 0.3142", "475.842, 675.739, 48.9644, 0.3736", "476.762, 675.072, 48.8426, 0.3344", "477.81, 674.644, 48.7276, 0.3008", "478.93, 674.567, 48.6506, 0.2762", "480.001, 674.683, 48.4924, 0.2776", "481.106, 674.843, 48.4448, 0.28", "482.221, 675.077, 48.4092, 0.2848", "483.347, 675.161, 48.384, 0.2934", "484.465, 675.047, 48.4686, 0.3102", "485.535, 674.852, 48.589, 0.3364", "486.637, 675.065, 48.8642, 0.4096", "487.767, 675.064, 49.2461, 0.4266", "488.885, 675.211, 49.688, 0.3474", "489.513, 675.606, 50.3675, 0.2796", "490.083, 676.262, 51.1748, 0.2288", "490.776, 676.905, 53.2, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "402.917, 637.094, 30.8, 0.4576", "402.908, 636.079, 30.224, 0.4576", "402.846, 635.148, 28.5393, 0.7328", "402.513, 634.449, 27.7436, 0.9498", "401.727, 633.726, 26.9304, 1.0", "400.852, 633.027, 26.2295, 0.7428", "399.836, 632.567, 25.7254, 0.5948", "398.711, 632.428, 25.3242, 0.7822", "397.633, 632.154, 24.9548, 0.7182", "396.587, 631.695, 24.6295, 0.7666", "395.52, 631.331, 24.2558, 0.9618", "394.448, 631.031, 23.7762, 1.0386", "393.36, 630.794, 23.2107, 0.965", "392.251, 630.695, 22.5813, 0.962", "391.115, 630.684, 21.9385, 0.7652", "390.011, 630.67, 21.2281, 0.6426", "389.001, 630.543, 20.3834, 0.612", "388.216, 630.001, 19.4626, 0.5148", "387.934, 629.465, 18.3897, 0.531", "387.27, 629.121, 17.2397, 0.523", "386.279, 629.436, 16.2088, 0.6938", "385.551, 630.169, 15.5533, 0.7954", "384.603, 630.664, 15.1112, 0.884", "383.546, 631.041, 14.7724, 0.8464", "383.046, 631.435, 14.2388, 0.611", "382.161, 631.962, 13.7603, 0.523", "381.257, 632.521, 13.5071, 0.4974", "380.448, 633.315, 13.2938, 0.4698", "380.089, 634.357, 12.9696, 0.5504", "379.398, 635.057, 12.6254, 0.5176", "378.345, 634.886, 12.2802, 0.4268", "377.52, 634.136, 11.873, 0.4034", "377.073, 633.442, 11.2131, 0.3426", "376.639, 633.268, 10.4357, 0.3158", "376.725, 634.378, 9.7561, 0.305", "376.827, 635.443, 9.1098, 0.3248", "376.227, 636.232, 8.4732, 0.3982", "375.444, 637.035, 7.9737, 0.356", "374.431, 636.865, 7.84, 0.4576" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "402.917, 637.094, 30.8, 0.4576", "404.299, 636.161, 30.1143, 0.5664", "405.335, 635.823, 29.785, 0.6132", "406.346, 635.711, 29.2583, 0.5122", "407.479, 635.622, 28.73, 0.5498", "408.507, 635.205, 28.2458, 0.4436", "408.919, 634.291, 27.7969, 0.4144", "408.921, 633.652, 27.1229, 0.4608", "409.372, 633.957, 26.1504, 0.5172", "410.108, 634.466, 25.0564, 0.5362", "411.085, 634.623, 23.9349, 0.5288", "412.06, 634.216, 22.8982, 0.4934", "412.921, 633.484, 22.0436, 0.5334", "413.732, 632.678, 21.3828, 0.781", "414.523, 631.864, 20.8149, 0.8554", "415.194, 631.008, 20.2042, 1.032", "415.623, 630.018, 19.5192, 1.1698", "415.73, 628.92, 18.7888, 1.2022", "415.737, 627.824, 17.9847, 1.202", "415.565, 625.791, 17.0335, 1.3044", "414.716, 625.157, 16.0779, 1.2914", "413.784, 624.836, 15.0585, 1.2302", "412.852, 624.327, 14.0802, 1.068", "412.342, 623.504, 13.0795, 1.0036", "411.837, 622.582, 12.1531, 1.1108", "411.679, 621.534, 11.324, 1.1242", "411.552, 620.406, 10.6922, 1.133", "411.573, 619.289, 10.2414, 0.999", "411.498, 618.194, 9.9581, 0.793", "411.691, 617.099, 9.6521, 0.6628", "412.274, 616.272, 9.2022, 0.801", "412.83, 615.343, 8.679, 1.0456", "413.391, 614.393, 8.1064, 1.0968", "414.09, 613.534, 7.5254, 1.0872", "414.938, 612.851, 6.9651, 0.8896", "415.974, 612.417, 6.5244, 0.7096", "416.969, 611.981, 6.1576, 0.6158", "417.82, 611.326, 5.9462, 0.6496", "418.835, 610.872, 5.8945, 0.6186", "419.93, 610.544, 5.9163, 0.5592", "420.992, 610.667, 6.44, 0.6864" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "398.366, 623.109, 28.3018, 0.895", "397.288, 621.837, 28.1865, 0.901", "396.572, 620.947, 28.0616, 0.7762", "396.029, 619.955, 27.9114, 0.9748", "395.721, 618.915, 27.6583, 0.8586", "395.592, 617.845, 27.311, 0.7066", "395.466, 616.724, 26.987, 0.5742", "395.054, 615.68, 26.7356, 0.5186", "394.365, 614.772, 26.5721, 0.6368", "393.641, 613.886, 26.493, 0.6976", "392.843, 613.075, 26.4892, 0.6642", "391.945, 612.368, 26.5383, 0.6254", "391.086, 611.617, 26.6184, 0.67", "390.444, 610.69, 26.7365, 0.6442", "389.898, 609.707, 26.9326, 0.6652", "389.206, 608.823, 27.1738, 0.5994", "388.349, 608.074, 27.3997, 0.5284", "387.425, 607.406, 27.6102, 0.6068", "386.505, 606.808, 27.8732, 0.6476", "385.812, 605.984, 28.128, 0.5444", "385.509, 604.922, 28.2332, 0.534", "385.237, 603.839, 28.1999, 0.5518", "384.862, 602.785, 28.1814, 0.6328", "384.343, 601.782, 28.187, 0.551", "383.652, 600.881, 28.1476, 0.6112", "383.04, 599.955, 28.0286, 0.6078", "382.804, 598.875, 27.9168, 0.475", "382.761, 597.734, 27.8683, 0.3838", "382.612, 596.622, 27.911, 0.3784", "382.277, 595.573, 27.9266, 0.4882", "381.732, 594.583, 27.978, 0.5686", "380.791, 593.966, 28.0305, 0.6294", "380.038, 593.24, 28.1397, 0.7132", "379.085, 592.92, 28.3041, 0.7794", "378.71, 591.942, 28.4393, 0.6486", "378.06, 591.017, 28.4894, 0.4918", "377.703, 589.963, 28.4715, 0.4728", "377.156, 588.998, 28.4676, 0.4912", "376.152, 588.552, 28.3713, 0.4932", "375.279, 588.047, 28.0899, 0.4248", "374.576, 587.179, 27.8251, 0.418", "373.542, 586.718, 27.6511, 0.5094", "372.586, 586.148, 27.6016, 0.6326", "372.038, 585.181, 27.6648, 0.6282", "371.968, 584.206, 27.9902, 0.6058", "372.237, 583.279, 28.4824, 0.6326", "372.387, 582.153, 28.9327, 0.5792", "372.237, 581.081, 29.3838, 0.5242", "372.038, 580.103, 29.8838, 0.4364", "371.904, 579.023, 30.0924, 0.4346", "371.352, 578.193, 29.9838, 0.5648", "370.751, 577.498, 29.6736, 0.6154", "370.277, 576.481, 29.4428, 0.4904", "369.587, 575.768, 29.4154, 0.407", "368.721, 575.255, 29.612, 0.4474", "367.668, 574.873, 29.8138, 0.4912", "366.953, 574.646, 30.2966, 0.4942", "366.222, 574.338, 30.5276, 0.4206", "365.332, 573.797, 30.7838, 0.44", "364.762, 572.848, 30.9257, 0.4062", "364.451, 571.859, 30.896, 0.4542", "364.358, 570.746, 30.945, 0.4622", "364.283, 569.612, 30.9638, 0.4136", "364.345, 568.474, 30.9789, 0.4022", "364.51, 567.466, 31.1399, 0.4564", "364.342, 566.353, 31.1942, 0.6492", "363.878, 565.372, 31.1284, 0.7872", "363.238, 564.442, 31.0873, 0.7362", "362.556, 563.554, 31.0338, 0.5292", "361.886, 562.657, 31.0652, 0.4628", "360.913, 562.203, 31.0814, 0.4", "359.789, 562.081, 31.1321, 0.449", "358.652, 562.035, 31.2158, 0.4224", "357.585, 561.685, 31.2612, 0.4864", "356.529, 561.308, 31.2964, 0.5114", "355.891, 560.439, 31.187, 0.556", "355.241, 559.521, 31.1312, 0.4168", "354.505, 558.695, 31.0582, 0.322", "354.182, 557.662, 30.8689, 0.2684", "354.284, 556.531, 30.6799, 0.2626", "354.438, 555.425, 30.4522, 0.2542", "354.716, 554.424, 30.0896, 0.2288", "355.671, 554.039, 29.12, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "398.366, 623.109, 28.3018, 0.895", "397.276, 622.733, 26.1568, 0.9152", "396.307, 622.329, 25.0696, 0.6634", "395.291, 621.869, 24.6165, 0.6176", "394.246, 621.451, 24.1349, 0.6852", "393.19, 621.043, 23.6518, 0.7576", "392.139, 620.668, 23.138, 0.6918", "391.044, 620.39, 22.6213, 0.8528", "390.0, 619.938, 22.1275, 0.9214", "389.13, 619.27, 21.5685, 1.022", "388.468, 618.48, 20.8592, 1.1074", "387.783, 617.797, 20.0021, 0.842", "386.857, 617.453, 19.0942, 0.8056", "385.768, 617.42, 18.2202, 0.8138", "384.676, 617.436, 17.4041, 0.919", "383.569, 617.553, 16.708, 0.9066", "382.477, 617.836, 16.1464, 0.7474", "381.452, 618.286, 15.6656, 0.654", "380.404, 618.532, 15.2918, 0.6464", "379.28, 618.553, 14.9986, 0.744", "378.164, 618.556, 14.7275, 0.8398", "377.049, 618.381, 14.4351, 0.7442", "376.16, 617.963, 14.0172, 0.7492", "375.319, 617.617, 13.4385, 0.5598", "374.255, 617.799, 13.0799, 0.487", "373.177, 618.164, 12.8348, 0.6034", "372.125, 618.596, 12.662, 0.5124", "371.07, 618.857, 12.5485, 0.462", "370.046, 618.863, 12.3793, 0.4804", "369.176, 619.003, 11.9211, 0.6576", "368.167, 619.317, 11.3947, 0.9786", "367.044, 619.195, 10.9271, 0.9228", "365.921, 619.115, 10.454, 0.7758", "364.84, 618.899, 9.9597, 0.7162", "364.004, 618.434, 9.4028, 0.7148", "363.301, 617.593, 8.9477, 0.6416", "362.271, 617.172, 8.6222, 0.6182", "361.174, 617.151, 8.3115, 0.4868", "360.1, 617.11, 7.939, 0.4424", "359.158, 617.254, 7.4623, 0.5376", "358.109, 617.555, 7.0332, 0.5394", "357.013, 617.85, 6.7852, 0.4744", "355.919, 618.147, 6.7211, 0.4564", "354.852, 618.305, 6.8925, 0.6122", "353.724, 618.314, 7.168, 0.6704", "352.609, 618.267, 7.4531, 0.752", "351.661, 618.807, 7.7522, 0.804", "350.832, 619.593, 7.9871, 0.6948", "349.872, 620.198, 8.16, 0.5748", "348.824, 620.648, 8.2555, 0.6402", "347.731, 620.982, 8.3185, 0.735", "346.617, 621.17, 8.4237, 0.583", "345.624, 621.374, 8.6833, 0.5186", "344.632, 621.079, 8.8538, 0.4884", "343.613, 621.209, 8.8244, 0.457", "342.693, 621.626, 8.7817, 0.5082", "341.873, 622.338, 8.8714, 0.529", "340.983, 623.05, 8.9347, 0.6988", "340.31, 623.667, 9.2224, 0.8332", "339.429, 624.355, 9.4645, 0.8156", "338.464, 624.824, 9.7461, 0.7052", "337.35, 625.046, 9.88, 0.649", "336.286, 625.323, 9.8508, 0.7384", "335.356, 625.887, 9.6452, 0.6508", "334.451, 626.512, 9.3245, 0.5752", "333.427, 626.895, 9.0814, 0.4712", "332.589, 627.219, 9.0666, 0.5606", "331.569, 627.378, 9.1032, 0.5004", "330.904, 627.453, 8.7672, 0.57", "329.906, 627.602, 8.2341, 0.5056", "328.855, 627.751, 7.5997, 0.4096", "327.896, 628.145, 6.9691, 0.3474", "326.789, 628.017, 6.3932, 0.356", "325.761, 627.693, 5.9429, 0.4576", "324.667, 627.598, 5.32, 0.4576" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "407.951, 641.67, 53.2, 0.2288", "408.208, 640.746, 53.3501, 0.2288", "407.915, 639.644, 53.1233, 0.329", "407.763, 638.516, 53.0152, 0.3726", "407.772, 637.386, 52.8727, 0.4712", "408.035, 636.289, 52.6753, 0.566", "408.243, 635.181, 52.4667, 0.4844", "408.13, 634.063, 52.3054, 0.4368", "407.622, 633.045, 52.1822, 0.5332", "407.026, 632.076, 52.0915, 0.5006", "406.581, 631.028, 52.0755, 0.5516", "406.298, 629.93, 52.1508, 0.5632", "406.263, 628.8, 52.2701, 0.7586", "406.507, 627.69, 52.437, 0.9626", "406.789, 626.595, 52.6618, 0.9648", "406.83, 625.473, 52.8718, 0.7352", "406.56, 624.377, 53.0415, 0.7582", "406.248, 623.289, 53.2717, 0.6806", "406.112, 622.171, 53.6354, 0.664", "405.972, 621.051, 54.1047, 0.7006", "405.366, 620.268, 54.6899, 0.6714", "404.524, 620.498, 55.5246, 0.859", "403.852, 620.948, 56.6261, 0.9484", "402.979, 621.311, 57.827, 0.9964", "401.934, 621.487, 58.9982, 0.7422", "400.908, 621.512, 60.1471, 0.5634", "399.883, 621.42, 61.2461, 0.4128", "398.956, 620.927, 62.2415, 0.4004", "398.042, 620.265, 63.0731, 0.4546", "397.109, 619.606, 63.765, 0.6384", "396.254, 618.854, 64.3882, 0.8034", "395.659, 617.979, 65.0821, 0.59", "395.102, 617.236, 65.9366, 0.4266", "394.191, 617.034, 66.8982, 0.3684", "393.151, 617.257, 67.863, 0.4464", "392.146, 617.773, 68.7288, 0.6044", "391.227, 618.45, 69.4753, 0.831", "390.221, 618.949, 70.1865, 0.887", "389.163, 619.231, 70.9302, 0.9294", "388.24, 619.446, 71.834, 0.8474", "387.497, 620.074, 72.8493, 0.7884", "386.559, 620.521, 73.8968, 0.6846", "385.598, 620.615, 74.984, 0.6954", "384.626, 620.623, 76.0544, 0.6438", "383.523, 620.639, 76.9474, 0.6658", "382.806, 620.617, 77.5916, 0.593", "381.706, 620.817, 78.0996, 0.5524", "380.832, 620.165, 78.4711, 0.476", "379.8, 619.816, 78.7634, 0.5684", "378.754, 619.526, 78.8771, 0.5206", "377.639, 619.526, 78.8558, 0.5784", "376.58, 619.386, 78.6467, 0.6624", "375.542, 619.183, 78.3076, 0.7018", "374.551, 618.684, 78.0976, 0.6534", "373.691, 617.981, 77.9176, 0.4658", "372.617, 617.829, 77.8145, 0.3654", "371.555, 617.646, 77.999, 0.3496", "370.991, 617.92, 78.5655, 0.4102", "370.246, 618.226, 79.3481, 0.5426", "369.218, 618.549, 79.907, 0.6912", "368.119, 618.675, 80.4644, 0.7498", "367.155, 619.263, 80.957, 0.769", "366.067, 619.612, 81.3156, 0.5508", "364.949, 619.835, 81.5539, 0.4642", "363.811, 619.959, 81.7639, 0.3608", "362.755, 619.897, 82.0828, 0.3506", "361.77, 619.598, 82.5773, 0.3652", "360.757, 619.281, 83.1858, 0.4578", "359.754, 618.843, 83.7096, 0.5412", "358.754, 618.79, 84.3335, 0.4364", "357.805, 618.776, 85.0595, 0.3594", "356.715, 618.441, 85.5926, 0.332", "355.873, 617.667, 85.9762, 0.4078", "355.023, 616.912, 86.2336, 0.3922", "354.043, 616.338, 86.4268, 0.4344", "353.129, 615.696, 86.6079, 0.3958", "352.087, 615.342, 86.7804, 0.435", "351.072, 615.001, 86.9229, 0.4266", "350.488, 614.171, 86.9148, 0.3474", "349.951, 613.32, 86.7468, 0.2796", "349.173, 612.598, 86.6989, 0.2288", "349.034, 611.697, 86.24, 0.2288" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "407.951, 641.67, 53.2, 0.2288", "408.655, 641.663, 53.7172, 0.3894", "409.718, 641.625, 53.9924, 0.5096", "410.826, 641.466, 54.2399, 0.603", "411.922, 641.148, 54.3676, 0.7186", "412.919, 640.663, 54.3416, 0.7536", "413.535, 639.783, 54.0868, 0.7752", "413.939, 638.846, 53.601, 0.5672", "414.416, 637.881, 53.0298, 0.471", "415.102, 636.97, 52.5367, 0.4896", "415.812, 636.089, 52.1475, 0.7104", "416.266, 635.054, 51.8244, 0.9022", "416.621, 633.999, 51.5402, 0.9406", "416.971, 632.911, 51.3654, 0.9504", "417.352, 631.843, 51.2618, 1.0386", "417.836, 630.83, 51.1846, 1.0908", "418.389, 629.837, 51.2243, 1.27", "418.929, 628.858, 51.4755, 1.4312", "419.326, 627.838, 51.947, 1.4162", "419.706, 626.811, 52.5753, 1.539", "419.888, 625.73, 53.3156, 1.4938", "420.363, 623.711, 54.3472, 1.1212", "420.477, 622.667, 55.354, 1.1156", "420.159, 621.613, 56.2839, 1.0244", "419.943, 620.515, 57.1032, 1.0184", "419.941, 619.417, 57.8575, 1.1304", "420.212, 618.347, 58.5404, 1.1976", "420.733, 617.356, 59.1511, 1.0902", "421.366, 616.435, 59.7402, 1.1016", "422.145, 615.605, 60.2848, 1.016", "422.977, 614.842, 60.8194, 0.917", "423.802, 614.12, 61.4104, 0.672", "424.572, 613.357, 62.0553, 0.5178", "425.161, 612.523, 62.757, 0.3756", "425.333, 611.55, 63.5228, 0.33", "425.339, 610.483, 64.2317, 0.3312", "425.331, 609.341, 64.7349, 0.3752", "425.283, 608.209, 65.0185, 0.4832", "425.124, 607.098, 65.1664, 0.5534", "424.928, 605.996, 65.3201, 0.63", "424.882, 604.867, 65.452, 0.574", "424.884, 603.725, 65.5298, 0.515", "424.901, 602.584, 65.5936, 0.4184", "424.991, 601.453, 65.6788, 0.4048", "425.21, 600.361, 65.8504, 0.4924", "425.458, 599.273, 66.0316, 0.5644", "425.783, 598.202, 66.136, 0.6798", "426.345, 597.221, 66.2264, 0.5232", "427.06, 596.338, 66.3715, 0.4304", "427.887, 595.616, 66.631, 0.4436", "428.697, 594.926, 67.0191, 0.4842", "429.451, 594.124, 67.4562, 0.4802", "430.25, 593.331, 67.8754, 0.4008", "430.973, 592.471, 68.2184, 0.3728", "431.444, 591.44, 68.441, 0.4298", "431.747, 590.338, 68.5406, 0.465", "432.097, 589.258, 68.5037, 0.4136", "432.71, 588.336, 68.3393, 0.4272", "433.605, 587.685, 68.0932, 0.3812", "434.635, 587.209, 67.8493, 0.413", "435.562, 586.572, 67.6343, 0.3612", "436.309, 585.725, 67.433, 0.3454", "437.029, 584.843, 67.2991, 0.3846", "437.727, 583.946, 67.2874, 0.3542", "438.38, 583.011, 67.3487, 0.3388", "439.055, 582.097, 67.4108, 0.341", "439.812, 581.248, 67.5147, 0.4244", "440.655, 580.522, 67.741, 0.4236", "441.561, 579.894, 68.0792, 0.4888", "442.58, 579.415, 68.4233, 0.5156", "443.684, 579.199, 68.7828, 0.5642", "444.77, 579.006, 69.1947, 0.4318", "445.812, 578.587, 69.5775, 0.3496", "446.776, 577.976, 69.8827, 0.3206", "447.798, 577.473, 70.1249, 0.3542", "448.836, 577.012, 70.2968, 0.4508", "449.82, 576.438, 70.4654, 0.4616", "450.786, 576.081, 70.8014, 0.6132", "451.796, 575.97, 71.2964, 0.4846", "452.858, 575.759, 71.839, 0.405", "453.924, 575.372, 72.2624, 0.4002", "454.82, 574.672, 72.5724, 0.3856", "455.529, 573.788, 72.8294, 0.3854", "456.185, 572.864, 72.9414, 0.484", "456.613, 571.817, 73.0556, 0.415", "456.858, 570.7, 73.1553, 0.3656", "456.867, 569.563, 73.3037, 0.351", "456.621, 568.45, 73.4667, 0.4064", "456.202, 567.392, 73.652, 0.5668", "455.947, 566.31, 73.9024, 0.5836", "455.646, 565.211, 74.121, 0.6054", "455.55, 564.073, 74.284, 0.462", "455.549, 562.932, 74.3518, 0.4012", "455.596, 561.787, 74.3627, 0.4366", "455.779, 560.659, 74.3266, 0.4714", "455.43, 559.573, 74.2504, 0.4564", "455.055, 558.493, 74.1334, 0.356", "454.679, 557.412, 73.9889, 0.2938", "454.248, 556.352, 73.8136, 0.2626", "453.391, 555.65, 73.5344, 0.2542", "452.874, 554.648, 73.2166, 0.2288", "452.796, 553.582, 72.24, 0.2288" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "465.517, 618.194, 81.0146, 0.4598", "464.747, 618.375, 81.2403, 0.6864", "464.203, 618.881, 82.5532, 0.4464", "463.779, 619.621, 82.836, 0.3296", "463.707, 620.048, 83.4649, 0.2824", "463.541, 620.388, 84.3783, 0.2892", "463.32, 621.384, 85.2617, 0.3014", "463.397, 622.453, 86.0101, 0.3256", "463.434, 623.076, 86.2142, 0.3636", "463.434, 624.073, 86.4088, 0.4672", "463.199, 624.679, 86.7812, 0.4986", "462.832, 625.469, 86.8168, 0.6494", "462.123, 625.997, 86.863, 0.7096", "461.448, 626.302, 86.9568, 0.7408", "460.943, 626.277, 86.7692, 0.5036", "461.447, 626.841, 86.3094, 0.3514", "461.589, 627.558, 85.5327, 0.2756", "460.641, 627.713, 84.7342, 0.2766", "459.508, 627.789, 84.014, 0.2782", "458.871, 628.08, 83.106, 0.2814", "457.793, 628.4, 82.3676, 0.2872", "456.669, 628.508, 81.762, 0.2978", "455.779, 628.285, 81.1171, 0.3186", "454.964, 628.177, 80.4084, 0.352", "454.399, 628.611, 79.6421, 0.4384", "453.921, 628.853, 78.843, 0.4808", "453.26, 629.215, 78.5123, 0.4442", "452.878, 629.435, 78.7898, 0.4776", "452.59, 630.243, 79.3898, 0.506", "452.005, 630.879, 79.8042, 0.4932", "451.791, 631.939, 80.2598, 0.5572", "451.992, 632.76, 80.887, 0.7076", "451.822, 633.523, 81.6715, 0.605", "451.651, 634.298, 82.4466, 0.663", "451.66, 635.286, 83.1102, 0.4824", "451.537, 636.291, 83.7287, 0.4012", "451.761, 637.381, 84.2439, 0.393", "452.47, 637.966, 84.5824, 0.3714", "452.826, 638.996, 84.8123, 0.3642", "453.547, 639.729, 85.0749, 0.4202", "454.167, 640.653, 85.3112, 0.4162", "454.836, 641.517, 85.5347, 0.4732", "455.035, 642.315, 85.8015, 0.4966", "455.008, 643.231, 86.1672, 0.4806", "455.198, 644.218, 86.5542, 0.5106", "454.99, 645.192, 87.0814, 0.7334", "455.336, 646.179, 87.5916, 0.7946", "455.967, 647.056, 88.1404, 0.7848", "455.998, 648.128, 88.765, 0.6778", "455.77, 648.654, 89.6498, 0.683", "456.007, 649.581, 90.5313, 0.62", "456.113, 650.465, 91.4981, 0.6256", "456.227, 651.214, 92.5632, 0.5002", "456.718, 651.879, 93.224, 0.4684", "457.073, 652.93, 93.6496, 0.5802", "457.257, 653.909, 94.0517, 0.6454", "456.9, 654.902, 94.3048, 0.5406", "456.251, 655.605, 94.5991, 0.5254", "455.582, 656.277, 94.8433, 0.5438", "454.818, 657.111, 95.0547, 0.5798", "454.102, 657.728, 95.2983, 0.6384", "453.875, 658.512, 95.3686, 0.5582", "453.047, 658.993, 95.4097, 0.6394", "452.458, 659.734, 95.4593, 0.5886", "451.823, 660.157, 95.7664, 0.7856", "450.898, 660.806, 96.0056, 0.6522", "450.291, 661.636, 96.1598, 0.5378", "449.719, 662.163, 96.4838, 0.3656", "449.331, 663.22, 96.8044, 0.3118", "448.908, 663.972, 97.1939, 0.2966", "448.677, 664.972, 97.5338, 0.315", "448.207, 665.762, 97.6842, 0.3516", "447.305, 666.445, 97.8306, 0.4078", "446.488, 666.928, 98.1361, 0.5682", "445.73, 667.518, 98.5264, 0.5922", "444.844, 668.078, 98.9632, 0.5914", "444.373, 668.995, 99.3583, 0.5812", "443.981, 669.663, 99.8864, 0.6048", "443.757, 670.693, 100.457, 0.6716", "443.499, 671.74, 101.033, 0.6824", "443.072, 672.672, 101.629, 0.5644", "442.927, 673.636, 101.999, 0.5592", "443.072, 674.653, 102.264, 0.6554", "442.378, 675.432, 102.466, 0.5508", "442.23, 675.99, 102.903, 0.356", "441.47, 676.676, 103.88, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "465.517, 618.194, 81.0146, 0.4598", "466.471, 618.687, 81.2151, 0.6836", "467.552, 618.587, 81.5069, 0.7142", "468.362, 617.968, 81.9465, 0.5774", "469.385, 617.563, 82.4208, 0.5776", "470.413, 617.06, 82.8008, 0.4898" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "470.413, 617.06, 82.8008, 0.4898", "470.941, 615.948, 82.6431, 0.4576", "471.156, 614.86, 82.1624, 0.3686", "471.05, 613.764, 81.9109, 0.3168", "470.869, 612.657, 81.6998, 0.307", "470.616, 611.555, 81.5956, 0.3294", "470.085, 610.632, 81.4444, 0.4016", "469.395, 609.789, 81.233, 0.3868", "468.796, 608.83, 81.0939, 0.3952", "468.322, 607.845, 81.1362, 0.4658", "467.944, 606.94, 81.3974, 0.5572", "467.404, 605.986, 81.622, 0.4608", "466.688, 605.19, 81.6676, 0.4292", "465.862, 604.414, 81.6662, 0.343", "465.417, 603.377, 81.6589, 0.3166", "465.143, 602.267, 81.6206, 0.3064", "464.719, 601.25, 81.6606, 0.3282", "464.248, 600.212, 81.6956, 0.3992", "464.008, 599.097, 81.6911, 0.384", "463.768, 598.005, 81.6794, 0.3824", "463.93, 596.897, 81.4842, 0.4782", "463.882, 595.856, 81.0186, 0.4044", "463.636, 594.776, 80.3869, 0.3458", "463.567, 593.694, 79.6026, 0.3134", "463.63, 592.61, 78.7097, 0.3422", "463.883, 591.562, 77.7504, 0.4204", "464.154, 590.734, 76.6402, 0.4464", "464.366, 590.058, 75.4001, 0.3846", "464.137, 589.089, 74.207, 0.3476", "463.47, 588.209, 73.1629, 0.3586", "462.826, 587.286, 72.3257, 0.4516", "462.567, 586.174, 71.6601, 0.5002", "462.391, 585.076, 71.0651, 0.5046", "462.375, 584.07, 70.3892, 0.4708", "462.727, 583.037, 69.6755, 0.3838", "463.02, 581.965, 68.9492, 0.34", "463.21, 580.84, 68.2671, 0.3744", "463.461, 579.753, 67.5676, 0.3356", "463.615, 578.754, 66.738, 0.3034", "463.603, 577.794, 65.8101, 0.2808", "463.055, 576.853, 64.8847, 0.2862", "462.432, 576.041, 63.9052, 0.296", "462.073, 575.125, 62.8746, 0.3152", "461.916, 574.062, 61.9094, 0.3456", "461.994, 572.948, 61.0842, 0.4266", "462.319, 571.88, 60.3565, 0.4576", "462.329, 570.845, 59.6369, 0.4064", "461.682, 570.016, 58.9641, 0.383", "460.63, 569.712, 58.3414, 0.4498", "459.505, 569.675, 57.7433, 0.4966", "458.416, 569.4, 57.1844, 0.4982", "457.412, 568.879, 56.632, 0.459", "456.537, 568.257, 55.998, 0.3608", "455.985, 567.423, 55.235, 0.3028", "455.846, 566.388, 54.4018, 0.2798", "455.979, 565.274, 53.5984, 0.2842", "456.044, 564.168, 52.8125, 0.2926", "455.562, 563.513, 51.9238, 0.3076", "454.71, 563.851, 50.976, 0.3376", "453.826, 564.524, 50.1049, 0.3822", "452.826, 565.064, 49.329, 0.5198", "451.798, 565.5, 48.5635, 0.507", "450.757, 565.738, 47.7232, 0.412", "449.958, 565.323, 46.769, 0.353", "449.668, 564.287, 45.8626, 0.3616", "450.174, 563.378, 44.9534, 0.4914", "451.141, 563.262, 44.0171, 0.4068", "452.109, 563.191, 42.0, 0.4576" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "470.413, 617.06, 82.8008, 0.4898", "471.049, 616.808, 83.0715, 0.5256", "472.108, 616.411, 83.2765, 0.5428", "473.18, 616.031, 83.505, 0.5854", "474.102, 615.43, 83.8219, 0.6122", "474.634, 614.5, 84.2772, 0.6862", "475.022, 613.549, 84.9097, 0.705", "475.617, 612.82, 85.7002, 0.6296", "476.411, 612.128, 86.4956, 0.5656", "477.396, 611.585, 87.1335, 0.5378", "478.431, 611.118, 87.5588, 0.503", "479.04, 610.215, 87.8878, 0.5856", "479.762, 609.344, 88.158, 0.7102", "480.747, 608.817, 88.431, 0.8518", "481.813, 608.442, 88.7183, 0.633", "482.929, 608.202, 88.9924, 0.5048", "484.033, 607.906, 89.2436, 0.5224", "485.142, 607.732, 89.4219, 0.6876", "486.217, 607.404, 89.7047, 0.5804", "487.314, 607.162, 90.1009, 0.557", "488.219, 606.865, 90.7441, 0.5786", "489.172, 606.542, 91.5449, 0.5312", "490.235, 606.147, 92.3079, 0.4102", "491.357, 606.311, 93.0272, 0.348", "491.868, 607.272, 93.7591, 0.3592" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "491.868, 607.272, 93.7591, 0.3592", "492.244, 607.559, 94.4639, 0.4528", "493.242, 607.926, 95.144, 0.5008", "494.118, 607.816, 95.9283, 0.5134", "495.186, 607.833, 96.6918, 0.4508", "496.26, 607.473, 97.3036, 0.5218", "497.354, 607.453, 97.755, 0.4328", "498.168, 606.649, 98.1176, 0.4242", "498.951, 605.826, 98.4449, 0.334", "499.661, 604.983, 98.8378, 0.3", "500.316, 604.103, 99.2667, 0.2746", "500.664, 603.436, 99.8729, 0.2748", "500.829, 602.498, 100.575, 0.2748", "501.382, 601.53, 101.093, 0.2752", "502.435, 601.109, 101.57, 0.2756", "503.56, 601.055, 102.026, 0.2766", "504.671, 600.94, 102.434, 0.2782", "505.706, 600.541, 102.871, 0.2814", "506.633, 600.046, 103.412, 0.287", "507.412, 599.424, 104.103, 0.2988", "508.233, 598.64, 104.672, 0.3142", "509.296, 598.558, 105.277, 0.3734", "510.297, 598.961, 105.841, 0.334", "511.23, 598.583, 106.415, 0.3", "512.053, 598.136, 106.71, 0.2748", "513.036, 597.771, 106.825, 0.275", "513.87, 597.056, 107.035, 0.2752", "514.659, 596.256, 107.182, 0.2758", "515.466, 595.516, 107.478, 0.277", "516.412, 595.077, 107.976, 0.279", "517.368, 594.491, 108.56, 0.2826", "518.161, 593.707, 109.235, 0.2896", "519.035, 592.992, 109.921, 0.3022", "519.948, 592.645, 110.744, 0.3268", "520.849, 592.666, 111.743, 0.3672", "521.87, 592.388, 112.794, 0.4678", "522.706, 592.579, 114.001, 0.5282" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "491.868, 607.272, 93.7591, 0.3592", "492.481, 607.739, 94.369, 0.4576", "493.521, 608.196, 94.0663, 0.4154", "494.595, 608.587, 93.9448, 0.4304", "495.661, 608.997, 93.7367, 0.3874", "496.767, 609.074, 93.3663, 0.4242", "497.876, 608.796, 92.9494, 0.383", "499.016, 608.762, 92.4622, 0.3804", "499.803, 608.949, 91.6454, 0.4748", "500.395, 609.779, 90.6951, 0.3978", "501.031, 610.693, 89.7518, 0.334" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "522.706, 592.579, 114.001, 0.5282", "524.04, 592.418, 113.489, 0.2288", "525.16, 592.232, 113.365, 0.2768", "526.233, 591.973, 113.393, 0.2786", "527.084, 591.449, 113.327, 0.282", "527.865, 590.749, 113.063, 0.2884", "528.875, 590.251, 112.755, 0.2998", "529.889, 589.741, 112.401, 0.3236", "530.388, 588.925, 111.853, 0.355", "530.794, 588.033, 111.102, 0.4748", "531.824, 587.872, 110.297, 0.398", "532.485, 587.64, 109.335, 0.3342", "533.237, 586.79, 108.515, 0.2906", "534.073, 586.021, 107.882, 0.3054", "535.013, 585.491, 107.393, 0.3266", "535.87, 585.566, 106.815, 0.3968", "536.747, 585.004, 106.458, 0.3768", "537.795, 584.612, 106.28, 0.3812", "538.837, 584.179, 106.091, 0.4166", "539.716, 583.469, 105.863, 0.5794", "540.509, 582.708, 105.6, 0.6376", "541.358, 582.09, 105.338, 0.556", "542.095, 581.461, 104.983, 0.4102", "542.844, 580.726, 104.724, 0.342", "543.719, 580.383, 104.755, 0.378", "544.727, 579.92, 104.798, 0.3424", "545.664, 579.331, 104.737, 0.316", "546.618, 579.206, 104.49, 0.3036", "547.751, 579.139, 104.254, 0.3306", "548.808, 578.811, 104.061, 0.3678", "549.758, 578.23, 103.974, 0.4996", "550.8, 578.014, 103.969, 0.4388", "551.854, 577.869, 104.075, 0.4354", "552.907, 577.592, 104.076, 0.3544", "553.914, 577.228, 103.835, 0.3388", "554.871, 576.969, 103.339, 0.3424", "555.974, 576.861, 102.77, 0.4206", "556.81, 576.193, 102.267, 0.4466", "557.821, 575.9, 101.678, 0.386", "558.779, 575.325, 101.156, 0.3442", "559.536, 574.515, 100.665, 0.3822", "560.094, 573.534, 100.289, 0.3498", "560.323, 572.498, 99.9785, 0.3308", "560.971, 572.148, 99.4714, 0.3264", "561.823, 571.896, 98.9842, 0.3962", "562.812, 571.351, 98.5715, 0.3756", "563.597, 570.597, 98.1056, 0.379", "564.256, 569.74, 97.6161, 0.413", "564.738, 568.78, 97.1564, 0.5712", "565.391, 567.94, 96.9464, 0.63", "566.115, 567.193, 96.6941, 0.5056", "566.875, 566.384, 96.6218, 0.4914", "567.677, 565.727, 96.78, 0.3304", "568.454, 565.136, 96.88, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "522.706, 592.579, 114.001, 0.5282", "523.411, 592.412, 115.091, 0.5662", "523.863, 591.633, 116.24, 0.5384", "524.782, 591.454, 117.412, 0.734", "525.651, 590.988, 118.571, 0.5854", "526.625, 590.544, 119.626, 0.5016", "527.647, 590.352, 120.611, 0.5612", "528.422, 589.639, 121.547, 0.5426", "528.954, 588.682, 122.402, 0.678", "529.604, 587.833, 123.25, 0.5608", "530.461, 587.16, 124.094, 0.5306", "531.248, 586.541, 125.009, 0.7094", "532.031, 586.577, 126.036, 0.5882", "532.805, 585.951, 127.034, 0.502", "533.872, 585.62, 127.877, 0.5842", "534.805, 585.008, 128.548, 0.4768", "535.693, 584.376, 128.93, 0.3958", "536.569, 583.837, 129.21, 0.3586", "537.677, 584.093, 129.476, 0.4282", "538.716, 583.904, 129.864, 0.5698", "539.743, 584.099, 130.376, 0.771", "540.766, 583.697, 130.91, 0.7554", "541.644, 583.107, 131.488, 0.7836", "542.73, 582.75, 131.935, 0.7868", "543.812, 582.49, 132.204, 0.8024", "544.753, 582.32, 132.556, 0.7844", "545.751, 581.876, 132.932, 0.7502", "546.686, 581.222, 133.265, 0.6908", "547.511, 580.467, 133.592, 0.5604", "548.128, 579.594, 133.92, 0.4168", "548.795, 578.707, 134.167, 0.3618", "549.755, 578.254, 134.46, 0.3784", "550.852, 578.274, 134.76, 0.519", "551.878, 578.289, 134.85, 0.4754", "552.786, 577.632, 134.893, 0.499", "553.672, 576.939, 135.034, 0.4926", "554.617, 576.343, 135.238, 0.4968", "555.347, 575.656, 135.638, 0.4268", "556.253, 575.283, 136.137, 0.4452", "557.138, 574.838, 136.718, 0.4454", "558.018, 574.318, 137.356, 0.3836", "558.995, 573.792, 137.828, 0.34", "560.06, 573.501, 138.099, 0.3742", "561.076, 573.324, 138.142, 0.3354", "562.162, 573.221, 138.255, 0.3026", "562.914, 572.931, 138.667, 0.2796", "563.722, 573.662, 139.085, 0.2838", "564.466, 574.192, 139.74, 0.2916", "565.482, 574.019, 140.475, 0.306", "566.305, 573.323, 141.245, 0.334", "567.237, 572.752, 141.968, 0.38", "568.157, 572.105, 142.605, 0.4936", "568.949, 571.319, 143.085, 0.5664", "569.92, 570.777, 143.583, 0.6834", "570.888, 570.224, 144.1, 0.5296", "571.914, 570.017, 144.65, 0.4436", "572.94, 570.242, 145.305, 0.4616", "573.896, 570.606, 146.054, 0.5482", "574.836, 570.927, 146.872, 0.4506", "575.915, 570.761, 147.577, 0.3794", "577.027, 570.537, 148.147, 0.4012", "578.104, 570.195, 148.522, 0.3804", "578.936, 569.457, 148.7, 0.4114", "579.857, 568.855, 148.815, 0.3582", "580.737, 568.283, 149.029, 0.3398", "581.841, 568.057, 149.255, 0.374", "582.924, 567.894, 149.557, 0.3348", "583.904, 568.196, 150.102, 0.3018", "584.313, 568.214, 150.998, 0.2778", "584.98, 568.612, 152.032, 0.2806", "586.0, 568.415, 153.041, 0.2858", "587.091, 568.153, 153.908, 0.2952", "588.12, 567.689, 154.569, 0.3128", "589.058, 567.061, 154.961, 0.346", "590.037, 566.518, 155.215, 0.4048", "591.029, 566.386, 155.557, 0.527", "591.938, 566.111, 155.952, 0.6898", "592.984, 565.822, 156.295, 0.6146", "593.985, 565.613, 156.746, 0.4746", "595.008, 565.141, 157.131, 0.4472", "596.096, 565.016, 157.53, 0.413", "597.154, 564.907, 157.775, 0.4978", "598.198, 565.136, 157.858, 0.3932" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "501.031, 610.693, 89.7518, 0.334", "501.408, 611.211, 89.53, 0.4576", "501.764, 612.217, 90.0326, 0.5354", "502.083, 613.229, 90.2812, 0.6998", "502.516, 614.254, 90.5929, 0.66", "503.103, 615.003, 91.105, 0.6574", "503.667, 615.911, 91.7112, 0.5356", "503.942, 616.933, 92.3877, 0.4194", "504.717, 617.704, 93.0199, 0.3588", "505.154, 618.744, 93.555, 0.41", "505.741, 619.723, 93.9688, 0.3976", "506.303, 620.709, 94.3065, 0.4384", "506.77, 621.737, 94.631, 0.4328", "507.302, 622.728, 94.9281, 0.3594", "507.941, 623.561, 95.2876, 0.3", "508.248, 624.615, 95.6393, 0.2746", "508.86, 625.539, 95.8672, 0.2746", "509.514, 626.312, 96.2525, 0.2746", "509.985, 627.355, 96.5846, 0.2748", "510.44, 628.332, 96.9525, 0.275", "510.718, 629.266, 97.4509, 0.2752", "511.177, 630.305, 97.8818, 0.2758", "511.652, 631.319, 98.2618, 0.2768", "511.925, 632.417, 98.6112, 0.2788", "512.44, 633.42, 98.9932, 0.2824", "513.143, 634.164, 99.4714, 0.2892", "513.902, 634.854, 100.029, 0.3014", "514.424, 635.849, 100.558, 0.3254", "514.795, 636.873, 101.14, 0.3644", "515.006, 637.916, 101.627, 0.4622", "515.445, 638.899, 102.172, 0.5198", "516.31, 639.546, 102.801, 0.5418", "516.88, 640.364, 103.538, 0.5354", "517.221, 641.04, 104.473, 0.524", "517.448, 641.941, 105.503, 0.5018", "517.87, 642.869, 106.543, 0.4656", "518.428, 643.779, 107.3, 0.373", "519.307, 644.082, 108.134, 0.325", "519.901, 644.579, 108.955, 0.3232", "520.56, 645.463, 109.579, 0.3544", "521.385, 645.886, 110.276, 0.4736", "522.411, 646.131, 110.923, 0.3956", "523.406, 646.367, 111.614, 0.3296", "524.128, 647.195, 112.259, 0.2826", "525.087, 647.628, 112.857, 0.2892", "526.082, 647.337, 113.485, 0.3026", "526.497, 647.449, 113.762, 0.3214", "527.569, 647.392, 114.089, 0.387", "528.076, 647.378, 114.702, 0.3584", "528.69, 647.612, 115.388, 0.3478", "529.626, 647.312, 115.821, 0.3526", "530.641, 647.194, 116.188, 0.4704", "531.576, 647.163, 116.728, 0.3898", "532.651, 647.091, 117.226, 0.3192", "533.774, 647.213, 117.608, 0.2626", "534.896, 647.4, 117.89, 0.2542", "535.753, 648.07, 118.112, 0.2288", "536.651, 648.305, 117.88, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "501.031, 610.693, 89.7518, 0.334", "501.11, 610.365, 88.8107, 0.2906", "501.212, 609.393, 87.7856, 0.3042", "501.178, 608.377, 86.756, 0.3304", "501.316, 607.383, 85.7592, 0.3736", "501.772, 606.357, 84.894, 0.4804", "502.383, 605.404, 84.1456, 0.5484", "503.069, 604.513, 83.4828, 0.6192", "503.835, 603.685, 82.9021, 0.5608", "504.621, 602.965, 82.2979, 0.4592", "505.465, 602.394, 81.639, 0.466", "506.435, 601.864, 81.0272, 0.4474", "507.374, 601.22, 80.5454, 0.5636", "508.193, 600.42, 80.1912, 0.5046", "509.026, 599.638, 79.9358, 0.5838", "509.921, 598.925, 79.7513, 0.5026", "510.829, 598.238, 79.5838, 0.544", "511.835, 597.722, 79.3528, 0.6028", "512.912, 597.396, 79.0541, 0.571", "514.031, 597.187, 78.7685, 0.5094", "515.057, 596.81, 78.4949, 0.4082", "515.807, 596.18, 78.0116, 0.3848", "516.523, 595.64, 77.3584, 0.4606", "517.547, 595.298, 76.7567, 0.4796", "518.552, 594.79, 76.3286, 0.6472", "519.495, 594.171, 75.9525, 0.5434", "520.427, 593.593, 75.5468, 0.5344", "521.445, 593.173, 75.1436, 0.542", "522.509, 592.796, 74.7816, 0.438", "523.579, 592.436, 74.4338, 0.3608", "524.649, 592.084, 74.097, 0.3426", "525.693, 591.656, 73.8794, 0.3896", "526.633, 591.049, 73.7937, 0.541", "527.586, 590.447, 73.7237, 0.511", "528.643, 590.072, 73.5725, 0.5908", "529.694, 589.683, 73.3594, 0.5388", "530.698, 589.137, 73.1326, 0.497", "531.615, 588.49, 72.8437, 0.3844", "532.527, 587.849, 72.499, 0.3458", "533.589, 587.608, 72.1748, 0.3626", "534.701, 587.538, 71.8575, 0.423", "535.743, 587.122, 71.5117, 0.621", "536.669, 586.487, 71.2071, 0.5706", "537.589, 585.85, 70.9296, 0.4454", "538.56, 585.36, 70.5351, 0.3674", "539.558, 584.938, 70.0426, 0.39", "540.654, 584.672, 69.5372, 0.5344", "541.755, 584.446, 69.0063, 0.5346", "542.758, 583.977, 68.4312, 0.4594", "543.596, 583.276, 67.8076, 0.4586", "544.331, 582.468, 67.1493, 0.471", "545.224, 581.851, 66.4857, 0.4262", "546.287, 581.815, 65.816, 0.4442", "547.38, 582.102, 65.1717, 0.4436", "548.49, 582.317, 64.5414, 0.3792", "549.555, 582.306, 63.8364, 0.338", "550.578, 582.091, 63.0378, 0.3394", "551.615, 581.794, 62.1984, 0.4214", "552.581, 581.318, 61.3483, 0.4172", "553.388, 580.693, 60.459, 0.482", "554.149, 580.188, 59.509, 0.4794", "555.102, 579.815, 58.6328, 0.6114", "556.117, 579.391, 58.0398, 0.6498", "556.99, 578.697, 57.6632, 0.5796", "557.828, 577.935, 57.3462, 0.4484", "558.738, 577.252, 57.0665, 0.4384", "559.594, 576.531, 56.749, 0.4328", "560.24, 575.672, 56.3189, 0.3594", "560.914, 574.792, 55.8236, 0.3004", "561.76, 574.036, 55.3874, 0.2752", "562.602, 573.326, 54.9279, 0.2756", "563.566, 572.729, 54.5202, 0.2766", "564.643, 572.362, 54.1699, 0.2784", "565.732, 572.058, 53.8401, 0.2816", "566.844, 572.217, 53.6368, 0.2874", "567.951, 572.371, 53.3842, 0.2994", "568.975, 572.579, 53.0295, 0.3152", "569.886, 573.257, 52.7372, 0.3754", "570.651, 574.107, 52.5412, 0.3376", "571.22, 575.1, 52.4362, 0.307", "571.746, 576.116, 52.4079, 0.2874", "572.36, 577.081, 52.4625, 0.2994", "573.0, 578.024, 52.5899, 0.3154", "573.656, 578.855, 52.8648, 0.3756", "574.23, 579.793, 53.1868, 0.339", "575.013, 580.627, 53.4195, 0.305", "575.794, 581.452, 53.5139, 0.305", "576.347, 582.41, 53.2, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "598.198, 565.136, 157.858, 0.3932", "599.295, 564.992, 156.327, 0.2288", "600.237, 565.063, 156.642, 0.2746", "601.274, 565.479, 156.798, 0.2746", "602.303, 565.811, 156.739, 0.2746", "603.173, 566.158, 156.443, 0.2746", "603.94, 566.97, 156.192, 0.2746", "604.651, 567.705, 155.931, 0.2746", "605.57, 568.266, 155.786, 0.2746", "606.29, 569.117, 155.779, 0.2746", "607.253, 569.614, 155.84, 0.2746", "608.362, 569.886, 155.985, 0.2746", "609.295, 570.271, 156.343, 0.2746", "610.076, 571.021, 156.818, 0.2746", "610.971, 571.709, 157.319, 0.2746", "611.886, 572.393, 157.802, 0.2746", "612.821, 573.024, 158.328, 0.2746", "613.844, 573.515, 158.875, 0.2746", "614.669, 574.094, 159.518, 0.2746", "615.404, 574.7, 160.285, 0.2746", "616.456, 574.504, 161.122, 0.2748", "617.534, 574.413, 161.968, 0.275", "617.833, 574.652, 163.078, 0.2752", "618.729, 575.017, 164.191, 0.2758", "619.443, 575.741, 165.235, 0.2768", "619.993, 576.465, 165.88, 0.2786", "620.188, 577.46, 166.255, 0.282", "620.211, 578.396, 166.771, 0.2882", "620.487, 578.993, 167.536, 0.3012", "621.198, 579.808, 168.355, 0.3186", "621.555, 580.501, 169.344, 0.3816", "622.12, 580.942, 170.507, 0.3492", "622.982, 581.587, 171.51, 0.328", "623.388, 582.609, 172.186, 0.3286", "623.988, 583.367, 172.859, 0.3642", "624.678, 584.237, 173.422, 0.4916", "625.365, 584.824, 173.957, 0.43", "626.161, 585.189, 174.195, 0.3894", "627.167, 585.228, 174.508, 0.4136", "628.285, 585.302, 174.73, 0.4338", "629.271, 585.385, 174.704, 0.3614", "630.13, 585.633, 174.843, 0.3038", "631.029, 585.93, 175.138, 0.2816", "632.104, 585.822, 175.265, 0.2874", "632.92, 585.823, 175.441, 0.2994", "633.901, 585.686, 175.656, 0.3152", "635.0, 585.453, 175.742, 0.3754", "635.781, 585.253, 175.413, 0.3376", "636.375, 585.005, 174.78, 0.3068", "637.193, 585.13, 174.357, 0.287", "638.207, 585.237, 173.967, 0.2986", "639.292, 585.003, 173.659, 0.314", "640.307, 584.704, 173.682, 0.3732", "641.341, 584.797, 173.999, 0.3336", "642.156, 584.927, 174.526, 0.2994", "643.014, 584.388, 174.789, 0.2736", "643.977, 583.912, 175.076, 0.2728", "645.018, 583.776, 175.361, 0.2712", "646.12, 583.922, 175.529, 0.2684", "647.207, 584.043, 175.491, 0.2626", "648.18, 583.864, 175.164, 0.2542", "649.162, 583.977, 174.665, 0.2288", "650.25, 583.898, 173.32, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "598.198, 565.136, 157.858, 0.3932", "598.594, 564.896, 158.075, 0.3256", "598.733, 563.85, 158.429, 0.2748", "598.859, 563.476, 159.143, 0.2752", "599.441, 562.607, 159.816, 0.2756", "599.772, 561.558, 160.287, 0.2766", "600.419, 560.65, 160.577, 0.2782", "600.979, 559.7, 160.81, 0.2814", "601.599, 558.829, 161.135, 0.287", "602.38, 558.026, 161.465, 0.2988", "602.824, 557.031, 161.883, 0.3142", "603.188, 555.959, 162.348, 0.3734", "604.04, 555.284, 162.861, 0.3338", "604.873, 554.835, 163.503, 0.3", "605.769, 554.342, 164.143, 0.2746", "606.721, 553.728, 164.589, 0.2746", "607.652, 553.126, 164.848, 0.2746", "608.656, 552.629, 164.988, 0.2748", "609.573, 551.956, 165.051, 0.275", "610.506, 551.299, 165.102, 0.2754", "611.477, 550.754, 165.171, 0.276", "612.542, 550.352, 165.266, 0.2774", "613.427, 550.015, 165.575, 0.2798", "614.344, 550.27, 166.019, 0.2842", "615.368, 550.108, 166.508, 0.2922", "616.211, 549.376, 166.942, 0.3084", "617.245, 548.99, 167.185, 0.3318", "618.37, 548.825, 167.347, 0.4074", "619.432, 548.84, 167.362, 0.3914", "620.535, 548.862, 167.54, 0.4332", "621.596, 548.715, 167.911, 0.392", "622.646, 548.505, 168.4, 0.4342", "623.531, 548.161, 169.104, 0.3944", "624.615, 547.993, 169.814, 0.4372", "625.505, 547.848, 170.591, 0.407", "626.531, 547.844, 171.315, 0.426", "627.659, 547.75, 171.92, 0.5552", "628.779, 547.914, 172.42, 0.5668", "629.868, 547.963, 172.692, 0.551", "630.852, 547.805, 172.987, 0.4738", "631.776, 547.923, 173.413, 0.564", "632.823, 547.808, 173.719, 0.5128", "633.943, 547.646, 173.921, 0.5642", "635.022, 547.287, 174.038, 0.634", "636.138, 547.067, 174.161, 0.6588", "637.23, 546.747, 174.25, 0.5258", "638.154, 546.11, 174.321, 0.4614", "638.915, 545.376, 174.323, 0.6028", "639.696, 544.69, 174.437, 0.5134", "640.201, 543.911, 174.751, 0.4528", "641.037, 543.182, 174.96, 0.5158", "641.863, 542.484, 175.104, 0.4684", "642.597, 541.655, 175.218, 0.4912", "642.591, 540.549, 175.405, 0.4548", "642.812, 539.659, 175.943, 0.5394", "643.396, 538.881, 176.746, 0.6436", "644.036, 538.332, 177.842, 0.6362", "644.745, 537.726, 179.069, 0.6814", "645.375, 537.579, 180.409, 0.478", "645.982, 537.563, 181.797, 0.3508", "646.907, 536.999, 182.824, 0.2746", "647.865, 536.374, 183.515, 0.2746", "648.823, 535.749, 183.934, 0.2746", "649.781, 535.124, 184.154, 0.2746", "650.74, 534.498, 184.234, 0.2746", "651.698, 533.874, 184.24, 0.2746", "652.656, 533.249, 184.24, 0.2746", "653.615, 532.625, 184.24, 0.2746", "654.643, 532.125, 184.24, 0.2746", "655.704, 531.701, 184.24, 0.2746", "656.769, 531.284, 184.24, 0.2746", "657.834, 530.866, 184.24, 0.2746", "658.899, 530.449, 184.24, 0.2746", "659.964, 530.031, 184.24, 0.2746", "661.029, 529.614, 184.24, 0.2746", "662.095, 529.196, 184.24, 0.2746", "663.16, 528.779, 184.24, 0.2746", "664.225, 528.361, 184.24, 0.2746", "665.29, 527.943, 184.24, 0.2746", "666.355, 527.526, 184.24, 0.2746", "667.399, 527.058, 184.24, 0.2746", "668.363, 526.444, 184.24, 0.2746", "669.318, 525.812, 184.24, 0.2746", "670.272, 525.182, 184.24, 0.2746", "671.227, 524.552, 184.24, 0.2746", "672.18, 523.921, 184.24, 0.2746", "673.134, 523.29, 184.24, 0.2746", "674.089, 522.659, 184.24, 0.2746", "674.852, 521.813, 184.24, 0.2746", "675.444, 520.835, 184.24, 0.2746", "676.024, 519.849, 184.24, 0.2746", "676.604, 518.862, 184.24, 0.2746", "677.185, 517.876, 184.24, 0.2746", "677.764, 516.89, 184.24, 0.2746", "678.344, 515.904, 184.24, 0.2746", "678.924, 514.918, 184.24, 0.2746", "679.505, 513.932, 184.24, 0.2746", "680.084, 512.946, 184.24, 0.2746", "680.664, 511.959, 184.24, 0.2746", "681.477, 511.16, 184.24, 0.2746", "682.576, 510.84, 184.24, 0.2746", "683.674, 510.52, 184.24, 0.2746", "684.773, 510.202, 184.24, 0.2746", "685.872, 509.883, 184.24, 0.2746", "686.97, 509.564, 184.24, 0.2746", "688.068, 509.245, 184.24, 0.2746", "689.156, 508.884, 184.24, 0.2746", "690.201, 508.423, 184.24, 0.2746", "691.248, 507.962, 184.24, 0.2746", "692.295, 507.5, 184.24, 0.2746", "693.342, 507.039, 184.24, 0.2746", "694.389, 506.578, 184.24, 0.2746", "695.435, 506.117, 184.24, 0.2746", "696.482, 505.655, 184.24, 0.2746", "697.529, 505.194, 184.24, 0.2746", "698.578, 504.733, 184.24, 0.2746", "699.622, 504.271, 184.24, 0.2746", "700.555, 503.606, 184.24, 0.2744", "701.482, 502.937, 184.24, 0.2744", "702.409, 502.267, 184.24, 0.2742", "703.337, 501.597, 184.24, 0.274", "704.266, 500.928, 184.24, 0.2736", "705.193, 500.259, 184.24, 0.2728", "706.12, 499.589, 184.24, 0.2712", "707.047, 498.92, 184.24, 0.2684", "707.975, 498.25, 184.24, 0.2626", "708.904, 497.581, 184.24, 0.2542", "709.831, 496.911, 184.24, 0.2288", "710.758, 496.242, 184.24, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_668",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_669",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_14", "dend_13", "apic_0", "dend_8", "dend_7", "dend_0", "dend_19", "dend_18", "dend_16", "dend_15", "apic_18", "apic_1", "dend_12", "dend_9", "dend_4", "dend_1", "dend_21", "dend_20", "apic_15", "apic_2", "dend_11", "dend_10", "dend_6", "dend_5", "dend_3", "dend_2", "apic_17", "apic_16", "apic_14", "apic_3", "apic_13", "apic_4", "apic_8", "apic_5", "apic_12", "apic_9", "apic_7", "apic_6", "apic_11", "apic_10" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_18", "apic_1", "apic_15", "apic_2", "apic_17", "apic_16", "apic_14", "apic_3", "apic_13", "apic_4", "apic_8", "apic_5", "apic_12", "apic_9", "apic_7", "apic_6", "apic_11", "apic_10" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_14", "dend_13", "dend_8", "dend_7", "dend_0", "dend_19", "dend_18", "dend_16", "dend_15", "dend_12", "dend_9", "dend_4", "dend_1", "dend_21", "dend_20", "dend_11", "dend_10", "dend_6", "dend_5", "dend_3", "dend_2" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27913",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "apic_0", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "apic_15", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "3.1877055"
  }, {
    "group" : "apic",
    "value" : "3.1877055"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "110.303986"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.002340444",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "5.62943E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.57469475",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "5.0837785E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.07029005",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.031050576",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.1694328",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.21822211",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "4.1408633E-4",
    "erev" : "-90.538284"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.1292307E-4",
    "erev" : "-90.538284"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "6.483126E-6",
    "erev" : "-90.538284"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.7827714E-6",
    "erev" : "-90.538284"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "7.9498434E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "9.956423E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478513396",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478513396

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: apic_18, id: apic_18, parent: apic_0
create apic_18
public apic_18
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: apic_15, id: apic_15, parent: apic_1
create apic_15
public apic_15
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_17, id: apic_17, parent: apic_15
create apic_17
public apic_17
// Section: apic_16, id: apic_16, parent: apic_15
create apic_16
public apic_16
// Section: apic_14, id: apic_14, parent: apic_2
create apic_14
public apic_14
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: apic_13, id: apic_13, parent: apic_3
create apic_13
public apic_13
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_12, id: apic_12, parent: apic_8
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_668, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_668
// Group: {name=ModelViewParmSubset_669, groups=[], sections=[dend_17, dend_14, dend_13, apic_0, dend_8, dend_7, dend_0, dend_19, dend_18, dend_16, dend_15, apic_18, apic_1, dend_12, dend_9, dend_4, dend_1, dend_21, dend_20, apic_15, apic_2, dend_11, dend_10, dend_6, dend_5, dend_3, dend_2, apic_17, apic_16, apic_14, apic_3, apic_13, apic_4, apic_8, apic_5, apic_12, apic_9, apic_7, apic_6, apic_11, apic_10]}
objref ModelViewParmSubset_669
// Group: {name=apic, groups=[], sections=[apic_0, apic_18, apic_1, apic_15, apic_2, apic_17, apic_16, apic_14, apic_3, apic_13, apic_4, apic_8, apic_5, apic_12, apic_9, apic_7, apic_6, apic_11, apic_10]}
objref apic
// Group: {name=dend, groups=[], sections=[dend_17, dend_14, dend_13, dend_8, dend_7, dend_0, dend_19, dend_18, dend_16, dend_15, dend_12, dend_9, dend_4, dend_1, dend_21, dend_20, dend_11, dend_10, dend_6, dend_5, dend_3, dend_2]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_27913, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_27913
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, apic_0, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_15, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_3, apic_3, apic_3, apic_3, apic_3, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513396
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49995698184633774)
    connect dend_17(0), soma_0(0.49995698184633774)
    connect dend_14(0), soma_0(0.49995698184633774)
    connect dend_13(0), soma_0(0.49995698184633774)
    connect apic_0(0), soma_0(0.49995698184633774)
    connect dend_8(0), soma_0(0.49995698184633774)
    connect dend_7(0), soma_0(0.49995698184633774)
    connect dend_0(0), soma_0(0.49995698184633774)
    connect axon_1(0), axon_0(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect apic_18(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect apic_15(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_17(0), apic_15(1.0)
    connect apic_16(0), apic_15(1.0)
    connect apic_14(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect apic_13(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_12(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 392.987, 654.025, 33.04, 11.6238 ) }
    soma_0 { pt3dadd( 398.798, 654.025, 33.04, 11.6238 ) }
    soma_0 { pt3dadd( 404.61, 654.025, 33.04, 11.6238 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 398.798, 654.025, 33.04, 1.0 ) }
    axon_0 { pt3dadd( 404.64, 667.841, 33.04, 1.0 ) }
    axon_0 { pt3dadd( 410.481, 681.657, 33.04, 1.0 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 399.672, 658.477, 38.1688, 0.2288 ) }
    dend_17 { pt3dadd( 399.871, 659.497, 38.9043, 0.4532 ) }
    dend_17 { pt3dadd( 399.737, 660.595, 39.167, 0.6776 ) }
    dend_17 { pt3dadd( 399.718, 661.703, 39.4486, 0.6732 ) }
    dend_17 { pt3dadd( 400.085, 662.776, 39.6794, 0.6456 ) }
    dend_17 { pt3dadd( 400.616, 663.761, 39.7522, 0.6904 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 12/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 402.385, 657.213, 34.7469, 0.2288 ) }
    dend_14 { pt3dadd( 403.143, 657.698, 34.6592, 0.3762 ) }
    dend_14 { pt3dadd( 403.796, 658.237, 34.608, 0.4778 ) }
    dend_14 { pt3dadd( 404.379, 659.213, 34.655, 0.5794 ) }
    dend_14 { pt3dadd( 405.426, 659.654, 34.792, 0.5032 ) }
    dend_14 { pt3dadd( 406.54, 659.66, 35.1123, 0.5022 ) }
    dend_14 { pt3dadd( 407.652, 659.484, 35.5326, 0.5058 ) }
    dend_14 { pt3dadd( 408.612, 659.232, 36.188, 0.4854 ) }
    dend_14 { pt3dadd( 409.5, 658.66, 36.974, 0.579 ) }
    dend_14 { pt3dadd( 410.551, 658.6, 37.8381, 0.5718 ) }
    dend_14 { pt3dadd( 411.149, 658.151, 38.8945, 0.5214 ) }
    dend_14 { pt3dadd( 411.98, 657.878, 39.9896, 0.6076 ) }
    dend_14 { pt3dadd( 413.072, 657.885, 40.9237, 0.5824 ) }
    dend_14 { pt3dadd( 414.139, 658.227, 41.648, 0.7468 ) }
    dend_14 { pt3dadd( 415.15, 658.558, 42.1364, 0.713 ) }
    dend_14 { pt3dadd( 416.251, 658.478, 42.4407, 0.6916 ) }
    dend_14 { pt3dadd( 417.165, 657.992, 42.8103, 0.9114 ) }
    dend_14 { pt3dadd( 417.956, 657.211, 43.1981, 0.9728 ) }
    dend_14 { pt3dadd( 418.87, 656.585, 43.5652, 0.9362 ) }
    dend_14 { pt3dadd( 419.817, 656.261, 44.0642, 0.6846 ) }
    dend_14 { pt3dadd( 420.872, 656.011, 44.5911, 0.6526 ) }
    dend_14 { pt3dadd( 421.96, 655.809, 45.1184, 0.7708 ) }
    dend_14 { pt3dadd( 423.001, 655.437, 45.4538, 0.816 ) }
    dend_14 { pt3dadd( 424.123, 655.423, 45.682, 0.5998 ) }
    dend_14 { pt3dadd( 425.173, 655.455, 45.9894, 0.5102 ) }
    dend_14 { pt3dadd( 426.158, 655.621, 46.3795, 0.4356 ) }
    dend_14 { pt3dadd( 427.274, 655.4, 46.6558, 0.5394 ) }
    dend_14 { pt3dadd( 428.343, 655.276, 46.7524, 0.4722 ) }
    dend_14 { pt3dadd( 429.225, 654.553, 46.8294, 0.4634 ) }
    dend_14 { pt3dadd( 429.977, 653.716, 46.8882, 0.5708 ) }
    dend_14 { pt3dadd( 430.804, 652.978, 46.9126, 0.628 ) }
    dend_14 { pt3dadd( 431.816, 652.463, 47.0042, 0.5074 ) }
    dend_14 { pt3dadd( 432.865, 652.584, 47.1946, 0.4694 ) }
    dend_14 { pt3dadd( 433.871, 652.865, 47.5642, 0.4124 ) }
    dend_14 { pt3dadd( 434.967, 652.654, 47.8442, 0.4716 ) }
    dend_14 { pt3dadd( 436.068, 652.385, 48.1541, 0.4656 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 48/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 401.201, 658.587, 37.3752, 0.2288 ) }
    dend_13 { pt3dadd( 401.167, 659.713, 36.7727, 0.5108 ) }
    dend_13 { pt3dadd( 401.411, 660.711, 36.4479, 0.6068 ) }
    dend_13 { pt3dadd( 402.059, 661.573, 36.0898, 0.7172 ) }
    dend_13 { pt3dadd( 402.725, 662.495, 35.8084, 0.7928 ) }
    dend_13 { pt3dadd( 403.365, 663.442, 35.6202, 0.6448 ) }
    dend_13 { pt3dadd( 404.201, 664.193, 35.4928, 0.6238 ) }
    dend_13 { pt3dadd( 405.105, 664.883, 35.457, 0.7292 ) }
    dend_13 { pt3dadd( 406.098, 665.424, 35.5225, 0.6818 ) }
    dend_13 { pt3dadd( 407.05, 665.992, 35.7106, 0.6272 ) }
    dend_13 { pt3dadd( 407.846, 666.756, 35.9436, 0.593 ) }
    dend_13 { pt3dadd( 408.38, 667.715, 36.3468, 0.6632 ) }
    dend_13 { pt3dadd( 408.728, 668.748, 36.909, 0.6016 ) }
    dend_13 { pt3dadd( 408.966, 669.813, 37.5847, 0.7318 ) }
    dend_13 { pt3dadd( 408.951, 670.646, 38.4597, 0.7018 ) }
    dend_13 { pt3dadd( 409.371, 671.61, 39.3126, 0.5906 ) }
    dend_13 { pt3dadd( 410.375, 672.115, 40.0644, 0.4266 ) }
    dend_13 { pt3dadd( 411.204, 672.636, 40.8167, 0.3756 ) }
    dend_13 { pt3dadd( 411.893, 672.655, 41.5884, 0.4238 ) }
    dend_13 { pt3dadd( 412.992, 672.562, 42.0106, 0.5084 ) }
    dend_13 { pt3dadd( 413.899, 673.015, 42.28, 0.2288 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 69/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 397.3, 648.391, 37.8442, 1.564 ) }
    apic_0 { pt3dadd( 397.034, 647.395, 39.6278, 0.3188 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 71/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 404.034, 654.178, 33.2363, 0.2288 ) }
    dend_8 { pt3dadd( 404.971, 654.774, 33.1304, 0.3378 ) }
    dend_8 { pt3dadd( 406.042, 655.155, 33.0714, 0.389 ) }
    dend_8 { pt3dadd( 407.145, 655.117, 33.1526, 0.5014 ) }
    dend_8 { pt3dadd( 408.163, 654.704, 33.353, 0.6232 ) }
    dend_8 { pt3dadd( 409.201, 654.228, 33.5348, 0.5838 ) }
    dend_8 { pt3dadd( 410.272, 653.88, 33.6168, 0.654 ) }
    dend_8 { pt3dadd( 411.352, 653.598, 33.7618, 0.7744 ) }
    dend_8 { pt3dadd( 412.443, 653.46, 33.9497, 1.0468 ) }
    dend_8 { pt3dadd( 413.564, 653.243, 34.039, 1.3128 ) }
    dend_8 { pt3dadd( 414.651, 653.476, 33.9679, 1.3636 ) }
    dend_8 { pt3dadd( 415.775, 653.565, 33.822, 1.3188 ) }
    dend_8 { pt3dadd( 416.83, 653.587, 33.5538, 1.2226 ) }
    dend_8 { pt3dadd( 417.931, 653.683, 33.2651, 1.1088 ) }
    dend_8 { pt3dadd( 419.004, 654.058, 33.0725, 0.8134 ) }
    dend_8 { pt3dadd( 420.022, 654.45, 33.1486, 0.6748 ) }
    dend_8 { pt3dadd( 420.957, 654.876, 33.4984, 0.4912 ) }
    dend_8 { pt3dadd( 421.897, 654.847, 34.0771, 0.4804 ) }
    dend_8 { pt3dadd( 422.464, 655.771, 34.6783, 0.4632 ) }
    dend_8 { pt3dadd( 423.224, 656.519, 35.1039, 0.4168 ) }
    dend_8 { pt3dadd( 423.702, 657.321, 35.2428, 0.4024 ) }
    dend_8 { pt3dadd( 424.197, 658.301, 35.3626, 0.485 ) }
    dend_8 { pt3dadd( 424.478, 659.398, 35.429, 0.5644 ) }
    dend_8 { pt3dadd( 424.793, 660.325, 35.5984, 0.6132 ) }
    dend_8 { pt3dadd( 425.046, 661.339, 35.8358, 0.724 ) }
    dend_8 { pt3dadd( 425.115, 662.464, 36.1256, 0.6006 ) }
    dend_8 { pt3dadd( 424.932, 663.57, 36.325, 0.5952 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 98/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 396.339, 658.688, 33.822, 0.2288 ) }
    dend_7 { pt3dadd( 395.863, 659.728, 33.1598, 0.4062 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_7 { pt3dadd( 395.485, 660.725, 32.8401, 0.5952 ) }
    dend_7 { pt3dadd( 394.579, 661.136, 32.3627, 0.4978 ) }
    dend_7 { pt3dadd( 393.671, 661.733, 31.8497, 0.4308 ) }
    dend_7 { pt3dadd( 392.764, 662.426, 31.4488, 0.4428 ) }
    dend_7 { pt3dadd( 391.938, 663.216, 31.1685, 0.4902 ) }
    dend_7 { pt3dadd( 391.195, 664.087, 31.0013, 0.4552 ) }
    dend_7 { pt3dadd( 390.516, 665.007, 30.9411, 0.53 ) }
    dend_7 { pt3dadd( 389.829, 665.922, 30.9574, 0.4478 ) }
    dend_7 { pt3dadd( 389.189, 666.87, 31.0145, 0.452 ) }
    dend_7 { pt3dadd( 388.591, 667.846, 31.094, 0.3866 ) }
    dend_7 { pt3dadd( 388.06, 668.853, 31.2214, 0.3918 ) }
    dend_7 { pt3dadd( 387.49, 669.823, 31.4166, 0.4736 ) }
    dend_7 { pt3dadd( 386.849, 670.761, 31.6232, 0.5048 ) }
    dend_7 { pt3dadd( 386.177, 671.684, 31.794, 0.6882 ) }
    dend_7 { pt3dadd( 385.474, 672.56, 31.9698, 0.6482 ) }
    dend_7 { pt3dadd( 385.068, 673.6, 32.1202, 0.5882 ) }
    dend_7 { pt3dadd( 385.036, 674.74, 32.1107, 0.638 ) }
    dend_7 { pt3dadd( 384.829, 675.85, 31.9259, 0.8634 ) }
    dend_7 { pt3dadd( 384.401, 676.885, 31.5809, 0.8634 ) }
    dend_7 { pt3dadd( 383.786, 677.823, 31.1248, 0.6038 ) }
    dend_7 { pt3dadd( 382.931, 678.472, 30.511, 0.4684 ) }
    dend_7 { pt3dadd( 381.992, 678.997, 29.8038, 0.368 ) }
    dend_7 { pt3dadd( 381.177, 679.745, 29.0878, 0.3654 ) }
    dend_7 { pt3dadd( 380.454, 680.594, 28.392, 0.3864 ) }
    dend_7 { pt3dadd( 379.72, 681.394, 27.6841, 0.5274 ) }
    dend_7 { pt3dadd( 378.917, 682.123, 26.9803, 0.522 ) }
    dend_7 { pt3dadd( 377.958, 682.73, 26.3704, 0.435 ) }
    dend_7 { pt3dadd( 376.918, 683.205, 25.8431, 0.4186 ) }
    dend_7 { pt3dadd( 375.892, 683.688, 25.3216, 0.3704 ) }
    dend_7 { pt3dadd( 374.896, 684.202, 24.7575, 0.3684 ) }
    dend_7 { pt3dadd( 373.831, 684.492, 24.1431, 0.3978 ) }
    dend_7 { pt3dadd( 372.777, 684.308, 23.409, 0.52 ) }
    dend_7 { pt3dadd( 371.836, 683.87, 22.5312, 0.6474 ) }
    dend_7 { pt3dadd( 370.921, 683.378, 21.5458, 0.679 ) }
    dend_7 { pt3dadd( 369.949, 682.936, 20.5227, 0.587 ) }
    dend_7 { pt3dadd( 368.935, 682.629, 19.4823, 0.4608 ) }
    dend_7 { pt3dadd( 368.012, 682.3, 18.3957, 0.4686 ) }
    dend_7 { pt3dadd( 367.222, 681.837, 17.2727, 0.4536 ) }
    dend_7 { pt3dadd( 366.443, 681.278, 16.1871, 0.569 ) }
    dend_7 { pt3dadd( 365.413, 680.865, 15.2798, 0.5454 ) }
    dend_7 { pt3dadd( 364.293, 680.719, 14.5748, 0.5104 ) }
    dend_7 { pt3dadd( 363.193, 680.646, 14.0193, 0.4036 ) }
    dend_7 { pt3dadd( 362.263, 680.022, 13.5971, 0.4076 ) }
    dend_7 { pt3dadd( 361.634, 679.08, 13.2349, 0.3504 ) }
    dend_7 { pt3dadd( 361.284, 678.017, 12.8336, 0.33 ) }
    dend_7 { pt3dadd( 361.237, 676.921, 12.3292, 0.3324 ) }
    dend_7 { pt3dadd( 361.453, 675.844, 11.7269, 0.3712 ) }
    dend_7 { pt3dadd( 361.678, 674.815, 11.0109, 0.5048 ) }
    dend_7 { pt3dadd( 361.776, 673.768, 10.2205, 0.454 ) }
    dend_7 { pt3dadd( 361.707, 672.718, 9.4133, 0.4348 ) }
    dend_7 { pt3dadd( 360.991, 672.211, 8.6446, 0.4934 ) }
    dend_7 { pt3dadd( 359.883, 672.362, 8.008, 0.6032 ) }
    dend_7 { pt3dadd( 358.827, 672.751, 7.4906, 0.5716 ) }
    dend_7 { pt3dadd( 357.863, 673.306, 7.0517, 0.5116 ) }
    dend_7 { pt3dadd( 356.876, 673.805, 6.683, 0.406 ) }
    dend_7 { pt3dadd( 355.785, 673.987, 6.4052, 0.412 ) }
    dend_7 { pt3dadd( 354.651, 673.951, 6.2931, 0.3582 ) }
    dend_7 { pt3dadd( 353.538, 674.127, 6.3545, 0.346 ) }
    dend_7 { pt3dadd( 352.503, 674.592, 6.575, 0.3554 ) }
    dend_7 { pt3dadd( 351.525, 675.172, 6.9647, 0.446 ) }
    dend_7 { pt3dadd( 350.586, 675.808, 7.5066, 0.4886 ) }
    dend_7 { pt3dadd( 349.797, 676.49, 8.2696, 0.488 ) }
    dend_7 { pt3dadd( 349.669, 677.333, 9.2813, 0.417 ) }
    dend_7 { pt3dadd( 350.081, 678.231, 10.428, 0.396 ) }
    dend_7 { pt3dadd( 350.375, 679.152, 11.6935, 0.5046 ) }
    dend_7 { pt3dadd( 351.082, 679.558, 13.0488, 0.4492 ) }
    dend_7 { pt3dadd( 351.954, 679.116, 14.3503, 0.4492 ) }
    dend_7 { pt3dadd( 352.392, 678.183, 15.5219, 0.4068 ) }
    dend_7 { pt3dadd( 352.749, 677.207, 16.5472, 0.305 ) }
    dend_7 { pt3dadd( 353.728, 676.718, 18.2666, 0.2288 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 70/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 401.192, 649.25, 32.3764, 0.2288 ) }
    dend_0 { pt3dadd( 400.972, 648.227, 31.4188, 0.401 ) }
    dend_0 { pt3dadd( 400.904, 647.189, 30.9515, 0.3796 ) }
    dend_0 { pt3dadd( 401.329, 646.152, 30.5122, 0.4104 ) }
    dend_0 { pt3dadd( 401.511, 645.043, 30.2319, 0.3552 ) }
    dend_0 { pt3dadd( 401.475, 643.942, 29.9216, 0.3404 ) }
    dend_0 { pt3dadd( 401.219, 642.896, 29.582, 0.3454 ) }
    dend_0 { pt3dadd( 401.102, 641.76, 29.3804, 0.4262 ) }
    dend_0 { pt3dadd( 401.113, 640.634, 29.3689, 0.4572 ) }
    dend_0 { pt3dadd( 401.245, 639.511, 29.3591, 0.4054 ) }
    dend_0 { pt3dadd( 401.822, 638.525, 29.4092, 0.3812 ) }
    dend_0 { pt3dadd( 402.204, 637.636, 29.7259, 0.4452 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 82/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 410.481, 681.657, 33.04, 1.0 ) }
    axon_1 { pt3dadd( 416.322, 695.473, 33.04, 1.0 ) }
    axon_1 { pt3dadd( 422.164, 709.289, 33.04, 1.0 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 400.616, 663.761, 39.7522, 0.6904 ) }
    dend_19 { pt3dadd( 401.292, 664.092, 39.7986, 0.5366 ) }
    dend_19 { pt3dadd( 402.236, 664.53, 39.7774, 0.4862 ) }
    dend_19 { pt3dadd( 403.178, 664.524, 39.5839, 0.3962 ) }
    dend_19 { pt3dadd( 403.809, 664.995, 39.4881, 0.4422 ) }
    dend_19 { pt3dadd( 404.521, 665.766, 39.6934, 0.4086 ) }
    dend_19 { pt3dadd( 405.326, 666.549, 40.1047, 0.4662 ) }
    dend_19 { pt3dadd( 406.035, 666.728, 40.8733, 0.4492 ) }
    dend_19 { pt3dadd( 406.438, 667.222, 41.9826, 0.5598 ) }
    dend_19 { pt3dadd( 407.118, 668.096, 43.0884, 0.5336 ) }
    dend_19 { pt3dadd( 407.982, 668.689, 44.1008, 0.4622 ) }
    dend_19 { pt3dadd( 408.82, 668.496, 45.1783, 0.4414 ) }
    dend_19 { pt3dadd( 409.855, 668.636, 46.163, 0.5474 ) }
    dend_19 { pt3dadd( 410.672, 669.176, 47.0912, 0.7286 ) }
    dend_19 { pt3dadd( 411.397, 669.969, 47.8918, 0.682 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_19 { pt3dadd( 412.276, 670.685, 48.5184, 0.6214 ) }
    dend_19 { pt3dadd( 413.344, 671.012, 48.9535, 0.6132 ) }
    dend_19 { pt3dadd( 414.452, 670.973, 49.3475, 0.5494 ) }
    dend_19 { pt3dadd( 415.586, 670.956, 49.7325, 0.4388 ) }
    dend_19 { pt3dadd( 416.654, 671.204, 49.9895, 0.4256 ) }
    dend_19 { pt3dadd( 417.712, 671.528, 50.381, 0.3844 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 6/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 400.616, 663.761, 39.7522, 0.6904 ) }
    dend_18 { pt3dadd( 401.748, 664.289, 40.3967, 0.4576 ) }
    dend_18 { pt3dadd( 402.141, 664.024, 42.6863, 0.4802 ) }
    dend_18 { pt3dadd( 402.478, 664.172, 43.759, 0.5412 ) }
    dend_18 { pt3dadd( 403.317, 664.402, 44.8064, 0.6392 ) }
    dend_18 { pt3dadd( 404.318, 664.195, 45.535, 0.6642 ) }
    dend_18 { pt3dadd( 405.386, 663.936, 46.0457, 0.558 ) }
    dend_18 { pt3dadd( 406.46, 663.555, 46.4626, 0.4136 ) }
    dend_18 { pt3dadd( 407.488, 663.062, 46.8174, 0.3484 ) }
    dend_18 { pt3dadd( 407.775, 662.947, 47.4981, 0.3898 ) }
    dend_18 { pt3dadd( 408.615, 663.078, 48.3711, 0.3646 ) }
    dend_18 { pt3dadd( 409.569, 663.669, 49.1095, 0.3562 ) }
    dend_18 { pt3dadd( 410.663, 663.863, 49.8114, 0.382 ) }
    dend_18 { pt3dadd( 411.673, 663.399, 50.4848, 0.4582 ) }
    dend_18 { pt3dadd( 412.525, 662.66, 51.1347, 0.6898 ) }
    dend_18 { pt3dadd( 413.306, 661.83, 51.73, 0.6822 ) }
    dend_18 { pt3dadd( 414.199, 661.188, 52.4017, 0.7292 ) }
    dend_18 { pt3dadd( 414.885, 661.362, 53.3697, 0.5206 ) }
    dend_18 { pt3dadd( 415.63, 661.552, 54.4659, 0.4256 ) }
    dend_18 { pt3dadd( 416.19, 661.203, 55.6209, 0.4334 ) }
    dend_18 { pt3dadd( 416.792, 660.939, 56.8434, 0.4716 ) }
    dend_18 { pt3dadd( 417.567, 661.559, 57.9233, 0.4272 ) }
    dend_18 { pt3dadd( 418.01, 662.518, 58.8196, 0.4462 ) }
    dend_18 { pt3dadd( 417.86, 663.553, 59.3975, 0.447 ) }
    dend_18 { pt3dadd( 418.021, 664.627, 59.7629, 0.3868 ) }
    dend_18 { pt3dadd( 418.386, 665.689, 59.9634, 0.3458 ) }
    dend_18 { pt3dadd( 418.96, 666.652, 60.0986, 0.385 ) }
    dend_18 { pt3dadd( 419.263, 667.574, 60.0785, 0.355 ) }
    dend_18 { pt3dadd( 419.162, 668.649, 60.2151, 0.3402 ) }
    dend_18 { pt3dadd( 419.043, 669.725, 60.5856, 0.3434 ) }
    dend_18 { pt3dadd( 418.885, 670.854, 61.0484, 0.43 ) }
    dend_18 { pt3dadd( 418.818, 671.99, 61.6042, 0.4284 ) }
    dend_18 { pt3dadd( 418.856, 672.994, 62.3913, 0.526 ) }
    dend_18 { pt3dadd( 419.219, 673.781, 63.4245, 0.4478 ) }
    dend_18 { pt3dadd( 419.391, 674.517, 64.6204, 0.4162 ) }
    dend_18 { pt3dadd( 419.193, 675.583, 65.746, 0.4938 ) }
    dend_18 { pt3dadd( 418.521, 676.439, 66.7699, 0.433 ) }
    dend_18 { pt3dadd( 418.027, 677.389, 67.5984, 0.4002 ) }
    dend_18 { pt3dadd( 417.711, 678.095, 68.5972, 0.4094 ) }
    dend_18 { pt3dadd( 417.98, 678.393, 69.8373, 0.5426 ) }
    dend_18 { pt3dadd( 418.585, 679.336, 70.9388, 0.684 ) }
    dend_18 { pt3dadd( 418.829, 680.254, 72.1246, 0.7724 ) }
    dend_18 { pt3dadd( 418.652, 681.284, 73.3062, 0.6358 ) }
    dend_18 { pt3dadd( 418.395, 682.343, 74.3938, 0.467 ) }
    dend_18 { pt3dadd( 417.942, 683.235, 75.4037, 0.4322 ) }
    dend_18 { pt3dadd( 418.504, 683.979, 76.3479, 0.3904 ) }
    dend_18 { pt3dadd( 418.421, 684.048, 77.4662, 0.4302 ) }
    dend_18 { pt3dadd( 418.928, 684.532, 78.6604, 0.393 ) }
    dend_18 { pt3dadd( 419.539, 685.384, 79.7126, 0.4052 ) }
    dend_18 { pt3dadd( 420.315, 686.177, 80.5157, 0.4908 ) }
    dend_18 { pt3dadd( 420.632, 687.227, 81.1381, 0.5734 ) }
    dend_18 { pt3dadd( 420.595, 688.251, 81.7807, 0.6382 ) }
    dend_18 { pt3dadd( 420.219, 689.293, 82.3155, 0.7292 ) }
    dend_18 { pt3dadd( 419.549, 690.183, 82.7028, 0.8114 ) }
    dend_18 { pt3dadd( 419.063, 690.874, 83.3384, 0.6964 ) }
    dend_18 { pt3dadd( 418.807, 691.905, 84.0837, 0.637 ) }
    dend_18 { pt3dadd( 418.762, 692.983, 84.8784, 0.4674 ) }
    dend_18 { pt3dadd( 418.983, 694.055, 85.6215, 0.4414 ) }
    dend_18 { pt3dadd( 419.388, 694.888, 86.4676, 0.3656 ) }
    dend_18 { pt3dadd( 419.188, 695.96, 87.2838, 0.3596 ) }
    dend_18 { pt3dadd( 418.909, 696.981, 88.0687, 0.3818 ) }
    dend_18 { pt3dadd( 418.878, 698.002, 88.8552, 0.4892 ) }
    dend_18 { pt3dadd( 418.832, 699.114, 89.4653, 0.5954 ) }
    dend_18 { pt3dadd( 419.034, 700.223, 89.8696, 0.557 ) }
    dend_18 { pt3dadd( 419.257, 701.283, 90.2787, 0.4836 ) }
    dend_18 { pt3dadd( 419.426, 702.362, 90.711, 0.3594 ) }
    dend_18 { pt3dadd( 419.747, 703.403, 91.0983, 0.3 ) }
    dend_18 { pt3dadd( 419.842, 704.445, 91.2976, 0.2746 ) }
    dend_18 { pt3dadd( 419.736, 705.56, 91.5751, 0.2746 ) }
    dend_18 { pt3dadd( 419.671, 706.635, 91.9394, 0.2746 ) }
    dend_18 { pt3dadd( 419.917, 707.688, 92.3233, 0.2746 ) }
    dend_18 { pt3dadd( 420.077, 708.735, 92.7268, 0.2746 ) }
    dend_18 { pt3dadd( 419.921, 709.827, 93.1022, 0.2746 ) }
    dend_18 { pt3dadd( 419.589, 710.914, 93.3923, 0.2746 ) }
    dend_18 { pt3dadd( 418.909, 711.751, 93.4301, 0.2746 ) }
    dend_18 { pt3dadd( 418.172, 712.615, 93.4074, 0.2746 ) }
    dend_18 { pt3dadd( 417.337, 713.308, 93.1896, 0.2744 ) }
    dend_18 { pt3dadd( 416.512, 714.08, 92.9628, 0.2744 ) }
    dend_18 { pt3dadd( 416.297, 715.203, 92.7402, 0.2742 ) }
    dend_18 { pt3dadd( 416.202, 716.328, 92.5145, 0.274 ) }
    dend_18 { pt3dadd( 415.699, 717.341, 92.2303, 0.2736 ) }
    dend_18 { pt3dadd( 415.31, 718.408, 91.9139, 0.2728 ) }
    dend_18 { pt3dadd( 415.055, 719.521, 91.5466, 0.2712 ) }
    dend_18 { pt3dadd( 414.814, 720.626, 91.11, 0.2684 ) }
    dend_18 { pt3dadd( 414.954, 721.692, 90.5498, 0.2626 ) }
    dend_18 { pt3dadd( 415.065, 722.595, 89.7876, 0.2542 ) }
    dend_18 { pt3dadd( 414.777, 723.482, 88.8936, 0.2288 ) }
    dend_18 { pt3dadd( 415.158, 724.038, 86.52, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 94/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 436.068, 652.385, 48.1541, 0.4656 ) }
    dend_16 { pt3dadd( 436.508, 652.507, 47.5854, 0.2288 ) }
    dend_16 { pt3dadd( 437.513, 652.524, 47.5866, 0.3056 ) }
    dend_16 { pt3dadd( 438.388, 652.686, 47.6524, 0.3328 ) }
    dend_16 { pt3dadd( 439.249, 652.403, 47.997, 0.3792 ) }
    dend_16 { pt3dadd( 440.357, 652.443, 48.3115, 0.4846 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( 441.298, 652.996, 48.7295, 0.5856 ) }
    dend_16 { pt3dadd( 442.273, 653.547, 49.1509, 0.5454 ) }
    dend_16 { pt3dadd( 443.384, 653.672, 49.49, 0.4314 ) }
    dend_16 { pt3dadd( 444.382, 653.885, 49.9106, 0.4118 ) }
    dend_16 { pt3dadd( 445.517, 653.972, 50.1827, 0.359 ) }
    dend_16 { pt3dadd( 446.536, 654.169, 50.3773, 0.3412 ) }
    dend_16 { pt3dadd( 447.273, 654.526, 50.7184, 0.3764 ) }
    dend_16 { pt3dadd( 448.22, 655.151, 50.9561, 0.3396 ) }
    dend_16 { pt3dadd( 449.28, 655.503, 51.0314, 0.3104 ) }
    dend_16 { pt3dadd( 450.038, 655.406, 50.7559, 0.2942 ) }
    dend_16 { pt3dadd( 451.083, 655.527, 50.512, 0.3104 ) }
    dend_16 { pt3dadd( 452.191, 655.725, 50.3182, 0.343 ) }
    dend_16 { pt3dadd( 453.288, 655.997, 50.08, 0.392 ) }
    dend_16 { pt3dadd( 454.286, 656.443, 49.7596, 0.5378 ) }
    dend_16 { pt3dadd( 455.037, 656.881, 49.2962, 0.5422 ) }
    dend_16 { pt3dadd( 455.658, 657.404, 48.7217, 0.4672 ) }
    dend_16 { pt3dadd( 456.48, 658.143, 48.246, 0.5042 ) }
    dend_16 { pt3dadd( 457.043, 659.068, 47.9094, 0.4052 ) }
    dend_16 { pt3dadd( 457.971, 659.409, 47.8377, 0.3474 ) }
    dend_16 { pt3dadd( 459.064, 659.731, 47.78, 0.3162 ) }
    dend_16 { pt3dadd( 460.121, 660.161, 47.7229, 0.3478 ) }
    dend_16 { pt3dadd( 461.134, 660.479, 47.56, 0.4302 ) }
    dend_16 { pt3dadd( 462.181, 660.51, 47.2368, 0.466 ) }
    dend_16 { pt3dadd( 463.179, 660.993, 46.9468, 0.4154 ) }
    dend_16 { pt3dadd( 464.257, 660.928, 46.8157, 0.4308 ) }
    dend_16 { pt3dadd( 465.26, 660.99, 46.7617, 0.3876 ) }
    dend_16 { pt3dadd( 466.133, 661.479, 46.5046, 0.426 ) }
    dend_16 { pt3dadd( 467.1, 661.572, 46.1051, 0.379 ) }
    dend_16 { pt3dadd( 468.158, 661.892, 45.7828, 0.4094 ) }
    dend_16 { pt3dadd( 469.122, 662.481, 45.449, 0.3532 ) }
    dend_16 { pt3dadd( 470.205, 662.769, 45.1612, 0.3368 ) }
    dend_16 { pt3dadd( 471.306, 663.073, 44.9445, 0.3374 ) }
    dend_16 { pt3dadd( 472.431, 663.197, 44.8137, 0.4174 ) }
    dend_16 { pt3dadd( 473.525, 663.433, 44.5992, 0.4124 ) }
    dend_16 { pt3dadd( 474.628, 663.527, 44.42, 0.4604 ) }
    dend_16 { pt3dadd( 475.667, 663.749, 44.2652, 0.5 ) }
    dend_16 { pt3dadd( 476.602, 663.901, 43.8841, 0.356 ) }
    dend_16 { pt3dadd( 477.391, 663.863, 42.28, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 38/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 436.068, 652.385, 48.1541, 0.4656 ) }
    dend_15 { pt3dadd( 437.056, 652.302, 48.3115, 0.56 ) }
    dend_15 { pt3dadd( 437.845, 651.713, 48.6833, 0.68 ) }
    dend_15 { pt3dadd( 438.635, 651.152, 49.1652, 0.7118 ) }
    dend_15 { pt3dadd( 439.753, 650.989, 49.5312, 0.7822 ) }
    dend_15 { pt3dadd( 440.875, 650.827, 49.889, 0.8568 ) }
    dend_15 { pt3dadd( 441.918, 650.399, 50.2628, 0.8076 ) }
    dend_15 { pt3dadd( 442.839, 649.806, 50.7382, 0.7128 ) }
    dend_15 { pt3dadd( 443.649, 649.402, 51.4427, 0.5542 ) }
    dend_15 { pt3dadd( 444.389, 649.149, 52.3947, 0.4054 ) }
    dend_15 { pt3dadd( 445.432, 649.322, 53.3478, 0.3394 ) }
    dend_15 { pt3dadd( 446.421, 648.973, 54.1464, 0.3426 ) }
    dend_15 { pt3dadd( 447.392, 648.884, 54.9489, 0.4258 ) }
    dend_15 { pt3dadd( 448.495, 649.012, 55.6676, 0.4332 ) }
    dend_15 { pt3dadd( 449.146, 649.46, 56.4449, 0.474 ) }
    dend_15 { pt3dadd( 449.022, 648.476, 57.2376, 0.6468 ) }
    dend_15 { pt3dadd( 449.337, 647.419, 57.8687, 0.7234 ) }
    dend_15 { pt3dadd( 450.119, 646.657, 58.3783, 0.906 ) }
    dend_15 { pt3dadd( 450.839, 646.13, 59.0173, 0.8172 ) }
    dend_15 { pt3dadd( 451.83, 645.949, 59.6786, 0.6688 ) }
    dend_15 { pt3dadd( 452.837, 645.987, 60.3949, 0.5442 ) }
    dend_15 { pt3dadd( 453.945, 646.093, 61.0526, 0.4966 ) }
    dend_15 { pt3dadd( 454.899, 646.443, 61.6493, 0.434 ) }
    dend_15 { pt3dadd( 455.822, 646.753, 62.1205, 0.4226 ) }
    dend_15 { pt3dadd( 456.845, 646.565, 62.6139, 0.5784 ) }
    dend_15 { pt3dadd( 457.518, 645.696, 63.1851, 0.4658 ) }
    dend_15 { pt3dadd( 458.331, 645.141, 63.9187, 0.3764 ) }
    dend_15 { pt3dadd( 459.27, 645.076, 64.7867, 0.3168 ) }
    dend_15 { pt3dadd( 460.037, 645.588, 65.7143, 0.3784 ) }
    dend_15 { pt3dadd( 460.522, 646.376, 66.6291, 0.343 ) }
    dend_15 { pt3dadd( 461.495, 646.506, 67.4366, 0.317 ) }
    dend_15 { pt3dadd( 462.517, 646.112, 67.9266, 0.306 ) }
    dend_15 { pt3dadd( 463.536, 645.685, 68.1388, 0.3336 ) }
    dend_15 { pt3dadd( 464.574, 645.32, 68.1383, 0.3808 ) }
    dend_15 { pt3dadd( 465.664, 645.092, 68.0971, 0.4866 ) }
    dend_15 { pt3dadd( 466.727, 644.701, 68.1097, 0.5954 ) }
    dend_15 { pt3dadd( 467.848, 644.633, 68.2066, 0.5336 ) }
    dend_15 { pt3dadd( 468.97, 644.532, 68.3852, 0.5546 ) }
    dend_15 { pt3dadd( 470.057, 644.311, 68.5448, 0.6222 ) }
    dend_15 { pt3dadd( 471.064, 644.04, 68.8601, 0.608 ) }
    dend_15 { pt3dadd( 472.134, 643.684, 69.1645, 0.5736 ) }
    dend_15 { pt3dadd( 473.188, 643.294, 69.3512, 0.5474 ) }
    dend_15 { pt3dadd( 474.076, 642.617, 69.4562, 0.5458 ) }
    dend_15 { pt3dadd( 474.954, 641.955, 69.6231, 0.543 ) }
    dend_15 { pt3dadd( 475.549, 641.197, 69.5439, 0.5366 ) }
    dend_15 { pt3dadd( 476.156, 640.351, 69.4812, 0.532 ) }
    dend_15 { pt3dadd( 476.722, 639.515, 69.6858, 0.4878 ) }
    dend_15 { pt3dadd( 477.438, 638.729, 70.0532, 0.5788 ) }
    dend_15 { pt3dadd( 478.475, 638.581, 70.5076, 0.5946 ) }
    dend_15 { pt3dadd( 479.566, 638.619, 70.7969, 0.451 ) }
    dend_15 { pt3dadd( 480.659, 638.853, 71.1183, 0.338 ) }
    dend_15 { pt3dadd( 481.768, 639.006, 71.3882, 0.2988 ) }
    dend_15 { pt3dadd( 482.882, 639.143, 71.5798, 0.3144 ) }
    dend_15 { pt3dadd( 484.008, 639.061, 71.6825, 0.374 ) }
    dend_15 { pt3dadd( 485.141, 638.919, 71.8038, 0.335 ) }
    dend_15 { pt3dadd( 486.147, 638.727, 72.1213, 0.3018 ) }
    dend_15 { pt3dadd( 487.286, 638.674, 72.3867, 0.278 ) }
    dend_15 { pt3dadd( 488.367, 638.632, 72.6183, 0.2812 ) }
    dend_15 { pt3dadd( 489.372, 638.675, 73.024, 0.2864 ) }
    dend_15 { pt3dadd( 490.406, 638.986, 73.4062, 0.2978 ) }
    dend_15 { pt3dadd( 491.395, 639.489, 73.7761, 0.3122 ) }
    dend_15 { pt3dadd( 492.5, 639.631, 74.0348, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_15 { pt3dadd( 493.546, 639.88, 74.0995, 0.3276 ) }
    dend_15 { pt3dadd( 494.62, 639.951, 74.2395, 0.2882 ) }
    dend_15 { pt3dadd( 495.76, 639.978, 74.3498, 0.2542 ) }
    dend_15 { pt3dadd( 496.84, 639.638, 74.4904, 0.2288 ) }
    dend_15 { pt3dadd( 497.983, 639.61, 74.76, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_0 (entry count 5/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 397.034, 647.395, 39.6278, 0.3188 ) }
    apic_18 { pt3dadd( 396.806, 647.125, 41.202, 0.2288 ) }
    apic_18 { pt3dadd( 396.169, 646.331, 42.3791, 0.3232 ) }
    apic_18 { pt3dadd( 395.294, 646.027, 42.9601, 0.3542 ) }
    apic_18 { pt3dadd( 394.201, 646.215, 43.5064, 0.4734 ) }
    apic_18 { pt3dadd( 393.079, 646.381, 43.8693, 0.3952 ) }
    apic_18 { pt3dadd( 391.962, 646.582, 44.086, 0.3292 ) }
    apic_18 { pt3dadd( 390.836, 646.714, 44.2484, 0.2816 ) }
    apic_18 { pt3dadd( 389.737, 646.791, 44.4279, 0.2874 ) }
    apic_18 { pt3dadd( 388.663, 647.092, 44.5875, 0.2994 ) }
    apic_18 { pt3dadd( 387.704, 647.706, 44.6835, 0.3156 ) }
    apic_18 { pt3dadd( 386.796, 648.363, 44.6793, 0.376 ) }
    apic_18 { pt3dadd( 385.76, 648.7, 44.5715, 0.3386 ) }
    apic_18 { pt3dadd( 384.665, 648.519, 44.4237, 0.309 ) }
    apic_18 { pt3dadd( 383.654, 648.035, 44.3654, 0.291 ) }
    apic_18 { pt3dadd( 382.684, 647.507, 44.422, 0.3062 ) }
    apic_18 { pt3dadd( 381.661, 646.998, 44.4914, 0.3278 ) }
    apic_18 { pt3dadd( 380.628, 646.517, 44.5631, 0.399 ) }
    apic_18 { pt3dadd( 379.617, 645.986, 44.6068, 0.3806 ) }
    apic_18 { pt3dadd( 378.599, 645.496, 44.5438, 0.3898 ) }
    apic_18 { pt3dadd( 377.55, 645.123, 44.3419, 0.4248 ) }
    apic_18 { pt3dadd( 376.49, 644.786, 44.0507, 0.632 ) }
    apic_18 { pt3dadd( 375.408, 644.523, 43.7304, 0.5546 ) }
    apic_18 { pt3dadd( 374.286, 644.416, 43.4608, 0.5922 ) }
    apic_18 { pt3dadd( 373.148, 644.344, 43.3272, 0.4688 ) }
    apic_18 { pt3dadd( 372.038, 644.114, 43.3166, 0.4914 ) }
    apic_18 { pt3dadd( 370.964, 643.724, 43.3896, 0.4564 ) }
    apic_18 { pt3dadd( 369.902, 643.317, 43.5462, 0.5368 ) }
    apic_18 { pt3dadd( 368.843, 642.929, 43.7858, 0.6674 ) }
    apic_18 { pt3dadd( 367.741, 642.713, 44.0476, 0.541 ) }
    apic_18 { pt3dadd( 366.623, 642.858, 44.2812, 0.4942 ) }
    apic_18 { pt3dadd( 365.554, 643.251, 44.504, 0.4122 ) }
    apic_18 { pt3dadd( 364.521, 643.707, 44.7518, 0.4652 ) }
    apic_18 { pt3dadd( 363.472, 644.123, 45.0005, 0.4846 ) }
    apic_18 { pt3dadd( 362.363, 644.231, 45.2024, 0.4448 ) }
    apic_18 { pt3dadd( 361.342, 643.823, 45.3824, 0.5096 ) }
    apic_18 { pt3dadd( 360.567, 643.024, 45.5599, 0.4152 ) }
    apic_18 { pt3dadd( 359.958, 642.067, 45.6772, 0.3656 ) }
    apic_18 { pt3dadd( 359.344, 641.109, 45.6688, 0.3524 ) }
    apic_18 { pt3dadd( 358.618, 640.252, 45.5176, 0.4032 ) }
    apic_18 { pt3dadd( 357.73, 639.56, 45.2766, 0.5898 ) }
    apic_18 { pt3dadd( 356.802, 638.894, 44.9952, 0.4868 ) }
    apic_18 { pt3dadd( 355.984, 638.106, 44.6662, 0.4162 ) }
    apic_18 { pt3dadd( 355.189, 637.328, 44.2562, 0.3864 ) }
    apic_18 { pt3dadd( 354.424, 636.564, 43.7508, 0.5278 ) }
    apic_18 { pt3dadd( 354.116, 635.606, 43.178, 0.5218 ) }
    apic_18 { pt3dadd( 354.222, 634.499, 42.616, 0.4392 ) }
    apic_18 { pt3dadd( 354.013, 633.425, 42.1327, 0.4038 ) }
    apic_18 { pt3dadd( 353.253, 632.631, 41.7287, 0.4536 ) }
    apic_18 { pt3dadd( 352.259, 632.202, 41.3146, 0.6722 ) }
    apic_18 { pt3dadd( 351.176, 632.07, 40.8957, 0.6922 ) }
    apic_18 { pt3dadd( 350.047, 632.06, 40.5854, 0.5416 ) }
    apic_18 { pt3dadd( 348.908, 632.059, 40.371, 0.4868 ) }
    apic_18 { pt3dadd( 347.797, 632.054, 40.1288, 0.4402 ) }
    apic_18 { pt3dadd( 346.69, 632.02, 39.8499, 0.543 ) }
    apic_18 { pt3dadd( 345.589, 631.807, 39.5968, 0.5026 ) }
    apic_18 { pt3dadd( 344.544, 631.434, 39.4775, 0.4042 ) }
    apic_18 { pt3dadd( 343.455, 631.194, 39.4414, 0.337 ) }
    apic_18 { pt3dadd( 342.315, 631.127, 39.415, 0.339 ) }
    apic_18 { pt3dadd( 341.176, 631.036, 39.3946, 0.4142 ) }
    apic_18 { pt3dadd( 340.062, 630.797, 39.3358, 0.4352 ) }
    apic_18 { pt3dadd( 338.993, 630.401, 39.205, 0.3636 ) }
    apic_18 { pt3dadd( 337.987, 629.89, 38.9704, 0.3082 ) }
    apic_18 { pt3dadd( 336.949, 629.471, 38.6403, 0.2896 ) }
    apic_18 { pt3dadd( 335.848, 629.27, 38.2547, 0.3024 ) }
    apic_18 { pt3dadd( 334.742, 629.093, 37.83, 0.3272 ) }
    apic_18 { pt3dadd( 333.632, 628.909, 37.4052, 0.3674 ) }
    apic_18 { pt3dadd( 332.516, 628.826, 36.997, 0.4692 ) }
    apic_18 { pt3dadd( 331.397, 628.713, 36.638, 0.5266 ) }
    apic_18 { pt3dadd( 330.317, 628.508, 36.304, 0.5838 ) }
    apic_18 { pt3dadd( 329.202, 628.429, 36.0567, 0.4704 ) }
    apic_18 { pt3dadd( 328.128, 628.531, 36.0553, 0.4108 ) }
    apic_18 { pt3dadd( 327.08, 628.854, 36.2379, 0.4842 ) }
    apic_18 { pt3dadd( 326.064, 629.343, 36.5078, 0.415 ) }
    apic_18 { pt3dadd( 325.04, 629.842, 36.7937, 0.3668 ) }
    apic_18 { pt3dadd( 323.935, 630.105, 37.0381, 0.3462 ) }
    apic_18 { pt3dadd( 322.849, 629.936, 37.2901, 0.4328 ) }
    apic_18 { pt3dadd( 321.841, 629.469, 37.5113, 0.4444 ) }
    apic_18 { pt3dadd( 320.892, 628.845, 37.6354, 0.5022 ) }
    apic_18 { pt3dadd( 320.031, 628.096, 37.6225, 0.6628 ) }
    apic_18 { pt3dadd( 319.217, 627.292, 37.4629, 0.9298 ) }
    apic_18 { pt3dadd( 318.414, 626.478, 37.1406, 1.1164 ) }
    apic_18 { pt3dadd( 317.637, 625.687, 36.584, 1.1298 ) }
    apic_18 { pt3dadd( 316.805, 625.095, 35.7566, 0.9384 ) }
    apic_18 { pt3dadd( 315.879, 625.012, 34.6472, 0.7174 ) }
    apic_18 { pt3dadd( 315.23, 625.639, 33.3528, 0.8022 ) }
    apic_18 { pt3dadd( 314.919, 626.537, 31.9864, 0.8474 ) }
    apic_18 { pt3dadd( 315.059, 627.372, 30.5808, 0.788 ) }
    apic_18 { pt3dadd( 315.242, 628.42, 29.3376, 0.4576 ) }
    apic_18 { pt3dadd( 315.023, 629.013, 26.5944, 0.2288 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 95/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 397.034, 647.395, 39.6278, 0.3188 ) }
    apic_1 { pt3dadd( 397.4, 647.535, 41.4344, 0.352 ) }
    apic_1 { pt3dadd( 398.46, 647.585, 43.0223, 0.4396 ) }
    apic_1 { pt3dadd( 399.525, 647.463, 44.3817, 0.4768 ) }
    apic_1 { pt3dadd( 400.507, 646.907, 45.4317, 0.4666 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_1 { pt3dadd( 401.434, 646.312, 46.2434, 0.3748 ) }
    apic_1 { pt3dadd( 402.337, 645.634, 46.9529, 0.3288 ) }
    apic_1 { pt3dadd( 403.089, 644.828, 47.6386, 0.3276 ) }
    apic_1 { pt3dadd( 404.025, 644.185, 48.2709, 0.3744 ) }
    apic_1 { pt3dadd( 404.943, 643.632, 48.9611, 0.4522 ) }
    apic_1 { pt3dadd( 405.645, 642.993, 49.7753, 0.6402 ) }
    apic_1 { pt3dadd( 406.54, 642.484, 50.6038, 0.7768 ) }
    apic_1 { pt3dadd( 407.493, 641.881, 51.3069, 0.6856 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 8/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 424.932, 663.57, 36.325, 0.5952 ) }
    dend_12 { pt3dadd( 424.828, 663.565, 35.0829, 0.2288 ) }
    dend_12 { pt3dadd( 424.498, 664.063, 34.3924, 0.383 ) }
    dend_12 { pt3dadd( 424.053, 664.943, 34.2356, 0.504 ) }
    dend_12 { pt3dadd( 423.44, 665.785, 33.9942, 0.562 ) }
    dend_12 { pt3dadd( 422.62, 666.56, 33.8705, 0.7908 ) }
    dend_12 { pt3dadd( 421.835, 667.375, 33.8066, 0.855 ) }
    dend_12 { pt3dadd( 421.148, 668.199, 33.9172, 0.892 ) }
    dend_12 { pt3dadd( 420.891, 669.271, 34.1342, 0.8998 ) }
    dend_12 { pt3dadd( 420.883, 670.384, 34.3874, 0.9814 ) }
    dend_12 { pt3dadd( 421.326, 671.431, 34.5696, 1.0362 ) }
    dend_12 { pt3dadd( 421.548, 672.518, 34.6287, 0.919 ) }
    dend_12 { pt3dadd( 422.022, 673.374, 34.473, 0.619 ) }
    dend_12 { pt3dadd( 422.373, 674.456, 34.3252, 0.4662 ) }
    dend_12 { pt3dadd( 422.842, 675.471, 34.1261, 0.5108 ) }
    dend_12 { pt3dadd( 423.298, 676.475, 33.899, 0.604 ) }
    dend_12 { pt3dadd( 423.33, 677.589, 33.6596, 0.7268 ) }
    dend_12 { pt3dadd( 422.807, 678.543, 33.3754, 0.7384 ) }
    dend_12 { pt3dadd( 422.573, 679.631, 33.18, 0.8934 ) }
    dend_12 { pt3dadd( 422.137, 680.656, 32.8429, 0.7622 ) }
    dend_12 { pt3dadd( 421.563, 681.611, 32.4156, 0.721 ) }
    dend_12 { pt3dadd( 421.02, 682.503, 31.8338, 0.5778 ) }
    dend_12 { pt3dadd( 420.572, 683.454, 31.1478, 0.6384 ) }
    dend_12 { pt3dadd( 420.068, 684.36, 30.3663, 0.7678 ) }
    dend_12 { pt3dadd( 419.434, 685.261, 29.6344, 0.925 ) }
    dend_12 { pt3dadd( 418.869, 686.185, 28.8938, 0.9308 ) }
    dend_12 { pt3dadd( 417.897, 686.702, 28.1767, 0.9572 ) }
    dend_12 { pt3dadd( 417.035, 687.287, 27.5525, 0.9308 ) }
    dend_12 { pt3dadd( 416.266, 687.877, 26.7855, 0.7882 ) }
    dend_12 { pt3dadd( 415.312, 688.345, 25.9743, 0.7494 ) }
    dend_12 { pt3dadd( 414.835, 688.881, 25.0079, 0.7272 ) }
    dend_12 { pt3dadd( 413.895, 689.362, 24.1539, 0.6734 ) }
    dend_12 { pt3dadd( 413.112, 689.883, 23.281, 0.6358 ) }
    dend_12 { pt3dadd( 412.714, 690.923, 22.5848, 0.7206 ) }
    dend_12 { pt3dadd( 412.86, 692.044, 22.0435, 0.587 ) }
    dend_12 { pt3dadd( 413.156, 692.883, 21.7865, 0.6052 ) }
    dend_12 { pt3dadd( 413.724, 693.6, 21.7008, 0.4938 ) }
    dend_12 { pt3dadd( 414.095, 694.533, 21.4476, 0.533 ) }
    dend_12 { pt3dadd( 414.885, 695.322, 21.1659, 0.5562 ) }
    dend_12 { pt3dadd( 415.552, 696.084, 20.7418, 0.6114 ) }
    dend_12 { pt3dadd( 416.061, 696.898, 20.2896, 0.6552 ) }
    dend_12 { pt3dadd( 417.108, 696.909, 19.8789, 0.792 ) }
    dend_12 { pt3dadd( 418.13, 697.003, 19.5726, 0.7754 ) }
    dend_12 { pt3dadd( 419.236, 697.181, 19.1786, 0.6826 ) }
    dend_12 { pt3dadd( 419.628, 697.925, 18.5797, 0.5842 ) }
    dend_12 { pt3dadd( 418.928, 698.685, 17.9471, 0.7306 ) }
    dend_12 { pt3dadd( 418.166, 698.717, 17.0673, 0.7786 ) }
    dend_12 { pt3dadd( 418.014, 699.351, 16.0617, 0.5782 ) }
    dend_12 { pt3dadd( 418.94, 699.698, 15.1239, 0.4678 ) }
    dend_12 { pt3dadd( 419.968, 700.109, 14.3977, 0.3688 ) }
    dend_12 { pt3dadd( 420.75, 700.485, 13.75, 0.3588 ) }
    dend_12 { pt3dadd( 421.667, 699.952, 13.089, 0.4124 ) }
    dend_12 { pt3dadd( 422.592, 699.555, 12.3934, 0.3898 ) }
    dend_12 { pt3dadd( 423.527, 699.062, 11.7006, 0.483 ) }
    dend_12 { pt3dadd( 424.538, 698.87, 10.08, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 63/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 424.932, 663.57, 36.325, 0.5952 ) }
    dend_9 { pt3dadd( 425.007, 664.008, 36.5182, 0.6452 ) }
    dend_9 { pt3dadd( 425.299, 665.087, 36.706, 0.675 ) }
    dend_9 { pt3dadd( 425.701, 666.069, 36.9365, 0.5794 ) }
    dend_9 { pt3dadd( 426.237, 667.013, 37.2092, 0.4472 ) }
    dend_9 { pt3dadd( 427.083, 667.747, 37.4382, 0.4408 ) }
    dend_9 { pt3dadd( 427.867, 668.546, 37.5024, 0.4138 ) }
    dend_9 { pt3dadd( 428.796, 669.091, 37.5805, 0.4384 ) }
    dend_9 { pt3dadd( 429.462, 669.857, 37.4172, 0.5788 ) }
    dend_9 { pt3dadd( 430.288, 670.216, 37.0247, 0.607 ) }
    dend_9 { pt3dadd( 431.228, 670.815, 36.6892, 0.6434 ) }
    dend_9 { pt3dadd( 432.227, 671.336, 36.4784, 0.5582 ) }
    dend_9 { pt3dadd( 433.322, 671.386, 36.5086, 0.4548 ) }
    dend_9 { pt3dadd( 434.387, 671.359, 36.5722, 0.4562 ) }
    dend_9 { pt3dadd( 435.361, 671.017, 36.9496, 0.436 ) }
    dend_9 { pt3dadd( 436.395, 670.813, 37.4937, 0.5102 ) }
    dend_9 { pt3dadd( 437.431, 671.047, 38.1648, 0.5638 ) }
    dend_9 { pt3dadd( 438.477, 671.211, 38.9068, 0.6122 ) }
    dend_9 { pt3dadd( 439.499, 671.52, 39.5452, 0.7212 ) }
    dend_9 { pt3dadd( 440.344, 671.584, 40.2763, 0.6006 ) }
    dend_9 { pt3dadd( 441.25, 672.077, 40.9556, 0.5716 ) }
    dend_9 { pt3dadd( 442.266, 672.583, 41.4145, 0.7158 ) }
    dend_9 { pt3dadd( 443.289, 673.039, 41.7432, 0.9374 ) }
    dend_9 { pt3dadd( 444.389, 673.27, 41.9846, 0.885 ) }
    dend_9 { pt3dadd( 445.46, 673.422, 42.1641, 0.7476 ) }
    dend_9 { pt3dadd( 446.57, 673.363, 42.1862, 0.689 ) }
    dend_9 { pt3dadd( 447.577, 673.521, 42.3122, 0.7724 ) }
    dend_9 { pt3dadd( 448.559, 673.906, 42.4782, 0.9096 ) }
    dend_9 { pt3dadd( 449.646, 674.239, 42.6395, 0.7918 ) }
    dend_9 { pt3dadd( 450.772, 674.433, 42.8268, 0.5476 ) }
    dend_9 { pt3dadd( 451.899, 674.486, 43.0052, 0.4498 ) }
    dend_9 { pt3dadd( 452.809, 674.947, 43.4076, 0.376 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 95/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 402.204, 637.636, 29.7259, 0.4452 ) }
    dend_4 { pt3dadd( 402.917, 637.094, 30.8, 0.4576 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 97/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 402.204, 637.636, 29.7259, 0.4452 ) }
    dend_1 { pt3dadd( 400.988, 636.618, 30.1098, 0.4932 ) }
    dend_1 { pt3dadd( 400.668, 635.558, 30.4539, 0.4682 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 400.664, 634.433, 30.5939, 0.518 ) }
    dend_1 { pt3dadd( 400.885, 633.324, 30.5715, 0.6008 ) }
    dend_1 { pt3dadd( 401.435, 632.337, 30.41, 0.5722 ) }
    dend_1 { pt3dadd( 401.908, 631.329, 30.1059, 0.4882 ) }
    dend_1 { pt3dadd( 402.141, 630.21, 29.8105, 0.4816 ) }
    dend_1 { pt3dadd( 402.417, 629.103, 29.5392, 0.6602 ) }
    dend_1 { pt3dadd( 402.448, 627.998, 29.232, 0.7528 ) }
    dend_1 { pt3dadd( 402.385, 626.856, 29.0038, 0.9376 ) }
    dend_1 { pt3dadd( 401.998, 625.81, 28.9257, 0.9872 ) }
    dend_1 { pt3dadd( 401.113, 625.107, 28.8078, 1.1302 ) }
    dend_1 { pt3dadd( 400.129, 624.552, 28.6406, 1.1474 ) }
    dend_1 { pt3dadd( 399.233, 623.841, 28.4878, 1.0086 ) }
    dend_1 { pt3dadd( 398.366, 623.109, 28.3018, 0.895 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 13/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 417.712, 671.528, 50.381, 0.3844 ) }
    dend_21 { pt3dadd( 418.887, 671.349, 49.6485, 0.2288 ) }
    dend_21 { pt3dadd( 419.934, 671.403, 50.4325, 0.3362 ) }
    dend_21 { pt3dadd( 420.966, 671.577, 50.832, 0.378 ) }
    dend_21 { pt3dadd( 422.059, 671.663, 51.3358, 0.5184 ) }
    dend_21 { pt3dadd( 422.887, 671.597, 52.0268, 0.4746 ) }
    dend_21 { pt3dadd( 423.857, 671.521, 52.7881, 0.4964 ) }
    dend_21 { pt3dadd( 424.978, 671.53, 53.4775, 0.494 ) }
    dend_21 { pt3dadd( 426.016, 671.91, 54.0932, 0.4694 ) }
    dend_21 { pt3dadd( 427.15, 671.978, 54.4902, 0.52 ) }
    dend_21 { pt3dadd( 428.285, 671.895, 54.8086, 0.6056 ) }
    dend_21 { pt3dadd( 429.387, 672.111, 55.0472, 0.576 ) }
    dend_21 { pt3dadd( 430.435, 672.235, 55.1107, 0.5198 ) }
    dend_21 { pt3dadd( 431.481, 672.522, 55.2415, 0.421 ) }
    dend_21 { pt3dadd( 432.516, 672.846, 55.5442, 0.4408 ) }
    dend_21 { pt3dadd( 433.491, 672.991, 56.1212, 0.4074 ) }
    dend_21 { pt3dadd( 434.007, 672.162, 56.845, 0.4564 ) }
    dend_21 { pt3dadd( 434.887, 671.967, 57.5974, 0.4672 ) }
    dend_21 { pt3dadd( 434.718, 672.351, 58.553, 0.4178 ) }
    dend_21 { pt3dadd( 434.531, 673.197, 59.5594, 0.435 ) }
    dend_21 { pt3dadd( 434.966, 673.945, 60.4346, 0.3956 ) }
    dend_21 { pt3dadd( 435.473, 673.778, 61.413, 0.4396 ) }
    dend_21 { pt3dadd( 436.429, 673.438, 62.1368, 0.4112 ) }
    dend_21 { pt3dadd( 437.419, 673.175, 62.4795, 0.4348 ) }
    dend_21 { pt3dadd( 438.49, 672.854, 62.7052, 0.5652 ) }
    dend_21 { pt3dadd( 439.358, 672.317, 63.0451, 0.6166 ) }
    dend_21 { pt3dadd( 440.162, 671.69, 63.506, 0.4908 ) }
    dend_21 { pt3dadd( 441.089, 671.059, 63.8366, 0.4152 ) }
    dend_21 { pt3dadd( 441.742, 670.28, 64.1861, 0.4266 ) }
    dend_21 { pt3dadd( 442.826, 670.411, 64.512, 0.6276 ) }
    dend_21 { pt3dadd( 443.917, 670.323, 64.8726, 0.5836 ) }
    dend_21 { pt3dadd( 445.023, 670.043, 65.1641, 0.4648 ) }
    dend_21 { pt3dadd( 446.154, 670.048, 65.4903, 0.4266 ) }
    dend_21 { pt3dadd( 447.24, 670.359, 65.8784, 0.3858 ) }
    dend_21 { pt3dadd( 448.029, 671.011, 66.311, 0.3934 ) }
    dend_21 { pt3dadd( 448.932, 671.475, 66.8654, 0.4626 ) }
    dend_21 { pt3dadd( 449.893, 672.068, 67.4537, 0.5502 ) }
    dend_21 { pt3dadd( 450.749, 672.703, 68.1954, 0.4542 ) }
    dend_21 { pt3dadd( 451.593, 672.603, 69.1242, 0.3858 ) }
    dend_21 { pt3dadd( 451.768, 672.33, 70.2912, 0.4134 ) }
    dend_21 { pt3dadd( 452.642, 672.235, 71.4885, 0.402 ) }
    dend_21 { pt3dadd( 453.597, 672.098, 72.5544, 0.4542 ) }
    dend_21 { pt3dadd( 454.731, 672.208, 73.3947, 0.4258 ) }
    dend_21 { pt3dadd( 455.707, 672.662, 74.0009, 0.5226 ) }
    dend_21 { pt3dadd( 456.326, 673.584, 74.482, 0.434 ) }
    dend_21 { pt3dadd( 456.517, 674.595, 75.014, 0.4268 ) }
    dend_21 { pt3dadd( 457.112, 675.509, 75.4124, 0.3384 ) }
    dend_21 { pt3dadd( 458.117, 675.859, 75.9447, 0.3086 ) }
    dend_21 { pt3dadd( 459.065, 676.093, 76.6466, 0.2902 ) }
    dend_21 { pt3dadd( 459.426, 675.331, 77.3396, 0.3046 ) }
    dend_21 { pt3dadd( 459.579, 674.386, 78.1284, 0.3252 ) }
    dend_21 { pt3dadd( 459.49, 673.412, 78.965, 0.3936 ) }
    dend_21 { pt3dadd( 459.643, 672.284, 79.7098, 0.3722 ) }
    dend_21 { pt3dadd( 459.54, 671.202, 80.267, 0.367 ) }
    dend_21 { pt3dadd( 458.99, 670.325, 80.8567, 0.419 ) }
    dend_21 { pt3dadd( 458.186, 669.722, 81.5522, 0.444 ) }
    dend_21 { pt3dadd( 457.486, 669.533, 82.4138, 0.38 ) }
    dend_21 { pt3dadd( 456.896, 668.946, 83.323, 0.339 ) }
    dend_21 { pt3dadd( 456.895, 667.802, 83.9723, 0.3428 ) }
    dend_21 { pt3dadd( 456.98, 666.667, 84.3531, 0.4212 ) }
    dend_21 { pt3dadd( 457.12, 665.539, 84.485, 0.4492 ) }
    dend_21 { pt3dadd( 457.214, 664.431, 84.401, 0.3842 ) }
    dend_21 { pt3dadd( 457.656, 663.541, 84.0549, 0.3728 ) }
    dend_21 { pt3dadd( 457.856, 662.466, 83.7584, 0.2796 ) }
    dend_21 { pt3dadd( 457.829, 661.37, 83.7124, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 78/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 417.712, 671.528, 50.381, 0.3844 ) }
    dend_20 { pt3dadd( 416.815, 672.027, 50.939, 0.3882 ) }
    dend_20 { pt3dadd( 416.775, 672.654, 51.8034, 0.4656 ) }
    dend_20 { pt3dadd( 417.076, 673.559, 52.7355, 0.495 ) }
    dend_20 { pt3dadd( 417.475, 674.625, 53.4769, 0.6462 ) }
    dend_20 { pt3dadd( 417.361, 675.752, 54.0851, 0.6862 ) }
    dend_20 { pt3dadd( 417.423, 676.889, 54.4986, 0.7822 ) }
    dend_20 { pt3dadd( 417.854, 677.927, 54.7655, 0.8558 ) }
    dend_20 { pt3dadd( 418.71, 678.627, 54.955, 0.8116 ) }
    dend_20 { pt3dadd( 419.758, 678.997, 55.1065, 0.6906 ) }
    dend_20 { pt3dadd( 420.564, 679.772, 55.2152, 0.657 ) }
    dend_20 { pt3dadd( 421.03, 680.773, 55.3921, 0.583 ) }
    dend_20 { pt3dadd( 421.066, 681.897, 55.6377, 0.5028 ) }
    dend_20 { pt3dadd( 420.938, 682.994, 55.9552, 0.5348 ) }
    dend_20 { pt3dadd( 420.766, 684.039, 56.3749, 0.6328 ) }
    dend_20 { pt3dadd( 420.615, 685.126, 56.8044, 0.6272 ) }
    dend_20 { pt3dadd( 420.688, 686.243, 57.078, 0.6104 ) }
    dend_20 { pt3dadd( 420.661, 687.267, 57.0833, 0.61 ) }
    dend_20 { pt3dadd( 420.964, 688.346, 57.0797, 0.6896 ) }
    dend_20 { pt3dadd( 421.005, 689.46, 57.1463, 0.6754 ) }
    dend_20 { pt3dadd( 421.104, 690.532, 57.325, 0.7488 ) }
    dend_20 { pt3dadd( 420.961, 691.637, 57.3793, 0.6294 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_20 { pt3dadd( 420.701, 692.685, 57.3737, 0.5036 ) }
    dend_20 { pt3dadd( 420.418, 693.724, 57.5179, 0.4928 ) }
    dend_20 { pt3dadd( 420.469, 694.837, 57.6358, 0.5366 ) }
    dend_20 { pt3dadd( 420.992, 695.817, 57.6867, 0.537 ) }
    dend_20 { pt3dadd( 421.682, 696.728, 57.7114, 0.7014 ) }
    dend_20 { pt3dadd( 422.133, 697.759, 57.7436, 0.6696 ) }
    dend_20 { pt3dadd( 422.454, 698.844, 57.7231, 0.6436 ) }
    dend_20 { pt3dadd( 422.883, 699.863, 57.7394, 0.663 ) }
    dend_20 { pt3dadd( 423.596, 700.621, 57.8424, 0.6014 ) }
    dend_20 { pt3dadd( 424.268, 701.242, 57.6797, 0.7302 ) }
    dend_20 { pt3dadd( 425.198, 701.847, 57.5268, 0.7048 ) }
    dend_20 { pt3dadd( 426.173, 702.357, 57.4983, 0.5674 ) }
    dend_20 { pt3dadd( 427.102, 702.969, 57.4384, 0.5218 ) }
    dend_20 { pt3dadd( 428.013, 703.581, 57.3062, 0.567 ) }
    dend_20 { pt3dadd( 428.982, 704.178, 57.2158, 0.4788 ) }
    dend_20 { pt3dadd( 429.988, 704.661, 57.1026, 0.4634 ) }
    dend_20 { pt3dadd( 430.952, 705.236, 57.015, 0.4024 ) }
    dend_20 { pt3dadd( 431.68, 706.094, 56.9747, 0.4472 ) }
    dend_20 { pt3dadd( 432.145, 707.037, 56.9173, 0.4488 ) }
    dend_20 { pt3dadd( 432.149, 708.136, 57.0377, 0.3904 ) }
    dend_20 { pt3dadd( 431.916, 709.191, 57.1329, 0.352 ) }
    dend_20 { pt3dadd( 431.641, 710.167, 57.4109, 0.3976 ) }
    dend_20 { pt3dadd( 431.223, 711.206, 57.731, 0.3734 ) }
    dend_20 { pt3dadd( 431.672, 712.226, 58.0658, 0.3988 ) }
    dend_20 { pt3dadd( 432.556, 712.806, 58.4595, 0.334 ) }
    dend_20 { pt3dadd( 433.669, 712.874, 58.8423, 0.3 ) }
    dend_20 { pt3dadd( 434.484, 713.612, 59.2183, 0.2748 ) }
    dend_20 { pt3dadd( 435.314, 714.393, 59.5501, 0.2748 ) }
    dend_20 { pt3dadd( 436.165, 715.154, 59.8164, 0.2752 ) }
    dend_20 { pt3dadd( 437.056, 715.871, 60.0379, 0.2758 ) }
    dend_20 { pt3dadd( 437.945, 716.549, 60.279, 0.2768 ) }
    dend_20 { pt3dadd( 438.83, 717.025, 60.6553, 0.2786 ) }
    dend_20 { pt3dadd( 439.759, 717.442, 61.08, 0.282 ) }
    dend_20 { pt3dadd( 440.777, 717.945, 61.3626, 0.2882 ) }
    dend_20 { pt3dadd( 441.658, 718.386, 61.3726, 0.3008 ) }
    dend_20 { pt3dadd( 442.706, 718.772, 61.3494, 0.3178 ) }
    dend_20 { pt3dadd( 443.675, 719.239, 61.4636, 0.3804 ) }
    dend_20 { pt3dadd( 443.965, 720.32, 61.6316, 0.3466 ) }
    dend_20 { pt3dadd( 443.812, 721.33, 61.7879, 0.3248 ) }
    dend_20 { pt3dadd( 444.241, 721.843, 61.7644, 0.3152 ) }
    dend_20 { pt3dadd( 444.613, 722.64, 62.0782, 0.3754 ) }
    dend_20 { pt3dadd( 445.225, 723.381, 62.4484, 0.3376 ) }
    dend_20 { pt3dadd( 445.99, 724.207, 62.8676, 0.3068 ) }
    dend_20 { pt3dadd( 447.004, 724.662, 63.3338, 0.287 ) }
    dend_20 { pt3dadd( 447.862, 724.829, 64.1133, 0.2986 ) }
    dend_20 { pt3dadd( 448.893, 724.706, 65.0238, 0.314 ) }
    dend_20 { pt3dadd( 449.945, 724.298, 65.8045, 0.3732 ) }
    dend_20 { pt3dadd( 450.785, 723.627, 66.6557, 0.3336 ) }
    dend_20 { pt3dadd( 451.317, 723.598, 67.7821, 0.2994 ) }
    dend_20 { pt3dadd( 452.036, 724.008, 69.0586, 0.2736 ) }
    dend_20 { pt3dadd( 452.065, 725.048, 70.2128, 0.2728 ) }
    dend_20 { pt3dadd( 452.044, 725.886, 71.496, 0.2712 ) }
    dend_20 { pt3dadd( 451.586, 726.455, 72.8538, 0.2684 ) }
    dend_20 { pt3dadd( 451.072, 727.058, 74.1513, 0.2626 ) }
    dend_20 { pt3dadd( 450.996, 728.125, 75.1957, 0.2542 ) }
    dend_20 { pt3dadd( 451.443, 729.147, 75.9822, 0.2288 ) }
    dend_20 { pt3dadd( 452.339, 729.758, 77.28, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_1 (entry count 57/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 407.493, 641.881, 51.3069, 0.6856 ) }
    apic_15 { pt3dadd( 407.951, 641.67, 53.2, 0.2288 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 59/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 407.493, 641.881, 51.3069, 0.6856 ) }
    apic_2 { pt3dadd( 408.789, 641.649, 51.8675, 0.5864 ) }
    apic_2 { pt3dadd( 409.904, 641.471, 52.3138, 0.5228 ) }
    apic_2 { pt3dadd( 411.023, 641.287, 52.6114, 0.5056 ) }
    apic_2 { pt3dadd( 412.161, 641.182, 52.75, 0.4422 ) }
    apic_2 { pt3dadd( 413.296, 641.062, 52.7733, 0.478 ) }
    apic_2 { pt3dadd( 414.424, 640.87, 52.7164, 0.486 ) }
    apic_2 { pt3dadd( 415.55, 640.765, 52.5703, 0.5556 ) }
    apic_2 { pt3dadd( 416.632, 640.749, 52.2956, 0.8772 ) }
    apic_2 { pt3dadd( 417.676, 640.721, 51.9184, 0.7678 ) }
    apic_2 { pt3dadd( 418.754, 640.584, 51.5696, 0.7872 ) }
    apic_2 { pt3dadd( 419.852, 640.293, 51.3878, 0.8874 ) }
    apic_2 { pt3dadd( 420.942, 639.996, 51.4469, 1.2188 ) }
    apic_2 { pt3dadd( 422.038, 639.772, 51.7496, 1.127 ) }
    apic_2 { pt3dadd( 423.113, 639.618, 52.2906, 0.9528 ) }
    apic_2 { pt3dadd( 424.091, 639.714, 53.0718, 0.6492 ) }
    apic_2 { pt3dadd( 424.978, 640.151, 54.0056, 0.4502 ) }
    apic_2 { pt3dadd( 425.98, 640.522, 54.9408, 0.3748 ) }
    apic_2 { pt3dadd( 427.082, 640.43, 55.7934, 0.4096 ) }
    apic_2 { pt3dadd( 428.108, 640.012, 56.6014, 0.5432 ) }
    apic_2 { pt3dadd( 429.023, 639.511, 57.4468, 0.685 ) }
    apic_2 { pt3dadd( 429.955, 639.002, 58.308, 0.7744 ) }
    apic_2 { pt3dadd( 430.93, 638.463, 59.1315, 0.6382 ) }
    apic_2 { pt3dadd( 431.97, 638.058, 59.939, 0.479 ) }
    apic_2 { pt3dadd( 433.03, 637.723, 60.755, 0.4168 ) }
    apic_2 { pt3dadd( 433.875, 637.294, 61.6896, 0.5432 ) }
    apic_2 { pt3dadd( 434.542, 636.542, 62.678, 0.5204 ) }
    apic_2 { pt3dadd( 435.11, 635.588, 63.6126, 0.5826 ) }
    apic_2 { pt3dadd( 435.632, 634.655, 64.5604, 0.648 ) }
    apic_2 { pt3dadd( 436.389, 633.911, 65.5088, 0.783 ) }
    apic_2 { pt3dadd( 437.297, 633.442, 66.4714, 0.9664 ) }
    apic_2 { pt3dadd( 438.236, 633.027, 67.426, 0.7166 ) }
    apic_2 { pt3dadd( 439.186, 632.483, 68.304, 0.5994 ) }
    apic_2 { pt3dadd( 440.24, 632.142, 69.1023, 0.532 ) }
    apic_2 { pt3dadd( 441.361, 632.065, 69.7922, 0.5956 ) }
    apic_2 { pt3dadd( 442.493, 632.062, 70.3884, 0.4846 ) }
    apic_2 { pt3dadd( 443.573, 632.074, 70.9881, 0.4742 ) }
    apic_2 { pt3dadd( 444.677, 632.139, 71.5669, 0.4212 ) }
    apic_2 { pt3dadd( 445.788, 632.365, 72.0054, 0.4882 ) }
    apic_2 { pt3dadd( 446.899, 632.235, 72.4329, 0.496 ) }
    apic_2 { pt3dadd( 447.768, 631.698, 72.9571, 0.6174 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_2 { pt3dadd( 448.629, 631.028, 73.4812, 0.7822 ) }
    apic_2 { pt3dadd( 449.273, 630.089, 73.8937, 0.9214 ) }
    apic_2 { pt3dadd( 449.665, 629.016, 74.1992, 1.0728 ) }
    apic_2 { pt3dadd( 450.051, 627.946, 74.3982, 1.1848 ) }
    apic_2 { pt3dadd( 450.44, 626.901, 74.4716, 1.296 ) }
    apic_2 { pt3dadd( 450.927, 625.867, 74.5634, 1.512 ) }
    apic_2 { pt3dadd( 452.617, 624.393, 74.8692, 1.1454 ) }
    apic_2 { pt3dadd( 453.322, 623.525, 75.2844, 1.0056 ) }
    apic_2 { pt3dadd( 454.04, 622.682, 75.7977, 0.8852 ) }
    apic_2 { pt3dadd( 454.905, 622.047, 76.4081, 1.1316 ) }
    apic_2 { pt3dadd( 455.656, 621.293, 77.0725, 1.1404 ) }
    apic_2 { pt3dadd( 456.405, 620.468, 77.684, 0.8156 ) }
    apic_2 { pt3dadd( 457.324, 619.802, 78.0951, 0.4946 ) }
    apic_2 { pt3dadd( 458.22, 619.1, 78.3703, 0.3646 ) }
    apic_2 { pt3dadd( 459.138, 618.418, 78.6038, 0.3834 ) }
    apic_2 { pt3dadd( 460.134, 617.904, 78.8897, 0.5296 ) }
    apic_2 { pt3dadd( 461.125, 617.514, 79.2957, 0.4888 ) }
    apic_2 { pt3dadd( 462.243, 617.437, 79.735, 0.5538 ) }
    apic_2 { pt3dadd( 463.378, 617.534, 80.1651, 0.4496 ) }
    apic_2 { pt3dadd( 464.414, 617.897, 80.6478, 0.4326 ) }
    apic_2 { pt3dadd( 465.517, 618.194, 81.0146, 0.4598 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 21/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 452.809, 674.947, 43.4076, 0.376 ) }
    dend_11 { pt3dadd( 453.676, 674.959, 43.92, 0.4038 ) }
    dend_11 { pt3dadd( 454.422, 674.724, 44.6953, 0.343 ) }
    dend_11 { pt3dadd( 455.363, 674.255, 45.4989, 0.317 ) }
    dend_11 { pt3dadd( 456.391, 673.822, 46.1667, 0.3058 ) }
    dend_11 { pt3dadd( 457.1, 673.005, 46.7452, 0.3346 ) }
    dend_11 { pt3dadd( 457.688, 672.126, 47.2864, 0.3752 ) }
    dend_11 { pt3dadd( 458.154, 671.096, 47.672, 0.513 ) }
    dend_11 { pt3dadd( 458.612, 670.064, 47.8439, 0.4644 ) }
    dend_11 { pt3dadd( 459.215, 669.122, 47.9248, 0.4778 ) }
    dend_11 { pt3dadd( 459.888, 668.222, 47.9531, 0.4584 ) }
    dend_11 { pt3dadd( 460.23, 667.175, 47.9184, 0.4078 ) }
    dend_11 { pt3dadd( 459.746, 666.228, 48.004, 0.3856 ) }
    dend_11 { pt3dadd( 459.727, 665.141, 48.2258, 0.4546 ) }
    dend_11 { pt3dadd( 459.871, 664.164, 48.5724, 0.5056 ) }
    dend_11 { pt3dadd( 460.527, 663.257, 48.8191, 0.5146 ) }
    dend_11 { pt3dadd( 461.564, 662.826, 48.9709, 0.4904 ) }
    dend_11 { pt3dadd( 462.533, 662.28, 48.9602, 0.4138 ) }
    dend_11 { pt3dadd( 463.23, 661.392, 48.8634, 0.4262 ) }
    dend_11 { pt3dadd( 463.717, 660.374, 48.7141, 0.3868 ) }
    dend_11 { pt3dadd( 464.432, 659.603, 48.5593, 0.3876 ) }
    dend_11 { pt3dadd( 464.152, 658.671, 48.2782, 0.4878 ) }
    dend_11 { pt3dadd( 464.298, 657.552, 48.1135, 0.423 ) }
    dend_11 { pt3dadd( 464.581, 656.461, 47.9685, 0.3754 ) }
    dend_11 { pt3dadd( 465.154, 655.584, 47.742, 0.3928 ) }
    dend_11 { pt3dadd( 466.073, 654.984, 47.5689, 0.3706 ) }
    dend_11 { pt3dadd( 466.865, 654.177, 47.4975, 0.364 ) }
    dend_11 { pt3dadd( 467.668, 653.377, 47.5521, 0.4134 ) }
    dend_11 { pt3dadd( 468.471, 652.722, 47.8708, 0.4334 ) }
    dend_11 { pt3dadd( 469.069, 651.815, 48.3431, 0.3606 ) }
    dend_11 { pt3dadd( 469.524, 650.938, 48.9972, 0.3026 ) }
    dend_11 { pt3dadd( 469.936, 650.013, 49.7258, 0.2794 ) }
    dend_11 { pt3dadd( 470.757, 649.379, 50.2785, 0.2834 ) }
    dend_11 { pt3dadd( 471.818, 649.146, 50.8178, 0.291 ) }
    dend_11 { pt3dadd( 472.88, 649.104, 51.1017, 0.306 ) }
    dend_11 { pt3dadd( 473.887, 648.645, 51.4044, 0.3274 ) }
    dend_11 { pt3dadd( 474.658, 647.884, 51.7516, 0.399 ) }
    dend_11 { pt3dadd( 475.442, 647.371, 52.1917, 0.3762 ) }
    dend_11 { pt3dadd( 476.306, 647.793, 52.7587, 0.4038 ) }
    dend_11 { pt3dadd( 477.404, 647.89, 53.38, 0.3432 ) }
    dend_11 { pt3dadd( 478.508, 647.808, 54.0434, 0.3172 ) }
    dend_11 { pt3dadd( 479.469, 648.036, 54.717, 0.3074 ) }
    dend_11 { pt3dadd( 480.177, 648.915, 55.3182, 0.33 ) }
    dend_11 { pt3dadd( 481.139, 649.005, 55.8264, 0.4042 ) }
    dend_11 { pt3dadd( 482.259, 648.808, 56.3111, 0.3854 ) }
    dend_11 { pt3dadd( 482.944, 648.862, 57.043, 0.422 ) }
    dend_11 { pt3dadd( 483.637, 649.49, 57.7416, 0.3716 ) }
    dend_11 { pt3dadd( 484.591, 649.842, 58.5494, 0.3954 ) }
    dend_11 { pt3dadd( 485.215, 650.718, 59.3972, 0.3276 ) }
    dend_11 { pt3dadd( 485.794, 651.679, 60.1896, 0.2882 ) }
    dend_11 { pt3dadd( 486.518, 652.158, 61.042, 0.2542 ) }
    dend_11 { pt3dadd( 487.434, 652.461, 61.9052, 0.2288 ) }
    dend_11 { pt3dadd( 488.374, 652.766, 63.84, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 74/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 452.809, 674.947, 43.4076, 0.376 ) }
    dend_10 { pt3dadd( 453.664, 675.008, 43.2253, 0.4576 ) }
    dend_10 { pt3dadd( 454.464, 675.618, 44.3243, 0.4676 ) }
    dend_10 { pt3dadd( 455.567, 675.849, 44.7353, 0.3768 ) }
    dend_10 { pt3dadd( 456.645, 676.102, 45.2175, 0.3318 ) }
    dend_10 { pt3dadd( 457.674, 675.821, 45.7307, 0.3356 ) }
    dend_10 { pt3dadd( 458.44, 675.557, 46.4495, 0.3782 ) }
    dend_10 { pt3dadd( 459.481, 675.302, 46.9885, 0.5128 ) }
    dend_10 { pt3dadd( 460.59, 675.1, 47.4228, 0.4938 ) }
    dend_10 { pt3dadd( 461.422, 675.04, 48.0343, 0.3878 ) }
    dend_10 { pt3dadd( 462.525, 674.781, 48.5374, 0.3056 ) }
    dend_10 { pt3dadd( 463.572, 674.81, 48.851, 0.2852 ) }
    dend_10 { pt3dadd( 464.568, 674.62, 49.0977, 0.294 ) }
    dend_10 { pt3dadd( 465.654, 674.632, 49.3727, 0.3114 ) }
    dend_10 { pt3dadd( 466.754, 674.705, 49.5956, 0.3386 ) }
    dend_10 { pt3dadd( 467.847, 674.91, 49.7081, 0.4136 ) }
    dend_10 { pt3dadd( 468.858, 675.262, 49.8764, 0.4338 ) }
    dend_10 { pt3dadd( 469.879, 675.675, 49.9946, 0.3612 ) }
    dend_10 { pt3dadd( 470.939, 675.617, 49.9134, 0.3036 ) }
    dend_10 { pt3dadd( 472.022, 675.762, 49.744, 0.2814 ) }
    dend_10 { pt3dadd( 473.066, 675.952, 49.4584, 0.287 ) }
    dend_10 { pt3dadd( 473.974, 676.436, 49.3545, 0.2988 ) }
    dend_10 { pt3dadd( 474.96, 676.445, 49.152, 0.3142 ) }
    dend_10 { pt3dadd( 475.842, 675.739, 48.9644, 0.3736 ) }
    dend_10 { pt3dadd( 476.762, 675.072, 48.8426, 0.3344 ) }
    dend_10 { pt3dadd( 477.81, 674.644, 48.7276, 0.3008 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( 478.93, 674.567, 48.6506, 0.2762 ) }
    dend_10 { pt3dadd( 480.001, 674.683, 48.4924, 0.2776 ) }
    dend_10 { pt3dadd( 481.106, 674.843, 48.4448, 0.28 ) }
    dend_10 { pt3dadd( 482.221, 675.077, 48.4092, 0.2848 ) }
    dend_10 { pt3dadd( 483.347, 675.161, 48.384, 0.2934 ) }
    dend_10 { pt3dadd( 484.465, 675.047, 48.4686, 0.3102 ) }
    dend_10 { pt3dadd( 485.535, 674.852, 48.589, 0.3364 ) }
    dend_10 { pt3dadd( 486.637, 675.065, 48.8642, 0.4096 ) }
    dend_10 { pt3dadd( 487.767, 675.064, 49.2461, 0.4266 ) }
    dend_10 { pt3dadd( 488.885, 675.211, 49.688, 0.3474 ) }
    dend_10 { pt3dadd( 489.513, 675.606, 50.3675, 0.2796 ) }
    dend_10 { pt3dadd( 490.083, 676.262, 51.1748, 0.2288 ) }
    dend_10 { pt3dadd( 490.776, 676.905, 53.2, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 13/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 402.917, 637.094, 30.8, 0.4576 ) }
    dend_6 { pt3dadd( 402.908, 636.079, 30.224, 0.4576 ) }
    dend_6 { pt3dadd( 402.846, 635.148, 28.5393, 0.7328 ) }
    dend_6 { pt3dadd( 402.513, 634.449, 27.7436, 0.9498 ) }
    dend_6 { pt3dadd( 401.727, 633.726, 26.9304, 1.0 ) }
    dend_6 { pt3dadd( 400.852, 633.027, 26.2295, 0.7428 ) }
    dend_6 { pt3dadd( 399.836, 632.567, 25.7254, 0.5948 ) }
    dend_6 { pt3dadd( 398.711, 632.428, 25.3242, 0.7822 ) }
    dend_6 { pt3dadd( 397.633, 632.154, 24.9548, 0.7182 ) }
    dend_6 { pt3dadd( 396.587, 631.695, 24.6295, 0.7666 ) }
    dend_6 { pt3dadd( 395.52, 631.331, 24.2558, 0.9618 ) }
    dend_6 { pt3dadd( 394.448, 631.031, 23.7762, 1.0386 ) }
    dend_6 { pt3dadd( 393.36, 630.794, 23.2107, 0.965 ) }
    dend_6 { pt3dadd( 392.251, 630.695, 22.5813, 0.962 ) }
    dend_6 { pt3dadd( 391.115, 630.684, 21.9385, 0.7652 ) }
    dend_6 { pt3dadd( 390.011, 630.67, 21.2281, 0.6426 ) }
    dend_6 { pt3dadd( 389.001, 630.543, 20.3834, 0.612 ) }
    dend_6 { pt3dadd( 388.216, 630.001, 19.4626, 0.5148 ) }
    dend_6 { pt3dadd( 387.934, 629.465, 18.3897, 0.531 ) }
    dend_6 { pt3dadd( 387.27, 629.121, 17.2397, 0.523 ) }
    dend_6 { pt3dadd( 386.279, 629.436, 16.2088, 0.6938 ) }
    dend_6 { pt3dadd( 385.551, 630.169, 15.5533, 0.7954 ) }
    dend_6 { pt3dadd( 384.603, 630.664, 15.1112, 0.884 ) }
    dend_6 { pt3dadd( 383.546, 631.041, 14.7724, 0.8464 ) }
    dend_6 { pt3dadd( 383.046, 631.435, 14.2388, 0.611 ) }
    dend_6 { pt3dadd( 382.161, 631.962, 13.7603, 0.523 ) }
    dend_6 { pt3dadd( 381.257, 632.521, 13.5071, 0.4974 ) }
    dend_6 { pt3dadd( 380.448, 633.315, 13.2938, 0.4698 ) }
    dend_6 { pt3dadd( 380.089, 634.357, 12.9696, 0.5504 ) }
    dend_6 { pt3dadd( 379.398, 635.057, 12.6254, 0.5176 ) }
    dend_6 { pt3dadd( 378.345, 634.886, 12.2802, 0.4268 ) }
    dend_6 { pt3dadd( 377.52, 634.136, 11.873, 0.4034 ) }
    dend_6 { pt3dadd( 377.073, 633.442, 11.2131, 0.3426 ) }
    dend_6 { pt3dadd( 376.639, 633.268, 10.4357, 0.3158 ) }
    dend_6 { pt3dadd( 376.725, 634.378, 9.7561, 0.305 ) }
    dend_6 { pt3dadd( 376.827, 635.443, 9.1098, 0.3248 ) }
    dend_6 { pt3dadd( 376.227, 636.232, 8.4732, 0.3982 ) }
    dend_6 { pt3dadd( 375.444, 637.035, 7.9737, 0.356 ) }
    dend_6 { pt3dadd( 374.431, 636.865, 7.84, 0.4576 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 52/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 402.917, 637.094, 30.8, 0.4576 ) }
    dend_5 { pt3dadd( 404.299, 636.161, 30.1143, 0.5664 ) }
    dend_5 { pt3dadd( 405.335, 635.823, 29.785, 0.6132 ) }
    dend_5 { pt3dadd( 406.346, 635.711, 29.2583, 0.5122 ) }
    dend_5 { pt3dadd( 407.479, 635.622, 28.73, 0.5498 ) }
    dend_5 { pt3dadd( 408.507, 635.205, 28.2458, 0.4436 ) }
    dend_5 { pt3dadd( 408.919, 634.291, 27.7969, 0.4144 ) }
    dend_5 { pt3dadd( 408.921, 633.652, 27.1229, 0.4608 ) }
    dend_5 { pt3dadd( 409.372, 633.957, 26.1504, 0.5172 ) }
    dend_5 { pt3dadd( 410.108, 634.466, 25.0564, 0.5362 ) }
    dend_5 { pt3dadd( 411.085, 634.623, 23.9349, 0.5288 ) }
    dend_5 { pt3dadd( 412.06, 634.216, 22.8982, 0.4934 ) }
    dend_5 { pt3dadd( 412.921, 633.484, 22.0436, 0.5334 ) }
    dend_5 { pt3dadd( 413.732, 632.678, 21.3828, 0.781 ) }
    dend_5 { pt3dadd( 414.523, 631.864, 20.8149, 0.8554 ) }
    dend_5 { pt3dadd( 415.194, 631.008, 20.2042, 1.032 ) }
    dend_5 { pt3dadd( 415.623, 630.018, 19.5192, 1.1698 ) }
    dend_5 { pt3dadd( 415.73, 628.92, 18.7888, 1.2022 ) }
    dend_5 { pt3dadd( 415.737, 627.824, 17.9847, 1.202 ) }
    dend_5 { pt3dadd( 415.565, 625.791, 17.0335, 1.3044 ) }
    dend_5 { pt3dadd( 414.716, 625.157, 16.0779, 1.2914 ) }
    dend_5 { pt3dadd( 413.784, 624.836, 15.0585, 1.2302 ) }
    dend_5 { pt3dadd( 412.852, 624.327, 14.0802, 1.068 ) }
    dend_5 { pt3dadd( 412.342, 623.504, 13.0795, 1.0036 ) }
    dend_5 { pt3dadd( 411.837, 622.582, 12.1531, 1.1108 ) }
    dend_5 { pt3dadd( 411.679, 621.534, 11.324, 1.1242 ) }
    dend_5 { pt3dadd( 411.552, 620.406, 10.6922, 1.133 ) }
    dend_5 { pt3dadd( 411.573, 619.289, 10.2414, 0.999 ) }
    dend_5 { pt3dadd( 411.498, 618.194, 9.9581, 0.793 ) }
    dend_5 { pt3dadd( 411.691, 617.099, 9.6521, 0.6628 ) }
    dend_5 { pt3dadd( 412.274, 616.272, 9.2022, 0.801 ) }
    dend_5 { pt3dadd( 412.83, 615.343, 8.679, 1.0456 ) }
    dend_5 { pt3dadd( 413.391, 614.393, 8.1064, 1.0968 ) }
    dend_5 { pt3dadd( 414.09, 613.534, 7.5254, 1.0872 ) }
    dend_5 { pt3dadd( 414.938, 612.851, 6.9651, 0.8896 ) }
    dend_5 { pt3dadd( 415.974, 612.417, 6.5244, 0.7096 ) }
    dend_5 { pt3dadd( 416.969, 611.981, 6.1576, 0.6158 ) }
    dend_5 { pt3dadd( 417.82, 611.326, 5.9462, 0.6496 ) }
    dend_5 { pt3dadd( 418.835, 610.872, 5.8945, 0.6186 ) }
    dend_5 { pt3dadd( 419.93, 610.544, 5.9163, 0.5592 ) }
    dend_5 { pt3dadd( 420.992, 610.667, 6.44, 0.6864 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 398.366, 623.109, 28.3018, 0.895 ) }
    dend_3 { pt3dadd( 397.288, 621.837, 28.1865, 0.901 ) }
    dend_3 { pt3dadd( 396.572, 620.947, 28.0616, 0.7762 ) }
    dend_3 { pt3dadd( 396.029, 619.955, 27.9114, 0.9748 ) }
    dend_3 { pt3dadd( 395.721, 618.915, 27.6583, 0.8586 ) }
    dend_3 { pt3dadd( 395.592, 617.845, 27.311, 0.7066 ) }
    dend_3 { pt3dadd( 395.466, 616.724, 26.987, 0.5742 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_3 { pt3dadd( 395.054, 615.68, 26.7356, 0.5186 ) }
    dend_3 { pt3dadd( 394.365, 614.772, 26.5721, 0.6368 ) }
    dend_3 { pt3dadd( 393.641, 613.886, 26.493, 0.6976 ) }
    dend_3 { pt3dadd( 392.843, 613.075, 26.4892, 0.6642 ) }
    dend_3 { pt3dadd( 391.945, 612.368, 26.5383, 0.6254 ) }
    dend_3 { pt3dadd( 391.086, 611.617, 26.6184, 0.67 ) }
    dend_3 { pt3dadd( 390.444, 610.69, 26.7365, 0.6442 ) }
    dend_3 { pt3dadd( 389.898, 609.707, 26.9326, 0.6652 ) }
    dend_3 { pt3dadd( 389.206, 608.823, 27.1738, 0.5994 ) }
    dend_3 { pt3dadd( 388.349, 608.074, 27.3997, 0.5284 ) }
    dend_3 { pt3dadd( 387.425, 607.406, 27.6102, 0.6068 ) }
    dend_3 { pt3dadd( 386.505, 606.808, 27.8732, 0.6476 ) }
    dend_3 { pt3dadd( 385.812, 605.984, 28.128, 0.5444 ) }
    dend_3 { pt3dadd( 385.509, 604.922, 28.2332, 0.534 ) }
    dend_3 { pt3dadd( 385.237, 603.839, 28.1999, 0.5518 ) }
    dend_3 { pt3dadd( 384.862, 602.785, 28.1814, 0.6328 ) }
    dend_3 { pt3dadd( 384.343, 601.782, 28.187, 0.551 ) }
    dend_3 { pt3dadd( 383.652, 600.881, 28.1476, 0.6112 ) }
    dend_3 { pt3dadd( 383.04, 599.955, 28.0286, 0.6078 ) }
    dend_3 { pt3dadd( 382.804, 598.875, 27.9168, 0.475 ) }
    dend_3 { pt3dadd( 382.761, 597.734, 27.8683, 0.3838 ) }
    dend_3 { pt3dadd( 382.612, 596.622, 27.911, 0.3784 ) }
    dend_3 { pt3dadd( 382.277, 595.573, 27.9266, 0.4882 ) }
    dend_3 { pt3dadd( 381.732, 594.583, 27.978, 0.5686 ) }
    dend_3 { pt3dadd( 380.791, 593.966, 28.0305, 0.6294 ) }
    dend_3 { pt3dadd( 380.038, 593.24, 28.1397, 0.7132 ) }
    dend_3 { pt3dadd( 379.085, 592.92, 28.3041, 0.7794 ) }
    dend_3 { pt3dadd( 378.71, 591.942, 28.4393, 0.6486 ) }
    dend_3 { pt3dadd( 378.06, 591.017, 28.4894, 0.4918 ) }
    dend_3 { pt3dadd( 377.703, 589.963, 28.4715, 0.4728 ) }
    dend_3 { pt3dadd( 377.156, 588.998, 28.4676, 0.4912 ) }
    dend_3 { pt3dadd( 376.152, 588.552, 28.3713, 0.4932 ) }
    dend_3 { pt3dadd( 375.279, 588.047, 28.0899, 0.4248 ) }
    dend_3 { pt3dadd( 374.576, 587.179, 27.8251, 0.418 ) }
    dend_3 { pt3dadd( 373.542, 586.718, 27.6511, 0.5094 ) }
    dend_3 { pt3dadd( 372.586, 586.148, 27.6016, 0.6326 ) }
    dend_3 { pt3dadd( 372.038, 585.181, 27.6648, 0.6282 ) }
    dend_3 { pt3dadd( 371.968, 584.206, 27.9902, 0.6058 ) }
    dend_3 { pt3dadd( 372.237, 583.279, 28.4824, 0.6326 ) }
    dend_3 { pt3dadd( 372.387, 582.153, 28.9327, 0.5792 ) }
    dend_3 { pt3dadd( 372.237, 581.081, 29.3838, 0.5242 ) }
    dend_3 { pt3dadd( 372.038, 580.103, 29.8838, 0.4364 ) }
    dend_3 { pt3dadd( 371.904, 579.023, 30.0924, 0.4346 ) }
    dend_3 { pt3dadd( 371.352, 578.193, 29.9838, 0.5648 ) }
    dend_3 { pt3dadd( 370.751, 577.498, 29.6736, 0.6154 ) }
    dend_3 { pt3dadd( 370.277, 576.481, 29.4428, 0.4904 ) }
    dend_3 { pt3dadd( 369.587, 575.768, 29.4154, 0.407 ) }
    dend_3 { pt3dadd( 368.721, 575.255, 29.612, 0.4474 ) }
    dend_3 { pt3dadd( 367.668, 574.873, 29.8138, 0.4912 ) }
    dend_3 { pt3dadd( 366.953, 574.646, 30.2966, 0.4942 ) }
    dend_3 { pt3dadd( 366.222, 574.338, 30.5276, 0.4206 ) }
    dend_3 { pt3dadd( 365.332, 573.797, 30.7838, 0.44 ) }
    dend_3 { pt3dadd( 364.762, 572.848, 30.9257, 0.4062 ) }
    dend_3 { pt3dadd( 364.451, 571.859, 30.896, 0.4542 ) }
    dend_3 { pt3dadd( 364.358, 570.746, 30.945, 0.4622 ) }
    dend_3 { pt3dadd( 364.283, 569.612, 30.9638, 0.4136 ) }
    dend_3 { pt3dadd( 364.345, 568.474, 30.9789, 0.4022 ) }
    dend_3 { pt3dadd( 364.51, 567.466, 31.1399, 0.4564 ) }
    dend_3 { pt3dadd( 364.342, 566.353, 31.1942, 0.6492 ) }
    dend_3 { pt3dadd( 363.878, 565.372, 31.1284, 0.7872 ) }
    dend_3 { pt3dadd( 363.238, 564.442, 31.0873, 0.7362 ) }
    dend_3 { pt3dadd( 362.556, 563.554, 31.0338, 0.5292 ) }
    dend_3 { pt3dadd( 361.886, 562.657, 31.0652, 0.4628 ) }
    dend_3 { pt3dadd( 360.913, 562.203, 31.0814, 0.4 ) }
    dend_3 { pt3dadd( 359.789, 562.081, 31.1321, 0.449 ) }
    dend_3 { pt3dadd( 358.652, 562.035, 31.2158, 0.4224 ) }
    dend_3 { pt3dadd( 357.585, 561.685, 31.2612, 0.4864 ) }
    dend_3 { pt3dadd( 356.529, 561.308, 31.2964, 0.5114 ) }
    dend_3 { pt3dadd( 355.891, 560.439, 31.187, 0.556 ) }
    dend_3 { pt3dadd( 355.241, 559.521, 31.1312, 0.4168 ) }
    dend_3 { pt3dadd( 354.505, 558.695, 31.0582, 0.322 ) }
    dend_3 { pt3dadd( 354.182, 557.662, 30.8689, 0.2684 ) }
    dend_3 { pt3dadd( 354.284, 556.531, 30.6799, 0.2626 ) }
    dend_3 { pt3dadd( 354.438, 555.425, 30.4522, 0.2542 ) }
    dend_3 { pt3dadd( 354.716, 554.424, 30.0896, 0.2288 ) }
    dend_3 { pt3dadd( 355.671, 554.039, 29.12, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 76/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 398.366, 623.109, 28.3018, 0.895 ) }
    dend_2 { pt3dadd( 397.276, 622.733, 26.1568, 0.9152 ) }
    dend_2 { pt3dadd( 396.307, 622.329, 25.0696, 0.6634 ) }
    dend_2 { pt3dadd( 395.291, 621.869, 24.6165, 0.6176 ) }
    dend_2 { pt3dadd( 394.246, 621.451, 24.1349, 0.6852 ) }
    dend_2 { pt3dadd( 393.19, 621.043, 23.6518, 0.7576 ) }
    dend_2 { pt3dadd( 392.139, 620.668, 23.138, 0.6918 ) }
    dend_2 { pt3dadd( 391.044, 620.39, 22.6213, 0.8528 ) }
    dend_2 { pt3dadd( 390.0, 619.938, 22.1275, 0.9214 ) }
    dend_2 { pt3dadd( 389.13, 619.27, 21.5685, 1.022 ) }
    dend_2 { pt3dadd( 388.468, 618.48, 20.8592, 1.1074 ) }
    dend_2 { pt3dadd( 387.783, 617.797, 20.0021, 0.842 ) }
    dend_2 { pt3dadd( 386.857, 617.453, 19.0942, 0.8056 ) }
    dend_2 { pt3dadd( 385.768, 617.42, 18.2202, 0.8138 ) }
    dend_2 { pt3dadd( 384.676, 617.436, 17.4041, 0.919 ) }
    dend_2 { pt3dadd( 383.569, 617.553, 16.708, 0.9066 ) }
    dend_2 { pt3dadd( 382.477, 617.836, 16.1464, 0.7474 ) }
    dend_2 { pt3dadd( 381.452, 618.286, 15.6656, 0.654 ) }
    dend_2 { pt3dadd( 380.404, 618.532, 15.2918, 0.6464 ) }
    dend_2 { pt3dadd( 379.28, 618.553, 14.9986, 0.744 ) }
    dend_2 { pt3dadd( 378.164, 618.556, 14.7275, 0.8398 ) }
    dend_2 { pt3dadd( 377.049, 618.381, 14.4351, 0.7442 ) }
    dend_2 { pt3dadd( 376.16, 617.963, 14.0172, 0.7492 ) }
    dend_2 { pt3dadd( 375.319, 617.617, 13.4385, 0.5598 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 374.255, 617.799, 13.0799, 0.487 ) }
    dend_2 { pt3dadd( 373.177, 618.164, 12.8348, 0.6034 ) }
    dend_2 { pt3dadd( 372.125, 618.596, 12.662, 0.5124 ) }
    dend_2 { pt3dadd( 371.07, 618.857, 12.5485, 0.462 ) }
    dend_2 { pt3dadd( 370.046, 618.863, 12.3793, 0.4804 ) }
    dend_2 { pt3dadd( 369.176, 619.003, 11.9211, 0.6576 ) }
    dend_2 { pt3dadd( 368.167, 619.317, 11.3947, 0.9786 ) }
    dend_2 { pt3dadd( 367.044, 619.195, 10.9271, 0.9228 ) }
    dend_2 { pt3dadd( 365.921, 619.115, 10.454, 0.7758 ) }
    dend_2 { pt3dadd( 364.84, 618.899, 9.9597, 0.7162 ) }
    dend_2 { pt3dadd( 364.004, 618.434, 9.4028, 0.7148 ) }
    dend_2 { pt3dadd( 363.301, 617.593, 8.9477, 0.6416 ) }
    dend_2 { pt3dadd( 362.271, 617.172, 8.6222, 0.6182 ) }
    dend_2 { pt3dadd( 361.174, 617.151, 8.3115, 0.4868 ) }
    dend_2 { pt3dadd( 360.1, 617.11, 7.939, 0.4424 ) }
    dend_2 { pt3dadd( 359.158, 617.254, 7.4623, 0.5376 ) }
    dend_2 { pt3dadd( 358.109, 617.555, 7.0332, 0.5394 ) }
    dend_2 { pt3dadd( 357.013, 617.85, 6.7852, 0.4744 ) }
    dend_2 { pt3dadd( 355.919, 618.147, 6.7211, 0.4564 ) }
    dend_2 { pt3dadd( 354.852, 618.305, 6.8925, 0.6122 ) }
    dend_2 { pt3dadd( 353.724, 618.314, 7.168, 0.6704 ) }
    dend_2 { pt3dadd( 352.609, 618.267, 7.4531, 0.752 ) }
    dend_2 { pt3dadd( 351.661, 618.807, 7.7522, 0.804 ) }
    dend_2 { pt3dadd( 350.832, 619.593, 7.9871, 0.6948 ) }
    dend_2 { pt3dadd( 349.872, 620.198, 8.16, 0.5748 ) }
    dend_2 { pt3dadd( 348.824, 620.648, 8.2555, 0.6402 ) }
    dend_2 { pt3dadd( 347.731, 620.982, 8.3185, 0.735 ) }
    dend_2 { pt3dadd( 346.617, 621.17, 8.4237, 0.583 ) }
    dend_2 { pt3dadd( 345.624, 621.374, 8.6833, 0.5186 ) }
    dend_2 { pt3dadd( 344.632, 621.079, 8.8538, 0.4884 ) }
    dend_2 { pt3dadd( 343.613, 621.209, 8.8244, 0.457 ) }
    dend_2 { pt3dadd( 342.693, 621.626, 8.7817, 0.5082 ) }
    dend_2 { pt3dadd( 341.873, 622.338, 8.8714, 0.529 ) }
    dend_2 { pt3dadd( 340.983, 623.05, 8.9347, 0.6988 ) }
    dend_2 { pt3dadd( 340.31, 623.667, 9.2224, 0.8332 ) }
    dend_2 { pt3dadd( 339.429, 624.355, 9.4645, 0.8156 ) }
    dend_2 { pt3dadd( 338.464, 624.824, 9.7461, 0.7052 ) }
    dend_2 { pt3dadd( 337.35, 625.046, 9.88, 0.649 ) }
    dend_2 { pt3dadd( 336.286, 625.323, 9.8508, 0.7384 ) }
    dend_2 { pt3dadd( 335.356, 625.887, 9.6452, 0.6508 ) }
    dend_2 { pt3dadd( 334.451, 626.512, 9.3245, 0.5752 ) }
    dend_2 { pt3dadd( 333.427, 626.895, 9.0814, 0.4712 ) }
    dend_2 { pt3dadd( 332.589, 627.219, 9.0666, 0.5606 ) }
    dend_2 { pt3dadd( 331.569, 627.378, 9.1032, 0.5004 ) }
    dend_2 { pt3dadd( 330.904, 627.453, 8.7672, 0.57 ) }
    dend_2 { pt3dadd( 329.906, 627.602, 8.2341, 0.5056 ) }
    dend_2 { pt3dadd( 328.855, 627.751, 7.5997, 0.4096 ) }
    dend_2 { pt3dadd( 327.896, 628.145, 6.9691, 0.3474 ) }
    dend_2 { pt3dadd( 326.789, 628.017, 6.3932, 0.356 ) }
    dend_2 { pt3dadd( 325.761, 627.693, 5.9429, 0.4576 ) }
    dend_2 { pt3dadd( 324.667, 627.598, 5.32, 0.4576 ) }
    // Section: apic_17, id: apic_17, parent: apic_15 (entry count 51/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 407.951, 641.67, 53.2, 0.2288 ) }
    apic_17 { pt3dadd( 408.208, 640.746, 53.3501, 0.2288 ) }
    apic_17 { pt3dadd( 407.915, 639.644, 53.1233, 0.329 ) }
    apic_17 { pt3dadd( 407.763, 638.516, 53.0152, 0.3726 ) }
    apic_17 { pt3dadd( 407.772, 637.386, 52.8727, 0.4712 ) }
    apic_17 { pt3dadd( 408.035, 636.289, 52.6753, 0.566 ) }
    apic_17 { pt3dadd( 408.243, 635.181, 52.4667, 0.4844 ) }
    apic_17 { pt3dadd( 408.13, 634.063, 52.3054, 0.4368 ) }
    apic_17 { pt3dadd( 407.622, 633.045, 52.1822, 0.5332 ) }
    apic_17 { pt3dadd( 407.026, 632.076, 52.0915, 0.5006 ) }
    apic_17 { pt3dadd( 406.581, 631.028, 52.0755, 0.5516 ) }
    apic_17 { pt3dadd( 406.298, 629.93, 52.1508, 0.5632 ) }
    apic_17 { pt3dadd( 406.263, 628.8, 52.2701, 0.7586 ) }
    apic_17 { pt3dadd( 406.507, 627.69, 52.437, 0.9626 ) }
    apic_17 { pt3dadd( 406.789, 626.595, 52.6618, 0.9648 ) }
    apic_17 { pt3dadd( 406.83, 625.473, 52.8718, 0.7352 ) }
    apic_17 { pt3dadd( 406.56, 624.377, 53.0415, 0.7582 ) }
    apic_17 { pt3dadd( 406.248, 623.289, 53.2717, 0.6806 ) }
    apic_17 { pt3dadd( 406.112, 622.171, 53.6354, 0.664 ) }
    apic_17 { pt3dadd( 405.972, 621.051, 54.1047, 0.7006 ) }
    apic_17 { pt3dadd( 405.366, 620.268, 54.6899, 0.6714 ) }
    apic_17 { pt3dadd( 404.524, 620.498, 55.5246, 0.859 ) }
    apic_17 { pt3dadd( 403.852, 620.948, 56.6261, 0.9484 ) }
    apic_17 { pt3dadd( 402.979, 621.311, 57.827, 0.9964 ) }
    apic_17 { pt3dadd( 401.934, 621.487, 58.9982, 0.7422 ) }
    apic_17 { pt3dadd( 400.908, 621.512, 60.1471, 0.5634 ) }
    apic_17 { pt3dadd( 399.883, 621.42, 61.2461, 0.4128 ) }
    apic_17 { pt3dadd( 398.956, 620.927, 62.2415, 0.4004 ) }
    apic_17 { pt3dadd( 398.042, 620.265, 63.0731, 0.4546 ) }
    apic_17 { pt3dadd( 397.109, 619.606, 63.765, 0.6384 ) }
    apic_17 { pt3dadd( 396.254, 618.854, 64.3882, 0.8034 ) }
    apic_17 { pt3dadd( 395.659, 617.979, 65.0821, 0.59 ) }
    apic_17 { pt3dadd( 395.102, 617.236, 65.9366, 0.4266 ) }
    apic_17 { pt3dadd( 394.191, 617.034, 66.8982, 0.3684 ) }
    apic_17 { pt3dadd( 393.151, 617.257, 67.863, 0.4464 ) }
    apic_17 { pt3dadd( 392.146, 617.773, 68.7288, 0.6044 ) }
    apic_17 { pt3dadd( 391.227, 618.45, 69.4753, 0.831 ) }
    apic_17 { pt3dadd( 390.221, 618.949, 70.1865, 0.887 ) }
    apic_17 { pt3dadd( 389.163, 619.231, 70.9302, 0.9294 ) }
    apic_17 { pt3dadd( 388.24, 619.446, 71.834, 0.8474 ) }
    apic_17 { pt3dadd( 387.497, 620.074, 72.8493, 0.7884 ) }
    apic_17 { pt3dadd( 386.559, 620.521, 73.8968, 0.6846 ) }
    apic_17 { pt3dadd( 385.598, 620.615, 74.984, 0.6954 ) }
    apic_17 { pt3dadd( 384.626, 620.623, 76.0544, 0.6438 ) }
    apic_17 { pt3dadd( 383.523, 620.639, 76.9474, 0.6658 ) }
    apic_17 { pt3dadd( 382.806, 620.617, 77.5916, 0.593 ) }
    apic_17 { pt3dadd( 381.706, 620.817, 78.0996, 0.5524 ) }
    apic_17 { pt3dadd( 380.832, 620.165, 78.4711, 0.476 ) }
    apic_17 { pt3dadd( 379.8, 619.816, 78.7634, 0.5684 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_17 { pt3dadd( 378.754, 619.526, 78.8771, 0.5206 ) }
    apic_17 { pt3dadd( 377.639, 619.526, 78.8558, 0.5784 ) }
    apic_17 { pt3dadd( 376.58, 619.386, 78.6467, 0.6624 ) }
    apic_17 { pt3dadd( 375.542, 619.183, 78.3076, 0.7018 ) }
    apic_17 { pt3dadd( 374.551, 618.684, 78.0976, 0.6534 ) }
    apic_17 { pt3dadd( 373.691, 617.981, 77.9176, 0.4658 ) }
    apic_17 { pt3dadd( 372.617, 617.829, 77.8145, 0.3654 ) }
    apic_17 { pt3dadd( 371.555, 617.646, 77.999, 0.3496 ) }
    apic_17 { pt3dadd( 370.991, 617.92, 78.5655, 0.4102 ) }
    apic_17 { pt3dadd( 370.246, 618.226, 79.3481, 0.5426 ) }
    apic_17 { pt3dadd( 369.218, 618.549, 79.907, 0.6912 ) }
    apic_17 { pt3dadd( 368.119, 618.675, 80.4644, 0.7498 ) }
    apic_17 { pt3dadd( 367.155, 619.263, 80.957, 0.769 ) }
    apic_17 { pt3dadd( 366.067, 619.612, 81.3156, 0.5508 ) }
    apic_17 { pt3dadd( 364.949, 619.835, 81.5539, 0.4642 ) }
    apic_17 { pt3dadd( 363.811, 619.959, 81.7639, 0.3608 ) }
    apic_17 { pt3dadd( 362.755, 619.897, 82.0828, 0.3506 ) }
    apic_17 { pt3dadd( 361.77, 619.598, 82.5773, 0.3652 ) }
    apic_17 { pt3dadd( 360.757, 619.281, 83.1858, 0.4578 ) }
    apic_17 { pt3dadd( 359.754, 618.843, 83.7096, 0.5412 ) }
    apic_17 { pt3dadd( 358.754, 618.79, 84.3335, 0.4364 ) }
    apic_17 { pt3dadd( 357.805, 618.776, 85.0595, 0.3594 ) }
    apic_17 { pt3dadd( 356.715, 618.441, 85.5926, 0.332 ) }
    apic_17 { pt3dadd( 355.873, 617.667, 85.9762, 0.4078 ) }
    apic_17 { pt3dadd( 355.023, 616.912, 86.2336, 0.3922 ) }
    apic_17 { pt3dadd( 354.043, 616.338, 86.4268, 0.4344 ) }
    apic_17 { pt3dadd( 353.129, 615.696, 86.6079, 0.3958 ) }
    apic_17 { pt3dadd( 352.087, 615.342, 86.7804, 0.435 ) }
    apic_17 { pt3dadd( 351.072, 615.001, 86.9229, 0.4266 ) }
    apic_17 { pt3dadd( 350.488, 614.171, 86.9148, 0.3474 ) }
    apic_17 { pt3dadd( 349.951, 613.32, 86.7468, 0.2796 ) }
    apic_17 { pt3dadd( 349.173, 612.598, 86.6989, 0.2288 ) }
    apic_17 { pt3dadd( 349.034, 611.697, 86.24, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_15 (entry count 33/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 407.951, 641.67, 53.2, 0.2288 ) }
    apic_16 { pt3dadd( 408.655, 641.663, 53.7172, 0.3894 ) }
    apic_16 { pt3dadd( 409.718, 641.625, 53.9924, 0.5096 ) }
    apic_16 { pt3dadd( 410.826, 641.466, 54.2399, 0.603 ) }
    apic_16 { pt3dadd( 411.922, 641.148, 54.3676, 0.7186 ) }
    apic_16 { pt3dadd( 412.919, 640.663, 54.3416, 0.7536 ) }
    apic_16 { pt3dadd( 413.535, 639.783, 54.0868, 0.7752 ) }
    apic_16 { pt3dadd( 413.939, 638.846, 53.601, 0.5672 ) }
    apic_16 { pt3dadd( 414.416, 637.881, 53.0298, 0.471 ) }
    apic_16 { pt3dadd( 415.102, 636.97, 52.5367, 0.4896 ) }
    apic_16 { pt3dadd( 415.812, 636.089, 52.1475, 0.7104 ) }
    apic_16 { pt3dadd( 416.266, 635.054, 51.8244, 0.9022 ) }
    apic_16 { pt3dadd( 416.621, 633.999, 51.5402, 0.9406 ) }
    apic_16 { pt3dadd( 416.971, 632.911, 51.3654, 0.9504 ) }
    apic_16 { pt3dadd( 417.352, 631.843, 51.2618, 1.0386 ) }
    apic_16 { pt3dadd( 417.836, 630.83, 51.1846, 1.0908 ) }
    apic_16 { pt3dadd( 418.389, 629.837, 51.2243, 1.27 ) }
    apic_16 { pt3dadd( 418.929, 628.858, 51.4755, 1.4312 ) }
    apic_16 { pt3dadd( 419.326, 627.838, 51.947, 1.4162 ) }
    apic_16 { pt3dadd( 419.706, 626.811, 52.5753, 1.539 ) }
    apic_16 { pt3dadd( 419.888, 625.73, 53.3156, 1.4938 ) }
    apic_16 { pt3dadd( 420.363, 623.711, 54.3472, 1.1212 ) }
    apic_16 { pt3dadd( 420.477, 622.667, 55.354, 1.1156 ) }
    apic_16 { pt3dadd( 420.159, 621.613, 56.2839, 1.0244 ) }
    apic_16 { pt3dadd( 419.943, 620.515, 57.1032, 1.0184 ) }
    apic_16 { pt3dadd( 419.941, 619.417, 57.8575, 1.1304 ) }
    apic_16 { pt3dadd( 420.212, 618.347, 58.5404, 1.1976 ) }
    apic_16 { pt3dadd( 420.733, 617.356, 59.1511, 1.0902 ) }
    apic_16 { pt3dadd( 421.366, 616.435, 59.7402, 1.1016 ) }
    apic_16 { pt3dadd( 422.145, 615.605, 60.2848, 1.016 ) }
    apic_16 { pt3dadd( 422.977, 614.842, 60.8194, 0.917 ) }
    apic_16 { pt3dadd( 423.802, 614.12, 61.4104, 0.672 ) }
    apic_16 { pt3dadd( 424.572, 613.357, 62.0553, 0.5178 ) }
    apic_16 { pt3dadd( 425.161, 612.523, 62.757, 0.3756 ) }
    apic_16 { pt3dadd( 425.333, 611.55, 63.5228, 0.33 ) }
    apic_16 { pt3dadd( 425.339, 610.483, 64.2317, 0.3312 ) }
    apic_16 { pt3dadd( 425.331, 609.341, 64.7349, 0.3752 ) }
    apic_16 { pt3dadd( 425.283, 608.209, 65.0185, 0.4832 ) }
    apic_16 { pt3dadd( 425.124, 607.098, 65.1664, 0.5534 ) }
    apic_16 { pt3dadd( 424.928, 605.996, 65.3201, 0.63 ) }
    apic_16 { pt3dadd( 424.882, 604.867, 65.452, 0.574 ) }
    apic_16 { pt3dadd( 424.884, 603.725, 65.5298, 0.515 ) }
    apic_16 { pt3dadd( 424.901, 602.584, 65.5936, 0.4184 ) }
    apic_16 { pt3dadd( 424.991, 601.453, 65.6788, 0.4048 ) }
    apic_16 { pt3dadd( 425.21, 600.361, 65.8504, 0.4924 ) }
    apic_16 { pt3dadd( 425.458, 599.273, 66.0316, 0.5644 ) }
    apic_16 { pt3dadd( 425.783, 598.202, 66.136, 0.6798 ) }
    apic_16 { pt3dadd( 426.345, 597.221, 66.2264, 0.5232 ) }
    apic_16 { pt3dadd( 427.06, 596.338, 66.3715, 0.4304 ) }
    apic_16 { pt3dadd( 427.887, 595.616, 66.631, 0.4436 ) }
    apic_16 { pt3dadd( 428.697, 594.926, 67.0191, 0.4842 ) }
    apic_16 { pt3dadd( 429.451, 594.124, 67.4562, 0.4802 ) }
    apic_16 { pt3dadd( 430.25, 593.331, 67.8754, 0.4008 ) }
    apic_16 { pt3dadd( 430.973, 592.471, 68.2184, 0.3728 ) }
    apic_16 { pt3dadd( 431.444, 591.44, 68.441, 0.4298 ) }
    apic_16 { pt3dadd( 431.747, 590.338, 68.5406, 0.465 ) }
    apic_16 { pt3dadd( 432.097, 589.258, 68.5037, 0.4136 ) }
    apic_16 { pt3dadd( 432.71, 588.336, 68.3393, 0.4272 ) }
    apic_16 { pt3dadd( 433.605, 587.685, 68.0932, 0.3812 ) }
    apic_16 { pt3dadd( 434.635, 587.209, 67.8493, 0.413 ) }
    apic_16 { pt3dadd( 435.562, 586.572, 67.6343, 0.3612 ) }
    apic_16 { pt3dadd( 436.309, 585.725, 67.433, 0.3454 ) }
    apic_16 { pt3dadd( 437.029, 584.843, 67.2991, 0.3846 ) }
    apic_16 { pt3dadd( 437.727, 583.946, 67.2874, 0.3542 ) }
    apic_16 { pt3dadd( 438.38, 583.011, 67.3487, 0.3388 ) }
    apic_16 { pt3dadd( 439.055, 582.097, 67.4108, 0.341 ) }
    apic_16 { pt3dadd( 439.812, 581.248, 67.5147, 0.4244 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_16 { pt3dadd( 440.655, 580.522, 67.741, 0.4236 ) }
    apic_16 { pt3dadd( 441.561, 579.894, 68.0792, 0.4888 ) }
    apic_16 { pt3dadd( 442.58, 579.415, 68.4233, 0.5156 ) }
    apic_16 { pt3dadd( 443.684, 579.199, 68.7828, 0.5642 ) }
    apic_16 { pt3dadd( 444.77, 579.006, 69.1947, 0.4318 ) }
    apic_16 { pt3dadd( 445.812, 578.587, 69.5775, 0.3496 ) }
    apic_16 { pt3dadd( 446.776, 577.976, 69.8827, 0.3206 ) }
    apic_16 { pt3dadd( 447.798, 577.473, 70.1249, 0.3542 ) }
    apic_16 { pt3dadd( 448.836, 577.012, 70.2968, 0.4508 ) }
    apic_16 { pt3dadd( 449.82, 576.438, 70.4654, 0.4616 ) }
    apic_16 { pt3dadd( 450.786, 576.081, 70.8014, 0.6132 ) }
    apic_16 { pt3dadd( 451.796, 575.97, 71.2964, 0.4846 ) }
    apic_16 { pt3dadd( 452.858, 575.759, 71.839, 0.405 ) }
    apic_16 { pt3dadd( 453.924, 575.372, 72.2624, 0.4002 ) }
    apic_16 { pt3dadd( 454.82, 574.672, 72.5724, 0.3856 ) }
    apic_16 { pt3dadd( 455.529, 573.788, 72.8294, 0.3854 ) }
    apic_16 { pt3dadd( 456.185, 572.864, 72.9414, 0.484 ) }
    apic_16 { pt3dadd( 456.613, 571.817, 73.0556, 0.415 ) }
    apic_16 { pt3dadd( 456.858, 570.7, 73.1553, 0.3656 ) }
    apic_16 { pt3dadd( 456.867, 569.563, 73.3037, 0.351 ) }
    apic_16 { pt3dadd( 456.621, 568.45, 73.4667, 0.4064 ) }
    apic_16 { pt3dadd( 456.202, 567.392, 73.652, 0.5668 ) }
    apic_16 { pt3dadd( 455.947, 566.31, 73.9024, 0.5836 ) }
    apic_16 { pt3dadd( 455.646, 565.211, 74.121, 0.6054 ) }
    apic_16 { pt3dadd( 455.55, 564.073, 74.284, 0.462 ) }
    apic_16 { pt3dadd( 455.549, 562.932, 74.3518, 0.4012 ) }
    apic_16 { pt3dadd( 455.596, 561.787, 74.3627, 0.4366 ) }
    apic_16 { pt3dadd( 455.779, 560.659, 74.3266, 0.4714 ) }
    apic_16 { pt3dadd( 455.43, 559.573, 74.2504, 0.4564 ) }
    apic_16 { pt3dadd( 455.055, 558.493, 74.1334, 0.356 ) }
    apic_16 { pt3dadd( 454.679, 557.412, 73.9889, 0.2938 ) }
    apic_16 { pt3dadd( 454.248, 556.352, 73.8136, 0.2626 ) }
    apic_16 { pt3dadd( 453.391, 555.65, 73.5344, 0.2542 ) }
    apic_16 { pt3dadd( 452.874, 554.648, 73.2166, 0.2288 ) }
    apic_16 { pt3dadd( 452.796, 553.582, 72.24, 0.2288 ) }
    // Section: apic_14, id: apic_14, parent: apic_2 (entry count 35/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 465.517, 618.194, 81.0146, 0.4598 ) }
    apic_14 { pt3dadd( 464.747, 618.375, 81.2403, 0.6864 ) }
    apic_14 { pt3dadd( 464.203, 618.881, 82.5532, 0.4464 ) }
    apic_14 { pt3dadd( 463.779, 619.621, 82.836, 0.3296 ) }
    apic_14 { pt3dadd( 463.707, 620.048, 83.4649, 0.2824 ) }
    apic_14 { pt3dadd( 463.541, 620.388, 84.3783, 0.2892 ) }
    apic_14 { pt3dadd( 463.32, 621.384, 85.2617, 0.3014 ) }
    apic_14 { pt3dadd( 463.397, 622.453, 86.0101, 0.3256 ) }
    apic_14 { pt3dadd( 463.434, 623.076, 86.2142, 0.3636 ) }
    apic_14 { pt3dadd( 463.434, 624.073, 86.4088, 0.4672 ) }
    apic_14 { pt3dadd( 463.199, 624.679, 86.7812, 0.4986 ) }
    apic_14 { pt3dadd( 462.832, 625.469, 86.8168, 0.6494 ) }
    apic_14 { pt3dadd( 462.123, 625.997, 86.863, 0.7096 ) }
    apic_14 { pt3dadd( 461.448, 626.302, 86.9568, 0.7408 ) }
    apic_14 { pt3dadd( 460.943, 626.277, 86.7692, 0.5036 ) }
    apic_14 { pt3dadd( 461.447, 626.841, 86.3094, 0.3514 ) }
    apic_14 { pt3dadd( 461.589, 627.558, 85.5327, 0.2756 ) }
    apic_14 { pt3dadd( 460.641, 627.713, 84.7342, 0.2766 ) }
    apic_14 { pt3dadd( 459.508, 627.789, 84.014, 0.2782 ) }
    apic_14 { pt3dadd( 458.871, 628.08, 83.106, 0.2814 ) }
    apic_14 { pt3dadd( 457.793, 628.4, 82.3676, 0.2872 ) }
    apic_14 { pt3dadd( 456.669, 628.508, 81.762, 0.2978 ) }
    apic_14 { pt3dadd( 455.779, 628.285, 81.1171, 0.3186 ) }
    apic_14 { pt3dadd( 454.964, 628.177, 80.4084, 0.352 ) }
    apic_14 { pt3dadd( 454.399, 628.611, 79.6421, 0.4384 ) }
    apic_14 { pt3dadd( 453.921, 628.853, 78.843, 0.4808 ) }
    apic_14 { pt3dadd( 453.26, 629.215, 78.5123, 0.4442 ) }
    apic_14 { pt3dadd( 452.878, 629.435, 78.7898, 0.4776 ) }
    apic_14 { pt3dadd( 452.59, 630.243, 79.3898, 0.506 ) }
    apic_14 { pt3dadd( 452.005, 630.879, 79.8042, 0.4932 ) }
    apic_14 { pt3dadd( 451.791, 631.939, 80.2598, 0.5572 ) }
    apic_14 { pt3dadd( 451.992, 632.76, 80.887, 0.7076 ) }
    apic_14 { pt3dadd( 451.822, 633.523, 81.6715, 0.605 ) }
    apic_14 { pt3dadd( 451.651, 634.298, 82.4466, 0.663 ) }
    apic_14 { pt3dadd( 451.66, 635.286, 83.1102, 0.4824 ) }
    apic_14 { pt3dadd( 451.537, 636.291, 83.7287, 0.4012 ) }
    apic_14 { pt3dadd( 451.761, 637.381, 84.2439, 0.393 ) }
    apic_14 { pt3dadd( 452.47, 637.966, 84.5824, 0.3714 ) }
    apic_14 { pt3dadd( 452.826, 638.996, 84.8123, 0.3642 ) }
    apic_14 { pt3dadd( 453.547, 639.729, 85.0749, 0.4202 ) }
    apic_14 { pt3dadd( 454.167, 640.653, 85.3112, 0.4162 ) }
    apic_14 { pt3dadd( 454.836, 641.517, 85.5347, 0.4732 ) }
    apic_14 { pt3dadd( 455.035, 642.315, 85.8015, 0.4966 ) }
    apic_14 { pt3dadd( 455.008, 643.231, 86.1672, 0.4806 ) }
    apic_14 { pt3dadd( 455.198, 644.218, 86.5542, 0.5106 ) }
    apic_14 { pt3dadd( 454.99, 645.192, 87.0814, 0.7334 ) }
    apic_14 { pt3dadd( 455.336, 646.179, 87.5916, 0.7946 ) }
    apic_14 { pt3dadd( 455.967, 647.056, 88.1404, 0.7848 ) }
    apic_14 { pt3dadd( 455.998, 648.128, 88.765, 0.6778 ) }
    apic_14 { pt3dadd( 455.77, 648.654, 89.6498, 0.683 ) }
    apic_14 { pt3dadd( 456.007, 649.581, 90.5313, 0.62 ) }
    apic_14 { pt3dadd( 456.113, 650.465, 91.4981, 0.6256 ) }
    apic_14 { pt3dadd( 456.227, 651.214, 92.5632, 0.5002 ) }
    apic_14 { pt3dadd( 456.718, 651.879, 93.224, 0.4684 ) }
    apic_14 { pt3dadd( 457.073, 652.93, 93.6496, 0.5802 ) }
    apic_14 { pt3dadd( 457.257, 653.909, 94.0517, 0.6454 ) }
    apic_14 { pt3dadd( 456.9, 654.902, 94.3048, 0.5406 ) }
    apic_14 { pt3dadd( 456.251, 655.605, 94.5991, 0.5254 ) }
    apic_14 { pt3dadd( 455.582, 656.277, 94.8433, 0.5438 ) }
    apic_14 { pt3dadd( 454.818, 657.111, 95.0547, 0.5798 ) }
    apic_14 { pt3dadd( 454.102, 657.728, 95.2983, 0.6384 ) }
    apic_14 { pt3dadd( 453.875, 658.512, 95.3686, 0.5582 ) }
    apic_14 { pt3dadd( 453.047, 658.993, 95.4097, 0.6394 ) }
    apic_14 { pt3dadd( 452.458, 659.734, 95.4593, 0.5886 ) }
    apic_14 { pt3dadd( 451.823, 660.157, 95.7664, 0.7856 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_14 { pt3dadd( 450.898, 660.806, 96.0056, 0.6522 ) }
    apic_14 { pt3dadd( 450.291, 661.636, 96.1598, 0.5378 ) }
    apic_14 { pt3dadd( 449.719, 662.163, 96.4838, 0.3656 ) }
    apic_14 { pt3dadd( 449.331, 663.22, 96.8044, 0.3118 ) }
    apic_14 { pt3dadd( 448.908, 663.972, 97.1939, 0.2966 ) }
    apic_14 { pt3dadd( 448.677, 664.972, 97.5338, 0.315 ) }
    apic_14 { pt3dadd( 448.207, 665.762, 97.6842, 0.3516 ) }
    apic_14 { pt3dadd( 447.305, 666.445, 97.8306, 0.4078 ) }
    apic_14 { pt3dadd( 446.488, 666.928, 98.1361, 0.5682 ) }
    apic_14 { pt3dadd( 445.73, 667.518, 98.5264, 0.5922 ) }
    apic_14 { pt3dadd( 444.844, 668.078, 98.9632, 0.5914 ) }
    apic_14 { pt3dadd( 444.373, 668.995, 99.3583, 0.5812 ) }
    apic_14 { pt3dadd( 443.981, 669.663, 99.8864, 0.6048 ) }
    apic_14 { pt3dadd( 443.757, 670.693, 100.457, 0.6716 ) }
    apic_14 { pt3dadd( 443.499, 671.74, 101.033, 0.6824 ) }
    apic_14 { pt3dadd( 443.072, 672.672, 101.629, 0.5644 ) }
    apic_14 { pt3dadd( 442.927, 673.636, 101.999, 0.5592 ) }
    apic_14 { pt3dadd( 443.072, 674.653, 102.264, 0.6554 ) }
    apic_14 { pt3dadd( 442.378, 675.432, 102.466, 0.5508 ) }
    apic_14 { pt3dadd( 442.23, 675.99, 102.903, 0.356 ) }
    apic_14 { pt3dadd( 441.47, 676.676, 103.88, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 21/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 465.517, 618.194, 81.0146, 0.4598 ) }
    apic_3 { pt3dadd( 466.471, 618.687, 81.2151, 0.6836 ) }
    apic_3 { pt3dadd( 467.552, 618.587, 81.5069, 0.7142 ) }
    apic_3 { pt3dadd( 468.362, 617.968, 81.9465, 0.5774 ) }
    apic_3 { pt3dadd( 469.385, 617.563, 82.4208, 0.5776 ) }
    apic_3 { pt3dadd( 470.413, 617.06, 82.8008, 0.4898 ) }
    // Section: apic_13, id: apic_13, parent: apic_3 (entry count 27/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 470.413, 617.06, 82.8008, 0.4898 ) }
    apic_13 { pt3dadd( 470.941, 615.948, 82.6431, 0.4576 ) }
    apic_13 { pt3dadd( 471.156, 614.86, 82.1624, 0.3686 ) }
    apic_13 { pt3dadd( 471.05, 613.764, 81.9109, 0.3168 ) }
    apic_13 { pt3dadd( 470.869, 612.657, 81.6998, 0.307 ) }
    apic_13 { pt3dadd( 470.616, 611.555, 81.5956, 0.3294 ) }
    apic_13 { pt3dadd( 470.085, 610.632, 81.4444, 0.4016 ) }
    apic_13 { pt3dadd( 469.395, 609.789, 81.233, 0.3868 ) }
    apic_13 { pt3dadd( 468.796, 608.83, 81.0939, 0.3952 ) }
    apic_13 { pt3dadd( 468.322, 607.845, 81.1362, 0.4658 ) }
    apic_13 { pt3dadd( 467.944, 606.94, 81.3974, 0.5572 ) }
    apic_13 { pt3dadd( 467.404, 605.986, 81.622, 0.4608 ) }
    apic_13 { pt3dadd( 466.688, 605.19, 81.6676, 0.4292 ) }
    apic_13 { pt3dadd( 465.862, 604.414, 81.6662, 0.343 ) }
    apic_13 { pt3dadd( 465.417, 603.377, 81.6589, 0.3166 ) }
    apic_13 { pt3dadd( 465.143, 602.267, 81.6206, 0.3064 ) }
    apic_13 { pt3dadd( 464.719, 601.25, 81.6606, 0.3282 ) }
    apic_13 { pt3dadd( 464.248, 600.212, 81.6956, 0.3992 ) }
    apic_13 { pt3dadd( 464.008, 599.097, 81.6911, 0.384 ) }
    apic_13 { pt3dadd( 463.768, 598.005, 81.6794, 0.3824 ) }
    apic_13 { pt3dadd( 463.93, 596.897, 81.4842, 0.4782 ) }
    apic_13 { pt3dadd( 463.882, 595.856, 81.0186, 0.4044 ) }
    apic_13 { pt3dadd( 463.636, 594.776, 80.3869, 0.3458 ) }
    apic_13 { pt3dadd( 463.567, 593.694, 79.6026, 0.3134 ) }
    apic_13 { pt3dadd( 463.63, 592.61, 78.7097, 0.3422 ) }
    apic_13 { pt3dadd( 463.883, 591.562, 77.7504, 0.4204 ) }
    apic_13 { pt3dadd( 464.154, 590.734, 76.6402, 0.4464 ) }
    apic_13 { pt3dadd( 464.366, 590.058, 75.4001, 0.3846 ) }
    apic_13 { pt3dadd( 464.137, 589.089, 74.207, 0.3476 ) }
    apic_13 { pt3dadd( 463.47, 588.209, 73.1629, 0.3586 ) }
    apic_13 { pt3dadd( 462.826, 587.286, 72.3257, 0.4516 ) }
    apic_13 { pt3dadd( 462.567, 586.174, 71.6601, 0.5002 ) }
    apic_13 { pt3dadd( 462.391, 585.076, 71.0651, 0.5046 ) }
    apic_13 { pt3dadd( 462.375, 584.07, 70.3892, 0.4708 ) }
    apic_13 { pt3dadd( 462.727, 583.037, 69.6755, 0.3838 ) }
    apic_13 { pt3dadd( 463.02, 581.965, 68.9492, 0.34 ) }
    apic_13 { pt3dadd( 463.21, 580.84, 68.2671, 0.3744 ) }
    apic_13 { pt3dadd( 463.461, 579.753, 67.5676, 0.3356 ) }
    apic_13 { pt3dadd( 463.615, 578.754, 66.738, 0.3034 ) }
    apic_13 { pt3dadd( 463.603, 577.794, 65.8101, 0.2808 ) }
    apic_13 { pt3dadd( 463.055, 576.853, 64.8847, 0.2862 ) }
    apic_13 { pt3dadd( 462.432, 576.041, 63.9052, 0.296 ) }
    apic_13 { pt3dadd( 462.073, 575.125, 62.8746, 0.3152 ) }
    apic_13 { pt3dadd( 461.916, 574.062, 61.9094, 0.3456 ) }
    apic_13 { pt3dadd( 461.994, 572.948, 61.0842, 0.4266 ) }
    apic_13 { pt3dadd( 462.319, 571.88, 60.3565, 0.4576 ) }
    apic_13 { pt3dadd( 462.329, 570.845, 59.6369, 0.4064 ) }
    apic_13 { pt3dadd( 461.682, 570.016, 58.9641, 0.383 ) }
    apic_13 { pt3dadd( 460.63, 569.712, 58.3414, 0.4498 ) }
    apic_13 { pt3dadd( 459.505, 569.675, 57.7433, 0.4966 ) }
    apic_13 { pt3dadd( 458.416, 569.4, 57.1844, 0.4982 ) }
    apic_13 { pt3dadd( 457.412, 568.879, 56.632, 0.459 ) }
    apic_13 { pt3dadd( 456.537, 568.257, 55.998, 0.3608 ) }
    apic_13 { pt3dadd( 455.985, 567.423, 55.235, 0.3028 ) }
    apic_13 { pt3dadd( 455.846, 566.388, 54.4018, 0.2798 ) }
    apic_13 { pt3dadd( 455.979, 565.274, 53.5984, 0.2842 ) }
    apic_13 { pt3dadd( 456.044, 564.168, 52.8125, 0.2926 ) }
    apic_13 { pt3dadd( 455.562, 563.513, 51.9238, 0.3076 ) }
    apic_13 { pt3dadd( 454.71, 563.851, 50.976, 0.3376 ) }
    apic_13 { pt3dadd( 453.826, 564.524, 50.1049, 0.3822 ) }
    apic_13 { pt3dadd( 452.826, 565.064, 49.329, 0.5198 ) }
    apic_13 { pt3dadd( 451.798, 565.5, 48.5635, 0.507 ) }
    apic_13 { pt3dadd( 450.757, 565.738, 47.7232, 0.412 ) }
    apic_13 { pt3dadd( 449.958, 565.323, 46.769, 0.353 ) }
    apic_13 { pt3dadd( 449.668, 564.287, 45.8626, 0.3616 ) }
    apic_13 { pt3dadd( 450.174, 563.378, 44.9534, 0.4914 ) }
    apic_13 { pt3dadd( 451.141, 563.262, 44.0171, 0.4068 ) }
    apic_13 { pt3dadd( 452.109, 563.191, 42.0, 0.4576 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 95/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 470.413, 617.06, 82.8008, 0.4898 ) }
    apic_4 { pt3dadd( 471.049, 616.808, 83.0715, 0.5256 ) }
    apic_4 { pt3dadd( 472.108, 616.411, 83.2765, 0.5428 ) }
    apic_4 { pt3dadd( 473.18, 616.031, 83.505, 0.5854 ) }
    apic_4 { pt3dadd( 474.102, 615.43, 83.8219, 0.6122 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_4 { pt3dadd( 474.634, 614.5, 84.2772, 0.6862 ) }
    apic_4 { pt3dadd( 475.022, 613.549, 84.9097, 0.705 ) }
    apic_4 { pt3dadd( 475.617, 612.82, 85.7002, 0.6296 ) }
    apic_4 { pt3dadd( 476.411, 612.128, 86.4956, 0.5656 ) }
    apic_4 { pt3dadd( 477.396, 611.585, 87.1335, 0.5378 ) }
    apic_4 { pt3dadd( 478.431, 611.118, 87.5588, 0.503 ) }
    apic_4 { pt3dadd( 479.04, 610.215, 87.8878, 0.5856 ) }
    apic_4 { pt3dadd( 479.762, 609.344, 88.158, 0.7102 ) }
    apic_4 { pt3dadd( 480.747, 608.817, 88.431, 0.8518 ) }
    apic_4 { pt3dadd( 481.813, 608.442, 88.7183, 0.633 ) }
    apic_4 { pt3dadd( 482.929, 608.202, 88.9924, 0.5048 ) }
    apic_4 { pt3dadd( 484.033, 607.906, 89.2436, 0.5224 ) }
    apic_4 { pt3dadd( 485.142, 607.732, 89.4219, 0.6876 ) }
    apic_4 { pt3dadd( 486.217, 607.404, 89.7047, 0.5804 ) }
    apic_4 { pt3dadd( 487.314, 607.162, 90.1009, 0.557 ) }
    apic_4 { pt3dadd( 488.219, 606.865, 90.7441, 0.5786 ) }
    apic_4 { pt3dadd( 489.172, 606.542, 91.5449, 0.5312 ) }
    apic_4 { pt3dadd( 490.235, 606.147, 92.3079, 0.4102 ) }
    apic_4 { pt3dadd( 491.357, 606.311, 93.0272, 0.348 ) }
    apic_4 { pt3dadd( 491.868, 607.272, 93.7591, 0.3592 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 20/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 491.868, 607.272, 93.7591, 0.3592 ) }
    apic_8 { pt3dadd( 492.244, 607.559, 94.4639, 0.4528 ) }
    apic_8 { pt3dadd( 493.242, 607.926, 95.144, 0.5008 ) }
    apic_8 { pt3dadd( 494.118, 607.816, 95.9283, 0.5134 ) }
    apic_8 { pt3dadd( 495.186, 607.833, 96.6918, 0.4508 ) }
    apic_8 { pt3dadd( 496.26, 607.473, 97.3036, 0.5218 ) }
    apic_8 { pt3dadd( 497.354, 607.453, 97.755, 0.4328 ) }
    apic_8 { pt3dadd( 498.168, 606.649, 98.1176, 0.4242 ) }
    apic_8 { pt3dadd( 498.951, 605.826, 98.4449, 0.334 ) }
    apic_8 { pt3dadd( 499.661, 604.983, 98.8378, 0.3 ) }
    apic_8 { pt3dadd( 500.316, 604.103, 99.2667, 0.2746 ) }
    apic_8 { pt3dadd( 500.664, 603.436, 99.8729, 0.2748 ) }
    apic_8 { pt3dadd( 500.829, 602.498, 100.575, 0.2748 ) }
    apic_8 { pt3dadd( 501.382, 601.53, 101.093, 0.2752 ) }
    apic_8 { pt3dadd( 502.435, 601.109, 101.57, 0.2756 ) }
    apic_8 { pt3dadd( 503.56, 601.055, 102.026, 0.2766 ) }
    apic_8 { pt3dadd( 504.671, 600.94, 102.434, 0.2782 ) }
    apic_8 { pt3dadd( 505.706, 600.541, 102.871, 0.2814 ) }
    apic_8 { pt3dadd( 506.633, 600.046, 103.412, 0.287 ) }
    apic_8 { pt3dadd( 507.412, 599.424, 104.103, 0.2988 ) }
    apic_8 { pt3dadd( 508.233, 598.64, 104.672, 0.3142 ) }
    apic_8 { pt3dadd( 509.296, 598.558, 105.277, 0.3734 ) }
    apic_8 { pt3dadd( 510.297, 598.961, 105.841, 0.334 ) }
    apic_8 { pt3dadd( 511.23, 598.583, 106.415, 0.3 ) }
    apic_8 { pt3dadd( 512.053, 598.136, 106.71, 0.2748 ) }
    apic_8 { pt3dadd( 513.036, 597.771, 106.825, 0.275 ) }
    apic_8 { pt3dadd( 513.87, 597.056, 107.035, 0.2752 ) }
    apic_8 { pt3dadd( 514.659, 596.256, 107.182, 0.2758 ) }
    apic_8 { pt3dadd( 515.466, 595.516, 107.478, 0.277 ) }
    apic_8 { pt3dadd( 516.412, 595.077, 107.976, 0.279 ) }
    apic_8 { pt3dadd( 517.368, 594.491, 108.56, 0.2826 ) }
    apic_8 { pt3dadd( 518.161, 593.707, 109.235, 0.2896 ) }
    apic_8 { pt3dadd( 519.035, 592.992, 109.921, 0.3022 ) }
    apic_8 { pt3dadd( 519.948, 592.645, 110.744, 0.3268 ) }
    apic_8 { pt3dadd( 520.849, 592.666, 111.743, 0.3672 ) }
    apic_8 { pt3dadd( 521.87, 592.388, 112.794, 0.4678 ) }
    apic_8 { pt3dadd( 522.706, 592.579, 114.001, 0.5282 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 57/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 491.868, 607.272, 93.7591, 0.3592 ) }
    apic_5 { pt3dadd( 492.481, 607.739, 94.369, 0.4576 ) }
    apic_5 { pt3dadd( 493.521, 608.196, 94.0663, 0.4154 ) }
    apic_5 { pt3dadd( 494.595, 608.587, 93.9448, 0.4304 ) }
    apic_5 { pt3dadd( 495.661, 608.997, 93.7367, 0.3874 ) }
    apic_5 { pt3dadd( 496.767, 609.074, 93.3663, 0.4242 ) }
    apic_5 { pt3dadd( 497.876, 608.796, 92.9494, 0.383 ) }
    apic_5 { pt3dadd( 499.016, 608.762, 92.4622, 0.3804 ) }
    apic_5 { pt3dadd( 499.803, 608.949, 91.6454, 0.4748 ) }
    apic_5 { pt3dadd( 500.395, 609.779, 90.6951, 0.3978 ) }
    apic_5 { pt3dadd( 501.031, 610.693, 89.7518, 0.334 ) }
    // Section: apic_12, id: apic_12, parent: apic_8 (entry count 68/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 522.706, 592.579, 114.001, 0.5282 ) }
    apic_12 { pt3dadd( 524.04, 592.418, 113.489, 0.2288 ) }
    apic_12 { pt3dadd( 525.16, 592.232, 113.365, 0.2768 ) }
    apic_12 { pt3dadd( 526.233, 591.973, 113.393, 0.2786 ) }
    apic_12 { pt3dadd( 527.084, 591.449, 113.327, 0.282 ) }
    apic_12 { pt3dadd( 527.865, 590.749, 113.063, 0.2884 ) }
    apic_12 { pt3dadd( 528.875, 590.251, 112.755, 0.2998 ) }
    apic_12 { pt3dadd( 529.889, 589.741, 112.401, 0.3236 ) }
    apic_12 { pt3dadd( 530.388, 588.925, 111.853, 0.355 ) }
    apic_12 { pt3dadd( 530.794, 588.033, 111.102, 0.4748 ) }
    apic_12 { pt3dadd( 531.824, 587.872, 110.297, 0.398 ) }
    apic_12 { pt3dadd( 532.485, 587.64, 109.335, 0.3342 ) }
    apic_12 { pt3dadd( 533.237, 586.79, 108.515, 0.2906 ) }
    apic_12 { pt3dadd( 534.073, 586.021, 107.882, 0.3054 ) }
    apic_12 { pt3dadd( 535.013, 585.491, 107.393, 0.3266 ) }
    apic_12 { pt3dadd( 535.87, 585.566, 106.815, 0.3968 ) }
    apic_12 { pt3dadd( 536.747, 585.004, 106.458, 0.3768 ) }
    apic_12 { pt3dadd( 537.795, 584.612, 106.28, 0.3812 ) }
    apic_12 { pt3dadd( 538.837, 584.179, 106.091, 0.4166 ) }
    apic_12 { pt3dadd( 539.716, 583.469, 105.863, 0.5794 ) }
    apic_12 { pt3dadd( 540.509, 582.708, 105.6, 0.6376 ) }
    apic_12 { pt3dadd( 541.358, 582.09, 105.338, 0.556 ) }
    apic_12 { pt3dadd( 542.095, 581.461, 104.983, 0.4102 ) }
    apic_12 { pt3dadd( 542.844, 580.726, 104.724, 0.342 ) }
    apic_12 { pt3dadd( 543.719, 580.383, 104.755, 0.378 ) }
    apic_12 { pt3dadd( 544.727, 579.92, 104.798, 0.3424 ) }
    apic_12 { pt3dadd( 545.664, 579.331, 104.737, 0.316 ) }
    apic_12 { pt3dadd( 546.618, 579.206, 104.49, 0.3036 ) }
    apic_12 { pt3dadd( 547.751, 579.139, 104.254, 0.3306 ) }
    apic_12 { pt3dadd( 548.808, 578.811, 104.061, 0.3678 ) }
    apic_12 { pt3dadd( 549.758, 578.23, 103.974, 0.4996 ) }
    apic_12 { pt3dadd( 550.8, 578.014, 103.969, 0.4388 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_12 { pt3dadd( 551.854, 577.869, 104.075, 0.4354 ) }
    apic_12 { pt3dadd( 552.907, 577.592, 104.076, 0.3544 ) }
    apic_12 { pt3dadd( 553.914, 577.228, 103.835, 0.3388 ) }
    apic_12 { pt3dadd( 554.871, 576.969, 103.339, 0.3424 ) }
    apic_12 { pt3dadd( 555.974, 576.861, 102.77, 0.4206 ) }
    apic_12 { pt3dadd( 556.81, 576.193, 102.267, 0.4466 ) }
    apic_12 { pt3dadd( 557.821, 575.9, 101.678, 0.386 ) }
    apic_12 { pt3dadd( 558.779, 575.325, 101.156, 0.3442 ) }
    apic_12 { pt3dadd( 559.536, 574.515, 100.665, 0.3822 ) }
    apic_12 { pt3dadd( 560.094, 573.534, 100.289, 0.3498 ) }
    apic_12 { pt3dadd( 560.323, 572.498, 99.9785, 0.3308 ) }
    apic_12 { pt3dadd( 560.971, 572.148, 99.4714, 0.3264 ) }
    apic_12 { pt3dadd( 561.823, 571.896, 98.9842, 0.3962 ) }
    apic_12 { pt3dadd( 562.812, 571.351, 98.5715, 0.3756 ) }
    apic_12 { pt3dadd( 563.597, 570.597, 98.1056, 0.379 ) }
    apic_12 { pt3dadd( 564.256, 569.74, 97.6161, 0.413 ) }
    apic_12 { pt3dadd( 564.738, 568.78, 97.1564, 0.5712 ) }
    apic_12 { pt3dadd( 565.391, 567.94, 96.9464, 0.63 ) }
    apic_12 { pt3dadd( 566.115, 567.193, 96.6941, 0.5056 ) }
    apic_12 { pt3dadd( 566.875, 566.384, 96.6218, 0.4914 ) }
    apic_12 { pt3dadd( 567.677, 565.727, 96.78, 0.3304 ) }
    apic_12 { pt3dadd( 568.454, 565.136, 96.88, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 22/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 522.706, 592.579, 114.001, 0.5282 ) }
    apic_9 { pt3dadd( 523.411, 592.412, 115.091, 0.5662 ) }
    apic_9 { pt3dadd( 523.863, 591.633, 116.24, 0.5384 ) }
    apic_9 { pt3dadd( 524.782, 591.454, 117.412, 0.734 ) }
    apic_9 { pt3dadd( 525.651, 590.988, 118.571, 0.5854 ) }
    apic_9 { pt3dadd( 526.625, 590.544, 119.626, 0.5016 ) }
    apic_9 { pt3dadd( 527.647, 590.352, 120.611, 0.5612 ) }
    apic_9 { pt3dadd( 528.422, 589.639, 121.547, 0.5426 ) }
    apic_9 { pt3dadd( 528.954, 588.682, 122.402, 0.678 ) }
    apic_9 { pt3dadd( 529.604, 587.833, 123.25, 0.5608 ) }
    apic_9 { pt3dadd( 530.461, 587.16, 124.094, 0.5306 ) }
    apic_9 { pt3dadd( 531.248, 586.541, 125.009, 0.7094 ) }
    apic_9 { pt3dadd( 532.031, 586.577, 126.036, 0.5882 ) }
    apic_9 { pt3dadd( 532.805, 585.951, 127.034, 0.502 ) }
    apic_9 { pt3dadd( 533.872, 585.62, 127.877, 0.5842 ) }
    apic_9 { pt3dadd( 534.805, 585.008, 128.548, 0.4768 ) }
    apic_9 { pt3dadd( 535.693, 584.376, 128.93, 0.3958 ) }
    apic_9 { pt3dadd( 536.569, 583.837, 129.21, 0.3586 ) }
    apic_9 { pt3dadd( 537.677, 584.093, 129.476, 0.4282 ) }
    apic_9 { pt3dadd( 538.716, 583.904, 129.864, 0.5698 ) }
    apic_9 { pt3dadd( 539.743, 584.099, 130.376, 0.771 ) }
    apic_9 { pt3dadd( 540.766, 583.697, 130.91, 0.7554 ) }
    apic_9 { pt3dadd( 541.644, 583.107, 131.488, 0.7836 ) }
    apic_9 { pt3dadd( 542.73, 582.75, 131.935, 0.7868 ) }
    apic_9 { pt3dadd( 543.812, 582.49, 132.204, 0.8024 ) }
    apic_9 { pt3dadd( 544.753, 582.32, 132.556, 0.7844 ) }
    apic_9 { pt3dadd( 545.751, 581.876, 132.932, 0.7502 ) }
    apic_9 { pt3dadd( 546.686, 581.222, 133.265, 0.6908 ) }
    apic_9 { pt3dadd( 547.511, 580.467, 133.592, 0.5604 ) }
    apic_9 { pt3dadd( 548.128, 579.594, 133.92, 0.4168 ) }
    apic_9 { pt3dadd( 548.795, 578.707, 134.167, 0.3618 ) }
    apic_9 { pt3dadd( 549.755, 578.254, 134.46, 0.3784 ) }
    apic_9 { pt3dadd( 550.852, 578.274, 134.76, 0.519 ) }
    apic_9 { pt3dadd( 551.878, 578.289, 134.85, 0.4754 ) }
    apic_9 { pt3dadd( 552.786, 577.632, 134.893, 0.499 ) }
    apic_9 { pt3dadd( 553.672, 576.939, 135.034, 0.4926 ) }
    apic_9 { pt3dadd( 554.617, 576.343, 135.238, 0.4968 ) }
    apic_9 { pt3dadd( 555.347, 575.656, 135.638, 0.4268 ) }
    apic_9 { pt3dadd( 556.253, 575.283, 136.137, 0.4452 ) }
    apic_9 { pt3dadd( 557.138, 574.838, 136.718, 0.4454 ) }
    apic_9 { pt3dadd( 558.018, 574.318, 137.356, 0.3836 ) }
    apic_9 { pt3dadd( 558.995, 573.792, 137.828, 0.34 ) }
    apic_9 { pt3dadd( 560.06, 573.501, 138.099, 0.3742 ) }
    apic_9 { pt3dadd( 561.076, 573.324, 138.142, 0.3354 ) }
    apic_9 { pt3dadd( 562.162, 573.221, 138.255, 0.3026 ) }
    apic_9 { pt3dadd( 562.914, 572.931, 138.667, 0.2796 ) }
    apic_9 { pt3dadd( 563.722, 573.662, 139.085, 0.2838 ) }
    apic_9 { pt3dadd( 564.466, 574.192, 139.74, 0.2916 ) }
    apic_9 { pt3dadd( 565.482, 574.019, 140.475, 0.306 ) }
    apic_9 { pt3dadd( 566.305, 573.323, 141.245, 0.334 ) }
    apic_9 { pt3dadd( 567.237, 572.752, 141.968, 0.38 ) }
    apic_9 { pt3dadd( 568.157, 572.105, 142.605, 0.4936 ) }
    apic_9 { pt3dadd( 568.949, 571.319, 143.085, 0.5664 ) }
    apic_9 { pt3dadd( 569.92, 570.777, 143.583, 0.6834 ) }
    apic_9 { pt3dadd( 570.888, 570.224, 144.1, 0.5296 ) }
    apic_9 { pt3dadd( 571.914, 570.017, 144.65, 0.4436 ) }
    apic_9 { pt3dadd( 572.94, 570.242, 145.305, 0.4616 ) }
    apic_9 { pt3dadd( 573.896, 570.606, 146.054, 0.5482 ) }
    apic_9 { pt3dadd( 574.836, 570.927, 146.872, 0.4506 ) }
    apic_9 { pt3dadd( 575.915, 570.761, 147.577, 0.3794 ) }
    apic_9 { pt3dadd( 577.027, 570.537, 148.147, 0.4012 ) }
    apic_9 { pt3dadd( 578.104, 570.195, 148.522, 0.3804 ) }
    apic_9 { pt3dadd( 578.936, 569.457, 148.7, 0.4114 ) }
    apic_9 { pt3dadd( 579.857, 568.855, 148.815, 0.3582 ) }
    apic_9 { pt3dadd( 580.737, 568.283, 149.029, 0.3398 ) }
    apic_9 { pt3dadd( 581.841, 568.057, 149.255, 0.374 ) }
    apic_9 { pt3dadd( 582.924, 567.894, 149.557, 0.3348 ) }
    apic_9 { pt3dadd( 583.904, 568.196, 150.102, 0.3018 ) }
    apic_9 { pt3dadd( 584.313, 568.214, 150.998, 0.2778 ) }
    apic_9 { pt3dadd( 584.98, 568.612, 152.032, 0.2806 ) }
    apic_9 { pt3dadd( 586.0, 568.415, 153.041, 0.2858 ) }
    apic_9 { pt3dadd( 587.091, 568.153, 153.908, 0.2952 ) }
    apic_9 { pt3dadd( 588.12, 567.689, 154.569, 0.3128 ) }
    apic_9 { pt3dadd( 589.058, 567.061, 154.961, 0.346 ) }
    apic_9 { pt3dadd( 590.037, 566.518, 155.215, 0.4048 ) }
    apic_9 { pt3dadd( 591.029, 566.386, 155.557, 0.527 ) }
    apic_9 { pt3dadd( 591.938, 566.111, 155.952, 0.6898 ) }
    apic_9 { pt3dadd( 592.984, 565.822, 156.295, 0.6146 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_9 { pt3dadd( 593.985, 565.613, 156.746, 0.4746 ) }
    apic_9 { pt3dadd( 595.008, 565.141, 157.131, 0.4472 ) }
    apic_9 { pt3dadd( 596.096, 565.016, 157.53, 0.413 ) }
    apic_9 { pt3dadd( 597.154, 564.907, 157.775, 0.4978 ) }
    apic_9 { pt3dadd( 598.198, 565.136, 157.858, 0.3932 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 5/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 501.031, 610.693, 89.7518, 0.334 ) }
    apic_7 { pt3dadd( 501.408, 611.211, 89.53, 0.4576 ) }
    apic_7 { pt3dadd( 501.764, 612.217, 90.0326, 0.5354 ) }
    apic_7 { pt3dadd( 502.083, 613.229, 90.2812, 0.6998 ) }
    apic_7 { pt3dadd( 502.516, 614.254, 90.5929, 0.66 ) }
    apic_7 { pt3dadd( 503.103, 615.003, 91.105, 0.6574 ) }
    apic_7 { pt3dadd( 503.667, 615.911, 91.7112, 0.5356 ) }
    apic_7 { pt3dadd( 503.942, 616.933, 92.3877, 0.4194 ) }
    apic_7 { pt3dadd( 504.717, 617.704, 93.0199, 0.3588 ) }
    apic_7 { pt3dadd( 505.154, 618.744, 93.555, 0.41 ) }
    apic_7 { pt3dadd( 505.741, 619.723, 93.9688, 0.3976 ) }
    apic_7 { pt3dadd( 506.303, 620.709, 94.3065, 0.4384 ) }
    apic_7 { pt3dadd( 506.77, 621.737, 94.631, 0.4328 ) }
    apic_7 { pt3dadd( 507.302, 622.728, 94.9281, 0.3594 ) }
    apic_7 { pt3dadd( 507.941, 623.561, 95.2876, 0.3 ) }
    apic_7 { pt3dadd( 508.248, 624.615, 95.6393, 0.2746 ) }
    apic_7 { pt3dadd( 508.86, 625.539, 95.8672, 0.2746 ) }
    apic_7 { pt3dadd( 509.514, 626.312, 96.2525, 0.2746 ) }
    apic_7 { pt3dadd( 509.985, 627.355, 96.5846, 0.2748 ) }
    apic_7 { pt3dadd( 510.44, 628.332, 96.9525, 0.275 ) }
    apic_7 { pt3dadd( 510.718, 629.266, 97.4509, 0.2752 ) }
    apic_7 { pt3dadd( 511.177, 630.305, 97.8818, 0.2758 ) }
    apic_7 { pt3dadd( 511.652, 631.319, 98.2618, 0.2768 ) }
    apic_7 { pt3dadd( 511.925, 632.417, 98.6112, 0.2788 ) }
    apic_7 { pt3dadd( 512.44, 633.42, 98.9932, 0.2824 ) }
    apic_7 { pt3dadd( 513.143, 634.164, 99.4714, 0.2892 ) }
    apic_7 { pt3dadd( 513.902, 634.854, 100.029, 0.3014 ) }
    apic_7 { pt3dadd( 514.424, 635.849, 100.558, 0.3254 ) }
    apic_7 { pt3dadd( 514.795, 636.873, 101.14, 0.3644 ) }
    apic_7 { pt3dadd( 515.006, 637.916, 101.627, 0.4622 ) }
    apic_7 { pt3dadd( 515.445, 638.899, 102.172, 0.5198 ) }
    apic_7 { pt3dadd( 516.31, 639.546, 102.801, 0.5418 ) }
    apic_7 { pt3dadd( 516.88, 640.364, 103.538, 0.5354 ) }
    apic_7 { pt3dadd( 517.221, 641.04, 104.473, 0.524 ) }
    apic_7 { pt3dadd( 517.448, 641.941, 105.503, 0.5018 ) }
    apic_7 { pt3dadd( 517.87, 642.869, 106.543, 0.4656 ) }
    apic_7 { pt3dadd( 518.428, 643.779, 107.3, 0.373 ) }
    apic_7 { pt3dadd( 519.307, 644.082, 108.134, 0.325 ) }
    apic_7 { pt3dadd( 519.901, 644.579, 108.955, 0.3232 ) }
    apic_7 { pt3dadd( 520.56, 645.463, 109.579, 0.3544 ) }
    apic_7 { pt3dadd( 521.385, 645.886, 110.276, 0.4736 ) }
    apic_7 { pt3dadd( 522.411, 646.131, 110.923, 0.3956 ) }
    apic_7 { pt3dadd( 523.406, 646.367, 111.614, 0.3296 ) }
    apic_7 { pt3dadd( 524.128, 647.195, 112.259, 0.2826 ) }
    apic_7 { pt3dadd( 525.087, 647.628, 112.857, 0.2892 ) }
    apic_7 { pt3dadd( 526.082, 647.337, 113.485, 0.3026 ) }
    apic_7 { pt3dadd( 526.497, 647.449, 113.762, 0.3214 ) }
    apic_7 { pt3dadd( 527.569, 647.392, 114.089, 0.387 ) }
    apic_7 { pt3dadd( 528.076, 647.378, 114.702, 0.3584 ) }
    apic_7 { pt3dadd( 528.69, 647.612, 115.388, 0.3478 ) }
    apic_7 { pt3dadd( 529.626, 647.312, 115.821, 0.3526 ) }
    apic_7 { pt3dadd( 530.641, 647.194, 116.188, 0.4704 ) }
    apic_7 { pt3dadd( 531.576, 647.163, 116.728, 0.3898 ) }
    apic_7 { pt3dadd( 532.651, 647.091, 117.226, 0.3192 ) }
    apic_7 { pt3dadd( 533.774, 647.213, 117.608, 0.2626 ) }
    apic_7 { pt3dadd( 534.896, 647.4, 117.89, 0.2542 ) }
    apic_7 { pt3dadd( 535.753, 648.07, 118.112, 0.2288 ) }
    apic_7 { pt3dadd( 536.651, 648.305, 117.88, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 63/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 501.031, 610.693, 89.7518, 0.334 ) }
    apic_6 { pt3dadd( 501.11, 610.365, 88.8107, 0.2906 ) }
    apic_6 { pt3dadd( 501.212, 609.393, 87.7856, 0.3042 ) }
    apic_6 { pt3dadd( 501.178, 608.377, 86.756, 0.3304 ) }
    apic_6 { pt3dadd( 501.316, 607.383, 85.7592, 0.3736 ) }
    apic_6 { pt3dadd( 501.772, 606.357, 84.894, 0.4804 ) }
    apic_6 { pt3dadd( 502.383, 605.404, 84.1456, 0.5484 ) }
    apic_6 { pt3dadd( 503.069, 604.513, 83.4828, 0.6192 ) }
    apic_6 { pt3dadd( 503.835, 603.685, 82.9021, 0.5608 ) }
    apic_6 { pt3dadd( 504.621, 602.965, 82.2979, 0.4592 ) }
    apic_6 { pt3dadd( 505.465, 602.394, 81.639, 0.466 ) }
    apic_6 { pt3dadd( 506.435, 601.864, 81.0272, 0.4474 ) }
    apic_6 { pt3dadd( 507.374, 601.22, 80.5454, 0.5636 ) }
    apic_6 { pt3dadd( 508.193, 600.42, 80.1912, 0.5046 ) }
    apic_6 { pt3dadd( 509.026, 599.638, 79.9358, 0.5838 ) }
    apic_6 { pt3dadd( 509.921, 598.925, 79.7513, 0.5026 ) }
    apic_6 { pt3dadd( 510.829, 598.238, 79.5838, 0.544 ) }
    apic_6 { pt3dadd( 511.835, 597.722, 79.3528, 0.6028 ) }
    apic_6 { pt3dadd( 512.912, 597.396, 79.0541, 0.571 ) }
    apic_6 { pt3dadd( 514.031, 597.187, 78.7685, 0.5094 ) }
    apic_6 { pt3dadd( 515.057, 596.81, 78.4949, 0.4082 ) }
    apic_6 { pt3dadd( 515.807, 596.18, 78.0116, 0.3848 ) }
    apic_6 { pt3dadd( 516.523, 595.64, 77.3584, 0.4606 ) }
    apic_6 { pt3dadd( 517.547, 595.298, 76.7567, 0.4796 ) }
    apic_6 { pt3dadd( 518.552, 594.79, 76.3286, 0.6472 ) }
    apic_6 { pt3dadd( 519.495, 594.171, 75.9525, 0.5434 ) }
    apic_6 { pt3dadd( 520.427, 593.593, 75.5468, 0.5344 ) }
    apic_6 { pt3dadd( 521.445, 593.173, 75.1436, 0.542 ) }
    apic_6 { pt3dadd( 522.509, 592.796, 74.7816, 0.438 ) }
    apic_6 { pt3dadd( 523.579, 592.436, 74.4338, 0.3608 ) }
    apic_6 { pt3dadd( 524.649, 592.084, 74.097, 0.3426 ) }
    apic_6 { pt3dadd( 525.693, 591.656, 73.8794, 0.3896 ) }
    apic_6 { pt3dadd( 526.633, 591.049, 73.7937, 0.541 ) }
    apic_6 { pt3dadd( 527.586, 590.447, 73.7237, 0.511 ) }
    apic_6 { pt3dadd( 528.643, 590.072, 73.5725, 0.5908 ) }
    apic_6 { pt3dadd( 529.694, 589.683, 73.3594, 0.5388 ) }
    apic_6 { pt3dadd( 530.698, 589.137, 73.1326, 0.497 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_6 { pt3dadd( 531.615, 588.49, 72.8437, 0.3844 ) }
    apic_6 { pt3dadd( 532.527, 587.849, 72.499, 0.3458 ) }
    apic_6 { pt3dadd( 533.589, 587.608, 72.1748, 0.3626 ) }
    apic_6 { pt3dadd( 534.701, 587.538, 71.8575, 0.423 ) }
    apic_6 { pt3dadd( 535.743, 587.122, 71.5117, 0.621 ) }
    apic_6 { pt3dadd( 536.669, 586.487, 71.2071, 0.5706 ) }
    apic_6 { pt3dadd( 537.589, 585.85, 70.9296, 0.4454 ) }
    apic_6 { pt3dadd( 538.56, 585.36, 70.5351, 0.3674 ) }
    apic_6 { pt3dadd( 539.558, 584.938, 70.0426, 0.39 ) }
    apic_6 { pt3dadd( 540.654, 584.672, 69.5372, 0.5344 ) }
    apic_6 { pt3dadd( 541.755, 584.446, 69.0063, 0.5346 ) }
    apic_6 { pt3dadd( 542.758, 583.977, 68.4312, 0.4594 ) }
    apic_6 { pt3dadd( 543.596, 583.276, 67.8076, 0.4586 ) }
    apic_6 { pt3dadd( 544.331, 582.468, 67.1493, 0.471 ) }
    apic_6 { pt3dadd( 545.224, 581.851, 66.4857, 0.4262 ) }
    apic_6 { pt3dadd( 546.287, 581.815, 65.816, 0.4442 ) }
    apic_6 { pt3dadd( 547.38, 582.102, 65.1717, 0.4436 ) }
    apic_6 { pt3dadd( 548.49, 582.317, 64.5414, 0.3792 ) }
    apic_6 { pt3dadd( 549.555, 582.306, 63.8364, 0.338 ) }
    apic_6 { pt3dadd( 550.578, 582.091, 63.0378, 0.3394 ) }
    apic_6 { pt3dadd( 551.615, 581.794, 62.1984, 0.4214 ) }
    apic_6 { pt3dadd( 552.581, 581.318, 61.3483, 0.4172 ) }
    apic_6 { pt3dadd( 553.388, 580.693, 60.459, 0.482 ) }
    apic_6 { pt3dadd( 554.149, 580.188, 59.509, 0.4794 ) }
    apic_6 { pt3dadd( 555.102, 579.815, 58.6328, 0.6114 ) }
    apic_6 { pt3dadd( 556.117, 579.391, 58.0398, 0.6498 ) }
    apic_6 { pt3dadd( 556.99, 578.697, 57.6632, 0.5796 ) }
    apic_6 { pt3dadd( 557.828, 577.935, 57.3462, 0.4484 ) }
    apic_6 { pt3dadd( 558.738, 577.252, 57.0665, 0.4384 ) }
    apic_6 { pt3dadd( 559.594, 576.531, 56.749, 0.4328 ) }
    apic_6 { pt3dadd( 560.24, 575.672, 56.3189, 0.3594 ) }
    apic_6 { pt3dadd( 560.914, 574.792, 55.8236, 0.3004 ) }
    apic_6 { pt3dadd( 561.76, 574.036, 55.3874, 0.2752 ) }
    apic_6 { pt3dadd( 562.602, 573.326, 54.9279, 0.2756 ) }
    apic_6 { pt3dadd( 563.566, 572.729, 54.5202, 0.2766 ) }
    apic_6 { pt3dadd( 564.643, 572.362, 54.1699, 0.2784 ) }
    apic_6 { pt3dadd( 565.732, 572.058, 53.8401, 0.2816 ) }
    apic_6 { pt3dadd( 566.844, 572.217, 53.6368, 0.2874 ) }
    apic_6 { pt3dadd( 567.951, 572.371, 53.3842, 0.2994 ) }
    apic_6 { pt3dadd( 568.975, 572.579, 53.0295, 0.3152 ) }
    apic_6 { pt3dadd( 569.886, 573.257, 52.7372, 0.3754 ) }
    apic_6 { pt3dadd( 570.651, 574.107, 52.5412, 0.3376 ) }
    apic_6 { pt3dadd( 571.22, 575.1, 52.4362, 0.307 ) }
    apic_6 { pt3dadd( 571.746, 576.116, 52.4079, 0.2874 ) }
    apic_6 { pt3dadd( 572.36, 577.081, 52.4625, 0.2994 ) }
    apic_6 { pt3dadd( 573.0, 578.024, 52.5899, 0.3154 ) }
    apic_6 { pt3dadd( 573.656, 578.855, 52.8648, 0.3756 ) }
    apic_6 { pt3dadd( 574.23, 579.793, 53.1868, 0.339 ) }
    apic_6 { pt3dadd( 575.013, 580.627, 53.4195, 0.305 ) }
    apic_6 { pt3dadd( 575.794, 581.452, 53.5139, 0.305 ) }
    apic_6 { pt3dadd( 576.347, 582.41, 53.2, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 51/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 598.198, 565.136, 157.858, 0.3932 ) }
    apic_11 { pt3dadd( 599.295, 564.992, 156.327, 0.2288 ) }
    apic_11 { pt3dadd( 600.237, 565.063, 156.642, 0.2746 ) }
    apic_11 { pt3dadd( 601.274, 565.479, 156.798, 0.2746 ) }
    apic_11 { pt3dadd( 602.303, 565.811, 156.739, 0.2746 ) }
    apic_11 { pt3dadd( 603.173, 566.158, 156.443, 0.2746 ) }
    apic_11 { pt3dadd( 603.94, 566.97, 156.192, 0.2746 ) }
    apic_11 { pt3dadd( 604.651, 567.705, 155.931, 0.2746 ) }
    apic_11 { pt3dadd( 605.57, 568.266, 155.786, 0.2746 ) }
    apic_11 { pt3dadd( 606.29, 569.117, 155.779, 0.2746 ) }
    apic_11 { pt3dadd( 607.253, 569.614, 155.84, 0.2746 ) }
    apic_11 { pt3dadd( 608.362, 569.886, 155.985, 0.2746 ) }
    apic_11 { pt3dadd( 609.295, 570.271, 156.343, 0.2746 ) }
    apic_11 { pt3dadd( 610.076, 571.021, 156.818, 0.2746 ) }
    apic_11 { pt3dadd( 610.971, 571.709, 157.319, 0.2746 ) }
    apic_11 { pt3dadd( 611.886, 572.393, 157.802, 0.2746 ) }
    apic_11 { pt3dadd( 612.821, 573.024, 158.328, 0.2746 ) }
    apic_11 { pt3dadd( 613.844, 573.515, 158.875, 0.2746 ) }
    apic_11 { pt3dadd( 614.669, 574.094, 159.518, 0.2746 ) }
    apic_11 { pt3dadd( 615.404, 574.7, 160.285, 0.2746 ) }
    apic_11 { pt3dadd( 616.456, 574.504, 161.122, 0.2748 ) }
    apic_11 { pt3dadd( 617.534, 574.413, 161.968, 0.275 ) }
    apic_11 { pt3dadd( 617.833, 574.652, 163.078, 0.2752 ) }
    apic_11 { pt3dadd( 618.729, 575.017, 164.191, 0.2758 ) }
    apic_11 { pt3dadd( 619.443, 575.741, 165.235, 0.2768 ) }
    apic_11 { pt3dadd( 619.993, 576.465, 165.88, 0.2786 ) }
    apic_11 { pt3dadd( 620.188, 577.46, 166.255, 0.282 ) }
    apic_11 { pt3dadd( 620.211, 578.396, 166.771, 0.2882 ) }
    apic_11 { pt3dadd( 620.487, 578.993, 167.536, 0.3012 ) }
    apic_11 { pt3dadd( 621.198, 579.808, 168.355, 0.3186 ) }
    apic_11 { pt3dadd( 621.555, 580.501, 169.344, 0.3816 ) }
    apic_11 { pt3dadd( 622.12, 580.942, 170.507, 0.3492 ) }
    apic_11 { pt3dadd( 622.982, 581.587, 171.51, 0.328 ) }
    apic_11 { pt3dadd( 623.388, 582.609, 172.186, 0.3286 ) }
    apic_11 { pt3dadd( 623.988, 583.367, 172.859, 0.3642 ) }
    apic_11 { pt3dadd( 624.678, 584.237, 173.422, 0.4916 ) }
    apic_11 { pt3dadd( 625.365, 584.824, 173.957, 0.43 ) }
    apic_11 { pt3dadd( 626.161, 585.189, 174.195, 0.3894 ) }
    apic_11 { pt3dadd( 627.167, 585.228, 174.508, 0.4136 ) }
    apic_11 { pt3dadd( 628.285, 585.302, 174.73, 0.4338 ) }
    apic_11 { pt3dadd( 629.271, 585.385, 174.704, 0.3614 ) }
    apic_11 { pt3dadd( 630.13, 585.633, 174.843, 0.3038 ) }
    apic_11 { pt3dadd( 631.029, 585.93, 175.138, 0.2816 ) }
    apic_11 { pt3dadd( 632.104, 585.822, 175.265, 0.2874 ) }
    apic_11 { pt3dadd( 632.92, 585.823, 175.441, 0.2994 ) }
    apic_11 { pt3dadd( 633.901, 585.686, 175.656, 0.3152 ) }
    apic_11 { pt3dadd( 635.0, 585.453, 175.742, 0.3754 ) }
    apic_11 { pt3dadd( 635.781, 585.253, 175.413, 0.3376 ) }
    apic_11 { pt3dadd( 636.375, 585.005, 174.78, 0.3068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_11 { pt3dadd( 637.193, 585.13, 174.357, 0.287 ) }
    apic_11 { pt3dadd( 638.207, 585.237, 173.967, 0.2986 ) }
    apic_11 { pt3dadd( 639.292, 585.003, 173.659, 0.314 ) }
    apic_11 { pt3dadd( 640.307, 584.704, 173.682, 0.3732 ) }
    apic_11 { pt3dadd( 641.341, 584.797, 173.999, 0.3336 ) }
    apic_11 { pt3dadd( 642.156, 584.927, 174.526, 0.2994 ) }
    apic_11 { pt3dadd( 643.014, 584.388, 174.789, 0.2736 ) }
    apic_11 { pt3dadd( 643.977, 583.912, 175.076, 0.2728 ) }
    apic_11 { pt3dadd( 645.018, 583.776, 175.361, 0.2712 ) }
    apic_11 { pt3dadd( 646.12, 583.922, 175.529, 0.2684 ) }
    apic_11 { pt3dadd( 647.207, 584.043, 175.491, 0.2626 ) }
    apic_11 { pt3dadd( 648.18, 583.864, 175.164, 0.2542 ) }
    apic_11 { pt3dadd( 649.162, 583.977, 174.665, 0.2288 ) }
    apic_11 { pt3dadd( 650.25, 583.898, 173.32, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 14/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 598.198, 565.136, 157.858, 0.3932 ) }
    apic_10 { pt3dadd( 598.594, 564.896, 158.075, 0.3256 ) }
    apic_10 { pt3dadd( 598.733, 563.85, 158.429, 0.2748 ) }
    apic_10 { pt3dadd( 598.859, 563.476, 159.143, 0.2752 ) }
    apic_10 { pt3dadd( 599.441, 562.607, 159.816, 0.2756 ) }
    apic_10 { pt3dadd( 599.772, 561.558, 160.287, 0.2766 ) }
    apic_10 { pt3dadd( 600.419, 560.65, 160.577, 0.2782 ) }
    apic_10 { pt3dadd( 600.979, 559.7, 160.81, 0.2814 ) }
    apic_10 { pt3dadd( 601.599, 558.829, 161.135, 0.287 ) }
    apic_10 { pt3dadd( 602.38, 558.026, 161.465, 0.2988 ) }
    apic_10 { pt3dadd( 602.824, 557.031, 161.883, 0.3142 ) }
    apic_10 { pt3dadd( 603.188, 555.959, 162.348, 0.3734 ) }
    apic_10 { pt3dadd( 604.04, 555.284, 162.861, 0.3338 ) }
    apic_10 { pt3dadd( 604.873, 554.835, 163.503, 0.3 ) }
    apic_10 { pt3dadd( 605.769, 554.342, 164.143, 0.2746 ) }
    apic_10 { pt3dadd( 606.721, 553.728, 164.589, 0.2746 ) }
    apic_10 { pt3dadd( 607.652, 553.126, 164.848, 0.2746 ) }
    apic_10 { pt3dadd( 608.656, 552.629, 164.988, 0.2748 ) }
    apic_10 { pt3dadd( 609.573, 551.956, 165.051, 0.275 ) }
    apic_10 { pt3dadd( 610.506, 551.299, 165.102, 0.2754 ) }
    apic_10 { pt3dadd( 611.477, 550.754, 165.171, 0.276 ) }
    apic_10 { pt3dadd( 612.542, 550.352, 165.266, 0.2774 ) }
    apic_10 { pt3dadd( 613.427, 550.015, 165.575, 0.2798 ) }
    apic_10 { pt3dadd( 614.344, 550.27, 166.019, 0.2842 ) }
    apic_10 { pt3dadd( 615.368, 550.108, 166.508, 0.2922 ) }
    apic_10 { pt3dadd( 616.211, 549.376, 166.942, 0.3084 ) }
    apic_10 { pt3dadd( 617.245, 548.99, 167.185, 0.3318 ) }
    apic_10 { pt3dadd( 618.37, 548.825, 167.347, 0.4074 ) }
    apic_10 { pt3dadd( 619.432, 548.84, 167.362, 0.3914 ) }
    apic_10 { pt3dadd( 620.535, 548.862, 167.54, 0.4332 ) }
    apic_10 { pt3dadd( 621.596, 548.715, 167.911, 0.392 ) }
    apic_10 { pt3dadd( 622.646, 548.505, 168.4, 0.4342 ) }
    apic_10 { pt3dadd( 623.531, 548.161, 169.104, 0.3944 ) }
    apic_10 { pt3dadd( 624.615, 547.993, 169.814, 0.4372 ) }
    apic_10 { pt3dadd( 625.505, 547.848, 170.591, 0.407 ) }
    apic_10 { pt3dadd( 626.531, 547.844, 171.315, 0.426 ) }
    apic_10 { pt3dadd( 627.659, 547.75, 171.92, 0.5552 ) }
    apic_10 { pt3dadd( 628.779, 547.914, 172.42, 0.5668 ) }
    apic_10 { pt3dadd( 629.868, 547.963, 172.692, 0.551 ) }
    apic_10 { pt3dadd( 630.852, 547.805, 172.987, 0.4738 ) }
    apic_10 { pt3dadd( 631.776, 547.923, 173.413, 0.564 ) }
    apic_10 { pt3dadd( 632.823, 547.808, 173.719, 0.5128 ) }
    apic_10 { pt3dadd( 633.943, 547.646, 173.921, 0.5642 ) }
    apic_10 { pt3dadd( 635.022, 547.287, 174.038, 0.634 ) }
    apic_10 { pt3dadd( 636.138, 547.067, 174.161, 0.6588 ) }
    apic_10 { pt3dadd( 637.23, 546.747, 174.25, 0.5258 ) }
    apic_10 { pt3dadd( 638.154, 546.11, 174.321, 0.4614 ) }
    apic_10 { pt3dadd( 638.915, 545.376, 174.323, 0.6028 ) }
    apic_10 { pt3dadd( 639.696, 544.69, 174.437, 0.5134 ) }
    apic_10 { pt3dadd( 640.201, 543.911, 174.751, 0.4528 ) }
    apic_10 { pt3dadd( 641.037, 543.182, 174.96, 0.5158 ) }
    apic_10 { pt3dadd( 641.863, 542.484, 175.104, 0.4684 ) }
    apic_10 { pt3dadd( 642.597, 541.655, 175.218, 0.4912 ) }
    apic_10 { pt3dadd( 642.591, 540.549, 175.405, 0.4548 ) }
    apic_10 { pt3dadd( 642.812, 539.659, 175.943, 0.5394 ) }
    apic_10 { pt3dadd( 643.396, 538.881, 176.746, 0.6436 ) }
    apic_10 { pt3dadd( 644.036, 538.332, 177.842, 0.6362 ) }
    apic_10 { pt3dadd( 644.745, 537.726, 179.069, 0.6814 ) }
    apic_10 { pt3dadd( 645.375, 537.579, 180.409, 0.478 ) }
    apic_10 { pt3dadd( 645.982, 537.563, 181.797, 0.3508 ) }
    apic_10 { pt3dadd( 646.907, 536.999, 182.824, 0.2746 ) }
    apic_10 { pt3dadd( 647.865, 536.374, 183.515, 0.2746 ) }
    apic_10 { pt3dadd( 648.823, 535.749, 183.934, 0.2746 ) }
    apic_10 { pt3dadd( 649.781, 535.124, 184.154, 0.2746 ) }
    apic_10 { pt3dadd( 650.74, 534.498, 184.234, 0.2746 ) }
    apic_10 { pt3dadd( 651.698, 533.874, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 652.656, 533.249, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 653.615, 532.625, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 654.643, 532.125, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 655.704, 531.701, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 656.769, 531.284, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 657.834, 530.866, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 658.899, 530.449, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 659.964, 530.031, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 661.029, 529.614, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 662.095, 529.196, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 663.16, 528.779, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 664.225, 528.361, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 665.29, 527.943, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 666.355, 527.526, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 667.399, 527.058, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 668.363, 526.444, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 669.318, 525.812, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 670.272, 525.182, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 671.227, 524.552, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 672.18, 523.921, 184.24, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_10 { pt3dadd( 673.134, 523.29, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 674.089, 522.659, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 674.852, 521.813, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 675.444, 520.835, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 676.024, 519.849, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 676.604, 518.862, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 677.185, 517.876, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 677.764, 516.89, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 678.344, 515.904, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 678.924, 514.918, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 679.505, 513.932, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 680.084, 512.946, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 680.664, 511.959, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 681.477, 511.16, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 682.576, 510.84, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 683.674, 510.52, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 684.773, 510.202, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 685.872, 509.883, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 686.97, 509.564, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 688.068, 509.245, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 689.156, 508.884, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 690.201, 508.423, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 691.248, 507.962, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 692.295, 507.5, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 693.342, 507.039, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 694.389, 506.578, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 695.435, 506.117, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 696.482, 505.655, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 697.529, 505.194, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 698.578, 504.733, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 699.622, 504.271, 184.24, 0.2746 ) }
    apic_10 { pt3dadd( 700.555, 503.606, 184.24, 0.2744 ) }
    apic_10 { pt3dadd( 701.482, 502.937, 184.24, 0.2744 ) }
    apic_10 { pt3dadd( 702.409, 502.267, 184.24, 0.2742 ) }
    apic_10 { pt3dadd( 703.337, 501.597, 184.24, 0.274 ) }
    apic_10 { pt3dadd( 704.266, 500.928, 184.24, 0.2736 ) }
    apic_10 { pt3dadd( 705.193, 500.259, 184.24, 0.2728 ) }
    apic_10 { pt3dadd( 706.12, 499.589, 184.24, 0.2712 ) }
    apic_10 { pt3dadd( 707.047, 498.92, 184.24, 0.2684 ) }
    apic_10 { pt3dadd( 707.975, 498.25, 184.24, 0.2626 ) }
    apic_10 { pt3dadd( 708.904, 497.581, 184.24, 0.2542 ) }
    apic_10 { pt3dadd( 709.831, 496.911, 184.24, 0.2288 ) }
    apic_10 { pt3dadd( 710.758, 496.242, 184.24, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_668, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_668 = new SectionList()
    soma_0 ModelViewParmSubset_668.append()
    axon_0 ModelViewParmSubset_668.append()
    axon_1 ModelViewParmSubset_668.append()

    // Group: {name=ModelViewParmSubset_669, groups=[], sections=[dend_17, dend_14, dend_13, apic_0, dend_8, dend_7, dend_0, dend_19, dend_18, dend_16, dend_15, apic_18, apic_1, dend_12, dend_9, dend_4, dend_1, dend_21, dend_20, apic_15, apic_2, dend_11, dend_10, dend_6, dend_5, dend_3, dend_2, apic_17, apic_16, apic_14, apic_3, apic_13, apic_4, apic_8, apic_5, apic_12, apic_9, apic_7, apic_6, apic_11, apic_10]}
    ModelViewParmSubset_669 = new SectionList()
    dend_17 ModelViewParmSubset_669.append()
    dend_14 ModelViewParmSubset_669.append()
    dend_13 ModelViewParmSubset_669.append()
    apic_0 ModelViewParmSubset_669.append()
    dend_8 ModelViewParmSubset_669.append()
    dend_7 ModelViewParmSubset_669.append()
    dend_0 ModelViewParmSubset_669.append()
    dend_19 ModelViewParmSubset_669.append()
    dend_18 ModelViewParmSubset_669.append()
    dend_16 ModelViewParmSubset_669.append()
    dend_15 ModelViewParmSubset_669.append()
    apic_18 ModelViewParmSubset_669.append()
    apic_1 ModelViewParmSubset_669.append()
    dend_12 ModelViewParmSubset_669.append()
    dend_9 ModelViewParmSubset_669.append()
    dend_4 ModelViewParmSubset_669.append()
    dend_1 ModelViewParmSubset_669.append()
    dend_21 ModelViewParmSubset_669.append()
    dend_20 ModelViewParmSubset_669.append()
    apic_15 ModelViewParmSubset_669.append()
    apic_2 ModelViewParmSubset_669.append()
    dend_11 ModelViewParmSubset_669.append()
    dend_10 ModelViewParmSubset_669.append()
    dend_6 ModelViewParmSubset_669.append()
    dend_5 ModelViewParmSubset_669.append()
    dend_3 ModelViewParmSubset_669.append()
    dend_2 ModelViewParmSubset_669.append()
    apic_17 ModelViewParmSubset_669.append()
    apic_16 ModelViewParmSubset_669.append()
    apic_14 ModelViewParmSubset_669.append()
    apic_3 ModelViewParmSubset_669.append()
    apic_13 ModelViewParmSubset_669.append()
    apic_4 ModelViewParmSubset_669.append()
    apic_8 ModelViewParmSubset_669.append()
    apic_5 ModelViewParmSubset_669.append()
    apic_12 ModelViewParmSubset_669.append()
    apic_9 ModelViewParmSubset_669.append()
    apic_7 ModelViewParmSubset_669.append()
    apic_6 ModelViewParmSubset_669.append()
    apic_11 ModelViewParmSubset_669.append()
    apic_10 ModelViewParmSubset_669.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_18, apic_1, apic_15, apic_2, apic_17, apic_16, apic_14, apic_3, apic_13, apic_4, apic_8, apic_5, apic_12, apic_9, apic_7, apic_6, apic_11, apic_10]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_18 apic.append()
    apic_1 apic.append()
    apic_15 apic.append()
    apic_2 apic.append()
    apic_17 apic.append()
    apic_16 apic.append()
    apic_14 apic.append()
    apic_3 apic.append()
    apic_13 apic.append()
    apic_4 apic.append()
    apic_8 apic.append()
    apic_5 apic.append()
    apic_12 apic.append()
    apic_9 apic.append()
    apic_7 apic.append()
    apic_6 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()

    // Group: {name=dend, groups=[], sections=[dend_17, dend_14, dend_13, dend_8, dend_7, dend_0, dend_19, dend_18, dend_16, dend_15, dend_12, dend_9, dend_4, dend_1, dend_21, dend_20, dend_11, dend_10, dend_6, dend_5, dend_3, dend_2]}
    dend = new SectionList()
    dend_17 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_27913, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_27913 = new SectionList()
    soma_0 OneSecGrp_SectionRef_27913.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, apic_0, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_15, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_3, apic_3, apic_3, apic_3, apic_3, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    apic_0 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    apic_15 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 3.1877055  // units: uF/cm2
    forsec apic cm = 3.1877055  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 110.303986  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.002340444  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 5.62943E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.57469475  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 5.0837785E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.07029005  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.031050576  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.1694328  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.21822211  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 4.1408633E-4  // units: S cm-2
        e_pas_nml2 = -90.538284  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.1292307E-4  // units: S cm-2
        e_pas_nml2 = -90.538284  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 6.483126E-6  // units: S cm-2
        e_pas_nml2 = -90.538284  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.7827714E-6  // units: S cm-2
        e_pas_nml2 = -90.538284  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 7.9498434E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 9.956423E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513396
    forsec soma {
        insert CaDynamics_478513396
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_14 nseg = 3
    dend_7 nseg = 5
    dend_18 nseg = 5
    dend_16 nseg = 3
    dend_15 nseg = 3
    apic_18 nseg = 5
    dend_12 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 5
    apic_2 nseg = 3
    dend_11 nseg = 3
    dend_10 nseg = 3
    dend_6 nseg = 3
    dend_5 nseg = 3
    dend_3 nseg = 5
    dend_2 nseg = 5
    apic_17 nseg = 5
    apic_16 nseg = 5
    apic_14 nseg = 5
    apic_13 nseg = 5
    apic_8 nseg = 3
    apic_12 nseg = 3
    apic_9 nseg = 5
    apic_7 nseg = 3
    apic_6 nseg = 5
    apic_11 nseg = 3
    apic_10 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478513396


