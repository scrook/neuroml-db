// Cell: bNAC219_L5_DBC_d56fbcd5cf_0_0
/*
{
  "id" : "bNAC219_L5_DBC_d56fbcd5cf_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.25432, 14.9511, 0.00157081, 3.62034", "-2.93315, 13.5105, 0.00126201, 6.40385", "-2.61199, 12.0699, 9.53205E-4, 8.96308", "-2.29082, 10.6293, 6.44404E-4, 10.4523", "-1.96966, 9.18875, 3.35604E-4, 11.6707", "-1.64849, 7.74817, 2.68037E-5, 11.8736", "-1.32732, 6.30759, -2.81997E-4, 11.9675", "-1.00616, 4.86701, -5.90797E-4, 12.0614", "-0.684991, 3.42643, -8.99597E-4, 12.1873", "-0.363825, 1.98585, -0.0012084, 12.1453", "-0.0426595, 0.545272, -0.0015172, 12.019", "0.278507, -0.895307, -0.001826, 11.8927", "0.599673, -2.33589, -0.0021348, 11.8279", "0.920839, -3.77647, -0.0024436, 11.7176", "1.242, -5.21704, -0.0027524, 11.0046", "1.56317, -6.65762, -0.0030612, 10.0239", "1.88434, -8.0982, -0.00337, 9.09175", "2.2055, -9.53878, -0.0036788, 8.30332", "2.52667, -10.9794, -0.0039876, 7.17422", "2.84783, -12.4199, -0.0042964, 5.37678", "3.169, -13.8605, -0.0046052, 3.2773" ]
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-4.98075, 8.27387, 10.9227, 2.76", "-6.09389, 9.25869, 9.29859, 2.16", "-9.30854, 11.6218, 5.45208, 2.52", "-11.6414, 13.1656, 2.93961, 2.52", "-13.3381, 14.1901, 1.32359, 2.52", "-14.2304, 14.6795, 0.538657, 2.52", "-15.3073, 15.2, -0.284922, 2.28", "-18.1768, 16.4991, -2.10657, 1.92", "-19.4049, 16.9889, -2.68232, 1.92", "-22.0632, 17.9088, -3.7815, 1.8", "-23.6587, 18.4402, -4.35229, 1.8", "-27.1083, 19.4496, -5.42186, 1.56", "-29.7893, 20.1461, -6.14173, 1.92", "-32.1014, 20.6417, -6.67148, 1.92", "-33.7531, 20.8383, -6.96965, 1.92", "-35.8638, 20.868, -7.2602, 1.92", "-39.9015, 20.6593, -7.79503, 1.8", "-40.5858, 20.5702, -7.89757, 1.8", "-42.018, 20.2867, -8.11262, 1.8", "-45.4136, 19.4598, -8.70194, 1.32", "-46.6148, 19.1447, -8.97121, 1.32", "-48.9315, 18.5268, -9.70412, 1.92", "-49.8344, 18.4646, -10.2319, 1.92", "-50.4837, 18.9698, -11.2467, 1.92", "-50.7783, 19.3275, -11.8884, 1.92", "-51.0904, 19.7597, -12.6664, 1.92", "-51.5168, 20.0225, -13.3616, 1.92", "-52.2046, 20.135, -14.2067, 1.92", "-54.2362, 20.1098, -16.4777, 1.44", "-55.7661, 20.0185, -18.0773, 1.44", "-56.5424, 19.9399, -18.8387, 1.44", "-58.5419, 19.6275, -20.7121, 1.44", "-59.8597, 19.3462, -21.9101, 1.8", "-60.8903, 19.0567, -22.8376, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-3.03075, 12.2639, 1.77275, 1.32", "-2.86496, 14.2164, 0.987644, 1.32", "-2.7061, 16.2811, 0.256224, 1.32", "-2.62508, 17.4025, -0.0992362, 1.32", "-2.54259, 18.6111, -0.434838, 1.32", "-2.49343, 19.3652, -0.615994, 1.32", "-2.42367, 20.2277, -0.792806, 1.32", "-2.33034, 21.2819, -0.902218, 1.32", "-2.26406, 21.9426, -0.875987, 1.32", "-2.12949, 23.1728, -0.775476, 1.08", "-1.97033, 24.4861, -0.637992, 1.56", "-1.80009, 25.8806, -0.457006, 1.56", "-1.64476, 27.0961, -0.268274, 1.56", "-1.21718, 29.8818, 0.247986, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-5.85074, 9.81289, 11.3727, 1.8", "-6.48784, 10.7704, 11.7436, 1.8", "-7.18681, 11.7866, 12.1643, 1.8", "-8.55431, 13.6244, 13.0764, 1.56", "-8.94679, 14.1519, 13.3382, 1.56", "-9.84341, 15.3568, 13.9362, 1.44", "-10.7782, 16.6132, 14.5598, 0.96", "-11.1753, 17.1438, 14.8505, 0.96", "-12.8182, 19.2142, 16.0908, 1.92", "-17.4139, 25.4527, 19.3464, 1.92", "-23.4117, 30.2115, 23.0583, 1.92", "-30.3861, 34.5335, 25.4046, 1.92", "-36.7321, 39.823, 27.2941, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.42925, -10.8496, 11.5527, 2.64", "1.59375, -12.669, 11.4131, 2.64", "1.78369, -14.7697, 11.2519, 2.64", "1.92377, -16.3191, 11.133, 2.64", "2.0544, -17.7638, 11.0221, 2.64", "2.32018, -20.7034, 10.7965, 2.4", "2.58796, -23.6651, 10.5691, 3.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.77925, -11.6001, 13.0827, 2.16", "4.99036, -12.1981, 12.8712, 2.16", "5.54948, -14.0994, 12.3328, 2.16", "5.97557, -15.4599, 12.0188, 2.16", "6.70907, -17.802, 11.4782, 2.16", "7.24838, -19.5239, 11.0807, 2.16", "7.63942, -20.7725, 10.7924, 2.16", "8.67321, -24.0245, 10.0302, 2.52", "9.40379, -26.5508, 9.44061, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.610745, 11.9694, 11.8327, 2.52", "-0.030852, 16.0501, 11.8327, 2.52", "0.540217, 20.0688, 11.8327, 2.52", "1.05303, 23.6775, 11.8327, 2.52", "1.31232, 25.5022, 11.8327, 2.52", "1.62826, 27.7255, 11.8327, 2.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.169, -13.8605, -0.0046052, 1.20882", "6.433, -28.5011, -0.0046052, 1.20882", "9.697, -43.1416, -0.0046052, 1.20882" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-60.8903, 19.0567, -22.8376, 1.2", "-62.1951, 20.9701, -21.8926, 1.2", "-63.6167, 22.3669, -21.1043, 1.2", "-64.6449, 22.9575, -20.6993, 1.2", "-65.3198, 23.2745, -20.4634, 1.56", "-65.7431, 23.4276, -20.4012, 1.56", "-66.4911, 23.6472, -20.3715, 1.56", "-68.5684, 24.0476, -20.4044, 0.96", "-71.8054, 24.515, -20.6598, 1.56", "-72.1268, 24.5555, -20.6932, 1.56", "-76.1654, 24.9957, -21.2402, 1.08", "-77.4074, 25.1025, -21.4679, 1.08" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-60.8903, 19.0567, -22.8376, 1.08", "-63.0143, 18.7107, -24.1564, 1.08", "-65.2412, 18.0977, -25.6762, 1.56", "-69.8033, 16.2282, -29.5432, 0.84", "-71.4763, 15.2897, -31.3571, 0.84", "-72.0032, 14.9154, -32.0383, 0.84", "-73.3118, 13.8237, -33.9625, 0.84", "-74.4422, 12.4946, -36.1932, 0.84", "-75.6251, 10.5545, -39.2006, 0.84", "-76.4723, 8.60262, -41.7945, 0.84", "-76.969, 7.34231, -43.346, 0.84", "-77.5127, 6.09245, -44.8544, 0.84", "-78.0069, 5.13108, -45.9574, 0.84", "-78.9681, 3.62571, -47.434, 0.84", "-79.9864, 2.34983, -48.337, 0.84", "-80.6481, 1.67851, -48.6932, 0.84", "-82.1059, 0.444959, -49.2289, 0.84", "-83.1725, -0.330255, -49.492, 0.84", "-84.8642, -1.41792, -49.7638, 0.84", "-86.9568, -2.80843, -50.0, 0.84", "-89.2244, -4.49276, -50.1911, 0.84", "-90.6542, -5.7764, -50.2652, 0.84", "-92.3126, -7.5455, -50.3514, 0.84", "-94.9127, -10.8117, -50.6174, 0.84", "-96.9512, -13.8683, -50.9197, 1.32", "-98.3912, -16.3944, -51.1632, 0.6", "-99.8195, -19.3952, -51.4309, 1.2", "-100.818, -21.9352, -51.6894, 0.72", "-101.557, -24.3712, -51.995, 0.72", "-101.893, -25.9702, -52.2661, 0.72" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-1.21718, 29.8818, 0.247986, 1.32", "-0.278173, 31.7261, 1.20274, 1.32", "1.84638, 36.249, 3.2167, 0.96", "2.70246, 38.3537, 4.01887, 0.96", "3.40246, 40.5546, 4.71509, 1.2", "3.69578, 41.8119, 5.03537, 1.2", "3.8915, 42.9214, 5.27877, 1.2", "3.936, 44.1656, 5.43827, 1.44", "3.64572, 45.8733, 5.44073, 1.08", "2.97087, 48.0431, 5.44266, 1.08", "2.03057, 50.4038, 5.44434, 1.56", "1.73237, 51.0474, 5.44458, 1.56", "0.813031, 52.7902, 5.44415, 1.56", "-0.528621, 55.0317, 5.44074, 1.56", "-0.649041, 55.2047, 5.43996, 1.56" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-36.7321, 39.823, 27.2941, 1.2", "-41.3374, 44.2252, 29.7111, 1.2", "-44.841, 48.8152, 33.3217, 1.2", "-49.5876, 53.1255, 35.6446, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-36.7321, 39.823, 27.2941, 1.44", "-43.4301, 46.3881, 30.6657, 1.2", "-48.8713, 53.7516, 34.435, 1.2", "-55.0123, 60.882, 37.5874, 1.2", "-62.0338, 67.4771, 40.1506, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "2.58796, -23.6651, 10.5691, 1.2", "2.08018, -25.7657, 10.3083, 1.2", "1.80303, -27.0259, 10.1431, 1.2", "1.52291, -28.4478, 9.95417, 1.2", "1.29565, -29.7061, 9.78884, 1.2", "1.15676, -30.605, 9.67283, 1.2", "1.05782, -31.2784, 9.5844, 1.2", "1.01181, -31.7911, 9.49965, 1.2", "0.97888, -32.4577, 9.38852, 1.2", "0.986646, -32.852, 9.33486, 1.2", "1.03858, -33.6026, 9.24592, 1.2", "1.07211, -34.1512, 9.19168, 1.2", "1.07195, -34.7355, 9.15712, 1.2", "1.02073, -35.1992, 9.15149, 1.2", "0.834952, -36.108, 9.17895, 1.2", "0.73609, -36.4873, 9.20067, 1.2", "0.497978, -37.2939, 9.25754, 1.2", "0.09143, -38.6623, 9.3629, 1.68", "-0.416117, -40.326, 9.49384, 1.08", "-0.85636, -41.7833, 9.60545, 0.72", "-1.06409, -42.5299, 9.65724, 1.92", "-1.5421, -44.4867, 9.77551, 0.96", "-1.83908, -45.9329, 9.84954, 0.84", "-1.96518, -46.7654, 9.88044, 1.44", "-2.06807, -47.8685, 9.90603, 1.08", "-2.12191, -48.9106, 9.92256, 1.08", "-2.16733, -50.5905, 9.94492, 0.72", "-2.17933, -51.3085, 9.95701, 1.44", "-2.21162, -52.324, 9.97913, 1.44", "-2.2814, -53.6855, 10.0168, 0.72", "-2.31986, -54.2172, 10.0348, 1.2", "-2.40635, -55.1912, 10.0721, 1.2", "-2.46825, -55.9461, 10.0996, 1.56", "-2.57745, -56.9857, 10.112, 1.32", "-2.7329, -58.1564, 10.1082, 0.84", "-2.89609, -59.5306, 10.0747, 1.56", "-2.98016, -60.3444, 10.0452, 1.56", "-3.11645, -61.7972, 9.98163, 0.96", "-3.23464, -63.1374, 9.91609, 0.96", "-3.33409, -64.1701, 9.86675, 1.32", "-3.50017, -65.4318, 9.82425, 1.32", "-3.79795, -67.1738, 9.8035, 0.72", "-3.92018, -67.7593, 9.80852, 1.56", "-4.07101, -68.3384, 9.82172, 1.56", "-4.40304, -69.4551, 9.86199, 0.96", "-4.76136, -70.4101, 9.89965, 1.68", "-5.39818, -71.8987, 9.92129, 1.08", "-5.93124, -73.1038, 9.90739, 0.96", "-6.57819, -74.6487, 9.85736, 1.44", "-6.90911, -75.4866, 9.8171, 1.08", "-7.41432, -76.8224, 9.72315, 0.84", "-7.84975, -78.0253, 9.60627, 1.44", "-8.06053, -78.6219, 9.53959, 1.44", "-8.44708, -79.8023, 9.4053, 0.72", "-8.70523, -80.6679, 9.29774, 0.72", "-9.14976, -82.2299, 9.09165, 1.32", "-9.47477, -83.386, 8.92051, 0.96", "-9.63761, -83.8789, 8.85397, 0.96", "-9.83451, -84.4273, 8.76598, 0.96", "-10.1302, -85.1256, 8.63898, 0.96", "-10.3158, -85.5308, 8.56912, 0.96", "-10.592, -86.0773, 8.46118, 0.96", "-10.8926, -86.6494, 8.34342, 0.96", "-11.7969, -88.3485, 7.99705, 1.44", "-12.8283, -90.3052, 7.62076, 0.48", "-13.3059, -91.2549, 7.45509, 1.56", "-14.233, -93.2053, 7.14126, 0.84", "-14.4706, -93.7379, 7.04917, 0.84", "-14.8598, -94.6856, 6.87599, 0.84", "-15.1416, -95.4713, 6.74127, 0.84", "-15.3769, -96.2484, 6.62717, 0.84", "-15.5929, -96.9972, 6.53775, 0.84", "-16.1385, -99.0295, 6.34782, 0.6", "-16.4527, -100.152, 6.23444, 1.08", "-16.9098, -101.708, 6.06452, 0.72", "-17.3601, -103.154, 5.90594, 0.6", "-17.5919, -103.841, 5.83983, 1.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "2.58796, -23.6651, 10.5691, 1.92", "2.29391, -26.4172, 10.4821, 1.92", "1.97198, -29.4301, 10.3867, 1.92", "1.60893, -32.8279, 10.2792, 2.28", "1.41617, -34.6319, 10.2221, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "9.40379, -26.5508, 9.44061, 1.32", "11.443, -27.6406, 9.60405, 1.32", "12.8372, -28.2341, 9.74506, 1.32", "13.9816, -28.6521, 9.87673, 1.32", "15.2189, -29.0678, 10.0318, 1.32", "16.8774, -29.5741, 10.2639, 1.32", "17.7529, -29.8411, 10.3995, 1.32", "20.0466, -30.5079, 10.8474, 1.08", "20.7769, -30.7115, 11.0071, 1.08", "21.0794, -30.7982, 11.0789, 1.08", "22.6979, -31.2996, 11.4962, 1.44", "23.9326, -31.7758, 11.8145, 1.08", "24.5499, -32.0763, 11.9749, 1.08", "26.0109, -32.8863, 12.321, 1.08", "26.9562, -33.4133, 12.5146, 0.84", "27.8993, -33.9446, 12.678, 0.84", "29.0329, -34.5296, 12.8323, 0.84", "29.9533, -34.985, 12.9472, 0.84", "32.1884, -36.0744, 13.1215, 1.2", "33.4523, -36.6777, 13.1456, 0.84", "34.5349, -37.1398, 13.0993, 0.84", "36.6529, -37.9387, 12.9158, 0.96", "38.7378, -38.702, 12.7068, 0.72", "41.06, -39.5439, 12.4226, 1.2", "42.3393, -40.0162, 12.2132, 1.2", "43.6853, -40.4724, 11.9253, 0.6", "44.3094, -40.6644, 11.7571, 0.6", "51.7681, -42.66, 11.1353, 0.6", "58.6928, -45.8707, 10.0905, 0.6", "66.2399, -47.529, 9.4433, 0.6", "73.9624, -48.0771, 8.79102, 0.6" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.40379, -26.5508, 9.44061, 1.8", "9.60018, -28.8337, 9.40308, 1.8", "9.88245, -31.1602, 9.36787, 1.8", "10.1009, -32.5171, 9.34997, 1.8", "10.2242, -33.1824, 9.32631, 1.8", "10.4147, -34.1431, 9.27778, 1.8", "10.5995, -35.027, 9.25998, 1.8", "10.7918, -35.7483, 9.26935, 1.8", "11.0612, -36.9184, 9.31842, 1.8", "11.1808, -37.6959, 9.35523, 1.8", "11.3049, -38.7927, 9.41228, 1.8", "11.4642, -40.8214, 9.42759, 1.8", "11.5263, -41.8602, 9.4067, 1.8", "11.6343, -43.9467, 9.32342, 2.16", "11.7477, -45.5514, 9.21591, 1.92", "11.8186, -46.2165, 9.15442, 1.92", "12.253, -50.0006, 8.69446, 2.16", "12.4456, -51.4973, 8.44306, 2.16", "12.6076, -52.5082, 8.25215, 2.16", "13.0196, -54.4631, 7.85019, 1.92", "13.3432, -55.6924, 7.58448, 2.16" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.62826, 27.7255, 11.8327, 1.8", "3.41801, 31.0306, 13.208, 1.8", "5.04707, 34.039, 14.4598, 1.8", "6.75186, 37.1873, 15.7698, 1.8", "8.75685, 40.8899, 17.3105, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.697, -43.1416, -0.0046052, 0.762712", "12.961, -57.7822, -0.0046052, 0.762712", "16.225, -72.4228, -0.0046052, 0.762712" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-77.4074, 25.1025, -21.4679, 1.68", "-77.6465, 25.1025, -21.4791, 1.68", "-80.4538, 25.2474, -21.6078, 1.2", "-82.6582, 25.4948, -21.7196, 1.68", "-83.6305, 25.6502, -21.7816, 1.68", "-85.0478, 25.9577, -21.9121, 1.2", "-87.5302, 26.58, -22.2119, 1.2", "-88.9439, 26.9927, -22.5025, 0.84", "-90.3466, 27.506, -22.9914, 1.32", "-91.1661, 27.8267, -23.4045, 1.32", "-92.5071, 28.3414, -24.2314, 0.84", "-93.0879, 28.5536, -24.6552, 0.84", "-95.1486, 29.2824, -26.3535, 0.84", "-96.7168, 29.8077, -27.692, 0.84", "-97.7588, 30.1681, -28.5889, 0.84", "-98.5581, 30.4629, -29.2297, 0.84", "-99.6196, 30.8735, -29.9796, 0.84", "-100.67, 31.336, -30.6174, 0.84", "-102.149, 32.127, -31.3869, 0.84", "-103.161, 32.7267, -31.8587, 0.84", "-104.55, 33.6025, -32.476, 0.84", "-106.278, 34.7598, -33.2757, 0.84", "-107.182, 35.4083, -33.7012, 0.84", "-109.019, 36.7526, -34.6068, 1.32", "-110.313, 37.6995, -35.2687, 1.32", "-112.044, 39.0492, -36.2011, 0.96", "-113.33, 40.1166, -36.9653, 0.96", "-114.06, 40.7104, -37.3935, 0.96", "-115.067, 41.4531, -37.9752, 0.96", "-115.965, 42.0146, -38.4418, 0.96", "-118.425, 43.3912, -39.584, 0.72", "-119.326, 43.8272, -39.947, 0.72", "-122.861, 45.3039, -41.1367, 1.08", "-123.879, 45.6853, -41.4376, 1.08", "-127.127, 46.9604, -42.256, 1.08", "-128.807, 47.6292, -42.6784, 1.08", "-130.668, 48.459, -43.1651, 1.08", "-132.291, 49.288, -43.6326, 1.08", "-132.865, 49.6181, -43.8375, 1.08", "-135.329, 51.1592, -44.847, 1.08", "-137.198, 52.4004, -45.743, 1.08", "-140.736, 54.7217, -47.5429, 1.44", "-141.68, 55.3139, -48.0331, 1.44", "-143.988, 56.5711, -49.1479, 1.2", "-144.922, 57.0011, -49.493, 1.2", "-146.224, 57.4913, -49.8279, 1.2", "-149.929, 58.7349, -50.4321, 1.08", "-152.236, 59.4166, -50.741, 1.08", "-155.084, 60.2749, -51.0717, 1.08", "-159.144, 61.4829, -51.4884, 0.72", "-161.793, 62.2517, -51.7593, 0.72", "-163.911, 62.855, -51.9691, 1.08", "-166.507, 63.5275, -52.1951, 0.84", "-168.008, 63.8057, -52.3153, 0.84", "-169.072, 63.9237, -52.4144, 0.84", "-170.35, 63.9985, -52.5691, 0.84", "-172.555, 64.0263, -52.756, 0.84", "-175.702, 63.9321, -52.8134, 0.84", "-180.483, 63.5739, -52.5817, 0.6", "-181.171, 63.495, -52.5402, 0.6" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-77.4074, 25.1025, -21.4679, 1.32", "-77.7525, 26.0702, -21.8997, 1.32", "-78.2383, 27.4057, -22.5591, 0.84", "-78.7835, 29.0601, -23.4536, 1.44", "-79.6032, 31.4237, -24.9087, 1.08", "-80.1582, 32.7837, -25.8091, 1.08", "-80.3754, 33.242, -26.1336, 1.08", "-81.2259, 34.7655, -27.3733, 1.56", "-82.2087, 36.1331, -28.6548, 0.96", "-83.0158, 36.9843, -29.5519, 0.96", "-84.0151, 37.6682, -30.3022, 0.96", "-84.8164, 38.0238, -30.7265, 0.96", "-85.5809, 38.2577, -31.0454, 0.96", "-86.3355, 38.3917, -31.2804, 0.96", "-87.4126, 38.5561, -31.5404, 0.96", "-89.7001, 38.941, -32.0623, 0.72", "-91.7026, 39.2375, -32.5472, 0.72", "-93.1927, 39.4428, -32.9041, 0.72", "-94.3124, 39.5788, -33.1817, 0.72", "-95.7, 39.74, -33.5414, 0.72", "-97.8291, 40.0226, -34.1185, 0.72", "-100.119, 40.3831, -34.7336, 1.2" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-0.649041, 55.2047, 5.43996, 1.32", "-1.21584, 56.2303, 5.84009, 1.32", "-2.01484, 57.5493, 6.2929, 1.32", "-3.10266, 59.3509, 6.87844, 1.08", "-3.77459, 60.512, 7.23225, 1.08", "-4.15641, 61.223, 7.43024, 1.08", "-4.70816, 62.3225, 7.71061, 1.08", "-5.32795, 63.5408, 7.93361, 1.08", "-5.61951, 64.1068, 8.02053, 1.08", "-5.96603, 64.8174, 8.09125, 1.08", "-6.43077, 65.7231, 8.17449, 1.08", "-6.78984, 66.3194, 8.23589, 1.08", "-7.20108, 66.8162, 8.29591, 1.08", "-7.71616, 67.2269, 8.35343, 1.08", "-8.50512, 67.7529, 8.42442, 1.08", "-9.49873, 68.3855, 8.52779, 1.08", "-10.3756, 68.9658, 8.63242, 1.08", "-11.3136, 69.687, 8.7639, 1.08", "-12.1547, 70.6083, 8.77281, 0.96", "-12.4038, 71.274, 8.64509, 0.96", "-12.4792, 72.2941, 8.32641, 0.96", "-12.4457, 73.1283, 8.04021, 0.96", "-12.378, 73.8488, 7.78658, 0.96", "-12.0448, 76.5987, 6.79895, 0.72", "-11.9224, 77.7364, 6.3653, 0.72", "-11.8723, 78.7153, 5.98658, 0.72", "-11.8641, 79.7641, 5.61145, 0.72", "-11.9147, 81.5392, 5.09134, 0.72", "-11.9641, 82.4228, 4.89998, 0.72", "-12.0499, 83.2531, 4.81474, 0.72", "-12.22, 84.4496, 4.64949, 0.72", "-12.4941, 86.2946, 4.36497, 0.72", "-12.7462, 87.6145, 4.15443, 0.72", "-13.0307, 88.7167, 3.98156, 0.72", "-13.5864, 90.4097, 3.72002, 1.2", "-14.7653, 92.9942, 3.34446, 1.08", "-15.5279, 94.1324, 3.20782, 1.08", "-16.3793, 95.1151, 3.11682, 1.08", "-17.0259, 95.7912, 3.08785, 1.08", "-17.6283, 96.3878, 3.06332, 0.72", "-19.3509, 98.0613, 2.97231, 1.2", "-21.1991, 99.8422, 2.91802, 1.08", "-22.7551, 101.378, 2.87843, 1.44", "-23.5191, 102.249, 2.85996, 1.44", "-24.6695, 103.889, 2.82908, 1.2", "-25.2997, 105.054, 2.81393, 1.2", "-25.9611, 106.788, 2.82513, 1.08", "-26.4541, 108.794, 2.89213, 1.08", "-26.8248, 110.783, 3.03676, 0.96", "-27.1288, 112.778, 3.24609, 0.96", "-27.2519, 113.819, 3.4036, 1.2", "-27.3588, 115.07, 3.52713, 0.72", "-27.4217, 117.558, 3.58427, 1.2", "-27.4197, 118.218, 3.54076, 1.2", "-27.4805, 119.521, 3.37537, 1.2", "-27.6515, 120.804, 3.13523, 1.2", "-28.1726, 123.264, 2.52201, 1.2", "-28.5347, 124.362, 2.16739, 1.2", "-28.8786, 125.041, 1.9074, 1.2", "-29.8894, 126.397, 1.42928, 0.96", "-30.7327, 127.178, 1.23777, 1.2", "-31.2905, 127.616, 1.1893, 1.2", "-32.2392, 128.313, 1.19342, 1.2", "-32.8332, 128.76, 1.19656, 1.2", "-34.2921, 129.964, 1.2057, 1.2", "-35.9356, 131.587, 1.21761, 1.2", "-36.8083, 132.612, 1.22418, 1.2", "-37.3679, 133.345, 1.22803, 1.2", "-37.9702, 134.256, 1.23197, 1.2", "-38.48, 135.136, 1.23507, 1.2", "-39.2732, 136.836, 1.23943, 0.84", "-39.9699, 138.558, 1.26393, 1.32", "-40.9508, 141.13, 1.32625, 0.84", "-41.4347, 142.421, 1.3693, 0.84", "-41.8145, 143.433, 1.41139, 0.84", "-42.3242, 144.811, 1.47879, 0.84", "-42.9439, 146.384, 1.60306, 0.84", "-43.3443, 147.264, 1.69616, 0.84", "-43.9616, 148.308, 1.76456, 0.84", "-44.4167, 148.891, 1.77303, 0.84", "-45.2897, 149.774, 1.74116, 1.2", "-46.7128, 150.966, 1.60003, 0.84", "-48.0415, 151.931, 1.44147, 0.84", "-49.6021, 152.916, 1.26993, 1.2", "-50.8874, 153.501, 1.15196, 0.6", "-52.4548, 154.13, 1.00236, 0.6", "-54.1237, 154.683, 0.836867, 1.08", "-56.0432, 155.187, 0.639022, 0.48", "-57.1406, 155.398, 0.57818, 0.48", "-60.3564, 155.846, 0.684657, 0.84", "-65.4142, 163.9, 1.86587, 0.84", "-70.3812, 172.08, 1.67412, 0.84", "-74.149, 180.815, 1.32425, 0.84", "-78.1921, 189.304, -0.304332, 0.84", "-81.9626, 197.92, -1.84796, 0.84" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-0.649041, 55.2047, 5.43996, 1.32", "-4.34922, 58.7529, 4.51358, 1.32", "-5.60768, 60.0355, 4.08922, 1.32", "-7.09666, 61.736, 3.45593, 1.32", "-8.52754, 63.6697, 2.66745, 1.32", "-9.32066, 64.8493, 2.17486, 1.32", "-10.4338, 66.9104, 1.35172, 1.32", "-11.1254, 69.0515, 0.445247, 1.32", "-11.5159, 71.5915, -0.586621, 1.56", "-11.4104, 74.1173, -1.5682, 1.56", "-11.1892, 75.0164, -1.86213, 1.56", "-9.66662, 78.5701, -2.91572, 1.2", "-8.92177, 79.7637, -3.23253, 1.2", "-7.56034, 81.4013, -3.6786, 1.2", "-5.26542, 83.5939, -4.36875, 1.08", "-3.50876, 85.0149, -4.89113, 1.08", "-2.39025, 85.8219, -5.29264, 1.08", "-1.3194, 86.5554, -5.78891, 1.08", "-0.241483, 87.4021, -6.44279, 1.08", "1.70706, 89.2439, -7.99024, 1.8", "2.06213, 89.705, -8.39507, 1.8", "3.32249, 92.2134, -10.5423, 1.32", "3.74319, 93.6785, -11.7606, 1.32", "3.81563, 95.557, -13.2643, 1.08", "3.66505, 96.0977, -13.6624, 1.08", "2.89513, 97.4462, -14.4995, 1.08", "1.90368, 98.8666, -15.2873, 1.44", "1.07025, 99.9022, -15.8156, 1.44", "0.0446, 101.154, -16.4689, 1.44", "-0.82549, 102.254, -17.1098, 1.44", "-2.49929, 104.694, -18.6604, 0.84", "-3.32441, 106.157, -19.6105, 0.84", "-4.58104, 109.19, -21.6572, 1.44", "-5.09408, 110.927, -22.6219, 1.44", "-5.61368, 113.542, -23.8111, 0.96", "-6.05842, 116.231, -25.0006, 0.96", "-6.27967, 117.601, -25.5758, 0.96", "-6.46717, 119.638, -26.2595, 0.72", "-6.27112, 125.004, -27.3441, 1.2", "-5.99137, 127.323, -27.5304, 1.2" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-49.5876, 53.1255, 35.6446, 0.6", "-57.9995, 63.5417, 40.7892, 0.6", "-64.6303, 75.7364, 43.8063, 0.6", "-69.7086, 87.9434, 48.9072, 0.6", "-76.9296, 98.944, 54.4682, 0.6", "-82.6658, 110.189, 61.0696, 0.6", "-89.3663, 121.068, 67.4566, 0.6", "-96.5657, 132.587, 71.7787, 0.6", "-105.968, 143.031, 74.7606, 0.6", "-115.223, 153.183, 78.9976, 0.6", "-122.206, 163.909, 85.373, 0.6", "-129.661, 175.635, 88.5313, 0.6", "-135.258, 187.915, 92.8723, 0.6", "-141.682, 199.399, 98.3192, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-49.5876, 53.1255, 35.6446, 0.84", "-57.7161, 58.393, 42.0168, 0.6", "-65.0344, 65.57, 47.1951, 0.6", "-70.5463, 74.4385, 51.6545, 0.6", "-75.4986, 83.8489, 55.4996, 0.6", "-80.7137, 92.7347, 60.2634, 0.6", "-88.45, 99.8562, 64.8943, 0.6", "-96.1014, 107.67, 68.2676, 0.6", "-103.403, 115.592, 72.1018, 0.6", "-110.419, 123.983, 75.315, 0.6", "-116.969, 132.488, 79.116, 0.6", "-123.751, 141.503, 80.408, 0.6", "-129.743, 150.973, 81.9596, 0.6", "-134.911, 160.919, 83.1165, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-17.5919, -103.841, 5.83983, 0.96", "-19.167, -103.24, 7.4653, 0.96", "-20.3656, -102.782, 8.70232, 0.96", "-21.2175, -102.457, 9.58143, 0.72", "-21.8445, -102.218, 10.2285, 0.72", "-22.3769, -102.015, 10.778, 0.72", "-23.2833, -101.669, 11.7134, 1.08" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-17.5919, -103.841, 5.83983, 0.96", "-19.306, -106.913, 5.71982, 0.96", "-20.1542, -107.983, 5.4553, 0.96", "-21.1282, -109.212, 5.03017, 1.32", "-22.2763, -110.827, 4.45369, 0.6", "-22.9507, -111.784, 3.99698, 0.6", "-23.701, -112.925, 3.41215, 1.2", "-25.9045, -116.571, 1.51138, 1.2", "-26.6576, -117.797, 0.839226, 1.56", "-27.6912, -119.553, -0.146806, 0.96", "-29.3646, -122.749, -1.91798, 0.6", "-30.0125, -124.216, -2.64513, 1.08", "-30.5837, -125.571, -3.26662, 0.72", "-30.8803, -126.277, -3.50597, 0.72", "-31.366, -127.245, -3.78653, 1.08", "-31.9332, -128.299, -4.03013, 0.72", "-32.5732, -129.512, -4.18172, 0.72", "-34.3481, -132.686, -4.51619, 0.48", "-35.003, -133.832, -4.61254, 1.56", "-36.1556, -135.834, -4.68484, 1.08", "-36.6202, -136.628, -4.66306, 0.72", "-37.4995, -138.166, -4.52881, 1.08", "-38.3169, -139.603, -4.36675, 0.72", "-38.703, -140.357, -4.25524, 0.72", "-39.6592, -142.188, -4.06866, 1.2", "-40.4151, -143.639, -3.99278, 0.72", "-40.7565, -144.296, -3.97991, 0.72", "-41.6887, -146.272, -4.03794, 0.72", "-42.2066, -147.421, -4.2695, 1.08", "-42.6086, -148.425, -4.55428, 0.96", "-42.8761, -149.179, -4.79734, 0.96", "-43.1438, -150.051, -5.08472, 0.96", "-43.5638, -151.672, -5.58758, 0.96", "-44.3088, -155.227, -6.58692, 1.2", "-44.7727, -157.706, -7.30669, 0.6", "-45.012, -159.364, -7.80282, 0.6", "-45.0912, -160.307, -8.07941, 0.6", "-45.1098, -161.379, -8.37461, 0.6", "-45.0912, -162.122, -8.51001, 0.6", "-45.0516, -162.735, -8.55761, 0.6", "-45.0037, -163.595, -8.63435, 0.6", "-44.9812, -165.545, -8.8853, 0.6", "-44.9976, -166.209, -8.98302, 0.6", "-45.188, -170.01, -9.57792, 0.96", "-45.3095, -171.824, -9.86376, 0.48", "-45.4109, -172.965, -10.0344, 0.48", "-45.7208, -175.655, -10.3917, 0.72", "-45.9307, -177.257, -10.5831, 0.48", "-46.0706, -178.53, -10.6788, 1.2", "-46.3113, -180.94, -10.7433, 0.84", "-46.4622, -182.398, -10.702, 1.32", "-46.6991, -184.487, -10.5325, 0.84", "-46.895, -186.087, -10.3144, 1.44", "-47.4078, -189.664, -9.67109, 0.48", "-47.695, -191.501, -9.28714, 0.48", "-48.155, -193.865, -8.69243, 0.48", "-48.4962, -195.261, -8.28042, 0.48", "-48.905, -196.533, -7.82439, 0.96", "-50.1089, -199.262, -6.6339, 0.48", "-50.3838, -199.767, -6.38872, 0.84", "-51.3152, -201.294, -5.53006, 0.6", "-52.0147, -202.245, -4.87586, 0.84", "-52.8568, -203.22, -4.09781, 0.6", "-53.8597, -204.128, -3.22971, 1.2" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "1.41617, -34.6319, 10.2221, 0.96", "0.506418, -36.1518, 10.7811, 0.96", "-0.27399, -37.7984, 11.2391, 0.96", "-0.486872, -38.4364, 11.4796, 0.96", "-0.82509, -39.5888, 12.0483, 0.96", "-1.11814, -40.6296, 12.6581, 0.96", "-1.42433, -41.8016, 13.4793, 0.96", "-1.79209, -43.6438, 14.9151, 1.32", "-2.21642, -45.9189, 16.84, 0.84", "-2.44993, -47.4211, 18.1639, 0.84", "-2.56458, -48.4327, 19.0962, 0.84", "-2.76974, -50.5933, 21.2399, 1.32", "-2.91777, -51.8456, 22.6318, 1.32", "-3.10259, -52.9529, 23.9992, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "1.41617, -34.6319, 10.2221, 1.44", "1.11495, -39.3049, 10.6487, 1.44", "0.874638, -42.647, 10.9389, 1.44", "0.726071, -44.6475, 11.0981, 1.44", "0.37411, -48.8267, 11.4176, 1.8", "0.227417, -50.5685, 11.5507, 1.8", "0.082656, -52.2874, 11.6822, 1.8", "-0.069469, -53.7196, 11.7561, 1.8", "-0.408869, -56.6539, 11.9216, 1.56", "-0.775098, -59.7807, 12.1033, 1.56" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "13.3432, -55.6924, 7.58448, 1.56", "15.0053, -57.2966, 7.55554, 1.56", "16.0061, -58.2794, 7.53777, 1.56", "17.246, -59.4937, 7.51582, 1.2", "17.9935, -60.2237, 7.50263, 1.2", "19.1129, -61.3081, 7.48306, 1.56", "20.7166, -62.8929, 7.45437, 1.2", "21.4423, -63.6375, 7.44082, 1.8", "22.209, -64.4356, 7.42627, 1.8", "23.7026, -66.0303, 7.41211, 1.08", "24.7552, -67.18, 7.41063, 1.68", "25.9628, -68.5392, 7.39627, 1.32", "26.7475, -69.452, 7.37963, 1.32", "27.2297, -70.0228, 7.36543, 1.32", "28.3605, -71.414, 7.32187, 1.08", "29.1392, -72.4278, 7.26494, 1.56", "30.2966, -74.0381, 7.17982, 1.2", "30.7015, -74.6259, 7.15064, 1.2", "31.0855, -75.1914, 7.13375, 1.2", "31.8364, -76.2979, 7.1187, 1.68", "32.4637, -77.2162, 7.14762, 1.2", "33.2629, -78.3614, 7.23954, 0.96", "33.7897, -79.0564, 7.32705, 0.96", "35.1879, -80.7489, 7.5668, 0.84", "35.8995, -81.5639, 7.6977, 0.84", "37.0123, -82.7635, 7.91655, 1.44", "37.6023, -83.3729, 8.03805, 1.44", "38.6706, -84.4624, 8.22769, 1.44", "39.2889, -85.1293, 8.33681, 0.96", "39.9613, -85.9109, 8.44223, 1.44", "40.1994, -86.1951, 8.4733, 1.44", "40.8027, -86.9357, 8.52286, 1.44", "41.2673, -87.5341, 8.55807, 1.44", "42.1171, -88.657, 8.60795, 1.08", "42.896, -89.6544, 8.63508, 1.08", "43.3646, -90.2054, 8.63899, 1.08", "44.3009, -91.2157, 8.63595, 1.44", "44.7644, -91.6812, 8.63587, 1.44", "45.9574, -92.8737, 8.65042, 0.84", "46.7277, -93.66, 8.66579, 1.56", "48.0248, -95.0389, 8.70065, 1.08", "48.6526, -95.721, 8.72006, 1.32", "50.5321, -97.5952, 8.77696, 1.08", "51.4834, -98.4751, 8.81473, 1.08", "52.3074, -99.1888, 8.85169, 1.08", "53.5228, -100.165, 8.90555, 1.08", "54.3551, -100.805, 8.91226, 1.08", "56.8673, -102.673, 8.83823, 1.44", "58.5858, -103.921, 8.7206, 1.08", "59.6487, -104.702, 8.62086, 1.08", "61.349, -106.018, 8.44353, 1.08", "63.2806, -107.547, 8.21099, 0.72", "64.7421, -108.781, 7.99841, 1.32", "65.7674, -109.776, 7.7951, 0.84", "66.3972, -110.434, 7.63426, 0.84", "67.4539, -111.678, 7.32907, 1.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "13.3432, -55.6924, 7.58448, 1.68", "13.5605, -58.7647, 7.61013, 1.68", "13.8294, -61.4758, 7.63187, 1.68", "14.0297, -63.0298, 7.64177, 1.68", "14.7422, -67.5107, 7.65966, 1.32", "15.2733, -70.4877, 7.66268, 1.56", "15.8806, -74.3335, 7.6556, 1.56", "16.1072, -75.7824, 7.64216, 1.56", "16.3718, -78.0069, 7.61934, 1.56", "16.5847, -80.6871, 7.58883, 1.56", "16.7823, -84.4912, 7.53926, 1.2", "16.9758, -89.8431, 7.45767, 1.56", "17.0817, -93.5704, 7.42884, 1.2", "17.2322, -98.2538, 7.42854, 1.2", "17.3291, -100.968, 7.41605, 1.56", "17.452, -104.097, 7.36345, 1.56", "17.5938, -106.619, 7.27696, 1.56", "17.9353, -110.505, 7.17313, 1.2", "18.214, -113.883, 7.10732, 1.56", "18.4875, -117.721, 7.05465, 1.44", "18.6194, -120.412, 7.02918, 1.44", "18.6598, -122.346, 7.01724, 1.44", "18.7398, -128.861, 6.9898, 1.08", "18.7838, -132.366, 6.88704, 1.08", "18.8635, -135.509, 6.72271, 1.44", "18.9288, -136.911, 6.62778, 1.44", "19.069, -138.95, 6.43854, 1.44", "19.3292, -141.855, 6.0369, 1.44", "19.8316, -145.94, 5.13892, 1.32", "20.3128, -148.768, 4.44028, 1.32", "20.6019, -150.266, 4.04575, 1.32", "20.821, -151.508, 3.73184, 1.32", "21.1451, -153.696, 3.23309, 1.32", "21.2841, -155.004, 2.99246, 1.32", "21.4378, -156.54, 2.77726, 1.32", "21.7493, -159.767, 2.31102, 1.8", "22.0169, -162.872, 1.84221, 1.8", "22.2401, -165.572, 1.51683, 1.8", "22.4364, -168.27, 1.26122, 1.8", "22.6884, -172.662, 0.943225, 1.56", "22.8662, -177.125, 0.702272, 1.56", "22.9129, -179.267, 0.627044, 1.56", "22.9717, -183.834, 0.567254, 1.32", "22.981, -185.978, 0.583926, 1.32", "22.9451, -189.823, 0.699701, 1.8", "22.8446, -193.196, 0.892918, 1.8", "22.7862, -196.653, 1.12966, 1.56", "22.8521, -199.908, 1.30162, 1.56", "22.9877, -202.095, 1.35906, 1.56", "23.1466, -203.676, 1.3968, 1.56", "23.3299, -205.296, 1.41096, 1.56", "23.586, -207.638, 1.38567, 1.56", "23.8533, -210.52, 1.30024, 1.2", "24.0248, -213.285, 1.14241, 1.2", "24.0963, -215.191, 1.00095, 1.2", "24.124, -218.748, 0.670664, 1.56", "24.0941, -222.169, 0.285784, 1.56", "24.0657, -224.299, 0.0154223, 1.56", "24.0844, -227.104, -0.353868, 1.56", "24.1371, -229.769, -0.729485, 1.56", "24.3383, -235.022, -1.51124, 1.56", "24.7139, -241.056, -2.46731, 1.32", "25.0683, -246.08, -3.32236, 1.32", "25.2618, -248.785, -3.78992, 0.84", "25.4581, -251.564, -4.2671, 1.32", "25.7025, -254.863, -4.83831, 1.08", "25.9868, -257.955, -5.40789, 1.44", "26.2866, -261.216, -6.06718, 1.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.75685, 40.8899, 17.3105, 1.2", "7.2447, 43.3185, 17.9907, 1.2", "6.67457, 44.427, 18.3688, 1.2", "6.25473, 45.3934, 18.7331, 1.2", "5.60116, 47.3744, 19.6246, 1.2", "5.3465, 48.4413, 20.1361, 1.2", "5.18236, 49.4668, 20.6381, 1.08", "5.13486, 51.1005, 21.5078, 1.56", "5.17516, 52.1991, 22.0977, 1.56", "5.41031, 54.6214, 23.3429, 1.2", "5.64044, 56.1809, 24.0752, 0.96", "5.88047, 57.8887, 24.7765, 1.32", "5.95395, 58.6678, 25.0709, 1.32", "5.99153, 59.5358, 25.3592, 1.32", "6.0096, 60.8299, 25.7135, 1.32", "6.00193, 61.5557, 25.8796, 1.32", "6.00566, 62.9719, 26.2096, 1.2", "6.05861, 64.4446, 26.5987, 1.56", "6.10994, 65.4281, 26.8749, 1.2", "6.22774, 66.9429, 27.3361, 1.68", "6.49088, 68.9986, 28.0119, 1.2", "6.65462, 69.821, 28.2984, 1.44", "7.0912, 71.1848, 28.7847, 1.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.75685, 40.8899, 17.3105, 1.44", "8.71814, 44.1833, 16.957, 1.44", "8.70039, 45.6934, 16.7949, 1.44", "8.67987, 47.4391, 16.6075, 1.44", "8.65625, 49.4482, 16.3918, 1.44", "8.62766, 51.8805, 16.1307, 1.8", "8.60347, 53.9381, 15.9099, 1.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-3.10259, -52.9529, 23.9992, 0.96", "-4.15851, -56.1649, 25.2402, 0.96", "-4.90061, -58.1294, 25.9555, 0.96", "-5.37938, -59.4038, 26.3756, 0.96", "-5.74878, -60.3701, 26.6884, 0.96", "-6.17162, -61.4689, 27.0283, 0.96", "-6.88158, -63.467, 27.6033, 0.6", "-7.14004, -64.0759, 27.769, 0.6", "-7.60666, -65.1575, 28.0949, 1.08", "-8.5857, -67.4073, 28.8714, 0.72", "-9.32815, -69.0914, 29.4971, 0.72", "-10.5062, -71.6823, 30.4929, 0.72", "-11.714, -74.1431, 31.4713, 1.2", "-12.4383, -75.4666, 32.0182, 1.08", "-13.4183, -77.0201, 32.6936, 0.48", "-14.6733, -78.808, 33.4719, 0.48", "-16.1566, -80.7625, 34.315, 1.44", "-17.3285, -82.2342, 34.9101, 0.84", "-17.9506, -83.0798, 35.1993, 1.08", "-18.9074, -84.4583, 35.6067, 1.08", "-20.1394, -86.4018, 36.1087, 1.44", "-20.9844, -87.8621, 36.4738, 0.84", "-21.5306, -88.949, 36.7662, 1.32", "-22.31, -90.7987, 37.2735, 0.72", "-22.6776, -91.7205, 37.541, 0.72", "-23.0173, -92.5387, 37.8181, 0.72", "-23.6684, -93.6923, 38.3346, 0.72", "-24.7253, -94.8607, 39.0795, 1.08", "-25.7584, -95.7775, 39.7833, 0.6", "-27.1029, -96.6646, 40.649, 1.08", "-28.1398, -97.1945, 41.2919, 0.96", "-29.9193, -97.8405, 42.3274, 0.84", "-31.7977, -98.2063, 43.3087, 0.84", "-36.0875, -106.47, 45.4927, 0.84" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-3.10259, -52.9529, 23.9992, 0.84", "-3.92474, -54.6931, 25.5591, 0.84", "-4.52304, -55.9382, 26.6421, 0.84", "-4.79741, -56.5364, 27.1211, 0.84", "-5.74508, -58.8281, 28.8192, 0.48", "-6.23976, -60.1065, 29.7023, 0.48", "-7.06722, -62.3348, 31.1143, 0.84", "-7.56956, -63.7573, 31.8862, 0.84", "-8.06435, -65.1167, 32.5333, 0.84", "-9.15179, -68.1772, 33.8064, 0.84", "-9.54579, -69.345, 34.2143, 0.84", "-10.1931, -71.4598, 34.8618, 0.6", "-10.6189, -72.8108, 35.2383, 1.08", "-11.268, -74.5843, 35.7448, 1.08", "-11.8004, -75.8592, 36.1352, 1.56", "-12.5289, -77.3632, 36.6084, 1.56", "-13.1265, -78.5391, 37.0044, 1.08", "-14.2332, -80.6294, 37.7665, 0.72", "-14.9619, -81.9571, 38.2824, 1.32", "-15.6066, -83.0722, 38.7464, 1.32", "-16.5767, -84.6069, 39.4322, 0.72", "-17.6405, -86.1814, 40.1528, 0.72", "-23.4074, -95.4941, 45.4609, 0.72", "-27.7528, -105.514, 50.7199, 0.72", "-32.3197, -114.849, 57.0661, 0.72", "-36.9134, -124.196, 63.3729, 0.72", "-39.931, -133.837, 70.1464, 0.72", "-40.6818, -143.566, 77.4279, 0.72", "-41.8025, -154.273, 82.9301, 0.72", "-42.8161, -165.889, 85.8295, 0.72", "-43.18, -177.359, 89.4472, 0.72", "-44.8969, -188.782, 92.7846, 0.72", "-49.2846, -199.806, 94.8369, 0.72", "-54.086, -210.713, 96.6281, 0.72", "-56.8561, -222.187, 98.8555, 0.72", "-58.2963, -233.686, 102.046, 0.72" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-0.775098, -59.7807, 12.1033, 1.08", "0.583043, -60.9643, 7.40437, 1.08", "1.59982, -62.018, 4.2484, 1.08", "1.88218, -62.3944, 3.37036, 1.08", "2.08076, -62.7944, 2.57783, 1.08", "2.18571, -63.0614, 2.11339, 1.08", "2.54876, -64.2452, 0.235208, 1.44", "2.69135, -65.2189, -1.04005, 1.44", "2.70443, -66.3413, -2.3558, 1.44", "2.60224, -68.1371, -4.34147, 1.44", "2.52472, -68.8304, -5.04162, 1.44", "2.24989, -70.6636, -6.67411, 1.2", "1.67923, -73.6001, -8.9539, 1.2", "1.27283, -75.6014, -10.4148, 1.68", "0.804624, -77.7606, -11.9928, 0.72", "0.419367, -79.3813, -13.1374, 0.72", "-0.101744, -81.1554, -14.5082, 1.44", "-0.560755, -82.4134, -15.5787, 1.44", "-1.60039, -84.694, -18.0623, 0.96", "-2.73037, -86.7056, -21.1858, 1.68", "-3.15565, -87.338, -22.4629, 1.68", "-4.11026, -88.6274, -25.6555, 1.68", "-4.83203, -89.5549, -28.2471, 1.68", "-5.946, -90.9931, -32.3848, 1.68", "-7.17001, -92.5985, -36.8435, 1.68", "-8.08528, -93.8243, -40.0895, 1.2", "-9.0202, -95.1708, -43.3317, 0.84", "-9.41637, -95.828, -44.6539, 1.44", "-9.78151, -96.5174, -45.7995, 0.72", "-10.6345, -98.2385, -48.1916, 1.32", "-11.9668, -101.12, -51.6442, 0.6", "-12.2791, -101.842, -52.4493, 0.6", "-12.7141, -102.826, -53.4933, 0.96", "-13.0874, -103.652, -54.4087, 0.96", "-14.5327, -106.906, -58.277, 0.6", "-14.9696, -108.107, -59.6811, 1.2" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.775098, -59.7807, 12.1033, 1.32", "-0.782692, -59.9305, 12.0822, 1.32", "-0.87012, -63.8743, 11.5394, 1.32", "-0.87509, -68.4688, 10.9388, 1.68", "-0.85555, -71.3955, 10.5936, 2.04", "-0.84048, -73.9884, 10.3177, 1.68", "-0.8299, -76.1282, 10.1138, 1.68", "-0.81469, -77.4223, 10.0166, 1.68", "-0.780667, -79.1519, 9.92917, 1.68", "-0.761255, -81.7753, 9.86006, 2.04", "-0.780056, -83.2795, 9.88045, 1.68", "-0.85751, -85.2302, 9.95963, 1.68", "-0.95452, -87.3259, 10.1016, 1.68", "-1.04051, -89.7038, 10.2958, 1.56", "-1.08735, -91.908, 10.488, 1.56", "-1.10896, -96.3421, 10.8802, 1.56", "-1.07827, -99.9565, 11.1993, 1.8", "-0.96438, -105.741, 11.701, 1.56", "-0.82724, -111.533, 12.1759, 1.44", "-0.773056, -113.996, 12.3659, 1.92", "-0.727586, -116.98, 12.5723, 1.8", "-0.735548, -119.277, 12.7108, 1.68", "-0.83042, -122.136, 12.8766, 2.04", "-1.66997, -133.798, 13.3106, 1.8", "-2.05328, -137.343, 13.3864, 1.8", "-2.30258, -139.263, 13.4056, 1.68", "-2.57685, -141.072, 13.4044, 1.68", "-3.43175, -146.071, 13.3458, 1.68", "-3.9679, -148.79, 13.2061, 1.68", "-4.45964, -151.068, 12.9887, 1.68", "-5.08832, -154.071, 12.6743, 1.32", "-5.79885, -157.676, 12.2944, 1.32", "-6.49487, -161.442, 11.9067, 1.32", "-7.50382, -167.456, 11.3133, 1.32", "-8.13066, -171.53, 10.9661, 1.8", "-8.53943, -174.247, 10.7753, 1.8", "-8.85771, -176.431, 10.6629, 1.8", "-9.11767, -178.351, 10.6161, 1.8", "-9.56591, -181.916, 10.6783, 1.68", "-10.162, -187.04, 10.8669, 2.04", "-10.5898, -191.086, 10.9366, 2.04", "-10.9227, -194.41, 10.9663, 1.8", "-11.3083, -198.637, 10.9783, 1.56", "-11.6613, -202.933, 10.9723, 1.92", "-12.147, -208.381, 10.9546, 1.56", "-12.5647, -212.618, 10.9151, 1.32", "-13.081, -217.398, 10.808, 1.32", "-13.3467, -219.666, 10.7658, 1.32", "-13.5785, -221.647, 10.7414, 1.2", "-14.1542, -226.226, 10.7532, 1.68", "-14.6858, -230.449, 10.9807, 1.68", "-15.0772, -233.156, 11.1707, 1.68", "-15.4256, -235.46, 11.3255, 1.68", "-15.8416, -238.021, 11.5135, 1.68", "-15.9981, -239.111, 11.5986, 1.68", "-16.5044, -246.144, 12.185, 2.16" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "67.4539, -111.678, 7.32907, 0.84", "70.1377, -111.178, 7.71151, 0.84", "72.2562, -110.746, 8.08067, 0.84", "73.9166, -110.404, 8.41974, 1.32", "76.6596, -109.851, 9.08361, 1.32", "78.8297, -109.42, 9.68348, 1.68", "81.5417, -108.823, 10.488, 1.2", "82.9747, -108.5, 11.0063, 0.96", "84.845, -107.988, 11.7995, 1.44", "87.089, -107.224, 12.8623, 0.84", "88.1506, -106.754, 13.4501, 0.84", "89.1957, -106.16, 14.163, 0.84", "89.8911, -105.607, 14.8077, 0.84", "90.6708, -104.83, 15.6462, 0.84", "91.3185, -103.954, 16.512, 0.84", "91.9656, -102.754, 17.6093, 1.08", "92.6544, -101.327, 18.9169, 0.72", "93.5329, -99.5533, 20.7208, 1.2", "102.999, -95.8371, 22.7022, 1.2", "112.069, -91.0188, 23.635, 1.2", "120.639, -85.3736, 23.4101, 1.2", "127.895, -78.3668, 24.8225, 1.2", "136.274, -72.5912, 26.1654, 1.2", "143.941, -65.9855, 27.5365, 1.2", "151.81, -59.5211, 26.7934, 1.2", "159.493, -52.8167, 26.7071, 1.2", "166.274, -45.2972, 27.2709, 1.2", "172.199, -37.1782, 26.491, 1.2", "177.403, -28.5994, 27.0441, 1.2", "181.054, -19.3183, 27.0124, 1.2", "184.729, -10.045, 27.0922, 1.2", "188.382, -0.774864, 26.6992, 1.2", "193.719, 7.72642, 27.3167, 1.2", "198.826, 16.369, 27.5234, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "67.4539, -111.678, 7.32907, 0.84", "68.4298, -113.374, 7.60578, 0.84", "69.4868, -115.14, 7.87854, 0.6", "70.1731, -116.302, 8.04016, 1.32", "71.2524, -118.129, 8.2943, 0.84", "71.9505, -119.31, 8.45867, 0.72", "72.5063, -120.251, 8.58956, 1.08", "73.2018, -121.482, 8.74239, 0.72", "73.8522, -122.657, 8.94443, 1.2", "78.3675, -128.853, 9.44782, 1.2", "83.2019, -134.639, 11.0927, 1.2", "87.9395, -139.959, 14.1571, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "26.2866, -261.216, -6.06718, 0.96", "27.9699, -262.812, -5.21228, 0.96", "28.9481, -263.869, -4.62742, 0.96", "30.7331, -265.91, -3.46665, 1.44", "32.0645, -267.385, -2.56302, 0.96", "33.1065, -268.545, -1.84968, 0.96", "33.9592, -269.523, -1.26228, 0.96", "34.6923, -270.419, -0.734763, 0.96", "35.5624, -271.562, -0.0200696, 1.08", "36.6405, -273.139, 0.931559, 1.08", "37.1686, -273.929, 1.38591, 1.08", "37.6484, -274.609, 1.74815, 1.08", "38.8012, -276.258, 2.69239, 1.08", "39.8273, -277.913, 3.68197, 0.84", "40.4759, -279.294, 4.53456, 1.2", "40.8068, -280.391, 5.20713, 1.2", "41.009, -281.298, 5.77785, 1.2", "41.4084, -283.518, 7.22124, 0.96", "41.5664, -284.686, 7.98822, 0.96", "41.7579, -285.767, 8.67992, 0.96", "42.024, -287.15, 9.52326, 0.72", "42.1718, -288.015, 10.0142, 0.72", "42.4406, -289.263, 10.6756, 0.72", "42.9756, -290.829, 11.3616, 1.2", "44.0422, -293.133, 12.4194, 0.84", "44.5795, -294.086, 12.8796, 0.84", "45.1779, -295.089, 13.411, 0.84", "48.5159, -300.926, 16.8227, 0.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "26.2866, -261.216, -6.06718, 1.32", "26.8409, -264.079, -5.98367, 1.32", "27.1328, -265.855, -5.95946, 1.32", "27.3725, -267.585, -5.95083, 1.32", "27.5087, -268.875, -5.95251, 1.32", "27.8097, -271.621, -5.96771, 1.68", "28.1048, -273.912, -5.98657, 1.68", "28.3313, -275.588, -6.07385, 1.68", "28.5551, -277.167, -6.17504, 1.68", "28.9363, -279.825, -6.36893, 1.2", "29.1919, -281.574, -6.51271, 1.2", "29.6214, -284.214, -6.74923, 1.2", "30.1758, -287.213, -7.06957, 1.56", "30.4803, -288.719, -7.24748, 1.56", "30.7562, -290.016, -7.41023, 1.56", "31.0683, -291.381, -7.58804, 1.56", "31.5704, -293.752, -7.78447, 1.44", "32.0681, -296.156, -7.94901, 1.44", "32.3142, -297.246, -7.98659, 1.44", "32.6252, -298.57, -8.01945, 1.44", "33.0065, -300.091, -8.02777, 1.44", "33.6917, -302.556, -7.94548, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "7.0912, 71.1848, 28.7847, 1.44", "6.20685, 70.1813, 28.8588, 1.44", "5.85967, 69.8372, 28.9075, 1.2", "5.11205, 69.2345, 29.012, 0.96", "4.43931, 68.6922, 29.106, 0.96", "3.97574, 68.3185, 29.1709, 0.96", "3.48236, 67.9208, 29.2398, 0.96", "2.98558, 67.4741, 29.2485, 0.96", "2.04182, 66.7119, 29.2978, 1.2", "-2.84435, 62.525, 28.7859, 1.2", "-7.23728, 57.8458, 28.8221, 1.2", "-11.6375, 53.2165, 28.1495, 1.2" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "7.0912, 71.1848, 28.7847, 0.96", "7.90024, 69.9017, 29.0119, 0.96", "8.83112, 68.4254, 29.2733, 0.96", "9.52347, 67.3274, 29.4677, 1.2", "9.90678, 66.7195, 29.5753, 1.2", "11.1719, 64.7133, 29.9305, 0.84", "11.7389, 63.8139, 30.0898, 0.84" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "8.60347, 53.9381, 15.9099, 1.44", "9.63059, 56.5526, 16.3987, 1.44", "10.4116, 58.606, 16.7564, 1.44", "10.8066, 59.6817, 16.9418, 1.44", "11.6885, 62.1823, 17.4165, 1.44", "12.7508, 65.1421, 18.0472, 1.32", "13.4241, 66.8391, 18.355, 1.32", "14.2893, 68.7039, 18.6232, 1.32", "15.0773, 70.2093, 18.8097, 1.56", "15.923, 71.6399, 18.9455, 1.56", "17.1566, 73.4816, 19.0678, 1.32", "19.4589, 76.5287, 19.2369, 1.32", "20.9356, 78.2837, 19.3214, 1.32", "22.226, 79.6961, 19.2951, 1.32", "23.673, 81.2054, 19.1757, 1.56", "24.4895, 82.0734, 19.0502, 1.56", "26.4709, 84.236, 18.6479, 1.2", "27.5231, 85.4109, 18.4362, 1.2", "29.5784, 87.7539, 17.9648, 1.44", "30.6638, 89.0369, 17.6573, 1.92", "32.7493, 91.7068, 17.1218, 1.56", "34.0418, 93.4816, 16.8315, 1.32", "35.9031, 96.2683, 16.4648, 1.32", "37.3719, 98.63, 16.308, 1.32", "38.8059, 101.099, 16.3347, 1.56", "40.6671, 104.698, 16.5525, 1.2", "41.228, 105.975, 16.7086, 1.2", "41.5243, 106.886, 16.8566, 1.2", "41.7829, 108.115, 17.1163, 0.96", "41.8904, 108.908, 17.3159, 1.32", "42.071, 111.241, 17.9452, 0.96", "42.1154, 112.388, 18.1753, 0.96", "42.1578, 113.551, 18.3774, 0.96", "42.3208, 115.756, 18.7698, 1.32", "42.4525, 116.831, 18.9669, 1.32", "42.769, 118.455, 19.3203, 0.84", "43.2471, 120.124, 19.7671, 1.08", "43.8303, 121.746, 20.3203, 1.08", "44.7819, 124.044, 21.2236, 0.84", "45.274, 125.159, 21.6191, 1.2", "45.8613, 126.393, 22.0973, 0.84", "46.5484, 127.708, 22.6614, 1.2", "47.6292, 129.688, 23.5798, 0.96", "47.9867, 130.373, 23.899, 0.96", "49.3562, 133.605, 25.0969, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "8.60347, 53.9381, 15.9099, 1.08", "10.3398, 56.2668, 15.9677, 1.08", "12.4104, 59.1634, 16.0236, 1.08", "13.0356, 60.0557, 16.0378, 1.08", "13.6337, 60.9273, 16.0021, 1.08", "14.6955, 62.4745, 15.9385, 1.32", "16.2728, 64.773, 15.8441, 0.96", "17.2675, 66.2093, 15.7397, 1.44", "17.9413, 67.2042, 15.6424, 1.44", "19.2809, 69.2627, 15.4049, 1.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-16.5044, -246.144, 12.185, 1.08", "-17.0659, -248.759, 13.2166, 1.08", "-17.4484, -250.476, 13.9065, 1.08", "-18.0694, -252.918, 14.8818, 1.08", "-18.4671, -254.414, 15.4785, 1.08", "-18.9671, -256.151, 16.1796, 1.08", "-19.334, -257.337, 16.6867, 1.08", "-19.5961, -258.084, 17.0066, 1.08", "-20.071, -259.174, 17.4842, 1.08", "-21.0333, -261.049, 18.245, 0.84", "-21.5767, -262.003, 18.6249, 0.84", "-22.4163, -263.35, 19.115, 1.32", "-23.6327, -265.171, 19.7151, 1.32", "-25.3784, -267.745, 20.4939, 0.96", "-26.5523, -269.51, 20.9599, 0.96", "-27.3665, -270.808, 21.282, 1.2", "-28.8207, -273.382, 21.887, 1.2", "-29.7066, -275.154, 22.2974, 1.44", "-30.6342, -277.274, 22.8179, 1.2", "-31.4551, -279.523, 23.3695, 1.2", "-32.4456, -282.519, 24.1166, 1.2", "-32.7705, -283.607, 24.3864, 1.2", "-33.1449, -285.393, 24.8698, 1.2", "-33.2756, -286.401, 25.1652, 1.2" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-16.5044, -246.144, 12.185, 0.96", "-16.2154, -248.726, 11.4505, 0.96", "-16.0511, -250.37, 10.9938, 1.32", "-16.0426, -251.023, 10.8786, 1.32", "-16.032, -251.834, 10.7356, 1.32", "-16.0083, -253.656, 10.4143, 1.56", "-15.9907, -255.007, 10.176, 1.56", "-16.0014, -256.003, 10.0217, 1.56", "-16.1213, -258.736, 9.89501, 1.92" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "33.6917, -302.556, -7.94548, 0.96", "33.4144, -304.024, -7.47971, 0.96", "33.1425, -305.345, -7.11205, 0.96", "32.826, -306.662, -6.75793, 1.44", "32.0874, -309.581, -5.94645, 1.08", "31.7565, -310.94, -5.5784, 1.08", "31.3164, -313.014, -5.03427, 1.08", "31.162, -313.988, -4.7649, 1.08", "30.8748, -316.503, -4.07792, 0.84", "30.7369, -318.57, -3.56129, 0.84", "30.7203, -319.875, -3.30607, 0.84", "30.7711, -321.345, -3.02069, 0.84", "30.8695, -322.718, -2.7657, 0.84", "30.9549, -323.843, -2.59731, 0.84", "31.0048, -324.639, -2.54132, 0.84", "31.0341, -325.552, -2.51974, 0.84", "30.9637, -326.767, -2.51569, 0.84", "30.7591, -327.826, -2.55638, 0.84", "30.4758, -328.723, -2.63731, 0.84", "29.8309, -330.287, -2.79998, 0.6", "27.671, -338.351, -3.0973, 0.6" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "33.6917, -302.556, -7.94548, 0.84", "33.911, -304.711, -8.11894, 0.84", "34.0586, -306.257, -8.28212, 0.84", "34.2104, -307.899, -8.51376, 0.84", "34.465, -311.291, -9.08204, 1.2", "34.507, -312.082, -9.23111, 1.2", "34.6419, -315.599, -9.94711, 0.96", "34.7127, -318.552, -10.6348, 1.32", "34.8266, -322.297, -11.5149, 1.08", "34.9471, -324.406, -12.013, 1.08", "35.0695, -325.96, -12.3705, 1.08", "35.2246, -327.119, -12.6074, 1.08", "35.3642, -327.912, -12.7437, 1.08", "35.9946, -331.025, -13.2049, 0.84", "36.9472, -335.054, -13.69, 1.2", "37.2526, -336.19, -13.8045, 1.2", "38.9612, -342.078, -14.3196, 0.84", "39.9355, -345.396, -14.5931, 2.04" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.7389, 63.8139, 30.0898, 0.72", "11.0109, 62.3774, 29.7392, 0.72", "10.3829, 61.1383, 29.4368, 0.48", "9.62593, 59.6447, 29.0723, 0.96", "9.08927, 58.5858, 28.8138, 0.96", "3.59265, 48.7129, 25.1431, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "11.7389, 63.8139, 30.0898, 0.72", "12.1689, 62.3809, 30.2273, 0.72", "12.3894, 61.3723, 30.3394, 1.08", "12.7202, 59.6346, 30.4576, 0.72", "12.8718, 58.3795, 30.4536, 0.72", "12.9789, 56.5927, 30.3217, 0.72", "13.0744, 55.1272, 30.1623, 1.2", "13.0672, 54.4326, 30.0788, 1.2", "12.9646, 52.9252, 29.8709, 0.84", "12.7606, 51.0578, 29.5487, 0.84", "12.6186, 49.5417, 29.1102, 1.32", "12.5389, 48.5624, 28.68, 1.08", "11.8491, 39.1013, 27.4762, 1.08", "10.5686, 29.6658, 26.5701, 1.08", "9.02739, 20.5338, 24.0544, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "49.3562, 133.605, 25.0969, 0.6", "50.2121, 134.854, 25.6036, 0.6", "51.0861, 136.129, 26.1209, 0.6", "52.2205, 137.784, 26.7924, 0.6", "54.053, 140.458, 27.8772, 0.6", "55.2416, 142.192, 28.5808, 0.6", "56.4509, 143.956, 29.2966, 0.48", "61.9594, 156.048, 31.2195, 0.48", "68.3719, 167.854, 31.9381, 0.48", "75.1967, 179.067, 35.1257, 0.48", "84.4009, 188.996, 36.5706, 0.48", "93.3134, 199.253, 36.7838, 0.48", "102.903, 208.824, 38.3969, 0.48", "110.174, 220.19, 38.2597, 0.48", "114.782, 232.51, 35.6825, 0.48", "117.713, 245.484, 34.7018, 0.48" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "49.3562, 133.605, 25.0969, 0.84", "50.8668, 136.316, 24.9691, 0.84", "51.7192, 137.846, 24.897, 0.84", "52.6278, 139.476, 24.8201, 0.36", "53.4912, 141.026, 24.7471, 0.6", "54.189, 142.278, 24.688, 0.6", "55.431, 144.507, 24.5829, 0.6", "61.2448, 153.609, 22.6475, 0.6", "66.5088, 162.802, 19.8183, 0.6", "73.0809, 171.123, 16.7465, 0.6", "79.0711, 179.751, 13.4325, 0.6", "83.0483, 188.859, 8.78283, 0.6", "86.8965, 198.812, 6.59548, 0.6", "91.7283, 208.537, 5.49386, 0.6", "96.2079, 218.432, 4.61256, 0.6", "98.9366, 228.65, 2.11596, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "19.2809, 69.2627, 15.4049, 1.08", "18.4712, 71.1809, 15.7884, 1.08", "17.9494, 72.0966, 16.0623, 1.08", "17.1906, 73.428, 16.4605, 1.08", "16.3482, 74.9064, 16.9027, 0.96", "15.1274, 77.0488, 17.5435, 0.96", "14.1182, 78.8197, 18.0731, 0.84", "12.6558, 80.9363, 18.9304, 1.08", "6.17576, 89.8356, 20.1577, 1.08", "1.01904, 99.4232, 21.8335, 1.08" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "19.2809, 69.2627, 15.4049, 0.96", "20.5795, 70.081, 14.9924, 0.96", "21.1682, 70.4405, 14.7766, 0.96", "22.0958, 71.0295, 14.4097, 0.96", "23.1924, 71.7675, 13.8728, 0.84", "23.7678, 72.1635, 13.5685, 0.84", "24.6853, 72.7942, 13.0591, 0.84", "25.1107, 73.0656, 12.7953, 0.84", "25.7986, 73.4816, 12.3555, 0.84", "27.216, 74.2349, 11.4994, 1.2", "27.4879, 74.3552, 11.3643, 1.2", "28.2284, 74.6182, 11.0727, 1.2", "29.3773, 74.9177, 10.7535, 1.2", "29.7454, 74.9864, 10.6852, 1.2", "31.1914, 75.1909, 10.4871, 1.2", "32.3368, 75.3387, 10.3745, 0.96", "33.4719, 75.5059, 10.2644, 0.96", "34.7674, 75.6771, 10.1477, 0.96", "36.0529, 75.8429, 10.0326, 1.32", "37.9912, 76.11, 9.85292, 0.84", "39.6696, 76.3556, 9.68774, 1.2", "40.8447, 76.547, 9.62279, 1.2", "41.9837, 76.7705, 9.61615, 0.96", "42.9394, 76.9955, 9.67871, 1.2", "43.651, 77.1754, 9.78447, 1.2", "44.1195, 77.3002, 9.89151, 1.2", "46.5062, 78.0186, 10.5827, 1.2", "47.4572, 78.3602, 10.8835, 1.2", "48.2563, 78.7078, 11.1451, 1.2", "49.8026, 79.3865, 11.6502, 1.08", "50.5024, 79.6669, 11.8607, 1.44", "51.836, 80.1079, 12.1062, 1.08", "52.8651, 80.3854, 12.1302, 1.08", "53.6499, 80.5941, 12.0758, 1.08", "54.9742, 80.9902, 11.8853, 1.08", "56.4379, 81.4474, 11.5797, 1.44", "58.709, 82.1631, 10.98, 1.08", "60.1914, 82.6802, 10.512, 0.84", "61.306, 83.139, 10.1398, 1.2", "62.4273, 83.6455, 9.75043, 1.2", "63.6751, 84.2943, 9.25886, 0.84", "64.5866, 84.8139, 8.8895, 1.08", "66.5443, 85.9245, 8.15783, 0.72", "68.4807, 86.9422, 7.41675, 0.72", "69.7135, 87.4861, 6.94825, 1.2", "71.5317, 88.2071, 6.26717, 0.72", "72.1726, 88.4456, 6.04248, 0.72", "73.5146, 88.9043, 5.62137, 0.96", "74.9311, 89.3431, 5.21929, 0.96", "77.4378, 90.1964, 4.60979, 0.72", "78.7265, 90.7388, 4.34902, 0.6", "79.7641, 91.2374, 4.1834, 0.6", "81.0973, 91.9933, 3.97545, 1.2", "81.4935, 92.2595, 3.91842, 1.2", "83.1114, 93.4495, 3.74263, 0.72", "83.8674, 94.0755, 3.67243, 0.72", "84.3961, 94.5027, 3.62548, 0.72", "85.6589, 95.5679, 3.46388, 0.6", "85.8662, 95.7421, 3.43319, 0.6", "86.9121, 96.6063, 3.20762, 0.96", "87.6147, 97.2032, 2.97634, 0.72", "88.0721, 97.6146, 2.79107, 0.96", "89.8378, 99.3002, 1.97576, 0.72", "90.8551, 100.311, 1.46017, 0.72", "92.2064, 101.64, 0.71618, 1.2", "93.6352, 102.989, -0.0363187, 0.72", "94.6172, 103.849, -0.499373, 0.72", "95.8384, 104.829, -1.0186, 0.72", "96.3177, 105.17, -1.182, 0.72", "97.8063, 106.164, -1.54733, 1.08", "99.5262, 107.21, -1.73653, 0.72", "100.765, 107.92, -1.7639, 1.08", "101.088, 108.106, -1.75389, 1.08", "102.447, 108.852, -1.69938, 0.72", "103.249, 109.3, -1.68678, 0.72", "104.752, 110.173, -1.72031, 1.08", "105.344, 110.511, -1.78149, 1.08", "106.519, 111.147, -1.93858, 0.84", "108.684, 112.265, -2.25829, 0.84", "110.519, 113.149, -2.51234, 0.6", "111.948, 113.749, -2.65333, 1.08", "112.634, 113.998, -2.68594, 1.08", "114.435, 114.612, -2.65409, 0.72", "115.334, 114.907, -2.57478, 0.72", "117.214, 115.545, -2.21821, 1.08", "118.854, 116.09, -1.78712, 0.84", "119.716, 116.39, -1.52757, 1.08", "121.007, 116.879, -1.12642, 0.84", "121.67, 117.134, -0.928468, 0.84", "123.378, 117.776, -0.492115, 0.6", "124.222, 118.056, -0.324074, 0.6", "125.515, 118.438, -0.128144, 0.96", "126.055, 118.547, -0.0675044, 0.96", "127.688, 118.696, 0.0796848, 0.72", "128.974, 118.733, 0.186866, 0.72", "130.02, 118.72, 0.220004, 0.72", "130.283, 118.725, 0.215515, 0.72", "131.234, 118.802, 0.118259, 0.72", "132.781, 119.022, -0.215567, 0.72", "133.214, 119.111, -0.376498, 0.72", "134.829, 119.485, -1.13405, 0.6", "135.715, 119.697, -1.60495, 0.96", "137.246, 120.004, -2.4412, 0.96", "138.223, 120.201, -3.01688, 0.96", "139.846, 120.485, -4.04707, 0.72", "141.315, 120.686, -4.98161, 0.72", "142.716, 120.787, -5.85457, 1.2", "144.035, 120.807, -6.65356, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-33.2756, -286.401, 25.1652, 0.48", "-33.432, -289.675, 25.4505, 0.48", "-33.572, -292.608, 25.706, 0.48", "-33.6919, -295.117, 25.9247, 0.84", "-33.7955, -297.286, 26.1137, 0.84", "-33.8956, -299.382, 26.2963, 0.6", "-36.4892, -311.46, 25.7078, 0.6" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-33.2756, -286.401, 25.1652, 0.84", "-32.5812, -288.812, 25.5671, 0.84", "-32.0664, -290.776, 25.8814, 0.84", "-31.6332, -292.696, 26.1671, 1.08", "-31.1291, -295.087, 26.4776, 0.84", "-30.7877, -296.743, 26.6769, 0.84", "-30.4803, -298.308, 26.8494, 0.84", "-30.3361, -299.191, 26.9364, 0.84", "-29.9967, -301.937, 27.1396, 1.32", "-29.8737, -303.484, 27.2354, 1.32", "-29.78, -306.304, 27.4103, 1.2", "-29.7872, -307.946, 27.5163, 0.96", "-29.834, -309.978, 27.6906, 1.32", "-29.9081, -311.819, 27.8916, 1.32", "-30.0547, -314.067, 28.2189, 1.08", "-30.4571, -318.813, 28.9758, 1.08", "-30.7142, -321.285, 29.4, 0.84", "-30.9381, -323.392, 29.8002, 1.2", "-31.179, -325.72, 30.2929, 1.08", "-31.349, -327.6, 30.7335, 1.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-16.1213, -258.736, 9.89501, 0.96", "-18.2184, -261.884, 10.1777, 0.96", "-19.0289, -263.295, 10.4885, 0.96", "-19.7758, -264.54, 10.7996, 0.96", "-20.6703, -266.035, 11.168, 0.96", "-21.6664, -267.639, 11.5776, 0.96", "-23.7577, -271.183, 12.4979, 1.44", "-25.389, -274.341, 13.4631, 0.96", "-27.9793, -279.68, 15.2051, 1.44", "-28.7557, -281.388, 15.7747, 0.96", "-30.2445, -284.809, 16.9104, 1.56", "-31.8886, -288.803, 18.1694, 1.2", "-33.9275, -294.346, 19.7463, 0.96", "-34.7233, -296.815, 20.3952, 1.44", "-35.8243, -300.764, 21.3813, 0.96", "-37.0186, -305.082, 22.3475, 1.32", "-38.3139, -309.658, 23.1717, 0.96", "-39.3739, -313.084, 23.6142, 0.96", "-39.9688, -315.079, 23.7706, 0.96", "-40.4289, -316.778, 23.8705, 0.96", "-41.5718, -321.337, 24.064, 1.32", "-42.5252, -325.37, 24.1863, 0.96", "-43.7658, -331.135, 24.3697, 1.44", "-44.5808, -335.352, 24.529, 0.84", "-45.0591, -338.388, 24.7092, 1.2", "-45.2643, -339.955, 24.8757, 1.2", "-45.3631, -341.01, 25.0441, 0.84", "-45.6866, -345.076, 25.9637, 1.2", "-46.0355, -348.803, 27.055, 1.2", "-46.4042, -351.313, 27.8884, 0.96", "-47.206, -355.436, 29.3174, 0.96", "-48.156, -359.262, 30.5577, 1.32", "-49.1449, -362.414, 31.535, 1.68", "-50.4637, -365.657, 32.4698, 1.2", "-52.548, -369.702, 33.509, 0.96", "-54.812, -373.185, 34.1628, 0.96", "-57.3832, -376.14, 34.4181, 0.84", "-59.3308, -377.596, 34.3509, 0.84", "-61.5371, -378.237, 33.937, 0.84", "-63.4652, -377.122, 33.2621, 0.84", "-64.433, -376.07, 32.8502, 0.84", "-65.2718, -374.771, 32.4626, 0.84", "-65.9862, -373.136, 32.1585, 1.08", "-66.684, -370.877, 31.8407, 0.84", "-67.037, -368.995, 31.7252, 0.6", "-69.7873, -381.845, 34.3843, 0.6" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-16.1213, -258.736, 9.89501, 1.08", "-16.1588, -262.369, 10.1551, 1.08", "-16.1922, -266.308, 10.4056, 1.44", "-16.2412, -268.074, 10.5114, 0.84", "-16.3357, -270.639, 10.6515, 1.32", "-16.4035, -272.383, 10.7401, 1.32", "-16.5354, -275.402, 10.838, 1.32", "-16.6723, -277.339, 10.8584, 1.32", "-16.8149, -279.453, 10.8632, 1.32", "-17.1585, -283.351, 10.8688, 1.44", "-17.3445, -285.263, 10.8718, 1.44", "-17.9784, -291.277, 10.8922, 1.44", "-18.1567, -292.778, 10.9019, 1.44", "-18.4672, -295.374, 10.9262, 1.08", "-19.0015, -300.566, 10.9856, 1.08", "-19.2737, -303.235, 11.0313, 0.84", "-19.5699, -306.315, 11.1229, 1.32", "-19.7491, -308.755, 11.2286, 1.32", "-19.962, -312.547, 11.4008, 0.96", "-20.0357, -314.522, 11.5068, 1.44", "-20.1221, -317.42, 11.5953, 1.44", "-20.2889, -320.484, 11.6352, 1.2", "-20.5604, -323.539, 11.6282, 1.08", "-20.8353, -325.967, 11.5894, 1.08", "-21.1778, -328.251, 11.5321, 1.68", "-21.7697, -331.863, 11.4213, 1.2", "-22.0036, -333.356, 11.3689, 1.2", "-22.4256, -336.347, 11.2632, 1.44", "-22.7484, -338.974, 11.1662, 1.44", "-23.0454, -342.22, 11.0579, 1.44", "-23.2245, -345.024, 10.9947, 1.44", "-23.3049, -348.244, 10.9935, 1.8", "-23.3525, -351.587, 10.978, 1.32", "-23.3639, -353.546, 10.9624, 1.08", "-23.4022, -356.288, 10.9368, 1.56", "-23.4541, -359.462, 10.8905, 1.56", "-23.489, -361.23, 10.8601, 1.56", "-23.5295, -362.86, 10.8334, 1.56", "-23.606, -365.346, 10.8072, 1.56", "-23.6489, -367.448, 10.8061, 1.56", "-23.6452, -369.876, 10.7947, 1.32", "-23.6327, -370.972, 10.7892, 1.32", "-23.678, -372.588, 10.7796, 1.32", "-23.7558, -374.369, 10.7696, 1.32", "-23.8812, -377.014, 10.7125, 1.32", "-23.979, -378.997, 10.6705, 1.32", "-24.1322, -381.324, 10.6259, 1.68", "-24.6475, -387.387, 10.4908, 1.32", "-24.845, -389.287, 10.4383, 1.32", "-25.1111, -391.463, 10.3608, 1.32" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "39.9355, -345.396, -14.5931, 0.96", "42.2894, -346.727, -12.7781, 0.96", "43.4717, -347.375, -11.8712, 1.32", "45.9213, -348.738, -10.0043, 0.96", "47.7446, -349.813, -8.59454, 1.32", "50.0775, -351.258, -6.88493, 1.2", "51.277, -351.96, -6.0503, 1.2", "52.4569, -352.612, -5.28276, 1.2", "53.2745, -353.083, -4.75373, 1.2", "54.228, -353.639, -4.18747, 1.2", "57.0813, -355.177, -2.69331, 0.96", "59.1506, -356.188, -1.82284, 1.32", "60.3818, -356.727, -1.35187, 1.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "39.9355, -345.396, -14.5931, 1.08", "40.3075, -348.583, -14.5389, 1.08", "40.5747, -351.468, -14.5106, 0.72", "40.7109, -352.883, -14.5566, 0.72", "41.0235, -356.301, -14.7465, 1.2", "41.2718, -359.085, -14.9313, 0.84", "41.4072, -360.768, -15.051, 0.84", "41.51, -361.999, -15.1654, 0.84", "41.775, -365.225, -15.4739, 0.6", "41.9364, -367.019, -15.6348, 0.6", "42.2201, -369.408, -15.826, 1.2", "42.6109, -372.127, -16.057, 1.2", "42.984, -374.413, -16.2474, 0.84", "43.3005, -376.314, -16.3934, 0.84", "43.7781, -379.334, -16.6185, 1.08", "44.1896, -381.948, -16.8719, 0.72", "44.5482, -384.264, -17.166, 1.08", "44.7973, -385.858, -17.4075, 1.08", "45.0065, -387.352, -17.6637, 1.08", "45.3124, -390.038, -18.1554, 0.72", "45.4853, -391.771, -18.4803, 0.72", "45.5908, -393.444, -18.715, 1.08", "45.6308, -394.718, -18.8089, 1.08", "45.6507, -395.582, -18.8208, 1.08", "45.6594, -397.969, -18.8307, 0.72", "45.6456, -399.303, -18.8405, 0.72", "45.6101, -402.269, -18.925, 1.2", "45.5939, -405.23, -19.0625, 1.2", "45.6102, -409.112, -19.3315, 1.2", "45.6797, -412.846, -19.6825, 0.84", "45.7124, -414.319, -19.8636, 1.32", "45.7415, -415.948, -20.1179, 1.32", "45.7667, -416.704, -20.2719, 1.32", "45.8263, -418.383, -20.6554, 0.96", "45.8679, -419.881, -20.9983, 1.56", "45.9418, -421.439, -21.3071, 1.56", "46.0264, -422.753, -21.5538, 1.08", "46.097, -424.029, -21.787, 1.08", "46.271, -426.636, -22.2932, 0.84", "46.4013, -427.85, -22.5341, 1.44", "46.7509, -430.099, -23.0012, 1.08", "47.0523, -431.492, -23.3122, 1.08", "47.573, -433.702, -23.8151, 0.72", "48.1767, -436.345, -24.4061, 1.08", "48.5162, -437.725, -24.7639, 1.08", "48.9187, -439.289, -25.2019, 0.96", "49.5918, -441.943, -25.9435, 0.72", "49.9477, -443.265, -26.3556, 0.72", "50.2383, -444.2, -26.6882, 0.72", "51.0853, -446.97, -27.7958, 0.72", "51.3712, -448.063, -28.2795, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.59265, 48.7129, 25.1431, 0.6", "-0.403796, 40.8228, 22.9685, 0.6", "-4.27213, 32.6498, 22.131, 0.6", "-7.52093, 24.4354, 20.0434, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.59265, 48.7129, 25.1431, 0.84", "0.215161, 43.2413, 22.6789, 0.6", "-4.55593, 38.4357, 21.1625, 0.6", "-9.17123, 33.3768, 20.1654, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "1.01904, 99.4232, 21.8335, 0.6", "-3.55378, 106.57, 24.827, 0.6", "-9.52344, 112.65, 27.9719, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.01904, 99.4232, 21.8335, 0.84", "-4.25728, 108.515, 22.3974, 0.6", "-7.92257, 118.31, 22.3003, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-31.349, -327.6, 30.7335, 0.6", "-32.0262, -327.115, 32.3811, 0.6", "-32.8691, -326.51, 34.4316, 0.6", "-33.2651, -326.227, 35.395, 0.6", "-33.7405, -325.886, 36.5513, 0.96", "-37.983, -322.185, 44.651, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-31.349, -327.6, 30.7335, 0.96", "-31.8456, -329.107, 30.9837, 0.96", "-32.3326, -330.584, 31.2291, 0.72", "-33.1282, -332.997, 31.6299, 0.72", "-36.7157, -343.701, 35.736, 0.72" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-25.1111, -391.463, 10.3608, 0.84", "-24.0747, -393.956, 8.9468, 0.84", "-22.9543, -396.229, 7.54444, 0.84", "-22.6778, -396.847, 7.14848, 0.84", "-22.0618, -398.445, 6.09229, 0.84", "-21.3536, -400.577, 4.71633, 0.6", "-20.7726, -402.475, 3.5296, 1.08", "-20.3913, -403.923, 2.65888, 1.08", "-19.804, -406.137, 1.33911, 0.72", "-19.3198, -408.04, 0.283259, 0.72", "-19.0799, -409.193, -0.357128, 0.72", "-18.9074, -410.142, -0.958111, 0.72", "-18.7595, -411.157, -1.61491, 1.2", "-18.3754, -413.671, -3.19583, 0.84", "-17.771, -416.879, -5.14636, 1.08", "-17.071, -420.45, -7.24176, 1.08", "-16.3951, -424.044, -9.32341, 0.84", "-16.1214, -425.633, -10.1961, 0.84", "-15.7956, -427.539, -11.1905, 1.32", "-15.3695, -429.992, -12.3459, 0.84", "-15.1857, -430.89, -12.7426, 0.84", "-14.8111, -432.391, -13.3047, 1.32", "-14.221, -434.703, -14.1661, 0.84", "-13.8309, -436.255, -14.9112, 1.44", "-13.2667, -438.933, -16.448, 1.2", "-13.0525, -440.123, -17.2247, 1.2", "-12.7936, -441.69, -18.283, 1.44", "-12.4856, -443.716, -19.6813, 1.08", "-11.9912, -447.404, -22.209, 0.84", "-11.7507, -449.375, -23.5116, 1.44", "-11.5501, -451.44, -24.8004, 0.96", "-11.4608, -452.969, -25.6433, 0.96", "-11.4278, -454.172, -26.2007, 1.44", "-11.5027, -456.915, -27.2344, 0.96", "-11.5561, -457.649, -27.4608, 0.96", "-11.8112, -460.435, -28.2487, 1.44", "-12.131, -463.402, -29.1036, 0.84", "-12.5829, -466.756, -30.2414, 1.44", "-13.1277, -470.226, -31.529, 0.84", "-13.3141, -471.228, -31.9382, 0.84", "-13.8217, -473.884, -33.1431, 1.44", "-14.5022, -477.592, -34.9714, 1.44", "-15.2867, -481.658, -37.0269, 1.08", "-15.7064, -483.827, -38.173, 0.72", "-16.1267, -486.033, -39.3966, 1.32", "-16.5434, -487.983, -40.5048, 0.72", "-16.8043, -488.966, -41.0632, 0.72", "-17.6223, -491.593, -42.4874, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-25.1111, -391.463, 10.3608, 1.08", "-25.7075, -394.204, 10.3824, 1.08", "-26.0072, -396.024, 10.4002, 1.08", "-26.1876, -397.335, 10.4743, 1.08", "-26.6245, -399.802, 10.4829, 1.08", "-27.2146, -402.786, 10.324, 1.44", "-27.786, -405.664, 10.0798, 0.96", "-28.2104, -408.052, 9.797, 0.96", "-28.6045, -410.385, 9.42185, 0.96", "-29.2826, -414.792, 8.72396, 0.96", "-29.6565, -417.675, 8.3116, 0.84", "-29.8277, -419.376, 8.10202, 1.44", "-30.0723, -422.001, 7.85016, 1.08", "-30.2114, -424.107, 7.69942, 1.08", "-30.3412, -427.234, 7.54374, 1.56", "-30.39, -432.1, 7.53408, 1.32", "-30.4247, -434.523, 7.55086, 0.96", "-30.4921, -436.934, 7.55951, 1.32", "-30.6391, -441.428, 7.54935, 1.08", "-30.756, -444.261, 7.49449, 0.72", "-30.9097, -446.747, 7.40754, 1.32", "-31.1364, -450.219, 7.31367, 1.08", "-31.3184, -452.984, 7.27448, 1.56", "-31.5109, -456.154, 7.2724, 0.84", "-31.7459, -460.017, 7.2853, 0.6", "-31.8432, -461.682, 7.29107, 1.08", "-32.0589, -465.218, 7.30611, 1.2", "-32.234, -468.389, 7.31603, 0.72", "-32.2856, -469.446, 7.31018, 0.72", "-32.5304, -474.509, 7.23639, 1.32", "-32.5528, -475.438, 7.20197, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "60.3818, -356.727, -1.35187, 0.96", "62.4224, -355.339, -1.52599, 0.96", "63.2432, -354.781, -1.59602, 0.96", "64.243, -354.101, -1.68135, 0.84", "66.6486, -352.465, -1.88661, 0.84", "68.1052, -351.474, -2.0109, 1.08", "69.3751, -350.61, -2.11926, 1.08", "77.8897, -343.915, -2.7806, 1.08" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "60.3818, -356.727, -1.35187, 0.6", "61.6715, -358.163, -0.664815, 0.6", "63.2619, -359.998, 0.382205, 1.08", "64.8911, -362.04, 1.57648, 0.96", "65.7983, -363.189, 2.2408, 0.96", "66.7442, -364.387, 2.93347, 1.32", "68.4735, -366.578, 4.19976, 1.08", "69.1829, -367.52, 4.80496, 1.08", "70.5522, -369.397, 6.14916, 1.08", "71.7842, -371.164, 7.38669, 0.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "51.3712, -448.063, -28.2795, 0.72", "51.2241, -449.567, -28.6524, 0.72", "51.1199, -451.004, -28.9668, 0.72", "50.9613, -452.973, -29.4043, 0.72", "50.8245, -454.279, -29.6767, 0.72", "50.7641, -454.878, -29.8024, 0.72", "50.5896, -456.944, -30.2294, 0.6", "50.484, -458.028, -30.4263, 0.6", "50.3827, -458.972, -30.5833, 0.6", "50.1946, -460.601, -30.8119, 0.48", "50.076, -461.519, -30.9531, 0.48", "49.7905, -463.46, -31.2697, 0.84", "49.3546, -465.652, -31.649, 0.36" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "51.3712, -448.063, -28.2795, 0.72", "52.1624, -449.735, -28.3067, 0.72", "53.2762, -452.089, -28.345, 1.2", "53.6467, -452.872, -28.3577, 1.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-32.5528, -475.438, 7.20197, 0.48", "-35.1084, -477.01, 8.73225, 0.48", "-35.5749, -477.261, 8.99961, 0.48", "-37.0717, -478.169, 9.84222, 0.48", "-38.6863, -479.395, 10.9284, 0.48", "-39.3731, -480.007, 11.4677, 0.48", "-41.1602, -481.68, 12.9599, 0.96", "-43.199, -483.689, 14.8174, 0.6", "-44.6973, -485.293, 16.2692, 0.6", "-46.8818, -487.794, 18.5233, 1.08", "-48.4078, -489.648, 20.2088, 0.84", "-49.3425, -490.901, 21.3272, 0.84", "-50.3647, -492.554, 22.7349, 1.2", "-51.4119, -494.386, 24.369, 0.84" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-32.5528, -475.438, 7.20197, 0.84", "-32.7262, -478.149, 6.76871, 0.84", "-32.8785, -479.429, 6.6353, 0.84", "-33.0186, -480.561, 6.54428, 0.84", "-33.3815, -483.44, 6.3098, 0.84", "-33.5111, -484.508, 6.22278, 0.84", "-33.8049, -486.994, 6.02908, 1.44", "-34.041, -488.829, 5.88598, 1.08", "-34.3111, -490.917, 5.76241, 1.08", "-34.5603, -492.902, 5.69664, 0.84", "-34.6858, -494.149, 5.68775, 0.84", "-34.7496, -495.255, 5.66217, 1.08", "-34.7431, -496.735, 5.56096, 0.6", "-34.6846, -497.93, 5.44921, 0.6", "-34.5967, -499.181, 5.35109, 0.6", "-34.4743, -500.835, 5.19259, 1.2", "-34.3629, -502.493, 4.9868, 1.2", "-34.3115, -503.642, 4.83859, 1.2", "-34.2866, -504.937, 4.67874, 0.96", "-34.2819, -505.797, 4.57817, 1.44", "-34.3152, -507.499, 4.41691, 1.44", "-34.423, -509.92, 4.246, 0.96", "-34.5786, -512.584, 4.10721, 1.32", "-34.6405, -513.689, 4.0565, 1.32", "-34.7725, -516.165, 3.96225, 0.84", "-34.8944, -518.199, 3.91399, 1.32", "-34.953, -519.305, 3.9105, 1.32", "-35.0469, -520.604, 3.89479, 1.32", "-35.2586, -523.116, 3.84153, 1.32", "-35.4276, -524.768, 3.81182, 0.96", "-35.5864, -526.086, 3.79508, 0.96", "-35.9352, -529.051, 3.72719, 1.44", "-36.1615, -530.869, 3.66641, 1.08", "-36.378, -532.327, 3.62238, 1.08", "-36.6364, -533.784, 3.56329, 1.08", "-36.9436, -535.567, 3.46105, 1.08", "-37.263, -537.481, 3.33572, 1.08", "-37.7443, -540.187, 3.13881, 1.08", "-38.4567, -544.205, 2.79767, 0.96", "-39.5829, -550.372, 2.24535, 1.32", "-39.9612, -552.401, 2.05508, 0.84", "-40.1909, -553.608, 1.94258, 0.84", "-40.5071, -555.251, 1.80139, 0.84", "-40.7403, -556.506, 1.70973, 0.84", "-41.163, -558.975, 1.56135, 0.84", "-41.3769, -560.202, 1.53755, 0.84", "-41.5705, -561.217, 1.54648, 0.84", "-41.7751, -562.278, 1.58615, 1.2", "-42.131, -564.275, 1.6824, 0.72", "-42.4376, -565.826, 1.78938, 1.32", "-42.7225, -567.056, 1.8453, 0.84", "-43.0799, -568.489, 1.91098, 1.56", "-44.0601, -571.972, 2.04119, 0.84", "-44.4644, -573.263, 2.09115, 1.32", "-45.2756, -575.582, 2.20717, 0.84", "-46.5497, -579.019, 2.41762, 0.6", "-46.9303, -580.038, 2.48641, 1.08", "-47.6423, -581.951, 2.63137, 0.84", "-48.2505, -583.539, 2.757, 1.44", "-48.892, -585.197, 2.91349, 0.96", "-49.3886, -586.569, 3.04416, 0.72", "-49.8265, -587.89, 3.24505, 0.72", "-50.6104, -590.369, 3.59284, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "71.7842, -371.164, 7.38669, 0.84", "74.1377, -370.591, 7.65437, 0.84", "75.171, -370.339, 7.77189, 0.84", "77.6024, -369.747, 8.04842, 0.72", "79.1383, -369.373, 8.22311, 0.72", "88.6425, -368.47, 8.43624, 0.72" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "71.7842, -371.164, 7.38669, 0.72", "73.111, -373.063, 7.92309, 0.72", "74.5179, -375.076, 8.49185, 0.84", "75.1118, -375.926, 8.73197, 0.84", "76.3554, -377.705, 9.23473, 0.6", "77.2165, -378.937, 9.58282, 0.6", "78.1166, -380.225, 9.94673, 0.6", "84.9608, -388.19, 13.1112, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "49.3546, -465.652, -31.649, 0.48", "45.6948, -465.978, -34.4587, 0.48", "44.8435, -466.054, -35.1123, 1.08", "43.9668, -466.132, -35.7854, 0.48", "42.8668, -466.23, -36.6299, 0.96", "41.9364, -466.312, -37.3442, 0.48", "40.1206, -466.474, -38.7382, 0.48" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "49.3546, -465.652, -31.649, 0.96", "49.6567, -467.069, -32.9466, 0.96", "50.0929, -469.582, -35.1267, 0.48", "50.2434, -470.575, -35.9174, 0.48", "50.5816, -472.616, -37.4497, 0.84", "50.8392, -474.101, -38.545, 0.6", "50.969, -474.821, -39.0673, 0.6", "51.3187, -476.38, -40.2392, 0.96", "51.5761, -477.421, -41.0241, 0.96", "52.158, -479.413, -42.6332, 0.72", "52.8255, -481.324, -44.2856, 0.72", "53.5208, -482.808, -45.8162, 1.2", "54.248, -484.194, -47.3401, 1.2", "54.7372, -485.021, -48.3297, 1.2", "55.377, -485.989, -49.6271, 1.08", "56.2928, -487.188, -51.4492, 0.84", "57.4705, -488.411, -53.5915, 1.08" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "53.6467, -452.872, -28.3577, 0.72", "56.6883, -453.219, -29.435, 0.72", "58.5085, -453.426, -30.0797, 0.72", "59.6799, -453.559, -30.4945, 0.96" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "53.6467, -452.872, -28.3577, 0.48", "53.9576, -457.064, -28.2803, 0.48", "54.0092, -459.434, -28.1938, 0.96", "53.9917, -460.533, -28.1348, 0.96", "53.8749, -463.206, -27.9512, 0.48", "53.7683, -464.822, -27.8182, 0.48", "53.5837, -467.466, -27.5934, 0.96", "53.3443, -470.11, -27.3412, 0.96", "53.1569, -471.864, -27.1565, 0.96", "52.7964, -474.485, -26.8532, 1.32", "52.3573, -477.114, -26.5189, 0.96", "52.1895, -478.145, -26.3937, 0.96", "52.0234, -479.382, -26.2649, 0.96", "51.8207, -481.412, -26.0863, 1.32", "51.7083, -483.548, -25.9624, 0.96", "51.7049, -485.879, -25.9015, 0.6", "51.7512, -487.609, -25.9997, 0.6", "51.8357, -489.751, -26.4054, 1.32", "51.9586, -491.982, -27.1333, 0.84", "52.0894, -493.833, -27.8959, 0.84", "52.173, -494.667, -28.2852, 0.84", "52.5313, -497.988, -29.9606, 0.84", "52.9071, -501.448, -31.7776, 1.44", "53.2235, -505.13, -33.687, 0.96", "53.3157, -506.698, -34.3812, 0.96", "53.3695, -508.84, -35.1122, 0.96", "53.3817, -510.411, -35.4642, 0.96", "53.3762, -512.031, -35.5849, 0.96", "53.2309, -515.863, -35.3828, 0.72", "52.972, -519.807, -34.8483, 1.08", "52.7538, -522.411, -34.3731, 0.72", "52.5221, -524.855, -33.8485, 1.2", "52.2716, -527.669, -33.1984, 0.96", "51.9243, -532.086, -32.1257, 1.44", "51.7246, -535.1, -31.3824, 0.96", "51.5819, -536.832, -31.041, 0.72", "51.1766, -541.166, -30.3571, 1.08", "50.8786, -543.771, -30.045, 0.6", "50.6772, -545.488, -29.8425, 0.6", "50.4316, -547.583, -29.5886, 1.2", "49.8531, -552.404, -28.8338, 0.72", "49.5674, -554.406, -28.5002, 1.08", "49.0404, -557.454, -27.911, 0.96", "48.4443, -560.447, -27.2632, 0.72", "48.1098, -562.153, -26.8642, 0.72", "47.3244, -566.301, -25.7674, 0.72", "46.7558, -569.402, -24.7422, 0.72", "46.4839, -570.758, -24.3096, 1.2", "46.0291, -572.684, -23.7959, 1.2" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L5_DBC_d56fbcd5cf_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_41
create dend_61
public dend_61
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_18
create dend_40
public dend_40
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_42
create dend_58
public dend_58
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_19
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_43
create dend_57
public dend_57
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_20
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_35, id: dend_35, parent: dend_21
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_74
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_73(0), soma_0(0.45000099931593607)
    connect dend_69(0), soma_0(0.45000099931593607)
    connect dend_64(0), soma_0(0.45000099931593607)
    connect dend_41(0), soma_0(0.45000099931593607)
    connect dend_18(0), soma_0(0.45000099931593607)
    connect dend_0(0), soma_0(0.45000099931593607)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_35(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.25432, 14.9511, 0.00157081, 3.62034 ) }
    soma_0 { pt3dadd( -2.93315, 13.5105, 0.00126201, 6.40385 ) }
    soma_0 { pt3dadd( -2.61199, 12.0699, 9.53205E-4, 8.96308 ) }
    soma_0 { pt3dadd( -2.29082, 10.6293, 6.44404E-4, 10.4523 ) }
    soma_0 { pt3dadd( -1.96966, 9.18875, 3.35604E-4, 11.6707 ) }
    soma_0 { pt3dadd( -1.64849, 7.74817, 2.68037E-5, 11.8736 ) }
    soma_0 { pt3dadd( -1.32732, 6.30759, -2.81997E-4, 11.9675 ) }
    soma_0 { pt3dadd( -1.00616, 4.86701, -5.90797E-4, 12.0614 ) }
    soma_0 { pt3dadd( -0.684991, 3.42643, -8.99597E-4, 12.1873 ) }
    soma_0 { pt3dadd( -0.363825, 1.98585, -0.0012084, 12.1453 ) }
    soma_0 { pt3dadd( -0.0426595, 0.545272, -0.0015172, 12.019 ) }
    soma_0 { pt3dadd( 0.278507, -0.895307, -0.001826, 11.8927 ) }
    soma_0 { pt3dadd( 0.599673, -2.33589, -0.0021348, 11.8279 ) }
    soma_0 { pt3dadd( 0.920839, -3.77647, -0.0024436, 11.7176 ) }
    soma_0 { pt3dadd( 1.242, -5.21704, -0.0027524, 11.0046 ) }
    soma_0 { pt3dadd( 1.56317, -6.65762, -0.0030612, 10.0239 ) }
    soma_0 { pt3dadd( 1.88434, -8.0982, -0.00337, 9.09175 ) }
    soma_0 { pt3dadd( 2.2055, -9.53878, -0.0036788, 8.30332 ) }
    soma_0 { pt3dadd( 2.52667, -10.9794, -0.0039876, 7.17422 ) }
    soma_0 { pt3dadd( 2.84783, -12.4199, -0.0042964, 5.37678 ) }
    soma_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 3.2773 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 21/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -4.98075, 8.27387, 10.9227, 2.76 ) }
    dend_73 { pt3dadd( -6.09389, 9.25869, 9.29859, 2.16 ) }
    dend_73 { pt3dadd( -9.30854, 11.6218, 5.45208, 2.52 ) }
    dend_73 { pt3dadd( -11.6414, 13.1656, 2.93961, 2.52 ) }
    dend_73 { pt3dadd( -13.3381, 14.1901, 1.32359, 2.52 ) }
    dend_73 { pt3dadd( -14.2304, 14.6795, 0.538657, 2.52 ) }
    dend_73 { pt3dadd( -15.3073, 15.2, -0.284922, 2.28 ) }
    dend_73 { pt3dadd( -18.1768, 16.4991, -2.10657, 1.92 ) }
    dend_73 { pt3dadd( -19.4049, 16.9889, -2.68232, 1.92 ) }
    dend_73 { pt3dadd( -22.0632, 17.9088, -3.7815, 1.8 ) }
    dend_73 { pt3dadd( -23.6587, 18.4402, -4.35229, 1.8 ) }
    dend_73 { pt3dadd( -27.1083, 19.4496, -5.42186, 1.56 ) }
    dend_73 { pt3dadd( -29.7893, 20.1461, -6.14173, 1.92 ) }
    dend_73 { pt3dadd( -32.1014, 20.6417, -6.67148, 1.92 ) }
    dend_73 { pt3dadd( -33.7531, 20.8383, -6.96965, 1.92 ) }
    dend_73 { pt3dadd( -35.8638, 20.868, -7.2602, 1.92 ) }
    dend_73 { pt3dadd( -39.9015, 20.6593, -7.79503, 1.8 ) }
    dend_73 { pt3dadd( -40.5858, 20.5702, -7.89757, 1.8 ) }
    dend_73 { pt3dadd( -42.018, 20.2867, -8.11262, 1.8 ) }
    dend_73 { pt3dadd( -45.4136, 19.4598, -8.70194, 1.32 ) }
    dend_73 { pt3dadd( -46.6148, 19.1447, -8.97121, 1.32 ) }
    dend_73 { pt3dadd( -48.9315, 18.5268, -9.70412, 1.92 ) }
    dend_73 { pt3dadd( -49.8344, 18.4646, -10.2319, 1.92 ) }
    dend_73 { pt3dadd( -50.4837, 18.9698, -11.2467, 1.92 ) }
    dend_73 { pt3dadd( -50.7783, 19.3275, -11.8884, 1.92 ) }
    dend_73 { pt3dadd( -51.0904, 19.7597, -12.6664, 1.92 ) }
    dend_73 { pt3dadd( -51.5168, 20.0225, -13.3616, 1.92 ) }
    dend_73 { pt3dadd( -52.2046, 20.135, -14.2067, 1.92 ) }
    dend_73 { pt3dadd( -54.2362, 20.1098, -16.4777, 1.44 ) }
    dend_73 { pt3dadd( -55.7661, 20.0185, -18.0773, 1.44 ) }
    dend_73 { pt3dadd( -56.5424, 19.9399, -18.8387, 1.44 ) }
    dend_73 { pt3dadd( -58.5419, 19.6275, -20.7121, 1.44 ) }
    dend_73 { pt3dadd( -59.8597, 19.3462, -21.9101, 1.8 ) }
    dend_73 { pt3dadd( -60.8903, 19.0567, -22.8376, 1.8 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 55/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -3.03075, 12.2639, 1.77275, 1.32 ) }
    dend_69 { pt3dadd( -2.86496, 14.2164, 0.987644, 1.32 ) }
    dend_69 { pt3dadd( -2.7061, 16.2811, 0.256224, 1.32 ) }
    dend_69 { pt3dadd( -2.62508, 17.4025, -0.0992362, 1.32 ) }
    dend_69 { pt3dadd( -2.54259, 18.6111, -0.434838, 1.32 ) }
    dend_69 { pt3dadd( -2.49343, 19.3652, -0.615994, 1.32 ) }
    dend_69 { pt3dadd( -2.42367, 20.2277, -0.792806, 1.32 ) }
    dend_69 { pt3dadd( -2.33034, 21.2819, -0.902218, 1.32 ) }
    dend_69 { pt3dadd( -2.26406, 21.9426, -0.875987, 1.32 ) }
    dend_69 { pt3dadd( -2.12949, 23.1728, -0.775476, 1.08 ) }
    dend_69 { pt3dadd( -1.97033, 24.4861, -0.637992, 1.56 ) }
    dend_69 { pt3dadd( -1.80009, 25.8806, -0.457006, 1.56 ) }
    dend_69 { pt3dadd( -1.64476, 27.0961, -0.268274, 1.56 ) }
    dend_69 { pt3dadd( -1.21718, 29.8818, 0.247986, 1.56 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 69/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -5.85074, 9.81289, 11.3727, 1.8 ) }
    dend_64 { pt3dadd( -6.48784, 10.7704, 11.7436, 1.8 ) }
    dend_64 { pt3dadd( -7.18681, 11.7866, 12.1643, 1.8 ) }
    dend_64 { pt3dadd( -8.55431, 13.6244, 13.0764, 1.56 ) }
    dend_64 { pt3dadd( -8.94679, 14.1519, 13.3382, 1.56 ) }
    dend_64 { pt3dadd( -9.84341, 15.3568, 13.9362, 1.44 ) }
    dend_64 { pt3dadd( -10.7782, 16.6132, 14.5598, 0.96 ) }
    dend_64 { pt3dadd( -11.1753, 17.1438, 14.8505, 0.96 ) }
    dend_64 { pt3dadd( -12.8182, 19.2142, 16.0908, 1.92 ) }
    dend_64 { pt3dadd( -17.4139, 25.4527, 19.3464, 1.92 ) }
    dend_64 { pt3dadd( -23.4117, 30.2115, 23.0583, 1.92 ) }
    dend_64 { pt3dadd( -30.3861, 34.5335, 25.4046, 1.92 ) }
    dend_64 { pt3dadd( -36.7321, 39.823, 27.2941, 1.92 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 82/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.42925, -10.8496, 11.5527, 2.64 ) }
    dend_41 { pt3dadd( 1.59375, -12.669, 11.4131, 2.64 ) }
    dend_41 { pt3dadd( 1.78369, -14.7697, 11.2519, 2.64 ) }
    dend_41 { pt3dadd( 1.92377, -16.3191, 11.133, 2.64 ) }
    dend_41 { pt3dadd( 2.0544, -17.7638, 11.0221, 2.64 ) }
    dend_41 { pt3dadd( 2.32018, -20.7034, 10.7965, 2.4 ) }
    dend_41 { pt3dadd( 2.58796, -23.6651, 10.5691, 3.37 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.77925, -11.6001, 13.0827, 2.16 ) }
    dend_18 { pt3dadd( 4.99036, -12.1981, 12.8712, 2.16 ) }
    dend_18 { pt3dadd( 5.54948, -14.0994, 12.3328, 2.16 ) }
    dend_18 { pt3dadd( 5.97557, -15.4599, 12.0188, 2.16 ) }
    dend_18 { pt3dadd( 6.70907, -17.802, 11.4782, 2.16 ) }
    dend_18 { pt3dadd( 7.24838, -19.5239, 11.0807, 2.16 ) }
    dend_18 { pt3dadd( 7.63942, -20.7725, 10.7924, 2.16 ) }
    dend_18 { pt3dadd( 8.67321, -24.0245, 10.0302, 2.52 ) }
    dend_18 { pt3dadd( 9.40379, -26.5508, 9.44061, 3.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.610745, 11.9694, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( -0.030852, 16.0501, 11.8327, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 0.540217, 20.0688, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.05303, 23.6775, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.31232, 25.5022, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.62826, 27.7255, 11.8327, 2.52 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 4/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 1.20882 ) }
    axon_0 { pt3dadd( 6.433, -28.5011, -0.0046052, 1.20882 ) }
    axon_0 { pt3dadd( 9.697, -43.1416, -0.0046052, 1.20882 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 7/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -60.8903, 19.0567, -22.8376, 1.2 ) }
    dend_75 { pt3dadd( -62.1951, 20.9701, -21.8926, 1.2 ) }
    dend_75 { pt3dadd( -63.6167, 22.3669, -21.1043, 1.2 ) }
    dend_75 { pt3dadd( -64.6449, 22.9575, -20.6993, 1.2 ) }
    dend_75 { pt3dadd( -65.3198, 23.2745, -20.4634, 1.56 ) }
    dend_75 { pt3dadd( -65.7431, 23.4276, -20.4012, 1.56 ) }
    dend_75 { pt3dadd( -66.4911, 23.6472, -20.3715, 1.56 ) }
    dend_75 { pt3dadd( -68.5684, 24.0476, -20.4044, 0.96 ) }
    dend_75 { pt3dadd( -71.8054, 24.515, -20.6598, 1.56 ) }
    dend_75 { pt3dadd( -72.1268, 24.5555, -20.6932, 1.56 ) }
    dend_75 { pt3dadd( -76.1654, 24.9957, -21.2402, 1.08 ) }
    dend_75 { pt3dadd( -77.4074, 25.1025, -21.4679, 1.08 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 19/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -60.8903, 19.0567, -22.8376, 1.08 ) }
    dend_74 { pt3dadd( -63.0143, 18.7107, -24.1564, 1.08 ) }
    dend_74 { pt3dadd( -65.2412, 18.0977, -25.6762, 1.56 ) }
    dend_74 { pt3dadd( -69.8033, 16.2282, -29.5432, 0.84 ) }
    dend_74 { pt3dadd( -71.4763, 15.2897, -31.3571, 0.84 ) }
    dend_74 { pt3dadd( -72.0032, 14.9154, -32.0383, 0.84 ) }
    dend_74 { pt3dadd( -73.3118, 13.8237, -33.9625, 0.84 ) }
    dend_74 { pt3dadd( -74.4422, 12.4946, -36.1932, 0.84 ) }
    dend_74 { pt3dadd( -75.6251, 10.5545, -39.2006, 0.84 ) }
    dend_74 { pt3dadd( -76.4723, 8.60262, -41.7945, 0.84 ) }
    dend_74 { pt3dadd( -76.969, 7.34231, -43.346, 0.84 ) }
    dend_74 { pt3dadd( -77.5127, 6.09245, -44.8544, 0.84 ) }
    dend_74 { pt3dadd( -78.0069, 5.13108, -45.9574, 0.84 ) }
    dend_74 { pt3dadd( -78.9681, 3.62571, -47.434, 0.84 ) }
    dend_74 { pt3dadd( -79.9864, 2.34983, -48.337, 0.84 ) }
    dend_74 { pt3dadd( -80.6481, 1.67851, -48.6932, 0.84 ) }
    dend_74 { pt3dadd( -82.1059, 0.444959, -49.2289, 0.84 ) }
    dend_74 { pt3dadd( -83.1725, -0.330255, -49.492, 0.84 ) }
    dend_74 { pt3dadd( -84.8642, -1.41792, -49.7638, 0.84 ) }
    dend_74 { pt3dadd( -86.9568, -2.80843, -50.0, 0.84 ) }
    dend_74 { pt3dadd( -89.2244, -4.49276, -50.1911, 0.84 ) }
    dend_74 { pt3dadd( -90.6542, -5.7764, -50.2652, 0.84 ) }
    dend_74 { pt3dadd( -92.3126, -7.5455, -50.3514, 0.84 ) }
    dend_74 { pt3dadd( -94.9127, -10.8117, -50.6174, 0.84 ) }
    dend_74 { pt3dadd( -96.9512, -13.8683, -50.9197, 1.32 ) }
    dend_74 { pt3dadd( -98.3912, -16.3944, -51.1632, 0.6 ) }
    dend_74 { pt3dadd( -99.8195, -19.3952, -51.4309, 1.2 ) }
    dend_74 { pt3dadd( -100.818, -21.9352, -51.6894, 0.72 ) }
    dend_74 { pt3dadd( -101.557, -24.3712, -51.995, 0.72 ) }
    dend_74 { pt3dadd( -101.893, -25.9702, -52.2661, 0.72 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 49/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -1.21718, 29.8818, 0.247986, 1.32 ) }
    dend_70 { pt3dadd( -0.278173, 31.7261, 1.20274, 1.32 ) }
    dend_70 { pt3dadd( 1.84638, 36.249, 3.2167, 0.96 ) }
    dend_70 { pt3dadd( 2.70246, 38.3537, 4.01887, 0.96 ) }
    dend_70 { pt3dadd( 3.40246, 40.5546, 4.71509, 1.2 ) }
    dend_70 { pt3dadd( 3.69578, 41.8119, 5.03537, 1.2 ) }
    dend_70 { pt3dadd( 3.8915, 42.9214, 5.27877, 1.2 ) }
    dend_70 { pt3dadd( 3.936, 44.1656, 5.43827, 1.44 ) }
    dend_70 { pt3dadd( 3.64572, 45.8733, 5.44073, 1.08 ) }
    dend_70 { pt3dadd( 2.97087, 48.0431, 5.44266, 1.08 ) }
    dend_70 { pt3dadd( 2.03057, 50.4038, 5.44434, 1.56 ) }
    dend_70 { pt3dadd( 1.73237, 51.0474, 5.44458, 1.56 ) }
    dend_70 { pt3dadd( 0.813031, 52.7902, 5.44415, 1.56 ) }
    dend_70 { pt3dadd( -0.528621, 55.0317, 5.44074, 1.56 ) }
    dend_70 { pt3dadd( -0.649041, 55.2047, 5.43996, 1.56 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 64/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -36.7321, 39.823, 27.2941, 1.2 ) }
    dend_66 { pt3dadd( -41.3374, 44.2252, 29.7111, 1.2 ) }
    dend_66 { pt3dadd( -44.841, 48.8152, 33.3217, 1.2 ) }
    dend_66 { pt3dadd( -49.5876, 53.1255, 35.6446, 1.2 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -36.7321, 39.823, 27.2941, 1.44 ) }
    dend_65 { pt3dadd( -43.4301, 46.3881, 30.6657, 1.2 ) }
    dend_65 { pt3dadd( -48.8713, 53.7516, 34.435, 1.2 ) }
    dend_65 { pt3dadd( -55.0123, 60.882, 37.5874, 1.2 ) }
    dend_65 { pt3dadd( -62.0338, 67.4771, 40.1506, 1.2 ) }
    // Section: dend_61, id: dend_61, parent: dend_41 (entry count 73/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 2.58796, -23.6651, 10.5691, 1.2 ) }
    dend_61 { pt3dadd( 2.08018, -25.7657, 10.3083, 1.2 ) }
    dend_61 { pt3dadd( 1.80303, -27.0259, 10.1431, 1.2 ) }
    dend_61 { pt3dadd( 1.52291, -28.4478, 9.95417, 1.2 ) }
    dend_61 { pt3dadd( 1.29565, -29.7061, 9.78884, 1.2 ) }
    dend_61 { pt3dadd( 1.15676, -30.605, 9.67283, 1.2 ) }
    dend_61 { pt3dadd( 1.05782, -31.2784, 9.5844, 1.2 ) }
    dend_61 { pt3dadd( 1.01181, -31.7911, 9.49965, 1.2 ) }
    dend_61 { pt3dadd( 0.97888, -32.4577, 9.38852, 1.2 ) }
    dend_61 { pt3dadd( 0.986646, -32.852, 9.33486, 1.2 ) }
    dend_61 { pt3dadd( 1.03858, -33.6026, 9.24592, 1.2 ) }
    dend_61 { pt3dadd( 1.07211, -34.1512, 9.19168, 1.2 ) }
    dend_61 { pt3dadd( 1.07195, -34.7355, 9.15712, 1.2 ) }
    dend_61 { pt3dadd( 1.02073, -35.1992, 9.15149, 1.2 ) }
    dend_61 { pt3dadd( 0.834952, -36.108, 9.17895, 1.2 ) }
    dend_61 { pt3dadd( 0.73609, -36.4873, 9.20067, 1.2 ) }
    dend_61 { pt3dadd( 0.497978, -37.2939, 9.25754, 1.2 ) }
    dend_61 { pt3dadd( 0.09143, -38.6623, 9.3629, 1.68 ) }
    dend_61 { pt3dadd( -0.416117, -40.326, 9.49384, 1.08 ) }
    dend_61 { pt3dadd( -0.85636, -41.7833, 9.60545, 0.72 ) }
    dend_61 { pt3dadd( -1.06409, -42.5299, 9.65724, 1.92 ) }
    dend_61 { pt3dadd( -1.5421, -44.4867, 9.77551, 0.96 ) }
    dend_61 { pt3dadd( -1.83908, -45.9329, 9.84954, 0.84 ) }
    dend_61 { pt3dadd( -1.96518, -46.7654, 9.88044, 1.44 ) }
    dend_61 { pt3dadd( -2.06807, -47.8685, 9.90603, 1.08 ) }
    dend_61 { pt3dadd( -2.12191, -48.9106, 9.92256, 1.08 ) }
    dend_61 { pt3dadd( -2.16733, -50.5905, 9.94492, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( -2.17933, -51.3085, 9.95701, 1.44 ) }
    dend_61 { pt3dadd( -2.21162, -52.324, 9.97913, 1.44 ) }
    dend_61 { pt3dadd( -2.2814, -53.6855, 10.0168, 0.72 ) }
    dend_61 { pt3dadd( -2.31986, -54.2172, 10.0348, 1.2 ) }
    dend_61 { pt3dadd( -2.40635, -55.1912, 10.0721, 1.2 ) }
    dend_61 { pt3dadd( -2.46825, -55.9461, 10.0996, 1.56 ) }
    dend_61 { pt3dadd( -2.57745, -56.9857, 10.112, 1.32 ) }
    dend_61 { pt3dadd( -2.7329, -58.1564, 10.1082, 0.84 ) }
    dend_61 { pt3dadd( -2.89609, -59.5306, 10.0747, 1.56 ) }
    dend_61 { pt3dadd( -2.98016, -60.3444, 10.0452, 1.56 ) }
    dend_61 { pt3dadd( -3.11645, -61.7972, 9.98163, 0.96 ) }
    dend_61 { pt3dadd( -3.23464, -63.1374, 9.91609, 0.96 ) }
    dend_61 { pt3dadd( -3.33409, -64.1701, 9.86675, 1.32 ) }
    dend_61 { pt3dadd( -3.50017, -65.4318, 9.82425, 1.32 ) }
    dend_61 { pt3dadd( -3.79795, -67.1738, 9.8035, 0.72 ) }
    dend_61 { pt3dadd( -3.92018, -67.7593, 9.80852, 1.56 ) }
    dend_61 { pt3dadd( -4.07101, -68.3384, 9.82172, 1.56 ) }
    dend_61 { pt3dadd( -4.40304, -69.4551, 9.86199, 0.96 ) }
    dend_61 { pt3dadd( -4.76136, -70.4101, 9.89965, 1.68 ) }
    dend_61 { pt3dadd( -5.39818, -71.8987, 9.92129, 1.08 ) }
    dend_61 { pt3dadd( -5.93124, -73.1038, 9.90739, 0.96 ) }
    dend_61 { pt3dadd( -6.57819, -74.6487, 9.85736, 1.44 ) }
    dend_61 { pt3dadd( -6.90911, -75.4866, 9.8171, 1.08 ) }
    dend_61 { pt3dadd( -7.41432, -76.8224, 9.72315, 0.84 ) }
    dend_61 { pt3dadd( -7.84975, -78.0253, 9.60627, 1.44 ) }
    dend_61 { pt3dadd( -8.06053, -78.6219, 9.53959, 1.44 ) }
    dend_61 { pt3dadd( -8.44708, -79.8023, 9.4053, 0.72 ) }
    dend_61 { pt3dadd( -8.70523, -80.6679, 9.29774, 0.72 ) }
    dend_61 { pt3dadd( -9.14976, -82.2299, 9.09165, 1.32 ) }
    dend_61 { pt3dadd( -9.47477, -83.386, 8.92051, 0.96 ) }
    dend_61 { pt3dadd( -9.63761, -83.8789, 8.85397, 0.96 ) }
    dend_61 { pt3dadd( -9.83451, -84.4273, 8.76598, 0.96 ) }
    dend_61 { pt3dadd( -10.1302, -85.1256, 8.63898, 0.96 ) }
    dend_61 { pt3dadd( -10.3158, -85.5308, 8.56912, 0.96 ) }
    dend_61 { pt3dadd( -10.592, -86.0773, 8.46118, 0.96 ) }
    dend_61 { pt3dadd( -10.8926, -86.6494, 8.34342, 0.96 ) }
    dend_61 { pt3dadd( -11.7969, -88.3485, 7.99705, 1.44 ) }
    dend_61 { pt3dadd( -12.8283, -90.3052, 7.62076, 0.48 ) }
    dend_61 { pt3dadd( -13.3059, -91.2549, 7.45509, 1.56 ) }
    dend_61 { pt3dadd( -14.233, -93.2053, 7.14126, 0.84 ) }
    dend_61 { pt3dadd( -14.4706, -93.7379, 7.04917, 0.84 ) }
    dend_61 { pt3dadd( -14.8598, -94.6856, 6.87599, 0.84 ) }
    dend_61 { pt3dadd( -15.1416, -95.4713, 6.74127, 0.84 ) }
    dend_61 { pt3dadd( -15.3769, -96.2484, 6.62717, 0.84 ) }
    dend_61 { pt3dadd( -15.5929, -96.9972, 6.53775, 0.84 ) }
    dend_61 { pt3dadd( -16.1385, -99.0295, 6.34782, 0.6 ) }
    dend_61 { pt3dadd( -16.4527, -100.152, 6.23444, 1.08 ) }
    dend_61 { pt3dadd( -16.9098, -101.708, 6.06452, 0.72 ) }
    dend_61 { pt3dadd( -17.3601, -103.154, 5.90594, 0.6 ) }
    dend_61 { pt3dadd( -17.5919, -103.841, 5.83983, 1.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 50/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 2.58796, -23.6651, 10.5691, 1.92 ) }
    dend_42 { pt3dadd( 2.29391, -26.4172, 10.4821, 1.92 ) }
    dend_42 { pt3dadd( 1.97198, -29.4301, 10.3867, 1.92 ) }
    dend_42 { pt3dadd( 1.60893, -32.8279, 10.2792, 2.28 ) }
    dend_42 { pt3dadd( 1.41617, -34.6319, 10.2221, 2.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_18 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 9.40379, -26.5508, 9.44061, 1.32 ) }
    dend_40 { pt3dadd( 11.443, -27.6406, 9.60405, 1.32 ) }
    dend_40 { pt3dadd( 12.8372, -28.2341, 9.74506, 1.32 ) }
    dend_40 { pt3dadd( 13.9816, -28.6521, 9.87673, 1.32 ) }
    dend_40 { pt3dadd( 15.2189, -29.0678, 10.0318, 1.32 ) }
    dend_40 { pt3dadd( 16.8774, -29.5741, 10.2639, 1.32 ) }
    dend_40 { pt3dadd( 17.7529, -29.8411, 10.3995, 1.32 ) }
    dend_40 { pt3dadd( 20.0466, -30.5079, 10.8474, 1.08 ) }
    dend_40 { pt3dadd( 20.7769, -30.7115, 11.0071, 1.08 ) }
    dend_40 { pt3dadd( 21.0794, -30.7982, 11.0789, 1.08 ) }
    dend_40 { pt3dadd( 22.6979, -31.2996, 11.4962, 1.44 ) }
    dend_40 { pt3dadd( 23.9326, -31.7758, 11.8145, 1.08 ) }
    dend_40 { pt3dadd( 24.5499, -32.0763, 11.9749, 1.08 ) }
    dend_40 { pt3dadd( 26.0109, -32.8863, 12.321, 1.08 ) }
    dend_40 { pt3dadd( 26.9562, -33.4133, 12.5146, 0.84 ) }
    dend_40 { pt3dadd( 27.8993, -33.9446, 12.678, 0.84 ) }
    dend_40 { pt3dadd( 29.0329, -34.5296, 12.8323, 0.84 ) }
    dend_40 { pt3dadd( 29.9533, -34.985, 12.9472, 0.84 ) }
    dend_40 { pt3dadd( 32.1884, -36.0744, 13.1215, 1.2 ) }
    dend_40 { pt3dadd( 33.4523, -36.6777, 13.1456, 0.84 ) }
    dend_40 { pt3dadd( 34.5349, -37.1398, 13.0993, 0.84 ) }
    dend_40 { pt3dadd( 36.6529, -37.9387, 12.9158, 0.96 ) }
    dend_40 { pt3dadd( 38.7378, -38.702, 12.7068, 0.72 ) }
    dend_40 { pt3dadd( 41.06, -39.5439, 12.4226, 1.2 ) }
    dend_40 { pt3dadd( 42.3393, -40.0162, 12.2132, 1.2 ) }
    dend_40 { pt3dadd( 43.6853, -40.4724, 11.9253, 0.6 ) }
    dend_40 { pt3dadd( 44.3094, -40.6644, 11.7571, 0.6 ) }
    dend_40 { pt3dadd( 51.7681, -42.66, 11.1353, 0.6 ) }
    dend_40 { pt3dadd( 58.6928, -45.8707, 10.0905, 0.6 ) }
    dend_40 { pt3dadd( 66.2399, -47.529, 9.4433, 0.6 ) }
    dend_40 { pt3dadd( 73.9624, -48.0771, 8.79102, 0.6 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 86/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.40379, -26.5508, 9.44061, 1.8 ) }
    dend_19 { pt3dadd( 9.60018, -28.8337, 9.40308, 1.8 ) }
    dend_19 { pt3dadd( 9.88245, -31.1602, 9.36787, 1.8 ) }
    dend_19 { pt3dadd( 10.1009, -32.5171, 9.34997, 1.8 ) }
    dend_19 { pt3dadd( 10.2242, -33.1824, 9.32631, 1.8 ) }
    dend_19 { pt3dadd( 10.4147, -34.1431, 9.27778, 1.8 ) }
    dend_19 { pt3dadd( 10.5995, -35.027, 9.25998, 1.8 ) }
    dend_19 { pt3dadd( 10.7918, -35.7483, 9.26935, 1.8 ) }
    dend_19 { pt3dadd( 11.0612, -36.9184, 9.31842, 1.8 ) }
    dend_19 { pt3dadd( 11.1808, -37.6959, 9.35523, 1.8 ) }
    dend_19 { pt3dadd( 11.3049, -38.7927, 9.41228, 1.8 ) }
    dend_19 { pt3dadd( 11.4642, -40.8214, 9.42759, 1.8 ) }
    dend_19 { pt3dadd( 11.5263, -41.8602, 9.4067, 1.8 ) }
    dend_19 { pt3dadd( 11.6343, -43.9467, 9.32342, 2.16 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 11.7477, -45.5514, 9.21591, 1.92 ) }
    dend_19 { pt3dadd( 11.8186, -46.2165, 9.15442, 1.92 ) }
    dend_19 { pt3dadd( 12.253, -50.0006, 8.69446, 2.16 ) }
    dend_19 { pt3dadd( 12.4456, -51.4973, 8.44306, 2.16 ) }
    dend_19 { pt3dadd( 12.6076, -52.5082, 8.25215, 2.16 ) }
    dend_19 { pt3dadd( 13.0196, -54.4631, 7.85019, 1.92 ) }
    dend_19 { pt3dadd( 13.3432, -55.6924, 7.58448, 2.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.62826, 27.7255, 11.8327, 1.8 ) }
    dend_1 { pt3dadd( 3.41801, 31.0306, 13.208, 1.8 ) }
    dend_1 { pt3dadd( 5.04707, 34.039, 14.4598, 1.8 ) }
    dend_1 { pt3dadd( 6.75186, 37.1873, 15.7698, 1.8 ) }
    dend_1 { pt3dadd( 8.75685, 40.8899, 17.3105, 1.8 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 12/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.697, -43.1416, -0.0046052, 0.762712 ) }
    axon_1 { pt3dadd( 12.961, -57.7822, -0.0046052, 0.762712 ) }
    axon_1 { pt3dadd( 16.225, -72.4228, -0.0046052, 0.762712 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 15/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -77.4074, 25.1025, -21.4679, 1.68 ) }
    dend_77 { pt3dadd( -77.6465, 25.1025, -21.4791, 1.68 ) }
    dend_77 { pt3dadd( -80.4538, 25.2474, -21.6078, 1.2 ) }
    dend_77 { pt3dadd( -82.6582, 25.4948, -21.7196, 1.68 ) }
    dend_77 { pt3dadd( -83.6305, 25.6502, -21.7816, 1.68 ) }
    dend_77 { pt3dadd( -85.0478, 25.9577, -21.9121, 1.2 ) }
    dend_77 { pt3dadd( -87.5302, 26.58, -22.2119, 1.2 ) }
    dend_77 { pt3dadd( -88.9439, 26.9927, -22.5025, 0.84 ) }
    dend_77 { pt3dadd( -90.3466, 27.506, -22.9914, 1.32 ) }
    dend_77 { pt3dadd( -91.1661, 27.8267, -23.4045, 1.32 ) }
    dend_77 { pt3dadd( -92.5071, 28.3414, -24.2314, 0.84 ) }
    dend_77 { pt3dadd( -93.0879, 28.5536, -24.6552, 0.84 ) }
    dend_77 { pt3dadd( -95.1486, 29.2824, -26.3535, 0.84 ) }
    dend_77 { pt3dadd( -96.7168, 29.8077, -27.692, 0.84 ) }
    dend_77 { pt3dadd( -97.7588, 30.1681, -28.5889, 0.84 ) }
    dend_77 { pt3dadd( -98.5581, 30.4629, -29.2297, 0.84 ) }
    dend_77 { pt3dadd( -99.6196, 30.8735, -29.9796, 0.84 ) }
    dend_77 { pt3dadd( -100.67, 31.336, -30.6174, 0.84 ) }
    dend_77 { pt3dadd( -102.149, 32.127, -31.3869, 0.84 ) }
    dend_77 { pt3dadd( -103.161, 32.7267, -31.8587, 0.84 ) }
    dend_77 { pt3dadd( -104.55, 33.6025, -32.476, 0.84 ) }
    dend_77 { pt3dadd( -106.278, 34.7598, -33.2757, 0.84 ) }
    dend_77 { pt3dadd( -107.182, 35.4083, -33.7012, 0.84 ) }
    dend_77 { pt3dadd( -109.019, 36.7526, -34.6068, 1.32 ) }
    dend_77 { pt3dadd( -110.313, 37.6995, -35.2687, 1.32 ) }
    dend_77 { pt3dadd( -112.044, 39.0492, -36.2011, 0.96 ) }
    dend_77 { pt3dadd( -113.33, 40.1166, -36.9653, 0.96 ) }
    dend_77 { pt3dadd( -114.06, 40.7104, -37.3935, 0.96 ) }
    dend_77 { pt3dadd( -115.067, 41.4531, -37.9752, 0.96 ) }
    dend_77 { pt3dadd( -115.965, 42.0146, -38.4418, 0.96 ) }
    dend_77 { pt3dadd( -118.425, 43.3912, -39.584, 0.72 ) }
    dend_77 { pt3dadd( -119.326, 43.8272, -39.947, 0.72 ) }
    dend_77 { pt3dadd( -122.861, 45.3039, -41.1367, 1.08 ) }
    dend_77 { pt3dadd( -123.879, 45.6853, -41.4376, 1.08 ) }
    dend_77 { pt3dadd( -127.127, 46.9604, -42.256, 1.08 ) }
    dend_77 { pt3dadd( -128.807, 47.6292, -42.6784, 1.08 ) }
    dend_77 { pt3dadd( -130.668, 48.459, -43.1651, 1.08 ) }
    dend_77 { pt3dadd( -132.291, 49.288, -43.6326, 1.08 ) }
    dend_77 { pt3dadd( -132.865, 49.6181, -43.8375, 1.08 ) }
    dend_77 { pt3dadd( -135.329, 51.1592, -44.847, 1.08 ) }
    dend_77 { pt3dadd( -137.198, 52.4004, -45.743, 1.08 ) }
    dend_77 { pt3dadd( -140.736, 54.7217, -47.5429, 1.44 ) }
    dend_77 { pt3dadd( -141.68, 55.3139, -48.0331, 1.44 ) }
    dend_77 { pt3dadd( -143.988, 56.5711, -49.1479, 1.2 ) }
    dend_77 { pt3dadd( -144.922, 57.0011, -49.493, 1.2 ) }
    dend_77 { pt3dadd( -146.224, 57.4913, -49.8279, 1.2 ) }
    dend_77 { pt3dadd( -149.929, 58.7349, -50.4321, 1.08 ) }
    dend_77 { pt3dadd( -152.236, 59.4166, -50.741, 1.08 ) }
    dend_77 { pt3dadd( -155.084, 60.2749, -51.0717, 1.08 ) }
    dend_77 { pt3dadd( -159.144, 61.4829, -51.4884, 0.72 ) }
    dend_77 { pt3dadd( -161.793, 62.2517, -51.7593, 0.72 ) }
    dend_77 { pt3dadd( -163.911, 62.855, -51.9691, 1.08 ) }
    dend_77 { pt3dadd( -166.507, 63.5275, -52.1951, 0.84 ) }
    dend_77 { pt3dadd( -168.008, 63.8057, -52.3153, 0.84 ) }
    dend_77 { pt3dadd( -169.072, 63.9237, -52.4144, 0.84 ) }
    dend_77 { pt3dadd( -170.35, 63.9985, -52.5691, 0.84 ) }
    dend_77 { pt3dadd( -172.555, 64.0263, -52.756, 0.84 ) }
    dend_77 { pt3dadd( -175.702, 63.9321, -52.8134, 0.84 ) }
    dend_77 { pt3dadd( -180.483, 63.5739, -52.5817, 0.6 ) }
    dend_77 { pt3dadd( -181.171, 63.495, -52.5402, 0.6 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 75/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -77.4074, 25.1025, -21.4679, 1.32 ) }
    dend_76 { pt3dadd( -77.7525, 26.0702, -21.8997, 1.32 ) }
    dend_76 { pt3dadd( -78.2383, 27.4057, -22.5591, 0.84 ) }
    dend_76 { pt3dadd( -78.7835, 29.0601, -23.4536, 1.44 ) }
    dend_76 { pt3dadd( -79.6032, 31.4237, -24.9087, 1.08 ) }
    dend_76 { pt3dadd( -80.1582, 32.7837, -25.8091, 1.08 ) }
    dend_76 { pt3dadd( -80.3754, 33.242, -26.1336, 1.08 ) }
    dend_76 { pt3dadd( -81.2259, 34.7655, -27.3733, 1.56 ) }
    dend_76 { pt3dadd( -82.2087, 36.1331, -28.6548, 0.96 ) }
    dend_76 { pt3dadd( -83.0158, 36.9843, -29.5519, 0.96 ) }
    dend_76 { pt3dadd( -84.0151, 37.6682, -30.3022, 0.96 ) }
    dend_76 { pt3dadd( -84.8164, 38.0238, -30.7265, 0.96 ) }
    dend_76 { pt3dadd( -85.5809, 38.2577, -31.0454, 0.96 ) }
    dend_76 { pt3dadd( -86.3355, 38.3917, -31.2804, 0.96 ) }
    dend_76 { pt3dadd( -87.4126, 38.5561, -31.5404, 0.96 ) }
    dend_76 { pt3dadd( -89.7001, 38.941, -32.0623, 0.72 ) }
    dend_76 { pt3dadd( -91.7026, 39.2375, -32.5472, 0.72 ) }
    dend_76 { pt3dadd( -93.1927, 39.4428, -32.9041, 0.72 ) }
    dend_76 { pt3dadd( -94.3124, 39.5788, -33.1817, 0.72 ) }
    dend_76 { pt3dadd( -95.7, 39.74, -33.5414, 0.72 ) }
    dend_76 { pt3dadd( -97.8291, 40.0226, -34.1185, 0.72 ) }
    dend_76 { pt3dadd( -100.119, 40.3831, -34.7336, 1.2 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 97/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -0.649041, 55.2047, 5.43996, 1.32 ) }
    dend_72 { pt3dadd( -1.21584, 56.2303, 5.84009, 1.32 ) }
    dend_72 { pt3dadd( -2.01484, 57.5493, 6.2929, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_72 { pt3dadd( -3.10266, 59.3509, 6.87844, 1.08 ) }
    dend_72 { pt3dadd( -3.77459, 60.512, 7.23225, 1.08 ) }
    dend_72 { pt3dadd( -4.15641, 61.223, 7.43024, 1.08 ) }
    dend_72 { pt3dadd( -4.70816, 62.3225, 7.71061, 1.08 ) }
    dend_72 { pt3dadd( -5.32795, 63.5408, 7.93361, 1.08 ) }
    dend_72 { pt3dadd( -5.61951, 64.1068, 8.02053, 1.08 ) }
    dend_72 { pt3dadd( -5.96603, 64.8174, 8.09125, 1.08 ) }
    dend_72 { pt3dadd( -6.43077, 65.7231, 8.17449, 1.08 ) }
    dend_72 { pt3dadd( -6.78984, 66.3194, 8.23589, 1.08 ) }
    dend_72 { pt3dadd( -7.20108, 66.8162, 8.29591, 1.08 ) }
    dend_72 { pt3dadd( -7.71616, 67.2269, 8.35343, 1.08 ) }
    dend_72 { pt3dadd( -8.50512, 67.7529, 8.42442, 1.08 ) }
    dend_72 { pt3dadd( -9.49873, 68.3855, 8.52779, 1.08 ) }
    dend_72 { pt3dadd( -10.3756, 68.9658, 8.63242, 1.08 ) }
    dend_72 { pt3dadd( -11.3136, 69.687, 8.7639, 1.08 ) }
    dend_72 { pt3dadd( -12.1547, 70.6083, 8.77281, 0.96 ) }
    dend_72 { pt3dadd( -12.4038, 71.274, 8.64509, 0.96 ) }
    dend_72 { pt3dadd( -12.4792, 72.2941, 8.32641, 0.96 ) }
    dend_72 { pt3dadd( -12.4457, 73.1283, 8.04021, 0.96 ) }
    dend_72 { pt3dadd( -12.378, 73.8488, 7.78658, 0.96 ) }
    dend_72 { pt3dadd( -12.0448, 76.5987, 6.79895, 0.72 ) }
    dend_72 { pt3dadd( -11.9224, 77.7364, 6.3653, 0.72 ) }
    dend_72 { pt3dadd( -11.8723, 78.7153, 5.98658, 0.72 ) }
    dend_72 { pt3dadd( -11.8641, 79.7641, 5.61145, 0.72 ) }
    dend_72 { pt3dadd( -11.9147, 81.5392, 5.09134, 0.72 ) }
    dend_72 { pt3dadd( -11.9641, 82.4228, 4.89998, 0.72 ) }
    dend_72 { pt3dadd( -12.0499, 83.2531, 4.81474, 0.72 ) }
    dend_72 { pt3dadd( -12.22, 84.4496, 4.64949, 0.72 ) }
    dend_72 { pt3dadd( -12.4941, 86.2946, 4.36497, 0.72 ) }
    dend_72 { pt3dadd( -12.7462, 87.6145, 4.15443, 0.72 ) }
    dend_72 { pt3dadd( -13.0307, 88.7167, 3.98156, 0.72 ) }
    dend_72 { pt3dadd( -13.5864, 90.4097, 3.72002, 1.2 ) }
    dend_72 { pt3dadd( -14.7653, 92.9942, 3.34446, 1.08 ) }
    dend_72 { pt3dadd( -15.5279, 94.1324, 3.20782, 1.08 ) }
    dend_72 { pt3dadd( -16.3793, 95.1151, 3.11682, 1.08 ) }
    dend_72 { pt3dadd( -17.0259, 95.7912, 3.08785, 1.08 ) }
    dend_72 { pt3dadd( -17.6283, 96.3878, 3.06332, 0.72 ) }
    dend_72 { pt3dadd( -19.3509, 98.0613, 2.97231, 1.2 ) }
    dend_72 { pt3dadd( -21.1991, 99.8422, 2.91802, 1.08 ) }
    dend_72 { pt3dadd( -22.7551, 101.378, 2.87843, 1.44 ) }
    dend_72 { pt3dadd( -23.5191, 102.249, 2.85996, 1.44 ) }
    dend_72 { pt3dadd( -24.6695, 103.889, 2.82908, 1.2 ) }
    dend_72 { pt3dadd( -25.2997, 105.054, 2.81393, 1.2 ) }
    dend_72 { pt3dadd( -25.9611, 106.788, 2.82513, 1.08 ) }
    dend_72 { pt3dadd( -26.4541, 108.794, 2.89213, 1.08 ) }
    dend_72 { pt3dadd( -26.8248, 110.783, 3.03676, 0.96 ) }
    dend_72 { pt3dadd( -27.1288, 112.778, 3.24609, 0.96 ) }
    dend_72 { pt3dadd( -27.2519, 113.819, 3.4036, 1.2 ) }
    dend_72 { pt3dadd( -27.3588, 115.07, 3.52713, 0.72 ) }
    dend_72 { pt3dadd( -27.4217, 117.558, 3.58427, 1.2 ) }
    dend_72 { pt3dadd( -27.4197, 118.218, 3.54076, 1.2 ) }
    dend_72 { pt3dadd( -27.4805, 119.521, 3.37537, 1.2 ) }
    dend_72 { pt3dadd( -27.6515, 120.804, 3.13523, 1.2 ) }
    dend_72 { pt3dadd( -28.1726, 123.264, 2.52201, 1.2 ) }
    dend_72 { pt3dadd( -28.5347, 124.362, 2.16739, 1.2 ) }
    dend_72 { pt3dadd( -28.8786, 125.041, 1.9074, 1.2 ) }
    dend_72 { pt3dadd( -29.8894, 126.397, 1.42928, 0.96 ) }
    dend_72 { pt3dadd( -30.7327, 127.178, 1.23777, 1.2 ) }
    dend_72 { pt3dadd( -31.2905, 127.616, 1.1893, 1.2 ) }
    dend_72 { pt3dadd( -32.2392, 128.313, 1.19342, 1.2 ) }
    dend_72 { pt3dadd( -32.8332, 128.76, 1.19656, 1.2 ) }
    dend_72 { pt3dadd( -34.2921, 129.964, 1.2057, 1.2 ) }
    dend_72 { pt3dadd( -35.9356, 131.587, 1.21761, 1.2 ) }
    dend_72 { pt3dadd( -36.8083, 132.612, 1.22418, 1.2 ) }
    dend_72 { pt3dadd( -37.3679, 133.345, 1.22803, 1.2 ) }
    dend_72 { pt3dadd( -37.9702, 134.256, 1.23197, 1.2 ) }
    dend_72 { pt3dadd( -38.48, 135.136, 1.23507, 1.2 ) }
    dend_72 { pt3dadd( -39.2732, 136.836, 1.23943, 0.84 ) }
    dend_72 { pt3dadd( -39.9699, 138.558, 1.26393, 1.32 ) }
    dend_72 { pt3dadd( -40.9508, 141.13, 1.32625, 0.84 ) }
    dend_72 { pt3dadd( -41.4347, 142.421, 1.3693, 0.84 ) }
    dend_72 { pt3dadd( -41.8145, 143.433, 1.41139, 0.84 ) }
    dend_72 { pt3dadd( -42.3242, 144.811, 1.47879, 0.84 ) }
    dend_72 { pt3dadd( -42.9439, 146.384, 1.60306, 0.84 ) }
    dend_72 { pt3dadd( -43.3443, 147.264, 1.69616, 0.84 ) }
    dend_72 { pt3dadd( -43.9616, 148.308, 1.76456, 0.84 ) }
    dend_72 { pt3dadd( -44.4167, 148.891, 1.77303, 0.84 ) }
    dend_72 { pt3dadd( -45.2897, 149.774, 1.74116, 1.2 ) }
    dend_72 { pt3dadd( -46.7128, 150.966, 1.60003, 0.84 ) }
    dend_72 { pt3dadd( -48.0415, 151.931, 1.44147, 0.84 ) }
    dend_72 { pt3dadd( -49.6021, 152.916, 1.26993, 1.2 ) }
    dend_72 { pt3dadd( -50.8874, 153.501, 1.15196, 0.6 ) }
    dend_72 { pt3dadd( -52.4548, 154.13, 1.00236, 0.6 ) }
    dend_72 { pt3dadd( -54.1237, 154.683, 0.836867, 1.08 ) }
    dend_72 { pt3dadd( -56.0432, 155.187, 0.639022, 0.48 ) }
    dend_72 { pt3dadd( -57.1406, 155.398, 0.57818, 0.48 ) }
    dend_72 { pt3dadd( -60.3564, 155.846, 0.684657, 0.84 ) }
    dend_72 { pt3dadd( -65.4142, 163.9, 1.86587, 0.84 ) }
    dend_72 { pt3dadd( -70.3812, 172.08, 1.67412, 0.84 ) }
    dend_72 { pt3dadd( -74.149, 180.815, 1.32425, 0.84 ) }
    dend_72 { pt3dadd( -78.1921, 189.304, -0.304332, 0.84 ) }
    dend_72 { pt3dadd( -81.9626, 197.92, -1.84796, 0.84 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -0.649041, 55.2047, 5.43996, 1.32 ) }
    dend_71 { pt3dadd( -4.34922, 58.7529, 4.51358, 1.32 ) }
    dend_71 { pt3dadd( -5.60768, 60.0355, 4.08922, 1.32 ) }
    dend_71 { pt3dadd( -7.09666, 61.736, 3.45593, 1.32 ) }
    dend_71 { pt3dadd( -8.52754, 63.6697, 2.66745, 1.32 ) }
    dend_71 { pt3dadd( -9.32066, 64.8493, 2.17486, 1.32 ) }
    dend_71 { pt3dadd( -10.4338, 66.9104, 1.35172, 1.32 ) }
    dend_71 { pt3dadd( -11.1254, 69.0515, 0.445247, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_71 { pt3dadd( -11.5159, 71.5915, -0.586621, 1.56 ) }
    dend_71 { pt3dadd( -11.4104, 74.1173, -1.5682, 1.56 ) }
    dend_71 { pt3dadd( -11.1892, 75.0164, -1.86213, 1.56 ) }
    dend_71 { pt3dadd( -9.66662, 78.5701, -2.91572, 1.2 ) }
    dend_71 { pt3dadd( -8.92177, 79.7637, -3.23253, 1.2 ) }
    dend_71 { pt3dadd( -7.56034, 81.4013, -3.6786, 1.2 ) }
    dend_71 { pt3dadd( -5.26542, 83.5939, -4.36875, 1.08 ) }
    dend_71 { pt3dadd( -3.50876, 85.0149, -4.89113, 1.08 ) }
    dend_71 { pt3dadd( -2.39025, 85.8219, -5.29264, 1.08 ) }
    dend_71 { pt3dadd( -1.3194, 86.5554, -5.78891, 1.08 ) }
    dend_71 { pt3dadd( -0.241483, 87.4021, -6.44279, 1.08 ) }
    dend_71 { pt3dadd( 1.70706, 89.2439, -7.99024, 1.8 ) }
    dend_71 { pt3dadd( 2.06213, 89.705, -8.39507, 1.8 ) }
    dend_71 { pt3dadd( 3.32249, 92.2134, -10.5423, 1.32 ) }
    dend_71 { pt3dadd( 3.74319, 93.6785, -11.7606, 1.32 ) }
    dend_71 { pt3dadd( 3.81563, 95.557, -13.2643, 1.08 ) }
    dend_71 { pt3dadd( 3.66505, 96.0977, -13.6624, 1.08 ) }
    dend_71 { pt3dadd( 2.89513, 97.4462, -14.4995, 1.08 ) }
    dend_71 { pt3dadd( 1.90368, 98.8666, -15.2873, 1.44 ) }
    dend_71 { pt3dadd( 1.07025, 99.9022, -15.8156, 1.44 ) }
    dend_71 { pt3dadd( 0.0446, 101.154, -16.4689, 1.44 ) }
    dend_71 { pt3dadd( -0.82549, 102.254, -17.1098, 1.44 ) }
    dend_71 { pt3dadd( -2.49929, 104.694, -18.6604, 0.84 ) }
    dend_71 { pt3dadd( -3.32441, 106.157, -19.6105, 0.84 ) }
    dend_71 { pt3dadd( -4.58104, 109.19, -21.6572, 1.44 ) }
    dend_71 { pt3dadd( -5.09408, 110.927, -22.6219, 1.44 ) }
    dend_71 { pt3dadd( -5.61368, 113.542, -23.8111, 0.96 ) }
    dend_71 { pt3dadd( -6.05842, 116.231, -25.0006, 0.96 ) }
    dend_71 { pt3dadd( -6.27967, 117.601, -25.5758, 0.96 ) }
    dend_71 { pt3dadd( -6.46717, 119.638, -26.2595, 0.72 ) }
    dend_71 { pt3dadd( -6.27112, 125.004, -27.3441, 1.2 ) }
    dend_71 { pt3dadd( -5.99137, 127.323, -27.5304, 1.2 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -49.5876, 53.1255, 35.6446, 0.6 ) }
    dend_68 { pt3dadd( -57.9995, 63.5417, 40.7892, 0.6 ) }
    dend_68 { pt3dadd( -64.6303, 75.7364, 43.8063, 0.6 ) }
    dend_68 { pt3dadd( -69.7086, 87.9434, 48.9072, 0.6 ) }
    dend_68 { pt3dadd( -76.9296, 98.944, 54.4682, 0.6 ) }
    dend_68 { pt3dadd( -82.6658, 110.189, 61.0696, 0.6 ) }
    dend_68 { pt3dadd( -89.3663, 121.068, 67.4566, 0.6 ) }
    dend_68 { pt3dadd( -96.5657, 132.587, 71.7787, 0.6 ) }
    dend_68 { pt3dadd( -105.968, 143.031, 74.7606, 0.6 ) }
    dend_68 { pt3dadd( -115.223, 153.183, 78.9976, 0.6 ) }
    dend_68 { pt3dadd( -122.206, 163.909, 85.373, 0.6 ) }
    dend_68 { pt3dadd( -129.661, 175.635, 88.5313, 0.6 ) }
    dend_68 { pt3dadd( -135.258, 187.915, 92.8723, 0.6 ) }
    dend_68 { pt3dadd( -141.682, 199.399, 98.3192, 0.6 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 46/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -49.5876, 53.1255, 35.6446, 0.84 ) }
    dend_67 { pt3dadd( -57.7161, 58.393, 42.0168, 0.6 ) }
    dend_67 { pt3dadd( -65.0344, 65.57, 47.1951, 0.6 ) }
    dend_67 { pt3dadd( -70.5463, 74.4385, 51.6545, 0.6 ) }
    dend_67 { pt3dadd( -75.4986, 83.8489, 55.4996, 0.6 ) }
    dend_67 { pt3dadd( -80.7137, 92.7347, 60.2634, 0.6 ) }
    dend_67 { pt3dadd( -88.45, 99.8562, 64.8943, 0.6 ) }
    dend_67 { pt3dadd( -96.1014, 107.67, 68.2676, 0.6 ) }
    dend_67 { pt3dadd( -103.403, 115.592, 72.1018, 0.6 ) }
    dend_67 { pt3dadd( -110.419, 123.983, 75.315, 0.6 ) }
    dend_67 { pt3dadd( -116.969, 132.488, 79.116, 0.6 ) }
    dend_67 { pt3dadd( -123.751, 141.503, 80.408, 0.6 ) }
    dend_67 { pt3dadd( -129.743, 150.973, 81.9596, 0.6 ) }
    dend_67 { pt3dadd( -134.911, 160.919, 83.1165, 0.6 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 60/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -17.5919, -103.841, 5.83983, 0.96 ) }
    dend_63 { pt3dadd( -19.167, -103.24, 7.4653, 0.96 ) }
    dend_63 { pt3dadd( -20.3656, -102.782, 8.70232, 0.96 ) }
    dend_63 { pt3dadd( -21.2175, -102.457, 9.58143, 0.72 ) }
    dend_63 { pt3dadd( -21.8445, -102.218, 10.2285, 0.72 ) }
    dend_63 { pt3dadd( -22.3769, -102.015, 10.778, 0.72 ) }
    dend_63 { pt3dadd( -23.2833, -101.669, 11.7134, 1.08 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 67/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -17.5919, -103.841, 5.83983, 0.96 ) }
    dend_62 { pt3dadd( -19.306, -106.913, 5.71982, 0.96 ) }
    dend_62 { pt3dadd( -20.1542, -107.983, 5.4553, 0.96 ) }
    dend_62 { pt3dadd( -21.1282, -109.212, 5.03017, 1.32 ) }
    dend_62 { pt3dadd( -22.2763, -110.827, 4.45369, 0.6 ) }
    dend_62 { pt3dadd( -22.9507, -111.784, 3.99698, 0.6 ) }
    dend_62 { pt3dadd( -23.701, -112.925, 3.41215, 1.2 ) }
    dend_62 { pt3dadd( -25.9045, -116.571, 1.51138, 1.2 ) }
    dend_62 { pt3dadd( -26.6576, -117.797, 0.839226, 1.56 ) }
    dend_62 { pt3dadd( -27.6912, -119.553, -0.146806, 0.96 ) }
    dend_62 { pt3dadd( -29.3646, -122.749, -1.91798, 0.6 ) }
    dend_62 { pt3dadd( -30.0125, -124.216, -2.64513, 1.08 ) }
    dend_62 { pt3dadd( -30.5837, -125.571, -3.26662, 0.72 ) }
    dend_62 { pt3dadd( -30.8803, -126.277, -3.50597, 0.72 ) }
    dend_62 { pt3dadd( -31.366, -127.245, -3.78653, 1.08 ) }
    dend_62 { pt3dadd( -31.9332, -128.299, -4.03013, 0.72 ) }
    dend_62 { pt3dadd( -32.5732, -129.512, -4.18172, 0.72 ) }
    dend_62 { pt3dadd( -34.3481, -132.686, -4.51619, 0.48 ) }
    dend_62 { pt3dadd( -35.003, -133.832, -4.61254, 1.56 ) }
    dend_62 { pt3dadd( -36.1556, -135.834, -4.68484, 1.08 ) }
    dend_62 { pt3dadd( -36.6202, -136.628, -4.66306, 0.72 ) }
    dend_62 { pt3dadd( -37.4995, -138.166, -4.52881, 1.08 ) }
    dend_62 { pt3dadd( -38.3169, -139.603, -4.36675, 0.72 ) }
    dend_62 { pt3dadd( -38.703, -140.357, -4.25524, 0.72 ) }
    dend_62 { pt3dadd( -39.6592, -142.188, -4.06866, 1.2 ) }
    dend_62 { pt3dadd( -40.4151, -143.639, -3.99278, 0.72 ) }
    dend_62 { pt3dadd( -40.7565, -144.296, -3.97991, 0.72 ) }
    dend_62 { pt3dadd( -41.6887, -146.272, -4.03794, 0.72 ) }
    dend_62 { pt3dadd( -42.2066, -147.421, -4.2695, 1.08 ) }
    dend_62 { pt3dadd( -42.6086, -148.425, -4.55428, 0.96 ) }
    dend_62 { pt3dadd( -42.8761, -149.179, -4.79734, 0.96 ) }
    dend_62 { pt3dadd( -43.1438, -150.051, -5.08472, 0.96 ) }
    dend_62 { pt3dadd( -43.5638, -151.672, -5.58758, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_62 { pt3dadd( -44.3088, -155.227, -6.58692, 1.2 ) }
    dend_62 { pt3dadd( -44.7727, -157.706, -7.30669, 0.6 ) }
    dend_62 { pt3dadd( -45.012, -159.364, -7.80282, 0.6 ) }
    dend_62 { pt3dadd( -45.0912, -160.307, -8.07941, 0.6 ) }
    dend_62 { pt3dadd( -45.1098, -161.379, -8.37461, 0.6 ) }
    dend_62 { pt3dadd( -45.0912, -162.122, -8.51001, 0.6 ) }
    dend_62 { pt3dadd( -45.0516, -162.735, -8.55761, 0.6 ) }
    dend_62 { pt3dadd( -45.0037, -163.595, -8.63435, 0.6 ) }
    dend_62 { pt3dadd( -44.9812, -165.545, -8.8853, 0.6 ) }
    dend_62 { pt3dadd( -44.9976, -166.209, -8.98302, 0.6 ) }
    dend_62 { pt3dadd( -45.188, -170.01, -9.57792, 0.96 ) }
    dend_62 { pt3dadd( -45.3095, -171.824, -9.86376, 0.48 ) }
    dend_62 { pt3dadd( -45.4109, -172.965, -10.0344, 0.48 ) }
    dend_62 { pt3dadd( -45.7208, -175.655, -10.3917, 0.72 ) }
    dend_62 { pt3dadd( -45.9307, -177.257, -10.5831, 0.48 ) }
    dend_62 { pt3dadd( -46.0706, -178.53, -10.6788, 1.2 ) }
    dend_62 { pt3dadd( -46.3113, -180.94, -10.7433, 0.84 ) }
    dend_62 { pt3dadd( -46.4622, -182.398, -10.702, 1.32 ) }
    dend_62 { pt3dadd( -46.6991, -184.487, -10.5325, 0.84 ) }
    dend_62 { pt3dadd( -46.895, -186.087, -10.3144, 1.44 ) }
    dend_62 { pt3dadd( -47.4078, -189.664, -9.67109, 0.48 ) }
    dend_62 { pt3dadd( -47.695, -191.501, -9.28714, 0.48 ) }
    dend_62 { pt3dadd( -48.155, -193.865, -8.69243, 0.48 ) }
    dend_62 { pt3dadd( -48.4962, -195.261, -8.28042, 0.48 ) }
    dend_62 { pt3dadd( -48.905, -196.533, -7.82439, 0.96 ) }
    dend_62 { pt3dadd( -50.1089, -199.262, -6.6339, 0.48 ) }
    dend_62 { pt3dadd( -50.3838, -199.767, -6.38872, 0.84 ) }
    dend_62 { pt3dadd( -51.3152, -201.294, -5.53006, 0.6 ) }
    dend_62 { pt3dadd( -52.0147, -202.245, -4.87586, 0.84 ) }
    dend_62 { pt3dadd( -52.8568, -203.22, -4.09781, 0.6 ) }
    dend_62 { pt3dadd( -53.8597, -204.128, -3.22971, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_42 (entry count 31/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 1.41617, -34.6319, 10.2221, 0.96 ) }
    dend_58 { pt3dadd( 0.506418, -36.1518, 10.7811, 0.96 ) }
    dend_58 { pt3dadd( -0.27399, -37.7984, 11.2391, 0.96 ) }
    dend_58 { pt3dadd( -0.486872, -38.4364, 11.4796, 0.96 ) }
    dend_58 { pt3dadd( -0.82509, -39.5888, 12.0483, 0.96 ) }
    dend_58 { pt3dadd( -1.11814, -40.6296, 12.6581, 0.96 ) }
    dend_58 { pt3dadd( -1.42433, -41.8016, 13.4793, 0.96 ) }
    dend_58 { pt3dadd( -1.79209, -43.6438, 14.9151, 1.32 ) }
    dend_58 { pt3dadd( -2.21642, -45.9189, 16.84, 0.84 ) }
    dend_58 { pt3dadd( -2.44993, -47.4211, 18.1639, 0.84 ) }
    dend_58 { pt3dadd( -2.56458, -48.4327, 19.0962, 0.84 ) }
    dend_58 { pt3dadd( -2.76974, -50.5933, 21.2399, 1.32 ) }
    dend_58 { pt3dadd( -2.91777, -51.8456, 22.6318, 1.32 ) }
    dend_58 { pt3dadd( -3.10259, -52.9529, 23.9992, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 45/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 1.41617, -34.6319, 10.2221, 1.44 ) }
    dend_43 { pt3dadd( 1.11495, -39.3049, 10.6487, 1.44 ) }
    dend_43 { pt3dadd( 0.874638, -42.647, 10.9389, 1.44 ) }
    dend_43 { pt3dadd( 0.726071, -44.6475, 11.0981, 1.44 ) }
    dend_43 { pt3dadd( 0.37411, -48.8267, 11.4176, 1.8 ) }
    dend_43 { pt3dadd( 0.227417, -50.5685, 11.5507, 1.8 ) }
    dend_43 { pt3dadd( 0.082656, -52.2874, 11.6822, 1.8 ) }
    dend_43 { pt3dadd( -0.069469, -53.7196, 11.7561, 1.8 ) }
    dend_43 { pt3dadd( -0.408869, -56.6539, 11.9216, 1.56 ) }
    dend_43 { pt3dadd( -0.775098, -59.7807, 12.1033, 1.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_19 (entry count 55/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 13.3432, -55.6924, 7.58448, 1.56 ) }
    dend_37 { pt3dadd( 15.0053, -57.2966, 7.55554, 1.56 ) }
    dend_37 { pt3dadd( 16.0061, -58.2794, 7.53777, 1.56 ) }
    dend_37 { pt3dadd( 17.246, -59.4937, 7.51582, 1.2 ) }
    dend_37 { pt3dadd( 17.9935, -60.2237, 7.50263, 1.2 ) }
    dend_37 { pt3dadd( 19.1129, -61.3081, 7.48306, 1.56 ) }
    dend_37 { pt3dadd( 20.7166, -62.8929, 7.45437, 1.2 ) }
    dend_37 { pt3dadd( 21.4423, -63.6375, 7.44082, 1.8 ) }
    dend_37 { pt3dadd( 22.209, -64.4356, 7.42627, 1.8 ) }
    dend_37 { pt3dadd( 23.7026, -66.0303, 7.41211, 1.08 ) }
    dend_37 { pt3dadd( 24.7552, -67.18, 7.41063, 1.68 ) }
    dend_37 { pt3dadd( 25.9628, -68.5392, 7.39627, 1.32 ) }
    dend_37 { pt3dadd( 26.7475, -69.452, 7.37963, 1.32 ) }
    dend_37 { pt3dadd( 27.2297, -70.0228, 7.36543, 1.32 ) }
    dend_37 { pt3dadd( 28.3605, -71.414, 7.32187, 1.08 ) }
    dend_37 { pt3dadd( 29.1392, -72.4278, 7.26494, 1.56 ) }
    dend_37 { pt3dadd( 30.2966, -74.0381, 7.17982, 1.2 ) }
    dend_37 { pt3dadd( 30.7015, -74.6259, 7.15064, 1.2 ) }
    dend_37 { pt3dadd( 31.0855, -75.1914, 7.13375, 1.2 ) }
    dend_37 { pt3dadd( 31.8364, -76.2979, 7.1187, 1.68 ) }
    dend_37 { pt3dadd( 32.4637, -77.2162, 7.14762, 1.2 ) }
    dend_37 { pt3dadd( 33.2629, -78.3614, 7.23954, 0.96 ) }
    dend_37 { pt3dadd( 33.7897, -79.0564, 7.32705, 0.96 ) }
    dend_37 { pt3dadd( 35.1879, -80.7489, 7.5668, 0.84 ) }
    dend_37 { pt3dadd( 35.8995, -81.5639, 7.6977, 0.84 ) }
    dend_37 { pt3dadd( 37.0123, -82.7635, 7.91655, 1.44 ) }
    dend_37 { pt3dadd( 37.6023, -83.3729, 8.03805, 1.44 ) }
    dend_37 { pt3dadd( 38.6706, -84.4624, 8.22769, 1.44 ) }
    dend_37 { pt3dadd( 39.2889, -85.1293, 8.33681, 0.96 ) }
    dend_37 { pt3dadd( 39.9613, -85.9109, 8.44223, 1.44 ) }
    dend_37 { pt3dadd( 40.1994, -86.1951, 8.4733, 1.44 ) }
    dend_37 { pt3dadd( 40.8027, -86.9357, 8.52286, 1.44 ) }
    dend_37 { pt3dadd( 41.2673, -87.5341, 8.55807, 1.44 ) }
    dend_37 { pt3dadd( 42.1171, -88.657, 8.60795, 1.08 ) }
    dend_37 { pt3dadd( 42.896, -89.6544, 8.63508, 1.08 ) }
    dend_37 { pt3dadd( 43.3646, -90.2054, 8.63899, 1.08 ) }
    dend_37 { pt3dadd( 44.3009, -91.2157, 8.63595, 1.44 ) }
    dend_37 { pt3dadd( 44.7644, -91.6812, 8.63587, 1.44 ) }
    dend_37 { pt3dadd( 45.9574, -92.8737, 8.65042, 0.84 ) }
    dend_37 { pt3dadd( 46.7277, -93.66, 8.66579, 1.56 ) }
    dend_37 { pt3dadd( 48.0248, -95.0389, 8.70065, 1.08 ) }
    dend_37 { pt3dadd( 48.6526, -95.721, 8.72006, 1.32 ) }
    dend_37 { pt3dadd( 50.5321, -97.5952, 8.77696, 1.08 ) }
    dend_37 { pt3dadd( 51.4834, -98.4751, 8.81473, 1.08 ) }
    dend_37 { pt3dadd( 52.3074, -99.1888, 8.85169, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 53.5228, -100.165, 8.90555, 1.08 ) }
    dend_37 { pt3dadd( 54.3551, -100.805, 8.91226, 1.08 ) }
    dend_37 { pt3dadd( 56.8673, -102.673, 8.83823, 1.44 ) }
    dend_37 { pt3dadd( 58.5858, -103.921, 8.7206, 1.08 ) }
    dend_37 { pt3dadd( 59.6487, -104.702, 8.62086, 1.08 ) }
    dend_37 { pt3dadd( 61.349, -106.018, 8.44353, 1.08 ) }
    dend_37 { pt3dadd( 63.2806, -107.547, 8.21099, 0.72 ) }
    dend_37 { pt3dadd( 64.7421, -108.781, 7.99841, 1.32 ) }
    dend_37 { pt3dadd( 65.7674, -109.776, 7.7951, 0.84 ) }
    dend_37 { pt3dadd( 66.3972, -110.434, 7.63426, 0.84 ) }
    dend_37 { pt3dadd( 67.4539, -111.678, 7.32907, 1.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 13.3432, -55.6924, 7.58448, 1.68 ) }
    dend_20 { pt3dadd( 13.5605, -58.7647, 7.61013, 1.68 ) }
    dend_20 { pt3dadd( 13.8294, -61.4758, 7.63187, 1.68 ) }
    dend_20 { pt3dadd( 14.0297, -63.0298, 7.64177, 1.68 ) }
    dend_20 { pt3dadd( 14.7422, -67.5107, 7.65966, 1.32 ) }
    dend_20 { pt3dadd( 15.2733, -70.4877, 7.66268, 1.56 ) }
    dend_20 { pt3dadd( 15.8806, -74.3335, 7.6556, 1.56 ) }
    dend_20 { pt3dadd( 16.1072, -75.7824, 7.64216, 1.56 ) }
    dend_20 { pt3dadd( 16.3718, -78.0069, 7.61934, 1.56 ) }
    dend_20 { pt3dadd( 16.5847, -80.6871, 7.58883, 1.56 ) }
    dend_20 { pt3dadd( 16.7823, -84.4912, 7.53926, 1.2 ) }
    dend_20 { pt3dadd( 16.9758, -89.8431, 7.45767, 1.56 ) }
    dend_20 { pt3dadd( 17.0817, -93.5704, 7.42884, 1.2 ) }
    dend_20 { pt3dadd( 17.2322, -98.2538, 7.42854, 1.2 ) }
    dend_20 { pt3dadd( 17.3291, -100.968, 7.41605, 1.56 ) }
    dend_20 { pt3dadd( 17.452, -104.097, 7.36345, 1.56 ) }
    dend_20 { pt3dadd( 17.5938, -106.619, 7.27696, 1.56 ) }
    dend_20 { pt3dadd( 17.9353, -110.505, 7.17313, 1.2 ) }
    dend_20 { pt3dadd( 18.214, -113.883, 7.10732, 1.56 ) }
    dend_20 { pt3dadd( 18.4875, -117.721, 7.05465, 1.44 ) }
    dend_20 { pt3dadd( 18.6194, -120.412, 7.02918, 1.44 ) }
    dend_20 { pt3dadd( 18.6598, -122.346, 7.01724, 1.44 ) }
    dend_20 { pt3dadd( 18.7398, -128.861, 6.9898, 1.08 ) }
    dend_20 { pt3dadd( 18.7838, -132.366, 6.88704, 1.08 ) }
    dend_20 { pt3dadd( 18.8635, -135.509, 6.72271, 1.44 ) }
    dend_20 { pt3dadd( 18.9288, -136.911, 6.62778, 1.44 ) }
    dend_20 { pt3dadd( 19.069, -138.95, 6.43854, 1.44 ) }
    dend_20 { pt3dadd( 19.3292, -141.855, 6.0369, 1.44 ) }
    dend_20 { pt3dadd( 19.8316, -145.94, 5.13892, 1.32 ) }
    dend_20 { pt3dadd( 20.3128, -148.768, 4.44028, 1.32 ) }
    dend_20 { pt3dadd( 20.6019, -150.266, 4.04575, 1.32 ) }
    dend_20 { pt3dadd( 20.821, -151.508, 3.73184, 1.32 ) }
    dend_20 { pt3dadd( 21.1451, -153.696, 3.23309, 1.32 ) }
    dend_20 { pt3dadd( 21.2841, -155.004, 2.99246, 1.32 ) }
    dend_20 { pt3dadd( 21.4378, -156.54, 2.77726, 1.32 ) }
    dend_20 { pt3dadd( 21.7493, -159.767, 2.31102, 1.8 ) }
    dend_20 { pt3dadd( 22.0169, -162.872, 1.84221, 1.8 ) }
    dend_20 { pt3dadd( 22.2401, -165.572, 1.51683, 1.8 ) }
    dend_20 { pt3dadd( 22.4364, -168.27, 1.26122, 1.8 ) }
    dend_20 { pt3dadd( 22.6884, -172.662, 0.943225, 1.56 ) }
    dend_20 { pt3dadd( 22.8662, -177.125, 0.702272, 1.56 ) }
    dend_20 { pt3dadd( 22.9129, -179.267, 0.627044, 1.56 ) }
    dend_20 { pt3dadd( 22.9717, -183.834, 0.567254, 1.32 ) }
    dend_20 { pt3dadd( 22.981, -185.978, 0.583926, 1.32 ) }
    dend_20 { pt3dadd( 22.9451, -189.823, 0.699701, 1.8 ) }
    dend_20 { pt3dadd( 22.8446, -193.196, 0.892918, 1.8 ) }
    dend_20 { pt3dadd( 22.7862, -196.653, 1.12966, 1.56 ) }
    dend_20 { pt3dadd( 22.8521, -199.908, 1.30162, 1.56 ) }
    dend_20 { pt3dadd( 22.9877, -202.095, 1.35906, 1.56 ) }
    dend_20 { pt3dadd( 23.1466, -203.676, 1.3968, 1.56 ) }
    dend_20 { pt3dadd( 23.3299, -205.296, 1.41096, 1.56 ) }
    dend_20 { pt3dadd( 23.586, -207.638, 1.38567, 1.56 ) }
    dend_20 { pt3dadd( 23.8533, -210.52, 1.30024, 1.2 ) }
    dend_20 { pt3dadd( 24.0248, -213.285, 1.14241, 1.2 ) }
    dend_20 { pt3dadd( 24.0963, -215.191, 1.00095, 1.2 ) }
    dend_20 { pt3dadd( 24.124, -218.748, 0.670664, 1.56 ) }
    dend_20 { pt3dadd( 24.0941, -222.169, 0.285784, 1.56 ) }
    dend_20 { pt3dadd( 24.0657, -224.299, 0.0154223, 1.56 ) }
    dend_20 { pt3dadd( 24.0844, -227.104, -0.353868, 1.56 ) }
    dend_20 { pt3dadd( 24.1371, -229.769, -0.729485, 1.56 ) }
    dend_20 { pt3dadd( 24.3383, -235.022, -1.51124, 1.56 ) }
    dend_20 { pt3dadd( 24.7139, -241.056, -2.46731, 1.32 ) }
    dend_20 { pt3dadd( 25.0683, -246.08, -3.32236, 1.32 ) }
    dend_20 { pt3dadd( 25.2618, -248.785, -3.78992, 0.84 ) }
    dend_20 { pt3dadd( 25.4581, -251.564, -4.2671, 1.32 ) }
    dend_20 { pt3dadd( 25.7025, -254.863, -4.83831, 1.08 ) }
    dend_20 { pt3dadd( 25.9868, -257.955, -5.40789, 1.44 ) }
    dend_20 { pt3dadd( 26.2866, -261.216, -6.06718, 1.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.75685, 40.8899, 17.3105, 1.2 ) }
    dend_11 { pt3dadd( 7.2447, 43.3185, 17.9907, 1.2 ) }
    dend_11 { pt3dadd( 6.67457, 44.427, 18.3688, 1.2 ) }
    dend_11 { pt3dadd( 6.25473, 45.3934, 18.7331, 1.2 ) }
    dend_11 { pt3dadd( 5.60116, 47.3744, 19.6246, 1.2 ) }
    dend_11 { pt3dadd( 5.3465, 48.4413, 20.1361, 1.2 ) }
    dend_11 { pt3dadd( 5.18236, 49.4668, 20.6381, 1.08 ) }
    dend_11 { pt3dadd( 5.13486, 51.1005, 21.5078, 1.56 ) }
    dend_11 { pt3dadd( 5.17516, 52.1991, 22.0977, 1.56 ) }
    dend_11 { pt3dadd( 5.41031, 54.6214, 23.3429, 1.2 ) }
    dend_11 { pt3dadd( 5.64044, 56.1809, 24.0752, 0.96 ) }
    dend_11 { pt3dadd( 5.88047, 57.8887, 24.7765, 1.32 ) }
    dend_11 { pt3dadd( 5.95395, 58.6678, 25.0709, 1.32 ) }
    dend_11 { pt3dadd( 5.99153, 59.5358, 25.3592, 1.32 ) }
    dend_11 { pt3dadd( 6.0096, 60.8299, 25.7135, 1.32 ) }
    dend_11 { pt3dadd( 6.00193, 61.5557, 25.8796, 1.32 ) }
    dend_11 { pt3dadd( 6.00566, 62.9719, 26.2096, 1.2 ) }
    dend_11 { pt3dadd( 6.05861, 64.4446, 26.5987, 1.56 ) }
    dend_11 { pt3dadd( 6.10994, 65.4281, 26.8749, 1.2 ) }
    dend_11 { pt3dadd( 6.22774, 66.9429, 27.3361, 1.68 ) }
    dend_11 { pt3dadd( 6.49088, 68.9986, 28.0119, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_11 { pt3dadd( 6.65462, 69.821, 28.2984, 1.44 ) }
    dend_11 { pt3dadd( 7.0912, 71.1848, 28.7847, 1.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 2/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.75685, 40.8899, 17.3105, 1.44 ) }
    dend_2 { pt3dadd( 8.71814, 44.1833, 16.957, 1.44 ) }
    dend_2 { pt3dadd( 8.70039, 45.6934, 16.7949, 1.44 ) }
    dend_2 { pt3dadd( 8.67987, 47.4391, 16.6075, 1.44 ) }
    dend_2 { pt3dadd( 8.65625, 49.4482, 16.3918, 1.44 ) }
    dend_2 { pt3dadd( 8.62766, 51.8805, 16.1307, 1.8 ) }
    dend_2 { pt3dadd( 8.60347, 53.9381, 15.9099, 1.8 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 9/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -3.10259, -52.9529, 23.9992, 0.96 ) }
    dend_60 { pt3dadd( -4.15851, -56.1649, 25.2402, 0.96 ) }
    dend_60 { pt3dadd( -4.90061, -58.1294, 25.9555, 0.96 ) }
    dend_60 { pt3dadd( -5.37938, -59.4038, 26.3756, 0.96 ) }
    dend_60 { pt3dadd( -5.74878, -60.3701, 26.6884, 0.96 ) }
    dend_60 { pt3dadd( -6.17162, -61.4689, 27.0283, 0.96 ) }
    dend_60 { pt3dadd( -6.88158, -63.467, 27.6033, 0.6 ) }
    dend_60 { pt3dadd( -7.14004, -64.0759, 27.769, 0.6 ) }
    dend_60 { pt3dadd( -7.60666, -65.1575, 28.0949, 1.08 ) }
    dend_60 { pt3dadd( -8.5857, -67.4073, 28.8714, 0.72 ) }
    dend_60 { pt3dadd( -9.32815, -69.0914, 29.4971, 0.72 ) }
    dend_60 { pt3dadd( -10.5062, -71.6823, 30.4929, 0.72 ) }
    dend_60 { pt3dadd( -11.714, -74.1431, 31.4713, 1.2 ) }
    dend_60 { pt3dadd( -12.4383, -75.4666, 32.0182, 1.08 ) }
    dend_60 { pt3dadd( -13.4183, -77.0201, 32.6936, 0.48 ) }
    dend_60 { pt3dadd( -14.6733, -78.808, 33.4719, 0.48 ) }
    dend_60 { pt3dadd( -16.1566, -80.7625, 34.315, 1.44 ) }
    dend_60 { pt3dadd( -17.3285, -82.2342, 34.9101, 0.84 ) }
    dend_60 { pt3dadd( -17.9506, -83.0798, 35.1993, 1.08 ) }
    dend_60 { pt3dadd( -18.9074, -84.4583, 35.6067, 1.08 ) }
    dend_60 { pt3dadd( -20.1394, -86.4018, 36.1087, 1.44 ) }
    dend_60 { pt3dadd( -20.9844, -87.8621, 36.4738, 0.84 ) }
    dend_60 { pt3dadd( -21.5306, -88.949, 36.7662, 1.32 ) }
    dend_60 { pt3dadd( -22.31, -90.7987, 37.2735, 0.72 ) }
    dend_60 { pt3dadd( -22.6776, -91.7205, 37.541, 0.72 ) }
    dend_60 { pt3dadd( -23.0173, -92.5387, 37.8181, 0.72 ) }
    dend_60 { pt3dadd( -23.6684, -93.6923, 38.3346, 0.72 ) }
    dend_60 { pt3dadd( -24.7253, -94.8607, 39.0795, 1.08 ) }
    dend_60 { pt3dadd( -25.7584, -95.7775, 39.7833, 0.6 ) }
    dend_60 { pt3dadd( -27.1029, -96.6646, 40.649, 1.08 ) }
    dend_60 { pt3dadd( -28.1398, -97.1945, 41.2919, 0.96 ) }
    dend_60 { pt3dadd( -29.9193, -97.8405, 42.3274, 0.84 ) }
    dend_60 { pt3dadd( -31.7977, -98.2063, 43.3087, 0.84 ) }
    dend_60 { pt3dadd( -36.0875, -106.47, 45.4927, 0.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -3.10259, -52.9529, 23.9992, 0.84 ) }
    dend_59 { pt3dadd( -3.92474, -54.6931, 25.5591, 0.84 ) }
    dend_59 { pt3dadd( -4.52304, -55.9382, 26.6421, 0.84 ) }
    dend_59 { pt3dadd( -4.79741, -56.5364, 27.1211, 0.84 ) }
    dend_59 { pt3dadd( -5.74508, -58.8281, 28.8192, 0.48 ) }
    dend_59 { pt3dadd( -6.23976, -60.1065, 29.7023, 0.48 ) }
    dend_59 { pt3dadd( -7.06722, -62.3348, 31.1143, 0.84 ) }
    dend_59 { pt3dadd( -7.56956, -63.7573, 31.8862, 0.84 ) }
    dend_59 { pt3dadd( -8.06435, -65.1167, 32.5333, 0.84 ) }
    dend_59 { pt3dadd( -9.15179, -68.1772, 33.8064, 0.84 ) }
    dend_59 { pt3dadd( -9.54579, -69.345, 34.2143, 0.84 ) }
    dend_59 { pt3dadd( -10.1931, -71.4598, 34.8618, 0.6 ) }
    dend_59 { pt3dadd( -10.6189, -72.8108, 35.2383, 1.08 ) }
    dend_59 { pt3dadd( -11.268, -74.5843, 35.7448, 1.08 ) }
    dend_59 { pt3dadd( -11.8004, -75.8592, 36.1352, 1.56 ) }
    dend_59 { pt3dadd( -12.5289, -77.3632, 36.6084, 1.56 ) }
    dend_59 { pt3dadd( -13.1265, -78.5391, 37.0044, 1.08 ) }
    dend_59 { pt3dadd( -14.2332, -80.6294, 37.7665, 0.72 ) }
    dend_59 { pt3dadd( -14.9619, -81.9571, 38.2824, 1.32 ) }
    dend_59 { pt3dadd( -15.6066, -83.0722, 38.7464, 1.32 ) }
    dend_59 { pt3dadd( -16.5767, -84.6069, 39.4322, 0.72 ) }
    dend_59 { pt3dadd( -17.6405, -86.1814, 40.1528, 0.72 ) }
    dend_59 { pt3dadd( -23.4074, -95.4941, 45.4609, 0.72 ) }
    dend_59 { pt3dadd( -27.7528, -105.514, 50.7199, 0.72 ) }
    dend_59 { pt3dadd( -32.3197, -114.849, 57.0661, 0.72 ) }
    dend_59 { pt3dadd( -36.9134, -124.196, 63.3729, 0.72 ) }
    dend_59 { pt3dadd( -39.931, -133.837, 70.1464, 0.72 ) }
    dend_59 { pt3dadd( -40.6818, -143.566, 77.4279, 0.72 ) }
    dend_59 { pt3dadd( -41.8025, -154.273, 82.9301, 0.72 ) }
    dend_59 { pt3dadd( -42.8161, -165.889, 85.8295, 0.72 ) }
    dend_59 { pt3dadd( -43.18, -177.359, 89.4472, 0.72 ) }
    dend_59 { pt3dadd( -44.8969, -188.782, 92.7846, 0.72 ) }
    dend_59 { pt3dadd( -49.2846, -199.806, 94.8369, 0.72 ) }
    dend_59 { pt3dadd( -54.086, -210.713, 96.6281, 0.72 ) }
    dend_59 { pt3dadd( -56.8561, -222.187, 98.8555, 0.72 ) }
    dend_59 { pt3dadd( -58.2963, -233.686, 102.046, 0.72 ) }
    // Section: dend_57, id: dend_57, parent: dend_43 (entry count 79/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -0.775098, -59.7807, 12.1033, 1.08 ) }
    dend_57 { pt3dadd( 0.583043, -60.9643, 7.40437, 1.08 ) }
    dend_57 { pt3dadd( 1.59982, -62.018, 4.2484, 1.08 ) }
    dend_57 { pt3dadd( 1.88218, -62.3944, 3.37036, 1.08 ) }
    dend_57 { pt3dadd( 2.08076, -62.7944, 2.57783, 1.08 ) }
    dend_57 { pt3dadd( 2.18571, -63.0614, 2.11339, 1.08 ) }
    dend_57 { pt3dadd( 2.54876, -64.2452, 0.235208, 1.44 ) }
    dend_57 { pt3dadd( 2.69135, -65.2189, -1.04005, 1.44 ) }
    dend_57 { pt3dadd( 2.70443, -66.3413, -2.3558, 1.44 ) }
    dend_57 { pt3dadd( 2.60224, -68.1371, -4.34147, 1.44 ) }
    dend_57 { pt3dadd( 2.52472, -68.8304, -5.04162, 1.44 ) }
    dend_57 { pt3dadd( 2.24989, -70.6636, -6.67411, 1.2 ) }
    dend_57 { pt3dadd( 1.67923, -73.6001, -8.9539, 1.2 ) }
    dend_57 { pt3dadd( 1.27283, -75.6014, -10.4148, 1.68 ) }
    dend_57 { pt3dadd( 0.804624, -77.7606, -11.9928, 0.72 ) }
    dend_57 { pt3dadd( 0.419367, -79.3813, -13.1374, 0.72 ) }
    dend_57 { pt3dadd( -0.101744, -81.1554, -14.5082, 1.44 ) }
    dend_57 { pt3dadd( -0.560755, -82.4134, -15.5787, 1.44 ) }
    dend_57 { pt3dadd( -1.60039, -84.694, -18.0623, 0.96 ) }
    dend_57 { pt3dadd( -2.73037, -86.7056, -21.1858, 1.68 ) }
    dend_57 { pt3dadd( -3.15565, -87.338, -22.4629, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_57 { pt3dadd( -4.11026, -88.6274, -25.6555, 1.68 ) }
    dend_57 { pt3dadd( -4.83203, -89.5549, -28.2471, 1.68 ) }
    dend_57 { pt3dadd( -5.946, -90.9931, -32.3848, 1.68 ) }
    dend_57 { pt3dadd( -7.17001, -92.5985, -36.8435, 1.68 ) }
    dend_57 { pt3dadd( -8.08528, -93.8243, -40.0895, 1.2 ) }
    dend_57 { pt3dadd( -9.0202, -95.1708, -43.3317, 0.84 ) }
    dend_57 { pt3dadd( -9.41637, -95.828, -44.6539, 1.44 ) }
    dend_57 { pt3dadd( -9.78151, -96.5174, -45.7995, 0.72 ) }
    dend_57 { pt3dadd( -10.6345, -98.2385, -48.1916, 1.32 ) }
    dend_57 { pt3dadd( -11.9668, -101.12, -51.6442, 0.6 ) }
    dend_57 { pt3dadd( -12.2791, -101.842, -52.4493, 0.6 ) }
    dend_57 { pt3dadd( -12.7141, -102.826, -53.4933, 0.96 ) }
    dend_57 { pt3dadd( -13.0874, -103.652, -54.4087, 0.96 ) }
    dend_57 { pt3dadd( -14.5327, -106.906, -58.277, 0.6 ) }
    dend_57 { pt3dadd( -14.9696, -108.107, -59.6811, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 15/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.775098, -59.7807, 12.1033, 1.32 ) }
    dend_44 { pt3dadd( -0.782692, -59.9305, 12.0822, 1.32 ) }
    dend_44 { pt3dadd( -0.87012, -63.8743, 11.5394, 1.32 ) }
    dend_44 { pt3dadd( -0.87509, -68.4688, 10.9388, 1.68 ) }
    dend_44 { pt3dadd( -0.85555, -71.3955, 10.5936, 2.04 ) }
    dend_44 { pt3dadd( -0.84048, -73.9884, 10.3177, 1.68 ) }
    dend_44 { pt3dadd( -0.8299, -76.1282, 10.1138, 1.68 ) }
    dend_44 { pt3dadd( -0.81469, -77.4223, 10.0166, 1.68 ) }
    dend_44 { pt3dadd( -0.780667, -79.1519, 9.92917, 1.68 ) }
    dend_44 { pt3dadd( -0.761255, -81.7753, 9.86006, 2.04 ) }
    dend_44 { pt3dadd( -0.780056, -83.2795, 9.88045, 1.68 ) }
    dend_44 { pt3dadd( -0.85751, -85.2302, 9.95963, 1.68 ) }
    dend_44 { pt3dadd( -0.95452, -87.3259, 10.1016, 1.68 ) }
    dend_44 { pt3dadd( -1.04051, -89.7038, 10.2958, 1.56 ) }
    dend_44 { pt3dadd( -1.08735, -91.908, 10.488, 1.56 ) }
    dend_44 { pt3dadd( -1.10896, -96.3421, 10.8802, 1.56 ) }
    dend_44 { pt3dadd( -1.07827, -99.9565, 11.1993, 1.8 ) }
    dend_44 { pt3dadd( -0.96438, -105.741, 11.701, 1.56 ) }
    dend_44 { pt3dadd( -0.82724, -111.533, 12.1759, 1.44 ) }
    dend_44 { pt3dadd( -0.773056, -113.996, 12.3659, 1.92 ) }
    dend_44 { pt3dadd( -0.727586, -116.98, 12.5723, 1.8 ) }
    dend_44 { pt3dadd( -0.735548, -119.277, 12.7108, 1.68 ) }
    dend_44 { pt3dadd( -0.83042, -122.136, 12.8766, 2.04 ) }
    dend_44 { pt3dadd( -1.66997, -133.798, 13.3106, 1.8 ) }
    dend_44 { pt3dadd( -2.05328, -137.343, 13.3864, 1.8 ) }
    dend_44 { pt3dadd( -2.30258, -139.263, 13.4056, 1.68 ) }
    dend_44 { pt3dadd( -2.57685, -141.072, 13.4044, 1.68 ) }
    dend_44 { pt3dadd( -3.43175, -146.071, 13.3458, 1.68 ) }
    dend_44 { pt3dadd( -3.9679, -148.79, 13.2061, 1.68 ) }
    dend_44 { pt3dadd( -4.45964, -151.068, 12.9887, 1.68 ) }
    dend_44 { pt3dadd( -5.08832, -154.071, 12.6743, 1.32 ) }
    dend_44 { pt3dadd( -5.79885, -157.676, 12.2944, 1.32 ) }
    dend_44 { pt3dadd( -6.49487, -161.442, 11.9067, 1.32 ) }
    dend_44 { pt3dadd( -7.50382, -167.456, 11.3133, 1.32 ) }
    dend_44 { pt3dadd( -8.13066, -171.53, 10.9661, 1.8 ) }
    dend_44 { pt3dadd( -8.53943, -174.247, 10.7753, 1.8 ) }
    dend_44 { pt3dadd( -8.85771, -176.431, 10.6629, 1.8 ) }
    dend_44 { pt3dadd( -9.11767, -178.351, 10.6161, 1.8 ) }
    dend_44 { pt3dadd( -9.56591, -181.916, 10.6783, 1.68 ) }
    dend_44 { pt3dadd( -10.162, -187.04, 10.8669, 2.04 ) }
    dend_44 { pt3dadd( -10.5898, -191.086, 10.9366, 2.04 ) }
    dend_44 { pt3dadd( -10.9227, -194.41, 10.9663, 1.8 ) }
    dend_44 { pt3dadd( -11.3083, -198.637, 10.9783, 1.56 ) }
    dend_44 { pt3dadd( -11.6613, -202.933, 10.9723, 1.92 ) }
    dend_44 { pt3dadd( -12.147, -208.381, 10.9546, 1.56 ) }
    dend_44 { pt3dadd( -12.5647, -212.618, 10.9151, 1.32 ) }
    dend_44 { pt3dadd( -13.081, -217.398, 10.808, 1.32 ) }
    dend_44 { pt3dadd( -13.3467, -219.666, 10.7658, 1.32 ) }
    dend_44 { pt3dadd( -13.5785, -221.647, 10.7414, 1.2 ) }
    dend_44 { pt3dadd( -14.1542, -226.226, 10.7532, 1.68 ) }
    dend_44 { pt3dadd( -14.6858, -230.449, 10.9807, 1.68 ) }
    dend_44 { pt3dadd( -15.0772, -233.156, 11.1707, 1.68 ) }
    dend_44 { pt3dadd( -15.4256, -235.46, 11.3255, 1.68 ) }
    dend_44 { pt3dadd( -15.8416, -238.021, 11.5135, 1.68 ) }
    dend_44 { pt3dadd( -15.9981, -239.111, 11.5986, 1.68 ) }
    dend_44 { pt3dadd( -16.5044, -246.144, 12.185, 2.16 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 67.4539, -111.678, 7.32907, 0.84 ) }
    dend_39 { pt3dadd( 70.1377, -111.178, 7.71151, 0.84 ) }
    dend_39 { pt3dadd( 72.2562, -110.746, 8.08067, 0.84 ) }
    dend_39 { pt3dadd( 73.9166, -110.404, 8.41974, 1.32 ) }
    dend_39 { pt3dadd( 76.6596, -109.851, 9.08361, 1.32 ) }
    dend_39 { pt3dadd( 78.8297, -109.42, 9.68348, 1.68 ) }
    dend_39 { pt3dadd( 81.5417, -108.823, 10.488, 1.2 ) }
    dend_39 { pt3dadd( 82.9747, -108.5, 11.0063, 0.96 ) }
    dend_39 { pt3dadd( 84.845, -107.988, 11.7995, 1.44 ) }
    dend_39 { pt3dadd( 87.089, -107.224, 12.8623, 0.84 ) }
    dend_39 { pt3dadd( 88.1506, -106.754, 13.4501, 0.84 ) }
    dend_39 { pt3dadd( 89.1957, -106.16, 14.163, 0.84 ) }
    dend_39 { pt3dadd( 89.8911, -105.607, 14.8077, 0.84 ) }
    dend_39 { pt3dadd( 90.6708, -104.83, 15.6462, 0.84 ) }
    dend_39 { pt3dadd( 91.3185, -103.954, 16.512, 0.84 ) }
    dend_39 { pt3dadd( 91.9656, -102.754, 17.6093, 1.08 ) }
    dend_39 { pt3dadd( 92.6544, -101.327, 18.9169, 0.72 ) }
    dend_39 { pt3dadd( 93.5329, -99.5533, 20.7208, 1.2 ) }
    dend_39 { pt3dadd( 102.999, -95.8371, 22.7022, 1.2 ) }
    dend_39 { pt3dadd( 112.069, -91.0188, 23.635, 1.2 ) }
    dend_39 { pt3dadd( 120.639, -85.3736, 23.4101, 1.2 ) }
    dend_39 { pt3dadd( 127.895, -78.3668, 24.8225, 1.2 ) }
    dend_39 { pt3dadd( 136.274, -72.5912, 26.1654, 1.2 ) }
    dend_39 { pt3dadd( 143.941, -65.9855, 27.5365, 1.2 ) }
    dend_39 { pt3dadd( 151.81, -59.5211, 26.7934, 1.2 ) }
    dend_39 { pt3dadd( 159.493, -52.8167, 26.7071, 1.2 ) }
    dend_39 { pt3dadd( 166.274, -45.2972, 27.2709, 1.2 ) }
    dend_39 { pt3dadd( 172.199, -37.1782, 26.491, 1.2 ) }
    dend_39 { pt3dadd( 177.403, -28.5994, 27.0441, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_39 { pt3dadd( 181.054, -19.3183, 27.0124, 1.2 ) }
    dend_39 { pt3dadd( 184.729, -10.045, 27.0922, 1.2 ) }
    dend_39 { pt3dadd( 188.382, -0.774864, 26.6992, 1.2 ) }
    dend_39 { pt3dadd( 193.719, 7.72642, 27.3167, 1.2 ) }
    dend_39 { pt3dadd( 198.826, 16.369, 27.5234, 1.2 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 67.4539, -111.678, 7.32907, 0.84 ) }
    dend_38 { pt3dadd( 68.4298, -113.374, 7.60578, 0.84 ) }
    dend_38 { pt3dadd( 69.4868, -115.14, 7.87854, 0.6 ) }
    dend_38 { pt3dadd( 70.1731, -116.302, 8.04016, 1.32 ) }
    dend_38 { pt3dadd( 71.2524, -118.129, 8.2943, 0.84 ) }
    dend_38 { pt3dadd( 71.9505, -119.31, 8.45867, 0.72 ) }
    dend_38 { pt3dadd( 72.5063, -120.251, 8.58956, 1.08 ) }
    dend_38 { pt3dadd( 73.2018, -121.482, 8.74239, 0.72 ) }
    dend_38 { pt3dadd( 73.8522, -122.657, 8.94443, 1.2 ) }
    dend_38 { pt3dadd( 78.3675, -128.853, 9.44782, 1.2 ) }
    dend_38 { pt3dadd( 83.2019, -134.639, 11.0927, 1.2 ) }
    dend_38 { pt3dadd( 87.9395, -139.959, 14.1571, 1.2 ) }
    // Section: dend_36, id: dend_36, parent: dend_20 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 26.2866, -261.216, -6.06718, 0.96 ) }
    dend_36 { pt3dadd( 27.9699, -262.812, -5.21228, 0.96 ) }
    dend_36 { pt3dadd( 28.9481, -263.869, -4.62742, 0.96 ) }
    dend_36 { pt3dadd( 30.7331, -265.91, -3.46665, 1.44 ) }
    dend_36 { pt3dadd( 32.0645, -267.385, -2.56302, 0.96 ) }
    dend_36 { pt3dadd( 33.1065, -268.545, -1.84968, 0.96 ) }
    dend_36 { pt3dadd( 33.9592, -269.523, -1.26228, 0.96 ) }
    dend_36 { pt3dadd( 34.6923, -270.419, -0.734763, 0.96 ) }
    dend_36 { pt3dadd( 35.5624, -271.562, -0.0200696, 1.08 ) }
    dend_36 { pt3dadd( 36.6405, -273.139, 0.931559, 1.08 ) }
    dend_36 { pt3dadd( 37.1686, -273.929, 1.38591, 1.08 ) }
    dend_36 { pt3dadd( 37.6484, -274.609, 1.74815, 1.08 ) }
    dend_36 { pt3dadd( 38.8012, -276.258, 2.69239, 1.08 ) }
    dend_36 { pt3dadd( 39.8273, -277.913, 3.68197, 0.84 ) }
    dend_36 { pt3dadd( 40.4759, -279.294, 4.53456, 1.2 ) }
    dend_36 { pt3dadd( 40.8068, -280.391, 5.20713, 1.2 ) }
    dend_36 { pt3dadd( 41.009, -281.298, 5.77785, 1.2 ) }
    dend_36 { pt3dadd( 41.4084, -283.518, 7.22124, 0.96 ) }
    dend_36 { pt3dadd( 41.5664, -284.686, 7.98822, 0.96 ) }
    dend_36 { pt3dadd( 41.7579, -285.767, 8.67992, 0.96 ) }
    dend_36 { pt3dadd( 42.024, -287.15, 9.52326, 0.72 ) }
    dend_36 { pt3dadd( 42.1718, -288.015, 10.0142, 0.72 ) }
    dend_36 { pt3dadd( 42.4406, -289.263, 10.6756, 0.72 ) }
    dend_36 { pt3dadd( 42.9756, -290.829, 11.3616, 1.2 ) }
    dend_36 { pt3dadd( 44.0422, -293.133, 12.4194, 0.84 ) }
    dend_36 { pt3dadd( 44.5795, -294.086, 12.8796, 0.84 ) }
    dend_36 { pt3dadd( 45.1779, -295.089, 13.411, 0.84 ) }
    dend_36 { pt3dadd( 48.5159, -300.926, 16.8227, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 26.2866, -261.216, -6.06718, 1.32 ) }
    dend_21 { pt3dadd( 26.8409, -264.079, -5.98367, 1.32 ) }
    dend_21 { pt3dadd( 27.1328, -265.855, -5.95946, 1.32 ) }
    dend_21 { pt3dadd( 27.3725, -267.585, -5.95083, 1.32 ) }
    dend_21 { pt3dadd( 27.5087, -268.875, -5.95251, 1.32 ) }
    dend_21 { pt3dadd( 27.8097, -271.621, -5.96771, 1.68 ) }
    dend_21 { pt3dadd( 28.1048, -273.912, -5.98657, 1.68 ) }
    dend_21 { pt3dadd( 28.3313, -275.588, -6.07385, 1.68 ) }
    dend_21 { pt3dadd( 28.5551, -277.167, -6.17504, 1.68 ) }
    dend_21 { pt3dadd( 28.9363, -279.825, -6.36893, 1.2 ) }
    dend_21 { pt3dadd( 29.1919, -281.574, -6.51271, 1.2 ) }
    dend_21 { pt3dadd( 29.6214, -284.214, -6.74923, 1.2 ) }
    dend_21 { pt3dadd( 30.1758, -287.213, -7.06957, 1.56 ) }
    dend_21 { pt3dadd( 30.4803, -288.719, -7.24748, 1.56 ) }
    dend_21 { pt3dadd( 30.7562, -290.016, -7.41023, 1.56 ) }
    dend_21 { pt3dadd( 31.0683, -291.381, -7.58804, 1.56 ) }
    dend_21 { pt3dadd( 31.5704, -293.752, -7.78447, 1.44 ) }
    dend_21 { pt3dadd( 32.0681, -296.156, -7.94901, 1.44 ) }
    dend_21 { pt3dadd( 32.3142, -297.246, -7.98659, 1.44 ) }
    dend_21 { pt3dadd( 32.6252, -298.57, -8.01945, 1.44 ) }
    dend_21 { pt3dadd( 33.0065, -300.091, -8.02777, 1.44 ) }
    dend_21 { pt3dadd( 33.6917, -302.556, -7.94548, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 7.0912, 71.1848, 28.7847, 1.44 ) }
    dend_17 { pt3dadd( 6.20685, 70.1813, 28.8588, 1.44 ) }
    dend_17 { pt3dadd( 5.85967, 69.8372, 28.9075, 1.2 ) }
    dend_17 { pt3dadd( 5.11205, 69.2345, 29.012, 0.96 ) }
    dend_17 { pt3dadd( 4.43931, 68.6922, 29.106, 0.96 ) }
    dend_17 { pt3dadd( 3.97574, 68.3185, 29.1709, 0.96 ) }
    dend_17 { pt3dadd( 3.48236, 67.9208, 29.2398, 0.96 ) }
    dend_17 { pt3dadd( 2.98558, 67.4741, 29.2485, 0.96 ) }
    dend_17 { pt3dadd( 2.04182, 66.7119, 29.2978, 1.2 ) }
    dend_17 { pt3dadd( -2.84435, 62.525, 28.7859, 1.2 ) }
    dend_17 { pt3dadd( -7.23728, 57.8458, 28.8221, 1.2 ) }
    dend_17 { pt3dadd( -11.6375, 53.2165, 28.1495, 1.2 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 7.0912, 71.1848, 28.7847, 0.96 ) }
    dend_12 { pt3dadd( 7.90024, 69.9017, 29.0119, 0.96 ) }
    dend_12 { pt3dadd( 8.83112, 68.4254, 29.2733, 0.96 ) }
    dend_12 { pt3dadd( 9.52347, 67.3274, 29.4677, 1.2 ) }
    dend_12 { pt3dadd( 9.90678, 66.7195, 29.5753, 1.2 ) }
    dend_12 { pt3dadd( 11.1719, 64.7133, 29.9305, 0.84 ) }
    dend_12 { pt3dadd( 11.7389, 63.8139, 30.0898, 0.84 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 8.60347, 53.9381, 15.9099, 1.44 ) }
    dend_8 { pt3dadd( 9.63059, 56.5526, 16.3987, 1.44 ) }
    dend_8 { pt3dadd( 10.4116, 58.606, 16.7564, 1.44 ) }
    dend_8 { pt3dadd( 10.8066, 59.6817, 16.9418, 1.44 ) }
    dend_8 { pt3dadd( 11.6885, 62.1823, 17.4165, 1.44 ) }
    dend_8 { pt3dadd( 12.7508, 65.1421, 18.0472, 1.32 ) }
    dend_8 { pt3dadd( 13.4241, 66.8391, 18.355, 1.32 ) }
    dend_8 { pt3dadd( 14.2893, 68.7039, 18.6232, 1.32 ) }
    dend_8 { pt3dadd( 15.0773, 70.2093, 18.8097, 1.56 ) }
    dend_8 { pt3dadd( 15.923, 71.6399, 18.9455, 1.56 ) }
    dend_8 { pt3dadd( 17.1566, 73.4816, 19.0678, 1.32 ) }
    dend_8 { pt3dadd( 19.4589, 76.5287, 19.2369, 1.32 ) }
    dend_8 { pt3dadd( 20.9356, 78.2837, 19.3214, 1.32 ) }
    dend_8 { pt3dadd( 22.226, 79.6961, 19.2951, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( 23.673, 81.2054, 19.1757, 1.56 ) }
    dend_8 { pt3dadd( 24.4895, 82.0734, 19.0502, 1.56 ) }
    dend_8 { pt3dadd( 26.4709, 84.236, 18.6479, 1.2 ) }
    dend_8 { pt3dadd( 27.5231, 85.4109, 18.4362, 1.2 ) }
    dend_8 { pt3dadd( 29.5784, 87.7539, 17.9648, 1.44 ) }
    dend_8 { pt3dadd( 30.6638, 89.0369, 17.6573, 1.92 ) }
    dend_8 { pt3dadd( 32.7493, 91.7068, 17.1218, 1.56 ) }
    dend_8 { pt3dadd( 34.0418, 93.4816, 16.8315, 1.32 ) }
    dend_8 { pt3dadd( 35.9031, 96.2683, 16.4648, 1.32 ) }
    dend_8 { pt3dadd( 37.3719, 98.63, 16.308, 1.32 ) }
    dend_8 { pt3dadd( 38.8059, 101.099, 16.3347, 1.56 ) }
    dend_8 { pt3dadd( 40.6671, 104.698, 16.5525, 1.2 ) }
    dend_8 { pt3dadd( 41.228, 105.975, 16.7086, 1.2 ) }
    dend_8 { pt3dadd( 41.5243, 106.886, 16.8566, 1.2 ) }
    dend_8 { pt3dadd( 41.7829, 108.115, 17.1163, 0.96 ) }
    dend_8 { pt3dadd( 41.8904, 108.908, 17.3159, 1.32 ) }
    dend_8 { pt3dadd( 42.071, 111.241, 17.9452, 0.96 ) }
    dend_8 { pt3dadd( 42.1154, 112.388, 18.1753, 0.96 ) }
    dend_8 { pt3dadd( 42.1578, 113.551, 18.3774, 0.96 ) }
    dend_8 { pt3dadd( 42.3208, 115.756, 18.7698, 1.32 ) }
    dend_8 { pt3dadd( 42.4525, 116.831, 18.9669, 1.32 ) }
    dend_8 { pt3dadd( 42.769, 118.455, 19.3203, 0.84 ) }
    dend_8 { pt3dadd( 43.2471, 120.124, 19.7671, 1.08 ) }
    dend_8 { pt3dadd( 43.8303, 121.746, 20.3203, 1.08 ) }
    dend_8 { pt3dadd( 44.7819, 124.044, 21.2236, 0.84 ) }
    dend_8 { pt3dadd( 45.274, 125.159, 21.6191, 1.2 ) }
    dend_8 { pt3dadd( 45.8613, 126.393, 22.0973, 0.84 ) }
    dend_8 { pt3dadd( 46.5484, 127.708, 22.6614, 1.2 ) }
    dend_8 { pt3dadd( 47.6292, 129.688, 23.5798, 0.96 ) }
    dend_8 { pt3dadd( 47.9867, 130.373, 23.899, 0.96 ) }
    dend_8 { pt3dadd( 49.3562, 133.605, 25.0969, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 8.60347, 53.9381, 15.9099, 1.08 ) }
    dend_3 { pt3dadd( 10.3398, 56.2668, 15.9677, 1.08 ) }
    dend_3 { pt3dadd( 12.4104, 59.1634, 16.0236, 1.08 ) }
    dend_3 { pt3dadd( 13.0356, 60.0557, 16.0378, 1.08 ) }
    dend_3 { pt3dadd( 13.6337, 60.9273, 16.0021, 1.08 ) }
    dend_3 { pt3dadd( 14.6955, 62.4745, 15.9385, 1.32 ) }
    dend_3 { pt3dadd( 16.2728, 64.773, 15.8441, 0.96 ) }
    dend_3 { pt3dadd( 17.2675, 66.2093, 15.7397, 1.44 ) }
    dend_3 { pt3dadd( 17.9413, 67.2042, 15.6424, 1.44 ) }
    dend_3 { pt3dadd( 19.2809, 69.2627, 15.4049, 1.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -16.5044, -246.144, 12.185, 1.08 ) }
    dend_52 { pt3dadd( -17.0659, -248.759, 13.2166, 1.08 ) }
    dend_52 { pt3dadd( -17.4484, -250.476, 13.9065, 1.08 ) }
    dend_52 { pt3dadd( -18.0694, -252.918, 14.8818, 1.08 ) }
    dend_52 { pt3dadd( -18.4671, -254.414, 15.4785, 1.08 ) }
    dend_52 { pt3dadd( -18.9671, -256.151, 16.1796, 1.08 ) }
    dend_52 { pt3dadd( -19.334, -257.337, 16.6867, 1.08 ) }
    dend_52 { pt3dadd( -19.5961, -258.084, 17.0066, 1.08 ) }
    dend_52 { pt3dadd( -20.071, -259.174, 17.4842, 1.08 ) }
    dend_52 { pt3dadd( -21.0333, -261.049, 18.245, 0.84 ) }
    dend_52 { pt3dadd( -21.5767, -262.003, 18.6249, 0.84 ) }
    dend_52 { pt3dadd( -22.4163, -263.35, 19.115, 1.32 ) }
    dend_52 { pt3dadd( -23.6327, -265.171, 19.7151, 1.32 ) }
    dend_52 { pt3dadd( -25.3784, -267.745, 20.4939, 0.96 ) }
    dend_52 { pt3dadd( -26.5523, -269.51, 20.9599, 0.96 ) }
    dend_52 { pt3dadd( -27.3665, -270.808, 21.282, 1.2 ) }
    dend_52 { pt3dadd( -28.8207, -273.382, 21.887, 1.2 ) }
    dend_52 { pt3dadd( -29.7066, -275.154, 22.2974, 1.44 ) }
    dend_52 { pt3dadd( -30.6342, -277.274, 22.8179, 1.2 ) }
    dend_52 { pt3dadd( -31.4551, -279.523, 23.3695, 1.2 ) }
    dend_52 { pt3dadd( -32.4456, -282.519, 24.1166, 1.2 ) }
    dend_52 { pt3dadd( -32.7705, -283.607, 24.3864, 1.2 ) }
    dend_52 { pt3dadd( -33.1449, -285.393, 24.8698, 1.2 ) }
    dend_52 { pt3dadd( -33.2756, -286.401, 25.1652, 1.2 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -16.5044, -246.144, 12.185, 0.96 ) }
    dend_45 { pt3dadd( -16.2154, -248.726, 11.4505, 0.96 ) }
    dend_45 { pt3dadd( -16.0511, -250.37, 10.9938, 1.32 ) }
    dend_45 { pt3dadd( -16.0426, -251.023, 10.8786, 1.32 ) }
    dend_45 { pt3dadd( -16.032, -251.834, 10.7356, 1.32 ) }
    dend_45 { pt3dadd( -16.0083, -253.656, 10.4143, 1.56 ) }
    dend_45 { pt3dadd( -15.9907, -255.007, 10.176, 1.56 ) }
    dend_45 { pt3dadd( -16.0014, -256.003, 10.0217, 1.56 ) }
    dend_45 { pt3dadd( -16.1213, -258.736, 9.89501, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_21 (entry count 74/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 33.6917, -302.556, -7.94548, 0.96 ) }
    dend_35 { pt3dadd( 33.4144, -304.024, -7.47971, 0.96 ) }
    dend_35 { pt3dadd( 33.1425, -305.345, -7.11205, 0.96 ) }
    dend_35 { pt3dadd( 32.826, -306.662, -6.75793, 1.44 ) }
    dend_35 { pt3dadd( 32.0874, -309.581, -5.94645, 1.08 ) }
    dend_35 { pt3dadd( 31.7565, -310.94, -5.5784, 1.08 ) }
    dend_35 { pt3dadd( 31.3164, -313.014, -5.03427, 1.08 ) }
    dend_35 { pt3dadd( 31.162, -313.988, -4.7649, 1.08 ) }
    dend_35 { pt3dadd( 30.8748, -316.503, -4.07792, 0.84 ) }
    dend_35 { pt3dadd( 30.7369, -318.57, -3.56129, 0.84 ) }
    dend_35 { pt3dadd( 30.7203, -319.875, -3.30607, 0.84 ) }
    dend_35 { pt3dadd( 30.7711, -321.345, -3.02069, 0.84 ) }
    dend_35 { pt3dadd( 30.8695, -322.718, -2.7657, 0.84 ) }
    dend_35 { pt3dadd( 30.9549, -323.843, -2.59731, 0.84 ) }
    dend_35 { pt3dadd( 31.0048, -324.639, -2.54132, 0.84 ) }
    dend_35 { pt3dadd( 31.0341, -325.552, -2.51974, 0.84 ) }
    dend_35 { pt3dadd( 30.9637, -326.767, -2.51569, 0.84 ) }
    dend_35 { pt3dadd( 30.7591, -327.826, -2.55638, 0.84 ) }
    dend_35 { pt3dadd( 30.4758, -328.723, -2.63731, 0.84 ) }
    dend_35 { pt3dadd( 29.8309, -330.287, -2.79998, 0.6 ) }
    dend_35 { pt3dadd( 27.671, -338.351, -3.0973, 0.6 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 95/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 33.6917, -302.556, -7.94548, 0.84 ) }
    dend_22 { pt3dadd( 33.911, -304.711, -8.11894, 0.84 ) }
    dend_22 { pt3dadd( 34.0586, -306.257, -8.28212, 0.84 ) }
    dend_22 { pt3dadd( 34.2104, -307.899, -8.51376, 0.84 ) }
    dend_22 { pt3dadd( 34.465, -311.291, -9.08204, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( 34.507, -312.082, -9.23111, 1.2 ) }
    dend_22 { pt3dadd( 34.6419, -315.599, -9.94711, 0.96 ) }
    dend_22 { pt3dadd( 34.7127, -318.552, -10.6348, 1.32 ) }
    dend_22 { pt3dadd( 34.8266, -322.297, -11.5149, 1.08 ) }
    dend_22 { pt3dadd( 34.9471, -324.406, -12.013, 1.08 ) }
    dend_22 { pt3dadd( 35.0695, -325.96, -12.3705, 1.08 ) }
    dend_22 { pt3dadd( 35.2246, -327.119, -12.6074, 1.08 ) }
    dend_22 { pt3dadd( 35.3642, -327.912, -12.7437, 1.08 ) }
    dend_22 { pt3dadd( 35.9946, -331.025, -13.2049, 0.84 ) }
    dend_22 { pt3dadd( 36.9472, -335.054, -13.69, 1.2 ) }
    dend_22 { pt3dadd( 37.2526, -336.19, -13.8045, 1.2 ) }
    dend_22 { pt3dadd( 38.9612, -342.078, -14.3196, 0.84 ) }
    dend_22 { pt3dadd( 39.9355, -345.396, -14.5931, 2.04 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.7389, 63.8139, 30.0898, 0.72 ) }
    dend_14 { pt3dadd( 11.0109, 62.3774, 29.7392, 0.72 ) }
    dend_14 { pt3dadd( 10.3829, 61.1383, 29.4368, 0.48 ) }
    dend_14 { pt3dadd( 9.62593, 59.6447, 29.0723, 0.96 ) }
    dend_14 { pt3dadd( 9.08927, 58.5858, 28.8138, 0.96 ) }
    dend_14 { pt3dadd( 3.59265, 48.7129, 25.1431, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 19/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 11.7389, 63.8139, 30.0898, 0.72 ) }
    dend_13 { pt3dadd( 12.1689, 62.3809, 30.2273, 0.72 ) }
    dend_13 { pt3dadd( 12.3894, 61.3723, 30.3394, 1.08 ) }
    dend_13 { pt3dadd( 12.7202, 59.6346, 30.4576, 0.72 ) }
    dend_13 { pt3dadd( 12.8718, 58.3795, 30.4536, 0.72 ) }
    dend_13 { pt3dadd( 12.9789, 56.5927, 30.3217, 0.72 ) }
    dend_13 { pt3dadd( 13.0744, 55.1272, 30.1623, 1.2 ) }
    dend_13 { pt3dadd( 13.0672, 54.4326, 30.0788, 1.2 ) }
    dend_13 { pt3dadd( 12.9646, 52.9252, 29.8709, 0.84 ) }
    dend_13 { pt3dadd( 12.7606, 51.0578, 29.5487, 0.84 ) }
    dend_13 { pt3dadd( 12.6186, 49.5417, 29.1102, 1.32 ) }
    dend_13 { pt3dadd( 12.5389, 48.5624, 28.68, 1.08 ) }
    dend_13 { pt3dadd( 11.8491, 39.1013, 27.4762, 1.08 ) }
    dend_13 { pt3dadd( 10.5686, 29.6658, 26.5701, 1.08 ) }
    dend_13 { pt3dadd( 9.02739, 20.5338, 24.0544, 1.08 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 49.3562, 133.605, 25.0969, 0.6 ) }
    dend_10 { pt3dadd( 50.2121, 134.854, 25.6036, 0.6 ) }
    dend_10 { pt3dadd( 51.0861, 136.129, 26.1209, 0.6 ) }
    dend_10 { pt3dadd( 52.2205, 137.784, 26.7924, 0.6 ) }
    dend_10 { pt3dadd( 54.053, 140.458, 27.8772, 0.6 ) }
    dend_10 { pt3dadd( 55.2416, 142.192, 28.5808, 0.6 ) }
    dend_10 { pt3dadd( 56.4509, 143.956, 29.2966, 0.48 ) }
    dend_10 { pt3dadd( 61.9594, 156.048, 31.2195, 0.48 ) }
    dend_10 { pt3dadd( 68.3719, 167.854, 31.9381, 0.48 ) }
    dend_10 { pt3dadd( 75.1967, 179.067, 35.1257, 0.48 ) }
    dend_10 { pt3dadd( 84.4009, 188.996, 36.5706, 0.48 ) }
    dend_10 { pt3dadd( 93.3134, 199.253, 36.7838, 0.48 ) }
    dend_10 { pt3dadd( 102.903, 208.824, 38.3969, 0.48 ) }
    dend_10 { pt3dadd( 110.174, 220.19, 38.2597, 0.48 ) }
    dend_10 { pt3dadd( 114.782, 232.51, 35.6825, 0.48 ) }
    dend_10 { pt3dadd( 117.713, 245.484, 34.7018, 0.48 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 49.3562, 133.605, 25.0969, 0.84 ) }
    dend_9 { pt3dadd( 50.8668, 136.316, 24.9691, 0.84 ) }
    dend_9 { pt3dadd( 51.7192, 137.846, 24.897, 0.84 ) }
    dend_9 { pt3dadd( 52.6278, 139.476, 24.8201, 0.36 ) }
    dend_9 { pt3dadd( 53.4912, 141.026, 24.7471, 0.6 ) }
    dend_9 { pt3dadd( 54.189, 142.278, 24.688, 0.6 ) }
    dend_9 { pt3dadd( 55.431, 144.507, 24.5829, 0.6 ) }
    dend_9 { pt3dadd( 61.2448, 153.609, 22.6475, 0.6 ) }
    dend_9 { pt3dadd( 66.5088, 162.802, 19.8183, 0.6 ) }
    dend_9 { pt3dadd( 73.0809, 171.123, 16.7465, 0.6 ) }
    dend_9 { pt3dadd( 79.0711, 179.751, 13.4325, 0.6 ) }
    dend_9 { pt3dadd( 83.0483, 188.859, 8.78283, 0.6 ) }
    dend_9 { pt3dadd( 86.8965, 198.812, 6.59548, 0.6 ) }
    dend_9 { pt3dadd( 91.7283, 208.537, 5.49386, 0.6 ) }
    dend_9 { pt3dadd( 96.2079, 218.432, 4.61256, 0.6 ) }
    dend_9 { pt3dadd( 98.9366, 228.65, 2.11596, 0.6 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 19.2809, 69.2627, 15.4049, 1.08 ) }
    dend_5 { pt3dadd( 18.4712, 71.1809, 15.7884, 1.08 ) }
    dend_5 { pt3dadd( 17.9494, 72.0966, 16.0623, 1.08 ) }
    dend_5 { pt3dadd( 17.1906, 73.428, 16.4605, 1.08 ) }
    dend_5 { pt3dadd( 16.3482, 74.9064, 16.9027, 0.96 ) }
    dend_5 { pt3dadd( 15.1274, 77.0488, 17.5435, 0.96 ) }
    dend_5 { pt3dadd( 14.1182, 78.8197, 18.0731, 0.84 ) }
    dend_5 { pt3dadd( 12.6558, 80.9363, 18.9304, 1.08 ) }
    dend_5 { pt3dadd( 6.17576, 89.8356, 20.1577, 1.08 ) }
    dend_5 { pt3dadd( 1.01904, 99.4232, 21.8335, 1.08 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 19.2809, 69.2627, 15.4049, 0.96 ) }
    dend_4 { pt3dadd( 20.5795, 70.081, 14.9924, 0.96 ) }
    dend_4 { pt3dadd( 21.1682, 70.4405, 14.7766, 0.96 ) }
    dend_4 { pt3dadd( 22.0958, 71.0295, 14.4097, 0.96 ) }
    dend_4 { pt3dadd( 23.1924, 71.7675, 13.8728, 0.84 ) }
    dend_4 { pt3dadd( 23.7678, 72.1635, 13.5685, 0.84 ) }
    dend_4 { pt3dadd( 24.6853, 72.7942, 13.0591, 0.84 ) }
    dend_4 { pt3dadd( 25.1107, 73.0656, 12.7953, 0.84 ) }
    dend_4 { pt3dadd( 25.7986, 73.4816, 12.3555, 0.84 ) }
    dend_4 { pt3dadd( 27.216, 74.2349, 11.4994, 1.2 ) }
    dend_4 { pt3dadd( 27.4879, 74.3552, 11.3643, 1.2 ) }
    dend_4 { pt3dadd( 28.2284, 74.6182, 11.0727, 1.2 ) }
    dend_4 { pt3dadd( 29.3773, 74.9177, 10.7535, 1.2 ) }
    dend_4 { pt3dadd( 29.7454, 74.9864, 10.6852, 1.2 ) }
    dend_4 { pt3dadd( 31.1914, 75.1909, 10.4871, 1.2 ) }
    dend_4 { pt3dadd( 32.3368, 75.3387, 10.3745, 0.96 ) }
    dend_4 { pt3dadd( 33.4719, 75.5059, 10.2644, 0.96 ) }
    dend_4 { pt3dadd( 34.7674, 75.6771, 10.1477, 0.96 ) }
    dend_4 { pt3dadd( 36.0529, 75.8429, 10.0326, 1.32 ) }
    dend_4 { pt3dadd( 37.9912, 76.11, 9.85292, 0.84 ) }
    dend_4 { pt3dadd( 39.6696, 76.3556, 9.68774, 1.2 ) }
    dend_4 { pt3dadd( 40.8447, 76.547, 9.62279, 1.2 ) }
    dend_4 { pt3dadd( 41.9837, 76.7705, 9.61615, 0.96 ) }
    dend_4 { pt3dadd( 42.9394, 76.9955, 9.67871, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( 43.651, 77.1754, 9.78447, 1.2 ) }
    dend_4 { pt3dadd( 44.1195, 77.3002, 9.89151, 1.2 ) }
    dend_4 { pt3dadd( 46.5062, 78.0186, 10.5827, 1.2 ) }
    dend_4 { pt3dadd( 47.4572, 78.3602, 10.8835, 1.2 ) }
    dend_4 { pt3dadd( 48.2563, 78.7078, 11.1451, 1.2 ) }
    dend_4 { pt3dadd( 49.8026, 79.3865, 11.6502, 1.08 ) }
    dend_4 { pt3dadd( 50.5024, 79.6669, 11.8607, 1.44 ) }
    dend_4 { pt3dadd( 51.836, 80.1079, 12.1062, 1.08 ) }
    dend_4 { pt3dadd( 52.8651, 80.3854, 12.1302, 1.08 ) }
    dend_4 { pt3dadd( 53.6499, 80.5941, 12.0758, 1.08 ) }
    dend_4 { pt3dadd( 54.9742, 80.9902, 11.8853, 1.08 ) }
    dend_4 { pt3dadd( 56.4379, 81.4474, 11.5797, 1.44 ) }
    dend_4 { pt3dadd( 58.709, 82.1631, 10.98, 1.08 ) }
    dend_4 { pt3dadd( 60.1914, 82.6802, 10.512, 0.84 ) }
    dend_4 { pt3dadd( 61.306, 83.139, 10.1398, 1.2 ) }
    dend_4 { pt3dadd( 62.4273, 83.6455, 9.75043, 1.2 ) }
    dend_4 { pt3dadd( 63.6751, 84.2943, 9.25886, 0.84 ) }
    dend_4 { pt3dadd( 64.5866, 84.8139, 8.8895, 1.08 ) }
    dend_4 { pt3dadd( 66.5443, 85.9245, 8.15783, 0.72 ) }
    dend_4 { pt3dadd( 68.4807, 86.9422, 7.41675, 0.72 ) }
    dend_4 { pt3dadd( 69.7135, 87.4861, 6.94825, 1.2 ) }
    dend_4 { pt3dadd( 71.5317, 88.2071, 6.26717, 0.72 ) }
    dend_4 { pt3dadd( 72.1726, 88.4456, 6.04248, 0.72 ) }
    dend_4 { pt3dadd( 73.5146, 88.9043, 5.62137, 0.96 ) }
    dend_4 { pt3dadd( 74.9311, 89.3431, 5.21929, 0.96 ) }
    dend_4 { pt3dadd( 77.4378, 90.1964, 4.60979, 0.72 ) }
    dend_4 { pt3dadd( 78.7265, 90.7388, 4.34902, 0.6 ) }
    dend_4 { pt3dadd( 79.7641, 91.2374, 4.1834, 0.6 ) }
    dend_4 { pt3dadd( 81.0973, 91.9933, 3.97545, 1.2 ) }
    dend_4 { pt3dadd( 81.4935, 92.2595, 3.91842, 1.2 ) }
    dend_4 { pt3dadd( 83.1114, 93.4495, 3.74263, 0.72 ) }
    dend_4 { pt3dadd( 83.8674, 94.0755, 3.67243, 0.72 ) }
    dend_4 { pt3dadd( 84.3961, 94.5027, 3.62548, 0.72 ) }
    dend_4 { pt3dadd( 85.6589, 95.5679, 3.46388, 0.6 ) }
    dend_4 { pt3dadd( 85.8662, 95.7421, 3.43319, 0.6 ) }
    dend_4 { pt3dadd( 86.9121, 96.6063, 3.20762, 0.96 ) }
    dend_4 { pt3dadd( 87.6147, 97.2032, 2.97634, 0.72 ) }
    dend_4 { pt3dadd( 88.0721, 97.6146, 2.79107, 0.96 ) }
    dend_4 { pt3dadd( 89.8378, 99.3002, 1.97576, 0.72 ) }
    dend_4 { pt3dadd( 90.8551, 100.311, 1.46017, 0.72 ) }
    dend_4 { pt3dadd( 92.2064, 101.64, 0.71618, 1.2 ) }
    dend_4 { pt3dadd( 93.6352, 102.989, -0.0363187, 0.72 ) }
    dend_4 { pt3dadd( 94.6172, 103.849, -0.499373, 0.72 ) }
    dend_4 { pt3dadd( 95.8384, 104.829, -1.0186, 0.72 ) }
    dend_4 { pt3dadd( 96.3177, 105.17, -1.182, 0.72 ) }
    dend_4 { pt3dadd( 97.8063, 106.164, -1.54733, 1.08 ) }
    dend_4 { pt3dadd( 99.5262, 107.21, -1.73653, 0.72 ) }
    dend_4 { pt3dadd( 100.765, 107.92, -1.7639, 1.08 ) }
    dend_4 { pt3dadd( 101.088, 108.106, -1.75389, 1.08 ) }
    dend_4 { pt3dadd( 102.447, 108.852, -1.69938, 0.72 ) }
    dend_4 { pt3dadd( 103.249, 109.3, -1.68678, 0.72 ) }
    dend_4 { pt3dadd( 104.752, 110.173, -1.72031, 1.08 ) }
    dend_4 { pt3dadd( 105.344, 110.511, -1.78149, 1.08 ) }
    dend_4 { pt3dadd( 106.519, 111.147, -1.93858, 0.84 ) }
    dend_4 { pt3dadd( 108.684, 112.265, -2.25829, 0.84 ) }
    dend_4 { pt3dadd( 110.519, 113.149, -2.51234, 0.6 ) }
    dend_4 { pt3dadd( 111.948, 113.749, -2.65333, 1.08 ) }
    dend_4 { pt3dadd( 112.634, 113.998, -2.68594, 1.08 ) }
    dend_4 { pt3dadd( 114.435, 114.612, -2.65409, 0.72 ) }
    dend_4 { pt3dadd( 115.334, 114.907, -2.57478, 0.72 ) }
    dend_4 { pt3dadd( 117.214, 115.545, -2.21821, 1.08 ) }
    dend_4 { pt3dadd( 118.854, 116.09, -1.78712, 0.84 ) }
    dend_4 { pt3dadd( 119.716, 116.39, -1.52757, 1.08 ) }
    dend_4 { pt3dadd( 121.007, 116.879, -1.12642, 0.84 ) }
    dend_4 { pt3dadd( 121.67, 117.134, -0.928468, 0.84 ) }
    dend_4 { pt3dadd( 123.378, 117.776, -0.492115, 0.6 ) }
    dend_4 { pt3dadd( 124.222, 118.056, -0.324074, 0.6 ) }
    dend_4 { pt3dadd( 125.515, 118.438, -0.128144, 0.96 ) }
    dend_4 { pt3dadd( 126.055, 118.547, -0.0675044, 0.96 ) }
    dend_4 { pt3dadd( 127.688, 118.696, 0.0796848, 0.72 ) }
    dend_4 { pt3dadd( 128.974, 118.733, 0.186866, 0.72 ) }
    dend_4 { pt3dadd( 130.02, 118.72, 0.220004, 0.72 ) }
    dend_4 { pt3dadd( 130.283, 118.725, 0.215515, 0.72 ) }
    dend_4 { pt3dadd( 131.234, 118.802, 0.118259, 0.72 ) }
    dend_4 { pt3dadd( 132.781, 119.022, -0.215567, 0.72 ) }
    dend_4 { pt3dadd( 133.214, 119.111, -0.376498, 0.72 ) }
    dend_4 { pt3dadd( 134.829, 119.485, -1.13405, 0.6 ) }
    dend_4 { pt3dadd( 135.715, 119.697, -1.60495, 0.96 ) }
    dend_4 { pt3dadd( 137.246, 120.004, -2.4412, 0.96 ) }
    dend_4 { pt3dadd( 138.223, 120.201, -3.01688, 0.96 ) }
    dend_4 { pt3dadd( 139.846, 120.485, -4.04707, 0.72 ) }
    dend_4 { pt3dadd( 141.315, 120.686, -4.98161, 0.72 ) }
    dend_4 { pt3dadd( 142.716, 120.787, -5.85457, 1.2 ) }
    dend_4 { pt3dadd( 144.035, 120.807, -6.65356, 1.2 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 84/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -33.2756, -286.401, 25.1652, 0.48 ) }
    dend_56 { pt3dadd( -33.432, -289.675, 25.4505, 0.48 ) }
    dend_56 { pt3dadd( -33.572, -292.608, 25.706, 0.48 ) }
    dend_56 { pt3dadd( -33.6919, -295.117, 25.9247, 0.84 ) }
    dend_56 { pt3dadd( -33.7955, -297.286, 26.1137, 0.84 ) }
    dend_56 { pt3dadd( -33.8956, -299.382, 26.2963, 0.6 ) }
    dend_56 { pt3dadd( -36.4892, -311.46, 25.7078, 0.6 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 91/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -33.2756, -286.401, 25.1652, 0.84 ) }
    dend_53 { pt3dadd( -32.5812, -288.812, 25.5671, 0.84 ) }
    dend_53 { pt3dadd( -32.0664, -290.776, 25.8814, 0.84 ) }
    dend_53 { pt3dadd( -31.6332, -292.696, 26.1671, 1.08 ) }
    dend_53 { pt3dadd( -31.1291, -295.087, 26.4776, 0.84 ) }
    dend_53 { pt3dadd( -30.7877, -296.743, 26.6769, 0.84 ) }
    dend_53 { pt3dadd( -30.4803, -298.308, 26.8494, 0.84 ) }
    dend_53 { pt3dadd( -30.3361, -299.191, 26.9364, 0.84 ) }
    dend_53 { pt3dadd( -29.9967, -301.937, 27.1396, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_53 { pt3dadd( -29.8737, -303.484, 27.2354, 1.32 ) }
    dend_53 { pt3dadd( -29.78, -306.304, 27.4103, 1.2 ) }
    dend_53 { pt3dadd( -29.7872, -307.946, 27.5163, 0.96 ) }
    dend_53 { pt3dadd( -29.834, -309.978, 27.6906, 1.32 ) }
    dend_53 { pt3dadd( -29.9081, -311.819, 27.8916, 1.32 ) }
    dend_53 { pt3dadd( -30.0547, -314.067, 28.2189, 1.08 ) }
    dend_53 { pt3dadd( -30.4571, -318.813, 28.9758, 1.08 ) }
    dend_53 { pt3dadd( -30.7142, -321.285, 29.4, 0.84 ) }
    dend_53 { pt3dadd( -30.9381, -323.392, 29.8002, 1.2 ) }
    dend_53 { pt3dadd( -31.179, -325.72, 30.2929, 1.08 ) }
    dend_53 { pt3dadd( -31.349, -327.6, 30.7335, 1.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 11/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -16.1213, -258.736, 9.89501, 0.96 ) }
    dend_51 { pt3dadd( -18.2184, -261.884, 10.1777, 0.96 ) }
    dend_51 { pt3dadd( -19.0289, -263.295, 10.4885, 0.96 ) }
    dend_51 { pt3dadd( -19.7758, -264.54, 10.7996, 0.96 ) }
    dend_51 { pt3dadd( -20.6703, -266.035, 11.168, 0.96 ) }
    dend_51 { pt3dadd( -21.6664, -267.639, 11.5776, 0.96 ) }
    dend_51 { pt3dadd( -23.7577, -271.183, 12.4979, 1.44 ) }
    dend_51 { pt3dadd( -25.389, -274.341, 13.4631, 0.96 ) }
    dend_51 { pt3dadd( -27.9793, -279.68, 15.2051, 1.44 ) }
    dend_51 { pt3dadd( -28.7557, -281.388, 15.7747, 0.96 ) }
    dend_51 { pt3dadd( -30.2445, -284.809, 16.9104, 1.56 ) }
    dend_51 { pt3dadd( -31.8886, -288.803, 18.1694, 1.2 ) }
    dend_51 { pt3dadd( -33.9275, -294.346, 19.7463, 0.96 ) }
    dend_51 { pt3dadd( -34.7233, -296.815, 20.3952, 1.44 ) }
    dend_51 { pt3dadd( -35.8243, -300.764, 21.3813, 0.96 ) }
    dend_51 { pt3dadd( -37.0186, -305.082, 22.3475, 1.32 ) }
    dend_51 { pt3dadd( -38.3139, -309.658, 23.1717, 0.96 ) }
    dend_51 { pt3dadd( -39.3739, -313.084, 23.6142, 0.96 ) }
    dend_51 { pt3dadd( -39.9688, -315.079, 23.7706, 0.96 ) }
    dend_51 { pt3dadd( -40.4289, -316.778, 23.8705, 0.96 ) }
    dend_51 { pt3dadd( -41.5718, -321.337, 24.064, 1.32 ) }
    dend_51 { pt3dadd( -42.5252, -325.37, 24.1863, 0.96 ) }
    dend_51 { pt3dadd( -43.7658, -331.135, 24.3697, 1.44 ) }
    dend_51 { pt3dadd( -44.5808, -335.352, 24.529, 0.84 ) }
    dend_51 { pt3dadd( -45.0591, -338.388, 24.7092, 1.2 ) }
    dend_51 { pt3dadd( -45.2643, -339.955, 24.8757, 1.2 ) }
    dend_51 { pt3dadd( -45.3631, -341.01, 25.0441, 0.84 ) }
    dend_51 { pt3dadd( -45.6866, -345.076, 25.9637, 1.2 ) }
    dend_51 { pt3dadd( -46.0355, -348.803, 27.055, 1.2 ) }
    dend_51 { pt3dadd( -46.4042, -351.313, 27.8884, 0.96 ) }
    dend_51 { pt3dadd( -47.206, -355.436, 29.3174, 0.96 ) }
    dend_51 { pt3dadd( -48.156, -359.262, 30.5577, 1.32 ) }
    dend_51 { pt3dadd( -49.1449, -362.414, 31.535, 1.68 ) }
    dend_51 { pt3dadd( -50.4637, -365.657, 32.4698, 1.2 ) }
    dend_51 { pt3dadd( -52.548, -369.702, 33.509, 0.96 ) }
    dend_51 { pt3dadd( -54.812, -373.185, 34.1628, 0.96 ) }
    dend_51 { pt3dadd( -57.3832, -376.14, 34.4181, 0.84 ) }
    dend_51 { pt3dadd( -59.3308, -377.596, 34.3509, 0.84 ) }
    dend_51 { pt3dadd( -61.5371, -378.237, 33.937, 0.84 ) }
    dend_51 { pt3dadd( -63.4652, -377.122, 33.2621, 0.84 ) }
    dend_51 { pt3dadd( -64.433, -376.07, 32.8502, 0.84 ) }
    dend_51 { pt3dadd( -65.2718, -374.771, 32.4626, 0.84 ) }
    dend_51 { pt3dadd( -65.9862, -373.136, 32.1585, 1.08 ) }
    dend_51 { pt3dadd( -66.684, -370.877, 31.8407, 0.84 ) }
    dend_51 { pt3dadd( -67.037, -368.995, 31.7252, 0.6 ) }
    dend_51 { pt3dadd( -69.7873, -381.845, 34.3843, 0.6 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -16.1213, -258.736, 9.89501, 1.08 ) }
    dend_46 { pt3dadd( -16.1588, -262.369, 10.1551, 1.08 ) }
    dend_46 { pt3dadd( -16.1922, -266.308, 10.4056, 1.44 ) }
    dend_46 { pt3dadd( -16.2412, -268.074, 10.5114, 0.84 ) }
    dend_46 { pt3dadd( -16.3357, -270.639, 10.6515, 1.32 ) }
    dend_46 { pt3dadd( -16.4035, -272.383, 10.7401, 1.32 ) }
    dend_46 { pt3dadd( -16.5354, -275.402, 10.838, 1.32 ) }
    dend_46 { pt3dadd( -16.6723, -277.339, 10.8584, 1.32 ) }
    dend_46 { pt3dadd( -16.8149, -279.453, 10.8632, 1.32 ) }
    dend_46 { pt3dadd( -17.1585, -283.351, 10.8688, 1.44 ) }
    dend_46 { pt3dadd( -17.3445, -285.263, 10.8718, 1.44 ) }
    dend_46 { pt3dadd( -17.9784, -291.277, 10.8922, 1.44 ) }
    dend_46 { pt3dadd( -18.1567, -292.778, 10.9019, 1.44 ) }
    dend_46 { pt3dadd( -18.4672, -295.374, 10.9262, 1.08 ) }
    dend_46 { pt3dadd( -19.0015, -300.566, 10.9856, 1.08 ) }
    dend_46 { pt3dadd( -19.2737, -303.235, 11.0313, 0.84 ) }
    dend_46 { pt3dadd( -19.5699, -306.315, 11.1229, 1.32 ) }
    dend_46 { pt3dadd( -19.7491, -308.755, 11.2286, 1.32 ) }
    dend_46 { pt3dadd( -19.962, -312.547, 11.4008, 0.96 ) }
    dend_46 { pt3dadd( -20.0357, -314.522, 11.5068, 1.44 ) }
    dend_46 { pt3dadd( -20.1221, -317.42, 11.5953, 1.44 ) }
    dend_46 { pt3dadd( -20.2889, -320.484, 11.6352, 1.2 ) }
    dend_46 { pt3dadd( -20.5604, -323.539, 11.6282, 1.08 ) }
    dend_46 { pt3dadd( -20.8353, -325.967, 11.5894, 1.08 ) }
    dend_46 { pt3dadd( -21.1778, -328.251, 11.5321, 1.68 ) }
    dend_46 { pt3dadd( -21.7697, -331.863, 11.4213, 1.2 ) }
    dend_46 { pt3dadd( -22.0036, -333.356, 11.3689, 1.2 ) }
    dend_46 { pt3dadd( -22.4256, -336.347, 11.2632, 1.44 ) }
    dend_46 { pt3dadd( -22.7484, -338.974, 11.1662, 1.44 ) }
    dend_46 { pt3dadd( -23.0454, -342.22, 11.0579, 1.44 ) }
    dend_46 { pt3dadd( -23.2245, -345.024, 10.9947, 1.44 ) }
    dend_46 { pt3dadd( -23.3049, -348.244, 10.9935, 1.8 ) }
    dend_46 { pt3dadd( -23.3525, -351.587, 10.978, 1.32 ) }
    dend_46 { pt3dadd( -23.3639, -353.546, 10.9624, 1.08 ) }
    dend_46 { pt3dadd( -23.4022, -356.288, 10.9368, 1.56 ) }
    dend_46 { pt3dadd( -23.4541, -359.462, 10.8905, 1.56 ) }
    dend_46 { pt3dadd( -23.489, -361.23, 10.8601, 1.56 ) }
    dend_46 { pt3dadd( -23.5295, -362.86, 10.8334, 1.56 ) }
    dend_46 { pt3dadd( -23.606, -365.346, 10.8072, 1.56 ) }
    dend_46 { pt3dadd( -23.6489, -367.448, 10.8061, 1.56 ) }
    dend_46 { pt3dadd( -23.6452, -369.876, 10.7947, 1.32 ) }
    dend_46 { pt3dadd( -23.6327, -370.972, 10.7892, 1.32 ) }
    dend_46 { pt3dadd( -23.678, -372.588, 10.7796, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( -23.7558, -374.369, 10.7696, 1.32 ) }
    dend_46 { pt3dadd( -23.8812, -377.014, 10.7125, 1.32 ) }
    dend_46 { pt3dadd( -23.979, -378.997, 10.6705, 1.32 ) }
    dend_46 { pt3dadd( -24.1322, -381.324, 10.6259, 1.68 ) }
    dend_46 { pt3dadd( -24.6475, -387.387, 10.4908, 1.32 ) }
    dend_46 { pt3dadd( -24.845, -389.287, 10.4383, 1.32 ) }
    dend_46 { pt3dadd( -25.1111, -391.463, 10.3608, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 39.9355, -345.396, -14.5931, 0.96 ) }
    dend_30 { pt3dadd( 42.2894, -346.727, -12.7781, 0.96 ) }
    dend_30 { pt3dadd( 43.4717, -347.375, -11.8712, 1.32 ) }
    dend_30 { pt3dadd( 45.9213, -348.738, -10.0043, 0.96 ) }
    dend_30 { pt3dadd( 47.7446, -349.813, -8.59454, 1.32 ) }
    dend_30 { pt3dadd( 50.0775, -351.258, -6.88493, 1.2 ) }
    dend_30 { pt3dadd( 51.277, -351.96, -6.0503, 1.2 ) }
    dend_30 { pt3dadd( 52.4569, -352.612, -5.28276, 1.2 ) }
    dend_30 { pt3dadd( 53.2745, -353.083, -4.75373, 1.2 ) }
    dend_30 { pt3dadd( 54.228, -353.639, -4.18747, 1.2 ) }
    dend_30 { pt3dadd( 57.0813, -355.177, -2.69331, 0.96 ) }
    dend_30 { pt3dadd( 59.1506, -356.188, -1.82284, 1.32 ) }
    dend_30 { pt3dadd( 60.3818, -356.727, -1.35187, 1.32 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 39.9355, -345.396, -14.5931, 1.08 ) }
    dend_23 { pt3dadd( 40.3075, -348.583, -14.5389, 1.08 ) }
    dend_23 { pt3dadd( 40.5747, -351.468, -14.5106, 0.72 ) }
    dend_23 { pt3dadd( 40.7109, -352.883, -14.5566, 0.72 ) }
    dend_23 { pt3dadd( 41.0235, -356.301, -14.7465, 1.2 ) }
    dend_23 { pt3dadd( 41.2718, -359.085, -14.9313, 0.84 ) }
    dend_23 { pt3dadd( 41.4072, -360.768, -15.051, 0.84 ) }
    dend_23 { pt3dadd( 41.51, -361.999, -15.1654, 0.84 ) }
    dend_23 { pt3dadd( 41.775, -365.225, -15.4739, 0.6 ) }
    dend_23 { pt3dadd( 41.9364, -367.019, -15.6348, 0.6 ) }
    dend_23 { pt3dadd( 42.2201, -369.408, -15.826, 1.2 ) }
    dend_23 { pt3dadd( 42.6109, -372.127, -16.057, 1.2 ) }
    dend_23 { pt3dadd( 42.984, -374.413, -16.2474, 0.84 ) }
    dend_23 { pt3dadd( 43.3005, -376.314, -16.3934, 0.84 ) }
    dend_23 { pt3dadd( 43.7781, -379.334, -16.6185, 1.08 ) }
    dend_23 { pt3dadd( 44.1896, -381.948, -16.8719, 0.72 ) }
    dend_23 { pt3dadd( 44.5482, -384.264, -17.166, 1.08 ) }
    dend_23 { pt3dadd( 44.7973, -385.858, -17.4075, 1.08 ) }
    dend_23 { pt3dadd( 45.0065, -387.352, -17.6637, 1.08 ) }
    dend_23 { pt3dadd( 45.3124, -390.038, -18.1554, 0.72 ) }
    dend_23 { pt3dadd( 45.4853, -391.771, -18.4803, 0.72 ) }
    dend_23 { pt3dadd( 45.5908, -393.444, -18.715, 1.08 ) }
    dend_23 { pt3dadd( 45.6308, -394.718, -18.8089, 1.08 ) }
    dend_23 { pt3dadd( 45.6507, -395.582, -18.8208, 1.08 ) }
    dend_23 { pt3dadd( 45.6594, -397.969, -18.8307, 0.72 ) }
    dend_23 { pt3dadd( 45.6456, -399.303, -18.8405, 0.72 ) }
    dend_23 { pt3dadd( 45.6101, -402.269, -18.925, 1.2 ) }
    dend_23 { pt3dadd( 45.5939, -405.23, -19.0625, 1.2 ) }
    dend_23 { pt3dadd( 45.6102, -409.112, -19.3315, 1.2 ) }
    dend_23 { pt3dadd( 45.6797, -412.846, -19.6825, 0.84 ) }
    dend_23 { pt3dadd( 45.7124, -414.319, -19.8636, 1.32 ) }
    dend_23 { pt3dadd( 45.7415, -415.948, -20.1179, 1.32 ) }
    dend_23 { pt3dadd( 45.7667, -416.704, -20.2719, 1.32 ) }
    dend_23 { pt3dadd( 45.8263, -418.383, -20.6554, 0.96 ) }
    dend_23 { pt3dadd( 45.8679, -419.881, -20.9983, 1.56 ) }
    dend_23 { pt3dadd( 45.9418, -421.439, -21.3071, 1.56 ) }
    dend_23 { pt3dadd( 46.0264, -422.753, -21.5538, 1.08 ) }
    dend_23 { pt3dadd( 46.097, -424.029, -21.787, 1.08 ) }
    dend_23 { pt3dadd( 46.271, -426.636, -22.2932, 0.84 ) }
    dend_23 { pt3dadd( 46.4013, -427.85, -22.5341, 1.44 ) }
    dend_23 { pt3dadd( 46.7509, -430.099, -23.0012, 1.08 ) }
    dend_23 { pt3dadd( 47.0523, -431.492, -23.3122, 1.08 ) }
    dend_23 { pt3dadd( 47.573, -433.702, -23.8151, 0.72 ) }
    dend_23 { pt3dadd( 48.1767, -436.345, -24.4061, 1.08 ) }
    dend_23 { pt3dadd( 48.5162, -437.725, -24.7639, 1.08 ) }
    dend_23 { pt3dadd( 48.9187, -439.289, -25.2019, 0.96 ) }
    dend_23 { pt3dadd( 49.5918, -441.943, -25.9435, 0.72 ) }
    dend_23 { pt3dadd( 49.9477, -443.265, -26.3556, 0.72 ) }
    dend_23 { pt3dadd( 50.2383, -444.2, -26.6882, 0.72 ) }
    dend_23 { pt3dadd( 51.0853, -446.97, -27.7958, 0.72 ) }
    dend_23 { pt3dadd( 51.3712, -448.063, -28.2795, 0.72 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.59265, 48.7129, 25.1431, 0.6 ) }
    dend_16 { pt3dadd( -0.403796, 40.8228, 22.9685, 0.6 ) }
    dend_16 { pt3dadd( -4.27213, 32.6498, 22.131, 0.6 ) }
    dend_16 { pt3dadd( -7.52093, 24.4354, 20.0434, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.59265, 48.7129, 25.1431, 0.84 ) }
    dend_15 { pt3dadd( 0.215161, 43.2413, 22.6789, 0.6 ) }
    dend_15 { pt3dadd( -4.55593, 38.4357, 21.1625, 0.6 ) }
    dend_15 { pt3dadd( -9.17123, 33.3768, 20.1654, 0.6 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 79/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 1.01904, 99.4232, 21.8335, 0.6 ) }
    dend_7 { pt3dadd( -3.55378, 106.57, 24.827, 0.6 ) }
    dend_7 { pt3dadd( -9.52344, 112.65, 27.9719, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 82/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.01904, 99.4232, 21.8335, 0.84 ) }
    dend_6 { pt3dadd( -4.25728, 108.515, 22.3974, 0.6 ) }
    dend_6 { pt3dadd( -7.92257, 118.31, 22.3003, 0.6 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -31.349, -327.6, 30.7335, 0.6 ) }
    dend_55 { pt3dadd( -32.0262, -327.115, 32.3811, 0.6 ) }
    dend_55 { pt3dadd( -32.8691, -326.51, 34.4316, 0.6 ) }
    dend_55 { pt3dadd( -33.2651, -326.227, 35.395, 0.6 ) }
    dend_55 { pt3dadd( -33.7405, -325.886, 36.5513, 0.96 ) }
    dend_55 { pt3dadd( -37.983, -322.185, 44.651, 0.96 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 91/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -31.349, -327.6, 30.7335, 0.96 ) }
    dend_54 { pt3dadd( -31.8456, -329.107, 30.9837, 0.96 ) }
    dend_54 { pt3dadd( -32.3326, -330.584, 31.2291, 0.72 ) }
    dend_54 { pt3dadd( -33.1282, -332.997, 31.6299, 0.72 ) }
    dend_54 { pt3dadd( -36.7157, -343.701, 35.736, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -25.1111, -391.463, 10.3608, 0.84 ) }
    dend_50 { pt3dadd( -24.0747, -393.956, 8.9468, 0.84 ) }
    dend_50 { pt3dadd( -22.9543, -396.229, 7.54444, 0.84 ) }
    dend_50 { pt3dadd( -22.6778, -396.847, 7.14848, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_50 { pt3dadd( -22.0618, -398.445, 6.09229, 0.84 ) }
    dend_50 { pt3dadd( -21.3536, -400.577, 4.71633, 0.6 ) }
    dend_50 { pt3dadd( -20.7726, -402.475, 3.5296, 1.08 ) }
    dend_50 { pt3dadd( -20.3913, -403.923, 2.65888, 1.08 ) }
    dend_50 { pt3dadd( -19.804, -406.137, 1.33911, 0.72 ) }
    dend_50 { pt3dadd( -19.3198, -408.04, 0.283259, 0.72 ) }
    dend_50 { pt3dadd( -19.0799, -409.193, -0.357128, 0.72 ) }
    dend_50 { pt3dadd( -18.9074, -410.142, -0.958111, 0.72 ) }
    dend_50 { pt3dadd( -18.7595, -411.157, -1.61491, 1.2 ) }
    dend_50 { pt3dadd( -18.3754, -413.671, -3.19583, 0.84 ) }
    dend_50 { pt3dadd( -17.771, -416.879, -5.14636, 1.08 ) }
    dend_50 { pt3dadd( -17.071, -420.45, -7.24176, 1.08 ) }
    dend_50 { pt3dadd( -16.3951, -424.044, -9.32341, 0.84 ) }
    dend_50 { pt3dadd( -16.1214, -425.633, -10.1961, 0.84 ) }
    dend_50 { pt3dadd( -15.7956, -427.539, -11.1905, 1.32 ) }
    dend_50 { pt3dadd( -15.3695, -429.992, -12.3459, 0.84 ) }
    dend_50 { pt3dadd( -15.1857, -430.89, -12.7426, 0.84 ) }
    dend_50 { pt3dadd( -14.8111, -432.391, -13.3047, 1.32 ) }
    dend_50 { pt3dadd( -14.221, -434.703, -14.1661, 0.84 ) }
    dend_50 { pt3dadd( -13.8309, -436.255, -14.9112, 1.44 ) }
    dend_50 { pt3dadd( -13.2667, -438.933, -16.448, 1.2 ) }
    dend_50 { pt3dadd( -13.0525, -440.123, -17.2247, 1.2 ) }
    dend_50 { pt3dadd( -12.7936, -441.69, -18.283, 1.44 ) }
    dend_50 { pt3dadd( -12.4856, -443.716, -19.6813, 1.08 ) }
    dend_50 { pt3dadd( -11.9912, -447.404, -22.209, 0.84 ) }
    dend_50 { pt3dadd( -11.7507, -449.375, -23.5116, 1.44 ) }
    dend_50 { pt3dadd( -11.5501, -451.44, -24.8004, 0.96 ) }
    dend_50 { pt3dadd( -11.4608, -452.969, -25.6433, 0.96 ) }
    dend_50 { pt3dadd( -11.4278, -454.172, -26.2007, 1.44 ) }
    dend_50 { pt3dadd( -11.5027, -456.915, -27.2344, 0.96 ) }
    dend_50 { pt3dadd( -11.5561, -457.649, -27.4608, 0.96 ) }
    dend_50 { pt3dadd( -11.8112, -460.435, -28.2487, 1.44 ) }
    dend_50 { pt3dadd( -12.131, -463.402, -29.1036, 0.84 ) }
    dend_50 { pt3dadd( -12.5829, -466.756, -30.2414, 1.44 ) }
    dend_50 { pt3dadd( -13.1277, -470.226, -31.529, 0.84 ) }
    dend_50 { pt3dadd( -13.3141, -471.228, -31.9382, 0.84 ) }
    dend_50 { pt3dadd( -13.8217, -473.884, -33.1431, 1.44 ) }
    dend_50 { pt3dadd( -14.5022, -477.592, -34.9714, 1.44 ) }
    dend_50 { pt3dadd( -15.2867, -481.658, -37.0269, 1.08 ) }
    dend_50 { pt3dadd( -15.7064, -483.827, -38.173, 0.72 ) }
    dend_50 { pt3dadd( -16.1267, -486.033, -39.3966, 1.32 ) }
    dend_50 { pt3dadd( -16.5434, -487.983, -40.5048, 0.72 ) }
    dend_50 { pt3dadd( -16.8043, -488.966, -41.0632, 0.72 ) }
    dend_50 { pt3dadd( -17.6223, -491.593, -42.4874, 1.32 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 44/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -25.1111, -391.463, 10.3608, 1.08 ) }
    dend_47 { pt3dadd( -25.7075, -394.204, 10.3824, 1.08 ) }
    dend_47 { pt3dadd( -26.0072, -396.024, 10.4002, 1.08 ) }
    dend_47 { pt3dadd( -26.1876, -397.335, 10.4743, 1.08 ) }
    dend_47 { pt3dadd( -26.6245, -399.802, 10.4829, 1.08 ) }
    dend_47 { pt3dadd( -27.2146, -402.786, 10.324, 1.44 ) }
    dend_47 { pt3dadd( -27.786, -405.664, 10.0798, 0.96 ) }
    dend_47 { pt3dadd( -28.2104, -408.052, 9.797, 0.96 ) }
    dend_47 { pt3dadd( -28.6045, -410.385, 9.42185, 0.96 ) }
    dend_47 { pt3dadd( -29.2826, -414.792, 8.72396, 0.96 ) }
    dend_47 { pt3dadd( -29.6565, -417.675, 8.3116, 0.84 ) }
    dend_47 { pt3dadd( -29.8277, -419.376, 8.10202, 1.44 ) }
    dend_47 { pt3dadd( -30.0723, -422.001, 7.85016, 1.08 ) }
    dend_47 { pt3dadd( -30.2114, -424.107, 7.69942, 1.08 ) }
    dend_47 { pt3dadd( -30.3412, -427.234, 7.54374, 1.56 ) }
    dend_47 { pt3dadd( -30.39, -432.1, 7.53408, 1.32 ) }
    dend_47 { pt3dadd( -30.4247, -434.523, 7.55086, 0.96 ) }
    dend_47 { pt3dadd( -30.4921, -436.934, 7.55951, 1.32 ) }
    dend_47 { pt3dadd( -30.6391, -441.428, 7.54935, 1.08 ) }
    dend_47 { pt3dadd( -30.756, -444.261, 7.49449, 0.72 ) }
    dend_47 { pt3dadd( -30.9097, -446.747, 7.40754, 1.32 ) }
    dend_47 { pt3dadd( -31.1364, -450.219, 7.31367, 1.08 ) }
    dend_47 { pt3dadd( -31.3184, -452.984, 7.27448, 1.56 ) }
    dend_47 { pt3dadd( -31.5109, -456.154, 7.2724, 0.84 ) }
    dend_47 { pt3dadd( -31.7459, -460.017, 7.2853, 0.6 ) }
    dend_47 { pt3dadd( -31.8432, -461.682, 7.29107, 1.08 ) }
    dend_47 { pt3dadd( -32.0589, -465.218, 7.30611, 1.2 ) }
    dend_47 { pt3dadd( -32.234, -468.389, 7.31603, 0.72 ) }
    dend_47 { pt3dadd( -32.2856, -469.446, 7.31018, 0.72 ) }
    dend_47 { pt3dadd( -32.5304, -474.509, 7.23639, 1.32 ) }
    dend_47 { pt3dadd( -32.5528, -475.438, 7.20197, 1.32 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 60.3818, -356.727, -1.35187, 0.96 ) }
    dend_34 { pt3dadd( 62.4224, -355.339, -1.52599, 0.96 ) }
    dend_34 { pt3dadd( 63.2432, -354.781, -1.59602, 0.96 ) }
    dend_34 { pt3dadd( 64.243, -354.101, -1.68135, 0.84 ) }
    dend_34 { pt3dadd( 66.6486, -352.465, -1.88661, 0.84 ) }
    dend_34 { pt3dadd( 68.1052, -351.474, -2.0109, 1.08 ) }
    dend_34 { pt3dadd( 69.3751, -350.61, -2.11926, 1.08 ) }
    dend_34 { pt3dadd( 77.8897, -343.915, -2.7806, 1.08 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 60.3818, -356.727, -1.35187, 0.6 ) }
    dend_31 { pt3dadd( 61.6715, -358.163, -0.664815, 0.6 ) }
    dend_31 { pt3dadd( 63.2619, -359.998, 0.382205, 1.08 ) }
    dend_31 { pt3dadd( 64.8911, -362.04, 1.57648, 0.96 ) }
    dend_31 { pt3dadd( 65.7983, -363.189, 2.2408, 0.96 ) }
    dend_31 { pt3dadd( 66.7442, -364.387, 2.93347, 1.32 ) }
    dend_31 { pt3dadd( 68.4735, -366.578, 4.19976, 1.08 ) }
    dend_31 { pt3dadd( 69.1829, -367.52, 4.80496, 1.08 ) }
    dend_31 { pt3dadd( 70.5522, -369.397, 6.14916, 1.08 ) }
    dend_31 { pt3dadd( 71.7842, -371.164, 7.38669, 0.84 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 51.3712, -448.063, -28.2795, 0.72 ) }
    dend_27 { pt3dadd( 51.2241, -449.567, -28.6524, 0.72 ) }
    dend_27 { pt3dadd( 51.1199, -451.004, -28.9668, 0.72 ) }
    dend_27 { pt3dadd( 50.9613, -452.973, -29.4043, 0.72 ) }
    dend_27 { pt3dadd( 50.8245, -454.279, -29.6767, 0.72 ) }
    dend_27 { pt3dadd( 50.7641, -454.878, -29.8024, 0.72 ) }
    dend_27 { pt3dadd( 50.5896, -456.944, -30.2294, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( 50.484, -458.028, -30.4263, 0.6 ) }
    dend_27 { pt3dadd( 50.3827, -458.972, -30.5833, 0.6 ) }
    dend_27 { pt3dadd( 50.1946, -460.601, -30.8119, 0.48 ) }
    dend_27 { pt3dadd( 50.076, -461.519, -30.9531, 0.48 ) }
    dend_27 { pt3dadd( 49.7905, -463.46, -31.2697, 0.84 ) }
    dend_27 { pt3dadd( 49.3546, -465.652, -31.649, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 51.3712, -448.063, -28.2795, 0.72 ) }
    dend_24 { pt3dadd( 52.1624, -449.735, -28.3067, 0.72 ) }
    dend_24 { pt3dadd( 53.2762, -452.089, -28.345, 1.2 ) }
    dend_24 { pt3dadd( 53.6467, -452.872, -28.3577, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 10/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -32.5528, -475.438, 7.20197, 0.48 ) }
    dend_49 { pt3dadd( -35.1084, -477.01, 8.73225, 0.48 ) }
    dend_49 { pt3dadd( -35.5749, -477.261, 8.99961, 0.48 ) }
    dend_49 { pt3dadd( -37.0717, -478.169, 9.84222, 0.48 ) }
    dend_49 { pt3dadd( -38.6863, -479.395, 10.9284, 0.48 ) }
    dend_49 { pt3dadd( -39.3731, -480.007, 11.4677, 0.48 ) }
    dend_49 { pt3dadd( -41.1602, -481.68, 12.9599, 0.96 ) }
    dend_49 { pt3dadd( -43.199, -483.689, 14.8174, 0.6 ) }
    dend_49 { pt3dadd( -44.6973, -485.293, 16.2692, 0.6 ) }
    dend_49 { pt3dadd( -46.8818, -487.794, 18.5233, 1.08 ) }
    dend_49 { pt3dadd( -48.4078, -489.648, 20.2088, 0.84 ) }
    dend_49 { pt3dadd( -49.3425, -490.901, 21.3272, 0.84 ) }
    dend_49 { pt3dadd( -50.3647, -492.554, 22.7349, 1.2 ) }
    dend_49 { pt3dadd( -51.4119, -494.386, 24.369, 0.84 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 24/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -32.5528, -475.438, 7.20197, 0.84 ) }
    dend_48 { pt3dadd( -32.7262, -478.149, 6.76871, 0.84 ) }
    dend_48 { pt3dadd( -32.8785, -479.429, 6.6353, 0.84 ) }
    dend_48 { pt3dadd( -33.0186, -480.561, 6.54428, 0.84 ) }
    dend_48 { pt3dadd( -33.3815, -483.44, 6.3098, 0.84 ) }
    dend_48 { pt3dadd( -33.5111, -484.508, 6.22278, 0.84 ) }
    dend_48 { pt3dadd( -33.8049, -486.994, 6.02908, 1.44 ) }
    dend_48 { pt3dadd( -34.041, -488.829, 5.88598, 1.08 ) }
    dend_48 { pt3dadd( -34.3111, -490.917, 5.76241, 1.08 ) }
    dend_48 { pt3dadd( -34.5603, -492.902, 5.69664, 0.84 ) }
    dend_48 { pt3dadd( -34.6858, -494.149, 5.68775, 0.84 ) }
    dend_48 { pt3dadd( -34.7496, -495.255, 5.66217, 1.08 ) }
    dend_48 { pt3dadd( -34.7431, -496.735, 5.56096, 0.6 ) }
    dend_48 { pt3dadd( -34.6846, -497.93, 5.44921, 0.6 ) }
    dend_48 { pt3dadd( -34.5967, -499.181, 5.35109, 0.6 ) }
    dend_48 { pt3dadd( -34.4743, -500.835, 5.19259, 1.2 ) }
    dend_48 { pt3dadd( -34.3629, -502.493, 4.9868, 1.2 ) }
    dend_48 { pt3dadd( -34.3115, -503.642, 4.83859, 1.2 ) }
    dend_48 { pt3dadd( -34.2866, -504.937, 4.67874, 0.96 ) }
    dend_48 { pt3dadd( -34.2819, -505.797, 4.57817, 1.44 ) }
    dend_48 { pt3dadd( -34.3152, -507.499, 4.41691, 1.44 ) }
    dend_48 { pt3dadd( -34.423, -509.92, 4.246, 0.96 ) }
    dend_48 { pt3dadd( -34.5786, -512.584, 4.10721, 1.32 ) }
    dend_48 { pt3dadd( -34.6405, -513.689, 4.0565, 1.32 ) }
    dend_48 { pt3dadd( -34.7725, -516.165, 3.96225, 0.84 ) }
    dend_48 { pt3dadd( -34.8944, -518.199, 3.91399, 1.32 ) }
    dend_48 { pt3dadd( -34.953, -519.305, 3.9105, 1.32 ) }
    dend_48 { pt3dadd( -35.0469, -520.604, 3.89479, 1.32 ) }
    dend_48 { pt3dadd( -35.2586, -523.116, 3.84153, 1.32 ) }
    dend_48 { pt3dadd( -35.4276, -524.768, 3.81182, 0.96 ) }
    dend_48 { pt3dadd( -35.5864, -526.086, 3.79508, 0.96 ) }
    dend_48 { pt3dadd( -35.9352, -529.051, 3.72719, 1.44 ) }
    dend_48 { pt3dadd( -36.1615, -530.869, 3.66641, 1.08 ) }
    dend_48 { pt3dadd( -36.378, -532.327, 3.62238, 1.08 ) }
    dend_48 { pt3dadd( -36.6364, -533.784, 3.56329, 1.08 ) }
    dend_48 { pt3dadd( -36.9436, -535.567, 3.46105, 1.08 ) }
    dend_48 { pt3dadd( -37.263, -537.481, 3.33572, 1.08 ) }
    dend_48 { pt3dadd( -37.7443, -540.187, 3.13881, 1.08 ) }
    dend_48 { pt3dadd( -38.4567, -544.205, 2.79767, 0.96 ) }
    dend_48 { pt3dadd( -39.5829, -550.372, 2.24535, 1.32 ) }
    dend_48 { pt3dadd( -39.9612, -552.401, 2.05508, 0.84 ) }
    dend_48 { pt3dadd( -40.1909, -553.608, 1.94258, 0.84 ) }
    dend_48 { pt3dadd( -40.5071, -555.251, 1.80139, 0.84 ) }
    dend_48 { pt3dadd( -40.7403, -556.506, 1.70973, 0.84 ) }
    dend_48 { pt3dadd( -41.163, -558.975, 1.56135, 0.84 ) }
    dend_48 { pt3dadd( -41.3769, -560.202, 1.53755, 0.84 ) }
    dend_48 { pt3dadd( -41.5705, -561.217, 1.54648, 0.84 ) }
    dend_48 { pt3dadd( -41.7751, -562.278, 1.58615, 1.2 ) }
    dend_48 { pt3dadd( -42.131, -564.275, 1.6824, 0.72 ) }
    dend_48 { pt3dadd( -42.4376, -565.826, 1.78938, 1.32 ) }
    dend_48 { pt3dadd( -42.7225, -567.056, 1.8453, 0.84 ) }
    dend_48 { pt3dadd( -43.0799, -568.489, 1.91098, 1.56 ) }
    dend_48 { pt3dadd( -44.0601, -571.972, 2.04119, 0.84 ) }
    dend_48 { pt3dadd( -44.4644, -573.263, 2.09115, 1.32 ) }
    dend_48 { pt3dadd( -45.2756, -575.582, 2.20717, 0.84 ) }
    dend_48 { pt3dadd( -46.5497, -579.019, 2.41762, 0.6 ) }
    dend_48 { pt3dadd( -46.9303, -580.038, 2.48641, 1.08 ) }
    dend_48 { pt3dadd( -47.6423, -581.951, 2.63137, 0.84 ) }
    dend_48 { pt3dadd( -48.2505, -583.539, 2.757, 1.44 ) }
    dend_48 { pt3dadd( -48.892, -585.197, 2.91349, 0.96 ) }
    dend_48 { pt3dadd( -49.3886, -586.569, 3.04416, 0.72 ) }
    dend_48 { pt3dadd( -49.8265, -587.89, 3.24505, 0.72 ) }
    dend_48 { pt3dadd( -50.6104, -590.369, 3.59284, 1.32 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 71.7842, -371.164, 7.38669, 0.84 ) }
    dend_33 { pt3dadd( 74.1377, -370.591, 7.65437, 0.84 ) }
    dend_33 { pt3dadd( 75.171, -370.339, 7.77189, 0.84 ) }
    dend_33 { pt3dadd( 77.6024, -369.747, 8.04842, 0.72 ) }
    dend_33 { pt3dadd( 79.1383, -369.373, 8.22311, 0.72 ) }
    dend_33 { pt3dadd( 88.6425, -368.47, 8.43624, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 71.7842, -371.164, 7.38669, 0.72 ) }
    dend_32 { pt3dadd( 73.111, -373.063, 7.92309, 0.72 ) }
    dend_32 { pt3dadd( 74.5179, -375.076, 8.49185, 0.84 ) }
    dend_32 { pt3dadd( 75.1118, -375.926, 8.73197, 0.84 ) }
    dend_32 { pt3dadd( 76.3554, -377.705, 9.23473, 0.6 ) }
    dend_32 { pt3dadd( 77.2165, -378.937, 9.58282, 0.6 ) }
    dend_32 { pt3dadd( 78.1166, -380.225, 9.94673, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_32 { pt3dadd( 84.9608, -388.19, 13.1112, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 49.3546, -465.652, -31.649, 0.48 ) }
    dend_29 { pt3dadd( 45.6948, -465.978, -34.4587, 0.48 ) }
    dend_29 { pt3dadd( 44.8435, -466.054, -35.1123, 1.08 ) }
    dend_29 { pt3dadd( 43.9668, -466.132, -35.7854, 0.48 ) }
    dend_29 { pt3dadd( 42.8668, -466.23, -36.6299, 0.96 ) }
    dend_29 { pt3dadd( 41.9364, -466.312, -37.3442, 0.48 ) }
    dend_29 { pt3dadd( 40.1206, -466.474, -38.7382, 0.48 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 49.3546, -465.652, -31.649, 0.96 ) }
    dend_28 { pt3dadd( 49.6567, -467.069, -32.9466, 0.96 ) }
    dend_28 { pt3dadd( 50.0929, -469.582, -35.1267, 0.48 ) }
    dend_28 { pt3dadd( 50.2434, -470.575, -35.9174, 0.48 ) }
    dend_28 { pt3dadd( 50.5816, -472.616, -37.4497, 0.84 ) }
    dend_28 { pt3dadd( 50.8392, -474.101, -38.545, 0.6 ) }
    dend_28 { pt3dadd( 50.969, -474.821, -39.0673, 0.6 ) }
    dend_28 { pt3dadd( 51.3187, -476.38, -40.2392, 0.96 ) }
    dend_28 { pt3dadd( 51.5761, -477.421, -41.0241, 0.96 ) }
    dend_28 { pt3dadd( 52.158, -479.413, -42.6332, 0.72 ) }
    dend_28 { pt3dadd( 52.8255, -481.324, -44.2856, 0.72 ) }
    dend_28 { pt3dadd( 53.5208, -482.808, -45.8162, 1.2 ) }
    dend_28 { pt3dadd( 54.248, -484.194, -47.3401, 1.2 ) }
    dend_28 { pt3dadd( 54.7372, -485.021, -48.3297, 1.2 ) }
    dend_28 { pt3dadd( 55.377, -485.989, -49.6271, 1.08 ) }
    dend_28 { pt3dadd( 56.2928, -487.188, -51.4492, 0.84 ) }
    dend_28 { pt3dadd( 57.4705, -488.411, -53.5915, 1.08 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 53.6467, -452.872, -28.3577, 0.72 ) }
    dend_26 { pt3dadd( 56.6883, -453.219, -29.435, 0.72 ) }
    dend_26 { pt3dadd( 58.5085, -453.426, -30.0797, 0.72 ) }
    dend_26 { pt3dadd( 59.6799, -453.559, -30.4945, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 53.6467, -452.872, -28.3577, 0.48 ) }
    dend_25 { pt3dadd( 53.9576, -457.064, -28.2803, 0.48 ) }
    dend_25 { pt3dadd( 54.0092, -459.434, -28.1938, 0.96 ) }
    dend_25 { pt3dadd( 53.9917, -460.533, -28.1348, 0.96 ) }
    dend_25 { pt3dadd( 53.8749, -463.206, -27.9512, 0.48 ) }
    dend_25 { pt3dadd( 53.7683, -464.822, -27.8182, 0.48 ) }
    dend_25 { pt3dadd( 53.5837, -467.466, -27.5934, 0.96 ) }
    dend_25 { pt3dadd( 53.3443, -470.11, -27.3412, 0.96 ) }
    dend_25 { pt3dadd( 53.1569, -471.864, -27.1565, 0.96 ) }
    dend_25 { pt3dadd( 52.7964, -474.485, -26.8532, 1.32 ) }
    dend_25 { pt3dadd( 52.3573, -477.114, -26.5189, 0.96 ) }
    dend_25 { pt3dadd( 52.1895, -478.145, -26.3937, 0.96 ) }
    dend_25 { pt3dadd( 52.0234, -479.382, -26.2649, 0.96 ) }
    dend_25 { pt3dadd( 51.8207, -481.412, -26.0863, 1.32 ) }
    dend_25 { pt3dadd( 51.7083, -483.548, -25.9624, 0.96 ) }
    dend_25 { pt3dadd( 51.7049, -485.879, -25.9015, 0.6 ) }
    dend_25 { pt3dadd( 51.7512, -487.609, -25.9997, 0.6 ) }
    dend_25 { pt3dadd( 51.8357, -489.751, -26.4054, 1.32 ) }
    dend_25 { pt3dadd( 51.9586, -491.982, -27.1333, 0.84 ) }
    dend_25 { pt3dadd( 52.0894, -493.833, -27.8959, 0.84 ) }
    dend_25 { pt3dadd( 52.173, -494.667, -28.2852, 0.84 ) }
    dend_25 { pt3dadd( 52.5313, -497.988, -29.9606, 0.84 ) }
    dend_25 { pt3dadd( 52.9071, -501.448, -31.7776, 1.44 ) }
    dend_25 { pt3dadd( 53.2235, -505.13, -33.687, 0.96 ) }
    dend_25 { pt3dadd( 53.3157, -506.698, -34.3812, 0.96 ) }
    dend_25 { pt3dadd( 53.3695, -508.84, -35.1122, 0.96 ) }
    dend_25 { pt3dadd( 53.3817, -510.411, -35.4642, 0.96 ) }
    dend_25 { pt3dadd( 53.3762, -512.031, -35.5849, 0.96 ) }
    dend_25 { pt3dadd( 53.2309, -515.863, -35.3828, 0.72 ) }
    dend_25 { pt3dadd( 52.972, -519.807, -34.8483, 1.08 ) }
    dend_25 { pt3dadd( 52.7538, -522.411, -34.3731, 0.72 ) }
    dend_25 { pt3dadd( 52.5221, -524.855, -33.8485, 1.2 ) }
    dend_25 { pt3dadd( 52.2716, -527.669, -33.1984, 0.96 ) }
    dend_25 { pt3dadd( 51.9243, -532.086, -32.1257, 1.44 ) }
    dend_25 { pt3dadd( 51.7246, -535.1, -31.3824, 0.96 ) }
    dend_25 { pt3dadd( 51.5819, -536.832, -31.041, 0.72 ) }
    dend_25 { pt3dadd( 51.1766, -541.166, -30.3571, 1.08 ) }
    dend_25 { pt3dadd( 50.8786, -543.771, -30.045, 0.6 ) }
    dend_25 { pt3dadd( 50.6772, -545.488, -29.8425, 0.6 ) }
    dend_25 { pt3dadd( 50.4316, -547.583, -29.5886, 1.2 ) }
    dend_25 { pt3dadd( 49.8531, -552.404, -28.8338, 0.72 ) }
    dend_25 { pt3dadd( 49.5674, -554.406, -28.5002, 1.08 ) }
    dend_25 { pt3dadd( 49.0404, -557.454, -27.911, 0.96 ) }
    dend_25 { pt3dadd( 48.4443, -560.447, -27.2632, 0.72 ) }
    dend_25 { pt3dadd( 48.1098, -562.153, -26.8642, 0.72 ) }
    dend_25 { pt3dadd( 47.3244, -566.301, -25.7674, 0.72 ) }
    dend_25 { pt3dadd( 46.7558, -569.402, -24.7422, 0.72 ) }
    dend_25 { pt3dadd( 46.4839, -570.758, -24.3096, 1.2 ) }
    dend_25 { pt3dadd( 46.0291, -572.684, -23.7959, 1.2 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_73 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_64 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_74 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_77 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_72 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_71 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_68 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_67 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_62 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_60 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_39 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_52 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_13 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_53 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_46 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_47 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_48 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_41 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_69 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_42 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_58 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_12 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_65 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_75 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_63 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_15 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_7 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_6 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_76 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_38 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_55 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_54 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_30 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_31 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_34 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_32 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_24 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_26 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_27 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_29 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_49 OneSecGrp_SectionRef_74.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_57 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_73 nseg = 3
    dend_64 nseg = 3
    dend_74 nseg = 3
    dend_61 nseg = 5
    dend_40 nseg = 3
    dend_77 nseg = 5
    dend_72 nseg = 9
    dend_71 nseg = 5
    dend_68 nseg = 9
    dend_67 nseg = 7
    dend_62 nseg = 5
    dend_37 nseg = 3
    dend_20 nseg = 11
    dend_60 nseg = 3
    dend_59 nseg = 11
    dend_57 nseg = 5
    dend_44 nseg = 9
    dend_39 nseg = 9
    dend_36 nseg = 3
    dend_21 nseg = 3
    dend_8 nseg = 5
    dend_52 nseg = 3
    dend_22 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 7
    dend_9 nseg = 5
    dend_4 nseg = 7
    dend_53 nseg = 3
    dend_51 nseg = 7
    dend_46 nseg = 7
    dend_23 nseg = 5
    dend_50 nseg = 5
    dend_47 nseg = 5
    dend_48 nseg = 5
    dend_25 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L5_DBC_d56fbcd5cf_0_0


