// Cell: cIR216_L1_HAC_84f0f8f321_0_0
/*
{
  "id" : "cIR216_L1_HAC_84f0f8f321_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "3.19088, -7.39601, 0.0, 4.79704", "2.86334, -6.61538, 0.0, 8.62796", "2.53579, -5.83474, 0.0, 10.7747", "2.20824, -5.05411, 0.0, 12.1151", "1.8807, -4.27348, 0.0, 12.9881", "1.55315, -3.49285, 0.0, 13.6708", "1.22561, -2.71222, 0.0, 13.5595", "0.898059, -1.93159, 0.0, 13.3795", "0.570512, -1.15096, 0.0, 13.2056", "0.242966, -0.370332, 0.0, 13.0689", "-0.0845809, 0.410298, 0.0, 12.9361", "-0.412127, 1.19093, 0.0, 12.8032", "-0.739674, 1.97156, 0.0, 12.6504", "-1.06722, 2.75219, 0.0, 12.38", "-1.39477, 3.53282, 0.0, 12.0666", "-1.72231, 4.31345, 0.0, 11.3179", "-2.04986, 5.09408, 0.0, 10.5154", "-2.37741, 5.87471, 0.0, 9.19791", "-2.70495, 6.65534, 0.0, 7.53489", "-3.0325, 7.43597, 0.0, 5.50886", "-3.36005, 8.2166, 0.0, 3.20938" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "6.62108, -2.27917, -2.63, 2.5", "8.30627, -2.17851, -1.74995, 1.81", "10.5332, -2.0455, -0.587013, 1.81", "12.3651, -1.93608, 0.369665, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000877849796
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "0.80114, -5.91917, -8.87, 0.68", "-0.155241, -6.89559, -10.111, 0.68", "-0.937938, -7.70181, -11.4868, 1.13", "-1.54724, -8.45328, -13.0067, 0.68", "-1.92168, -9.00154, -14.4564, 1.13", "-2.3316, -9.77748, -16.8562, 0.45", "-2.60512, -10.8844, -20.2063, 1.36", "-2.65916, -11.7614, -22.9574, 0.23", "-2.45107, -12.3777, -24.9117, 0.68", "-1.7733, -13.1787, -27.1956, 0.23", "-1.38916, -13.5203, -27.9913, 1.81", "-0.271518, -14.5508, -29.7635, 0.23", "0.774102, -15.6708, -31.0914, 1.13", "1.71985, -17.0105, -32.2566, 0.23", "2.08403, -17.7176, -32.7639, 1.13", "2.57122, -18.8614, -33.4726, 1.13", "3.58743, -21.2942, -34.9269, 0.23", "3.76929, -21.7254, -35.2052, 1.13", "4.00105, -22.208, -35.5084, 1.13", "4.90143, -23.9589, -36.4667, 0.23", "5.45963, -24.9557, -37.0193, 1.13", "6.11355, -26.1274, -37.6245, 1.59", "7.02658, -27.9733, -38.5726, 0.23", "7.38775, -28.867, -39.0642, 1.13", "7.94853, -30.8119, -40.1409, 0.23", "8.18464, -32.6339, -41.306, 1.81", "8.18116, -34.3274, -42.4898, 0.23", "7.98761, -36.1979, -43.9048, 0.91", "7.78448, -37.6149, -45.0078, 0.23", "7.6115, -38.8094, -46.0453, 1.36", "7.3243, -41.4428, -48.4946, 0.23", "7.22461, -42.4932, -49.4844, 1.59", "7.1229, -45.268, -52.2007, 0.23", "7.13672, -46.0882, -52.9716, 1.13", "7.19286, -47.7092, -54.5477, 0.23", "7.32736, -48.616, -55.4456, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000877849796,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.93891, -5.49917, -9.15, 1.13", "-2.45013, -4.81828, -10.0327, 1.13", "-2.83382, -4.308, -10.7305, 1.13", "-3.44243, -3.63135, -11.5674, 0.68", "-4.51124, -2.59964, -12.7087, 0.68", "-6.10722, -1.05906, -14.4131, 0.91", "-6.98534, -0.211412, -15.3508, 0.91", "-8.43563, 1.30038, -16.916, 0.91", "-10.0023, 2.93781, -18.5369, 0.91", "-11.3583, 4.31035, -19.8819, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000877849796
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.358897, 8.13083, -5.92, 3.18", "-0.271192, 8.63967, -6.26682, 2.27", "0.182915, 11.2743, -8.06254, 1.36", "0.569366, 13.5164, -9.59072, 2.04" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000877849796
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-1.28889, 7.19083, 0.0799999, 0.91", "-1.81957, 8.45403, 0.593498, 0.23", "-2.59338, 10.4057, 1.28083, 1.36", "-3.15167, 12.1388, 1.82605, 1.13", "-3.38799, 13.1709, 2.11119, 1.13", "-3.50727, 13.9948, 2.31137, 0.23", "-3.6347, 15.2953, 2.59923, 0.23", "-3.64706, 16.0017, 2.74381, 0.68", "-3.60398, 17.2257, 2.94014, 0.68", "-3.54016, 18.4485, 3.13818, 0.91", "-3.48472, 19.3233, 3.29594, 0.45", "-3.3265, 21.4089, 3.69164, 1.36", "-3.07716, 23.3342, 4.11005, 0.45", "-2.87051, 24.5172, 4.39044, 0.45", "-2.76756, 25.0481, 4.52747, 0.45", "-2.59034, 25.9039, 4.75957, 0.45", "-2.13814, 27.5235, 5.20639, 1.36", "-1.32962, 29.152, 5.63469, 0.23", "-0.776532, 29.9093, 5.81653, 0.23", "-0.287176, 30.4389, 5.97943, 0.23", "0.0795081, 39.4655, 10.2674, 0.23", "1.86849, 48.5484, 14.049, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000877849796,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.25886, 4.52083, 6.68, 0.91", "-1.27653, 5.79136, 6.56737, 0.91", "-1.10239, 6.71342, 6.44222, 1.81", "-0.720945, 7.86957, 6.24236, 0.68", "-0.366642, 8.67354, 6.09887, 0.68", "-1.01954E-4, 9.43381, 5.95523, 0.68", "1.22609, 11.9795, 5.45937, 0.45", "1.83179, 13.0595, 5.21127, 0.23", "2.6682, 14.419, 4.85246, 0.68", "3.60061, 15.7722, 4.45641, 0.68", "4.32826, 16.683, 4.171, 0.68", "5.31379, 17.7336, 3.81621, 1.13", "6.16513, 18.5299, 3.52474, 1.13", "7.11056, 19.3766, 3.17642, 1.13", "8.24095, 20.3813, 2.65387, 0.68", "9.92856, 21.9942, 1.70238, 1.13", "11.2216, 23.3294, 0.917412, 0.68", "12.1091, 24.3483, 0.346496, 0.68", "12.8032, 25.2005, -0.055721, 0.91", "14.5078, 27.4668, -0.999356, 0.45", "16.1942, 29.8868, -1.79636, 0.45", "17.1143, 31.3207, -2.14088, 1.13", "17.858, 32.5144, -2.3617, 1.36", "19.541, 35.102, -2.72017, 0.23", "19.706, 35.3258, -2.74143, 0.68", "21.1912, 37.1653, -2.87735, 0.23", "22.3401, 38.4962, -3.06281, 0.23", "23.3438, 39.6228, -3.35553, 0.23", "24.4528, 40.8101, -3.81367, 1.36", "25.576, 42.0947, -4.47499, 0.68", "26.5062, 43.1296, -5.08053, 0.23", "26.7984, 43.4417, -5.30995, 0.23", "27.5644, 44.1287, -5.85219, 0.23", "28.6075, 44.9657, -6.45786, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000877849796,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.66889, -6.10917, -3.95, 0.91", "-3.99649, -6.79972, -4.35685, 0.91", "-5.11355, -8.65545, -5.26693, 0.91", "-5.84933, -9.57208, -5.63218, 1.59", "-7.25287, -10.7208, -5.99185, 0.68", "-9.25111, -11.589, -6.00365, 0.23", "-10.4718, -11.8866, -5.86859, 0.23", "-12.7003, -11.7963, -5.4085, 0.23", "-14.3359, -11.3598, -5.04316, 1.13", "-16.3396, -10.5584, -4.58975, 0.23", "-18.2199, -9.56238, -4.17722, 0.23", "-18.5923, -9.33365, -4.11501, 0.23", "-20.1552, -8.35561, -4.04012, 1.13", "-21.933, -7.3588, -4.26595, 0.45", "-22.3363, -7.16642, -4.35722, 0.91", "-23.3885, -6.75352, -4.66623, 0.91", "-25.0081, -6.18447, -5.20697, 0.23", "-26.7177, -5.66394, -5.73542, 0.91", "-28.3037, -5.28263, -6.14264, 0.23", "-28.953, -5.13543, -6.28814, 0.91", "-29.6509, -4.93614, -6.41022, 0.23", "-30.4707, -4.6044, -6.49198, 0.91", "-31.7544, -3.80507, -6.47914, 0.91", "-32.7901, -2.9386, -6.38821, 0.23", "-33.3983, -2.29542, -6.35018, 0.68", "-34.5125, -0.888066, -6.3664, 0.23", "-35.3946, 0.330122, -6.42712, 1.36", "-36.3069, 1.65336, -6.52809, 0.68", "-37.7731, 3.77314, -6.73598, 0.68", "-39.2166, 5.63837, -7.06277, 0.68", "-40.4324, 7.16708, -7.42811, 0.23", "-40.8601, 7.68061, -7.60457, 0.23", "-41.6075, 8.4976, -7.94628, 0.23", "-42.5972, 9.42961, -8.40239, 0.23", "-44.3957, 10.5111, -9.06221, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000877849796,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-3.36005, 8.2166, 0.0, 0.651244", "-9.16374, 22.0483, 0.0, 0.651244", "-14.9674, 35.8801, 0.0, 0.651244" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "12.3651, -1.93608, 0.369665, 1.13", "13.6175, -1.49998, 1.76383, 1.13", "14.8466, -1.16437, 3.14589, 1.13", "16.4315, -0.734516, 4.91793, 1.13", "17.7439, -0.324709, 6.43261, 0.91", "19.5209, 0.230208, 8.48364, 0.91", "20.1403, 0.423611, 9.19848, 0.91", "20.5633, 0.515734, 9.72761, 0.91", "21.0935, 0.539624, 10.387, 0.91", "21.8269, 0.298495, 11.4025, 0.91" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "12.3651, -1.93608, 0.369665, 0.68", "14.8038, -2.01265, -1.11021, 0.68", "16.5644, -2.20524, -2.02291, 0.68", "17.4638, -2.34897, -2.4181, 0.68", "18.4793, -2.51124, -2.86428, 0.68", "19.622, -2.69385, -3.36638, 0.68", "20.9681, -2.90896, -3.95786, 1.59", "22.1588, -3.11032, -4.32643, 0.91", "23.2243, -3.43727, -4.52805, 1.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.3583, 4.31035, -19.8819, 0.45", "-11.9792, 6.60309, -20.9645, 0.45", "-12.2603, 7.81581, -21.4473, 0.68", "-12.4476, 8.89851, -21.8154, 0.68", "-12.7159, 10.8997, -22.4246, 0.45", "-12.7995, 11.7676, -22.6659, 0.45", "-12.8596, 12.9561, -22.9787, 0.23", "-12.8123, 14.6245, -23.35, 0.68", "-12.4975, 16.9151, -24.0516, 0.23", "-12.2782, 17.6923, -24.336, 0.23", "-11.8898, 18.4251, -24.6717, 0.91", "-11.3738, 19.1228, -25.0614, 0.23", "-9.96819, 20.5325, -25.9989, 1.13", "-7.21114, 22.6364, -27.6008, 0.23", "-5.49586, 23.679, -28.4654, 0.68", "-2.54812, 25.2317, -29.7736, 0.23", "-1.75936, 25.5889, -30.0823, 0.91", "-0.162256, 26.2375, -30.6241, 0.23", "1.48219, 26.8238, -31.0614, 0.68", "2.4807, 27.1579, -31.2628, 0.23", "3.78651, 27.6557, -31.5399, 0.68", "6.44072, 28.8127, -32.121, 0.23", "6.93486, 29.061, -32.2377, 0.91", "8.63389, 29.9717, -32.6915, 0.23", "10.6153, 31.0818, -33.2267, 0.23", "12.0582, 31.8921, -33.5803, 1.13", "12.3705, 32.0632, -33.6474, 1.13", "14.7292, 33.2406, -34.0436, 0.23", "15.989, 33.7994, -34.2222, 0.23", "18.2931, 34.7145, -34.5304, 1.13", "21.28, 35.7944, -34.8982, 0.23", "22.1894, 36.0909, -35.0053, 0.68", "24.1547, 36.6696, -35.2371, 0.23", "25.3767, 36.9609, -35.3746, 0.68", "28.0427, 37.5485, -35.6378, 0.23", "29.1432, 37.7527, -35.7547, 0.68", "30.7321, 38.0227, -35.9256, 0.68", "31.4418, 38.1561, -36.0094, 0.68", "33.4491, 38.6009, -36.255, 0.23", "34.3008, 38.8236, -36.352, 0.23", "35.2912, 39.1465, -36.4417, 0.23", "35.7851, 39.3446, -36.4926, 0.91", "37.3339, 40.0817, -36.668, 0.23", "38.2665, 40.6399, -36.7737, 0.91", "39.2133, 41.3313, -36.8759, 0.23", "39.8872, 41.8757, -36.9855, 1.13", "40.4339, 42.3622, -37.0941, 0.23", "41.1696, 42.991, -37.1703, 0.68", "42.2427, 43.7875, -37.1812, 0.23", "42.9973, 44.2669, -37.1507, 0.91", "44.6504, 45.1541, -36.9567, 0.23", "45.5259, 45.5657, -36.8171, 0.91", "48.0729, 46.6191, -36.3397, 0.23", "49.8207, 47.2784, -35.9689, 0.91", "51.8289, 47.9628, -35.4771, 0.23", "53.5679, 48.5068, -34.9829, 0.23", "55.2134, 48.9572, -34.4258, 0.23", "55.8901, 49.1305, -34.2132, 1.13" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-11.3583, 4.31035, -19.8819, 0.68", "-13.2417, 2.46594, -21.6373, 0.68", "-14.8172, 1.02792, -22.9424, 0.45", "-15.9937, 0.0313452, -23.8227, 0.45", "-17.7111, -1.327, -25.02, 0.91", "-19.0118, -2.35095, -25.9273, 0.23", "-20.37, -3.43356, -26.8713, 0.68", "-21.6762, -4.42888, -27.7151, 0.23", "-22.3258, -4.94451, -28.1603, 0.23", "-23.1352, -5.64647, -28.7314, 1.36", "-24.1998, -6.63982, -29.415, 0.23", "-24.5727, -7.00407, -29.6394, 1.13", "-25.5652, -8.13137, -30.2714, 0.23", "-25.949, -8.67328, -30.5888, 1.59", "-26.4489, -9.58648, -31.1006, 0.68", "-27.1184, -10.884, -31.8211, 0.23", "-27.3877, -11.3636, -32.0856, 1.13", "-27.9026, -12.2552, -32.586, 1.13", "-29.1166, -14.4229, -33.8149, 0.23", "-29.8671, -15.9953, -34.7223, 1.81", "-30.5437, -17.6967, -35.6829, 0.23", "-30.843, -18.599, -36.1989, 0.91", "-31.2631, -19.9401, -36.9375, 0.23", "-31.4693, -20.7017, -37.3468, 1.13", "-31.8324, -22.185, -38.0992, 0.23", "-32.009, -22.9658, -38.4886, 1.59", "-32.5639, -25.563, -39.9339, 0.23", "-32.9753, -27.2891, -40.9659, 1.13", "-33.4552, -28.718, -41.9347, 0.23", "-34.0819, -30.0014, -42.9206, 1.13", "-34.4204, -30.4849, -43.3468, 1.81", "-36.2122, -32.3621, -45.2918, 0.23", "-36.8378, -32.8489, -45.8637, 0.91", "-38.3996, -33.7823, -47.2689, 0.23", "-39.6751, -34.369, -48.3282, 1.13", "-40.7294, -34.7433, -49.1547, 0.23", "-41.927, -35.0809, -50.0265, 0.23", "-42.9533, -35.3098, -50.6688, 1.13", "-45.2719, -35.8618, -52.1391, 0.23", "-45.8781, -36.0438, -52.5028, 0.23", "-46.8029, -36.3301, -53.0768, 0.23", "-47.4101, -36.5306, -53.465, 0.23", "-48.1536, -36.7615, -53.8878, 1.36", "-49.8096, -37.3163, -54.7321, 0.23", "-50.7344, -37.8421, -55.0042, 0.91" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "0.569366, 13.5164, -9.59072, 1.36", "1.28153, 15.2594, -9.7027, 1.36", "1.83117, 16.6047, -9.78912, 1.36", "2.92258, 19.2761, -9.96074, 1.36", "3.59182, 20.9141, -10.066, 1.36", "4.20822, 22.4228, -10.1629, 2.04" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "0.569366, 13.5164, -9.59072, 0.68", "-1.4098, 15.2972, -10.1132, 0.68", "-3.20354, 17.043, -10.8991, 1.59", "-4.29624, 18.1129, -11.5279, 0.68", "-5.50025, 19.2506, -12.2677, 0.68", "-7.0092, 20.6214, -13.2463, 0.91", "-8.3499, 21.8211, -14.118, 0.91", "-9.66886, 23.0185, -15.0475, 0.91", "-10.85, 24.1728, -15.8815, 0.91", "-11.5538, 24.931, -16.3716, 0.91", "-12.1609, 25.6248, -16.7129, 0.68", "-13.1168, 26.6206, -17.0827, 1.13", "-14.9796, 28.3698, -17.6627, 1.13", "-16.3518, 29.6124, -18.0192, 0.23", "-17.4717, 30.6622, -18.3169, 1.13", "-18.8925, 32.0131, -18.7313, 1.13", "-20.4106, 33.4013, -19.2032, 0.23", "-21.1487, 34.0099, -19.438, 0.68", "-21.7161, 34.4162, -19.6187, 0.68", "-23.9771, 35.8643, -20.2618, 1.13", "-24.8551, 36.4238, -20.4997, 1.13", "-26.9395, 37.7559, -21.0376, 0.23", "-28.2908, 38.6441, -21.3291, 1.59", "-29.9046, 39.6182, -21.6174, 0.68", "-31.8111, 40.6017, -21.9389, 1.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-14.9674, 35.8801, 0.0, 0.15614", "-20.7711, 49.7118, 0.0, 0.15614", "-26.5748, 63.5436, 0.0, 0.15614" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "21.8269, 0.298495, 11.4025, 0.23", "19.9644, 1.61804, 12.0008, 0.23", "18.4298, 2.64863, 12.4475, 0.91", "16.9547, 3.63303, 12.8297, 0.91", "15.2242, 4.89509, 13.1439, 0.68", "13.5852, 6.19008, 13.354, 0.68", "12.2017, 7.38595, 13.48, 0.68", "11.2265, 8.3348, 13.4895, 0.68", "9.96936, 9.62549, 13.3845, 0.68", "8.29782, 11.4924, 13.1354, 0.45", "7.5979, 12.3089, 12.9479, 0.45", "6.92412, 13.2075, 12.6481, 0.45", "6.29311, 14.2669, 12.2703, 0.45", "5.56078, 15.7912, 11.7149, 0.45", "-0.937811, 23.2889, 12.9609, 0.45", "-6.74029, 30.9184, 15.8108, 0.45", "-12.0918, 38.3723, 19.7858, 0.45" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "21.8269, 0.298495, 11.4025, 1.13", "23.343, 2.35662, 12.9186, 1.13", "23.8697, 3.97488, 13.9885, 0.45", "23.9247, 4.97648, 14.6029, 1.13", "23.9715, 5.82954, 15.1262, 1.13", "24.0329, 6.94772, 15.8121, 1.13", "24.1564, 9.19877, 17.1929, 0.68", "23.6276, 11.2347, 18.2375, 0.23", "23.1256, 12.3331, 18.8429, 0.23", "25.293, 19.9922, 24.8961, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "23.2243, -3.43727, -4.52805, 0.23", "23.4261, -5.13923, -5.22148, 0.23", "23.4953, -5.97774, -5.51371, 1.36", "23.6096, -7.92852, -6.12727, 0.23", "23.624, -9.3365, -6.42844, 1.13", "23.6111, -11.1263, -6.66089, 0.23", "23.6077, -12.9215, -6.80838, 1.13", "23.6378, -14.3636, -6.85122, 0.23", "23.6481, -14.9407, -6.84611, 0.68", "23.6046, -17.1474, -6.72154, 0.23", "23.5022, -19.3384, -6.60032, 1.13", "23.439, -20.4282, -6.49679, 0.23", "23.4266, -21.6898, -6.31356, 1.13", "23.4627, -23.1263, -6.08484, 0.23", "23.5468, -24.5401, -5.83744, 0.23", "23.671, -25.9559, -5.58708, 1.13", "23.9008, -28.2937, -5.07062, 0.23", "24.1275, -30.2679, -4.53447, 1.36", "24.3474, -31.6392, -4.10093, 0.23", "24.5344, -32.434, -3.84605, 0.68", "24.8795, -33.5026, -3.51208, 0.23", "25.2762, -34.4795, -3.21074, 1.36", "25.9177, -35.784, -2.86554, 0.23", "26.474, -36.675, -2.63594, 1.13", "27.4126, -37.9279, -2.24376, 0.23", "27.8345, -38.4197, -2.0756, 0.91", "28.6061, -39.1763, -1.78658, 0.23", "29.2957, -39.7696, -1.49493, 0.91", "30.4918, -40.7077, -0.978494, 0.23", "31.3493, -41.3653, -0.514064, 0.91", "31.9812, -41.8528, -0.131061, 0.23", "32.9208, -42.6736, 0.58161, 1.13", "34.0863, -43.7209, 1.50881, 0.23", "34.7356, -44.3281, 2.08795, 1.36", "35.9036, -45.4668, 3.25305, 0.23", "36.3987, -45.9915, 3.76732, 0.23", "37.4092, -47.1831, 5.03642, 1.13", "39.9175, -56.0698, 8.87513, 1.13", "43.4671, -64.4722, 12.9739, 1.13", "46.9027, -72.2985, 18.1648, 1.13" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "23.2243, -3.43727, -4.52805, 0.68", "24.2499, -3.95421, -5.46859, 0.68", "25.7819, -4.72639, -6.87356, 0.68", "27.2755, -5.47922, -8.2433, 0.68", "27.9908, -5.83975, -8.89928, 0.68", "29.6241, -6.66298, -10.3971, 1.36", "31.2205, -7.46762, -11.8611, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.20822, 22.4228, -10.1629, 0.68", "6.6326, 20.9275, -11.2859, 0.68", "7.95804, 20.1851, -11.8075, 0.68", "9.39665, 19.4542, -12.2974, 0.68", "10.7552, 18.8359, -12.6744, 0.23", "11.4196, 18.5771, -12.8058, 0.91", "12.3175, 18.2628, -12.9376, 1.36", "13.7257, 17.8566, -12.9901, 0.23", "15.8221, 17.457, -13.024, 0.68", "18.0763, 17.1882, -13.0176, 0.23", "19.8492, 17.0473, -12.9791, 0.91", "20.9747, 16.9854, -12.9522, 1.36", "22.2641, 16.9386, -12.9165, 0.23", "25.0769, 16.8702, -12.822, 0.45", "26.5434, 16.8988, -12.759, 1.36", "27.4594, 16.936, -12.756, 2.04" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "4.20822, 22.4228, -10.1629, 0.45", "4.54579, 23.6565, -11.0796, 0.45", "4.90906, 24.984, -12.066, 0.91", "5.15256, 25.8739, -12.7273, 0.91", "5.58198, 27.4432, -13.8934, 1.13" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-31.8111, 40.6017, -21.9389, 0.23", "-30.6001, 39.6507, -23.817, 0.23", "-29.6225, 38.9988, -25.5343, 0.23", "-29.1892, 38.7232, -26.3459, 0.23", "-28.2422, 38.082, -28.2595, 0.23", "-27.6668, 37.6054, -29.6361, 0.91", "-27.0677, 37.0259, -31.314, 0.91", "-26.2247, 36.0375, -33.9372, 0.23", "-25.6875, 35.1736, -36.15, 1.36", "-25.3988, 34.2575, -38.618, 0.23", "-25.5, 33.5768, -40.4975, 1.13", "-25.7175, 33.1916, -41.5296, 1.13", "-26.8551, 31.9785, -44.621, 1.13", "-27.4225, 31.5345, -45.6136, 0.23", "-28.6388, 30.7588, -47.2086, 1.36", "-30.4006, 29.6554, -49.1567, 0.23", "-31.2086, 29.1085, -49.9683, 0.91", "-31.8548, 28.6425, -50.5624, 0.23", "-33.4159, 27.5333, -51.7582, 0.91", "-35.0332, 26.342, -53.0003, 0.23", "-36.0214, 25.5965, -53.723, 0.23", "-36.9111, 24.9903, -54.515, 1.81", "-38.3111, 24.119, -55.9783, 0.23", "-38.772, 23.8532, -56.4726, 0.91", "-40.2781, 23.0973, -58.166, 0.23", "-41.7298, 22.559, -59.904, 1.81", "-44.5152, 21.8019, -63.4678, 0.45", "-45.3106, 21.647, -64.5785, 0.91" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-31.8111, 40.6017, -21.9389, 0.68", "-33.4648, 40.9143, -22.0775, 0.68", "-34.5858, 41.1261, -22.1714, 0.68", "-36.4174, 41.4723, -22.3249, 1.36" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-12.0918, 38.3723, 19.7858, 0.23", "-18.6522, 45.7356, 21.4422, 0.23", "-24.3514, 53.3676, 24.4873, 0.23", "-30.0816, 60.9082, 27.6971, 0.23", "-35.9092, 68.2349, 31.2125, 0.23", "-41.2349, 76.1404, 34.2359, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-12.0918, 38.3723, 19.7858, 0.23", "-18.6591, 45.7448, 21.3726, 0.23", "-25.3124, 52.639, 24.2368, 0.23", "-33.7005, 57.3714, 26.9281, 0.23", "-41.2477, 62.7972, 30.616, 0.23", "-49.2203, 68.0583, 33.5756, 0.23", "-56.5671, 73.6834, 37.3681, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "25.293, 19.9922, 24.8961, 0.23", "27.0155, 28.3924, 30.041, 0.23", "29.8189, 35.8991, 36.0234, 0.23", "31.6913, 42.3241, 43.454, 0.23", "33.5528, 48.5709, 51.0377, 0.23", "34.2238, 54.3236, 59.1898, 0.23", "34.0842, 60.3922, 67.1366, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "25.293, 19.9922, 24.8961, 0.23", "26.387, 27.8421, 30.9938, 0.23", "26.5909, 35.8604, 36.9658, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "31.2205, -7.46762, -11.8611, 1.36", "32.1573, -5.387, -14.1848, 1.36", "32.6429, -4.21257, -15.3376, 1.13", "33.2813, -2.5434, -16.8264, 0.68", "33.5265, -1.82694, -17.445, 1.36", "33.6464, -1.37556, -17.8714, 0.23", "33.8761, -0.375406, -18.7942, 0.91", "34.0284, 0.72881, -19.6954, 0.91", "34.1197, 1.81146, -20.5698, 0.91", "34.229, 3.52613, -21.994, 1.59", "34.4601, 6.39738, -24.388, 0.45", "34.5491, 7.70963, -25.4995, 0.45", "34.6358, 9.19388, -26.7655, 1.36", "34.7158, 10.8066, -28.1877, 0.91", "34.8141, 12.7496, -29.858, 0.23", "34.9166, 14.145, -30.9641, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "31.2205, -7.46762, -11.8611, 0.68", "33.0941, -6.60813, -11.5368, 0.68", "33.9153, -6.22376, -11.5103, 0.68", "35.6451, -5.47896, -11.6369, 0.68", "37.6625, -4.57441, -12.0481, 0.68", "39.2452, -3.8747, -12.4984, 1.36", "42.0262, -2.74109, -13.3704, 0.45", "44.1896, -1.87506, -14.2376, 0.45", "45.793, -1.24572, -15.0272, 0.68", "47.7997, -0.40843, -16.2126, 0.23", "48.7466, -0.0290028, -16.8197, 0.23", "50.2043, 0.524328, -17.8299, 0.68", "52.4704, 1.37036, -19.4318, 0.23", "53.9201, 1.98337, -20.3698, 0.91", "56.0973, 2.9031, -21.6804, 0.23", "58.0804, 3.75052, -22.8025, 0.23", "59.3789, 4.3602, -23.5327, 1.13", "60.085, 4.73536, -23.9335, 0.23", "60.8033, 5.13575, -24.2715, 0.45", "62.2407, 5.71881, -24.7767, 0.23" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "27.4594, 16.936, -12.756, 0.23", "29.0357, 17.0772, -13.9315, 0.23", "30.0561, 17.199, -14.6906, 0.91", "31.9653, 17.4981, -16.1444, 0.45", "33.1341, 17.7467, -17.1701, 0.91", "34.7842, 18.222, -18.8511, 0.68", "35.8686, 18.6461, -20.2125, 0.68", "36.2964, 18.8722, -20.944, 1.13", "37.0263, 19.5174, -22.6288, 0.45", "37.6489, 20.6497, -24.9808, 0.91", "37.9161, 21.4552, -26.5191, 0.23", "38.0769, 22.6227, -28.6312, 0.68", "38.0818, 22.9983, -29.3905, 0.68", "38.0257, 23.5582, -30.8761, 0.23", "37.9678, 23.8557, -31.9725, 0.23", "37.9527, 24.273, -34.2516, 1.13", "37.9982, 24.6076, -36.9012, 0.23", "38.0145, 24.8025, -39.0503, 0.23", "38.015, 25.0185, -41.5383, 0.23", "38.0215, 25.1491, -43.0644, 0.23", "38.013, 25.4361, -45.0655, 0.23", "38.0209, 25.7995, -46.5078, 0.23", "38.194, 26.2839, -47.7149, 0.23", "38.5081, 26.8719, -48.8799, 0.23", "38.7853, 27.2907, -49.7129, 0.91", "39.516, 28.1316, -51.7902, 0.23", "39.8679, 28.3608, -52.6647, 0.91", "41.0734, 28.6633, -55.5894, 0.23", "41.8864, 28.6305, -57.8134, 0.23", "42.403, 28.3918, -59.7321, 0.91", "42.6448, 28.0808, -61.1984, 0.91", "42.7718, 27.4763, -63.3065, 0.23", "42.5571, 26.5644, -66.1967, 0.23", "42.1424, 25.8985, -68.1572, 0.23", "41.4025, 25.1329, -70.51, 0.23", "40.6471, 24.5413, -72.4034, 1.13", "39.6362, 23.8374, -74.5927, 0.23", "38.4612, 23.0146, -76.9263, 0.23", "37.4694, 22.363, -78.7366, 0.23", "37.0433, 22.0761, -79.5128, 0.23", "36.1352, 21.4286, -81.3271, 0.23", "35.5122, 20.9109, -82.7392, 0.23", "34.8475, 20.2122, -84.3524, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "27.4594, 16.936, -12.756, 0.45", "29.4498, 16.608, -12.2173, 0.45", "30.5852, 16.5273, -12.0954, 0.91", "32.4016, 16.5112, -12.0753, 0.23", "33.8744, 16.5561, -12.1254, 0.45", "35.5597, 16.6113, -12.2165, 1.36", "37.044, 16.6537, -12.3098, 0.68", "39.4627, 16.812, -12.5861, 0.68", "41.1353, 16.9647, -12.7784, 0.91", "42.5829, 17.1387, -12.9633, 0.23", "44.3631, 17.394, -13.2017, 0.68", "45.0483, 17.4638, -13.2609, 0.23", "46.3202, 17.5122, -13.2978, 0.91", "48.4735, 17.4216, -13.2078, 0.23", "49.7922, 17.3018, -13.188, 1.13", "50.9253, 17.1576, -13.2026, 0.23", "52.8526, 16.8887, -13.4318, 0.23", "53.8913, 16.7216, -13.6522, 0.91", "54.9837, 16.4801, -14.0028, 0.91", "56.8837, 15.9105, -14.7793, 0.23", "57.9145, 15.6159, -15.2724, 1.59", "60.7669, 14.9441, -16.7327, 0.23", "61.3623, 14.8317, -17.0627, 0.91", "62.685, 14.6372, -17.761, 0.23", "64.4653, 14.45, -18.667, 0.91", "66.2662, 14.3668, -19.4862, 0.23", "68.3997, 14.3993, -20.3338, 0.91", "69.4291, 14.4669, -20.6033, 0.23", "71.38, 14.6105, -20.9497, 0.91", "73.1615, 14.7934, -21.2146, 0.23", "74.8369, 14.9638, -21.4289, 0.23", "76.4305, 15.0543, -21.5854, 0.23", "79.1436, 15.1313, -21.8125, 1.13", "81.6575, 15.1099, -22.0155, 0.23", "84.0994, 14.8844, -22.2284, 0.91", "85.906, 14.5892, -22.3827, 0.23", "87.6642, 14.1816, -22.5667, 0.23", "89.4022, 13.7273, -22.8196, 0.91", "90.7606, 13.3633, -23.0691, 0.23", "92.99, 12.8132, -23.4977, 0.68", "94.3312, 12.4875, -23.7382, 0.23", "95.6679, 12.2179, -24.012, 1.13", "97.9634, 11.9198, -24.4619, 0.23", "99.5443, 11.8443, -24.6975, 0.91", "101.515, 11.9519, -24.8814, 0.23", "102.632, 12.1396, -24.9498, 1.13", "104.064, 12.4763, -24.9854, 0.23", "106.189, 13.1979, -24.9911, 0.68", "107.682, 13.8107, -24.9524, 0.23", "109.338, 14.579, -24.9009, 0.68", "110.904, 15.4356, -24.8408, 0.23", "112.723, 16.577, -24.7977, 1.36", "115.128, 18.3098, -24.7867, 0.23", "115.963, 19.0018, -24.8241, 0.23", "116.492, 19.4887, -24.851, 0.23", "117.753, 20.7507, -24.7707, 0.68", "118.168, 21.2054, -24.6813, 0.23", "118.728, 21.8581, -24.4531, 0.68", "119.418, 22.6652, -24.0522, 0.23", "120.392, 23.7052, -23.4191, 0.91", "121.791, 25.0761, -22.4501, 0.23", "122.7, 25.9925, -21.7632, 0.91", "123.546, 26.9252, -21.031, 0.23", "124.569, 28.1103, -20.0871, 0.68", "125.969, 29.8765, -18.7553, 0.23", "127.115, 31.4775, -17.717, 0.23", "128.069, 33.0338, -16.8443, 1.13", "128.883, 34.5479, -16.0587, 0.91", "129.186, 35.1509, -15.785, 0.23", "129.852, 36.4065, -15.2936, 0.91", "130.933, 38.0766, -14.7341, 0.23", "131.544, 38.7959, -14.5095, 0.23", "132.182, 39.3895, -14.3266, 0.23", "133.002, 40.0537, -14.1382, 0.23", "134.632, 41.2963, -13.7331, 0.68", "136.884, 42.8352, -13.123, 0.23", "137.856, 43.4286, -12.8392, 0.23", "138.474, 43.7657, -12.6591, 0.23", "140.173, 44.6432, -12.1539, 1.13" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "5.58198, 27.4432, -13.8934, 0.23", "6.90321, 28.4005, -15.0345, 0.23", "7.69935, 29.0172, -15.6102, 0.91", "10.0466, 30.7901, -17.1306, 0.23", "11.4319, 31.752, -17.9387, 0.91", "12.5531, 32.4107, -18.536, 1.36", "14.1719, 33.2281, -19.3469, 0.91", "16.2106, 34.0795, -20.2045, 0.23", "16.8067, 34.296, -20.4188, 0.91", "18.4333, 34.8186, -20.8888, 0.91", "20.2586, 35.2502, -21.43, 0.91", "21.4716, 35.4474, -21.804, 0.91", "22.9245, 35.5983, -22.2768, 0.68", "23.9702, 35.6642, -22.6053, 0.68", "25.992, 35.8927, -23.2718, 1.59" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.58198, 27.4432, -13.8934, 0.45", "4.96354, 28.542, -14.7133, 0.45", "4.2274, 30.1267, -15.6901, 1.13", "3.65145, 31.5446, -16.5104, 0.91", "3.0958, 33.1268, -17.2552, 1.36", "2.64059, 34.7545, -17.8016, 0.45", "2.38967, 35.9374, -18.0839, 1.13", "2.26632, 37.066, -18.2356, 0.68", "2.18846, 38.0624, -18.2528, 1.36", "2.0058, 39.8583, -18.1521, 0.91", "1.82794, 41.8627, -17.9528, 0.68", "1.73455, 43.2817, -17.7937, 1.36", "1.57563, 45.2474, -17.5504, 0.91", "1.41862, 46.649, -17.363, 0.91", "1.2259, 48.0519, -17.1711, 1.59" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-36.4174, 41.4723, -22.3249, 0.23", "-38.4015, 42.2276, -22.6671, 0.23", "-40.3661, 42.9316, -22.9502, 0.23", "-40.8652, 43.1009, -23.01, 1.36", "-41.9245, 43.4927, -23.1221, 1.36", "-43.1991, 43.9462, -23.2674, 0.23", "-44.0601, 44.2447, -23.3681, 0.68", "-44.9154, 44.5022, -23.4545, 0.91", "-46.0139, 44.7852, -23.5896, 0.91", "-46.9597, 44.9398, -23.7816, 0.23", "-48.6768, 45.1231, -24.235, 0.23", "-49.0969, 45.1443, -24.3766, 1.59", "-50.1626, 45.1207, -24.7873, 0.23", "-51.8911, 45.0085, -25.5196, 0.23", "-53.351, 44.8863, -26.1649, 0.91", "-54.8282, 44.7276, -26.7993, 0.91", "-57.2523, 44.3832, -27.8083, 0.23", "-58.7025, 44.1137, -28.3708, 0.91", "-60.6122, 43.6929, -29.0152, 0.23", "-61.1201, 43.5815, -29.151, 1.36", "-62.6378, 43.1915, -29.4747, 0.23", "-64.6572, 42.6074, -29.8143, 0.91", "-66.1929, 42.1335, -29.9781, 0.23", "-68.1022, 41.5634, -30.131, 1.13", "-69.3903, 41.1322, -30.209, 1.13", "-71.421, 40.4584, -30.3295, 0.23", "-72.5022, 40.122, -30.4083, 0.68", "-73.541, 39.8015, -30.4899, 0.23", "-74.7229, 39.3252, -30.6045, 1.13", "-76.0848, 38.7098, -30.7585, 0.23", "-77.5149, 37.9835, -30.9418, 0.68", "-79.478, 36.9108, -31.2284, 0.23", "-80.522, 36.2765, -31.3897, 1.81", "-82.684, 34.9018, -31.7252, 0.23" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-36.4174, 41.4723, -22.3249, 0.91", "-37.9563, 40.2491, -19.4879, 0.91", "-38.8117, 39.3234, -17.6536, 1.13", "-39.3307, 38.6993, -16.4833, 0.45", "-39.7669, 38.1902, -15.5579, 1.13", "-40.4241, 37.5282, -14.2738, 0.23", "-41.1952, 36.8573, -12.9257, 0.91", "-42.5389, 35.8875, -10.9603, 0.23", "-42.6785, 35.8071, -10.7818, 0.23", "-43.4632, 35.5196, -9.96298, 0.91", "-44.972, 35.2697, -8.67243, 0.23", "-46.9409, 35.2476, -7.11177, 0.23", "-47.5466, 35.2944, -6.68567, 0.68", "-48.2916, 35.3731, -6.20851, 0.68", "-49.4109, 35.3953, -5.42243, 0.23", "-50.3764, 35.2691, -4.63225, 1.13", "-52.4304, 34.5748, -2.82264, 0.23", "-52.849, 34.4077, -2.45405, 0.23", "-53.2571, 34.2283, -2.1028, 1.13", "-55.0379, 33.5168, -0.778175, 0.45", "-56.5586, 32.8388, 0.3677, 0.45", "-57.2145, 32.5405, 0.825645, 1.36", "-59.4333, 31.7972, 2.02128, 0.23", "-60.033, 31.645, 2.32957, 0.23", "-62.269, 31.3229, 3.3051, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "26.5909, 35.8604, 36.9658, 0.23", "27.616, 44.3661, 42.1236, 0.23" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "26.5909, 35.8604, 36.9658, 0.23", "26.8607, 43.1477, 43.8086, 0.23" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "34.9166, 14.145, -30.9641, 0.68", "35.9856, 15.804, -32.8349, 0.68", "36.5675, 16.5201, -33.7516, 0.68", "37.9679, 18.0048, -35.8824, 0.91", "38.8854, 18.9241, -37.2554, 0.45", "39.6257, 19.6341, -38.3403, 0.91", "41.0974, 21.1218, -40.6815, 0.23", "41.969, 22.048, -42.1497, 0.91", "43.0885, 23.2575, -44.0916, 0.23", "43.7853, 24.0618, -45.3055, 0.68", "44.6096, 25.1632, -46.7435, 0.23", "46.0908, 27.4892, -49.2841, 0.23", "46.4302, 28.1118, -49.8168, 0.23", "47.0611, 29.4551, -50.8436, 0.68", "47.8832, 31.3665, -52.0919, 0.23", "48.3047, 32.3839, -52.6627, 0.91", "48.7151, 33.387, -53.0791, 0.23", "49.5701, 35.1152, -53.4362, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "34.9166, 14.145, -30.9641, 1.13", "33.9881, 14.8812, -32.0314, 1.13", "32.76, 15.8159, -33.6121, 0.23", "31.6079, 16.8055, -35.1443, 0.23", "30.8903, 17.4915, -36.1635, 0.91", "30.2056, 18.2328, -37.3864, 1.36", "29.1783, 19.6152, -39.8149, 0.23", "28.8242, 20.3011, -41.0634, 0.23", "28.5954, 21.2101, -42.6534, 0.91", "28.5736, 21.7618, -43.5971, 0.91", "28.8283, 24.2376, -47.6841, 0.91", "29.1322, 26.0656, -50.6214, 0.23", "29.3179, 26.8268, -51.8055, 0.91", "30.0151, 29.1966, -55.4918, 0.23", "30.6329, 30.9959, -58.398, 0.23", "30.9064, 31.721, -59.4868, 1.13" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "140.173, 44.6432, -12.1539, 0.23", "139.845, 46.7016, -13.229, 0.23", "139.796, 47.7505, -13.7087, 0.91", "139.723, 49.3312, -14.4316, 0.23", "139.697, 49.8914, -14.6879, 0.23", "139.647, 50.9468, -15.1705, 0.23", "139.61, 51.7457, -15.5359, 0.23", "139.667, 52.9477, -15.8885, 0.91" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "140.173, 44.6432, -12.1539, 0.23", "141.879, 45.1626, -10.9571, 0.23", "143.699, 45.7168, -9.68, 0.91", "145.949, 46.4019, -8.10146, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "25.992, 35.8927, -23.2718, 0.23", "26.8541, 37.3333, -24.1016, 0.23", "27.1323, 37.8916, -24.3862, 0.68", "27.5568, 38.7835, -24.7776, 0.23", "28.1211, 39.9243, -25.198, 0.45", "28.6482, 40.9938, -25.54, 0.23", "29.3455, 42.5245, -25.884, 0.91", "29.7359, 43.3269, -25.9463, 0.45", "30.2819, 44.4404, -25.9177, 1.13", "31.0059, 45.829, -25.7283, 0.23", "31.4439, 46.5149, -25.4957, 0.68", "32.5201, 47.8643, -24.7289, 0.23", "33.3306, 48.672, -24.0804, 0.23", "33.9879, 49.2544, -23.4994, 0.91", "34.938, 50.0506, -22.61, 0.23", "36.245, 51.1139, -21.3598, 0.91", "37.3205, 52.0619, -20.3459, 0.23", "38.3148, 53.1483, -19.4233, 0.23", "39.1141, 54.1582, -18.6484, 0.68", "39.5366, 54.8098, -18.1946, 0.23", "39.7574, 55.267, -17.941, 0.23", "40.3103, 56.9142, -17.3443, 0.68", "40.7047, 58.7718, -16.8806, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "25.992, 35.8927, -23.2718, 0.23", "27.2259, 35.0654, -24.6811, 0.23", "28.3677, 34.2974, -25.8863, 1.36", "30.2357, 33.2149, -27.9206, 0.23", "31.0112, 32.8117, -28.7216, 0.23", "32.5206, 32.0438, -30.1479, 0.68", "33.504, 31.5188, -31.0319, 0.23", "34.3064, 31.0913, -31.7276, 1.36", "36.9943, 29.7189, -33.9726, 0.23", "37.9973, 29.2718, -34.772, 0.23", "39.1767, 28.7993, -35.6877, 0.45", "40.5067, 28.2756, -36.7046, 1.13", "42.7115, 27.403, -38.4141, 0.23", "43.9106, 26.9346, -39.3708, 0.68", "45.4323, 26.3609, -40.5901, 0.23", "46.4337, 26.0439, -41.4952, 1.13", "48.2645, 25.5442, -43.0503, 0.23", "48.8692, 25.3819, -43.5347, 0.23", "50.0453, 25.0447, -44.493, 0.68", "51.71, 24.5568, -45.9199, 0.23", "54.2924, 23.7749, -48.0982, 0.91", "56.2856, 23.1064, -49.766, 0.23", "58.4157, 22.2994, -51.4725, 0.68", "60.4051, 21.3743, -53.0564, 0.23", "60.9009, 21.0933, -53.4301, 1.13", "61.674, 20.5691, -53.9626, 0.23", "62.5515, 19.9224, -54.717, 0.68", "63.7899, 18.997, -55.9198, 0.23", "64.3494, 18.5942, -56.4797, 1.13", "65.7634, 17.6319, -57.8932, 0.23", "66.4494, 17.1913, -58.6327, 0.68", "70.337, 14.8907, -62.9402, 0.23", "71.639, 14.1966, -64.3054, 1.36", "73.8926, 13.1061, -66.5968, 0.23", "74.8402, 12.7273, -67.556, 0.91", "76.4201, 12.2249, -69.2047, 0.23", "77.051, 12.0644, -69.84, 0.68", "79.1535, 11.6063, -71.7916, 0.23", "82.2656, 11.021, -74.5508, 0.23", "85.6004, 10.4771, -77.5117, 0.23", "88.784, 10.0532, -80.3886, 0.23", "89.6451, 9.97308, -81.1915, 0.91", "90.4814, 9.92527, -82.005, 0.23", "92.5182, 9.89879, -84.1377, 1.13", "94.711, 9.87277, -86.6048, 0.23", "95.4098, 9.82903, -87.4507, 1.13", "97.6987, 9.48022, -90.3142, 0.23", "98.4519, 9.30135, -91.3103, 0.91", "100.648, 8.55881, -94.2909, 0.23", "103.719, 7.07533, -98.2656, 0.23", "104.524, 6.59127, -99.0619, 0.91", "106.261, 5.40717, -100.436, 0.23", "106.812, 5.02912, -100.75, 0.23", "107.932, 4.32616, -101.255, 0.23", "109.935, 3.27889, -101.839, 0.23", "112.277, 2.53158, -102.402, 0.91", "116.136, 2.17313, -103.768, 0.23", "117.464, 2.16713, -104.3, 0.23", "118.748, 2.25474, -104.853, 0.23", "119.742, 2.42958, -105.333, 0.91", "122.338, 3.29125, -106.814, 0.23", "124.996, 4.73547, -108.595, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "1.2259, 48.0519, -17.1711, 0.23", "1.7875, 48.5079, -17.1711, 0.23", "2.85175, 49.5105, -17.1711, 0.91", "3.42869, 50.1842, -17.2862, 0.45", "4.00093, 50.8009, -17.5344, 1.36", "5.12229, 51.8291, -18.0884, 0.23", "5.77165, 52.3496, -18.4046, 0.23", "6.30268, 52.7631, -18.6976, 0.91", "8.05443, 54.0848, -19.825, 0.23", "9.78696, 55.3279, -21.0716, 0.23", "10.7376, 55.9316, -21.8178, 0.23", "11.743, 56.4865, -22.683, 0.68" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.2259, 48.0519, -17.1711, 0.23", "0.242549, 49.1806, -18.5648, 0.23", "-0.497831, 50.184, -19.7082, 0.91", "-0.969252, 50.8789, -20.3908, 0.23", "-1.6888, 51.9498, -21.3413, 1.13", "-3.02039, 54.0309, -23.236, 0.23", "-3.55917, 54.8606, -23.9848, 0.23", "-4.18618, 55.8559, -24.841, 1.36", "-4.9571, 57.0324, -25.9222, 0.23", "-5.60304, 57.8992, -26.7465, 0.91", "-7.01234, 59.3908, -28.1247, 0.23", "-7.79555, 60.0131, -28.727, 0.23", "-8.55894, 60.3976, -29.1546, 0.23", "-9.39633, 60.6743, -29.5302, 0.23", "-10.0787, 60.859, -29.7798, 0.23", "-11.5862, 61.2031, -30.0987, 1.13", "-13.4193, 61.5857, -30.2518, 0.23", "-16.7957, 62.2973, -30.2553, 0.23", "-18.1353, 62.6121, -30.0855, 0.23", "-19.3302, 62.9036, -29.8888, 0.23", "-21.7326, 63.5256, -29.3816, 0.91", "-23.6173, 64.0393, -28.8294, 0.23", "-25.4095, 64.5713, -28.0738, 0.91", "-27.7125, 65.3219, -26.7765, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_25", "dend_22", "dend_3", "dend_2", "dend_1", "dend_0", "dend_34", "dend_27", "dend_24", "dend_23", "dend_9", "dend_4", "dend_40", "dend_35", "dend_33", "dend_28", "dend_17", "dend_10", "dend_8", "dend_5", "dend_42", "dend_41", "dend_39", "dend_36", "dend_30", "dend_29", "dend_21", "dend_18", "dend_14", "dend_11", "dend_7", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_20", "dend_19", "dend_16", "dend_15", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_25", "dend_22", "dend_3", "dend_2", "dend_1", "dend_0", "dend_34", "dend_27", "dend_24", "dend_23", "dend_9", "dend_4", "dend_40", "dend_35", "dend_33", "dend_28", "dend_17", "dend_10", "dend_8", "dend_5", "dend_42", "dend_41", "dend_39", "dend_36", "dend_30", "dend_29", "dend_21", "dend_18", "dend_14", "dend_11", "dend_7", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_20", "dend_19", "dend_16", "dend_15", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_25", "dend_22", "dend_3", "dend_2", "dend_1", "dend_0", "axon_0", "dend_34", "dend_27", "dend_24", "dend_23", "dend_9", "dend_4", "axon_1", "dend_40", "dend_35", "dend_33", "dend_28", "dend_17", "dend_10", "dend_8", "dend_5", "dend_42", "dend_41", "dend_39", "dend_36", "dend_30", "dend_29", "dend_21", "dend_18", "dend_14", "dend_11", "dend_7", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_20", "dend_19", "dend_16", "dend_15", "dend_13", "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L1_HAC_84f0f8f321_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: soma_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: dend_26
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_25, dend_22, dend_3, dend_2, dend_1, dend_0, dend_34, dend_27, dend_24, dend_23, dend_9, dend_4, dend_40, dend_35, dend_33, dend_28, dend_17, dend_10, dend_8, dend_5, dend_42, dend_41, dend_39, dend_36, dend_30, dend_29, dend_21, dend_18, dend_14, dend_11, dend_7, dend_6, dend_38, dend_37, dend_32, dend_31, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_25, dend_22, dend_3, dend_2, dend_1, dend_0, dend_34, dend_27, dend_24, dend_23, dend_9, dend_4, dend_40, dend_35, dend_33, dend_28, dend_17, dend_10, dend_8, dend_5, dend_42, dend_41, dend_39, dend_36, dend_30, dend_29, dend_21, dend_18, dend_14, dend_11, dend_7, dend_6, dend_38, dend_37, dend_32, dend_31, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_25, dend_22, dend_3, dend_2, dend_1, dend_0, axon_0, dend_34, dend_27, dend_24, dend_23, dend_9, dend_4, axon_1, dend_40, dend_35, dend_33, dend_28, dend_17, dend_10, dend_8, dend_5, dend_42, dend_41, dend_39, dend_36, dend_30, dend_29, dend_21, dend_18, dend_14, dend_11, dend_7, dend_6, dend_38, dend_37, dend_32, dend_31, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.4500000877849796)
    connect dend_25(0), soma_0(0.4500000877849796)
    connect dend_22(0), soma_0(0.4500000877849796)
    connect dend_3(0), soma_0(0.4500000877849796)
    connect dend_2(0), soma_0(0.4500000877849796)
    connect dend_1(0), soma_0(0.4500000877849796)
    connect dend_0(0), soma_0(0.4500000877849796)
    connect axon_0(0), soma_0(1.0)
    connect dend_34(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 3.19088, -7.39601, 0.0, 4.79704 ) }
    soma_0 { pt3dadd( 2.86334, -6.61538, 0.0, 8.62796 ) }
    soma_0 { pt3dadd( 2.53579, -5.83474, 0.0, 10.7747 ) }
    soma_0 { pt3dadd( 2.20824, -5.05411, 0.0, 12.1151 ) }
    soma_0 { pt3dadd( 1.8807, -4.27348, 0.0, 12.9881 ) }
    soma_0 { pt3dadd( 1.55315, -3.49285, 0.0, 13.6708 ) }
    soma_0 { pt3dadd( 1.22561, -2.71222, 0.0, 13.5595 ) }
    soma_0 { pt3dadd( 0.898059, -1.93159, 0.0, 13.3795 ) }
    soma_0 { pt3dadd( 0.570512, -1.15096, 0.0, 13.2056 ) }
    soma_0 { pt3dadd( 0.242966, -0.370332, 0.0, 13.0689 ) }
    soma_0 { pt3dadd( -0.0845809, 0.410298, 0.0, 12.9361 ) }
    soma_0 { pt3dadd( -0.412127, 1.19093, 0.0, 12.8032 ) }
    soma_0 { pt3dadd( -0.739674, 1.97156, 0.0, 12.6504 ) }
    soma_0 { pt3dadd( -1.06722, 2.75219, 0.0, 12.38 ) }
    soma_0 { pt3dadd( -1.39477, 3.53282, 0.0, 12.0666 ) }
    soma_0 { pt3dadd( -1.72231, 4.31345, 0.0, 11.3179 ) }
    soma_0 { pt3dadd( -2.04986, 5.09408, 0.0, 10.5154 ) }
    soma_0 { pt3dadd( -2.37741, 5.87471, 0.0, 9.19791 ) }
    soma_0 { pt3dadd( -2.70495, 6.65534, 0.0, 7.53489 ) }
    soma_0 { pt3dadd( -3.0325, 7.43597, 0.0, 5.50886 ) }
    soma_0 { pt3dadd( -3.36005, 8.2166, 0.0, 3.20938 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 6.62108, -2.27917, -2.63, 2.5 ) }
    dend_26 { pt3dadd( 8.30627, -2.17851, -1.74995, 1.81 ) }
    dend_26 { pt3dadd( 10.5332, -2.0455, -0.587013, 1.81 ) }
    dend_26 { pt3dadd( 12.3651, -1.93608, 0.369665, 2.27 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 25/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 0.80114, -5.91917, -8.87, 0.68 ) }
    dend_25 { pt3dadd( -0.155241, -6.89559, -10.111, 0.68 ) }
    dend_25 { pt3dadd( -0.937938, -7.70181, -11.4868, 1.13 ) }
    dend_25 { pt3dadd( -1.54724, -8.45328, -13.0067, 0.68 ) }
    dend_25 { pt3dadd( -1.92168, -9.00154, -14.4564, 1.13 ) }
    dend_25 { pt3dadd( -2.3316, -9.77748, -16.8562, 0.45 ) }
    dend_25 { pt3dadd( -2.60512, -10.8844, -20.2063, 1.36 ) }
    dend_25 { pt3dadd( -2.65916, -11.7614, -22.9574, 0.23 ) }
    dend_25 { pt3dadd( -2.45107, -12.3777, -24.9117, 0.68 ) }
    dend_25 { pt3dadd( -1.7733, -13.1787, -27.1956, 0.23 ) }
    dend_25 { pt3dadd( -1.38916, -13.5203, -27.9913, 1.81 ) }
    dend_25 { pt3dadd( -0.271518, -14.5508, -29.7635, 0.23 ) }
    dend_25 { pt3dadd( 0.774102, -15.6708, -31.0914, 1.13 ) }
    dend_25 { pt3dadd( 1.71985, -17.0105, -32.2566, 0.23 ) }
    dend_25 { pt3dadd( 2.08403, -17.7176, -32.7639, 1.13 ) }
    dend_25 { pt3dadd( 2.57122, -18.8614, -33.4726, 1.13 ) }
    dend_25 { pt3dadd( 3.58743, -21.2942, -34.9269, 0.23 ) }
    dend_25 { pt3dadd( 3.76929, -21.7254, -35.2052, 1.13 ) }
    dend_25 { pt3dadd( 4.00105, -22.208, -35.5084, 1.13 ) }
    dend_25 { pt3dadd( 4.90143, -23.9589, -36.4667, 0.23 ) }
    dend_25 { pt3dadd( 5.45963, -24.9557, -37.0193, 1.13 ) }
    dend_25 { pt3dadd( 6.11355, -26.1274, -37.6245, 1.59 ) }
    dend_25 { pt3dadd( 7.02658, -27.9733, -38.5726, 0.23 ) }
    dend_25 { pt3dadd( 7.38775, -28.867, -39.0642, 1.13 ) }
    dend_25 { pt3dadd( 7.94853, -30.8119, -40.1409, 0.23 ) }
    dend_25 { pt3dadd( 8.18464, -32.6339, -41.306, 1.81 ) }
    dend_25 { pt3dadd( 8.18116, -34.3274, -42.4898, 0.23 ) }
    dend_25 { pt3dadd( 7.98761, -36.1979, -43.9048, 0.91 ) }
    dend_25 { pt3dadd( 7.78448, -37.6149, -45.0078, 0.23 ) }
    dend_25 { pt3dadd( 7.6115, -38.8094, -46.0453, 1.36 ) }
    dend_25 { pt3dadd( 7.3243, -41.4428, -48.4946, 0.23 ) }
    dend_25 { pt3dadd( 7.22461, -42.4932, -49.4844, 1.59 ) }
    dend_25 { pt3dadd( 7.1229, -45.268, -52.2007, 0.23 ) }
    dend_25 { pt3dadd( 7.13672, -46.0882, -52.9716, 1.13 ) }
    dend_25 { pt3dadd( 7.19286, -47.7092, -54.5477, 0.23 ) }
    dend_25 { pt3dadd( 7.32736, -48.616, -55.4456, 1.59 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 61/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.93891, -5.49917, -9.15, 1.13 ) }
    dend_22 { pt3dadd( -2.45013, -4.81828, -10.0327, 1.13 ) }
    dend_22 { pt3dadd( -2.83382, -4.308, -10.7305, 1.13 ) }
    dend_22 { pt3dadd( -3.44243, -3.63135, -11.5674, 0.68 ) }
    dend_22 { pt3dadd( -4.51124, -2.59964, -12.7087, 0.68 ) }
    dend_22 { pt3dadd( -6.10722, -1.05906, -14.4131, 0.91 ) }
    dend_22 { pt3dadd( -6.98534, -0.211412, -15.3508, 0.91 ) }
    dend_22 { pt3dadd( -8.43563, 1.30038, -16.916, 0.91 ) }
    dend_22 { pt3dadd( -10.0023, 2.93781, -18.5369, 0.91 ) }
    dend_22 { pt3dadd( -11.3583, 4.31035, -19.8819, 1.59 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 71/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.358897, 8.13083, -5.92, 3.18 ) }
    dend_3 { pt3dadd( -0.271192, 8.63967, -6.26682, 2.27 ) }
    dend_3 { pt3dadd( 0.182915, 11.2743, -8.06254, 1.36 ) }
    dend_3 { pt3dadd( 0.569366, 13.5164, -9.59072, 2.04 ) }
    // Section: dend_2, id: dend_2, parent: soma_0 (entry count 75/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -1.28889, 7.19083, 0.0799999, 0.91 ) }
    dend_2 { pt3dadd( -1.81957, 8.45403, 0.593498, 0.23 ) }
    dend_2 { pt3dadd( -2.59338, 10.4057, 1.28083, 1.36 ) }
    dend_2 { pt3dadd( -3.15167, 12.1388, 1.82605, 1.13 ) }
    dend_2 { pt3dadd( -3.38799, 13.1709, 2.11119, 1.13 ) }
    dend_2 { pt3dadd( -3.50727, 13.9948, 2.31137, 0.23 ) }
    dend_2 { pt3dadd( -3.6347, 15.2953, 2.59923, 0.23 ) }
    dend_2 { pt3dadd( -3.64706, 16.0017, 2.74381, 0.68 ) }
    dend_2 { pt3dadd( -3.60398, 17.2257, 2.94014, 0.68 ) }
    dend_2 { pt3dadd( -3.54016, 18.4485, 3.13818, 0.91 ) }
    dend_2 { pt3dadd( -3.48472, 19.3233, 3.29594, 0.45 ) }
    dend_2 { pt3dadd( -3.3265, 21.4089, 3.69164, 1.36 ) }
    dend_2 { pt3dadd( -3.07716, 23.3342, 4.11005, 0.45 ) }
    dend_2 { pt3dadd( -2.87051, 24.5172, 4.39044, 0.45 ) }
    dend_2 { pt3dadd( -2.76756, 25.0481, 4.52747, 0.45 ) }
    dend_2 { pt3dadd( -2.59034, 25.9039, 4.75957, 0.45 ) }
    dend_2 { pt3dadd( -2.13814, 27.5235, 5.20639, 1.36 ) }
    dend_2 { pt3dadd( -1.32962, 29.152, 5.63469, 0.23 ) }
    dend_2 { pt3dadd( -0.776532, 29.9093, 5.81653, 0.23 ) }
    dend_2 { pt3dadd( -0.287176, 30.4389, 5.97943, 0.23 ) }
    dend_2 { pt3dadd( 0.0795081, 39.4655, 10.2674, 0.23 ) }
    dend_2 { pt3dadd( 1.86849, 48.5484, 14.049, 0.23 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 97/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.25886, 4.52083, 6.68, 0.91 ) }
    dend_1 { pt3dadd( -1.27653, 5.79136, 6.56737, 0.91 ) }
    dend_1 { pt3dadd( -1.10239, 6.71342, 6.44222, 1.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( -0.720945, 7.86957, 6.24236, 0.68 ) }
    dend_1 { pt3dadd( -0.366642, 8.67354, 6.09887, 0.68 ) }
    dend_1 { pt3dadd( -1.01954E-4, 9.43381, 5.95523, 0.68 ) }
    dend_1 { pt3dadd( 1.22609, 11.9795, 5.45937, 0.45 ) }
    dend_1 { pt3dadd( 1.83179, 13.0595, 5.21127, 0.23 ) }
    dend_1 { pt3dadd( 2.6682, 14.419, 4.85246, 0.68 ) }
    dend_1 { pt3dadd( 3.60061, 15.7722, 4.45641, 0.68 ) }
    dend_1 { pt3dadd( 4.32826, 16.683, 4.171, 0.68 ) }
    dend_1 { pt3dadd( 5.31379, 17.7336, 3.81621, 1.13 ) }
    dend_1 { pt3dadd( 6.16513, 18.5299, 3.52474, 1.13 ) }
    dend_1 { pt3dadd( 7.11056, 19.3766, 3.17642, 1.13 ) }
    dend_1 { pt3dadd( 8.24095, 20.3813, 2.65387, 0.68 ) }
    dend_1 { pt3dadd( 9.92856, 21.9942, 1.70238, 1.13 ) }
    dend_1 { pt3dadd( 11.2216, 23.3294, 0.917412, 0.68 ) }
    dend_1 { pt3dadd( 12.1091, 24.3483, 0.346496, 0.68 ) }
    dend_1 { pt3dadd( 12.8032, 25.2005, -0.055721, 0.91 ) }
    dend_1 { pt3dadd( 14.5078, 27.4668, -0.999356, 0.45 ) }
    dend_1 { pt3dadd( 16.1942, 29.8868, -1.79636, 0.45 ) }
    dend_1 { pt3dadd( 17.1143, 31.3207, -2.14088, 1.13 ) }
    dend_1 { pt3dadd( 17.858, 32.5144, -2.3617, 1.36 ) }
    dend_1 { pt3dadd( 19.541, 35.102, -2.72017, 0.23 ) }
    dend_1 { pt3dadd( 19.706, 35.3258, -2.74143, 0.68 ) }
    dend_1 { pt3dadd( 21.1912, 37.1653, -2.87735, 0.23 ) }
    dend_1 { pt3dadd( 22.3401, 38.4962, -3.06281, 0.23 ) }
    dend_1 { pt3dadd( 23.3438, 39.6228, -3.35553, 0.23 ) }
    dend_1 { pt3dadd( 24.4528, 40.8101, -3.81367, 1.36 ) }
    dend_1 { pt3dadd( 25.576, 42.0947, -4.47499, 0.68 ) }
    dend_1 { pt3dadd( 26.5062, 43.1296, -5.08053, 0.23 ) }
    dend_1 { pt3dadd( 26.7984, 43.4417, -5.30995, 0.23 ) }
    dend_1 { pt3dadd( 27.5644, 44.1287, -5.85219, 0.23 ) }
    dend_1 { pt3dadd( 28.6075, 44.9657, -6.45786, 0.68 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.66889, -6.10917, -3.95, 0.91 ) }
    dend_0 { pt3dadd( -3.99649, -6.79972, -4.35685, 0.91 ) }
    dend_0 { pt3dadd( -5.11355, -8.65545, -5.26693, 0.91 ) }
    dend_0 { pt3dadd( -5.84933, -9.57208, -5.63218, 1.59 ) }
    dend_0 { pt3dadd( -7.25287, -10.7208, -5.99185, 0.68 ) }
    dend_0 { pt3dadd( -9.25111, -11.589, -6.00365, 0.23 ) }
    dend_0 { pt3dadd( -10.4718, -11.8866, -5.86859, 0.23 ) }
    dend_0 { pt3dadd( -12.7003, -11.7963, -5.4085, 0.23 ) }
    dend_0 { pt3dadd( -14.3359, -11.3598, -5.04316, 1.13 ) }
    dend_0 { pt3dadd( -16.3396, -10.5584, -4.58975, 0.23 ) }
    dend_0 { pt3dadd( -18.2199, -9.56238, -4.17722, 0.23 ) }
    dend_0 { pt3dadd( -18.5923, -9.33365, -4.11501, 0.23 ) }
    dend_0 { pt3dadd( -20.1552, -8.35561, -4.04012, 1.13 ) }
    dend_0 { pt3dadd( -21.933, -7.3588, -4.26595, 0.45 ) }
    dend_0 { pt3dadd( -22.3363, -7.16642, -4.35722, 0.91 ) }
    dend_0 { pt3dadd( -23.3885, -6.75352, -4.66623, 0.91 ) }
    dend_0 { pt3dadd( -25.0081, -6.18447, -5.20697, 0.23 ) }
    dend_0 { pt3dadd( -26.7177, -5.66394, -5.73542, 0.91 ) }
    dend_0 { pt3dadd( -28.3037, -5.28263, -6.14264, 0.23 ) }
    dend_0 { pt3dadd( -28.953, -5.13543, -6.28814, 0.91 ) }
    dend_0 { pt3dadd( -29.6509, -4.93614, -6.41022, 0.23 ) }
    dend_0 { pt3dadd( -30.4707, -4.6044, -6.49198, 0.91 ) }
    dend_0 { pt3dadd( -31.7544, -3.80507, -6.47914, 0.91 ) }
    dend_0 { pt3dadd( -32.7901, -2.9386, -6.38821, 0.23 ) }
    dend_0 { pt3dadd( -33.3983, -2.29542, -6.35018, 0.68 ) }
    dend_0 { pt3dadd( -34.5125, -0.888066, -6.3664, 0.23 ) }
    dend_0 { pt3dadd( -35.3946, 0.330122, -6.42712, 1.36 ) }
    dend_0 { pt3dadd( -36.3069, 1.65336, -6.52809, 0.68 ) }
    dend_0 { pt3dadd( -37.7731, 3.77314, -6.73598, 0.68 ) }
    dend_0 { pt3dadd( -39.2166, 5.63837, -7.06277, 0.68 ) }
    dend_0 { pt3dadd( -40.4324, 7.16708, -7.42811, 0.23 ) }
    dend_0 { pt3dadd( -40.8601, 7.68061, -7.60457, 0.23 ) }
    dend_0 { pt3dadd( -41.6075, 8.4976, -7.94628, 0.23 ) }
    dend_0 { pt3dadd( -42.5972, 9.42961, -8.40239, 0.23 ) }
    dend_0 { pt3dadd( -44.3957, 10.5111, -9.06221, 0.23 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -3.36005, 8.2166, 0.0, 0.651244 ) }
    axon_0 { pt3dadd( -9.16374, 22.0483, 0.0, 0.651244 ) }
    axon_0 { pt3dadd( -14.9674, 35.8801, 0.0, 0.651244 ) }
    // Section: dend_34, id: dend_34, parent: dend_26 (entry count 69/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 12.3651, -1.93608, 0.369665, 1.13 ) }
    dend_34 { pt3dadd( 13.6175, -1.49998, 1.76383, 1.13 ) }
    dend_34 { pt3dadd( 14.8466, -1.16437, 3.14589, 1.13 ) }
    dend_34 { pt3dadd( 16.4315, -0.734516, 4.91793, 1.13 ) }
    dend_34 { pt3dadd( 17.7439, -0.324709, 6.43261, 0.91 ) }
    dend_34 { pt3dadd( 19.5209, 0.230208, 8.48364, 0.91 ) }
    dend_34 { pt3dadd( 20.1403, 0.423611, 9.19848, 0.91 ) }
    dend_34 { pt3dadd( 20.5633, 0.515734, 9.72761, 0.91 ) }
    dend_34 { pt3dadd( 21.0935, 0.539624, 10.387, 0.91 ) }
    dend_34 { pt3dadd( 21.8269, 0.298495, 11.4025, 0.91 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 79/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 12.3651, -1.93608, 0.369665, 0.68 ) }
    dend_27 { pt3dadd( 14.8038, -2.01265, -1.11021, 0.68 ) }
    dend_27 { pt3dadd( 16.5644, -2.20524, -2.02291, 0.68 ) }
    dend_27 { pt3dadd( 17.4638, -2.34897, -2.4181, 0.68 ) }
    dend_27 { pt3dadd( 18.4793, -2.51124, -2.86428, 0.68 ) }
    dend_27 { pt3dadd( 19.622, -2.69385, -3.36638, 0.68 ) }
    dend_27 { pt3dadd( 20.9681, -2.90896, -3.95786, 1.59 ) }
    dend_27 { pt3dadd( 22.1588, -3.11032, -4.32643, 0.91 ) }
    dend_27 { pt3dadd( 23.2243, -3.43727, -4.52805, 1.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 88/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.3583, 4.31035, -19.8819, 0.45 ) }
    dend_24 { pt3dadd( -11.9792, 6.60309, -20.9645, 0.45 ) }
    dend_24 { pt3dadd( -12.2603, 7.81581, -21.4473, 0.68 ) }
    dend_24 { pt3dadd( -12.4476, 8.89851, -21.8154, 0.68 ) }
    dend_24 { pt3dadd( -12.7159, 10.8997, -22.4246, 0.45 ) }
    dend_24 { pt3dadd( -12.7995, 11.7676, -22.6659, 0.45 ) }
    dend_24 { pt3dadd( -12.8596, 12.9561, -22.9787, 0.23 ) }
    dend_24 { pt3dadd( -12.8123, 14.6245, -23.35, 0.68 ) }
    dend_24 { pt3dadd( -12.4975, 16.9151, -24.0516, 0.23 ) }
    dend_24 { pt3dadd( -12.2782, 17.6923, -24.336, 0.23 ) }
    dend_24 { pt3dadd( -11.8898, 18.4251, -24.6717, 0.91 ) }
    dend_24 { pt3dadd( -11.3738, 19.1228, -25.0614, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_24 { pt3dadd( -9.96819, 20.5325, -25.9989, 1.13 ) }
    dend_24 { pt3dadd( -7.21114, 22.6364, -27.6008, 0.23 ) }
    dend_24 { pt3dadd( -5.49586, 23.679, -28.4654, 0.68 ) }
    dend_24 { pt3dadd( -2.54812, 25.2317, -29.7736, 0.23 ) }
    dend_24 { pt3dadd( -1.75936, 25.5889, -30.0823, 0.91 ) }
    dend_24 { pt3dadd( -0.162256, 26.2375, -30.6241, 0.23 ) }
    dend_24 { pt3dadd( 1.48219, 26.8238, -31.0614, 0.68 ) }
    dend_24 { pt3dadd( 2.4807, 27.1579, -31.2628, 0.23 ) }
    dend_24 { pt3dadd( 3.78651, 27.6557, -31.5399, 0.68 ) }
    dend_24 { pt3dadd( 6.44072, 28.8127, -32.121, 0.23 ) }
    dend_24 { pt3dadd( 6.93486, 29.061, -32.2377, 0.91 ) }
    dend_24 { pt3dadd( 8.63389, 29.9717, -32.6915, 0.23 ) }
    dend_24 { pt3dadd( 10.6153, 31.0818, -33.2267, 0.23 ) }
    dend_24 { pt3dadd( 12.0582, 31.8921, -33.5803, 1.13 ) }
    dend_24 { pt3dadd( 12.3705, 32.0632, -33.6474, 1.13 ) }
    dend_24 { pt3dadd( 14.7292, 33.2406, -34.0436, 0.23 ) }
    dend_24 { pt3dadd( 15.989, 33.7994, -34.2222, 0.23 ) }
    dend_24 { pt3dadd( 18.2931, 34.7145, -34.5304, 1.13 ) }
    dend_24 { pt3dadd( 21.28, 35.7944, -34.8982, 0.23 ) }
    dend_24 { pt3dadd( 22.1894, 36.0909, -35.0053, 0.68 ) }
    dend_24 { pt3dadd( 24.1547, 36.6696, -35.2371, 0.23 ) }
    dend_24 { pt3dadd( 25.3767, 36.9609, -35.3746, 0.68 ) }
    dend_24 { pt3dadd( 28.0427, 37.5485, -35.6378, 0.23 ) }
    dend_24 { pt3dadd( 29.1432, 37.7527, -35.7547, 0.68 ) }
    dend_24 { pt3dadd( 30.7321, 38.0227, -35.9256, 0.68 ) }
    dend_24 { pt3dadd( 31.4418, 38.1561, -36.0094, 0.68 ) }
    dend_24 { pt3dadd( 33.4491, 38.6009, -36.255, 0.23 ) }
    dend_24 { pt3dadd( 34.3008, 38.8236, -36.352, 0.23 ) }
    dend_24 { pt3dadd( 35.2912, 39.1465, -36.4417, 0.23 ) }
    dend_24 { pt3dadd( 35.7851, 39.3446, -36.4926, 0.91 ) }
    dend_24 { pt3dadd( 37.3339, 40.0817, -36.668, 0.23 ) }
    dend_24 { pt3dadd( 38.2665, 40.6399, -36.7737, 0.91 ) }
    dend_24 { pt3dadd( 39.2133, 41.3313, -36.8759, 0.23 ) }
    dend_24 { pt3dadd( 39.8872, 41.8757, -36.9855, 1.13 ) }
    dend_24 { pt3dadd( 40.4339, 42.3622, -37.0941, 0.23 ) }
    dend_24 { pt3dadd( 41.1696, 42.991, -37.1703, 0.68 ) }
    dend_24 { pt3dadd( 42.2427, 43.7875, -37.1812, 0.23 ) }
    dend_24 { pt3dadd( 42.9973, 44.2669, -37.1507, 0.91 ) }
    dend_24 { pt3dadd( 44.6504, 45.1541, -36.9567, 0.23 ) }
    dend_24 { pt3dadd( 45.5259, 45.5657, -36.8171, 0.91 ) }
    dend_24 { pt3dadd( 48.0729, 46.6191, -36.3397, 0.23 ) }
    dend_24 { pt3dadd( 49.8207, 47.2784, -35.9689, 0.91 ) }
    dend_24 { pt3dadd( 51.8289, 47.9628, -35.4771, 0.23 ) }
    dend_24 { pt3dadd( 53.5679, 48.5068, -34.9829, 0.23 ) }
    dend_24 { pt3dadd( 55.2134, 48.9572, -34.4258, 0.23 ) }
    dend_24 { pt3dadd( 55.8901, 49.1305, -34.2132, 1.13 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 46/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -11.3583, 4.31035, -19.8819, 0.68 ) }
    dend_23 { pt3dadd( -13.2417, 2.46594, -21.6373, 0.68 ) }
    dend_23 { pt3dadd( -14.8172, 1.02792, -22.9424, 0.45 ) }
    dend_23 { pt3dadd( -15.9937, 0.0313452, -23.8227, 0.45 ) }
    dend_23 { pt3dadd( -17.7111, -1.327, -25.02, 0.91 ) }
    dend_23 { pt3dadd( -19.0118, -2.35095, -25.9273, 0.23 ) }
    dend_23 { pt3dadd( -20.37, -3.43356, -26.8713, 0.68 ) }
    dend_23 { pt3dadd( -21.6762, -4.42888, -27.7151, 0.23 ) }
    dend_23 { pt3dadd( -22.3258, -4.94451, -28.1603, 0.23 ) }
    dend_23 { pt3dadd( -23.1352, -5.64647, -28.7314, 1.36 ) }
    dend_23 { pt3dadd( -24.1998, -6.63982, -29.415, 0.23 ) }
    dend_23 { pt3dadd( -24.5727, -7.00407, -29.6394, 1.13 ) }
    dend_23 { pt3dadd( -25.5652, -8.13137, -30.2714, 0.23 ) }
    dend_23 { pt3dadd( -25.949, -8.67328, -30.5888, 1.59 ) }
    dend_23 { pt3dadd( -26.4489, -9.58648, -31.1006, 0.68 ) }
    dend_23 { pt3dadd( -27.1184, -10.884, -31.8211, 0.23 ) }
    dend_23 { pt3dadd( -27.3877, -11.3636, -32.0856, 1.13 ) }
    dend_23 { pt3dadd( -27.9026, -12.2552, -32.586, 1.13 ) }
    dend_23 { pt3dadd( -29.1166, -14.4229, -33.8149, 0.23 ) }
    dend_23 { pt3dadd( -29.8671, -15.9953, -34.7223, 1.81 ) }
    dend_23 { pt3dadd( -30.5437, -17.6967, -35.6829, 0.23 ) }
    dend_23 { pt3dadd( -30.843, -18.599, -36.1989, 0.91 ) }
    dend_23 { pt3dadd( -31.2631, -19.9401, -36.9375, 0.23 ) }
    dend_23 { pt3dadd( -31.4693, -20.7017, -37.3468, 1.13 ) }
    dend_23 { pt3dadd( -31.8324, -22.185, -38.0992, 0.23 ) }
    dend_23 { pt3dadd( -32.009, -22.9658, -38.4886, 1.59 ) }
    dend_23 { pt3dadd( -32.5639, -25.563, -39.9339, 0.23 ) }
    dend_23 { pt3dadd( -32.9753, -27.2891, -40.9659, 1.13 ) }
    dend_23 { pt3dadd( -33.4552, -28.718, -41.9347, 0.23 ) }
    dend_23 { pt3dadd( -34.0819, -30.0014, -42.9206, 1.13 ) }
    dend_23 { pt3dadd( -34.4204, -30.4849, -43.3468, 1.81 ) }
    dend_23 { pt3dadd( -36.2122, -32.3621, -45.2918, 0.23 ) }
    dend_23 { pt3dadd( -36.8378, -32.8489, -45.8637, 0.91 ) }
    dend_23 { pt3dadd( -38.3996, -33.7823, -47.2689, 0.23 ) }
    dend_23 { pt3dadd( -39.6751, -34.369, -48.3282, 1.13 ) }
    dend_23 { pt3dadd( -40.7294, -34.7433, -49.1547, 0.23 ) }
    dend_23 { pt3dadd( -41.927, -35.0809, -50.0265, 0.23 ) }
    dend_23 { pt3dadd( -42.9533, -35.3098, -50.6688, 1.13 ) }
    dend_23 { pt3dadd( -45.2719, -35.8618, -52.1391, 0.23 ) }
    dend_23 { pt3dadd( -45.8781, -36.0438, -52.5028, 0.23 ) }
    dend_23 { pt3dadd( -46.8029, -36.3301, -53.0768, 0.23 ) }
    dend_23 { pt3dadd( -47.4101, -36.5306, -53.465, 0.23 ) }
    dend_23 { pt3dadd( -48.1536, -36.7615, -53.8878, 1.36 ) }
    dend_23 { pt3dadd( -49.8096, -37.3163, -54.7321, 0.23 ) }
    dend_23 { pt3dadd( -50.7344, -37.8421, -55.0042, 0.91 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 91/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 0.569366, 13.5164, -9.59072, 1.36 ) }
    dend_9 { pt3dadd( 1.28153, 15.2594, -9.7027, 1.36 ) }
    dend_9 { pt3dadd( 1.83117, 16.6047, -9.78912, 1.36 ) }
    dend_9 { pt3dadd( 2.92258, 19.2761, -9.96074, 1.36 ) }
    dend_9 { pt3dadd( 3.59182, 20.9141, -10.066, 1.36 ) }
    dend_9 { pt3dadd( 4.20822, 22.4228, -10.1629, 2.04 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 0.569366, 13.5164, -9.59072, 0.68 ) }
    dend_4 { pt3dadd( -1.4098, 15.2972, -10.1132, 0.68 ) }
    dend_4 { pt3dadd( -3.20354, 17.043, -10.8991, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_4 { pt3dadd( -4.29624, 18.1129, -11.5279, 0.68 ) }
    dend_4 { pt3dadd( -5.50025, 19.2506, -12.2677, 0.68 ) }
    dend_4 { pt3dadd( -7.0092, 20.6214, -13.2463, 0.91 ) }
    dend_4 { pt3dadd( -8.3499, 21.8211, -14.118, 0.91 ) }
    dend_4 { pt3dadd( -9.66886, 23.0185, -15.0475, 0.91 ) }
    dend_4 { pt3dadd( -10.85, 24.1728, -15.8815, 0.91 ) }
    dend_4 { pt3dadd( -11.5538, 24.931, -16.3716, 0.91 ) }
    dend_4 { pt3dadd( -12.1609, 25.6248, -16.7129, 0.68 ) }
    dend_4 { pt3dadd( -13.1168, 26.6206, -17.0827, 1.13 ) }
    dend_4 { pt3dadd( -14.9796, 28.3698, -17.6627, 1.13 ) }
    dend_4 { pt3dadd( -16.3518, 29.6124, -18.0192, 0.23 ) }
    dend_4 { pt3dadd( -17.4717, 30.6622, -18.3169, 1.13 ) }
    dend_4 { pt3dadd( -18.8925, 32.0131, -18.7313, 1.13 ) }
    dend_4 { pt3dadd( -20.4106, 33.4013, -19.2032, 0.23 ) }
    dend_4 { pt3dadd( -21.1487, 34.0099, -19.438, 0.68 ) }
    dend_4 { pt3dadd( -21.7161, 34.4162, -19.6187, 0.68 ) }
    dend_4 { pt3dadd( -23.9771, 35.8643, -20.2618, 1.13 ) }
    dend_4 { pt3dadd( -24.8551, 36.4238, -20.4997, 1.13 ) }
    dend_4 { pt3dadd( -26.9395, 37.7559, -21.0376, 0.23 ) }
    dend_4 { pt3dadd( -28.2908, 38.6441, -21.3291, 1.59 ) }
    dend_4 { pt3dadd( -29.9046, 39.6182, -21.6174, 0.68 ) }
    dend_4 { pt3dadd( -31.8111, 40.6017, -21.9389, 1.36 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 22/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -14.9674, 35.8801, 0.0, 0.15614 ) }
    axon_1 { pt3dadd( -20.7711, 49.7118, 0.0, 0.15614 ) }
    axon_1 { pt3dadd( -26.5748, 63.5436, 0.0, 0.15614 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 25/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 21.8269, 0.298495, 11.4025, 0.23 ) }
    dend_40 { pt3dadd( 19.9644, 1.61804, 12.0008, 0.23 ) }
    dend_40 { pt3dadd( 18.4298, 2.64863, 12.4475, 0.91 ) }
    dend_40 { pt3dadd( 16.9547, 3.63303, 12.8297, 0.91 ) }
    dend_40 { pt3dadd( 15.2242, 4.89509, 13.1439, 0.68 ) }
    dend_40 { pt3dadd( 13.5852, 6.19008, 13.354, 0.68 ) }
    dend_40 { pt3dadd( 12.2017, 7.38595, 13.48, 0.68 ) }
    dend_40 { pt3dadd( 11.2265, 8.3348, 13.4895, 0.68 ) }
    dend_40 { pt3dadd( 9.96936, 9.62549, 13.3845, 0.68 ) }
    dend_40 { pt3dadd( 8.29782, 11.4924, 13.1354, 0.45 ) }
    dend_40 { pt3dadd( 7.5979, 12.3089, 12.9479, 0.45 ) }
    dend_40 { pt3dadd( 6.92412, 13.2075, 12.6481, 0.45 ) }
    dend_40 { pt3dadd( 6.29311, 14.2669, 12.2703, 0.45 ) }
    dend_40 { pt3dadd( 5.56078, 15.7912, 11.7149, 0.45 ) }
    dend_40 { pt3dadd( -0.937811, 23.2889, 12.9609, 0.45 ) }
    dend_40 { pt3dadd( -6.74029, 30.9184, 15.8108, 0.45 ) }
    dend_40 { pt3dadd( -12.0918, 38.3723, 19.7858, 0.45 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 42/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 21.8269, 0.298495, 11.4025, 1.13 ) }
    dend_35 { pt3dadd( 23.343, 2.35662, 12.9186, 1.13 ) }
    dend_35 { pt3dadd( 23.8697, 3.97488, 13.9885, 0.45 ) }
    dend_35 { pt3dadd( 23.9247, 4.97648, 14.6029, 1.13 ) }
    dend_35 { pt3dadd( 23.9715, 5.82954, 15.1262, 1.13 ) }
    dend_35 { pt3dadd( 24.0329, 6.94772, 15.8121, 1.13 ) }
    dend_35 { pt3dadd( 24.1564, 9.19877, 17.1929, 0.68 ) }
    dend_35 { pt3dadd( 23.6276, 11.2347, 18.2375, 0.23 ) }
    dend_35 { pt3dadd( 23.1256, 12.3331, 18.8429, 0.23 ) }
    dend_35 { pt3dadd( 25.293, 19.9922, 24.8961, 0.23 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 52/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 23.2243, -3.43727, -4.52805, 0.23 ) }
    dend_33 { pt3dadd( 23.4261, -5.13923, -5.22148, 0.23 ) }
    dend_33 { pt3dadd( 23.4953, -5.97774, -5.51371, 1.36 ) }
    dend_33 { pt3dadd( 23.6096, -7.92852, -6.12727, 0.23 ) }
    dend_33 { pt3dadd( 23.624, -9.3365, -6.42844, 1.13 ) }
    dend_33 { pt3dadd( 23.6111, -11.1263, -6.66089, 0.23 ) }
    dend_33 { pt3dadd( 23.6077, -12.9215, -6.80838, 1.13 ) }
    dend_33 { pt3dadd( 23.6378, -14.3636, -6.85122, 0.23 ) }
    dend_33 { pt3dadd( 23.6481, -14.9407, -6.84611, 0.68 ) }
    dend_33 { pt3dadd( 23.6046, -17.1474, -6.72154, 0.23 ) }
    dend_33 { pt3dadd( 23.5022, -19.3384, -6.60032, 1.13 ) }
    dend_33 { pt3dadd( 23.439, -20.4282, -6.49679, 0.23 ) }
    dend_33 { pt3dadd( 23.4266, -21.6898, -6.31356, 1.13 ) }
    dend_33 { pt3dadd( 23.4627, -23.1263, -6.08484, 0.23 ) }
    dend_33 { pt3dadd( 23.5468, -24.5401, -5.83744, 0.23 ) }
    dend_33 { pt3dadd( 23.671, -25.9559, -5.58708, 1.13 ) }
    dend_33 { pt3dadd( 23.9008, -28.2937, -5.07062, 0.23 ) }
    dend_33 { pt3dadd( 24.1275, -30.2679, -4.53447, 1.36 ) }
    dend_33 { pt3dadd( 24.3474, -31.6392, -4.10093, 0.23 ) }
    dend_33 { pt3dadd( 24.5344, -32.434, -3.84605, 0.68 ) }
    dend_33 { pt3dadd( 24.8795, -33.5026, -3.51208, 0.23 ) }
    dend_33 { pt3dadd( 25.2762, -34.4795, -3.21074, 1.36 ) }
    dend_33 { pt3dadd( 25.9177, -35.784, -2.86554, 0.23 ) }
    dend_33 { pt3dadd( 26.474, -36.675, -2.63594, 1.13 ) }
    dend_33 { pt3dadd( 27.4126, -37.9279, -2.24376, 0.23 ) }
    dend_33 { pt3dadd( 27.8345, -38.4197, -2.0756, 0.91 ) }
    dend_33 { pt3dadd( 28.6061, -39.1763, -1.78658, 0.23 ) }
    dend_33 { pt3dadd( 29.2957, -39.7696, -1.49493, 0.91 ) }
    dend_33 { pt3dadd( 30.4918, -40.7077, -0.978494, 0.23 ) }
    dend_33 { pt3dadd( 31.3493, -41.3653, -0.514064, 0.91 ) }
    dend_33 { pt3dadd( 31.9812, -41.8528, -0.131061, 0.23 ) }
    dend_33 { pt3dadd( 32.9208, -42.6736, 0.58161, 1.13 ) }
    dend_33 { pt3dadd( 34.0863, -43.7209, 1.50881, 0.23 ) }
    dend_33 { pt3dadd( 34.7356, -44.3281, 2.08795, 1.36 ) }
    dend_33 { pt3dadd( 35.9036, -45.4668, 3.25305, 0.23 ) }
    dend_33 { pt3dadd( 36.3987, -45.9915, 3.76732, 0.23 ) }
    dend_33 { pt3dadd( 37.4092, -47.1831, 5.03642, 1.13 ) }
    dend_33 { pt3dadd( 39.9175, -56.0698, 8.87513, 1.13 ) }
    dend_33 { pt3dadd( 43.4671, -64.4722, 12.9739, 1.13 ) }
    dend_33 { pt3dadd( 46.9027, -72.2985, 18.1648, 1.13 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 92/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 23.2243, -3.43727, -4.52805, 0.68 ) }
    dend_28 { pt3dadd( 24.2499, -3.95421, -5.46859, 0.68 ) }
    dend_28 { pt3dadd( 25.7819, -4.72639, -6.87356, 0.68 ) }
    dend_28 { pt3dadd( 27.2755, -5.47922, -8.2433, 0.68 ) }
    dend_28 { pt3dadd( 27.9908, -5.83975, -8.89928, 0.68 ) }
    dend_28 { pt3dadd( 29.6241, -6.66298, -10.3971, 1.36 ) }
    dend_28 { pt3dadd( 31.2205, -7.46762, -11.8611, 1.36 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 99/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.20822, 22.4228, -10.1629, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_17 { pt3dadd( 6.6326, 20.9275, -11.2859, 0.68 ) }
    dend_17 { pt3dadd( 7.95804, 20.1851, -11.8075, 0.68 ) }
    dend_17 { pt3dadd( 9.39665, 19.4542, -12.2974, 0.68 ) }
    dend_17 { pt3dadd( 10.7552, 18.8359, -12.6744, 0.23 ) }
    dend_17 { pt3dadd( 11.4196, 18.5771, -12.8058, 0.91 ) }
    dend_17 { pt3dadd( 12.3175, 18.2628, -12.9376, 1.36 ) }
    dend_17 { pt3dadd( 13.7257, 17.8566, -12.9901, 0.23 ) }
    dend_17 { pt3dadd( 15.8221, 17.457, -13.024, 0.68 ) }
    dend_17 { pt3dadd( 18.0763, 17.1882, -13.0176, 0.23 ) }
    dend_17 { pt3dadd( 19.8492, 17.0473, -12.9791, 0.91 ) }
    dend_17 { pt3dadd( 20.9747, 16.9854, -12.9522, 1.36 ) }
    dend_17 { pt3dadd( 22.2641, 16.9386, -12.9165, 0.23 ) }
    dend_17 { pt3dadd( 25.0769, 16.8702, -12.822, 0.45 ) }
    dend_17 { pt3dadd( 26.5434, 16.8988, -12.759, 1.36 ) }
    dend_17 { pt3dadd( 27.4594, 16.936, -12.756, 2.04 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 4.20822, 22.4228, -10.1629, 0.45 ) }
    dend_10 { pt3dadd( 4.54579, 23.6565, -11.0796, 0.45 ) }
    dend_10 { pt3dadd( 4.90906, 24.984, -12.066, 0.91 ) }
    dend_10 { pt3dadd( 5.15256, 25.8739, -12.7273, 0.91 ) }
    dend_10 { pt3dadd( 5.58198, 27.4432, -13.8934, 1.13 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 20/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -31.8111, 40.6017, -21.9389, 0.23 ) }
    dend_8 { pt3dadd( -30.6001, 39.6507, -23.817, 0.23 ) }
    dend_8 { pt3dadd( -29.6225, 38.9988, -25.5343, 0.23 ) }
    dend_8 { pt3dadd( -29.1892, 38.7232, -26.3459, 0.23 ) }
    dend_8 { pt3dadd( -28.2422, 38.082, -28.2595, 0.23 ) }
    dend_8 { pt3dadd( -27.6668, 37.6054, -29.6361, 0.91 ) }
    dend_8 { pt3dadd( -27.0677, 37.0259, -31.314, 0.91 ) }
    dend_8 { pt3dadd( -26.2247, 36.0375, -33.9372, 0.23 ) }
    dend_8 { pt3dadd( -25.6875, 35.1736, -36.15, 1.36 ) }
    dend_8 { pt3dadd( -25.3988, 34.2575, -38.618, 0.23 ) }
    dend_8 { pt3dadd( -25.5, 33.5768, -40.4975, 1.13 ) }
    dend_8 { pt3dadd( -25.7175, 33.1916, -41.5296, 1.13 ) }
    dend_8 { pt3dadd( -26.8551, 31.9785, -44.621, 1.13 ) }
    dend_8 { pt3dadd( -27.4225, 31.5345, -45.6136, 0.23 ) }
    dend_8 { pt3dadd( -28.6388, 30.7588, -47.2086, 1.36 ) }
    dend_8 { pt3dadd( -30.4006, 29.6554, -49.1567, 0.23 ) }
    dend_8 { pt3dadd( -31.2086, 29.1085, -49.9683, 0.91 ) }
    dend_8 { pt3dadd( -31.8548, 28.6425, -50.5624, 0.23 ) }
    dend_8 { pt3dadd( -33.4159, 27.5333, -51.7582, 0.91 ) }
    dend_8 { pt3dadd( -35.0332, 26.342, -53.0003, 0.23 ) }
    dend_8 { pt3dadd( -36.0214, 25.5965, -53.723, 0.23 ) }
    dend_8 { pt3dadd( -36.9111, 24.9903, -54.515, 1.81 ) }
    dend_8 { pt3dadd( -38.3111, 24.119, -55.9783, 0.23 ) }
    dend_8 { pt3dadd( -38.772, 23.8532, -56.4726, 0.91 ) }
    dend_8 { pt3dadd( -40.2781, 23.0973, -58.166, 0.23 ) }
    dend_8 { pt3dadd( -41.7298, 22.559, -59.904, 1.81 ) }
    dend_8 { pt3dadd( -44.5152, 21.8019, -63.4678, 0.45 ) }
    dend_8 { pt3dadd( -45.3106, 21.647, -64.5785, 0.91 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 48/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -31.8111, 40.6017, -21.9389, 0.68 ) }
    dend_5 { pt3dadd( -33.4648, 40.9143, -22.0775, 0.68 ) }
    dend_5 { pt3dadd( -34.5858, 41.1261, -22.1714, 0.68 ) }
    dend_5 { pt3dadd( -36.4174, 41.4723, -22.3249, 1.36 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 52/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -12.0918, 38.3723, 19.7858, 0.23 ) }
    dend_42 { pt3dadd( -18.6522, 45.7356, 21.4422, 0.23 ) }
    dend_42 { pt3dadd( -24.3514, 53.3676, 24.4873, 0.23 ) }
    dend_42 { pt3dadd( -30.0816, 60.9082, 27.6971, 0.23 ) }
    dend_42 { pt3dadd( -35.9092, 68.2349, 31.2125, 0.23 ) }
    dend_42 { pt3dadd( -41.2349, 76.1404, 34.2359, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 58/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -12.0918, 38.3723, 19.7858, 0.23 ) }
    dend_41 { pt3dadd( -18.6591, 45.7448, 21.3726, 0.23 ) }
    dend_41 { pt3dadd( -25.3124, 52.639, 24.2368, 0.23 ) }
    dend_41 { pt3dadd( -33.7005, 57.3714, 26.9281, 0.23 ) }
    dend_41 { pt3dadd( -41.2477, 62.7972, 30.616, 0.23 ) }
    dend_41 { pt3dadd( -49.2203, 68.0583, 33.5756, 0.23 ) }
    dend_41 { pt3dadd( -56.5671, 73.6834, 37.3681, 0.23 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 65/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 25.293, 19.9922, 24.8961, 0.23 ) }
    dend_39 { pt3dadd( 27.0155, 28.3924, 30.041, 0.23 ) }
    dend_39 { pt3dadd( 29.8189, 35.8991, 36.0234, 0.23 ) }
    dend_39 { pt3dadd( 31.6913, 42.3241, 43.454, 0.23 ) }
    dend_39 { pt3dadd( 33.5528, 48.5709, 51.0377, 0.23 ) }
    dend_39 { pt3dadd( 34.2238, 54.3236, 59.1898, 0.23 ) }
    dend_39 { pt3dadd( 34.0842, 60.3922, 67.1366, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 25.293, 19.9922, 24.8961, 0.23 ) }
    dend_36 { pt3dadd( 26.387, 27.8421, 30.9938, 0.23 ) }
    dend_36 { pt3dadd( 26.5909, 35.8604, 36.9658, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 75/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 31.2205, -7.46762, -11.8611, 1.36 ) }
    dend_30 { pt3dadd( 32.1573, -5.387, -14.1848, 1.36 ) }
    dend_30 { pt3dadd( 32.6429, -4.21257, -15.3376, 1.13 ) }
    dend_30 { pt3dadd( 33.2813, -2.5434, -16.8264, 0.68 ) }
    dend_30 { pt3dadd( 33.5265, -1.82694, -17.445, 1.36 ) }
    dend_30 { pt3dadd( 33.6464, -1.37556, -17.8714, 0.23 ) }
    dend_30 { pt3dadd( 33.8761, -0.375406, -18.7942, 0.91 ) }
    dend_30 { pt3dadd( 34.0284, 0.72881, -19.6954, 0.91 ) }
    dend_30 { pt3dadd( 34.1197, 1.81146, -20.5698, 0.91 ) }
    dend_30 { pt3dadd( 34.229, 3.52613, -21.994, 1.59 ) }
    dend_30 { pt3dadd( 34.4601, 6.39738, -24.388, 0.45 ) }
    dend_30 { pt3dadd( 34.5491, 7.70963, -25.4995, 0.45 ) }
    dend_30 { pt3dadd( 34.6358, 9.19388, -26.7655, 1.36 ) }
    dend_30 { pt3dadd( 34.7158, 10.8066, -28.1877, 0.91 ) }
    dend_30 { pt3dadd( 34.8141, 12.7496, -29.858, 0.23 ) }
    dend_30 { pt3dadd( 34.9166, 14.145, -30.9641, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 91/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 31.2205, -7.46762, -11.8611, 0.68 ) }
    dend_29 { pt3dadd( 33.0941, -6.60813, -11.5368, 0.68 ) }
    dend_29 { pt3dadd( 33.9153, -6.22376, -11.5103, 0.68 ) }
    dend_29 { pt3dadd( 35.6451, -5.47896, -11.6369, 0.68 ) }
    dend_29 { pt3dadd( 37.6625, -4.57441, -12.0481, 0.68 ) }
    dend_29 { pt3dadd( 39.2452, -3.8747, -12.4984, 1.36 ) }
    dend_29 { pt3dadd( 42.0262, -2.74109, -13.3704, 0.45 ) }
    dend_29 { pt3dadd( 44.1896, -1.87506, -14.2376, 0.45 ) }
    dend_29 { pt3dadd( 45.793, -1.24572, -15.0272, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_29 { pt3dadd( 47.7997, -0.40843, -16.2126, 0.23 ) }
    dend_29 { pt3dadd( 48.7466, -0.0290028, -16.8197, 0.23 ) }
    dend_29 { pt3dadd( 50.2043, 0.524328, -17.8299, 0.68 ) }
    dend_29 { pt3dadd( 52.4704, 1.37036, -19.4318, 0.23 ) }
    dend_29 { pt3dadd( 53.9201, 1.98337, -20.3698, 0.91 ) }
    dend_29 { pt3dadd( 56.0973, 2.9031, -21.6804, 0.23 ) }
    dend_29 { pt3dadd( 58.0804, 3.75052, -22.8025, 0.23 ) }
    dend_29 { pt3dadd( 59.3789, 4.3602, -23.5327, 1.13 ) }
    dend_29 { pt3dadd( 60.085, 4.73536, -23.9335, 0.23 ) }
    dend_29 { pt3dadd( 60.8033, 5.13575, -24.2715, 0.45 ) }
    dend_29 { pt3dadd( 62.2407, 5.71881, -24.7767, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 11/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 27.4594, 16.936, -12.756, 0.23 ) }
    dend_21 { pt3dadd( 29.0357, 17.0772, -13.9315, 0.23 ) }
    dend_21 { pt3dadd( 30.0561, 17.199, -14.6906, 0.91 ) }
    dend_21 { pt3dadd( 31.9653, 17.4981, -16.1444, 0.45 ) }
    dend_21 { pt3dadd( 33.1341, 17.7467, -17.1701, 0.91 ) }
    dend_21 { pt3dadd( 34.7842, 18.222, -18.8511, 0.68 ) }
    dend_21 { pt3dadd( 35.8686, 18.6461, -20.2125, 0.68 ) }
    dend_21 { pt3dadd( 36.2964, 18.8722, -20.944, 1.13 ) }
    dend_21 { pt3dadd( 37.0263, 19.5174, -22.6288, 0.45 ) }
    dend_21 { pt3dadd( 37.6489, 20.6497, -24.9808, 0.91 ) }
    dend_21 { pt3dadd( 37.9161, 21.4552, -26.5191, 0.23 ) }
    dend_21 { pt3dadd( 38.0769, 22.6227, -28.6312, 0.68 ) }
    dend_21 { pt3dadd( 38.0818, 22.9983, -29.3905, 0.68 ) }
    dend_21 { pt3dadd( 38.0257, 23.5582, -30.8761, 0.23 ) }
    dend_21 { pt3dadd( 37.9678, 23.8557, -31.9725, 0.23 ) }
    dend_21 { pt3dadd( 37.9527, 24.273, -34.2516, 1.13 ) }
    dend_21 { pt3dadd( 37.9982, 24.6076, -36.9012, 0.23 ) }
    dend_21 { pt3dadd( 38.0145, 24.8025, -39.0503, 0.23 ) }
    dend_21 { pt3dadd( 38.015, 25.0185, -41.5383, 0.23 ) }
    dend_21 { pt3dadd( 38.0215, 25.1491, -43.0644, 0.23 ) }
    dend_21 { pt3dadd( 38.013, 25.4361, -45.0655, 0.23 ) }
    dend_21 { pt3dadd( 38.0209, 25.7995, -46.5078, 0.23 ) }
    dend_21 { pt3dadd( 38.194, 26.2839, -47.7149, 0.23 ) }
    dend_21 { pt3dadd( 38.5081, 26.8719, -48.8799, 0.23 ) }
    dend_21 { pt3dadd( 38.7853, 27.2907, -49.7129, 0.91 ) }
    dend_21 { pt3dadd( 39.516, 28.1316, -51.7902, 0.23 ) }
    dend_21 { pt3dadd( 39.8679, 28.3608, -52.6647, 0.91 ) }
    dend_21 { pt3dadd( 41.0734, 28.6633, -55.5894, 0.23 ) }
    dend_21 { pt3dadd( 41.8864, 28.6305, -57.8134, 0.23 ) }
    dend_21 { pt3dadd( 42.403, 28.3918, -59.7321, 0.91 ) }
    dend_21 { pt3dadd( 42.6448, 28.0808, -61.1984, 0.91 ) }
    dend_21 { pt3dadd( 42.7718, 27.4763, -63.3065, 0.23 ) }
    dend_21 { pt3dadd( 42.5571, 26.5644, -66.1967, 0.23 ) }
    dend_21 { pt3dadd( 42.1424, 25.8985, -68.1572, 0.23 ) }
    dend_21 { pt3dadd( 41.4025, 25.1329, -70.51, 0.23 ) }
    dend_21 { pt3dadd( 40.6471, 24.5413, -72.4034, 1.13 ) }
    dend_21 { pt3dadd( 39.6362, 23.8374, -74.5927, 0.23 ) }
    dend_21 { pt3dadd( 38.4612, 23.0146, -76.9263, 0.23 ) }
    dend_21 { pt3dadd( 37.4694, 22.363, -78.7366, 0.23 ) }
    dend_21 { pt3dadd( 37.0433, 22.0761, -79.5128, 0.23 ) }
    dend_21 { pt3dadd( 36.1352, 21.4286, -81.3271, 0.23 ) }
    dend_21 { pt3dadd( 35.5122, 20.9109, -82.7392, 0.23 ) }
    dend_21 { pt3dadd( 34.8475, 20.2122, -84.3524, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 54/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 27.4594, 16.936, -12.756, 0.45 ) }
    dend_18 { pt3dadd( 29.4498, 16.608, -12.2173, 0.45 ) }
    dend_18 { pt3dadd( 30.5852, 16.5273, -12.0954, 0.91 ) }
    dend_18 { pt3dadd( 32.4016, 16.5112, -12.0753, 0.23 ) }
    dend_18 { pt3dadd( 33.8744, 16.5561, -12.1254, 0.45 ) }
    dend_18 { pt3dadd( 35.5597, 16.6113, -12.2165, 1.36 ) }
    dend_18 { pt3dadd( 37.044, 16.6537, -12.3098, 0.68 ) }
    dend_18 { pt3dadd( 39.4627, 16.812, -12.5861, 0.68 ) }
    dend_18 { pt3dadd( 41.1353, 16.9647, -12.7784, 0.91 ) }
    dend_18 { pt3dadd( 42.5829, 17.1387, -12.9633, 0.23 ) }
    dend_18 { pt3dadd( 44.3631, 17.394, -13.2017, 0.68 ) }
    dend_18 { pt3dadd( 45.0483, 17.4638, -13.2609, 0.23 ) }
    dend_18 { pt3dadd( 46.3202, 17.5122, -13.2978, 0.91 ) }
    dend_18 { pt3dadd( 48.4735, 17.4216, -13.2078, 0.23 ) }
    dend_18 { pt3dadd( 49.7922, 17.3018, -13.188, 1.13 ) }
    dend_18 { pt3dadd( 50.9253, 17.1576, -13.2026, 0.23 ) }
    dend_18 { pt3dadd( 52.8526, 16.8887, -13.4318, 0.23 ) }
    dend_18 { pt3dadd( 53.8913, 16.7216, -13.6522, 0.91 ) }
    dend_18 { pt3dadd( 54.9837, 16.4801, -14.0028, 0.91 ) }
    dend_18 { pt3dadd( 56.8837, 15.9105, -14.7793, 0.23 ) }
    dend_18 { pt3dadd( 57.9145, 15.6159, -15.2724, 1.59 ) }
    dend_18 { pt3dadd( 60.7669, 14.9441, -16.7327, 0.23 ) }
    dend_18 { pt3dadd( 61.3623, 14.8317, -17.0627, 0.91 ) }
    dend_18 { pt3dadd( 62.685, 14.6372, -17.761, 0.23 ) }
    dend_18 { pt3dadd( 64.4653, 14.45, -18.667, 0.91 ) }
    dend_18 { pt3dadd( 66.2662, 14.3668, -19.4862, 0.23 ) }
    dend_18 { pt3dadd( 68.3997, 14.3993, -20.3338, 0.91 ) }
    dend_18 { pt3dadd( 69.4291, 14.4669, -20.6033, 0.23 ) }
    dend_18 { pt3dadd( 71.38, 14.6105, -20.9497, 0.91 ) }
    dend_18 { pt3dadd( 73.1615, 14.7934, -21.2146, 0.23 ) }
    dend_18 { pt3dadd( 74.8369, 14.9638, -21.4289, 0.23 ) }
    dend_18 { pt3dadd( 76.4305, 15.0543, -21.5854, 0.23 ) }
    dend_18 { pt3dadd( 79.1436, 15.1313, -21.8125, 1.13 ) }
    dend_18 { pt3dadd( 81.6575, 15.1099, -22.0155, 0.23 ) }
    dend_18 { pt3dadd( 84.0994, 14.8844, -22.2284, 0.91 ) }
    dend_18 { pt3dadd( 85.906, 14.5892, -22.3827, 0.23 ) }
    dend_18 { pt3dadd( 87.6642, 14.1816, -22.5667, 0.23 ) }
    dend_18 { pt3dadd( 89.4022, 13.7273, -22.8196, 0.91 ) }
    dend_18 { pt3dadd( 90.7606, 13.3633, -23.0691, 0.23 ) }
    dend_18 { pt3dadd( 92.99, 12.8132, -23.4977, 0.68 ) }
    dend_18 { pt3dadd( 94.3312, 12.4875, -23.7382, 0.23 ) }
    dend_18 { pt3dadd( 95.6679, 12.2179, -24.012, 1.13 ) }
    dend_18 { pt3dadd( 97.9634, 11.9198, -24.4619, 0.23 ) }
    dend_18 { pt3dadd( 99.5443, 11.8443, -24.6975, 0.91 ) }
    dend_18 { pt3dadd( 101.515, 11.9519, -24.8814, 0.23 ) }
    dend_18 { pt3dadd( 102.632, 12.1396, -24.9498, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_18 { pt3dadd( 104.064, 12.4763, -24.9854, 0.23 ) }
    dend_18 { pt3dadd( 106.189, 13.1979, -24.9911, 0.68 ) }
    dend_18 { pt3dadd( 107.682, 13.8107, -24.9524, 0.23 ) }
    dend_18 { pt3dadd( 109.338, 14.579, -24.9009, 0.68 ) }
    dend_18 { pt3dadd( 110.904, 15.4356, -24.8408, 0.23 ) }
    dend_18 { pt3dadd( 112.723, 16.577, -24.7977, 1.36 ) }
    dend_18 { pt3dadd( 115.128, 18.3098, -24.7867, 0.23 ) }
    dend_18 { pt3dadd( 115.963, 19.0018, -24.8241, 0.23 ) }
    dend_18 { pt3dadd( 116.492, 19.4887, -24.851, 0.23 ) }
    dend_18 { pt3dadd( 117.753, 20.7507, -24.7707, 0.68 ) }
    dend_18 { pt3dadd( 118.168, 21.2054, -24.6813, 0.23 ) }
    dend_18 { pt3dadd( 118.728, 21.8581, -24.4531, 0.68 ) }
    dend_18 { pt3dadd( 119.418, 22.6652, -24.0522, 0.23 ) }
    dend_18 { pt3dadd( 120.392, 23.7052, -23.4191, 0.91 ) }
    dend_18 { pt3dadd( 121.791, 25.0761, -22.4501, 0.23 ) }
    dend_18 { pt3dadd( 122.7, 25.9925, -21.7632, 0.91 ) }
    dend_18 { pt3dadd( 123.546, 26.9252, -21.031, 0.23 ) }
    dend_18 { pt3dadd( 124.569, 28.1103, -20.0871, 0.68 ) }
    dend_18 { pt3dadd( 125.969, 29.8765, -18.7553, 0.23 ) }
    dend_18 { pt3dadd( 127.115, 31.4775, -17.717, 0.23 ) }
    dend_18 { pt3dadd( 128.069, 33.0338, -16.8443, 1.13 ) }
    dend_18 { pt3dadd( 128.883, 34.5479, -16.0587, 0.91 ) }
    dend_18 { pt3dadd( 129.186, 35.1509, -15.785, 0.23 ) }
    dend_18 { pt3dadd( 129.852, 36.4065, -15.2936, 0.91 ) }
    dend_18 { pt3dadd( 130.933, 38.0766, -14.7341, 0.23 ) }
    dend_18 { pt3dadd( 131.544, 38.7959, -14.5095, 0.23 ) }
    dend_18 { pt3dadd( 132.182, 39.3895, -14.3266, 0.23 ) }
    dend_18 { pt3dadd( 133.002, 40.0537, -14.1382, 0.23 ) }
    dend_18 { pt3dadd( 134.632, 41.2963, -13.7331, 0.68 ) }
    dend_18 { pt3dadd( 136.884, 42.8352, -13.123, 0.23 ) }
    dend_18 { pt3dadd( 137.856, 43.4286, -12.8392, 0.23 ) }
    dend_18 { pt3dadd( 138.474, 43.7657, -12.6591, 0.23 ) }
    dend_18 { pt3dadd( 140.173, 44.6432, -12.1539, 1.13 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 5.58198, 27.4432, -13.8934, 0.23 ) }
    dend_14 { pt3dadd( 6.90321, 28.4005, -15.0345, 0.23 ) }
    dend_14 { pt3dadd( 7.69935, 29.0172, -15.6102, 0.91 ) }
    dend_14 { pt3dadd( 10.0466, 30.7901, -17.1306, 0.23 ) }
    dend_14 { pt3dadd( 11.4319, 31.752, -17.9387, 0.91 ) }
    dend_14 { pt3dadd( 12.5531, 32.4107, -18.536, 1.36 ) }
    dend_14 { pt3dadd( 14.1719, 33.2281, -19.3469, 0.91 ) }
    dend_14 { pt3dadd( 16.2106, 34.0795, -20.2045, 0.23 ) }
    dend_14 { pt3dadd( 16.8067, 34.296, -20.4188, 0.91 ) }
    dend_14 { pt3dadd( 18.4333, 34.8186, -20.8888, 0.91 ) }
    dend_14 { pt3dadd( 20.2586, 35.2502, -21.43, 0.91 ) }
    dend_14 { pt3dadd( 21.4716, 35.4474, -21.804, 0.91 ) }
    dend_14 { pt3dadd( 22.9245, 35.5983, -22.2768, 0.68 ) }
    dend_14 { pt3dadd( 23.9702, 35.6642, -22.6053, 0.68 ) }
    dend_14 { pt3dadd( 25.992, 35.8927, -23.2718, 1.59 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 48/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.58198, 27.4432, -13.8934, 0.45 ) }
    dend_11 { pt3dadd( 4.96354, 28.542, -14.7133, 0.45 ) }
    dend_11 { pt3dadd( 4.2274, 30.1267, -15.6901, 1.13 ) }
    dend_11 { pt3dadd( 3.65145, 31.5446, -16.5104, 0.91 ) }
    dend_11 { pt3dadd( 3.0958, 33.1268, -17.2552, 1.36 ) }
    dend_11 { pt3dadd( 2.64059, 34.7545, -17.8016, 0.45 ) }
    dend_11 { pt3dadd( 2.38967, 35.9374, -18.0839, 1.13 ) }
    dend_11 { pt3dadd( 2.26632, 37.066, -18.2356, 0.68 ) }
    dend_11 { pt3dadd( 2.18846, 38.0624, -18.2528, 1.36 ) }
    dend_11 { pt3dadd( 2.0058, 39.8583, -18.1521, 0.91 ) }
    dend_11 { pt3dadd( 1.82794, 41.8627, -17.9528, 0.68 ) }
    dend_11 { pt3dadd( 1.73455, 43.2817, -17.7937, 1.36 ) }
    dend_11 { pt3dadd( 1.57563, 45.2474, -17.5504, 0.91 ) }
    dend_11 { pt3dadd( 1.41862, 46.649, -17.363, 0.91 ) }
    dend_11 { pt3dadd( 1.2259, 48.0519, -17.1711, 1.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -36.4174, 41.4723, -22.3249, 0.23 ) }
    dend_7 { pt3dadd( -38.4015, 42.2276, -22.6671, 0.23 ) }
    dend_7 { pt3dadd( -40.3661, 42.9316, -22.9502, 0.23 ) }
    dend_7 { pt3dadd( -40.8652, 43.1009, -23.01, 1.36 ) }
    dend_7 { pt3dadd( -41.9245, 43.4927, -23.1221, 1.36 ) }
    dend_7 { pt3dadd( -43.1991, 43.9462, -23.2674, 0.23 ) }
    dend_7 { pt3dadd( -44.0601, 44.2447, -23.3681, 0.68 ) }
    dend_7 { pt3dadd( -44.9154, 44.5022, -23.4545, 0.91 ) }
    dend_7 { pt3dadd( -46.0139, 44.7852, -23.5896, 0.91 ) }
    dend_7 { pt3dadd( -46.9597, 44.9398, -23.7816, 0.23 ) }
    dend_7 { pt3dadd( -48.6768, 45.1231, -24.235, 0.23 ) }
    dend_7 { pt3dadd( -49.0969, 45.1443, -24.3766, 1.59 ) }
    dend_7 { pt3dadd( -50.1626, 45.1207, -24.7873, 0.23 ) }
    dend_7 { pt3dadd( -51.8911, 45.0085, -25.5196, 0.23 ) }
    dend_7 { pt3dadd( -53.351, 44.8863, -26.1649, 0.91 ) }
    dend_7 { pt3dadd( -54.8282, 44.7276, -26.7993, 0.91 ) }
    dend_7 { pt3dadd( -57.2523, 44.3832, -27.8083, 0.23 ) }
    dend_7 { pt3dadd( -58.7025, 44.1137, -28.3708, 0.91 ) }
    dend_7 { pt3dadd( -60.6122, 43.6929, -29.0152, 0.23 ) }
    dend_7 { pt3dadd( -61.1201, 43.5815, -29.151, 1.36 ) }
    dend_7 { pt3dadd( -62.6378, 43.1915, -29.4747, 0.23 ) }
    dend_7 { pt3dadd( -64.6572, 42.6074, -29.8143, 0.91 ) }
    dend_7 { pt3dadd( -66.1929, 42.1335, -29.9781, 0.23 ) }
    dend_7 { pt3dadd( -68.1022, 41.5634, -30.131, 1.13 ) }
    dend_7 { pt3dadd( -69.3903, 41.1322, -30.209, 1.13 ) }
    dend_7 { pt3dadd( -71.421, 40.4584, -30.3295, 0.23 ) }
    dend_7 { pt3dadd( -72.5022, 40.122, -30.4083, 0.68 ) }
    dend_7 { pt3dadd( -73.541, 39.8015, -30.4899, 0.23 ) }
    dend_7 { pt3dadd( -74.7229, 39.3252, -30.6045, 1.13 ) }
    dend_7 { pt3dadd( -76.0848, 38.7098, -30.7585, 0.23 ) }
    dend_7 { pt3dadd( -77.5149, 37.9835, -30.9418, 0.68 ) }
    dend_7 { pt3dadd( -79.478, 36.9108, -31.2284, 0.23 ) }
    dend_7 { pt3dadd( -80.522, 36.2765, -31.3897, 1.81 ) }
    dend_7 { pt3dadd( -82.684, 34.9018, -31.7252, 0.23 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 97/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -36.4174, 41.4723, -22.3249, 0.91 ) }
    dend_6 { pt3dadd( -37.9563, 40.2491, -19.4879, 0.91 ) }
    dend_6 { pt3dadd( -38.8117, 39.3234, -17.6536, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( -39.3307, 38.6993, -16.4833, 0.45 ) }
    dend_6 { pt3dadd( -39.7669, 38.1902, -15.5579, 1.13 ) }
    dend_6 { pt3dadd( -40.4241, 37.5282, -14.2738, 0.23 ) }
    dend_6 { pt3dadd( -41.1952, 36.8573, -12.9257, 0.91 ) }
    dend_6 { pt3dadd( -42.5389, 35.8875, -10.9603, 0.23 ) }
    dend_6 { pt3dadd( -42.6785, 35.8071, -10.7818, 0.23 ) }
    dend_6 { pt3dadd( -43.4632, 35.5196, -9.96298, 0.91 ) }
    dend_6 { pt3dadd( -44.972, 35.2697, -8.67243, 0.23 ) }
    dend_6 { pt3dadd( -46.9409, 35.2476, -7.11177, 0.23 ) }
    dend_6 { pt3dadd( -47.5466, 35.2944, -6.68567, 0.68 ) }
    dend_6 { pt3dadd( -48.2916, 35.3731, -6.20851, 0.68 ) }
    dend_6 { pt3dadd( -49.4109, 35.3953, -5.42243, 0.23 ) }
    dend_6 { pt3dadd( -50.3764, 35.2691, -4.63225, 1.13 ) }
    dend_6 { pt3dadd( -52.4304, 34.5748, -2.82264, 0.23 ) }
    dend_6 { pt3dadd( -52.849, 34.4077, -2.45405, 0.23 ) }
    dend_6 { pt3dadd( -53.2571, 34.2283, -2.1028, 1.13 ) }
    dend_6 { pt3dadd( -55.0379, 33.5168, -0.778175, 0.45 ) }
    dend_6 { pt3dadd( -56.5586, 32.8388, 0.3677, 0.45 ) }
    dend_6 { pt3dadd( -57.2145, 32.5405, 0.825645, 1.36 ) }
    dend_6 { pt3dadd( -59.4333, 31.7972, 2.02128, 0.23 ) }
    dend_6 { pt3dadd( -60.033, 31.645, 2.32957, 0.23 ) }
    dend_6 { pt3dadd( -62.269, 31.3229, 3.3051, 0.68 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 22/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 26.5909, 35.8604, 36.9658, 0.23 ) }
    dend_38 { pt3dadd( 27.616, 44.3661, 42.1236, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 24/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 26.5909, 35.8604, 36.9658, 0.23 ) }
    dend_37 { pt3dadd( 26.8607, 43.1477, 43.8086, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 26/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 34.9166, 14.145, -30.9641, 0.68 ) }
    dend_32 { pt3dadd( 35.9856, 15.804, -32.8349, 0.68 ) }
    dend_32 { pt3dadd( 36.5675, 16.5201, -33.7516, 0.68 ) }
    dend_32 { pt3dadd( 37.9679, 18.0048, -35.8824, 0.91 ) }
    dend_32 { pt3dadd( 38.8854, 18.9241, -37.2554, 0.45 ) }
    dend_32 { pt3dadd( 39.6257, 19.6341, -38.3403, 0.91 ) }
    dend_32 { pt3dadd( 41.0974, 21.1218, -40.6815, 0.23 ) }
    dend_32 { pt3dadd( 41.969, 22.048, -42.1497, 0.91 ) }
    dend_32 { pt3dadd( 43.0885, 23.2575, -44.0916, 0.23 ) }
    dend_32 { pt3dadd( 43.7853, 24.0618, -45.3055, 0.68 ) }
    dend_32 { pt3dadd( 44.6096, 25.1632, -46.7435, 0.23 ) }
    dend_32 { pt3dadd( 46.0908, 27.4892, -49.2841, 0.23 ) }
    dend_32 { pt3dadd( 46.4302, 28.1118, -49.8168, 0.23 ) }
    dend_32 { pt3dadd( 47.0611, 29.4551, -50.8436, 0.68 ) }
    dend_32 { pt3dadd( 47.8832, 31.3665, -52.0919, 0.23 ) }
    dend_32 { pt3dadd( 48.3047, 32.3839, -52.6627, 0.91 ) }
    dend_32 { pt3dadd( 48.7151, 33.387, -53.0791, 0.23 ) }
    dend_32 { pt3dadd( 49.5701, 35.1152, -53.4362, 0.91 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 44/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 34.9166, 14.145, -30.9641, 1.13 ) }
    dend_31 { pt3dadd( 33.9881, 14.8812, -32.0314, 1.13 ) }
    dend_31 { pt3dadd( 32.76, 15.8159, -33.6121, 0.23 ) }
    dend_31 { pt3dadd( 31.6079, 16.8055, -35.1443, 0.23 ) }
    dend_31 { pt3dadd( 30.8903, 17.4915, -36.1635, 0.91 ) }
    dend_31 { pt3dadd( 30.2056, 18.2328, -37.3864, 1.36 ) }
    dend_31 { pt3dadd( 29.1783, 19.6152, -39.8149, 0.23 ) }
    dend_31 { pt3dadd( 28.8242, 20.3011, -41.0634, 0.23 ) }
    dend_31 { pt3dadd( 28.5954, 21.2101, -42.6534, 0.91 ) }
    dend_31 { pt3dadd( 28.5736, 21.7618, -43.5971, 0.91 ) }
    dend_31 { pt3dadd( 28.8283, 24.2376, -47.6841, 0.91 ) }
    dend_31 { pt3dadd( 29.1322, 26.0656, -50.6214, 0.23 ) }
    dend_31 { pt3dadd( 29.3179, 26.8268, -51.8055, 0.91 ) }
    dend_31 { pt3dadd( 30.0151, 29.1966, -55.4918, 0.23 ) }
    dend_31 { pt3dadd( 30.6329, 30.9959, -58.398, 0.23 ) }
    dend_31 { pt3dadd( 30.9064, 31.721, -59.4868, 1.13 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 60/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 140.173, 44.6432, -12.1539, 0.23 ) }
    dend_20 { pt3dadd( 139.845, 46.7016, -13.229, 0.23 ) }
    dend_20 { pt3dadd( 139.796, 47.7505, -13.7087, 0.91 ) }
    dend_20 { pt3dadd( 139.723, 49.3312, -14.4316, 0.23 ) }
    dend_20 { pt3dadd( 139.697, 49.8914, -14.6879, 0.23 ) }
    dend_20 { pt3dadd( 139.647, 50.9468, -15.1705, 0.23 ) }
    dend_20 { pt3dadd( 139.61, 51.7457, -15.5359, 0.23 ) }
    dend_20 { pt3dadd( 139.667, 52.9477, -15.8885, 0.91 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 140.173, 44.6432, -12.1539, 0.23 ) }
    dend_19 { pt3dadd( 141.879, 45.1626, -10.9571, 0.23 ) }
    dend_19 { pt3dadd( 143.699, 45.7168, -9.68, 0.91 ) }
    dend_19 { pt3dadd( 145.949, 46.4019, -8.10146, 0.23 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 72/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 25.992, 35.8927, -23.2718, 0.23 ) }
    dend_16 { pt3dadd( 26.8541, 37.3333, -24.1016, 0.23 ) }
    dend_16 { pt3dadd( 27.1323, 37.8916, -24.3862, 0.68 ) }
    dend_16 { pt3dadd( 27.5568, 38.7835, -24.7776, 0.23 ) }
    dend_16 { pt3dadd( 28.1211, 39.9243, -25.198, 0.45 ) }
    dend_16 { pt3dadd( 28.6482, 40.9938, -25.54, 0.23 ) }
    dend_16 { pt3dadd( 29.3455, 42.5245, -25.884, 0.91 ) }
    dend_16 { pt3dadd( 29.7359, 43.3269, -25.9463, 0.45 ) }
    dend_16 { pt3dadd( 30.2819, 44.4404, -25.9177, 1.13 ) }
    dend_16 { pt3dadd( 31.0059, 45.829, -25.7283, 0.23 ) }
    dend_16 { pt3dadd( 31.4439, 46.5149, -25.4957, 0.68 ) }
    dend_16 { pt3dadd( 32.5201, 47.8643, -24.7289, 0.23 ) }
    dend_16 { pt3dadd( 33.3306, 48.672, -24.0804, 0.23 ) }
    dend_16 { pt3dadd( 33.9879, 49.2544, -23.4994, 0.91 ) }
    dend_16 { pt3dadd( 34.938, 50.0506, -22.61, 0.23 ) }
    dend_16 { pt3dadd( 36.245, 51.1139, -21.3598, 0.91 ) }
    dend_16 { pt3dadd( 37.3205, 52.0619, -20.3459, 0.23 ) }
    dend_16 { pt3dadd( 38.3148, 53.1483, -19.4233, 0.23 ) }
    dend_16 { pt3dadd( 39.1141, 54.1582, -18.6484, 0.68 ) }
    dend_16 { pt3dadd( 39.5366, 54.8098, -18.1946, 0.23 ) }
    dend_16 { pt3dadd( 39.7574, 55.267, -17.941, 0.23 ) }
    dend_16 { pt3dadd( 40.3103, 56.9142, -17.3443, 0.68 ) }
    dend_16 { pt3dadd( 40.7047, 58.7718, -16.8806, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 95/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 25.992, 35.8927, -23.2718, 0.23 ) }
    dend_15 { pt3dadd( 27.2259, 35.0654, -24.6811, 0.23 ) }
    dend_15 { pt3dadd( 28.3677, 34.2974, -25.8863, 1.36 ) }
    dend_15 { pt3dadd( 30.2357, 33.2149, -27.9206, 0.23 ) }
    dend_15 { pt3dadd( 31.0112, 32.8117, -28.7216, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( 32.5206, 32.0438, -30.1479, 0.68 ) }
    dend_15 { pt3dadd( 33.504, 31.5188, -31.0319, 0.23 ) }
    dend_15 { pt3dadd( 34.3064, 31.0913, -31.7276, 1.36 ) }
    dend_15 { pt3dadd( 36.9943, 29.7189, -33.9726, 0.23 ) }
    dend_15 { pt3dadd( 37.9973, 29.2718, -34.772, 0.23 ) }
    dend_15 { pt3dadd( 39.1767, 28.7993, -35.6877, 0.45 ) }
    dend_15 { pt3dadd( 40.5067, 28.2756, -36.7046, 1.13 ) }
    dend_15 { pt3dadd( 42.7115, 27.403, -38.4141, 0.23 ) }
    dend_15 { pt3dadd( 43.9106, 26.9346, -39.3708, 0.68 ) }
    dend_15 { pt3dadd( 45.4323, 26.3609, -40.5901, 0.23 ) }
    dend_15 { pt3dadd( 46.4337, 26.0439, -41.4952, 1.13 ) }
    dend_15 { pt3dadd( 48.2645, 25.5442, -43.0503, 0.23 ) }
    dend_15 { pt3dadd( 48.8692, 25.3819, -43.5347, 0.23 ) }
    dend_15 { pt3dadd( 50.0453, 25.0447, -44.493, 0.68 ) }
    dend_15 { pt3dadd( 51.71, 24.5568, -45.9199, 0.23 ) }
    dend_15 { pt3dadd( 54.2924, 23.7749, -48.0982, 0.91 ) }
    dend_15 { pt3dadd( 56.2856, 23.1064, -49.766, 0.23 ) }
    dend_15 { pt3dadd( 58.4157, 22.2994, -51.4725, 0.68 ) }
    dend_15 { pt3dadd( 60.4051, 21.3743, -53.0564, 0.23 ) }
    dend_15 { pt3dadd( 60.9009, 21.0933, -53.4301, 1.13 ) }
    dend_15 { pt3dadd( 61.674, 20.5691, -53.9626, 0.23 ) }
    dend_15 { pt3dadd( 62.5515, 19.9224, -54.717, 0.68 ) }
    dend_15 { pt3dadd( 63.7899, 18.997, -55.9198, 0.23 ) }
    dend_15 { pt3dadd( 64.3494, 18.5942, -56.4797, 1.13 ) }
    dend_15 { pt3dadd( 65.7634, 17.6319, -57.8932, 0.23 ) }
    dend_15 { pt3dadd( 66.4494, 17.1913, -58.6327, 0.68 ) }
    dend_15 { pt3dadd( 70.337, 14.8907, -62.9402, 0.23 ) }
    dend_15 { pt3dadd( 71.639, 14.1966, -64.3054, 1.36 ) }
    dend_15 { pt3dadd( 73.8926, 13.1061, -66.5968, 0.23 ) }
    dend_15 { pt3dadd( 74.8402, 12.7273, -67.556, 0.91 ) }
    dend_15 { pt3dadd( 76.4201, 12.2249, -69.2047, 0.23 ) }
    dend_15 { pt3dadd( 77.051, 12.0644, -69.84, 0.68 ) }
    dend_15 { pt3dadd( 79.1535, 11.6063, -71.7916, 0.23 ) }
    dend_15 { pt3dadd( 82.2656, 11.021, -74.5508, 0.23 ) }
    dend_15 { pt3dadd( 85.6004, 10.4771, -77.5117, 0.23 ) }
    dend_15 { pt3dadd( 88.784, 10.0532, -80.3886, 0.23 ) }
    dend_15 { pt3dadd( 89.6451, 9.97308, -81.1915, 0.91 ) }
    dend_15 { pt3dadd( 90.4814, 9.92527, -82.005, 0.23 ) }
    dend_15 { pt3dadd( 92.5182, 9.89879, -84.1377, 1.13 ) }
    dend_15 { pt3dadd( 94.711, 9.87277, -86.6048, 0.23 ) }
    dend_15 { pt3dadd( 95.4098, 9.82903, -87.4507, 1.13 ) }
    dend_15 { pt3dadd( 97.6987, 9.48022, -90.3142, 0.23 ) }
    dend_15 { pt3dadd( 98.4519, 9.30135, -91.3103, 0.91 ) }
    dend_15 { pt3dadd( 100.648, 8.55881, -94.2909, 0.23 ) }
    dend_15 { pt3dadd( 103.719, 7.07533, -98.2656, 0.23 ) }
    dend_15 { pt3dadd( 104.524, 6.59127, -99.0619, 0.91 ) }
    dend_15 { pt3dadd( 106.261, 5.40717, -100.436, 0.23 ) }
    dend_15 { pt3dadd( 106.812, 5.02912, -100.75, 0.23 ) }
    dend_15 { pt3dadd( 107.932, 4.32616, -101.255, 0.23 ) }
    dend_15 { pt3dadd( 109.935, 3.27889, -101.839, 0.23 ) }
    dend_15 { pt3dadd( 112.277, 2.53158, -102.402, 0.91 ) }
    dend_15 { pt3dadd( 116.136, 2.17313, -103.768, 0.23 ) }
    dend_15 { pt3dadd( 117.464, 2.16713, -104.3, 0.23 ) }
    dend_15 { pt3dadd( 118.748, 2.25474, -104.853, 0.23 ) }
    dend_15 { pt3dadd( 119.742, 2.42958, -105.333, 0.91 ) }
    dend_15 { pt3dadd( 122.338, 3.29125, -106.814, 0.23 ) }
    dend_15 { pt3dadd( 124.996, 4.73547, -108.595, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 57/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 1.2259, 48.0519, -17.1711, 0.23 ) }
    dend_13 { pt3dadd( 1.7875, 48.5079, -17.1711, 0.23 ) }
    dend_13 { pt3dadd( 2.85175, 49.5105, -17.1711, 0.91 ) }
    dend_13 { pt3dadd( 3.42869, 50.1842, -17.2862, 0.45 ) }
    dend_13 { pt3dadd( 4.00093, 50.8009, -17.5344, 1.36 ) }
    dend_13 { pt3dadd( 5.12229, 51.8291, -18.0884, 0.23 ) }
    dend_13 { pt3dadd( 5.77165, 52.3496, -18.4046, 0.23 ) }
    dend_13 { pt3dadd( 6.30268, 52.7631, -18.6976, 0.91 ) }
    dend_13 { pt3dadd( 8.05443, 54.0848, -19.825, 0.23 ) }
    dend_13 { pt3dadd( 9.78696, 55.3279, -21.0716, 0.23 ) }
    dend_13 { pt3dadd( 10.7376, 55.9316, -21.8178, 0.23 ) }
    dend_13 { pt3dadd( 11.743, 56.4865, -22.683, 0.68 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 69/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.2259, 48.0519, -17.1711, 0.23 ) }
    dend_12 { pt3dadd( 0.242549, 49.1806, -18.5648, 0.23 ) }
    dend_12 { pt3dadd( -0.497831, 50.184, -19.7082, 0.91 ) }
    dend_12 { pt3dadd( -0.969252, 50.8789, -20.3908, 0.23 ) }
    dend_12 { pt3dadd( -1.6888, 51.9498, -21.3413, 1.13 ) }
    dend_12 { pt3dadd( -3.02039, 54.0309, -23.236, 0.23 ) }
    dend_12 { pt3dadd( -3.55917, 54.8606, -23.9848, 0.23 ) }
    dend_12 { pt3dadd( -4.18618, 55.8559, -24.841, 1.36 ) }
    dend_12 { pt3dadd( -4.9571, 57.0324, -25.9222, 0.23 ) }
    dend_12 { pt3dadd( -5.60304, 57.8992, -26.7465, 0.91 ) }
    dend_12 { pt3dadd( -7.01234, 59.3908, -28.1247, 0.23 ) }
    dend_12 { pt3dadd( -7.79555, 60.0131, -28.727, 0.23 ) }
    dend_12 { pt3dadd( -8.55894, 60.3976, -29.1546, 0.23 ) }
    dend_12 { pt3dadd( -9.39633, 60.6743, -29.5302, 0.23 ) }
    dend_12 { pt3dadd( -10.0787, 60.859, -29.7798, 0.23 ) }
    dend_12 { pt3dadd( -11.5862, 61.2031, -30.0987, 1.13 ) }
    dend_12 { pt3dadd( -13.4193, 61.5857, -30.2518, 0.23 ) }
    dend_12 { pt3dadd( -16.7957, 62.2973, -30.2553, 0.23 ) }
    dend_12 { pt3dadd( -18.1353, 62.6121, -30.0855, 0.23 ) }
    dend_12 { pt3dadd( -19.3302, 62.9036, -29.8888, 0.23 ) }
    dend_12 { pt3dadd( -21.7326, 63.5256, -29.3816, 0.91 ) }
    dend_12 { pt3dadd( -23.6173, 64.0393, -28.8294, 0.23 ) }
    dend_12 { pt3dadd( -25.4095, 64.5713, -28.0738, 0.91 ) }
    dend_12 { pt3dadd( -27.7125, 65.3219, -26.7765, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_25, dend_22, dend_3, dend_2, dend_1, dend_0, dend_34, dend_27, dend_24, dend_23, dend_9, dend_4, dend_40, dend_35, dend_33, dend_28, dend_17, dend_10, dend_8, dend_5, dend_42, dend_41, dend_39, dend_36, dend_30, dend_29, dend_21, dend_18, dend_14, dend_11, dend_7, dend_6, dend_38, dend_37, dend_32, dend_31, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_25, dend_22, dend_3, dend_2, dend_1, dend_0, dend_34, dend_27, dend_24, dend_23, dend_9, dend_4, dend_40, dend_35, dend_33, dend_28, dend_17, dend_10, dend_8, dend_5, dend_42, dend_41, dend_39, dend_36, dend_30, dend_29, dend_21, dend_18, dend_14, dend_11, dend_7, dend_6, dend_38, dend_37, dend_32, dend_31, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_25, dend_22, dend_3, dend_2, dend_1, dend_0, axon_0, dend_34, dend_27, dend_24, dend_23, dend_9, dend_4, axon_1, dend_40, dend_35, dend_33, dend_28, dend_17, dend_10, dend_8, dend_5, dend_42, dend_41, dend_39, dend_36, dend_30, dend_29, dend_21, dend_18, dend_14, dend_11, dend_7, dend_6, dend_38, dend_37, dend_32, dend_31, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12]}
    ModelViewParmSubset_5 = new SectionList()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_34 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_2 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_1 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_24 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_4 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_40 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_33 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_8 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_42 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_41 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_21 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_18 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_7 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_15 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_3 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_9 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_27 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_34 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_10 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_28 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_17 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_11 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_35 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_5 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_36 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_38 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_37 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_16 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_31 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_6 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_20 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_0 nseg = 3
    dend_24 nseg = 5
    dend_23 nseg = 3
    dend_4 nseg = 3
    dend_40 nseg = 3
    dend_33 nseg = 5
    dend_8 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_39 nseg = 3
    dend_21 nseg = 5
    dend_18 nseg = 7
    dend_7 nseg = 3
    dend_15 nseg = 7
    dend_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L1_HAC_84f0f8f321_0_0


