// Cell: Cell_473863510
/*
{
  "id" : "Cell_473863510",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "409.373, 417.734, 47.8951, 12.4732", "415.609, 417.734, 47.8951, 12.4732", "421.846, 417.734, 47.8951, 12.4732" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "415.609, 417.734, 47.8951, 1.0", "421.451, 431.55, 47.8951, 1.0", "427.292, 445.366, 47.8951, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999599134129707
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "410.244, 415.781, 48.5492, 1.8304", "409.1, 415.756, 48.72, 1.8304" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999599134129707
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "418.806, 421.545, 42.2579, 0.3396", "419.694, 422.214, 41.3711, 0.3856", "420.781, 422.528, 40.7112, 0.526", "421.831, 422.136, 39.8532, 0.518" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999599134129707
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "416.617, 412.152, 48.2482, 0.9822", "417.526, 411.758, 48.3972, 0.9804", "418.254, 412.568, 48.5265, 1.323", "418.853, 413.539, 48.6942, 1.6506", "420.012, 415.507, 49.0546, 1.3114", "420.753, 416.201, 49.4099, 0.7752", "421.562, 415.663, 49.9232, 0.5556", "422.557, 415.099, 50.3387, 0.5042", "423.398, 414.324, 50.9384, 0.5122" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999599134129707
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "411.193, 421.152, 50.225, 0.4702", "410.54, 422.085, 50.5758, 0.5644", "409.759, 422.898, 50.8628, 0.4788", "408.716, 423.222, 51.0656, 0.4414", "407.835, 423.816, 51.1176, 0.4682" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999599134129707
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "427.292, 445.366, 47.8951, 1.0", "433.133, 459.182, 47.8951, 1.0", "438.975, 472.998, 47.8951, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "409.1, 415.756, 48.72, 1.8304", "409.188, 414.729, 47.4488, 0.6864", "408.947, 413.737, 46.9092, 0.6864", "408.498, 412.764, 46.3898, 0.6864", "408.624, 411.738, 45.7817, 0.6864", "409.073, 410.909, 45.0545, 0.6864", "409.805, 410.107, 44.3598, 0.6864", "410.453, 409.28, 43.8936, 0.6864", "411.089, 408.408, 43.559, 0.6864", "411.618, 407.415, 43.2037, 0.6864", "412.016, 406.352, 42.8417, 0.6864", "412.471, 405.318, 42.4404, 0.6864", "413.072, 404.475, 41.8566, 0.6864", "413.504, 403.538, 41.1261, 0.6864", "413.98, 402.509, 40.497, 0.6864", "414.533, 401.551, 39.8717, 0.6864", "415.333, 400.907, 39.193, 0.6864", "416.339, 400.972, 37.6132, 0.6864" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "409.1, 415.756, 48.72, 1.8304", "408.02, 415.495, 48.8452, 1.716", "406.882, 415.394, 48.897, 1.716", "405.822, 414.961, 48.9597, 1.716", "404.897, 414.287, 49.0344, 1.716", "404.04, 413.532, 49.1336, 1.716" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "421.831, 422.136, 39.8532, 0.518", "422.771, 421.366, 39.0877, 0.435", "423.74, 420.797, 38.7901, 0.3828", "424.824, 420.796, 38.4426, 0.4792", "425.941, 420.572, 38.1713, 0.4056", "426.991, 420.979, 37.6132, 0.3498" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "421.831, 422.136, 39.8532, 0.518", "420.902, 421.654, 38.5608, 0.4576", "420.673, 420.806, 37.9641, 0.5904", "420.87, 419.726, 37.2963, 0.4828", "420.862, 418.622, 36.6649, 0.4334", "420.406, 418.003, 35.908, 0.5278", "419.342, 417.821, 35.2402, 0.4858", "418.257, 417.478, 34.7253, 0.5482", "417.293, 416.899, 33.8489, 0.4396" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "423.398, 414.324, 50.9384, 0.5122", "424.53, 414.518, 49.7092, 0.2288", "425.615, 414.349, 49.2831, 0.6108", "426.733, 414.351, 48.8818, 0.7028", "427.863, 414.452, 48.6346, 0.645", "428.922, 414.42, 48.6357, 0.7302", "430.063, 414.361, 48.6674, 0.8686", "431.161, 414.166, 48.5643, 0.762" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "423.398, 414.324, 50.9384, 0.5122", "423.751, 412.804, 50.5582, 0.485", "423.994, 411.713, 50.3698, 0.4096", "424.208, 410.599, 50.1934, 0.3902", "424.503, 409.495, 50.064, 0.4566", "424.74, 408.376, 49.978, 0.5396", "424.88, 407.247, 49.9316, 0.4334", "424.875, 406.103, 49.9195, 0.3524", "425.273, 405.197, 50.0189, 0.3256" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "407.835, 423.816, 51.1176, 0.4682", "407.819, 424.019, 52.064, 0.2288", "407.81, 425.098, 52.4961, 0.3142", "408.057, 426.184, 52.9939, 0.3734", "408.49, 427.08, 53.6729, 0.3338", "409.352, 427.647, 54.4718, 0.3", "410.421, 427.874, 55.2866, 0.2746", "411.562, 427.853, 56.0157, 0.2746", "412.66, 427.805, 56.7302, 0.2746", "413.609, 427.758, 57.6265, 0.2746", "414.464, 427.43, 58.6676, 0.2746", "415.398, 427.03, 59.7596, 0.2746", "415.932, 426.449, 60.9224, 0.2746", "416.449, 425.666, 62.0959, 0.2746", "417.258, 425.029, 63.2192, 0.2746", "417.874, 424.209, 64.2435, 0.2746", "418.633, 423.433, 64.9698, 0.2746", "419.326, 422.532, 65.4842, 0.2746", "419.512, 421.673, 66.0976, 0.2746", "419.619, 420.572, 67.2932, 0.2746" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "407.835, 423.816, 51.1176, 0.4682", "407.448, 423.12, 51.4735, 0.7378", "406.332, 422.879, 51.6032, 0.6266", "405.191, 422.935, 51.8017, 0.6426", "404.086, 422.921, 52.1461, 0.5096", "403.091, 422.397, 52.577, 0.5944", "402.107, 421.987, 53.1336, 0.5146", "401.023, 421.867, 53.7351, 0.602", "399.925, 421.575, 54.2668, 0.5374", "399.043, 420.928, 54.7842, 0.6026", "397.969, 420.541, 55.5677, 0.7416" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "416.339, 400.972, 37.6132, 0.6864", "415.304, 399.582, 36.248, 0.6864", "414.616, 398.7, 35.7165, 0.6378", "414.107, 397.701, 35.1677, 0.5508", "413.611, 396.705, 34.6083, 0.6564", "413.192, 396.008, 33.8909, 0.6982", "412.958, 395.028, 33.2858, 0.8394", "413.145, 393.92, 32.8485, 0.7906", "413.636, 392.906, 32.5581, 0.8372", "414.413, 392.312, 32.503, 0.9426", "415.314, 391.83, 32.3137, 0.8178", "415.775, 390.995, 31.9203, 0.768", "415.477, 389.923, 31.4152, 0.709", "414.984, 388.935, 30.8129, 0.6668", "414.397, 388.055, 30.0849, 0.4912", "414.082, 387.061, 29.3247, 0.408", "414.405, 386.181, 28.5048, 0.4518", "414.445, 385.311, 27.7024, 0.4858", "413.78, 384.614, 26.9147, 0.5508", "413.682, 383.625, 26.3634, 0.8898", "414.331, 382.765, 26.1349, 0.6864", "414.357, 381.638, 26.04, 0.4576" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "416.339, 400.972, 37.6132, 0.6864", "416.987, 400.355, 39.0956, 0.8956", "417.783, 400.19, 39.7645, 0.621", "418.896, 400.043, 40.2928, 0.476", "419.901, 399.531, 40.6314, 0.4996", "420.719, 398.787, 40.7271, 0.7252", "420.672, 397.697, 40.6636, 0.9498", "420.676, 396.554, 40.5093, 0.9328", "420.479, 395.429, 40.332, 0.7152", "420.217, 394.332, 40.1131, 0.5296", "420.167, 393.232, 39.8406, 0.5002", "420.078, 392.111, 39.5808, 0.7496", "420.197, 390.985, 39.4618, 0.651", "420.155, 389.845, 39.4184, 0.675", "420.054, 388.721, 39.468, 0.6312", "419.855, 387.61, 39.5783, 0.52", "419.848, 386.472, 39.6799, 0.4604", "420.251, 385.414, 39.6547, 0.554", "420.479, 384.421, 39.3893, 0.65", "420.994, 383.4, 39.1345, 0.976", "421.408, 382.366, 38.9099, 1.0916", "421.868, 381.597, 38.4992, 1.1614", "422.611, 380.766, 38.285, 1.0786", "423.271, 379.856, 38.1506, 0.8098", "423.672, 378.808, 38.022, 0.6432", "424.227, 377.829, 37.9828, 0.554", "424.645, 376.849, 38.0033, 0.6956", "424.632, 375.726, 37.9249, 0.8392", "424.767, 374.615, 37.7544, 0.7684", "425.307, 373.685, 37.5298, 0.9006", "426.116, 372.918, 37.2775, 1.0092", "426.895, 372.093, 37.0493, 0.958", "427.617, 371.227, 36.8822, 0.718", "428.173, 370.25, 36.8556, 0.5196", "428.301, 369.2, 36.9678, 0.5564", "428.33, 368.087, 37.0972, 0.4912", "428.477, 366.997, 37.2719, 0.5588", "428.492, 365.94, 37.5438, 0.4582", "428.68, 364.979, 37.6202, 0.45", "428.99, 363.956, 37.6309, 0.4858", "429.582, 362.999, 37.5808, 0.7624", "430.096, 362.221, 37.249, 0.7118", "430.32, 361.111, 36.883, 0.607", "430.718, 360.04, 36.549, 0.695", "430.858, 358.92, 36.2706, 0.6326", "430.525, 357.829, 36.0489, 0.6972", "430.211, 356.754, 35.8204, 0.8562", "429.988, 355.658, 35.6616, 0.9596", "429.957, 354.592, 35.6493, 0.9376", "429.674, 353.541, 35.5975, 0.79", "429.899, 352.429, 35.6101, 0.5766", "430.154, 351.327, 35.6518, 0.5758", "430.384, 350.234, 35.6084, 0.4878", "430.608, 349.171, 35.4617, 0.5158", "430.583, 348.036, 35.3461, 0.5544", "430.455, 346.91, 35.3049, 0.4618", "430.143, 345.864, 35.3318, 0.401", "429.689, 344.883, 35.4805, 0.435", "429.404, 343.782, 35.6238, 0.474", "429.328, 342.644, 35.7356, 0.432", "429.266, 341.509, 35.7725, 0.4548", "428.954, 340.431, 35.7823, 0.4642", "428.543, 339.376, 35.777, 0.4128", "428.296, 338.266, 35.7087, 0.424", "428.253, 337.134, 35.6454, 0.3828", "428.194, 336.002, 35.5919, 0.3802", "428.047, 334.869, 35.5071, 0.4744", "428.117, 333.765, 35.3408, 0.397", "428.643, 332.817, 35.1198, 0.3324", "429.305, 331.896, 34.9457, 0.2872", "429.945, 330.951, 34.8138, 0.299", "430.32, 329.899, 34.6867, 0.3148", "430.417, 328.768, 34.5372, 0.3748", "430.628, 327.659, 34.3711, 0.3364", "430.793, 326.535, 34.2006, 0.3046", "430.949, 325.414, 34.0091, 0.2832", "431.091, 324.285, 33.8702, 0.2904", "431.048, 323.154, 33.8285, 0.304", "431.096, 322.02, 33.8134, 0.329", "431.358, 320.911, 33.8307, 0.3772", "431.895, 319.913, 33.8909, 0.456", "432.415, 318.921, 33.894, 0.655", "432.924, 317.918, 33.9486, 0.7662", "433.336, 316.857, 34.0463, 0.8502", "433.424, 315.757, 34.2353, 0.6858", "433.346, 314.623, 34.4036, 0.7908", "433.243, 313.488, 34.5094, 0.5948", "433.089, 312.359, 34.6265, 0.5282", "432.818, 311.255, 34.7516, 0.5654", "432.521, 310.164, 34.9006, 0.7704", "432.366, 309.057, 35.0874, 0.7186", "432.065, 308.11, 35.0512, 0.8882", "431.859, 307.012, 35.0818, 0.828", "431.65, 305.887, 35.089, 0.7052", "431.053, 304.913, 35.0823, 0.7598", "430.78, 303.809, 35.0851, 0.8642", "430.294, 302.788, 35.0011, 1.0424", "430.064, 301.683, 34.8673, 0.9904", "430.094, 300.551, 34.6864, 0.9188", "430.11, 299.417, 34.5052, 1.125", "430.257, 298.301, 34.4151, 1.0046", "430.799, 297.316, 34.337, 0.7052", "430.878, 296.195, 34.3258, 0.5198", "430.583, 295.105, 34.4308, 0.668", "430.323, 294.014, 34.629, 0.616", "430.027, 292.93, 34.8499, 0.7326", "429.869, 291.807, 35.019, 0.6004", "429.841, 290.665, 35.1666, 0.6742", "429.714, 289.533, 35.2674, 0.636", "429.513, 288.424, 35.3802, 0.7278", "429.309, 287.353, 35.5821, 0.566", "429.367, 286.333, 35.749, 0.5056", "429.831, 285.318, 35.7776, 0.6034", "430.238, 284.278, 35.8078, 0.6826", "430.576, 283.214, 35.8901, 0.6366", "430.936, 282.29, 35.8128, 0.5732", "431.477, 281.407, 35.632, 0.5764", "432.195, 280.534, 35.5424, 0.4554", "432.911, 279.65, 35.5085, 0.3894", "433.661, 278.793, 35.5037, 0.4134", "434.421, 278.007, 35.607, 0.4334", "435.305, 277.331, 35.7014, 0.3606", "436.124, 276.716, 35.5905, 0.3022", "436.953, 276.108, 35.2982, 0.2796", "437.684, 275.428, 35.2041, 0.2796", "437.897, 274.345, 35.1946, 0.305", "438.495, 273.416, 35.0, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "404.04, 413.532, 49.1336, 1.716", "402.998, 411.744, 50.0167, 0.2288", "402.906, 410.609, 50.1908, 0.2748", "402.816, 409.475, 50.3924, 0.2752", "402.725, 408.341, 50.608, 0.2758", "402.632, 407.207, 50.8248, 0.2766", "402.405, 406.09, 51.0152, 0.2782", "402.094, 404.99, 51.1566, 0.2814", "401.981, 403.858, 51.254, 0.2872", "402.238, 402.766, 51.361, 0.2978", "402.464, 401.656, 51.3929, 0.3176", "402.78, 400.623, 51.499, 0.3562", "403.283, 399.612, 51.5449, 0.4164", "403.867, 398.634, 51.5038, 0.585", "404.136, 397.555, 51.3349, 0.6196", "404.387, 396.45, 51.095, 0.6616", "404.698, 395.359, 50.813, 0.6166", "405.283, 394.395, 50.603, 0.4444", "405.915, 393.497, 50.3297, 0.326", "406.691, 392.836, 49.9461, 0.2758", "407.438, 391.986, 49.7006, 0.2766", "408.062, 391.03, 49.5561, 0.2782", "408.128, 389.935, 49.5947, 0.2814", "408.159, 388.792, 49.6712, 0.2872", "408.811, 387.931, 49.6544, 0.2988", "409.641, 387.193, 49.6465, 0.3144", "410.245, 386.251, 49.754, 0.3738", "410.911, 385.352, 49.9352, 0.3348", "411.744, 384.607, 50.183, 0.3016", "412.626, 383.9, 50.4347, 0.2776", "413.65, 383.408, 50.6974, 0.28", "414.594, 382.806, 50.8906, 0.2848", "415.345, 381.979, 51.072, 0.2934", "416.098, 381.194, 51.2425, 0.3096", "416.81, 380.328, 51.3187, 0.3388", "417.68, 379.608, 51.4172, 0.3982", "418.695, 379.181, 51.6152, 0.4818", "419.794, 379.125, 51.9042, 0.7642", "420.873, 378.917, 52.2032, 0.6702", "421.944, 378.568, 52.5134, 0.7498", "422.97, 378.162, 52.864, 0.5794", "424.014, 377.75, 53.1838, 0.6624", "425.099, 377.407, 53.3792, 0.4814", "426.165, 377.002, 53.4635, 0.399", "427.148, 376.439, 53.4436, 0.3892", "428.132, 375.866, 53.3957, 0.3644", "428.856, 375.012, 53.3414, 0.3514", "429.59, 374.138, 53.284, 0.3952", "430.169, 373.194, 53.1244, 0.3752", "431.059, 372.502, 52.9698, 0.3712", "432.012, 371.871, 52.8237, 0.4326", "432.728, 371.047, 52.5563, 0.4406", "433.809, 370.738, 52.2911, 0.5126", "434.911, 370.506, 51.9856, 0.598", "436.033, 370.29, 51.7154, 0.531", "437.113, 369.94, 51.5256, 0.5872", "438.082, 369.487, 51.2207, 0.5008", "439.146, 369.072, 50.9622, 0.5784", "440.146, 368.725, 50.6033, 0.4848", "441.268, 368.535, 50.3051, 0.5476", "442.221, 367.997, 50.2043, 0.4334", "443.255, 367.629, 50.0374, 0.4254", "444.29, 367.194, 50.0214, 0.3358", "445.197, 366.502, 50.0329, 0.3038", "445.986, 365.709, 50.0312, 0.2816", "447.099, 365.483, 50.022, 0.2874", "448.235, 365.55, 49.9892, 0.2994", "449.339, 365.703, 49.8543, 0.3156", "450.441, 365.856, 49.6748, 0.376", "451.572, 365.885, 49.565, 0.3386", "452.701, 365.793, 49.4567, 0.3088", "453.797, 365.55, 49.2769, 0.2906", "454.835, 365.102, 49.0616, 0.3056", "455.874, 364.628, 48.8757, 0.3264", "456.866, 364.182, 48.6248, 0.3976", "457.772, 363.582, 48.3031, 0.3734", "458.652, 362.857, 48.0334, 0.3988", "459.633, 362.3, 47.8218, 0.3338", "460.675, 361.838, 47.6549, 0.3", "461.715, 361.374, 47.5306, 0.2746", "462.793, 361.012, 47.4572, 0.2746", "463.895, 360.834, 47.5118, 0.2746", "465.011, 360.743, 47.6871, 0.2746", "466.118, 360.514, 47.9105, 0.2746", "467.172, 360.139, 48.1914, 0.2746", "468.204, 359.676, 48.4579, 0.2746", "469.142, 359.033, 48.6618, 0.2746", "470.016, 358.302, 48.8323, 0.2746", "471.014, 357.768, 48.9429, 0.2746", "472.059, 357.3, 49.0039, 0.2746", "473.137, 356.934, 49.0137, 0.2746", "474.263, 356.928, 49.0344, 0.2744", "475.349, 356.641, 49.049, 0.2744", "476.415, 356.274, 49.1302, 0.2742", "477.521, 356.105, 49.2898, 0.2736", "478.641, 356.024, 49.369, 0.2728", "479.731, 356.167, 49.5096, 0.2712", "480.866, 356.244, 49.6247, 0.2684", "481.857, 356.792, 49.6572, 0.2626", "482.742, 357.516, 49.6356, 0.2542", "483.826, 357.823, 49.5281, 0.2288", "484.942, 358.072, 49.28, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "404.04, 413.532, 49.1336, 1.716", "402.181, 412.484, 49.5852, 1.144", "401.169, 411.951, 49.5804, 1.144", "400.201, 411.344, 49.5452, 1.144", "399.388, 410.587, 49.4088, 1.144", "398.592, 409.768, 49.2719, 1.144", "397.865, 408.899, 49.222, 1.144", "397.111, 408.067, 49.257, 1.144", "396.018, 407.727, 49.2722, 1.144", "394.908, 407.73, 49.1854, 1.144", "393.766, 407.775, 48.9742, 1.144" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "426.991, 420.979, 37.6132, 0.3498", "428.142, 422.162, 36.5106, 0.3144", "428.997, 422.778, 36.0175, 0.374", "429.975, 423.011, 35.42, 0.335", "431.094, 423.015, 34.8342, 0.302", "432.115, 423.294, 34.2454, 0.2782", "433.133, 423.708, 33.7285, 0.2814", "434.241, 423.908, 33.4113, 0.2876", "435.372, 424.033, 33.2455, 0.2984", "436.386, 424.455, 33.0691, 0.3198", "437.063, 425.341, 32.933, 0.3528", "437.255, 426.456, 32.8796, 0.4474", "437.982, 427.283, 32.9302, 0.4598", "439.008, 427.755, 32.9232, 0.5864", "439.708, 428.627, 32.8516, 0.5494", "440.175, 429.593, 32.9577, 0.655", "440.74, 430.582, 33.0296, 0.6918", "441.12, 431.598, 32.9608, 0.6162", "441.702, 432.564, 32.8678, 0.717", "442.376, 433.454, 32.9221, 0.6496", "443.02, 434.316, 33.1285, 0.6146", "443.488, 435.322, 33.3808, 0.5694", "443.867, 436.395, 33.5496, 0.619", "444.404, 437.39, 33.6246, 0.524", "445.117, 438.257, 33.6227, 0.5666", "445.639, 439.197, 33.6851, 0.4992", "446.254, 440.082, 33.6274, 0.3982", "446.891, 440.941, 33.6482, 0.3244", "447.835, 441.57, 33.6778, 0.321", "448.694, 442.298, 33.6445, 0.3548", "449.632, 442.922, 33.5387, 0.4508", "450.544, 443.609, 33.4169, 0.469", "451.22, 444.507, 33.3122, 0.591", "451.554, 445.585, 33.243, 0.6174", "452.079, 446.567, 33.215, 0.4926", "452.886, 447.358, 33.1724, 0.4176", "453.789, 448.028, 33.084, 0.4354", "454.684, 448.653, 33.1002, 0.6218", "455.585, 449.249, 33.2494, 0.6812", "456.483, 449.828, 33.2828, 0.8082", "457.171, 450.698, 33.2553, 0.7304", "457.986, 451.489, 33.2248, 0.7352", "458.744, 452.331, 33.1632, 0.7074", "459.572, 453.065, 33.1918, 0.6042", "460.659, 453.153, 33.2514, 0.6652", "461.78, 453.045, 33.3794, 0.6966", "462.913, 453.128, 33.5003, 0.6934", "464.009, 453.439, 33.6003, 0.5292", "465.112, 453.38, 33.539, 0.5344", "466.214, 453.26, 33.3875, 0.4144", "467.047, 453.34, 33.0792, 0.3638", "467.909, 453.255, 33.0753, 0.3492", "469.048, 453.276, 33.0952, 0.397", "470.126, 453.09, 33.0229, 0.578", "471.016, 453.601, 32.8992, 0.4652", "471.926, 454.278, 32.7331, 0.3744", "472.988, 454.672, 32.5766, 0.3184", "474.062, 455.052, 32.4265, 0.353", "475.116, 455.438, 32.2126, 0.435", "476.232, 455.655, 32.0004, 0.5", "477.348, 455.787, 31.7484, 0.356", "478.421, 456.113, 31.08, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "426.991, 420.979, 37.6132, 0.3498", "428.093, 420.814, 36.5092, 0.6864", "429.219, 420.754, 36.1057, 0.5644", "430.011, 420.987, 35.4875, 0.5718", "430.993, 421.167, 34.7956, 0.6194", "432.113, 421.024, 34.1692, 0.771", "433.147, 421.035, 33.4958, 0.7434", "434.151, 421.328, 32.8079, 0.5914", "435.262, 421.396, 32.2101, 0.5686", "436.363, 421.668, 31.7405, 0.6418", "437.302, 422.3, 31.4367, 0.6762", "438.346, 422.753, 31.1758, 0.544", "439.428, 422.43, 30.9644, 0.5628", "440.465, 421.983, 30.7286, 0.462", "441.529, 421.739, 30.4018, 0.4778", "442.672, 421.775, 30.1227, 0.4358", "443.791, 421.547, 29.8707, 0.4752", "444.913, 421.337, 29.6344, 0.6658", "445.972, 421.641, 29.412, 0.6788", "446.35, 422.716, 29.1911, 0.523", "446.592, 423.821, 29.0055, 0.4216", "447.194, 424.763, 28.8193, 0.4676", "448.059, 425.355, 28.4684, 0.5608", "448.832, 425.37, 27.881, 0.4676", "449.643, 424.592, 27.3213, 0.4418", "450.11, 424.057, 26.5471, 0.3672", "451.02, 423.753, 25.886, 0.3566", "452.148, 423.773, 25.3518, 0.4052", "453.257, 423.684, 24.8556, 0.3926", "454.231, 423.646, 24.2749, 0.4104", "455.314, 423.712, 23.7118, 0.472", "456.268, 423.179, 23.3573, 0.6772", "457.211, 422.554, 23.1277, 0.8426", "458.318, 422.308, 22.9606, 0.822", "459.431, 422.365, 22.7475, 0.771", "460.266, 423.04, 22.4571, 0.5084", "461.145, 423.734, 22.1368, 0.3814", "461.859, 424.626, 21.5228, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "417.293, 416.899, 33.8489, 0.4396", "417.521, 416.692, 31.5554, 0.2288", "418.505, 416.219, 30.6592, 0.837", "419.607, 416.121, 29.8245, 0.8926", "420.395, 416.719, 28.9492, 0.7374", "420.684, 417.31, 27.921, 0.558", "421.02, 418.257, 26.9774, 0.6146", "421.671, 419.181, 26.2788, 0.6626", "422.572, 419.644, 25.7774, 0.5676", "423.684, 419.578, 25.4909, 0.6002", "424.777, 419.398, 25.3159, 0.5624", "425.836, 419.459, 25.0905, 0.5116", "426.305, 420.179, 24.7058, 0.5524", "425.885, 421.158, 24.4247, 0.6598", "425.488, 422.229, 24.2267, 0.7022", "424.449, 422.695, 23.9868, 0.6302" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "417.293, 416.899, 33.8489, 0.4396", "416.684, 416.453, 33.343, 0.412", "415.794, 416.037, 32.9843, 0.4318", "415.033, 415.725, 32.9095, 0.5832", "414.104, 415.828, 33.1041, 0.7624", "412.983, 415.949, 33.3228, 0.9024", "412.056, 416.073, 33.0711, 0.9516" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "431.161, 414.166, 48.5643, 0.762", "431.981, 414.474, 48.4207, 0.4976", "433.085, 414.723, 48.3787, 0.3304", "434.123, 415.056, 48.2807, 0.2838", "435.147, 415.479, 48.1452, 0.2918", "436.142, 415.988, 48.0511, 0.306", "437.026, 416.709, 47.9626, 0.335", "437.822, 417.507, 47.9181, 0.376", "438.645, 418.283, 47.9049, 0.5132", "439.533, 418.996, 47.847, 0.4708", "440.565, 419.389, 47.7428, 0.4608", "441.691, 419.484, 47.5698, 0.5666", "442.824, 419.591, 47.3911, 0.6184", "443.934, 419.414, 47.2181, 0.4972", "445.014, 419.551, 46.9804, 0.4132", "446.115, 419.711, 46.6833, 0.4884", "447.21, 419.795, 46.3305, 0.4232", "448.329, 419.967, 46.0356, 0.3816", "449.431, 420.269, 45.8175, 0.376", "450.466, 420.746, 45.6786, 0.4776", "451.523, 421.177, 45.6089, 0.5772", "452.514, 421.741, 45.5806, 0.5066", "453.458, 422.319, 45.4594, 0.4736", "454.327, 423.048, 45.3432, 0.6208", "455.388, 423.39, 45.1727, 0.5698", "456.408, 423.886, 45.0601, 0.445", "457.484, 424.236, 44.9403, 0.3594", "458.589, 424.133, 44.7905, 0.4102", "459.721, 424.148, 44.6782, 0.403", "460.748, 423.734, 44.7521, 0.4244", "461.846, 423.455, 44.8865, 0.5226", "462.87, 423.671, 45.1979, 0.6504", "463.899, 424.135, 45.4619, 0.6918", "464.837, 424.737, 45.8049, 0.5754", "465.539, 425.621, 46.1838, 0.6098", "466.267, 426.488, 46.534, 0.6048", "467.168, 427.136, 46.9353, 0.4708", "467.887, 427.884, 47.4146, 0.3698", "468.335, 428.923, 47.8806, 0.3826", "469.03, 429.715, 48.3272, 0.3506", "470.06, 430.157, 48.7225, 0.3318", "470.91, 430.836, 49.0669, 0.3284", "471.456, 431.82, 49.4214, 0.3994", "471.965, 432.811, 49.8142, 0.3842", "472.798, 433.507, 50.2144, 0.3828", "473.764, 434.006, 50.6705, 0.4792", "474.634, 434.665, 51.1577, 0.4056", "475.474, 435.427, 51.6046, 0.3496", "476.454, 435.986, 51.9532, 0.3142", "477.443, 436.545, 52.2586, 0.3734", "478.129, 437.391, 52.5885, 0.3338", "478.71, 438.364, 52.8368, 0.3", "479.466, 439.211, 53.0289, 0.2746", "480.264, 439.784, 53.3627, 0.2746", "480.767, 440.737, 53.6696, 0.2746", "481.221, 441.767, 53.814, 0.2746", "481.786, 442.754, 53.853, 0.2746", "482.062, 443.853, 53.87, 0.2744", "482.142, 444.987, 53.8238, 0.2744", "482.323, 446.111, 53.7244, 0.2742", "482.507, 447.239, 53.6444, 0.2736", "482.546, 448.379, 53.6273, 0.2728", "482.141, 449.433, 53.6413, 0.2712", "481.268, 450.162, 53.6987, 0.2684", "480.343, 450.821, 53.846, 0.2626", "479.435, 451.469, 54.0999, 0.2542", "478.538, 452.132, 54.4158, 0.2288", "477.849, 453.024, 55.16, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "431.161, 414.166, 48.5643, 0.762", "432.251, 413.365, 48.7724, 0.2288", "433.273, 412.875, 48.8267, 0.3034", "434.387, 412.674, 48.8306, 0.329", "435.521, 412.537, 48.8046, 0.3708", "436.6, 412.19, 48.7502, 0.4756", "437.676, 411.823, 48.7225, 0.5396", "438.646, 411.235, 48.687, 0.6028", "439.772, 411.092, 48.6408, 0.5292", "440.91, 411.039, 48.6889, 0.4066" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "425.273, 405.197, 50.0189, 0.3256", "426.162, 404.577, 50.437, 0.2288", "427.117, 403.961, 50.6204, 0.2986", "428.104, 403.385, 50.7802, 0.3198", "429.061, 402.757, 50.9093, 0.354", "430.118, 402.329, 50.9942, 0.4434", "431.241, 402.113, 51.0748, 0.4836", "432.289, 401.673, 51.1868, 0.4794", "433.259, 401.079, 51.3271, 0.3984", "434.268, 400.557, 51.4942, 0.3744", "435.326, 400.339, 51.7546, 0.402", "436.408, 400.019, 51.8734, 0.5622", "437.509, 399.883, 51.8406, 0.5586", "438.59, 399.508, 51.8003, 0.6384", "439.634, 399.059, 51.8143, 0.8226", "440.719, 398.818, 51.7401, 0.761", "441.857, 398.734, 51.6869, 0.5444", "442.983, 398.547, 51.7412, 0.4114", "444.04, 398.283, 51.9641, 0.4614", "445.109, 398.038, 52.2841, 0.4882", "446.192, 397.699, 52.5946, 0.6292", "447.266, 397.304, 52.8388, 0.6774", "448.289, 396.794, 53.0788, 0.6552" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "425.273, 405.197, 50.0189, 0.3256", "424.835, 404.633, 49.6566, 0.3636", "424.788, 403.491, 49.5208, 0.4672", "424.883, 402.389, 49.2895, 0.4976", "424.898, 401.25, 49.0708, 0.6536", "424.991, 400.109, 48.9042, 0.6876", "425.391, 399.038, 48.6842, 0.8452" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "419.619, 420.572, 67.2932, 0.2746", "419.744, 420.461, 68.3922, 0.2746", "420.592, 420.436, 68.9772, 0.2746", "421.279, 419.679, 69.6111, 0.2746", "421.667, 418.625, 70.0857, 0.2746", "422.578, 417.986, 70.4203, 0.2746", "423.629, 417.565, 70.6563, 0.2746", "424.566, 416.911, 70.8002, 0.2746", "425.457, 416.198, 70.8851, 0.2746", "426.285, 415.436, 71.0214, 0.2746", "427.04, 414.638, 71.2695, 0.2746", "427.954, 414.033, 71.547, 0.2746", "429.027, 413.644, 71.7525, 0.2746", "430.13, 413.35, 71.8987, 0.2746", "431.248, 413.122, 71.9939, 0.2746", "432.38, 412.993, 72.0818, 0.2746", "433.514, 412.887, 72.1804, 0.2746", "434.533, 412.441, 72.3218, 0.2746", "435.495, 412.014, 72.574, 0.2746", "436.438, 412.307, 72.9963, 0.2746", "437.335, 412.914, 73.4698, 0.2746", "438.087, 413.736, 73.8741, 0.2744", "438.598, 414.711, 74.2804, 0.2744", "439.383, 415.39, 74.5349, 0.2742", "440.197, 416.155, 74.7253, 0.2736", "441.062, 416.894, 74.9081, 0.2728", "442.022, 417.506, 75.0784, 0.2712", "443.063, 417.967, 75.2886, 0.2684", "444.169, 418.045, 75.584, 0.2626", "445.13, 417.568, 75.9951, 0.2542", "445.914, 416.836, 76.4851, 0.2288", "445.931, 415.73, 77.56, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "419.619, 420.572, 67.2932, 0.2746", "419.593, 420.074, 68.8489, 0.2288", "419.719, 419.135, 69.4803, 0.2736", "419.819, 418.02, 70.0924, 0.2728", "419.674, 417.163, 70.8803, 0.2712", "419.104, 416.567, 71.8026, 0.2684", "418.602, 415.671, 72.5486, 0.2626", "418.451, 414.552, 73.0699, 0.2542", "418.736, 413.519, 73.5412, 0.2288", "418.934, 412.412, 74.2, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "397.969, 420.541, 55.5677, 0.7416", "397.335, 420.892, 56.8095, 0.2288", "396.342, 421.428, 57.2278, 0.4342", "395.595, 422.228, 57.6114, 0.673", "394.685, 422.645, 58.177, 0.517", "393.61, 422.758, 58.7992, 0.386", "392.651, 422.836, 59.5011, 0.2924", "391.708, 423.446, 60.1191, 0.308", "390.845, 424.084, 60.7009, 0.3356", "390.033, 424.717, 61.2623, 0.3922", "389.105, 425.351, 61.6829, 0.4714", "388.3, 426.155, 62.0455, 0.7432", "387.568, 427.028, 62.3568, 0.6392", "386.847, 427.887, 62.6965, 0.653", "386.054, 428.68, 63.0767, 0.591", "385.172, 429.395, 63.4561, 0.4442", "384.158, 429.897, 63.8548, 0.3254", "383.047, 430.079, 64.265, 0.2746", "381.939, 430.123, 64.7506, 0.2746", "381.023, 430.281, 65.4394, 0.2746", "380.023, 430.279, 66.176, 0.2746", "378.981, 430.075, 66.9488, 0.2746", "377.915, 429.998, 67.7443, 0.2746", "376.815, 430.222, 68.4474, 0.2746", "375.902, 430.782, 69.1284, 0.2746", "375.365, 431.616, 69.8653, 0.2746", "374.633, 432.406, 70.5645, 0.2746", "373.581, 432.78, 71.1589, 0.2746", "372.516, 433.116, 71.7279, 0.2746", "371.475, 433.489, 72.3013, 0.2746", "370.492, 434.055, 72.7966, 0.2746", "369.527, 434.6, 73.2738, 0.2746", "368.76, 435.279, 73.8178, 0.2746", "368.488, 436.348, 74.3201, 0.2746", "368.254, 437.466, 74.6738, 0.2746", "368.025, 437.58, 74.7208, 0.2746", "367.719, 437.618, 74.7076, 0.2746", "367.453, 437.694, 74.6508, 0.2746", "367.122, 437.707, 74.5738, 0.2746", "366.411, 438.025, 74.48, 0.2746", "366.067, 438.483, 74.48, 0.2746", "365.724, 438.94, 74.48, 0.2746", "365.165, 439.182, 74.48, 0.2746", "364.669, 439.487, 74.48, 0.2746", "364.414, 439.575, 74.48, 0.2746", "364.352, 439.855, 74.48, 0.2746", "364.135, 439.982, 74.48, 0.2746", "363.792, 439.982, 74.48, 0.2746", "362.878, 440.097, 74.48, 0.2746", "362.28, 440.3, 74.48, 0.2746", "361.695, 440.517, 74.48, 0.2746", "360.932, 440.554, 74.48, 0.2746", "360.132, 440.554, 74.48, 0.2746", "359.445, 440.44, 74.48, 0.2746", "359.102, 440.44, 74.48, 0.2744", "358.758, 440.44, 74.48, 0.2744", "358.453, 440.402, 74.48, 0.2742", "358.212, 440.072, 74.48, 0.2728", "357.767, 439.83, 74.48, 0.2684", "357.538, 439.373, 74.48, 0.2542", "357.386, 438.953, 74.48, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "397.969, 420.541, 55.5677, 0.7416", "396.421, 420.477, 56.3282, 0.6828", "395.319, 420.253, 56.6482, 0.7366", "394.258, 419.878, 56.9934, 0.96", "393.24, 419.369, 57.3031, 1.003", "392.27, 418.761, 57.5448, 1.0554", "391.348, 418.084, 57.7324, 1.0564", "390.434, 417.395, 57.869, 1.0676", "389.54, 416.68, 57.9793, 1.0414", "388.586, 416.05, 58.0804, 0.9924", "387.544, 415.589, 58.2137, 0.9046", "386.546, 415.158, 58.8311, 0.7266" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "393.766, 407.775, 48.9742, 1.144", "392.451, 408.764, 48.6802, 0.9152", "391.555, 409.475, 48.5864, 0.6228", "390.745, 410.27, 48.274, 0.54" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "393.766, 407.775, 48.9742, 1.144", "392.671, 407.981, 48.7861, 1.0296", "391.583, 407.954, 48.6819, 1.0296", "390.602, 407.518, 48.4268, 1.0296", "389.71, 406.853, 48.1208, 1.0296", "388.862, 406.087, 47.8486, 1.0296", "387.961, 405.388, 47.6196, 1.0296", "386.977, 404.806, 47.4267, 1.0296", "385.96, 404.297, 47.2567, 1.0296", "384.97, 403.768, 47.0666, 1.0296", "384.091, 403.063, 46.8656, 1.0296", "383.273, 402.264, 46.7015, 1.0296", "382.466, 401.456, 46.5676, 1.0296", "381.658, 400.649, 46.4741, 1.0296", "380.85, 399.844, 46.48, 1.0296", "379.647, 398.557, 45.3474, 0.9152" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "424.449, 422.695, 23.9868, 0.6302", "425.823, 423.153, 22.888, 0.4576", "426.673, 423.787, 22.3969, 0.4688", "427.007, 424.858, 22.0044, 0.3814", "426.957, 425.958, 21.8266, 0.3304", "426.742, 427.06, 21.6448, 0.3814", "426.826, 428.199, 21.56, 0.2288" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "424.449, 422.695, 23.9868, 0.6302", "423.533, 423.178, 23.441, 0.539", "422.651, 423.819, 23.1756, 0.6214", "422.137, 424.684, 22.8724, 0.6992", "421.794, 425.649, 22.5711, 0.5206", "421.231, 426.596, 22.3401, 0.3836", "420.854, 427.646, 22.2765, 0.33", "420.079, 428.214, 22.4854, 0.4038", "419.052, 428.371, 22.9295, 0.3842", "418.396, 428.672, 23.6407, 0.4238", "418.11, 429.677, 24.3354, 0.356", "417.331, 430.373, 24.92, 0.4576" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "412.056, 416.073, 33.0711, 0.9516", "411.305, 415.129, 32.4106, 0.2288", "410.486, 414.417, 32.1485, 0.4808", "409.423, 414.241, 31.9788, 0.5624", "408.31, 414.238, 31.7607, 0.5798", "407.248, 413.951, 31.4507, 0.8062", "406.215, 414.103, 31.0523, 0.7402", "405.207, 413.765, 30.6202, 0.6892", "404.085, 413.602, 30.2854, 0.7034", "402.971, 413.347, 30.0222, 0.661", "401.887, 412.984, 29.68, 0.9152" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "412.056, 416.073, 33.0711, 0.9516", "410.465, 416.026, 32.3991, 0.5444", "409.99, 416.715, 32.0533, 0.6882", "409.345, 417.605, 31.8738, 0.5466", "408.573, 418.393, 31.7148, 0.4352", "407.874, 419.259, 31.4742, 0.41", "407.095, 420.07, 31.3236, 0.3976", "406.311, 420.899, 31.1937, 0.4386", "405.621, 421.77, 30.9403, 0.4332", "405.348, 422.606, 30.4203, 0.3602", "404.791, 423.304, 30.0462, 0.3016", "404.93, 424.187, 29.7797, 0.2774", "404.771, 424.867, 29.2382, 0.2796", "404.246, 425.614, 28.791, 0.284", "403.699, 426.402, 28.6675, 0.2918", "402.878, 427.131, 28.5522, 0.3078", "402.267, 427.503, 28.1215, 0.3304", "401.171, 427.775, 27.7214, 0.4048", "400.049, 427.873, 27.382, 0.3866", "398.995, 427.795, 27.0018, 0.4232", "397.934, 427.518, 26.782, 0.3788", "396.842, 427.544, 26.626, 0.3844", "395.794, 427.379, 26.4118, 0.4274", "394.711, 427.128, 26.2032, 0.5756", "393.589, 426.942, 26.0378, 0.7462", "392.474, 426.775, 25.9428, 0.8844", "391.366, 426.744, 25.9736, 0.8592", "390.258, 426.831, 26.0252, 0.8052", "389.151, 426.993, 26.1038, 0.7406", "388.109, 427.149, 26.0725, 0.678", "387.022, 427.278, 25.9585, 0.5132", "385.909, 427.212, 25.9148, 0.4428", "384.857, 427.433, 25.9731, 0.5454", "383.805, 427.445, 25.8787, 0.5178", "383.024, 428.235, 25.7121, 0.6092", "381.99, 428.563, 25.5665, 0.5444", "380.87, 428.581, 25.4713, 0.647", "379.76, 428.745, 25.412, 0.67", "378.791, 429.156, 25.4229, 0.6104", "378.401, 430.01, 25.3092, 0.5368", "378.386, 431.017, 25.2899, 0.4518", "377.883, 431.966, 25.1978, 0.5", "376.923, 432.454, 24.9984, 0.5084", "376.147, 433.233, 24.92, 0.6864" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "440.91, 411.039, 48.6889, 0.4066", "441.96, 411.179, 48.0533, 0.3396", "443.017, 411.594, 47.7946, 0.3514", "444.005, 412.163, 47.521, 0.401", "444.875, 412.891, 47.3166, 0.586", "445.714, 413.668, 47.1344, 0.4796", "446.684, 414.25, 46.8927, 0.402", "447.569, 414.668, 46.4598, 0.364", "448.628, 415.001, 45.9922, 0.4676", "449.759, 415.16, 45.6047, 0.4996", "450.897, 415.055, 45.2858, 0.65", "452.039, 415.017, 45.0439, 0.7176", "453.143, 414.888, 44.7896, 0.7242", "454.237, 414.668, 44.5477, 0.6244", "455.36, 414.466, 44.4161, 0.526", "456.48, 414.242, 44.3414, 0.6098", "457.603, 414.216, 44.3722, 0.6166", "458.672, 414.575, 44.3716, 0.6626", "459.74, 414.967, 44.4441, 0.5884", "460.785, 415.287, 44.6558, 0.5364", "461.826, 415.757, 44.8602, 0.484", "462.839, 416.265, 45.026, 0.4016", "463.926, 416.523, 45.1744, 0.404", "465.035, 416.642, 45.381, 0.3434", "466.161, 416.526, 45.575, 0.3178", "467.264, 416.239, 45.7316, 0.3072", "468.375, 415.981, 45.8368, 0.3374", "469.389, 416.215, 45.9547, 0.3804", "470.214, 416.961, 46.1012, 0.5226", "471.143, 417.546, 46.1569, 0.4834", "472.176, 418.008, 46.1042, 0.508", "473.076, 418.683, 45.9833, 0.54", "473.944, 419.41, 45.8119, 0.4342", "474.978, 419.76, 45.5896, 0.3544", "476.099, 419.695, 45.4087, 0.329", "477.194, 419.775, 45.3496, 0.3722", "478.16, 420.302, 45.3552, 0.4706", "479.063, 420.998, 45.3205, 0.5662", "479.965, 421.598, 45.1178, 0.4776", "480.772, 422.191, 44.6975, 0.4608", "481.809, 422.547, 44.2439, 0.3976", "482.866, 422.198, 43.8259, 0.4384", "483.951, 421.855, 43.4361, 0.4326", "485.069, 421.816, 43.0629, 0.3592", "486.201, 421.896, 42.7552, 0.2998", "487.328, 421.73, 42.5138, 0.2744", "488.331, 421.189, 42.3164, 0.2742", "489.369, 420.707, 42.1683, 0.2736", "490.491, 420.492, 42.04, 0.2728", "491.626, 420.374, 41.9392, 0.2712", "492.757, 420.474, 41.778, 0.2684", "493.832, 420.717, 41.505, 0.2626", "494.944, 420.952, 41.2163, 0.2542", "496.042, 420.849, 40.8696, 0.2288", "497.182, 420.763, 40.32, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "440.91, 411.039, 48.6889, 0.4066", "441.436, 410.884, 49.2708, 0.2288", "442.483, 410.575, 49.5701, 0.289", "443.49, 410.056, 49.8408, 0.3008", "444.479, 409.622, 50.2065, 0.3256", "445.422, 409.004, 50.5674, 0.3588", "446.255, 408.22, 50.8553, 0.4816", "447.264, 407.702, 51.028, 0.4104", "448.28, 407.199, 51.114, 0.3572", "449.254, 406.602, 51.2159, 0.3356", "450.297, 406.17, 51.382, 0.377", "451.292, 406.002, 51.7468, 0.5168", "452.33, 405.742, 52.185, 0.4702", "453.205, 405.07, 52.4527, 0.496", "454.25, 404.618, 52.6683, 0.4562", "455.238, 404.099, 52.9138, 0.5798", "456.105, 403.372, 53.1527, 0.5356", "456.964, 402.639, 53.361, 0.637", "457.814, 401.902, 53.4696, 0.6216", "458.619, 401.1, 53.6071, 0.6656", "459.464, 400.386, 53.8182, 0.624", "460.465, 399.862, 54.0341, 0.4578", "461.482, 399.399, 54.1923, 0.3518", "462.615, 399.288, 54.3584, 0.3184", "463.73, 399.318, 54.5829, 0.3814", "464.798, 399.648, 54.8388, 0.3486", "465.78, 400.172, 55.1219, 0.327", "466.681, 400.696, 55.2882, 0.327", "467.563, 400.948, 55.403, 0.361", "468.592, 401.008, 55.5635, 0.4858", "469.611, 401.291, 55.5878, 0.4192", "470.544, 401.802, 55.6987, 0.3684", "471.609, 402.011, 55.939, 0.3798", "472.686, 401.754, 56.259, 0.3452", "473.408, 400.927, 56.5816, 0.3224", "473.833, 399.966, 57.0069, 0.3108", "474.603, 399.254, 57.5016, 0.3672", "475.578, 398.669, 57.8444, 0.322", "476.408, 397.909, 57.9869, 0.2796", "477.121, 397.022, 58.0188, 0.2288", "478.078, 396.396, 57.96, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "448.289, 396.794, 53.0788, 0.6552", "449.69, 396.689, 52.1063, 0.2288", "450.774, 396.401, 51.7443, 0.501", "451.753, 395.917, 51.3257, 0.4462", "452.664, 395.259, 50.923, 0.4258", "453.542, 394.531, 50.5792, 0.4502", "454.257, 393.647, 50.3314, 0.65", "454.832, 392.668, 50.122, 0.7304", "455.369, 391.662, 49.926, 0.913", "456.06, 390.758, 49.7904, 0.8596", "456.569, 389.793, 49.5729, 0.604", "457.003, 388.747, 49.3444, 0.4326", "457.796, 387.946, 49.1795, 0.4772", "458.697, 387.25, 49.0196, 0.4024", "459.699, 386.703, 48.8995, 0.3426", "460.721, 386.226, 48.7292, 0.307", "461.806, 385.88, 48.6111, 0.3304", "462.86, 385.441, 48.4809, 0.3984", "463.922, 385.07, 48.2938, 0.4068", "465.007, 384.787, 48.071, 0.305", "466.066, 384.384, 47.88, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "448.289, 396.794, 53.0788, 0.6552", "449.074, 396.221, 53.1359, 0.4702", "450.142, 395.863, 53.158, 0.3688", "451.243, 395.555, 53.1812, 0.3804", "452.214, 394.969, 53.2171, 0.3468", "453.035, 394.244, 53.1874, 0.324", "454.035, 393.813, 53.13, 0.3188", "454.999, 393.494, 53.338, 0.3586", "455.883, 393.332, 53.8415, 0.42", "456.99, 393.56, 54.3684, 0.5938", "458.053, 393.974, 54.8456, 0.6278", "459.033, 394.483, 55.3627, 0.714", "460.085, 394.725, 55.8765, 0.5332", "461.089, 394.197, 56.2607, 0.4788", "461.978, 393.528, 56.5306, 0.3876", "463.1, 393.433, 56.7428, 0.4022", "464.215, 393.645, 56.943, 0.4508", "465.26, 393.918, 57.2524, 0.6672", "466.219, 394.34, 57.6744, 0.6826", "467.249, 394.69, 58.0398, 0.524", "468.362, 394.662, 58.345, 0.453", "469.464, 394.658, 58.721, 0.382", "470.542, 394.786, 59.1195, 0.415", "471.619, 395.067, 59.4986, 0.3634", "472.729, 395.125, 59.8592, 0.3566", "473.865, 395.039, 60.1255, 0.3692", "474.998, 394.975, 60.312, 0.5008", "476.138, 394.996, 60.4458, 0.4484", "477.279, 395.042, 60.5489, 0.4168", "478.418, 395.037, 60.6707, 0.4964", "479.557, 395.053, 60.807, 0.4326", "480.681, 395.245, 60.9762, 0.4242", "481.801, 395.356, 61.2156, 0.3338", "482.924, 395.216, 61.5202, 0.3", "484.054, 395.099, 61.8478, 0.2746", "485.139, 395.301, 62.2362, 0.2746", "486.072, 395.057, 62.7298, 0.2746", "486.603, 394.217, 63.3626, 0.2746", "486.578, 393.159, 64.0119, 0.2746", "486.191, 392.109, 64.624, 0.2746", "485.974, 391.0, 65.1521, 0.2746", "485.586, 389.934, 65.5948, 0.2746", "485.224, 388.865, 66.0192, 0.2744", "484.96, 387.778, 66.4608, 0.2744", "484.935, 386.67, 66.9424, 0.2742", "484.873, 385.538, 67.4206, 0.2736", "484.594, 384.454, 67.9272, 0.2728", "484.18, 383.417, 68.4827, 0.2712", "483.819, 382.363, 69.0572, 0.2684", "483.915, 381.257, 69.6063, 0.2626", "484.1, 380.142, 70.119, 0.2542", "483.888, 379.114, 70.677, 0.2288", "484.141, 378.092, 71.96, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "425.391, 399.038, 48.6842, 0.8452", "425.431, 398.158, 48.8124, 0.678", "425.623, 397.037, 48.8278, 0.5388", "425.956, 395.945, 48.8916, 0.3674", "426.426, 394.925, 49.0372, 0.315", "427.008, 393.941, 49.1747, 0.3022", "427.716, 393.053, 49.56, 0.3268" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "425.391, 399.038, 48.6842, 0.8452", "425.882, 398.334, 47.2312, 0.2288", "426.603, 397.495, 46.6262, 0.3794", "427.402, 396.759, 45.8122, 0.345", "428.221, 396.128, 44.7908, 0.3206", "428.741, 395.873, 43.4672, 0.3134", "428.533, 395.6, 41.8838, 0.3422", "428.029, 394.988, 40.2256, 0.4206", "427.524, 394.157, 38.6355, 0.4464", "426.639, 393.743, 37.2022, 0.3858", "426.069, 394.448, 35.868, 0.3436", "426.233, 395.371, 34.6175, 0.381", "426.839, 396.286, 33.57, 0.3476", "427.173, 397.304, 32.6449, 0.3268", "426.21, 397.661, 31.8136, 0.3188", "425.147, 397.809, 31.0808, 0.3818", "424.076, 398.207, 30.1328, 0.3496" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "386.546, 415.158, 58.8311, 0.7266", "385.495, 415.358, 58.3058, 0.2288", "384.46, 415.723, 58.0941, 0.3476", "383.335, 415.676, 57.8152, 0.436", "382.285, 415.668, 57.3905, 0.4466", "381.237, 415.86, 56.9316, 0.5262", "380.129, 416.141, 56.5524, 0.6106", "379.049, 416.447, 56.1845, 0.6164", "377.972, 416.687, 55.8032, 0.4442", "376.86, 416.864, 55.4781, 0.3254", "375.883, 417.363, 55.2558, 0.2746", "375.249, 418.293, 55.125, 0.2746", "374.818, 419.348, 55.0614, 0.2746", "374.093, 420.14, 55.1082, 0.2746", "373.322, 420.922, 55.0852, 0.2746", "372.491, 421.678, 54.9746, 0.2746", "371.865, 422.608, 54.8111, 0.2746", "371.142, 423.481, 54.6277, 0.2746", "370.292, 424.244, 54.4841, 0.2746", "369.291, 424.774, 54.3558, 0.2746", "368.286, 425.318, 54.2934, 0.2746", "367.301, 425.899, 54.3105, 0.2746", "366.328, 426.498, 54.3962, 0.2746", "365.417, 427.174, 54.5577, 0.2746", "364.365, 427.581, 54.7812, 0.2746", "363.249, 427.8, 55.0315, 0.2746", "362.149, 428.097, 55.2824, 0.2746", "361.104, 428.52, 55.5548, 0.2746", "360.081, 429.03, 55.7572, 0.2746", "358.978, 429.303, 55.9591, 0.2746", "357.848, 429.469, 56.1282, 0.2746", "356.814, 429.915, 56.187, 0.2746", "356.521, 429.75, 56.3993, 0.2746", "356.013, 429.572, 56.6756, 0.2746", "355.671, 429.572, 56.756, 0.2746", "355.441, 429.572, 56.8089, 0.2746", "354.831, 429.381, 56.84, 0.2746", "354.475, 429.05, 56.84, 0.2746", "354.182, 429.0, 56.84, 0.2746", "353.839, 429.0, 56.84, 0.2746", "353.61, 429.0, 56.84, 0.2746", "352.81, 429.0, 56.84, 0.2746", "352.466, 429.0, 56.84, 0.2746", "352.123, 429.0, 56.84, 0.2746", "351.818, 428.962, 56.84, 0.2746", "351.438, 428.428, 56.84, 0.2746", "351.106, 428.415, 56.84, 0.2746", "350.293, 428.314, 56.84, 0.2746", "349.492, 428.314, 56.84, 0.2746", "348.691, 428.314, 56.84, 0.2746", "347.891, 428.314, 56.84, 0.2746", "347.547, 428.314, 56.84, 0.2746", "347.217, 428.301, 56.84, 0.2746", "346.975, 428.199, 56.84, 0.2746", "346.848, 427.983, 56.84, 0.2746", "346.404, 427.856, 56.84, 0.2746", "346.098, 427.818, 56.84, 0.2746", "345.259, 427.742, 56.84, 0.2746", "344.458, 427.742, 56.84, 0.2746", "343.658, 427.742, 56.84, 0.2746", "343.314, 427.742, 56.84, 0.2746", "342.984, 427.729, 56.84, 0.2746", "342.564, 427.462, 56.84, 0.2746", "342.208, 426.789, 56.84, 0.2746", "341.725, 426.471, 56.84, 0.2744", "341.37, 426.14, 56.84, 0.2742", "341.026, 426.14, 56.84, 0.2736", "340.684, 426.14, 56.84, 0.2728", "340.454, 426.14, 56.84, 0.2712", "339.781, 426.013, 56.84, 0.2684", "339.197, 425.797, 56.84, 0.2626", "338.395, 425.797, 56.84, 0.2542", "337.594, 425.797, 56.84, 0.2288", "337.137, 425.568, 56.84, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "386.546, 415.158, 58.8311, 0.7266", "385.116, 414.332, 58.9904, 0.47", "384.106, 413.878, 59.1139, 0.3262", "383.116, 413.329, 59.2477, 0.2762", "382.185, 412.689, 59.383, 0.2776", "381.216, 412.111, 59.4804, 0.28", "380.375, 411.338, 59.5361, 0.2846", "379.498, 410.604, 59.5703, 0.293", "378.643, 409.852, 59.6072, 0.3088", "377.916, 408.974, 59.6635, 0.3386", "377.279, 408.025, 59.7162, 0.3906", "376.72, 407.034, 59.7892, 0.5036", "376.167, 406.07, 59.927, 0.6308", "375.361, 405.344, 60.0474, 0.5814", "374.474, 404.671, 60.0732, 0.7292", "373.761, 403.791, 60.039, 0.5272", "373.046, 402.921, 59.9368, 0.4056", "372.197, 402.176, 59.8153, 0.3238", "371.291, 401.48, 59.7349, 0.3912", "370.44, 400.734, 59.7582, 0.3668", "369.536, 400.119, 59.913, 0.3628", "368.643, 399.473, 60.1398, 0.3816", "367.897, 398.629, 60.3098, 0.519", "367.326, 397.651, 60.4206, 0.505", "366.634, 396.83, 60.3862, 0.4096", "366.025, 396.094, 60.1185, 0.3406", "365.017, 395.888, 59.8769, 0.3754", "363.893, 395.696, 59.7584, 0.338", "362.893, 395.159, 59.724, 0.3076", "362.302, 394.34, 59.9866, 0.288", "361.809, 393.717, 60.5674, 0.3006", "360.837, 393.224, 61.1727, 0.3178", "360.056, 392.449, 61.5496, 0.3802", "359.667, 391.539, 61.6549, 0.3464", "358.79, 390.846, 61.7884, 0.3242", "357.746, 390.434, 61.9086, 0.3142", "356.625, 390.228, 61.9909, 0.3734", "355.579, 389.805, 62.1214, 0.3338", "354.661, 389.181, 62.3126, 0.3002", "353.725, 388.561, 62.41, 0.2748", "352.697, 388.083, 62.4596, 0.2748", "351.718, 387.509, 62.5344, 0.2752", "350.813, 386.814, 62.5887, 0.2758", "349.971, 386.058, 62.6366, 0.2766", "349.13, 385.304, 62.7497, 0.2784", "348.138, 384.746, 62.902, 0.2816", "347.138, 384.204, 63.0725, 0.2876", "346.391, 383.416, 63.3058, 0.2998", "345.82, 382.496, 63.6278, 0.316", "344.953, 381.799, 63.9145, 0.377", "343.91, 381.389, 64.0959, 0.3406", "342.787, 381.299, 64.2743, 0.3124", "341.671, 381.367, 64.4823, 0.2986", "340.556, 381.277, 64.6895, 0.314", "339.572, 381.508, 64.6859, 0.3732", "338.474, 381.674, 64.696, 0.3336", "337.332, 381.7, 64.7035, 0.2994", "336.212, 381.488, 64.6892, 0.2736", "335.116, 381.166, 64.6486, 0.2728", "333.994, 380.952, 64.6209, 0.2712", "332.899, 380.655, 64.6657, 0.2684", "331.958, 380.039, 64.7598, 0.2626", "330.987, 379.562, 64.7069, 0.2542", "330.078, 378.865, 64.6624, 0.2288", "329.243, 378.092, 64.68, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "390.745, 410.27, 48.274, 0.54", "390.604, 411.339, 47.8495, 0.6864", "390.555, 412.46, 47.6493, 0.602", "390.495, 413.567, 47.3693, 0.6582", "390.231, 414.669, 47.0826, 0.698", "389.994, 415.788, 46.8524, 0.6264", "390.046, 416.919, 46.7256, 0.7416", "390.033, 418.046, 46.6858, 0.6678", "389.732, 419.146, 46.6004, 0.7806", "389.272, 420.165, 46.4086, 0.9222", "388.806, 421.203, 46.1639, 0.8282", "388.378, 422.183, 45.7668, 0.7812", "388.037, 423.273, 45.3891, 0.7642", "387.387, 424.215, 45.0542, 0.6194", "386.733, 425.125, 44.6916, 0.4432", "386.025, 426.011, 44.336, 0.3558", "385.283, 426.881, 44.0244, 0.4048", "384.774, 427.906, 43.741, 0.3866", "384.567, 429.027, 43.426, 0.423", "384.266, 430.069, 42.996, 0.38", "383.685, 430.93, 42.4586, 0.38", "382.751, 431.474, 41.8933, 0.4496", "381.803, 432.113, 41.4436, 0.471", "381.047, 432.971, 40.8422, 0.5726" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "390.745, 410.27, 48.274, 0.54", "390.129, 410.815, 46.1756, 0.5524", "389.546, 411.509, 45.2586, 0.4578", "389.199, 412.473, 44.2842, 0.393", "388.921, 413.541, 43.3577, 0.4252", "388.647, 414.621, 42.5048, 0.4328", "388.755, 415.669, 41.7007, 0.4674", "389.395, 416.55, 41.011, 0.6636", "390.098, 417.436, 40.4138, 0.6154", "390.296, 418.492, 39.8261, 0.6928", "390.062, 419.562, 39.2174, 0.716", "389.856, 420.659, 38.6154, 0.6552", "389.968, 421.76, 38.0148, 0.8162", "390.327, 422.785, 37.371, 0.7034", "390.835, 423.776, 36.7287, 0.6596", "391.326, 424.806, 36.171, 0.462", "391.376, 425.928, 35.6672, 0.4316", "391.089, 426.879, 35.03, 0.347", "390.8, 427.734, 34.2395, 0.3254", "390.452, 428.708, 33.4359, 0.3164", "390.359, 429.834, 32.7664, 0.378", "390.543, 430.961, 32.2686, 0.342", "390.805, 432.074, 31.9057, 0.3152", "391.164, 433.156, 31.628, 0.303", "391.412, 434.26, 31.3701, 0.328", "391.487, 435.384, 31.0912, 0.3684", "391.585, 436.517, 30.8076, 0.4754", "391.755, 437.621, 30.4777, 0.5166", "391.74, 438.749, 30.1462, 0.669", "391.517, 439.846, 29.9681, 0.8126", "391.305, 440.962, 29.8768, 0.6082", "391.38, 442.074, 29.7046, 0.4562", "391.317, 443.155, 29.4241, 0.4432", "390.861, 444.2, 29.1819, 0.4894", "390.599, 445.302, 29.036, 0.461", "390.533, 446.407, 28.7955, 0.5038", "390.342, 447.53, 28.5656, 0.5794", "389.837, 448.554, 28.4178, 0.5086", "389.613, 449.677, 28.296, 0.484", "389.348, 450.789, 28.1649, 0.61", "389.259, 451.927, 27.9966, 0.695", "389.533, 452.993, 27.7298, 0.6582", "389.953, 454.041, 27.4252, 0.6206", "390.096, 455.175, 27.1306, 0.631", "390.072, 456.31, 26.9206, 0.7162", "389.874, 457.415, 26.6454, 0.786", "389.61, 458.515, 26.4578, 0.6548", "389.224, 459.866, 26.1498, 0.5328", "388.868, 460.91, 25.7471, 0.4046", "388.886, 462.023, 25.3218, 0.3786", "389.225, 463.098, 24.8965, 0.4454", "389.638, 464.116, 24.4426, 0.4714", "389.914, 465.186, 23.9837, 0.5354", "389.777, 466.304, 23.6376, 0.8046", "389.839, 467.433, 23.443, 0.8024", "389.969, 468.558, 23.282, 0.7176", "389.81, 469.681, 23.161, 0.4924", "389.77, 470.817, 23.0762, 0.4046", "390.003, 471.918, 23.0009, 0.4722", "390.07, 473.041, 23.0532, 0.3934", "389.374, 473.871, 23.2646, 0.3254", "388.658, 474.75, 23.5189, 0.2746", "388.585, 475.883, 23.7871, 0.2746", "388.177, 476.912, 24.1273, 0.2746", "387.671, 477.911, 24.4703, 0.2746", "387.388, 479.014, 24.7391, 0.2748", "387.262, 480.148, 24.9015, 0.2748", "387.275, 481.283, 24.9878, 0.275", "387.583, 482.381, 25.058, 0.2754", "388.046, 483.422, 25.13, 0.2764", "388.622, 484.41, 25.1938, 0.278", "389.166, 485.404, 25.2616, 0.281", "389.419, 486.517, 25.356, 0.2864", "389.745, 487.596, 25.4456, 0.2966", "390.379, 488.544, 25.487, 0.3164", "390.925, 489.54, 25.5122, 0.3466", "391.243, 490.636, 25.5595, 0.4356", "391.41, 491.762, 25.6505, 0.4396", "391.4, 492.893, 25.793, 0.5418", "391.182, 494.007, 25.9599, 0.5006", "390.888, 495.103, 26.101, 0.4004", "390.871, 496.237, 26.241, 0.329", "390.835, 497.343, 26.4264, 0.329", "390.447, 498.406, 26.5563, 0.3722", "389.849, 499.371, 26.595, 0.4704", "389.221, 500.32, 26.6288, 0.566", "388.61, 501.264, 26.7126, 0.477", "388.093, 502.267, 26.761, 0.4604", "387.845, 503.366, 26.705, 0.3956", "387.741, 504.495, 26.6288, 0.4396", "387.6, 505.612, 26.5832, 0.4126", "387.675, 506.737, 26.4608, 0.43", "388.0, 507.827, 26.292, 0.592", "388.391, 508.899, 26.1145, 0.492", "388.803, 509.952, 25.907, 0.4196", "389.217, 511.001, 25.6771, 0.4224", "389.576, 512.086, 25.4906, 0.45", "389.995, 513.14, 25.3663, 0.3912", "390.629, 514.092, 25.2921, 0.3592", "391.211, 515.076, 25.258, 0.3836", "391.86, 515.985, 25.2568, 0.4808", "392.777, 516.667, 25.2753, 0.639", "393.606, 517.452, 25.3014, 1.0376", "394.384, 518.285, 25.3408, 1.2654", "395.298, 518.948, 25.4164, 1.4234", "396.328, 519.408, 25.5088, 1.1704", "397.392, 519.798, 25.5273, 1.0614", "398.495, 520.037, 25.5088, 0.9428", "399.639, 520.054, 25.5063, 1.004", "400.781, 520.018, 25.5293, 0.8978", "401.91, 519.917, 25.6066, 0.6214", "403.017, 519.906, 25.751, 0.4958", "404.132, 520.135, 25.8958, 0.4446", "405.223, 520.417, 26.0016, 0.3826", "406.184, 520.991, 26.1251, 0.3378", "407.11, 521.537, 26.0806, 0.37", "407.861, 522.083, 25.7821, 0.3276", "408.41, 523.014, 25.6365, 0.288", "408.914, 524.038, 25.5394, 0.2542", "409.147, 525.156, 25.487, 0.2288", "408.866, 526.24, 25.76, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "379.647, 398.557, 45.3474, 0.9152", "379.044, 397.085, 44.2047, 0.6864", "379.204, 396.029, 43.7004, 0.6864", "379.772, 395.158, 43.0749, 0.6864", "380.582, 394.601, 42.3125, 0.6864", "381.399, 394.172, 41.3879, 0.6864", "382.354, 393.71, 40.4902, 0.6864", "383.431, 393.349, 39.7264, 0.6864", "384.46, 392.949, 39.0356, 0.6864", "385.4, 392.446, 38.3468, 0.6864", "386.379, 391.949, 37.7224, 0.6864", "387.401, 391.444, 37.2072, 0.6864", "388.395, 390.901, 36.7324, 0.6864", "389.294, 390.234, 36.2676, 0.6864", "389.987, 389.364, 35.8193, 0.6864", "390.578, 388.403, 35.3909, 0.6864", "391.361, 387.616, 34.9723, 0.6864", "392.337, 387.056, 34.5512, 0.6864", "393.345, 386.53, 34.1606, 0.6864", "394.33, 385.95, 33.815, 0.6864", "395.349, 385.462, 33.467, 0.6864", "396.322, 384.964, 33.047, 0.6864", "397.248, 384.379, 32.5665, 0.6864", "398.149, 383.699, 32.1135, 0.6864", "399.022, 382.96, 31.7173, 0.6864", "399.819, 382.144, 31.3547, 0.6864", "400.234, 381.147, 30.9554, 0.6864", "400.355, 380.127, 30.438, 0.6864", "400.839, 379.181, 29.8995, 0.6864", "401.547, 378.291, 29.4546, 0.6864", "402.488, 377.677, 29.0511, 0.6864", "403.557, 377.833, 28.6443, 0.6864", "404.576, 378.305, 28.2472, 0.6864", "405.671, 378.234, 27.8544, 0.4708", "406.633, 377.676, 27.4621, 0.5354", "407.576, 377.053, 27.0931, 0.5718", "408.378, 376.244, 26.8064, 0.586", "409.013, 375.297, 26.6381, 0.642", "409.688, 374.388, 26.5922, 0.6022", "410.365, 373.47, 26.542, 0.5384", "411.08, 372.588, 26.458, 0.6016", "411.841, 371.735, 26.3693, 0.7538", "412.524, 370.817, 26.2777, 0.864", "413.151, 369.861, 26.1755, 0.9896", "413.967, 369.06, 26.0604, 0.9168", "414.977, 368.526, 25.933, 0.6642", "416.059, 368.159, 25.779, 0.5384", "417.074, 367.636, 25.5724, 0.7032", "417.943, 366.957, 25.2409, 0.6758", "418.38, 365.966, 24.8046, 0.8682", "418.427, 364.927, 24.2659, 0.7328", "418.228, 363.811, 23.7958, 0.8116", "418.322, 362.672, 23.4713, 0.9572", "418.762, 361.618, 23.2722, 0.771", "419.215, 360.593, 23.1179, 0.5818", "420.068, 359.832, 23.0798, 0.3898", "421.197, 359.678, 23.1599, 0.4068", "422.136, 359.674, 24.08, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "379.647, 398.557, 45.3474, 0.9152", "379.236, 398.287, 46.4797, 0.3666" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "427.716, 393.053, 49.56, 0.3268", "428.095, 392.564, 48.2042, 0.3682", "428.733, 391.73, 47.6378, 0.4628", "429.323, 390.9, 46.9644, 0.551", "429.764, 390.575, 46.0944, 0.4542", "430.024, 389.654, 45.3457, 0.392", "430.197, 389.032, 45.1777, 0.3946", "430.875, 388.113, 45.1791, 0.5142", "431.51, 387.181, 45.2152, 0.6362", "431.866, 386.094, 45.3331, 0.6588", "432.24, 385.016, 45.5031, 0.548", "432.434, 383.919, 45.7229, 0.394", "432.586, 382.888, 46.009, 0.3174", "432.49, 381.75, 46.2218, 0.3066", "432.283, 380.656, 46.3316, 0.3358", "432.392, 379.631, 46.2011, 0.3778", "432.62, 378.548, 46.0547, 0.518", "433.081, 377.554, 45.9693, 0.4722", "433.542, 376.519, 45.8139, 0.4992", "434.133, 375.555, 45.6106, 0.4646", "434.677, 374.607, 45.3275, 0.5832", "435.294, 373.729, 45.0352, 0.6026", "436.119, 372.971, 44.8515, 0.4656", "436.921, 372.188, 44.7227, 0.3666", "437.357, 371.189, 44.5418, 0.3454", "437.313, 370.107, 44.2588, 0.4324", "437.232, 368.998, 43.9239, 0.44", "437.688, 368.147, 43.484, 0.513", "437.855, 367.169, 43.073, 0.5912", "437.723, 366.036, 42.7403, 0.5558", "437.52, 364.912, 42.4861, 0.4506", "437.822, 363.874, 42.2167, 0.448", "438.245, 362.837, 41.9129, 0.4216", "438.674, 361.827, 41.5458, 0.478", "439.277, 360.89, 41.2947, 0.5318", "439.835, 359.897, 41.055, 0.4188", "439.966, 358.77, 40.85, 0.3258", "440.299, 357.833, 40.488, 0.2752", "441.052, 357.025, 40.1195, 0.2758", "441.354, 356.005, 39.9652, 0.2766", "441.322, 354.929, 39.7054, 0.2784", "441.161, 353.82, 39.5562, 0.2818", "441.46, 352.721, 39.4573, 0.2878", "441.494, 351.587, 39.3652, 0.3002", "441.605, 350.47, 39.2053, 0.3166", "441.717, 349.339, 39.0244, 0.3782", "441.697, 348.197, 38.8514, 0.3428", "441.647, 347.058, 38.6571, 0.3162", "441.553, 345.927, 38.442, 0.3056", "441.61, 344.816, 38.2071, 0.3268", "441.974, 343.754, 37.9907, 0.3982", "442.345, 342.683, 37.8314, 0.3744", "442.386, 341.562, 37.758, 0.4006", "442.227, 340.437, 37.7684, 0.3372", "442.069, 339.305, 37.7992, 0.3062", "441.943, 338.181, 37.8876, 0.286", "441.882, 337.056, 38.0302, 0.2958", "441.921, 335.916, 38.1511, 0.3148", "442.076, 334.797, 38.1951, 0.3438", "442.344, 333.7, 38.1937, 0.4294", "442.705, 332.62, 38.2346, 0.4344", "443.128, 331.567, 38.3312, 0.5026", "443.652, 330.578, 38.5025, 0.5722", "444.254, 329.625, 38.6932, 0.5194", "444.855, 328.653, 38.8511, 0.3882", "445.353, 327.629, 38.9676, 0.3068", "445.921, 326.649, 39.0701, 0.2872", "446.533, 325.696, 39.2104, 0.2978", "447.121, 324.723, 39.3467, 0.3184", "447.629, 323.708, 39.4923, 0.3518", "448.076, 322.666, 39.6819, 0.438", "448.628, 321.673, 39.8689, 0.4802", "449.301, 320.754, 40.0453, 0.4416", "449.999, 319.85, 40.1923, 0.4802", "450.608, 318.887, 40.3312, 0.4746", "451.033, 317.836, 40.4916, 0.61", "451.298, 316.728, 40.6622, 0.6112", "451.481, 315.601, 40.8436, 0.6822", "451.245, 314.539, 41.0679, 0.4798", "450.799, 313.495, 41.2712, 0.3542", "450.24, 312.505, 41.4498, 0.281", "450.222, 311.453, 41.6626, 0.2864", "450.434, 310.491, 42.0014, 0.2966", "450.568, 309.376, 42.2114, 0.3156", "450.675, 308.382, 42.1243, 0.3496", "450.272, 307.529, 41.8102, 0.4176", "450.233, 306.402, 41.62, 0.5208", "450.184, 305.267, 41.4898, 0.8232", "450.258, 304.13, 41.4005, 0.845", "450.365, 303.002, 41.4324, 0.7554", "450.293, 301.874, 41.5629, 0.762", "449.936, 300.853, 41.6237, 0.6242", "449.618, 299.797, 41.6634, 0.6384", "449.52, 298.706, 41.8208, 0.7268", "449.546, 297.634, 42.0414, 0.8194", "449.417, 296.547, 42.2542, 0.8816", "449.229, 295.474, 42.5645, 0.8408", "448.923, 294.503, 42.9551, 0.6064", "448.438, 293.571, 43.272, 0.4858", "447.916, 292.556, 43.4162, 0.5676", "447.288, 291.641, 43.3798, 0.6102", "446.716, 290.686, 43.2037, 0.5338", "446.046, 289.89, 42.28, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "427.716, 393.053, 49.56, 0.3268", "426.949, 392.116, 51.3117, 0.2288", "426.307, 391.335, 52.0587, 0.3048", "425.665, 390.552, 52.9046, 0.3302", "425.016, 389.712, 53.748, 0.3794", "424.218, 388.924, 54.4566, 0.4602", "423.451, 388.08, 54.9842, 0.662", "422.701, 387.242, 55.4039, 0.7824", "422.225, 386.23, 55.713, 0.8644", "421.507, 385.386, 55.9695, 0.7874", "420.725, 384.557, 56.1996, 0.6132", "419.961, 383.707, 56.4091, 0.6708", "419.332, 382.769, 56.6504, 0.5326", "418.904, 381.716, 56.8828, 0.5502", "418.497, 380.669, 57.1679, 0.3966", "417.84, 379.786, 57.5207, 0.3314", "417.047, 378.972, 57.8222, 0.2858", "416.482, 377.987, 58.0586, 0.295", "415.875, 377.043, 58.3402, 0.3132", "415.004, 376.341, 58.6681, 0.3422", "414.111, 375.638, 58.9949, 0.4204", "413.197, 374.962, 59.3219, 0.4464", "412.24, 374.341, 59.656, 0.3842", "411.344, 373.633, 59.9508, 0.3484", "410.472, 373.04, 60.3277, 0.3538", "409.645, 372.338, 60.7415, 0.4724", "408.985, 371.414, 61.1234, 0.3936", "408.813, 370.314, 61.4631, 0.3258", "408.766, 369.182, 61.808, 0.2754", "408.197, 368.244, 62.1477, 0.2762", "407.306, 367.568, 62.4921, 0.2776", "406.327, 367.088, 62.8936, 0.28", "405.665, 366.195, 63.2094, 0.285", "405.197, 365.155, 63.4645, 0.2938", "404.666, 364.155, 63.7339, 0.311", "403.983, 363.241, 63.9845, 0.3378", "403.178, 362.441, 64.2594, 0.412", "402.331, 361.678, 64.5484, 0.4308", "401.512, 360.903, 64.918, 0.356", "400.798, 360.029, 65.3307, 0.2938", "400.232, 359.049, 65.7527, 0.2626", "399.52, 358.157, 66.1212, 0.2542", "398.876, 357.447, 66.6434, 0.2288", "398.341, 356.47, 67.76, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "424.076, 398.207, 30.1328, 0.3496", "423.147, 398.211, 28.6157, 0.4576", "422.155, 398.629, 27.9933, 0.4098", "421.304, 398.292, 27.1547, 0.3978", "421.27, 397.896, 26.0579, 0.435", "422.197, 398.042, 25.0354, 0.6738", "423.241, 398.383, 24.2298, 0.5192", "424.32, 398.585, 23.5771, 0.3894", "425.315, 399.027, 23.191, 0.3", "426.272, 399.567, 23.0026, 0.3164", "427.298, 399.397, 22.8766, 0.378", "428.318, 398.913, 22.794, 0.3422", "429.36, 398.452, 22.8119, 0.3156", "430.34, 397.883, 22.965, 0.3032", "431.348, 397.366, 23.1613, 0.3284", "432.362, 396.985, 23.5038, 0.3714", "433.22, 396.498, 24.0657, 0.4688", "433.469, 395.514, 24.6512, 0.5622", "433.083, 394.508, 25.2459, 0.4746", "432.951, 393.406, 25.7813, 0.4322", "433.443, 392.39, 26.2315, 0.4576", "433.471, 391.305, 26.6764, 0.6864", "432.891, 390.333, 27.44, 0.6864" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "424.076, 398.207, 30.1328, 0.3496", "423.878, 398.491, 31.0635, 0.3292", "423.798, 399.162, 31.579, 0.3278", "424.529, 399.714, 32.0992, 0.378", "425.395, 400.367, 32.4033, 0.445", "425.738, 401.408, 32.4579, 0.6928", "425.65, 402.418, 32.1751, 0.554", "425.475, 403.276, 31.5129, 0.4562", "425.82, 404.028, 30.6278, 0.4132", "426.615, 404.766, 29.7657, 0.578", "427.512, 405.458, 29.0825, 0.6124", "428.554, 405.891, 28.5586, 0.6178", "429.608, 406.141, 28.0596, 0.6848", "430.689, 406.326, 27.592, 0.5304", "431.809, 406.532, 27.2244, 0.4526", "432.725, 407.099, 26.8439, 0.442", "433.185, 408.049, 26.3808, 0.687", "433.266, 409.115, 25.8661, 0.5438", "432.995, 410.188, 25.3898, 0.4348", "432.749, 411.294, 25.0429, 0.3872", "433.195, 412.284, 24.7825, 0.4622", "434.185, 412.811, 24.5655, 0.7244", "435.195, 413.339, 24.36, 0.614", "436.158, 413.926, 24.1226, 0.5588", "437.178, 414.337, 23.8168, 0.6472", "438.243, 414.516, 23.443, 0.7982", "439.374, 414.628, 23.1515, 0.6848", "440.319, 415.222, 23.0412, 0.784", "441.211, 415.93, 23.0289, 0.6072", "442.188, 416.52, 23.0826, 0.4294", "443.087, 417.149, 23.259, 0.288", "443.981, 417.327, 23.6281, 0.2542", "444.442, 416.424, 23.7138, 0.2288", "444.559, 415.501, 22.96, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "381.047, 432.971, 40.8422, 0.5726", "380.75, 433.851, 40.9688, 0.6926", "380.755, 434.976, 40.9682, 0.788", "380.68, 436.094, 40.9153, 0.6658", "380.314, 437.159, 40.8094, 0.5186", "380.01, 438.216, 40.6006, 0.547", "379.816, 439.317, 40.4065, 0.5102", "379.564, 440.426, 40.2654, 0.4194", "378.957, 441.361, 40.1509, 0.3588", "378.27, 442.267, 40.0355, 0.4102", "377.674, 443.238, 39.9218, 0.397", "377.163, 444.255, 39.8154, 0.4432", "376.826, 445.331, 39.6992, 0.4118", "376.461, 446.406, 39.6074, 0.4658", "375.952, 447.414, 39.6323, 0.4782", "375.453, 448.421, 39.7849, 0.469", "374.945, 449.402, 40.0551, 0.3796", "374.4, 450.368, 40.3908, 0.3372", "373.85, 451.353, 40.7137, 0.3446", "373.492, 452.402, 40.8716, 0.4008", "373.478, 453.518, 40.9702, 0.5258", "373.181, 454.607, 40.9923, 0.658", "372.951, 455.707, 40.8828, 0.6988", "373.065, 456.805, 40.6672, 0.623", "373.079, 457.941, 40.504, 0.5296", "372.786, 459.039, 40.3662, 0.5868", "372.655, 460.164, 40.318, 0.7184", "372.913, 461.22, 40.1828, 0.838", "373.106, 462.345, 40.1094, 0.7472", "372.794, 463.397, 40.1842, 0.7258", "372.541, 464.508, 40.2786, 0.6594", "372.31, 465.608, 40.3371, 0.6632", "371.849, 466.565, 40.2626, 0.7408", "371.536, 467.663, 40.2511, 0.7734", "371.311, 468.779, 40.2534, 0.9164", "371.279, 469.907, 40.3337, 1.0068", "371.387, 471.017, 40.5297, 0.8802", "371.27, 472.131, 40.7999, 0.6998", "371.079, 473.22, 41.1012, 0.5604", "370.98, 474.277, 41.4658, 0.7274", "370.99, 475.402, 41.722, 0.5734", "370.968, 476.505, 41.8463, 0.4796", "370.648, 477.59, 41.9269, 0.518", "370.511, 478.6, 41.8233, 0.4734", "370.923, 479.525, 41.6052, 0.4956", "371.095, 480.577, 41.4274, 0.4864", "371.091, 481.712, 41.2488, 0.4844", "371.244, 482.829, 41.0326, 0.4084", "371.47, 483.942, 40.8316, 0.3878", "371.615, 485.061, 40.6305, 0.4526", "371.99, 486.112, 40.4393, 0.5318", "372.279, 487.187, 40.3273, 0.4188", "371.947, 488.229, 40.2665, 0.3256", "371.311, 489.115, 40.0904, 0.2748", "370.603, 489.978, 39.8182, 0.2752", "370.046, 490.887, 39.4142, 0.2758", "369.3, 491.716, 39.1101, 0.2766", "369.431, 492.812, 38.8713, 0.2784", "369.791, 493.841, 38.5386, 0.2818", "369.615, 494.928, 38.1256, 0.288", "369.462, 495.937, 37.5897, 0.3006", "369.888, 496.895, 36.9922, 0.3176", "370.484, 497.854, 36.4792, 0.3796", "370.793, 498.924, 36.0458, 0.3454", "370.461, 499.802, 35.5006, 0.3216", "369.796, 500.657, 34.9994, 0.3142", "369.273, 501.625, 34.5061, 0.3502", "369.198, 502.722, 34.013, 0.4038", "369.391, 503.816, 33.5054, 0.5672", "369.491, 504.946, 33.112, 0.5606", "368.965, 505.929, 32.7617, 0.6772", "368.069, 506.584, 32.3753, 0.7264", "367.663, 507.58, 31.9514, 0.712", "368.384, 508.451, 31.5479, 0.7408", "368.884, 509.475, 31.2082, 0.7538", "369.195, 510.548, 30.8431, 0.7452", "369.284, 511.686, 30.539, 0.6594", "369.212, 512.82, 30.263, 0.6104", "369.21, 513.929, 29.9536, 0.671", "369.198, 515.061, 29.6968, 0.507", "369.001, 516.133, 29.4426, 0.3994", "369.618, 517.027, 29.2023, 0.3904", "370.31, 517.853, 29.0231, 0.3654", "370.718, 518.861, 28.8022, 0.3578", "371.093, 519.818, 28.4402, 0.3842", "371.328, 520.867, 28.0199, 0.466", "371.615, 521.804, 27.9012, 0.6864", "371.779, 522.859, 27.6917, 0.7626", "372.372, 523.838, 27.44, 0.4576" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "381.047, 432.971, 40.8422, 0.5726", "380.49, 433.279, 40.5062, 0.2288", "379.467, 433.74, 40.3399, 0.2814", "378.402, 434.103, 40.2069, 0.2872", "377.521, 434.802, 40.0943, 0.2978", "376.85, 435.71, 39.9148, 0.3174", "376.248, 436.621, 39.6021, 0.3558", "375.592, 437.494, 39.1983, 0.4156", "375.065, 438.469, 38.7674, 0.582", "374.666, 439.511, 38.3376, 0.6202", "374.069, 440.472, 37.9882, 0.6322", "373.292, 441.312, 37.7462, 0.712", "372.597, 442.205, 37.616, 0.5786", "372.059, 443.203, 37.5724, 0.5536", "371.481, 444.182, 37.5068, 0.5724", "370.835, 445.113, 37.3862, 0.52", "370.276, 446.096, 37.217, 0.3896", "369.849, 447.132, 36.9877, 0.3088", "369.427, 448.187, 36.7724, 0.291", "368.926, 449.213, 36.6103, 0.3062", "368.471, 450.258, 36.493, 0.3276", "367.904, 451.241, 36.4123, 0.3998", "367.182, 452.117, 36.421, 0.3776", "366.336, 452.875, 36.5084, 0.4064", "365.516, 453.645, 36.6472, 0.3478", "364.867, 454.558, 36.8346, 0.3268", "364.305, 455.548, 36.9779, 0.319", "363.841, 456.591, 37.0373, 0.3826", "363.388, 457.639, 37.0468, 0.3502", "362.974, 458.695, 37.0199, 0.3318", "362.431, 459.613, 36.8945, 0.328", "361.47, 460.208, 36.6954, 0.399", "360.514, 460.826, 36.496, 0.3834", "359.686, 461.58, 36.2866, 0.3814", "359.416, 462.551, 36.0192, 0.4766", "359.409, 463.655, 35.831, 0.4014", "358.906, 464.605, 35.7949, 0.3404", "357.995, 465.266, 35.8145, 0.3034", "357.116, 465.98, 35.819, 0.3228", "356.436, 466.884, 35.8554, 0.3892", "355.706, 467.744, 35.94, 0.3642", "354.861, 468.493, 35.9503, 0.351", "353.82, 468.916, 35.905, 0.3944", "352.88, 469.523, 35.8873, 0.374", "351.918, 470.082, 35.7652, 0.3686", "351.054, 470.812, 35.5813, 0.4294", "350.193, 471.511, 35.3027, 0.4274", "349.391, 472.319, 35.0641, 0.5242", "348.826, 473.309, 34.8634, 0.4446", "347.905, 473.952, 34.657, 0.41", "347.174, 474.726, 34.3801, 0.4826", "346.465, 475.607, 34.2429, 0.4118", "345.496, 476.187, 34.2331, 0.361", "344.561, 476.834, 34.2661, 0.335", "343.501, 477.245, 34.3188, 0.4132", "342.475, 477.662, 34.4086, 0.402", "341.609, 478.31, 34.391, 0.4542", "340.893, 479.196, 34.3462, 0.4258", "340.158, 480.06, 34.2642, 0.5226", "339.273, 480.751, 34.158, 0.434", "338.316, 481.336, 34.006, 0.427", "337.297, 481.796, 33.8338, 0.3386", "336.21, 481.984, 33.7879, 0.3088", "335.188, 482.411, 33.7901, 0.2908", "334.224, 483.022, 33.8268, 0.306", "333.201, 483.448, 33.789, 0.3272", "332.139, 483.833, 33.6862, 0.3988", "331.091, 484.207, 33.6591, 0.3756", "329.99, 484.37, 33.6851, 0.4038", "328.867, 484.565, 33.6725, 0.3388", "327.914, 485.133, 33.5418, 0.3304", "327.527, 486.086, 32.76, 0.2288" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "379.236, 398.287, 46.4797, 0.3666", "378.383, 397.599, 46.335, 0.9152", "377.498, 396.874, 46.2773, 0.9152", "376.678, 396.077, 46.1992, 0.9152", "375.932, 395.21, 46.0928, 0.9152", "375.111, 394.425, 45.9234, 0.9152", "374.095, 393.944, 45.684, 0.9152", "373.035, 393.535, 45.4222, 0.9152", "372.03, 393.021, 45.136, 0.9152", "371.079, 392.399, 44.8594, 0.9152", "370.059, 391.891, 44.6818, 0.9152", "368.938, 391.679, 44.5315, 0.9152", "367.826, 391.441, 44.3822, 0.9152", "366.833, 390.872, 44.2599, 0.9152", "365.892, 390.22, 44.1608, 0.9152", "364.939, 389.588, 44.0698, 0.9152", "363.987, 388.958, 43.965, 0.9152", "362.983, 388.454, 43.7996, 0.9152", "361.99, 387.902, 43.6268, 0.9152", "360.994, 387.342, 43.5207, 0.9152", "359.987, 386.839, 43.505, 0.9152", "358.949, 386.36, 43.491, 0.9152", "357.934, 385.901, 43.3684, 0.9152", "356.804, 385.75, 43.213, 0.9152", "355.662, 385.697, 43.0584, 0.9152", "354.559, 385.395, 42.8938, 0.9152", "353.488, 384.998, 42.7042, 0.9152", "352.552, 384.408, 42.4326, 0.9152", "351.854, 383.505, 42.1798, 0.9152", "351.036, 382.705, 41.9636, 0.9152", "350.051, 382.124, 41.7757, 0.9152", "348.938, 381.873, 41.5962, 0.9152", "347.892, 381.515, 41.3526, 0.9152", "346.861, 381.026, 40.8797, 0.9152" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "379.236, 398.287, 46.4797, 0.3666", "379.25, 398.891, 48.603, 0.6864", "378.51, 398.463, 49.5407, 0.4602", "377.787, 397.885, 50.5971, 0.3548", "376.806, 397.47, 51.6113, 0.3316", "375.71, 397.213, 52.4787, 0.3698", "374.615, 396.898, 53.1555, 0.5018", "373.599, 396.387, 53.6816, 0.45", "372.573, 395.902, 54.1044, 0.42", "371.482, 395.6, 54.4925, 0.5014", "370.44, 395.228, 54.941, 0.4462", "369.383, 394.868, 55.433, 0.4278", "368.275, 394.729, 55.9521, 0.4436", "367.19, 394.955, 56.4911, 0.6902", "366.165, 395.424, 57.0329, 0.5492", "365.11, 395.774, 57.5968, 0.446", "364.044, 396.044, 58.1893, 0.4018", "363.012, 396.484, 58.7689, 0.5212", "362.047, 397.083, 59.3211, 0.679", "361.111, 397.689, 59.8923, 0.5938", "360.132, 397.939, 60.5231, 0.4418", "359.276, 397.363, 61.1828, 0.358", "358.724, 396.404, 61.8419, 0.385", "358.185, 395.428, 62.4792, 0.4644", "357.395, 394.675, 63.093, 0.7002", "356.434, 394.159, 63.7283, 0.7082", "355.667, 393.414, 64.3294, 0.7436", "355.168, 392.395, 64.8192, 0.7112", "354.813, 391.38, 65.3377, 0.6704", "354.319, 390.463, 65.9683, 0.4992", "353.586, 390.058, 66.7548, 0.4168", "352.746, 390.462, 67.5746, 0.4964", "351.84, 391.103, 68.3222, 0.4326", "350.984, 391.826, 68.9682, 0.4242", "350.147, 392.595, 69.4182, 0.3338", "349.835, 393.655, 69.7376, 0.2998", "348.883, 394.178, 69.9286, 0.2742", "347.874, 394.706, 70.0403, 0.2736", "346.885, 395.281, 70.1711, 0.2728", "345.772, 395.376, 70.4262, 0.2712", "344.66, 395.584, 70.7588, 0.2684", "343.535, 395.501, 71.1463, 0.2626", "342.436, 395.348, 71.5926, 0.2542", "341.347, 395.03, 72.0168, 0.2288", "340.34, 394.68, 73.08, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "346.861, 381.026, 40.8797, 0.9152", "345.964, 380.324, 40.7355, 0.9152", "345.022, 379.676, 40.6801, 0.9152", "344.012, 379.14, 40.6034, 0.9152", "343.059, 378.531, 40.4858, 0.9152", "342.27, 377.721, 40.3136, 0.9152", "341.428, 376.967, 40.1248, 0.9152", "340.421, 376.429, 39.9725, 0.9152", "339.356, 376.011, 39.8622, 0.9152", "338.285, 375.611, 39.7888, 0.9152", "337.249, 375.137, 39.7466, 0.9152", "336.359, 374.429, 39.725, 0.9152", "335.637, 373.541, 39.7096, 0.9152", "334.949, 372.628, 39.6894, 0.9152", "334.184, 371.781, 39.6606, 0.9152", "333.316, 371.038, 39.6208, 0.9152", "332.355, 370.419, 39.5682, 0.9152", "331.331, 369.911, 39.4948, 0.9152", "330.305, 369.424, 39.3781, 0.9152", "329.329, 368.855, 39.2095, 0.9152", "328.388, 368.218, 39.0382, 0.9152", "327.477, 367.528, 38.9119, 0.9152", "326.615, 366.776, 38.8354, 0.9152", "325.712, 366.08, 38.8072, 0.9152", "324.692, 365.566, 38.8234, 0.9152", "323.622, 365.168, 38.8822, 0.9152", "322.556, 364.771, 38.9897, 0.9152", "321.501, 364.366, 39.1362, 0.9152", "320.456, 363.918, 39.2683, 0.9152", "319.51, 363.288, 39.3414, 0.9152", "318.732, 362.461, 39.3352, 0.9152", "318.057, 361.55, 39.2571, 0.9152", "317.388, 360.627, 39.163, 0.9152", "316.695, 359.717, 39.0972, 0.8466", "315.977, 358.831, 39.0754, 0.8466", "315.212, 357.992, 39.1154, 0.8466", "314.417, 357.178, 39.1793, 0.8466", "313.642, 356.34, 39.1916, 0.8466", "312.905, 355.479, 39.1199, 0.8466", "312.138, 354.647, 38.9771, 0.8466", "311.254, 353.931, 38.8144, 0.8466", "310.253, 353.392, 38.6632, 0.8466", "309.154, 353.09, 38.5305, 0.8466", "308.02, 352.949, 38.4121, 0.8466", "306.91, 352.719, 38.2822, 0.8466", "305.878, 352.266, 38.1189, 0.8466", "304.942, 351.627, 37.9501, 0.8466", "304.125, 350.833, 37.8196, 0.8466", "303.418, 349.934, 37.7401, 0.8466", "302.772, 348.991, 37.7101, 0.8466", "302.203, 348.0, 37.7269, 0.8466", "301.684, 346.982, 37.7913, 0.8466", "301.102, 346.009, 37.9089, 0.8466", "300.445, 345.088, 38.0629, 0.8466", "299.76, 344.176, 38.2018, 0.8466", "299.07, 343.264, 38.288, 0.8466", "298.365, 342.364, 38.316, 0.8466", "297.6, 341.518, 38.2782, 0.8466", "296.712, 340.823, 38.1609, 0.8466", "295.717, 340.285, 37.9831, 0.8466", "294.693, 339.784, 37.8073, 0.8466", "293.669, 339.274, 37.6698, 0.8466", "292.681, 338.701, 37.5707, 0.8008", "291.753, 338.035, 37.5043, 0.8008", "290.883, 337.292, 37.462, 0.8008", "290.06, 336.497, 37.4301, 0.8008", "289.266, 335.675, 37.3937, 0.8008", "288.513, 334.813, 37.343, 0.8008", "287.85, 333.883, 37.2722, 0.8008", "287.221, 332.929, 37.1748, 0.8008", "286.508, 332.037, 37.0398, 0.8008", "285.731, 331.204, 36.8446, 0.8008", "284.921, 330.42, 36.5658, 0.8008", "284.046, 329.726, 36.2082, 0.8008", "283.103, 329.137, 35.7949, 0.8008", "282.116, 328.63, 35.3531, 0.8008", "281.128, 328.098, 34.9378, 0.8008", "280.169, 327.48, 34.6102, 0.8008", "279.237, 326.819, 34.3865, 0.8008", "278.323, 326.13, 34.2502, 0.8008", "277.418, 325.43, 34.1771, 0.8008", "276.481, 324.776, 34.144, 0.8008", "275.507, 324.175, 34.1284, 0.8008", "274.574, 323.522, 34.1149, 0.8008", "273.779, 322.707, 34.097, 0.8008", "273.1, 321.785, 34.0718, 0.8008", "272.453, 320.843, 34.036, 0.8008", "271.788, 319.913, 33.9867, 0.8008", "271.046, 319.046, 33.9203, 0.8008", "270.182, 318.302, 33.8262, 0.8008", "269.224, 317.691, 33.6826, 0.8008", "268.186, 317.269, 33.4841, 0.8008", "267.065, 317.132, 33.2688, 0.8008", "265.934, 317.037, 33.0747, 0.8008", "264.919, 316.574, 32.9064, 0.8008", "264.047, 315.841, 32.7404, 0.8008", "263.112, 315.222, 32.5522, 0.8008", "262.062, 314.799, 32.3596, 0.8008", "261.021, 314.341, 32.1983, 0.8008", "260.12, 313.656, 32.0804, 0.8008", "259.428, 312.755, 32.004, 0.8008", "258.925, 311.732, 31.9648, 0.8008", "258.576, 310.644, 31.9553, 0.8008", "258.24, 309.553, 31.9631, 0.8008", "257.719, 308.544, 31.9796, 0.8008", "256.981, 307.678, 32.0034, 0.8008", "256.09, 306.968, 32.0373, 0.8008", "255.099, 306.4, 32.0838, 0.8008", "254.07, 305.902, 32.1457, 0.8008", "253.062, 305.367, 32.2344, 0.8008", "252.132, 304.722, 32.3747, 0.8008", "251.25, 304.013, 32.5643, 0.8008", "250.352, 303.314, 32.7527, 0.8008", "249.432, 302.635, 32.9064, 0.8008", "248.492, 301.984, 33.0252, 0.8008", "247.595, 301.279, 33.1136, 0.8008", "246.913, 300.381, 33.1789, 0.8008", "246.541, 299.316, 33.2497, 0.8008", "246.396, 298.196, 33.3564, 0.8008", "246.228, 297.078, 33.4718, 0.8008", "245.83, 296.018, 33.5367, 0.8008", "245.244, 295.047, 33.5042, 0.8008", "244.572, 294.138, 33.3673, 0.8008", "243.812, 293.296, 33.1741, 0.8008", "242.951, 292.547, 32.9678, 0.8008", "242.019, 291.9, 32.7435, 0.8008", "241.093, 291.253, 32.4993, 0.8008", "240.259, 290.487, 32.279, 0.8008", "239.523, 289.614, 32.1138, 0.8008", "238.825, 288.708, 31.9967, 0.8008", "238.09, 287.832, 31.9158, 0.8008", "237.281, 287.026, 31.8623, 0.8008", "236.43, 286.261, 31.8231, 0.8008", "235.599, 285.475, 31.7817, 0.8008", "234.785, 284.671, 31.7276, 0.8008", "233.966, 283.872, 31.656, 0.8008", "233.114, 283.117, 31.5454, 0.8008", "232.209, 282.44, 31.3779, 0.8008", "231.23, 281.875, 31.1861, 0.8008", "230.18, 281.427, 31.0181, 0.8008", "229.134, 280.967, 30.889, 0.8008", "228.15, 280.389, 30.7936, 0.8008", "227.28, 279.654, 30.7255, 0.8008", "226.573, 278.763, 30.676, 0.8008", "225.9, 277.839, 30.6278, 0.8008", "225.065, 277.089, 30.5432, 0.8008", "224.038, 276.655, 30.4175, 0.8008", "222.946, 276.34, 30.3248, 0.8008", "221.903, 275.909, 30.312, 0.8008", "220.908, 275.362, 30.3363, 0.8008", "219.993, 274.684, 30.3464, 0.8008", "219.317, 273.791, 30.3033, 0.8008", "218.964, 272.732, 30.1843, 0.8008", "218.676, 271.636, 30.0219, 0.8008", "218.16, 270.629, 29.8665, 0.8008", "217.369, 269.82, 29.7394, 0.6864", "216.375, 269.278, 29.6419, 0.6864", "215.358, 268.762, 29.5686, 0.6864", "214.464, 268.059, 29.5064, 0.6864", "213.763, 267.165, 29.4384, 0.6864", "213.102, 266.236, 29.3409, 0.6864", "212.363, 265.385, 29.1847, 0.6864", "211.557, 264.591, 28.9985, 0.6864", "210.732, 263.801, 28.8341, 0.6864", "209.925, 262.991, 28.7123, 0.6864", "209.119, 262.188, 28.6502, 0.6864", "208.208, 261.518, 28.6261, 0.6864", "207.226, 260.962, 28.544, 0.6864", "206.268, 260.394, 28.355, 0.6864", "205.316, 259.803, 28.0899, 0.6864", "204.387, 259.151, 27.8144, 0.6864", "203.539, 258.387, 27.5724, 0.6864", "202.775, 257.537, 27.3753, 0.6864", "202.057, 256.648, 27.2146, 0.6864", "201.303, 255.801, 27.0494, 0.6864", "200.467, 255.034, 26.8654, 0.6864", "199.539, 254.386, 26.7215, 0.6864", "198.602, 253.738, 26.6207, 0.6864", "197.743, 253.007, 26.4734, 0.6864", "196.89, 252.269, 26.2615, 0.6864", "195.932, 251.683, 26.01, 0.6864", "194.939, 251.148, 25.7278, 0.6864", "194.099, 250.399, 25.4624, 0.6454", "193.418, 249.482, 25.2434, 0.9342", "192.795, 248.524, 25.072, 0.9482", "192.158, 247.574, 24.9284, 0.9866", "191.413, 246.715, 24.7772, 0.7696", "190.568, 245.963, 24.5876, 0.6212", "189.727, 245.202, 24.3684, 0.7166", "189.003, 244.324, 24.1587, 0.6958", "188.419, 243.342, 23.9702, 0.7022", "187.833, 242.361, 23.7958, 0.7226", "187.06, 241.53, 23.6169, 0.95", "186.137, 240.878, 23.3979, 0.9068", "185.191, 240.282, 23.1095, 1.0244", "184.269, 239.658, 22.7688, 0.968", "183.345, 239.018, 22.4216, 0.8246", "182.398, 238.402, 22.1094, 0.7468", "181.459, 237.762, 21.8672, 0.8342", "180.625, 236.992, 21.7638, 1.0144", "179.818, 236.197, 21.8145, 1.0324", "178.941, 235.474, 21.9638, 0.7712", "177.971, 234.887, 22.1799, 0.5702", "176.882, 234.649, 22.4524, 0.4118", "175.746, 234.614, 22.7296, 0.4118", "174.641, 234.359, 22.9656, 0.4118", "173.665, 233.779, 23.1652, 0.4118", "172.786, 233.052, 23.3626, 0.4118", "171.909, 232.337, 23.5894, 0.4118", "171.038, 231.61, 23.8353, 0.4118", "170.206, 230.831, 24.0716, 0.4118", "169.397, 230.03, 24.3068, 0.4118", "168.595, 229.234, 24.5538, 0.4118", "167.778, 228.441, 24.7752, 0.4118", "166.912, 227.696, 24.9337, 0.4118", "165.949, 227.083, 25.0323, 0.4118", "164.918, 226.589, 25.0824, 0.4118", "163.939, 226.001, 25.0902, 0.4118", "163.17, 225.164, 25.0642, 0.4118", "162.508, 224.233, 25.0144, 0.4118", "161.766, 223.364, 24.9458, 0.4118", "160.955, 222.563, 24.8368, 0.4118", "160.147, 221.772, 24.6728, 0.4118", "159.323, 220.99, 24.4905, 0.4118", "158.4, 220.318, 24.3359, 0.4118", "157.405, 219.754, 24.2236, 0.4118", "156.476, 219.09, 24.152, 0.4118", "155.631, 218.321, 24.1161, 0.4118", "154.74, 217.605, 24.108, 0.4118", "153.775, 216.99, 24.1144, 0.4118", "152.769, 216.448, 24.1279, 0.4118", "151.82, 215.811, 24.1475, 0.4118", "151.019, 214.998, 24.1746, 0.4118", "150.259, 214.143, 24.2102, 0.4118", "149.454, 213.331, 24.2575, 0.4118", "148.596, 212.584, 24.3396, 0.4118", "147.727, 211.862, 24.4549, 0.4118", "146.936, 211.043, 24.5568, 0.4118", "146.231, 210.145, 24.5918, 0.4118", "145.467, 209.315, 24.5106, 0.4118", "144.525, 208.731, 24.311, 0.4118", "143.478, 208.281, 24.0954, 0.4118", "142.495, 207.7, 23.9243, 0.4118", "141.678, 206.912, 23.7572, 0.4118", "140.975, 206.026, 23.583, 0.4118", "140.308, 205.102, 23.4455, 0.4118", "139.69, 204.14, 23.3738, 0.4118", "139.028, 203.224, 23.3932, 0.4118", "138.226, 202.428, 23.4749, 0.4118", "137.269, 201.809, 23.5519, 0.4118", "136.279, 201.236, 23.5796, 0.4118", "135.364, 200.573, 23.504, 0.4118", "134.54, 199.786, 23.3744, 0.4118", "133.819, 198.898, 23.2352, 0.4118", "133.147, 197.99, 23.0493, 0.4118", "132.574, 197.035, 22.8242, 0.4118", "131.885, 196.131, 22.638, 0.4118", "130.932, 195.505, 22.5498, 0.4118", "130.002, 194.875, 22.6254, 0.4118", "129.305, 193.984, 22.8035, 0.4118", "128.637, 193.055, 23.0059, 0.4118", "128.209, 192.002, 23.1641, 0.4118", "127.943, 190.969, 23.457, 0.4118", "127.049, 190.309, 24.2091, 0.366" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "346.861, 381.026, 40.8797, 0.9152", "346.477, 380.387, 43.1704, 0.2288", "346.141, 379.543, 44.1714, 0.2928", "345.556, 378.561, 45.0582, 0.308", "344.699, 377.821, 45.8696, 0.3384", "343.628, 377.607, 46.6712, 0.3834", "342.564, 377.355, 47.4421, 0.5224", "341.757, 376.663, 48.1964, 0.5114", "340.893, 375.94, 48.8956, 0.4214", "339.886, 375.454, 49.5858, 0.3628", "338.845, 375.255, 50.3182, 0.416", "337.781, 375.245, 51.0569, 0.416", "336.707, 375.302, 51.7723, 0.436", "335.616, 375.505, 52.4112, 0.6048", "334.518, 375.82, 52.9038, 0.5094", "333.388, 375.971, 53.27, 0.4828", "332.254, 375.884, 53.5478, 0.3896", "331.145, 376.159, 53.758, 0.43", "330.049, 376.465, 53.9286, 0.386", "328.94, 376.511, 54.1528, 0.4232", "327.842, 376.32, 54.4132, 0.374", "326.718, 376.227, 54.6538, 0.4", "325.585, 376.208, 54.7767, 0.3362", "324.485, 376.369, 54.7425, 0.3038", "323.392, 376.615, 54.6224, 0.2818", "322.343, 377.059, 54.5059, 0.2882", "321.332, 377.57, 54.4236, 0.2992", "320.383, 378.017, 54.4418, 0.3228", "319.684, 378.752, 54.5754, 0.3532", "318.595, 379.07, 54.6697, 0.4718", "317.576, 379.565, 54.7254, 0.3922", "316.701, 380.068, 54.5642, 0.3236", "315.846, 380.727, 54.4891, 0.2712", "315.123, 381.599, 54.4527, 0.2684", "314.225, 382.166, 54.2965, 0.2626", "313.438, 382.948, 54.1248, 0.2542", "312.481, 383.569, 54.0439, 0.2288", "311.854, 384.041, 54.88, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "127.049, 190.309, 24.2091, 0.366", "127.388, 189.712, 22.7324, 0.2288", "127.779, 188.991, 22.0937, 0.2766", "127.977, 187.913, 21.7003, 0.2782", "128.105, 186.808, 21.4858, 0.2814", "128.679, 185.914, 21.3584, 0.287", "129.639, 185.879, 21.1803, 0.2986", "130.531, 186.478, 20.9798, 0.314", "131.474, 187.094, 20.8001, 0.3732", "132.495, 187.131, 20.767, 0.3336", "133.295, 186.512, 20.9166, 0.2994", "133.982, 185.635, 21.0386, 0.2736", "134.851, 185.028, 21.002, 0.2728", "135.913, 184.647, 20.928, 0.2712", "136.686, 183.832, 20.8648, 0.2684", "137.145, 182.788, 20.7928, 0.2626", "137.218, 181.652, 20.7211, 0.2542", "136.339, 180.991, 20.6497, 0.2288", "135.45, 181.667, 20.72, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "127.049, 190.309, 24.2091, 0.366", "126.356, 189.886, 23.3332, 0.366", "125.519, 189.112, 22.9975, 0.366", "124.721, 188.293, 22.6758, 0.366", "123.994, 187.432, 22.3188, 0.366", "123.257, 186.657, 21.8778, 0.366", "122.379, 185.961, 21.4592, 0.366", "121.56, 185.163, 21.1557, 0.366", "120.756, 184.35, 20.9432, 0.366", "119.968, 183.519, 20.8088, 0.366", "119.283, 182.604, 20.7413, 0.366", "118.548, 181.727, 20.722, 0.366", "117.707, 180.951, 20.72, 0.366", "116.771, 180.293, 20.72, 0.366", "115.956, 179.491, 20.7203, 0.366", "115.303, 178.552, 20.7203, 0.366", "114.772, 177.538, 20.7203, 0.366", "113.943, 176.75, 20.7206, 0.366" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "113.943, 176.75, 20.7206, 0.366", "113.17, 176.206, 20.7897, 0.2974", "112.247, 175.531, 20.8155, 0.2974", "111.342, 174.832, 20.8536, 0.2974", "110.458, 174.112, 20.9174, 0.2974", "109.566, 173.401, 20.9894, 0.2974", "108.676, 172.686, 21.0543, 0.2974", "107.82, 171.928, 21.0806, 0.2974", "106.9, 171.321, 20.9832, 0.2974", "105.842, 170.923, 20.8527, 0.3022", "104.763, 170.546, 20.75, 0.3264", "103.641, 170.331, 20.6847, 0.3668", "102.516, 170.194, 20.7063, 0.4662", "101.451, 169.826, 20.8065, 0.5286", "100.45, 169.275, 20.8986, 0.552", "99.4656, 168.707, 20.9244, 0.5842", "98.416, 168.26, 20.9132, 0.4708", "97.2895, 168.075, 20.8944, 0.4116", "96.1944, 167.748, 20.8838, 0.4856", "95.1679, 167.258, 20.9163, 0.4178", "94.0567, 166.999, 20.9364, 0.2974", "92.9718, 166.646, 20.9342, 0.2974", "92.0821, 165.933, 20.9392, 0.2974", "91.1477, 165.286, 20.9877, 0.2974", "90.2019, 164.643, 21.0283, 0.2974", "89.3959, 163.846, 21.0941, 0.2974", "88.3429, 163.41, 21.1484, 0.2974", "87.2275, 163.237, 21.0927, 0.2974", "86.1873, 162.798, 20.9334, 0.2974", "85.2761, 162.108, 20.7502, 0.2974", "84.4587, 161.309, 20.5738, 0.2974", "83.6965, 160.455, 20.4092, 0.2974", "83.4222, 159.346, 20.2558, 0.2974", "83.7413, 158.33, 19.6, 0.2974" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "113.943, 176.75, 20.7206, 0.366", "112.972, 175.999, 21.327, 0.5034", "112.325, 175.076, 21.5564, 0.5034", "112.035, 173.982, 21.751, 0.5034", "111.751, 172.874, 21.9159, 0.5034", "111.093, 171.958, 22.0581, 0.5034", "110.397, 171.053, 22.1984, 0.5034", "109.939, 170.022, 22.3675, 0.5034", "109.491, 168.984, 22.5786, 0.5034", "108.749, 168.127, 22.7844, 0.5034", "107.777, 167.534, 22.9617, 0.5034", "106.707, 167.136, 23.1129, 0.5034", "105.613, 166.805, 23.2576, 0.5034", "104.567, 166.373, 23.431, 0.5034", "103.613, 165.764, 23.627, 0.5034", "102.724, 165.047, 23.7994, 0.5034", "101.77, 164.418, 23.9322, 0.5034", "100.76, 163.883, 24.0484, 0.5034", "99.8295, 163.221, 24.1595, 0.5034", "98.9536, 162.486, 24.2614, 0.5034", "97.9647, 161.916, 24.3701, 0.5034", "96.8828, 161.597, 24.5375, 0.5034", "95.7956, 161.286, 24.7464, 0.5034", "94.918, 160.568, 24.9368, 0.5034", "94.1184, 159.75, 25.0863, 0.5034", "93.2911, 158.96, 25.1994, 0.5034", "92.5877, 158.059, 25.2837, 0.5034", "92.0298, 157.061, 25.3568, 0.5034", "91.4194, 156.093, 25.4282, 0.5034", "90.6525, 155.245, 25.508, 0.5034", "89.772, 154.517, 25.6015, 0.5034", "88.9664, 153.733, 25.7706, 0.5034", "87.8597, 153.754, 26.32, 0.5034" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_450",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_451",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_26", "dend_9", "dend_0", "apic_20", "apic_1", "dend_34", "dend_27", "dend_21", "dend_10", "dend_6", "dend_1", "apic_22", "apic_21", "apic_19", "apic_2", "dend_36", "dend_35", "dend_31", "dend_28", "dend_25", "dend_22", "dend_18", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "apic_14", "apic_3", "dend_33", "dend_32", "dend_30", "dend_29", "dend_24", "dend_23", "dend_20", "dend_19", "dend_15", "dend_12", "dend_4", "dend_3", "apic_16", "apic_15", "apic_13", "apic_4", "dend_17", "dend_16", "dend_14", "dend_13", "apic_18", "apic_17", "apic_6", "apic_5", "apic_8", "apic_7", "apic_12", "apic_9", "apic_11", "apic_10" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_9", "dend_0", "dend_34", "dend_27", "dend_21", "dend_10", "dend_6", "dend_1", "dend_36", "dend_35", "dend_31", "dend_28", "dend_25", "dend_22", "dend_18", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_33", "dend_32", "dend_30", "dend_29", "dend_24", "dend_23", "dend_20", "dend_19", "dend_15", "dend_12", "dend_4", "dend_3", "dend_17", "dend_16", "dend_14", "dend_13" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_20", "apic_1", "apic_22", "apic_21", "apic_19", "apic_2", "apic_14", "apic_3", "apic_16", "apic_15", "apic_13", "apic_4", "apic_18", "apic_17", "apic_6", "apic_5", "apic_8", "apic_7", "apic_12", "apic_9", "apic_11", "apic_10" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18937",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "apic_0", "dend_26", "dend_26", "dend_26", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_14", "apic_14", "apic_14", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_4", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.7631645"
  }, {
    "group" : "apic",
    "value" : "2.7631645"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "126.28062"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0034367796",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.3227608E-7",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.74287623",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "3.560997E-5",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0035947445",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.0899153E-5",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.275526E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.16354296",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.8307603E-4",
    "erev" : "-85.61257"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.2033998E-4",
    "erev" : "-85.61257"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "5.94311E-6",
    "erev" : "-85.61257"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.1969845E-4",
    "erev" : "-85.61257"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "6.8900624E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0031084483",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_473863510",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473863510

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_20, id: apic_20, parent: apic_0
create apic_20
public apic_20
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_34, id: dend_34, parent: dend_26
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_9
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_22, id: apic_22, parent: apic_20
create apic_22
public apic_22
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_19, id: apic_19, parent: apic_1
create apic_19
public apic_19
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_14, id: apic_14, parent: apic_2
create apic_14
public apic_14
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_3
create apic_13
public apic_13
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: apic_18, id: apic_18, parent: apic_16
create apic_18
public apic_18
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_8, id: apic_8, parent: apic_6
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_12, id: apic_12, parent: apic_8
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_450, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_450
// Group: {name=ModelViewParmSubset_451, groups=[], sections=[apic_0, dend_26, dend_9, dend_0, apic_20, apic_1, dend_34, dend_27, dend_21, dend_10, dend_6, dend_1, apic_22, apic_21, apic_19, apic_2, dend_36, dend_35, dend_31, dend_28, dend_25, dend_22, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, apic_14, apic_3, dend_33, dend_32, dend_30, dend_29, dend_24, dend_23, dend_20, dend_19, dend_15, dend_12, dend_4, dend_3, apic_16, apic_15, apic_13, apic_4, dend_17, dend_16, dend_14, dend_13, apic_18, apic_17, apic_6, apic_5, apic_8, apic_7, apic_12, apic_9, apic_11, apic_10]}
objref ModelViewParmSubset_451
// Group: {name=dend, groups=[], sections=[dend_26, dend_9, dend_0, dend_34, dend_27, dend_21, dend_10, dend_6, dend_1, dend_36, dend_35, dend_31, dend_28, dend_25, dend_22, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_33, dend_32, dend_30, dend_29, dend_24, dend_23, dend_20, dend_19, dend_15, dend_12, dend_4, dend_3, dend_17, dend_16, dend_14, dend_13]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_22, apic_21, apic_19, apic_2, apic_14, apic_3, apic_16, apic_15, apic_13, apic_4, apic_18, apic_17, apic_6, apic_5, apic_8, apic_7, apic_12, apic_9, apic_11, apic_10]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_18937, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_18937
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, dend_26, dend_26, dend_26, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_14, apic_14, apic_14, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_4, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_473863510
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.4999599134129707)
    connect apic_0(0), soma_0(0.4999599134129707)
    connect dend_26(0), soma_0(0.4999599134129707)
    connect dend_9(0), soma_0(0.4999599134129707)
    connect dend_0(0), soma_0(0.4999599134129707)
    connect axon_1(0), axon_0(1.0)
    connect apic_20(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_34(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_22(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_19(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_14(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect apic_18(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_8(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_12(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 409.373, 417.734, 47.8951, 12.4732 ) }
    soma_0 { pt3dadd( 415.609, 417.734, 47.8951, 12.4732 ) }
    soma_0 { pt3dadd( 421.846, 417.734, 47.8951, 12.4732 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 415.609, 417.734, 47.8951, 1.0 ) }
    axon_0 { pt3dadd( 421.451, 431.55, 47.8951, 1.0 ) }
    axon_0 { pt3dadd( 427.292, 445.366, 47.8951, 1.0 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 6/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 410.244, 415.781, 48.5492, 1.8304 ) }
    apic_0 { pt3dadd( 409.1, 415.756, 48.72, 1.8304 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 8/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 418.806, 421.545, 42.2579, 0.3396 ) }
    dend_26 { pt3dadd( 419.694, 422.214, 41.3711, 0.3856 ) }
    dend_26 { pt3dadd( 420.781, 422.528, 40.7112, 0.526 ) }
    dend_26 { pt3dadd( 421.831, 422.136, 39.8532, 0.518 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 12/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 416.617, 412.152, 48.2482, 0.9822 ) }
    dend_9 { pt3dadd( 417.526, 411.758, 48.3972, 0.9804 ) }
    dend_9 { pt3dadd( 418.254, 412.568, 48.5265, 1.323 ) }
    dend_9 { pt3dadd( 418.853, 413.539, 48.6942, 1.6506 ) }
    dend_9 { pt3dadd( 420.012, 415.507, 49.0546, 1.3114 ) }
    dend_9 { pt3dadd( 420.753, 416.201, 49.4099, 0.7752 ) }
    dend_9 { pt3dadd( 421.562, 415.663, 49.9232, 0.5556 ) }
    dend_9 { pt3dadd( 422.557, 415.099, 50.3387, 0.5042 ) }
    dend_9 { pt3dadd( 423.398, 414.324, 50.9384, 0.5122 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 411.193, 421.152, 50.225, 0.4702 ) }
    dend_0 { pt3dadd( 410.54, 422.085, 50.5758, 0.5644 ) }
    dend_0 { pt3dadd( 409.759, 422.898, 50.8628, 0.4788 ) }
    dend_0 { pt3dadd( 408.716, 423.222, 51.0656, 0.4414 ) }
    dend_0 { pt3dadd( 407.835, 423.816, 51.1176, 0.4682 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 26/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 427.292, 445.366, 47.8951, 1.0 ) }
    axon_1 { pt3dadd( 433.133, 459.182, 47.8951, 1.0 ) }
    axon_1 { pt3dadd( 438.975, 472.998, 47.8951, 1.0 ) }
    // Section: apic_20, id: apic_20, parent: apic_0 (entry count 29/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 409.1, 415.756, 48.72, 1.8304 ) }
    apic_20 { pt3dadd( 409.188, 414.729, 47.4488, 0.6864 ) }
    apic_20 { pt3dadd( 408.947, 413.737, 46.9092, 0.6864 ) }
    apic_20 { pt3dadd( 408.498, 412.764, 46.3898, 0.6864 ) }
    apic_20 { pt3dadd( 408.624, 411.738, 45.7817, 0.6864 ) }
    apic_20 { pt3dadd( 409.073, 410.909, 45.0545, 0.6864 ) }
    apic_20 { pt3dadd( 409.805, 410.107, 44.3598, 0.6864 ) }
    apic_20 { pt3dadd( 410.453, 409.28, 43.8936, 0.6864 ) }
    apic_20 { pt3dadd( 411.089, 408.408, 43.559, 0.6864 ) }
    apic_20 { pt3dadd( 411.618, 407.415, 43.2037, 0.6864 ) }
    apic_20 { pt3dadd( 412.016, 406.352, 42.8417, 0.6864 ) }
    apic_20 { pt3dadd( 412.471, 405.318, 42.4404, 0.6864 ) }
    apic_20 { pt3dadd( 413.072, 404.475, 41.8566, 0.6864 ) }
    apic_20 { pt3dadd( 413.504, 403.538, 41.1261, 0.6864 ) }
    apic_20 { pt3dadd( 413.98, 402.509, 40.497, 0.6864 ) }
    apic_20 { pt3dadd( 414.533, 401.551, 39.8717, 0.6864 ) }
    apic_20 { pt3dadd( 415.333, 400.907, 39.193, 0.6864 ) }
    apic_20 { pt3dadd( 416.339, 400.972, 37.6132, 0.6864 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 47/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 409.1, 415.756, 48.72, 1.8304 ) }
    apic_1 { pt3dadd( 408.02, 415.495, 48.8452, 1.716 ) }
    apic_1 { pt3dadd( 406.882, 415.394, 48.897, 1.716 ) }
    apic_1 { pt3dadd( 405.822, 414.961, 48.9597, 1.716 ) }
    apic_1 { pt3dadd( 404.897, 414.287, 49.0344, 1.716 ) }
    apic_1 { pt3dadd( 404.04, 413.532, 49.1336, 1.716 ) }
    // Section: dend_34, id: dend_34, parent: dend_26 (entry count 53/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 421.831, 422.136, 39.8532, 0.518 ) }
    dend_34 { pt3dadd( 422.771, 421.366, 39.0877, 0.435 ) }
    dend_34 { pt3dadd( 423.74, 420.797, 38.7901, 0.3828 ) }
    dend_34 { pt3dadd( 424.824, 420.796, 38.4426, 0.4792 ) }
    dend_34 { pt3dadd( 425.941, 420.572, 38.1713, 0.4056 ) }
    dend_34 { pt3dadd( 426.991, 420.979, 37.6132, 0.3498 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 421.831, 422.136, 39.8532, 0.518 ) }
    dend_27 { pt3dadd( 420.902, 421.654, 38.5608, 0.4576 ) }
    dend_27 { pt3dadd( 420.673, 420.806, 37.9641, 0.5904 ) }
    dend_27 { pt3dadd( 420.87, 419.726, 37.2963, 0.4828 ) }
    dend_27 { pt3dadd( 420.862, 418.622, 36.6649, 0.4334 ) }
    dend_27 { pt3dadd( 420.406, 418.003, 35.908, 0.5278 ) }
    dend_27 { pt3dadd( 419.342, 417.821, 35.2402, 0.4858 ) }
    dend_27 { pt3dadd( 418.257, 417.478, 34.7253, 0.5482 ) }
    dend_27 { pt3dadd( 417.293, 416.899, 33.8489, 0.4396 ) }
    // Section: dend_21, id: dend_21, parent: dend_9 (entry count 68/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 423.398, 414.324, 50.9384, 0.5122 ) }
    dend_21 { pt3dadd( 424.53, 414.518, 49.7092, 0.2288 ) }
    dend_21 { pt3dadd( 425.615, 414.349, 49.2831, 0.6108 ) }
    dend_21 { pt3dadd( 426.733, 414.351, 48.8818, 0.7028 ) }
    dend_21 { pt3dadd( 427.863, 414.452, 48.6346, 0.645 ) }
    dend_21 { pt3dadd( 428.922, 414.42, 48.6357, 0.7302 ) }
    dend_21 { pt3dadd( 430.063, 414.361, 48.6674, 0.8686 ) }
    dend_21 { pt3dadd( 431.161, 414.166, 48.5643, 0.762 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 76/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 423.398, 414.324, 50.9384, 0.5122 ) }
    dend_10 { pt3dadd( 423.751, 412.804, 50.5582, 0.485 ) }
    dend_10 { pt3dadd( 423.994, 411.713, 50.3698, 0.4096 ) }
    dend_10 { pt3dadd( 424.208, 410.599, 50.1934, 0.3902 ) }
    dend_10 { pt3dadd( 424.503, 409.495, 50.064, 0.4566 ) }
    dend_10 { pt3dadd( 424.74, 408.376, 49.978, 0.5396 ) }
    dend_10 { pt3dadd( 424.88, 407.247, 49.9316, 0.4334 ) }
    dend_10 { pt3dadd( 424.875, 406.103, 49.9195, 0.3524 ) }
    dend_10 { pt3dadd( 425.273, 405.197, 50.0189, 0.3256 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 407.835, 423.816, 51.1176, 0.4682 ) }
    dend_6 { pt3dadd( 407.819, 424.019, 52.064, 0.2288 ) }
    dend_6 { pt3dadd( 407.81, 425.098, 52.4961, 0.3142 ) }
    dend_6 { pt3dadd( 408.057, 426.184, 52.9939, 0.3734 ) }
    dend_6 { pt3dadd( 408.49, 427.08, 53.6729, 0.3338 ) }
    dend_6 { pt3dadd( 409.352, 427.647, 54.4718, 0.3 ) }
    dend_6 { pt3dadd( 410.421, 427.874, 55.2866, 0.2746 ) }
    dend_6 { pt3dadd( 411.562, 427.853, 56.0157, 0.2746 ) }
    dend_6 { pt3dadd( 412.66, 427.805, 56.7302, 0.2746 ) }
    dend_6 { pt3dadd( 413.609, 427.758, 57.6265, 0.2746 ) }
    dend_6 { pt3dadd( 414.464, 427.43, 58.6676, 0.2746 ) }
    dend_6 { pt3dadd( 415.398, 427.03, 59.7596, 0.2746 ) }
    dend_6 { pt3dadd( 415.932, 426.449, 60.9224, 0.2746 ) }
    dend_6 { pt3dadd( 416.449, 425.666, 62.0959, 0.2746 ) }
    dend_6 { pt3dadd( 417.258, 425.029, 63.2192, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_6 { pt3dadd( 417.874, 424.209, 64.2435, 0.2746 ) }
    dend_6 { pt3dadd( 418.633, 423.433, 64.9698, 0.2746 ) }
    dend_6 { pt3dadd( 419.326, 422.532, 65.4842, 0.2746 ) }
    dend_6 { pt3dadd( 419.512, 421.673, 66.0976, 0.2746 ) }
    dend_6 { pt3dadd( 419.619, 420.572, 67.2932, 0.2746 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 5/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 407.835, 423.816, 51.1176, 0.4682 ) }
    dend_1 { pt3dadd( 407.448, 423.12, 51.4735, 0.7378 ) }
    dend_1 { pt3dadd( 406.332, 422.879, 51.6032, 0.6266 ) }
    dend_1 { pt3dadd( 405.191, 422.935, 51.8017, 0.6426 ) }
    dend_1 { pt3dadd( 404.086, 422.921, 52.1461, 0.5096 ) }
    dend_1 { pt3dadd( 403.091, 422.397, 52.577, 0.5944 ) }
    dend_1 { pt3dadd( 402.107, 421.987, 53.1336, 0.5146 ) }
    dend_1 { pt3dadd( 401.023, 421.867, 53.7351, 0.602 ) }
    dend_1 { pt3dadd( 399.925, 421.575, 54.2668, 0.5374 ) }
    dend_1 { pt3dadd( 399.043, 420.928, 54.7842, 0.6026 ) }
    dend_1 { pt3dadd( 397.969, 420.541, 55.5677, 0.7416 ) }
    // Section: apic_22, id: apic_22, parent: apic_20 (entry count 16/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 416.339, 400.972, 37.6132, 0.6864 ) }
    apic_22 { pt3dadd( 415.304, 399.582, 36.248, 0.6864 ) }
    apic_22 { pt3dadd( 414.616, 398.7, 35.7165, 0.6378 ) }
    apic_22 { pt3dadd( 414.107, 397.701, 35.1677, 0.5508 ) }
    apic_22 { pt3dadd( 413.611, 396.705, 34.6083, 0.6564 ) }
    apic_22 { pt3dadd( 413.192, 396.008, 33.8909, 0.6982 ) }
    apic_22 { pt3dadd( 412.958, 395.028, 33.2858, 0.8394 ) }
    apic_22 { pt3dadd( 413.145, 393.92, 32.8485, 0.7906 ) }
    apic_22 { pt3dadd( 413.636, 392.906, 32.5581, 0.8372 ) }
    apic_22 { pt3dadd( 414.413, 392.312, 32.503, 0.9426 ) }
    apic_22 { pt3dadd( 415.314, 391.83, 32.3137, 0.8178 ) }
    apic_22 { pt3dadd( 415.775, 390.995, 31.9203, 0.768 ) }
    apic_22 { pt3dadd( 415.477, 389.923, 31.4152, 0.709 ) }
    apic_22 { pt3dadd( 414.984, 388.935, 30.8129, 0.6668 ) }
    apic_22 { pt3dadd( 414.397, 388.055, 30.0849, 0.4912 ) }
    apic_22 { pt3dadd( 414.082, 387.061, 29.3247, 0.408 ) }
    apic_22 { pt3dadd( 414.405, 386.181, 28.5048, 0.4518 ) }
    apic_22 { pt3dadd( 414.445, 385.311, 27.7024, 0.4858 ) }
    apic_22 { pt3dadd( 413.78, 384.614, 26.9147, 0.5508 ) }
    apic_22 { pt3dadd( 413.682, 383.625, 26.3634, 0.8898 ) }
    apic_22 { pt3dadd( 414.331, 382.765, 26.1349, 0.6864 ) }
    apic_22 { pt3dadd( 414.357, 381.638, 26.04, 0.4576 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 38/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 416.339, 400.972, 37.6132, 0.6864 ) }
    apic_21 { pt3dadd( 416.987, 400.355, 39.0956, 0.8956 ) }
    apic_21 { pt3dadd( 417.783, 400.19, 39.7645, 0.621 ) }
    apic_21 { pt3dadd( 418.896, 400.043, 40.2928, 0.476 ) }
    apic_21 { pt3dadd( 419.901, 399.531, 40.6314, 0.4996 ) }
    apic_21 { pt3dadd( 420.719, 398.787, 40.7271, 0.7252 ) }
    apic_21 { pt3dadd( 420.672, 397.697, 40.6636, 0.9498 ) }
    apic_21 { pt3dadd( 420.676, 396.554, 40.5093, 0.9328 ) }
    apic_21 { pt3dadd( 420.479, 395.429, 40.332, 0.7152 ) }
    apic_21 { pt3dadd( 420.217, 394.332, 40.1131, 0.5296 ) }
    apic_21 { pt3dadd( 420.167, 393.232, 39.8406, 0.5002 ) }
    apic_21 { pt3dadd( 420.078, 392.111, 39.5808, 0.7496 ) }
    apic_21 { pt3dadd( 420.197, 390.985, 39.4618, 0.651 ) }
    apic_21 { pt3dadd( 420.155, 389.845, 39.4184, 0.675 ) }
    apic_21 { pt3dadd( 420.054, 388.721, 39.468, 0.6312 ) }
    apic_21 { pt3dadd( 419.855, 387.61, 39.5783, 0.52 ) }
    apic_21 { pt3dadd( 419.848, 386.472, 39.6799, 0.4604 ) }
    apic_21 { pt3dadd( 420.251, 385.414, 39.6547, 0.554 ) }
    apic_21 { pt3dadd( 420.479, 384.421, 39.3893, 0.65 ) }
    apic_21 { pt3dadd( 420.994, 383.4, 39.1345, 0.976 ) }
    apic_21 { pt3dadd( 421.408, 382.366, 38.9099, 1.0916 ) }
    apic_21 { pt3dadd( 421.868, 381.597, 38.4992, 1.1614 ) }
    apic_21 { pt3dadd( 422.611, 380.766, 38.285, 1.0786 ) }
    apic_21 { pt3dadd( 423.271, 379.856, 38.1506, 0.8098 ) }
    apic_21 { pt3dadd( 423.672, 378.808, 38.022, 0.6432 ) }
    apic_21 { pt3dadd( 424.227, 377.829, 37.9828, 0.554 ) }
    apic_21 { pt3dadd( 424.645, 376.849, 38.0033, 0.6956 ) }
    apic_21 { pt3dadd( 424.632, 375.726, 37.9249, 0.8392 ) }
    apic_21 { pt3dadd( 424.767, 374.615, 37.7544, 0.7684 ) }
    apic_21 { pt3dadd( 425.307, 373.685, 37.5298, 0.9006 ) }
    apic_21 { pt3dadd( 426.116, 372.918, 37.2775, 1.0092 ) }
    apic_21 { pt3dadd( 426.895, 372.093, 37.0493, 0.958 ) }
    apic_21 { pt3dadd( 427.617, 371.227, 36.8822, 0.718 ) }
    apic_21 { pt3dadd( 428.173, 370.25, 36.8556, 0.5196 ) }
    apic_21 { pt3dadd( 428.301, 369.2, 36.9678, 0.5564 ) }
    apic_21 { pt3dadd( 428.33, 368.087, 37.0972, 0.4912 ) }
    apic_21 { pt3dadd( 428.477, 366.997, 37.2719, 0.5588 ) }
    apic_21 { pt3dadd( 428.492, 365.94, 37.5438, 0.4582 ) }
    apic_21 { pt3dadd( 428.68, 364.979, 37.6202, 0.45 ) }
    apic_21 { pt3dadd( 428.99, 363.956, 37.6309, 0.4858 ) }
    apic_21 { pt3dadd( 429.582, 362.999, 37.5808, 0.7624 ) }
    apic_21 { pt3dadd( 430.096, 362.221, 37.249, 0.7118 ) }
    apic_21 { pt3dadd( 430.32, 361.111, 36.883, 0.607 ) }
    apic_21 { pt3dadd( 430.718, 360.04, 36.549, 0.695 ) }
    apic_21 { pt3dadd( 430.858, 358.92, 36.2706, 0.6326 ) }
    apic_21 { pt3dadd( 430.525, 357.829, 36.0489, 0.6972 ) }
    apic_21 { pt3dadd( 430.211, 356.754, 35.8204, 0.8562 ) }
    apic_21 { pt3dadd( 429.988, 355.658, 35.6616, 0.9596 ) }
    apic_21 { pt3dadd( 429.957, 354.592, 35.6493, 0.9376 ) }
    apic_21 { pt3dadd( 429.674, 353.541, 35.5975, 0.79 ) }
    apic_21 { pt3dadd( 429.899, 352.429, 35.6101, 0.5766 ) }
    apic_21 { pt3dadd( 430.154, 351.327, 35.6518, 0.5758 ) }
    apic_21 { pt3dadd( 430.384, 350.234, 35.6084, 0.4878 ) }
    apic_21 { pt3dadd( 430.608, 349.171, 35.4617, 0.5158 ) }
    apic_21 { pt3dadd( 430.583, 348.036, 35.3461, 0.5544 ) }
    apic_21 { pt3dadd( 430.455, 346.91, 35.3049, 0.4618 ) }
    apic_21 { pt3dadd( 430.143, 345.864, 35.3318, 0.401 ) }
    apic_21 { pt3dadd( 429.689, 344.883, 35.4805, 0.435 ) }
    apic_21 { pt3dadd( 429.404, 343.782, 35.6238, 0.474 ) }
    apic_21 { pt3dadd( 429.328, 342.644, 35.7356, 0.432 ) }
    apic_21 { pt3dadd( 429.266, 341.509, 35.7725, 0.4548 ) }
    apic_21 { pt3dadd( 428.954, 340.431, 35.7823, 0.4642 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_21 { pt3dadd( 428.543, 339.376, 35.777, 0.4128 ) }
    apic_21 { pt3dadd( 428.296, 338.266, 35.7087, 0.424 ) }
    apic_21 { pt3dadd( 428.253, 337.134, 35.6454, 0.3828 ) }
    apic_21 { pt3dadd( 428.194, 336.002, 35.5919, 0.3802 ) }
    apic_21 { pt3dadd( 428.047, 334.869, 35.5071, 0.4744 ) }
    apic_21 { pt3dadd( 428.117, 333.765, 35.3408, 0.397 ) }
    apic_21 { pt3dadd( 428.643, 332.817, 35.1198, 0.3324 ) }
    apic_21 { pt3dadd( 429.305, 331.896, 34.9457, 0.2872 ) }
    apic_21 { pt3dadd( 429.945, 330.951, 34.8138, 0.299 ) }
    apic_21 { pt3dadd( 430.32, 329.899, 34.6867, 0.3148 ) }
    apic_21 { pt3dadd( 430.417, 328.768, 34.5372, 0.3748 ) }
    apic_21 { pt3dadd( 430.628, 327.659, 34.3711, 0.3364 ) }
    apic_21 { pt3dadd( 430.793, 326.535, 34.2006, 0.3046 ) }
    apic_21 { pt3dadd( 430.949, 325.414, 34.0091, 0.2832 ) }
    apic_21 { pt3dadd( 431.091, 324.285, 33.8702, 0.2904 ) }
    apic_21 { pt3dadd( 431.048, 323.154, 33.8285, 0.304 ) }
    apic_21 { pt3dadd( 431.096, 322.02, 33.8134, 0.329 ) }
    apic_21 { pt3dadd( 431.358, 320.911, 33.8307, 0.3772 ) }
    apic_21 { pt3dadd( 431.895, 319.913, 33.8909, 0.456 ) }
    apic_21 { pt3dadd( 432.415, 318.921, 33.894, 0.655 ) }
    apic_21 { pt3dadd( 432.924, 317.918, 33.9486, 0.7662 ) }
    apic_21 { pt3dadd( 433.336, 316.857, 34.0463, 0.8502 ) }
    apic_21 { pt3dadd( 433.424, 315.757, 34.2353, 0.6858 ) }
    apic_21 { pt3dadd( 433.346, 314.623, 34.4036, 0.7908 ) }
    apic_21 { pt3dadd( 433.243, 313.488, 34.5094, 0.5948 ) }
    apic_21 { pt3dadd( 433.089, 312.359, 34.6265, 0.5282 ) }
    apic_21 { pt3dadd( 432.818, 311.255, 34.7516, 0.5654 ) }
    apic_21 { pt3dadd( 432.521, 310.164, 34.9006, 0.7704 ) }
    apic_21 { pt3dadd( 432.366, 309.057, 35.0874, 0.7186 ) }
    apic_21 { pt3dadd( 432.065, 308.11, 35.0512, 0.8882 ) }
    apic_21 { pt3dadd( 431.859, 307.012, 35.0818, 0.828 ) }
    apic_21 { pt3dadd( 431.65, 305.887, 35.089, 0.7052 ) }
    apic_21 { pt3dadd( 431.053, 304.913, 35.0823, 0.7598 ) }
    apic_21 { pt3dadd( 430.78, 303.809, 35.0851, 0.8642 ) }
    apic_21 { pt3dadd( 430.294, 302.788, 35.0011, 1.0424 ) }
    apic_21 { pt3dadd( 430.064, 301.683, 34.8673, 0.9904 ) }
    apic_21 { pt3dadd( 430.094, 300.551, 34.6864, 0.9188 ) }
    apic_21 { pt3dadd( 430.11, 299.417, 34.5052, 1.125 ) }
    apic_21 { pt3dadd( 430.257, 298.301, 34.4151, 1.0046 ) }
    apic_21 { pt3dadd( 430.799, 297.316, 34.337, 0.7052 ) }
    apic_21 { pt3dadd( 430.878, 296.195, 34.3258, 0.5198 ) }
    apic_21 { pt3dadd( 430.583, 295.105, 34.4308, 0.668 ) }
    apic_21 { pt3dadd( 430.323, 294.014, 34.629, 0.616 ) }
    apic_21 { pt3dadd( 430.027, 292.93, 34.8499, 0.7326 ) }
    apic_21 { pt3dadd( 429.869, 291.807, 35.019, 0.6004 ) }
    apic_21 { pt3dadd( 429.841, 290.665, 35.1666, 0.6742 ) }
    apic_21 { pt3dadd( 429.714, 289.533, 35.2674, 0.636 ) }
    apic_21 { pt3dadd( 429.513, 288.424, 35.3802, 0.7278 ) }
    apic_21 { pt3dadd( 429.309, 287.353, 35.5821, 0.566 ) }
    apic_21 { pt3dadd( 429.367, 286.333, 35.749, 0.5056 ) }
    apic_21 { pt3dadd( 429.831, 285.318, 35.7776, 0.6034 ) }
    apic_21 { pt3dadd( 430.238, 284.278, 35.8078, 0.6826 ) }
    apic_21 { pt3dadd( 430.576, 283.214, 35.8901, 0.6366 ) }
    apic_21 { pt3dadd( 430.936, 282.29, 35.8128, 0.5732 ) }
    apic_21 { pt3dadd( 431.477, 281.407, 35.632, 0.5764 ) }
    apic_21 { pt3dadd( 432.195, 280.534, 35.5424, 0.4554 ) }
    apic_21 { pt3dadd( 432.911, 279.65, 35.5085, 0.3894 ) }
    apic_21 { pt3dadd( 433.661, 278.793, 35.5037, 0.4134 ) }
    apic_21 { pt3dadd( 434.421, 278.007, 35.607, 0.4334 ) }
    apic_21 { pt3dadd( 435.305, 277.331, 35.7014, 0.3606 ) }
    apic_21 { pt3dadd( 436.124, 276.716, 35.5905, 0.3022 ) }
    apic_21 { pt3dadd( 436.953, 276.108, 35.2982, 0.2796 ) }
    apic_21 { pt3dadd( 437.684, 275.428, 35.2041, 0.2796 ) }
    apic_21 { pt3dadd( 437.897, 274.345, 35.1946, 0.305 ) }
    apic_21 { pt3dadd( 438.495, 273.416, 35.0, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_1 (entry count 65/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 404.04, 413.532, 49.1336, 1.716 ) }
    apic_19 { pt3dadd( 402.998, 411.744, 50.0167, 0.2288 ) }
    apic_19 { pt3dadd( 402.906, 410.609, 50.1908, 0.2748 ) }
    apic_19 { pt3dadd( 402.816, 409.475, 50.3924, 0.2752 ) }
    apic_19 { pt3dadd( 402.725, 408.341, 50.608, 0.2758 ) }
    apic_19 { pt3dadd( 402.632, 407.207, 50.8248, 0.2766 ) }
    apic_19 { pt3dadd( 402.405, 406.09, 51.0152, 0.2782 ) }
    apic_19 { pt3dadd( 402.094, 404.99, 51.1566, 0.2814 ) }
    apic_19 { pt3dadd( 401.981, 403.858, 51.254, 0.2872 ) }
    apic_19 { pt3dadd( 402.238, 402.766, 51.361, 0.2978 ) }
    apic_19 { pt3dadd( 402.464, 401.656, 51.3929, 0.3176 ) }
    apic_19 { pt3dadd( 402.78, 400.623, 51.499, 0.3562 ) }
    apic_19 { pt3dadd( 403.283, 399.612, 51.5449, 0.4164 ) }
    apic_19 { pt3dadd( 403.867, 398.634, 51.5038, 0.585 ) }
    apic_19 { pt3dadd( 404.136, 397.555, 51.3349, 0.6196 ) }
    apic_19 { pt3dadd( 404.387, 396.45, 51.095, 0.6616 ) }
    apic_19 { pt3dadd( 404.698, 395.359, 50.813, 0.6166 ) }
    apic_19 { pt3dadd( 405.283, 394.395, 50.603, 0.4444 ) }
    apic_19 { pt3dadd( 405.915, 393.497, 50.3297, 0.326 ) }
    apic_19 { pt3dadd( 406.691, 392.836, 49.9461, 0.2758 ) }
    apic_19 { pt3dadd( 407.438, 391.986, 49.7006, 0.2766 ) }
    apic_19 { pt3dadd( 408.062, 391.03, 49.5561, 0.2782 ) }
    apic_19 { pt3dadd( 408.128, 389.935, 49.5947, 0.2814 ) }
    apic_19 { pt3dadd( 408.159, 388.792, 49.6712, 0.2872 ) }
    apic_19 { pt3dadd( 408.811, 387.931, 49.6544, 0.2988 ) }
    apic_19 { pt3dadd( 409.641, 387.193, 49.6465, 0.3144 ) }
    apic_19 { pt3dadd( 410.245, 386.251, 49.754, 0.3738 ) }
    apic_19 { pt3dadd( 410.911, 385.352, 49.9352, 0.3348 ) }
    apic_19 { pt3dadd( 411.744, 384.607, 50.183, 0.3016 ) }
    apic_19 { pt3dadd( 412.626, 383.9, 50.4347, 0.2776 ) }
    apic_19 { pt3dadd( 413.65, 383.408, 50.6974, 0.28 ) }
    apic_19 { pt3dadd( 414.594, 382.806, 50.8906, 0.2848 ) }
    apic_19 { pt3dadd( 415.345, 381.979, 51.072, 0.2934 ) }
    apic_19 { pt3dadd( 416.098, 381.194, 51.2425, 0.3096 ) }
    apic_19 { pt3dadd( 416.81, 380.328, 51.3187, 0.3388 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_19 { pt3dadd( 417.68, 379.608, 51.4172, 0.3982 ) }
    apic_19 { pt3dadd( 418.695, 379.181, 51.6152, 0.4818 ) }
    apic_19 { pt3dadd( 419.794, 379.125, 51.9042, 0.7642 ) }
    apic_19 { pt3dadd( 420.873, 378.917, 52.2032, 0.6702 ) }
    apic_19 { pt3dadd( 421.944, 378.568, 52.5134, 0.7498 ) }
    apic_19 { pt3dadd( 422.97, 378.162, 52.864, 0.5794 ) }
    apic_19 { pt3dadd( 424.014, 377.75, 53.1838, 0.6624 ) }
    apic_19 { pt3dadd( 425.099, 377.407, 53.3792, 0.4814 ) }
    apic_19 { pt3dadd( 426.165, 377.002, 53.4635, 0.399 ) }
    apic_19 { pt3dadd( 427.148, 376.439, 53.4436, 0.3892 ) }
    apic_19 { pt3dadd( 428.132, 375.866, 53.3957, 0.3644 ) }
    apic_19 { pt3dadd( 428.856, 375.012, 53.3414, 0.3514 ) }
    apic_19 { pt3dadd( 429.59, 374.138, 53.284, 0.3952 ) }
    apic_19 { pt3dadd( 430.169, 373.194, 53.1244, 0.3752 ) }
    apic_19 { pt3dadd( 431.059, 372.502, 52.9698, 0.3712 ) }
    apic_19 { pt3dadd( 432.012, 371.871, 52.8237, 0.4326 ) }
    apic_19 { pt3dadd( 432.728, 371.047, 52.5563, 0.4406 ) }
    apic_19 { pt3dadd( 433.809, 370.738, 52.2911, 0.5126 ) }
    apic_19 { pt3dadd( 434.911, 370.506, 51.9856, 0.598 ) }
    apic_19 { pt3dadd( 436.033, 370.29, 51.7154, 0.531 ) }
    apic_19 { pt3dadd( 437.113, 369.94, 51.5256, 0.5872 ) }
    apic_19 { pt3dadd( 438.082, 369.487, 51.2207, 0.5008 ) }
    apic_19 { pt3dadd( 439.146, 369.072, 50.9622, 0.5784 ) }
    apic_19 { pt3dadd( 440.146, 368.725, 50.6033, 0.4848 ) }
    apic_19 { pt3dadd( 441.268, 368.535, 50.3051, 0.5476 ) }
    apic_19 { pt3dadd( 442.221, 367.997, 50.2043, 0.4334 ) }
    apic_19 { pt3dadd( 443.255, 367.629, 50.0374, 0.4254 ) }
    apic_19 { pt3dadd( 444.29, 367.194, 50.0214, 0.3358 ) }
    apic_19 { pt3dadd( 445.197, 366.502, 50.0329, 0.3038 ) }
    apic_19 { pt3dadd( 445.986, 365.709, 50.0312, 0.2816 ) }
    apic_19 { pt3dadd( 447.099, 365.483, 50.022, 0.2874 ) }
    apic_19 { pt3dadd( 448.235, 365.55, 49.9892, 0.2994 ) }
    apic_19 { pt3dadd( 449.339, 365.703, 49.8543, 0.3156 ) }
    apic_19 { pt3dadd( 450.441, 365.856, 49.6748, 0.376 ) }
    apic_19 { pt3dadd( 451.572, 365.885, 49.565, 0.3386 ) }
    apic_19 { pt3dadd( 452.701, 365.793, 49.4567, 0.3088 ) }
    apic_19 { pt3dadd( 453.797, 365.55, 49.2769, 0.2906 ) }
    apic_19 { pt3dadd( 454.835, 365.102, 49.0616, 0.3056 ) }
    apic_19 { pt3dadd( 455.874, 364.628, 48.8757, 0.3264 ) }
    apic_19 { pt3dadd( 456.866, 364.182, 48.6248, 0.3976 ) }
    apic_19 { pt3dadd( 457.772, 363.582, 48.3031, 0.3734 ) }
    apic_19 { pt3dadd( 458.652, 362.857, 48.0334, 0.3988 ) }
    apic_19 { pt3dadd( 459.633, 362.3, 47.8218, 0.3338 ) }
    apic_19 { pt3dadd( 460.675, 361.838, 47.6549, 0.3 ) }
    apic_19 { pt3dadd( 461.715, 361.374, 47.5306, 0.2746 ) }
    apic_19 { pt3dadd( 462.793, 361.012, 47.4572, 0.2746 ) }
    apic_19 { pt3dadd( 463.895, 360.834, 47.5118, 0.2746 ) }
    apic_19 { pt3dadd( 465.011, 360.743, 47.6871, 0.2746 ) }
    apic_19 { pt3dadd( 466.118, 360.514, 47.9105, 0.2746 ) }
    apic_19 { pt3dadd( 467.172, 360.139, 48.1914, 0.2746 ) }
    apic_19 { pt3dadd( 468.204, 359.676, 48.4579, 0.2746 ) }
    apic_19 { pt3dadd( 469.142, 359.033, 48.6618, 0.2746 ) }
    apic_19 { pt3dadd( 470.016, 358.302, 48.8323, 0.2746 ) }
    apic_19 { pt3dadd( 471.014, 357.768, 48.9429, 0.2746 ) }
    apic_19 { pt3dadd( 472.059, 357.3, 49.0039, 0.2746 ) }
    apic_19 { pt3dadd( 473.137, 356.934, 49.0137, 0.2746 ) }
    apic_19 { pt3dadd( 474.263, 356.928, 49.0344, 0.2744 ) }
    apic_19 { pt3dadd( 475.349, 356.641, 49.049, 0.2744 ) }
    apic_19 { pt3dadd( 476.415, 356.274, 49.1302, 0.2742 ) }
    apic_19 { pt3dadd( 477.521, 356.105, 49.2898, 0.2736 ) }
    apic_19 { pt3dadd( 478.641, 356.024, 49.369, 0.2728 ) }
    apic_19 { pt3dadd( 479.731, 356.167, 49.5096, 0.2712 ) }
    apic_19 { pt3dadd( 480.866, 356.244, 49.6247, 0.2684 ) }
    apic_19 { pt3dadd( 481.857, 356.792, 49.6572, 0.2626 ) }
    apic_19 { pt3dadd( 482.742, 357.516, 49.6356, 0.2542 ) }
    apic_19 { pt3dadd( 483.826, 357.823, 49.5281, 0.2288 ) }
    apic_19 { pt3dadd( 484.942, 358.072, 49.28, 0.2288 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 67/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 404.04, 413.532, 49.1336, 1.716 ) }
    apic_2 { pt3dadd( 402.181, 412.484, 49.5852, 1.144 ) }
    apic_2 { pt3dadd( 401.169, 411.951, 49.5804, 1.144 ) }
    apic_2 { pt3dadd( 400.201, 411.344, 49.5452, 1.144 ) }
    apic_2 { pt3dadd( 399.388, 410.587, 49.4088, 1.144 ) }
    apic_2 { pt3dadd( 398.592, 409.768, 49.2719, 1.144 ) }
    apic_2 { pt3dadd( 397.865, 408.899, 49.222, 1.144 ) }
    apic_2 { pt3dadd( 397.111, 408.067, 49.257, 1.144 ) }
    apic_2 { pt3dadd( 396.018, 407.727, 49.2722, 1.144 ) }
    apic_2 { pt3dadd( 394.908, 407.73, 49.1854, 1.144 ) }
    apic_2 { pt3dadd( 393.766, 407.775, 48.9742, 1.144 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 78/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 426.991, 420.979, 37.6132, 0.3498 ) }
    dend_36 { pt3dadd( 428.142, 422.162, 36.5106, 0.3144 ) }
    dend_36 { pt3dadd( 428.997, 422.778, 36.0175, 0.374 ) }
    dend_36 { pt3dadd( 429.975, 423.011, 35.42, 0.335 ) }
    dend_36 { pt3dadd( 431.094, 423.015, 34.8342, 0.302 ) }
    dend_36 { pt3dadd( 432.115, 423.294, 34.2454, 0.2782 ) }
    dend_36 { pt3dadd( 433.133, 423.708, 33.7285, 0.2814 ) }
    dend_36 { pt3dadd( 434.241, 423.908, 33.4113, 0.2876 ) }
    dend_36 { pt3dadd( 435.372, 424.033, 33.2455, 0.2984 ) }
    dend_36 { pt3dadd( 436.386, 424.455, 33.0691, 0.3198 ) }
    dend_36 { pt3dadd( 437.063, 425.341, 32.933, 0.3528 ) }
    dend_36 { pt3dadd( 437.255, 426.456, 32.8796, 0.4474 ) }
    dend_36 { pt3dadd( 437.982, 427.283, 32.9302, 0.4598 ) }
    dend_36 { pt3dadd( 439.008, 427.755, 32.9232, 0.5864 ) }
    dend_36 { pt3dadd( 439.708, 428.627, 32.8516, 0.5494 ) }
    dend_36 { pt3dadd( 440.175, 429.593, 32.9577, 0.655 ) }
    dend_36 { pt3dadd( 440.74, 430.582, 33.0296, 0.6918 ) }
    dend_36 { pt3dadd( 441.12, 431.598, 32.9608, 0.6162 ) }
    dend_36 { pt3dadd( 441.702, 432.564, 32.8678, 0.717 ) }
    dend_36 { pt3dadd( 442.376, 433.454, 32.9221, 0.6496 ) }
    dend_36 { pt3dadd( 443.02, 434.316, 33.1285, 0.6146 ) }
    dend_36 { pt3dadd( 443.488, 435.322, 33.3808, 0.5694 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( 443.867, 436.395, 33.5496, 0.619 ) }
    dend_36 { pt3dadd( 444.404, 437.39, 33.6246, 0.524 ) }
    dend_36 { pt3dadd( 445.117, 438.257, 33.6227, 0.5666 ) }
    dend_36 { pt3dadd( 445.639, 439.197, 33.6851, 0.4992 ) }
    dend_36 { pt3dadd( 446.254, 440.082, 33.6274, 0.3982 ) }
    dend_36 { pt3dadd( 446.891, 440.941, 33.6482, 0.3244 ) }
    dend_36 { pt3dadd( 447.835, 441.57, 33.6778, 0.321 ) }
    dend_36 { pt3dadd( 448.694, 442.298, 33.6445, 0.3548 ) }
    dend_36 { pt3dadd( 449.632, 442.922, 33.5387, 0.4508 ) }
    dend_36 { pt3dadd( 450.544, 443.609, 33.4169, 0.469 ) }
    dend_36 { pt3dadd( 451.22, 444.507, 33.3122, 0.591 ) }
    dend_36 { pt3dadd( 451.554, 445.585, 33.243, 0.6174 ) }
    dend_36 { pt3dadd( 452.079, 446.567, 33.215, 0.4926 ) }
    dend_36 { pt3dadd( 452.886, 447.358, 33.1724, 0.4176 ) }
    dend_36 { pt3dadd( 453.789, 448.028, 33.084, 0.4354 ) }
    dend_36 { pt3dadd( 454.684, 448.653, 33.1002, 0.6218 ) }
    dend_36 { pt3dadd( 455.585, 449.249, 33.2494, 0.6812 ) }
    dend_36 { pt3dadd( 456.483, 449.828, 33.2828, 0.8082 ) }
    dend_36 { pt3dadd( 457.171, 450.698, 33.2553, 0.7304 ) }
    dend_36 { pt3dadd( 457.986, 451.489, 33.2248, 0.7352 ) }
    dend_36 { pt3dadd( 458.744, 452.331, 33.1632, 0.7074 ) }
    dend_36 { pt3dadd( 459.572, 453.065, 33.1918, 0.6042 ) }
    dend_36 { pt3dadd( 460.659, 453.153, 33.2514, 0.6652 ) }
    dend_36 { pt3dadd( 461.78, 453.045, 33.3794, 0.6966 ) }
    dend_36 { pt3dadd( 462.913, 453.128, 33.5003, 0.6934 ) }
    dend_36 { pt3dadd( 464.009, 453.439, 33.6003, 0.5292 ) }
    dend_36 { pt3dadd( 465.112, 453.38, 33.539, 0.5344 ) }
    dend_36 { pt3dadd( 466.214, 453.26, 33.3875, 0.4144 ) }
    dend_36 { pt3dadd( 467.047, 453.34, 33.0792, 0.3638 ) }
    dend_36 { pt3dadd( 467.909, 453.255, 33.0753, 0.3492 ) }
    dend_36 { pt3dadd( 469.048, 453.276, 33.0952, 0.397 ) }
    dend_36 { pt3dadd( 470.126, 453.09, 33.0229, 0.578 ) }
    dend_36 { pt3dadd( 471.016, 453.601, 32.8992, 0.4652 ) }
    dend_36 { pt3dadd( 471.926, 454.278, 32.7331, 0.3744 ) }
    dend_36 { pt3dadd( 472.988, 454.672, 32.5766, 0.3184 ) }
    dend_36 { pt3dadd( 474.062, 455.052, 32.4265, 0.353 ) }
    dend_36 { pt3dadd( 475.116, 455.438, 32.2126, 0.435 ) }
    dend_36 { pt3dadd( 476.232, 455.655, 32.0004, 0.5 ) }
    dend_36 { pt3dadd( 477.348, 455.787, 31.7484, 0.356 ) }
    dend_36 { pt3dadd( 478.421, 456.113, 31.08, 0.2288 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 426.991, 420.979, 37.6132, 0.3498 ) }
    dend_35 { pt3dadd( 428.093, 420.814, 36.5092, 0.6864 ) }
    dend_35 { pt3dadd( 429.219, 420.754, 36.1057, 0.5644 ) }
    dend_35 { pt3dadd( 430.011, 420.987, 35.4875, 0.5718 ) }
    dend_35 { pt3dadd( 430.993, 421.167, 34.7956, 0.6194 ) }
    dend_35 { pt3dadd( 432.113, 421.024, 34.1692, 0.771 ) }
    dend_35 { pt3dadd( 433.147, 421.035, 33.4958, 0.7434 ) }
    dend_35 { pt3dadd( 434.151, 421.328, 32.8079, 0.5914 ) }
    dend_35 { pt3dadd( 435.262, 421.396, 32.2101, 0.5686 ) }
    dend_35 { pt3dadd( 436.363, 421.668, 31.7405, 0.6418 ) }
    dend_35 { pt3dadd( 437.302, 422.3, 31.4367, 0.6762 ) }
    dend_35 { pt3dadd( 438.346, 422.753, 31.1758, 0.544 ) }
    dend_35 { pt3dadd( 439.428, 422.43, 30.9644, 0.5628 ) }
    dend_35 { pt3dadd( 440.465, 421.983, 30.7286, 0.462 ) }
    dend_35 { pt3dadd( 441.529, 421.739, 30.4018, 0.4778 ) }
    dend_35 { pt3dadd( 442.672, 421.775, 30.1227, 0.4358 ) }
    dend_35 { pt3dadd( 443.791, 421.547, 29.8707, 0.4752 ) }
    dend_35 { pt3dadd( 444.913, 421.337, 29.6344, 0.6658 ) }
    dend_35 { pt3dadd( 445.972, 421.641, 29.412, 0.6788 ) }
    dend_35 { pt3dadd( 446.35, 422.716, 29.1911, 0.523 ) }
    dend_35 { pt3dadd( 446.592, 423.821, 29.0055, 0.4216 ) }
    dend_35 { pt3dadd( 447.194, 424.763, 28.8193, 0.4676 ) }
    dend_35 { pt3dadd( 448.059, 425.355, 28.4684, 0.5608 ) }
    dend_35 { pt3dadd( 448.832, 425.37, 27.881, 0.4676 ) }
    dend_35 { pt3dadd( 449.643, 424.592, 27.3213, 0.4418 ) }
    dend_35 { pt3dadd( 450.11, 424.057, 26.5471, 0.3672 ) }
    dend_35 { pt3dadd( 451.02, 423.753, 25.886, 0.3566 ) }
    dend_35 { pt3dadd( 452.148, 423.773, 25.3518, 0.4052 ) }
    dend_35 { pt3dadd( 453.257, 423.684, 24.8556, 0.3926 ) }
    dend_35 { pt3dadd( 454.231, 423.646, 24.2749, 0.4104 ) }
    dend_35 { pt3dadd( 455.314, 423.712, 23.7118, 0.472 ) }
    dend_35 { pt3dadd( 456.268, 423.179, 23.3573, 0.6772 ) }
    dend_35 { pt3dadd( 457.211, 422.554, 23.1277, 0.8426 ) }
    dend_35 { pt3dadd( 458.318, 422.308, 22.9606, 0.822 ) }
    dend_35 { pt3dadd( 459.431, 422.365, 22.7475, 0.771 ) }
    dend_35 { pt3dadd( 460.266, 423.04, 22.4571, 0.5084 ) }
    dend_35 { pt3dadd( 461.145, 423.734, 22.1368, 0.3814 ) }
    dend_35 { pt3dadd( 461.859, 424.626, 21.5228, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 78/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 417.293, 416.899, 33.8489, 0.4396 ) }
    dend_31 { pt3dadd( 417.521, 416.692, 31.5554, 0.2288 ) }
    dend_31 { pt3dadd( 418.505, 416.219, 30.6592, 0.837 ) }
    dend_31 { pt3dadd( 419.607, 416.121, 29.8245, 0.8926 ) }
    dend_31 { pt3dadd( 420.395, 416.719, 28.9492, 0.7374 ) }
    dend_31 { pt3dadd( 420.684, 417.31, 27.921, 0.558 ) }
    dend_31 { pt3dadd( 421.02, 418.257, 26.9774, 0.6146 ) }
    dend_31 { pt3dadd( 421.671, 419.181, 26.2788, 0.6626 ) }
    dend_31 { pt3dadd( 422.572, 419.644, 25.7774, 0.5676 ) }
    dend_31 { pt3dadd( 423.684, 419.578, 25.4909, 0.6002 ) }
    dend_31 { pt3dadd( 424.777, 419.398, 25.3159, 0.5624 ) }
    dend_31 { pt3dadd( 425.836, 419.459, 25.0905, 0.5116 ) }
    dend_31 { pt3dadd( 426.305, 420.179, 24.7058, 0.5524 ) }
    dend_31 { pt3dadd( 425.885, 421.158, 24.4247, 0.6598 ) }
    dend_31 { pt3dadd( 425.488, 422.229, 24.2267, 0.7022 ) }
    dend_31 { pt3dadd( 424.449, 422.695, 23.9868, 0.6302 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 94/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 417.293, 416.899, 33.8489, 0.4396 ) }
    dend_28 { pt3dadd( 416.684, 416.453, 33.343, 0.412 ) }
    dend_28 { pt3dadd( 415.794, 416.037, 32.9843, 0.4318 ) }
    dend_28 { pt3dadd( 415.033, 415.725, 32.9095, 0.5832 ) }
    dend_28 { pt3dadd( 414.104, 415.828, 33.1041, 0.7624 ) }
    dend_28 { pt3dadd( 412.983, 415.949, 33.3228, 0.9024 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( 412.056, 416.073, 33.0711, 0.9516 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 1/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 431.161, 414.166, 48.5643, 0.762 ) }
    dend_25 { pt3dadd( 431.981, 414.474, 48.4207, 0.4976 ) }
    dend_25 { pt3dadd( 433.085, 414.723, 48.3787, 0.3304 ) }
    dend_25 { pt3dadd( 434.123, 415.056, 48.2807, 0.2838 ) }
    dend_25 { pt3dadd( 435.147, 415.479, 48.1452, 0.2918 ) }
    dend_25 { pt3dadd( 436.142, 415.988, 48.0511, 0.306 ) }
    dend_25 { pt3dadd( 437.026, 416.709, 47.9626, 0.335 ) }
    dend_25 { pt3dadd( 437.822, 417.507, 47.9181, 0.376 ) }
    dend_25 { pt3dadd( 438.645, 418.283, 47.9049, 0.5132 ) }
    dend_25 { pt3dadd( 439.533, 418.996, 47.847, 0.4708 ) }
    dend_25 { pt3dadd( 440.565, 419.389, 47.7428, 0.4608 ) }
    dend_25 { pt3dadd( 441.691, 419.484, 47.5698, 0.5666 ) }
    dend_25 { pt3dadd( 442.824, 419.591, 47.3911, 0.6184 ) }
    dend_25 { pt3dadd( 443.934, 419.414, 47.2181, 0.4972 ) }
    dend_25 { pt3dadd( 445.014, 419.551, 46.9804, 0.4132 ) }
    dend_25 { pt3dadd( 446.115, 419.711, 46.6833, 0.4884 ) }
    dend_25 { pt3dadd( 447.21, 419.795, 46.3305, 0.4232 ) }
    dend_25 { pt3dadd( 448.329, 419.967, 46.0356, 0.3816 ) }
    dend_25 { pt3dadd( 449.431, 420.269, 45.8175, 0.376 ) }
    dend_25 { pt3dadd( 450.466, 420.746, 45.6786, 0.4776 ) }
    dend_25 { pt3dadd( 451.523, 421.177, 45.6089, 0.5772 ) }
    dend_25 { pt3dadd( 452.514, 421.741, 45.5806, 0.5066 ) }
    dend_25 { pt3dadd( 453.458, 422.319, 45.4594, 0.4736 ) }
    dend_25 { pt3dadd( 454.327, 423.048, 45.3432, 0.6208 ) }
    dend_25 { pt3dadd( 455.388, 423.39, 45.1727, 0.5698 ) }
    dend_25 { pt3dadd( 456.408, 423.886, 45.0601, 0.445 ) }
    dend_25 { pt3dadd( 457.484, 424.236, 44.9403, 0.3594 ) }
    dend_25 { pt3dadd( 458.589, 424.133, 44.7905, 0.4102 ) }
    dend_25 { pt3dadd( 459.721, 424.148, 44.6782, 0.403 ) }
    dend_25 { pt3dadd( 460.748, 423.734, 44.7521, 0.4244 ) }
    dend_25 { pt3dadd( 461.846, 423.455, 44.8865, 0.5226 ) }
    dend_25 { pt3dadd( 462.87, 423.671, 45.1979, 0.6504 ) }
    dend_25 { pt3dadd( 463.899, 424.135, 45.4619, 0.6918 ) }
    dend_25 { pt3dadd( 464.837, 424.737, 45.8049, 0.5754 ) }
    dend_25 { pt3dadd( 465.539, 425.621, 46.1838, 0.6098 ) }
    dend_25 { pt3dadd( 466.267, 426.488, 46.534, 0.6048 ) }
    dend_25 { pt3dadd( 467.168, 427.136, 46.9353, 0.4708 ) }
    dend_25 { pt3dadd( 467.887, 427.884, 47.4146, 0.3698 ) }
    dend_25 { pt3dadd( 468.335, 428.923, 47.8806, 0.3826 ) }
    dend_25 { pt3dadd( 469.03, 429.715, 48.3272, 0.3506 ) }
    dend_25 { pt3dadd( 470.06, 430.157, 48.7225, 0.3318 ) }
    dend_25 { pt3dadd( 470.91, 430.836, 49.0669, 0.3284 ) }
    dend_25 { pt3dadd( 471.456, 431.82, 49.4214, 0.3994 ) }
    dend_25 { pt3dadd( 471.965, 432.811, 49.8142, 0.3842 ) }
    dend_25 { pt3dadd( 472.798, 433.507, 50.2144, 0.3828 ) }
    dend_25 { pt3dadd( 473.764, 434.006, 50.6705, 0.4792 ) }
    dend_25 { pt3dadd( 474.634, 434.665, 51.1577, 0.4056 ) }
    dend_25 { pt3dadd( 475.474, 435.427, 51.6046, 0.3496 ) }
    dend_25 { pt3dadd( 476.454, 435.986, 51.9532, 0.3142 ) }
    dend_25 { pt3dadd( 477.443, 436.545, 52.2586, 0.3734 ) }
    dend_25 { pt3dadd( 478.129, 437.391, 52.5885, 0.3338 ) }
    dend_25 { pt3dadd( 478.71, 438.364, 52.8368, 0.3 ) }
    dend_25 { pt3dadd( 479.466, 439.211, 53.0289, 0.2746 ) }
    dend_25 { pt3dadd( 480.264, 439.784, 53.3627, 0.2746 ) }
    dend_25 { pt3dadd( 480.767, 440.737, 53.6696, 0.2746 ) }
    dend_25 { pt3dadd( 481.221, 441.767, 53.814, 0.2746 ) }
    dend_25 { pt3dadd( 481.786, 442.754, 53.853, 0.2746 ) }
    dend_25 { pt3dadd( 482.062, 443.853, 53.87, 0.2744 ) }
    dend_25 { pt3dadd( 482.142, 444.987, 53.8238, 0.2744 ) }
    dend_25 { pt3dadd( 482.323, 446.111, 53.7244, 0.2742 ) }
    dend_25 { pt3dadd( 482.507, 447.239, 53.6444, 0.2736 ) }
    dend_25 { pt3dadd( 482.546, 448.379, 53.6273, 0.2728 ) }
    dend_25 { pt3dadd( 482.141, 449.433, 53.6413, 0.2712 ) }
    dend_25 { pt3dadd( 481.268, 450.162, 53.6987, 0.2684 ) }
    dend_25 { pt3dadd( 480.343, 450.821, 53.846, 0.2626 ) }
    dend_25 { pt3dadd( 479.435, 451.469, 54.0999, 0.2542 ) }
    dend_25 { pt3dadd( 478.538, 452.132, 54.4158, 0.2288 ) }
    dend_25 { pt3dadd( 477.849, 453.024, 55.16, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 69/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 431.161, 414.166, 48.5643, 0.762 ) }
    dend_22 { pt3dadd( 432.251, 413.365, 48.7724, 0.2288 ) }
    dend_22 { pt3dadd( 433.273, 412.875, 48.8267, 0.3034 ) }
    dend_22 { pt3dadd( 434.387, 412.674, 48.8306, 0.329 ) }
    dend_22 { pt3dadd( 435.521, 412.537, 48.8046, 0.3708 ) }
    dend_22 { pt3dadd( 436.6, 412.19, 48.7502, 0.4756 ) }
    dend_22 { pt3dadd( 437.676, 411.823, 48.7225, 0.5396 ) }
    dend_22 { pt3dadd( 438.646, 411.235, 48.687, 0.6028 ) }
    dend_22 { pt3dadd( 439.772, 411.092, 48.6408, 0.5292 ) }
    dend_22 { pt3dadd( 440.91, 411.039, 48.6889, 0.4066 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 79/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 425.273, 405.197, 50.0189, 0.3256 ) }
    dend_18 { pt3dadd( 426.162, 404.577, 50.437, 0.2288 ) }
    dend_18 { pt3dadd( 427.117, 403.961, 50.6204, 0.2986 ) }
    dend_18 { pt3dadd( 428.104, 403.385, 50.7802, 0.3198 ) }
    dend_18 { pt3dadd( 429.061, 402.757, 50.9093, 0.354 ) }
    dend_18 { pt3dadd( 430.118, 402.329, 50.9942, 0.4434 ) }
    dend_18 { pt3dadd( 431.241, 402.113, 51.0748, 0.4836 ) }
    dend_18 { pt3dadd( 432.289, 401.673, 51.1868, 0.4794 ) }
    dend_18 { pt3dadd( 433.259, 401.079, 51.3271, 0.3984 ) }
    dend_18 { pt3dadd( 434.268, 400.557, 51.4942, 0.3744 ) }
    dend_18 { pt3dadd( 435.326, 400.339, 51.7546, 0.402 ) }
    dend_18 { pt3dadd( 436.408, 400.019, 51.8734, 0.5622 ) }
    dend_18 { pt3dadd( 437.509, 399.883, 51.8406, 0.5586 ) }
    dend_18 { pt3dadd( 438.59, 399.508, 51.8003, 0.6384 ) }
    dend_18 { pt3dadd( 439.634, 399.059, 51.8143, 0.8226 ) }
    dend_18 { pt3dadd( 440.719, 398.818, 51.7401, 0.761 ) }
    dend_18 { pt3dadd( 441.857, 398.734, 51.6869, 0.5444 ) }
    dend_18 { pt3dadd( 442.983, 398.547, 51.7412, 0.4114 ) }
    dend_18 { pt3dadd( 444.04, 398.283, 51.9641, 0.4614 ) }
    dend_18 { pt3dadd( 445.109, 398.038, 52.2841, 0.4882 ) }
    dend_18 { pt3dadd( 446.192, 397.699, 52.5946, 0.6292 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_18 { pt3dadd( 447.266, 397.304, 52.8388, 0.6774 ) }
    dend_18 { pt3dadd( 448.289, 396.794, 53.0788, 0.6552 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 2/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 425.273, 405.197, 50.0189, 0.3256 ) }
    dend_11 { pt3dadd( 424.835, 404.633, 49.6566, 0.3636 ) }
    dend_11 { pt3dadd( 424.788, 403.491, 49.5208, 0.4672 ) }
    dend_11 { pt3dadd( 424.883, 402.389, 49.2895, 0.4976 ) }
    dend_11 { pt3dadd( 424.898, 401.25, 49.0708, 0.6536 ) }
    dend_11 { pt3dadd( 424.991, 400.109, 48.9042, 0.6876 ) }
    dend_11 { pt3dadd( 425.391, 399.038, 48.6842, 0.8452 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 9/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 419.619, 420.572, 67.2932, 0.2746 ) }
    dend_8 { pt3dadd( 419.744, 420.461, 68.3922, 0.2746 ) }
    dend_8 { pt3dadd( 420.592, 420.436, 68.9772, 0.2746 ) }
    dend_8 { pt3dadd( 421.279, 419.679, 69.6111, 0.2746 ) }
    dend_8 { pt3dadd( 421.667, 418.625, 70.0857, 0.2746 ) }
    dend_8 { pt3dadd( 422.578, 417.986, 70.4203, 0.2746 ) }
    dend_8 { pt3dadd( 423.629, 417.565, 70.6563, 0.2746 ) }
    dend_8 { pt3dadd( 424.566, 416.911, 70.8002, 0.2746 ) }
    dend_8 { pt3dadd( 425.457, 416.198, 70.8851, 0.2746 ) }
    dend_8 { pt3dadd( 426.285, 415.436, 71.0214, 0.2746 ) }
    dend_8 { pt3dadd( 427.04, 414.638, 71.2695, 0.2746 ) }
    dend_8 { pt3dadd( 427.954, 414.033, 71.547, 0.2746 ) }
    dend_8 { pt3dadd( 429.027, 413.644, 71.7525, 0.2746 ) }
    dend_8 { pt3dadd( 430.13, 413.35, 71.8987, 0.2746 ) }
    dend_8 { pt3dadd( 431.248, 413.122, 71.9939, 0.2746 ) }
    dend_8 { pt3dadd( 432.38, 412.993, 72.0818, 0.2746 ) }
    dend_8 { pt3dadd( 433.514, 412.887, 72.1804, 0.2746 ) }
    dend_8 { pt3dadd( 434.533, 412.441, 72.3218, 0.2746 ) }
    dend_8 { pt3dadd( 435.495, 412.014, 72.574, 0.2746 ) }
    dend_8 { pt3dadd( 436.438, 412.307, 72.9963, 0.2746 ) }
    dend_8 { pt3dadd( 437.335, 412.914, 73.4698, 0.2746 ) }
    dend_8 { pt3dadd( 438.087, 413.736, 73.8741, 0.2744 ) }
    dend_8 { pt3dadd( 438.598, 414.711, 74.2804, 0.2744 ) }
    dend_8 { pt3dadd( 439.383, 415.39, 74.5349, 0.2742 ) }
    dend_8 { pt3dadd( 440.197, 416.155, 74.7253, 0.2736 ) }
    dend_8 { pt3dadd( 441.062, 416.894, 74.9081, 0.2728 ) }
    dend_8 { pt3dadd( 442.022, 417.506, 75.0784, 0.2712 ) }
    dend_8 { pt3dadd( 443.063, 417.967, 75.2886, 0.2684 ) }
    dend_8 { pt3dadd( 444.169, 418.045, 75.584, 0.2626 ) }
    dend_8 { pt3dadd( 445.13, 417.568, 75.9951, 0.2542 ) }
    dend_8 { pt3dadd( 445.914, 416.836, 76.4851, 0.2288 ) }
    dend_8 { pt3dadd( 445.931, 415.73, 77.56, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 41/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 419.619, 420.572, 67.2932, 0.2746 ) }
    dend_7 { pt3dadd( 419.593, 420.074, 68.8489, 0.2288 ) }
    dend_7 { pt3dadd( 419.719, 419.135, 69.4803, 0.2736 ) }
    dend_7 { pt3dadd( 419.819, 418.02, 70.0924, 0.2728 ) }
    dend_7 { pt3dadd( 419.674, 417.163, 70.8803, 0.2712 ) }
    dend_7 { pt3dadd( 419.104, 416.567, 71.8026, 0.2684 ) }
    dend_7 { pt3dadd( 418.602, 415.671, 72.5486, 0.2626 ) }
    dend_7 { pt3dadd( 418.451, 414.552, 73.0699, 0.2542 ) }
    dend_7 { pt3dadd( 418.736, 413.519, 73.5412, 0.2288 ) }
    dend_7 { pt3dadd( 418.934, 412.412, 74.2, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 51/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 397.969, 420.541, 55.5677, 0.7416 ) }
    dend_5 { pt3dadd( 397.335, 420.892, 56.8095, 0.2288 ) }
    dend_5 { pt3dadd( 396.342, 421.428, 57.2278, 0.4342 ) }
    dend_5 { pt3dadd( 395.595, 422.228, 57.6114, 0.673 ) }
    dend_5 { pt3dadd( 394.685, 422.645, 58.177, 0.517 ) }
    dend_5 { pt3dadd( 393.61, 422.758, 58.7992, 0.386 ) }
    dend_5 { pt3dadd( 392.651, 422.836, 59.5011, 0.2924 ) }
    dend_5 { pt3dadd( 391.708, 423.446, 60.1191, 0.308 ) }
    dend_5 { pt3dadd( 390.845, 424.084, 60.7009, 0.3356 ) }
    dend_5 { pt3dadd( 390.033, 424.717, 61.2623, 0.3922 ) }
    dend_5 { pt3dadd( 389.105, 425.351, 61.6829, 0.4714 ) }
    dend_5 { pt3dadd( 388.3, 426.155, 62.0455, 0.7432 ) }
    dend_5 { pt3dadd( 387.568, 427.028, 62.3568, 0.6392 ) }
    dend_5 { pt3dadd( 386.847, 427.887, 62.6965, 0.653 ) }
    dend_5 { pt3dadd( 386.054, 428.68, 63.0767, 0.591 ) }
    dend_5 { pt3dadd( 385.172, 429.395, 63.4561, 0.4442 ) }
    dend_5 { pt3dadd( 384.158, 429.897, 63.8548, 0.3254 ) }
    dend_5 { pt3dadd( 383.047, 430.079, 64.265, 0.2746 ) }
    dend_5 { pt3dadd( 381.939, 430.123, 64.7506, 0.2746 ) }
    dend_5 { pt3dadd( 381.023, 430.281, 65.4394, 0.2746 ) }
    dend_5 { pt3dadd( 380.023, 430.279, 66.176, 0.2746 ) }
    dend_5 { pt3dadd( 378.981, 430.075, 66.9488, 0.2746 ) }
    dend_5 { pt3dadd( 377.915, 429.998, 67.7443, 0.2746 ) }
    dend_5 { pt3dadd( 376.815, 430.222, 68.4474, 0.2746 ) }
    dend_5 { pt3dadd( 375.902, 430.782, 69.1284, 0.2746 ) }
    dend_5 { pt3dadd( 375.365, 431.616, 69.8653, 0.2746 ) }
    dend_5 { pt3dadd( 374.633, 432.406, 70.5645, 0.2746 ) }
    dend_5 { pt3dadd( 373.581, 432.78, 71.1589, 0.2746 ) }
    dend_5 { pt3dadd( 372.516, 433.116, 71.7279, 0.2746 ) }
    dend_5 { pt3dadd( 371.475, 433.489, 72.3013, 0.2746 ) }
    dend_5 { pt3dadd( 370.492, 434.055, 72.7966, 0.2746 ) }
    dend_5 { pt3dadd( 369.527, 434.6, 73.2738, 0.2746 ) }
    dend_5 { pt3dadd( 368.76, 435.279, 73.8178, 0.2746 ) }
    dend_5 { pt3dadd( 368.488, 436.348, 74.3201, 0.2746 ) }
    dend_5 { pt3dadd( 368.254, 437.466, 74.6738, 0.2746 ) }
    dend_5 { pt3dadd( 368.025, 437.58, 74.7208, 0.2746 ) }
    dend_5 { pt3dadd( 367.719, 437.618, 74.7076, 0.2746 ) }
    dend_5 { pt3dadd( 367.453, 437.694, 74.6508, 0.2746 ) }
    dend_5 { pt3dadd( 367.122, 437.707, 74.5738, 0.2746 ) }
    dend_5 { pt3dadd( 366.411, 438.025, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 366.067, 438.483, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 365.724, 438.94, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 365.165, 439.182, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 364.669, 439.487, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 364.414, 439.575, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 364.352, 439.855, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 364.135, 439.982, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 363.792, 439.982, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 362.878, 440.097, 74.48, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( 362.28, 440.3, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 361.695, 440.517, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 360.932, 440.554, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 360.132, 440.554, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 359.445, 440.44, 74.48, 0.2746 ) }
    dend_5 { pt3dadd( 359.102, 440.44, 74.48, 0.2744 ) }
    dend_5 { pt3dadd( 358.758, 440.44, 74.48, 0.2744 ) }
    dend_5 { pt3dadd( 358.453, 440.402, 74.48, 0.2742 ) }
    dend_5 { pt3dadd( 358.212, 440.072, 74.48, 0.2728 ) }
    dend_5 { pt3dadd( 357.767, 439.83, 74.48, 0.2684 ) }
    dend_5 { pt3dadd( 357.538, 439.373, 74.48, 0.2542 ) }
    dend_5 { pt3dadd( 357.386, 438.953, 74.48, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 397.969, 420.541, 55.5677, 0.7416 ) }
    dend_2 { pt3dadd( 396.421, 420.477, 56.3282, 0.6828 ) }
    dend_2 { pt3dadd( 395.319, 420.253, 56.6482, 0.7366 ) }
    dend_2 { pt3dadd( 394.258, 419.878, 56.9934, 0.96 ) }
    dend_2 { pt3dadd( 393.24, 419.369, 57.3031, 1.003 ) }
    dend_2 { pt3dadd( 392.27, 418.761, 57.5448, 1.0554 ) }
    dend_2 { pt3dadd( 391.348, 418.084, 57.7324, 1.0564 ) }
    dend_2 { pt3dadd( 390.434, 417.395, 57.869, 1.0676 ) }
    dend_2 { pt3dadd( 389.54, 416.68, 57.9793, 1.0414 ) }
    dend_2 { pt3dadd( 388.586, 416.05, 58.0804, 0.9924 ) }
    dend_2 { pt3dadd( 387.544, 415.589, 58.2137, 0.9046 ) }
    dend_2 { pt3dadd( 386.546, 415.158, 58.8311, 0.7266 ) }
    // Section: apic_14, id: apic_14, parent: apic_2 (entry count 24/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 393.766, 407.775, 48.9742, 1.144 ) }
    apic_14 { pt3dadd( 392.451, 408.764, 48.6802, 0.9152 ) }
    apic_14 { pt3dadd( 391.555, 409.475, 48.5864, 0.6228 ) }
    apic_14 { pt3dadd( 390.745, 410.27, 48.274, 0.54 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 28/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 393.766, 407.775, 48.9742, 1.144 ) }
    apic_3 { pt3dadd( 392.671, 407.981, 48.7861, 1.0296 ) }
    apic_3 { pt3dadd( 391.583, 407.954, 48.6819, 1.0296 ) }
    apic_3 { pt3dadd( 390.602, 407.518, 48.4268, 1.0296 ) }
    apic_3 { pt3dadd( 389.71, 406.853, 48.1208, 1.0296 ) }
    apic_3 { pt3dadd( 388.862, 406.087, 47.8486, 1.0296 ) }
    apic_3 { pt3dadd( 387.961, 405.388, 47.6196, 1.0296 ) }
    apic_3 { pt3dadd( 386.977, 404.806, 47.4267, 1.0296 ) }
    apic_3 { pt3dadd( 385.96, 404.297, 47.2567, 1.0296 ) }
    apic_3 { pt3dadd( 384.97, 403.768, 47.0666, 1.0296 ) }
    apic_3 { pt3dadd( 384.091, 403.063, 46.8656, 1.0296 ) }
    apic_3 { pt3dadd( 383.273, 402.264, 46.7015, 1.0296 ) }
    apic_3 { pt3dadd( 382.466, 401.456, 46.5676, 1.0296 ) }
    apic_3 { pt3dadd( 381.658, 400.649, 46.4741, 1.0296 ) }
    apic_3 { pt3dadd( 380.85, 399.844, 46.48, 1.0296 ) }
    apic_3 { pt3dadd( 379.647, 398.557, 45.3474, 0.9152 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 424.449, 422.695, 23.9868, 0.6302 ) }
    dend_33 { pt3dadd( 425.823, 423.153, 22.888, 0.4576 ) }
    dend_33 { pt3dadd( 426.673, 423.787, 22.3969, 0.4688 ) }
    dend_33 { pt3dadd( 427.007, 424.858, 22.0044, 0.3814 ) }
    dend_33 { pt3dadd( 426.957, 425.958, 21.8266, 0.3304 ) }
    dend_33 { pt3dadd( 426.742, 427.06, 21.6448, 0.3814 ) }
    dend_33 { pt3dadd( 426.826, 428.199, 21.56, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 51/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 424.449, 422.695, 23.9868, 0.6302 ) }
    dend_32 { pt3dadd( 423.533, 423.178, 23.441, 0.539 ) }
    dend_32 { pt3dadd( 422.651, 423.819, 23.1756, 0.6214 ) }
    dend_32 { pt3dadd( 422.137, 424.684, 22.8724, 0.6992 ) }
    dend_32 { pt3dadd( 421.794, 425.649, 22.5711, 0.5206 ) }
    dend_32 { pt3dadd( 421.231, 426.596, 22.3401, 0.3836 ) }
    dend_32 { pt3dadd( 420.854, 427.646, 22.2765, 0.33 ) }
    dend_32 { pt3dadd( 420.079, 428.214, 22.4854, 0.4038 ) }
    dend_32 { pt3dadd( 419.052, 428.371, 22.9295, 0.3842 ) }
    dend_32 { pt3dadd( 418.396, 428.672, 23.6407, 0.4238 ) }
    dend_32 { pt3dadd( 418.11, 429.677, 24.3354, 0.356 ) }
    dend_32 { pt3dadd( 417.331, 430.373, 24.92, 0.4576 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 63/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 412.056, 416.073, 33.0711, 0.9516 ) }
    dend_30 { pt3dadd( 411.305, 415.129, 32.4106, 0.2288 ) }
    dend_30 { pt3dadd( 410.486, 414.417, 32.1485, 0.4808 ) }
    dend_30 { pt3dadd( 409.423, 414.241, 31.9788, 0.5624 ) }
    dend_30 { pt3dadd( 408.31, 414.238, 31.7607, 0.5798 ) }
    dend_30 { pt3dadd( 407.248, 413.951, 31.4507, 0.8062 ) }
    dend_30 { pt3dadd( 406.215, 414.103, 31.0523, 0.7402 ) }
    dend_30 { pt3dadd( 405.207, 413.765, 30.6202, 0.6892 ) }
    dend_30 { pt3dadd( 404.085, 413.602, 30.2854, 0.7034 ) }
    dend_30 { pt3dadd( 402.971, 413.347, 30.0222, 0.661 ) }
    dend_30 { pt3dadd( 401.887, 412.984, 29.68, 0.9152 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 74/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 412.056, 416.073, 33.0711, 0.9516 ) }
    dend_29 { pt3dadd( 410.465, 416.026, 32.3991, 0.5444 ) }
    dend_29 { pt3dadd( 409.99, 416.715, 32.0533, 0.6882 ) }
    dend_29 { pt3dadd( 409.345, 417.605, 31.8738, 0.5466 ) }
    dend_29 { pt3dadd( 408.573, 418.393, 31.7148, 0.4352 ) }
    dend_29 { pt3dadd( 407.874, 419.259, 31.4742, 0.41 ) }
    dend_29 { pt3dadd( 407.095, 420.07, 31.3236, 0.3976 ) }
    dend_29 { pt3dadd( 406.311, 420.899, 31.1937, 0.4386 ) }
    dend_29 { pt3dadd( 405.621, 421.77, 30.9403, 0.4332 ) }
    dend_29 { pt3dadd( 405.348, 422.606, 30.4203, 0.3602 ) }
    dend_29 { pt3dadd( 404.791, 423.304, 30.0462, 0.3016 ) }
    dend_29 { pt3dadd( 404.93, 424.187, 29.7797, 0.2774 ) }
    dend_29 { pt3dadd( 404.771, 424.867, 29.2382, 0.2796 ) }
    dend_29 { pt3dadd( 404.246, 425.614, 28.791, 0.284 ) }
    dend_29 { pt3dadd( 403.699, 426.402, 28.6675, 0.2918 ) }
    dend_29 { pt3dadd( 402.878, 427.131, 28.5522, 0.3078 ) }
    dend_29 { pt3dadd( 402.267, 427.503, 28.1215, 0.3304 ) }
    dend_29 { pt3dadd( 401.171, 427.775, 27.7214, 0.4048 ) }
    dend_29 { pt3dadd( 400.049, 427.873, 27.382, 0.3866 ) }
    dend_29 { pt3dadd( 398.995, 427.795, 27.0018, 0.4232 ) }
    dend_29 { pt3dadd( 397.934, 427.518, 26.782, 0.3788 ) }
    dend_29 { pt3dadd( 396.842, 427.544, 26.626, 0.3844 ) }
    dend_29 { pt3dadd( 395.794, 427.379, 26.4118, 0.4274 ) }
    dend_29 { pt3dadd( 394.711, 427.128, 26.2032, 0.5756 ) }
    dend_29 { pt3dadd( 393.589, 426.942, 26.0378, 0.7462 ) }
    dend_29 { pt3dadd( 392.474, 426.775, 25.9428, 0.8844 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( 391.366, 426.744, 25.9736, 0.8592 ) }
    dend_29 { pt3dadd( 390.258, 426.831, 26.0252, 0.8052 ) }
    dend_29 { pt3dadd( 389.151, 426.993, 26.1038, 0.7406 ) }
    dend_29 { pt3dadd( 388.109, 427.149, 26.0725, 0.678 ) }
    dend_29 { pt3dadd( 387.022, 427.278, 25.9585, 0.5132 ) }
    dend_29 { pt3dadd( 385.909, 427.212, 25.9148, 0.4428 ) }
    dend_29 { pt3dadd( 384.857, 427.433, 25.9731, 0.5454 ) }
    dend_29 { pt3dadd( 383.805, 427.445, 25.8787, 0.5178 ) }
    dend_29 { pt3dadd( 383.024, 428.235, 25.7121, 0.6092 ) }
    dend_29 { pt3dadd( 381.99, 428.563, 25.5665, 0.5444 ) }
    dend_29 { pt3dadd( 380.87, 428.581, 25.4713, 0.647 ) }
    dend_29 { pt3dadd( 379.76, 428.745, 25.412, 0.67 ) }
    dend_29 { pt3dadd( 378.791, 429.156, 25.4229, 0.6104 ) }
    dend_29 { pt3dadd( 378.401, 430.01, 25.3092, 0.5368 ) }
    dend_29 { pt3dadd( 378.386, 431.017, 25.2899, 0.4518 ) }
    dend_29 { pt3dadd( 377.883, 431.966, 25.1978, 0.5 ) }
    dend_29 { pt3dadd( 376.923, 432.454, 24.9984, 0.5084 ) }
    dend_29 { pt3dadd( 376.147, 433.233, 24.92, 0.6864 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 18/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 440.91, 411.039, 48.6889, 0.4066 ) }
    dend_24 { pt3dadd( 441.96, 411.179, 48.0533, 0.3396 ) }
    dend_24 { pt3dadd( 443.017, 411.594, 47.7946, 0.3514 ) }
    dend_24 { pt3dadd( 444.005, 412.163, 47.521, 0.401 ) }
    dend_24 { pt3dadd( 444.875, 412.891, 47.3166, 0.586 ) }
    dend_24 { pt3dadd( 445.714, 413.668, 47.1344, 0.4796 ) }
    dend_24 { pt3dadd( 446.684, 414.25, 46.8927, 0.402 ) }
    dend_24 { pt3dadd( 447.569, 414.668, 46.4598, 0.364 ) }
    dend_24 { pt3dadd( 448.628, 415.001, 45.9922, 0.4676 ) }
    dend_24 { pt3dadd( 449.759, 415.16, 45.6047, 0.4996 ) }
    dend_24 { pt3dadd( 450.897, 415.055, 45.2858, 0.65 ) }
    dend_24 { pt3dadd( 452.039, 415.017, 45.0439, 0.7176 ) }
    dend_24 { pt3dadd( 453.143, 414.888, 44.7896, 0.7242 ) }
    dend_24 { pt3dadd( 454.237, 414.668, 44.5477, 0.6244 ) }
    dend_24 { pt3dadd( 455.36, 414.466, 44.4161, 0.526 ) }
    dend_24 { pt3dadd( 456.48, 414.242, 44.3414, 0.6098 ) }
    dend_24 { pt3dadd( 457.603, 414.216, 44.3722, 0.6166 ) }
    dend_24 { pt3dadd( 458.672, 414.575, 44.3716, 0.6626 ) }
    dend_24 { pt3dadd( 459.74, 414.967, 44.4441, 0.5884 ) }
    dend_24 { pt3dadd( 460.785, 415.287, 44.6558, 0.5364 ) }
    dend_24 { pt3dadd( 461.826, 415.757, 44.8602, 0.484 ) }
    dend_24 { pt3dadd( 462.839, 416.265, 45.026, 0.4016 ) }
    dend_24 { pt3dadd( 463.926, 416.523, 45.1744, 0.404 ) }
    dend_24 { pt3dadd( 465.035, 416.642, 45.381, 0.3434 ) }
    dend_24 { pt3dadd( 466.161, 416.526, 45.575, 0.3178 ) }
    dend_24 { pt3dadd( 467.264, 416.239, 45.7316, 0.3072 ) }
    dend_24 { pt3dadd( 468.375, 415.981, 45.8368, 0.3374 ) }
    dend_24 { pt3dadd( 469.389, 416.215, 45.9547, 0.3804 ) }
    dend_24 { pt3dadd( 470.214, 416.961, 46.1012, 0.5226 ) }
    dend_24 { pt3dadd( 471.143, 417.546, 46.1569, 0.4834 ) }
    dend_24 { pt3dadd( 472.176, 418.008, 46.1042, 0.508 ) }
    dend_24 { pt3dadd( 473.076, 418.683, 45.9833, 0.54 ) }
    dend_24 { pt3dadd( 473.944, 419.41, 45.8119, 0.4342 ) }
    dend_24 { pt3dadd( 474.978, 419.76, 45.5896, 0.3544 ) }
    dend_24 { pt3dadd( 476.099, 419.695, 45.4087, 0.329 ) }
    dend_24 { pt3dadd( 477.194, 419.775, 45.3496, 0.3722 ) }
    dend_24 { pt3dadd( 478.16, 420.302, 45.3552, 0.4706 ) }
    dend_24 { pt3dadd( 479.063, 420.998, 45.3205, 0.5662 ) }
    dend_24 { pt3dadd( 479.965, 421.598, 45.1178, 0.4776 ) }
    dend_24 { pt3dadd( 480.772, 422.191, 44.6975, 0.4608 ) }
    dend_24 { pt3dadd( 481.809, 422.547, 44.2439, 0.3976 ) }
    dend_24 { pt3dadd( 482.866, 422.198, 43.8259, 0.4384 ) }
    dend_24 { pt3dadd( 483.951, 421.855, 43.4361, 0.4326 ) }
    dend_24 { pt3dadd( 485.069, 421.816, 43.0629, 0.3592 ) }
    dend_24 { pt3dadd( 486.201, 421.896, 42.7552, 0.2998 ) }
    dend_24 { pt3dadd( 487.328, 421.73, 42.5138, 0.2744 ) }
    dend_24 { pt3dadd( 488.331, 421.189, 42.3164, 0.2742 ) }
    dend_24 { pt3dadd( 489.369, 420.707, 42.1683, 0.2736 ) }
    dend_24 { pt3dadd( 490.491, 420.492, 42.04, 0.2728 ) }
    dend_24 { pt3dadd( 491.626, 420.374, 41.9392, 0.2712 ) }
    dend_24 { pt3dadd( 492.757, 420.474, 41.778, 0.2684 ) }
    dend_24 { pt3dadd( 493.832, 420.717, 41.505, 0.2626 ) }
    dend_24 { pt3dadd( 494.944, 420.952, 41.2163, 0.2542 ) }
    dend_24 { pt3dadd( 496.042, 420.849, 40.8696, 0.2288 ) }
    dend_24 { pt3dadd( 497.182, 420.763, 40.32, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 73/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 440.91, 411.039, 48.6889, 0.4066 ) }
    dend_23 { pt3dadd( 441.436, 410.884, 49.2708, 0.2288 ) }
    dend_23 { pt3dadd( 442.483, 410.575, 49.5701, 0.289 ) }
    dend_23 { pt3dadd( 443.49, 410.056, 49.8408, 0.3008 ) }
    dend_23 { pt3dadd( 444.479, 409.622, 50.2065, 0.3256 ) }
    dend_23 { pt3dadd( 445.422, 409.004, 50.5674, 0.3588 ) }
    dend_23 { pt3dadd( 446.255, 408.22, 50.8553, 0.4816 ) }
    dend_23 { pt3dadd( 447.264, 407.702, 51.028, 0.4104 ) }
    dend_23 { pt3dadd( 448.28, 407.199, 51.114, 0.3572 ) }
    dend_23 { pt3dadd( 449.254, 406.602, 51.2159, 0.3356 ) }
    dend_23 { pt3dadd( 450.297, 406.17, 51.382, 0.377 ) }
    dend_23 { pt3dadd( 451.292, 406.002, 51.7468, 0.5168 ) }
    dend_23 { pt3dadd( 452.33, 405.742, 52.185, 0.4702 ) }
    dend_23 { pt3dadd( 453.205, 405.07, 52.4527, 0.496 ) }
    dend_23 { pt3dadd( 454.25, 404.618, 52.6683, 0.4562 ) }
    dend_23 { pt3dadd( 455.238, 404.099, 52.9138, 0.5798 ) }
    dend_23 { pt3dadd( 456.105, 403.372, 53.1527, 0.5356 ) }
    dend_23 { pt3dadd( 456.964, 402.639, 53.361, 0.637 ) }
    dend_23 { pt3dadd( 457.814, 401.902, 53.4696, 0.6216 ) }
    dend_23 { pt3dadd( 458.619, 401.1, 53.6071, 0.6656 ) }
    dend_23 { pt3dadd( 459.464, 400.386, 53.8182, 0.624 ) }
    dend_23 { pt3dadd( 460.465, 399.862, 54.0341, 0.4578 ) }
    dend_23 { pt3dadd( 461.482, 399.399, 54.1923, 0.3518 ) }
    dend_23 { pt3dadd( 462.615, 399.288, 54.3584, 0.3184 ) }
    dend_23 { pt3dadd( 463.73, 399.318, 54.5829, 0.3814 ) }
    dend_23 { pt3dadd( 464.798, 399.648, 54.8388, 0.3486 ) }
    dend_23 { pt3dadd( 465.78, 400.172, 55.1219, 0.327 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( 466.681, 400.696, 55.2882, 0.327 ) }
    dend_23 { pt3dadd( 467.563, 400.948, 55.403, 0.361 ) }
    dend_23 { pt3dadd( 468.592, 401.008, 55.5635, 0.4858 ) }
    dend_23 { pt3dadd( 469.611, 401.291, 55.5878, 0.4192 ) }
    dend_23 { pt3dadd( 470.544, 401.802, 55.6987, 0.3684 ) }
    dend_23 { pt3dadd( 471.609, 402.011, 55.939, 0.3798 ) }
    dend_23 { pt3dadd( 472.686, 401.754, 56.259, 0.3452 ) }
    dend_23 { pt3dadd( 473.408, 400.927, 56.5816, 0.3224 ) }
    dend_23 { pt3dadd( 473.833, 399.966, 57.0069, 0.3108 ) }
    dend_23 { pt3dadd( 474.603, 399.254, 57.5016, 0.3672 ) }
    dend_23 { pt3dadd( 475.578, 398.669, 57.8444, 0.322 ) }
    dend_23 { pt3dadd( 476.408, 397.909, 57.9869, 0.2796 ) }
    dend_23 { pt3dadd( 477.121, 397.022, 58.0188, 0.2288 ) }
    dend_23 { pt3dadd( 478.078, 396.396, 57.96, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 14/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 448.289, 396.794, 53.0788, 0.6552 ) }
    dend_20 { pt3dadd( 449.69, 396.689, 52.1063, 0.2288 ) }
    dend_20 { pt3dadd( 450.774, 396.401, 51.7443, 0.501 ) }
    dend_20 { pt3dadd( 451.753, 395.917, 51.3257, 0.4462 ) }
    dend_20 { pt3dadd( 452.664, 395.259, 50.923, 0.4258 ) }
    dend_20 { pt3dadd( 453.542, 394.531, 50.5792, 0.4502 ) }
    dend_20 { pt3dadd( 454.257, 393.647, 50.3314, 0.65 ) }
    dend_20 { pt3dadd( 454.832, 392.668, 50.122, 0.7304 ) }
    dend_20 { pt3dadd( 455.369, 391.662, 49.926, 0.913 ) }
    dend_20 { pt3dadd( 456.06, 390.758, 49.7904, 0.8596 ) }
    dend_20 { pt3dadd( 456.569, 389.793, 49.5729, 0.604 ) }
    dend_20 { pt3dadd( 457.003, 388.747, 49.3444, 0.4326 ) }
    dend_20 { pt3dadd( 457.796, 387.946, 49.1795, 0.4772 ) }
    dend_20 { pt3dadd( 458.697, 387.25, 49.0196, 0.4024 ) }
    dend_20 { pt3dadd( 459.699, 386.703, 48.8995, 0.3426 ) }
    dend_20 { pt3dadd( 460.721, 386.226, 48.7292, 0.307 ) }
    dend_20 { pt3dadd( 461.806, 385.88, 48.6111, 0.3304 ) }
    dend_20 { pt3dadd( 462.86, 385.441, 48.4809, 0.3984 ) }
    dend_20 { pt3dadd( 463.922, 385.07, 48.2938, 0.4068 ) }
    dend_20 { pt3dadd( 465.007, 384.787, 48.071, 0.305 ) }
    dend_20 { pt3dadd( 466.066, 384.384, 47.88, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 35/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 448.289, 396.794, 53.0788, 0.6552 ) }
    dend_19 { pt3dadd( 449.074, 396.221, 53.1359, 0.4702 ) }
    dend_19 { pt3dadd( 450.142, 395.863, 53.158, 0.3688 ) }
    dend_19 { pt3dadd( 451.243, 395.555, 53.1812, 0.3804 ) }
    dend_19 { pt3dadd( 452.214, 394.969, 53.2171, 0.3468 ) }
    dend_19 { pt3dadd( 453.035, 394.244, 53.1874, 0.324 ) }
    dend_19 { pt3dadd( 454.035, 393.813, 53.13, 0.3188 ) }
    dend_19 { pt3dadd( 454.999, 393.494, 53.338, 0.3586 ) }
    dend_19 { pt3dadd( 455.883, 393.332, 53.8415, 0.42 ) }
    dend_19 { pt3dadd( 456.99, 393.56, 54.3684, 0.5938 ) }
    dend_19 { pt3dadd( 458.053, 393.974, 54.8456, 0.6278 ) }
    dend_19 { pt3dadd( 459.033, 394.483, 55.3627, 0.714 ) }
    dend_19 { pt3dadd( 460.085, 394.725, 55.8765, 0.5332 ) }
    dend_19 { pt3dadd( 461.089, 394.197, 56.2607, 0.4788 ) }
    dend_19 { pt3dadd( 461.978, 393.528, 56.5306, 0.3876 ) }
    dend_19 { pt3dadd( 463.1, 393.433, 56.7428, 0.4022 ) }
    dend_19 { pt3dadd( 464.215, 393.645, 56.943, 0.4508 ) }
    dend_19 { pt3dadd( 465.26, 393.918, 57.2524, 0.6672 ) }
    dend_19 { pt3dadd( 466.219, 394.34, 57.6744, 0.6826 ) }
    dend_19 { pt3dadd( 467.249, 394.69, 58.0398, 0.524 ) }
    dend_19 { pt3dadd( 468.362, 394.662, 58.345, 0.453 ) }
    dend_19 { pt3dadd( 469.464, 394.658, 58.721, 0.382 ) }
    dend_19 { pt3dadd( 470.542, 394.786, 59.1195, 0.415 ) }
    dend_19 { pt3dadd( 471.619, 395.067, 59.4986, 0.3634 ) }
    dend_19 { pt3dadd( 472.729, 395.125, 59.8592, 0.3566 ) }
    dend_19 { pt3dadd( 473.865, 395.039, 60.1255, 0.3692 ) }
    dend_19 { pt3dadd( 474.998, 394.975, 60.312, 0.5008 ) }
    dend_19 { pt3dadd( 476.138, 394.996, 60.4458, 0.4484 ) }
    dend_19 { pt3dadd( 477.279, 395.042, 60.5489, 0.4168 ) }
    dend_19 { pt3dadd( 478.418, 395.037, 60.6707, 0.4964 ) }
    dend_19 { pt3dadd( 479.557, 395.053, 60.807, 0.4326 ) }
    dend_19 { pt3dadd( 480.681, 395.245, 60.9762, 0.4242 ) }
    dend_19 { pt3dadd( 481.801, 395.356, 61.2156, 0.3338 ) }
    dend_19 { pt3dadd( 482.924, 395.216, 61.5202, 0.3 ) }
    dend_19 { pt3dadd( 484.054, 395.099, 61.8478, 0.2746 ) }
    dend_19 { pt3dadd( 485.139, 395.301, 62.2362, 0.2746 ) }
    dend_19 { pt3dadd( 486.072, 395.057, 62.7298, 0.2746 ) }
    dend_19 { pt3dadd( 486.603, 394.217, 63.3626, 0.2746 ) }
    dend_19 { pt3dadd( 486.578, 393.159, 64.0119, 0.2746 ) }
    dend_19 { pt3dadd( 486.191, 392.109, 64.624, 0.2746 ) }
    dend_19 { pt3dadd( 485.974, 391.0, 65.1521, 0.2746 ) }
    dend_19 { pt3dadd( 485.586, 389.934, 65.5948, 0.2746 ) }
    dend_19 { pt3dadd( 485.224, 388.865, 66.0192, 0.2744 ) }
    dend_19 { pt3dadd( 484.96, 387.778, 66.4608, 0.2744 ) }
    dend_19 { pt3dadd( 484.935, 386.67, 66.9424, 0.2742 ) }
    dend_19 { pt3dadd( 484.873, 385.538, 67.4206, 0.2736 ) }
    dend_19 { pt3dadd( 484.594, 384.454, 67.9272, 0.2728 ) }
    dend_19 { pt3dadd( 484.18, 383.417, 68.4827, 0.2712 ) }
    dend_19 { pt3dadd( 483.819, 382.363, 69.0572, 0.2684 ) }
    dend_19 { pt3dadd( 483.915, 381.257, 69.6063, 0.2626 ) }
    dend_19 { pt3dadd( 484.1, 380.142, 70.119, 0.2542 ) }
    dend_19 { pt3dadd( 483.888, 379.114, 70.677, 0.2288 ) }
    dend_19 { pt3dadd( 484.141, 378.092, 71.96, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 88/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 425.391, 399.038, 48.6842, 0.8452 ) }
    dend_15 { pt3dadd( 425.431, 398.158, 48.8124, 0.678 ) }
    dend_15 { pt3dadd( 425.623, 397.037, 48.8278, 0.5388 ) }
    dend_15 { pt3dadd( 425.956, 395.945, 48.8916, 0.3674 ) }
    dend_15 { pt3dadd( 426.426, 394.925, 49.0372, 0.315 ) }
    dend_15 { pt3dadd( 427.008, 393.941, 49.1747, 0.3022 ) }
    dend_15 { pt3dadd( 427.716, 393.053, 49.56, 0.3268 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 95/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 425.391, 399.038, 48.6842, 0.8452 ) }
    dend_12 { pt3dadd( 425.882, 398.334, 47.2312, 0.2288 ) }
    dend_12 { pt3dadd( 426.603, 397.495, 46.6262, 0.3794 ) }
    dend_12 { pt3dadd( 427.402, 396.759, 45.8122, 0.345 ) }
    dend_12 { pt3dadd( 428.221, 396.128, 44.7908, 0.3206 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 428.741, 395.873, 43.4672, 0.3134 ) }
    dend_12 { pt3dadd( 428.533, 395.6, 41.8838, 0.3422 ) }
    dend_12 { pt3dadd( 428.029, 394.988, 40.2256, 0.4206 ) }
    dend_12 { pt3dadd( 427.524, 394.157, 38.6355, 0.4464 ) }
    dend_12 { pt3dadd( 426.639, 393.743, 37.2022, 0.3858 ) }
    dend_12 { pt3dadd( 426.069, 394.448, 35.868, 0.3436 ) }
    dend_12 { pt3dadd( 426.233, 395.371, 34.6175, 0.381 ) }
    dend_12 { pt3dadd( 426.839, 396.286, 33.57, 0.3476 ) }
    dend_12 { pt3dadd( 427.173, 397.304, 32.6449, 0.3268 ) }
    dend_12 { pt3dadd( 426.21, 397.661, 31.8136, 0.3188 ) }
    dend_12 { pt3dadd( 425.147, 397.809, 31.0808, 0.3818 ) }
    dend_12 { pt3dadd( 424.076, 398.207, 30.1328, 0.3496 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 12/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 386.546, 415.158, 58.8311, 0.7266 ) }
    dend_4 { pt3dadd( 385.495, 415.358, 58.3058, 0.2288 ) }
    dend_4 { pt3dadd( 384.46, 415.723, 58.0941, 0.3476 ) }
    dend_4 { pt3dadd( 383.335, 415.676, 57.8152, 0.436 ) }
    dend_4 { pt3dadd( 382.285, 415.668, 57.3905, 0.4466 ) }
    dend_4 { pt3dadd( 381.237, 415.86, 56.9316, 0.5262 ) }
    dend_4 { pt3dadd( 380.129, 416.141, 56.5524, 0.6106 ) }
    dend_4 { pt3dadd( 379.049, 416.447, 56.1845, 0.6164 ) }
    dend_4 { pt3dadd( 377.972, 416.687, 55.8032, 0.4442 ) }
    dend_4 { pt3dadd( 376.86, 416.864, 55.4781, 0.3254 ) }
    dend_4 { pt3dadd( 375.883, 417.363, 55.2558, 0.2746 ) }
    dend_4 { pt3dadd( 375.249, 418.293, 55.125, 0.2746 ) }
    dend_4 { pt3dadd( 374.818, 419.348, 55.0614, 0.2746 ) }
    dend_4 { pt3dadd( 374.093, 420.14, 55.1082, 0.2746 ) }
    dend_4 { pt3dadd( 373.322, 420.922, 55.0852, 0.2746 ) }
    dend_4 { pt3dadd( 372.491, 421.678, 54.9746, 0.2746 ) }
    dend_4 { pt3dadd( 371.865, 422.608, 54.8111, 0.2746 ) }
    dend_4 { pt3dadd( 371.142, 423.481, 54.6277, 0.2746 ) }
    dend_4 { pt3dadd( 370.292, 424.244, 54.4841, 0.2746 ) }
    dend_4 { pt3dadd( 369.291, 424.774, 54.3558, 0.2746 ) }
    dend_4 { pt3dadd( 368.286, 425.318, 54.2934, 0.2746 ) }
    dend_4 { pt3dadd( 367.301, 425.899, 54.3105, 0.2746 ) }
    dend_4 { pt3dadd( 366.328, 426.498, 54.3962, 0.2746 ) }
    dend_4 { pt3dadd( 365.417, 427.174, 54.5577, 0.2746 ) }
    dend_4 { pt3dadd( 364.365, 427.581, 54.7812, 0.2746 ) }
    dend_4 { pt3dadd( 363.249, 427.8, 55.0315, 0.2746 ) }
    dend_4 { pt3dadd( 362.149, 428.097, 55.2824, 0.2746 ) }
    dend_4 { pt3dadd( 361.104, 428.52, 55.5548, 0.2746 ) }
    dend_4 { pt3dadd( 360.081, 429.03, 55.7572, 0.2746 ) }
    dend_4 { pt3dadd( 358.978, 429.303, 55.9591, 0.2746 ) }
    dend_4 { pt3dadd( 357.848, 429.469, 56.1282, 0.2746 ) }
    dend_4 { pt3dadd( 356.814, 429.915, 56.187, 0.2746 ) }
    dend_4 { pt3dadd( 356.521, 429.75, 56.3993, 0.2746 ) }
    dend_4 { pt3dadd( 356.013, 429.572, 56.6756, 0.2746 ) }
    dend_4 { pt3dadd( 355.671, 429.572, 56.756, 0.2746 ) }
    dend_4 { pt3dadd( 355.441, 429.572, 56.8089, 0.2746 ) }
    dend_4 { pt3dadd( 354.831, 429.381, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 354.475, 429.05, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 354.182, 429.0, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 353.839, 429.0, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 353.61, 429.0, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 352.81, 429.0, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 352.466, 429.0, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 352.123, 429.0, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 351.818, 428.962, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 351.438, 428.428, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 351.106, 428.415, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 350.293, 428.314, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 349.492, 428.314, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 348.691, 428.314, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 347.891, 428.314, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 347.547, 428.314, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 347.217, 428.301, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 346.975, 428.199, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 346.848, 427.983, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 346.404, 427.856, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 346.098, 427.818, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 345.259, 427.742, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 344.458, 427.742, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 343.658, 427.742, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 343.314, 427.742, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 342.984, 427.729, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 342.564, 427.462, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 342.208, 426.789, 56.84, 0.2746 ) }
    dend_4 { pt3dadd( 341.725, 426.471, 56.84, 0.2744 ) }
    dend_4 { pt3dadd( 341.37, 426.14, 56.84, 0.2742 ) }
    dend_4 { pt3dadd( 341.026, 426.14, 56.84, 0.2736 ) }
    dend_4 { pt3dadd( 340.684, 426.14, 56.84, 0.2728 ) }
    dend_4 { pt3dadd( 340.454, 426.14, 56.84, 0.2712 ) }
    dend_4 { pt3dadd( 339.781, 426.013, 56.84, 0.2684 ) }
    dend_4 { pt3dadd( 339.197, 425.797, 56.84, 0.2626 ) }
    dend_4 { pt3dadd( 338.395, 425.797, 56.84, 0.2542 ) }
    dend_4 { pt3dadd( 337.594, 425.797, 56.84, 0.2288 ) }
    dend_4 { pt3dadd( 337.137, 425.568, 56.84, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 86/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 386.546, 415.158, 58.8311, 0.7266 ) }
    dend_3 { pt3dadd( 385.116, 414.332, 58.9904, 0.47 ) }
    dend_3 { pt3dadd( 384.106, 413.878, 59.1139, 0.3262 ) }
    dend_3 { pt3dadd( 383.116, 413.329, 59.2477, 0.2762 ) }
    dend_3 { pt3dadd( 382.185, 412.689, 59.383, 0.2776 ) }
    dend_3 { pt3dadd( 381.216, 412.111, 59.4804, 0.28 ) }
    dend_3 { pt3dadd( 380.375, 411.338, 59.5361, 0.2846 ) }
    dend_3 { pt3dadd( 379.498, 410.604, 59.5703, 0.293 ) }
    dend_3 { pt3dadd( 378.643, 409.852, 59.6072, 0.3088 ) }
    dend_3 { pt3dadd( 377.916, 408.974, 59.6635, 0.3386 ) }
    dend_3 { pt3dadd( 377.279, 408.025, 59.7162, 0.3906 ) }
    dend_3 { pt3dadd( 376.72, 407.034, 59.7892, 0.5036 ) }
    dend_3 { pt3dadd( 376.167, 406.07, 59.927, 0.6308 ) }
    dend_3 { pt3dadd( 375.361, 405.344, 60.0474, 0.5814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_3 { pt3dadd( 374.474, 404.671, 60.0732, 0.7292 ) }
    dend_3 { pt3dadd( 373.761, 403.791, 60.039, 0.5272 ) }
    dend_3 { pt3dadd( 373.046, 402.921, 59.9368, 0.4056 ) }
    dend_3 { pt3dadd( 372.197, 402.176, 59.8153, 0.3238 ) }
    dend_3 { pt3dadd( 371.291, 401.48, 59.7349, 0.3912 ) }
    dend_3 { pt3dadd( 370.44, 400.734, 59.7582, 0.3668 ) }
    dend_3 { pt3dadd( 369.536, 400.119, 59.913, 0.3628 ) }
    dend_3 { pt3dadd( 368.643, 399.473, 60.1398, 0.3816 ) }
    dend_3 { pt3dadd( 367.897, 398.629, 60.3098, 0.519 ) }
    dend_3 { pt3dadd( 367.326, 397.651, 60.4206, 0.505 ) }
    dend_3 { pt3dadd( 366.634, 396.83, 60.3862, 0.4096 ) }
    dend_3 { pt3dadd( 366.025, 396.094, 60.1185, 0.3406 ) }
    dend_3 { pt3dadd( 365.017, 395.888, 59.8769, 0.3754 ) }
    dend_3 { pt3dadd( 363.893, 395.696, 59.7584, 0.338 ) }
    dend_3 { pt3dadd( 362.893, 395.159, 59.724, 0.3076 ) }
    dend_3 { pt3dadd( 362.302, 394.34, 59.9866, 0.288 ) }
    dend_3 { pt3dadd( 361.809, 393.717, 60.5674, 0.3006 ) }
    dend_3 { pt3dadd( 360.837, 393.224, 61.1727, 0.3178 ) }
    dend_3 { pt3dadd( 360.056, 392.449, 61.5496, 0.3802 ) }
    dend_3 { pt3dadd( 359.667, 391.539, 61.6549, 0.3464 ) }
    dend_3 { pt3dadd( 358.79, 390.846, 61.7884, 0.3242 ) }
    dend_3 { pt3dadd( 357.746, 390.434, 61.9086, 0.3142 ) }
    dend_3 { pt3dadd( 356.625, 390.228, 61.9909, 0.3734 ) }
    dend_3 { pt3dadd( 355.579, 389.805, 62.1214, 0.3338 ) }
    dend_3 { pt3dadd( 354.661, 389.181, 62.3126, 0.3002 ) }
    dend_3 { pt3dadd( 353.725, 388.561, 62.41, 0.2748 ) }
    dend_3 { pt3dadd( 352.697, 388.083, 62.4596, 0.2748 ) }
    dend_3 { pt3dadd( 351.718, 387.509, 62.5344, 0.2752 ) }
    dend_3 { pt3dadd( 350.813, 386.814, 62.5887, 0.2758 ) }
    dend_3 { pt3dadd( 349.971, 386.058, 62.6366, 0.2766 ) }
    dend_3 { pt3dadd( 349.13, 385.304, 62.7497, 0.2784 ) }
    dend_3 { pt3dadd( 348.138, 384.746, 62.902, 0.2816 ) }
    dend_3 { pt3dadd( 347.138, 384.204, 63.0725, 0.2876 ) }
    dend_3 { pt3dadd( 346.391, 383.416, 63.3058, 0.2998 ) }
    dend_3 { pt3dadd( 345.82, 382.496, 63.6278, 0.316 ) }
    dend_3 { pt3dadd( 344.953, 381.799, 63.9145, 0.377 ) }
    dend_3 { pt3dadd( 343.91, 381.389, 64.0959, 0.3406 ) }
    dend_3 { pt3dadd( 342.787, 381.299, 64.2743, 0.3124 ) }
    dend_3 { pt3dadd( 341.671, 381.367, 64.4823, 0.2986 ) }
    dend_3 { pt3dadd( 340.556, 381.277, 64.6895, 0.314 ) }
    dend_3 { pt3dadd( 339.572, 381.508, 64.6859, 0.3732 ) }
    dend_3 { pt3dadd( 338.474, 381.674, 64.696, 0.3336 ) }
    dend_3 { pt3dadd( 337.332, 381.7, 64.7035, 0.2994 ) }
    dend_3 { pt3dadd( 336.212, 381.488, 64.6892, 0.2736 ) }
    dend_3 { pt3dadd( 335.116, 381.166, 64.6486, 0.2728 ) }
    dend_3 { pt3dadd( 333.994, 380.952, 64.6209, 0.2712 ) }
    dend_3 { pt3dadd( 332.899, 380.655, 64.6657, 0.2684 ) }
    dend_3 { pt3dadd( 331.958, 380.039, 64.7598, 0.2626 ) }
    dend_3 { pt3dadd( 330.987, 379.562, 64.7069, 0.2542 ) }
    dend_3 { pt3dadd( 330.078, 378.865, 64.6624, 0.2288 ) }
    dend_3 { pt3dadd( 329.243, 378.092, 64.68, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 51/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 390.745, 410.27, 48.274, 0.54 ) }
    apic_16 { pt3dadd( 390.604, 411.339, 47.8495, 0.6864 ) }
    apic_16 { pt3dadd( 390.555, 412.46, 47.6493, 0.602 ) }
    apic_16 { pt3dadd( 390.495, 413.567, 47.3693, 0.6582 ) }
    apic_16 { pt3dadd( 390.231, 414.669, 47.0826, 0.698 ) }
    apic_16 { pt3dadd( 389.994, 415.788, 46.8524, 0.6264 ) }
    apic_16 { pt3dadd( 390.046, 416.919, 46.7256, 0.7416 ) }
    apic_16 { pt3dadd( 390.033, 418.046, 46.6858, 0.6678 ) }
    apic_16 { pt3dadd( 389.732, 419.146, 46.6004, 0.7806 ) }
    apic_16 { pt3dadd( 389.272, 420.165, 46.4086, 0.9222 ) }
    apic_16 { pt3dadd( 388.806, 421.203, 46.1639, 0.8282 ) }
    apic_16 { pt3dadd( 388.378, 422.183, 45.7668, 0.7812 ) }
    apic_16 { pt3dadd( 388.037, 423.273, 45.3891, 0.7642 ) }
    apic_16 { pt3dadd( 387.387, 424.215, 45.0542, 0.6194 ) }
    apic_16 { pt3dadd( 386.733, 425.125, 44.6916, 0.4432 ) }
    apic_16 { pt3dadd( 386.025, 426.011, 44.336, 0.3558 ) }
    apic_16 { pt3dadd( 385.283, 426.881, 44.0244, 0.4048 ) }
    apic_16 { pt3dadd( 384.774, 427.906, 43.741, 0.3866 ) }
    apic_16 { pt3dadd( 384.567, 429.027, 43.426, 0.423 ) }
    apic_16 { pt3dadd( 384.266, 430.069, 42.996, 0.38 ) }
    apic_16 { pt3dadd( 383.685, 430.93, 42.4586, 0.38 ) }
    apic_16 { pt3dadd( 382.751, 431.474, 41.8933, 0.4496 ) }
    apic_16 { pt3dadd( 381.803, 432.113, 41.4436, 0.471 ) }
    apic_16 { pt3dadd( 381.047, 432.971, 40.8422, 0.5726 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 75/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 390.745, 410.27, 48.274, 0.54 ) }
    apic_15 { pt3dadd( 390.129, 410.815, 46.1756, 0.5524 ) }
    apic_15 { pt3dadd( 389.546, 411.509, 45.2586, 0.4578 ) }
    apic_15 { pt3dadd( 389.199, 412.473, 44.2842, 0.393 ) }
    apic_15 { pt3dadd( 388.921, 413.541, 43.3577, 0.4252 ) }
    apic_15 { pt3dadd( 388.647, 414.621, 42.5048, 0.4328 ) }
    apic_15 { pt3dadd( 388.755, 415.669, 41.7007, 0.4674 ) }
    apic_15 { pt3dadd( 389.395, 416.55, 41.011, 0.6636 ) }
    apic_15 { pt3dadd( 390.098, 417.436, 40.4138, 0.6154 ) }
    apic_15 { pt3dadd( 390.296, 418.492, 39.8261, 0.6928 ) }
    apic_15 { pt3dadd( 390.062, 419.562, 39.2174, 0.716 ) }
    apic_15 { pt3dadd( 389.856, 420.659, 38.6154, 0.6552 ) }
    apic_15 { pt3dadd( 389.968, 421.76, 38.0148, 0.8162 ) }
    apic_15 { pt3dadd( 390.327, 422.785, 37.371, 0.7034 ) }
    apic_15 { pt3dadd( 390.835, 423.776, 36.7287, 0.6596 ) }
    apic_15 { pt3dadd( 391.326, 424.806, 36.171, 0.462 ) }
    apic_15 { pt3dadd( 391.376, 425.928, 35.6672, 0.4316 ) }
    apic_15 { pt3dadd( 391.089, 426.879, 35.03, 0.347 ) }
    apic_15 { pt3dadd( 390.8, 427.734, 34.2395, 0.3254 ) }
    apic_15 { pt3dadd( 390.452, 428.708, 33.4359, 0.3164 ) }
    apic_15 { pt3dadd( 390.359, 429.834, 32.7664, 0.378 ) }
    apic_15 { pt3dadd( 390.543, 430.961, 32.2686, 0.342 ) }
    apic_15 { pt3dadd( 390.805, 432.074, 31.9057, 0.3152 ) }
    apic_15 { pt3dadd( 391.164, 433.156, 31.628, 0.303 ) }
    apic_15 { pt3dadd( 391.412, 434.26, 31.3701, 0.328 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_15 { pt3dadd( 391.487, 435.384, 31.0912, 0.3684 ) }
    apic_15 { pt3dadd( 391.585, 436.517, 30.8076, 0.4754 ) }
    apic_15 { pt3dadd( 391.755, 437.621, 30.4777, 0.5166 ) }
    apic_15 { pt3dadd( 391.74, 438.749, 30.1462, 0.669 ) }
    apic_15 { pt3dadd( 391.517, 439.846, 29.9681, 0.8126 ) }
    apic_15 { pt3dadd( 391.305, 440.962, 29.8768, 0.6082 ) }
    apic_15 { pt3dadd( 391.38, 442.074, 29.7046, 0.4562 ) }
    apic_15 { pt3dadd( 391.317, 443.155, 29.4241, 0.4432 ) }
    apic_15 { pt3dadd( 390.861, 444.2, 29.1819, 0.4894 ) }
    apic_15 { pt3dadd( 390.599, 445.302, 29.036, 0.461 ) }
    apic_15 { pt3dadd( 390.533, 446.407, 28.7955, 0.5038 ) }
    apic_15 { pt3dadd( 390.342, 447.53, 28.5656, 0.5794 ) }
    apic_15 { pt3dadd( 389.837, 448.554, 28.4178, 0.5086 ) }
    apic_15 { pt3dadd( 389.613, 449.677, 28.296, 0.484 ) }
    apic_15 { pt3dadd( 389.348, 450.789, 28.1649, 0.61 ) }
    apic_15 { pt3dadd( 389.259, 451.927, 27.9966, 0.695 ) }
    apic_15 { pt3dadd( 389.533, 452.993, 27.7298, 0.6582 ) }
    apic_15 { pt3dadd( 389.953, 454.041, 27.4252, 0.6206 ) }
    apic_15 { pt3dadd( 390.096, 455.175, 27.1306, 0.631 ) }
    apic_15 { pt3dadd( 390.072, 456.31, 26.9206, 0.7162 ) }
    apic_15 { pt3dadd( 389.874, 457.415, 26.6454, 0.786 ) }
    apic_15 { pt3dadd( 389.61, 458.515, 26.4578, 0.6548 ) }
    apic_15 { pt3dadd( 389.224, 459.866, 26.1498, 0.5328 ) }
    apic_15 { pt3dadd( 388.868, 460.91, 25.7471, 0.4046 ) }
    apic_15 { pt3dadd( 388.886, 462.023, 25.3218, 0.3786 ) }
    apic_15 { pt3dadd( 389.225, 463.098, 24.8965, 0.4454 ) }
    apic_15 { pt3dadd( 389.638, 464.116, 24.4426, 0.4714 ) }
    apic_15 { pt3dadd( 389.914, 465.186, 23.9837, 0.5354 ) }
    apic_15 { pt3dadd( 389.777, 466.304, 23.6376, 0.8046 ) }
    apic_15 { pt3dadd( 389.839, 467.433, 23.443, 0.8024 ) }
    apic_15 { pt3dadd( 389.969, 468.558, 23.282, 0.7176 ) }
    apic_15 { pt3dadd( 389.81, 469.681, 23.161, 0.4924 ) }
    apic_15 { pt3dadd( 389.77, 470.817, 23.0762, 0.4046 ) }
    apic_15 { pt3dadd( 390.003, 471.918, 23.0009, 0.4722 ) }
    apic_15 { pt3dadd( 390.07, 473.041, 23.0532, 0.3934 ) }
    apic_15 { pt3dadd( 389.374, 473.871, 23.2646, 0.3254 ) }
    apic_15 { pt3dadd( 388.658, 474.75, 23.5189, 0.2746 ) }
    apic_15 { pt3dadd( 388.585, 475.883, 23.7871, 0.2746 ) }
    apic_15 { pt3dadd( 388.177, 476.912, 24.1273, 0.2746 ) }
    apic_15 { pt3dadd( 387.671, 477.911, 24.4703, 0.2746 ) }
    apic_15 { pt3dadd( 387.388, 479.014, 24.7391, 0.2748 ) }
    apic_15 { pt3dadd( 387.262, 480.148, 24.9015, 0.2748 ) }
    apic_15 { pt3dadd( 387.275, 481.283, 24.9878, 0.275 ) }
    apic_15 { pt3dadd( 387.583, 482.381, 25.058, 0.2754 ) }
    apic_15 { pt3dadd( 388.046, 483.422, 25.13, 0.2764 ) }
    apic_15 { pt3dadd( 388.622, 484.41, 25.1938, 0.278 ) }
    apic_15 { pt3dadd( 389.166, 485.404, 25.2616, 0.281 ) }
    apic_15 { pt3dadd( 389.419, 486.517, 25.356, 0.2864 ) }
    apic_15 { pt3dadd( 389.745, 487.596, 25.4456, 0.2966 ) }
    apic_15 { pt3dadd( 390.379, 488.544, 25.487, 0.3164 ) }
    apic_15 { pt3dadd( 390.925, 489.54, 25.5122, 0.3466 ) }
    apic_15 { pt3dadd( 391.243, 490.636, 25.5595, 0.4356 ) }
    apic_15 { pt3dadd( 391.41, 491.762, 25.6505, 0.4396 ) }
    apic_15 { pt3dadd( 391.4, 492.893, 25.793, 0.5418 ) }
    apic_15 { pt3dadd( 391.182, 494.007, 25.9599, 0.5006 ) }
    apic_15 { pt3dadd( 390.888, 495.103, 26.101, 0.4004 ) }
    apic_15 { pt3dadd( 390.871, 496.237, 26.241, 0.329 ) }
    apic_15 { pt3dadd( 390.835, 497.343, 26.4264, 0.329 ) }
    apic_15 { pt3dadd( 390.447, 498.406, 26.5563, 0.3722 ) }
    apic_15 { pt3dadd( 389.849, 499.371, 26.595, 0.4704 ) }
    apic_15 { pt3dadd( 389.221, 500.32, 26.6288, 0.566 ) }
    apic_15 { pt3dadd( 388.61, 501.264, 26.7126, 0.477 ) }
    apic_15 { pt3dadd( 388.093, 502.267, 26.761, 0.4604 ) }
    apic_15 { pt3dadd( 387.845, 503.366, 26.705, 0.3956 ) }
    apic_15 { pt3dadd( 387.741, 504.495, 26.6288, 0.4396 ) }
    apic_15 { pt3dadd( 387.6, 505.612, 26.5832, 0.4126 ) }
    apic_15 { pt3dadd( 387.675, 506.737, 26.4608, 0.43 ) }
    apic_15 { pt3dadd( 388.0, 507.827, 26.292, 0.592 ) }
    apic_15 { pt3dadd( 388.391, 508.899, 26.1145, 0.492 ) }
    apic_15 { pt3dadd( 388.803, 509.952, 25.907, 0.4196 ) }
    apic_15 { pt3dadd( 389.217, 511.001, 25.6771, 0.4224 ) }
    apic_15 { pt3dadd( 389.576, 512.086, 25.4906, 0.45 ) }
    apic_15 { pt3dadd( 389.995, 513.14, 25.3663, 0.3912 ) }
    apic_15 { pt3dadd( 390.629, 514.092, 25.2921, 0.3592 ) }
    apic_15 { pt3dadd( 391.211, 515.076, 25.258, 0.3836 ) }
    apic_15 { pt3dadd( 391.86, 515.985, 25.2568, 0.4808 ) }
    apic_15 { pt3dadd( 392.777, 516.667, 25.2753, 0.639 ) }
    apic_15 { pt3dadd( 393.606, 517.452, 25.3014, 1.0376 ) }
    apic_15 { pt3dadd( 394.384, 518.285, 25.3408, 1.2654 ) }
    apic_15 { pt3dadd( 395.298, 518.948, 25.4164, 1.4234 ) }
    apic_15 { pt3dadd( 396.328, 519.408, 25.5088, 1.1704 ) }
    apic_15 { pt3dadd( 397.392, 519.798, 25.5273, 1.0614 ) }
    apic_15 { pt3dadd( 398.495, 520.037, 25.5088, 0.9428 ) }
    apic_15 { pt3dadd( 399.639, 520.054, 25.5063, 1.004 ) }
    apic_15 { pt3dadd( 400.781, 520.018, 25.5293, 0.8978 ) }
    apic_15 { pt3dadd( 401.91, 519.917, 25.6066, 0.6214 ) }
    apic_15 { pt3dadd( 403.017, 519.906, 25.751, 0.4958 ) }
    apic_15 { pt3dadd( 404.132, 520.135, 25.8958, 0.4446 ) }
    apic_15 { pt3dadd( 405.223, 520.417, 26.0016, 0.3826 ) }
    apic_15 { pt3dadd( 406.184, 520.991, 26.1251, 0.3378 ) }
    apic_15 { pt3dadd( 407.11, 521.537, 26.0806, 0.37 ) }
    apic_15 { pt3dadd( 407.861, 522.083, 25.7821, 0.3276 ) }
    apic_15 { pt3dadd( 408.41, 523.014, 25.6365, 0.288 ) }
    apic_15 { pt3dadd( 408.914, 524.038, 25.5394, 0.2542 ) }
    apic_15 { pt3dadd( 409.147, 525.156, 25.487, 0.2288 ) }
    apic_15 { pt3dadd( 408.866, 526.24, 25.76, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_3 (entry count 96/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 379.647, 398.557, 45.3474, 0.9152 ) }
    apic_13 { pt3dadd( 379.044, 397.085, 44.2047, 0.6864 ) }
    apic_13 { pt3dadd( 379.204, 396.029, 43.7004, 0.6864 ) }
    apic_13 { pt3dadd( 379.772, 395.158, 43.0749, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_13 { pt3dadd( 380.582, 394.601, 42.3125, 0.6864 ) }
    apic_13 { pt3dadd( 381.399, 394.172, 41.3879, 0.6864 ) }
    apic_13 { pt3dadd( 382.354, 393.71, 40.4902, 0.6864 ) }
    apic_13 { pt3dadd( 383.431, 393.349, 39.7264, 0.6864 ) }
    apic_13 { pt3dadd( 384.46, 392.949, 39.0356, 0.6864 ) }
    apic_13 { pt3dadd( 385.4, 392.446, 38.3468, 0.6864 ) }
    apic_13 { pt3dadd( 386.379, 391.949, 37.7224, 0.6864 ) }
    apic_13 { pt3dadd( 387.401, 391.444, 37.2072, 0.6864 ) }
    apic_13 { pt3dadd( 388.395, 390.901, 36.7324, 0.6864 ) }
    apic_13 { pt3dadd( 389.294, 390.234, 36.2676, 0.6864 ) }
    apic_13 { pt3dadd( 389.987, 389.364, 35.8193, 0.6864 ) }
    apic_13 { pt3dadd( 390.578, 388.403, 35.3909, 0.6864 ) }
    apic_13 { pt3dadd( 391.361, 387.616, 34.9723, 0.6864 ) }
    apic_13 { pt3dadd( 392.337, 387.056, 34.5512, 0.6864 ) }
    apic_13 { pt3dadd( 393.345, 386.53, 34.1606, 0.6864 ) }
    apic_13 { pt3dadd( 394.33, 385.95, 33.815, 0.6864 ) }
    apic_13 { pt3dadd( 395.349, 385.462, 33.467, 0.6864 ) }
    apic_13 { pt3dadd( 396.322, 384.964, 33.047, 0.6864 ) }
    apic_13 { pt3dadd( 397.248, 384.379, 32.5665, 0.6864 ) }
    apic_13 { pt3dadd( 398.149, 383.699, 32.1135, 0.6864 ) }
    apic_13 { pt3dadd( 399.022, 382.96, 31.7173, 0.6864 ) }
    apic_13 { pt3dadd( 399.819, 382.144, 31.3547, 0.6864 ) }
    apic_13 { pt3dadd( 400.234, 381.147, 30.9554, 0.6864 ) }
    apic_13 { pt3dadd( 400.355, 380.127, 30.438, 0.6864 ) }
    apic_13 { pt3dadd( 400.839, 379.181, 29.8995, 0.6864 ) }
    apic_13 { pt3dadd( 401.547, 378.291, 29.4546, 0.6864 ) }
    apic_13 { pt3dadd( 402.488, 377.677, 29.0511, 0.6864 ) }
    apic_13 { pt3dadd( 403.557, 377.833, 28.6443, 0.6864 ) }
    apic_13 { pt3dadd( 404.576, 378.305, 28.2472, 0.6864 ) }
    apic_13 { pt3dadd( 405.671, 378.234, 27.8544, 0.4708 ) }
    apic_13 { pt3dadd( 406.633, 377.676, 27.4621, 0.5354 ) }
    apic_13 { pt3dadd( 407.576, 377.053, 27.0931, 0.5718 ) }
    apic_13 { pt3dadd( 408.378, 376.244, 26.8064, 0.586 ) }
    apic_13 { pt3dadd( 409.013, 375.297, 26.6381, 0.642 ) }
    apic_13 { pt3dadd( 409.688, 374.388, 26.5922, 0.6022 ) }
    apic_13 { pt3dadd( 410.365, 373.47, 26.542, 0.5384 ) }
    apic_13 { pt3dadd( 411.08, 372.588, 26.458, 0.6016 ) }
    apic_13 { pt3dadd( 411.841, 371.735, 26.3693, 0.7538 ) }
    apic_13 { pt3dadd( 412.524, 370.817, 26.2777, 0.864 ) }
    apic_13 { pt3dadd( 413.151, 369.861, 26.1755, 0.9896 ) }
    apic_13 { pt3dadd( 413.967, 369.06, 26.0604, 0.9168 ) }
    apic_13 { pt3dadd( 414.977, 368.526, 25.933, 0.6642 ) }
    apic_13 { pt3dadd( 416.059, 368.159, 25.779, 0.5384 ) }
    apic_13 { pt3dadd( 417.074, 367.636, 25.5724, 0.7032 ) }
    apic_13 { pt3dadd( 417.943, 366.957, 25.2409, 0.6758 ) }
    apic_13 { pt3dadd( 418.38, 365.966, 24.8046, 0.8682 ) }
    apic_13 { pt3dadd( 418.427, 364.927, 24.2659, 0.7328 ) }
    apic_13 { pt3dadd( 418.228, 363.811, 23.7958, 0.8116 ) }
    apic_13 { pt3dadd( 418.322, 362.672, 23.4713, 0.9572 ) }
    apic_13 { pt3dadd( 418.762, 361.618, 23.2722, 0.771 ) }
    apic_13 { pt3dadd( 419.215, 360.593, 23.1179, 0.5818 ) }
    apic_13 { pt3dadd( 420.068, 359.832, 23.0798, 0.3898 ) }
    apic_13 { pt3dadd( 421.197, 359.678, 23.1599, 0.4068 ) }
    apic_13 { pt3dadd( 422.136, 359.674, 24.08, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 54/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 379.647, 398.557, 45.3474, 0.9152 ) }
    apic_4 { pt3dadd( 379.236, 398.287, 46.4797, 0.3666 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 56/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 427.716, 393.053, 49.56, 0.3268 ) }
    dend_17 { pt3dadd( 428.095, 392.564, 48.2042, 0.3682 ) }
    dend_17 { pt3dadd( 428.733, 391.73, 47.6378, 0.4628 ) }
    dend_17 { pt3dadd( 429.323, 390.9, 46.9644, 0.551 ) }
    dend_17 { pt3dadd( 429.764, 390.575, 46.0944, 0.4542 ) }
    dend_17 { pt3dadd( 430.024, 389.654, 45.3457, 0.392 ) }
    dend_17 { pt3dadd( 430.197, 389.032, 45.1777, 0.3946 ) }
    dend_17 { pt3dadd( 430.875, 388.113, 45.1791, 0.5142 ) }
    dend_17 { pt3dadd( 431.51, 387.181, 45.2152, 0.6362 ) }
    dend_17 { pt3dadd( 431.866, 386.094, 45.3331, 0.6588 ) }
    dend_17 { pt3dadd( 432.24, 385.016, 45.5031, 0.548 ) }
    dend_17 { pt3dadd( 432.434, 383.919, 45.7229, 0.394 ) }
    dend_17 { pt3dadd( 432.586, 382.888, 46.009, 0.3174 ) }
    dend_17 { pt3dadd( 432.49, 381.75, 46.2218, 0.3066 ) }
    dend_17 { pt3dadd( 432.283, 380.656, 46.3316, 0.3358 ) }
    dend_17 { pt3dadd( 432.392, 379.631, 46.2011, 0.3778 ) }
    dend_17 { pt3dadd( 432.62, 378.548, 46.0547, 0.518 ) }
    dend_17 { pt3dadd( 433.081, 377.554, 45.9693, 0.4722 ) }
    dend_17 { pt3dadd( 433.542, 376.519, 45.8139, 0.4992 ) }
    dend_17 { pt3dadd( 434.133, 375.555, 45.6106, 0.4646 ) }
    dend_17 { pt3dadd( 434.677, 374.607, 45.3275, 0.5832 ) }
    dend_17 { pt3dadd( 435.294, 373.729, 45.0352, 0.6026 ) }
    dend_17 { pt3dadd( 436.119, 372.971, 44.8515, 0.4656 ) }
    dend_17 { pt3dadd( 436.921, 372.188, 44.7227, 0.3666 ) }
    dend_17 { pt3dadd( 437.357, 371.189, 44.5418, 0.3454 ) }
    dend_17 { pt3dadd( 437.313, 370.107, 44.2588, 0.4324 ) }
    dend_17 { pt3dadd( 437.232, 368.998, 43.9239, 0.44 ) }
    dend_17 { pt3dadd( 437.688, 368.147, 43.484, 0.513 ) }
    dend_17 { pt3dadd( 437.855, 367.169, 43.073, 0.5912 ) }
    dend_17 { pt3dadd( 437.723, 366.036, 42.7403, 0.5558 ) }
    dend_17 { pt3dadd( 437.52, 364.912, 42.4861, 0.4506 ) }
    dend_17 { pt3dadd( 437.822, 363.874, 42.2167, 0.448 ) }
    dend_17 { pt3dadd( 438.245, 362.837, 41.9129, 0.4216 ) }
    dend_17 { pt3dadd( 438.674, 361.827, 41.5458, 0.478 ) }
    dend_17 { pt3dadd( 439.277, 360.89, 41.2947, 0.5318 ) }
    dend_17 { pt3dadd( 439.835, 359.897, 41.055, 0.4188 ) }
    dend_17 { pt3dadd( 439.966, 358.77, 40.85, 0.3258 ) }
    dend_17 { pt3dadd( 440.299, 357.833, 40.488, 0.2752 ) }
    dend_17 { pt3dadd( 441.052, 357.025, 40.1195, 0.2758 ) }
    dend_17 { pt3dadd( 441.354, 356.005, 39.9652, 0.2766 ) }
    dend_17 { pt3dadd( 441.322, 354.929, 39.7054, 0.2784 ) }
    dend_17 { pt3dadd( 441.161, 353.82, 39.5562, 0.2818 ) }
    dend_17 { pt3dadd( 441.46, 352.721, 39.4573, 0.2878 ) }
    dend_17 { pt3dadd( 441.494, 351.587, 39.3652, 0.3002 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( 441.605, 350.47, 39.2053, 0.3166 ) }
    dend_17 { pt3dadd( 441.717, 349.339, 39.0244, 0.3782 ) }
    dend_17 { pt3dadd( 441.697, 348.197, 38.8514, 0.3428 ) }
    dend_17 { pt3dadd( 441.647, 347.058, 38.6571, 0.3162 ) }
    dend_17 { pt3dadd( 441.553, 345.927, 38.442, 0.3056 ) }
    dend_17 { pt3dadd( 441.61, 344.816, 38.2071, 0.3268 ) }
    dend_17 { pt3dadd( 441.974, 343.754, 37.9907, 0.3982 ) }
    dend_17 { pt3dadd( 442.345, 342.683, 37.8314, 0.3744 ) }
    dend_17 { pt3dadd( 442.386, 341.562, 37.758, 0.4006 ) }
    dend_17 { pt3dadd( 442.227, 340.437, 37.7684, 0.3372 ) }
    dend_17 { pt3dadd( 442.069, 339.305, 37.7992, 0.3062 ) }
    dend_17 { pt3dadd( 441.943, 338.181, 37.8876, 0.286 ) }
    dend_17 { pt3dadd( 441.882, 337.056, 38.0302, 0.2958 ) }
    dend_17 { pt3dadd( 441.921, 335.916, 38.1511, 0.3148 ) }
    dend_17 { pt3dadd( 442.076, 334.797, 38.1951, 0.3438 ) }
    dend_17 { pt3dadd( 442.344, 333.7, 38.1937, 0.4294 ) }
    dend_17 { pt3dadd( 442.705, 332.62, 38.2346, 0.4344 ) }
    dend_17 { pt3dadd( 443.128, 331.567, 38.3312, 0.5026 ) }
    dend_17 { pt3dadd( 443.652, 330.578, 38.5025, 0.5722 ) }
    dend_17 { pt3dadd( 444.254, 329.625, 38.6932, 0.5194 ) }
    dend_17 { pt3dadd( 444.855, 328.653, 38.8511, 0.3882 ) }
    dend_17 { pt3dadd( 445.353, 327.629, 38.9676, 0.3068 ) }
    dend_17 { pt3dadd( 445.921, 326.649, 39.0701, 0.2872 ) }
    dend_17 { pt3dadd( 446.533, 325.696, 39.2104, 0.2978 ) }
    dend_17 { pt3dadd( 447.121, 324.723, 39.3467, 0.3184 ) }
    dend_17 { pt3dadd( 447.629, 323.708, 39.4923, 0.3518 ) }
    dend_17 { pt3dadd( 448.076, 322.666, 39.6819, 0.438 ) }
    dend_17 { pt3dadd( 448.628, 321.673, 39.8689, 0.4802 ) }
    dend_17 { pt3dadd( 449.301, 320.754, 40.0453, 0.4416 ) }
    dend_17 { pt3dadd( 449.999, 319.85, 40.1923, 0.4802 ) }
    dend_17 { pt3dadd( 450.608, 318.887, 40.3312, 0.4746 ) }
    dend_17 { pt3dadd( 451.033, 317.836, 40.4916, 0.61 ) }
    dend_17 { pt3dadd( 451.298, 316.728, 40.6622, 0.6112 ) }
    dend_17 { pt3dadd( 451.481, 315.601, 40.8436, 0.6822 ) }
    dend_17 { pt3dadd( 451.245, 314.539, 41.0679, 0.4798 ) }
    dend_17 { pt3dadd( 450.799, 313.495, 41.2712, 0.3542 ) }
    dend_17 { pt3dadd( 450.24, 312.505, 41.4498, 0.281 ) }
    dend_17 { pt3dadd( 450.222, 311.453, 41.6626, 0.2864 ) }
    dend_17 { pt3dadd( 450.434, 310.491, 42.0014, 0.2966 ) }
    dend_17 { pt3dadd( 450.568, 309.376, 42.2114, 0.3156 ) }
    dend_17 { pt3dadd( 450.675, 308.382, 42.1243, 0.3496 ) }
    dend_17 { pt3dadd( 450.272, 307.529, 41.8102, 0.4176 ) }
    dend_17 { pt3dadd( 450.233, 306.402, 41.62, 0.5208 ) }
    dend_17 { pt3dadd( 450.184, 305.267, 41.4898, 0.8232 ) }
    dend_17 { pt3dadd( 450.258, 304.13, 41.4005, 0.845 ) }
    dend_17 { pt3dadd( 450.365, 303.002, 41.4324, 0.7554 ) }
    dend_17 { pt3dadd( 450.293, 301.874, 41.5629, 0.762 ) }
    dend_17 { pt3dadd( 449.936, 300.853, 41.6237, 0.6242 ) }
    dend_17 { pt3dadd( 449.618, 299.797, 41.6634, 0.6384 ) }
    dend_17 { pt3dadd( 449.52, 298.706, 41.8208, 0.7268 ) }
    dend_17 { pt3dadd( 449.546, 297.634, 42.0414, 0.8194 ) }
    dend_17 { pt3dadd( 449.417, 296.547, 42.2542, 0.8816 ) }
    dend_17 { pt3dadd( 449.229, 295.474, 42.5645, 0.8408 ) }
    dend_17 { pt3dadd( 448.923, 294.503, 42.9551, 0.6064 ) }
    dend_17 { pt3dadd( 448.438, 293.571, 43.272, 0.4858 ) }
    dend_17 { pt3dadd( 447.916, 292.556, 43.4162, 0.5676 ) }
    dend_17 { pt3dadd( 447.288, 291.641, 43.3798, 0.6102 ) }
    dend_17 { pt3dadd( 446.716, 290.686, 43.2037, 0.5338 ) }
    dend_17 { pt3dadd( 446.046, 289.89, 42.28, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 59/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 427.716, 393.053, 49.56, 0.3268 ) }
    dend_16 { pt3dadd( 426.949, 392.116, 51.3117, 0.2288 ) }
    dend_16 { pt3dadd( 426.307, 391.335, 52.0587, 0.3048 ) }
    dend_16 { pt3dadd( 425.665, 390.552, 52.9046, 0.3302 ) }
    dend_16 { pt3dadd( 425.016, 389.712, 53.748, 0.3794 ) }
    dend_16 { pt3dadd( 424.218, 388.924, 54.4566, 0.4602 ) }
    dend_16 { pt3dadd( 423.451, 388.08, 54.9842, 0.662 ) }
    dend_16 { pt3dadd( 422.701, 387.242, 55.4039, 0.7824 ) }
    dend_16 { pt3dadd( 422.225, 386.23, 55.713, 0.8644 ) }
    dend_16 { pt3dadd( 421.507, 385.386, 55.9695, 0.7874 ) }
    dend_16 { pt3dadd( 420.725, 384.557, 56.1996, 0.6132 ) }
    dend_16 { pt3dadd( 419.961, 383.707, 56.4091, 0.6708 ) }
    dend_16 { pt3dadd( 419.332, 382.769, 56.6504, 0.5326 ) }
    dend_16 { pt3dadd( 418.904, 381.716, 56.8828, 0.5502 ) }
    dend_16 { pt3dadd( 418.497, 380.669, 57.1679, 0.3966 ) }
    dend_16 { pt3dadd( 417.84, 379.786, 57.5207, 0.3314 ) }
    dend_16 { pt3dadd( 417.047, 378.972, 57.8222, 0.2858 ) }
    dend_16 { pt3dadd( 416.482, 377.987, 58.0586, 0.295 ) }
    dend_16 { pt3dadd( 415.875, 377.043, 58.3402, 0.3132 ) }
    dend_16 { pt3dadd( 415.004, 376.341, 58.6681, 0.3422 ) }
    dend_16 { pt3dadd( 414.111, 375.638, 58.9949, 0.4204 ) }
    dend_16 { pt3dadd( 413.197, 374.962, 59.3219, 0.4464 ) }
    dend_16 { pt3dadd( 412.24, 374.341, 59.656, 0.3842 ) }
    dend_16 { pt3dadd( 411.344, 373.633, 59.9508, 0.3484 ) }
    dend_16 { pt3dadd( 410.472, 373.04, 60.3277, 0.3538 ) }
    dend_16 { pt3dadd( 409.645, 372.338, 60.7415, 0.4724 ) }
    dend_16 { pt3dadd( 408.985, 371.414, 61.1234, 0.3936 ) }
    dend_16 { pt3dadd( 408.813, 370.314, 61.4631, 0.3258 ) }
    dend_16 { pt3dadd( 408.766, 369.182, 61.808, 0.2754 ) }
    dend_16 { pt3dadd( 408.197, 368.244, 62.1477, 0.2762 ) }
    dend_16 { pt3dadd( 407.306, 367.568, 62.4921, 0.2776 ) }
    dend_16 { pt3dadd( 406.327, 367.088, 62.8936, 0.28 ) }
    dend_16 { pt3dadd( 405.665, 366.195, 63.2094, 0.285 ) }
    dend_16 { pt3dadd( 405.197, 365.155, 63.4645, 0.2938 ) }
    dend_16 { pt3dadd( 404.666, 364.155, 63.7339, 0.311 ) }
    dend_16 { pt3dadd( 403.983, 363.241, 63.9845, 0.3378 ) }
    dend_16 { pt3dadd( 403.178, 362.441, 64.2594, 0.412 ) }
    dend_16 { pt3dadd( 402.331, 361.678, 64.5484, 0.4308 ) }
    dend_16 { pt3dadd( 401.512, 360.903, 64.918, 0.356 ) }
    dend_16 { pt3dadd( 400.798, 360.029, 65.3307, 0.2938 ) }
    dend_16 { pt3dadd( 400.232, 359.049, 65.7527, 0.2626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_16 { pt3dadd( 399.52, 358.157, 66.1212, 0.2542 ) }
    dend_16 { pt3dadd( 398.876, 357.447, 66.6434, 0.2288 ) }
    dend_16 { pt3dadd( 398.341, 356.47, 67.76, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 3/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 424.076, 398.207, 30.1328, 0.3496 ) }
    dend_14 { pt3dadd( 423.147, 398.211, 28.6157, 0.4576 ) }
    dend_14 { pt3dadd( 422.155, 398.629, 27.9933, 0.4098 ) }
    dend_14 { pt3dadd( 421.304, 398.292, 27.1547, 0.3978 ) }
    dend_14 { pt3dadd( 421.27, 397.896, 26.0579, 0.435 ) }
    dend_14 { pt3dadd( 422.197, 398.042, 25.0354, 0.6738 ) }
    dend_14 { pt3dadd( 423.241, 398.383, 24.2298, 0.5192 ) }
    dend_14 { pt3dadd( 424.32, 398.585, 23.5771, 0.3894 ) }
    dend_14 { pt3dadd( 425.315, 399.027, 23.191, 0.3 ) }
    dend_14 { pt3dadd( 426.272, 399.567, 23.0026, 0.3164 ) }
    dend_14 { pt3dadd( 427.298, 399.397, 22.8766, 0.378 ) }
    dend_14 { pt3dadd( 428.318, 398.913, 22.794, 0.3422 ) }
    dend_14 { pt3dadd( 429.36, 398.452, 22.8119, 0.3156 ) }
    dend_14 { pt3dadd( 430.34, 397.883, 22.965, 0.3032 ) }
    dend_14 { pt3dadd( 431.348, 397.366, 23.1613, 0.3284 ) }
    dend_14 { pt3dadd( 432.362, 396.985, 23.5038, 0.3714 ) }
    dend_14 { pt3dadd( 433.22, 396.498, 24.0657, 0.4688 ) }
    dend_14 { pt3dadd( 433.469, 395.514, 24.6512, 0.5622 ) }
    dend_14 { pt3dadd( 433.083, 394.508, 25.2459, 0.4746 ) }
    dend_14 { pt3dadd( 432.951, 393.406, 25.7813, 0.4322 ) }
    dend_14 { pt3dadd( 433.443, 392.39, 26.2315, 0.4576 ) }
    dend_14 { pt3dadd( 433.471, 391.305, 26.6764, 0.6864 ) }
    dend_14 { pt3dadd( 432.891, 390.333, 27.44, 0.6864 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 26/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 424.076, 398.207, 30.1328, 0.3496 ) }
    dend_13 { pt3dadd( 423.878, 398.491, 31.0635, 0.3292 ) }
    dend_13 { pt3dadd( 423.798, 399.162, 31.579, 0.3278 ) }
    dend_13 { pt3dadd( 424.529, 399.714, 32.0992, 0.378 ) }
    dend_13 { pt3dadd( 425.395, 400.367, 32.4033, 0.445 ) }
    dend_13 { pt3dadd( 425.738, 401.408, 32.4579, 0.6928 ) }
    dend_13 { pt3dadd( 425.65, 402.418, 32.1751, 0.554 ) }
    dend_13 { pt3dadd( 425.475, 403.276, 31.5129, 0.4562 ) }
    dend_13 { pt3dadd( 425.82, 404.028, 30.6278, 0.4132 ) }
    dend_13 { pt3dadd( 426.615, 404.766, 29.7657, 0.578 ) }
    dend_13 { pt3dadd( 427.512, 405.458, 29.0825, 0.6124 ) }
    dend_13 { pt3dadd( 428.554, 405.891, 28.5586, 0.6178 ) }
    dend_13 { pt3dadd( 429.608, 406.141, 28.0596, 0.6848 ) }
    dend_13 { pt3dadd( 430.689, 406.326, 27.592, 0.5304 ) }
    dend_13 { pt3dadd( 431.809, 406.532, 27.2244, 0.4526 ) }
    dend_13 { pt3dadd( 432.725, 407.099, 26.8439, 0.442 ) }
    dend_13 { pt3dadd( 433.185, 408.049, 26.3808, 0.687 ) }
    dend_13 { pt3dadd( 433.266, 409.115, 25.8661, 0.5438 ) }
    dend_13 { pt3dadd( 432.995, 410.188, 25.3898, 0.4348 ) }
    dend_13 { pt3dadd( 432.749, 411.294, 25.0429, 0.3872 ) }
    dend_13 { pt3dadd( 433.195, 412.284, 24.7825, 0.4622 ) }
    dend_13 { pt3dadd( 434.185, 412.811, 24.5655, 0.7244 ) }
    dend_13 { pt3dadd( 435.195, 413.339, 24.36, 0.614 ) }
    dend_13 { pt3dadd( 436.158, 413.926, 24.1226, 0.5588 ) }
    dend_13 { pt3dadd( 437.178, 414.337, 23.8168, 0.6472 ) }
    dend_13 { pt3dadd( 438.243, 414.516, 23.443, 0.7982 ) }
    dend_13 { pt3dadd( 439.374, 414.628, 23.1515, 0.6848 ) }
    dend_13 { pt3dadd( 440.319, 415.222, 23.0412, 0.784 ) }
    dend_13 { pt3dadd( 441.211, 415.93, 23.0289, 0.6072 ) }
    dend_13 { pt3dadd( 442.188, 416.52, 23.0826, 0.4294 ) }
    dend_13 { pt3dadd( 443.087, 417.149, 23.259, 0.288 ) }
    dend_13 { pt3dadd( 443.981, 417.327, 23.6281, 0.2542 ) }
    dend_13 { pt3dadd( 444.442, 416.424, 23.7138, 0.2288 ) }
    dend_13 { pt3dadd( 444.559, 415.501, 22.96, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_16 (entry count 60/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 381.047, 432.971, 40.8422, 0.5726 ) }
    apic_18 { pt3dadd( 380.75, 433.851, 40.9688, 0.6926 ) }
    apic_18 { pt3dadd( 380.755, 434.976, 40.9682, 0.788 ) }
    apic_18 { pt3dadd( 380.68, 436.094, 40.9153, 0.6658 ) }
    apic_18 { pt3dadd( 380.314, 437.159, 40.8094, 0.5186 ) }
    apic_18 { pt3dadd( 380.01, 438.216, 40.6006, 0.547 ) }
    apic_18 { pt3dadd( 379.816, 439.317, 40.4065, 0.5102 ) }
    apic_18 { pt3dadd( 379.564, 440.426, 40.2654, 0.4194 ) }
    apic_18 { pt3dadd( 378.957, 441.361, 40.1509, 0.3588 ) }
    apic_18 { pt3dadd( 378.27, 442.267, 40.0355, 0.4102 ) }
    apic_18 { pt3dadd( 377.674, 443.238, 39.9218, 0.397 ) }
    apic_18 { pt3dadd( 377.163, 444.255, 39.8154, 0.4432 ) }
    apic_18 { pt3dadd( 376.826, 445.331, 39.6992, 0.4118 ) }
    apic_18 { pt3dadd( 376.461, 446.406, 39.6074, 0.4658 ) }
    apic_18 { pt3dadd( 375.952, 447.414, 39.6323, 0.4782 ) }
    apic_18 { pt3dadd( 375.453, 448.421, 39.7849, 0.469 ) }
    apic_18 { pt3dadd( 374.945, 449.402, 40.0551, 0.3796 ) }
    apic_18 { pt3dadd( 374.4, 450.368, 40.3908, 0.3372 ) }
    apic_18 { pt3dadd( 373.85, 451.353, 40.7137, 0.3446 ) }
    apic_18 { pt3dadd( 373.492, 452.402, 40.8716, 0.4008 ) }
    apic_18 { pt3dadd( 373.478, 453.518, 40.9702, 0.5258 ) }
    apic_18 { pt3dadd( 373.181, 454.607, 40.9923, 0.658 ) }
    apic_18 { pt3dadd( 372.951, 455.707, 40.8828, 0.6988 ) }
    apic_18 { pt3dadd( 373.065, 456.805, 40.6672, 0.623 ) }
    apic_18 { pt3dadd( 373.079, 457.941, 40.504, 0.5296 ) }
    apic_18 { pt3dadd( 372.786, 459.039, 40.3662, 0.5868 ) }
    apic_18 { pt3dadd( 372.655, 460.164, 40.318, 0.7184 ) }
    apic_18 { pt3dadd( 372.913, 461.22, 40.1828, 0.838 ) }
    apic_18 { pt3dadd( 373.106, 462.345, 40.1094, 0.7472 ) }
    apic_18 { pt3dadd( 372.794, 463.397, 40.1842, 0.7258 ) }
    apic_18 { pt3dadd( 372.541, 464.508, 40.2786, 0.6594 ) }
    apic_18 { pt3dadd( 372.31, 465.608, 40.3371, 0.6632 ) }
    apic_18 { pt3dadd( 371.849, 466.565, 40.2626, 0.7408 ) }
    apic_18 { pt3dadd( 371.536, 467.663, 40.2511, 0.7734 ) }
    apic_18 { pt3dadd( 371.311, 468.779, 40.2534, 0.9164 ) }
    apic_18 { pt3dadd( 371.279, 469.907, 40.3337, 1.0068 ) }
    apic_18 { pt3dadd( 371.387, 471.017, 40.5297, 0.8802 ) }
    apic_18 { pt3dadd( 371.27, 472.131, 40.7999, 0.6998 ) }
    apic_18 { pt3dadd( 371.079, 473.22, 41.1012, 0.5604 ) }
    apic_18 { pt3dadd( 370.98, 474.277, 41.4658, 0.7274 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_18 { pt3dadd( 370.99, 475.402, 41.722, 0.5734 ) }
    apic_18 { pt3dadd( 370.968, 476.505, 41.8463, 0.4796 ) }
    apic_18 { pt3dadd( 370.648, 477.59, 41.9269, 0.518 ) }
    apic_18 { pt3dadd( 370.511, 478.6, 41.8233, 0.4734 ) }
    apic_18 { pt3dadd( 370.923, 479.525, 41.6052, 0.4956 ) }
    apic_18 { pt3dadd( 371.095, 480.577, 41.4274, 0.4864 ) }
    apic_18 { pt3dadd( 371.091, 481.712, 41.2488, 0.4844 ) }
    apic_18 { pt3dadd( 371.244, 482.829, 41.0326, 0.4084 ) }
    apic_18 { pt3dadd( 371.47, 483.942, 40.8316, 0.3878 ) }
    apic_18 { pt3dadd( 371.615, 485.061, 40.6305, 0.4526 ) }
    apic_18 { pt3dadd( 371.99, 486.112, 40.4393, 0.5318 ) }
    apic_18 { pt3dadd( 372.279, 487.187, 40.3273, 0.4188 ) }
    apic_18 { pt3dadd( 371.947, 488.229, 40.2665, 0.3256 ) }
    apic_18 { pt3dadd( 371.311, 489.115, 40.0904, 0.2748 ) }
    apic_18 { pt3dadd( 370.603, 489.978, 39.8182, 0.2752 ) }
    apic_18 { pt3dadd( 370.046, 490.887, 39.4142, 0.2758 ) }
    apic_18 { pt3dadd( 369.3, 491.716, 39.1101, 0.2766 ) }
    apic_18 { pt3dadd( 369.431, 492.812, 38.8713, 0.2784 ) }
    apic_18 { pt3dadd( 369.791, 493.841, 38.5386, 0.2818 ) }
    apic_18 { pt3dadd( 369.615, 494.928, 38.1256, 0.288 ) }
    apic_18 { pt3dadd( 369.462, 495.937, 37.5897, 0.3006 ) }
    apic_18 { pt3dadd( 369.888, 496.895, 36.9922, 0.3176 ) }
    apic_18 { pt3dadd( 370.484, 497.854, 36.4792, 0.3796 ) }
    apic_18 { pt3dadd( 370.793, 498.924, 36.0458, 0.3454 ) }
    apic_18 { pt3dadd( 370.461, 499.802, 35.5006, 0.3216 ) }
    apic_18 { pt3dadd( 369.796, 500.657, 34.9994, 0.3142 ) }
    apic_18 { pt3dadd( 369.273, 501.625, 34.5061, 0.3502 ) }
    apic_18 { pt3dadd( 369.198, 502.722, 34.013, 0.4038 ) }
    apic_18 { pt3dadd( 369.391, 503.816, 33.5054, 0.5672 ) }
    apic_18 { pt3dadd( 369.491, 504.946, 33.112, 0.5606 ) }
    apic_18 { pt3dadd( 368.965, 505.929, 32.7617, 0.6772 ) }
    apic_18 { pt3dadd( 368.069, 506.584, 32.3753, 0.7264 ) }
    apic_18 { pt3dadd( 367.663, 507.58, 31.9514, 0.712 ) }
    apic_18 { pt3dadd( 368.384, 508.451, 31.5479, 0.7408 ) }
    apic_18 { pt3dadd( 368.884, 509.475, 31.2082, 0.7538 ) }
    apic_18 { pt3dadd( 369.195, 510.548, 30.8431, 0.7452 ) }
    apic_18 { pt3dadd( 369.284, 511.686, 30.539, 0.6594 ) }
    apic_18 { pt3dadd( 369.212, 512.82, 30.263, 0.6104 ) }
    apic_18 { pt3dadd( 369.21, 513.929, 29.9536, 0.671 ) }
    apic_18 { pt3dadd( 369.198, 515.061, 29.6968, 0.507 ) }
    apic_18 { pt3dadd( 369.001, 516.133, 29.4426, 0.3994 ) }
    apic_18 { pt3dadd( 369.618, 517.027, 29.2023, 0.3904 ) }
    apic_18 { pt3dadd( 370.31, 517.853, 29.0231, 0.3654 ) }
    apic_18 { pt3dadd( 370.718, 518.861, 28.8022, 0.3578 ) }
    apic_18 { pt3dadd( 371.093, 519.818, 28.4402, 0.3842 ) }
    apic_18 { pt3dadd( 371.328, 520.867, 28.0199, 0.466 ) }
    apic_18 { pt3dadd( 371.615, 521.804, 27.9012, 0.6864 ) }
    apic_18 { pt3dadd( 371.779, 522.859, 27.6917, 0.7626 ) }
    apic_18 { pt3dadd( 372.372, 523.838, 27.44, 0.4576 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 49/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 381.047, 432.971, 40.8422, 0.5726 ) }
    apic_17 { pt3dadd( 380.49, 433.279, 40.5062, 0.2288 ) }
    apic_17 { pt3dadd( 379.467, 433.74, 40.3399, 0.2814 ) }
    apic_17 { pt3dadd( 378.402, 434.103, 40.2069, 0.2872 ) }
    apic_17 { pt3dadd( 377.521, 434.802, 40.0943, 0.2978 ) }
    apic_17 { pt3dadd( 376.85, 435.71, 39.9148, 0.3174 ) }
    apic_17 { pt3dadd( 376.248, 436.621, 39.6021, 0.3558 ) }
    apic_17 { pt3dadd( 375.592, 437.494, 39.1983, 0.4156 ) }
    apic_17 { pt3dadd( 375.065, 438.469, 38.7674, 0.582 ) }
    apic_17 { pt3dadd( 374.666, 439.511, 38.3376, 0.6202 ) }
    apic_17 { pt3dadd( 374.069, 440.472, 37.9882, 0.6322 ) }
    apic_17 { pt3dadd( 373.292, 441.312, 37.7462, 0.712 ) }
    apic_17 { pt3dadd( 372.597, 442.205, 37.616, 0.5786 ) }
    apic_17 { pt3dadd( 372.059, 443.203, 37.5724, 0.5536 ) }
    apic_17 { pt3dadd( 371.481, 444.182, 37.5068, 0.5724 ) }
    apic_17 { pt3dadd( 370.835, 445.113, 37.3862, 0.52 ) }
    apic_17 { pt3dadd( 370.276, 446.096, 37.217, 0.3896 ) }
    apic_17 { pt3dadd( 369.849, 447.132, 36.9877, 0.3088 ) }
    apic_17 { pt3dadd( 369.427, 448.187, 36.7724, 0.291 ) }
    apic_17 { pt3dadd( 368.926, 449.213, 36.6103, 0.3062 ) }
    apic_17 { pt3dadd( 368.471, 450.258, 36.493, 0.3276 ) }
    apic_17 { pt3dadd( 367.904, 451.241, 36.4123, 0.3998 ) }
    apic_17 { pt3dadd( 367.182, 452.117, 36.421, 0.3776 ) }
    apic_17 { pt3dadd( 366.336, 452.875, 36.5084, 0.4064 ) }
    apic_17 { pt3dadd( 365.516, 453.645, 36.6472, 0.3478 ) }
    apic_17 { pt3dadd( 364.867, 454.558, 36.8346, 0.3268 ) }
    apic_17 { pt3dadd( 364.305, 455.548, 36.9779, 0.319 ) }
    apic_17 { pt3dadd( 363.841, 456.591, 37.0373, 0.3826 ) }
    apic_17 { pt3dadd( 363.388, 457.639, 37.0468, 0.3502 ) }
    apic_17 { pt3dadd( 362.974, 458.695, 37.0199, 0.3318 ) }
    apic_17 { pt3dadd( 362.431, 459.613, 36.8945, 0.328 ) }
    apic_17 { pt3dadd( 361.47, 460.208, 36.6954, 0.399 ) }
    apic_17 { pt3dadd( 360.514, 460.826, 36.496, 0.3834 ) }
    apic_17 { pt3dadd( 359.686, 461.58, 36.2866, 0.3814 ) }
    apic_17 { pt3dadd( 359.416, 462.551, 36.0192, 0.4766 ) }
    apic_17 { pt3dadd( 359.409, 463.655, 35.831, 0.4014 ) }
    apic_17 { pt3dadd( 358.906, 464.605, 35.7949, 0.3404 ) }
    apic_17 { pt3dadd( 357.995, 465.266, 35.8145, 0.3034 ) }
    apic_17 { pt3dadd( 357.116, 465.98, 35.819, 0.3228 ) }
    apic_17 { pt3dadd( 356.436, 466.884, 35.8554, 0.3892 ) }
    apic_17 { pt3dadd( 355.706, 467.744, 35.94, 0.3642 ) }
    apic_17 { pt3dadd( 354.861, 468.493, 35.9503, 0.351 ) }
    apic_17 { pt3dadd( 353.82, 468.916, 35.905, 0.3944 ) }
    apic_17 { pt3dadd( 352.88, 469.523, 35.8873, 0.374 ) }
    apic_17 { pt3dadd( 351.918, 470.082, 35.7652, 0.3686 ) }
    apic_17 { pt3dadd( 351.054, 470.812, 35.5813, 0.4294 ) }
    apic_17 { pt3dadd( 350.193, 471.511, 35.3027, 0.4274 ) }
    apic_17 { pt3dadd( 349.391, 472.319, 35.0641, 0.5242 ) }
    apic_17 { pt3dadd( 348.826, 473.309, 34.8634, 0.4446 ) }
    apic_17 { pt3dadd( 347.905, 473.952, 34.657, 0.41 ) }
    apic_17 { pt3dadd( 347.174, 474.726, 34.3801, 0.4826 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_17 { pt3dadd( 346.465, 475.607, 34.2429, 0.4118 ) }
    apic_17 { pt3dadd( 345.496, 476.187, 34.2331, 0.361 ) }
    apic_17 { pt3dadd( 344.561, 476.834, 34.2661, 0.335 ) }
    apic_17 { pt3dadd( 343.501, 477.245, 34.3188, 0.4132 ) }
    apic_17 { pt3dadd( 342.475, 477.662, 34.4086, 0.402 ) }
    apic_17 { pt3dadd( 341.609, 478.31, 34.391, 0.4542 ) }
    apic_17 { pt3dadd( 340.893, 479.196, 34.3462, 0.4258 ) }
    apic_17 { pt3dadd( 340.158, 480.06, 34.2642, 0.5226 ) }
    apic_17 { pt3dadd( 339.273, 480.751, 34.158, 0.434 ) }
    apic_17 { pt3dadd( 338.316, 481.336, 34.006, 0.427 ) }
    apic_17 { pt3dadd( 337.297, 481.796, 33.8338, 0.3386 ) }
    apic_17 { pt3dadd( 336.21, 481.984, 33.7879, 0.3088 ) }
    apic_17 { pt3dadd( 335.188, 482.411, 33.7901, 0.2908 ) }
    apic_17 { pt3dadd( 334.224, 483.022, 33.8268, 0.306 ) }
    apic_17 { pt3dadd( 333.201, 483.448, 33.789, 0.3272 ) }
    apic_17 { pt3dadd( 332.139, 483.833, 33.6862, 0.3988 ) }
    apic_17 { pt3dadd( 331.091, 484.207, 33.6591, 0.3756 ) }
    apic_17 { pt3dadd( 329.99, 484.37, 33.6851, 0.4038 ) }
    apic_17 { pt3dadd( 328.867, 484.565, 33.6725, 0.3388 ) }
    apic_17 { pt3dadd( 327.914, 485.133, 33.5418, 0.3304 ) }
    apic_17 { pt3dadd( 327.527, 486.086, 32.76, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 21/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 379.236, 398.287, 46.4797, 0.3666 ) }
    apic_6 { pt3dadd( 378.383, 397.599, 46.335, 0.9152 ) }
    apic_6 { pt3dadd( 377.498, 396.874, 46.2773, 0.9152 ) }
    apic_6 { pt3dadd( 376.678, 396.077, 46.1992, 0.9152 ) }
    apic_6 { pt3dadd( 375.932, 395.21, 46.0928, 0.9152 ) }
    apic_6 { pt3dadd( 375.111, 394.425, 45.9234, 0.9152 ) }
    apic_6 { pt3dadd( 374.095, 393.944, 45.684, 0.9152 ) }
    apic_6 { pt3dadd( 373.035, 393.535, 45.4222, 0.9152 ) }
    apic_6 { pt3dadd( 372.03, 393.021, 45.136, 0.9152 ) }
    apic_6 { pt3dadd( 371.079, 392.399, 44.8594, 0.9152 ) }
    apic_6 { pt3dadd( 370.059, 391.891, 44.6818, 0.9152 ) }
    apic_6 { pt3dadd( 368.938, 391.679, 44.5315, 0.9152 ) }
    apic_6 { pt3dadd( 367.826, 391.441, 44.3822, 0.9152 ) }
    apic_6 { pt3dadd( 366.833, 390.872, 44.2599, 0.9152 ) }
    apic_6 { pt3dadd( 365.892, 390.22, 44.1608, 0.9152 ) }
    apic_6 { pt3dadd( 364.939, 389.588, 44.0698, 0.9152 ) }
    apic_6 { pt3dadd( 363.987, 388.958, 43.965, 0.9152 ) }
    apic_6 { pt3dadd( 362.983, 388.454, 43.7996, 0.9152 ) }
    apic_6 { pt3dadd( 361.99, 387.902, 43.6268, 0.9152 ) }
    apic_6 { pt3dadd( 360.994, 387.342, 43.5207, 0.9152 ) }
    apic_6 { pt3dadd( 359.987, 386.839, 43.505, 0.9152 ) }
    apic_6 { pt3dadd( 358.949, 386.36, 43.491, 0.9152 ) }
    apic_6 { pt3dadd( 357.934, 385.901, 43.3684, 0.9152 ) }
    apic_6 { pt3dadd( 356.804, 385.75, 43.213, 0.9152 ) }
    apic_6 { pt3dadd( 355.662, 385.697, 43.0584, 0.9152 ) }
    apic_6 { pt3dadd( 354.559, 385.395, 42.8938, 0.9152 ) }
    apic_6 { pt3dadd( 353.488, 384.998, 42.7042, 0.9152 ) }
    apic_6 { pt3dadd( 352.552, 384.408, 42.4326, 0.9152 ) }
    apic_6 { pt3dadd( 351.854, 383.505, 42.1798, 0.9152 ) }
    apic_6 { pt3dadd( 351.036, 382.705, 41.9636, 0.9152 ) }
    apic_6 { pt3dadd( 350.051, 382.124, 41.7757, 0.9152 ) }
    apic_6 { pt3dadd( 348.938, 381.873, 41.5962, 0.9152 ) }
    apic_6 { pt3dadd( 347.892, 381.515, 41.3526, 0.9152 ) }
    apic_6 { pt3dadd( 346.861, 381.026, 40.8797, 0.9152 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 55/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 379.236, 398.287, 46.4797, 0.3666 ) }
    apic_5 { pt3dadd( 379.25, 398.891, 48.603, 0.6864 ) }
    apic_5 { pt3dadd( 378.51, 398.463, 49.5407, 0.4602 ) }
    apic_5 { pt3dadd( 377.787, 397.885, 50.5971, 0.3548 ) }
    apic_5 { pt3dadd( 376.806, 397.47, 51.6113, 0.3316 ) }
    apic_5 { pt3dadd( 375.71, 397.213, 52.4787, 0.3698 ) }
    apic_5 { pt3dadd( 374.615, 396.898, 53.1555, 0.5018 ) }
    apic_5 { pt3dadd( 373.599, 396.387, 53.6816, 0.45 ) }
    apic_5 { pt3dadd( 372.573, 395.902, 54.1044, 0.42 ) }
    apic_5 { pt3dadd( 371.482, 395.6, 54.4925, 0.5014 ) }
    apic_5 { pt3dadd( 370.44, 395.228, 54.941, 0.4462 ) }
    apic_5 { pt3dadd( 369.383, 394.868, 55.433, 0.4278 ) }
    apic_5 { pt3dadd( 368.275, 394.729, 55.9521, 0.4436 ) }
    apic_5 { pt3dadd( 367.19, 394.955, 56.4911, 0.6902 ) }
    apic_5 { pt3dadd( 366.165, 395.424, 57.0329, 0.5492 ) }
    apic_5 { pt3dadd( 365.11, 395.774, 57.5968, 0.446 ) }
    apic_5 { pt3dadd( 364.044, 396.044, 58.1893, 0.4018 ) }
    apic_5 { pt3dadd( 363.012, 396.484, 58.7689, 0.5212 ) }
    apic_5 { pt3dadd( 362.047, 397.083, 59.3211, 0.679 ) }
    apic_5 { pt3dadd( 361.111, 397.689, 59.8923, 0.5938 ) }
    apic_5 { pt3dadd( 360.132, 397.939, 60.5231, 0.4418 ) }
    apic_5 { pt3dadd( 359.276, 397.363, 61.1828, 0.358 ) }
    apic_5 { pt3dadd( 358.724, 396.404, 61.8419, 0.385 ) }
    apic_5 { pt3dadd( 358.185, 395.428, 62.4792, 0.4644 ) }
    apic_5 { pt3dadd( 357.395, 394.675, 63.093, 0.7002 ) }
    apic_5 { pt3dadd( 356.434, 394.159, 63.7283, 0.7082 ) }
    apic_5 { pt3dadd( 355.667, 393.414, 64.3294, 0.7436 ) }
    apic_5 { pt3dadd( 355.168, 392.395, 64.8192, 0.7112 ) }
    apic_5 { pt3dadd( 354.813, 391.38, 65.3377, 0.6704 ) }
    apic_5 { pt3dadd( 354.319, 390.463, 65.9683, 0.4992 ) }
    apic_5 { pt3dadd( 353.586, 390.058, 66.7548, 0.4168 ) }
    apic_5 { pt3dadd( 352.746, 390.462, 67.5746, 0.4964 ) }
    apic_5 { pt3dadd( 351.84, 391.103, 68.3222, 0.4326 ) }
    apic_5 { pt3dadd( 350.984, 391.826, 68.9682, 0.4242 ) }
    apic_5 { pt3dadd( 350.147, 392.595, 69.4182, 0.3338 ) }
    apic_5 { pt3dadd( 349.835, 393.655, 69.7376, 0.2998 ) }
    apic_5 { pt3dadd( 348.883, 394.178, 69.9286, 0.2742 ) }
    apic_5 { pt3dadd( 347.874, 394.706, 70.0403, 0.2736 ) }
    apic_5 { pt3dadd( 346.885, 395.281, 70.1711, 0.2728 ) }
    apic_5 { pt3dadd( 345.772, 395.376, 70.4262, 0.2712 ) }
    apic_5 { pt3dadd( 344.66, 395.584, 70.7588, 0.2684 ) }
    apic_5 { pt3dadd( 343.535, 395.501, 71.1463, 0.2626 ) }
    apic_5 { pt3dadd( 342.436, 395.348, 71.5926, 0.2542 ) }
    apic_5 { pt3dadd( 341.347, 395.03, 72.0168, 0.2288 ) }
    apic_5 { pt3dadd( 340.34, 394.68, 73.08, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    // Section: apic_8, id: apic_8, parent: apic_6 (entry count 0/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 346.861, 381.026, 40.8797, 0.9152 ) }
    apic_8 { pt3dadd( 345.964, 380.324, 40.7355, 0.9152 ) }
    apic_8 { pt3dadd( 345.022, 379.676, 40.6801, 0.9152 ) }
    apic_8 { pt3dadd( 344.012, 379.14, 40.6034, 0.9152 ) }
    apic_8 { pt3dadd( 343.059, 378.531, 40.4858, 0.9152 ) }
    apic_8 { pt3dadd( 342.27, 377.721, 40.3136, 0.9152 ) }
    apic_8 { pt3dadd( 341.428, 376.967, 40.1248, 0.9152 ) }
    apic_8 { pt3dadd( 340.421, 376.429, 39.9725, 0.9152 ) }
    apic_8 { pt3dadd( 339.356, 376.011, 39.8622, 0.9152 ) }
    apic_8 { pt3dadd( 338.285, 375.611, 39.7888, 0.9152 ) }
    apic_8 { pt3dadd( 337.249, 375.137, 39.7466, 0.9152 ) }
    apic_8 { pt3dadd( 336.359, 374.429, 39.725, 0.9152 ) }
    apic_8 { pt3dadd( 335.637, 373.541, 39.7096, 0.9152 ) }
    apic_8 { pt3dadd( 334.949, 372.628, 39.6894, 0.9152 ) }
    apic_8 { pt3dadd( 334.184, 371.781, 39.6606, 0.9152 ) }
    apic_8 { pt3dadd( 333.316, 371.038, 39.6208, 0.9152 ) }
    apic_8 { pt3dadd( 332.355, 370.419, 39.5682, 0.9152 ) }
    apic_8 { pt3dadd( 331.331, 369.911, 39.4948, 0.9152 ) }
    apic_8 { pt3dadd( 330.305, 369.424, 39.3781, 0.9152 ) }
    apic_8 { pt3dadd( 329.329, 368.855, 39.2095, 0.9152 ) }
    apic_8 { pt3dadd( 328.388, 368.218, 39.0382, 0.9152 ) }
    apic_8 { pt3dadd( 327.477, 367.528, 38.9119, 0.9152 ) }
    apic_8 { pt3dadd( 326.615, 366.776, 38.8354, 0.9152 ) }
    apic_8 { pt3dadd( 325.712, 366.08, 38.8072, 0.9152 ) }
    apic_8 { pt3dadd( 324.692, 365.566, 38.8234, 0.9152 ) }
    apic_8 { pt3dadd( 323.622, 365.168, 38.8822, 0.9152 ) }
    apic_8 { pt3dadd( 322.556, 364.771, 38.9897, 0.9152 ) }
    apic_8 { pt3dadd( 321.501, 364.366, 39.1362, 0.9152 ) }
    apic_8 { pt3dadd( 320.456, 363.918, 39.2683, 0.9152 ) }
    apic_8 { pt3dadd( 319.51, 363.288, 39.3414, 0.9152 ) }
    apic_8 { pt3dadd( 318.732, 362.461, 39.3352, 0.9152 ) }
    apic_8 { pt3dadd( 318.057, 361.55, 39.2571, 0.9152 ) }
    apic_8 { pt3dadd( 317.388, 360.627, 39.163, 0.9152 ) }
    apic_8 { pt3dadd( 316.695, 359.717, 39.0972, 0.8466 ) }
    apic_8 { pt3dadd( 315.977, 358.831, 39.0754, 0.8466 ) }
    apic_8 { pt3dadd( 315.212, 357.992, 39.1154, 0.8466 ) }
    apic_8 { pt3dadd( 314.417, 357.178, 39.1793, 0.8466 ) }
    apic_8 { pt3dadd( 313.642, 356.34, 39.1916, 0.8466 ) }
    apic_8 { pt3dadd( 312.905, 355.479, 39.1199, 0.8466 ) }
    apic_8 { pt3dadd( 312.138, 354.647, 38.9771, 0.8466 ) }
    apic_8 { pt3dadd( 311.254, 353.931, 38.8144, 0.8466 ) }
    apic_8 { pt3dadd( 310.253, 353.392, 38.6632, 0.8466 ) }
    apic_8 { pt3dadd( 309.154, 353.09, 38.5305, 0.8466 ) }
    apic_8 { pt3dadd( 308.02, 352.949, 38.4121, 0.8466 ) }
    apic_8 { pt3dadd( 306.91, 352.719, 38.2822, 0.8466 ) }
    apic_8 { pt3dadd( 305.878, 352.266, 38.1189, 0.8466 ) }
    apic_8 { pt3dadd( 304.942, 351.627, 37.9501, 0.8466 ) }
    apic_8 { pt3dadd( 304.125, 350.833, 37.8196, 0.8466 ) }
    apic_8 { pt3dadd( 303.418, 349.934, 37.7401, 0.8466 ) }
    apic_8 { pt3dadd( 302.772, 348.991, 37.7101, 0.8466 ) }
    apic_8 { pt3dadd( 302.203, 348.0, 37.7269, 0.8466 ) }
    apic_8 { pt3dadd( 301.684, 346.982, 37.7913, 0.8466 ) }
    apic_8 { pt3dadd( 301.102, 346.009, 37.9089, 0.8466 ) }
    apic_8 { pt3dadd( 300.445, 345.088, 38.0629, 0.8466 ) }
    apic_8 { pt3dadd( 299.76, 344.176, 38.2018, 0.8466 ) }
    apic_8 { pt3dadd( 299.07, 343.264, 38.288, 0.8466 ) }
    apic_8 { pt3dadd( 298.365, 342.364, 38.316, 0.8466 ) }
    apic_8 { pt3dadd( 297.6, 341.518, 38.2782, 0.8466 ) }
    apic_8 { pt3dadd( 296.712, 340.823, 38.1609, 0.8466 ) }
    apic_8 { pt3dadd( 295.717, 340.285, 37.9831, 0.8466 ) }
    apic_8 { pt3dadd( 294.693, 339.784, 37.8073, 0.8466 ) }
    apic_8 { pt3dadd( 293.669, 339.274, 37.6698, 0.8466 ) }
    apic_8 { pt3dadd( 292.681, 338.701, 37.5707, 0.8008 ) }
    apic_8 { pt3dadd( 291.753, 338.035, 37.5043, 0.8008 ) }
    apic_8 { pt3dadd( 290.883, 337.292, 37.462, 0.8008 ) }
    apic_8 { pt3dadd( 290.06, 336.497, 37.4301, 0.8008 ) }
    apic_8 { pt3dadd( 289.266, 335.675, 37.3937, 0.8008 ) }
    apic_8 { pt3dadd( 288.513, 334.813, 37.343, 0.8008 ) }
    apic_8 { pt3dadd( 287.85, 333.883, 37.2722, 0.8008 ) }
    apic_8 { pt3dadd( 287.221, 332.929, 37.1748, 0.8008 ) }
    apic_8 { pt3dadd( 286.508, 332.037, 37.0398, 0.8008 ) }
    apic_8 { pt3dadd( 285.731, 331.204, 36.8446, 0.8008 ) }
    apic_8 { pt3dadd( 284.921, 330.42, 36.5658, 0.8008 ) }
    apic_8 { pt3dadd( 284.046, 329.726, 36.2082, 0.8008 ) }
    apic_8 { pt3dadd( 283.103, 329.137, 35.7949, 0.8008 ) }
    apic_8 { pt3dadd( 282.116, 328.63, 35.3531, 0.8008 ) }
    apic_8 { pt3dadd( 281.128, 328.098, 34.9378, 0.8008 ) }
    apic_8 { pt3dadd( 280.169, 327.48, 34.6102, 0.8008 ) }
    apic_8 { pt3dadd( 279.237, 326.819, 34.3865, 0.8008 ) }
    apic_8 { pt3dadd( 278.323, 326.13, 34.2502, 0.8008 ) }
    apic_8 { pt3dadd( 277.418, 325.43, 34.1771, 0.8008 ) }
    apic_8 { pt3dadd( 276.481, 324.776, 34.144, 0.8008 ) }
    apic_8 { pt3dadd( 275.507, 324.175, 34.1284, 0.8008 ) }
    apic_8 { pt3dadd( 274.574, 323.522, 34.1149, 0.8008 ) }
    apic_8 { pt3dadd( 273.779, 322.707, 34.097, 0.8008 ) }
    apic_8 { pt3dadd( 273.1, 321.785, 34.0718, 0.8008 ) }
    apic_8 { pt3dadd( 272.453, 320.843, 34.036, 0.8008 ) }
    apic_8 { pt3dadd( 271.788, 319.913, 33.9867, 0.8008 ) }
    apic_8 { pt3dadd( 271.046, 319.046, 33.9203, 0.8008 ) }
    apic_8 { pt3dadd( 270.182, 318.302, 33.8262, 0.8008 ) }
    apic_8 { pt3dadd( 269.224, 317.691, 33.6826, 0.8008 ) }
    apic_8 { pt3dadd( 268.186, 317.269, 33.4841, 0.8008 ) }
    apic_8 { pt3dadd( 267.065, 317.132, 33.2688, 0.8008 ) }
    apic_8 { pt3dadd( 265.934, 317.037, 33.0747, 0.8008 ) }
    apic_8 { pt3dadd( 264.919, 316.574, 32.9064, 0.8008 ) }
    apic_8 { pt3dadd( 264.047, 315.841, 32.7404, 0.8008 ) }
    apic_8 { pt3dadd( 263.112, 315.222, 32.5522, 0.8008 ) }
    apic_8 { pt3dadd( 262.062, 314.799, 32.3596, 0.8008 ) }
    apic_8 { pt3dadd( 261.021, 314.341, 32.1983, 0.8008 ) }
    apic_8 { pt3dadd( 260.12, 313.656, 32.0804, 0.8008 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_8 { pt3dadd( 259.428, 312.755, 32.004, 0.8008 ) }
    apic_8 { pt3dadd( 258.925, 311.732, 31.9648, 0.8008 ) }
    apic_8 { pt3dadd( 258.576, 310.644, 31.9553, 0.8008 ) }
    apic_8 { pt3dadd( 258.24, 309.553, 31.9631, 0.8008 ) }
    apic_8 { pt3dadd( 257.719, 308.544, 31.9796, 0.8008 ) }
    apic_8 { pt3dadd( 256.981, 307.678, 32.0034, 0.8008 ) }
    apic_8 { pt3dadd( 256.09, 306.968, 32.0373, 0.8008 ) }
    apic_8 { pt3dadd( 255.099, 306.4, 32.0838, 0.8008 ) }
    apic_8 { pt3dadd( 254.07, 305.902, 32.1457, 0.8008 ) }
    apic_8 { pt3dadd( 253.062, 305.367, 32.2344, 0.8008 ) }
    apic_8 { pt3dadd( 252.132, 304.722, 32.3747, 0.8008 ) }
    apic_8 { pt3dadd( 251.25, 304.013, 32.5643, 0.8008 ) }
    apic_8 { pt3dadd( 250.352, 303.314, 32.7527, 0.8008 ) }
    apic_8 { pt3dadd( 249.432, 302.635, 32.9064, 0.8008 ) }
    apic_8 { pt3dadd( 248.492, 301.984, 33.0252, 0.8008 ) }
    apic_8 { pt3dadd( 247.595, 301.279, 33.1136, 0.8008 ) }
    apic_8 { pt3dadd( 246.913, 300.381, 33.1789, 0.8008 ) }
    apic_8 { pt3dadd( 246.541, 299.316, 33.2497, 0.8008 ) }
    apic_8 { pt3dadd( 246.396, 298.196, 33.3564, 0.8008 ) }
    apic_8 { pt3dadd( 246.228, 297.078, 33.4718, 0.8008 ) }
    apic_8 { pt3dadd( 245.83, 296.018, 33.5367, 0.8008 ) }
    apic_8 { pt3dadd( 245.244, 295.047, 33.5042, 0.8008 ) }
    apic_8 { pt3dadd( 244.572, 294.138, 33.3673, 0.8008 ) }
    apic_8 { pt3dadd( 243.812, 293.296, 33.1741, 0.8008 ) }
    apic_8 { pt3dadd( 242.951, 292.547, 32.9678, 0.8008 ) }
    apic_8 { pt3dadd( 242.019, 291.9, 32.7435, 0.8008 ) }
    apic_8 { pt3dadd( 241.093, 291.253, 32.4993, 0.8008 ) }
    apic_8 { pt3dadd( 240.259, 290.487, 32.279, 0.8008 ) }
    apic_8 { pt3dadd( 239.523, 289.614, 32.1138, 0.8008 ) }
    apic_8 { pt3dadd( 238.825, 288.708, 31.9967, 0.8008 ) }
    apic_8 { pt3dadd( 238.09, 287.832, 31.9158, 0.8008 ) }
    apic_8 { pt3dadd( 237.281, 287.026, 31.8623, 0.8008 ) }
    apic_8 { pt3dadd( 236.43, 286.261, 31.8231, 0.8008 ) }
    apic_8 { pt3dadd( 235.599, 285.475, 31.7817, 0.8008 ) }
    apic_8 { pt3dadd( 234.785, 284.671, 31.7276, 0.8008 ) }
    apic_8 { pt3dadd( 233.966, 283.872, 31.656, 0.8008 ) }
    apic_8 { pt3dadd( 233.114, 283.117, 31.5454, 0.8008 ) }
    apic_8 { pt3dadd( 232.209, 282.44, 31.3779, 0.8008 ) }
    apic_8 { pt3dadd( 231.23, 281.875, 31.1861, 0.8008 ) }
    apic_8 { pt3dadd( 230.18, 281.427, 31.0181, 0.8008 ) }
    apic_8 { pt3dadd( 229.134, 280.967, 30.889, 0.8008 ) }
    apic_8 { pt3dadd( 228.15, 280.389, 30.7936, 0.8008 ) }
    apic_8 { pt3dadd( 227.28, 279.654, 30.7255, 0.8008 ) }
    apic_8 { pt3dadd( 226.573, 278.763, 30.676, 0.8008 ) }
    apic_8 { pt3dadd( 225.9, 277.839, 30.6278, 0.8008 ) }
    apic_8 { pt3dadd( 225.065, 277.089, 30.5432, 0.8008 ) }
    apic_8 { pt3dadd( 224.038, 276.655, 30.4175, 0.8008 ) }
    apic_8 { pt3dadd( 222.946, 276.34, 30.3248, 0.8008 ) }
    apic_8 { pt3dadd( 221.903, 275.909, 30.312, 0.8008 ) }
    apic_8 { pt3dadd( 220.908, 275.362, 30.3363, 0.8008 ) }
    apic_8 { pt3dadd( 219.993, 274.684, 30.3464, 0.8008 ) }
    apic_8 { pt3dadd( 219.317, 273.791, 30.3033, 0.8008 ) }
    apic_8 { pt3dadd( 218.964, 272.732, 30.1843, 0.8008 ) }
    apic_8 { pt3dadd( 218.676, 271.636, 30.0219, 0.8008 ) }
    apic_8 { pt3dadd( 218.16, 270.629, 29.8665, 0.8008 ) }
    apic_8 { pt3dadd( 217.369, 269.82, 29.7394, 0.6864 ) }
    apic_8 { pt3dadd( 216.375, 269.278, 29.6419, 0.6864 ) }
    apic_8 { pt3dadd( 215.358, 268.762, 29.5686, 0.6864 ) }
    apic_8 { pt3dadd( 214.464, 268.059, 29.5064, 0.6864 ) }
    apic_8 { pt3dadd( 213.763, 267.165, 29.4384, 0.6864 ) }
    apic_8 { pt3dadd( 213.102, 266.236, 29.3409, 0.6864 ) }
    apic_8 { pt3dadd( 212.363, 265.385, 29.1847, 0.6864 ) }
    apic_8 { pt3dadd( 211.557, 264.591, 28.9985, 0.6864 ) }
    apic_8 { pt3dadd( 210.732, 263.801, 28.8341, 0.6864 ) }
    apic_8 { pt3dadd( 209.925, 262.991, 28.7123, 0.6864 ) }
    apic_8 { pt3dadd( 209.119, 262.188, 28.6502, 0.6864 ) }
    apic_8 { pt3dadd( 208.208, 261.518, 28.6261, 0.6864 ) }
    apic_8 { pt3dadd( 207.226, 260.962, 28.544, 0.6864 ) }
    apic_8 { pt3dadd( 206.268, 260.394, 28.355, 0.6864 ) }
    apic_8 { pt3dadd( 205.316, 259.803, 28.0899, 0.6864 ) }
    apic_8 { pt3dadd( 204.387, 259.151, 27.8144, 0.6864 ) }
    apic_8 { pt3dadd( 203.539, 258.387, 27.5724, 0.6864 ) }
    apic_8 { pt3dadd( 202.775, 257.537, 27.3753, 0.6864 ) }
    apic_8 { pt3dadd( 202.057, 256.648, 27.2146, 0.6864 ) }
    apic_8 { pt3dadd( 201.303, 255.801, 27.0494, 0.6864 ) }
    apic_8 { pt3dadd( 200.467, 255.034, 26.8654, 0.6864 ) }
    apic_8 { pt3dadd( 199.539, 254.386, 26.7215, 0.6864 ) }
    apic_8 { pt3dadd( 198.602, 253.738, 26.6207, 0.6864 ) }
    apic_8 { pt3dadd( 197.743, 253.007, 26.4734, 0.6864 ) }
    apic_8 { pt3dadd( 196.89, 252.269, 26.2615, 0.6864 ) }
    apic_8 { pt3dadd( 195.932, 251.683, 26.01, 0.6864 ) }
    apic_8 { pt3dadd( 194.939, 251.148, 25.7278, 0.6864 ) }
    apic_8 { pt3dadd( 194.099, 250.399, 25.4624, 0.6454 ) }
    apic_8 { pt3dadd( 193.418, 249.482, 25.2434, 0.9342 ) }
    apic_8 { pt3dadd( 192.795, 248.524, 25.072, 0.9482 ) }
    apic_8 { pt3dadd( 192.158, 247.574, 24.9284, 0.9866 ) }
    apic_8 { pt3dadd( 191.413, 246.715, 24.7772, 0.7696 ) }
    apic_8 { pt3dadd( 190.568, 245.963, 24.5876, 0.6212 ) }
    apic_8 { pt3dadd( 189.727, 245.202, 24.3684, 0.7166 ) }
    apic_8 { pt3dadd( 189.003, 244.324, 24.1587, 0.6958 ) }
    apic_8 { pt3dadd( 188.419, 243.342, 23.9702, 0.7022 ) }
    apic_8 { pt3dadd( 187.833, 242.361, 23.7958, 0.7226 ) }
    apic_8 { pt3dadd( 187.06, 241.53, 23.6169, 0.95 ) }
    apic_8 { pt3dadd( 186.137, 240.878, 23.3979, 0.9068 ) }
    apic_8 { pt3dadd( 185.191, 240.282, 23.1095, 1.0244 ) }
    apic_8 { pt3dadd( 184.269, 239.658, 22.7688, 0.968 ) }
    apic_8 { pt3dadd( 183.345, 239.018, 22.4216, 0.8246 ) }
    apic_8 { pt3dadd( 182.398, 238.402, 22.1094, 0.7468 ) }
    apic_8 { pt3dadd( 181.459, 237.762, 21.8672, 0.8342 ) }
    apic_8 { pt3dadd( 180.625, 236.992, 21.7638, 1.0144 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_8 { pt3dadd( 179.818, 236.197, 21.8145, 1.0324 ) }
    apic_8 { pt3dadd( 178.941, 235.474, 21.9638, 0.7712 ) }
    apic_8 { pt3dadd( 177.971, 234.887, 22.1799, 0.5702 ) }
    apic_8 { pt3dadd( 176.882, 234.649, 22.4524, 0.4118 ) }
    apic_8 { pt3dadd( 175.746, 234.614, 22.7296, 0.4118 ) }
    apic_8 { pt3dadd( 174.641, 234.359, 22.9656, 0.4118 ) }
    apic_8 { pt3dadd( 173.665, 233.779, 23.1652, 0.4118 ) }
    apic_8 { pt3dadd( 172.786, 233.052, 23.3626, 0.4118 ) }
    apic_8 { pt3dadd( 171.909, 232.337, 23.5894, 0.4118 ) }
    apic_8 { pt3dadd( 171.038, 231.61, 23.8353, 0.4118 ) }
    apic_8 { pt3dadd( 170.206, 230.831, 24.0716, 0.4118 ) }
    apic_8 { pt3dadd( 169.397, 230.03, 24.3068, 0.4118 ) }
    apic_8 { pt3dadd( 168.595, 229.234, 24.5538, 0.4118 ) }
    apic_8 { pt3dadd( 167.778, 228.441, 24.7752, 0.4118 ) }
    apic_8 { pt3dadd( 166.912, 227.696, 24.9337, 0.4118 ) }
    apic_8 { pt3dadd( 165.949, 227.083, 25.0323, 0.4118 ) }
    apic_8 { pt3dadd( 164.918, 226.589, 25.0824, 0.4118 ) }
    apic_8 { pt3dadd( 163.939, 226.001, 25.0902, 0.4118 ) }
    apic_8 { pt3dadd( 163.17, 225.164, 25.0642, 0.4118 ) }
    apic_8 { pt3dadd( 162.508, 224.233, 25.0144, 0.4118 ) }
    apic_8 { pt3dadd( 161.766, 223.364, 24.9458, 0.4118 ) }
    apic_8 { pt3dadd( 160.955, 222.563, 24.8368, 0.4118 ) }
    apic_8 { pt3dadd( 160.147, 221.772, 24.6728, 0.4118 ) }
    apic_8 { pt3dadd( 159.323, 220.99, 24.4905, 0.4118 ) }
    apic_8 { pt3dadd( 158.4, 220.318, 24.3359, 0.4118 ) }
    apic_8 { pt3dadd( 157.405, 219.754, 24.2236, 0.4118 ) }
    apic_8 { pt3dadd( 156.476, 219.09, 24.152, 0.4118 ) }
    apic_8 { pt3dadd( 155.631, 218.321, 24.1161, 0.4118 ) }
    apic_8 { pt3dadd( 154.74, 217.605, 24.108, 0.4118 ) }
    apic_8 { pt3dadd( 153.775, 216.99, 24.1144, 0.4118 ) }
    apic_8 { pt3dadd( 152.769, 216.448, 24.1279, 0.4118 ) }
    apic_8 { pt3dadd( 151.82, 215.811, 24.1475, 0.4118 ) }
    apic_8 { pt3dadd( 151.019, 214.998, 24.1746, 0.4118 ) }
    apic_8 { pt3dadd( 150.259, 214.143, 24.2102, 0.4118 ) }
    apic_8 { pt3dadd( 149.454, 213.331, 24.2575, 0.4118 ) }
    apic_8 { pt3dadd( 148.596, 212.584, 24.3396, 0.4118 ) }
    apic_8 { pt3dadd( 147.727, 211.862, 24.4549, 0.4118 ) }
    apic_8 { pt3dadd( 146.936, 211.043, 24.5568, 0.4118 ) }
    apic_8 { pt3dadd( 146.231, 210.145, 24.5918, 0.4118 ) }
    apic_8 { pt3dadd( 145.467, 209.315, 24.5106, 0.4118 ) }
    apic_8 { pt3dadd( 144.525, 208.731, 24.311, 0.4118 ) }
    apic_8 { pt3dadd( 143.478, 208.281, 24.0954, 0.4118 ) }
    apic_8 { pt3dadd( 142.495, 207.7, 23.9243, 0.4118 ) }
    apic_8 { pt3dadd( 141.678, 206.912, 23.7572, 0.4118 ) }
    apic_8 { pt3dadd( 140.975, 206.026, 23.583, 0.4118 ) }
    apic_8 { pt3dadd( 140.308, 205.102, 23.4455, 0.4118 ) }
    apic_8 { pt3dadd( 139.69, 204.14, 23.3738, 0.4118 ) }
    apic_8 { pt3dadd( 139.028, 203.224, 23.3932, 0.4118 ) }
    apic_8 { pt3dadd( 138.226, 202.428, 23.4749, 0.4118 ) }
    apic_8 { pt3dadd( 137.269, 201.809, 23.5519, 0.4118 ) }
    apic_8 { pt3dadd( 136.279, 201.236, 23.5796, 0.4118 ) }
    apic_8 { pt3dadd( 135.364, 200.573, 23.504, 0.4118 ) }
    apic_8 { pt3dadd( 134.54, 199.786, 23.3744, 0.4118 ) }
    apic_8 { pt3dadd( 133.819, 198.898, 23.2352, 0.4118 ) }
    apic_8 { pt3dadd( 133.147, 197.99, 23.0493, 0.4118 ) }
    apic_8 { pt3dadd( 132.574, 197.035, 22.8242, 0.4118 ) }
    apic_8 { pt3dadd( 131.885, 196.131, 22.638, 0.4118 ) }
    apic_8 { pt3dadd( 130.932, 195.505, 22.5498, 0.4118 ) }
    apic_8 { pt3dadd( 130.002, 194.875, 22.6254, 0.4118 ) }
    apic_8 { pt3dadd( 129.305, 193.984, 22.8035, 0.4118 ) }
    apic_8 { pt3dadd( 128.637, 193.055, 23.0059, 0.4118 ) }
    apic_8 { pt3dadd( 128.209, 192.002, 23.1641, 0.4118 ) }
    apic_8 { pt3dadd( 127.943, 190.969, 23.457, 0.4118 ) }
    apic_8 { pt3dadd( 127.049, 190.309, 24.2091, 0.366 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 64/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 346.861, 381.026, 40.8797, 0.9152 ) }
    apic_7 { pt3dadd( 346.477, 380.387, 43.1704, 0.2288 ) }
    apic_7 { pt3dadd( 346.141, 379.543, 44.1714, 0.2928 ) }
    apic_7 { pt3dadd( 345.556, 378.561, 45.0582, 0.308 ) }
    apic_7 { pt3dadd( 344.699, 377.821, 45.8696, 0.3384 ) }
    apic_7 { pt3dadd( 343.628, 377.607, 46.6712, 0.3834 ) }
    apic_7 { pt3dadd( 342.564, 377.355, 47.4421, 0.5224 ) }
    apic_7 { pt3dadd( 341.757, 376.663, 48.1964, 0.5114 ) }
    apic_7 { pt3dadd( 340.893, 375.94, 48.8956, 0.4214 ) }
    apic_7 { pt3dadd( 339.886, 375.454, 49.5858, 0.3628 ) }
    apic_7 { pt3dadd( 338.845, 375.255, 50.3182, 0.416 ) }
    apic_7 { pt3dadd( 337.781, 375.245, 51.0569, 0.416 ) }
    apic_7 { pt3dadd( 336.707, 375.302, 51.7723, 0.436 ) }
    apic_7 { pt3dadd( 335.616, 375.505, 52.4112, 0.6048 ) }
    apic_7 { pt3dadd( 334.518, 375.82, 52.9038, 0.5094 ) }
    apic_7 { pt3dadd( 333.388, 375.971, 53.27, 0.4828 ) }
    apic_7 { pt3dadd( 332.254, 375.884, 53.5478, 0.3896 ) }
    apic_7 { pt3dadd( 331.145, 376.159, 53.758, 0.43 ) }
    apic_7 { pt3dadd( 330.049, 376.465, 53.9286, 0.386 ) }
    apic_7 { pt3dadd( 328.94, 376.511, 54.1528, 0.4232 ) }
    apic_7 { pt3dadd( 327.842, 376.32, 54.4132, 0.374 ) }
    apic_7 { pt3dadd( 326.718, 376.227, 54.6538, 0.4 ) }
    apic_7 { pt3dadd( 325.585, 376.208, 54.7767, 0.3362 ) }
    apic_7 { pt3dadd( 324.485, 376.369, 54.7425, 0.3038 ) }
    apic_7 { pt3dadd( 323.392, 376.615, 54.6224, 0.2818 ) }
    apic_7 { pt3dadd( 322.343, 377.059, 54.5059, 0.2882 ) }
    apic_7 { pt3dadd( 321.332, 377.57, 54.4236, 0.2992 ) }
    apic_7 { pt3dadd( 320.383, 378.017, 54.4418, 0.3228 ) }
    apic_7 { pt3dadd( 319.684, 378.752, 54.5754, 0.3532 ) }
    apic_7 { pt3dadd( 318.595, 379.07, 54.6697, 0.4718 ) }
    apic_7 { pt3dadd( 317.576, 379.565, 54.7254, 0.3922 ) }
    apic_7 { pt3dadd( 316.701, 380.068, 54.5642, 0.3236 ) }
    apic_7 { pt3dadd( 315.846, 380.727, 54.4891, 0.2712 ) }
    apic_7 { pt3dadd( 315.123, 381.599, 54.4527, 0.2684 ) }
    apic_7 { pt3dadd( 314.225, 382.166, 54.2965, 0.2626 ) }
    apic_7 { pt3dadd( 313.438, 382.948, 54.1248, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_7 { pt3dadd( 312.481, 383.569, 54.0439, 0.2288 ) }
    apic_7 { pt3dadd( 311.854, 384.041, 54.88, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_8 (entry count 2/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 127.049, 190.309, 24.2091, 0.366 ) }
    apic_12 { pt3dadd( 127.388, 189.712, 22.7324, 0.2288 ) }
    apic_12 { pt3dadd( 127.779, 188.991, 22.0937, 0.2766 ) }
    apic_12 { pt3dadd( 127.977, 187.913, 21.7003, 0.2782 ) }
    apic_12 { pt3dadd( 128.105, 186.808, 21.4858, 0.2814 ) }
    apic_12 { pt3dadd( 128.679, 185.914, 21.3584, 0.287 ) }
    apic_12 { pt3dadd( 129.639, 185.879, 21.1803, 0.2986 ) }
    apic_12 { pt3dadd( 130.531, 186.478, 20.9798, 0.314 ) }
    apic_12 { pt3dadd( 131.474, 187.094, 20.8001, 0.3732 ) }
    apic_12 { pt3dadd( 132.495, 187.131, 20.767, 0.3336 ) }
    apic_12 { pt3dadd( 133.295, 186.512, 20.9166, 0.2994 ) }
    apic_12 { pt3dadd( 133.982, 185.635, 21.0386, 0.2736 ) }
    apic_12 { pt3dadd( 134.851, 185.028, 21.002, 0.2728 ) }
    apic_12 { pt3dadd( 135.913, 184.647, 20.928, 0.2712 ) }
    apic_12 { pt3dadd( 136.686, 183.832, 20.8648, 0.2684 ) }
    apic_12 { pt3dadd( 137.145, 182.788, 20.7928, 0.2626 ) }
    apic_12 { pt3dadd( 137.218, 181.652, 20.7211, 0.2542 ) }
    apic_12 { pt3dadd( 136.339, 180.991, 20.6497, 0.2288 ) }
    apic_12 { pt3dadd( 135.45, 181.667, 20.72, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 21/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 127.049, 190.309, 24.2091, 0.366 ) }
    apic_9 { pt3dadd( 126.356, 189.886, 23.3332, 0.366 ) }
    apic_9 { pt3dadd( 125.519, 189.112, 22.9975, 0.366 ) }
    apic_9 { pt3dadd( 124.721, 188.293, 22.6758, 0.366 ) }
    apic_9 { pt3dadd( 123.994, 187.432, 22.3188, 0.366 ) }
    apic_9 { pt3dadd( 123.257, 186.657, 21.8778, 0.366 ) }
    apic_9 { pt3dadd( 122.379, 185.961, 21.4592, 0.366 ) }
    apic_9 { pt3dadd( 121.56, 185.163, 21.1557, 0.366 ) }
    apic_9 { pt3dadd( 120.756, 184.35, 20.9432, 0.366 ) }
    apic_9 { pt3dadd( 119.968, 183.519, 20.8088, 0.366 ) }
    apic_9 { pt3dadd( 119.283, 182.604, 20.7413, 0.366 ) }
    apic_9 { pt3dadd( 118.548, 181.727, 20.722, 0.366 ) }
    apic_9 { pt3dadd( 117.707, 180.951, 20.72, 0.366 ) }
    apic_9 { pt3dadd( 116.771, 180.293, 20.72, 0.366 ) }
    apic_9 { pt3dadd( 115.956, 179.491, 20.7203, 0.366 ) }
    apic_9 { pt3dadd( 115.303, 178.552, 20.7203, 0.366 ) }
    apic_9 { pt3dadd( 114.772, 177.538, 20.7203, 0.366 ) }
    apic_9 { pt3dadd( 113.943, 176.75, 20.7206, 0.366 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 39/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 113.943, 176.75, 20.7206, 0.366 ) }
    apic_11 { pt3dadd( 113.17, 176.206, 20.7897, 0.2974 ) }
    apic_11 { pt3dadd( 112.247, 175.531, 20.8155, 0.2974 ) }
    apic_11 { pt3dadd( 111.342, 174.832, 20.8536, 0.2974 ) }
    apic_11 { pt3dadd( 110.458, 174.112, 20.9174, 0.2974 ) }
    apic_11 { pt3dadd( 109.566, 173.401, 20.9894, 0.2974 ) }
    apic_11 { pt3dadd( 108.676, 172.686, 21.0543, 0.2974 ) }
    apic_11 { pt3dadd( 107.82, 171.928, 21.0806, 0.2974 ) }
    apic_11 { pt3dadd( 106.9, 171.321, 20.9832, 0.2974 ) }
    apic_11 { pt3dadd( 105.842, 170.923, 20.8527, 0.3022 ) }
    apic_11 { pt3dadd( 104.763, 170.546, 20.75, 0.3264 ) }
    apic_11 { pt3dadd( 103.641, 170.331, 20.6847, 0.3668 ) }
    apic_11 { pt3dadd( 102.516, 170.194, 20.7063, 0.4662 ) }
    apic_11 { pt3dadd( 101.451, 169.826, 20.8065, 0.5286 ) }
    apic_11 { pt3dadd( 100.45, 169.275, 20.8986, 0.552 ) }
    apic_11 { pt3dadd( 99.4656, 168.707, 20.9244, 0.5842 ) }
    apic_11 { pt3dadd( 98.416, 168.26, 20.9132, 0.4708 ) }
    apic_11 { pt3dadd( 97.2895, 168.075, 20.8944, 0.4116 ) }
    apic_11 { pt3dadd( 96.1944, 167.748, 20.8838, 0.4856 ) }
    apic_11 { pt3dadd( 95.1679, 167.258, 20.9163, 0.4178 ) }
    apic_11 { pt3dadd( 94.0567, 166.999, 20.9364, 0.2974 ) }
    apic_11 { pt3dadd( 92.9718, 166.646, 20.9342, 0.2974 ) }
    apic_11 { pt3dadd( 92.0821, 165.933, 20.9392, 0.2974 ) }
    apic_11 { pt3dadd( 91.1477, 165.286, 20.9877, 0.2974 ) }
    apic_11 { pt3dadd( 90.2019, 164.643, 21.0283, 0.2974 ) }
    apic_11 { pt3dadd( 89.3959, 163.846, 21.0941, 0.2974 ) }
    apic_11 { pt3dadd( 88.3429, 163.41, 21.1484, 0.2974 ) }
    apic_11 { pt3dadd( 87.2275, 163.237, 21.0927, 0.2974 ) }
    apic_11 { pt3dadd( 86.1873, 162.798, 20.9334, 0.2974 ) }
    apic_11 { pt3dadd( 85.2761, 162.108, 20.7502, 0.2974 ) }
    apic_11 { pt3dadd( 84.4587, 161.309, 20.5738, 0.2974 ) }
    apic_11 { pt3dadd( 83.6965, 160.455, 20.4092, 0.2974 ) }
    apic_11 { pt3dadd( 83.4222, 159.346, 20.2558, 0.2974 ) }
    apic_11 { pt3dadd( 83.7413, 158.33, 19.6, 0.2974 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 73/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 113.943, 176.75, 20.7206, 0.366 ) }
    apic_10 { pt3dadd( 112.972, 175.999, 21.327, 0.5034 ) }
    apic_10 { pt3dadd( 112.325, 175.076, 21.5564, 0.5034 ) }
    apic_10 { pt3dadd( 112.035, 173.982, 21.751, 0.5034 ) }
    apic_10 { pt3dadd( 111.751, 172.874, 21.9159, 0.5034 ) }
    apic_10 { pt3dadd( 111.093, 171.958, 22.0581, 0.5034 ) }
    apic_10 { pt3dadd( 110.397, 171.053, 22.1984, 0.5034 ) }
    apic_10 { pt3dadd( 109.939, 170.022, 22.3675, 0.5034 ) }
    apic_10 { pt3dadd( 109.491, 168.984, 22.5786, 0.5034 ) }
    apic_10 { pt3dadd( 108.749, 168.127, 22.7844, 0.5034 ) }
    apic_10 { pt3dadd( 107.777, 167.534, 22.9617, 0.5034 ) }
    apic_10 { pt3dadd( 106.707, 167.136, 23.1129, 0.5034 ) }
    apic_10 { pt3dadd( 105.613, 166.805, 23.2576, 0.5034 ) }
    apic_10 { pt3dadd( 104.567, 166.373, 23.431, 0.5034 ) }
    apic_10 { pt3dadd( 103.613, 165.764, 23.627, 0.5034 ) }
    apic_10 { pt3dadd( 102.724, 165.047, 23.7994, 0.5034 ) }
    apic_10 { pt3dadd( 101.77, 164.418, 23.9322, 0.5034 ) }
    apic_10 { pt3dadd( 100.76, 163.883, 24.0484, 0.5034 ) }
    apic_10 { pt3dadd( 99.8295, 163.221, 24.1595, 0.5034 ) }
    apic_10 { pt3dadd( 98.9536, 162.486, 24.2614, 0.5034 ) }
    apic_10 { pt3dadd( 97.9647, 161.916, 24.3701, 0.5034 ) }
    apic_10 { pt3dadd( 96.8828, 161.597, 24.5375, 0.5034 ) }
    apic_10 { pt3dadd( 95.7956, 161.286, 24.7464, 0.5034 ) }
    apic_10 { pt3dadd( 94.918, 160.568, 24.9368, 0.5034 ) }
    apic_10 { pt3dadd( 94.1184, 159.75, 25.0863, 0.5034 ) }
    apic_10 { pt3dadd( 93.2911, 158.96, 25.1994, 0.5034 ) }
    apic_10 { pt3dadd( 92.5877, 158.059, 25.2837, 0.5034 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_10 { pt3dadd( 92.0298, 157.061, 25.3568, 0.5034 ) }
    apic_10 { pt3dadd( 91.4194, 156.093, 25.4282, 0.5034 ) }
    apic_10 { pt3dadd( 90.6525, 155.245, 25.508, 0.5034 ) }
    apic_10 { pt3dadd( 89.772, 154.517, 25.6015, 0.5034 ) }
    apic_10 { pt3dadd( 88.9664, 153.733, 25.7706, 0.5034 ) }
    apic_10 { pt3dadd( 87.8597, 153.754, 26.32, 0.5034 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_450, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_450 = new SectionList()
    soma_0 ModelViewParmSubset_450.append()
    axon_0 ModelViewParmSubset_450.append()
    axon_1 ModelViewParmSubset_450.append()

    // Group: {name=ModelViewParmSubset_451, groups=[], sections=[apic_0, dend_26, dend_9, dend_0, apic_20, apic_1, dend_34, dend_27, dend_21, dend_10, dend_6, dend_1, apic_22, apic_21, apic_19, apic_2, dend_36, dend_35, dend_31, dend_28, dend_25, dend_22, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, apic_14, apic_3, dend_33, dend_32, dend_30, dend_29, dend_24, dend_23, dend_20, dend_19, dend_15, dend_12, dend_4, dend_3, apic_16, apic_15, apic_13, apic_4, dend_17, dend_16, dend_14, dend_13, apic_18, apic_17, apic_6, apic_5, apic_8, apic_7, apic_12, apic_9, apic_11, apic_10]}
    ModelViewParmSubset_451 = new SectionList()
    apic_0 ModelViewParmSubset_451.append()
    dend_26 ModelViewParmSubset_451.append()
    dend_9 ModelViewParmSubset_451.append()
    dend_0 ModelViewParmSubset_451.append()
    apic_20 ModelViewParmSubset_451.append()
    apic_1 ModelViewParmSubset_451.append()
    dend_34 ModelViewParmSubset_451.append()
    dend_27 ModelViewParmSubset_451.append()
    dend_21 ModelViewParmSubset_451.append()
    dend_10 ModelViewParmSubset_451.append()
    dend_6 ModelViewParmSubset_451.append()
    dend_1 ModelViewParmSubset_451.append()
    apic_22 ModelViewParmSubset_451.append()
    apic_21 ModelViewParmSubset_451.append()
    apic_19 ModelViewParmSubset_451.append()
    apic_2 ModelViewParmSubset_451.append()
    dend_36 ModelViewParmSubset_451.append()
    dend_35 ModelViewParmSubset_451.append()
    dend_31 ModelViewParmSubset_451.append()
    dend_28 ModelViewParmSubset_451.append()
    dend_25 ModelViewParmSubset_451.append()
    dend_22 ModelViewParmSubset_451.append()
    dend_18 ModelViewParmSubset_451.append()
    dend_11 ModelViewParmSubset_451.append()
    dend_8 ModelViewParmSubset_451.append()
    dend_7 ModelViewParmSubset_451.append()
    dend_5 ModelViewParmSubset_451.append()
    dend_2 ModelViewParmSubset_451.append()
    apic_14 ModelViewParmSubset_451.append()
    apic_3 ModelViewParmSubset_451.append()
    dend_33 ModelViewParmSubset_451.append()
    dend_32 ModelViewParmSubset_451.append()
    dend_30 ModelViewParmSubset_451.append()
    dend_29 ModelViewParmSubset_451.append()
    dend_24 ModelViewParmSubset_451.append()
    dend_23 ModelViewParmSubset_451.append()
    dend_20 ModelViewParmSubset_451.append()
    dend_19 ModelViewParmSubset_451.append()
    dend_15 ModelViewParmSubset_451.append()
    dend_12 ModelViewParmSubset_451.append()
    dend_4 ModelViewParmSubset_451.append()
    dend_3 ModelViewParmSubset_451.append()
    apic_16 ModelViewParmSubset_451.append()
    apic_15 ModelViewParmSubset_451.append()
    apic_13 ModelViewParmSubset_451.append()
    apic_4 ModelViewParmSubset_451.append()
    dend_17 ModelViewParmSubset_451.append()
    dend_16 ModelViewParmSubset_451.append()
    dend_14 ModelViewParmSubset_451.append()
    dend_13 ModelViewParmSubset_451.append()
    apic_18 ModelViewParmSubset_451.append()
    apic_17 ModelViewParmSubset_451.append()
    apic_6 ModelViewParmSubset_451.append()
    apic_5 ModelViewParmSubset_451.append()
    apic_8 ModelViewParmSubset_451.append()
    apic_7 ModelViewParmSubset_451.append()
    apic_12 ModelViewParmSubset_451.append()
    apic_9 ModelViewParmSubset_451.append()
    apic_11 ModelViewParmSubset_451.append()
    apic_10 ModelViewParmSubset_451.append()

    // Group: {name=dend, groups=[], sections=[dend_26, dend_9, dend_0, dend_34, dend_27, dend_21, dend_10, dend_6, dend_1, dend_36, dend_35, dend_31, dend_28, dend_25, dend_22, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_33, dend_32, dend_30, dend_29, dend_24, dend_23, dend_20, dend_19, dend_15, dend_12, dend_4, dend_3, dend_17, dend_16, dend_14, dend_13]}
    dend = new SectionList()
    dend_26 dend.append()
    dend_9 dend.append()
    dend_0 dend.append()
    dend_34 dend.append()
    dend_27 dend.append()
    dend_21 dend.append()
    dend_10 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_31 dend.append()
    dend_28 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()
    dend_18 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_33 dend.append()
    dend_32 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_15 dend.append()
    dend_12 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_14 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_22, apic_21, apic_19, apic_2, apic_14, apic_3, apic_16, apic_15, apic_13, apic_4, apic_18, apic_17, apic_6, apic_5, apic_8, apic_7, apic_12, apic_9, apic_11, apic_10]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_20 apic.append()
    apic_1 apic.append()
    apic_22 apic.append()
    apic_21 apic.append()
    apic_19 apic.append()
    apic_2 apic.append()
    apic_14 apic.append()
    apic_3 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_13 apic.append()
    apic_4 apic.append()
    apic_18 apic.append()
    apic_17 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_8 apic.append()
    apic_7 apic.append()
    apic_12 apic.append()
    apic_9 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_18937, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_18937 = new SectionList()
    soma_0 OneSecGrp_SectionRef_18937.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, dend_26, dend_26, dend_26, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_14, apic_14, apic_14, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_4, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_4 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.7631645  // units: uF/cm2
    forsec apic cm = 2.7631645  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 126.28062  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0034367796  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 2.3227608E-7  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.74287623  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 3.560997E-5  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.0035947445  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 2.0899153E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 3.275526E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.16354296  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.8307603E-4  // units: S cm-2
        e_pas_nml2 = -85.61257  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.2033998E-4  // units: S cm-2
        e_pas_nml2 = -85.61257  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 5.94311E-6  // units: S cm-2
        e_pas_nml2 = -85.61257  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.1969845E-4  // units: S cm-2
        e_pas_nml2 = -85.61257  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 6.8900624E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0031084483  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_473863510
    forsec soma {
        insert CaDynamics_473863510
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_21 nseg = 7
    apic_19 nseg = 5
    dend_36 nseg = 3
    dend_35 nseg = 3
    dend_25 nseg = 3
    dend_5 nseg = 3
    dend_29 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 3
    dend_19 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 3
    apic_15 nseg = 7
    apic_13 nseg = 3
    dend_17 nseg = 5
    dend_16 nseg = 3
    apic_18 nseg = 5
    apic_17 nseg = 5
    apic_5 nseg = 3
    apic_8 nseg = 15
    apic_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473863510


