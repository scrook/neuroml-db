// Cell: bAC217_L5_BTC_8807af3a2b_0_0
/*
{
  "id" : "bAC217_L5_BTC_8807af3a2b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.01771, -11.0391, 0.577677, 4.33284", "-4.63379, -10.0125, 0.534922, 7.45854", "-4.24987, -8.98588, 0.492166, 9.48076", "-3.86596, -7.95927, 0.449411, 10.9075", "-3.48204, -6.93266, 0.406656, 11.628", "-3.09812, -5.90605, 0.363901, 12.2873", "-2.71421, -4.87944, 0.321146, 12.9463", "-2.33029, -3.85283, 0.27839, 14.0532", "-1.94638, -2.82623, 0.235635, 15.6117", "-1.56246, -1.79962, 0.19288, 15.9585", "-1.17854, -0.773007, 0.150125, 15.6036", "-0.794628, 0.253602, 0.10737, 15.3135", "-0.410711, 1.28021, 0.0646144, 15.4402", "-0.0267952, 2.30682, 0.0218592, 15.4567", "0.357121, 3.33343, -0.020896, 15.3596", "0.741037, 4.36004, -0.0636512, 14.6787", "1.12495, 5.38665, -0.106406, 13.8111", "1.50887, 6.41326, -0.149162, 12.3297", "1.89279, 7.43987, -0.191917, 10.4046", "2.2767, 8.46648, -0.234672, 8.10572", "2.66062, 9.49309, -0.277427, 4.65134" ]
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-0.571072, -10.7624, -2.17477, 4.64", "-0.605672, -11.2834, -2.22411, 4.64", "-0.648253, -12.8756, -2.38514, 4.35", "-0.721164, -15.6019, -2.66088, 3.46", "-0.782997, -17.914, -2.89473, 3.54", "-0.823482, -19.4278, -3.04783, 3.76", "-0.865981, -21.017, -3.20856, 4.2", "-0.904812, -22.5114, -3.38169, 4.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999944471457
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-6.83107, -8.58689, -3.11477, 2.5", "-7.39916, -9.09367, -3.7337, 2.5", "-9.20302, -10.7348, -5.087, 2.5", "-13.6434, -14.8689, -7.60156, 2.5", "-14.9193, -16.0309, -8.30304, 2.43", "-17.6772, -18.4887, -9.73051, 2.5", "-19.0714, -19.7049, -10.4029, 2.5", "-20.6777, -21.0427, -10.979, 2.95", "-21.4857, -21.6903, -11.1153, 2.95", "-23.3734, -23.1973, -11.1283, 3.68", "-24.4356, -24.0733, -11.2503, 3.68", "-25.3583, -24.8307, -11.4907, 3.68", "-26.6357, -25.8397, -11.8198, 3.68", "-27.8209, -26.7122, -12.0831, 3.68", "-29.2854, -27.8136, -12.2996, 3.68", "-30.5372, -28.833, -12.2996, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999944471457
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.87892, 9.33961, -2.80477, 4.79", "2.98684, 9.74889, -2.9955, 4.05", "3.40789, 11.3105, -3.69784, 3.39", "4.01054, 13.5029, -4.51617, 3.24", "4.6256, 15.6441, -5.17065, 3.24", "5.20498, 17.5661, -5.72469, 3.24", "5.51865, 18.6066, -6.02464, 4.27", "5.57143, 18.7768, -6.07154, 4.27", "6.28035, 20.9432, -6.5938, 3.54", "6.90594, 22.7019, -6.83897, 3.54", "7.252, 23.6529, -6.85448, 3.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999944471457
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.66062, 9.49309, -0.277427, 0.703226", "7.91473, 23.5428, -0.277427, 0.703226", "13.1688, 37.5925, -0.277427, 0.703226" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_112",
    "id" : "dend_112",
    "points3d" : [ "-0.904812, -22.5114, -3.38169, 1.11", "0.419827, -24.8269, -5.591, 1.11", "0.810573, -25.5433, -6.21862, 1.11", "1.20383, -26.1867, -6.72609, 0.74", "1.69079, -26.863, -7.21263, 0.74", "2.35947, -27.7003, -7.77519, 0.74", "2.43448, -27.7828, -7.82591, 0.74", "2.83274, -28.1249, -7.90535, 0.74", "3.7701, -28.7358, -8.02211, 1.18", "4.50988, -29.1019, -8.13042, 1.55", "4.65942, -29.1668, -8.15846, 1.55", "5.48535, -29.5086, -8.32148, 1.99", "6.43153, -29.9071, -8.62797, 1.99", "7.23841, -30.2667, -8.97591, 1.99", "8.61584, -30.9518, -9.7015, 1.25", "9.44849, -31.4438, -10.2087, 0.88", "9.58051, -31.5413, -10.3064, 1.11", "10.4671, -32.4662, -11.2761, 1.03", "10.7973, -33.025, -11.8441, 1.03", "10.95, -33.5262, -12.3047, 1.03", "11.0045, -34.2235, -12.8376, 1.03", "10.9676, -35.1854, -13.5062, 1.03", "10.8865, -36.3822, -14.2532, 1.03", "10.8609, -36.9254, -14.5747, 1.03", "10.9102, -37.2796, -14.8724, 1.03", "10.9797, -37.4282, -15.0276, 1.03", "11.0161, -37.4659, -15.0802, 1.03", "11.5399, -37.8553, -15.6351, 1.4", "12.5746, -38.5241, -16.4669, 1.69", "13.9551, -39.3571, -17.4552, 1.69", "14.4764, -39.6542, -17.7768, 2.21", "16.3312, -40.6748, -18.7202, 1.77", "17.6442, -41.383, -19.2701, 1.77", "18.9618, -42.0692, -19.7046, 2.43", "19.0431, -42.1127, -19.7263, 2.43", "20.0711, -42.7259, -19.9596, 2.8", "21.0169, -43.3238, -20.1936, 2.8", "21.0919, -43.3777, -20.2122, 2.8", "22.1675, -44.3175, -20.6393, 2.36", "23.6337, -45.88, -21.3891, 1.77", "24.4889, -46.965, -22.063, 1.77", "24.5224, -47.0145, -22.0978, 1.77", "25.1173, -47.9593, -22.8009, 1.47", "25.7582, -48.9387, -23.619, 1.33", "26.3355, -49.7841, -24.3773, 1.33", "27.9725, -51.7737, -26.6284, 1.25", "28.3882, -52.2013, -27.2408, 1.25", "28.7188, -52.498, -27.7223, 1.55", "29.9596, -53.4237, -29.4853, 1.84", "30.4765, -53.7329, -30.1754, 1.69", "32.0668, -54.4954, -32.1033, 1.33", "33.1999, -54.9548, -33.2124, 0.59", "33.6004, -55.0991, -33.5785, 0.59", "33.846, -55.1812, -33.7709, 0.59", "34.4704, -55.378, -34.1044, 0.59", "35.2026, -55.6514, -34.3417, 1.03", "36.0142, -56.0609, -34.3674, 1.4", "36.8775, -56.6403, -34.2945, 1.25", "37.4233, -57.0661, -34.2405, 0.81", "37.8356, -57.3879, -34.1984, 0.81", "38.7243, -58.0651, -34.1082, 0.74", "39.2958, -58.4969, -34.0391, 1.11", "40.3274, -59.2548, -33.9018, 1.47", "41.2908, -59.9289, -33.769, 1.47", "42.8684, -60.9747, -33.6576, 1.47", "43.8104, -61.5888, -33.6378, 1.47", "44.4877, -62.0282, -33.6541, 1.84", "44.9737, -62.3634, -33.6861, 2.5", "45.7552, -63.0076, -33.7831, 2.5", "47.0298, -64.3931, -34.0921, 1.55", "47.389, -64.9534, -34.245, 1.11", "47.7433, -65.7665, -34.4844, 1.03", "47.8758, -66.2963, -34.6427, 0.59", "47.9492, -67.2035, -34.8946, 0.74", "47.8909, -67.8803, -35.8299, 1.33", "47.7921, -68.3979, -36.9284, 1.62", "47.7242, -68.7881, -37.8707, 1.77", "47.6741, -69.1602, -38.8084, 1.77", "47.6725, -69.1897, -38.8839, 1.77", "47.8762, -72.9799, -48.5764, 1.25", "47.8859, -73.0311, -48.6994, 1.25", "48.0264, -73.4838, -49.7071, 1.25", "48.2665, -73.9887, -50.7031, 1.25", "48.5769, -74.4815, -51.5218, 1.55", "49.0405, -75.1087, -52.2729, 2.14", "50.3067, -76.5805, -53.1109, 1.77", "51.8628, -78.2233, -54.2447, 0.96", "53.1808, -79.5108, -55.2755, 0.96", "53.9562, -80.2594, -55.9028, 0.96", "54.3459, -80.6457, -56.2404, 0.96", "54.3956, -80.6979, -56.283, 0.96", "55.3985, -81.9858, -57.4517, 1.25", "55.7498, -82.65, -58.0725, 1.25", "56.0376, -83.5486, -58.9542, 1.25", "56.283, -84.6037, -59.9846, 1.25", "56.4817, -85.4939, -60.8332, 1.25", "57.114, -88.1001, -63.2033, 1.11", "57.2949, -88.8332, -63.8389, 1.11", "57.4071, -89.1858, -64.1545, 1.11", "57.7706, -89.9985, -64.8972, 1.11", "58.1424, -90.6295, -65.4028, 1.55", "58.525, -91.1097, -65.7188, 2.06", "58.6379, -91.223, -65.7662, 2.36", "59.4619, -92.0381, -66.1182, 2.36", "60.5898, -93.2005, -66.6095, 1.92", "60.911, -93.5719, -66.7818, 1.92", "61.5476, -94.3336, -67.1713, 1.55", "62.3159, -95.1701, -67.7731, 1.11", "62.9316, -95.7634, -68.2861, 1.11", "63.0469, -95.8681, -68.3932, 1.11", "63.7567, -96.454, -69.2311, 1.11", "64.3398, -97.0611, -70.13, 1.11", "65.2252, -98.1862, -72.0471, 0.88", "65.6193, -98.712, -72.8937, 0.88", "65.7392, -98.8887, -73.1582, 0.88", "66.5425, -100.409, -75.2367, 0.96", "67.156, -101.601, -77.0771, 0.96", "67.6775, -102.736, -78.9358, 0.88", "68.2228, -103.739, -80.8672, 0.59", "68.6674, -104.35, -82.2363, 0.96", "69.3753, -105.06, -83.9546, 2.28", "71.1078, -106.439, -87.5185, 1.84", "71.1478, -106.465, -87.5949, 1.84", "72.711, -107.483, -90.5648, 1.03", "73.1933, -107.818, -91.6375, 1.03", "73.6702, -108.191, -92.8363, 1.03", "73.7977, -108.436, -93.5153, 1.03", "73.7839, -108.468, -93.5763, 1.03", "73.5224, -108.861, -94.3408, 1.33", "72.9822, -109.638, -96.0324, 1.33", "72.5516, -110.443, -97.9557, 1.62", "72.4091, -111.156, -99.9644, 0.88", "72.4825, -111.538, -101.156, 0.88", "72.8801, -112.266, -103.524, 1.33", "73.6426, -113.192, -106.418, 1.33", "74.0368, -113.587, -107.529, 1.47", "75.28, -114.728, -110.449, 1.4", "75.7499, -115.148, -111.428, 1.4", "76.6089, -116.004, -113.161, 1.47", "77.0119, -116.54, -113.926, 1.47", "77.3666, -117.191, -114.547, 1.47", "77.7043, -117.843, -115.082, 1.47", "78.0769, -118.68, -115.507, 1.47", "78.31, -119.335, -115.771, 1.18", "78.4696, -119.918, -115.965, 1.03", "78.6473, -120.798, -116.314, 0.81", "78.9418, -122.889, -117.406, 1.03", "79.156, -124.429, -118.366, 0.88", "79.4408, -126.064, -119.46, 1.25", "79.6268, -126.824, -119.967, 1.25", "79.9198, -127.821, -120.618, 1.25", "80.6208, -129.44, -121.787, 1.55", "81.3321, -130.539, -122.636, 1.84", "82.1805, -131.388, -123.436, 1.84", "83.1557, -132.172, -124.242, 1.84", "83.2003, -132.208, -124.283, 1.84", "84.843, -133.556, -125.943, 1.47", "84.8746, -133.604, -126.023, 1.47", "84.956, -134.132, -127.101, 1.03", "84.8578, -134.452, -127.859, 1.03", "84.1747, -135.372, -130.297, 1.03", "83.781, -135.72, -131.265, 1.47", "82.0508, -136.605, -134.0, 1.99" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-0.904812, -22.5114, -3.38169, 4.2", "-1.15205, -22.7785, -3.5073, 4.2", "-1.28293, -22.9364, -3.57723, 4.2", "-1.85283, -23.7292, -3.88604, 3.17", "-2.8857, -25.3226, -4.09048, 2.14", "-3.15025, -25.7633, -4.07785, 1.77", "-3.62873, -26.6053, -3.95036, 1.62", "-3.87792, -27.1197, -3.79152, 1.62", "-4.18509, -27.8953, -3.45772, 1.62", "-4.8483, -30.0869, -2.27117, 1.62", "-4.97843, -30.6741, -1.88386, 1.62", "-5.1125, -31.4595, -1.3643, 1.84", "-5.28403, -32.6624, -0.574806, 2.21", "-5.38624, -33.5069, -0.0656615, 2.58", "-5.44538, -34.055, 0.218525, 2.73", "-5.62729, -35.7588, 0.803368, 2.28", "-5.77464, -36.7876, 1.06596, 2.28", "-5.88148, -37.3125, 1.14217, 2.21", "-6.04273, -37.878, 1.15412, 2.21", "-6.23711, -38.4395, 1.1206, 2.14", "-6.68015, -39.6101, 1.0137, 1.99", "-7.06952, -40.6091, 0.886022, 1.99", "-7.26455, -41.1545, 0.834647, 1.99", "-7.53114, -41.9821, 0.785817, 1.92", "-7.84241, -43.0457, 0.76047, 1.92", "-8.13855, -44.1511, 0.796061, 1.92", "-8.39042, -45.1998, 0.895568, 1.77", "-8.61913, -46.1495, 1.01148, 1.47", "-8.81685, -46.8596, 1.1901, 1.47", "-9.07847, -47.632, 1.46891, 1.84", "-9.34468, -48.3094, 1.75745, 2.43", "-9.36378, -48.3536, 1.77752, 2.43", "-9.77625, -49.2828, 2.22836, 2.43", "-10.7538, -51.4902, 3.25633, 2.06", "-11.1137, -52.3414, 3.60384, 1.84", "-11.3804, -53.0222, 3.8276, 1.77", "-11.6346, -53.7295, 3.97092, 1.77", "-11.881, -54.4796, 4.03657, 1.62", "-12.1119, -55.3219, 3.99656, 1.62", "-12.2753, -56.0047, 3.8665, 2.28", "-12.4438, -56.8161, 3.70827, 2.28", "-12.6243, -57.7397, 3.53867, 1.99", "-12.7784, -58.5827, 3.41745, 1.99", "-12.9858, -59.7002, 3.30566, 1.99", "-13.0058, -59.8054, 3.30065, 1.99", "-13.1571, -60.6098, 3.29462, 1.77", "-13.3458, -61.6169, 3.31409, 1.77", "-13.5239, -62.6352, 3.36448, 1.77", "-13.6168, -63.2128, 3.38989, 1.77", "-13.7223, -64.0201, 3.4186, 1.77", "-13.7644, -64.6186, 3.4328, 1.77", "-13.7788, -65.276, 3.44035, 1.77", "-13.7544, -66.0843, 3.4293, 1.77", "-13.7183, -66.7752, 3.32358, 1.77", "-13.6603, -67.7163, 3.09655, 1.77", "-13.565, -69.0082, 2.70296, 1.77", "-13.4996, -69.9068, 2.39387, 1.77", "-13.4397, -70.7449, 2.08325, 1.77", "-13.3167, -72.9666, 1.27821, 1.18", "-13.2888, -73.6169, 1.05169, 1.62", "-13.2768, -74.3446, 0.797836, 1.62", "-13.2792, -75.2068, 0.524333, 1.62", "-13.2857, -75.816, 0.378145, 1.62", "-13.3107, -76.7711, 0.439591, 1.84", "-13.3331, -77.0819, 0.547281, 1.84", "-13.4509, -77.9415, 0.922737, 2.14", "-13.6056, -78.6937, 1.28792, 2.14", "-13.763, -79.3114, 1.59882, 2.14", "-14.5111, -81.9511, 2.91232, 2.21", "-14.8256, -83.0053, 3.40176, 1.92", "-15.0575, -83.7793, 3.73455, 1.84", "-15.2812, -84.6152, 4.05634, 1.84", "-15.4499, -85.3758, 4.27237, 1.69", "-15.5353, -85.8613, 4.35211, 1.69", "-15.6507, -86.7941, 4.35763, 1.69", "-15.6934, -87.7122, 4.36306, 1.69", "-15.6786, -88.8439, 4.37167, 1.69", "-15.6202, -89.7159, 4.37911, 1.69", "-15.6147, -89.7692, 4.37955, 1.69", "-15.5586, -90.2897, 4.37068, 1.69", "-15.4992, -90.8327, 4.34829, 2.14", "-15.4939, -90.8839, 4.34548, 2.14", "-15.438, -91.5978, 4.29247, 2.14", "-15.3814, -92.5355, 4.20597, 2.14", "-15.3394, -93.3372, 4.12207, 3.24", "-15.3378, -93.3903, 4.11514, 3.24" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-30.5372, -28.833, -12.2996, 1.4", "-30.4909, -29.8502, -11.934, 1.4", "-30.5619, -30.621, -11.6947, 0.96", "-30.7154, -31.3012, -11.5088, 0.96", "-30.7396, -31.3804, -11.4888, 0.96", "-31.0108, -32.0354, -11.343, 0.96", "-31.275, -32.5813, -11.2312, 1.92", "-31.8214, -33.3365, -11.1142, 1.92", "-32.2294, -33.7472, -11.0626, 2.36", "-32.3026, -33.8093, -11.057, 2.36", "-32.926, -34.2707, -11.0108, 2.36", "-32.9886, -34.3113, -11.0062, 2.36", "-33.1167, -34.3934, -10.9942, 2.58", "-33.9277, -34.9463, -10.8993, 1.77", "-34.5265, -35.4168, -10.8154, 1.47", "-35.1199, -35.9605, -10.7208, 1.11", "-35.3813, -36.2519, -10.6464, 1.11", "-35.4328, -36.323, -10.6264, 1.11", "-35.7611, -36.8665, -10.4665, 1.18", "-35.9821, -37.3208, -10.3342, 1.4", "-36.2192, -37.8619, -10.1706, 1.62", "-36.7485, -39.0583, -9.70405, 1.62", "-37.1979, -40.0807, -9.29286, 1.62", "-37.2578, -40.2134, -9.23741, 2.5", "-37.6542, -41.0695, -8.85285, 2.95", "-37.7806, -41.3288, -8.72885, 2.95", "-38.5113, -42.719, -8.02439, 2.95" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-30.5372, -28.833, -12.2996, 0.81", "-33.7866, -29.0581, -13.3442, 0.81", "-34.9542, -29.2234, -13.7417, 0.81", "-35.2577, -29.2852, -13.8425, 1.25", "-37.1455, -29.7239, -14.44, 1.18", "-38.2694, -29.9966, -14.7862, 1.03", "-40.3381, -30.4801, -15.3609, 1.03", "-41.056, -30.6807, -15.5135, 1.18", "-41.9215, -30.9206, -15.7626, 1.18", "-42.8085, -31.1196, -16.0789, 0.88", "-42.954, -31.1397, -16.1411, 0.88", "-44.0288, -31.1287, -16.5254, 1.84", "-45.0583, -31.0089, -16.8981, 2.43", "-45.9664, -30.8669, -17.2772, 2.43", "-46.8243, -30.7347, -17.656, 1.99", "-47.8836, -30.5818, -18.1266, 1.11", "-49.4369, -30.3864, -18.7963, 0.59", "-51.0768, -30.2205, -19.4735, 1.03", "-52.31, -30.1064, -19.7625, 1.03", "-53.2694, -30.0401, -19.9684, 1.33", "-54.4949, -29.9814, -20.1863, 1.33", "-55.415, -29.9619, -20.2756, 1.33", "-56.354, -29.9609, -20.1908, 1.33", "-60.1541, -29.8482, -18.8043, 1.03" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.252, 23.6529, -6.85448, 1.33", "8.3194, 24.0865, -7.0267, 1.33", "9.30317, 24.405, -7.20288, 1.11", "10.3551, 24.7212, -7.40567, 1.4", "11.7288, 25.1856, -7.72702, 1.77", "12.4281, 25.458, -7.8956, 1.77", "13.1978, 25.8142, -8.06922, 1.77", "13.8494, 26.1681, -8.28917, 2.36", "15.13, 26.9799, -8.80211, 1.25", "15.9298, 27.6077, -9.15578, 1.69", "16.4016, 28.0569, -9.36083, 2.06", "17.1157, 28.8243, -9.69771, 2.06", "18.6198, 30.6158, -10.4738, 1.69", "19.1744, 31.3391, -10.7676, 2.21", "19.5587, 31.875, -10.9864, 2.43", "20.1293, 32.6298, -11.3006, 2.43", "20.3757, 32.9359, -11.4483, 2.43" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.252, 23.6529, -6.85448, 1.62", "7.13383, 25.7889, -7.61262, 1.62", "6.99005, 27.4274, -8.19571, 1.84", "6.8141, 28.7613, -8.7217, 1.77", "6.70238, 29.4818, -9.00926, 1.55", "6.43622, 31.0579, -9.62235, 1.77", "6.36926, 31.4903, -9.78199, 2.21", "6.27434, 32.293, -10.084, 2.36", "6.13714, 33.5156, -10.407, 2.14", "6.0821, 34.3804, -10.47, 1.92", "6.06952, 35.116, -10.4182, 1.55", "6.10663, 36.1214, -10.2096, 1.33", "6.15391, 37.0563, -9.96079, 1.33", "6.28793, 39.2146, -9.37123, 1.11", "6.31859, 40.0347, -9.13637, 1.25", "6.30609, 40.8869, -8.93306, 1.77", "6.25522, 41.7032, -8.79524, 2.21", "6.24638, 41.7775, -8.7893, 2.21", "6.04956, 43.2496, -8.80703, 2.5", "5.92088, 44.5794, -8.94324, 2.5", "5.87102, 45.2282, -9.00336, 2.87", "5.77466, 46.4856, -9.03433, 2.87", "5.67993, 47.5134, -8.82746, 2.87", "5.57445, 48.4887, -8.47096, 1.99", "5.48889, 49.1912, -8.11543, 1.84", "5.37027, 50.1777, -7.55603, 1.69", "5.18028, 51.6932, -6.63906, 1.92", "4.76114, 54.9532, -4.57038, 1.4", "4.6681, 55.7242, -4.07535, 1.55", "4.5356, 56.7988, -3.4129, 1.84", "4.44108, 57.7168, -2.92333, 1.84", "4.39578, 58.6284, -2.56763, 1.84", "4.39513, 59.3658, -2.43301, 1.84", "4.39845, 59.9502, -2.44093, 1.84", "4.42085, 60.6839, -2.45402, 1.92", "4.46464, 61.7869, -2.49502, 1.92", "4.50792, 62.8306, -2.54712, 1.69", "4.54886, 63.5586, -2.588, 1.69", "4.60779, 64.4452, -2.6366, 2.14", "4.69938, 65.5978, -2.69571, 2.5", "4.80769, 66.8219, -2.75266, 2.5", "4.89669, 67.8794, -2.81049, 2.5", "5.0214, 69.262, -2.88817, 2.43", "5.11512, 70.2193, -2.93741, 2.36", "5.21523, 71.0915, -2.97133, 2.21", "5.28657, 71.7315, -2.99978, 2.21", "5.47579, 73.2199, -3.07274, 2.21", "5.61709, 74.2265, -3.12299, 2.21", "5.74756, 75.1788, -3.16867, 2.21", "5.86623, 76.1126, -3.20725, 2.14", "5.98138, 77.1612, -3.18624, 2.06", "6.04734, 77.8064, -3.132, 1.84", "6.12964, 78.7255, -2.98182, 1.4", "6.17641, 79.2306, -2.84581, 0.96", "6.26163, 79.8621, -2.61671, 0.96", "6.53802, 81.1364, -2.08427, 1.03", "6.65846, 81.5222, -1.92756, 1.4", "6.88542, 82.1229, -1.72197, 1.69", "7.45811, 83.4558, -1.31914, 1.62", "7.70904, 84.0255, -1.237, 1.92", "8.11932, 84.8957, -1.16296, 1.92", "8.64684, 85.9795, -1.17131, 1.92", "9.21574, 87.1831, -1.22554, 1.99", "9.53249, 87.897, -1.30536, 2.21", "10.2333, 89.7686, -1.72708, 1.77" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "13.1688, 37.5925, -0.277427, 0.29", "18.4229, 51.6422, -0.277427, 0.29", "23.677, 65.6919, -0.277427, 0.29" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_114",
    "id" : "dend_114",
    "points3d" : [ "82.0508, -136.605, -134.0, 1.11", "81.614, -140.385, -136.593, 1.11", "81.5532, -141.047, -136.997, 0.96", "81.4575, -143.001, -138.036, 0.96", "81.4641, -144.244, -138.62, 0.96", "81.4901, -144.904, -138.906, 1.11", "81.6671, -145.894, -139.446, 1.11", "81.9623, -146.581, -139.824, 1.33", "82.5821, -147.306, -140.462, 1.33", "83.178, -147.765, -141.002, 1.33", "83.2374, -147.802, -141.053, 1.33", "86.2661, -149.49, -143.492, 0.81", "87.5551, -150.15, -144.496, 1.18", "88.304, -150.538, -145.119, 1.18", "88.9224, -150.897, -145.658, 1.62", "88.9942, -150.95, -145.719, 1.62", "89.5845, -151.542, -146.172, 2.21", "89.6972, -151.721, -146.242, 2.21", "90.5703, -153.267, -146.919, 2.06", "90.9766, -154.022, -147.442, 1.84", "91.4663, -154.977, -148.258, 1.62", "91.512, -155.079, -148.354, 1.62", "91.8931, -156.136, -149.427, 1.33", "92.1971, -157.272, -150.612, 1.11", "92.3802, -158.949, -152.419, 0.88", "92.3622, -159.255, -152.76, 1.11", "92.2146, -159.782, -153.334, 1.11", "92.0015, -160.243, -153.779, 0.96", "91.6358, -160.77, -154.128, 0.96", "91.1447, -161.378, -154.329, 0.74", "90.6176, -162.071, -154.393, 0.74", "90.2941, -162.56, -154.415, 0.96", "89.7812, -163.535, -154.333, 1.03", "89.2138, -165.041, -154.055, 1.18", "89.023, -165.84, -153.852, 1.18", "88.9197, -166.617, -153.623, 1.03", "88.8832, -167.16, -153.473, 1.11", "88.8122, -168.681, -153.133, 1.25", "88.7785, -169.332, -153.02, 1.25", "88.7589, -169.928, -153.103, 1.25", "88.8378, -170.33, -153.652, 1.25", "88.9766, -170.745, -154.503, 1.25", "89.1497, -171.165, -155.51, 1.25", "89.2211, -171.323, -155.927, 1.25", "89.7245, -172.283, -158.793, 1.69", "90.7168, -173.834, -164.041, 1.03", "90.8292, -173.971, -164.572, 1.03", "90.9137, -174.049, -164.924, 1.33", "91.0297, -174.127, -165.355, 1.33" ],
    "parent" : "dend_112",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_113",
    "id" : "dend_113",
    "points3d" : [ "82.0508, -136.605, -134.0, 0.59", "81.2215, -137.089, -134.47, 0.59", "80.2661, -137.647, -135.012, 0.52", "79.715, -137.969, -135.324, 0.96", "78.5504, -138.648, -135.984, 0.22" ],
    "parent" : "dend_112",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "-15.3378, -93.3903, 4.11514, 0.52", "-14.0627, -94.6374, 4.25739, 0.52", "-13.5015, -95.2822, 4.45754, 0.52", "-12.977, -95.9063, 4.77688, 0.52", "-12.1787, -96.8545, 5.36469, 0.52", "-11.5235, -97.6112, 5.84031, 1.25", "-11.1779, -97.9623, 6.03881, 1.47", "-9.78895, -99.2036, 6.69694, 0.59", "-8.93631, -99.8842, 7.01554, 0.66", "-8.57992, -100.141, 7.11262, 0.96", "-7.87479, -100.625, 7.21944, 1.18", "-6.05448, -101.848, 7.28071, 0.44", "-4.85498, -102.649, 7.22168, 0.44", "-4.10343, -103.143, 7.15335, 0.44", "-3.69648, -103.442, 7.12569, 0.44", "-3.36935, -103.722, 7.15849, 0.44", "-2.82155, -104.328, 7.46159, 1.11", "-2.7137, -104.51, 7.61664, 1.11", "-2.1671, -105.572, 8.81841, 1.11", "-2.09125, -105.704, 8.9881, 1.18", "-1.89976, -105.984, 9.33306, 1.18", "-1.55333, -106.405, 9.77581, 0.52", "-1.07266, -106.944, 10.1846, 0.52", "-0.454738, -107.603, 10.4875, 0.81", "-0.206806, -107.869, 10.536, 0.59", "0.473905, -108.61, 10.6154, 0.88", "0.979495, -109.182, 10.6372, 0.66", "1.51135, -109.796, 10.6228, 0.66", "2.07631, -110.458, 10.6371, 1.47", "2.74593, -111.236, 10.7074, 1.25", "3.20556, -111.761, 10.8263, 1.18", "3.45111, -112.011, 10.9265, 1.11", "3.7605, -112.295, 11.014, 0.88", "4.71609, -113.161, 11.2975, 0.74", "5.61259, -114.016, 11.6889, 0.74", "6.06688, -114.457, 11.9121, 0.74", "7.25316, -115.729, 12.5471, 0.66", "8.79586, -117.506, 13.415, 0.66", "9.91757, -118.909, 13.9887, 0.66", "11.0446, -120.465, 14.4876, 0.52", "11.0741, -120.514, 14.4988, 0.52", "11.7142, -121.923, 14.6498, 0.52", "11.7291, -121.978, 14.6475, 0.52", "11.9636, -123.225, 14.4471, 1.03", "12.0328, -123.565, 14.3349, 1.25", "12.3793, -125.041, 13.7664, 0.88", "12.6444, -126.091, 13.3967, 0.66", "13.1092, -127.776, 12.974, 0.66", "13.2213, -128.197, 12.9171, 1.77", "13.4497, -128.823, 12.9257, 2.21", "13.7117, -129.374, 12.9887, 2.21", "13.8797, -129.641, 13.0587, 1.33", "14.9874, -130.969, 13.5193, 0.66", "15.5528, -131.478, 13.7985, 0.66", "17.1606, -132.675, 14.6745, 0.59", "17.4551, -132.844, 14.8332, 1.33", "17.9173, -133.085, 15.0904, 1.55", "18.0463, -133.15, 15.1632, 1.55", "19.112, -133.688, 15.7993, 0.66", "19.8122, -134.136, 16.2669, 0.66", "20.5355, -134.833, 16.8452, 0.66", "21.3744, -135.884, 17.5581, 0.52", "21.5731, -136.218, 17.735, 1.33", "21.9454, -136.98, 18.0453, 1.33", "22.2325, -137.662, 18.2483, 1.03", "22.4092, -138.117, 18.3628, 0.52", "22.7457, -138.955, 18.5421, 0.52", "23.1134, -139.723, 18.6813, 0.52", "23.7034, -140.781, 18.8662, 0.59", "24.2923, -141.703, 19.0156, 0.59", "24.57, -142.083, 19.0843, 1.18", "25.0837, -142.726, 19.2081, 1.47", "25.4648, -143.196, 19.334, 1.92", "25.83, -143.706, 19.5919, 1.55", "26.0577, -144.114, 19.8789, 1.18", "26.1733, -144.381, 20.1013, 0.81", "26.731, -145.858, 21.2251, 0.59", "27.034, -146.798, 21.816, 1.11", "27.7126, -148.929, 22.8366, 0.52", "27.8821, -149.48, 23.0356, 0.52", "28.02, -149.938, 23.211, 1.03", "28.7305, -151.958, 23.8393, 0.44", "29.2838, -153.248, 24.119, 0.52", "29.9296, -154.583, 24.2638, 0.52", "30.1402, -154.977, 24.2684, 1.4", "31.3326, -157.095, 24.4325, 1.84", "32.0485, -158.33, 24.6943, 2.73", "32.5408, -159.165, 25.1305, 0.29" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-15.3378, -93.3903, 4.11514, 1.62", "-17.2302, -95.6972, 3.83058, 1.62", "-18.1335, -96.9929, 3.65591, 1.55", "-18.9396, -98.3951, 3.34288, 1.47", "-19.3984, -99.3633, 3.00725, 1.4", "-19.4252, -99.427, 2.98069, 1.4", "-19.852, -100.558, 2.35586, 1.33", "-20.0097, -101.339, 1.78834, 1.33", "-20.2698, -102.647, 0.594205, 1.33", "-20.5828, -103.744, -0.548052, 1.25", "-20.6054, -103.797, -0.608261, 1.25", "-21.4018, -105.217, -2.29363, 0.96", "-21.5746, -105.421, -2.54709, 1.33", "-22.6089, -106.265, -3.52585, 1.25", "-23.571, -106.857, -4.02545, 1.25", "-24.2192, -107.211, -4.20803, 1.4", "-24.3449, -107.28, -4.22695, 1.4", "-25.5621, -107.954, -4.24224, 1.47", "-26.5199, -108.563, -4.21726, 1.62", "-27.557, -109.364, -4.13594, 1.4", "-28.2805, -110.069, -4.06305, 1.33", "-28.8603, -110.756, -3.98361, 1.18", "-29.3517, -111.484, -3.92245, 1.18", "-29.8062, -112.487, -3.8845, 1.18", "-30.0507, -113.323, -3.89112, 1.4", "-30.1808, -114.214, -3.98438, 1.47", "-30.2049, -114.854, -4.09369, 1.47", "-30.1735, -115.792, -4.29855, 1.62", "-30.0272, -117.141, -4.64655, 1.62", "-29.8696, -118.089, -4.92426, 1.55", "-29.4742, -119.873, -5.48319, 1.47", "-29.2164, -120.781, -5.72875, 1.25", "-29.1792, -120.887, -5.75225, 1.25", "-28.7485, -121.832, -5.88554, 0.88", "-28.7117, -121.897, -5.88745, 0.88", "-28.0619, -122.799, -5.4829, 0.88", "-27.2931, -123.884, -4.49191, 1.11", "-27.2654, -123.936, -4.42193, 1.11", "-27.1734, -124.295, -3.86686, 1.11", "-27.1641, -124.543, -3.45428, 1.11", "-27.3643, -126.007, -1.05429, 1.33", "-27.5232, -126.521, -0.242105, 1.18", "-28.1957, -128.085, 1.98309, 1.18", "-28.6663, -129.013, 3.20288, 1.11", "-28.8231, -129.28, 3.50893, 1.11", "-29.0913, -129.719, 3.90364, 1.33", "-29.4316, -130.256, 4.14315, 1.33", "-29.4725, -130.33, 4.15464, 1.33", "-29.8545, -131.19, 4.00769, 1.33", "-30.1206, -132.143, 3.77935, 1.33", "-30.2158, -132.664, 3.65484, 1.33", "-30.3483, -134.029, 3.34841, 1.33", "-30.3623, -134.442, 3.26273, 1.33", "-30.3634, -135.283, 3.07612, 1.33", "-30.3297, -136.632, 2.73704, 1.33", "-30.248, -138.356, 2.28601, 1.33", "-30.1534, -139.752, 1.93458, 1.33", "-30.0473, -140.997, 1.59204, 1.33", "-29.9202, -142.298, 1.16344, 1.33", "-29.8612, -142.851, 0.957661, 1.55", "-29.8105, -143.528, 0.690838, 1.55", "-29.7969, -144.199, 0.425647, 1.62", "-29.9478, -146.046, -0.270633, 1.84", "-30.1369, -147.108, -0.472834, 1.77", "-30.4733, -148.319, -0.467315, 1.62", "-30.895, -149.45, -0.312617, 1.47", "-31.3274, -150.365, -0.0471449, 1.77", "-32.0648, -151.686, 0.590075, 2.06", "-33.6228, -154.161, 2.25417, 1.92", "-34.2696, -155.107, 2.97925, 1.92", "-34.701, -155.711, 3.46344, 1.92", "-35.4437, -156.793, 4.32478, 1.47", "-36.0914, -157.84, 5.08626, 1.84", "-36.125, -157.901, 5.12449, 1.84", "-36.7059, -159.088, 5.52601, 1.18", "-37.13, -160.117, 5.78427, 0.96", "-37.2921, -160.608, 5.84573, 1.11", "-37.5218, -161.517, 5.82241, 1.11", "-37.6134, -161.969, 5.71666, 1.11", "-37.7547, -162.783, 5.44877, 1.18", "-37.7627, -162.846, 5.41984, 1.18", "-37.8343, -163.463, 5.09947, 1.25", "-37.9475, -164.277, 4.63454, 1.25", "-38.2518, -166.255, 3.37951, 1.47", "-38.2772, -166.399, 3.28403, 1.47", "-38.5866, -167.542, 2.31593, 1.69", "-38.8433, -168.338, 1.6268, 1.69", "-38.9477, -168.613, 1.4067, 1.69", "-39.2782, -169.409, 0.815036, 2.06", "-39.3408, -169.538, 0.713692, 2.06", "-40.914, -172.322, -1.25559, 1.92", "-41.6981, -173.617, -1.92363, 1.92", "-42.6127, -175.126, -2.33582, 1.47", "-42.6642, -175.212, -2.33951, 1.47", "-44.444, -178.313, -1.46492, 1.25", "-45.584, -180.802, 0.336406, 1.25", "-46.4643, -183.454, 3.20023, 1.25", "-46.7129, -184.735, 4.94291, 1.25", "-46.7171, -184.806, 5.0508, 1.25", "-46.6734, -185.758, 6.53273, 1.55", "-46.398, -187.477, 9.18088, 1.55", "-46.2742, -187.995, 9.81807, 1.25", "-45.9158, -190.085, 11.4467, 0.81", "-45.846, -190.795, 11.7994, 0.88", "-45.8161, -191.675, 12.0646, 0.88", "-45.8995, -193.631, 12.1235, 0.88", "-46.1406, -195.567, 11.7858, 0.96", "-46.3366, -196.825, 11.4704, 1.33", "-46.5803, -198.091, 11.0102, 1.33", "-46.8117, -199.152, 10.5843, 1.47", "-47.3216, -201.252, 9.62863, 1.92", "-47.5872, -202.211, 9.09895, 1.92" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-38.5113, -42.719, -8.02439, 0.81", "-39.7642, -45.5203, -8.10348, 0.81", "-40.3963, -46.6587, -8.14811, 1.4", "-40.9475, -47.5735, -8.18161, 1.4", "-41.9674, -49.1969, -8.22709, 0.66", "-42.5524, -50.1324, -8.24179, 0.66", "-43.0664, -50.9615, -8.24811, 0.66", "-43.7936, -51.9529, -8.36378, 1.69", "-43.8627, -52.0464, -8.37459, 1.69", "-44.3517, -52.7874, -8.42789, 2.43", "-44.6618, -53.3876, -8.4118, 1.84", "-44.6908, -53.4644, -8.41228, 1.84", "-44.9109, -54.2455, -8.43836, 1.47", "-45.314, -55.6322, -8.52526, 0.66", "-45.3485, -55.7343, -8.53206, 0.66", "-45.6932, -56.579, -8.57802, 0.88", "-45.7434, -56.6766, -8.58118, 0.88", "-46.3744, -57.788, -8.67443, 1.18", "-46.9515, -58.7283, -8.77359, 1.69", "-47.0148, -58.8314, -8.78327, 1.69", "-47.7303, -60.0869, -8.94639, 2.06", "-48.3627, -61.2497, -9.13727, 2.06", "-49.1599, -62.9591, -9.32678, 1.25", "-49.4185, -63.7253, -9.36016, 1.11", "-49.5973, -64.8392, -9.25943, 1.11", "-49.6242, -65.9729, -9.02391, 1.55", "-49.6167, -66.0767, -8.9912, 1.55", "-49.4135, -68.012, -8.23717, 1.99", "-49.34, -69.3242, -7.58138, 1.99", "-49.434, -71.0694, -6.66378, 0.59", "-49.6556, -71.9492, -6.16486, 0.59", "-50.0768, -72.7736, -5.6631, 1.11", "-50.6782, -73.6309, -5.15023, 1.4", "-51.7994, -74.845, -4.48704, 1.4", "-52.801, -75.7725, -4.01472, 1.25", "-54.2779, -77.045, -3.40749, 1.25", "-56.0108, -78.5346, -2.7021, 1.25", "-56.0635, -78.5829, -2.6804, 1.25", "-57.2746, -79.7742, -2.16381, 1.84", "-58.2495, -80.8533, -1.75881, 1.84", "-59.2508, -82.1284, -1.20704, 1.33", "-59.6416, -82.6969, -0.952454, 1.03", "-60.2311, -83.6217, -0.515078, 1.03", "-60.724, -84.3743, -0.133027, 1.03", "-61.2046, -85.0692, 0.248595, 1.25", "-62.6811, -86.9938, 1.31384, 0.81", "-63.2954, -87.6678, 1.65828, 0.81", "-64.1057, -88.4054, 1.99648, 1.69", "-64.9767, -89.0377, 2.238, 2.14", "-65.8452, -89.5143, 2.35055, 2.14", "-66.7515, -89.898, 2.41635, 1.55", "-67.7942, -90.2767, 2.4989, 0.74", "-68.7075, -90.6595, 2.67055, 0.66", "-69.1478, -90.8903, 2.91435, 0.66", "-69.827, -91.3551, 3.55348, 0.66", "-70.6699, -92.0226, 4.56879, 0.96", "-71.7883, -92.9719, 6.15789, 2.06", "-72.5539, -93.6605, 7.33119, 2.43", "-74.397, -95.4582, 10.1785, 1.11", "-75.4625, -96.5046, 11.7607, 0.81", "-75.5402, -96.5752, 11.8688, 0.81", "-76.633, -97.3566, 13.2382, 0.81", "-77.2161, -97.6647, 13.8879, 1.18", "-78.17, -98.0449, 14.8428, 0.81", "-80.14, -98.6667, 16.2742, 0.52", "-81.4422, -99.0658, 17.0741, 0.52", "-82.9262, -99.8597, 17.8393, 0.52", "-83.8191, -100.532, 18.2088, 0.52", "-84.647, -101.318, 18.5286, 0.52", "-85.0679, -101.795, 18.6915, 1.62", "-85.7957, -102.829, 18.854, 2.14", "-87.5343, -105.64, 19.0951, 2.14", "-87.9344, -106.252, 19.308, 1.69", "-88.2857, -106.77, 19.6724, 1.47", "-88.8385, -107.551, 20.4998, 0.96", "-89.618, -108.657, 22.0784, 0.96", "-90.0572, -109.253, 23.2537, 0.96", "-92.0757, -111.948, 30.8825, 1.33", "-92.3191, -112.282, 31.9178, 2.14", "-92.3549, -112.33, 32.0839, 2.14", "-92.4688, -112.474, 32.6366, 2.14", "-92.4845, -112.491, 32.7135, 2.14", "-93.2506, -113.202, 35.8465, 0.52", "-93.6407, -113.54, 36.4373, 0.52", "-93.7833, -113.585, 36.553, 0.52", "-94.4046, -113.687, 36.8981, 1.47", "-94.5816, -113.701, 36.9658, 1.47", "-96.0755, -113.779, 37.346, 2.36", "-96.8175, -113.798, 37.4464, 2.36", "-99.2191, -113.944, 38.0516, 1.25", "-100.048, -114.055, 38.3538, 0.81", "-100.925, -114.258, 38.8037, 0.81", "-101.667, -114.558, 39.4106, 0.81", "-101.698, -114.641, 39.5709, 0.81", "-100.877, -115.956, 41.7758, 0.44", "-100.513, -116.425, 43.008, 0.37", "-100.3, -116.722, 43.9554, 0.37", "-99.9778, -117.235, 45.8089, 0.66", "-99.8346, -117.58, 47.0622, 0.66", "-99.8321, -118.057, 48.6779, 0.52", "-100.92, -119.987, 54.2287, 1.77", "-101.159, -120.242, 54.8075, 2.8", "-101.461, -120.531, 55.3167, 2.8", "-102.777, -121.794, 56.9416, 0.44", "-103.204, -122.218, 57.385, 0.66", "-103.682, -122.798, 57.8732, 0.66", "-104.685, -124.471, 58.5214, 0.66", "-104.875, -124.789, 58.6963, 1.11", "-105.251, -125.353, 59.1261, 1.11", "-105.296, -125.39, 59.1867, 1.11", "-106.49, -126.005, 60.3163, 0.44", "-107.301, -126.309, 60.7764, 0.44", "-107.934, -126.513, 60.9588, 1.4", "-108.809, -126.898, 61.0894, 1.4", "-111.256, -128.288, 61.8257, 0.81", "-113.264, -130.114, 62.85, 0.88", "-114.043, -131.087, 63.2092, 0.88", "-114.077, -131.161, 63.2453, 0.88", "-114.575, -133.052, 64.2908, 0.59", "-114.833, -136.215, 66.0572, 1.03", "-114.763, -136.773, 66.3979, 1.33" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-38.5113, -42.719, -8.02439, 0.52", "-42.2531, -42.3928, -7.38392, 0.52", "-43.4021, -42.3416, -7.22182, 0.66", "-44.0291, -42.3298, -7.15231, 0.66", "-45.2785, -42.3547, -7.04113, 0.66", "-46.1407, -42.4205, -6.98148, 0.96", "-47.2334, -42.5565, -6.96432, 1.33", "-47.9634, -42.7314, -7.05662, 0.96", "-48.8436, -43.0138, -7.17802, 0.44", "-49.4772, -43.234, -7.27293, 0.52", "-50.661, -43.6253, -7.46677, 0.52", "-52.0185, -43.9997, -7.62237, 0.81", "-52.9329, -44.1899, -7.68362, 0.96", "-53.982, -44.3583, -7.69151, 0.74", "-55.0456, -44.4767, -7.61515, 0.74", "-56.2326, -44.5474, -7.37943, 0.37", "-58.1486, -44.5809, -6.83688, 0.59", "-59.4395, -44.6117, -6.52477, 1.18", "-60.8636, -44.6561, -6.31296, 1.11", "-62.3223, -44.7206, -6.21593, 0.59", "-64.9988, -44.8478, -6.26443, 0.59", "-66.0968, -44.8967, -6.33024, 0.59", "-69.8766, -44.8986, -6.84519, 1.11", "-71.4128, -44.9435, -7.08962, 1.77", "-71.5376, -44.9493, -7.11332, 1.77", "-72.2661, -45.0213, -7.19417, 1.4", "-74.7325, -45.2839, -6.8899, 0.96", "-76.0972, -45.4577, -6.36944, 0.66", "-78.3494, -45.7611, -5.20194, 0.52", "-78.7175, -45.8217, -5.01337, 1.4", "-80.893, -46.2496, -4.0494, 0.59", "-82.8679, -46.6873, -3.32972, 0.37", "-83.686, -46.8945, -3.11551, 1.25", "-85.0368, -47.2397, -2.82945, 2.14", "-86.5497, -47.5442, -2.624, 1.84", "-88.1645, -47.8522, -2.55507, 1.18", "-89.454, -48.0694, -2.65273, 0.88", "-90.5661, -48.2536, -2.811, 0.59", "-91.2172, -48.3278, -2.90942, 0.74", "-91.8704, -48.3852, -3.01097, 0.74", "-92.6387, -48.4331, -3.12782, 0.81", "-93.3303, -48.4713, -3.22604, 0.81", "-94.2534, -48.5907, -3.33198, 0.81", "-95.069, -48.7288, -3.43068, 1.03", "-95.7782, -48.8911, -3.53344, 0.88", "-96.5915, -49.0963, -3.66361, 0.59", "-97.6166, -49.3458, -3.8375, 0.52", "-98.9024, -49.6223, -4.06727, 0.52", "-100.776, -49.9277, -4.41531, 0.59", "-101.693, -50.0013, -4.54964, 0.88", "-102.697, -49.9735, -4.6609, 0.66", "-103.905, -49.843, -4.78325, 0.66", "-104.962, -49.6583, -4.73382, 1.47", "-106.029, -49.4127, -4.54245, 1.25", "-107.791, -49.0167, -3.98106, 0.74", "-109.596, -48.6434, -3.26128, 0.59", "-110.125, -48.5486, -3.02168, 0.96", "-113.806, -48.0368, -1.239, 0.81", "-113.917, -48.0277, -1.18687, 0.81", "-115.216, -48.03, -0.671513, 1.03", "-116.017, -48.0831, -0.446941, 1.33", "-116.885, -48.1553, -0.305569, 1.11", "-117.837, -48.233, -0.266761, 0.88", "-118.86, -48.343, -0.369613, 0.37", "-120.31, -48.5044, -0.506024, 0.37", "-121.366, -48.636, -0.53038, 0.81", "-122.814, -48.8682, -0.528248, 0.81", "-123.931, -49.1114, -0.427658, 1.18", "-125.307, -49.5257, -0.200917, 1.62", "-126.292, -49.9206, 0.104307, 1.62", "-128.056, -50.7133, 0.773945, 1.25", "-129.285, -51.2758, 1.26434, 0.44", "-131.54, -52.2632, 2.15991, 0.74", "-132.967, -52.8453, 2.6834, 0.74", "-135.603, -53.8642, 3.5382, 0.74", "-137.722, -54.6839, 4.15265, 0.74", "-139.179, -55.165, 4.43327, 1.11", "-140.727, -55.5765, 4.64552, 1.11", "-141.727, -55.8239, 4.67776, 0.44", "-143.15, -56.1821, 4.76381, 0.44", "-144.246, -56.5144, 4.83751, 1.92", "-146.391, -57.4206, 5.23534, 2.3", "-147.032, -57.7526, 5.42801, 2.3", "-148.902, -58.8584, 6.18636, 2.87", "-151.71, -60.6356, 7.57318, 0.52", "-152.178, -60.9418, 7.82206, 0.66", "-152.754, -61.3174, 8.17316, 0.66", "-153.318, -61.6859, 8.52304, 0.66", "-153.865, -61.9477, 8.85574, 0.66", "-153.958, -61.9732, 8.90324, 0.66", "-155.105, -62.2352, 9.36728, 0.66", "-156.682, -62.693, 10.1642, 0.88", "-158.054, -63.1984, 10.9526, 1.4", "-160.372, -64.3188, 12.3578, 0.74", "-160.985, -64.6473, 12.7115, 1.03", "-162.082, -65.3154, 13.215, 0.96", "-163.772, -66.4893, 13.6154, 0.81", "-164.592, -67.0916, 13.5857, 0.81", "-165.592, -67.7871, 13.5513, 1.33", "-166.905, -68.5438, 13.555, 1.33", "-168.671, -69.4294, 13.611, 0.44", "-170.664, -70.3092, 13.6031, 0.59", "-171.967, -70.7906, 13.546, 0.59", "-176.29, -72.1002, 13.347, 0.66", "-179.557, -72.9893, 13.1272, 0.37", "-180.554, -73.2258, 13.0424, 1.4", "-182.62, -73.5632, 12.8488, 2.5", "-184.473, -73.7499, 12.6032, 2.5", "-186.247, -73.8129, 12.0295, 1.4", "-188.394, -73.7642, 10.9338, 1.18", "-189.852, -73.7357, 10.1343, 0.59", "-190.649, -73.7321, 9.78028, 0.81", "-191.073, -73.7427, 9.63401, 0.81", "-193.658, -74.1445, 8.96144, 0.44", "-194.707, -74.4762, 8.80164, 0.44", "-195.013, -74.5923, 8.79642, 0.44", "-196.447, -75.357, 8.83443, 0.44", "-196.98, -75.6519, 8.85402, 0.81", "-197.774, -76.0886, 8.88878, 0.96", "-198.783, -76.6356, 8.94164, 0.81", "-200.26, -77.3904, 8.92857, 0.88", "-202.305, -78.3353, 8.85135, 0.59", "-203.076, -78.6309, 8.79399, 0.59", "-203.437, -78.7509, 8.76371, 0.59", "-204.052, -78.923, 8.70946, 0.81", "-204.516, -79.0517, 8.6703, 1.4", "-204.725, -79.1117, 8.63809, 1.4", "-206.003, -79.4647, 8.3561, 1.69", "-208.036, -80.0379, 7.82278, 0.44", "-208.885, -80.2562, 7.49622, 0.44", "-209.963, -80.4704, 6.98436, 0.44", "-211.7, -80.6785, 6.08211, 0.44", "-211.845, -80.694, 6.00146, 0.44", "-212.334, -80.7423, 5.71161, 0.96", "-214.293, -80.8878, 4.39487, 1.47", "-215.567, -80.9852, 3.54279, 1.18", "-217.068, -81.0495, 2.62089, 0.52", "-217.89, -81.0958, 2.20277, 0.52", "-218.802, -81.157, 1.79861, 0.52", "-220.43, -81.287, 1.21788, 1.25", "-221.249, -81.3572, 1.01297, 1.99", "-222.423, -81.4767, 0.718289, 2.21", "-223.748, -81.5917, 0.398533, 1.92", "-225.169, -81.6288, 0.0901017, 1.11", "-226.214, -81.6124, -0.0772283, 0.74", "-227.254, -81.5639, -0.127043, 0.74" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-60.1541, -29.8482, -18.8043, 0.96", "-60.7134, -29.9726, -19.0502, 0.96", "-62.0316, -30.1783, -19.738, 0.66", "-62.8496, -30.2892, -20.2025, 1.11", "-63.3373, -30.3563, -20.5226, 1.84", "-63.8069, -30.4204, -20.8538, 1.84", "-64.8862, -30.5886, -21.6734, 0.59", "-65.7237, -30.6904, -22.4024, 0.59", "-65.8433, -30.7017, -22.5157, 0.59", "-66.602, -30.791, -23.1949, 1.11", "-66.6497, -30.8014, -23.2395, 1.11", "-67.377, -31.0189, -23.8974, 1.55", "-67.8596, -31.1926, -24.2927, 1.84", "-68.4061, -31.3995, -24.7029, 1.4", "-68.9736, -31.606, -25.0895, 1.11", "-70.1447, -32.0255, -25.8455, 1.03", "-70.6531, -32.2128, -26.1727, 0.52", "-71.1041, -32.3772, -26.4561, 0.52", "-71.5118, -32.5415, -26.7239, 0.52", "-71.5624, -32.5614, -26.7558, 0.52", "-72.3229, -32.8771, -27.1922, 0.96", "-72.7985, -33.0628, -27.3708, 1.4", "-73.1524, -33.2119, -27.4694, 1.55", "-73.8223, -33.4981, -27.5897, 0.66", "-74.5673, -33.8165, -27.6316, 0.66", "-75.2345, -34.0881, -27.6079, 0.66", "-76.0782, -34.4235, -27.5019, 0.66", "-76.8611, -34.7263, -27.3709, 1.11", "-77.3897, -34.9256, -27.2544, 1.11", "-77.9929, -35.12, -27.0817, 0.74", "-78.4525, -35.2452, -26.9511, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-60.1541, -29.8482, -18.8043, 0.66", "-62.4516, -28.8719, -18.4386, 0.66", "-63.8101, -28.273, -18.2374, 0.66", "-64.6276, -27.8821, -18.1385, 0.66", "-64.6934, -27.8476, -18.1326, 0.66", "-65.5445, -27.3391, -18.083, 0.66", "-66.4465, -26.7263, -18.0625, 0.88", "-66.9406, -26.2489, -18.1394, 0.88", "-67.3579, -25.7079, -18.2245, 0.88", "-67.6749, -25.2051, -18.3549, 0.88", "-68.0009, -24.569, -18.5831, 0.66", "-68.2483, -23.968, -18.8537, 0.59", "-68.4777, -23.3567, -19.1893, 0.59", "-68.7277, -22.6407, -19.7158, 0.37", "-69.0038, -21.8527, -20.4298, 0.59", "-69.2199, -21.3058, -21.0217, 0.59", "-69.2897, -21.1721, -21.4246, 0.59", "-69.3799, -21.0264, -22.1591, 0.59", "-69.5766, -20.7765, -24.0134, 0.66", "-69.6424, -20.6988, -24.6173, 0.66", "-69.678, -20.6588, -24.9132, 0.66", "-70.4225, -19.9437, -30.4546, 1.18", "-70.5384, -19.8591, -31.2376, 2.14", "-70.5707, -19.8423, -31.4139, 2.58", "-70.9033, -19.6814, -32.657, 0.66", "-71.0591, -19.6129, -33.0747, 0.52", "-71.4029, -19.4461, -33.5528, 0.52", "-72.9761, -18.6834, -34.2104, 0.52", "-73.5111, -18.4611, -34.4187, 0.52", "-75.1512, -17.839, -35.0069, 0.52", "-75.8723, -17.6145, -35.2322, 0.88", "-76.8499, -17.343, -35.471, 1.11", "-77.9136, -17.1128, -35.6503, 1.4", "-78.4241, -17.0375, -35.6941, 0.96", "-78.9008, -17.0295, -35.748, 0.96", "-79.7447, -17.1638, -35.88, 0.52", "-80.5862, -17.3588, -35.9648, 0.37", "-81.3683, -17.5537, -36.017, 0.37", "-82.1425, -17.7426, -36.0495, 0.44", "-82.2301, -17.7621, -36.0549, 0.44", "-83.6119, -18.0309, -36.1734, 0.44", "-85.1224, -18.3059, -36.3345, 0.44", "-85.9155, -18.4219, -36.454, 0.44", "-86.1023, -18.4458, -36.485, 0.44", "-87.0261, -18.5845, -36.6434, 0.44", "-87.1133, -18.6013, -36.6582, 0.44", "-87.9571, -18.8029, -36.8002, 0.44", "-88.8064, -19.0392, -36.9406, 1.18", "-89.5841, -19.2536, -37.0663, 1.92", "-90.4779, -19.495, -37.184, 0.52", "-91.9393, -19.9025, -37.3396, 0.52", "-92.7396, -20.123, -37.4012, 1.11", "-93.0827, -20.2134, -37.4238, 1.69", "-94.211, -20.5277, -37.4693, 0.74", "-95.5773, -20.8984, -37.507, 0.66", "-96.5508, -21.1747, -37.5096, 0.66", "-97.4818, -21.4657, -37.4747, 1.62" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "20.3757, 32.9359, -11.4483, 0.74", "24.2681, 33.763, -16.6871, 0.74", "24.7203, 33.8368, -17.1991, 1.15", "25.0674, 33.8782, -17.5245, 1.11", "25.4356, 33.8964, -17.8011, 0.88", "26.5366, 33.8974, -18.5571, 0.37", "27.032, 33.8875, -18.8674, 0.81", "27.3502, 33.8553, -18.9614, 1.03", "28.4895, 33.7942, -19.3878, 1.03", "29.5512, 33.8025, -19.9763, 1.03", "30.6597, 33.8871, -20.7225, 0.66", "31.2243, 33.9752, -21.1944, 0.66", "31.8163, 34.0919, -21.7466, 1.03", "32.4248, 34.2332, -22.3477, 1.03", "34.1102, 34.6861, -24.0116, 1.03", "34.8173, 34.9058, -24.6982, 1.03", "35.7531, 35.1906, -25.5356, 0.52", "35.8091, 35.2049, -25.5776, 0.52", "36.3249, 35.2938, -25.8102, 0.52", "37.3782, 35.4193, -25.686, 0.74", "38.1203, 35.495, -25.4235, 1.03", "38.1784, 35.5005, -25.3996, 1.03", "39.9373, 35.645, -24.6239, 0.52", "39.9874, 35.6502, -24.6022, 0.52", "41.0208, 35.7997, -24.179, 0.52", "41.9505, 35.9588, -23.894, 1.84", "42.0177, 35.9702, -23.8729, 1.84", "42.377, 36.03, -23.8231, 1.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "20.3757, 32.9359, -11.4483, 2.06", "21.3917, 34.8964, -11.9009, 2.06", "22.4109, 36.5146, -12.1432, 1.47", "22.4635, 36.5833, -12.1478, 1.47", "23.6453, 37.9828, -12.1766, 0.88", "24.371, 38.7605, -12.1522, 0.88", "25.0459, 39.48, -12.1108, 1.4", "25.6911, 40.0825, -12.0229, 1.84", "26.5398, 40.8652, -11.9617, 1.33", "26.5951, 40.9273, -11.9595, 1.33", "27.1766, 41.7967, -12.0485, 1.03", "27.6254, 42.785, -12.2324, 1.03", "28.1334, 44.2533, -12.5644, 1.47", "28.4339, 45.3622, -12.8337, 1.55", "28.8529, 47.0046, -13.2132, 2.06", "29.3297, 48.8447, -13.4805, 1.55", "29.5835, 49.7116, -13.5202, 1.18", "29.6729, 49.9537, -13.5023, 1.18", "30.0861, 50.8434, -13.2759, 1.18", "30.7367, 51.9801, -12.8779, 1.18", "31.6798, 53.3958, -12.2757, 1.47", "32.3702, 54.4786, -11.6165, 1.11", "32.713, 55.0311, -11.2341, 1.11", "33.6794, 56.6683, -10.0367, 1.03", "34.3117, 57.7825, -9.17943, 1.03", "34.5415, 58.2254, -8.84507, 1.69", "35.7236, 60.5862, -7.17082, 1.4", "35.8657, 60.8993, -6.95655, 1.92", "36.0952, 61.437, -6.62158, 1.92", "36.2757, 61.9268, -6.34621, 1.92", "36.5908, 62.8746, -5.86631, 0.96", "36.7747, 63.5205, -5.62795, 0.96", "36.9588, 64.259, -5.48256, 0.96", "37.068, 64.9659, -5.35838, 0.96", "37.1677, 66.3466, -5.14341, 0.96", "37.1367, 67.0446, -5.07059, 0.96", "37.0011, 68.083, -5.0151, 1.4", "36.8778, 69.0267, -4.98367, 1.62", "36.8132, 69.6833, -4.97566, 1.4", "36.7796, 70.2221, -4.95962, 1.4", "36.7566, 71.721, -4.91996, 0.66", "36.7243, 72.787, -4.75233, 0.74", "36.6552, 74.0636, -4.43333, 0.74", "36.5804, 74.8018, -4.18727, 0.74", "36.4564, 75.9578, -3.77412, 0.74", "36.381, 76.8168, -3.46216, 1.55", "36.2487, 78.6646, -2.78945, 1.55", "36.1717, 79.5654, -2.49543, 1.25", "36.0249, 81.3602, -2.00882, 0.96", "35.98, 82.7142, -1.70728, 0.74", "36.0329, 83.938, -1.54527, 0.88", "36.127, 84.5284, -1.53028, 0.88", "36.3623, 85.3426, -1.61897, 1.62", "36.7524, 86.4792, -1.77945, 2.5", "37.1282, 87.4695, -1.96706, 2.14", "37.5559, 88.5762, -2.20658, 2.06", "38.6513, 91.3583, -2.87925, 0.96", "39.5432, 93.5373, -3.44021, 0.96", "40.1899, 95.0187, -3.83962, 0.74" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "10.2333, 89.7686, -1.72708, 0.52", "11.9239, 92.109, -3.0177, 0.52", "12.881, 93.4631, -3.65896, 0.66", "12.9586, 93.5723, -3.70367, 0.66", "13.2413, 93.9816, -3.84374, 0.81", "13.9689, 95.0575, -4.15728, 0.37", "14.4697, 95.7721, -4.34758, 0.37", "15.2151, 96.8178, -4.53296, 0.37", "15.6666, 97.432, -4.59691, 0.59", "16.3292, 98.3103, -4.69251, 0.59", "16.7487, 98.8717, -4.76706, 0.59", "17.3923, 99.8124, -4.92637, 0.37", "17.5964, 100.176, -5.015, 0.74", "18.0593, 101.267, -5.32637, 1.11", "18.2024, 101.687, -5.44997, 1.11", "18.5437, 102.851, -5.84679, 0.52", "18.9348, 104.249, -6.32849, 0.52", "19.1765, 105.175, -6.6408, 0.52", "19.4881, 106.268, -6.98687, 0.66", "19.692, 106.912, -7.18228, 0.66", "20.1515, 108.151, -7.51618, 0.59", "20.6526, 109.238, -7.75201, 0.52", "20.7135, 109.35, -7.77031, 0.52", "21.3007, 110.399, -7.92566, 0.74", "21.6277, 110.989, -8.00135, 0.74", "21.9498, 111.599, -8.05527, 0.96", "22.6362, 112.953, -8.10747, 0.52", "23.2594, 114.217, -8.14466, 0.52", "23.863, 115.442, -8.16048, 0.96", "24.1278, 115.942, -8.1549, 1.4", "24.6698, 116.887, -8.11427, 1.55", "25.0479, 117.514, -8.07915, 1.55", "25.5381, 118.273, -8.00268, 0.81", "26.0939, 119.093, -7.87919, 0.81", "26.6455, 119.923, -7.72154, 0.81", "27.0158, 120.557, -7.60881, 0.81", "27.4448, 121.332, -7.47651, 0.81", "27.784, 122.005, -7.33551, 0.74", "28.2128, 122.98, -7.02991, 0.66", "28.5367, 123.802, -6.71008, 0.66", "28.9955, 125.127, -6.13923, 0.74", "29.2551, 125.868, -5.78841, 0.74", "29.6385, 126.984, -5.23537, 0.88", "30.1589, 128.52, -4.48131, 1.11", "30.3224, 128.979, -4.24819, 1.47", "30.5732, 129.656, -3.90835, 0.81", "31.0843, 131.145, -3.20966, 0.52", "31.2208, 131.65, -3.01402, 0.59", "31.3678, 132.407, -2.83838, 0.59", "31.4726, 133.197, -2.75505, 0.59", "31.5161, 133.684, -2.71717, 0.59", "31.5736, 134.293, -2.65501, 0.59", "31.6523, 135.008, -2.61091, 0.59", "31.8769, 136.303, -2.53927, 0.59", "32.1441, 137.548, -2.47753, 0.59", "32.4401, 138.624, -2.42634, 0.59", "32.9718, 140.068, -2.3528, 0.59", "33.3499, 140.891, -2.29305, 1.11", "33.8067, 141.76, -2.21764, 1.62", "34.0007, 142.095, -2.19422, 2.36", "34.3855, 142.74, -2.16071, 2.58", "34.9506, 143.704, -2.12799, 1.47", "35.8148, 145.194, -2.17778, 0.66", "36.8012, 146.928, -2.2599, 0.59", "37.225, 147.712, -2.33166, 0.59", "37.4919, 148.255, -2.40258, 0.81", "37.7632, 148.913, -2.51003, 0.81", "38.2534, 150.403, -2.80225, 0.59", "38.3758, 150.877, -2.90662, 0.59", "38.4843, 151.442, -3.01413, 0.59", "38.6017, 152.186, -3.07404, 0.59", "38.767, 153.212, -3.07636, 0.66", "38.8899, 153.872, -3.02204, 1.03", "39.0232, 154.656, -2.89494, 1.03", "39.1223, 155.125, -2.78579, 0.74", "39.4237, 156.256, -2.47237, 0.59", "39.6082, 156.875, -2.24835, 0.59", "39.7954, 157.474, -2.00654, 0.52", "40.0639, 158.337, -1.62828, 0.52", "40.4673, 159.558, -1.0982, 0.74", "41.0156, 161.042, -0.474465, 0.74", "41.6364, 162.436, 0.0884855, 0.74", "42.0204, 163.206, 0.384485, 0.74", "42.248, 163.63, 0.553187, 0.74", "43.2327, 165.273, 1.21134, 0.29", "43.603, 165.893, 1.46339, 0.29", "44.0594, 166.653, 1.81479, 0.29", "44.6028, 167.635, 2.26244, 0.29", "45.1223, 168.708, 2.78743, 0.66", "45.1223, 168.708, 2.78743, 1.33", "45.3052, 169.895, 3.29834, 1.62", "45.3462, 170.432, 3.46734, 1.62", "45.354, 170.992, 3.6075, 1.69", "45.3685, 171.474, 3.70089, 1.25", "45.4893, 172.801, 3.87117, 0.44", "45.7226, 174.044, 4.00781, 0.44", "46.0442, 175.184, 4.10216, 1.18", "46.4052, 176.195, 4.19901, 1.62", "46.6788, 176.856, 4.27047, 1.33", "47.1176, 177.807, 4.41458, 0.74", "47.7685, 179.122, 4.65319, 0.37", "48.2816, 180.185, 4.86571, 0.37", "48.5358, 180.802, 4.98477, 0.66", "48.7318, 181.378, 5.05107, 1.18", "49.2368, 183.145, 5.1039, 0.52", "49.6643, 184.589, 5.06627, 0.59", "49.7092, 184.72, 5.0557, 0.59", "50.3874, 186.39, 4.89882, 0.74", "51.0325, 187.835, 4.70974, 0.66", "52.0161, 189.915, 4.39823, 0.66", "52.774, 191.503, 4.12842, 0.66", "53.4255, 192.817, 3.90708, 1.03", "54.2329, 194.393, 3.66682, 0.52", "54.9959, 195.812, 3.48945, 0.52", "55.6376, 196.977, 3.39837, 1.11", "56.479, 198.646, 3.30866, 0.37", "56.9386, 199.7, 3.33396, 0.66", "57.3116, 200.627, 3.43003, 0.66", "57.7672, 201.745, 3.61189, 0.44", "58.2394, 202.886, 3.89261, 0.44", "58.77, 204.195, 4.29642, 0.44", "59.7935, 206.785, 5.24393, 0.44", "60.4168, 208.371, 5.84547, 0.44", "60.8365, 209.463, 6.23615, 0.44", "61.3036, 210.693, 6.63706, 1.62", "61.7012, 211.684, 7.01965, 2.28", "62.0544, 212.465, 7.3305, 2.28", "63.3132, 215.097, 8.33679, 0.37", "64.4176, 217.414, 9.27351, 0.37", "65.0703, 218.889, 9.78319, 0.37", "66.3277, 222.004, 10.7097, 0.37", "66.7418, 223.091, 10.9848, 0.66", "66.9951, 223.811, 11.1466, 1.55", "67.1142, 224.184, 11.2043, 2.21", "67.9816, 226.829, 11.4017, 0.66", "68.6029, 228.682, 11.3069, 0.44", "69.0115, 229.828, 11.1119, 0.44", "69.2427, 230.337, 11.0621, 0.44", "69.665, 231.108, 11.0079, 0.44", "69.968, 231.615, 11.012, 1.33", "70.5632, 232.496, 11.1071, 1.18", "71.1286, 233.361, 11.165, 0.44", "72.1418, 235.133, 11.337, 0.37", "72.3597, 235.587, 11.3915, 1.18", "72.8044, 236.651, 11.5415, 1.47", "72.8365, 236.744, 11.5528, 1.47", "72.9789, 237.224, 11.6173, 1.18", "73.079, 237.598, 11.6499, 1.18", "73.4682, 239.198, 11.7149, 0.37", "73.9009, 240.838, 11.7315, 0.37", "74.4092, 242.606, 11.6913, 0.37", "74.6023, 243.279, 11.6776, 0.37", "74.8283, 244.056, 11.6647, 0.66", "75.0353, 244.742, 11.683, 1.18", "75.2104, 245.289, 11.7232, 1.47", "75.3696, 245.77, 11.7804, 1.47", "76.0747, 247.647, 12.0938, 0.37", "76.433, 248.558, 12.272, 0.37", "76.8549, 249.694, 12.5803, 0.66", "77.0271, 250.231, 12.7608, 1.18", "77.2753, 251.169, 13.1008, 0.44", "77.3976, 251.699, 13.3029, 0.44", "77.5854, 252.603, 13.6624, 0.44", "77.9038, 254.499, 14.4571, 0.44", "78.0994, 256.083, 15.1665, 0.37", "78.1842, 257.1, 15.6527, 0.37", "78.2109, 257.544, 15.8736, 0.74", "78.2164, 257.998, 16.098, 1.18", "78.1808, 259.181, 16.6495, 1.18", "78.0936, 260.002, 17.1231, 0.81", "77.8749, 261.256, 17.8438, 0.29", "77.7571, 261.685, 18.2127, 0.29", "77.5042, 262.537, 18.8928, 0.37", "77.2721, 263.264, 19.4462, 0.37", "76.3642, 266.207, 21.2315, 1.4", "75.8415, 267.863, 22.297, 2.36", "74.614, 271.986, 24.8478, 0.81", "74.0644, 274.274, 26.1237, 0.81", "74.0476, 274.363, 26.1733, 0.81", "73.6655, 276.807, 27.4002, 1.18", "73.3056, 280.859, 28.5313, 1.18", "73.1927, 282.571, 29.1635, 0.59", "73.2431, 283.33, 28.8483, 0.59" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "10.2333, 89.7686, -1.72708, 1.69", "9.84577, 90.695, -1.84642, 1.69", "9.39717, 91.8477, -1.97314, 1.69", "8.92062, 93.1156, -2.08876, 1.69", "8.5562, 94.1671, -2.16883, 1.62", "8.34632, 94.8799, -2.22397, 1.47", "8.11748, 95.8542, -2.30082, 1.47", "7.96821, 96.8454, -2.33014, 1.47", "7.90589, 98.0909, -2.2971, 1.4", "7.93653, 99.1321, -2.22699, 1.4", "8.01182, 100.166, -2.11718, 1.18", "8.09284, 101.052, -2.00689, 1.55", "8.21566, 102.369, -1.92356, 1.03", "8.26569, 103.201, -1.9254, 1.03", "8.2781, 103.89, -1.96742, 1.03", "8.24156, 104.729, -2.04804, 1.33", "8.1636, 105.607, -2.14981, 1.62", "7.98036, 107.455, -2.40465, 2.28", "7.88471, 108.711, -2.60173, 2.28", "7.80065, 110.904, -2.90082, 1.55", "7.82865, 112.211, -3.12459, 1.25", "7.90257, 113.091, -3.29106, 1.25", "7.98979, 113.903, -3.46373, 1.25", "8.12276, 115.025, -3.69884, 1.25", "8.25158, 116.241, -3.97043, 1.25", "8.4388, 118.282, -4.44341, 0.81", "8.50654, 119.423, -4.60907, 0.81", "8.52684, 121.22, -4.70112, 0.74", "8.47075, 122.52, -4.50098, 0.81", "8.38334, 123.671, -4.09799, 1.62", "8.31042, 124.362, -3.75855, 1.69", "8.07611, 126.346, -2.59205, 1.69", "7.96659, 127.427, -1.8706, 1.69", "7.77638, 129.873, -0.160065, 1.62", "7.69479, 131.072, 0.639957, 1.33", "7.62368, 132.211, 1.318, 1.33", "7.56508, 133.103, 1.79069, 1.55", "7.4418, 135.004, 2.59775, 1.47", "7.34646, 136.486, 3.10678, 1.47", "7.29017, 137.481, 3.31338, 1.47", "7.26012, 138.517, 3.48234, 1.47", "7.2721, 139.149, 3.55864, 1.47", "7.29701, 139.814, 3.6057, 1.47", "7.34482, 141.033, 3.65351, 1.18", "7.42842, 142.302, 3.74871, 1.18", "7.51076, 143.54, 3.81808, 1.18", "7.58957, 144.718, 3.86204, 1.18", "7.60743, 145.07, 3.86967, 1.18", "7.65791, 147.603, 3.82345, 0.74", "7.6491, 148.345, 3.78804, 1.18", "7.58615, 150.037, 3.66625, 1.62", "7.49212, 151.719, 3.51776, 1.62", "7.39385, 153.207, 3.37062, 1.77", "7.26372, 155.013, 3.17685, 1.77", "7.17411, 156.092, 3.03903, 1.77", "7.05149, 157.224, 2.88894, 1.77", "6.84707, 158.814, 2.69899, 1.77", "6.64583, 160.039, 2.38676, 1.47", "6.4936, 160.73, 2.10564, 1.47", "6.47042, 160.804, 2.06406, 1.47", "5.97125, 161.896, 1.24903, 1.47", "5.64987, 162.444, 0.761051, 1.18", "4.15635, 164.612, -1.14807, 1.55", "3.67922, 165.299, -1.62612, 0.88", "3.23898, 166.024, -1.86345, 0.88", "2.88586, 166.707, -1.84907, 0.88", "2.54733, 167.537, -1.5843, 0.88", "1.97827, 169.359, -0.783426, 1.25", "1.64451, 170.795, -0.057621, 1.69", "1.48554, 171.897, 0.439744, 1.69", "1.46798, 172.117, 0.523055, 1.69", "1.42073, 173.049, 0.77746, 1.69", "1.3514, 174.295, 0.976314, 1.69", "1.22956, 175.999, 1.1033, 1.69", "1.08302, 177.347, 1.1599, 1.69", "0.87613, 178.636, 1.22455, 1.69", "0.605053, 179.859, 1.29336, 1.47", "0.305116, 180.884, 1.35841, 1.25", "-0.178742, 182.154, 1.34536, 1.03", "-0.606285, 183.059, 1.25864, 0.96", "-1.24798, 184.207, 1.09061, 0.81", "-1.7629, 185.029, 0.936285, 0.81", "-2.17371, 185.679, 0.795619, 0.81", "-3.26894, 187.464, 0.284381, 1.25", "-3.64375, 188.173, 0.0551757, 1.69", "-3.92414, 188.814, -0.124934, 2.21", "-4.08514, 189.308, -0.234429, 2.58", "-4.33736, 190.336, -0.390828, 2.58", "-4.55238, 191.542, -0.489807, 2.58", "-4.74433, 192.997, -0.495837, 2.58", "-4.87029, 194.083, -0.499778, 2.58", "-4.96776, 195.067, -0.526699, 1.99", "-5.01149, 196.156, -0.5727, 0.88", "-4.99191, 196.817, -0.635262, 0.88", "-4.88156, 197.805, -0.778075, 0.88", "-4.71455, 198.825, -0.983513, 0.88", "-4.50259, 199.88, -1.23257, 1.33", "-4.1683, 201.42, -1.62456, 1.77", "-3.83507, 202.829, -1.98656, 1.55", "-3.47926, 204.164, -2.30635, 1.47", "-3.24126, 205.014, -2.47319, 1.11", "-3.01787, 205.872, -2.63841, 1.11", "-2.86904, 206.713, -2.77703, 1.03", "-2.82477, 207.741, -2.9281, 0.96", "-2.92571, 209.16, -3.06778, 0.96", "-3.06809, 210.122, -3.15282, 0.96", "-3.39874, 211.691, -3.24271, 1.33", "-3.74147, 212.948, -3.30365, 1.69", "-4.19069, 214.224, -3.29529, 1.69", "-4.71674, 215.509, -3.2178, 1.69", "-4.74777, 215.582, -3.21104, 1.69", "-5.15754, 216.733, -3.06833, 1.69", "-5.24517, 217.039, -3.00578, 1.69", "-5.53909, 218.895, -2.61978, 1.69", "-5.54538, 219.855, -2.43582, 1.4", "-5.41428, 220.887, -2.28378, 0.74", "-5.30762, 221.43, -2.22667, 0.96", "-5.18303, 221.875, -2.20135, 0.96", "-4.98392, 222.55, -2.19861, 0.88", "-4.85592, 222.939, -2.22736, 0.88", "-4.72631, 223.604, -2.26751, 0.81", "-4.69776, 224.334, -2.20884, 0.81", "-4.73803, 224.744, -2.17748, 0.81", "-4.91442, 225.64, -2.11529, 1.11", "-5.09617, 226.321, -2.07207, 1.11", "-5.32274, 227.092, -2.02828, 1.25", "-5.83298, 228.751, -1.94357, 1.25", "-6.24397, 230.155, -1.88571, 1.33", "-6.54226, 231.301, -1.84813, 1.55", "-6.74025, 232.172, -1.82644, 1.47", "-6.9758, 233.425, -1.81298, 1.4", "-7.09384, 234.299, -1.81635, 1.4", "-7.29042, 236.591, -1.95681, 1.03", "-7.3325, 237.886, -2.04044, 1.03", "-7.28965, 239.507, -2.18803, 1.03", "-7.20854, 240.525, -2.3044, 1.03", "-7.08678, 241.774, -2.47399, 1.03", "-7.00072, 243.326, -2.70786, 1.69", "-7.04548, 244.548, -2.90593, 2.28", "-7.19941, 245.457, -2.97929, 2.8", "-7.30025, 245.794, -2.94545, 3.46", "-7.83068, 247.2, -2.5986, 3.46", "-8.56021, 249.004, -2.00144, 3.17", "-9.0703, 250.219, -1.55536, 1.99", "-9.80332, 251.947, -0.918508, 1.99", "-10.584, 253.846, -0.244373, 1.18", "-11.034, 255.147, 0.143252, 1.18", "-11.4645, 257.116, 0.602461, 1.18", "-11.6077, 258.359, 0.8063, 1.18", "-11.6235, 258.631, 0.83278, 1.18", "-11.6515, 259.556, 0.840576, 1.18", "-11.751, 261.889, 0.750426, 0.81", "-11.8543, 263.752, 0.712374, 0.81", "-11.8696, 264.003, 0.713022, 0.81", "-11.9592, 265.073, 0.74208, 0.88", "-12.075, 266.2, 0.814548, 0.88", "-12.1885, 267.413, 0.99905, 0.96", "-12.2211, 268.194, 1.20911, 1.33", "-12.2207, 268.316, 1.24809, 1.33", "-12.1089, 269.166, 1.53333, 1.69", "-11.7566, 270.576, 2.0026, 1.69", "-11.339, 271.958, 2.48175, 1.55", "-11.004, 273.117, 2.86496, 1.47", "-10.9718, 273.277, 2.9115, 1.47", "-10.842, 274.418, 3.18914, 1.4", "-10.8467, 275.305, 3.34423, 1.25", "-10.981, 276.254, 3.48814, 1.25", "-11.1982, 277.528, 3.66482, 1.69", "-11.3392, 278.569, 3.82286, 1.92", "-11.3697, 278.987, 3.89232, 1.92", "-11.4053, 280.15, 4.1013, 1.92", "-11.4294, 282.02, 4.44815, 1.47", "-11.401, 283.51, 4.73036, 1.11", "-11.3736, 284.761, 4.95074, 0.74", "-11.3735, 285.43, 5.03359, 0.74", "-11.3957, 286.081, 5.07424, 0.74", "-11.5145, 287.581, 5.0584, 0.74", "-11.5271, 287.662, 5.05086, 0.74", "-11.9211, 289.504, 4.77289, 0.74", "-12.1562, 290.502, 4.58638, 1.03", "-12.3443, 291.386, 4.38234, 1.4", "-12.4322, 291.898, 4.25378, 1.4", "-12.596, 293.131, 3.94045, 1.4", "-12.8095, 294.517, 3.60144, 1.11", "-12.9492, 295.261, 3.43, 1.11", "-13.2308, 296.628, 3.16398, 0.74", "-13.47, 297.709, 2.974, 0.74", "-13.6887, 298.691, 2.82362, 0.88", "-13.8941, 299.707, 2.70693, 1.03", "-14.0546, 300.648, 2.66052, 1.03", "-14.1768, 301.569, 2.6415, 1.03", "-14.2556, 302.389, 2.6532, 1.03", "-14.2618, 302.472, 2.65459, 1.03", "-14.3126, 303.489, 2.67377, 1.03", "-14.3273, 304.829, 2.70061, 1.33", "-14.2958, 306.016, 2.72512, 1.77", "-14.2242, 307.411, 2.75444, 2.06", "-14.1479, 308.489, 2.79888, 1.84", "-14.0828, 309.158, 2.83861, 1.84", "-13.918, 310.411, 2.93511, 1.84", "-13.7909, 311.3, 3.04938, 1.47", "-13.7392, 311.868, 3.14591, 1.47", "-13.6984, 312.999, 3.35742, 1.33", "-13.6978, 313.743, 3.49462, 1.33", "-13.7326, 314.812, 3.68846, 1.03", "-13.8373, 316.439, 3.97158, 0.74", "-13.9838, 318.59, 4.34656, 0.59", "-14.088, 320.582, 4.6751, 0.59", "-14.1235, 321.965, 4.87774, 0.59", "-14.1222, 322.036, 4.88782, 0.59", "-14.0496, 322.742, 4.97766, 0.59", "-13.8057, 323.728, 5.06772, 0.81", "-13.4625, 324.589, 5.15063, 0.81", "-13.2583, 325.049, 5.19588, 1.18", "-12.8898, 325.878, 5.26835, 1.55", "-12.6387, 326.595, 5.31567, 1.99", "-12.4396, 327.502, 5.3517, 1.99", "-12.3914, 327.983, 5.36215, 1.62", "-12.3644, 328.822, 5.38863, 1.18", "-12.3618, 329.259, 5.40578, 0.74", "-12.3913, 330.508, 5.44237, 0.74", "-12.418, 331.439, 5.46703, 0.74", "-12.435, 332.034, 5.48077, 0.59", "-12.4464, 332.711, 5.49359, 0.59", "-12.4449, 333.406, 5.50395, 0.59", "-12.3927, 335.239, 5.52304, 0.59", "-12.3582, 335.656, 5.52514, 0.66", "-12.282, 336.438, 5.52421, 0.81", "-12.1849, 337.436, 5.51595, 0.88", "-12.1316, 337.897, 5.55167, 0.96", "-12.0215, 338.616, 5.67495, 1.18", "-11.8758, 339.242, 5.85472, 1.4", "-11.6992, 339.869, 6.08425, 1.4", "-11.4493, 340.599, 6.42854, 1.4", "-10.9065, 341.987, 7.23152, 1.4", "-10.7909, 342.282, 7.41854, 1.33", "-10.7717, 342.337, 7.45531, 1.33", "-10.622, 342.83, 7.78109, 1.33", "-10.5972, 342.96, 7.84973, 1.33", "-10.593, 343.535, 8.00694, 1.18", "-10.6475, 344.062, 8.07476, 1.11", "-10.7296, 344.651, 8.14051, 1.03", "-10.7581, 344.819, 8.15831, 1.03", "-10.9655, 345.945, 8.16427, 1.03", "-11.1188, 347.116, 8.09067, 1.03", "-11.1687, 348.008, 7.89085, 1.03", "-11.0917, 349.069, 7.50782, 1.03", "-10.9695, 349.707, 7.21921, 1.03", "-10.5244, 351.383, 6.1421, 0.74", "-10.2439, 352.166, 5.54249, 0.74", "-9.63603, 353.525, 4.33179, 1.18", "-9.30124, 354.191, 3.66204, 1.47", "-8.90211, 354.942, 2.85692, 1.92", "-8.17381, 356.378, 1.39661, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_116",
    "id" : "dend_116",
    "points3d" : [ "91.0297, -174.127, -165.355, 0.96", "91.4969, -175.806, -165.651, 0.96", "91.8774, -176.989, -165.815, 0.81", "91.906, -177.065, -165.831, 0.81", "92.7319, -179.096, -166.327, 0.81", "93.0626, -179.812, -166.51, 0.96", "93.4729, -180.601, -166.713, 1.03", "93.8658, -181.263, -166.845, 1.03", "94.7584, -182.486, -167.128, 0.96", "94.8102, -182.55, -167.145, 0.96", "95.4356, -183.142, -167.645, 0.96", "95.6743, -183.406, -168.12, 0.52", "95.7336, -183.513, -168.628, 0.52", "95.7375, -183.529, -168.712, 0.52", "95.755, -183.69, -169.434, 0.52", "95.8649, -184.681, -173.282, 1.03", "95.8935, -184.942, -174.211, 1.03", "96.0644, -186.203, -178.359, 0.74", "96.1351, -186.521, -179.325, 0.74", "96.2724, -186.896, -180.316, 0.74", "96.4548, -187.216, -180.961, 0.74", "96.7406, -187.591, -181.289, 1.03", "96.7989, -187.648, -181.311, 1.03", "97.2659, -187.972, -181.283, 1.18", "97.7957, -188.217, -181.274, 1.18", "98.5759, -188.491, -181.283, 0.66", "99.1236, -188.642, -181.297, 0.81", "99.9296, -188.859, -181.326, 1.4", "101.583, -189.312, -181.401, 1.77", "102.799, -189.655, -181.477, 0.88", "102.91, -189.689, -181.489, 0.88", "103.309, -189.823, -181.55, 0.74", "104.259, -190.12, -181.688, 0.74", "104.077, -190.169, -181.728, 0.74", "103.862, -190.34, -181.88, 0.74", "103.252, -190.884, -182.351, 0.74", "102.809, -191.323, -182.753, 0.96", "102.165, -192.02, -183.384, 0.96", "102.06, -192.134, -183.491, 0.96", "101.431, -192.934, -184.202, 0.96", "101.11, -193.438, -184.615, 0.96", "100.823, -194.148, -185.105, 0.59", "100.737, -194.716, -185.416, 0.59", "100.747, -194.78, -185.438, 0.59", "100.931, -195.214, -185.499, 0.81", "101.023, -195.354, -185.492, 0.81", "101.398, -195.813, -185.431, 0.81", "101.993, -196.439, -185.303, 0.81", "103.046, -197.459, -185.074, 0.81", "103.782, -198.139, -184.914, 0.66", "104.362, -198.641, -184.788, 0.96", "104.426, -198.694, -184.774, 0.96", "104.941, -199.1, -184.671, 0.96" ],
    "parent" : "dend_114",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_115",
    "id" : "dend_115",
    "points3d" : [ "91.0297, -174.127, -165.355, 0.44", "90.1915, -175.284, -165.582, 0.44", "89.7618, -175.856, -165.698, 0.44", "89.7017, -175.924, -165.713, 0.44", "88.7118, -176.987, -165.963, 0.66", "88.0563, -177.69, -166.129, 0.22", "87.543, -178.241, -166.259, 0.22", "87.4573, -178.33, -166.28, 0.22", "86.3833, -179.364, -166.545, 0.22", "85.6042, -180.065, -166.734, 0.96" ],
    "parent" : "dend_114",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "32.5408, -159.165, 25.1305, 0.66", "32.576, -159.444, 25.0742, 0.66", "32.6042, -160.135, 24.9854, 0.66", "32.7086, -160.854, 24.8262, 0.66", "32.8224, -161.257, 24.6946, 0.66", "32.879, -161.419, 24.6339, 0.59", "33.0584, -161.842, 24.4637, 0.52", "33.3532, -162.411, 24.2001, 0.52", "33.9302, -163.291, 23.7489, 0.52", "34.4511, -163.907, 23.447, 0.52", "34.4752, -163.932, 23.4348, 0.52", "34.7817, -164.234, 23.299, 0.52", "34.9983, -164.42, 23.2107, 0.88", "35.188, -164.568, 23.1463, 0.88", "35.6218, -164.977, 23.1134, 0.37", "35.8665, -165.257, 23.1466, 0.37", "35.9606, -165.379, 23.1637, 1.33" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "32.5408, -159.165, 25.1305, 0.29", "31.7883, -159.754, 24.9073, 0.29", "31.2542, -160.171, 24.7489, 0.74", "30.1493, -161.035, 24.4212, 0.37", "28.7749, -162.11, 24.0135, 0.44", "27.5044, -163.103, 23.6367, 1.33" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-47.5872, -202.211, 9.09895, 1.47", "-48.3008, -204.337, 10.073, 1.47", "-48.7412, -205.628, 10.6634, 1.47", "-49.1778, -206.928, 11.2359, 1.47", "-49.5985, -208.258, 11.7856, 1.47", "-50.1384, -210.142, 12.5125, 1.18", "-50.3315, -210.817, 12.7724, 0.88", "-50.4628, -211.277, 12.9201, 1.18", "-50.6517, -211.983, 13.1818, 1.18", "-50.8283, -212.801, 13.5152, 1.18", "-50.9221, -213.55, 13.7793, 1.18" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-47.5872, -202.211, 9.09895, 0.22", "-46.0856, -202.133, 9.73429, 0.22", "-46.0432, -202.134, 9.7506, 0.22", "-44.8565, -202.198, 10.1508, 0.22", "-44.3826, -202.224, 10.3106, 0.22", "-44.2216, -202.233, 10.3649, 0.22", "-43.741, -202.258, 10.5269, 0.22", "-43.0727, -202.275, 10.7577, 0.22", "-42.475, -202.325, 10.9313, 0.22" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-114.763, -136.773, 66.3979, 0.59", "-115.325, -137.634, 67.3023, 0.59", "-116.264, -139.073, 68.8156, 3.0" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-114.763, -136.773, 66.3979, 0.44", "-116.094, -137.019, 66.6067, 0.44", "-116.177, -137.028, 66.6111, 0.44", "-117.268, -137.089, 66.5918, 1.5", "-119.61, -137.165, 66.4392, 0.37", "-120.438, -137.173, 66.3501, 0.37", "-121.481, -137.163, 66.2013, 0.37", "-122.95, -137.083, 65.9129, 0.37", "-123.661, -137.034, 65.7328, 0.37", "-124.066, -136.993, 65.5904, 0.74", "-124.716, -136.918, 65.2663, 0.74", "-125.214, -136.857, 65.0164, 0.52", "-126.087, -136.745, 64.5774, 0.37", "-126.158, -136.736, 64.5419, 0.37", "-126.694, -136.626, 64.2123, 0.37", "-127.609, -136.277, 63.4822, 0.37", "-127.639, -136.247, 63.4244, 0.37", "-127.701, -135.966, 62.9392, 0.37", "-127.689, -135.675, 62.4558, 0.37", "-127.58, -135.041, 61.3452, 0.52", "-127.448, -134.665, 60.6723, 0.52", "-127.035, -133.858, 59.2092, 1.25", "-126.857, -133.543, 58.6112, 1.25", "-126.76, -133.396, 58.3028, 1.99", "-126.624, -133.186, 57.8141, 1.99", "-126.399, -132.585, 56.4622, 1.99" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-227.254, -81.5639, -0.127043, 0.59", "-228.334, -81.9149, -0.864427, 0.59", "-228.644, -82.0563, -1.06385, 0.74", "-229.384, -82.4426, -1.53156, 1.18", "-229.706, -82.6405, -1.73785, 1.18", "-230.007, -82.8472, -1.93254, 1.18", "-230.81, -83.5182, -2.63779, 0.66", "-231.151, -83.9717, -3.07667, 0.66", "-231.2, -84.0417, -3.14703, 0.66", "-231.463, -84.4144, -3.51556, 0.52", "-231.491, -84.4471, -3.55249, 0.52", "-232.407, -85.4617, -4.85408, 0.88", "-232.513, -85.5655, -5.0121, 0.74", "-233.115, -86.024, -5.8701, 0.37", "-233.354, -86.1694, -6.16284, 0.96", "-233.842, -86.3819, -6.64588, 0.96" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-227.254, -81.5639, -0.127043, 0.37", "-227.121, -82.5604, -0.0818043, 0.37", "-227.045, -83.1343, -0.0557458, 0.37", "-226.929, -84.0042, -0.0162599, 0.37" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-78.4525, -35.2452, -26.9511, 0.66", "-79.391, -35.6849, -27.4769, 0.66", "-79.5843, -35.7578, -27.5761, 0.66", "-80.1911, -35.905, -27.8416, 0.88", "-81.1425, -36.0669, -28.196, 0.52", "-81.9135, -36.1742, -28.4485, 0.52", "-83.4502, -36.4166, -28.9866, 1.47", "-84.4336, -36.5885, -29.3589, 1.11", "-85.8185, -36.8404, -29.855, 0.37", "-87.0925, -37.0728, -30.2756, 0.37", "-88.2264, -37.2792, -30.6095, 0.37", "-89.5073, -37.5209, -30.9395, 0.37", "-90.3651, -37.6893, -31.1148, 0.37", "-91.2105, -37.892, -31.2826, 0.37", "-92.0326, -38.0721, -31.4248, 1.03", "-92.8368, -38.2315, -31.5407, 1.03", "-93.6943, -38.3581, -31.6105, 0.52", "-95.3149, -38.5062, -31.6653, 0.52", "-96.982, -38.6087, -31.7094, 0.52", "-98.1143, -38.6571, -31.7536, 0.52", "-98.9762, -38.6683, -31.8037, 0.52", "-100.654, -38.6687, -31.9302, 2.0", "-101.978, -38.6725, -32.0588, 2.0", "-103.016, -38.694, -32.1849, 1.8", "-104.357, -38.7861, -32.3976, 0.44", "-105.841, -38.9595, -32.6838, 0.44", "-106.481, -39.0454, -32.8321, 0.74", "-108.087, -39.3582, -33.2722, 0.74", "-109.199, -39.6166, -33.5776, 0.44", "-110.124, -39.8538, -33.8223, 0.52", "-110.756, -40.0339, -33.9759, 0.81", "-111.571, -40.2822, -34.1645, 0.52", "-112.544, -40.5707, -34.369, 0.59", "-113.382, -40.8122, -34.5168, 0.59", "-114.316, -41.0777, -34.6958, 0.59", "-115.05, -41.2902, -34.8525, 0.59", "-115.831, -41.5371, -35.0455, 0.59", "-116.746, -41.8222, -35.2987, 0.59", "-117.879, -42.1513, -35.6864, 0.59", "-118.987, -42.4772, -36.1116, 0.52", "-119.62, -42.6363, -36.3703, 0.52", "-120.213, -42.7615, -36.646, 0.52", "-121.142, -42.9282, -37.1135, 0.81", "-122.461, -43.1282, -37.7328, 0.37", "-123.185, -43.2177, -38.0467, 0.37", "-124.189, -43.3864, -38.4647, 0.37", "-125.417, -43.6381, -38.9802, 1.4", "-125.511, -43.6597, -39.0179, 1.4", "-126.842, -44.0491, -39.5564, 1.69", "-128.355, -44.5396, -40.1425, 0.37", "-130.57, -45.3088, -40.9852, 0.44", "-131.94, -45.8382, -41.5446, 0.44", "-132.865, -46.2007, -41.9287, 0.44", "-134.859, -47.0098, -42.7862, 0.44", "-134.997, -47.0684, -42.847, 0.44", "-135.955, -47.4782, -43.2417, 0.44", "-137.992, -48.3069, -44.0214, 0.44", "-139.85, -49.0664, -44.7184, 0.44", "-141.115, -49.5611, -45.1559, 0.44", "-142.052, -49.8989, -45.4741, 0.74", "-142.637, -50.1113, -45.6756, 0.52", "-143.58, -50.4568, -45.9793, 0.52", "-144.171, -50.665, -46.1567, 0.96", "-145.236, -51.0264, -46.5634, 1.33", "-146.482, -51.3983, -47.0839, 1.18", "-148.293, -51.891, -47.7981, 0.52", "-149.933, -52.3298, -48.435, 0.52", "-151.943, -52.8577, -49.2243, 0.52", "-154.186, -53.4765, -50.1733, 0.66", "-156.019, -54.0277, -51.0295, 0.66", "-157.656, -54.5783, -51.8317, 0.44", "-158.986, -55.0329, -52.54, 0.44", "-159.242, -55.1272, -52.6897, 0.44", "-160.737, -55.7894, -53.6318, 0.44", "-161.682, -56.3694, -54.3235, 1.47", "-162.201, -56.8992, -54.9955, 1.47" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-78.4525, -35.2452, -26.9511, 0.29", "-78.1876, -36.3994, -27.0809, 0.29", "-78.0496, -37.0009, -27.1486, 0.29", "-77.9633, -37.377, -27.1909, 0.29", "-77.758, -38.2715, -27.2915, 0.29", "-77.5533, -39.1637, -27.3918, 1.11" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-97.4818, -21.4657, -37.4747, 1.18", "-98.0779, -21.4663, -37.6934, 1.18", "-98.6751, -21.4545, -37.9079, 1.11", "-99.4905, -21.4234, -38.2001, 0.44", "-100.316, -21.3744, -38.5036, 0.66", "-101.371, -21.3045, -38.8996, 0.66", "-102.414, -21.2304, -39.2968, 0.44", "-103.218, -21.1629, -39.6225, 0.44", "-104.087, -21.053, -39.9735, 0.44", "-104.481, -20.9845, -40.1298, 0.44", "-104.98, -20.8731, -40.3107, 1.11", "-105.022, -20.861, -40.3268, 1.11", "-105.406, -20.7622, -40.4995, 1.11", "-105.96, -20.644, -40.7922, 0.37", "-106.252, -20.5777, -40.9404, 0.37", "-106.664, -20.4797, -41.1358, 0.37", "-107.207, -20.3423, -41.3979, 0.37", "-108.131, -20.1244, -41.8543, 0.74", "-108.214, -20.1071, -41.897, 0.74", "-109.04, -19.959, -42.3558, 1.18", "-109.323, -19.9272, -42.542, 1.18", "-109.842, -19.9211, -42.9149, 0.52", "-109.872, -19.9264, -42.9418, 0.52", "-110.137, -19.9984, -43.2066, 0.52", "-110.168, -20.0073, -43.2401, 0.52", "-110.822, -20.2373, -43.9751, 0.96", "-111.198, -20.3339, -44.3489, 1.77", "-111.875, -20.4361, -44.9017, 0.44", "-111.908, -20.4386, -44.9249, 0.37", "-112.835, -20.447, -45.5096, 0.37", "-112.982, -20.4397, -45.5928, 0.66", "-113.901, -20.3485, -46.0404, 0.66", "-115.132, -20.209, -46.5996, 0.37", "-115.798, -20.1026, -46.8305, 0.37", "-116.331, -20.0071, -46.9925, 0.37", "-116.958, -19.882, -47.1572, 0.44", "-117.508, -19.7545, -47.2827, 0.81", "-117.795, -19.6827, -47.344, 1.4", "-119.155, -19.3178, -47.6785, 0.66", "-119.824, -19.1358, -47.8271, 0.59", "-120.748, -18.878, -48.0306, 0.52", "-121.964, -18.539, -48.2943, 0.52", "-122.508, -18.3955, -48.4151, 1.4", "-123.21, -18.2271, -48.5821, 1.77", "-125.095, -17.8692, -49.1229, 0.52", "-125.553, -17.7802, -49.2505, 0.52", "-125.896, -17.7245, -49.3426, 0.66", "-126.389, -17.6559, -49.4655, 0.81", "-127.179, -17.5552, -49.6375, 0.81", "-127.785, -17.4909, -49.7774, 0.59", "-128.502, -17.4593, -50.0453, 0.37", "-128.867, -17.4375, -50.1847, 0.37", "-129.272, -17.4122, -50.3692, 0.37", "-129.312, -17.4102, -50.389, 0.37", "-129.63, -17.4048, -50.5454, 0.81", "-129.716, -17.3984, -50.5896, 1.18", "-130.155, -17.3581, -50.8672, 1.18", "-130.722, -17.2841, -51.2589, 0.74", "-131.101, -17.2372, -51.518, 0.52", "-131.439, -17.1933, -51.7407, 0.52", "-132.391, -17.0711, -52.3422, 0.52", "-133.136, -16.9644, -52.7968, 0.52", "-133.749, -16.8587, -53.1456, 0.37", "-134.337, -16.7352, -53.458, 0.37", "-134.922, -16.5832, -53.718, 0.66", "-135.262, -16.4838, -53.8437, 1.25", "-135.839, -16.3028, -54.0126, 1.25", "-136.819, -15.9408, -54.2148, 0.44", "-137.475, -15.6646, -54.3221, 0.44", "-138.823, -15.0496, -54.5157, 0.44", "-139.234, -14.8605, -54.568, 1.25", "-139.65, -14.6666, -54.6192, 2.06", "-140.35, -14.341, -54.7213, 2.06", "-140.736, -14.1677, -54.7947, 0.88", "-141.693, -13.7589, -55.0133, 0.37", "-142.881, -13.281, -55.3358, 0.37", "-144.57, -12.6101, -55.8153, 0.37", "-145.552, -12.2366, -56.1054, 0.37", "-146.626, -11.8166, -56.4123, 0.37", "-147.04, -11.6481, -56.5288, 0.81", "-147.076, -11.6329, -56.5402, 0.81", "-147.366, -11.5018, -56.6344, 1.4", "-147.533, -11.4306, -56.6846, 1.4", "-148.863, -10.9546, -57.0586, 1.18", "-150.409, -10.4976, -57.5026, 0.59", "-151.085, -10.345, -57.7089, 1.55", "-152.233, -10.1948, -58.0595, 0.44", "-152.998, -10.152, -58.2978, 0.44", "-153.914, -10.1564, -58.5985, 0.81", "-154.188, -10.189, -58.7018, 1.33", "-154.627, -10.2539, -58.8542, 1.62", "-155.958, -10.316, -59.1325, 0.52", "-156.492, -10.316, -59.2056, 0.52", "-157.04, -10.2825, -59.2267, 1.03", "-157.843, -10.1777, -59.1621, 1.4", "-157.981, -10.1572, -59.1451, 1.4", "-160.594, -9.69469, -58.6679, 0.59", "-161.567, -9.48378, -58.3977, 0.37", "-162.189, -9.3361, -58.1814, 0.37", "-163.139, -9.08199, -57.7827, 1.11" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-97.4818, -21.4657, -37.4747, 0.59", "-97.3674, -22.323, -37.334, 0.59", "-97.4107, -23.0974, -37.2349, 0.52", "-97.6358, -23.2239, -37.2596, 0.52", "-97.6948, -23.241, -37.2686, 0.52", "-98.1296, -23.3673, -37.3349, 0.52", "-98.6405, -23.5158, -37.4129, 0.44", "-98.9472, -23.5387, -37.4657, 0.44", "-99.2858, -23.5342, -37.5397, 0.81", "-99.3306, -23.531, -37.5507, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "42.377, 36.03, -23.8231, 0.29", "43.4448, 33.6726, -24.3467, 0.29", "43.9929, 32.4625, -24.6154, 0.29", "44.2394, 31.9183, -24.7362, 0.88", "44.2792, 31.8302, -24.7558, 0.88", "44.3191, 31.7422, -24.7754, 1.03" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "42.377, 36.03, -23.8231, 1.84", "44.4067, 36.1605, -24.1022, 1.84", "44.546, 36.1524, -24.0974, 1.84", "45.3133, 36.0646, -24.0351, 0.96", "46.3111, 35.9213, -23.947, 0.96", "47.9106, 35.6492, -23.7887, 0.44", "49.0306, 35.4755, -23.675, 1.25", "50.8302, 35.1983, -23.4106, 1.25", "51.8759, 35.0842, -23.2748, 1.62", "52.7496, 35.0228, -23.1769, 1.62", "54.411, 34.9543, -23.0326, 0.59", "55.6087, 34.882, -22.8917, 0.81", "56.6221, 34.8346, -22.7975, 0.81", "57.904, 34.7607, -22.7625, 0.74", "58.9704, 34.6728, -22.7549, 0.74", "59.6241, 34.6221, -22.7661, 0.74", "61.4219, 34.4142, -22.8476, 0.59", "63.2958, 33.9783, -22.9929, 0.66", "64.0862, 33.7567, -23.093, 1.18", "65.3302, 33.4016, -23.2887, 1.18", "67.1415, 32.9362, -23.597, 0.37", "68.2775, 32.685, -23.8012, 0.52", "70.5125, 32.2678, -24.1446, 0.52", "72.2006, 31.9349, -24.2922, 0.74", "73.1275, 31.7626, -24.3572, 0.74", "74.1776, 31.6051, -24.4071, 1.25", "74.499, 31.5577, -24.4172, 1.25", "76.2764, 31.3564, -24.4367, 1.55", "77.5165, 31.2648, -24.3481, 1.55", "78.4413, 31.1625, -24.2401, 1.33", "80.0524, 30.9801, -24.0372, 0.74", "81.7923, 30.8274, -23.9041, 0.74", "82.1779, 30.7924, -23.8928, 1.11", "84.8396, 30.4949, -23.9762, 0.59", "85.6334, 30.3871, -24.0312, 1.03", "86.3543, 30.2798, -24.108, 1.4", "88.5653, 29.9562, -24.4611, 0.66", "89.4869, 29.883, -24.643, 0.66", "90.7227, 29.7808, -24.9517, 0.66", "91.6299, 29.6777, -25.2781, 1.11", "92.5879, 29.572, -25.6163, 1.11", "93.5747, 29.4295, -25.9458, 0.74", "94.7181, 29.2933, -26.209, 0.74" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "40.1899, 95.0187, -3.83962, 0.88", "42.6618, 96.7285, -3.15865, 0.88", "43.8967, 97.7586, -2.80416, 1.18", "45.1562, 99.0559, -2.43587, 1.18", "45.9451, 100.03, -2.3123, 1.11", "46.6247, 101.008, -2.28436, 0.74", "47.1199, 101.794, -2.30428, 0.74", "47.5529, 102.868, -2.3697, 0.96", "47.8377, 103.853, -2.54804, 1.25", "48.6048, 105.632, -3.01023, 1.25", "48.977, 106.234, -3.16174, 1.11", "49.0303, 106.292, -3.17263, 1.11", "50.0422, 107.11, -3.23817, 0.88", "51.1666, 107.848, -3.20984, 0.66", "54.0898, 109.513, -2.9364, 0.66", "55.0105, 109.989, -2.77562, 0.96", "56.2973, 110.667, -2.52068, 1.25", "57.5102, 111.325, -2.25703, 1.25", "58.7103, 111.996, -1.96814, 1.03", "59.9087, 112.763, -1.64728, 0.74", "60.9159, 113.568, -1.33386, 0.74", "62.1216, 114.614, -0.95988, 0.74", "62.2457, 114.733, -0.923138, 0.74", "62.5716, 115.061, -0.83362, 0.74", "64.1544, 116.706, -0.449003, 1.11", "64.727, 117.27, -0.332005, 1.84", "64.7994, 117.332, -0.319694, 1.84", "66.1266, 118.306, -0.188127, 2.06", "66.2045, 118.363, -0.18392, 2.06", "67.1822, 119.142, -0.174133, 2.06", "67.845, 119.78, -0.209708, 1.4", "68.6963, 120.754, -0.300506, 1.18", "69.7852, 122.259, -0.471882, 0.74", "70.1585, 122.883, -0.501108, 0.74", "70.8954, 124.239, -0.447701, 0.66", "71.3851, 125.211, -0.325924, 0.66", "71.7249, 125.857, -0.180006, 0.66", "72.1864, 126.668, 0.200461, 0.66", "73.2513, 128.216, 1.25434, 1.47", "73.9494, 129.113, 1.92921, 1.84", "74.5765, 129.852, 2.51945, 2.14", "75.2728, 130.667, 3.1559, 1.92", "76.621, 132.283, 4.3539, 1.25", "77.6573, 133.843, 5.3338, 0.66", "78.047, 134.693, 5.72504, 0.66", "78.2095, 135.358, 5.97736, 0.96", "78.266, 135.991, 6.15355, 1.47", "78.2684, 136.072, 6.16894, 1.47", "78.3614, 138.55, 6.42694, 0.59", "78.4163, 139.559, 6.53804, 0.59", "78.5847, 140.627, 6.61437, 0.59", "78.974, 142.117, 6.66024, 0.59", "79.5333, 143.517, 6.61489, 0.81", "80.1445, 144.646, 6.49626, 0.81", "80.7543, 145.449, 6.35421, 1.47", "81.9199, 146.765, 6.09601, 1.92", "82.7286, 147.613, 5.94403, 1.92", "83.8454, 148.774, 5.75312, 0.44", "84.7905, 149.84, 5.68678, 0.44", "85.5406, 150.806, 5.75015, 0.44", "85.9275, 151.42, 5.86306, 0.44", "86.4387, 152.503, 6.18523, 0.44", "86.712, 153.274, 6.43473, 0.88", "87.0454, 154.993, 7.16479, 0.88", "87.2108, 156.191, 7.56393, 0.88", "87.3625, 157.384, 7.7746, 0.88", "87.4804, 158.107, 7.79458, 0.88", "87.7519, 159.226, 7.6561, 0.88", "88.6205, 161.83, 7.13024, 0.59", "89.7703, 164.522, 6.42646, 1.11", "90.4782, 165.989, 6.14113, 1.55", "91.049, 167.018, 6.01511, 2.58", "91.8936, 168.43, 5.90607, 1.55", "93.0615, 170.282, 5.83964, 0.52", "93.4808, 170.94, 5.84596, 0.52", "94.4866, 172.678, 6.17764, 0.59", "95.1755, 173.916, 6.46208, 0.59", "95.6028, 174.659, 6.63062, 1.03", "96.0015, 175.269, 6.77106, 1.99", "96.6538, 176.052, 6.9143, 2.28", "98.1144, 177.505, 7.12127, 0.81", "99.4232, 178.623, 7.22553, 0.81", "100.868, 179.753, 7.39762, 0.66", "102.538, 180.958, 7.61471, 0.66", "104.494, 182.323, 7.90541, 0.66", "105.271, 182.846, 8.03137, 1.62", "105.568, 183.047, 8.08208, 1.62", "107.004, 184.135, 8.42436, 1.62", "107.873, 184.997, 8.67325, 1.55", "108.493, 185.882, 8.9027, 0.96", "108.687, 186.235, 8.99895, 0.96", "108.902, 186.623, 9.09208, 0.96", "109.165, 187.071, 9.18431, 0.81", "109.741, 187.965, 9.31305, 0.81", "110.188, 188.544, 9.424, 1.03", "110.557, 188.926, 9.49237, 1.03", "111.16, 189.515, 9.59702, 1.4", "111.224, 189.58, 9.60719, 1.4", "111.574, 189.982, 9.65562, 1.4", "112.146, 190.845, 9.71017, 0.96", "112.53, 191.732, 9.7155, 0.96", "112.735, 192.531, 9.66133, 0.88", "112.957, 193.467, 9.62795, 0.88", "113.266, 194.228, 9.60149, 0.88", "113.693, 195.033, 9.57759, 0.88", "114.072, 195.653, 9.59348, 0.88", "114.548, 196.365, 9.64761, 1.18", "115.896, 198.191, 9.8323, 0.66", "117.297, 200.116, 10.2469, 0.66", "117.906, 200.967, 10.4491, 0.66", "118.497, 201.781, 10.6632, 1.03", "119.379, 203.015, 11.0136, 1.55", "120.18, 204.161, 11.3648, 1.77", "121.924, 206.57, 12.0261, 0.66", "122.617, 207.477, 12.2729, 0.37", "123.366, 208.295, 12.4582, 0.37", "123.856, 208.751, 12.5253, 0.44", "124.614, 209.401, 12.5787, 0.44", "126.084, 210.732, 12.5808, 0.44", "126.756, 211.416, 12.5109, 1.33", "127.365, 212.234, 12.527, 1.62", "127.933, 213.242, 12.6052, 1.62", "128.51, 214.465, 12.7379, 0.44", "129.063, 215.755, 12.9377, 0.44", "129.401, 216.505, 13.1036, 0.44", "130.456, 218.177, 13.5258, 0.44", "131.251, 219.008, 13.7705, 1.25", "131.902, 219.555, 13.9381, 2.06", "132.958, 220.347, 14.1596, 2.95", "134.29, 221.306, 14.422, 2.28", "135.789, 222.377, 14.6851, 1.18", "138.105, 224.112, 15.0052, 0.66", "139.541, 225.328, 15.2309, 0.66", "140.27, 226.053, 15.3676, 1.11", "140.91, 226.899, 15.5299, 1.84", "140.953, 226.982, 15.5466, 1.84", "141.346, 227.99, 15.7125, 1.84", "141.55, 228.562, 15.7421, 1.69", "141.837, 229.238, 15.7001, 1.25", "142.625, 230.986, 15.6446, 0.66", "142.951, 231.677, 15.6308, 0.66", "143.987, 233.733, 15.6763, 0.66", "144.84, 235.343, 15.7686, 0.66", "145.294, 236.182, 15.8368, 1.77", "146.502, 238.379, 16.1988, 0.81", "147.068, 239.395, 16.4332, 0.81", "147.859, 240.929, 16.9329, 0.52", "148.409, 242.089, 17.4302, 0.74", "148.76, 242.838, 17.8651, 0.74", "149.509, 244.314, 18.8293, 1.18", "149.764, 244.765, 19.1253, 0.88", "150.085, 245.3, 19.5403, 0.37", "150.53, 246.061, 20.2101, 0.37", "151.72, 248.031, 21.8596, 1.33", "152.024, 248.492, 22.1773, 1.33", "152.334, 248.899, 22.3666, 1.33", "152.775, 249.426, 22.5433, 0.66", "154.11, 250.935, 22.8366, 0.52", "155.082, 252.004, 22.8822, 0.88", "156.25, 253.243, 22.7512, 1.11", "157.474, 254.582, 22.6002, 0.37", "158.28, 255.483, 22.4901, 0.37", "158.694, 255.948, 22.418, 0.74", "159.155, 256.461, 22.3246, 0.96", "159.302, 256.671, 22.3121, 0.96", "159.861, 257.76, 22.1733, 0.96", "159.951, 257.964, 22.1257, 1.33", "160.144, 258.399, 22.1126, 1.33", "160.537, 259.115, 22.2541, 1.03", "161.58, 260.774, 22.8732, 0.74", "162.74, 262.378, 23.7301, 0.52", "163.376, 263.097, 24.2206, 0.52", "166.274, 265.862, 26.4233, 0.52", "167.501, 266.923, 27.4572, 0.44", "167.826, 267.179, 27.7492, 0.44", "168.217, 267.47, 28.1176, 1.25", "169.154, 268.206, 29.0326, 1.62", "169.889, 268.847, 29.6211, 1.18", "171.349, 270.321, 30.4309, 0.44", "171.701, 270.741, 30.6562, 0.44", "172.307, 271.472, 31.0386, 0.59", "172.691, 271.952, 31.2693, 0.59", "173.304, 272.735, 31.6292, 0.96", "174.043, 273.68, 31.9915, 1.18", "174.255, 273.957, 32.0864, 1.18", "175.274, 275.527, 32.6594, 0.44", "175.825, 276.613, 33.0539, 0.44", "175.852, 276.7, 33.0804, 0.44", "175.998, 277.627, 33.2858, 0.44", "176.085, 278.953, 33.4779, 1.03", "176.119, 280.219, 33.628, 1.62", "176.121, 280.866, 33.6957, 1.92", "176.179, 282.563, 33.8598, 0.59", "176.345, 283.762, 33.9717, 0.59", "176.682, 284.779, 34.082, 0.59", "176.967, 285.37, 34.1563, 0.44", "177.54, 286.419, 34.3703, 0.59", "177.569, 286.482, 34.3979, 0.59", "177.891, 287.37, 34.8612, 0.59", "178.437, 289.024, 35.8212, 0.59", "178.868, 290.7, 36.8233, 0.59", "179.008, 291.511, 37.2983, 0.59", "179.252, 294.079, 38.747, 1.03", "179.31, 295.449, 39.5299, 1.69" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "40.1899, 95.0187, -3.83962, 0.37", "39.3611, 95.0324, -4.25313, 0.37", "39.2233, 95.0397, -4.3184, 0.37", "38.2377, 95.1603, -4.73424, 0.22", "37.369, 95.2701, -5.0501, 0.22", "37.0742, 95.2957, -5.14276, 0.59", "36.7642, 95.3185, -5.23386, 0.59", "36.4882, 95.3195, -5.3344, 0.44", "35.6682, 95.3107, -5.66413, 0.37", "34.7871, 95.2832, -6.03477, 0.37", "33.8225, 95.2234, -6.48866, 0.37", "33.7838, 95.2198, -6.5084, 0.37", "32.4037, 95.0318, -7.27825, 1.03", "32.0567, 94.9582, -7.4963, 1.47", "32.0196, 94.9454, -7.52754, 1.47" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "73.2431, 283.33, 28.8483, 0.44", "69.9398, 285.084, 36.3157, 0.44", "69.611, 285.281, 36.9645, 0.44", "69.3873, 285.418, 37.3878, 0.81", "69.0689, 285.617, 37.9469, 1.11", "68.4254, 285.999, 39.1715, 0.29", "68.2382, 286.103, 39.5609, 0.37", "67.86, 286.596, 39.115, 0.37", "67.1913, 287.474, 38.3103, 0.81", "66.9446, 287.79, 38.0319, 0.81", "65.9695, 289.209, 36.9223, 0.44", "65.5996, 289.924, 36.4033, 0.52", "65.2262, 290.828, 35.8363, 0.52", "64.8457, 291.966, 35.2584, 0.52", "64.5813, 292.9, 34.8914, 0.52", "64.2774, 294.133, 34.4498, 0.52", "63.8573, 296.267, 33.847, 0.52", "63.7169, 297.215, 33.597, 0.29", "63.5717, 298.613, 33.2698, 0.29", "63.4973, 299.525, 33.0871, 0.29", "63.3539, 301.198, 32.7383, 0.29", "63.1408, 303.26, 32.3216, 0.29", "63.1363, 303.313, 32.3137, 0.29", "63.1161, 304.521, 32.0198, 0.29", "63.1188, 304.572, 32.0027, 0.29", "63.227, 305.889, 31.4933, 0.29", "63.3133, 306.736, 31.1407, 0.29", "63.3803, 307.482, 30.7986, 0.74", "63.5887, 309.793, 29.71, 0.29", "63.7243, 311.294, 28.9742, 0.29", "63.8416, 312.655, 28.3181, 0.29", "63.8675, 312.986, 28.1625, 0.59", "63.8877, 313.451, 27.9234, 0.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "73.2431, 283.33, 28.8483, 0.52", "73.5018, 283.494, 28.9048, 0.52", "73.9097, 283.818, 28.9921, 0.96", "74.5953, 284.479, 29.1353, 1.11", "75.5171, 285.576, 29.4382, 0.52", "75.9753, 286.198, 29.6278, 0.52", "76.3095, 286.724, 29.7724, 0.52", "76.6234, 287.353, 29.9445, 0.52", "76.7721, 287.803, 30.0731, 0.52", "76.9633, 289.01, 30.4314, 0.52", "76.9758, 289.854, 30.6511, 0.52", "77.0104, 290.74, 30.9162, 0.52", "77.0838, 291.421, 31.137, 1.25", "77.2028, 292.234, 31.3998, 1.4", "77.2851, 292.758, 31.5548, 1.4", "77.5553, 294.11, 31.927, 0.44", "77.977, 295.769, 32.4174, 0.44", "78.2689, 296.682, 32.6928, 0.44", "78.4601, 297.197, 32.8328, 0.44", "78.6748, 297.731, 32.9888, 1.11", "79.2173, 299.313, 33.4581, 0.44", "79.3983, 300.046, 33.6754, 0.44", "79.4926, 300.785, 33.8462, 0.66", "79.533, 301.37, 33.9702, 0.96", "79.6008, 302.573, 34.2086, 0.52", "79.708, 303.978, 34.5138, 0.52", "79.7487, 304.738, 34.6729, 0.52", "79.7759, 305.094, 34.7524, 0.81", "79.8528, 305.709, 34.8912, 1.11", "79.9667, 306.338, 35.0268, 1.11", "80.3418, 307.696, 35.2875, 0.66", "80.4915, 308.108, 35.3984, 0.66", "80.6741, 308.608, 35.545, 0.66", "80.8854, 309.224, 35.7184, 0.44", "80.9096, 309.297, 35.7357, 0.44", "80.9586, 309.442, 35.763, 0.44", "81.1699, 310.02, 35.8468, 0.44", "81.6981, 311.291, 36.0609, 0.44", "82.0863, 312.083, 36.2118, 0.44", "82.5822, 313.009, 36.4142, 0.44", "82.9969, 313.76, 36.5752, 0.81", "83.2195, 314.154, 36.6562, 1.11", "83.5047, 314.668, 36.767, 0.52", "83.9167, 315.5, 36.9743, 0.52", "84.1955, 316.088, 37.1403, 0.59", "84.3531, 316.521, 37.2984, 0.59", "84.4345, 316.86, 37.4376, 0.74", "84.5422, 317.491, 37.7141, 0.74", "84.6249, 318.306, 38.1256, 0.59", "84.6592, 318.878, 38.4269, 0.59", "84.679, 320.009, 38.9992, 0.59", "84.6895, 320.436, 39.2063, 0.59", "84.7035, 320.804, 39.364, 0.74", "84.7536, 322.26, 39.8633, 0.88", "84.7567, 323.14, 40.1015, 0.88", "84.7304, 323.965, 40.27, 1.33", "84.6778, 325.092, 40.4839, 2.0", "84.6305, 325.839, 40.6358, 2.0", "84.5447, 326.938, 40.8557, 2.0", "84.4849, 327.95, 41.0823, 1.25", "84.4671, 328.435, 41.2222, 1.25", "84.4427, 330.027, 41.7714, 0.88", "84.4169, 330.853, 42.1026, 0.88", "84.3608, 331.577, 42.4066, 0.88", "84.2084, 332.721, 42.8553, 1.47", "84.1973, 332.779, 42.8742, 1.47", "83.8165, 334.28, 43.2024, 2.28", "83.6325, 334.869, 43.2612, 2.06", "83.0587, 336.657, 43.5035, 0.37", "82.6808, 337.925, 43.6885, 0.44", "82.4924, 338.532, 43.7613, 0.44", "82.2076, 339.517, 43.8827, 0.44", "81.9917, 340.382, 43.9997, 0.44", "81.4926, 342.87, 44.4006, 0.96", "81.4223, 343.633, 44.5914, 1.62" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-8.17381, 356.378, 1.39661, 1.69", "-8.22468, 358.562, 0.799322, 1.69", "-8.20842, 359.149, 0.677236, 1.69", "-8.13918, 359.963, 0.541411, 1.69", "-7.97301, 361.326, 0.349714, 1.55", "-7.80944, 362.38, 0.226137, 1.55", "-7.61238, 363.551, 0.111126, 1.25", "-7.39847, 364.72, 0.109094, 1.25", "-7.24527, 365.568, 0.109117, 1.25", "-7.16552, 366.078, 0.109663, 1.69", "-7.0587, 366.986, 0.111903, 1.69", "-7.01389, 367.881, 0.115413, 1.69", "-7.0745, 368.683, 0.116847, 1.69", "-7.21672, 369.566, 0.109631, 1.47", "-7.47888, 370.681, 0.177834, 1.47", "-7.62697, 371.256, 0.247586, 1.33", "-7.81299, 371.926, 0.433456, 1.11", "-8.05289, 372.905, 0.842424, 1.11", "-8.15362, 373.417, 1.11926, 0.66", "-8.35283, 374.884, 2.00002, 0.66", "-8.40296, 375.388, 2.33669, 0.66", "-8.49354, 377.037, 3.29361, 1.03", "-8.50303, 377.708, 3.62957, 1.62", "-8.46754, 379.02, 4.15905, 1.62", "-8.40761, 380.18, 4.52075, 1.99", "-8.24963, 382.133, 4.93385, 1.99", "-8.03905, 384.282, 5.26275, 1.99", "-7.93472, 385.028, 5.31671, 1.47", "-7.76683, 386.038, 5.37202, 1.11", "-7.55753, 387.005, 5.36679, 0.74", "-7.5416, 387.076, 5.37134, 0.66", "-7.38864, 387.909, 5.48392, 0.66", "-7.30917, 388.792, 5.71559, 0.66", "-7.30589, 389.239, 5.82749, 0.66", "-7.34596, 390.207, 6.05011, 1.03", "-7.50524, 392.69, 6.53527, 1.69", "-7.60606, 393.957, 6.76747, 1.69", "-7.72689, 395.36, 7.00399, 1.69", "-7.86657, 396.973, 7.25307, 1.69", "-7.92339, 398.031, 7.39228, 1.69", "-7.92789, 399.175, 7.5062, 1.33", "-7.92308, 399.252, 7.50687, 1.33", "-7.76622, 400.512, 7.52731, 0.96", "-7.75374, 400.584, 7.52895, 0.96", "-7.44282, 401.993, 7.5715, 0.59", "-7.19616, 403.044, 7.6078, 0.59", "-7.02297, 403.747, 7.63545, 0.59", "-6.74694, 404.864, 7.68343, 0.59", "-6.63883, 405.3, 7.70344, 0.59", "-6.44762, 406.119, 7.78004, 0.59", "-6.35176, 406.607, 7.84471, 0.59", "-6.18393, 407.511, 7.99152, 0.59", "-5.94414, 408.816, 8.22414, 0.59", "-5.92795, 408.906, 8.23643, 0.59", "-5.71437, 410.068, 8.29453, 0.96", "-5.51152, 411.205, 8.27343, 1.4", "-5.32734, 412.277, 8.18923, 1.55", "-5.16454, 413.282, 7.98105, 1.99", "-4.95173, 414.511, 7.6396, 1.99", "-4.73722, 415.764, 7.26839, 1.99", "-4.72566, 415.829, 7.24695, 1.99", "-4.56038, 416.829, 6.92394, 1.99", "-4.2708, 419.511, 6.14991, 1.18", "-4.19208, 420.65, 5.81192, 1.18", "-4.15724, 421.483, 5.58139, 1.18", "-4.15565, 421.554, 5.56339, 1.18", "-4.13103, 422.854, 5.23249, 1.18", "-4.09483, 424.594, 4.79525, 1.18", "-4.07915, 426.743, 4.32516, 0.81", "-4.07796, 427.233, 4.2146, 0.81", "-4.04854, 428.781, 3.89846, 0.81", "-4.04577, 428.943, 3.87129, 0.81", "-4.02572, 429.776, 3.7708, 0.81", "-3.98476, 431.168, 3.62146, 0.81", "-3.94969, 433.401, 3.43484, 0.81", "-3.93561, 435.301, 3.22234, 0.74", "-3.93523, 436.58, 3.05112, 0.74", "-3.95205, 438.572, 2.76444, 0.74", "-3.97356, 440.009, 2.541, 0.96", "-3.98012, 440.829, 2.40811, 1.33", "-3.9945, 441.818, 2.24883, 1.77", "-4.02514, 442.817, 2.08048, 1.99", "-4.06226, 443.957, 1.90436, 1.99", "-4.06646, 444.04, 1.89446, 1.99", "-4.11786, 445.003, 1.84333, 1.99", "-4.19132, 445.738, 1.81805, 1.69", "-4.30591, 446.467, 1.78493, 1.33", "-4.44211, 447.144, 1.72877, 1.18", "-4.60494, 447.832, 1.62983, 0.88", "-4.78826, 448.594, 1.43094, 0.52", "-5.03875, 449.62, 1.11225, 0.52", "-5.33076, 450.794, 0.746779, 0.66", "-5.39248, 451.042, 0.67334, 0.66", "-5.72811, 452.359, 0.374902, 0.66", "-6.32007, 454.781, -0.00578541, 0.66", "-6.82352, 456.922, -0.173204, 0.66", "-7.18256, 458.73, -0.177464, 0.66", "-7.41512, 460.112, -0.0862315, 0.66", "-7.64456, 461.95, 0.135444, 1.11", "-7.71925, 462.889, 0.284667, 1.62", "-7.76003, 463.985, 0.475536, 1.62", "-7.75011, 464.924, 0.584497, 1.77", "-7.69818, 466.256, 0.629717, 1.99", "-7.64357, 467.428, 0.570944, 1.77", "-7.59843, 469.0, 0.364299, 1.4", "-7.61844, 471.367, 0.00288231, 0.66", "-7.63496, 471.783, -0.061363, 0.66", "-7.7637, 473.227, -0.252805, 0.66", "-7.77535, 473.319, -0.261599, 0.66", "-8.03998, 475.107, -0.37217, 0.59", "-8.18729, 476.192, -0.37909, 0.59", "-8.3055, 477.172, -0.39292, 0.96", "-8.32825, 477.355, -0.397147, 0.96", "-8.42237, 478.1, -0.434198, 1.4", "-8.4657, 478.456, -0.460292, 1.4", "-8.50723, 478.921, -0.508662, 1.55", "-8.5114, 479.032, -0.526402, 1.55", "-8.53527, 479.639, -0.643549, 1.99", "-8.56166, 480.552, -0.829724, 1.99", "-8.5708, 480.731, -0.86844, 1.99", "-8.64509, 481.735, -1.08306, 1.69", "-8.78535, 482.551, -1.23892, 1.69", "-8.95288, 483.261, -1.34988, 0.88", "-9.01276, 483.507, -1.37677, 0.88", "-9.14779, 484.082, -1.41485, 0.74", "-9.20065, 484.307, -1.42537, 0.74", "-9.59171, 486.005, -1.50266, 0.66", "-9.89297, 487.357, -1.55859, 0.66", "-10.2568, 489.049, -1.63876, 0.66", "-10.7156, 491.19, -1.74471, 0.66", "-11.0019, 492.582, -1.78748, 0.66", "-11.1875, 493.467, -1.80254, 0.66", "-11.3472, 494.235, -1.80437, 1.33", "-11.6233, 495.401, -1.79203, 1.62", "-11.9695, 496.691, -1.75726, 1.4", "-12.2885, 497.884, -1.69655, 0.81", "-12.4238, 498.47, -1.65239, 0.81", "-12.5444, 499.239, -1.5783, 1.25", "-12.5749, 500.073, -1.50198, 1.69", "-12.5687, 500.156, -1.49562, 1.69", "-12.4158, 501.237, -1.44804, 1.69", "-12.3087, 501.834, -1.44038, 1.47", "-12.0046, 503.312, -1.42437, 0.96", "-11.6613, 504.96, -1.41233, 0.81", "-11.4717, 506.066, -1.41129, 0.81", "-11.404, 506.669, -1.41541, 0.88", "-11.3517, 507.622, -1.42928, 1.03", "-11.3716, 508.21, -1.44307, 1.4", "-11.4473, 508.801, -1.46243, 0.59", "-11.702, 510.112, -1.50711, 0.59", "-11.8562, 510.815, -1.52309, 0.59", "-12.0071, 511.47, -1.52912, 1.62", "-12.2274, 512.476, -1.535, 1.99", "-12.2437, 512.552, -1.53533, 1.99", "-12.4521, 513.637, -1.53647, 1.99", "-12.6295, 514.627, -1.53599, 1.99", "-12.8747, 515.879, -1.5397, 1.99", "-13.0975, 516.896, -1.54736, 1.84", "-13.2752, 517.722, -1.55467, 1.25", "-13.4546, 518.578, -1.56312, 0.66", "-13.6749, 519.624, -1.57557, 0.66", "-14.1077, 521.773, -1.60325, 0.52", "-14.4222, 523.492, -1.6217, 0.52", "-14.6609, 524.801, -1.54297, 0.52", "-14.8384, 525.884, -1.41352, 0.81", "-15.0441, 527.238, -1.18025, 0.81", "-15.1953, 528.284, -0.892362, 0.81", "-15.3293, 529.137, -0.562353, 0.96", "-15.7726, 531.517, 0.542847, 0.96", "-15.8492, 531.896, 0.7384, 1.47", "-16.0327, 532.789, 1.21521, 1.47", "-16.32, 534.306, 1.9438, 1.55", "-16.4399, 535.082, 2.18372, 1.62", "-16.5521, 536.268, 2.27098, 1.77", "-16.5649, 536.904, 2.18294, 1.77", "-16.5582, 537.821, 1.98427, 1.77", "-16.4833, 539.073, 1.61687, 1.62", "-16.2858, 540.737, 1.03148, 1.33", "-16.1459, 541.656, 0.739469, 1.03", "-16.0216, 542.419, 0.519705, 1.03", "-15.9625, 542.816, 0.424951, 1.03", "-15.759, 544.148, 0.222055, 1.03", "-15.6112, 545.229, 0.184457, 1.03", "-15.4485, 546.573, 0.239132, 0.96", "-15.4387, 546.653, 0.238636, 0.96", "-15.3729, 547.149, 0.209559, 0.88", "-15.2261, 548.369, 0.102262, 0.81", "-15.128, 549.575, -0.0455711, 0.81", "-15.1042, 550.413, -0.167893, 0.81", "-15.1172, 551.751, -0.315087, 1.25", "-15.1407, 552.68, -0.37784, 1.62", "-15.1727, 553.587, -0.400268, 1.62", "-15.1847, 554.358, -0.382503, 1.4", "-15.1846, 555.374, -0.309952, 1.62", "-15.1766, 556.694, -0.160311, 2.06", "-15.1637, 557.838, 0.0176547, 2.06", "-15.127, 558.855, 0.168672, 2.06", "-15.0599, 559.791, 0.296562, 2.21", "-14.9519, 560.835, 0.416658, 2.21", "-14.8373, 561.884, 0.49869, 1.4", "-14.7868, 562.483, 0.510933, 1.84", "-14.7602, 563.154, 0.521148, 1.84", "-14.7479, 563.612, 0.52744, 1.77", "-14.7266, 564.369, 0.537943, 1.69", "-14.6886, 564.985, 0.548912, 1.25", "-14.6331, 565.694, 0.562906, 0.88", "-14.5942, 566.259, 0.573438, 0.74", "-14.5529, 567.162, 0.587823, 0.74", "-14.5353, 568.02, 0.598973, 0.74", "-14.5397, 568.585, 0.617867, 0.74", "-14.5461, 568.821, 0.629181, 0.74", "-14.5873, 569.559, 0.671442, 0.74", "-14.6692, 570.541, 0.733706, 0.74", "-14.7687, 571.469, 0.796601, 1.03", "-14.9011, 572.599, 0.874902, 1.25", "-14.9834, 573.271, 0.917935, 1.25", "-15.012, 573.509, 0.938982, 1.55", "-15.0735, 574.136, 1.00147, 1.55", "-15.1139, 574.72, 1.06057, 1.25", "-15.1342, 575.457, 1.07779, 0.66", "-15.1508, 576.659, 1.14558, 0.66", "-15.1746, 578.381, 1.28983, 0.52", "-15.1891, 580.103, 1.43936, 0.52", "-15.1939, 581.29, 1.54689, 0.59", "-15.1915, 583.486, 1.75244, 0.59", "-15.1444, 585.629, 1.96057, 0.96", "-15.1191, 586.171, 2.01189, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.17381, 356.378, 1.39661, 0.29", "-9.33212, 356.79, 1.62972, 0.29", "-11.1687, 357.443, 1.99932, 0.29", "-12.0863, 357.769, 2.18397, 0.29", "-13.4819, 358.265, 2.46483, 0.29", "-14.3867, 358.587, 2.64691, 0.29", "-14.7526, 358.717, 2.72054, 0.88" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_120",
    "id" : "dend_120",
    "points3d" : [ "104.941, -199.1, -184.671, 1.25", "106.501, -200.29, -185.455, 1.25", "107.655, -201.171, -186.036, 1.25", "108.099, -201.51, -186.259, 1.25" ],
    "parent" : "dend_116",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_117",
    "id" : "dend_117",
    "points3d" : [ "104.941, -199.1, -184.671, 0.29", "103.371, -200.361, -185.028, 0.29", "102.213, -201.292, -185.292, 0.29", "101.062, -202.216, -185.554, 0.29", "100.587, -202.597, -185.662, 1.03" ],
    "parent" : "dend_116",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "35.9606, -165.379, 23.1637, 0.66", "36.3821, -166.667, 23.6973, 0.66", "36.6898, -167.408, 23.9779, 0.29", "36.9865, -167.913, 24.1318, 0.29", "37.2118, -168.168, 24.1768, 0.59", "37.3277, -168.279, 24.1863, 0.59", "37.6094, -168.554, 24.198, 1.03", "37.9153, -168.838, 24.156, 0.66", "38.4054, -169.354, 24.073, 0.66", "39.1017, -170.214, 23.9413, 0.37", "39.5617, -170.88, 23.849, 0.37", "39.9974, -171.655, 23.759, 0.37", "40.3434, -172.356, 23.6826, 0.37", "40.6838, -173.221, 23.6005, 1.47", "40.7608, -173.515, 23.576, 1.47", "40.8111, -174.016, 23.541, 2.43", "40.8089, -174.558, 23.5067, 2.28" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "35.9606, -165.379, 23.1637, 0.22", "35.3941, -165.819, 22.8618, 0.22", "34.103, -166.819, 22.1738, 0.22", "33.7244, -167.113, 21.9719, 0.22", "33.6228, -167.192, 21.9178, 0.22", "33.1865, -167.53, 21.6853, 0.74", "33.0301, -167.651, 21.602, 1.18" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-50.9221, -213.55, 13.7793, 1.33", "-50.9716, -214.036, 14.1988, 1.33", "-51.072, -214.998, 14.9117, 1.33", "-51.1935, -216.178, 15.6447, 1.33", "-51.1988, -216.231, 15.6695, 1.33", "-51.2907, -217.124, 16.0249, 1.11", "-51.4025, -218.328, 16.4276, 1.03", "-51.4871, -219.2, 16.6263, 1.03", "-51.5725, -220.232, 16.6911, 1.55", "-51.6493, -221.599, 16.6241, 1.99", "-51.6499, -221.66, 16.6182, 1.99", "-51.5911, -222.787, 16.4561, 2.21", "-51.489, -223.787, 16.2686, 2.21", "-51.2985, -224.994, 16.0079, 2.21", "-51.1332, -225.779, 15.8367, 2.21", "-50.9613, -226.454, 15.7132, 2.21", "-50.731, -227.342, 15.5578, 2.14", "-50.6106, -227.813, 15.4806, 1.99", "-50.3209, -228.996, 15.3175, 1.92", "-50.1554, -229.874, 15.2161, 1.84", "-50.0351, -231.083, 15.0333, 0.88", "-50.0399, -231.988, 14.8287, 0.88", "-50.1005, -232.446, 14.6605, 0.88", "-50.1305, -232.564, 14.587, 0.88", "-50.4197, -233.237, 14.0203, 0.88", "-50.7378, -233.812, 13.4157, 1.03", "-51.2007, -234.581, 12.5825, 1.18", "-51.7502, -235.636, 11.49, 1.18", "-52.3549, -237.022, 10.163, 1.33", "-52.6312, -237.683, 9.53356, 1.33", "-52.9565, -238.526, 8.74562, 1.11", "-53.3454, -239.716, 7.70162, 0.74", "-53.6753, -240.971, 6.80705, 0.81", "-53.7711, -241.527, 6.52554, 0.88" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-50.9221, -213.55, 13.7793, 0.29", "-48.5804, -211.892, 13.082, 0.29", "-47.4864, -211.132, 12.8007, 0.29", "-47.3221, -211.018, 12.7584, 0.29", "-47.0099, -210.801, 12.6781, 0.29", "-46.4972, -210.445, 12.5463, 0.88", "-45.9739, -210.082, 12.4117, 1.92", "-45.8863, -210.02, 12.426, 1.92" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-233.842, -86.3819, -6.64588, 0.81", "-235.196, -86.6716, -6.19804, 0.81", "-235.935, -86.8401, -5.96804, 1.84", "-236.507, -86.9808, -5.80536, 2.43", "-238.058, -87.382, -5.38704, 0.59", "-238.78, -87.5944, -5.19581, 0.59", "-238.864, -87.6215, -5.17491, 0.59", "-239.365, -87.7949, -5.07941, 0.59", "-239.921, -87.9994, -4.9976, 0.59", "-239.977, -88.0191, -4.99403, 0.59", "-240.526, -88.1932, -4.95962, 0.59", "-241.219, -88.4074, -4.86722, 0.59", "-241.975, -88.6474, -4.7348, 0.59", "-242.709, -88.8945, -4.65456, 0.59", "-243.257, -89.0923, -4.63393, 0.59", "-244.398, -89.522, -4.64837, 0.37", "-245.045, -89.759, -4.69421, 0.59", "-245.753, -90.0452, -4.74221, 0.59", "-247.016, -90.6147, -4.83117, 0.59", "-247.742, -90.9677, -4.89119, 1.55", "-247.785, -90.9865, -4.8959, 1.55", "-248.456, -91.2041, -5.00134, 2.06", "-249.342, -91.4198, -5.18691, 0.81", "-249.968, -91.5402, -5.32404, 0.59", "-250.033, -91.5507, -5.33663, 0.59", "-250.929, -91.6728, -5.63812, 0.59", "-251.656, -91.7782, -5.9803, 0.59", "-252.931, -91.9781, -6.80579, 0.59", "-253.051, -91.9974, -6.89217, 0.59", "-253.451, -92.077, -7.18813, 1.11", "-254.195, -92.2548, -7.74038, 1.11", "-255.088, -92.5146, -8.42517, 0.59", "-255.939, -92.7654, -9.05317, 0.81", "-256.674, -92.9448, -9.53938, 0.81", "-257.255, -93.0891, -9.93404, 0.29", "-257.293, -93.098, -9.95948, 0.29", "-257.691, -93.1742, -10.1753, 0.29", "-258.029, -93.215, -10.3387, 0.29", "-258.256, -93.225, -10.4299, 0.66", "-258.303, -93.2255, -10.4473, 0.66", "-259.192, -93.2121, -10.7942, 0.66", "-260.135, -93.2023, -11.1684, 0.66", "-260.934, -93.1944, -11.4818, 0.66", "-261.804, -93.2001, -11.8135, 0.44", "-262.267, -93.1984, -11.9808, 0.44", "-263.083, -93.2189, -12.2579, 0.44", "-263.395, -93.2397, -12.3732, 1.25", "-263.878, -93.2938, -12.5855, 1.69", "-264.508, -93.3714, -12.8759, 0.59", "-265.338, -93.5054, -13.3108, 0.59", "-265.959, -93.6169, -13.6327, 0.59", "-267.394, -93.9, -14.3234, 0.59", "-268.729, -94.1733, -14.9657, 0.59", "-269.186, -94.2725, -15.1829, 0.96", "-269.967, -94.4536, -15.5678, 1.47", "-271.313, -94.7733, -16.2232, 0.52", "-272.287, -94.9759, -16.6687, 0.52", "-272.36, -94.9916, -16.6974, 0.52", "-272.886, -95.1107, -16.875, 0.52", "-274.128, -95.4476, -17.2753, 0.52", "-274.225, -95.4777, -17.3068, 0.52", "-274.483, -95.5708, -17.4019, 0.52", "-274.536, -95.5911, -17.4202, 0.52", "-275.228, -95.8742, -17.6237, 0.52", "-276.019, -96.202, -17.8137, 0.52", "-276.691, -96.4677, -17.9291, 1.77", "-277.295, -96.69, -18.0262, 2.06", "-278.123, -96.9699, -18.1499, 1.18", "-278.712, -97.1595, -18.2313, 0.66", "-279.129, -97.2811, -18.2847, 0.66", "-280.068, -97.5275, -18.404, 0.66", "-280.884, -97.7252, -18.497, 0.59", "-281.691, -97.9066, -18.6033, 0.59", "-282.087, -97.9778, -18.6639, 0.59", "-282.192, -97.993, -18.6853, 0.59", "-282.807, -98.0779, -18.866, 0.59", "-283.355, -98.1475, -19.0853, 0.59", "-283.799, -98.1887, -19.2788, 0.74", "-284.175, -98.2223, -19.4392, 0.81", "-284.759, -98.2729, -19.661, 1.25", "-285.471, -98.3468, -19.9093, 1.62", "-285.516, -98.3528, -19.9284, 1.62", "-286.287, -98.4497, -20.2798, 0.66", "-287.307, -98.5569, -20.7391, 0.59", "-288.189, -98.6324, -21.1152, 0.59", "-288.233, -98.6349, -21.1325, 0.59", "-289.761, -98.6967, -21.6999, 0.66", "-290.974, -98.7291, -22.1549, 0.66", "-291.766, -98.7265, -22.4116, 0.59", "-292.37, -98.7034, -22.5485, 1.03", "-292.775, -98.6996, -22.5929, 0.66", "-293.606, -98.7205, -22.6109, 0.59", "-294.036, -98.7462, -22.5737, 0.96", "-295.393, -98.8891, -22.4236, 0.66", "-296.003, -98.9625, -22.3313, 0.59", "-297.516, -99.1555, -22.0699, 0.52", "-297.931, -99.203, -21.9998, 0.52", "-298.215, -99.2247, -21.9596, 0.96", "-298.726, -99.2668, -21.9004, 0.96", "-299.578, -99.3406, -21.8491, 0.52", "-300.146, -99.3675, -21.8055, 0.52", "-300.901, -99.3826, -21.7951, 0.52", "-301.592, -99.4139, -21.8088, 0.52", "-302.52, -99.4784, -21.8747, 0.96", "-303.11, -99.5212, -21.9531, 1.55", "-303.689, -99.5499, -22.0405, 0.59", "-304.855, -99.5763, -22.1945, 0.52", "-305.524, -99.5829, -22.271, 0.52", "-306.159, -99.5674, -22.3362, 0.52", "-307.085, -99.4958, -22.4268, 0.52", "-308.293, -99.394, -22.5044, 0.52", "-308.35, -99.3895, -22.5061, 0.52", "-308.769, -99.3495, -22.4967, 0.88", "-309.676, -99.2638, -22.5075, 0.52", "-309.733, -99.2604, -22.5083, 0.52", "-310.865, -99.2596, -22.5517, 0.52", "-311.353, -99.2769, -22.6184, 0.52" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-233.842, -86.3819, -6.64588, 0.52", "-233.996, -86.0353, -6.81236, 0.52", "-234.258, -85.4489, -7.09884, 0.29", "-234.471, -84.8891, -7.36439, 0.29", "-234.603, -84.5443, -7.528, 0.52", "-234.753, -84.1501, -7.71503, 0.52", "-235.085, -83.2793, -8.12819, 0.22", "-235.211, -82.9766, -8.26663, 0.37", "-235.474, -82.3779, -8.55737, 0.22" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "94.7181, 29.2933, -26.209, 0.74", "96.5229, 28.8106, -26.6003, 0.74", "97.6316, 28.5251, -26.9665, 0.74", "98.0948, 28.422, -27.1365, 1.62", "98.7264, 28.3002, -27.3691, 2.65", "99.5634, 28.151, -27.6763, 3.09", "99.653, 28.1379, -27.7078, 3.09", "101.397, 28.0441, -28.0943, 1.03", "101.965, 28.0589, -28.1653, 1.03", "102.67, 28.1021, -28.1556, 0.74", "102.755, 28.1068, -28.1443, 0.74", "103.55, 28.0938, -27.9529, 0.74", "105.249, 27.9082, -27.4191, 0.66", "106.385, 27.6698, -26.9796, 0.96", "107.242, 27.3884, -26.7844, 0.96", "107.828, 27.1651, -26.7275, 1.47", "108.73, 26.8208, -26.7861, 1.77", "109.498, 26.5426, -26.9432, 1.77", "110.32, 26.2813, -27.2164, 0.81", "112.426, 25.8575, -28.0495, 0.88", "113.254, 25.798, -28.4366, 0.88", "114.517, 25.806, -29.0881, 0.96", "115.235, 25.8368, -29.3984, 0.96", "115.68, 25.8481, -29.5391, 0.96", "116.443, 25.8693, -29.6848, 0.81", "118.482, 25.9399, -29.8747, 0.59", "119.639, 25.9604, -29.9402, 1.03", "122.575, 25.9499, -29.9925, 1.47", "124.858, 25.8944, -30.0218, 0.74", "126.145, 25.8594, -30.0991, 0.74", "127.611, 25.8242, -30.2528, 1.18", "128.428, 25.8505, -30.3836, 1.62", "128.496, 25.8571, -30.4011, 1.62", "129.026, 25.9377, -30.6143, 2.28", "130.806, 26.3135, -31.2664, 2.28", "132.524, 26.7006, -31.8226, 0.81", "134.134, 27.1292, -32.1747, 0.52", "134.292, 27.1735, -32.1934, 0.52", "134.577, 27.2464, -32.1968, 0.96", "136.344, 27.6364, -32.119, 1.25", "136.455, 27.654, -32.106, 1.25", "137.675, 27.6866, -32.0025, 1.11", "138.908, 27.543, -31.9791, 0.88", "140.52, 27.2082, -32.0405, 1.18", "141.65, 26.8827, -32.1405, 1.55", "142.197, 26.6909, -32.2189, 1.25", "143.896, 26.0639, -32.4659, 0.96", "145.102, 25.5827, -32.6477, 0.81", "145.907, 25.2907, -32.7646, 0.66", "146.774, 25.0299, -32.901, 0.66", "147.555, 24.9103, -33.0153, 0.59", "148.582, 24.9753, -33.1775, 0.59", "148.699, 25.0018, -33.1638, 0.59", "149.868, 25.3233, -32.9838, 0.59", "151.005, 25.6706, -32.8002, 1.11", "152.077, 26.0139, -32.6675, 2.21", "154.308, 26.7305, -32.4577, 0.96", "158.638, 28.0491, -32.1175, 0.96", "161.293, 28.859, -31.9499, 1.77", "161.891, 29.0367, -31.9709, 2.28", "163.37, 29.4871, -32.173, 1.69", "164.43, 29.8003, -32.5168, 0.74", "164.688, 29.8823, -32.6692, 0.74", "165.917, 30.2432, -33.8898, 0.52", "167.68, 30.63, -35.836, 0.88", "168.228, 30.6883, -36.5561, 0.88", "168.682, 30.6681, -37.2163, 0.44", "168.728, 30.6607, -37.28, 0.44", "170.781, 30.3146, -39.563, 0.81", "171.217, 30.2184, -39.9281, 0.81", "171.282, 30.2092, -39.9566, 0.81", "172.397, 30.1229, -40.3111, 0.81", "173.772, 30.1094, -40.4452, 0.74", "175.585, 30.1491, -40.3442, 0.66", "176.407, 30.1932, -40.1223, 0.66", "177.461, 30.3058, -39.7383, 1.55", "177.597, 30.3304, -39.6737, 1.55", "179.465, 30.8264, -38.5691, 1.55", "179.584, 30.8655, -38.4953, 1.55", "181.324, 31.4894, -37.5056, 1.03", "182.404, 31.8833, -37.0241, 0.52", "183.734, 32.3505, -36.6231, 0.52", "184.382, 32.5607, -36.5208, 0.52", "185.901, 33.0464, -36.5038, 0.88", "187.337, 33.453, -36.7419, 2.43", "188.423, 33.7029, -37.0376, 2.8", "189.737, 33.9486, -37.4265, 2.14", "190.558, 34.0776, -37.7407, 0.96", "191.537, 34.2195, -38.1528, 0.96", "195.086, 34.6696, -39.7077, 0.52", "197.124, 34.9348, -40.7849, 0.52", "197.852, 35.0312, -41.229, 0.52", "200.101, 35.3683, -42.9012, 0.52", "200.229, 35.3903, -43.0125, 0.52", "200.845, 35.5298, -43.6635, 0.52", "202.216, 36.0165, -45.3473, 0.52", "202.314, 36.0637, -45.4782, 0.52", "203.734, 36.6379, -46.4704, 0.88", "203.799, 36.6553, -46.4775, 0.88", "204.497, 36.792, -46.4476, 0.88", "207.459, 37.231, -46.0416, 0.66", "208.59, 37.3335, -45.8215, 0.96", "210.656, 37.4522, -45.4203, 0.66", "211.699, 37.4954, -45.2741, 0.96", "212.976, 37.5554, -45.2076, 1.11", "213.75, 37.5961, -45.2835, 1.11", "214.789, 37.687, -45.6209, 0.81", "215.412, 37.7471, -45.9039, 0.52", "217.234, 37.9231, -46.9807, 0.81", "218.061, 38.0067, -47.5535, 0.81", "219.592, 38.1546, -48.6868, 1.25", "220.386, 38.2158, -49.2232, 1.69", "220.754, 38.2399, -49.4392, 2.06", "221.841, 38.2514, -49.8947, 0.96", "221.91, 38.2489, -49.9101, 0.96", "224.362, 38.1957, -50.1609, 0.59", "225.552, 38.2125, -50.1725, 0.96", "226.21, 38.2085, -50.1927, 1.69", "227.936, 38.1742, -50.2862, 2.8", "229.692, 38.1831, -50.4721, 1.03", "231.76, 38.2694, -50.7837, 0.52", "232.977, 38.3654, -51.0185, 0.52", "235.269, 38.6483, -51.5743, 0.52", "235.46, 38.6851, -51.6239, 0.52", "237.9, 39.3562, -52.2964, 0.81", "239.177, 39.7956, -52.6557, 0.81", "240.008, 40.1314, -53.0095, 0.88", "240.975, 40.5475, -53.4854, 0.81", "242.181, 41.0953, -54.0887, 0.81", "242.655, 41.266, -54.3499, 0.81", "243.159, 41.3728, -54.6576, 0.81", "246.454, 41.7682, -56.7757, 0.81", "247.239, 41.8354, -57.2577, 0.81", "247.873, 41.887, -57.6308, 0.81", "249.056, 41.9956, -58.2504, 0.74", "250.303, 42.204, -58.7592, 0.74", "250.992, 42.3756, -59.0212, 0.74", "252.284, 42.8183, -59.4085, 0.66", "253.412, 43.2684, -59.8319, 1.11", "254.097, 43.5814, -60.1299, 1.11", "255.178, 44.0833, -60.6071, 0.66", "257.326, 44.8747, -61.6578, 1.84", "257.544, 44.9321, -61.7601, 1.84", "258.523, 45.1151, -62.1726, 3.02", "259.285, 45.2291, -62.4152, 3.02", "261.536, 45.5416, -62.9598, 0.88", "264.085, 45.9291, -63.3599, 0.81", "265.228, 46.1436, -63.4316, 1.03", "266.645, 46.4654, -63.4846, 0.74", "268.159, 46.8821, -63.4636, 0.74", "268.819, 47.0755, -63.4138, 1.11", "269.815, 47.3903, -63.2479, 1.11", "270.391, 47.5657, -63.1203, 1.11", "271.459, 47.832, -62.9465, 1.11", "272.434, 47.9882, -62.8664, 0.81", "273.202, 48.0515, -62.8765, 0.81", "274.431, 48.0625, -63.0309, 0.81", "275.647, 48.0026, -63.2907, 0.96", "275.812, 47.991, -63.3135, 0.96", "276.784, 47.903, -63.4777, 0.96", "277.899, 47.7989, -63.7049, 0.96", "279.703, 47.6829, -64.0572, 0.52", "281.312, 47.6533, -64.3157, 0.52", "284.113, 47.6851, -64.5297, 2.4" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "94.7181, 29.2933, -26.209, 0.44", "94.8844, 30.2943, -26.1338, 0.44", "95.0066, 31.4738, -26.0416, 0.44", "95.0379, 31.7762, -26.0179, 0.44", "95.1343, 32.7053, -25.9453, 0.44", "95.2391, 33.7169, -25.8662, 0.44", "95.2956, 34.2619, -25.8236, 0.96", "95.296, 34.5792, -25.7949, 1.33" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "179.31, 295.449, 39.5299, 0.81", "179.807, 298.066, 40.9886, 0.81", "180.028, 299.161, 41.5562, 0.81", "180.47, 301.236, 42.5344, 0.66", "180.698, 302.314, 42.9934, 0.66", "180.935, 303.613, 43.5292, 0.59", "181.061, 304.344, 43.8235, 0.96", "181.224, 305.081, 44.061, 0.96", "181.404, 306.053, 44.3617, 0.96", "181.561, 306.892, 44.5929, 0.59", "181.961, 308.73, 45.0856, 0.29", "182.055, 309.099, 45.1752, 0.52", "182.259, 309.858, 45.329, 0.52", "182.325, 310.083, 45.3693, 0.52", "182.59, 310.9, 45.444, 0.52", "182.938, 311.754, 45.4597, 1.47", "183.367, 312.624, 45.4197, 2.36", "183.775, 313.389, 45.3844, 2.06", "184.223, 314.234, 45.4245, 1.33", "184.962, 315.634, 45.6073, 0.52", "185.566, 316.764, 45.8365, 0.52", "185.977, 317.604, 46.0997, 0.52", "186.268, 318.313, 46.3795, 0.52", "186.906, 320.18, 47.2847, 1.4", "187.16, 321.145, 47.7065, 1.4", "187.17, 321.215, 47.7317, 1.4", "187.201, 322.446, 48.1042, 1.77", "187.148, 323.524, 48.3206, 1.77", "187.109, 324.147, 48.3197, 1.4", "187.11, 326.405, 47.5982, 0.44", "187.144, 327.018, 47.3083, 0.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "179.31, 295.449, 39.5299, 0.29", "181.091, 294.919, 39.4316, 0.29", "182.607, 294.469, 39.3478, 0.29", "184.179, 294.001, 39.2611, 0.29" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "81.4223, 343.633, 44.5914, 1.62", "81.0333, 343.589, 44.9282, 1.62", "79.0658, 343.222, 46.6688, 0.44", "78.4822, 343.074, 47.2087, 0.44", "77.5827, 342.798, 48.0757, 0.44", "76.5733, 342.433, 49.0924, 0.44", "75.4378, 341.901, 50.3092, 0.81", "74.805, 341.463, 51.0559, 0.37", "74.5963, 341.178, 51.3575, 0.37", "74.5102, 341.024, 51.491, 0.88", "74.4013, 340.782, 51.6704, 0.88", "74.1085, 339.956, 52.1096, 0.37", "73.8776, 339.306, 52.3917, 0.37", "73.5943, 338.657, 52.675, 1.03", "73.4083, 338.287, 52.8246, 1.55", "72.6969, 336.977, 53.3496, 0.37", "72.4629, 336.58, 53.5061, 0.59", "72.2952, 336.315, 53.6066, 0.37", "71.9469, 335.758, 53.8149, 0.37", "71.7974, 335.495, 53.8882, 0.81" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "81.4223, 343.633, 44.5914, 0.37", "79.7457, 345.008, 45.3255, 0.37", "78.9223, 345.683, 45.686, 0.22", "78.2711, 346.216, 45.9711, 0.22", "77.498, 346.85, 46.3096, 0.22", "76.6254, 347.566, 46.6916, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-15.1191, 586.171, 2.01189, 0.22", "-17.2071, 585.378, 10.9153, 0.22", "-17.3934, 585.3, 11.6199, 0.22", "-17.5094, 585.248, 12.0026, 0.52", "-17.5678, 585.221, 12.1747, 0.52", "-17.6899, 585.16, 12.485, 0.88", "-18.1795, 584.916, 13.5571, 0.37", "-18.4493, 584.755, 13.5692, 0.37", "-18.9584, 584.434, 13.5928, 0.37", "-19.1201, 584.322, 13.6002, 0.37", "-19.7462, 583.879, 13.6282, 0.74", "-20.0848, 583.648, 13.642, 0.81" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-15.1191, 586.171, 2.01189, 1.47", "-15.0658, 586.276, 1.91794, 1.47", "-14.5035, 587.562, 1.04171, 1.47", "-14.0965, 588.659, 0.459271, 1.92", "-13.6245, 590.033, -0.196301, 2.28", "-13.4043, 590.753, -0.480454, 2.73", "-12.9837, 592.361, -0.995547, 3.46", "-12.6384, 594.01, -1.31957, 2.73", "-12.4649, 595.195, -1.39465, 3.17", "-12.4429, 595.468, -1.39003, 3.17", "-12.3876, 597.389, -1.2586, 2.43", "-12.3904, 599.019, -1.12498, 1.47", "-12.4459, 601.543, -0.868156, 0.52", "-12.4826, 602.762, -0.750378, 0.52", "-12.5126, 604.221, -0.621308, 0.52", "-12.5164, 605.329, -0.526992, 1.47", "-12.5071, 606.441, -0.437468, 1.62", "-12.4729, 607.74, -0.342513, 1.62", "-12.4128, 609.027, -0.253637, 1.62", "-12.3111, 610.212, -0.182405, 0.66", "-12.1012, 611.986, -0.0488688, 0.66", "-11.9759, 613.11, 0.0415309, 0.66", "-11.9655, 613.213, 0.0466181, 0.66", "-11.8609, 614.459, 0.0637667, 0.96", "-11.8059, 615.292, 0.056336, 1.69", "-11.7434, 616.393, 0.0266732, 2.14", "-11.7096, 617.205, -0.00875761, 2.65", "-11.6483, 618.423, -0.06855, 2.65", "-11.5919, 619.467, -0.154985, 2.06", "-11.5016, 620.844, -0.314043, 0.96", "-11.4149, 622.126, -0.46736, 0.52", "-11.3819, 622.759, -0.573505, 0.52", "-11.3426, 623.547, -0.723226, 0.52", "-11.304, 624.606, -0.930478, 0.52", "-11.2918, 625.14, -1.05312, 1.11", "-11.2848, 626.487, -1.40273, 1.55", "-11.3126, 628.15, -1.83578, 1.55", "-11.3544, 629.116, -2.06239, 1.62", "-11.4257, 629.988, -2.23479, 1.18", "-11.5173, 630.753, -2.34322, 1.33", "-11.5902, 631.149, -2.39016, 1.18", "-11.7323, 631.774, -2.44128, 0.96", "-12.0411, 632.949, -2.47489, 0.52", "-12.2958, 633.759, -2.49594, 0.52", "-12.6314, 634.789, -2.5156, 0.52", "-12.9831, 635.903, -2.529, 0.52", "-13.068, 636.185, -2.52994, 0.52", "-13.0876, 636.26, -2.52929, 0.52", "-13.3421, 637.46, -2.50525, 1.25", "-13.4752, 638.38, -2.49618, 1.55", "-13.5645, 639.39, -2.4948, 2.14", "-13.6085, 640.419, -2.50321, 2.58", "-13.6298, 641.132, -2.5174, 2.28", "-13.6553, 642.219, -2.55644, 1.84", "-13.6672, 643.267, -2.61388, 0.88", "-13.6675, 643.71, -2.6384, 0.88", "-13.6532, 645.22, -2.71431, 0.52", "-13.661, 645.707, -2.73621, 0.52", "-13.6914, 646.407, -2.76395, 0.88", "-13.7293, 647.078, -2.76037, 1.33", "-13.808, 647.982, -2.7172, 1.69", "-13.9062, 649.165, -2.62877, 0.52", "-14.0678, 650.762, -2.47126, 0.52", "-14.0801, 650.865, -2.46622, 0.52", "-14.1951, 651.731, -2.46417, 0.52", "-14.3002, 652.423, -2.49484, 0.52", "-14.3834, 652.899, -2.53872, 1.25", "-14.5162, 653.696, -2.64497, 1.92", "-14.7913, 655.414, -2.91497, 2.36", "-14.9462, 656.388, -3.06611, 3.02", "-15.0146, 656.867, -3.13603, 3.02", "-15.0874, 657.493, -3.24492, 3.02", "-15.1705, 658.318, -3.396, 2.73", "-15.2928, 659.798, -3.64355, 1.25", "-15.4004, 661.283, -3.84785, 0.59", "-15.5197, 663.065, -4.12286, 0.59", "-15.6112, 664.546, -4.37635, 0.74", "-15.6521, 665.373, -4.53804, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_122",
    "id" : "dend_122",
    "points3d" : [ "108.099, -201.51, -186.259, 1.99", "107.892, -201.793, -187.349, 1.99", "106.864, -203.338, -192.754, 1.47", "106.725, -203.58, -193.549, 1.99", "106.64, -203.749, -194.04, 1.99", "106.596, -203.851, -194.304, 1.99", "105.92, -205.745, -198.694, 1.03", "105.834, -206.147, -199.48, 0.74", "105.826, -207.059, -200.748, 1.11", "105.949, -207.796, -201.654, 1.47", "106.105, -208.272, -202.132, 1.47", "106.387, -208.959, -202.684, 1.03", "106.888, -209.875, -203.035, 1.03", "107.632, -211.01, -203.411, 0.74", "108.308, -211.897, -203.622, 0.74", "108.896, -212.522, -203.804, 0.74" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_121",
    "id" : "dend_121",
    "points3d" : [ "108.099, -201.51, -186.259, 1.25", "108.136, -201.305, -186.471, 1.25", "108.138, -201.24, -186.517, 1.25", "107.892, -199.294, -187.461, 0.52", "107.76, -198.738, -187.682, 0.52", "107.477, -197.925, -188.039, 0.52", "107.164, -197.17, -188.392, 0.52", "106.731, -196.345, -188.766, 0.52", "105.972, -195.217, -189.335, 0.52", "105.557, -194.701, -189.498, 0.52", "105.78, -195.766, -190.241, 0.52", "105.779, -195.814, -190.29, 0.52", "105.755, -196.462, -190.976, 0.52", "105.765, -198.469, -192.993, 0.44", "105.818, -199.065, -193.547, 0.44", "106.011, -200.025, -194.386, 0.44" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_119",
    "id" : "dend_119",
    "points3d" : [ "100.587, -202.597, -185.662, 0.37", "99.5393, -203.67, -185.639, 0.37", "98.132, -205.19, -185.6, 0.44", "97.2943, -206.195, -185.585, 0.44", "96.7404, -206.893, -185.581, 0.44", "96.6493, -207.024, -185.58, 0.44", "95.8766, -208.235, -185.577, 0.37", "95.4267, -209.217, -185.563, 0.37", "95.0501, -210.518, -185.539, 0.37", "95.0399, -210.575, -185.537, 0.37", "94.9239, -211.879, -185.502, 0.37", "94.9221, -211.949, -185.5, 0.37", "95.0289, -212.673, -185.465, 0.37", "95.2528, -213.285, -185.414, 0.88", "95.4047, -213.559, -185.365, 1.47" ],
    "parent" : "dend_117",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_118",
    "id" : "dend_118",
    "points3d" : [ "100.587, -202.597, -185.662, 0.52", "100.015, -202.127, -184.765, 0.52", "99.7075, -201.851, -184.208, 0.44", "99.4897, -201.613, -183.73, 0.44", "99.0117, -200.905, -182.354, 0.15", "98.8488, -200.516, -181.593, 0.15", "98.3069, -199.222, -179.062, 0.37", "98.2547, -199.05, -178.683, 0.37", "98.2225, -198.735, -177.915, 0.37", "98.2847, -198.405, -177.061, 0.37", "98.6589, -197.939, -175.975, 0.37" ],
    "parent" : "dend_117",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "40.8089, -174.558, 23.5067, 0.37", "40.9008, -175.429, 23.7317, 0.37", "40.9653, -175.798, 23.792, 0.37", "41.0392, -176.221, 23.8609, 0.37", "41.0993, -176.565, 23.917, 0.37", "41.1695, -176.967, 23.9825, 0.96", "41.176, -177.004, 23.9886, 0.96", "41.2548, -177.418, 23.944, 1.92" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "40.8089, -174.558, 23.5067, 0.52", "38.9224, -175.61, 23.2385, 0.52", "37.8314, -176.217, 23.0834, 0.52", "37.1741, -176.584, 22.9899, 0.52" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-53.7711, -241.527, 6.52554, 1.11", "-53.3207, -242.233, 7.27675, 1.11", "-53.0211, -242.731, 7.8154, 1.33", "-52.6907, -243.372, 8.55339, 1.4", "-52.4902, -243.84, 9.14694, 1.92", "-52.2554, -244.556, 10.0396, 1.47", "-51.8329, -246.242, 12.1302, 1.33", "-51.7502, -246.792, 12.8048, 1.18", "-51.6918, -247.772, 14.0184, 1.18", "-51.7212, -248.782, 15.2101, 1.18", "-51.7905, -249.49, 15.9792, 1.18", "-51.9078, -250.244, 16.6348, 0.88", "-51.9921, -250.744, 16.9215, 0.81", "-52.0392, -251.222, 17.131, 0.96", "-52.0376, -251.967, 17.2897, 0.96", "-51.9817, -252.499, 17.3262, 1.4", "-51.8213, -253.305, 17.3352, 2.14", "-51.6519, -254.056, 17.3018, 2.14", "-51.5125, -254.635, 17.2722, 2.14", "-51.3421, -255.342, 17.2355, 2.65", "-51.2155, -255.865, 17.2066, 2.21", "-51.028, -256.671, 17.1601, 1.25", "-50.8159, -257.642, 17.1033, 1.25", "-50.7539, -257.96, 17.086, 1.25", "-50.6446, -258.762, 17.0551, 1.25" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-53.7711, -241.527, 6.52554, 0.52", "-54.4193, -243.415, 6.82308, 0.52", "-54.6151, -244.39, 7.07602, 0.52", "-54.8, -245.521, 7.38247, 0.52", "-54.9676, -246.55, 7.65435, 0.52", "-55.2398, -248.106, 8.0372, 0.52", "-55.3735, -248.84, 8.20991, 0.37", "-55.4808, -250.108, 8.56398, 0.37", "-55.482, -250.737, 8.74803, 0.37", "-55.4549, -251.069, 8.87508, 0.66", "-55.4171, -251.421, 9.02601, 0.66", "-55.422, -251.494, 9.04647, 0.66" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-311.353, -99.2769, -22.6184, 0.52", "-312.883, -99.4343, -22.5501, 0.52", "-315.436, -99.5671, -22.3791, 0.52", "-317.044, -99.6345, -22.4092, 0.74", "-318.151, -99.6776, -22.4276, 0.96", "-320.338, -99.789, -22.4635, 0.37", "-322.111, -99.8847, -22.4993, 0.37", "-324.585, -99.9946, -22.5895, 0.37", "-326.962, -100.068, -22.7309, 0.66", "-328.829, -100.129, -22.8909, 1.18", "-329.981, -100.15, -22.9743, 1.18", "-331.115, -100.15, -23.0367, 0.66", "-333.304, -100.135, -23.1999, 0.37", "-334.532, -100.121, -23.2837, 0.81", "-335.655, -100.084, -23.3183, 0.29", "-337.254, -99.99, -23.4505, 0.29", "-337.821, -99.9386, -23.4991, 0.66", "-338.222, -99.8979, -23.5338, 0.66", "-338.927, -99.8177, -23.5962, 0.66", "-340.132, -99.6838, -23.7047, 0.22", "-341.546, -99.5272, -23.8351, 0.22", "-342.355, -99.4591, -23.9115, 1.11", "-343.18, -99.3693, -23.9928, 1.47" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-311.353, -99.2769, -22.6184, 0.22", "-311.543, -98.7885, -22.5011, 0.22", "-311.558, -98.7474, -22.4918, 0.22", "-311.669, -98.4455, -22.4239, 0.22", "-311.779, -98.1468, -22.3566, 0.22", "-312.051, -97.4109, -22.191, 0.44", "-312.235, -96.9123, -22.0788, 0.52", "-312.311, -96.7002, -22.0079, 0.52" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "284.113, 47.6851, -64.5297, 2.28", "284.974, 47.0032, -65.3312, 2.28", "285.631, 46.5356, -65.9228, 0.29", "286.381, 46.002, -66.598, 0.37", "286.427, 45.9692, -66.6394, 0.37", "287.072, 45.5105, -67.2199, 0.37", "287.977, 44.8663, -68.035, 1.18", "288.508, 44.4559, -68.5134, 1.62" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "284.113, 47.6851, -64.5297, 0.66", "284.185, 48.8384, -64.2833, 0.66", "284.311, 50.8762, -63.8479, 0.44", "284.377, 51.9554, -63.6173, 0.96", "284.547, 54.6931, -63.0324, 0.96" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "187.144, 327.018, 47.3083, 0.88", "187.272, 328.656, 47.0773, 0.88", "187.288, 328.869, 47.0472, 0.88", "187.34, 329.539, 46.9528, 0.88", "187.46, 331.072, 46.7365, 0.52", "187.503, 331.63, 46.6578, 1.33", "187.583, 332.649, 46.5142, 1.77" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "187.144, 327.018, 47.3083, 0.44", "188.211, 327.351, 46.5608, 0.44", "188.999, 327.731, 45.7711, 0.44", "189.303, 327.918, 45.4446, 0.44", "189.47, 328.03, 45.2695, 0.44", "189.903, 328.322, 44.8154, 0.44", "190.658, 328.829, 44.0235, 0.88", "191.342, 329.426, 43.1238, 0.44", "191.646, 329.69, 42.7357, 0.44", "191.876, 329.885, 42.4165, 0.74" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "76.6254, 347.566, 46.6916, 0.37", "75.3915, 351.261, 47.9397, 0.37", "75.2417, 351.88, 48.112, 0.37", "75.0067, 353.108, 48.4161, 0.37", "74.8898, 354.096, 48.5503, 0.66", "74.7737, 355.261, 48.6204, 0.37", "74.7169, 355.794, 48.6149, 0.81", "74.7236, 356.513, 48.4369, 1.33", "74.7266, 356.582, 48.4201, 1.33", "74.8362, 358.342, 47.9877, 0.37", "74.8821, 358.912, 47.8541, 0.37", "74.9514, 360.053, 47.5939, 0.29", "74.9999, 361.097, 47.3758, 0.29", "75.0886, 362.391, 47.1485, 0.29", "75.1106, 362.542, 47.1325, 0.29", "75.2107, 363.037, 47.1119, 0.29", "75.3343, 363.505, 47.104, 0.52", "75.5498, 364.169, 47.0761, 0.52", "76.3579, 366.475, 46.9262, 0.44", "77.0023, 368.285, 46.7937, 0.44", "77.5016, 369.652, 46.6903, 0.44", "77.9588, 370.853, 46.5959, 0.44", "78.5094, 372.192, 46.4912, 0.88", "78.7551, 372.735, 46.4476, 1.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "76.6254, 347.566, 46.6916, 0.44", "76.2438, 346.536, 46.771, 0.44", "75.8779, 345.549, 46.8472, 0.44", "75.7144, 345.109, 46.8812, 0.96", "75.5985, 344.796, 46.9053, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-15.6521, 665.373, -4.53804, 0.37", "-14.8313, 667.247, -4.44974, 0.37", "-14.7419, 667.501, -4.43788, 0.52", "-14.5784, 668.192, -4.41644, 0.81", "-14.4788, 668.903, -4.40704, 0.81", "-14.4484, 669.534, -4.38945, 0.74", "-14.4884, 670.392, -4.30445, 0.59", "-14.6789, 671.244, -4.20201, 0.52", "-14.999, 672.294, -4.09192, 0.52", "-15.2447, 672.951, -4.03323, 0.52", "-15.549, 673.738, -4.02297, 0.96", "-16.1122, 675.197, -4.09554, 1.77", "-16.5698, 676.46, -4.22995, 2.14", "-16.9585, 677.718, -4.45292, 2.14", "-17.121, 678.456, -4.62211, 2.06", "-17.3361, 679.98, -5.03413, 2.06", "-17.376, 680.481, -5.19113, 1.69", "-17.4045, 681.475, -5.53976, 0.88", "-17.3932, 682.413, -5.78378, 0.52", "-17.3449, 683.323, -5.94443, 0.52", "-17.3111, 683.991, -5.98447, 0.52", "-17.2914, 684.561, -5.94827, 0.96", "-17.2875, 684.632, -5.94172, 0.96", "-17.2096, 685.539, -5.84357, 1.03", "-17.1616, 686.016, -5.76533, 1.11", "-17.009, 687.554, -5.49342, 0.81", "-16.8993, 688.487, -5.32332, 0.66", "-16.8129, 689.093, -5.21362, 0.81", "-16.7089, 689.749, -5.10057, 1.11", "-16.5106, 690.91, -4.92724, 0.66", "-16.4485, 691.248, -4.86561, 0.37", "-16.3393, 691.766, -4.74199, 0.37", "-16.269, 692.088, -4.66148, 0.37", "-16.2346, 692.254, -4.62317, 0.37", "-16.1305, 692.73, -4.53218, 0.37", "-16.0439, 693.071, -4.49902, 0.37", "-15.9534, 693.455, -4.46699, 0.59", "-15.8716, 693.848, -4.43741, 0.74", "-15.781, 694.364, -4.40344, 1.11", "-15.6747, 695.068, -4.36213, 1.47", "-15.6527, 695.221, -4.3535, 1.47", "-15.5916, 695.774, -4.3276, 2.06", "-15.5847, 695.865, -4.32428, 2.06", "-15.5568, 696.523, -4.30653, 1.62", "-15.5419, 696.977, -4.29557, 2.06", "-15.5292, 697.296, -4.28721, 1.62", "-15.4958, 697.709, -4.27145, 0.88", "-15.4345, 698.257, -4.24556, 0.59", "-15.3475, 698.88, -4.21109, 0.44", "-15.2609, 699.469, -4.17722, 0.44", "-15.1474, 700.24, -4.13286, 0.44", "-15.0691, 700.856, -4.09886, 0.44", "-14.9914, 701.51, -4.06262, 0.44", "-14.9188, 702.208, -4.02535, 0.44", "-14.876, 702.878, -3.94428, 0.44", "-14.8406, 703.76, -3.78164, 0.44", "-14.8322, 704.239, -3.67205, 0.81", "-14.8283, 704.489, -3.60974, 1.33", "-14.8214, 704.893, -3.50868, 1.33", "-14.7794, 706.267, -3.16744, 2.5", "-14.7545, 707.094, -2.97837, 3.17", "-14.7488, 708.117, -2.7905, 3.61", "-14.7351, 709.246, -2.63068, 3.9", "-14.7116, 710.415, -2.5411, 3.9", "-14.6889, 710.966, -2.52668, 3.9", "-14.6261, 712.008, -2.548, 3.9", "-14.5316, 713.416, -2.58355, 2.36", "-14.4082, 714.886, -2.6209, 1.55", "-14.2371, 716.518, -2.6577, 1.03", "-14.0545, 717.836, -2.69784, 0.88", "-13.8835, 719.098, -2.70922, 0.88", "-13.7107, 720.523, -2.69546, 0.66", "-13.6494, 721.142, -2.68014, 0.66", "-13.6006, 721.85, -2.62884, 1.18", "-13.5399, 722.844, -2.54627, 1.77", "-13.3932, 725.372, -2.36078, 0.88", "-13.3249, 727.028, -2.2605, 0.88", "-13.3241, 727.099, -2.2558, 0.88", "-13.3469, 729.08, -2.13602, 0.52", "-13.3842, 730.368, -2.0625, 1.33", "-13.4099, 731.307, -2.02778, 1.47", "-13.4027, 732.626, -2.07795, 1.33", "-13.3572, 734.231, -2.2518, 1.03", "-13.3526, 735.342, -2.43981, 1.03", "-13.358, 735.432, -2.45279, 1.03", "-13.5282, 737.153, -2.56232, 1.03", "-13.6819, 738.473, -2.6128, 1.25", "-13.8306, 739.745, -2.62968, 1.47", "-13.9398, 740.581, -2.63005, 1.92", "-14.3036, 743.147, -2.49598, 1.11", "-14.4679, 744.312, -2.37639, 1.11", "-14.5107, 744.588, -2.32615, 1.69", "-14.5173, 744.654, -2.31138, 1.69", "-14.5497, 745.731, -2.08668, 2.21", "-14.4961, 746.343, -2.01595, 3.17", "-14.3604, 747.04, -2.02109, 3.17", "-14.1626, 747.859, -2.02095, 3.17", "-13.8599, 748.999, -2.01178, 2.28", "-13.74, 749.466, -1.96419, 0.59", "-13.6178, 749.988, -1.86015, 0.66", "-13.458, 750.883, -1.63673, 0.66", "-13.3673, 751.506, -1.45209, 1.03", "-13.3598, 751.58, -1.42878, 1.03", "-13.2882, 753.283, -0.939403, 1.84", "-13.3169, 754.191, -0.65413, 1.84", "-13.3863, 755.089, -0.377273, 1.84", "-13.4372, 755.529, -0.246187, 1.33", "-13.5748, 756.664, 0.0674002, 0.96", "-13.6753, 757.552, 0.258929, 0.96", "-13.9226, 759.85, 0.601731, 0.81", "-14.0089, 760.746, 0.685447, 1.33", "-14.0279, 760.908, 0.714233, 1.33", "-14.1221, 761.669, 0.908365, 1.77", "-14.2507, 762.737, 1.27794, 2.21", "-14.2721, 762.95, 1.37816, 2.21", "-14.3942, 764.394, 2.24728, 2.21", "-14.6616, 767.02, 4.20904, 1.69", "-14.7346, 767.583, 4.66189, 1.18", "-14.7431, 767.632, 4.70377, 1.18", "-14.9673, 768.789, 5.72645, 0.74", "-15.0964, 769.418, 6.22811, 0.59", "-15.1301, 769.569, 6.32764, 0.59", "-15.2645, 770.325, 6.47265, 0.59", "-15.3955, 770.917, 6.53868, 1.11", "-15.4591, 771.198, 6.52313, 1.62", "-15.5964, 771.799, 6.20348, 1.92", "-15.8594, 773.223, 5.107, 1.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-15.6521, 665.373, -4.53804, 0.29", "-16.5517, 666.38, -5.04815, 0.29", "-17.2211, 667.175, -5.42288, 0.29", "-17.5252, 667.542, -5.58899, 0.96", "-17.6627, 667.706, -5.66225, 0.74", "-17.979, 668.069, -5.82865, 0.37", "-18.4147, 668.52, -6.01159, 0.37", "-18.4706, 668.574, -6.02958, 0.37", "-19.3351, 669.289, -6.27495, 0.29", "-20.3763, 670.055, -6.55574, 0.29", "-20.8409, 670.365, -6.67604, 0.29", "-21.8596, 670.976, -6.90582, 1.11", "-22.351, 671.258, -7.0081, 1.69", "-22.9635, 671.626, -7.1393, 1.99", "-23.2094, 671.786, -7.19728, 2.21", "-23.3641, 671.898, -7.24177, 2.21", "-24.3833, 672.7, -7.5899, 0.81", "-25.0503, 673.263, -7.88295, 0.37", "-26.0606, 674.145, -8.33148, 0.37", "-27.0996, 675.081, -8.80255, 0.22", "-28.1313, 676.03, -9.28818, 0.15", "-28.582, 676.454, -9.51518, 0.15", "-29.2089, 677.047, -9.88343, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_126",
    "id" : "dend_126",
    "points3d" : [ "108.896, -212.522, -203.804, 0.52", "108.321, -213.144, -203.305, 0.52" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_123",
    "id" : "dend_123",
    "points3d" : [ "108.896, -212.522, -203.804, 0.29", "110.319, -213.798, -203.883, 0.29", "111.224, -214.587, -203.942, 0.29", "112.296, -215.525, -204.055, 0.29", "113.971, -216.879, -204.304, 0.29", "115.934, -218.41, -204.633, 0.44", "117.163, -219.368, -204.838, 0.66", "118.518, -220.384, -205.122, 0.88", "119.547, -221.12, -205.351, 1.03", "122.317, -222.964, -206.003, 0.66", "122.376, -223.003, -206.017, 0.66" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "41.2548, -177.418, 23.944, 0.29", "45.1261, -177.04, 25.9826, 0.29", "46.3719, -176.919, 26.6386, 0.29", "47.5493, -176.804, 27.2586, 0.29", "48.0274, -176.757, 27.5104, 1.33", "48.8016, -176.681, 27.9181, 1.62", "48.9453, -176.667, 27.9938, 0.07" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "41.2548, -177.418, 23.944, 0.29", "42.5978, -178.979, 24.3023, 0.29", "43.0592, -179.631, 24.4016, 0.29", "43.2916, -179.955, 24.4401, 0.29", "43.6196, -180.413, 24.4873, 0.44", "44.1681, -181.191, 24.5582, 0.66", "44.9516, -182.317, 24.653, 0.37", "45.4304, -183.082, 24.6659, 0.37", "45.9264, -183.93, 24.6666, 0.37", "45.9663, -184.0, 24.6651, 0.37", "46.3359, -184.651, 24.6244, 0.74", "46.4674, -184.86, 24.6109, 0.74" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-50.6446, -258.762, 17.0551, 0.44", "-51.8346, -261.698, 16.3063, 0.44", "-52.5366, -263.428, 15.8844, 0.44", "-53.3494, -265.527, 15.2034, 0.44", "-53.8618, -266.97, 14.6617, 1.03", "-53.9532, -267.304, 14.5369, 1.03", "-54.2196, -268.617, 14.0515, 0.29", "-54.3297, -269.243, 13.8244, 0.29", "-54.241, -271.071, 13.037, 0.66", "-54.0877, -271.519, 12.8243, 0.66", "-53.3157, -272.982, 12.2125, 0.44", "-52.9645, -273.519, 11.9782, 0.44", "-52.7376, -273.782, 11.8629, 0.44", "-52.5081, -274.045, 11.802, 0.44" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-50.6446, -258.762, 17.0551, 0.59", "-51.3049, -259.411, 17.116, 0.59", "-52.0374, -259.963, 17.2147, 0.59", "-52.6528, -260.137, 17.3434, 0.59", "-53.0237, -260.139, 17.503, 0.59", "-53.2358, -260.146, 17.612, 0.59", "-53.6817, -260.191, 17.86, 0.59", "-54.2898, -260.162, 18.2535, 0.66", "-55.3947, -259.969, 19.0216, 0.66", "-56.3639, -259.732, 19.7514, 0.88", "-57.0678, -259.551, 20.3224, 0.59", "-57.5404, -259.449, 20.7385, 0.88" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-343.18, -99.3693, -23.9928, 0.44", "-345.817, -99.3713, -23.2463, 0.44", "-345.864, -99.3683, -23.2356, 0.44", "-346.731, -99.2447, -23.0606, 0.44", "-347.519, -99.0948, -22.9556, 0.44", "-348.256, -98.929, -22.8872, 0.81", "-348.749, -98.8032, -22.856, 0.44", "-350.023, -98.361, -22.9281, 0.29", "-350.961, -98.0245, -22.9189, 0.29", "-351.794, -97.7199, -22.8638, 1.11", "-352.127, -97.6071, -22.8269, 1.62", "-352.999, -97.3335, -22.7016, 2.06", "-353.066, -97.3146, -22.6907, 2.06", "-355.228, -96.8649, -22.0399, 0.52", "-356.11, -96.7445, -21.7135, 0.52", "-357.07, -96.6968, -21.2705, 0.52", "-358.076, -96.7111, -20.7587, 0.52", "-358.874, -96.7786, -20.3214, 0.52", "-361.376, -97.166, -18.8873, 0.52", "-362.288, -97.4249, -18.3301, 0.52", "-363.727, -98.0314, -17.3927, 0.52", "-363.775, -98.0568, -17.3582, 0.52", "-364.111, -98.2908, -17.097, 0.96", "-364.347, -98.5043, -16.9156, 0.96", "-364.746, -99.0367, -16.7487, 0.44", "-365.159, -99.7429, -16.5922, 0.52" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-343.18, -99.3693, -23.9928, 0.44", "-343.379, -97.681, -24.6289, 0.44", "-343.451, -96.9118, -24.8755, 0.44", "-343.458, -96.8273, -24.8994, 0.44", "-343.525, -95.9205, -25.1246, 0.44", "-343.564, -95.3535, -25.2538, 0.44", "-343.613, -94.6444, -25.4153, 0.22", "-343.637, -94.1864, -25.4717, 0.22", "-343.654, -93.9138, -25.5037, 0.22", "-343.67, -93.4596, -25.5372, 0.74", "-343.669, -93.3838, -25.5324, 0.74" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "288.508, 44.4559, -68.5134, 0.66", "291.305, 44.6155, -71.9627, 0.66", "292.159, 44.6896, -73.3321, 0.52", "292.697, 44.7142, -74.2002, 0.52", "294.353, 44.7726, -76.7157, 0.81", "294.802, 44.787, -77.3602, 1.47", "295.1, 44.7981, -77.7671, 1.77", "298.064, 44.8966, -81.5694, 0.37", "298.972, 44.9843, -82.7592, 0.37", "299.68, 45.1164, -83.6493, 0.44", "300.035, 45.2219, -84.0297, 0.44", "300.356, 45.3506, -84.345, 0.44", "300.798, 45.5501, -84.6724, 0.44", "302.005, 46.1468, -84.9373, 0.44", "302.667, 46.4689, -85.1249, 0.44", "303.039, 46.4833, -85.2345, 0.44", "303.801, 46.2194, -85.6896, 0.44", "304.253, 45.9607, -86.0496, 0.44", "304.884, 45.5305, -86.8947, 0.44", "305.467, 45.1138, -87.7777, 0.29", "305.908, 44.802, -88.486, 0.29", "307.11, 44.0064, -90.4799, 0.29", "307.23, 43.9286, -90.6973, 1.18", "308.743, 42.8738, -93.6206, 1.18", "308.971, 42.6982, -94.0802, 1.03", "309.176, 42.5097, -94.4788, 0.81", "309.367, 42.2853, -94.8208, 0.81", "310.198, 41.1317, -95.9598, 0.37", "310.803, 40.1958, -96.6484, 0.59", "311.31, 39.4366, -97.0712, 0.59", "311.843, 38.7479, -97.4593, 0.59", "312.829, 37.6979, -98.0168, 0.81", "313.371, 37.1981, -98.2908, 0.81", "314.119, 36.6111, -98.6188, 0.81", "315.948, 35.4041, -99.3647, 0.52", "317.092, 34.7414, -99.8027, 0.52", "319.207, 33.639, -100.554, 0.52", "320.778, 32.9162, -101.17, 1.47", "321.214, 32.7474, -101.375, 1.99", "322.259, 32.4476, -101.922, 2.43", "322.642, 32.3838, -102.15, 1.99", "323.046, 32.3622, -102.419, 1.62", "325.322, 32.4408, -104.033, 1.25", "326.869, 32.5119, -105.159, 0.52", "327.847, 32.5172, -105.948, 0.52", "328.763, 32.4494, -107.261, 0.52", "329.111, 32.3586, -108.043, 0.52", "329.253, 32.2747, -108.538, 0.52", "329.375, 32.0966, -109.36, 0.88", "329.453, 31.8808, -110.304, 0.88", "329.813, 30.543, -115.922, 0.59", "329.855, 30.412, -116.454, 0.52", "329.9, 30.3003, -116.913, 0.29", "329.973, 30.1769, -117.434, 0.29", "330.09, 30.0347, -118.475, 0.29", "330.133, 29.9959, -119.056, 0.29", "330.162, 29.9738, -120.295, 0.29", "330.164, 29.9682, -121.119, 0.29", "330.162, 29.9958, -121.877, 0.29", "330.202, 30.498, -129.215, 0.59", "330.213, 30.5443, -129.746, 0.74", "330.22, 30.5682, -129.943, 0.74", "330.249, 30.6435, -130.427, 0.74", "330.622, 30.9533, -132.046, 0.44", "331.376, 31.0936, -132.875, 0.44", "332.58, 31.0819, -133.097, 0.44", "332.667, 31.0768, -133.113, 0.44", "333.719, 30.9642, -133.336, 0.44", "335.416, 30.6532, -133.751, 0.44", "336.707, 30.1883, -134.134, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "288.508, 44.4559, -68.5134, 0.29", "288.05, 43.1259, -69.6947, 0.29", "287.916, 42.7401, -70.0373, 0.29", "287.845, 42.5327, -70.2215, 0.29", "287.719, 42.1671, -70.5462, 0.29", "287.646, 41.9547, -70.7348, 0.66" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "187.583, 332.649, 46.5142, 0.66", "189.135, 336.117, 51.0195, 0.66", "189.535, 337.058, 52.118, 0.59", "189.806, 337.711, 52.7981, 0.96", "189.972, 338.12, 53.1814, 1.62", "190.182, 338.645, 53.6495, 1.62", "190.336, 339.056, 53.9153, 1.11", "190.354, 339.116, 53.8974, 1.11", "190.729, 340.451, 53.3903, 0.74", "190.755, 340.519, 53.3669, 0.74", "191.276, 341.548, 53.1569, 1.55", "192.49, 343.438, 53.0067, 0.66", "193.092, 344.326, 52.9857, 0.66", "193.134, 344.386, 52.9879, 0.66", "194.089, 345.709, 53.1559, 0.66", "194.801, 346.652, 53.2546, 1.25", "195.206, 347.141, 53.2894, 2.14" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "187.583, 332.649, 46.5142, 0.44", "187.322, 333.88, 46.7572, 0.44", "187.07, 334.787, 46.9116, 0.44", "186.75, 335.776, 47.0638, 0.44", "186.513, 336.508, 47.1765, 0.44", "186.344, 337.029, 47.2567, 0.52", "186.135, 337.676, 47.3563, 0.52", "186.005, 337.969, 47.3659, 0.66", "185.936, 338.079, 47.3675, 0.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "78.7551, 372.735, 46.4476, 0.37", "79.0222, 374.589, 45.2905, 0.37", "79.2947, 376.344, 44.2796, 1.03", "79.3596, 376.719, 44.0863, 1.62", "79.6829, 378.433, 43.2943, 0.44", "79.7828, 378.939, 43.0864, 0.44", "79.9315, 379.679, 42.833, 0.44", "79.978, 379.916, 42.7868, 0.44", "80.1254, 380.791, 42.6789, 0.44", "80.214, 381.4, 42.6038, 0.44", "80.2955, 382.097, 42.5246, 1.47", "80.496, 384.321, 42.2703, 0.37", "80.5693, 385.266, 42.1619, 1.11", "80.7587, 387.859, 41.8581, 0.29", "80.8109, 388.803, 41.7352, 0.29", "80.8325, 389.329, 41.6545, 0.29", "80.8693, 390.304, 41.4876, 0.29", "80.9061, 390.99, 41.3611, 1.25", "80.923, 391.13, 41.3337, 1.25", "81.0715, 391.766, 41.2169, 1.25", "81.4312, 392.922, 40.9543, 0.29", "81.8386, 393.995, 40.6836, 0.29", "82.1769, 394.825, 40.4637, 0.29", "82.5209, 395.631, 40.2531, 0.29", "82.9814, 396.623, 40.008, 0.29", "83.342, 397.279, 39.8644, 0.96", "83.5402, 397.57, 39.8013, 0.96" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "78.7551, 372.735, 46.4476, 0.29", "81.1578, 372.01, 45.5198, 0.29", "81.8524, 371.615, 45.3139, 0.29", "82.6396, 371.03, 45.0432, 0.52", "82.6854, 370.991, 45.0265, 0.52", "83.4714, 370.25, 44.728, 0.37", "84.6511, 369.137, 44.28, 0.37", "85.0967, 368.496, 44.1993, 0.37", "85.4902, 367.765, 44.1086, 0.81", "85.5376, 367.651, 44.0927, 0.81", "85.6603, 367.323, 44.0328, 0.81" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-15.8594, 773.223, 5.107, 1.84", "-15.8572, 774.111, 5.08574, 1.84", "-15.8693, 774.781, 5.0651, 1.69", "-15.9005, 775.573, 5.03655, 1.25", "-15.9168, 775.89, 5.02489, 1.03", "-15.9344, 776.278, 5.01336, 1.03", "-15.9513, 776.644, 5.00362, 1.03", "-15.9614, 776.818, 5.00013, 0.74", "-15.9602, 777.284, 4.98835, 0.74", "-15.925, 777.774, 4.97758, 0.74", "-15.8105, 778.542, 4.97235, 0.74", "-15.7377, 778.873, 5.00579, 0.74", "-15.5925, 779.384, 5.10488, 0.74", "-15.4342, 779.918, 5.26055, 0.59", "-15.2628, 780.49, 5.47111, 0.59", "-15.181, 780.801, 5.59903, 0.59", "-14.9852, 781.83, 5.99658, 0.37", "-14.9327, 782.379, 6.18102, 0.37", "-14.9445, 783.005, 6.34894, 1.33", "-15.0349, 783.632, 6.46302, 1.69", "-15.1513, 784.158, 6.50774, 1.69", "-15.3757, 785.013, 6.50406, 2.36", "-15.5107, 785.51, 6.45467, 2.36", "-15.6569, 786.077, 6.38684, 2.14", "-15.7747, 786.724, 6.31019, 1.4", "-15.8208, 787.148, 6.26508, 1.4", "-15.8365, 787.487, 6.23487, 1.18", "-15.8387, 787.905, 6.20598, 0.96", "-15.8292, 788.438, 6.16163, 0.81", "-15.8185, 789.099, 6.09167, 0.81", "-15.8062, 789.784, 6.00894, 0.37", "-15.8189, 790.178, 5.95191, 0.37", "-15.8539, 790.461, 5.90251, 0.37", "-15.9156, 790.746, 5.81015, 0.37", "-16.0041, 791.083, 5.66652, 0.44", "-16.1036, 791.436, 5.49307, 0.44", "-16.1686, 791.722, 5.36268, 0.44", "-16.2218, 792.057, 5.21152, 0.44", "-16.3463, 792.909, 4.86792, 0.88", "-16.4249, 793.371, 4.71708, 0.88", "-16.5056, 793.819, 4.61546, 1.25", "-16.6107, 794.403, 4.539, 1.47", "-16.6957, 794.928, 4.51483, 1.84", "-16.7759, 795.499, 4.53053, 1.84", "-16.849, 796.073, 4.58755, 1.62", "-16.9562, 797.019, 4.69071, 0.88", "-17.0188, 797.706, 4.77514, 0.81", "-17.0703, 798.352, 4.87454, 0.81", "-17.0775, 798.468, 4.89491, 0.81", "-17.0978, 798.996, 4.98725, 0.88", "-17.0933, 799.505, 5.04206, 0.96", "-17.0805, 799.821, 5.06623, 0.96", "-17.0639, 800.515, 5.16457, 0.96", "-17.044, 801.098, 5.27517, 0.66", "-17.0344, 801.446, 5.34801, 1.03", "-16.991, 802.676, 5.62414, 1.47", "-16.9631, 803.136, 5.72886, 2.95", "-16.9803, 804.621, 6.34412, 2.87", "-16.9954, 804.949, 6.50736, 3.54", "-17.0362, 805.433, 6.77974, 3.54", "-17.0929, 805.823, 7.0224, 3.54", "-17.2507, 806.502, 7.46918, 2.43", "-17.8789, 808.726, 8.80976, 2.06", "-18.1021, 809.431, 9.18388, 1.92", "-18.3696, 810.177, 9.55721, 1.11", "-18.7968, 811.277, 10.0708, 0.74", "-19.0943, 811.983, 10.342, 0.74", "-19.27, 812.39, 10.439, 1.18", "-19.3717, 812.643, 10.4542, 1.84", "-19.3934, 812.689, 10.4596, 2.43", "-19.5265, 812.955, 10.4885, 2.43", "-19.7678, 813.429, 10.5183, 2.43", "-20.0097, 813.862, 10.5841, 2.43", "-20.5053, 814.675, 10.7884, 1.11", "-20.8274, 815.198, 10.9473, 0.88", "-21.0825, 815.609, 11.0866, 0.88", "-21.48, 816.287, 11.3348, 0.81", "-21.9023, 817.2, 11.671, 0.81", "-22.1505, 817.984, 11.9467, 1.4", "-22.226, 818.439, 12.0819, 1.84", "-22.2292, 818.49, 12.096, 1.84", "-22.2233, 819.29, 12.2755, 2.5", "-22.1512, 820.546, 12.4829, 2.8", "-22.1189, 821.234, 12.5753, 2.8", "-22.1181, 822.137, 12.6869, 2.5", "-22.1397, 822.562, 12.7451, 2.14", "-22.242, 823.557, 12.8877, 2.14", "-22.3285, 824.049, 12.9607, 0.37", "-22.5857, 825.07, 13.1135, 0.59", "-22.7814, 825.752, 13.2319, 0.59", "-22.8893, 826.104, 13.3025, 0.88", "-23.0651, 826.654, 13.4173, 0.88", "-23.1446, 826.903, 13.4705, 1.03", "-23.2552, 827.274, 13.5357, 0.66", "-23.4702, 828.066, 13.6125, 0.29", "-23.5289, 828.243, 13.6415, 0.37", "-23.6313, 828.521, 13.698, 0.37", "-23.6521, 828.574, 13.7096, 0.37", "-23.8234, 829.015, 13.8689, 0.37", "-23.8234, 829.015, 13.8689, 1.03", "-23.9528, 829.632, 14.1641, 1.11", "-24.0557, 830.312, 14.4904, 1.55", "-24.1018, 830.729, 14.6781, 2.28", "-24.1791, 832.058, 15.1744, 1.92", "-24.1867, 832.504, 15.3118, 1.62", "-24.1476, 833.571, 15.4172, 0.59", "-24.122, 833.899, 15.3615, 0.59", "-24.0907, 834.573, 14.9618, 0.59", "-24.1388, 835.028, 14.3293, 1.18", "-24.1806, 835.169, 13.9986, 1.55", "-24.4321, 835.911, 11.7363, 0.22", "-24.4963, 836.096, 11.0532, 0.37", "-24.5737, 836.282, 10.2163, 0.37", "-24.661, 836.428, 9.34691, 0.37", "-24.7777, 836.568, 8.39324, 0.88", "-24.9287, 836.789, 7.00526, 0.37", "-24.9573, 836.951, 6.51726, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-15.8594, 773.223, 5.107, 0.29", "-16.8131, 772.799, 4.00983, 0.29", "-16.9581, 772.74, 3.85246, 0.37", "-17.716, 772.457, 3.13439, 0.37", "-18.6346, 772.177, 2.39249, 0.66", "-19.0083, 772.067, 2.12781, 0.66", "-19.3955, 771.953, 1.889, 0.66", "-19.4688, 771.933, 1.85916, 0.66", "-20.1048, 771.785, 1.66154, 0.37", "-20.7069, 771.665, 1.52054, 0.59", "-21.1957, 771.567, 1.45243, 0.44", "-21.7967, 771.432, 1.36851, 0.44", "-22.4467, 771.28, 1.27766, 0.44", "-23.3681, 771.055, 1.14877, 1.11" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_128",
    "id" : "dend_128",
    "points3d" : [ "108.321, -213.144, -203.305, 0.44", "108.664, -213.965, -203.182, 0.44", "108.689, -214.025, -203.173, 0.44", "109.081, -214.964, -203.032, 0.52", "109.241, -215.347, -202.975, 0.52", "109.366, -215.648, -202.93, 0.52" ],
    "parent" : "dend_126",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_127",
    "id" : "dend_127",
    "points3d" : [ "108.321, -213.144, -203.305, 0.88", "105.295, -211.322, -204.678, 0.88", "104.123, -210.517, -205.088, 0.88", "103.495, -210.044, -205.259, 0.52", "102.359, -209.155, -205.52, 0.44", "101.438, -208.477, -205.702, 0.44", "99.8405, -207.393, -205.99, 0.44", "98.5483, -206.585, -206.05, 0.44", "96.8006, -205.618, -206.135, 0.44", "95.9711, -205.208, -206.177, 0.44", "94.5423, -204.66, -206.256, 0.44", "93.623, -204.555, -206.369, 0.74", "93.5306, -204.574, -206.392, 0.74", "92.6711, -204.996, -206.691, 0.74", "92.4406, -205.148, -206.787, 0.37", "91.5037, -205.854, -207.239, 0.37", "89.8005, -207.248, -208.235, 0.44", "89.0529, -207.852, -208.721, 0.44", "88.0908, -208.643, -209.398, 0.44" ],
    "parent" : "dend_126",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_125",
    "id" : "dend_125",
    "points3d" : [ "122.376, -223.003, -206.017, 0.52", "122.748, -224.049, -206.123, 0.52", "123.051, -225.435, -206.03, 0.52", "123.174, -226.364, -205.901, 1.18", "123.228, -227.298, -205.733, 1.4", "123.258, -228.328, -205.525, 0.96", "123.281, -230.34, -205.176, 0.52", "123.135, -231.194, -204.934, 0.52", "123.052, -231.498, -204.768, 0.52", "123.018, -231.815, -204.442, 0.52", "122.96, -231.49, -204.919, 0.52", "122.561, -230.386, -206.768, 0.52", "122.42, -230.117, -207.225, 0.52", "122.328, -229.885, -207.589, 0.52", "122.259, -229.635, -207.997, 0.52" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_124",
    "id" : "dend_124",
    "points3d" : [ "122.376, -223.003, -206.017, 0.52", "122.695, -224.077, -206.534, 0.52", "122.826, -224.521, -206.747, 0.52", "122.945, -224.922, -206.94, 0.52", "122.995, -225.088, -207.02, 0.52", "123.159, -225.641, -207.286, 0.52" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_111",
    "id" : "dend_111",
    "points3d" : [ "48.9453, -176.667, 27.9938, 0.52", "50.3199, -175.44, 27.6907, 0.52", "50.9973, -174.66, 27.5077, 0.52", "51.6685, -173.541, 27.2713, 0.29", "52.1123, -172.428, 27.063, 0.29", "52.4238, -171.647, 26.9169, 0.29", "52.7133, -170.92, 26.781, 0.44", "52.7523, -170.7, 26.717, 0.44", "52.7061, -169.935, 26.5658, 0.29", "52.4783, -169.081, 26.5143, 0.29" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "48.9453, -176.667, 27.9938, 0.22", "48.7321, -175.518, 27.3147, 0.22", "48.6262, -174.947, 26.9772, 0.22", "48.5344, -174.453, 26.6848, 0.29", "48.4764, -174.14, 26.5001, 0.29", "48.3866, -173.656, 26.2141, 0.37", "48.3385, -173.397, 26.061, 0.37" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-57.5404, -259.449, 20.7385, 0.37", "-57.7087, -260.886, 21.9598, 0.37", "-57.7987, -261.655, 22.6131, 1.18", "-57.8682, -262.248, 23.1178, 1.99" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-57.5404, -259.449, 20.7385, 1.4", "-57.0081, -260.771, 20.1537, 1.4", "-56.7527, -261.404, 19.8583, 1.4", "-56.2277, -262.647, 19.3398, 0.29", "-55.8933, -263.42, 19.0687, 0.29", "-55.4562, -264.445, 18.7519, 0.37", "-54.983, -265.666, 18.4007, 0.37", "-54.9616, -265.729, 18.3893, 0.37", "-54.654, -266.976, 18.1603, 0.37", "-54.5662, -267.605, 18.0528, 0.74", "-54.53, -267.84, 18.0252, 0.74", "-55.4255, -267.958, 17.9163, 0.22", "-55.9065, -267.997, 17.8603, 0.44", "-57.5146, -268.026, 17.6222, 0.29", "-57.9288, -268.015, 17.5511, 0.81" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-57.5404, -259.449, 20.7385, 0.37", "-58.1632, -258.954, 21.6236, 0.37" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "336.707, 30.1883, -134.134, 0.22", "335.987, 27.3801, -134.386, 0.22", "335.682, 26.4326, -134.552, 0.22", "335.657, 26.3618, -134.57, 0.22", "335.25, 25.2049, -134.873, 0.22", "335.036, 24.5947, -135.033, 0.22", "334.93, 24.2928, -135.113, 0.81", "334.658, 23.7234, -135.49, 0.81", "334.351, 23.2446, -135.801, 0.81" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "336.707, 30.1883, -134.134, 0.37", "337.741, 30.2559, -134.335, 0.37", "338.45, 30.422, -134.415, 0.81", "338.971, 30.6379, -134.425, 0.96", "339.578, 30.9033, -134.353, 0.96", "340.861, 31.4373, -134.15, 0.96", "342.17, 32.0448, -134.11, 0.59", "343.301, 32.6221, -134.072, 0.52", "344.697, 33.4142, -134.095, 0.52", "346.457, 34.5053, -134.229, 0.52", "347.102, 34.9198, -134.323, 0.52", "349.961, 36.6948, -134.933, 0.59", "350.938, 37.248, -135.266, 0.74", "352.193, 37.8727, -135.901, 1.4", "352.752, 38.1074, -136.242, 2.5", "353.455, 38.4072, -136.704, 2.95", "354.074, 38.6491, -137.061, 2.95", "355.664, 39.115, -138.163, 1.77", "356.556, 39.3737, -139.029, 0.52", "357.426, 39.5783, -139.94, 0.52", "358.02, 39.703, -140.61, 1.33", "358.362, 39.7649, -141.009, 1.69", "361.22, 40.1246, -144.402, 0.81", "363.213, 40.1757, -146.757, 0.52", "364.082, 40.1552, -147.853, 0.52", "364.347, 40.1379, -148.196, 0.88", "364.814, 40.0839, -148.776, 0.88", "365.4, 39.9976, -149.417, 0.88", "366.099, 39.8772, -149.97, 1.11", "368.079, 39.4476, -151.505, 0.37", "368.58, 39.3607, -151.934, 0.44", "368.955, 39.3166, -152.265, 0.44", "369.891, 39.2695, -153.124, 0.74", "370.835, 39.3004, -153.988, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "195.206, 347.141, 53.2894, 1.4", "195.621, 347.619, 54.0857, 1.4", "196.055, 348.119, 54.9176, 0.96", "196.239, 348.331, 55.2713, 0.44" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "195.206, 347.141, 53.2894, 0.44", "196.329, 345.411, 54.5835, 0.44", "197.142, 344.224, 55.455, 0.44", "197.651, 343.556, 55.9525, 0.44", "198.313, 342.688, 56.5992, 0.44", "198.899, 341.921, 57.1709, 0.44", "199.584, 341.023, 57.8404, 0.44", "199.627, 340.975, 57.8731, 0.44", "200.254, 340.278, 58.2694, 0.44" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_130",
    "id" : "dend_130",
    "points3d" : [ "109.366, -215.648, -202.93, 0.66", "106.926, -219.052, -201.69, 0.66", "106.012, -220.504, -201.346, 0.66", "105.215, -222.026, -201.112, 0.74", "104.493, -223.546, -200.964, 0.59", "103.64, -225.342, -200.79, 0.59", "103.075, -226.532, -200.675, 0.59", "102.556, -227.774, -200.82, 0.59", "102.01, -229.287, -201.042, 0.59", "101.756, -230.264, -201.254, 0.59" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_129",
    "id" : "dend_129",
    "points3d" : [ "109.366, -215.648, -202.93, 0.52", "108.898, -215.805, -203.036, 0.52", "108.274, -216.016, -203.177, 0.52", "107.661, -216.222, -203.316, 0.81" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-57.8682, -262.248, 23.1178, 0.44", "-58.2474, -263.396, 23.5239, 0.44", "-58.4645, -264.053, 23.7564, 0.44", "-58.6063, -264.482, 23.9083, 0.96", "-58.6178, -264.517, 23.9206, 0.96", "-58.9037, -265.382, 24.2267, 0.37", "-58.9998, -265.673, 24.3297, 1.11" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-57.8682, -262.248, 23.1178, 0.59", "-56.9398, -263.23, 25.1094, 0.59", "-56.2216, -263.99, 26.65, 0.59", "-53.6709, -266.687, 32.1214, 0.52", "-53.1286, -267.261, 33.2847, 0.52", "-52.5395, -267.884, 34.5484, 0.52", "-52.1566, -268.289, 35.3699, 0.52" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-58.1632, -258.954, 21.6236, 0.29", "-58.5918, -259.062, 21.7246, 0.29", "-59.2067, -259.242, 21.8651, 0.44", "-59.9349, -259.494, 22.0431, 0.44", "-61.5489, -260.051, 22.5235, 0.44", "-62.1776, -260.261, 22.7413, 0.44", "-62.5236, -260.377, 22.8612, 0.44", "-62.5814, -260.396, 22.878, 0.44", "-63.0425, -260.539, 22.9917, 0.44", "-63.6613, -260.784, 23.147, 0.44", "-63.8235, -260.913, 23.327, 0.88" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-58.1632, -258.954, 21.6236, 0.37", "-58.3643, -258.698, 22.228, 0.37", "-58.5297, -258.445, 22.7739, 0.37", "-59.006, -257.716, 24.3458, 0.37", "-59.2335, -257.368, 25.0967, 0.37", "-59.3718, -257.157, 25.5531, 0.37", "-59.5955, -256.814, 26.2914, 0.66", "-59.6333, -256.754, 26.4391, 0.66" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "370.835, 39.3004, -153.988, 0.44", "371.895, 39.4268, -154.312, 0.44", "372.992, 39.4174, -154.646, 0.44", "374.295, 39.1631, -155.008, 0.44", "375.413, 38.8748, -155.293, 0.44", "376.294, 38.6327, -155.5, 0.44", "377.552, 38.3749, -156.02, 0.59", "378.035, 38.2799, -156.302, 1.18", "379.5, 38.0759, -157.32, 0.59", "379.858, 38.072, -157.596, 0.59", "380.202, 38.1362, -157.892, 1.11", "383.154, 39.079, -160.545, 1.11", "383.617, 39.2724, -161.013, 0.52", "384.229, 39.5763, -161.774, 0.52", "384.773, 39.8709, -162.534, 0.52", "385.405, 40.1575, -163.406, 0.52", "385.788, 40.291, -163.901, 0.52", "387.066, 40.514, -165.26, 0.66", "388.865, 40.6699, -167.212, 0.88", "389.15, 40.6717, -167.526, 0.88", "389.713, 40.6712, -168.138, 0.37", "390.022, 40.6638, -168.426, 0.66", "390.845, 40.6111, -168.977, 0.59", "391.55, 40.5757, -169.357, 0.59", "391.799, 40.5837, -169.503, 0.96", "392.762, 40.7805, -170.285, 0.81", "393.871, 41.1665, -171.365, 0.59", "394.707, 41.5554, -172.28, 0.59", "396.028, 42.2593, -173.811, 0.59", "396.973, 42.7611, -174.906, 0.96", "397.81, 43.1823, -175.866, 0.66", "398.192, 43.3563, -176.306, 0.66", "398.269, 43.3977, -176.404, 0.66", "398.986, 43.7199, -177.254, 0.66", "399.312, 43.9889, -178.03, 0.66", "399.343, 44.0119, -178.098, 0.66", "399.538, 44.1224, -178.436, 0.66", "399.538, 44.1224, -178.436, 1.11", "399.78, 44.2036, -178.738, 1.11", "404.137, 45.3041, -183.464, 0.59", "405.298, 45.481, -184.579, 0.59", "406.568, 45.5192, -185.703, 0.59", "407.854, 45.3773, -186.765, 0.59", "408.788, 45.073, -187.483, 0.59", "409.59, 44.5175, -188.049, 0.59", "410.066, 43.8479, -188.361, 0.37", "410.631, 42.7079, -188.956, 0.37", "410.916, 41.7055, -189.492, 0.37", "411.047, 40.5478, -190.132, 0.37", "411.043, 39.4659, -190.759, 0.37", "410.99, 39.0112, -191.033, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "370.835, 39.3004, -153.988, 0.29", "370.834, 37.9392, -154.955, 0.29", "370.857, 37.6918, -155.176, 0.29", "370.873, 37.6359, -155.235, 0.29", "371.136, 37.1665, -155.811, 0.29", "371.445, 36.743, -156.37, 0.59", "372.034, 35.8768, -157.442, 0.44", "372.277, 35.6437, -157.859, 0.44", "372.64, 35.3239, -158.391, 0.44", "372.949, 35.0705, -158.775, 0.44", "372.998, 35.0403, -158.826, 0.44", "373.542, 34.6289, -159.359, 0.44", "373.579, 34.5935, -159.417, 0.44", "373.776, 34.4033, -159.757, 0.44", "373.816, 34.3664, -159.829, 0.44", "374.758, 33.5485, -161.494, 0.44", "375.35, 33.014, -162.553, 0.44", "376.526, 31.9571, -164.681, 0.44", "376.926, 31.5943, -165.424, 0.44", "376.963, 31.5607, -165.495, 0.44", "377.184, 31.3366, -165.957, 0.44", "377.449, 30.9454, -166.69, 0.81", "377.486, 30.8799, -166.826, 0.81" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "196.239, 348.331, 55.2713, 0.59", "196.705, 349.682, 56.2723, 0.59", "196.847, 350.096, 56.5792, 0.59", "197.206, 351.138, 57.3506, 1.18", "197.236, 351.226, 57.4163, 1.18" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "196.239, 348.331, 55.2713, 0.22", "197.235, 349.173, 55.4578, 0.22", "197.971, 349.648, 55.5958, 0.22", "198.373, 349.873, 55.6716, 0.59", "198.925, 350.135, 55.7521, 0.59", "199.751, 350.477, 55.8353, 0.59", "200.898, 350.881, 55.8907, 0.44", "201.749, 351.011, 55.8579, 0.44", "201.736, 350.95, 55.808, 0.44", "201.505, 350.349, 55.2987, 0.81", "201.278, 349.884, 54.8527, 0.81", "200.875, 349.166, 54.1618, 0.37", "200.351, 348.411, 53.4198, 0.37", "199.879, 347.835, 52.8232, 0.37", "199.486, 347.407, 52.3769, 0.37", "198.946, 346.928, 51.8854, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-58.9998, -265.673, 24.3297, 0.29", "-60.2249, -266.291, 24.8424, 0.29", "-61.3968, -266.883, 25.3329, 0.29", "-62.1029, -267.239, 25.6284, 0.29", "-62.778, -267.58, 25.9109, 0.29", "-63.2862, -267.837, 26.1236, 0.29", "-63.6434, -268.017, 26.2731, 0.81" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-58.9998, -265.673, 24.3297, 0.52", "-58.9924, -266.962, 25.1699, 0.52", "-59.025, -267.412, 25.462, 0.81", "-59.316, -269.033, 26.6079, 0.29", "-59.4037, -269.522, 26.9534, 0.59", "-59.4739, -269.913, 27.2297, 0.66", "-59.6287, -270.776, 27.8395, 0.22", "-59.6677, -270.866, 27.9103, 0.22", "-60.0668, -271.522, 28.4529, 0.59" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "197.236, 351.226, 57.4163, 0.37", "197.98, 353.482, 57.2576, 0.37", "198.564, 355.13, 57.3691, 0.37", "199.074, 356.338, 57.5267, 0.37", "199.413, 357.041, 57.6237, 0.81", "199.864, 357.819, 57.7095, 1.33", "200.32, 358.537, 57.7809, 1.33", "201.873, 360.577, 57.9777, 0.52", "202.671, 361.479, 58.0559, 0.52", "203.189, 362.015, 58.0864, 0.96", "204.571, 363.479, 58.2458, 0.44", "204.666, 363.585, 58.2583, 0.44", "205.344, 364.429, 58.265, 0.44", "205.725, 364.954, 58.2042, 0.74", "206.184, 365.696, 58.1206, 1.11", "207.132, 367.389, 57.7626, 0.59", "207.51, 368.061, 57.5378, 0.59", "208.369, 369.568, 56.8989, 0.96", "208.675, 370.109, 56.6418, 0.96", "209.501, 371.636, 55.8652, 0.59", "210.823, 374.133, 54.6256, 0.59", "211.763, 375.962, 53.7296, 0.52", "212.318, 377.094, 53.2671, 0.88", "212.59, 377.701, 53.0943, 0.88", "212.907, 378.585, 52.9074, 0.52", "213.285, 380.36, 52.7883, 0.52", "213.304, 380.586, 52.8316, 0.88", "213.282, 381.11, 53.0252, 1.25", "213.259, 381.424, 53.1683, 1.25", "213.115, 383.154, 53.8265, 0.52", "213.075, 383.482, 53.8773, 0.52" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "197.236, 351.226, 57.4163, 0.37", "196.478, 351.572, 57.7987, 0.37", "196.122, 351.729, 57.9764, 0.37", "195.913, 351.818, 58.0803, 0.37", "195.516, 351.989, 58.2775, 0.37", "195.209, 352.121, 58.4299, 0.37", "194.787, 352.302, 58.6395, 0.37", "194.448, 352.452, 58.8091, 0.37", "194.392, 352.482, 58.8384, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "213.075, 383.482, 53.8773, 0.44", "213.107, 384.095, 53.5793, 0.44", "213.123, 384.404, 53.4293, 0.52", "213.141, 384.74, 53.2656, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "213.075, 383.482, 53.8773, 0.44", "212.483, 383.256, 53.9197, 0.44", "212.034, 383.073, 53.9551, 0.44", "211.65, 382.916, 53.9853, 0.37", "211.305, 382.776, 54.0125, 0.37", "210.837, 382.585, 54.0493, 0.37", "210.558, 382.472, 54.0712, 0.37", "210.426, 382.414, 54.0817, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "213.141, 384.74, 53.2656, 0.29", "213.812, 384.552, 53.3364, 0.29", "214.225, 384.436, 53.38, 0.29", "214.587, 384.334, 53.4182, 0.66", "215.083, 384.195, 53.4706, 0.52", "216.179, 383.887, 53.5863, 0.52", "216.779, 383.718, 53.6496, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "213.141, 384.74, 53.2656, 0.52", "213.54, 385.459, 53.2608, 0.52", "213.82, 385.964, 53.2574, 0.52", "214.122, 386.508, 53.2537, 0.52", "214.161, 386.579, 53.2533, 0.52", "214.724, 387.594, 53.2464, 0.52", "214.998, 388.088, 53.2431, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "216.779, 383.718, 53.6496, 0.44", "217.47, 384.44, 54.0653, 0.44", "217.867, 385.017, 54.3538, 0.44", "217.926, 385.123, 54.4021, 0.44", "218.055, 385.419, 54.5345, 0.88", "218.121, 385.594, 54.6279, 1.03", "218.454, 386.494, 55.1235, 0.37", "218.559, 386.817, 55.3032, 0.66", "218.663, 387.045, 55.4561, 1.25", "218.819, 387.376, 55.6885, 1.25", "219.373, 388.488, 56.5314, 0.66", "219.593, 388.876, 56.854, 0.66", "219.972, 389.377, 57.3374, 1.55", "220.618, 390.099, 58.079, 2.14" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "216.779, 383.718, 53.6496, 0.44", "216.795, 383.279, 53.3686, 0.44", "216.815, 382.74, 53.0234, 0.44", "216.826, 382.438, 52.8304, 0.44", "216.839, 382.076, 52.5989, 0.44", "216.854, 381.663, 52.3343, 0.44" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "220.618, 390.099, 58.079, 0.66", "219.625, 391.661, 57.8782, 0.66", "219.6, 391.702, 57.873, 0.66", "219.212, 392.312, 57.7946, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "220.618, 390.099, 58.079, 0.96", "221.486, 391.027, 58.0373, 0.96", "221.958, 391.552, 57.979, 0.52", "222.444, 392.113, 57.9029, 0.52", "223.221, 393.169, 57.6703, 0.52", "224.031, 394.409, 57.3701, 0.59", "224.595, 395.369, 57.1193, 0.44", "224.984, 396.147, 56.8959, 1.11", "225.183, 396.61, 56.77, 1.47", "225.883, 398.469, 56.2721, 0.29", "226.111, 399.204, 56.0691, 0.29", "226.371, 400.334, 55.7739, 0.29", "226.498, 401.025, 55.6057, 0.37", "226.71, 402.072, 55.4157, 0.37", "226.739, 402.211, 55.3964, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "220.618, 390.099, 58.079, 0.66", "221.764, 389.856, 57.2648, 0.66", "222.457, 389.695, 56.7653, 0.52", "223.034, 389.56, 56.3493, 0.52", "223.652, 389.416, 55.9042, 0.52", "224.794, 389.149, 55.0808, 0.52", "225.344, 389.021, 54.6849, 0.52", "225.677, 388.926, 54.4578, 0.52" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "219.212, 392.312, 57.7946, 0.59", "219.751, 393.398, 58.3141, 0.59", "220.467, 395.093, 58.9186, 0.44", "221.005, 396.618, 59.3398, 0.44", "221.137, 397.031, 59.4364, 0.81", "221.318, 397.695, 59.5321, 0.81", "221.402, 398.051, 59.5649, 0.81", "221.591, 399.757, 59.4754, 0.44", "221.603, 400.649, 59.2938, 0.44", "221.601, 400.707, 59.2768, 0.44", "221.558, 401.933, 58.859, 0.44", "221.547, 402.23, 58.7441, 0.74", "221.544, 402.289, 58.7214, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "219.212, 392.312, 57.7946, 0.37", "218.644, 392.744, 60.1398, 0.37", "218.492, 392.86, 60.77, 0.37", "218.492, 392.86, 60.77, 0.66", "218.375, 392.949, 61.2545, 1.11", "218.33, 392.983, 61.4393, 1.11" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_81", "dend_60", "dend_0", "dend_112", "dend_82", "dend_68", "dend_61", "dend_20", "dend_1", "dend_114", "dend_113", "dend_101", "dend_83", "dend_78", "dend_69", "dend_65", "dend_62", "dend_47", "dend_21", "dend_11", "dend_2", "dend_116", "dend_115", "dend_103", "dend_102", "dend_85", "dend_84", "dend_80", "dend_79", "dend_71", "dend_70", "dend_67", "dend_66", "dend_64", "dend_63", "dend_59", "dend_48", "dend_23", "dend_22", "dend_19", "dend_12", "dend_4", "dend_3", "dend_120", "dend_117", "dend_105", "dend_104", "dend_87", "dend_86", "dend_73", "dend_72", "dend_50", "dend_49", "dend_25", "dend_24", "dend_18", "dend_13", "dend_10", "dend_5", "dend_122", "dend_121", "dend_119", "dend_118", "dend_107", "dend_106", "dend_89", "dend_88", "dend_75", "dend_74", "dend_52", "dend_51", "dend_27", "dend_26", "dend_15", "dend_14", "dend_7", "dend_6", "dend_126", "dend_123", "dend_109", "dend_108", "dend_100", "dend_90", "dend_77", "dend_76", "dend_54", "dend_53", "dend_29", "dend_28", "dend_17", "dend_16", "dend_9", "dend_8", "dend_128", "dend_127", "dend_125", "dend_124", "dend_111", "dend_110", "dend_95", "dend_94", "dend_91", "dend_58", "dend_55", "dend_31", "dend_30", "dend_130", "dend_129", "dend_97", "dend_96", "dend_93", "dend_92", "dend_57", "dend_56", "dend_33", "dend_32", "dend_99", "dend_98", "dend_35", "dend_34", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_44", "dend_43", "dend_42", "dend_46", "dend_45" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_81", "dend_60", "dend_0", "dend_112", "dend_82", "dend_68", "dend_61", "dend_20", "dend_1", "dend_114", "dend_113", "dend_101", "dend_83", "dend_78", "dend_69", "dend_65", "dend_62", "dend_47", "dend_21", "dend_11", "dend_2", "dend_116", "dend_115", "dend_103", "dend_102", "dend_85", "dend_84", "dend_80", "dend_79", "dend_71", "dend_70", "dend_67", "dend_66", "dend_64", "dend_63", "dend_59", "dend_48", "dend_23", "dend_22", "dend_19", "dend_12", "dend_4", "dend_3", "dend_120", "dend_117", "dend_105", "dend_104", "dend_87", "dend_86", "dend_73", "dend_72", "dend_50", "dend_49", "dend_25", "dend_24", "dend_18", "dend_13", "dend_10", "dend_5", "dend_122", "dend_121", "dend_119", "dend_118", "dend_107", "dend_106", "dend_89", "dend_88", "dend_75", "dend_74", "dend_52", "dend_51", "dend_27", "dend_26", "dend_15", "dend_14", "dend_7", "dend_6", "dend_126", "dend_123", "dend_109", "dend_108", "dend_100", "dend_90", "dend_77", "dend_76", "dend_54", "dend_53", "dend_29", "dend_28", "dend_17", "dend_16", "dend_9", "dend_8", "dend_128", "dend_127", "dend_125", "dend_124", "dend_111", "dend_110", "dend_95", "dend_94", "dend_91", "dend_58", "dend_55", "dend_31", "dend_30", "dend_130", "dend_129", "dend_97", "dend_96", "dend_93", "dend_92", "dend_57", "dend_56", "dend_33", "dend_32", "dend_99", "dend_98", "dend_35", "dend_34", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_44", "dend_43", "dend_42", "dend_46", "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_112" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_114" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_116" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_116",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_111" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_113" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_115" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_115",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_120",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_121",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_120" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_117" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_118" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_119" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_121" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_122" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_126" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_128" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_129" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_123" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_124" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_130" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_127" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_125" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_118",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_123",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_119",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_122",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_124",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_125",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_126",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_127",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_129",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_128",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_117",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_130",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_132",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_134",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_133",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_131",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110", "dend_111", "dend_112", "dend_113", "dend_114", "dend_115", "dend_116", "dend_117", "dend_118", "dend_119", "dend_120", "dend_121", "dend_122", "dend_123", "dend_124", "dend_125", "dend_126", "dend_127", "dend_128", "dend_129", "dend_130" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_113", "dend_113", "dend_113", "dend_113", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_120", "dend_120", "dend_120", "dend_117", "dend_117", "dend_117", "dend_117", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_106", "dend_106", "dend_106", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_126", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_95", "dend_95", "dend_95", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_91", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_129", "dend_129", "dend_129", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_BTC_8807af3a2b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_81, id: dend_81, parent: soma_0
create dend_81
public dend_81
// Section: dend_60, id: dend_60, parent: soma_0
create dend_60
public dend_60
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_112, id: dend_112, parent: dend_81
create dend_112
public dend_112
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_68, id: dend_68, parent: dend_60
create dend_68
public dend_68
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_114, id: dend_114, parent: dend_112
create dend_114
public dend_114
// Section: dend_113, id: dend_113, parent: dend_112
create dend_113
public dend_113
// Section: dend_101, id: dend_101, parent: dend_82
create dend_101
public dend_101
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_78, id: dend_78, parent: dend_68
create dend_78
public dend_78
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_47, id: dend_47, parent: dend_20
create dend_47
public dend_47
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_116, id: dend_116, parent: dend_114
create dend_116
public dend_116
// Section: dend_115, id: dend_115, parent: dend_114
create dend_115
public dend_115
// Section: dend_103, id: dend_103, parent: dend_101
create dend_103
public dend_103
// Section: dend_102, id: dend_102, parent: dend_101
create dend_102
public dend_102
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_47
create dend_59
public dend_59
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_120, id: dend_120, parent: dend_116
create dend_120
public dend_120
// Section: dend_117, id: dend_117, parent: dend_116
create dend_117
public dend_117
// Section: dend_105, id: dend_105, parent: dend_103
create dend_105
public dend_105
// Section: dend_104, id: dend_104, parent: dend_103
create dend_104
public dend_104
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_12
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_122, id: dend_122, parent: dend_120
create dend_122
public dend_122
// Section: dend_121, id: dend_121, parent: dend_120
create dend_121
public dend_121
// Section: dend_119, id: dend_119, parent: dend_117
create dend_119
public dend_119
// Section: dend_118, id: dend_118, parent: dend_117
create dend_118
public dend_118
// Section: dend_107, id: dend_107, parent: dend_105
create dend_107
public dend_107
// Section: dend_106, id: dend_106, parent: dend_105
create dend_106
public dend_106
// Section: dend_89, id: dend_89, parent: dend_87
create dend_89
public dend_89
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_126, id: dend_126, parent: dend_122
create dend_126
public dend_126
// Section: dend_123, id: dend_123, parent: dend_122
create dend_123
public dend_123
// Section: dend_109, id: dend_109, parent: dend_107
create dend_109
public dend_109
// Section: dend_108, id: dend_108, parent: dend_107
create dend_108
public dend_108
// Section: dend_100, id: dend_100, parent: dend_89
create dend_100
public dend_100
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_128, id: dend_128, parent: dend_126
create dend_128
public dend_128
// Section: dend_127, id: dend_127, parent: dend_126
create dend_127
public dend_127
// Section: dend_125, id: dend_125, parent: dend_123
create dend_125
public dend_125
// Section: dend_124, id: dend_124, parent: dend_123
create dend_124
public dend_124
// Section: dend_111, id: dend_111, parent: dend_109
create dend_111
public dend_111
// Section: dend_110, id: dend_110, parent: dend_109
create dend_110
public dend_110
// Section: dend_95, id: dend_95, parent: dend_90
create dend_95
public dend_95
// Section: dend_94, id: dend_94, parent: dend_90
create dend_94
public dend_94
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_130, id: dend_130, parent: dend_128
create dend_130
public dend_130
// Section: dend_129, id: dend_129, parent: dend_128
create dend_129
public dend_129
// Section: dend_97, id: dend_97, parent: dend_95
create dend_97
public dend_97
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_99, id: dend_99, parent: dend_97
create dend_99
public dend_99
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_44, id: dend_44, parent: dend_41
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_81, dend_60, dend_0, dend_112, dend_82, dend_68, dend_61, dend_20, dend_1, dend_114, dend_113, dend_101, dend_83, dend_78, dend_69, dend_65, dend_62, dend_47, dend_21, dend_11, dend_2, dend_116, dend_115, dend_103, dend_102, dend_85, dend_84, dend_80, dend_79, dend_71, dend_70, dend_67, dend_66, dend_64, dend_63, dend_59, dend_48, dend_23, dend_22, dend_19, dend_12, dend_4, dend_3, dend_120, dend_117, dend_105, dend_104, dend_87, dend_86, dend_73, dend_72, dend_50, dend_49, dend_25, dend_24, dend_18, dend_13, dend_10, dend_5, dend_122, dend_121, dend_119, dend_118, dend_107, dend_106, dend_89, dend_88, dend_75, dend_74, dend_52, dend_51, dend_27, dend_26, dend_15, dend_14, dend_7, dend_6, dend_126, dend_123, dend_109, dend_108, dend_100, dend_90, dend_77, dend_76, dend_54, dend_53, dend_29, dend_28, dend_17, dend_16, dend_9, dend_8, dend_128, dend_127, dend_125, dend_124, dend_111, dend_110, dend_95, dend_94, dend_91, dend_58, dend_55, dend_31, dend_30, dend_130, dend_129, dend_97, dend_96, dend_93, dend_92, dend_57, dend_56, dend_33, dend_32, dend_99, dend_98, dend_35, dend_34, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_44, dend_43, dend_42, dend_46, dend_45]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_81, dend_60, dend_0, dend_112, dend_82, dend_68, dend_61, dend_20, dend_1, dend_114, dend_113, dend_101, dend_83, dend_78, dend_69, dend_65, dend_62, dend_47, dend_21, dend_11, dend_2, dend_116, dend_115, dend_103, dend_102, dend_85, dend_84, dend_80, dend_79, dend_71, dend_70, dend_67, dend_66, dend_64, dend_63, dend_59, dend_48, dend_23, dend_22, dend_19, dend_12, dend_4, dend_3, dend_120, dend_117, dend_105, dend_104, dend_87, dend_86, dend_73, dend_72, dend_50, dend_49, dend_25, dend_24, dend_18, dend_13, dend_10, dend_5, dend_122, dend_121, dend_119, dend_118, dend_107, dend_106, dend_89, dend_88, dend_75, dend_74, dend_52, dend_51, dend_27, dend_26, dend_15, dend_14, dend_7, dend_6, dend_126, dend_123, dend_109, dend_108, dend_100, dend_90, dend_77, dend_76, dend_54, dend_53, dend_29, dend_28, dend_17, dend_16, dend_9, dend_8, dend_128, dend_127, dend_125, dend_124, dend_111, dend_110, dend_95, dend_94, dend_91, dend_58, dend_55, dend_31, dend_30, dend_130, dend_129, dend_97, dend_96, dend_93, dend_92, dend_57, dend_56, dend_33, dend_32, dend_99, dend_98, dend_35, dend_34, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_44, dend_43, dend_42, dend_46, dend_45]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_112]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_114]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_116]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_116
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_111]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_113]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_115]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_115
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_120
// Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_121
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_120]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_117]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_118]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_119]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_121]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_122]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_126]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_128]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_129]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_123]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_124]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_130]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_127]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_125]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_118
// Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_123
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_119
// Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_122
// Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_124
// Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_125
// Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_126
// Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_127
// Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_129
// Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_128
// Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_117
// Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_130
// Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_132
// Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_134
// Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_133
// Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_131
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_96
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_113, dend_113, dend_113, dend_113, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_102, dend_102, dend_102, dend_102, dend_102, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_120, dend_120, dend_120, dend_117, dend_117, dend_117, dend_117, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_126, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_128, dend_128, dend_128, dend_128, dend_128, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_124, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_95, dend_95, dend_95, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_91, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_129, dend_129, dend_129, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_81(0), soma_0(0.4999999944471457)
    connect dend_60(0), soma_0(0.4999999944471457)
    connect dend_0(0), soma_0(0.4999999944471457)
    connect axon_0(0), soma_0(1.0)
    connect dend_112(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_68(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_114(0), dend_112(1.0)
    connect dend_113(0), dend_112(1.0)
    connect dend_101(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_78(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_47(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_116(0), dend_114(1.0)
    connect dend_115(0), dend_114(1.0)
    connect dend_103(0), dend_101(1.0)
    connect dend_102(0), dend_101(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_120(0), dend_116(1.0)
    connect dend_117(0), dend_116(1.0)
    connect dend_105(0), dend_103(1.0)
    connect dend_104(0), dend_103(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_122(0), dend_120(1.0)
    connect dend_121(0), dend_120(1.0)
    connect dend_119(0), dend_117(1.0)
    connect dend_118(0), dend_117(1.0)
    connect dend_107(0), dend_105(1.0)
    connect dend_106(0), dend_105(1.0)
    connect dend_89(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_126(0), dend_122(1.0)
    connect dend_123(0), dend_122(1.0)
    connect dend_109(0), dend_107(1.0)
    connect dend_108(0), dend_107(1.0)
    connect dend_100(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_128(0), dend_126(1.0)
    connect dend_127(0), dend_126(1.0)
    connect dend_125(0), dend_123(1.0)
    connect dend_124(0), dend_123(1.0)
    connect dend_111(0), dend_109(1.0)
    connect dend_110(0), dend_109(1.0)
    connect dend_95(0), dend_90(1.0)
    connect dend_94(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_130(0), dend_128(1.0)
    connect dend_129(0), dend_128(1.0)
    connect dend_97(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_99(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_44(0), dend_41(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.01771, -11.0391, 0.577677, 4.33284 ) }
    soma_0 { pt3dadd( -4.63379, -10.0125, 0.534922, 7.45854 ) }
    soma_0 { pt3dadd( -4.24987, -8.98588, 0.492166, 9.48076 ) }
    soma_0 { pt3dadd( -3.86596, -7.95927, 0.449411, 10.9075 ) }
    soma_0 { pt3dadd( -3.48204, -6.93266, 0.406656, 11.628 ) }
    soma_0 { pt3dadd( -3.09812, -5.90605, 0.363901, 12.2873 ) }
    soma_0 { pt3dadd( -2.71421, -4.87944, 0.321146, 12.9463 ) }
    soma_0 { pt3dadd( -2.33029, -3.85283, 0.27839, 14.0532 ) }
    soma_0 { pt3dadd( -1.94638, -2.82623, 0.235635, 15.6117 ) }
    soma_0 { pt3dadd( -1.56246, -1.79962, 0.19288, 15.9585 ) }
    soma_0 { pt3dadd( -1.17854, -0.773007, 0.150125, 15.6036 ) }
    soma_0 { pt3dadd( -0.794628, 0.253602, 0.10737, 15.3135 ) }
    soma_0 { pt3dadd( -0.410711, 1.28021, 0.0646144, 15.4402 ) }
    soma_0 { pt3dadd( -0.0267952, 2.30682, 0.0218592, 15.4567 ) }
    soma_0 { pt3dadd( 0.357121, 3.33343, -0.020896, 15.3596 ) }
    soma_0 { pt3dadd( 0.741037, 4.36004, -0.0636512, 14.6787 ) }
    soma_0 { pt3dadd( 1.12495, 5.38665, -0.106406, 13.8111 ) }
    soma_0 { pt3dadd( 1.50887, 6.41326, -0.149162, 12.3297 ) }
    soma_0 { pt3dadd( 1.89279, 7.43987, -0.191917, 10.4046 ) }
    soma_0 { pt3dadd( 2.2767, 8.46648, -0.234672, 8.10572 ) }
    soma_0 { pt3dadd( 2.66062, 9.49309, -0.277427, 4.65134 ) }
    // Section: dend_81, id: dend_81, parent: soma_0 (entry count 21/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -0.571072, -10.7624, -2.17477, 4.64 ) }
    dend_81 { pt3dadd( -0.605672, -11.2834, -2.22411, 4.64 ) }
    dend_81 { pt3dadd( -0.648253, -12.8756, -2.38514, 4.35 ) }
    dend_81 { pt3dadd( -0.721164, -15.6019, -2.66088, 3.46 ) }
    dend_81 { pt3dadd( -0.782997, -17.914, -2.89473, 3.54 ) }
    dend_81 { pt3dadd( -0.823482, -19.4278, -3.04783, 3.76 ) }
    dend_81 { pt3dadd( -0.865981, -21.017, -3.20856, 4.2 ) }
    dend_81 { pt3dadd( -0.904812, -22.5114, -3.38169, 4.2 ) }
    // Section: dend_60, id: dend_60, parent: soma_0 (entry count 29/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -6.83107, -8.58689, -3.11477, 2.5 ) }
    dend_60 { pt3dadd( -7.39916, -9.09367, -3.7337, 2.5 ) }
    dend_60 { pt3dadd( -9.20302, -10.7348, -5.087, 2.5 ) }
    dend_60 { pt3dadd( -13.6434, -14.8689, -7.60156, 2.5 ) }
    dend_60 { pt3dadd( -14.9193, -16.0309, -8.30304, 2.43 ) }
    dend_60 { pt3dadd( -17.6772, -18.4887, -9.73051, 2.5 ) }
    dend_60 { pt3dadd( -19.0714, -19.7049, -10.4029, 2.5 ) }
    dend_60 { pt3dadd( -20.6777, -21.0427, -10.979, 2.95 ) }
    dend_60 { pt3dadd( -21.4857, -21.6903, -11.1153, 2.95 ) }
    dend_60 { pt3dadd( -23.3734, -23.1973, -11.1283, 3.68 ) }
    dend_60 { pt3dadd( -24.4356, -24.0733, -11.2503, 3.68 ) }
    dend_60 { pt3dadd( -25.3583, -24.8307, -11.4907, 3.68 ) }
    dend_60 { pt3dadd( -26.6357, -25.8397, -11.8198, 3.68 ) }
    dend_60 { pt3dadd( -27.8209, -26.7122, -12.0831, 3.68 ) }
    dend_60 { pt3dadd( -29.2854, -27.8136, -12.2996, 3.68 ) }
    dend_60 { pt3dadd( -30.5372, -28.833, -12.2996, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 45/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.87892, 9.33961, -2.80477, 4.79 ) }
    dend_0 { pt3dadd( 2.98684, 9.74889, -2.9955, 4.05 ) }
    dend_0 { pt3dadd( 3.40789, 11.3105, -3.69784, 3.39 ) }
    dend_0 { pt3dadd( 4.01054, 13.5029, -4.51617, 3.24 ) }
    dend_0 { pt3dadd( 4.6256, 15.6441, -5.17065, 3.24 ) }
    dend_0 { pt3dadd( 5.20498, 17.5661, -5.72469, 3.24 ) }
    dend_0 { pt3dadd( 5.51865, 18.6066, -6.02464, 4.27 ) }
    dend_0 { pt3dadd( 5.57143, 18.7768, -6.07154, 4.27 ) }
    dend_0 { pt3dadd( 6.28035, 20.9432, -6.5938, 3.54 ) }
    dend_0 { pt3dadd( 6.90594, 22.7019, -6.83897, 3.54 ) }
    dend_0 { pt3dadd( 7.252, 23.6529, -6.85448, 3.24 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 56/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.66062, 9.49309, -0.277427, 0.703226 ) }
    axon_0 { pt3dadd( 7.91473, 23.5428, -0.277427, 0.703226 ) }
    axon_0 { pt3dadd( 13.1688, 37.5925, -0.277427, 0.703226 ) }
    // Section: dend_112, id: dend_112, parent: dend_81 (entry count 59/100)
    dend_112 { pt3dclear() }
    dend_112 { pt3dadd( -0.904812, -22.5114, -3.38169, 1.11 ) }
    dend_112 { pt3dadd( 0.419827, -24.8269, -5.591, 1.11 ) }
    dend_112 { pt3dadd( 0.810573, -25.5433, -6.21862, 1.11 ) }
    dend_112 { pt3dadd( 1.20383, -26.1867, -6.72609, 0.74 ) }
    dend_112 { pt3dadd( 1.69079, -26.863, -7.21263, 0.74 ) }
    dend_112 { pt3dadd( 2.35947, -27.7003, -7.77519, 0.74 ) }
    dend_112 { pt3dadd( 2.43448, -27.7828, -7.82591, 0.74 ) }
    dend_112 { pt3dadd( 2.83274, -28.1249, -7.90535, 0.74 ) }
    dend_112 { pt3dadd( 3.7701, -28.7358, -8.02211, 1.18 ) }
    dend_112 { pt3dadd( 4.50988, -29.1019, -8.13042, 1.55 ) }
    dend_112 { pt3dadd( 4.65942, -29.1668, -8.15846, 1.55 ) }
    dend_112 { pt3dadd( 5.48535, -29.5086, -8.32148, 1.99 ) }
    dend_112 { pt3dadd( 6.43153, -29.9071, -8.62797, 1.99 ) }
    dend_112 { pt3dadd( 7.23841, -30.2667, -8.97591, 1.99 ) }
    dend_112 { pt3dadd( 8.61584, -30.9518, -9.7015, 1.25 ) }
    dend_112 { pt3dadd( 9.44849, -31.4438, -10.2087, 0.88 ) }
    dend_112 { pt3dadd( 9.58051, -31.5413, -10.3064, 1.11 ) }
    dend_112 { pt3dadd( 10.4671, -32.4662, -11.2761, 1.03 ) }
    dend_112 { pt3dadd( 10.7973, -33.025, -11.8441, 1.03 ) }
    dend_112 { pt3dadd( 10.95, -33.5262, -12.3047, 1.03 ) }
    dend_112 { pt3dadd( 11.0045, -34.2235, -12.8376, 1.03 ) }
    dend_112 { pt3dadd( 10.9676, -35.1854, -13.5062, 1.03 ) }
    dend_112 { pt3dadd( 10.8865, -36.3822, -14.2532, 1.03 ) }
    dend_112 { pt3dadd( 10.8609, -36.9254, -14.5747, 1.03 ) }
    dend_112 { pt3dadd( 10.9102, -37.2796, -14.8724, 1.03 ) }
    dend_112 { pt3dadd( 10.9797, -37.4282, -15.0276, 1.03 ) }
    dend_112 { pt3dadd( 11.0161, -37.4659, -15.0802, 1.03 ) }
    dend_112 { pt3dadd( 11.5399, -37.8553, -15.6351, 1.4 ) }
    dend_112 { pt3dadd( 12.5746, -38.5241, -16.4669, 1.69 ) }
    dend_112 { pt3dadd( 13.9551, -39.3571, -17.4552, 1.69 ) }
    dend_112 { pt3dadd( 14.4764, -39.6542, -17.7768, 2.21 ) }
    dend_112 { pt3dadd( 16.3312, -40.6748, -18.7202, 1.77 ) }
    dend_112 { pt3dadd( 17.6442, -41.383, -19.2701, 1.77 ) }
    dend_112 { pt3dadd( 18.9618, -42.0692, -19.7046, 2.43 ) }
    dend_112 { pt3dadd( 19.0431, -42.1127, -19.7263, 2.43 ) }
    dend_112 { pt3dadd( 20.0711, -42.7259, -19.9596, 2.8 ) }
    dend_112 { pt3dadd( 21.0169, -43.3238, -20.1936, 2.8 ) }
    dend_112 { pt3dadd( 21.0919, -43.3777, -20.2122, 2.8 ) }
    dend_112 { pt3dadd( 22.1675, -44.3175, -20.6393, 2.36 ) }
    dend_112 { pt3dadd( 23.6337, -45.88, -21.3891, 1.77 ) }
    dend_112 { pt3dadd( 24.4889, -46.965, -22.063, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_112 { pt3dadd( 24.5224, -47.0145, -22.0978, 1.77 ) }
    dend_112 { pt3dadd( 25.1173, -47.9593, -22.8009, 1.47 ) }
    dend_112 { pt3dadd( 25.7582, -48.9387, -23.619, 1.33 ) }
    dend_112 { pt3dadd( 26.3355, -49.7841, -24.3773, 1.33 ) }
    dend_112 { pt3dadd( 27.9725, -51.7737, -26.6284, 1.25 ) }
    dend_112 { pt3dadd( 28.3882, -52.2013, -27.2408, 1.25 ) }
    dend_112 { pt3dadd( 28.7188, -52.498, -27.7223, 1.55 ) }
    dend_112 { pt3dadd( 29.9596, -53.4237, -29.4853, 1.84 ) }
    dend_112 { pt3dadd( 30.4765, -53.7329, -30.1754, 1.69 ) }
    dend_112 { pt3dadd( 32.0668, -54.4954, -32.1033, 1.33 ) }
    dend_112 { pt3dadd( 33.1999, -54.9548, -33.2124, 0.59 ) }
    dend_112 { pt3dadd( 33.6004, -55.0991, -33.5785, 0.59 ) }
    dend_112 { pt3dadd( 33.846, -55.1812, -33.7709, 0.59 ) }
    dend_112 { pt3dadd( 34.4704, -55.378, -34.1044, 0.59 ) }
    dend_112 { pt3dadd( 35.2026, -55.6514, -34.3417, 1.03 ) }
    dend_112 { pt3dadd( 36.0142, -56.0609, -34.3674, 1.4 ) }
    dend_112 { pt3dadd( 36.8775, -56.6403, -34.2945, 1.25 ) }
    dend_112 { pt3dadd( 37.4233, -57.0661, -34.2405, 0.81 ) }
    dend_112 { pt3dadd( 37.8356, -57.3879, -34.1984, 0.81 ) }
    dend_112 { pt3dadd( 38.7243, -58.0651, -34.1082, 0.74 ) }
    dend_112 { pt3dadd( 39.2958, -58.4969, -34.0391, 1.11 ) }
    dend_112 { pt3dadd( 40.3274, -59.2548, -33.9018, 1.47 ) }
    dend_112 { pt3dadd( 41.2908, -59.9289, -33.769, 1.47 ) }
    dend_112 { pt3dadd( 42.8684, -60.9747, -33.6576, 1.47 ) }
    dend_112 { pt3dadd( 43.8104, -61.5888, -33.6378, 1.47 ) }
    dend_112 { pt3dadd( 44.4877, -62.0282, -33.6541, 1.84 ) }
    dend_112 { pt3dadd( 44.9737, -62.3634, -33.6861, 2.5 ) }
    dend_112 { pt3dadd( 45.7552, -63.0076, -33.7831, 2.5 ) }
    dend_112 { pt3dadd( 47.0298, -64.3931, -34.0921, 1.55 ) }
    dend_112 { pt3dadd( 47.389, -64.9534, -34.245, 1.11 ) }
    dend_112 { pt3dadd( 47.7433, -65.7665, -34.4844, 1.03 ) }
    dend_112 { pt3dadd( 47.8758, -66.2963, -34.6427, 0.59 ) }
    dend_112 { pt3dadd( 47.9492, -67.2035, -34.8946, 0.74 ) }
    dend_112 { pt3dadd( 47.8909, -67.8803, -35.8299, 1.33 ) }
    dend_112 { pt3dadd( 47.7921, -68.3979, -36.9284, 1.62 ) }
    dend_112 { pt3dadd( 47.7242, -68.7881, -37.8707, 1.77 ) }
    dend_112 { pt3dadd( 47.6741, -69.1602, -38.8084, 1.77 ) }
    dend_112 { pt3dadd( 47.6725, -69.1897, -38.8839, 1.77 ) }
    dend_112 { pt3dadd( 47.8762, -72.9799, -48.5764, 1.25 ) }
    dend_112 { pt3dadd( 47.8859, -73.0311, -48.6994, 1.25 ) }
    dend_112 { pt3dadd( 48.0264, -73.4838, -49.7071, 1.25 ) }
    dend_112 { pt3dadd( 48.2665, -73.9887, -50.7031, 1.25 ) }
    dend_112 { pt3dadd( 48.5769, -74.4815, -51.5218, 1.55 ) }
    dend_112 { pt3dadd( 49.0405, -75.1087, -52.2729, 2.14 ) }
    dend_112 { pt3dadd( 50.3067, -76.5805, -53.1109, 1.77 ) }
    dend_112 { pt3dadd( 51.8628, -78.2233, -54.2447, 0.96 ) }
    dend_112 { pt3dadd( 53.1808, -79.5108, -55.2755, 0.96 ) }
    dend_112 { pt3dadd( 53.9562, -80.2594, -55.9028, 0.96 ) }
    dend_112 { pt3dadd( 54.3459, -80.6457, -56.2404, 0.96 ) }
    dend_112 { pt3dadd( 54.3956, -80.6979, -56.283, 0.96 ) }
    dend_112 { pt3dadd( 55.3985, -81.9858, -57.4517, 1.25 ) }
    dend_112 { pt3dadd( 55.7498, -82.65, -58.0725, 1.25 ) }
    dend_112 { pt3dadd( 56.0376, -83.5486, -58.9542, 1.25 ) }
    dend_112 { pt3dadd( 56.283, -84.6037, -59.9846, 1.25 ) }
    dend_112 { pt3dadd( 56.4817, -85.4939, -60.8332, 1.25 ) }
    dend_112 { pt3dadd( 57.114, -88.1001, -63.2033, 1.11 ) }
    dend_112 { pt3dadd( 57.2949, -88.8332, -63.8389, 1.11 ) }
    dend_112 { pt3dadd( 57.4071, -89.1858, -64.1545, 1.11 ) }
    dend_112 { pt3dadd( 57.7706, -89.9985, -64.8972, 1.11 ) }
    dend_112 { pt3dadd( 58.1424, -90.6295, -65.4028, 1.55 ) }
    dend_112 { pt3dadd( 58.525, -91.1097, -65.7188, 2.06 ) }
    dend_112 { pt3dadd( 58.6379, -91.223, -65.7662, 2.36 ) }
    dend_112 { pt3dadd( 59.4619, -92.0381, -66.1182, 2.36 ) }
    dend_112 { pt3dadd( 60.5898, -93.2005, -66.6095, 1.92 ) }
    dend_112 { pt3dadd( 60.911, -93.5719, -66.7818, 1.92 ) }
    dend_112 { pt3dadd( 61.5476, -94.3336, -67.1713, 1.55 ) }
    dend_112 { pt3dadd( 62.3159, -95.1701, -67.7731, 1.11 ) }
    dend_112 { pt3dadd( 62.9316, -95.7634, -68.2861, 1.11 ) }
    dend_112 { pt3dadd( 63.0469, -95.8681, -68.3932, 1.11 ) }
    dend_112 { pt3dadd( 63.7567, -96.454, -69.2311, 1.11 ) }
    dend_112 { pt3dadd( 64.3398, -97.0611, -70.13, 1.11 ) }
    dend_112 { pt3dadd( 65.2252, -98.1862, -72.0471, 0.88 ) }
    dend_112 { pt3dadd( 65.6193, -98.712, -72.8937, 0.88 ) }
    dend_112 { pt3dadd( 65.7392, -98.8887, -73.1582, 0.88 ) }
    dend_112 { pt3dadd( 66.5425, -100.409, -75.2367, 0.96 ) }
    dend_112 { pt3dadd( 67.156, -101.601, -77.0771, 0.96 ) }
    dend_112 { pt3dadd( 67.6775, -102.736, -78.9358, 0.88 ) }
    dend_112 { pt3dadd( 68.2228, -103.739, -80.8672, 0.59 ) }
    dend_112 { pt3dadd( 68.6674, -104.35, -82.2363, 0.96 ) }
    dend_112 { pt3dadd( 69.3753, -105.06, -83.9546, 2.28 ) }
    dend_112 { pt3dadd( 71.1078, -106.439, -87.5185, 1.84 ) }
    dend_112 { pt3dadd( 71.1478, -106.465, -87.5949, 1.84 ) }
    dend_112 { pt3dadd( 72.711, -107.483, -90.5648, 1.03 ) }
    dend_112 { pt3dadd( 73.1933, -107.818, -91.6375, 1.03 ) }
    dend_112 { pt3dadd( 73.6702, -108.191, -92.8363, 1.03 ) }
    dend_112 { pt3dadd( 73.7977, -108.436, -93.5153, 1.03 ) }
    dend_112 { pt3dadd( 73.7839, -108.468, -93.5763, 1.03 ) }
    dend_112 { pt3dadd( 73.5224, -108.861, -94.3408, 1.33 ) }
    dend_112 { pt3dadd( 72.9822, -109.638, -96.0324, 1.33 ) }
    dend_112 { pt3dadd( 72.5516, -110.443, -97.9557, 1.62 ) }
    dend_112 { pt3dadd( 72.4091, -111.156, -99.9644, 0.88 ) }
    dend_112 { pt3dadd( 72.4825, -111.538, -101.156, 0.88 ) }
    dend_112 { pt3dadd( 72.8801, -112.266, -103.524, 1.33 ) }
    dend_112 { pt3dadd( 73.6426, -113.192, -106.418, 1.33 ) }
    dend_112 { pt3dadd( 74.0368, -113.587, -107.529, 1.47 ) }
    dend_112 { pt3dadd( 75.28, -114.728, -110.449, 1.4 ) }
    dend_112 { pt3dadd( 75.7499, -115.148, -111.428, 1.4 ) }
    dend_112 { pt3dadd( 76.6089, -116.004, -113.161, 1.47 ) }
    dend_112 { pt3dadd( 77.0119, -116.54, -113.926, 1.47 ) }
    dend_112 { pt3dadd( 77.3666, -117.191, -114.547, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_112 { pt3dadd( 77.7043, -117.843, -115.082, 1.47 ) }
    dend_112 { pt3dadd( 78.0769, -118.68, -115.507, 1.47 ) }
    dend_112 { pt3dadd( 78.31, -119.335, -115.771, 1.18 ) }
    dend_112 { pt3dadd( 78.4696, -119.918, -115.965, 1.03 ) }
    dend_112 { pt3dadd( 78.6473, -120.798, -116.314, 0.81 ) }
    dend_112 { pt3dadd( 78.9418, -122.889, -117.406, 1.03 ) }
    dend_112 { pt3dadd( 79.156, -124.429, -118.366, 0.88 ) }
    dend_112 { pt3dadd( 79.4408, -126.064, -119.46, 1.25 ) }
    dend_112 { pt3dadd( 79.6268, -126.824, -119.967, 1.25 ) }
    dend_112 { pt3dadd( 79.9198, -127.821, -120.618, 1.25 ) }
    dend_112 { pt3dadd( 80.6208, -129.44, -121.787, 1.55 ) }
    dend_112 { pt3dadd( 81.3321, -130.539, -122.636, 1.84 ) }
    dend_112 { pt3dadd( 82.1805, -131.388, -123.436, 1.84 ) }
    dend_112 { pt3dadd( 83.1557, -132.172, -124.242, 1.84 ) }
    dend_112 { pt3dadd( 83.2003, -132.208, -124.283, 1.84 ) }
    dend_112 { pt3dadd( 84.843, -133.556, -125.943, 1.47 ) }
    dend_112 { pt3dadd( 84.8746, -133.604, -126.023, 1.47 ) }
    dend_112 { pt3dadd( 84.956, -134.132, -127.101, 1.03 ) }
    dend_112 { pt3dadd( 84.8578, -134.452, -127.859, 1.03 ) }
    dend_112 { pt3dadd( 84.1747, -135.372, -130.297, 1.03 ) }
    dend_112 { pt3dadd( 83.781, -135.72, -131.265, 1.47 ) }
    dend_112 { pt3dadd( 82.0508, -136.605, -134.0, 1.99 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 22/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -0.904812, -22.5114, -3.38169, 4.2 ) }
    dend_82 { pt3dadd( -1.15205, -22.7785, -3.5073, 4.2 ) }
    dend_82 { pt3dadd( -1.28293, -22.9364, -3.57723, 4.2 ) }
    dend_82 { pt3dadd( -1.85283, -23.7292, -3.88604, 3.17 ) }
    dend_82 { pt3dadd( -2.8857, -25.3226, -4.09048, 2.14 ) }
    dend_82 { pt3dadd( -3.15025, -25.7633, -4.07785, 1.77 ) }
    dend_82 { pt3dadd( -3.62873, -26.6053, -3.95036, 1.62 ) }
    dend_82 { pt3dadd( -3.87792, -27.1197, -3.79152, 1.62 ) }
    dend_82 { pt3dadd( -4.18509, -27.8953, -3.45772, 1.62 ) }
    dend_82 { pt3dadd( -4.8483, -30.0869, -2.27117, 1.62 ) }
    dend_82 { pt3dadd( -4.97843, -30.6741, -1.88386, 1.62 ) }
    dend_82 { pt3dadd( -5.1125, -31.4595, -1.3643, 1.84 ) }
    dend_82 { pt3dadd( -5.28403, -32.6624, -0.574806, 2.21 ) }
    dend_82 { pt3dadd( -5.38624, -33.5069, -0.0656615, 2.58 ) }
    dend_82 { pt3dadd( -5.44538, -34.055, 0.218525, 2.73 ) }
    dend_82 { pt3dadd( -5.62729, -35.7588, 0.803368, 2.28 ) }
    dend_82 { pt3dadd( -5.77464, -36.7876, 1.06596, 2.28 ) }
    dend_82 { pt3dadd( -5.88148, -37.3125, 1.14217, 2.21 ) }
    dend_82 { pt3dadd( -6.04273, -37.878, 1.15412, 2.21 ) }
    dend_82 { pt3dadd( -6.23711, -38.4395, 1.1206, 2.14 ) }
    dend_82 { pt3dadd( -6.68015, -39.6101, 1.0137, 1.99 ) }
    dend_82 { pt3dadd( -7.06952, -40.6091, 0.886022, 1.99 ) }
    dend_82 { pt3dadd( -7.26455, -41.1545, 0.834647, 1.99 ) }
    dend_82 { pt3dadd( -7.53114, -41.9821, 0.785817, 1.92 ) }
    dend_82 { pt3dadd( -7.84241, -43.0457, 0.76047, 1.92 ) }
    dend_82 { pt3dadd( -8.13855, -44.1511, 0.796061, 1.92 ) }
    dend_82 { pt3dadd( -8.39042, -45.1998, 0.895568, 1.77 ) }
    dend_82 { pt3dadd( -8.61913, -46.1495, 1.01148, 1.47 ) }
    dend_82 { pt3dadd( -8.81685, -46.8596, 1.1901, 1.47 ) }
    dend_82 { pt3dadd( -9.07847, -47.632, 1.46891, 1.84 ) }
    dend_82 { pt3dadd( -9.34468, -48.3094, 1.75745, 2.43 ) }
    dend_82 { pt3dadd( -9.36378, -48.3536, 1.77752, 2.43 ) }
    dend_82 { pt3dadd( -9.77625, -49.2828, 2.22836, 2.43 ) }
    dend_82 { pt3dadd( -10.7538, -51.4902, 3.25633, 2.06 ) }
    dend_82 { pt3dadd( -11.1137, -52.3414, 3.60384, 1.84 ) }
    dend_82 { pt3dadd( -11.3804, -53.0222, 3.8276, 1.77 ) }
    dend_82 { pt3dadd( -11.6346, -53.7295, 3.97092, 1.77 ) }
    dend_82 { pt3dadd( -11.881, -54.4796, 4.03657, 1.62 ) }
    dend_82 { pt3dadd( -12.1119, -55.3219, 3.99656, 1.62 ) }
    dend_82 { pt3dadd( -12.2753, -56.0047, 3.8665, 2.28 ) }
    dend_82 { pt3dadd( -12.4438, -56.8161, 3.70827, 2.28 ) }
    dend_82 { pt3dadd( -12.6243, -57.7397, 3.53867, 1.99 ) }
    dend_82 { pt3dadd( -12.7784, -58.5827, 3.41745, 1.99 ) }
    dend_82 { pt3dadd( -12.9858, -59.7002, 3.30566, 1.99 ) }
    dend_82 { pt3dadd( -13.0058, -59.8054, 3.30065, 1.99 ) }
    dend_82 { pt3dadd( -13.1571, -60.6098, 3.29462, 1.77 ) }
    dend_82 { pt3dadd( -13.3458, -61.6169, 3.31409, 1.77 ) }
    dend_82 { pt3dadd( -13.5239, -62.6352, 3.36448, 1.77 ) }
    dend_82 { pt3dadd( -13.6168, -63.2128, 3.38989, 1.77 ) }
    dend_82 { pt3dadd( -13.7223, -64.0201, 3.4186, 1.77 ) }
    dend_82 { pt3dadd( -13.7644, -64.6186, 3.4328, 1.77 ) }
    dend_82 { pt3dadd( -13.7788, -65.276, 3.44035, 1.77 ) }
    dend_82 { pt3dadd( -13.7544, -66.0843, 3.4293, 1.77 ) }
    dend_82 { pt3dadd( -13.7183, -66.7752, 3.32358, 1.77 ) }
    dend_82 { pt3dadd( -13.6603, -67.7163, 3.09655, 1.77 ) }
    dend_82 { pt3dadd( -13.565, -69.0082, 2.70296, 1.77 ) }
    dend_82 { pt3dadd( -13.4996, -69.9068, 2.39387, 1.77 ) }
    dend_82 { pt3dadd( -13.4397, -70.7449, 2.08325, 1.77 ) }
    dend_82 { pt3dadd( -13.3167, -72.9666, 1.27821, 1.18 ) }
    dend_82 { pt3dadd( -13.2888, -73.6169, 1.05169, 1.62 ) }
    dend_82 { pt3dadd( -13.2768, -74.3446, 0.797836, 1.62 ) }
    dend_82 { pt3dadd( -13.2792, -75.2068, 0.524333, 1.62 ) }
    dend_82 { pt3dadd( -13.2857, -75.816, 0.378145, 1.62 ) }
    dend_82 { pt3dadd( -13.3107, -76.7711, 0.439591, 1.84 ) }
    dend_82 { pt3dadd( -13.3331, -77.0819, 0.547281, 1.84 ) }
    dend_82 { pt3dadd( -13.4509, -77.9415, 0.922737, 2.14 ) }
    dend_82 { pt3dadd( -13.6056, -78.6937, 1.28792, 2.14 ) }
    dend_82 { pt3dadd( -13.763, -79.3114, 1.59882, 2.14 ) }
    dend_82 { pt3dadd( -14.5111, -81.9511, 2.91232, 2.21 ) }
    dend_82 { pt3dadd( -14.8256, -83.0053, 3.40176, 1.92 ) }
    dend_82 { pt3dadd( -15.0575, -83.7793, 3.73455, 1.84 ) }
    dend_82 { pt3dadd( -15.2812, -84.6152, 4.05634, 1.84 ) }
    dend_82 { pt3dadd( -15.4499, -85.3758, 4.27237, 1.69 ) }
    dend_82 { pt3dadd( -15.5353, -85.8613, 4.35211, 1.69 ) }
    dend_82 { pt3dadd( -15.6507, -86.7941, 4.35763, 1.69 ) }
    dend_82 { pt3dadd( -15.6934, -87.7122, 4.36306, 1.69 ) }
    dend_82 { pt3dadd( -15.6786, -88.8439, 4.37167, 1.69 ) }
    dend_82 { pt3dadd( -15.6202, -89.7159, 4.37911, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_82 { pt3dadd( -15.6147, -89.7692, 4.37955, 1.69 ) }
    dend_82 { pt3dadd( -15.5586, -90.2897, 4.37068, 1.69 ) }
    dend_82 { pt3dadd( -15.4992, -90.8327, 4.34829, 2.14 ) }
    dend_82 { pt3dadd( -15.4939, -90.8839, 4.34548, 2.14 ) }
    dend_82 { pt3dadd( -15.438, -91.5978, 4.29247, 2.14 ) }
    dend_82 { pt3dadd( -15.3814, -92.5355, 4.20597, 2.14 ) }
    dend_82 { pt3dadd( -15.3394, -93.3372, 4.12207, 3.24 ) }
    dend_82 { pt3dadd( -15.3378, -93.3903, 4.11514, 3.24 ) }
    // Section: dend_68, id: dend_68, parent: dend_60 (entry count 8/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -30.5372, -28.833, -12.2996, 1.4 ) }
    dend_68 { pt3dadd( -30.4909, -29.8502, -11.934, 1.4 ) }
    dend_68 { pt3dadd( -30.5619, -30.621, -11.6947, 0.96 ) }
    dend_68 { pt3dadd( -30.7154, -31.3012, -11.5088, 0.96 ) }
    dend_68 { pt3dadd( -30.7396, -31.3804, -11.4888, 0.96 ) }
    dend_68 { pt3dadd( -31.0108, -32.0354, -11.343, 0.96 ) }
    dend_68 { pt3dadd( -31.275, -32.5813, -11.2312, 1.92 ) }
    dend_68 { pt3dadd( -31.8214, -33.3365, -11.1142, 1.92 ) }
    dend_68 { pt3dadd( -32.2294, -33.7472, -11.0626, 2.36 ) }
    dend_68 { pt3dadd( -32.3026, -33.8093, -11.057, 2.36 ) }
    dend_68 { pt3dadd( -32.926, -34.2707, -11.0108, 2.36 ) }
    dend_68 { pt3dadd( -32.9886, -34.3113, -11.0062, 2.36 ) }
    dend_68 { pt3dadd( -33.1167, -34.3934, -10.9942, 2.58 ) }
    dend_68 { pt3dadd( -33.9277, -34.9463, -10.8993, 1.77 ) }
    dend_68 { pt3dadd( -34.5265, -35.4168, -10.8154, 1.47 ) }
    dend_68 { pt3dadd( -35.1199, -35.9605, -10.7208, 1.11 ) }
    dend_68 { pt3dadd( -35.3813, -36.2519, -10.6464, 1.11 ) }
    dend_68 { pt3dadd( -35.4328, -36.323, -10.6264, 1.11 ) }
    dend_68 { pt3dadd( -35.7611, -36.8665, -10.4665, 1.18 ) }
    dend_68 { pt3dadd( -35.9821, -37.3208, -10.3342, 1.4 ) }
    dend_68 { pt3dadd( -36.2192, -37.8619, -10.1706, 1.62 ) }
    dend_68 { pt3dadd( -36.7485, -39.0583, -9.70405, 1.62 ) }
    dend_68 { pt3dadd( -37.1979, -40.0807, -9.29286, 1.62 ) }
    dend_68 { pt3dadd( -37.2578, -40.2134, -9.23741, 2.5 ) }
    dend_68 { pt3dadd( -37.6542, -41.0695, -8.85285, 2.95 ) }
    dend_68 { pt3dadd( -37.7806, -41.3288, -8.72885, 2.95 ) }
    dend_68 { pt3dadd( -38.5113, -42.719, -8.02439, 2.95 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 35/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -30.5372, -28.833, -12.2996, 0.81 ) }
    dend_61 { pt3dadd( -33.7866, -29.0581, -13.3442, 0.81 ) }
    dend_61 { pt3dadd( -34.9542, -29.2234, -13.7417, 0.81 ) }
    dend_61 { pt3dadd( -35.2577, -29.2852, -13.8425, 1.25 ) }
    dend_61 { pt3dadd( -37.1455, -29.7239, -14.44, 1.18 ) }
    dend_61 { pt3dadd( -38.2694, -29.9966, -14.7862, 1.03 ) }
    dend_61 { pt3dadd( -40.3381, -30.4801, -15.3609, 1.03 ) }
    dend_61 { pt3dadd( -41.056, -30.6807, -15.5135, 1.18 ) }
    dend_61 { pt3dadd( -41.9215, -30.9206, -15.7626, 1.18 ) }
    dend_61 { pt3dadd( -42.8085, -31.1196, -16.0789, 0.88 ) }
    dend_61 { pt3dadd( -42.954, -31.1397, -16.1411, 0.88 ) }
    dend_61 { pt3dadd( -44.0288, -31.1287, -16.5254, 1.84 ) }
    dend_61 { pt3dadd( -45.0583, -31.0089, -16.8981, 2.43 ) }
    dend_61 { pt3dadd( -45.9664, -30.8669, -17.2772, 2.43 ) }
    dend_61 { pt3dadd( -46.8243, -30.7347, -17.656, 1.99 ) }
    dend_61 { pt3dadd( -47.8836, -30.5818, -18.1266, 1.11 ) }
    dend_61 { pt3dadd( -49.4369, -30.3864, -18.7963, 0.59 ) }
    dend_61 { pt3dadd( -51.0768, -30.2205, -19.4735, 1.03 ) }
    dend_61 { pt3dadd( -52.31, -30.1064, -19.7625, 1.03 ) }
    dend_61 { pt3dadd( -53.2694, -30.0401, -19.9684, 1.33 ) }
    dend_61 { pt3dadd( -54.4949, -29.9814, -20.1863, 1.33 ) }
    dend_61 { pt3dadd( -55.415, -29.9619, -20.2756, 1.33 ) }
    dend_61 { pt3dadd( -56.354, -29.9609, -20.1908, 1.33 ) }
    dend_61 { pt3dadd( -60.1541, -29.8482, -18.8043, 1.03 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 59/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.252, 23.6529, -6.85448, 1.33 ) }
    dend_20 { pt3dadd( 8.3194, 24.0865, -7.0267, 1.33 ) }
    dend_20 { pt3dadd( 9.30317, 24.405, -7.20288, 1.11 ) }
    dend_20 { pt3dadd( 10.3551, 24.7212, -7.40567, 1.4 ) }
    dend_20 { pt3dadd( 11.7288, 25.1856, -7.72702, 1.77 ) }
    dend_20 { pt3dadd( 12.4281, 25.458, -7.8956, 1.77 ) }
    dend_20 { pt3dadd( 13.1978, 25.8142, -8.06922, 1.77 ) }
    dend_20 { pt3dadd( 13.8494, 26.1681, -8.28917, 2.36 ) }
    dend_20 { pt3dadd( 15.13, 26.9799, -8.80211, 1.25 ) }
    dend_20 { pt3dadd( 15.9298, 27.6077, -9.15578, 1.69 ) }
    dend_20 { pt3dadd( 16.4016, 28.0569, -9.36083, 2.06 ) }
    dend_20 { pt3dadd( 17.1157, 28.8243, -9.69771, 2.06 ) }
    dend_20 { pt3dadd( 18.6198, 30.6158, -10.4738, 1.69 ) }
    dend_20 { pt3dadd( 19.1744, 31.3391, -10.7676, 2.21 ) }
    dend_20 { pt3dadd( 19.5587, 31.875, -10.9864, 2.43 ) }
    dend_20 { pt3dadd( 20.1293, 32.6298, -11.3006, 2.43 ) }
    dend_20 { pt3dadd( 20.3757, 32.9359, -11.4483, 2.43 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 76/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.252, 23.6529, -6.85448, 1.62 ) }
    dend_1 { pt3dadd( 7.13383, 25.7889, -7.61262, 1.62 ) }
    dend_1 { pt3dadd( 6.99005, 27.4274, -8.19571, 1.84 ) }
    dend_1 { pt3dadd( 6.8141, 28.7613, -8.7217, 1.77 ) }
    dend_1 { pt3dadd( 6.70238, 29.4818, -9.00926, 1.55 ) }
    dend_1 { pt3dadd( 6.43622, 31.0579, -9.62235, 1.77 ) }
    dend_1 { pt3dadd( 6.36926, 31.4903, -9.78199, 2.21 ) }
    dend_1 { pt3dadd( 6.27434, 32.293, -10.084, 2.36 ) }
    dend_1 { pt3dadd( 6.13714, 33.5156, -10.407, 2.14 ) }
    dend_1 { pt3dadd( 6.0821, 34.3804, -10.47, 1.92 ) }
    dend_1 { pt3dadd( 6.06952, 35.116, -10.4182, 1.55 ) }
    dend_1 { pt3dadd( 6.10663, 36.1214, -10.2096, 1.33 ) }
    dend_1 { pt3dadd( 6.15391, 37.0563, -9.96079, 1.33 ) }
    dend_1 { pt3dadd( 6.28793, 39.2146, -9.37123, 1.11 ) }
    dend_1 { pt3dadd( 6.31859, 40.0347, -9.13637, 1.25 ) }
    dend_1 { pt3dadd( 6.30609, 40.8869, -8.93306, 1.77 ) }
    dend_1 { pt3dadd( 6.25522, 41.7032, -8.79524, 2.21 ) }
    dend_1 { pt3dadd( 6.24638, 41.7775, -8.7893, 2.21 ) }
    dend_1 { pt3dadd( 6.04956, 43.2496, -8.80703, 2.5 ) }
    dend_1 { pt3dadd( 5.92088, 44.5794, -8.94324, 2.5 ) }
    dend_1 { pt3dadd( 5.87102, 45.2282, -9.00336, 2.87 ) }
    dend_1 { pt3dadd( 5.77466, 46.4856, -9.03433, 2.87 ) }
    dend_1 { pt3dadd( 5.67993, 47.5134, -8.82746, 2.87 ) }
    dend_1 { pt3dadd( 5.57445, 48.4887, -8.47096, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 5.48889, 49.1912, -8.11543, 1.84 ) }
    dend_1 { pt3dadd( 5.37027, 50.1777, -7.55603, 1.69 ) }
    dend_1 { pt3dadd( 5.18028, 51.6932, -6.63906, 1.92 ) }
    dend_1 { pt3dadd( 4.76114, 54.9532, -4.57038, 1.4 ) }
    dend_1 { pt3dadd( 4.6681, 55.7242, -4.07535, 1.55 ) }
    dend_1 { pt3dadd( 4.5356, 56.7988, -3.4129, 1.84 ) }
    dend_1 { pt3dadd( 4.44108, 57.7168, -2.92333, 1.84 ) }
    dend_1 { pt3dadd( 4.39578, 58.6284, -2.56763, 1.84 ) }
    dend_1 { pt3dadd( 4.39513, 59.3658, -2.43301, 1.84 ) }
    dend_1 { pt3dadd( 4.39845, 59.9502, -2.44093, 1.84 ) }
    dend_1 { pt3dadd( 4.42085, 60.6839, -2.45402, 1.92 ) }
    dend_1 { pt3dadd( 4.46464, 61.7869, -2.49502, 1.92 ) }
    dend_1 { pt3dadd( 4.50792, 62.8306, -2.54712, 1.69 ) }
    dend_1 { pt3dadd( 4.54886, 63.5586, -2.588, 1.69 ) }
    dend_1 { pt3dadd( 4.60779, 64.4452, -2.6366, 2.14 ) }
    dend_1 { pt3dadd( 4.69938, 65.5978, -2.69571, 2.5 ) }
    dend_1 { pt3dadd( 4.80769, 66.8219, -2.75266, 2.5 ) }
    dend_1 { pt3dadd( 4.89669, 67.8794, -2.81049, 2.5 ) }
    dend_1 { pt3dadd( 5.0214, 69.262, -2.88817, 2.43 ) }
    dend_1 { pt3dadd( 5.11512, 70.2193, -2.93741, 2.36 ) }
    dend_1 { pt3dadd( 5.21523, 71.0915, -2.97133, 2.21 ) }
    dend_1 { pt3dadd( 5.28657, 71.7315, -2.99978, 2.21 ) }
    dend_1 { pt3dadd( 5.47579, 73.2199, -3.07274, 2.21 ) }
    dend_1 { pt3dadd( 5.61709, 74.2265, -3.12299, 2.21 ) }
    dend_1 { pt3dadd( 5.74756, 75.1788, -3.16867, 2.21 ) }
    dend_1 { pt3dadd( 5.86623, 76.1126, -3.20725, 2.14 ) }
    dend_1 { pt3dadd( 5.98138, 77.1612, -3.18624, 2.06 ) }
    dend_1 { pt3dadd( 6.04734, 77.8064, -3.132, 1.84 ) }
    dend_1 { pt3dadd( 6.12964, 78.7255, -2.98182, 1.4 ) }
    dend_1 { pt3dadd( 6.17641, 79.2306, -2.84581, 0.96 ) }
    dend_1 { pt3dadd( 6.26163, 79.8621, -2.61671, 0.96 ) }
    dend_1 { pt3dadd( 6.53802, 81.1364, -2.08427, 1.03 ) }
    dend_1 { pt3dadd( 6.65846, 81.5222, -1.92756, 1.4 ) }
    dend_1 { pt3dadd( 6.88542, 82.1229, -1.72197, 1.69 ) }
    dend_1 { pt3dadd( 7.45811, 83.4558, -1.31914, 1.62 ) }
    dend_1 { pt3dadd( 7.70904, 84.0255, -1.237, 1.92 ) }
    dend_1 { pt3dadd( 8.11932, 84.8957, -1.16296, 1.92 ) }
    dend_1 { pt3dadd( 8.64684, 85.9795, -1.17131, 1.92 ) }
    dend_1 { pt3dadd( 9.21574, 87.1831, -1.22554, 1.99 ) }
    dend_1 { pt3dadd( 9.53249, 87.897, -1.30536, 2.21 ) }
    dend_1 { pt3dadd( 10.2333, 89.7686, -1.72708, 1.77 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 41/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 13.1688, 37.5925, -0.277427, 0.29 ) }
    axon_1 { pt3dadd( 18.4229, 51.6422, -0.277427, 0.29 ) }
    axon_1 { pt3dadd( 23.677, 65.6919, -0.277427, 0.29 ) }
    // Section: dend_114, id: dend_114, parent: dend_112 (entry count 44/100)
    dend_114 { pt3dclear() }
    dend_114 { pt3dadd( 82.0508, -136.605, -134.0, 1.11 ) }
    dend_114 { pt3dadd( 81.614, -140.385, -136.593, 1.11 ) }
    dend_114 { pt3dadd( 81.5532, -141.047, -136.997, 0.96 ) }
    dend_114 { pt3dadd( 81.4575, -143.001, -138.036, 0.96 ) }
    dend_114 { pt3dadd( 81.4641, -144.244, -138.62, 0.96 ) }
    dend_114 { pt3dadd( 81.4901, -144.904, -138.906, 1.11 ) }
    dend_114 { pt3dadd( 81.6671, -145.894, -139.446, 1.11 ) }
    dend_114 { pt3dadd( 81.9623, -146.581, -139.824, 1.33 ) }
    dend_114 { pt3dadd( 82.5821, -147.306, -140.462, 1.33 ) }
    dend_114 { pt3dadd( 83.178, -147.765, -141.002, 1.33 ) }
    dend_114 { pt3dadd( 83.2374, -147.802, -141.053, 1.33 ) }
    dend_114 { pt3dadd( 86.2661, -149.49, -143.492, 0.81 ) }
    dend_114 { pt3dadd( 87.5551, -150.15, -144.496, 1.18 ) }
    dend_114 { pt3dadd( 88.304, -150.538, -145.119, 1.18 ) }
    dend_114 { pt3dadd( 88.9224, -150.897, -145.658, 1.62 ) }
    dend_114 { pt3dadd( 88.9942, -150.95, -145.719, 1.62 ) }
    dend_114 { pt3dadd( 89.5845, -151.542, -146.172, 2.21 ) }
    dend_114 { pt3dadd( 89.6972, -151.721, -146.242, 2.21 ) }
    dend_114 { pt3dadd( 90.5703, -153.267, -146.919, 2.06 ) }
    dend_114 { pt3dadd( 90.9766, -154.022, -147.442, 1.84 ) }
    dend_114 { pt3dadd( 91.4663, -154.977, -148.258, 1.62 ) }
    dend_114 { pt3dadd( 91.512, -155.079, -148.354, 1.62 ) }
    dend_114 { pt3dadd( 91.8931, -156.136, -149.427, 1.33 ) }
    dend_114 { pt3dadd( 92.1971, -157.272, -150.612, 1.11 ) }
    dend_114 { pt3dadd( 92.3802, -158.949, -152.419, 0.88 ) }
    dend_114 { pt3dadd( 92.3622, -159.255, -152.76, 1.11 ) }
    dend_114 { pt3dadd( 92.2146, -159.782, -153.334, 1.11 ) }
    dend_114 { pt3dadd( 92.0015, -160.243, -153.779, 0.96 ) }
    dend_114 { pt3dadd( 91.6358, -160.77, -154.128, 0.96 ) }
    dend_114 { pt3dadd( 91.1447, -161.378, -154.329, 0.74 ) }
    dend_114 { pt3dadd( 90.6176, -162.071, -154.393, 0.74 ) }
    dend_114 { pt3dadd( 90.2941, -162.56, -154.415, 0.96 ) }
    dend_114 { pt3dadd( 89.7812, -163.535, -154.333, 1.03 ) }
    dend_114 { pt3dadd( 89.2138, -165.041, -154.055, 1.18 ) }
    dend_114 { pt3dadd( 89.023, -165.84, -153.852, 1.18 ) }
    dend_114 { pt3dadd( 88.9197, -166.617, -153.623, 1.03 ) }
    dend_114 { pt3dadd( 88.8832, -167.16, -153.473, 1.11 ) }
    dend_114 { pt3dadd( 88.8122, -168.681, -153.133, 1.25 ) }
    dend_114 { pt3dadd( 88.7785, -169.332, -153.02, 1.25 ) }
    dend_114 { pt3dadd( 88.7589, -169.928, -153.103, 1.25 ) }
    dend_114 { pt3dadd( 88.8378, -170.33, -153.652, 1.25 ) }
    dend_114 { pt3dadd( 88.9766, -170.745, -154.503, 1.25 ) }
    dend_114 { pt3dadd( 89.1497, -171.165, -155.51, 1.25 ) }
    dend_114 { pt3dadd( 89.2211, -171.323, -155.927, 1.25 ) }
    dend_114 { pt3dadd( 89.7245, -172.283, -158.793, 1.69 ) }
    dend_114 { pt3dadd( 90.7168, -173.834, -164.041, 1.03 ) }
    dend_114 { pt3dadd( 90.8292, -173.971, -164.572, 1.03 ) }
    dend_114 { pt3dadd( 90.9137, -174.049, -164.924, 1.33 ) }
    dend_114 { pt3dadd( 91.0297, -174.127, -165.355, 1.33 ) }
    // Section: dend_113, id: dend_113, parent: dend_112 (entry count 93/100)
    dend_113 { pt3dclear() }
    dend_113 { pt3dadd( 82.0508, -136.605, -134.0, 0.59 ) }
    dend_113 { pt3dadd( 81.2215, -137.089, -134.47, 0.59 ) }
    dend_113 { pt3dadd( 80.2661, -137.647, -135.012, 0.52 ) }
    dend_113 { pt3dadd( 79.715, -137.969, -135.324, 0.96 ) }
    dend_113 { pt3dadd( 78.5504, -138.648, -135.984, 0.22 ) }
    // Section: dend_101, id: dend_101, parent: dend_82 (entry count 98/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( -15.3378, -93.3903, 4.11514, 0.52 ) }
    dend_101 { pt3dadd( -14.0627, -94.6374, 4.25739, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_101 { pt3dadd( -13.5015, -95.2822, 4.45754, 0.52 ) }
    dend_101 { pt3dadd( -12.977, -95.9063, 4.77688, 0.52 ) }
    dend_101 { pt3dadd( -12.1787, -96.8545, 5.36469, 0.52 ) }
    dend_101 { pt3dadd( -11.5235, -97.6112, 5.84031, 1.25 ) }
    dend_101 { pt3dadd( -11.1779, -97.9623, 6.03881, 1.47 ) }
    dend_101 { pt3dadd( -9.78895, -99.2036, 6.69694, 0.59 ) }
    dend_101 { pt3dadd( -8.93631, -99.8842, 7.01554, 0.66 ) }
    dend_101 { pt3dadd( -8.57992, -100.141, 7.11262, 0.96 ) }
    dend_101 { pt3dadd( -7.87479, -100.625, 7.21944, 1.18 ) }
    dend_101 { pt3dadd( -6.05448, -101.848, 7.28071, 0.44 ) }
    dend_101 { pt3dadd( -4.85498, -102.649, 7.22168, 0.44 ) }
    dend_101 { pt3dadd( -4.10343, -103.143, 7.15335, 0.44 ) }
    dend_101 { pt3dadd( -3.69648, -103.442, 7.12569, 0.44 ) }
    dend_101 { pt3dadd( -3.36935, -103.722, 7.15849, 0.44 ) }
    dend_101 { pt3dadd( -2.82155, -104.328, 7.46159, 1.11 ) }
    dend_101 { pt3dadd( -2.7137, -104.51, 7.61664, 1.11 ) }
    dend_101 { pt3dadd( -2.1671, -105.572, 8.81841, 1.11 ) }
    dend_101 { pt3dadd( -2.09125, -105.704, 8.9881, 1.18 ) }
    dend_101 { pt3dadd( -1.89976, -105.984, 9.33306, 1.18 ) }
    dend_101 { pt3dadd( -1.55333, -106.405, 9.77581, 0.52 ) }
    dend_101 { pt3dadd( -1.07266, -106.944, 10.1846, 0.52 ) }
    dend_101 { pt3dadd( -0.454738, -107.603, 10.4875, 0.81 ) }
    dend_101 { pt3dadd( -0.206806, -107.869, 10.536, 0.59 ) }
    dend_101 { pt3dadd( 0.473905, -108.61, 10.6154, 0.88 ) }
    dend_101 { pt3dadd( 0.979495, -109.182, 10.6372, 0.66 ) }
    dend_101 { pt3dadd( 1.51135, -109.796, 10.6228, 0.66 ) }
    dend_101 { pt3dadd( 2.07631, -110.458, 10.6371, 1.47 ) }
    dend_101 { pt3dadd( 2.74593, -111.236, 10.7074, 1.25 ) }
    dend_101 { pt3dadd( 3.20556, -111.761, 10.8263, 1.18 ) }
    dend_101 { pt3dadd( 3.45111, -112.011, 10.9265, 1.11 ) }
    dend_101 { pt3dadd( 3.7605, -112.295, 11.014, 0.88 ) }
    dend_101 { pt3dadd( 4.71609, -113.161, 11.2975, 0.74 ) }
    dend_101 { pt3dadd( 5.61259, -114.016, 11.6889, 0.74 ) }
    dend_101 { pt3dadd( 6.06688, -114.457, 11.9121, 0.74 ) }
    dend_101 { pt3dadd( 7.25316, -115.729, 12.5471, 0.66 ) }
    dend_101 { pt3dadd( 8.79586, -117.506, 13.415, 0.66 ) }
    dend_101 { pt3dadd( 9.91757, -118.909, 13.9887, 0.66 ) }
    dend_101 { pt3dadd( 11.0446, -120.465, 14.4876, 0.52 ) }
    dend_101 { pt3dadd( 11.0741, -120.514, 14.4988, 0.52 ) }
    dend_101 { pt3dadd( 11.7142, -121.923, 14.6498, 0.52 ) }
    dend_101 { pt3dadd( 11.7291, -121.978, 14.6475, 0.52 ) }
    dend_101 { pt3dadd( 11.9636, -123.225, 14.4471, 1.03 ) }
    dend_101 { pt3dadd( 12.0328, -123.565, 14.3349, 1.25 ) }
    dend_101 { pt3dadd( 12.3793, -125.041, 13.7664, 0.88 ) }
    dend_101 { pt3dadd( 12.6444, -126.091, 13.3967, 0.66 ) }
    dend_101 { pt3dadd( 13.1092, -127.776, 12.974, 0.66 ) }
    dend_101 { pt3dadd( 13.2213, -128.197, 12.9171, 1.77 ) }
    dend_101 { pt3dadd( 13.4497, -128.823, 12.9257, 2.21 ) }
    dend_101 { pt3dadd( 13.7117, -129.374, 12.9887, 2.21 ) }
    dend_101 { pt3dadd( 13.8797, -129.641, 13.0587, 1.33 ) }
    dend_101 { pt3dadd( 14.9874, -130.969, 13.5193, 0.66 ) }
    dend_101 { pt3dadd( 15.5528, -131.478, 13.7985, 0.66 ) }
    dend_101 { pt3dadd( 17.1606, -132.675, 14.6745, 0.59 ) }
    dend_101 { pt3dadd( 17.4551, -132.844, 14.8332, 1.33 ) }
    dend_101 { pt3dadd( 17.9173, -133.085, 15.0904, 1.55 ) }
    dend_101 { pt3dadd( 18.0463, -133.15, 15.1632, 1.55 ) }
    dend_101 { pt3dadd( 19.112, -133.688, 15.7993, 0.66 ) }
    dend_101 { pt3dadd( 19.8122, -134.136, 16.2669, 0.66 ) }
    dend_101 { pt3dadd( 20.5355, -134.833, 16.8452, 0.66 ) }
    dend_101 { pt3dadd( 21.3744, -135.884, 17.5581, 0.52 ) }
    dend_101 { pt3dadd( 21.5731, -136.218, 17.735, 1.33 ) }
    dend_101 { pt3dadd( 21.9454, -136.98, 18.0453, 1.33 ) }
    dend_101 { pt3dadd( 22.2325, -137.662, 18.2483, 1.03 ) }
    dend_101 { pt3dadd( 22.4092, -138.117, 18.3628, 0.52 ) }
    dend_101 { pt3dadd( 22.7457, -138.955, 18.5421, 0.52 ) }
    dend_101 { pt3dadd( 23.1134, -139.723, 18.6813, 0.52 ) }
    dend_101 { pt3dadd( 23.7034, -140.781, 18.8662, 0.59 ) }
    dend_101 { pt3dadd( 24.2923, -141.703, 19.0156, 0.59 ) }
    dend_101 { pt3dadd( 24.57, -142.083, 19.0843, 1.18 ) }
    dend_101 { pt3dadd( 25.0837, -142.726, 19.2081, 1.47 ) }
    dend_101 { pt3dadd( 25.4648, -143.196, 19.334, 1.92 ) }
    dend_101 { pt3dadd( 25.83, -143.706, 19.5919, 1.55 ) }
    dend_101 { pt3dadd( 26.0577, -144.114, 19.8789, 1.18 ) }
    dend_101 { pt3dadd( 26.1733, -144.381, 20.1013, 0.81 ) }
    dend_101 { pt3dadd( 26.731, -145.858, 21.2251, 0.59 ) }
    dend_101 { pt3dadd( 27.034, -146.798, 21.816, 1.11 ) }
    dend_101 { pt3dadd( 27.7126, -148.929, 22.8366, 0.52 ) }
    dend_101 { pt3dadd( 27.8821, -149.48, 23.0356, 0.52 ) }
    dend_101 { pt3dadd( 28.02, -149.938, 23.211, 1.03 ) }
    dend_101 { pt3dadd( 28.7305, -151.958, 23.8393, 0.44 ) }
    dend_101 { pt3dadd( 29.2838, -153.248, 24.119, 0.52 ) }
    dend_101 { pt3dadd( 29.9296, -154.583, 24.2638, 0.52 ) }
    dend_101 { pt3dadd( 30.1402, -154.977, 24.2684, 1.4 ) }
    dend_101 { pt3dadd( 31.3326, -157.095, 24.4325, 1.84 ) }
    dend_101 { pt3dadd( 32.0485, -158.33, 24.6943, 2.73 ) }
    dend_101 { pt3dadd( 32.5408, -159.165, 25.1305, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 86/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -15.3378, -93.3903, 4.11514, 1.62 ) }
    dend_83 { pt3dadd( -17.2302, -95.6972, 3.83058, 1.62 ) }
    dend_83 { pt3dadd( -18.1335, -96.9929, 3.65591, 1.55 ) }
    dend_83 { pt3dadd( -18.9396, -98.3951, 3.34288, 1.47 ) }
    dend_83 { pt3dadd( -19.3984, -99.3633, 3.00725, 1.4 ) }
    dend_83 { pt3dadd( -19.4252, -99.427, 2.98069, 1.4 ) }
    dend_83 { pt3dadd( -19.852, -100.558, 2.35586, 1.33 ) }
    dend_83 { pt3dadd( -20.0097, -101.339, 1.78834, 1.33 ) }
    dend_83 { pt3dadd( -20.2698, -102.647, 0.594205, 1.33 ) }
    dend_83 { pt3dadd( -20.5828, -103.744, -0.548052, 1.25 ) }
    dend_83 { pt3dadd( -20.6054, -103.797, -0.608261, 1.25 ) }
    dend_83 { pt3dadd( -21.4018, -105.217, -2.29363, 0.96 ) }
    dend_83 { pt3dadd( -21.5746, -105.421, -2.54709, 1.33 ) }
    dend_83 { pt3dadd( -22.6089, -106.265, -3.52585, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_83 { pt3dadd( -23.571, -106.857, -4.02545, 1.25 ) }
    dend_83 { pt3dadd( -24.2192, -107.211, -4.20803, 1.4 ) }
    dend_83 { pt3dadd( -24.3449, -107.28, -4.22695, 1.4 ) }
    dend_83 { pt3dadd( -25.5621, -107.954, -4.24224, 1.47 ) }
    dend_83 { pt3dadd( -26.5199, -108.563, -4.21726, 1.62 ) }
    dend_83 { pt3dadd( -27.557, -109.364, -4.13594, 1.4 ) }
    dend_83 { pt3dadd( -28.2805, -110.069, -4.06305, 1.33 ) }
    dend_83 { pt3dadd( -28.8603, -110.756, -3.98361, 1.18 ) }
    dend_83 { pt3dadd( -29.3517, -111.484, -3.92245, 1.18 ) }
    dend_83 { pt3dadd( -29.8062, -112.487, -3.8845, 1.18 ) }
    dend_83 { pt3dadd( -30.0507, -113.323, -3.89112, 1.4 ) }
    dend_83 { pt3dadd( -30.1808, -114.214, -3.98438, 1.47 ) }
    dend_83 { pt3dadd( -30.2049, -114.854, -4.09369, 1.47 ) }
    dend_83 { pt3dadd( -30.1735, -115.792, -4.29855, 1.62 ) }
    dend_83 { pt3dadd( -30.0272, -117.141, -4.64655, 1.62 ) }
    dend_83 { pt3dadd( -29.8696, -118.089, -4.92426, 1.55 ) }
    dend_83 { pt3dadd( -29.4742, -119.873, -5.48319, 1.47 ) }
    dend_83 { pt3dadd( -29.2164, -120.781, -5.72875, 1.25 ) }
    dend_83 { pt3dadd( -29.1792, -120.887, -5.75225, 1.25 ) }
    dend_83 { pt3dadd( -28.7485, -121.832, -5.88554, 0.88 ) }
    dend_83 { pt3dadd( -28.7117, -121.897, -5.88745, 0.88 ) }
    dend_83 { pt3dadd( -28.0619, -122.799, -5.4829, 0.88 ) }
    dend_83 { pt3dadd( -27.2931, -123.884, -4.49191, 1.11 ) }
    dend_83 { pt3dadd( -27.2654, -123.936, -4.42193, 1.11 ) }
    dend_83 { pt3dadd( -27.1734, -124.295, -3.86686, 1.11 ) }
    dend_83 { pt3dadd( -27.1641, -124.543, -3.45428, 1.11 ) }
    dend_83 { pt3dadd( -27.3643, -126.007, -1.05429, 1.33 ) }
    dend_83 { pt3dadd( -27.5232, -126.521, -0.242105, 1.18 ) }
    dend_83 { pt3dadd( -28.1957, -128.085, 1.98309, 1.18 ) }
    dend_83 { pt3dadd( -28.6663, -129.013, 3.20288, 1.11 ) }
    dend_83 { pt3dadd( -28.8231, -129.28, 3.50893, 1.11 ) }
    dend_83 { pt3dadd( -29.0913, -129.719, 3.90364, 1.33 ) }
    dend_83 { pt3dadd( -29.4316, -130.256, 4.14315, 1.33 ) }
    dend_83 { pt3dadd( -29.4725, -130.33, 4.15464, 1.33 ) }
    dend_83 { pt3dadd( -29.8545, -131.19, 4.00769, 1.33 ) }
    dend_83 { pt3dadd( -30.1206, -132.143, 3.77935, 1.33 ) }
    dend_83 { pt3dadd( -30.2158, -132.664, 3.65484, 1.33 ) }
    dend_83 { pt3dadd( -30.3483, -134.029, 3.34841, 1.33 ) }
    dend_83 { pt3dadd( -30.3623, -134.442, 3.26273, 1.33 ) }
    dend_83 { pt3dadd( -30.3634, -135.283, 3.07612, 1.33 ) }
    dend_83 { pt3dadd( -30.3297, -136.632, 2.73704, 1.33 ) }
    dend_83 { pt3dadd( -30.248, -138.356, 2.28601, 1.33 ) }
    dend_83 { pt3dadd( -30.1534, -139.752, 1.93458, 1.33 ) }
    dend_83 { pt3dadd( -30.0473, -140.997, 1.59204, 1.33 ) }
    dend_83 { pt3dadd( -29.9202, -142.298, 1.16344, 1.33 ) }
    dend_83 { pt3dadd( -29.8612, -142.851, 0.957661, 1.55 ) }
    dend_83 { pt3dadd( -29.8105, -143.528, 0.690838, 1.55 ) }
    dend_83 { pt3dadd( -29.7969, -144.199, 0.425647, 1.62 ) }
    dend_83 { pt3dadd( -29.9478, -146.046, -0.270633, 1.84 ) }
    dend_83 { pt3dadd( -30.1369, -147.108, -0.472834, 1.77 ) }
    dend_83 { pt3dadd( -30.4733, -148.319, -0.467315, 1.62 ) }
    dend_83 { pt3dadd( -30.895, -149.45, -0.312617, 1.47 ) }
    dend_83 { pt3dadd( -31.3274, -150.365, -0.0471449, 1.77 ) }
    dend_83 { pt3dadd( -32.0648, -151.686, 0.590075, 2.06 ) }
    dend_83 { pt3dadd( -33.6228, -154.161, 2.25417, 1.92 ) }
    dend_83 { pt3dadd( -34.2696, -155.107, 2.97925, 1.92 ) }
    dend_83 { pt3dadd( -34.701, -155.711, 3.46344, 1.92 ) }
    dend_83 { pt3dadd( -35.4437, -156.793, 4.32478, 1.47 ) }
    dend_83 { pt3dadd( -36.0914, -157.84, 5.08626, 1.84 ) }
    dend_83 { pt3dadd( -36.125, -157.901, 5.12449, 1.84 ) }
    dend_83 { pt3dadd( -36.7059, -159.088, 5.52601, 1.18 ) }
    dend_83 { pt3dadd( -37.13, -160.117, 5.78427, 0.96 ) }
    dend_83 { pt3dadd( -37.2921, -160.608, 5.84573, 1.11 ) }
    dend_83 { pt3dadd( -37.5218, -161.517, 5.82241, 1.11 ) }
    dend_83 { pt3dadd( -37.6134, -161.969, 5.71666, 1.11 ) }
    dend_83 { pt3dadd( -37.7547, -162.783, 5.44877, 1.18 ) }
    dend_83 { pt3dadd( -37.7627, -162.846, 5.41984, 1.18 ) }
    dend_83 { pt3dadd( -37.8343, -163.463, 5.09947, 1.25 ) }
    dend_83 { pt3dadd( -37.9475, -164.277, 4.63454, 1.25 ) }
    dend_83 { pt3dadd( -38.2518, -166.255, 3.37951, 1.47 ) }
    dend_83 { pt3dadd( -38.2772, -166.399, 3.28403, 1.47 ) }
    dend_83 { pt3dadd( -38.5866, -167.542, 2.31593, 1.69 ) }
    dend_83 { pt3dadd( -38.8433, -168.338, 1.6268, 1.69 ) }
    dend_83 { pt3dadd( -38.9477, -168.613, 1.4067, 1.69 ) }
    dend_83 { pt3dadd( -39.2782, -169.409, 0.815036, 2.06 ) }
    dend_83 { pt3dadd( -39.3408, -169.538, 0.713692, 2.06 ) }
    dend_83 { pt3dadd( -40.914, -172.322, -1.25559, 1.92 ) }
    dend_83 { pt3dadd( -41.6981, -173.617, -1.92363, 1.92 ) }
    dend_83 { pt3dadd( -42.6127, -175.126, -2.33582, 1.47 ) }
    dend_83 { pt3dadd( -42.6642, -175.212, -2.33951, 1.47 ) }
    dend_83 { pt3dadd( -44.444, -178.313, -1.46492, 1.25 ) }
    dend_83 { pt3dadd( -45.584, -180.802, 0.336406, 1.25 ) }
    dend_83 { pt3dadd( -46.4643, -183.454, 3.20023, 1.25 ) }
    dend_83 { pt3dadd( -46.7129, -184.735, 4.94291, 1.25 ) }
    dend_83 { pt3dadd( -46.7171, -184.806, 5.0508, 1.25 ) }
    dend_83 { pt3dadd( -46.6734, -185.758, 6.53273, 1.55 ) }
    dend_83 { pt3dadd( -46.398, -187.477, 9.18088, 1.55 ) }
    dend_83 { pt3dadd( -46.2742, -187.995, 9.81807, 1.25 ) }
    dend_83 { pt3dadd( -45.9158, -190.085, 11.4467, 0.81 ) }
    dend_83 { pt3dadd( -45.846, -190.795, 11.7994, 0.88 ) }
    dend_83 { pt3dadd( -45.8161, -191.675, 12.0646, 0.88 ) }
    dend_83 { pt3dadd( -45.8995, -193.631, 12.1235, 0.88 ) }
    dend_83 { pt3dadd( -46.1406, -195.567, 11.7858, 0.96 ) }
    dend_83 { pt3dadd( -46.3366, -196.825, 11.4704, 1.33 ) }
    dend_83 { pt3dadd( -46.5803, -198.091, 11.0102, 1.33 ) }
    dend_83 { pt3dadd( -46.8117, -199.152, 10.5843, 1.47 ) }
    dend_83 { pt3dadd( -47.3216, -201.252, 9.62863, 1.92 ) }
    dend_83 { pt3dadd( -47.5872, -202.211, 9.09895, 1.92 ) }
    // Section: dend_78, id: dend_78, parent: dend_68 (entry count 98/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -38.5113, -42.719, -8.02439, 0.81 ) }
    dend_78 { pt3dadd( -39.7642, -45.5203, -8.10348, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_78 { pt3dadd( -40.3963, -46.6587, -8.14811, 1.4 ) }
    dend_78 { pt3dadd( -40.9475, -47.5735, -8.18161, 1.4 ) }
    dend_78 { pt3dadd( -41.9674, -49.1969, -8.22709, 0.66 ) }
    dend_78 { pt3dadd( -42.5524, -50.1324, -8.24179, 0.66 ) }
    dend_78 { pt3dadd( -43.0664, -50.9615, -8.24811, 0.66 ) }
    dend_78 { pt3dadd( -43.7936, -51.9529, -8.36378, 1.69 ) }
    dend_78 { pt3dadd( -43.8627, -52.0464, -8.37459, 1.69 ) }
    dend_78 { pt3dadd( -44.3517, -52.7874, -8.42789, 2.43 ) }
    dend_78 { pt3dadd( -44.6618, -53.3876, -8.4118, 1.84 ) }
    dend_78 { pt3dadd( -44.6908, -53.4644, -8.41228, 1.84 ) }
    dend_78 { pt3dadd( -44.9109, -54.2455, -8.43836, 1.47 ) }
    dend_78 { pt3dadd( -45.314, -55.6322, -8.52526, 0.66 ) }
    dend_78 { pt3dadd( -45.3485, -55.7343, -8.53206, 0.66 ) }
    dend_78 { pt3dadd( -45.6932, -56.579, -8.57802, 0.88 ) }
    dend_78 { pt3dadd( -45.7434, -56.6766, -8.58118, 0.88 ) }
    dend_78 { pt3dadd( -46.3744, -57.788, -8.67443, 1.18 ) }
    dend_78 { pt3dadd( -46.9515, -58.7283, -8.77359, 1.69 ) }
    dend_78 { pt3dadd( -47.0148, -58.8314, -8.78327, 1.69 ) }
    dend_78 { pt3dadd( -47.7303, -60.0869, -8.94639, 2.06 ) }
    dend_78 { pt3dadd( -48.3627, -61.2497, -9.13727, 2.06 ) }
    dend_78 { pt3dadd( -49.1599, -62.9591, -9.32678, 1.25 ) }
    dend_78 { pt3dadd( -49.4185, -63.7253, -9.36016, 1.11 ) }
    dend_78 { pt3dadd( -49.5973, -64.8392, -9.25943, 1.11 ) }
    dend_78 { pt3dadd( -49.6242, -65.9729, -9.02391, 1.55 ) }
    dend_78 { pt3dadd( -49.6167, -66.0767, -8.9912, 1.55 ) }
    dend_78 { pt3dadd( -49.4135, -68.012, -8.23717, 1.99 ) }
    dend_78 { pt3dadd( -49.34, -69.3242, -7.58138, 1.99 ) }
    dend_78 { pt3dadd( -49.434, -71.0694, -6.66378, 0.59 ) }
    dend_78 { pt3dadd( -49.6556, -71.9492, -6.16486, 0.59 ) }
    dend_78 { pt3dadd( -50.0768, -72.7736, -5.6631, 1.11 ) }
    dend_78 { pt3dadd( -50.6782, -73.6309, -5.15023, 1.4 ) }
    dend_78 { pt3dadd( -51.7994, -74.845, -4.48704, 1.4 ) }
    dend_78 { pt3dadd( -52.801, -75.7725, -4.01472, 1.25 ) }
    dend_78 { pt3dadd( -54.2779, -77.045, -3.40749, 1.25 ) }
    dend_78 { pt3dadd( -56.0108, -78.5346, -2.7021, 1.25 ) }
    dend_78 { pt3dadd( -56.0635, -78.5829, -2.6804, 1.25 ) }
    dend_78 { pt3dadd( -57.2746, -79.7742, -2.16381, 1.84 ) }
    dend_78 { pt3dadd( -58.2495, -80.8533, -1.75881, 1.84 ) }
    dend_78 { pt3dadd( -59.2508, -82.1284, -1.20704, 1.33 ) }
    dend_78 { pt3dadd( -59.6416, -82.6969, -0.952454, 1.03 ) }
    dend_78 { pt3dadd( -60.2311, -83.6217, -0.515078, 1.03 ) }
    dend_78 { pt3dadd( -60.724, -84.3743, -0.133027, 1.03 ) }
    dend_78 { pt3dadd( -61.2046, -85.0692, 0.248595, 1.25 ) }
    dend_78 { pt3dadd( -62.6811, -86.9938, 1.31384, 0.81 ) }
    dend_78 { pt3dadd( -63.2954, -87.6678, 1.65828, 0.81 ) }
    dend_78 { pt3dadd( -64.1057, -88.4054, 1.99648, 1.69 ) }
    dend_78 { pt3dadd( -64.9767, -89.0377, 2.238, 2.14 ) }
    dend_78 { pt3dadd( -65.8452, -89.5143, 2.35055, 2.14 ) }
    dend_78 { pt3dadd( -66.7515, -89.898, 2.41635, 1.55 ) }
    dend_78 { pt3dadd( -67.7942, -90.2767, 2.4989, 0.74 ) }
    dend_78 { pt3dadd( -68.7075, -90.6595, 2.67055, 0.66 ) }
    dend_78 { pt3dadd( -69.1478, -90.8903, 2.91435, 0.66 ) }
    dend_78 { pt3dadd( -69.827, -91.3551, 3.55348, 0.66 ) }
    dend_78 { pt3dadd( -70.6699, -92.0226, 4.56879, 0.96 ) }
    dend_78 { pt3dadd( -71.7883, -92.9719, 6.15789, 2.06 ) }
    dend_78 { pt3dadd( -72.5539, -93.6605, 7.33119, 2.43 ) }
    dend_78 { pt3dadd( -74.397, -95.4582, 10.1785, 1.11 ) }
    dend_78 { pt3dadd( -75.4625, -96.5046, 11.7607, 0.81 ) }
    dend_78 { pt3dadd( -75.5402, -96.5752, 11.8688, 0.81 ) }
    dend_78 { pt3dadd( -76.633, -97.3566, 13.2382, 0.81 ) }
    dend_78 { pt3dadd( -77.2161, -97.6647, 13.8879, 1.18 ) }
    dend_78 { pt3dadd( -78.17, -98.0449, 14.8428, 0.81 ) }
    dend_78 { pt3dadd( -80.14, -98.6667, 16.2742, 0.52 ) }
    dend_78 { pt3dadd( -81.4422, -99.0658, 17.0741, 0.52 ) }
    dend_78 { pt3dadd( -82.9262, -99.8597, 17.8393, 0.52 ) }
    dend_78 { pt3dadd( -83.8191, -100.532, 18.2088, 0.52 ) }
    dend_78 { pt3dadd( -84.647, -101.318, 18.5286, 0.52 ) }
    dend_78 { pt3dadd( -85.0679, -101.795, 18.6915, 1.62 ) }
    dend_78 { pt3dadd( -85.7957, -102.829, 18.854, 2.14 ) }
    dend_78 { pt3dadd( -87.5343, -105.64, 19.0951, 2.14 ) }
    dend_78 { pt3dadd( -87.9344, -106.252, 19.308, 1.69 ) }
    dend_78 { pt3dadd( -88.2857, -106.77, 19.6724, 1.47 ) }
    dend_78 { pt3dadd( -88.8385, -107.551, 20.4998, 0.96 ) }
    dend_78 { pt3dadd( -89.618, -108.657, 22.0784, 0.96 ) }
    dend_78 { pt3dadd( -90.0572, -109.253, 23.2537, 0.96 ) }
    dend_78 { pt3dadd( -92.0757, -111.948, 30.8825, 1.33 ) }
    dend_78 { pt3dadd( -92.3191, -112.282, 31.9178, 2.14 ) }
    dend_78 { pt3dadd( -92.3549, -112.33, 32.0839, 2.14 ) }
    dend_78 { pt3dadd( -92.4688, -112.474, 32.6366, 2.14 ) }
    dend_78 { pt3dadd( -92.4845, -112.491, 32.7135, 2.14 ) }
    dend_78 { pt3dadd( -93.2506, -113.202, 35.8465, 0.52 ) }
    dend_78 { pt3dadd( -93.6407, -113.54, 36.4373, 0.52 ) }
    dend_78 { pt3dadd( -93.7833, -113.585, 36.553, 0.52 ) }
    dend_78 { pt3dadd( -94.4046, -113.687, 36.8981, 1.47 ) }
    dend_78 { pt3dadd( -94.5816, -113.701, 36.9658, 1.47 ) }
    dend_78 { pt3dadd( -96.0755, -113.779, 37.346, 2.36 ) }
    dend_78 { pt3dadd( -96.8175, -113.798, 37.4464, 2.36 ) }
    dend_78 { pt3dadd( -99.2191, -113.944, 38.0516, 1.25 ) }
    dend_78 { pt3dadd( -100.048, -114.055, 38.3538, 0.81 ) }
    dend_78 { pt3dadd( -100.925, -114.258, 38.8037, 0.81 ) }
    dend_78 { pt3dadd( -101.667, -114.558, 39.4106, 0.81 ) }
    dend_78 { pt3dadd( -101.698, -114.641, 39.5709, 0.81 ) }
    dend_78 { pt3dadd( -100.877, -115.956, 41.7758, 0.44 ) }
    dend_78 { pt3dadd( -100.513, -116.425, 43.008, 0.37 ) }
    dend_78 { pt3dadd( -100.3, -116.722, 43.9554, 0.37 ) }
    dend_78 { pt3dadd( -99.9778, -117.235, 45.8089, 0.66 ) }
    dend_78 { pt3dadd( -99.8346, -117.58, 47.0622, 0.66 ) }
    dend_78 { pt3dadd( -99.8321, -118.057, 48.6779, 0.52 ) }
    dend_78 { pt3dadd( -100.92, -119.987, 54.2287, 1.77 ) }
    dend_78 { pt3dadd( -101.159, -120.242, 54.8075, 2.8 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_78 { pt3dadd( -101.461, -120.531, 55.3167, 2.8 ) }
    dend_78 { pt3dadd( -102.777, -121.794, 56.9416, 0.44 ) }
    dend_78 { pt3dadd( -103.204, -122.218, 57.385, 0.66 ) }
    dend_78 { pt3dadd( -103.682, -122.798, 57.8732, 0.66 ) }
    dend_78 { pt3dadd( -104.685, -124.471, 58.5214, 0.66 ) }
    dend_78 { pt3dadd( -104.875, -124.789, 58.6963, 1.11 ) }
    dend_78 { pt3dadd( -105.251, -125.353, 59.1261, 1.11 ) }
    dend_78 { pt3dadd( -105.296, -125.39, 59.1867, 1.11 ) }
    dend_78 { pt3dadd( -106.49, -126.005, 60.3163, 0.44 ) }
    dend_78 { pt3dadd( -107.301, -126.309, 60.7764, 0.44 ) }
    dend_78 { pt3dadd( -107.934, -126.513, 60.9588, 1.4 ) }
    dend_78 { pt3dadd( -108.809, -126.898, 61.0894, 1.4 ) }
    dend_78 { pt3dadd( -111.256, -128.288, 61.8257, 0.81 ) }
    dend_78 { pt3dadd( -113.264, -130.114, 62.85, 0.88 ) }
    dend_78 { pt3dadd( -114.043, -131.087, 63.2092, 0.88 ) }
    dend_78 { pt3dadd( -114.077, -131.161, 63.2453, 0.88 ) }
    dend_78 { pt3dadd( -114.575, -133.052, 64.2908, 0.59 ) }
    dend_78 { pt3dadd( -114.833, -136.215, 66.0572, 1.03 ) }
    dend_78 { pt3dadd( -114.763, -136.773, 66.3979, 1.33 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 19/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -38.5113, -42.719, -8.02439, 0.52 ) }
    dend_69 { pt3dadd( -42.2531, -42.3928, -7.38392, 0.52 ) }
    dend_69 { pt3dadd( -43.4021, -42.3416, -7.22182, 0.66 ) }
    dend_69 { pt3dadd( -44.0291, -42.3298, -7.15231, 0.66 ) }
    dend_69 { pt3dadd( -45.2785, -42.3547, -7.04113, 0.66 ) }
    dend_69 { pt3dadd( -46.1407, -42.4205, -6.98148, 0.96 ) }
    dend_69 { pt3dadd( -47.2334, -42.5565, -6.96432, 1.33 ) }
    dend_69 { pt3dadd( -47.9634, -42.7314, -7.05662, 0.96 ) }
    dend_69 { pt3dadd( -48.8436, -43.0138, -7.17802, 0.44 ) }
    dend_69 { pt3dadd( -49.4772, -43.234, -7.27293, 0.52 ) }
    dend_69 { pt3dadd( -50.661, -43.6253, -7.46677, 0.52 ) }
    dend_69 { pt3dadd( -52.0185, -43.9997, -7.62237, 0.81 ) }
    dend_69 { pt3dadd( -52.9329, -44.1899, -7.68362, 0.96 ) }
    dend_69 { pt3dadd( -53.982, -44.3583, -7.69151, 0.74 ) }
    dend_69 { pt3dadd( -55.0456, -44.4767, -7.61515, 0.74 ) }
    dend_69 { pt3dadd( -56.2326, -44.5474, -7.37943, 0.37 ) }
    dend_69 { pt3dadd( -58.1486, -44.5809, -6.83688, 0.59 ) }
    dend_69 { pt3dadd( -59.4395, -44.6117, -6.52477, 1.18 ) }
    dend_69 { pt3dadd( -60.8636, -44.6561, -6.31296, 1.11 ) }
    dend_69 { pt3dadd( -62.3223, -44.7206, -6.21593, 0.59 ) }
    dend_69 { pt3dadd( -64.9988, -44.8478, -6.26443, 0.59 ) }
    dend_69 { pt3dadd( -66.0968, -44.8967, -6.33024, 0.59 ) }
    dend_69 { pt3dadd( -69.8766, -44.8986, -6.84519, 1.11 ) }
    dend_69 { pt3dadd( -71.4128, -44.9435, -7.08962, 1.77 ) }
    dend_69 { pt3dadd( -71.5376, -44.9493, -7.11332, 1.77 ) }
    dend_69 { pt3dadd( -72.2661, -45.0213, -7.19417, 1.4 ) }
    dend_69 { pt3dadd( -74.7325, -45.2839, -6.8899, 0.96 ) }
    dend_69 { pt3dadd( -76.0972, -45.4577, -6.36944, 0.66 ) }
    dend_69 { pt3dadd( -78.3494, -45.7611, -5.20194, 0.52 ) }
    dend_69 { pt3dadd( -78.7175, -45.8217, -5.01337, 1.4 ) }
    dend_69 { pt3dadd( -80.893, -46.2496, -4.0494, 0.59 ) }
    dend_69 { pt3dadd( -82.8679, -46.6873, -3.32972, 0.37 ) }
    dend_69 { pt3dadd( -83.686, -46.8945, -3.11551, 1.25 ) }
    dend_69 { pt3dadd( -85.0368, -47.2397, -2.82945, 2.14 ) }
    dend_69 { pt3dadd( -86.5497, -47.5442, -2.624, 1.84 ) }
    dend_69 { pt3dadd( -88.1645, -47.8522, -2.55507, 1.18 ) }
    dend_69 { pt3dadd( -89.454, -48.0694, -2.65273, 0.88 ) }
    dend_69 { pt3dadd( -90.5661, -48.2536, -2.811, 0.59 ) }
    dend_69 { pt3dadd( -91.2172, -48.3278, -2.90942, 0.74 ) }
    dend_69 { pt3dadd( -91.8704, -48.3852, -3.01097, 0.74 ) }
    dend_69 { pt3dadd( -92.6387, -48.4331, -3.12782, 0.81 ) }
    dend_69 { pt3dadd( -93.3303, -48.4713, -3.22604, 0.81 ) }
    dend_69 { pt3dadd( -94.2534, -48.5907, -3.33198, 0.81 ) }
    dend_69 { pt3dadd( -95.069, -48.7288, -3.43068, 1.03 ) }
    dend_69 { pt3dadd( -95.7782, -48.8911, -3.53344, 0.88 ) }
    dend_69 { pt3dadd( -96.5915, -49.0963, -3.66361, 0.59 ) }
    dend_69 { pt3dadd( -97.6166, -49.3458, -3.8375, 0.52 ) }
    dend_69 { pt3dadd( -98.9024, -49.6223, -4.06727, 0.52 ) }
    dend_69 { pt3dadd( -100.776, -49.9277, -4.41531, 0.59 ) }
    dend_69 { pt3dadd( -101.693, -50.0013, -4.54964, 0.88 ) }
    dend_69 { pt3dadd( -102.697, -49.9735, -4.6609, 0.66 ) }
    dend_69 { pt3dadd( -103.905, -49.843, -4.78325, 0.66 ) }
    dend_69 { pt3dadd( -104.962, -49.6583, -4.73382, 1.47 ) }
    dend_69 { pt3dadd( -106.029, -49.4127, -4.54245, 1.25 ) }
    dend_69 { pt3dadd( -107.791, -49.0167, -3.98106, 0.74 ) }
    dend_69 { pt3dadd( -109.596, -48.6434, -3.26128, 0.59 ) }
    dend_69 { pt3dadd( -110.125, -48.5486, -3.02168, 0.96 ) }
    dend_69 { pt3dadd( -113.806, -48.0368, -1.239, 0.81 ) }
    dend_69 { pt3dadd( -113.917, -48.0277, -1.18687, 0.81 ) }
    dend_69 { pt3dadd( -115.216, -48.03, -0.671513, 1.03 ) }
    dend_69 { pt3dadd( -116.017, -48.0831, -0.446941, 1.33 ) }
    dend_69 { pt3dadd( -116.885, -48.1553, -0.305569, 1.11 ) }
    dend_69 { pt3dadd( -117.837, -48.233, -0.266761, 0.88 ) }
    dend_69 { pt3dadd( -118.86, -48.343, -0.369613, 0.37 ) }
    dend_69 { pt3dadd( -120.31, -48.5044, -0.506024, 0.37 ) }
    dend_69 { pt3dadd( -121.366, -48.636, -0.53038, 0.81 ) }
    dend_69 { pt3dadd( -122.814, -48.8682, -0.528248, 0.81 ) }
    dend_69 { pt3dadd( -123.931, -49.1114, -0.427658, 1.18 ) }
    dend_69 { pt3dadd( -125.307, -49.5257, -0.200917, 1.62 ) }
    dend_69 { pt3dadd( -126.292, -49.9206, 0.104307, 1.62 ) }
    dend_69 { pt3dadd( -128.056, -50.7133, 0.773945, 1.25 ) }
    dend_69 { pt3dadd( -129.285, -51.2758, 1.26434, 0.44 ) }
    dend_69 { pt3dadd( -131.54, -52.2632, 2.15991, 0.74 ) }
    dend_69 { pt3dadd( -132.967, -52.8453, 2.6834, 0.74 ) }
    dend_69 { pt3dadd( -135.603, -53.8642, 3.5382, 0.74 ) }
    dend_69 { pt3dadd( -137.722, -54.6839, 4.15265, 0.74 ) }
    dend_69 { pt3dadd( -139.179, -55.165, 4.43327, 1.11 ) }
    dend_69 { pt3dadd( -140.727, -55.5765, 4.64552, 1.11 ) }
    dend_69 { pt3dadd( -141.727, -55.8239, 4.67776, 0.44 ) }
    dend_69 { pt3dadd( -143.15, -56.1821, 4.76381, 0.44 ) }
    dend_69 { pt3dadd( -144.246, -56.5144, 4.83751, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_69 { pt3dadd( -146.391, -57.4206, 5.23534, 2.3 ) }
    dend_69 { pt3dadd( -147.032, -57.7526, 5.42801, 2.3 ) }
    dend_69 { pt3dadd( -148.902, -58.8584, 6.18636, 2.87 ) }
    dend_69 { pt3dadd( -151.71, -60.6356, 7.57318, 0.52 ) }
    dend_69 { pt3dadd( -152.178, -60.9418, 7.82206, 0.66 ) }
    dend_69 { pt3dadd( -152.754, -61.3174, 8.17316, 0.66 ) }
    dend_69 { pt3dadd( -153.318, -61.6859, 8.52304, 0.66 ) }
    dend_69 { pt3dadd( -153.865, -61.9477, 8.85574, 0.66 ) }
    dend_69 { pt3dadd( -153.958, -61.9732, 8.90324, 0.66 ) }
    dend_69 { pt3dadd( -155.105, -62.2352, 9.36728, 0.66 ) }
    dend_69 { pt3dadd( -156.682, -62.693, 10.1642, 0.88 ) }
    dend_69 { pt3dadd( -158.054, -63.1984, 10.9526, 1.4 ) }
    dend_69 { pt3dadd( -160.372, -64.3188, 12.3578, 0.74 ) }
    dend_69 { pt3dadd( -160.985, -64.6473, 12.7115, 1.03 ) }
    dend_69 { pt3dadd( -162.082, -65.3154, 13.215, 0.96 ) }
    dend_69 { pt3dadd( -163.772, -66.4893, 13.6154, 0.81 ) }
    dend_69 { pt3dadd( -164.592, -67.0916, 13.5857, 0.81 ) }
    dend_69 { pt3dadd( -165.592, -67.7871, 13.5513, 1.33 ) }
    dend_69 { pt3dadd( -166.905, -68.5438, 13.555, 1.33 ) }
    dend_69 { pt3dadd( -168.671, -69.4294, 13.611, 0.44 ) }
    dend_69 { pt3dadd( -170.664, -70.3092, 13.6031, 0.59 ) }
    dend_69 { pt3dadd( -171.967, -70.7906, 13.546, 0.59 ) }
    dend_69 { pt3dadd( -176.29, -72.1002, 13.347, 0.66 ) }
    dend_69 { pt3dadd( -179.557, -72.9893, 13.1272, 0.37 ) }
    dend_69 { pt3dadd( -180.554, -73.2258, 13.0424, 1.4 ) }
    dend_69 { pt3dadd( -182.62, -73.5632, 12.8488, 2.5 ) }
    dend_69 { pt3dadd( -184.473, -73.7499, 12.6032, 2.5 ) }
    dend_69 { pt3dadd( -186.247, -73.8129, 12.0295, 1.4 ) }
    dend_69 { pt3dadd( -188.394, -73.7642, 10.9338, 1.18 ) }
    dend_69 { pt3dadd( -189.852, -73.7357, 10.1343, 0.59 ) }
    dend_69 { pt3dadd( -190.649, -73.7321, 9.78028, 0.81 ) }
    dend_69 { pt3dadd( -191.073, -73.7427, 9.63401, 0.81 ) }
    dend_69 { pt3dadd( -193.658, -74.1445, 8.96144, 0.44 ) }
    dend_69 { pt3dadd( -194.707, -74.4762, 8.80164, 0.44 ) }
    dend_69 { pt3dadd( -195.013, -74.5923, 8.79642, 0.44 ) }
    dend_69 { pt3dadd( -196.447, -75.357, 8.83443, 0.44 ) }
    dend_69 { pt3dadd( -196.98, -75.6519, 8.85402, 0.81 ) }
    dend_69 { pt3dadd( -197.774, -76.0886, 8.88878, 0.96 ) }
    dend_69 { pt3dadd( -198.783, -76.6356, 8.94164, 0.81 ) }
    dend_69 { pt3dadd( -200.26, -77.3904, 8.92857, 0.88 ) }
    dend_69 { pt3dadd( -202.305, -78.3353, 8.85135, 0.59 ) }
    dend_69 { pt3dadd( -203.076, -78.6309, 8.79399, 0.59 ) }
    dend_69 { pt3dadd( -203.437, -78.7509, 8.76371, 0.59 ) }
    dend_69 { pt3dadd( -204.052, -78.923, 8.70946, 0.81 ) }
    dend_69 { pt3dadd( -204.516, -79.0517, 8.6703, 1.4 ) }
    dend_69 { pt3dadd( -204.725, -79.1117, 8.63809, 1.4 ) }
    dend_69 { pt3dadd( -206.003, -79.4647, 8.3561, 1.69 ) }
    dend_69 { pt3dadd( -208.036, -80.0379, 7.82278, 0.44 ) }
    dend_69 { pt3dadd( -208.885, -80.2562, 7.49622, 0.44 ) }
    dend_69 { pt3dadd( -209.963, -80.4704, 6.98436, 0.44 ) }
    dend_69 { pt3dadd( -211.7, -80.6785, 6.08211, 0.44 ) }
    dend_69 { pt3dadd( -211.845, -80.694, 6.00146, 0.44 ) }
    dend_69 { pt3dadd( -212.334, -80.7423, 5.71161, 0.96 ) }
    dend_69 { pt3dadd( -214.293, -80.8878, 4.39487, 1.47 ) }
    dend_69 { pt3dadd( -215.567, -80.9852, 3.54279, 1.18 ) }
    dend_69 { pt3dadd( -217.068, -81.0495, 2.62089, 0.52 ) }
    dend_69 { pt3dadd( -217.89, -81.0958, 2.20277, 0.52 ) }
    dend_69 { pt3dadd( -218.802, -81.157, 1.79861, 0.52 ) }
    dend_69 { pt3dadd( -220.43, -81.287, 1.21788, 1.25 ) }
    dend_69 { pt3dadd( -221.249, -81.3572, 1.01297, 1.99 ) }
    dend_69 { pt3dadd( -222.423, -81.4767, 0.718289, 2.21 ) }
    dend_69 { pt3dadd( -223.748, -81.5917, 0.398533, 1.92 ) }
    dend_69 { pt3dadd( -225.169, -81.6288, 0.0901017, 1.11 ) }
    dend_69 { pt3dadd( -226.214, -81.6124, -0.0772283, 0.74 ) }
    dend_69 { pt3dadd( -227.254, -81.5639, -0.127043, 0.74 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 65/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -60.1541, -29.8482, -18.8043, 0.96 ) }
    dend_65 { pt3dadd( -60.7134, -29.9726, -19.0502, 0.96 ) }
    dend_65 { pt3dadd( -62.0316, -30.1783, -19.738, 0.66 ) }
    dend_65 { pt3dadd( -62.8496, -30.2892, -20.2025, 1.11 ) }
    dend_65 { pt3dadd( -63.3373, -30.3563, -20.5226, 1.84 ) }
    dend_65 { pt3dadd( -63.8069, -30.4204, -20.8538, 1.84 ) }
    dend_65 { pt3dadd( -64.8862, -30.5886, -21.6734, 0.59 ) }
    dend_65 { pt3dadd( -65.7237, -30.6904, -22.4024, 0.59 ) }
    dend_65 { pt3dadd( -65.8433, -30.7017, -22.5157, 0.59 ) }
    dend_65 { pt3dadd( -66.602, -30.791, -23.1949, 1.11 ) }
    dend_65 { pt3dadd( -66.6497, -30.8014, -23.2395, 1.11 ) }
    dend_65 { pt3dadd( -67.377, -31.0189, -23.8974, 1.55 ) }
    dend_65 { pt3dadd( -67.8596, -31.1926, -24.2927, 1.84 ) }
    dend_65 { pt3dadd( -68.4061, -31.3995, -24.7029, 1.4 ) }
    dend_65 { pt3dadd( -68.9736, -31.606, -25.0895, 1.11 ) }
    dend_65 { pt3dadd( -70.1447, -32.0255, -25.8455, 1.03 ) }
    dend_65 { pt3dadd( -70.6531, -32.2128, -26.1727, 0.52 ) }
    dend_65 { pt3dadd( -71.1041, -32.3772, -26.4561, 0.52 ) }
    dend_65 { pt3dadd( -71.5118, -32.5415, -26.7239, 0.52 ) }
    dend_65 { pt3dadd( -71.5624, -32.5614, -26.7558, 0.52 ) }
    dend_65 { pt3dadd( -72.3229, -32.8771, -27.1922, 0.96 ) }
    dend_65 { pt3dadd( -72.7985, -33.0628, -27.3708, 1.4 ) }
    dend_65 { pt3dadd( -73.1524, -33.2119, -27.4694, 1.55 ) }
    dend_65 { pt3dadd( -73.8223, -33.4981, -27.5897, 0.66 ) }
    dend_65 { pt3dadd( -74.5673, -33.8165, -27.6316, 0.66 ) }
    dend_65 { pt3dadd( -75.2345, -34.0881, -27.6079, 0.66 ) }
    dend_65 { pt3dadd( -76.0782, -34.4235, -27.5019, 0.66 ) }
    dend_65 { pt3dadd( -76.8611, -34.7263, -27.3709, 1.11 ) }
    dend_65 { pt3dadd( -77.3897, -34.9256, -27.2544, 1.11 ) }
    dend_65 { pt3dadd( -77.9929, -35.12, -27.0817, 0.74 ) }
    dend_65 { pt3dadd( -78.4525, -35.2452, -26.9511, 0.74 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 96/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -60.1541, -29.8482, -18.8043, 0.66 ) }
    dend_62 { pt3dadd( -62.4516, -28.8719, -18.4386, 0.66 ) }
    dend_62 { pt3dadd( -63.8101, -28.273, -18.2374, 0.66 ) }
    dend_62 { pt3dadd( -64.6276, -27.8821, -18.1385, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_62 { pt3dadd( -64.6934, -27.8476, -18.1326, 0.66 ) }
    dend_62 { pt3dadd( -65.5445, -27.3391, -18.083, 0.66 ) }
    dend_62 { pt3dadd( -66.4465, -26.7263, -18.0625, 0.88 ) }
    dend_62 { pt3dadd( -66.9406, -26.2489, -18.1394, 0.88 ) }
    dend_62 { pt3dadd( -67.3579, -25.7079, -18.2245, 0.88 ) }
    dend_62 { pt3dadd( -67.6749, -25.2051, -18.3549, 0.88 ) }
    dend_62 { pt3dadd( -68.0009, -24.569, -18.5831, 0.66 ) }
    dend_62 { pt3dadd( -68.2483, -23.968, -18.8537, 0.59 ) }
    dend_62 { pt3dadd( -68.4777, -23.3567, -19.1893, 0.59 ) }
    dend_62 { pt3dadd( -68.7277, -22.6407, -19.7158, 0.37 ) }
    dend_62 { pt3dadd( -69.0038, -21.8527, -20.4298, 0.59 ) }
    dend_62 { pt3dadd( -69.2199, -21.3058, -21.0217, 0.59 ) }
    dend_62 { pt3dadd( -69.2897, -21.1721, -21.4246, 0.59 ) }
    dend_62 { pt3dadd( -69.3799, -21.0264, -22.1591, 0.59 ) }
    dend_62 { pt3dadd( -69.5766, -20.7765, -24.0134, 0.66 ) }
    dend_62 { pt3dadd( -69.6424, -20.6988, -24.6173, 0.66 ) }
    dend_62 { pt3dadd( -69.678, -20.6588, -24.9132, 0.66 ) }
    dend_62 { pt3dadd( -70.4225, -19.9437, -30.4546, 1.18 ) }
    dend_62 { pt3dadd( -70.5384, -19.8591, -31.2376, 2.14 ) }
    dend_62 { pt3dadd( -70.5707, -19.8423, -31.4139, 2.58 ) }
    dend_62 { pt3dadd( -70.9033, -19.6814, -32.657, 0.66 ) }
    dend_62 { pt3dadd( -71.0591, -19.6129, -33.0747, 0.52 ) }
    dend_62 { pt3dadd( -71.4029, -19.4461, -33.5528, 0.52 ) }
    dend_62 { pt3dadd( -72.9761, -18.6834, -34.2104, 0.52 ) }
    dend_62 { pt3dadd( -73.5111, -18.4611, -34.4187, 0.52 ) }
    dend_62 { pt3dadd( -75.1512, -17.839, -35.0069, 0.52 ) }
    dend_62 { pt3dadd( -75.8723, -17.6145, -35.2322, 0.88 ) }
    dend_62 { pt3dadd( -76.8499, -17.343, -35.471, 1.11 ) }
    dend_62 { pt3dadd( -77.9136, -17.1128, -35.6503, 1.4 ) }
    dend_62 { pt3dadd( -78.4241, -17.0375, -35.6941, 0.96 ) }
    dend_62 { pt3dadd( -78.9008, -17.0295, -35.748, 0.96 ) }
    dend_62 { pt3dadd( -79.7447, -17.1638, -35.88, 0.52 ) }
    dend_62 { pt3dadd( -80.5862, -17.3588, -35.9648, 0.37 ) }
    dend_62 { pt3dadd( -81.3683, -17.5537, -36.017, 0.37 ) }
    dend_62 { pt3dadd( -82.1425, -17.7426, -36.0495, 0.44 ) }
    dend_62 { pt3dadd( -82.2301, -17.7621, -36.0549, 0.44 ) }
    dend_62 { pt3dadd( -83.6119, -18.0309, -36.1734, 0.44 ) }
    dend_62 { pt3dadd( -85.1224, -18.3059, -36.3345, 0.44 ) }
    dend_62 { pt3dadd( -85.9155, -18.4219, -36.454, 0.44 ) }
    dend_62 { pt3dadd( -86.1023, -18.4458, -36.485, 0.44 ) }
    dend_62 { pt3dadd( -87.0261, -18.5845, -36.6434, 0.44 ) }
    dend_62 { pt3dadd( -87.1133, -18.6013, -36.6582, 0.44 ) }
    dend_62 { pt3dadd( -87.9571, -18.8029, -36.8002, 0.44 ) }
    dend_62 { pt3dadd( -88.8064, -19.0392, -36.9406, 1.18 ) }
    dend_62 { pt3dadd( -89.5841, -19.2536, -37.0663, 1.92 ) }
    dend_62 { pt3dadd( -90.4779, -19.495, -37.184, 0.52 ) }
    dend_62 { pt3dadd( -91.9393, -19.9025, -37.3396, 0.52 ) }
    dend_62 { pt3dadd( -92.7396, -20.123, -37.4012, 1.11 ) }
    dend_62 { pt3dadd( -93.0827, -20.2134, -37.4238, 1.69 ) }
    dend_62 { pt3dadd( -94.211, -20.5277, -37.4693, 0.74 ) }
    dend_62 { pt3dadd( -95.5773, -20.8984, -37.507, 0.66 ) }
    dend_62 { pt3dadd( -96.5508, -21.1747, -37.5096, 0.66 ) }
    dend_62 { pt3dadd( -97.4818, -21.4657, -37.4747, 1.62 ) }
    // Section: dend_47, id: dend_47, parent: dend_20 (entry count 53/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 20.3757, 32.9359, -11.4483, 0.74 ) }
    dend_47 { pt3dadd( 24.2681, 33.763, -16.6871, 0.74 ) }
    dend_47 { pt3dadd( 24.7203, 33.8368, -17.1991, 1.15 ) }
    dend_47 { pt3dadd( 25.0674, 33.8782, -17.5245, 1.11 ) }
    dend_47 { pt3dadd( 25.4356, 33.8964, -17.8011, 0.88 ) }
    dend_47 { pt3dadd( 26.5366, 33.8974, -18.5571, 0.37 ) }
    dend_47 { pt3dadd( 27.032, 33.8875, -18.8674, 0.81 ) }
    dend_47 { pt3dadd( 27.3502, 33.8553, -18.9614, 1.03 ) }
    dend_47 { pt3dadd( 28.4895, 33.7942, -19.3878, 1.03 ) }
    dend_47 { pt3dadd( 29.5512, 33.8025, -19.9763, 1.03 ) }
    dend_47 { pt3dadd( 30.6597, 33.8871, -20.7225, 0.66 ) }
    dend_47 { pt3dadd( 31.2243, 33.9752, -21.1944, 0.66 ) }
    dend_47 { pt3dadd( 31.8163, 34.0919, -21.7466, 1.03 ) }
    dend_47 { pt3dadd( 32.4248, 34.2332, -22.3477, 1.03 ) }
    dend_47 { pt3dadd( 34.1102, 34.6861, -24.0116, 1.03 ) }
    dend_47 { pt3dadd( 34.8173, 34.9058, -24.6982, 1.03 ) }
    dend_47 { pt3dadd( 35.7531, 35.1906, -25.5356, 0.52 ) }
    dend_47 { pt3dadd( 35.8091, 35.2049, -25.5776, 0.52 ) }
    dend_47 { pt3dadd( 36.3249, 35.2938, -25.8102, 0.52 ) }
    dend_47 { pt3dadd( 37.3782, 35.4193, -25.686, 0.74 ) }
    dend_47 { pt3dadd( 38.1203, 35.495, -25.4235, 1.03 ) }
    dend_47 { pt3dadd( 38.1784, 35.5005, -25.3996, 1.03 ) }
    dend_47 { pt3dadd( 39.9373, 35.645, -24.6239, 0.52 ) }
    dend_47 { pt3dadd( 39.9874, 35.6502, -24.6022, 0.52 ) }
    dend_47 { pt3dadd( 41.0208, 35.7997, -24.179, 0.52 ) }
    dend_47 { pt3dadd( 41.9505, 35.9588, -23.894, 1.84 ) }
    dend_47 { pt3dadd( 42.0177, 35.9702, -23.8729, 1.84 ) }
    dend_47 { pt3dadd( 42.377, 36.03, -23.8231, 1.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 81/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 20.3757, 32.9359, -11.4483, 2.06 ) }
    dend_21 { pt3dadd( 21.3917, 34.8964, -11.9009, 2.06 ) }
    dend_21 { pt3dadd( 22.4109, 36.5146, -12.1432, 1.47 ) }
    dend_21 { pt3dadd( 22.4635, 36.5833, -12.1478, 1.47 ) }
    dend_21 { pt3dadd( 23.6453, 37.9828, -12.1766, 0.88 ) }
    dend_21 { pt3dadd( 24.371, 38.7605, -12.1522, 0.88 ) }
    dend_21 { pt3dadd( 25.0459, 39.48, -12.1108, 1.4 ) }
    dend_21 { pt3dadd( 25.6911, 40.0825, -12.0229, 1.84 ) }
    dend_21 { pt3dadd( 26.5398, 40.8652, -11.9617, 1.33 ) }
    dend_21 { pt3dadd( 26.5951, 40.9273, -11.9595, 1.33 ) }
    dend_21 { pt3dadd( 27.1766, 41.7967, -12.0485, 1.03 ) }
    dend_21 { pt3dadd( 27.6254, 42.785, -12.2324, 1.03 ) }
    dend_21 { pt3dadd( 28.1334, 44.2533, -12.5644, 1.47 ) }
    dend_21 { pt3dadd( 28.4339, 45.3622, -12.8337, 1.55 ) }
    dend_21 { pt3dadd( 28.8529, 47.0046, -13.2132, 2.06 ) }
    dend_21 { pt3dadd( 29.3297, 48.8447, -13.4805, 1.55 ) }
    dend_21 { pt3dadd( 29.5835, 49.7116, -13.5202, 1.18 ) }
    dend_21 { pt3dadd( 29.6729, 49.9537, -13.5023, 1.18 ) }
    dend_21 { pt3dadd( 30.0861, 50.8434, -13.2759, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_21 { pt3dadd( 30.7367, 51.9801, -12.8779, 1.18 ) }
    dend_21 { pt3dadd( 31.6798, 53.3958, -12.2757, 1.47 ) }
    dend_21 { pt3dadd( 32.3702, 54.4786, -11.6165, 1.11 ) }
    dend_21 { pt3dadd( 32.713, 55.0311, -11.2341, 1.11 ) }
    dend_21 { pt3dadd( 33.6794, 56.6683, -10.0367, 1.03 ) }
    dend_21 { pt3dadd( 34.3117, 57.7825, -9.17943, 1.03 ) }
    dend_21 { pt3dadd( 34.5415, 58.2254, -8.84507, 1.69 ) }
    dend_21 { pt3dadd( 35.7236, 60.5862, -7.17082, 1.4 ) }
    dend_21 { pt3dadd( 35.8657, 60.8993, -6.95655, 1.92 ) }
    dend_21 { pt3dadd( 36.0952, 61.437, -6.62158, 1.92 ) }
    dend_21 { pt3dadd( 36.2757, 61.9268, -6.34621, 1.92 ) }
    dend_21 { pt3dadd( 36.5908, 62.8746, -5.86631, 0.96 ) }
    dend_21 { pt3dadd( 36.7747, 63.5205, -5.62795, 0.96 ) }
    dend_21 { pt3dadd( 36.9588, 64.259, -5.48256, 0.96 ) }
    dend_21 { pt3dadd( 37.068, 64.9659, -5.35838, 0.96 ) }
    dend_21 { pt3dadd( 37.1677, 66.3466, -5.14341, 0.96 ) }
    dend_21 { pt3dadd( 37.1367, 67.0446, -5.07059, 0.96 ) }
    dend_21 { pt3dadd( 37.0011, 68.083, -5.0151, 1.4 ) }
    dend_21 { pt3dadd( 36.8778, 69.0267, -4.98367, 1.62 ) }
    dend_21 { pt3dadd( 36.8132, 69.6833, -4.97566, 1.4 ) }
    dend_21 { pt3dadd( 36.7796, 70.2221, -4.95962, 1.4 ) }
    dend_21 { pt3dadd( 36.7566, 71.721, -4.91996, 0.66 ) }
    dend_21 { pt3dadd( 36.7243, 72.787, -4.75233, 0.74 ) }
    dend_21 { pt3dadd( 36.6552, 74.0636, -4.43333, 0.74 ) }
    dend_21 { pt3dadd( 36.5804, 74.8018, -4.18727, 0.74 ) }
    dend_21 { pt3dadd( 36.4564, 75.9578, -3.77412, 0.74 ) }
    dend_21 { pt3dadd( 36.381, 76.8168, -3.46216, 1.55 ) }
    dend_21 { pt3dadd( 36.2487, 78.6646, -2.78945, 1.55 ) }
    dend_21 { pt3dadd( 36.1717, 79.5654, -2.49543, 1.25 ) }
    dend_21 { pt3dadd( 36.0249, 81.3602, -2.00882, 0.96 ) }
    dend_21 { pt3dadd( 35.98, 82.7142, -1.70728, 0.74 ) }
    dend_21 { pt3dadd( 36.0329, 83.938, -1.54527, 0.88 ) }
    dend_21 { pt3dadd( 36.127, 84.5284, -1.53028, 0.88 ) }
    dend_21 { pt3dadd( 36.3623, 85.3426, -1.61897, 1.62 ) }
    dend_21 { pt3dadd( 36.7524, 86.4792, -1.77945, 2.5 ) }
    dend_21 { pt3dadd( 37.1282, 87.4695, -1.96706, 2.14 ) }
    dend_21 { pt3dadd( 37.5559, 88.5762, -2.20658, 2.06 ) }
    dend_21 { pt3dadd( 38.6513, 91.3583, -2.87925, 0.96 ) }
    dend_21 { pt3dadd( 39.5432, 93.5373, -3.44021, 0.96 ) }
    dend_21 { pt3dadd( 40.1899, 95.0187, -3.83962, 0.74 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 10.2333, 89.7686, -1.72708, 0.52 ) }
    dend_11 { pt3dadd( 11.9239, 92.109, -3.0177, 0.52 ) }
    dend_11 { pt3dadd( 12.881, 93.4631, -3.65896, 0.66 ) }
    dend_11 { pt3dadd( 12.9586, 93.5723, -3.70367, 0.66 ) }
    dend_11 { pt3dadd( 13.2413, 93.9816, -3.84374, 0.81 ) }
    dend_11 { pt3dadd( 13.9689, 95.0575, -4.15728, 0.37 ) }
    dend_11 { pt3dadd( 14.4697, 95.7721, -4.34758, 0.37 ) }
    dend_11 { pt3dadd( 15.2151, 96.8178, -4.53296, 0.37 ) }
    dend_11 { pt3dadd( 15.6666, 97.432, -4.59691, 0.59 ) }
    dend_11 { pt3dadd( 16.3292, 98.3103, -4.69251, 0.59 ) }
    dend_11 { pt3dadd( 16.7487, 98.8717, -4.76706, 0.59 ) }
    dend_11 { pt3dadd( 17.3923, 99.8124, -4.92637, 0.37 ) }
    dend_11 { pt3dadd( 17.5964, 100.176, -5.015, 0.74 ) }
    dend_11 { pt3dadd( 18.0593, 101.267, -5.32637, 1.11 ) }
    dend_11 { pt3dadd( 18.2024, 101.687, -5.44997, 1.11 ) }
    dend_11 { pt3dadd( 18.5437, 102.851, -5.84679, 0.52 ) }
    dend_11 { pt3dadd( 18.9348, 104.249, -6.32849, 0.52 ) }
    dend_11 { pt3dadd( 19.1765, 105.175, -6.6408, 0.52 ) }
    dend_11 { pt3dadd( 19.4881, 106.268, -6.98687, 0.66 ) }
    dend_11 { pt3dadd( 19.692, 106.912, -7.18228, 0.66 ) }
    dend_11 { pt3dadd( 20.1515, 108.151, -7.51618, 0.59 ) }
    dend_11 { pt3dadd( 20.6526, 109.238, -7.75201, 0.52 ) }
    dend_11 { pt3dadd( 20.7135, 109.35, -7.77031, 0.52 ) }
    dend_11 { pt3dadd( 21.3007, 110.399, -7.92566, 0.74 ) }
    dend_11 { pt3dadd( 21.6277, 110.989, -8.00135, 0.74 ) }
    dend_11 { pt3dadd( 21.9498, 111.599, -8.05527, 0.96 ) }
    dend_11 { pt3dadd( 22.6362, 112.953, -8.10747, 0.52 ) }
    dend_11 { pt3dadd( 23.2594, 114.217, -8.14466, 0.52 ) }
    dend_11 { pt3dadd( 23.863, 115.442, -8.16048, 0.96 ) }
    dend_11 { pt3dadd( 24.1278, 115.942, -8.1549, 1.4 ) }
    dend_11 { pt3dadd( 24.6698, 116.887, -8.11427, 1.55 ) }
    dend_11 { pt3dadd( 25.0479, 117.514, -8.07915, 1.55 ) }
    dend_11 { pt3dadd( 25.5381, 118.273, -8.00268, 0.81 ) }
    dend_11 { pt3dadd( 26.0939, 119.093, -7.87919, 0.81 ) }
    dend_11 { pt3dadd( 26.6455, 119.923, -7.72154, 0.81 ) }
    dend_11 { pt3dadd( 27.0158, 120.557, -7.60881, 0.81 ) }
    dend_11 { pt3dadd( 27.4448, 121.332, -7.47651, 0.81 ) }
    dend_11 { pt3dadd( 27.784, 122.005, -7.33551, 0.74 ) }
    dend_11 { pt3dadd( 28.2128, 122.98, -7.02991, 0.66 ) }
    dend_11 { pt3dadd( 28.5367, 123.802, -6.71008, 0.66 ) }
    dend_11 { pt3dadd( 28.9955, 125.127, -6.13923, 0.74 ) }
    dend_11 { pt3dadd( 29.2551, 125.868, -5.78841, 0.74 ) }
    dend_11 { pt3dadd( 29.6385, 126.984, -5.23537, 0.88 ) }
    dend_11 { pt3dadd( 30.1589, 128.52, -4.48131, 1.11 ) }
    dend_11 { pt3dadd( 30.3224, 128.979, -4.24819, 1.47 ) }
    dend_11 { pt3dadd( 30.5732, 129.656, -3.90835, 0.81 ) }
    dend_11 { pt3dadd( 31.0843, 131.145, -3.20966, 0.52 ) }
    dend_11 { pt3dadd( 31.2208, 131.65, -3.01402, 0.59 ) }
    dend_11 { pt3dadd( 31.3678, 132.407, -2.83838, 0.59 ) }
    dend_11 { pt3dadd( 31.4726, 133.197, -2.75505, 0.59 ) }
    dend_11 { pt3dadd( 31.5161, 133.684, -2.71717, 0.59 ) }
    dend_11 { pt3dadd( 31.5736, 134.293, -2.65501, 0.59 ) }
    dend_11 { pt3dadd( 31.6523, 135.008, -2.61091, 0.59 ) }
    dend_11 { pt3dadd( 31.8769, 136.303, -2.53927, 0.59 ) }
    dend_11 { pt3dadd( 32.1441, 137.548, -2.47753, 0.59 ) }
    dend_11 { pt3dadd( 32.4401, 138.624, -2.42634, 0.59 ) }
    dend_11 { pt3dadd( 32.9718, 140.068, -2.3528, 0.59 ) }
    dend_11 { pt3dadd( 33.3499, 140.891, -2.29305, 1.11 ) }
    dend_11 { pt3dadd( 33.8067, 141.76, -2.21764, 1.62 ) }
    dend_11 { pt3dadd( 34.0007, 142.095, -2.19422, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( 34.3855, 142.74, -2.16071, 2.58 ) }
    dend_11 { pt3dadd( 34.9506, 143.704, -2.12799, 1.47 ) }
    dend_11 { pt3dadd( 35.8148, 145.194, -2.17778, 0.66 ) }
    dend_11 { pt3dadd( 36.8012, 146.928, -2.2599, 0.59 ) }
    dend_11 { pt3dadd( 37.225, 147.712, -2.33166, 0.59 ) }
    dend_11 { pt3dadd( 37.4919, 148.255, -2.40258, 0.81 ) }
    dend_11 { pt3dadd( 37.7632, 148.913, -2.51003, 0.81 ) }
    dend_11 { pt3dadd( 38.2534, 150.403, -2.80225, 0.59 ) }
    dend_11 { pt3dadd( 38.3758, 150.877, -2.90662, 0.59 ) }
    dend_11 { pt3dadd( 38.4843, 151.442, -3.01413, 0.59 ) }
    dend_11 { pt3dadd( 38.6017, 152.186, -3.07404, 0.59 ) }
    dend_11 { pt3dadd( 38.767, 153.212, -3.07636, 0.66 ) }
    dend_11 { pt3dadd( 38.8899, 153.872, -3.02204, 1.03 ) }
    dend_11 { pt3dadd( 39.0232, 154.656, -2.89494, 1.03 ) }
    dend_11 { pt3dadd( 39.1223, 155.125, -2.78579, 0.74 ) }
    dend_11 { pt3dadd( 39.4237, 156.256, -2.47237, 0.59 ) }
    dend_11 { pt3dadd( 39.6082, 156.875, -2.24835, 0.59 ) }
    dend_11 { pt3dadd( 39.7954, 157.474, -2.00654, 0.52 ) }
    dend_11 { pt3dadd( 40.0639, 158.337, -1.62828, 0.52 ) }
    dend_11 { pt3dadd( 40.4673, 159.558, -1.0982, 0.74 ) }
    dend_11 { pt3dadd( 41.0156, 161.042, -0.474465, 0.74 ) }
    dend_11 { pt3dadd( 41.6364, 162.436, 0.0884855, 0.74 ) }
    dend_11 { pt3dadd( 42.0204, 163.206, 0.384485, 0.74 ) }
    dend_11 { pt3dadd( 42.248, 163.63, 0.553187, 0.74 ) }
    dend_11 { pt3dadd( 43.2327, 165.273, 1.21134, 0.29 ) }
    dend_11 { pt3dadd( 43.603, 165.893, 1.46339, 0.29 ) }
    dend_11 { pt3dadd( 44.0594, 166.653, 1.81479, 0.29 ) }
    dend_11 { pt3dadd( 44.6028, 167.635, 2.26244, 0.29 ) }
    dend_11 { pt3dadd( 45.1223, 168.708, 2.78743, 0.66 ) }
    dend_11 { pt3dadd( 45.1223, 168.708, 2.78743, 1.33 ) }
    dend_11 { pt3dadd( 45.3052, 169.895, 3.29834, 1.62 ) }
    dend_11 { pt3dadd( 45.3462, 170.432, 3.46734, 1.62 ) }
    dend_11 { pt3dadd( 45.354, 170.992, 3.6075, 1.69 ) }
    dend_11 { pt3dadd( 45.3685, 171.474, 3.70089, 1.25 ) }
    dend_11 { pt3dadd( 45.4893, 172.801, 3.87117, 0.44 ) }
    dend_11 { pt3dadd( 45.7226, 174.044, 4.00781, 0.44 ) }
    dend_11 { pt3dadd( 46.0442, 175.184, 4.10216, 1.18 ) }
    dend_11 { pt3dadd( 46.4052, 176.195, 4.19901, 1.62 ) }
    dend_11 { pt3dadd( 46.6788, 176.856, 4.27047, 1.33 ) }
    dend_11 { pt3dadd( 47.1176, 177.807, 4.41458, 0.74 ) }
    dend_11 { pt3dadd( 47.7685, 179.122, 4.65319, 0.37 ) }
    dend_11 { pt3dadd( 48.2816, 180.185, 4.86571, 0.37 ) }
    dend_11 { pt3dadd( 48.5358, 180.802, 4.98477, 0.66 ) }
    dend_11 { pt3dadd( 48.7318, 181.378, 5.05107, 1.18 ) }
    dend_11 { pt3dadd( 49.2368, 183.145, 5.1039, 0.52 ) }
    dend_11 { pt3dadd( 49.6643, 184.589, 5.06627, 0.59 ) }
    dend_11 { pt3dadd( 49.7092, 184.72, 5.0557, 0.59 ) }
    dend_11 { pt3dadd( 50.3874, 186.39, 4.89882, 0.74 ) }
    dend_11 { pt3dadd( 51.0325, 187.835, 4.70974, 0.66 ) }
    dend_11 { pt3dadd( 52.0161, 189.915, 4.39823, 0.66 ) }
    dend_11 { pt3dadd( 52.774, 191.503, 4.12842, 0.66 ) }
    dend_11 { pt3dadd( 53.4255, 192.817, 3.90708, 1.03 ) }
    dend_11 { pt3dadd( 54.2329, 194.393, 3.66682, 0.52 ) }
    dend_11 { pt3dadd( 54.9959, 195.812, 3.48945, 0.52 ) }
    dend_11 { pt3dadd( 55.6376, 196.977, 3.39837, 1.11 ) }
    dend_11 { pt3dadd( 56.479, 198.646, 3.30866, 0.37 ) }
    dend_11 { pt3dadd( 56.9386, 199.7, 3.33396, 0.66 ) }
    dend_11 { pt3dadd( 57.3116, 200.627, 3.43003, 0.66 ) }
    dend_11 { pt3dadd( 57.7672, 201.745, 3.61189, 0.44 ) }
    dend_11 { pt3dadd( 58.2394, 202.886, 3.89261, 0.44 ) }
    dend_11 { pt3dadd( 58.77, 204.195, 4.29642, 0.44 ) }
    dend_11 { pt3dadd( 59.7935, 206.785, 5.24393, 0.44 ) }
    dend_11 { pt3dadd( 60.4168, 208.371, 5.84547, 0.44 ) }
    dend_11 { pt3dadd( 60.8365, 209.463, 6.23615, 0.44 ) }
    dend_11 { pt3dadd( 61.3036, 210.693, 6.63706, 1.62 ) }
    dend_11 { pt3dadd( 61.7012, 211.684, 7.01965, 2.28 ) }
    dend_11 { pt3dadd( 62.0544, 212.465, 7.3305, 2.28 ) }
    dend_11 { pt3dadd( 63.3132, 215.097, 8.33679, 0.37 ) }
    dend_11 { pt3dadd( 64.4176, 217.414, 9.27351, 0.37 ) }
    dend_11 { pt3dadd( 65.0703, 218.889, 9.78319, 0.37 ) }
    dend_11 { pt3dadd( 66.3277, 222.004, 10.7097, 0.37 ) }
    dend_11 { pt3dadd( 66.7418, 223.091, 10.9848, 0.66 ) }
    dend_11 { pt3dadd( 66.9951, 223.811, 11.1466, 1.55 ) }
    dend_11 { pt3dadd( 67.1142, 224.184, 11.2043, 2.21 ) }
    dend_11 { pt3dadd( 67.9816, 226.829, 11.4017, 0.66 ) }
    dend_11 { pt3dadd( 68.6029, 228.682, 11.3069, 0.44 ) }
    dend_11 { pt3dadd( 69.0115, 229.828, 11.1119, 0.44 ) }
    dend_11 { pt3dadd( 69.2427, 230.337, 11.0621, 0.44 ) }
    dend_11 { pt3dadd( 69.665, 231.108, 11.0079, 0.44 ) }
    dend_11 { pt3dadd( 69.968, 231.615, 11.012, 1.33 ) }
    dend_11 { pt3dadd( 70.5632, 232.496, 11.1071, 1.18 ) }
    dend_11 { pt3dadd( 71.1286, 233.361, 11.165, 0.44 ) }
    dend_11 { pt3dadd( 72.1418, 235.133, 11.337, 0.37 ) }
    dend_11 { pt3dadd( 72.3597, 235.587, 11.3915, 1.18 ) }
    dend_11 { pt3dadd( 72.8044, 236.651, 11.5415, 1.47 ) }
    dend_11 { pt3dadd( 72.8365, 236.744, 11.5528, 1.47 ) }
    dend_11 { pt3dadd( 72.9789, 237.224, 11.6173, 1.18 ) }
    dend_11 { pt3dadd( 73.079, 237.598, 11.6499, 1.18 ) }
    dend_11 { pt3dadd( 73.4682, 239.198, 11.7149, 0.37 ) }
    dend_11 { pt3dadd( 73.9009, 240.838, 11.7315, 0.37 ) }
    dend_11 { pt3dadd( 74.4092, 242.606, 11.6913, 0.37 ) }
    dend_11 { pt3dadd( 74.6023, 243.279, 11.6776, 0.37 ) }
    dend_11 { pt3dadd( 74.8283, 244.056, 11.6647, 0.66 ) }
    dend_11 { pt3dadd( 75.0353, 244.742, 11.683, 1.18 ) }
    dend_11 { pt3dadd( 75.2104, 245.289, 11.7232, 1.47 ) }
    dend_11 { pt3dadd( 75.3696, 245.77, 11.7804, 1.47 ) }
    dend_11 { pt3dadd( 76.0747, 247.647, 12.0938, 0.37 ) }
    dend_11 { pt3dadd( 76.433, 248.558, 12.272, 0.37 ) }
    dend_11 { pt3dadd( 76.8549, 249.694, 12.5803, 0.66 ) }
    dend_11 { pt3dadd( 77.0271, 250.231, 12.7608, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_11 { pt3dadd( 77.2753, 251.169, 13.1008, 0.44 ) }
    dend_11 { pt3dadd( 77.3976, 251.699, 13.3029, 0.44 ) }
    dend_11 { pt3dadd( 77.5854, 252.603, 13.6624, 0.44 ) }
    dend_11 { pt3dadd( 77.9038, 254.499, 14.4571, 0.44 ) }
    dend_11 { pt3dadd( 78.0994, 256.083, 15.1665, 0.37 ) }
    dend_11 { pt3dadd( 78.1842, 257.1, 15.6527, 0.37 ) }
    dend_11 { pt3dadd( 78.2109, 257.544, 15.8736, 0.74 ) }
    dend_11 { pt3dadd( 78.2164, 257.998, 16.098, 1.18 ) }
    dend_11 { pt3dadd( 78.1808, 259.181, 16.6495, 1.18 ) }
    dend_11 { pt3dadd( 78.0936, 260.002, 17.1231, 0.81 ) }
    dend_11 { pt3dadd( 77.8749, 261.256, 17.8438, 0.29 ) }
    dend_11 { pt3dadd( 77.7571, 261.685, 18.2127, 0.29 ) }
    dend_11 { pt3dadd( 77.5042, 262.537, 18.8928, 0.37 ) }
    dend_11 { pt3dadd( 77.2721, 263.264, 19.4462, 0.37 ) }
    dend_11 { pt3dadd( 76.3642, 266.207, 21.2315, 1.4 ) }
    dend_11 { pt3dadd( 75.8415, 267.863, 22.297, 2.36 ) }
    dend_11 { pt3dadd( 74.614, 271.986, 24.8478, 0.81 ) }
    dend_11 { pt3dadd( 74.0644, 274.274, 26.1237, 0.81 ) }
    dend_11 { pt3dadd( 74.0476, 274.363, 26.1733, 0.81 ) }
    dend_11 { pt3dadd( 73.6655, 276.807, 27.4002, 1.18 ) }
    dend_11 { pt3dadd( 73.3056, 280.859, 28.5313, 1.18 ) }
    dend_11 { pt3dadd( 73.1927, 282.571, 29.1635, 0.59 ) }
    dend_11 { pt3dadd( 73.2431, 283.33, 28.8483, 0.59 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 23/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 10.2333, 89.7686, -1.72708, 1.69 ) }
    dend_2 { pt3dadd( 9.84577, 90.695, -1.84642, 1.69 ) }
    dend_2 { pt3dadd( 9.39717, 91.8477, -1.97314, 1.69 ) }
    dend_2 { pt3dadd( 8.92062, 93.1156, -2.08876, 1.69 ) }
    dend_2 { pt3dadd( 8.5562, 94.1671, -2.16883, 1.62 ) }
    dend_2 { pt3dadd( 8.34632, 94.8799, -2.22397, 1.47 ) }
    dend_2 { pt3dadd( 8.11748, 95.8542, -2.30082, 1.47 ) }
    dend_2 { pt3dadd( 7.96821, 96.8454, -2.33014, 1.47 ) }
    dend_2 { pt3dadd( 7.90589, 98.0909, -2.2971, 1.4 ) }
    dend_2 { pt3dadd( 7.93653, 99.1321, -2.22699, 1.4 ) }
    dend_2 { pt3dadd( 8.01182, 100.166, -2.11718, 1.18 ) }
    dend_2 { pt3dadd( 8.09284, 101.052, -2.00689, 1.55 ) }
    dend_2 { pt3dadd( 8.21566, 102.369, -1.92356, 1.03 ) }
    dend_2 { pt3dadd( 8.26569, 103.201, -1.9254, 1.03 ) }
    dend_2 { pt3dadd( 8.2781, 103.89, -1.96742, 1.03 ) }
    dend_2 { pt3dadd( 8.24156, 104.729, -2.04804, 1.33 ) }
    dend_2 { pt3dadd( 8.1636, 105.607, -2.14981, 1.62 ) }
    dend_2 { pt3dadd( 7.98036, 107.455, -2.40465, 2.28 ) }
    dend_2 { pt3dadd( 7.88471, 108.711, -2.60173, 2.28 ) }
    dend_2 { pt3dadd( 7.80065, 110.904, -2.90082, 1.55 ) }
    dend_2 { pt3dadd( 7.82865, 112.211, -3.12459, 1.25 ) }
    dend_2 { pt3dadd( 7.90257, 113.091, -3.29106, 1.25 ) }
    dend_2 { pt3dadd( 7.98979, 113.903, -3.46373, 1.25 ) }
    dend_2 { pt3dadd( 8.12276, 115.025, -3.69884, 1.25 ) }
    dend_2 { pt3dadd( 8.25158, 116.241, -3.97043, 1.25 ) }
    dend_2 { pt3dadd( 8.4388, 118.282, -4.44341, 0.81 ) }
    dend_2 { pt3dadd( 8.50654, 119.423, -4.60907, 0.81 ) }
    dend_2 { pt3dadd( 8.52684, 121.22, -4.70112, 0.74 ) }
    dend_2 { pt3dadd( 8.47075, 122.52, -4.50098, 0.81 ) }
    dend_2 { pt3dadd( 8.38334, 123.671, -4.09799, 1.62 ) }
    dend_2 { pt3dadd( 8.31042, 124.362, -3.75855, 1.69 ) }
    dend_2 { pt3dadd( 8.07611, 126.346, -2.59205, 1.69 ) }
    dend_2 { pt3dadd( 7.96659, 127.427, -1.8706, 1.69 ) }
    dend_2 { pt3dadd( 7.77638, 129.873, -0.160065, 1.62 ) }
    dend_2 { pt3dadd( 7.69479, 131.072, 0.639957, 1.33 ) }
    dend_2 { pt3dadd( 7.62368, 132.211, 1.318, 1.33 ) }
    dend_2 { pt3dadd( 7.56508, 133.103, 1.79069, 1.55 ) }
    dend_2 { pt3dadd( 7.4418, 135.004, 2.59775, 1.47 ) }
    dend_2 { pt3dadd( 7.34646, 136.486, 3.10678, 1.47 ) }
    dend_2 { pt3dadd( 7.29017, 137.481, 3.31338, 1.47 ) }
    dend_2 { pt3dadd( 7.26012, 138.517, 3.48234, 1.47 ) }
    dend_2 { pt3dadd( 7.2721, 139.149, 3.55864, 1.47 ) }
    dend_2 { pt3dadd( 7.29701, 139.814, 3.6057, 1.47 ) }
    dend_2 { pt3dadd( 7.34482, 141.033, 3.65351, 1.18 ) }
    dend_2 { pt3dadd( 7.42842, 142.302, 3.74871, 1.18 ) }
    dend_2 { pt3dadd( 7.51076, 143.54, 3.81808, 1.18 ) }
    dend_2 { pt3dadd( 7.58957, 144.718, 3.86204, 1.18 ) }
    dend_2 { pt3dadd( 7.60743, 145.07, 3.86967, 1.18 ) }
    dend_2 { pt3dadd( 7.65791, 147.603, 3.82345, 0.74 ) }
    dend_2 { pt3dadd( 7.6491, 148.345, 3.78804, 1.18 ) }
    dend_2 { pt3dadd( 7.58615, 150.037, 3.66625, 1.62 ) }
    dend_2 { pt3dadd( 7.49212, 151.719, 3.51776, 1.62 ) }
    dend_2 { pt3dadd( 7.39385, 153.207, 3.37062, 1.77 ) }
    dend_2 { pt3dadd( 7.26372, 155.013, 3.17685, 1.77 ) }
    dend_2 { pt3dadd( 7.17411, 156.092, 3.03903, 1.77 ) }
    dend_2 { pt3dadd( 7.05149, 157.224, 2.88894, 1.77 ) }
    dend_2 { pt3dadd( 6.84707, 158.814, 2.69899, 1.77 ) }
    dend_2 { pt3dadd( 6.64583, 160.039, 2.38676, 1.47 ) }
    dend_2 { pt3dadd( 6.4936, 160.73, 2.10564, 1.47 ) }
    dend_2 { pt3dadd( 6.47042, 160.804, 2.06406, 1.47 ) }
    dend_2 { pt3dadd( 5.97125, 161.896, 1.24903, 1.47 ) }
    dend_2 { pt3dadd( 5.64987, 162.444, 0.761051, 1.18 ) }
    dend_2 { pt3dadd( 4.15635, 164.612, -1.14807, 1.55 ) }
    dend_2 { pt3dadd( 3.67922, 165.299, -1.62612, 0.88 ) }
    dend_2 { pt3dadd( 3.23898, 166.024, -1.86345, 0.88 ) }
    dend_2 { pt3dadd( 2.88586, 166.707, -1.84907, 0.88 ) }
    dend_2 { pt3dadd( 2.54733, 167.537, -1.5843, 0.88 ) }
    dend_2 { pt3dadd( 1.97827, 169.359, -0.783426, 1.25 ) }
    dend_2 { pt3dadd( 1.64451, 170.795, -0.057621, 1.69 ) }
    dend_2 { pt3dadd( 1.48554, 171.897, 0.439744, 1.69 ) }
    dend_2 { pt3dadd( 1.46798, 172.117, 0.523055, 1.69 ) }
    dend_2 { pt3dadd( 1.42073, 173.049, 0.77746, 1.69 ) }
    dend_2 { pt3dadd( 1.3514, 174.295, 0.976314, 1.69 ) }
    dend_2 { pt3dadd( 1.22956, 175.999, 1.1033, 1.69 ) }
    dend_2 { pt3dadd( 1.08302, 177.347, 1.1599, 1.69 ) }
    dend_2 { pt3dadd( 0.87613, 178.636, 1.22455, 1.69 ) }
    dend_2 { pt3dadd( 0.605053, 179.859, 1.29336, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 0.305116, 180.884, 1.35841, 1.25 ) }
    dend_2 { pt3dadd( -0.178742, 182.154, 1.34536, 1.03 ) }
    dend_2 { pt3dadd( -0.606285, 183.059, 1.25864, 0.96 ) }
    dend_2 { pt3dadd( -1.24798, 184.207, 1.09061, 0.81 ) }
    dend_2 { pt3dadd( -1.7629, 185.029, 0.936285, 0.81 ) }
    dend_2 { pt3dadd( -2.17371, 185.679, 0.795619, 0.81 ) }
    dend_2 { pt3dadd( -3.26894, 187.464, 0.284381, 1.25 ) }
    dend_2 { pt3dadd( -3.64375, 188.173, 0.0551757, 1.69 ) }
    dend_2 { pt3dadd( -3.92414, 188.814, -0.124934, 2.21 ) }
    dend_2 { pt3dadd( -4.08514, 189.308, -0.234429, 2.58 ) }
    dend_2 { pt3dadd( -4.33736, 190.336, -0.390828, 2.58 ) }
    dend_2 { pt3dadd( -4.55238, 191.542, -0.489807, 2.58 ) }
    dend_2 { pt3dadd( -4.74433, 192.997, -0.495837, 2.58 ) }
    dend_2 { pt3dadd( -4.87029, 194.083, -0.499778, 2.58 ) }
    dend_2 { pt3dadd( -4.96776, 195.067, -0.526699, 1.99 ) }
    dend_2 { pt3dadd( -5.01149, 196.156, -0.5727, 0.88 ) }
    dend_2 { pt3dadd( -4.99191, 196.817, -0.635262, 0.88 ) }
    dend_2 { pt3dadd( -4.88156, 197.805, -0.778075, 0.88 ) }
    dend_2 { pt3dadd( -4.71455, 198.825, -0.983513, 0.88 ) }
    dend_2 { pt3dadd( -4.50259, 199.88, -1.23257, 1.33 ) }
    dend_2 { pt3dadd( -4.1683, 201.42, -1.62456, 1.77 ) }
    dend_2 { pt3dadd( -3.83507, 202.829, -1.98656, 1.55 ) }
    dend_2 { pt3dadd( -3.47926, 204.164, -2.30635, 1.47 ) }
    dend_2 { pt3dadd( -3.24126, 205.014, -2.47319, 1.11 ) }
    dend_2 { pt3dadd( -3.01787, 205.872, -2.63841, 1.11 ) }
    dend_2 { pt3dadd( -2.86904, 206.713, -2.77703, 1.03 ) }
    dend_2 { pt3dadd( -2.82477, 207.741, -2.9281, 0.96 ) }
    dend_2 { pt3dadd( -2.92571, 209.16, -3.06778, 0.96 ) }
    dend_2 { pt3dadd( -3.06809, 210.122, -3.15282, 0.96 ) }
    dend_2 { pt3dadd( -3.39874, 211.691, -3.24271, 1.33 ) }
    dend_2 { pt3dadd( -3.74147, 212.948, -3.30365, 1.69 ) }
    dend_2 { pt3dadd( -4.19069, 214.224, -3.29529, 1.69 ) }
    dend_2 { pt3dadd( -4.71674, 215.509, -3.2178, 1.69 ) }
    dend_2 { pt3dadd( -4.74777, 215.582, -3.21104, 1.69 ) }
    dend_2 { pt3dadd( -5.15754, 216.733, -3.06833, 1.69 ) }
    dend_2 { pt3dadd( -5.24517, 217.039, -3.00578, 1.69 ) }
    dend_2 { pt3dadd( -5.53909, 218.895, -2.61978, 1.69 ) }
    dend_2 { pt3dadd( -5.54538, 219.855, -2.43582, 1.4 ) }
    dend_2 { pt3dadd( -5.41428, 220.887, -2.28378, 0.74 ) }
    dend_2 { pt3dadd( -5.30762, 221.43, -2.22667, 0.96 ) }
    dend_2 { pt3dadd( -5.18303, 221.875, -2.20135, 0.96 ) }
    dend_2 { pt3dadd( -4.98392, 222.55, -2.19861, 0.88 ) }
    dend_2 { pt3dadd( -4.85592, 222.939, -2.22736, 0.88 ) }
    dend_2 { pt3dadd( -4.72631, 223.604, -2.26751, 0.81 ) }
    dend_2 { pt3dadd( -4.69776, 224.334, -2.20884, 0.81 ) }
    dend_2 { pt3dadd( -4.73803, 224.744, -2.17748, 0.81 ) }
    dend_2 { pt3dadd( -4.91442, 225.64, -2.11529, 1.11 ) }
    dend_2 { pt3dadd( -5.09617, 226.321, -2.07207, 1.11 ) }
    dend_2 { pt3dadd( -5.32274, 227.092, -2.02828, 1.25 ) }
    dend_2 { pt3dadd( -5.83298, 228.751, -1.94357, 1.25 ) }
    dend_2 { pt3dadd( -6.24397, 230.155, -1.88571, 1.33 ) }
    dend_2 { pt3dadd( -6.54226, 231.301, -1.84813, 1.55 ) }
    dend_2 { pt3dadd( -6.74025, 232.172, -1.82644, 1.47 ) }
    dend_2 { pt3dadd( -6.9758, 233.425, -1.81298, 1.4 ) }
    dend_2 { pt3dadd( -7.09384, 234.299, -1.81635, 1.4 ) }
    dend_2 { pt3dadd( -7.29042, 236.591, -1.95681, 1.03 ) }
    dend_2 { pt3dadd( -7.3325, 237.886, -2.04044, 1.03 ) }
    dend_2 { pt3dadd( -7.28965, 239.507, -2.18803, 1.03 ) }
    dend_2 { pt3dadd( -7.20854, 240.525, -2.3044, 1.03 ) }
    dend_2 { pt3dadd( -7.08678, 241.774, -2.47399, 1.03 ) }
    dend_2 { pt3dadd( -7.00072, 243.326, -2.70786, 1.69 ) }
    dend_2 { pt3dadd( -7.04548, 244.548, -2.90593, 2.28 ) }
    dend_2 { pt3dadd( -7.19941, 245.457, -2.97929, 2.8 ) }
    dend_2 { pt3dadd( -7.30025, 245.794, -2.94545, 3.46 ) }
    dend_2 { pt3dadd( -7.83068, 247.2, -2.5986, 3.46 ) }
    dend_2 { pt3dadd( -8.56021, 249.004, -2.00144, 3.17 ) }
    dend_2 { pt3dadd( -9.0703, 250.219, -1.55536, 1.99 ) }
    dend_2 { pt3dadd( -9.80332, 251.947, -0.918508, 1.99 ) }
    dend_2 { pt3dadd( -10.584, 253.846, -0.244373, 1.18 ) }
    dend_2 { pt3dadd( -11.034, 255.147, 0.143252, 1.18 ) }
    dend_2 { pt3dadd( -11.4645, 257.116, 0.602461, 1.18 ) }
    dend_2 { pt3dadd( -11.6077, 258.359, 0.8063, 1.18 ) }
    dend_2 { pt3dadd( -11.6235, 258.631, 0.83278, 1.18 ) }
    dend_2 { pt3dadd( -11.6515, 259.556, 0.840576, 1.18 ) }
    dend_2 { pt3dadd( -11.751, 261.889, 0.750426, 0.81 ) }
    dend_2 { pt3dadd( -11.8543, 263.752, 0.712374, 0.81 ) }
    dend_2 { pt3dadd( -11.8696, 264.003, 0.713022, 0.81 ) }
    dend_2 { pt3dadd( -11.9592, 265.073, 0.74208, 0.88 ) }
    dend_2 { pt3dadd( -12.075, 266.2, 0.814548, 0.88 ) }
    dend_2 { pt3dadd( -12.1885, 267.413, 0.99905, 0.96 ) }
    dend_2 { pt3dadd( -12.2211, 268.194, 1.20911, 1.33 ) }
    dend_2 { pt3dadd( -12.2207, 268.316, 1.24809, 1.33 ) }
    dend_2 { pt3dadd( -12.1089, 269.166, 1.53333, 1.69 ) }
    dend_2 { pt3dadd( -11.7566, 270.576, 2.0026, 1.69 ) }
    dend_2 { pt3dadd( -11.339, 271.958, 2.48175, 1.55 ) }
    dend_2 { pt3dadd( -11.004, 273.117, 2.86496, 1.47 ) }
    dend_2 { pt3dadd( -10.9718, 273.277, 2.9115, 1.47 ) }
    dend_2 { pt3dadd( -10.842, 274.418, 3.18914, 1.4 ) }
    dend_2 { pt3dadd( -10.8467, 275.305, 3.34423, 1.25 ) }
    dend_2 { pt3dadd( -10.981, 276.254, 3.48814, 1.25 ) }
    dend_2 { pt3dadd( -11.1982, 277.528, 3.66482, 1.69 ) }
    dend_2 { pt3dadd( -11.3392, 278.569, 3.82286, 1.92 ) }
    dend_2 { pt3dadd( -11.3697, 278.987, 3.89232, 1.92 ) }
    dend_2 { pt3dadd( -11.4053, 280.15, 4.1013, 1.92 ) }
    dend_2 { pt3dadd( -11.4294, 282.02, 4.44815, 1.47 ) }
    dend_2 { pt3dadd( -11.401, 283.51, 4.73036, 1.11 ) }
    dend_2 { pt3dadd( -11.3736, 284.761, 4.95074, 0.74 ) }
    dend_2 { pt3dadd( -11.3735, 285.43, 5.03359, 0.74 ) }
    dend_2 { pt3dadd( -11.3957, 286.081, 5.07424, 0.74 ) }
    dend_2 { pt3dadd( -11.5145, 287.581, 5.0584, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( -11.5271, 287.662, 5.05086, 0.74 ) }
    dend_2 { pt3dadd( -11.9211, 289.504, 4.77289, 0.74 ) }
    dend_2 { pt3dadd( -12.1562, 290.502, 4.58638, 1.03 ) }
    dend_2 { pt3dadd( -12.3443, 291.386, 4.38234, 1.4 ) }
    dend_2 { pt3dadd( -12.4322, 291.898, 4.25378, 1.4 ) }
    dend_2 { pt3dadd( -12.596, 293.131, 3.94045, 1.4 ) }
    dend_2 { pt3dadd( -12.8095, 294.517, 3.60144, 1.11 ) }
    dend_2 { pt3dadd( -12.9492, 295.261, 3.43, 1.11 ) }
    dend_2 { pt3dadd( -13.2308, 296.628, 3.16398, 0.74 ) }
    dend_2 { pt3dadd( -13.47, 297.709, 2.974, 0.74 ) }
    dend_2 { pt3dadd( -13.6887, 298.691, 2.82362, 0.88 ) }
    dend_2 { pt3dadd( -13.8941, 299.707, 2.70693, 1.03 ) }
    dend_2 { pt3dadd( -14.0546, 300.648, 2.66052, 1.03 ) }
    dend_2 { pt3dadd( -14.1768, 301.569, 2.6415, 1.03 ) }
    dend_2 { pt3dadd( -14.2556, 302.389, 2.6532, 1.03 ) }
    dend_2 { pt3dadd( -14.2618, 302.472, 2.65459, 1.03 ) }
    dend_2 { pt3dadd( -14.3126, 303.489, 2.67377, 1.03 ) }
    dend_2 { pt3dadd( -14.3273, 304.829, 2.70061, 1.33 ) }
    dend_2 { pt3dadd( -14.2958, 306.016, 2.72512, 1.77 ) }
    dend_2 { pt3dadd( -14.2242, 307.411, 2.75444, 2.06 ) }
    dend_2 { pt3dadd( -14.1479, 308.489, 2.79888, 1.84 ) }
    dend_2 { pt3dadd( -14.0828, 309.158, 2.83861, 1.84 ) }
    dend_2 { pt3dadd( -13.918, 310.411, 2.93511, 1.84 ) }
    dend_2 { pt3dadd( -13.7909, 311.3, 3.04938, 1.47 ) }
    dend_2 { pt3dadd( -13.7392, 311.868, 3.14591, 1.47 ) }
    dend_2 { pt3dadd( -13.6984, 312.999, 3.35742, 1.33 ) }
    dend_2 { pt3dadd( -13.6978, 313.743, 3.49462, 1.33 ) }
    dend_2 { pt3dadd( -13.7326, 314.812, 3.68846, 1.03 ) }
    dend_2 { pt3dadd( -13.8373, 316.439, 3.97158, 0.74 ) }
    dend_2 { pt3dadd( -13.9838, 318.59, 4.34656, 0.59 ) }
    dend_2 { pt3dadd( -14.088, 320.582, 4.6751, 0.59 ) }
    dend_2 { pt3dadd( -14.1235, 321.965, 4.87774, 0.59 ) }
    dend_2 { pt3dadd( -14.1222, 322.036, 4.88782, 0.59 ) }
    dend_2 { pt3dadd( -14.0496, 322.742, 4.97766, 0.59 ) }
    dend_2 { pt3dadd( -13.8057, 323.728, 5.06772, 0.81 ) }
    dend_2 { pt3dadd( -13.4625, 324.589, 5.15063, 0.81 ) }
    dend_2 { pt3dadd( -13.2583, 325.049, 5.19588, 1.18 ) }
    dend_2 { pt3dadd( -12.8898, 325.878, 5.26835, 1.55 ) }
    dend_2 { pt3dadd( -12.6387, 326.595, 5.31567, 1.99 ) }
    dend_2 { pt3dadd( -12.4396, 327.502, 5.3517, 1.99 ) }
    dend_2 { pt3dadd( -12.3914, 327.983, 5.36215, 1.62 ) }
    dend_2 { pt3dadd( -12.3644, 328.822, 5.38863, 1.18 ) }
    dend_2 { pt3dadd( -12.3618, 329.259, 5.40578, 0.74 ) }
    dend_2 { pt3dadd( -12.3913, 330.508, 5.44237, 0.74 ) }
    dend_2 { pt3dadd( -12.418, 331.439, 5.46703, 0.74 ) }
    dend_2 { pt3dadd( -12.435, 332.034, 5.48077, 0.59 ) }
    dend_2 { pt3dadd( -12.4464, 332.711, 5.49359, 0.59 ) }
    dend_2 { pt3dadd( -12.4449, 333.406, 5.50395, 0.59 ) }
    dend_2 { pt3dadd( -12.3927, 335.239, 5.52304, 0.59 ) }
    dend_2 { pt3dadd( -12.3582, 335.656, 5.52514, 0.66 ) }
    dend_2 { pt3dadd( -12.282, 336.438, 5.52421, 0.81 ) }
    dend_2 { pt3dadd( -12.1849, 337.436, 5.51595, 0.88 ) }
    dend_2 { pt3dadd( -12.1316, 337.897, 5.55167, 0.96 ) }
    dend_2 { pt3dadd( -12.0215, 338.616, 5.67495, 1.18 ) }
    dend_2 { pt3dadd( -11.8758, 339.242, 5.85472, 1.4 ) }
    dend_2 { pt3dadd( -11.6992, 339.869, 6.08425, 1.4 ) }
    dend_2 { pt3dadd( -11.4493, 340.599, 6.42854, 1.4 ) }
    dend_2 { pt3dadd( -10.9065, 341.987, 7.23152, 1.4 ) }
    dend_2 { pt3dadd( -10.7909, 342.282, 7.41854, 1.33 ) }
    dend_2 { pt3dadd( -10.7717, 342.337, 7.45531, 1.33 ) }
    dend_2 { pt3dadd( -10.622, 342.83, 7.78109, 1.33 ) }
    dend_2 { pt3dadd( -10.5972, 342.96, 7.84973, 1.33 ) }
    dend_2 { pt3dadd( -10.593, 343.535, 8.00694, 1.18 ) }
    dend_2 { pt3dadd( -10.6475, 344.062, 8.07476, 1.11 ) }
    dend_2 { pt3dadd( -10.7296, 344.651, 8.14051, 1.03 ) }
    dend_2 { pt3dadd( -10.7581, 344.819, 8.15831, 1.03 ) }
    dend_2 { pt3dadd( -10.9655, 345.945, 8.16427, 1.03 ) }
    dend_2 { pt3dadd( -11.1188, 347.116, 8.09067, 1.03 ) }
    dend_2 { pt3dadd( -11.1687, 348.008, 7.89085, 1.03 ) }
    dend_2 { pt3dadd( -11.0917, 349.069, 7.50782, 1.03 ) }
    dend_2 { pt3dadd( -10.9695, 349.707, 7.21921, 1.03 ) }
    dend_2 { pt3dadd( -10.5244, 351.383, 6.1421, 0.74 ) }
    dend_2 { pt3dadd( -10.2439, 352.166, 5.54249, 0.74 ) }
    dend_2 { pt3dadd( -9.63603, 353.525, 4.33179, 1.18 ) }
    dend_2 { pt3dadd( -9.30124, 354.191, 3.66204, 1.47 ) }
    dend_2 { pt3dadd( -8.90211, 354.942, 2.85692, 1.92 ) }
    dend_2 { pt3dadd( -8.17381, 356.378, 1.39661, 0.29 ) }
    // Section: dend_116, id: dend_116, parent: dend_114 (entry count 77/100)
    dend_116 { pt3dclear() }
    dend_116 { pt3dadd( 91.0297, -174.127, -165.355, 0.96 ) }
    dend_116 { pt3dadd( 91.4969, -175.806, -165.651, 0.96 ) }
    dend_116 { pt3dadd( 91.8774, -176.989, -165.815, 0.81 ) }
    dend_116 { pt3dadd( 91.906, -177.065, -165.831, 0.81 ) }
    dend_116 { pt3dadd( 92.7319, -179.096, -166.327, 0.81 ) }
    dend_116 { pt3dadd( 93.0626, -179.812, -166.51, 0.96 ) }
    dend_116 { pt3dadd( 93.4729, -180.601, -166.713, 1.03 ) }
    dend_116 { pt3dadd( 93.8658, -181.263, -166.845, 1.03 ) }
    dend_116 { pt3dadd( 94.7584, -182.486, -167.128, 0.96 ) }
    dend_116 { pt3dadd( 94.8102, -182.55, -167.145, 0.96 ) }
    dend_116 { pt3dadd( 95.4356, -183.142, -167.645, 0.96 ) }
    dend_116 { pt3dadd( 95.6743, -183.406, -168.12, 0.52 ) }
    dend_116 { pt3dadd( 95.7336, -183.513, -168.628, 0.52 ) }
    dend_116 { pt3dadd( 95.7375, -183.529, -168.712, 0.52 ) }
    dend_116 { pt3dadd( 95.755, -183.69, -169.434, 0.52 ) }
    dend_116 { pt3dadd( 95.8649, -184.681, -173.282, 1.03 ) }
    dend_116 { pt3dadd( 95.8935, -184.942, -174.211, 1.03 ) }
    dend_116 { pt3dadd( 96.0644, -186.203, -178.359, 0.74 ) }
    dend_116 { pt3dadd( 96.1351, -186.521, -179.325, 0.74 ) }
    dend_116 { pt3dadd( 96.2724, -186.896, -180.316, 0.74 ) }
    dend_116 { pt3dadd( 96.4548, -187.216, -180.961, 0.74 ) }
    dend_116 { pt3dadd( 96.7406, -187.591, -181.289, 1.03 ) }
    dend_116 { pt3dadd( 96.7989, -187.648, -181.311, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_116 { pt3dadd( 97.2659, -187.972, -181.283, 1.18 ) }
    dend_116 { pt3dadd( 97.7957, -188.217, -181.274, 1.18 ) }
    dend_116 { pt3dadd( 98.5759, -188.491, -181.283, 0.66 ) }
    dend_116 { pt3dadd( 99.1236, -188.642, -181.297, 0.81 ) }
    dend_116 { pt3dadd( 99.9296, -188.859, -181.326, 1.4 ) }
    dend_116 { pt3dadd( 101.583, -189.312, -181.401, 1.77 ) }
    dend_116 { pt3dadd( 102.799, -189.655, -181.477, 0.88 ) }
    dend_116 { pt3dadd( 102.91, -189.689, -181.489, 0.88 ) }
    dend_116 { pt3dadd( 103.309, -189.823, -181.55, 0.74 ) }
    dend_116 { pt3dadd( 104.259, -190.12, -181.688, 0.74 ) }
    dend_116 { pt3dadd( 104.077, -190.169, -181.728, 0.74 ) }
    dend_116 { pt3dadd( 103.862, -190.34, -181.88, 0.74 ) }
    dend_116 { pt3dadd( 103.252, -190.884, -182.351, 0.74 ) }
    dend_116 { pt3dadd( 102.809, -191.323, -182.753, 0.96 ) }
    dend_116 { pt3dadd( 102.165, -192.02, -183.384, 0.96 ) }
    dend_116 { pt3dadd( 102.06, -192.134, -183.491, 0.96 ) }
    dend_116 { pt3dadd( 101.431, -192.934, -184.202, 0.96 ) }
    dend_116 { pt3dadd( 101.11, -193.438, -184.615, 0.96 ) }
    dend_116 { pt3dadd( 100.823, -194.148, -185.105, 0.59 ) }
    dend_116 { pt3dadd( 100.737, -194.716, -185.416, 0.59 ) }
    dend_116 { pt3dadd( 100.747, -194.78, -185.438, 0.59 ) }
    dend_116 { pt3dadd( 100.931, -195.214, -185.499, 0.81 ) }
    dend_116 { pt3dadd( 101.023, -195.354, -185.492, 0.81 ) }
    dend_116 { pt3dadd( 101.398, -195.813, -185.431, 0.81 ) }
    dend_116 { pt3dadd( 101.993, -196.439, -185.303, 0.81 ) }
    dend_116 { pt3dadd( 103.046, -197.459, -185.074, 0.81 ) }
    dend_116 { pt3dadd( 103.782, -198.139, -184.914, 0.66 ) }
    dend_116 { pt3dadd( 104.362, -198.641, -184.788, 0.96 ) }
    dend_116 { pt3dadd( 104.426, -198.694, -184.774, 0.96 ) }
    dend_116 { pt3dadd( 104.941, -199.1, -184.671, 0.96 ) }
    // Section: dend_115, id: dend_115, parent: dend_114 (entry count 30/100)
    dend_115 { pt3dclear() }
    dend_115 { pt3dadd( 91.0297, -174.127, -165.355, 0.44 ) }
    dend_115 { pt3dadd( 90.1915, -175.284, -165.582, 0.44 ) }
    dend_115 { pt3dadd( 89.7618, -175.856, -165.698, 0.44 ) }
    dend_115 { pt3dadd( 89.7017, -175.924, -165.713, 0.44 ) }
    dend_115 { pt3dadd( 88.7118, -176.987, -165.963, 0.66 ) }
    dend_115 { pt3dadd( 88.0563, -177.69, -166.129, 0.22 ) }
    dend_115 { pt3dadd( 87.543, -178.241, -166.259, 0.22 ) }
    dend_115 { pt3dadd( 87.4573, -178.33, -166.28, 0.22 ) }
    dend_115 { pt3dadd( 86.3833, -179.364, -166.545, 0.22 ) }
    dend_115 { pt3dadd( 85.6042, -180.065, -166.734, 0.96 ) }
    // Section: dend_103, id: dend_103, parent: dend_101 (entry count 40/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 32.5408, -159.165, 25.1305, 0.66 ) }
    dend_103 { pt3dadd( 32.576, -159.444, 25.0742, 0.66 ) }
    dend_103 { pt3dadd( 32.6042, -160.135, 24.9854, 0.66 ) }
    dend_103 { pt3dadd( 32.7086, -160.854, 24.8262, 0.66 ) }
    dend_103 { pt3dadd( 32.8224, -161.257, 24.6946, 0.66 ) }
    dend_103 { pt3dadd( 32.879, -161.419, 24.6339, 0.59 ) }
    dend_103 { pt3dadd( 33.0584, -161.842, 24.4637, 0.52 ) }
    dend_103 { pt3dadd( 33.3532, -162.411, 24.2001, 0.52 ) }
    dend_103 { pt3dadd( 33.9302, -163.291, 23.7489, 0.52 ) }
    dend_103 { pt3dadd( 34.4511, -163.907, 23.447, 0.52 ) }
    dend_103 { pt3dadd( 34.4752, -163.932, 23.4348, 0.52 ) }
    dend_103 { pt3dadd( 34.7817, -164.234, 23.299, 0.52 ) }
    dend_103 { pt3dadd( 34.9983, -164.42, 23.2107, 0.88 ) }
    dend_103 { pt3dadd( 35.188, -164.568, 23.1463, 0.88 ) }
    dend_103 { pt3dadd( 35.6218, -164.977, 23.1134, 0.37 ) }
    dend_103 { pt3dadd( 35.8665, -165.257, 23.1466, 0.37 ) }
    dend_103 { pt3dadd( 35.9606, -165.379, 23.1637, 1.33 ) }
    // Section: dend_102, id: dend_102, parent: dend_101 (entry count 57/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 32.5408, -159.165, 25.1305, 0.29 ) }
    dend_102 { pt3dadd( 31.7883, -159.754, 24.9073, 0.29 ) }
    dend_102 { pt3dadd( 31.2542, -160.171, 24.7489, 0.74 ) }
    dend_102 { pt3dadd( 30.1493, -161.035, 24.4212, 0.37 ) }
    dend_102 { pt3dadd( 28.7749, -162.11, 24.0135, 0.44 ) }
    dend_102 { pt3dadd( 27.5044, -163.103, 23.6367, 1.33 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 63/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -47.5872, -202.211, 9.09895, 1.47 ) }
    dend_85 { pt3dadd( -48.3008, -204.337, 10.073, 1.47 ) }
    dend_85 { pt3dadd( -48.7412, -205.628, 10.6634, 1.47 ) }
    dend_85 { pt3dadd( -49.1778, -206.928, 11.2359, 1.47 ) }
    dend_85 { pt3dadd( -49.5985, -208.258, 11.7856, 1.47 ) }
    dend_85 { pt3dadd( -50.1384, -210.142, 12.5125, 1.18 ) }
    dend_85 { pt3dadd( -50.3315, -210.817, 12.7724, 0.88 ) }
    dend_85 { pt3dadd( -50.4628, -211.277, 12.9201, 1.18 ) }
    dend_85 { pt3dadd( -50.6517, -211.983, 13.1818, 1.18 ) }
    dend_85 { pt3dadd( -50.8283, -212.801, 13.5152, 1.18 ) }
    dend_85 { pt3dadd( -50.9221, -213.55, 13.7793, 1.18 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 74/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -47.5872, -202.211, 9.09895, 0.22 ) }
    dend_84 { pt3dadd( -46.0856, -202.133, 9.73429, 0.22 ) }
    dend_84 { pt3dadd( -46.0432, -202.134, 9.7506, 0.22 ) }
    dend_84 { pt3dadd( -44.8565, -202.198, 10.1508, 0.22 ) }
    dend_84 { pt3dadd( -44.3826, -202.224, 10.3106, 0.22 ) }
    dend_84 { pt3dadd( -44.2216, -202.233, 10.3649, 0.22 ) }
    dend_84 { pt3dadd( -43.741, -202.258, 10.5269, 0.22 ) }
    dend_84 { pt3dadd( -43.0727, -202.275, 10.7577, 0.22 ) }
    dend_84 { pt3dadd( -42.475, -202.325, 10.9313, 0.22 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 83/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -114.763, -136.773, 66.3979, 0.59 ) }
    dend_80 { pt3dadd( -115.325, -137.634, 67.3023, 0.59 ) }
    dend_80 { pt3dadd( -116.264, -139.073, 68.8156, 3.0 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 86/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -114.763, -136.773, 66.3979, 0.44 ) }
    dend_79 { pt3dadd( -116.094, -137.019, 66.6067, 0.44 ) }
    dend_79 { pt3dadd( -116.177, -137.028, 66.6111, 0.44 ) }
    dend_79 { pt3dadd( -117.268, -137.089, 66.5918, 1.5 ) }
    dend_79 { pt3dadd( -119.61, -137.165, 66.4392, 0.37 ) }
    dend_79 { pt3dadd( -120.438, -137.173, 66.3501, 0.37 ) }
    dend_79 { pt3dadd( -121.481, -137.163, 66.2013, 0.37 ) }
    dend_79 { pt3dadd( -122.95, -137.083, 65.9129, 0.37 ) }
    dend_79 { pt3dadd( -123.661, -137.034, 65.7328, 0.37 ) }
    dend_79 { pt3dadd( -124.066, -136.993, 65.5904, 0.74 ) }
    dend_79 { pt3dadd( -124.716, -136.918, 65.2663, 0.74 ) }
    dend_79 { pt3dadd( -125.214, -136.857, 65.0164, 0.52 ) }
    dend_79 { pt3dadd( -126.087, -136.745, 64.5774, 0.37 ) }
    dend_79 { pt3dadd( -126.158, -136.736, 64.5419, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_79 { pt3dadd( -126.694, -136.626, 64.2123, 0.37 ) }
    dend_79 { pt3dadd( -127.609, -136.277, 63.4822, 0.37 ) }
    dend_79 { pt3dadd( -127.639, -136.247, 63.4244, 0.37 ) }
    dend_79 { pt3dadd( -127.701, -135.966, 62.9392, 0.37 ) }
    dend_79 { pt3dadd( -127.689, -135.675, 62.4558, 0.37 ) }
    dend_79 { pt3dadd( -127.58, -135.041, 61.3452, 0.52 ) }
    dend_79 { pt3dadd( -127.448, -134.665, 60.6723, 0.52 ) }
    dend_79 { pt3dadd( -127.035, -133.858, 59.2092, 1.25 ) }
    dend_79 { pt3dadd( -126.857, -133.543, 58.6112, 1.25 ) }
    dend_79 { pt3dadd( -126.76, -133.396, 58.3028, 1.99 ) }
    dend_79 { pt3dadd( -126.624, -133.186, 57.8141, 1.99 ) }
    dend_79 { pt3dadd( -126.399, -132.585, 56.4622, 1.99 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 12/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -227.254, -81.5639, -0.127043, 0.59 ) }
    dend_71 { pt3dadd( -228.334, -81.9149, -0.864427, 0.59 ) }
    dend_71 { pt3dadd( -228.644, -82.0563, -1.06385, 0.74 ) }
    dend_71 { pt3dadd( -229.384, -82.4426, -1.53156, 1.18 ) }
    dend_71 { pt3dadd( -229.706, -82.6405, -1.73785, 1.18 ) }
    dend_71 { pt3dadd( -230.007, -82.8472, -1.93254, 1.18 ) }
    dend_71 { pt3dadd( -230.81, -83.5182, -2.63779, 0.66 ) }
    dend_71 { pt3dadd( -231.151, -83.9717, -3.07667, 0.66 ) }
    dend_71 { pt3dadd( -231.2, -84.0417, -3.14703, 0.66 ) }
    dend_71 { pt3dadd( -231.463, -84.4144, -3.51556, 0.52 ) }
    dend_71 { pt3dadd( -231.491, -84.4471, -3.55249, 0.52 ) }
    dend_71 { pt3dadd( -232.407, -85.4617, -4.85408, 0.88 ) }
    dend_71 { pt3dadd( -232.513, -85.5655, -5.0121, 0.74 ) }
    dend_71 { pt3dadd( -233.115, -86.024, -5.8701, 0.37 ) }
    dend_71 { pt3dadd( -233.354, -86.1694, -6.16284, 0.96 ) }
    dend_71 { pt3dadd( -233.842, -86.3819, -6.64588, 0.96 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 28/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -227.254, -81.5639, -0.127043, 0.37 ) }
    dend_70 { pt3dadd( -227.121, -82.5604, -0.0818043, 0.37 ) }
    dend_70 { pt3dadd( -227.045, -83.1343, -0.0557458, 0.37 ) }
    dend_70 { pt3dadd( -226.929, -84.0042, -0.0162599, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 32/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -78.4525, -35.2452, -26.9511, 0.66 ) }
    dend_67 { pt3dadd( -79.391, -35.6849, -27.4769, 0.66 ) }
    dend_67 { pt3dadd( -79.5843, -35.7578, -27.5761, 0.66 ) }
    dend_67 { pt3dadd( -80.1911, -35.905, -27.8416, 0.88 ) }
    dend_67 { pt3dadd( -81.1425, -36.0669, -28.196, 0.52 ) }
    dend_67 { pt3dadd( -81.9135, -36.1742, -28.4485, 0.52 ) }
    dend_67 { pt3dadd( -83.4502, -36.4166, -28.9866, 1.47 ) }
    dend_67 { pt3dadd( -84.4336, -36.5885, -29.3589, 1.11 ) }
    dend_67 { pt3dadd( -85.8185, -36.8404, -29.855, 0.37 ) }
    dend_67 { pt3dadd( -87.0925, -37.0728, -30.2756, 0.37 ) }
    dend_67 { pt3dadd( -88.2264, -37.2792, -30.6095, 0.37 ) }
    dend_67 { pt3dadd( -89.5073, -37.5209, -30.9395, 0.37 ) }
    dend_67 { pt3dadd( -90.3651, -37.6893, -31.1148, 0.37 ) }
    dend_67 { pt3dadd( -91.2105, -37.892, -31.2826, 0.37 ) }
    dend_67 { pt3dadd( -92.0326, -38.0721, -31.4248, 1.03 ) }
    dend_67 { pt3dadd( -92.8368, -38.2315, -31.5407, 1.03 ) }
    dend_67 { pt3dadd( -93.6943, -38.3581, -31.6105, 0.52 ) }
    dend_67 { pt3dadd( -95.3149, -38.5062, -31.6653, 0.52 ) }
    dend_67 { pt3dadd( -96.982, -38.6087, -31.7094, 0.52 ) }
    dend_67 { pt3dadd( -98.1143, -38.6571, -31.7536, 0.52 ) }
    dend_67 { pt3dadd( -98.9762, -38.6683, -31.8037, 0.52 ) }
    dend_67 { pt3dadd( -100.654, -38.6687, -31.9302, 2.0 ) }
    dend_67 { pt3dadd( -101.978, -38.6725, -32.0588, 2.0 ) }
    dend_67 { pt3dadd( -103.016, -38.694, -32.1849, 1.8 ) }
    dend_67 { pt3dadd( -104.357, -38.7861, -32.3976, 0.44 ) }
    dend_67 { pt3dadd( -105.841, -38.9595, -32.6838, 0.44 ) }
    dend_67 { pt3dadd( -106.481, -39.0454, -32.8321, 0.74 ) }
    dend_67 { pt3dadd( -108.087, -39.3582, -33.2722, 0.74 ) }
    dend_67 { pt3dadd( -109.199, -39.6166, -33.5776, 0.44 ) }
    dend_67 { pt3dadd( -110.124, -39.8538, -33.8223, 0.52 ) }
    dend_67 { pt3dadd( -110.756, -40.0339, -33.9759, 0.81 ) }
    dend_67 { pt3dadd( -111.571, -40.2822, -34.1645, 0.52 ) }
    dend_67 { pt3dadd( -112.544, -40.5707, -34.369, 0.59 ) }
    dend_67 { pt3dadd( -113.382, -40.8122, -34.5168, 0.59 ) }
    dend_67 { pt3dadd( -114.316, -41.0777, -34.6958, 0.59 ) }
    dend_67 { pt3dadd( -115.05, -41.2902, -34.8525, 0.59 ) }
    dend_67 { pt3dadd( -115.831, -41.5371, -35.0455, 0.59 ) }
    dend_67 { pt3dadd( -116.746, -41.8222, -35.2987, 0.59 ) }
    dend_67 { pt3dadd( -117.879, -42.1513, -35.6864, 0.59 ) }
    dend_67 { pt3dadd( -118.987, -42.4772, -36.1116, 0.52 ) }
    dend_67 { pt3dadd( -119.62, -42.6363, -36.3703, 0.52 ) }
    dend_67 { pt3dadd( -120.213, -42.7615, -36.646, 0.52 ) }
    dend_67 { pt3dadd( -121.142, -42.9282, -37.1135, 0.81 ) }
    dend_67 { pt3dadd( -122.461, -43.1282, -37.7328, 0.37 ) }
    dend_67 { pt3dadd( -123.185, -43.2177, -38.0467, 0.37 ) }
    dend_67 { pt3dadd( -124.189, -43.3864, -38.4647, 0.37 ) }
    dend_67 { pt3dadd( -125.417, -43.6381, -38.9802, 1.4 ) }
    dend_67 { pt3dadd( -125.511, -43.6597, -39.0179, 1.4 ) }
    dend_67 { pt3dadd( -126.842, -44.0491, -39.5564, 1.69 ) }
    dend_67 { pt3dadd( -128.355, -44.5396, -40.1425, 0.37 ) }
    dend_67 { pt3dadd( -130.57, -45.3088, -40.9852, 0.44 ) }
    dend_67 { pt3dadd( -131.94, -45.8382, -41.5446, 0.44 ) }
    dend_67 { pt3dadd( -132.865, -46.2007, -41.9287, 0.44 ) }
    dend_67 { pt3dadd( -134.859, -47.0098, -42.7862, 0.44 ) }
    dend_67 { pt3dadd( -134.997, -47.0684, -42.847, 0.44 ) }
    dend_67 { pt3dadd( -135.955, -47.4782, -43.2417, 0.44 ) }
    dend_67 { pt3dadd( -137.992, -48.3069, -44.0214, 0.44 ) }
    dend_67 { pt3dadd( -139.85, -49.0664, -44.7184, 0.44 ) }
    dend_67 { pt3dadd( -141.115, -49.5611, -45.1559, 0.44 ) }
    dend_67 { pt3dadd( -142.052, -49.8989, -45.4741, 0.74 ) }
    dend_67 { pt3dadd( -142.637, -50.1113, -45.6756, 0.52 ) }
    dend_67 { pt3dadd( -143.58, -50.4568, -45.9793, 0.52 ) }
    dend_67 { pt3dadd( -144.171, -50.665, -46.1567, 0.96 ) }
    dend_67 { pt3dadd( -145.236, -51.0264, -46.5634, 1.33 ) }
    dend_67 { pt3dadd( -146.482, -51.3983, -47.0839, 1.18 ) }
    dend_67 { pt3dadd( -148.293, -51.891, -47.7981, 0.52 ) }
    dend_67 { pt3dadd( -149.933, -52.3298, -48.435, 0.52 ) }
    dend_67 { pt3dadd( -151.943, -52.8577, -49.2243, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_67 { pt3dadd( -154.186, -53.4765, -50.1733, 0.66 ) }
    dend_67 { pt3dadd( -156.019, -54.0277, -51.0295, 0.66 ) }
    dend_67 { pt3dadd( -157.656, -54.5783, -51.8317, 0.44 ) }
    dend_67 { pt3dadd( -158.986, -55.0329, -52.54, 0.44 ) }
    dend_67 { pt3dadd( -159.242, -55.1272, -52.6897, 0.44 ) }
    dend_67 { pt3dadd( -160.737, -55.7894, -53.6318, 0.44 ) }
    dend_67 { pt3dadd( -161.682, -56.3694, -54.3235, 1.47 ) }
    dend_67 { pt3dadd( -162.201, -56.8992, -54.9955, 1.47 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 8/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -78.4525, -35.2452, -26.9511, 0.29 ) }
    dend_66 { pt3dadd( -78.1876, -36.3994, -27.0809, 0.29 ) }
    dend_66 { pt3dadd( -78.0496, -37.0009, -27.1486, 0.29 ) }
    dend_66 { pt3dadd( -77.9633, -37.377, -27.1909, 0.29 ) }
    dend_66 { pt3dadd( -77.758, -38.2715, -27.2915, 0.29 ) }
    dend_66 { pt3dadd( -77.5533, -39.1637, -27.3918, 1.11 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 14/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -97.4818, -21.4657, -37.4747, 1.18 ) }
    dend_64 { pt3dadd( -98.0779, -21.4663, -37.6934, 1.18 ) }
    dend_64 { pt3dadd( -98.6751, -21.4545, -37.9079, 1.11 ) }
    dend_64 { pt3dadd( -99.4905, -21.4234, -38.2001, 0.44 ) }
    dend_64 { pt3dadd( -100.316, -21.3744, -38.5036, 0.66 ) }
    dend_64 { pt3dadd( -101.371, -21.3045, -38.8996, 0.66 ) }
    dend_64 { pt3dadd( -102.414, -21.2304, -39.2968, 0.44 ) }
    dend_64 { pt3dadd( -103.218, -21.1629, -39.6225, 0.44 ) }
    dend_64 { pt3dadd( -104.087, -21.053, -39.9735, 0.44 ) }
    dend_64 { pt3dadd( -104.481, -20.9845, -40.1298, 0.44 ) }
    dend_64 { pt3dadd( -104.98, -20.8731, -40.3107, 1.11 ) }
    dend_64 { pt3dadd( -105.022, -20.861, -40.3268, 1.11 ) }
    dend_64 { pt3dadd( -105.406, -20.7622, -40.4995, 1.11 ) }
    dend_64 { pt3dadd( -105.96, -20.644, -40.7922, 0.37 ) }
    dend_64 { pt3dadd( -106.252, -20.5777, -40.9404, 0.37 ) }
    dend_64 { pt3dadd( -106.664, -20.4797, -41.1358, 0.37 ) }
    dend_64 { pt3dadd( -107.207, -20.3423, -41.3979, 0.37 ) }
    dend_64 { pt3dadd( -108.131, -20.1244, -41.8543, 0.74 ) }
    dend_64 { pt3dadd( -108.214, -20.1071, -41.897, 0.74 ) }
    dend_64 { pt3dadd( -109.04, -19.959, -42.3558, 1.18 ) }
    dend_64 { pt3dadd( -109.323, -19.9272, -42.542, 1.18 ) }
    dend_64 { pt3dadd( -109.842, -19.9211, -42.9149, 0.52 ) }
    dend_64 { pt3dadd( -109.872, -19.9264, -42.9418, 0.52 ) }
    dend_64 { pt3dadd( -110.137, -19.9984, -43.2066, 0.52 ) }
    dend_64 { pt3dadd( -110.168, -20.0073, -43.2401, 0.52 ) }
    dend_64 { pt3dadd( -110.822, -20.2373, -43.9751, 0.96 ) }
    dend_64 { pt3dadd( -111.198, -20.3339, -44.3489, 1.77 ) }
    dend_64 { pt3dadd( -111.875, -20.4361, -44.9017, 0.44 ) }
    dend_64 { pt3dadd( -111.908, -20.4386, -44.9249, 0.37 ) }
    dend_64 { pt3dadd( -112.835, -20.447, -45.5096, 0.37 ) }
    dend_64 { pt3dadd( -112.982, -20.4397, -45.5928, 0.66 ) }
    dend_64 { pt3dadd( -113.901, -20.3485, -46.0404, 0.66 ) }
    dend_64 { pt3dadd( -115.132, -20.209, -46.5996, 0.37 ) }
    dend_64 { pt3dadd( -115.798, -20.1026, -46.8305, 0.37 ) }
    dend_64 { pt3dadd( -116.331, -20.0071, -46.9925, 0.37 ) }
    dend_64 { pt3dadd( -116.958, -19.882, -47.1572, 0.44 ) }
    dend_64 { pt3dadd( -117.508, -19.7545, -47.2827, 0.81 ) }
    dend_64 { pt3dadd( -117.795, -19.6827, -47.344, 1.4 ) }
    dend_64 { pt3dadd( -119.155, -19.3178, -47.6785, 0.66 ) }
    dend_64 { pt3dadd( -119.824, -19.1358, -47.8271, 0.59 ) }
    dend_64 { pt3dadd( -120.748, -18.878, -48.0306, 0.52 ) }
    dend_64 { pt3dadd( -121.964, -18.539, -48.2943, 0.52 ) }
    dend_64 { pt3dadd( -122.508, -18.3955, -48.4151, 1.4 ) }
    dend_64 { pt3dadd( -123.21, -18.2271, -48.5821, 1.77 ) }
    dend_64 { pt3dadd( -125.095, -17.8692, -49.1229, 0.52 ) }
    dend_64 { pt3dadd( -125.553, -17.7802, -49.2505, 0.52 ) }
    dend_64 { pt3dadd( -125.896, -17.7245, -49.3426, 0.66 ) }
    dend_64 { pt3dadd( -126.389, -17.6559, -49.4655, 0.81 ) }
    dend_64 { pt3dadd( -127.179, -17.5552, -49.6375, 0.81 ) }
    dend_64 { pt3dadd( -127.785, -17.4909, -49.7774, 0.59 ) }
    dend_64 { pt3dadd( -128.502, -17.4593, -50.0453, 0.37 ) }
    dend_64 { pt3dadd( -128.867, -17.4375, -50.1847, 0.37 ) }
    dend_64 { pt3dadd( -129.272, -17.4122, -50.3692, 0.37 ) }
    dend_64 { pt3dadd( -129.312, -17.4102, -50.389, 0.37 ) }
    dend_64 { pt3dadd( -129.63, -17.4048, -50.5454, 0.81 ) }
    dend_64 { pt3dadd( -129.716, -17.3984, -50.5896, 1.18 ) }
    dend_64 { pt3dadd( -130.155, -17.3581, -50.8672, 1.18 ) }
    dend_64 { pt3dadd( -130.722, -17.2841, -51.2589, 0.74 ) }
    dend_64 { pt3dadd( -131.101, -17.2372, -51.518, 0.52 ) }
    dend_64 { pt3dadd( -131.439, -17.1933, -51.7407, 0.52 ) }
    dend_64 { pt3dadd( -132.391, -17.0711, -52.3422, 0.52 ) }
    dend_64 { pt3dadd( -133.136, -16.9644, -52.7968, 0.52 ) }
    dend_64 { pt3dadd( -133.749, -16.8587, -53.1456, 0.37 ) }
    dend_64 { pt3dadd( -134.337, -16.7352, -53.458, 0.37 ) }
    dend_64 { pt3dadd( -134.922, -16.5832, -53.718, 0.66 ) }
    dend_64 { pt3dadd( -135.262, -16.4838, -53.8437, 1.25 ) }
    dend_64 { pt3dadd( -135.839, -16.3028, -54.0126, 1.25 ) }
    dend_64 { pt3dadd( -136.819, -15.9408, -54.2148, 0.44 ) }
    dend_64 { pt3dadd( -137.475, -15.6646, -54.3221, 0.44 ) }
    dend_64 { pt3dadd( -138.823, -15.0496, -54.5157, 0.44 ) }
    dend_64 { pt3dadd( -139.234, -14.8605, -54.568, 1.25 ) }
    dend_64 { pt3dadd( -139.65, -14.6666, -54.6192, 2.06 ) }
    dend_64 { pt3dadd( -140.35, -14.341, -54.7213, 2.06 ) }
    dend_64 { pt3dadd( -140.736, -14.1677, -54.7947, 0.88 ) }
    dend_64 { pt3dadd( -141.693, -13.7589, -55.0133, 0.37 ) }
    dend_64 { pt3dadd( -142.881, -13.281, -55.3358, 0.37 ) }
    dend_64 { pt3dadd( -144.57, -12.6101, -55.8153, 0.37 ) }
    dend_64 { pt3dadd( -145.552, -12.2366, -56.1054, 0.37 ) }
    dend_64 { pt3dadd( -146.626, -11.8166, -56.4123, 0.37 ) }
    dend_64 { pt3dadd( -147.04, -11.6481, -56.5288, 0.81 ) }
    dend_64 { pt3dadd( -147.076, -11.6329, -56.5402, 0.81 ) }
    dend_64 { pt3dadd( -147.366, -11.5018, -56.6344, 1.4 ) }
    dend_64 { pt3dadd( -147.533, -11.4306, -56.6846, 1.4 ) }
    dend_64 { pt3dadd( -148.863, -10.9546, -57.0586, 1.18 ) }
    dend_64 { pt3dadd( -150.409, -10.4976, -57.5026, 0.59 ) }
    dend_64 { pt3dadd( -151.085, -10.345, -57.7089, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_64 { pt3dadd( -152.233, -10.1948, -58.0595, 0.44 ) }
    dend_64 { pt3dadd( -152.998, -10.152, -58.2978, 0.44 ) }
    dend_64 { pt3dadd( -153.914, -10.1564, -58.5985, 0.81 ) }
    dend_64 { pt3dadd( -154.188, -10.189, -58.7018, 1.33 ) }
    dend_64 { pt3dadd( -154.627, -10.2539, -58.8542, 1.62 ) }
    dend_64 { pt3dadd( -155.958, -10.316, -59.1325, 0.52 ) }
    dend_64 { pt3dadd( -156.492, -10.316, -59.2056, 0.52 ) }
    dend_64 { pt3dadd( -157.04, -10.2825, -59.2267, 1.03 ) }
    dend_64 { pt3dadd( -157.843, -10.1777, -59.1621, 1.4 ) }
    dend_64 { pt3dadd( -157.981, -10.1572, -59.1451, 1.4 ) }
    dend_64 { pt3dadd( -160.594, -9.69469, -58.6679, 0.59 ) }
    dend_64 { pt3dadd( -161.567, -9.48378, -58.3977, 0.37 ) }
    dend_64 { pt3dadd( -162.189, -9.3361, -58.1814, 0.37 ) }
    dend_64 { pt3dadd( -163.139, -9.08199, -57.7827, 1.11 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 14/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -97.4818, -21.4657, -37.4747, 0.59 ) }
    dend_63 { pt3dadd( -97.3674, -22.323, -37.334, 0.59 ) }
    dend_63 { pt3dadd( -97.4107, -23.0974, -37.2349, 0.52 ) }
    dend_63 { pt3dadd( -97.6358, -23.2239, -37.2596, 0.52 ) }
    dend_63 { pt3dadd( -97.6948, -23.241, -37.2686, 0.52 ) }
    dend_63 { pt3dadd( -98.1296, -23.3673, -37.3349, 0.52 ) }
    dend_63 { pt3dadd( -98.6405, -23.5158, -37.4129, 0.44 ) }
    dend_63 { pt3dadd( -98.9472, -23.5387, -37.4657, 0.44 ) }
    dend_63 { pt3dadd( -99.2858, -23.5342, -37.5397, 0.81 ) }
    dend_63 { pt3dadd( -99.3306, -23.531, -37.5507, 0.81 ) }
    // Section: dend_59, id: dend_59, parent: dend_47 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 42.377, 36.03, -23.8231, 0.29 ) }
    dend_59 { pt3dadd( 43.4448, 33.6726, -24.3467, 0.29 ) }
    dend_59 { pt3dadd( 43.9929, 32.4625, -24.6154, 0.29 ) }
    dend_59 { pt3dadd( 44.2394, 31.9183, -24.7362, 0.88 ) }
    dend_59 { pt3dadd( 44.2792, 31.8302, -24.7558, 0.88 ) }
    dend_59 { pt3dadd( 44.3191, 31.7422, -24.7754, 1.03 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 30/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 42.377, 36.03, -23.8231, 1.84 ) }
    dend_48 { pt3dadd( 44.4067, 36.1605, -24.1022, 1.84 ) }
    dend_48 { pt3dadd( 44.546, 36.1524, -24.0974, 1.84 ) }
    dend_48 { pt3dadd( 45.3133, 36.0646, -24.0351, 0.96 ) }
    dend_48 { pt3dadd( 46.3111, 35.9213, -23.947, 0.96 ) }
    dend_48 { pt3dadd( 47.9106, 35.6492, -23.7887, 0.44 ) }
    dend_48 { pt3dadd( 49.0306, 35.4755, -23.675, 1.25 ) }
    dend_48 { pt3dadd( 50.8302, 35.1983, -23.4106, 1.25 ) }
    dend_48 { pt3dadd( 51.8759, 35.0842, -23.2748, 1.62 ) }
    dend_48 { pt3dadd( 52.7496, 35.0228, -23.1769, 1.62 ) }
    dend_48 { pt3dadd( 54.411, 34.9543, -23.0326, 0.59 ) }
    dend_48 { pt3dadd( 55.6087, 34.882, -22.8917, 0.81 ) }
    dend_48 { pt3dadd( 56.6221, 34.8346, -22.7975, 0.81 ) }
    dend_48 { pt3dadd( 57.904, 34.7607, -22.7625, 0.74 ) }
    dend_48 { pt3dadd( 58.9704, 34.6728, -22.7549, 0.74 ) }
    dend_48 { pt3dadd( 59.6241, 34.6221, -22.7661, 0.74 ) }
    dend_48 { pt3dadd( 61.4219, 34.4142, -22.8476, 0.59 ) }
    dend_48 { pt3dadd( 63.2958, 33.9783, -22.9929, 0.66 ) }
    dend_48 { pt3dadd( 64.0862, 33.7567, -23.093, 1.18 ) }
    dend_48 { pt3dadd( 65.3302, 33.4016, -23.2887, 1.18 ) }
    dend_48 { pt3dadd( 67.1415, 32.9362, -23.597, 0.37 ) }
    dend_48 { pt3dadd( 68.2775, 32.685, -23.8012, 0.52 ) }
    dend_48 { pt3dadd( 70.5125, 32.2678, -24.1446, 0.52 ) }
    dend_48 { pt3dadd( 72.2006, 31.9349, -24.2922, 0.74 ) }
    dend_48 { pt3dadd( 73.1275, 31.7626, -24.3572, 0.74 ) }
    dend_48 { pt3dadd( 74.1776, 31.6051, -24.4071, 1.25 ) }
    dend_48 { pt3dadd( 74.499, 31.5577, -24.4172, 1.25 ) }
    dend_48 { pt3dadd( 76.2764, 31.3564, -24.4367, 1.55 ) }
    dend_48 { pt3dadd( 77.5165, 31.2648, -24.3481, 1.55 ) }
    dend_48 { pt3dadd( 78.4413, 31.1625, -24.2401, 1.33 ) }
    dend_48 { pt3dadd( 80.0524, 30.9801, -24.0372, 0.74 ) }
    dend_48 { pt3dadd( 81.7923, 30.8274, -23.9041, 0.74 ) }
    dend_48 { pt3dadd( 82.1779, 30.7924, -23.8928, 1.11 ) }
    dend_48 { pt3dadd( 84.8396, 30.4949, -23.9762, 0.59 ) }
    dend_48 { pt3dadd( 85.6334, 30.3871, -24.0312, 1.03 ) }
    dend_48 { pt3dadd( 86.3543, 30.2798, -24.108, 1.4 ) }
    dend_48 { pt3dadd( 88.5653, 29.9562, -24.4611, 0.66 ) }
    dend_48 { pt3dadd( 89.4869, 29.883, -24.643, 0.66 ) }
    dend_48 { pt3dadd( 90.7227, 29.7808, -24.9517, 0.66 ) }
    dend_48 { pt3dadd( 91.6299, 29.6777, -25.2781, 1.11 ) }
    dend_48 { pt3dadd( 92.5879, 29.572, -25.6163, 1.11 ) }
    dend_48 { pt3dadd( 93.5747, 29.4295, -25.9458, 0.74 ) }
    dend_48 { pt3dadd( 94.7181, 29.2933, -26.209, 0.74 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 73/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 40.1899, 95.0187, -3.83962, 0.88 ) }
    dend_23 { pt3dadd( 42.6618, 96.7285, -3.15865, 0.88 ) }
    dend_23 { pt3dadd( 43.8967, 97.7586, -2.80416, 1.18 ) }
    dend_23 { pt3dadd( 45.1562, 99.0559, -2.43587, 1.18 ) }
    dend_23 { pt3dadd( 45.9451, 100.03, -2.3123, 1.11 ) }
    dend_23 { pt3dadd( 46.6247, 101.008, -2.28436, 0.74 ) }
    dend_23 { pt3dadd( 47.1199, 101.794, -2.30428, 0.74 ) }
    dend_23 { pt3dadd( 47.5529, 102.868, -2.3697, 0.96 ) }
    dend_23 { pt3dadd( 47.8377, 103.853, -2.54804, 1.25 ) }
    dend_23 { pt3dadd( 48.6048, 105.632, -3.01023, 1.25 ) }
    dend_23 { pt3dadd( 48.977, 106.234, -3.16174, 1.11 ) }
    dend_23 { pt3dadd( 49.0303, 106.292, -3.17263, 1.11 ) }
    dend_23 { pt3dadd( 50.0422, 107.11, -3.23817, 0.88 ) }
    dend_23 { pt3dadd( 51.1666, 107.848, -3.20984, 0.66 ) }
    dend_23 { pt3dadd( 54.0898, 109.513, -2.9364, 0.66 ) }
    dend_23 { pt3dadd( 55.0105, 109.989, -2.77562, 0.96 ) }
    dend_23 { pt3dadd( 56.2973, 110.667, -2.52068, 1.25 ) }
    dend_23 { pt3dadd( 57.5102, 111.325, -2.25703, 1.25 ) }
    dend_23 { pt3dadd( 58.7103, 111.996, -1.96814, 1.03 ) }
    dend_23 { pt3dadd( 59.9087, 112.763, -1.64728, 0.74 ) }
    dend_23 { pt3dadd( 60.9159, 113.568, -1.33386, 0.74 ) }
    dend_23 { pt3dadd( 62.1216, 114.614, -0.95988, 0.74 ) }
    dend_23 { pt3dadd( 62.2457, 114.733, -0.923138, 0.74 ) }
    dend_23 { pt3dadd( 62.5716, 115.061, -0.83362, 0.74 ) }
    dend_23 { pt3dadd( 64.1544, 116.706, -0.449003, 1.11 ) }
    dend_23 { pt3dadd( 64.727, 117.27, -0.332005, 1.84 ) }
    dend_23 { pt3dadd( 64.7994, 117.332, -0.319694, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_23 { pt3dadd( 66.1266, 118.306, -0.188127, 2.06 ) }
    dend_23 { pt3dadd( 66.2045, 118.363, -0.18392, 2.06 ) }
    dend_23 { pt3dadd( 67.1822, 119.142, -0.174133, 2.06 ) }
    dend_23 { pt3dadd( 67.845, 119.78, -0.209708, 1.4 ) }
    dend_23 { pt3dadd( 68.6963, 120.754, -0.300506, 1.18 ) }
    dend_23 { pt3dadd( 69.7852, 122.259, -0.471882, 0.74 ) }
    dend_23 { pt3dadd( 70.1585, 122.883, -0.501108, 0.74 ) }
    dend_23 { pt3dadd( 70.8954, 124.239, -0.447701, 0.66 ) }
    dend_23 { pt3dadd( 71.3851, 125.211, -0.325924, 0.66 ) }
    dend_23 { pt3dadd( 71.7249, 125.857, -0.180006, 0.66 ) }
    dend_23 { pt3dadd( 72.1864, 126.668, 0.200461, 0.66 ) }
    dend_23 { pt3dadd( 73.2513, 128.216, 1.25434, 1.47 ) }
    dend_23 { pt3dadd( 73.9494, 129.113, 1.92921, 1.84 ) }
    dend_23 { pt3dadd( 74.5765, 129.852, 2.51945, 2.14 ) }
    dend_23 { pt3dadd( 75.2728, 130.667, 3.1559, 1.92 ) }
    dend_23 { pt3dadd( 76.621, 132.283, 4.3539, 1.25 ) }
    dend_23 { pt3dadd( 77.6573, 133.843, 5.3338, 0.66 ) }
    dend_23 { pt3dadd( 78.047, 134.693, 5.72504, 0.66 ) }
    dend_23 { pt3dadd( 78.2095, 135.358, 5.97736, 0.96 ) }
    dend_23 { pt3dadd( 78.266, 135.991, 6.15355, 1.47 ) }
    dend_23 { pt3dadd( 78.2684, 136.072, 6.16894, 1.47 ) }
    dend_23 { pt3dadd( 78.3614, 138.55, 6.42694, 0.59 ) }
    dend_23 { pt3dadd( 78.4163, 139.559, 6.53804, 0.59 ) }
    dend_23 { pt3dadd( 78.5847, 140.627, 6.61437, 0.59 ) }
    dend_23 { pt3dadd( 78.974, 142.117, 6.66024, 0.59 ) }
    dend_23 { pt3dadd( 79.5333, 143.517, 6.61489, 0.81 ) }
    dend_23 { pt3dadd( 80.1445, 144.646, 6.49626, 0.81 ) }
    dend_23 { pt3dadd( 80.7543, 145.449, 6.35421, 1.47 ) }
    dend_23 { pt3dadd( 81.9199, 146.765, 6.09601, 1.92 ) }
    dend_23 { pt3dadd( 82.7286, 147.613, 5.94403, 1.92 ) }
    dend_23 { pt3dadd( 83.8454, 148.774, 5.75312, 0.44 ) }
    dend_23 { pt3dadd( 84.7905, 149.84, 5.68678, 0.44 ) }
    dend_23 { pt3dadd( 85.5406, 150.806, 5.75015, 0.44 ) }
    dend_23 { pt3dadd( 85.9275, 151.42, 5.86306, 0.44 ) }
    dend_23 { pt3dadd( 86.4387, 152.503, 6.18523, 0.44 ) }
    dend_23 { pt3dadd( 86.712, 153.274, 6.43473, 0.88 ) }
    dend_23 { pt3dadd( 87.0454, 154.993, 7.16479, 0.88 ) }
    dend_23 { pt3dadd( 87.2108, 156.191, 7.56393, 0.88 ) }
    dend_23 { pt3dadd( 87.3625, 157.384, 7.7746, 0.88 ) }
    dend_23 { pt3dadd( 87.4804, 158.107, 7.79458, 0.88 ) }
    dend_23 { pt3dadd( 87.7519, 159.226, 7.6561, 0.88 ) }
    dend_23 { pt3dadd( 88.6205, 161.83, 7.13024, 0.59 ) }
    dend_23 { pt3dadd( 89.7703, 164.522, 6.42646, 1.11 ) }
    dend_23 { pt3dadd( 90.4782, 165.989, 6.14113, 1.55 ) }
    dend_23 { pt3dadd( 91.049, 167.018, 6.01511, 2.58 ) }
    dend_23 { pt3dadd( 91.8936, 168.43, 5.90607, 1.55 ) }
    dend_23 { pt3dadd( 93.0615, 170.282, 5.83964, 0.52 ) }
    dend_23 { pt3dadd( 93.4808, 170.94, 5.84596, 0.52 ) }
    dend_23 { pt3dadd( 94.4866, 172.678, 6.17764, 0.59 ) }
    dend_23 { pt3dadd( 95.1755, 173.916, 6.46208, 0.59 ) }
    dend_23 { pt3dadd( 95.6028, 174.659, 6.63062, 1.03 ) }
    dend_23 { pt3dadd( 96.0015, 175.269, 6.77106, 1.99 ) }
    dend_23 { pt3dadd( 96.6538, 176.052, 6.9143, 2.28 ) }
    dend_23 { pt3dadd( 98.1144, 177.505, 7.12127, 0.81 ) }
    dend_23 { pt3dadd( 99.4232, 178.623, 7.22553, 0.81 ) }
    dend_23 { pt3dadd( 100.868, 179.753, 7.39762, 0.66 ) }
    dend_23 { pt3dadd( 102.538, 180.958, 7.61471, 0.66 ) }
    dend_23 { pt3dadd( 104.494, 182.323, 7.90541, 0.66 ) }
    dend_23 { pt3dadd( 105.271, 182.846, 8.03137, 1.62 ) }
    dend_23 { pt3dadd( 105.568, 183.047, 8.08208, 1.62 ) }
    dend_23 { pt3dadd( 107.004, 184.135, 8.42436, 1.62 ) }
    dend_23 { pt3dadd( 107.873, 184.997, 8.67325, 1.55 ) }
    dend_23 { pt3dadd( 108.493, 185.882, 8.9027, 0.96 ) }
    dend_23 { pt3dadd( 108.687, 186.235, 8.99895, 0.96 ) }
    dend_23 { pt3dadd( 108.902, 186.623, 9.09208, 0.96 ) }
    dend_23 { pt3dadd( 109.165, 187.071, 9.18431, 0.81 ) }
    dend_23 { pt3dadd( 109.741, 187.965, 9.31305, 0.81 ) }
    dend_23 { pt3dadd( 110.188, 188.544, 9.424, 1.03 ) }
    dend_23 { pt3dadd( 110.557, 188.926, 9.49237, 1.03 ) }
    dend_23 { pt3dadd( 111.16, 189.515, 9.59702, 1.4 ) }
    dend_23 { pt3dadd( 111.224, 189.58, 9.60719, 1.4 ) }
    dend_23 { pt3dadd( 111.574, 189.982, 9.65562, 1.4 ) }
    dend_23 { pt3dadd( 112.146, 190.845, 9.71017, 0.96 ) }
    dend_23 { pt3dadd( 112.53, 191.732, 9.7155, 0.96 ) }
    dend_23 { pt3dadd( 112.735, 192.531, 9.66133, 0.88 ) }
    dend_23 { pt3dadd( 112.957, 193.467, 9.62795, 0.88 ) }
    dend_23 { pt3dadd( 113.266, 194.228, 9.60149, 0.88 ) }
    dend_23 { pt3dadd( 113.693, 195.033, 9.57759, 0.88 ) }
    dend_23 { pt3dadd( 114.072, 195.653, 9.59348, 0.88 ) }
    dend_23 { pt3dadd( 114.548, 196.365, 9.64761, 1.18 ) }
    dend_23 { pt3dadd( 115.896, 198.191, 9.8323, 0.66 ) }
    dend_23 { pt3dadd( 117.297, 200.116, 10.2469, 0.66 ) }
    dend_23 { pt3dadd( 117.906, 200.967, 10.4491, 0.66 ) }
    dend_23 { pt3dadd( 118.497, 201.781, 10.6632, 1.03 ) }
    dend_23 { pt3dadd( 119.379, 203.015, 11.0136, 1.55 ) }
    dend_23 { pt3dadd( 120.18, 204.161, 11.3648, 1.77 ) }
    dend_23 { pt3dadd( 121.924, 206.57, 12.0261, 0.66 ) }
    dend_23 { pt3dadd( 122.617, 207.477, 12.2729, 0.37 ) }
    dend_23 { pt3dadd( 123.366, 208.295, 12.4582, 0.37 ) }
    dend_23 { pt3dadd( 123.856, 208.751, 12.5253, 0.44 ) }
    dend_23 { pt3dadd( 124.614, 209.401, 12.5787, 0.44 ) }
    dend_23 { pt3dadd( 126.084, 210.732, 12.5808, 0.44 ) }
    dend_23 { pt3dadd( 126.756, 211.416, 12.5109, 1.33 ) }
    dend_23 { pt3dadd( 127.365, 212.234, 12.527, 1.62 ) }
    dend_23 { pt3dadd( 127.933, 213.242, 12.6052, 1.62 ) }
    dend_23 { pt3dadd( 128.51, 214.465, 12.7379, 0.44 ) }
    dend_23 { pt3dadd( 129.063, 215.755, 12.9377, 0.44 ) }
    dend_23 { pt3dadd( 129.401, 216.505, 13.1036, 0.44 ) }
    dend_23 { pt3dadd( 130.456, 218.177, 13.5258, 0.44 ) }
    dend_23 { pt3dadd( 131.251, 219.008, 13.7705, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_23 { pt3dadd( 131.902, 219.555, 13.9381, 2.06 ) }
    dend_23 { pt3dadd( 132.958, 220.347, 14.1596, 2.95 ) }
    dend_23 { pt3dadd( 134.29, 221.306, 14.422, 2.28 ) }
    dend_23 { pt3dadd( 135.789, 222.377, 14.6851, 1.18 ) }
    dend_23 { pt3dadd( 138.105, 224.112, 15.0052, 0.66 ) }
    dend_23 { pt3dadd( 139.541, 225.328, 15.2309, 0.66 ) }
    dend_23 { pt3dadd( 140.27, 226.053, 15.3676, 1.11 ) }
    dend_23 { pt3dadd( 140.91, 226.899, 15.5299, 1.84 ) }
    dend_23 { pt3dadd( 140.953, 226.982, 15.5466, 1.84 ) }
    dend_23 { pt3dadd( 141.346, 227.99, 15.7125, 1.84 ) }
    dend_23 { pt3dadd( 141.55, 228.562, 15.7421, 1.69 ) }
    dend_23 { pt3dadd( 141.837, 229.238, 15.7001, 1.25 ) }
    dend_23 { pt3dadd( 142.625, 230.986, 15.6446, 0.66 ) }
    dend_23 { pt3dadd( 142.951, 231.677, 15.6308, 0.66 ) }
    dend_23 { pt3dadd( 143.987, 233.733, 15.6763, 0.66 ) }
    dend_23 { pt3dadd( 144.84, 235.343, 15.7686, 0.66 ) }
    dend_23 { pt3dadd( 145.294, 236.182, 15.8368, 1.77 ) }
    dend_23 { pt3dadd( 146.502, 238.379, 16.1988, 0.81 ) }
    dend_23 { pt3dadd( 147.068, 239.395, 16.4332, 0.81 ) }
    dend_23 { pt3dadd( 147.859, 240.929, 16.9329, 0.52 ) }
    dend_23 { pt3dadd( 148.409, 242.089, 17.4302, 0.74 ) }
    dend_23 { pt3dadd( 148.76, 242.838, 17.8651, 0.74 ) }
    dend_23 { pt3dadd( 149.509, 244.314, 18.8293, 1.18 ) }
    dend_23 { pt3dadd( 149.764, 244.765, 19.1253, 0.88 ) }
    dend_23 { pt3dadd( 150.085, 245.3, 19.5403, 0.37 ) }
    dend_23 { pt3dadd( 150.53, 246.061, 20.2101, 0.37 ) }
    dend_23 { pt3dadd( 151.72, 248.031, 21.8596, 1.33 ) }
    dend_23 { pt3dadd( 152.024, 248.492, 22.1773, 1.33 ) }
    dend_23 { pt3dadd( 152.334, 248.899, 22.3666, 1.33 ) }
    dend_23 { pt3dadd( 152.775, 249.426, 22.5433, 0.66 ) }
    dend_23 { pt3dadd( 154.11, 250.935, 22.8366, 0.52 ) }
    dend_23 { pt3dadd( 155.082, 252.004, 22.8822, 0.88 ) }
    dend_23 { pt3dadd( 156.25, 253.243, 22.7512, 1.11 ) }
    dend_23 { pt3dadd( 157.474, 254.582, 22.6002, 0.37 ) }
    dend_23 { pt3dadd( 158.28, 255.483, 22.4901, 0.37 ) }
    dend_23 { pt3dadd( 158.694, 255.948, 22.418, 0.74 ) }
    dend_23 { pt3dadd( 159.155, 256.461, 22.3246, 0.96 ) }
    dend_23 { pt3dadd( 159.302, 256.671, 22.3121, 0.96 ) }
    dend_23 { pt3dadd( 159.861, 257.76, 22.1733, 0.96 ) }
    dend_23 { pt3dadd( 159.951, 257.964, 22.1257, 1.33 ) }
    dend_23 { pt3dadd( 160.144, 258.399, 22.1126, 1.33 ) }
    dend_23 { pt3dadd( 160.537, 259.115, 22.2541, 1.03 ) }
    dend_23 { pt3dadd( 161.58, 260.774, 22.8732, 0.74 ) }
    dend_23 { pt3dadd( 162.74, 262.378, 23.7301, 0.52 ) }
    dend_23 { pt3dadd( 163.376, 263.097, 24.2206, 0.52 ) }
    dend_23 { pt3dadd( 166.274, 265.862, 26.4233, 0.52 ) }
    dend_23 { pt3dadd( 167.501, 266.923, 27.4572, 0.44 ) }
    dend_23 { pt3dadd( 167.826, 267.179, 27.7492, 0.44 ) }
    dend_23 { pt3dadd( 168.217, 267.47, 28.1176, 1.25 ) }
    dend_23 { pt3dadd( 169.154, 268.206, 29.0326, 1.62 ) }
    dend_23 { pt3dadd( 169.889, 268.847, 29.6211, 1.18 ) }
    dend_23 { pt3dadd( 171.349, 270.321, 30.4309, 0.44 ) }
    dend_23 { pt3dadd( 171.701, 270.741, 30.6562, 0.44 ) }
    dend_23 { pt3dadd( 172.307, 271.472, 31.0386, 0.59 ) }
    dend_23 { pt3dadd( 172.691, 271.952, 31.2693, 0.59 ) }
    dend_23 { pt3dadd( 173.304, 272.735, 31.6292, 0.96 ) }
    dend_23 { pt3dadd( 174.043, 273.68, 31.9915, 1.18 ) }
    dend_23 { pt3dadd( 174.255, 273.957, 32.0864, 1.18 ) }
    dend_23 { pt3dadd( 175.274, 275.527, 32.6594, 0.44 ) }
    dend_23 { pt3dadd( 175.825, 276.613, 33.0539, 0.44 ) }
    dend_23 { pt3dadd( 175.852, 276.7, 33.0804, 0.44 ) }
    dend_23 { pt3dadd( 175.998, 277.627, 33.2858, 0.44 ) }
    dend_23 { pt3dadd( 176.085, 278.953, 33.4779, 1.03 ) }
    dend_23 { pt3dadd( 176.119, 280.219, 33.628, 1.62 ) }
    dend_23 { pt3dadd( 176.121, 280.866, 33.6957, 1.92 ) }
    dend_23 { pt3dadd( 176.179, 282.563, 33.8598, 0.59 ) }
    dend_23 { pt3dadd( 176.345, 283.762, 33.9717, 0.59 ) }
    dend_23 { pt3dadd( 176.682, 284.779, 34.082, 0.59 ) }
    dend_23 { pt3dadd( 176.967, 285.37, 34.1563, 0.44 ) }
    dend_23 { pt3dadd( 177.54, 286.419, 34.3703, 0.59 ) }
    dend_23 { pt3dadd( 177.569, 286.482, 34.3979, 0.59 ) }
    dend_23 { pt3dadd( 177.891, 287.37, 34.8612, 0.59 ) }
    dend_23 { pt3dadd( 178.437, 289.024, 35.8212, 0.59 ) }
    dend_23 { pt3dadd( 178.868, 290.7, 36.8233, 0.59 ) }
    dend_23 { pt3dadd( 179.008, 291.511, 37.2983, 0.59 ) }
    dend_23 { pt3dadd( 179.252, 294.079, 38.747, 1.03 ) }
    dend_23 { pt3dadd( 179.31, 295.449, 39.5299, 1.69 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 77/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 40.1899, 95.0187, -3.83962, 0.37 ) }
    dend_22 { pt3dadd( 39.3611, 95.0324, -4.25313, 0.37 ) }
    dend_22 { pt3dadd( 39.2233, 95.0397, -4.3184, 0.37 ) }
    dend_22 { pt3dadd( 38.2377, 95.1603, -4.73424, 0.22 ) }
    dend_22 { pt3dadd( 37.369, 95.2701, -5.0501, 0.22 ) }
    dend_22 { pt3dadd( 37.0742, 95.2957, -5.14276, 0.59 ) }
    dend_22 { pt3dadd( 36.7642, 95.3185, -5.23386, 0.59 ) }
    dend_22 { pt3dadd( 36.4882, 95.3195, -5.3344, 0.44 ) }
    dend_22 { pt3dadd( 35.6682, 95.3107, -5.66413, 0.37 ) }
    dend_22 { pt3dadd( 34.7871, 95.2832, -6.03477, 0.37 ) }
    dend_22 { pt3dadd( 33.8225, 95.2234, -6.48866, 0.37 ) }
    dend_22 { pt3dadd( 33.7838, 95.2198, -6.5084, 0.37 ) }
    dend_22 { pt3dadd( 32.4037, 95.0318, -7.27825, 1.03 ) }
    dend_22 { pt3dadd( 32.0567, 94.9582, -7.4963, 1.47 ) }
    dend_22 { pt3dadd( 32.0196, 94.9454, -7.52754, 1.47 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 92/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 73.2431, 283.33, 28.8483, 0.44 ) }
    dend_19 { pt3dadd( 69.9398, 285.084, 36.3157, 0.44 ) }
    dend_19 { pt3dadd( 69.611, 285.281, 36.9645, 0.44 ) }
    dend_19 { pt3dadd( 69.3873, 285.418, 37.3878, 0.81 ) }
    dend_19 { pt3dadd( 69.0689, 285.617, 37.9469, 1.11 ) }
    dend_19 { pt3dadd( 68.4254, 285.999, 39.1715, 0.29 ) }
    dend_19 { pt3dadd( 68.2382, 286.103, 39.5609, 0.37 ) }
    dend_19 { pt3dadd( 67.86, 286.596, 39.115, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( 67.1913, 287.474, 38.3103, 0.81 ) }
    dend_19 { pt3dadd( 66.9446, 287.79, 38.0319, 0.81 ) }
    dend_19 { pt3dadd( 65.9695, 289.209, 36.9223, 0.44 ) }
    dend_19 { pt3dadd( 65.5996, 289.924, 36.4033, 0.52 ) }
    dend_19 { pt3dadd( 65.2262, 290.828, 35.8363, 0.52 ) }
    dend_19 { pt3dadd( 64.8457, 291.966, 35.2584, 0.52 ) }
    dend_19 { pt3dadd( 64.5813, 292.9, 34.8914, 0.52 ) }
    dend_19 { pt3dadd( 64.2774, 294.133, 34.4498, 0.52 ) }
    dend_19 { pt3dadd( 63.8573, 296.267, 33.847, 0.52 ) }
    dend_19 { pt3dadd( 63.7169, 297.215, 33.597, 0.29 ) }
    dend_19 { pt3dadd( 63.5717, 298.613, 33.2698, 0.29 ) }
    dend_19 { pt3dadd( 63.4973, 299.525, 33.0871, 0.29 ) }
    dend_19 { pt3dadd( 63.3539, 301.198, 32.7383, 0.29 ) }
    dend_19 { pt3dadd( 63.1408, 303.26, 32.3216, 0.29 ) }
    dend_19 { pt3dadd( 63.1363, 303.313, 32.3137, 0.29 ) }
    dend_19 { pt3dadd( 63.1161, 304.521, 32.0198, 0.29 ) }
    dend_19 { pt3dadd( 63.1188, 304.572, 32.0027, 0.29 ) }
    dend_19 { pt3dadd( 63.227, 305.889, 31.4933, 0.29 ) }
    dend_19 { pt3dadd( 63.3133, 306.736, 31.1407, 0.29 ) }
    dend_19 { pt3dadd( 63.3803, 307.482, 30.7986, 0.74 ) }
    dend_19 { pt3dadd( 63.5887, 309.793, 29.71, 0.29 ) }
    dend_19 { pt3dadd( 63.7243, 311.294, 28.9742, 0.29 ) }
    dend_19 { pt3dadd( 63.8416, 312.655, 28.3181, 0.29 ) }
    dend_19 { pt3dadd( 63.8675, 312.986, 28.1625, 0.59 ) }
    dend_19 { pt3dadd( 63.8877, 313.451, 27.9234, 0.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 73.2431, 283.33, 28.8483, 0.52 ) }
    dend_12 { pt3dadd( 73.5018, 283.494, 28.9048, 0.52 ) }
    dend_12 { pt3dadd( 73.9097, 283.818, 28.9921, 0.96 ) }
    dend_12 { pt3dadd( 74.5953, 284.479, 29.1353, 1.11 ) }
    dend_12 { pt3dadd( 75.5171, 285.576, 29.4382, 0.52 ) }
    dend_12 { pt3dadd( 75.9753, 286.198, 29.6278, 0.52 ) }
    dend_12 { pt3dadd( 76.3095, 286.724, 29.7724, 0.52 ) }
    dend_12 { pt3dadd( 76.6234, 287.353, 29.9445, 0.52 ) }
    dend_12 { pt3dadd( 76.7721, 287.803, 30.0731, 0.52 ) }
    dend_12 { pt3dadd( 76.9633, 289.01, 30.4314, 0.52 ) }
    dend_12 { pt3dadd( 76.9758, 289.854, 30.6511, 0.52 ) }
    dend_12 { pt3dadd( 77.0104, 290.74, 30.9162, 0.52 ) }
    dend_12 { pt3dadd( 77.0838, 291.421, 31.137, 1.25 ) }
    dend_12 { pt3dadd( 77.2028, 292.234, 31.3998, 1.4 ) }
    dend_12 { pt3dadd( 77.2851, 292.758, 31.5548, 1.4 ) }
    dend_12 { pt3dadd( 77.5553, 294.11, 31.927, 0.44 ) }
    dend_12 { pt3dadd( 77.977, 295.769, 32.4174, 0.44 ) }
    dend_12 { pt3dadd( 78.2689, 296.682, 32.6928, 0.44 ) }
    dend_12 { pt3dadd( 78.4601, 297.197, 32.8328, 0.44 ) }
    dend_12 { pt3dadd( 78.6748, 297.731, 32.9888, 1.11 ) }
    dend_12 { pt3dadd( 79.2173, 299.313, 33.4581, 0.44 ) }
    dend_12 { pt3dadd( 79.3983, 300.046, 33.6754, 0.44 ) }
    dend_12 { pt3dadd( 79.4926, 300.785, 33.8462, 0.66 ) }
    dend_12 { pt3dadd( 79.533, 301.37, 33.9702, 0.96 ) }
    dend_12 { pt3dadd( 79.6008, 302.573, 34.2086, 0.52 ) }
    dend_12 { pt3dadd( 79.708, 303.978, 34.5138, 0.52 ) }
    dend_12 { pt3dadd( 79.7487, 304.738, 34.6729, 0.52 ) }
    dend_12 { pt3dadd( 79.7759, 305.094, 34.7524, 0.81 ) }
    dend_12 { pt3dadd( 79.8528, 305.709, 34.8912, 1.11 ) }
    dend_12 { pt3dadd( 79.9667, 306.338, 35.0268, 1.11 ) }
    dend_12 { pt3dadd( 80.3418, 307.696, 35.2875, 0.66 ) }
    dend_12 { pt3dadd( 80.4915, 308.108, 35.3984, 0.66 ) }
    dend_12 { pt3dadd( 80.6741, 308.608, 35.545, 0.66 ) }
    dend_12 { pt3dadd( 80.8854, 309.224, 35.7184, 0.44 ) }
    dend_12 { pt3dadd( 80.9096, 309.297, 35.7357, 0.44 ) }
    dend_12 { pt3dadd( 80.9586, 309.442, 35.763, 0.44 ) }
    dend_12 { pt3dadd( 81.1699, 310.02, 35.8468, 0.44 ) }
    dend_12 { pt3dadd( 81.6981, 311.291, 36.0609, 0.44 ) }
    dend_12 { pt3dadd( 82.0863, 312.083, 36.2118, 0.44 ) }
    dend_12 { pt3dadd( 82.5822, 313.009, 36.4142, 0.44 ) }
    dend_12 { pt3dadd( 82.9969, 313.76, 36.5752, 0.81 ) }
    dend_12 { pt3dadd( 83.2195, 314.154, 36.6562, 1.11 ) }
    dend_12 { pt3dadd( 83.5047, 314.668, 36.767, 0.52 ) }
    dend_12 { pt3dadd( 83.9167, 315.5, 36.9743, 0.52 ) }
    dend_12 { pt3dadd( 84.1955, 316.088, 37.1403, 0.59 ) }
    dend_12 { pt3dadd( 84.3531, 316.521, 37.2984, 0.59 ) }
    dend_12 { pt3dadd( 84.4345, 316.86, 37.4376, 0.74 ) }
    dend_12 { pt3dadd( 84.5422, 317.491, 37.7141, 0.74 ) }
    dend_12 { pt3dadd( 84.6249, 318.306, 38.1256, 0.59 ) }
    dend_12 { pt3dadd( 84.6592, 318.878, 38.4269, 0.59 ) }
    dend_12 { pt3dadd( 84.679, 320.009, 38.9992, 0.59 ) }
    dend_12 { pt3dadd( 84.6895, 320.436, 39.2063, 0.59 ) }
    dend_12 { pt3dadd( 84.7035, 320.804, 39.364, 0.74 ) }
    dend_12 { pt3dadd( 84.7536, 322.26, 39.8633, 0.88 ) }
    dend_12 { pt3dadd( 84.7567, 323.14, 40.1015, 0.88 ) }
    dend_12 { pt3dadd( 84.7304, 323.965, 40.27, 1.33 ) }
    dend_12 { pt3dadd( 84.6778, 325.092, 40.4839, 2.0 ) }
    dend_12 { pt3dadd( 84.6305, 325.839, 40.6358, 2.0 ) }
    dend_12 { pt3dadd( 84.5447, 326.938, 40.8557, 2.0 ) }
    dend_12 { pt3dadd( 84.4849, 327.95, 41.0823, 1.25 ) }
    dend_12 { pt3dadd( 84.4671, 328.435, 41.2222, 1.25 ) }
    dend_12 { pt3dadd( 84.4427, 330.027, 41.7714, 0.88 ) }
    dend_12 { pt3dadd( 84.4169, 330.853, 42.1026, 0.88 ) }
    dend_12 { pt3dadd( 84.3608, 331.577, 42.4066, 0.88 ) }
    dend_12 { pt3dadd( 84.2084, 332.721, 42.8553, 1.47 ) }
    dend_12 { pt3dadd( 84.1973, 332.779, 42.8742, 1.47 ) }
    dend_12 { pt3dadd( 83.8165, 334.28, 43.2024, 2.28 ) }
    dend_12 { pt3dadd( 83.6325, 334.869, 43.2612, 2.06 ) }
    dend_12 { pt3dadd( 83.0587, 336.657, 43.5035, 0.37 ) }
    dend_12 { pt3dadd( 82.6808, 337.925, 43.6885, 0.44 ) }
    dend_12 { pt3dadd( 82.4924, 338.532, 43.7613, 0.44 ) }
    dend_12 { pt3dadd( 82.2076, 339.517, 43.8827, 0.44 ) }
    dend_12 { pt3dadd( 81.9917, 340.382, 43.9997, 0.44 ) }
    dend_12 { pt3dadd( 81.4926, 342.87, 44.4006, 0.96 ) }
    dend_12 { pt3dadd( 81.4223, 343.633, 44.5914, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 0/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -8.17381, 356.378, 1.39661, 1.69 ) }
    dend_4 { pt3dadd( -8.22468, 358.562, 0.799322, 1.69 ) }
    dend_4 { pt3dadd( -8.20842, 359.149, 0.677236, 1.69 ) }
    dend_4 { pt3dadd( -8.13918, 359.963, 0.541411, 1.69 ) }
    dend_4 { pt3dadd( -7.97301, 361.326, 0.349714, 1.55 ) }
    dend_4 { pt3dadd( -7.80944, 362.38, 0.226137, 1.55 ) }
    dend_4 { pt3dadd( -7.61238, 363.551, 0.111126, 1.25 ) }
    dend_4 { pt3dadd( -7.39847, 364.72, 0.109094, 1.25 ) }
    dend_4 { pt3dadd( -7.24527, 365.568, 0.109117, 1.25 ) }
    dend_4 { pt3dadd( -7.16552, 366.078, 0.109663, 1.69 ) }
    dend_4 { pt3dadd( -7.0587, 366.986, 0.111903, 1.69 ) }
    dend_4 { pt3dadd( -7.01389, 367.881, 0.115413, 1.69 ) }
    dend_4 { pt3dadd( -7.0745, 368.683, 0.116847, 1.69 ) }
    dend_4 { pt3dadd( -7.21672, 369.566, 0.109631, 1.47 ) }
    dend_4 { pt3dadd( -7.47888, 370.681, 0.177834, 1.47 ) }
    dend_4 { pt3dadd( -7.62697, 371.256, 0.247586, 1.33 ) }
    dend_4 { pt3dadd( -7.81299, 371.926, 0.433456, 1.11 ) }
    dend_4 { pt3dadd( -8.05289, 372.905, 0.842424, 1.11 ) }
    dend_4 { pt3dadd( -8.15362, 373.417, 1.11926, 0.66 ) }
    dend_4 { pt3dadd( -8.35283, 374.884, 2.00002, 0.66 ) }
    dend_4 { pt3dadd( -8.40296, 375.388, 2.33669, 0.66 ) }
    dend_4 { pt3dadd( -8.49354, 377.037, 3.29361, 1.03 ) }
    dend_4 { pt3dadd( -8.50303, 377.708, 3.62957, 1.62 ) }
    dend_4 { pt3dadd( -8.46754, 379.02, 4.15905, 1.62 ) }
    dend_4 { pt3dadd( -8.40761, 380.18, 4.52075, 1.99 ) }
    dend_4 { pt3dadd( -8.24963, 382.133, 4.93385, 1.99 ) }
    dend_4 { pt3dadd( -8.03905, 384.282, 5.26275, 1.99 ) }
    dend_4 { pt3dadd( -7.93472, 385.028, 5.31671, 1.47 ) }
    dend_4 { pt3dadd( -7.76683, 386.038, 5.37202, 1.11 ) }
    dend_4 { pt3dadd( -7.55753, 387.005, 5.36679, 0.74 ) }
    dend_4 { pt3dadd( -7.5416, 387.076, 5.37134, 0.66 ) }
    dend_4 { pt3dadd( -7.38864, 387.909, 5.48392, 0.66 ) }
    dend_4 { pt3dadd( -7.30917, 388.792, 5.71559, 0.66 ) }
    dend_4 { pt3dadd( -7.30589, 389.239, 5.82749, 0.66 ) }
    dend_4 { pt3dadd( -7.34596, 390.207, 6.05011, 1.03 ) }
    dend_4 { pt3dadd( -7.50524, 392.69, 6.53527, 1.69 ) }
    dend_4 { pt3dadd( -7.60606, 393.957, 6.76747, 1.69 ) }
    dend_4 { pt3dadd( -7.72689, 395.36, 7.00399, 1.69 ) }
    dend_4 { pt3dadd( -7.86657, 396.973, 7.25307, 1.69 ) }
    dend_4 { pt3dadd( -7.92339, 398.031, 7.39228, 1.69 ) }
    dend_4 { pt3dadd( -7.92789, 399.175, 7.5062, 1.33 ) }
    dend_4 { pt3dadd( -7.92308, 399.252, 7.50687, 1.33 ) }
    dend_4 { pt3dadd( -7.76622, 400.512, 7.52731, 0.96 ) }
    dend_4 { pt3dadd( -7.75374, 400.584, 7.52895, 0.96 ) }
    dend_4 { pt3dadd( -7.44282, 401.993, 7.5715, 0.59 ) }
    dend_4 { pt3dadd( -7.19616, 403.044, 7.6078, 0.59 ) }
    dend_4 { pt3dadd( -7.02297, 403.747, 7.63545, 0.59 ) }
    dend_4 { pt3dadd( -6.74694, 404.864, 7.68343, 0.59 ) }
    dend_4 { pt3dadd( -6.63883, 405.3, 7.70344, 0.59 ) }
    dend_4 { pt3dadd( -6.44762, 406.119, 7.78004, 0.59 ) }
    dend_4 { pt3dadd( -6.35176, 406.607, 7.84471, 0.59 ) }
    dend_4 { pt3dadd( -6.18393, 407.511, 7.99152, 0.59 ) }
    dend_4 { pt3dadd( -5.94414, 408.816, 8.22414, 0.59 ) }
    dend_4 { pt3dadd( -5.92795, 408.906, 8.23643, 0.59 ) }
    dend_4 { pt3dadd( -5.71437, 410.068, 8.29453, 0.96 ) }
    dend_4 { pt3dadd( -5.51152, 411.205, 8.27343, 1.4 ) }
    dend_4 { pt3dadd( -5.32734, 412.277, 8.18923, 1.55 ) }
    dend_4 { pt3dadd( -5.16454, 413.282, 7.98105, 1.99 ) }
    dend_4 { pt3dadd( -4.95173, 414.511, 7.6396, 1.99 ) }
    dend_4 { pt3dadd( -4.73722, 415.764, 7.26839, 1.99 ) }
    dend_4 { pt3dadd( -4.72566, 415.829, 7.24695, 1.99 ) }
    dend_4 { pt3dadd( -4.56038, 416.829, 6.92394, 1.99 ) }
    dend_4 { pt3dadd( -4.2708, 419.511, 6.14991, 1.18 ) }
    dend_4 { pt3dadd( -4.19208, 420.65, 5.81192, 1.18 ) }
    dend_4 { pt3dadd( -4.15724, 421.483, 5.58139, 1.18 ) }
    dend_4 { pt3dadd( -4.15565, 421.554, 5.56339, 1.18 ) }
    dend_4 { pt3dadd( -4.13103, 422.854, 5.23249, 1.18 ) }
    dend_4 { pt3dadd( -4.09483, 424.594, 4.79525, 1.18 ) }
    dend_4 { pt3dadd( -4.07915, 426.743, 4.32516, 0.81 ) }
    dend_4 { pt3dadd( -4.07796, 427.233, 4.2146, 0.81 ) }
    dend_4 { pt3dadd( -4.04854, 428.781, 3.89846, 0.81 ) }
    dend_4 { pt3dadd( -4.04577, 428.943, 3.87129, 0.81 ) }
    dend_4 { pt3dadd( -4.02572, 429.776, 3.7708, 0.81 ) }
    dend_4 { pt3dadd( -3.98476, 431.168, 3.62146, 0.81 ) }
    dend_4 { pt3dadd( -3.94969, 433.401, 3.43484, 0.81 ) }
    dend_4 { pt3dadd( -3.93561, 435.301, 3.22234, 0.74 ) }
    dend_4 { pt3dadd( -3.93523, 436.58, 3.05112, 0.74 ) }
    dend_4 { pt3dadd( -3.95205, 438.572, 2.76444, 0.74 ) }
    dend_4 { pt3dadd( -3.97356, 440.009, 2.541, 0.96 ) }
    dend_4 { pt3dadd( -3.98012, 440.829, 2.40811, 1.33 ) }
    dend_4 { pt3dadd( -3.9945, 441.818, 2.24883, 1.77 ) }
    dend_4 { pt3dadd( -4.02514, 442.817, 2.08048, 1.99 ) }
    dend_4 { pt3dadd( -4.06226, 443.957, 1.90436, 1.99 ) }
    dend_4 { pt3dadd( -4.06646, 444.04, 1.89446, 1.99 ) }
    dend_4 { pt3dadd( -4.11786, 445.003, 1.84333, 1.99 ) }
    dend_4 { pt3dadd( -4.19132, 445.738, 1.81805, 1.69 ) }
    dend_4 { pt3dadd( -4.30591, 446.467, 1.78493, 1.33 ) }
    dend_4 { pt3dadd( -4.44211, 447.144, 1.72877, 1.18 ) }
    dend_4 { pt3dadd( -4.60494, 447.832, 1.62983, 0.88 ) }
    dend_4 { pt3dadd( -4.78826, 448.594, 1.43094, 0.52 ) }
    dend_4 { pt3dadd( -5.03875, 449.62, 1.11225, 0.52 ) }
    dend_4 { pt3dadd( -5.33076, 450.794, 0.746779, 0.66 ) }
    dend_4 { pt3dadd( -5.39248, 451.042, 0.67334, 0.66 ) }
    dend_4 { pt3dadd( -5.72811, 452.359, 0.374902, 0.66 ) }
    dend_4 { pt3dadd( -6.32007, 454.781, -0.00578541, 0.66 ) }
    dend_4 { pt3dadd( -6.82352, 456.922, -0.173204, 0.66 ) }
    dend_4 { pt3dadd( -7.18256, 458.73, -0.177464, 0.66 ) }
    dend_4 { pt3dadd( -7.41512, 460.112, -0.0862315, 0.66 ) }
    dend_4 { pt3dadd( -7.64456, 461.95, 0.135444, 1.11 ) }
    dend_4 { pt3dadd( -7.71925, 462.889, 0.284667, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_4 { pt3dadd( -7.76003, 463.985, 0.475536, 1.62 ) }
    dend_4 { pt3dadd( -7.75011, 464.924, 0.584497, 1.77 ) }
    dend_4 { pt3dadd( -7.69818, 466.256, 0.629717, 1.99 ) }
    dend_4 { pt3dadd( -7.64357, 467.428, 0.570944, 1.77 ) }
    dend_4 { pt3dadd( -7.59843, 469.0, 0.364299, 1.4 ) }
    dend_4 { pt3dadd( -7.61844, 471.367, 0.00288231, 0.66 ) }
    dend_4 { pt3dadd( -7.63496, 471.783, -0.061363, 0.66 ) }
    dend_4 { pt3dadd( -7.7637, 473.227, -0.252805, 0.66 ) }
    dend_4 { pt3dadd( -7.77535, 473.319, -0.261599, 0.66 ) }
    dend_4 { pt3dadd( -8.03998, 475.107, -0.37217, 0.59 ) }
    dend_4 { pt3dadd( -8.18729, 476.192, -0.37909, 0.59 ) }
    dend_4 { pt3dadd( -8.3055, 477.172, -0.39292, 0.96 ) }
    dend_4 { pt3dadd( -8.32825, 477.355, -0.397147, 0.96 ) }
    dend_4 { pt3dadd( -8.42237, 478.1, -0.434198, 1.4 ) }
    dend_4 { pt3dadd( -8.4657, 478.456, -0.460292, 1.4 ) }
    dend_4 { pt3dadd( -8.50723, 478.921, -0.508662, 1.55 ) }
    dend_4 { pt3dadd( -8.5114, 479.032, -0.526402, 1.55 ) }
    dend_4 { pt3dadd( -8.53527, 479.639, -0.643549, 1.99 ) }
    dend_4 { pt3dadd( -8.56166, 480.552, -0.829724, 1.99 ) }
    dend_4 { pt3dadd( -8.5708, 480.731, -0.86844, 1.99 ) }
    dend_4 { pt3dadd( -8.64509, 481.735, -1.08306, 1.69 ) }
    dend_4 { pt3dadd( -8.78535, 482.551, -1.23892, 1.69 ) }
    dend_4 { pt3dadd( -8.95288, 483.261, -1.34988, 0.88 ) }
    dend_4 { pt3dadd( -9.01276, 483.507, -1.37677, 0.88 ) }
    dend_4 { pt3dadd( -9.14779, 484.082, -1.41485, 0.74 ) }
    dend_4 { pt3dadd( -9.20065, 484.307, -1.42537, 0.74 ) }
    dend_4 { pt3dadd( -9.59171, 486.005, -1.50266, 0.66 ) }
    dend_4 { pt3dadd( -9.89297, 487.357, -1.55859, 0.66 ) }
    dend_4 { pt3dadd( -10.2568, 489.049, -1.63876, 0.66 ) }
    dend_4 { pt3dadd( -10.7156, 491.19, -1.74471, 0.66 ) }
    dend_4 { pt3dadd( -11.0019, 492.582, -1.78748, 0.66 ) }
    dend_4 { pt3dadd( -11.1875, 493.467, -1.80254, 0.66 ) }
    dend_4 { pt3dadd( -11.3472, 494.235, -1.80437, 1.33 ) }
    dend_4 { pt3dadd( -11.6233, 495.401, -1.79203, 1.62 ) }
    dend_4 { pt3dadd( -11.9695, 496.691, -1.75726, 1.4 ) }
    dend_4 { pt3dadd( -12.2885, 497.884, -1.69655, 0.81 ) }
    dend_4 { pt3dadd( -12.4238, 498.47, -1.65239, 0.81 ) }
    dend_4 { pt3dadd( -12.5444, 499.239, -1.5783, 1.25 ) }
    dend_4 { pt3dadd( -12.5749, 500.073, -1.50198, 1.69 ) }
    dend_4 { pt3dadd( -12.5687, 500.156, -1.49562, 1.69 ) }
    dend_4 { pt3dadd( -12.4158, 501.237, -1.44804, 1.69 ) }
    dend_4 { pt3dadd( -12.3087, 501.834, -1.44038, 1.47 ) }
    dend_4 { pt3dadd( -12.0046, 503.312, -1.42437, 0.96 ) }
    dend_4 { pt3dadd( -11.6613, 504.96, -1.41233, 0.81 ) }
    dend_4 { pt3dadd( -11.4717, 506.066, -1.41129, 0.81 ) }
    dend_4 { pt3dadd( -11.404, 506.669, -1.41541, 0.88 ) }
    dend_4 { pt3dadd( -11.3517, 507.622, -1.42928, 1.03 ) }
    dend_4 { pt3dadd( -11.3716, 508.21, -1.44307, 1.4 ) }
    dend_4 { pt3dadd( -11.4473, 508.801, -1.46243, 0.59 ) }
    dend_4 { pt3dadd( -11.702, 510.112, -1.50711, 0.59 ) }
    dend_4 { pt3dadd( -11.8562, 510.815, -1.52309, 0.59 ) }
    dend_4 { pt3dadd( -12.0071, 511.47, -1.52912, 1.62 ) }
    dend_4 { pt3dadd( -12.2274, 512.476, -1.535, 1.99 ) }
    dend_4 { pt3dadd( -12.2437, 512.552, -1.53533, 1.99 ) }
    dend_4 { pt3dadd( -12.4521, 513.637, -1.53647, 1.99 ) }
    dend_4 { pt3dadd( -12.6295, 514.627, -1.53599, 1.99 ) }
    dend_4 { pt3dadd( -12.8747, 515.879, -1.5397, 1.99 ) }
    dend_4 { pt3dadd( -13.0975, 516.896, -1.54736, 1.84 ) }
    dend_4 { pt3dadd( -13.2752, 517.722, -1.55467, 1.25 ) }
    dend_4 { pt3dadd( -13.4546, 518.578, -1.56312, 0.66 ) }
    dend_4 { pt3dadd( -13.6749, 519.624, -1.57557, 0.66 ) }
    dend_4 { pt3dadd( -14.1077, 521.773, -1.60325, 0.52 ) }
    dend_4 { pt3dadd( -14.4222, 523.492, -1.6217, 0.52 ) }
    dend_4 { pt3dadd( -14.6609, 524.801, -1.54297, 0.52 ) }
    dend_4 { pt3dadd( -14.8384, 525.884, -1.41352, 0.81 ) }
    dend_4 { pt3dadd( -15.0441, 527.238, -1.18025, 0.81 ) }
    dend_4 { pt3dadd( -15.1953, 528.284, -0.892362, 0.81 ) }
    dend_4 { pt3dadd( -15.3293, 529.137, -0.562353, 0.96 ) }
    dend_4 { pt3dadd( -15.7726, 531.517, 0.542847, 0.96 ) }
    dend_4 { pt3dadd( -15.8492, 531.896, 0.7384, 1.47 ) }
    dend_4 { pt3dadd( -16.0327, 532.789, 1.21521, 1.47 ) }
    dend_4 { pt3dadd( -16.32, 534.306, 1.9438, 1.55 ) }
    dend_4 { pt3dadd( -16.4399, 535.082, 2.18372, 1.62 ) }
    dend_4 { pt3dadd( -16.5521, 536.268, 2.27098, 1.77 ) }
    dend_4 { pt3dadd( -16.5649, 536.904, 2.18294, 1.77 ) }
    dend_4 { pt3dadd( -16.5582, 537.821, 1.98427, 1.77 ) }
    dend_4 { pt3dadd( -16.4833, 539.073, 1.61687, 1.62 ) }
    dend_4 { pt3dadd( -16.2858, 540.737, 1.03148, 1.33 ) }
    dend_4 { pt3dadd( -16.1459, 541.656, 0.739469, 1.03 ) }
    dend_4 { pt3dadd( -16.0216, 542.419, 0.519705, 1.03 ) }
    dend_4 { pt3dadd( -15.9625, 542.816, 0.424951, 1.03 ) }
    dend_4 { pt3dadd( -15.759, 544.148, 0.222055, 1.03 ) }
    dend_4 { pt3dadd( -15.6112, 545.229, 0.184457, 1.03 ) }
    dend_4 { pt3dadd( -15.4485, 546.573, 0.239132, 0.96 ) }
    dend_4 { pt3dadd( -15.4387, 546.653, 0.238636, 0.96 ) }
    dend_4 { pt3dadd( -15.3729, 547.149, 0.209559, 0.88 ) }
    dend_4 { pt3dadd( -15.2261, 548.369, 0.102262, 0.81 ) }
    dend_4 { pt3dadd( -15.128, 549.575, -0.0455711, 0.81 ) }
    dend_4 { pt3dadd( -15.1042, 550.413, -0.167893, 0.81 ) }
    dend_4 { pt3dadd( -15.1172, 551.751, -0.315087, 1.25 ) }
    dend_4 { pt3dadd( -15.1407, 552.68, -0.37784, 1.62 ) }
    dend_4 { pt3dadd( -15.1727, 553.587, -0.400268, 1.62 ) }
    dend_4 { pt3dadd( -15.1847, 554.358, -0.382503, 1.4 ) }
    dend_4 { pt3dadd( -15.1846, 555.374, -0.309952, 1.62 ) }
    dend_4 { pt3dadd( -15.1766, 556.694, -0.160311, 2.06 ) }
    dend_4 { pt3dadd( -15.1637, 557.838, 0.0176547, 2.06 ) }
    dend_4 { pt3dadd( -15.127, 558.855, 0.168672, 2.06 ) }
    dend_4 { pt3dadd( -15.0599, 559.791, 0.296562, 2.21 ) }
    dend_4 { pt3dadd( -14.9519, 560.835, 0.416658, 2.21 ) }
    dend_4 { pt3dadd( -14.8373, 561.884, 0.49869, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_4 { pt3dadd( -14.7868, 562.483, 0.510933, 1.84 ) }
    dend_4 { pt3dadd( -14.7602, 563.154, 0.521148, 1.84 ) }
    dend_4 { pt3dadd( -14.7479, 563.612, 0.52744, 1.77 ) }
    dend_4 { pt3dadd( -14.7266, 564.369, 0.537943, 1.69 ) }
    dend_4 { pt3dadd( -14.6886, 564.985, 0.548912, 1.25 ) }
    dend_4 { pt3dadd( -14.6331, 565.694, 0.562906, 0.88 ) }
    dend_4 { pt3dadd( -14.5942, 566.259, 0.573438, 0.74 ) }
    dend_4 { pt3dadd( -14.5529, 567.162, 0.587823, 0.74 ) }
    dend_4 { pt3dadd( -14.5353, 568.02, 0.598973, 0.74 ) }
    dend_4 { pt3dadd( -14.5397, 568.585, 0.617867, 0.74 ) }
    dend_4 { pt3dadd( -14.5461, 568.821, 0.629181, 0.74 ) }
    dend_4 { pt3dadd( -14.5873, 569.559, 0.671442, 0.74 ) }
    dend_4 { pt3dadd( -14.6692, 570.541, 0.733706, 0.74 ) }
    dend_4 { pt3dadd( -14.7687, 571.469, 0.796601, 1.03 ) }
    dend_4 { pt3dadd( -14.9011, 572.599, 0.874902, 1.25 ) }
    dend_4 { pt3dadd( -14.9834, 573.271, 0.917935, 1.25 ) }
    dend_4 { pt3dadd( -15.012, 573.509, 0.938982, 1.55 ) }
    dend_4 { pt3dadd( -15.0735, 574.136, 1.00147, 1.55 ) }
    dend_4 { pt3dadd( -15.1139, 574.72, 1.06057, 1.25 ) }
    dend_4 { pt3dadd( -15.1342, 575.457, 1.07779, 0.66 ) }
    dend_4 { pt3dadd( -15.1508, 576.659, 1.14558, 0.66 ) }
    dend_4 { pt3dadd( -15.1746, 578.381, 1.28983, 0.52 ) }
    dend_4 { pt3dadd( -15.1891, 580.103, 1.43936, 0.52 ) }
    dend_4 { pt3dadd( -15.1939, 581.29, 1.54689, 0.59 ) }
    dend_4 { pt3dadd( -15.1915, 583.486, 1.75244, 0.59 ) }
    dend_4 { pt3dadd( -15.1444, 585.629, 1.96057, 0.96 ) }
    dend_4 { pt3dadd( -15.1191, 586.171, 2.01189, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 27/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.17381, 356.378, 1.39661, 0.29 ) }
    dend_3 { pt3dadd( -9.33212, 356.79, 1.62972, 0.29 ) }
    dend_3 { pt3dadd( -11.1687, 357.443, 1.99932, 0.29 ) }
    dend_3 { pt3dadd( -12.0863, 357.769, 2.18397, 0.29 ) }
    dend_3 { pt3dadd( -13.4819, 358.265, 2.46483, 0.29 ) }
    dend_3 { pt3dadd( -14.3867, 358.587, 2.64691, 0.29 ) }
    dend_3 { pt3dadd( -14.7526, 358.717, 2.72054, 0.88 ) }
    // Section: dend_120, id: dend_120, parent: dend_116 (entry count 34/100)
    dend_120 { pt3dclear() }
    dend_120 { pt3dadd( 104.941, -199.1, -184.671, 1.25 ) }
    dend_120 { pt3dadd( 106.501, -200.29, -185.455, 1.25 ) }
    dend_120 { pt3dadd( 107.655, -201.171, -186.036, 1.25 ) }
    dend_120 { pt3dadd( 108.099, -201.51, -186.259, 1.25 ) }
    // Section: dend_117, id: dend_117, parent: dend_116 (entry count 38/100)
    dend_117 { pt3dclear() }
    dend_117 { pt3dadd( 104.941, -199.1, -184.671, 0.29 ) }
    dend_117 { pt3dadd( 103.371, -200.361, -185.028, 0.29 ) }
    dend_117 { pt3dadd( 102.213, -201.292, -185.292, 0.29 ) }
    dend_117 { pt3dadd( 101.062, -202.216, -185.554, 0.29 ) }
    dend_117 { pt3dadd( 100.587, -202.597, -185.662, 1.03 ) }
    // Section: dend_105, id: dend_105, parent: dend_103 (entry count 43/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 35.9606, -165.379, 23.1637, 0.66 ) }
    dend_105 { pt3dadd( 36.3821, -166.667, 23.6973, 0.66 ) }
    dend_105 { pt3dadd( 36.6898, -167.408, 23.9779, 0.29 ) }
    dend_105 { pt3dadd( 36.9865, -167.913, 24.1318, 0.29 ) }
    dend_105 { pt3dadd( 37.2118, -168.168, 24.1768, 0.59 ) }
    dend_105 { pt3dadd( 37.3277, -168.279, 24.1863, 0.59 ) }
    dend_105 { pt3dadd( 37.6094, -168.554, 24.198, 1.03 ) }
    dend_105 { pt3dadd( 37.9153, -168.838, 24.156, 0.66 ) }
    dend_105 { pt3dadd( 38.4054, -169.354, 24.073, 0.66 ) }
    dend_105 { pt3dadd( 39.1017, -170.214, 23.9413, 0.37 ) }
    dend_105 { pt3dadd( 39.5617, -170.88, 23.849, 0.37 ) }
    dend_105 { pt3dadd( 39.9974, -171.655, 23.759, 0.37 ) }
    dend_105 { pt3dadd( 40.3434, -172.356, 23.6826, 0.37 ) }
    dend_105 { pt3dadd( 40.6838, -173.221, 23.6005, 1.47 ) }
    dend_105 { pt3dadd( 40.7608, -173.515, 23.576, 1.47 ) }
    dend_105 { pt3dadd( 40.8111, -174.016, 23.541, 2.43 ) }
    dend_105 { pt3dadd( 40.8089, -174.558, 23.5067, 2.28 ) }
    // Section: dend_104, id: dend_104, parent: dend_103 (entry count 60/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 35.9606, -165.379, 23.1637, 0.22 ) }
    dend_104 { pt3dadd( 35.3941, -165.819, 22.8618, 0.22 ) }
    dend_104 { pt3dadd( 34.103, -166.819, 22.1738, 0.22 ) }
    dend_104 { pt3dadd( 33.7244, -167.113, 21.9719, 0.22 ) }
    dend_104 { pt3dadd( 33.6228, -167.192, 21.9178, 0.22 ) }
    dend_104 { pt3dadd( 33.1865, -167.53, 21.6853, 0.74 ) }
    dend_104 { pt3dadd( 33.0301, -167.651, 21.602, 1.18 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 67/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -50.9221, -213.55, 13.7793, 1.33 ) }
    dend_87 { pt3dadd( -50.9716, -214.036, 14.1988, 1.33 ) }
    dend_87 { pt3dadd( -51.072, -214.998, 14.9117, 1.33 ) }
    dend_87 { pt3dadd( -51.1935, -216.178, 15.6447, 1.33 ) }
    dend_87 { pt3dadd( -51.1988, -216.231, 15.6695, 1.33 ) }
    dend_87 { pt3dadd( -51.2907, -217.124, 16.0249, 1.11 ) }
    dend_87 { pt3dadd( -51.4025, -218.328, 16.4276, 1.03 ) }
    dend_87 { pt3dadd( -51.4871, -219.2, 16.6263, 1.03 ) }
    dend_87 { pt3dadd( -51.5725, -220.232, 16.6911, 1.55 ) }
    dend_87 { pt3dadd( -51.6493, -221.599, 16.6241, 1.99 ) }
    dend_87 { pt3dadd( -51.6499, -221.66, 16.6182, 1.99 ) }
    dend_87 { pt3dadd( -51.5911, -222.787, 16.4561, 2.21 ) }
    dend_87 { pt3dadd( -51.489, -223.787, 16.2686, 2.21 ) }
    dend_87 { pt3dadd( -51.2985, -224.994, 16.0079, 2.21 ) }
    dend_87 { pt3dadd( -51.1332, -225.779, 15.8367, 2.21 ) }
    dend_87 { pt3dadd( -50.9613, -226.454, 15.7132, 2.21 ) }
    dend_87 { pt3dadd( -50.731, -227.342, 15.5578, 2.14 ) }
    dend_87 { pt3dadd( -50.6106, -227.813, 15.4806, 1.99 ) }
    dend_87 { pt3dadd( -50.3209, -228.996, 15.3175, 1.92 ) }
    dend_87 { pt3dadd( -50.1554, -229.874, 15.2161, 1.84 ) }
    dend_87 { pt3dadd( -50.0351, -231.083, 15.0333, 0.88 ) }
    dend_87 { pt3dadd( -50.0399, -231.988, 14.8287, 0.88 ) }
    dend_87 { pt3dadd( -50.1005, -232.446, 14.6605, 0.88 ) }
    dend_87 { pt3dadd( -50.1305, -232.564, 14.587, 0.88 ) }
    dend_87 { pt3dadd( -50.4197, -233.237, 14.0203, 0.88 ) }
    dend_87 { pt3dadd( -50.7378, -233.812, 13.4157, 1.03 ) }
    dend_87 { pt3dadd( -51.2007, -234.581, 12.5825, 1.18 ) }
    dend_87 { pt3dadd( -51.7502, -235.636, 11.49, 1.18 ) }
    dend_87 { pt3dadd( -52.3549, -237.022, 10.163, 1.33 ) }
    dend_87 { pt3dadd( -52.6312, -237.683, 9.53356, 1.33 ) }
    dend_87 { pt3dadd( -52.9565, -238.526, 8.74562, 1.11 ) }
    dend_87 { pt3dadd( -53.3454, -239.716, 7.70162, 0.74 ) }
    dend_87 { pt3dadd( -53.6753, -240.971, 6.80705, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_87 { pt3dadd( -53.7711, -241.527, 6.52554, 0.88 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 1/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -50.9221, -213.55, 13.7793, 0.29 ) }
    dend_86 { pt3dadd( -48.5804, -211.892, 13.082, 0.29 ) }
    dend_86 { pt3dadd( -47.4864, -211.132, 12.8007, 0.29 ) }
    dend_86 { pt3dadd( -47.3221, -211.018, 12.7584, 0.29 ) }
    dend_86 { pt3dadd( -47.0099, -210.801, 12.6781, 0.29 ) }
    dend_86 { pt3dadd( -46.4972, -210.445, 12.5463, 0.88 ) }
    dend_86 { pt3dadd( -45.9739, -210.082, 12.4117, 1.92 ) }
    dend_86 { pt3dadd( -45.8863, -210.02, 12.426, 1.92 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 9/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -233.842, -86.3819, -6.64588, 0.81 ) }
    dend_73 { pt3dadd( -235.196, -86.6716, -6.19804, 0.81 ) }
    dend_73 { pt3dadd( -235.935, -86.8401, -5.96804, 1.84 ) }
    dend_73 { pt3dadd( -236.507, -86.9808, -5.80536, 2.43 ) }
    dend_73 { pt3dadd( -238.058, -87.382, -5.38704, 0.59 ) }
    dend_73 { pt3dadd( -238.78, -87.5944, -5.19581, 0.59 ) }
    dend_73 { pt3dadd( -238.864, -87.6215, -5.17491, 0.59 ) }
    dend_73 { pt3dadd( -239.365, -87.7949, -5.07941, 0.59 ) }
    dend_73 { pt3dadd( -239.921, -87.9994, -4.9976, 0.59 ) }
    dend_73 { pt3dadd( -239.977, -88.0191, -4.99403, 0.59 ) }
    dend_73 { pt3dadd( -240.526, -88.1932, -4.95962, 0.59 ) }
    dend_73 { pt3dadd( -241.219, -88.4074, -4.86722, 0.59 ) }
    dend_73 { pt3dadd( -241.975, -88.6474, -4.7348, 0.59 ) }
    dend_73 { pt3dadd( -242.709, -88.8945, -4.65456, 0.59 ) }
    dend_73 { pt3dadd( -243.257, -89.0923, -4.63393, 0.59 ) }
    dend_73 { pt3dadd( -244.398, -89.522, -4.64837, 0.37 ) }
    dend_73 { pt3dadd( -245.045, -89.759, -4.69421, 0.59 ) }
    dend_73 { pt3dadd( -245.753, -90.0452, -4.74221, 0.59 ) }
    dend_73 { pt3dadd( -247.016, -90.6147, -4.83117, 0.59 ) }
    dend_73 { pt3dadd( -247.742, -90.9677, -4.89119, 1.55 ) }
    dend_73 { pt3dadd( -247.785, -90.9865, -4.8959, 1.55 ) }
    dend_73 { pt3dadd( -248.456, -91.2041, -5.00134, 2.06 ) }
    dend_73 { pt3dadd( -249.342, -91.4198, -5.18691, 0.81 ) }
    dend_73 { pt3dadd( -249.968, -91.5402, -5.32404, 0.59 ) }
    dend_73 { pt3dadd( -250.033, -91.5507, -5.33663, 0.59 ) }
    dend_73 { pt3dadd( -250.929, -91.6728, -5.63812, 0.59 ) }
    dend_73 { pt3dadd( -251.656, -91.7782, -5.9803, 0.59 ) }
    dend_73 { pt3dadd( -252.931, -91.9781, -6.80579, 0.59 ) }
    dend_73 { pt3dadd( -253.051, -91.9974, -6.89217, 0.59 ) }
    dend_73 { pt3dadd( -253.451, -92.077, -7.18813, 1.11 ) }
    dend_73 { pt3dadd( -254.195, -92.2548, -7.74038, 1.11 ) }
    dend_73 { pt3dadd( -255.088, -92.5146, -8.42517, 0.59 ) }
    dend_73 { pt3dadd( -255.939, -92.7654, -9.05317, 0.81 ) }
    dend_73 { pt3dadd( -256.674, -92.9448, -9.53938, 0.81 ) }
    dend_73 { pt3dadd( -257.255, -93.0891, -9.93404, 0.29 ) }
    dend_73 { pt3dadd( -257.293, -93.098, -9.95948, 0.29 ) }
    dend_73 { pt3dadd( -257.691, -93.1742, -10.1753, 0.29 ) }
    dend_73 { pt3dadd( -258.029, -93.215, -10.3387, 0.29 ) }
    dend_73 { pt3dadd( -258.256, -93.225, -10.4299, 0.66 ) }
    dend_73 { pt3dadd( -258.303, -93.2255, -10.4473, 0.66 ) }
    dend_73 { pt3dadd( -259.192, -93.2121, -10.7942, 0.66 ) }
    dend_73 { pt3dadd( -260.135, -93.2023, -11.1684, 0.66 ) }
    dend_73 { pt3dadd( -260.934, -93.1944, -11.4818, 0.66 ) }
    dend_73 { pt3dadd( -261.804, -93.2001, -11.8135, 0.44 ) }
    dend_73 { pt3dadd( -262.267, -93.1984, -11.9808, 0.44 ) }
    dend_73 { pt3dadd( -263.083, -93.2189, -12.2579, 0.44 ) }
    dend_73 { pt3dadd( -263.395, -93.2397, -12.3732, 1.25 ) }
    dend_73 { pt3dadd( -263.878, -93.2938, -12.5855, 1.69 ) }
    dend_73 { pt3dadd( -264.508, -93.3714, -12.8759, 0.59 ) }
    dend_73 { pt3dadd( -265.338, -93.5054, -13.3108, 0.59 ) }
    dend_73 { pt3dadd( -265.959, -93.6169, -13.6327, 0.59 ) }
    dend_73 { pt3dadd( -267.394, -93.9, -14.3234, 0.59 ) }
    dend_73 { pt3dadd( -268.729, -94.1733, -14.9657, 0.59 ) }
    dend_73 { pt3dadd( -269.186, -94.2725, -15.1829, 0.96 ) }
    dend_73 { pt3dadd( -269.967, -94.4536, -15.5678, 1.47 ) }
    dend_73 { pt3dadd( -271.313, -94.7733, -16.2232, 0.52 ) }
    dend_73 { pt3dadd( -272.287, -94.9759, -16.6687, 0.52 ) }
    dend_73 { pt3dadd( -272.36, -94.9916, -16.6974, 0.52 ) }
    dend_73 { pt3dadd( -272.886, -95.1107, -16.875, 0.52 ) }
    dend_73 { pt3dadd( -274.128, -95.4476, -17.2753, 0.52 ) }
    dend_73 { pt3dadd( -274.225, -95.4777, -17.3068, 0.52 ) }
    dend_73 { pt3dadd( -274.483, -95.5708, -17.4019, 0.52 ) }
    dend_73 { pt3dadd( -274.536, -95.5911, -17.4202, 0.52 ) }
    dend_73 { pt3dadd( -275.228, -95.8742, -17.6237, 0.52 ) }
    dend_73 { pt3dadd( -276.019, -96.202, -17.8137, 0.52 ) }
    dend_73 { pt3dadd( -276.691, -96.4677, -17.9291, 1.77 ) }
    dend_73 { pt3dadd( -277.295, -96.69, -18.0262, 2.06 ) }
    dend_73 { pt3dadd( -278.123, -96.9699, -18.1499, 1.18 ) }
    dend_73 { pt3dadd( -278.712, -97.1595, -18.2313, 0.66 ) }
    dend_73 { pt3dadd( -279.129, -97.2811, -18.2847, 0.66 ) }
    dend_73 { pt3dadd( -280.068, -97.5275, -18.404, 0.66 ) }
    dend_73 { pt3dadd( -280.884, -97.7252, -18.497, 0.59 ) }
    dend_73 { pt3dadd( -281.691, -97.9066, -18.6033, 0.59 ) }
    dend_73 { pt3dadd( -282.087, -97.9778, -18.6639, 0.59 ) }
    dend_73 { pt3dadd( -282.192, -97.993, -18.6853, 0.59 ) }
    dend_73 { pt3dadd( -282.807, -98.0779, -18.866, 0.59 ) }
    dend_73 { pt3dadd( -283.355, -98.1475, -19.0853, 0.59 ) }
    dend_73 { pt3dadd( -283.799, -98.1887, -19.2788, 0.74 ) }
    dend_73 { pt3dadd( -284.175, -98.2223, -19.4392, 0.81 ) }
    dend_73 { pt3dadd( -284.759, -98.2729, -19.661, 1.25 ) }
    dend_73 { pt3dadd( -285.471, -98.3468, -19.9093, 1.62 ) }
    dend_73 { pt3dadd( -285.516, -98.3528, -19.9284, 1.62 ) }
    dend_73 { pt3dadd( -286.287, -98.4497, -20.2798, 0.66 ) }
    dend_73 { pt3dadd( -287.307, -98.5569, -20.7391, 0.59 ) }
    dend_73 { pt3dadd( -288.189, -98.6324, -21.1152, 0.59 ) }
    dend_73 { pt3dadd( -288.233, -98.6349, -21.1325, 0.59 ) }
    dend_73 { pt3dadd( -289.761, -98.6967, -21.6999, 0.66 ) }
    dend_73 { pt3dadd( -290.974, -98.7291, -22.1549, 0.66 ) }
    dend_73 { pt3dadd( -291.766, -98.7265, -22.4116, 0.59 ) }
    dend_73 { pt3dadd( -292.37, -98.7034, -22.5485, 1.03 ) }
    dend_73 { pt3dadd( -292.775, -98.6996, -22.5929, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_73 { pt3dadd( -293.606, -98.7205, -22.6109, 0.59 ) }
    dend_73 { pt3dadd( -294.036, -98.7462, -22.5737, 0.96 ) }
    dend_73 { pt3dadd( -295.393, -98.8891, -22.4236, 0.66 ) }
    dend_73 { pt3dadd( -296.003, -98.9625, -22.3313, 0.59 ) }
    dend_73 { pt3dadd( -297.516, -99.1555, -22.0699, 0.52 ) }
    dend_73 { pt3dadd( -297.931, -99.203, -21.9998, 0.52 ) }
    dend_73 { pt3dadd( -298.215, -99.2247, -21.9596, 0.96 ) }
    dend_73 { pt3dadd( -298.726, -99.2668, -21.9004, 0.96 ) }
    dend_73 { pt3dadd( -299.578, -99.3406, -21.8491, 0.52 ) }
    dend_73 { pt3dadd( -300.146, -99.3675, -21.8055, 0.52 ) }
    dend_73 { pt3dadd( -300.901, -99.3826, -21.7951, 0.52 ) }
    dend_73 { pt3dadd( -301.592, -99.4139, -21.8088, 0.52 ) }
    dend_73 { pt3dadd( -302.52, -99.4784, -21.8747, 0.96 ) }
    dend_73 { pt3dadd( -303.11, -99.5212, -21.9531, 1.55 ) }
    dend_73 { pt3dadd( -303.689, -99.5499, -22.0405, 0.59 ) }
    dend_73 { pt3dadd( -304.855, -99.5763, -22.1945, 0.52 ) }
    dend_73 { pt3dadd( -305.524, -99.5829, -22.271, 0.52 ) }
    dend_73 { pt3dadd( -306.159, -99.5674, -22.3362, 0.52 ) }
    dend_73 { pt3dadd( -307.085, -99.4958, -22.4268, 0.52 ) }
    dend_73 { pt3dadd( -308.293, -99.394, -22.5044, 0.52 ) }
    dend_73 { pt3dadd( -308.35, -99.3895, -22.5061, 0.52 ) }
    dend_73 { pt3dadd( -308.769, -99.3495, -22.4967, 0.88 ) }
    dend_73 { pt3dadd( -309.676, -99.2638, -22.5075, 0.52 ) }
    dend_73 { pt3dadd( -309.733, -99.2604, -22.5083, 0.52 ) }
    dend_73 { pt3dadd( -310.865, -99.2596, -22.5517, 0.52 ) }
    dend_73 { pt3dadd( -311.353, -99.2769, -22.6184, 0.52 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 26/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -233.842, -86.3819, -6.64588, 0.52 ) }
    dend_72 { pt3dadd( -233.996, -86.0353, -6.81236, 0.52 ) }
    dend_72 { pt3dadd( -234.258, -85.4489, -7.09884, 0.29 ) }
    dend_72 { pt3dadd( -234.471, -84.8891, -7.36439, 0.29 ) }
    dend_72 { pt3dadd( -234.603, -84.5443, -7.528, 0.52 ) }
    dend_72 { pt3dadd( -234.753, -84.1501, -7.71503, 0.52 ) }
    dend_72 { pt3dadd( -235.085, -83.2793, -8.12819, 0.22 ) }
    dend_72 { pt3dadd( -235.211, -82.9766, -8.26663, 0.37 ) }
    dend_72 { pt3dadd( -235.474, -82.3779, -8.55737, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 35/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 94.7181, 29.2933, -26.209, 0.74 ) }
    dend_50 { pt3dadd( 96.5229, 28.8106, -26.6003, 0.74 ) }
    dend_50 { pt3dadd( 97.6316, 28.5251, -26.9665, 0.74 ) }
    dend_50 { pt3dadd( 98.0948, 28.422, -27.1365, 1.62 ) }
    dend_50 { pt3dadd( 98.7264, 28.3002, -27.3691, 2.65 ) }
    dend_50 { pt3dadd( 99.5634, 28.151, -27.6763, 3.09 ) }
    dend_50 { pt3dadd( 99.653, 28.1379, -27.7078, 3.09 ) }
    dend_50 { pt3dadd( 101.397, 28.0441, -28.0943, 1.03 ) }
    dend_50 { pt3dadd( 101.965, 28.0589, -28.1653, 1.03 ) }
    dend_50 { pt3dadd( 102.67, 28.1021, -28.1556, 0.74 ) }
    dend_50 { pt3dadd( 102.755, 28.1068, -28.1443, 0.74 ) }
    dend_50 { pt3dadd( 103.55, 28.0938, -27.9529, 0.74 ) }
    dend_50 { pt3dadd( 105.249, 27.9082, -27.4191, 0.66 ) }
    dend_50 { pt3dadd( 106.385, 27.6698, -26.9796, 0.96 ) }
    dend_50 { pt3dadd( 107.242, 27.3884, -26.7844, 0.96 ) }
    dend_50 { pt3dadd( 107.828, 27.1651, -26.7275, 1.47 ) }
    dend_50 { pt3dadd( 108.73, 26.8208, -26.7861, 1.77 ) }
    dend_50 { pt3dadd( 109.498, 26.5426, -26.9432, 1.77 ) }
    dend_50 { pt3dadd( 110.32, 26.2813, -27.2164, 0.81 ) }
    dend_50 { pt3dadd( 112.426, 25.8575, -28.0495, 0.88 ) }
    dend_50 { pt3dadd( 113.254, 25.798, -28.4366, 0.88 ) }
    dend_50 { pt3dadd( 114.517, 25.806, -29.0881, 0.96 ) }
    dend_50 { pt3dadd( 115.235, 25.8368, -29.3984, 0.96 ) }
    dend_50 { pt3dadd( 115.68, 25.8481, -29.5391, 0.96 ) }
    dend_50 { pt3dadd( 116.443, 25.8693, -29.6848, 0.81 ) }
    dend_50 { pt3dadd( 118.482, 25.9399, -29.8747, 0.59 ) }
    dend_50 { pt3dadd( 119.639, 25.9604, -29.9402, 1.03 ) }
    dend_50 { pt3dadd( 122.575, 25.9499, -29.9925, 1.47 ) }
    dend_50 { pt3dadd( 124.858, 25.8944, -30.0218, 0.74 ) }
    dend_50 { pt3dadd( 126.145, 25.8594, -30.0991, 0.74 ) }
    dend_50 { pt3dadd( 127.611, 25.8242, -30.2528, 1.18 ) }
    dend_50 { pt3dadd( 128.428, 25.8505, -30.3836, 1.62 ) }
    dend_50 { pt3dadd( 128.496, 25.8571, -30.4011, 1.62 ) }
    dend_50 { pt3dadd( 129.026, 25.9377, -30.6143, 2.28 ) }
    dend_50 { pt3dadd( 130.806, 26.3135, -31.2664, 2.28 ) }
    dend_50 { pt3dadd( 132.524, 26.7006, -31.8226, 0.81 ) }
    dend_50 { pt3dadd( 134.134, 27.1292, -32.1747, 0.52 ) }
    dend_50 { pt3dadd( 134.292, 27.1735, -32.1934, 0.52 ) }
    dend_50 { pt3dadd( 134.577, 27.2464, -32.1968, 0.96 ) }
    dend_50 { pt3dadd( 136.344, 27.6364, -32.119, 1.25 ) }
    dend_50 { pt3dadd( 136.455, 27.654, -32.106, 1.25 ) }
    dend_50 { pt3dadd( 137.675, 27.6866, -32.0025, 1.11 ) }
    dend_50 { pt3dadd( 138.908, 27.543, -31.9791, 0.88 ) }
    dend_50 { pt3dadd( 140.52, 27.2082, -32.0405, 1.18 ) }
    dend_50 { pt3dadd( 141.65, 26.8827, -32.1405, 1.55 ) }
    dend_50 { pt3dadd( 142.197, 26.6909, -32.2189, 1.25 ) }
    dend_50 { pt3dadd( 143.896, 26.0639, -32.4659, 0.96 ) }
    dend_50 { pt3dadd( 145.102, 25.5827, -32.6477, 0.81 ) }
    dend_50 { pt3dadd( 145.907, 25.2907, -32.7646, 0.66 ) }
    dend_50 { pt3dadd( 146.774, 25.0299, -32.901, 0.66 ) }
    dend_50 { pt3dadd( 147.555, 24.9103, -33.0153, 0.59 ) }
    dend_50 { pt3dadd( 148.582, 24.9753, -33.1775, 0.59 ) }
    dend_50 { pt3dadd( 148.699, 25.0018, -33.1638, 0.59 ) }
    dend_50 { pt3dadd( 149.868, 25.3233, -32.9838, 0.59 ) }
    dend_50 { pt3dadd( 151.005, 25.6706, -32.8002, 1.11 ) }
    dend_50 { pt3dadd( 152.077, 26.0139, -32.6675, 2.21 ) }
    dend_50 { pt3dadd( 154.308, 26.7305, -32.4577, 0.96 ) }
    dend_50 { pt3dadd( 158.638, 28.0491, -32.1175, 0.96 ) }
    dend_50 { pt3dadd( 161.293, 28.859, -31.9499, 1.77 ) }
    dend_50 { pt3dadd( 161.891, 29.0367, -31.9709, 2.28 ) }
    dend_50 { pt3dadd( 163.37, 29.4871, -32.173, 1.69 ) }
    dend_50 { pt3dadd( 164.43, 29.8003, -32.5168, 0.74 ) }
    dend_50 { pt3dadd( 164.688, 29.8823, -32.6692, 0.74 ) }
    dend_50 { pt3dadd( 165.917, 30.2432, -33.8898, 0.52 ) }
    dend_50 { pt3dadd( 167.68, 30.63, -35.836, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_50 { pt3dadd( 168.228, 30.6883, -36.5561, 0.88 ) }
    dend_50 { pt3dadd( 168.682, 30.6681, -37.2163, 0.44 ) }
    dend_50 { pt3dadd( 168.728, 30.6607, -37.28, 0.44 ) }
    dend_50 { pt3dadd( 170.781, 30.3146, -39.563, 0.81 ) }
    dend_50 { pt3dadd( 171.217, 30.2184, -39.9281, 0.81 ) }
    dend_50 { pt3dadd( 171.282, 30.2092, -39.9566, 0.81 ) }
    dend_50 { pt3dadd( 172.397, 30.1229, -40.3111, 0.81 ) }
    dend_50 { pt3dadd( 173.772, 30.1094, -40.4452, 0.74 ) }
    dend_50 { pt3dadd( 175.585, 30.1491, -40.3442, 0.66 ) }
    dend_50 { pt3dadd( 176.407, 30.1932, -40.1223, 0.66 ) }
    dend_50 { pt3dadd( 177.461, 30.3058, -39.7383, 1.55 ) }
    dend_50 { pt3dadd( 177.597, 30.3304, -39.6737, 1.55 ) }
    dend_50 { pt3dadd( 179.465, 30.8264, -38.5691, 1.55 ) }
    dend_50 { pt3dadd( 179.584, 30.8655, -38.4953, 1.55 ) }
    dend_50 { pt3dadd( 181.324, 31.4894, -37.5056, 1.03 ) }
    dend_50 { pt3dadd( 182.404, 31.8833, -37.0241, 0.52 ) }
    dend_50 { pt3dadd( 183.734, 32.3505, -36.6231, 0.52 ) }
    dend_50 { pt3dadd( 184.382, 32.5607, -36.5208, 0.52 ) }
    dend_50 { pt3dadd( 185.901, 33.0464, -36.5038, 0.88 ) }
    dend_50 { pt3dadd( 187.337, 33.453, -36.7419, 2.43 ) }
    dend_50 { pt3dadd( 188.423, 33.7029, -37.0376, 2.8 ) }
    dend_50 { pt3dadd( 189.737, 33.9486, -37.4265, 2.14 ) }
    dend_50 { pt3dadd( 190.558, 34.0776, -37.7407, 0.96 ) }
    dend_50 { pt3dadd( 191.537, 34.2195, -38.1528, 0.96 ) }
    dend_50 { pt3dadd( 195.086, 34.6696, -39.7077, 0.52 ) }
    dend_50 { pt3dadd( 197.124, 34.9348, -40.7849, 0.52 ) }
    dend_50 { pt3dadd( 197.852, 35.0312, -41.229, 0.52 ) }
    dend_50 { pt3dadd( 200.101, 35.3683, -42.9012, 0.52 ) }
    dend_50 { pt3dadd( 200.229, 35.3903, -43.0125, 0.52 ) }
    dend_50 { pt3dadd( 200.845, 35.5298, -43.6635, 0.52 ) }
    dend_50 { pt3dadd( 202.216, 36.0165, -45.3473, 0.52 ) }
    dend_50 { pt3dadd( 202.314, 36.0637, -45.4782, 0.52 ) }
    dend_50 { pt3dadd( 203.734, 36.6379, -46.4704, 0.88 ) }
    dend_50 { pt3dadd( 203.799, 36.6553, -46.4775, 0.88 ) }
    dend_50 { pt3dadd( 204.497, 36.792, -46.4476, 0.88 ) }
    dend_50 { pt3dadd( 207.459, 37.231, -46.0416, 0.66 ) }
    dend_50 { pt3dadd( 208.59, 37.3335, -45.8215, 0.96 ) }
    dend_50 { pt3dadd( 210.656, 37.4522, -45.4203, 0.66 ) }
    dend_50 { pt3dadd( 211.699, 37.4954, -45.2741, 0.96 ) }
    dend_50 { pt3dadd( 212.976, 37.5554, -45.2076, 1.11 ) }
    dend_50 { pt3dadd( 213.75, 37.5961, -45.2835, 1.11 ) }
    dend_50 { pt3dadd( 214.789, 37.687, -45.6209, 0.81 ) }
    dend_50 { pt3dadd( 215.412, 37.7471, -45.9039, 0.52 ) }
    dend_50 { pt3dadd( 217.234, 37.9231, -46.9807, 0.81 ) }
    dend_50 { pt3dadd( 218.061, 38.0067, -47.5535, 0.81 ) }
    dend_50 { pt3dadd( 219.592, 38.1546, -48.6868, 1.25 ) }
    dend_50 { pt3dadd( 220.386, 38.2158, -49.2232, 1.69 ) }
    dend_50 { pt3dadd( 220.754, 38.2399, -49.4392, 2.06 ) }
    dend_50 { pt3dadd( 221.841, 38.2514, -49.8947, 0.96 ) }
    dend_50 { pt3dadd( 221.91, 38.2489, -49.9101, 0.96 ) }
    dend_50 { pt3dadd( 224.362, 38.1957, -50.1609, 0.59 ) }
    dend_50 { pt3dadd( 225.552, 38.2125, -50.1725, 0.96 ) }
    dend_50 { pt3dadd( 226.21, 38.2085, -50.1927, 1.69 ) }
    dend_50 { pt3dadd( 227.936, 38.1742, -50.2862, 2.8 ) }
    dend_50 { pt3dadd( 229.692, 38.1831, -50.4721, 1.03 ) }
    dend_50 { pt3dadd( 231.76, 38.2694, -50.7837, 0.52 ) }
    dend_50 { pt3dadd( 232.977, 38.3654, -51.0185, 0.52 ) }
    dend_50 { pt3dadd( 235.269, 38.6483, -51.5743, 0.52 ) }
    dend_50 { pt3dadd( 235.46, 38.6851, -51.6239, 0.52 ) }
    dend_50 { pt3dadd( 237.9, 39.3562, -52.2964, 0.81 ) }
    dend_50 { pt3dadd( 239.177, 39.7956, -52.6557, 0.81 ) }
    dend_50 { pt3dadd( 240.008, 40.1314, -53.0095, 0.88 ) }
    dend_50 { pt3dadd( 240.975, 40.5475, -53.4854, 0.81 ) }
    dend_50 { pt3dadd( 242.181, 41.0953, -54.0887, 0.81 ) }
    dend_50 { pt3dadd( 242.655, 41.266, -54.3499, 0.81 ) }
    dend_50 { pt3dadd( 243.159, 41.3728, -54.6576, 0.81 ) }
    dend_50 { pt3dadd( 246.454, 41.7682, -56.7757, 0.81 ) }
    dend_50 { pt3dadd( 247.239, 41.8354, -57.2577, 0.81 ) }
    dend_50 { pt3dadd( 247.873, 41.887, -57.6308, 0.81 ) }
    dend_50 { pt3dadd( 249.056, 41.9956, -58.2504, 0.74 ) }
    dend_50 { pt3dadd( 250.303, 42.204, -58.7592, 0.74 ) }
    dend_50 { pt3dadd( 250.992, 42.3756, -59.0212, 0.74 ) }
    dend_50 { pt3dadd( 252.284, 42.8183, -59.4085, 0.66 ) }
    dend_50 { pt3dadd( 253.412, 43.2684, -59.8319, 1.11 ) }
    dend_50 { pt3dadd( 254.097, 43.5814, -60.1299, 1.11 ) }
    dend_50 { pt3dadd( 255.178, 44.0833, -60.6071, 0.66 ) }
    dend_50 { pt3dadd( 257.326, 44.8747, -61.6578, 1.84 ) }
    dend_50 { pt3dadd( 257.544, 44.9321, -61.7601, 1.84 ) }
    dend_50 { pt3dadd( 258.523, 45.1151, -62.1726, 3.02 ) }
    dend_50 { pt3dadd( 259.285, 45.2291, -62.4152, 3.02 ) }
    dend_50 { pt3dadd( 261.536, 45.5416, -62.9598, 0.88 ) }
    dend_50 { pt3dadd( 264.085, 45.9291, -63.3599, 0.81 ) }
    dend_50 { pt3dadd( 265.228, 46.1436, -63.4316, 1.03 ) }
    dend_50 { pt3dadd( 266.645, 46.4654, -63.4846, 0.74 ) }
    dend_50 { pt3dadd( 268.159, 46.8821, -63.4636, 0.74 ) }
    dend_50 { pt3dadd( 268.819, 47.0755, -63.4138, 1.11 ) }
    dend_50 { pt3dadd( 269.815, 47.3903, -63.2479, 1.11 ) }
    dend_50 { pt3dadd( 270.391, 47.5657, -63.1203, 1.11 ) }
    dend_50 { pt3dadd( 271.459, 47.832, -62.9465, 1.11 ) }
    dend_50 { pt3dadd( 272.434, 47.9882, -62.8664, 0.81 ) }
    dend_50 { pt3dadd( 273.202, 48.0515, -62.8765, 0.81 ) }
    dend_50 { pt3dadd( 274.431, 48.0625, -63.0309, 0.81 ) }
    dend_50 { pt3dadd( 275.647, 48.0026, -63.2907, 0.96 ) }
    dend_50 { pt3dadd( 275.812, 47.991, -63.3135, 0.96 ) }
    dend_50 { pt3dadd( 276.784, 47.903, -63.4777, 0.96 ) }
    dend_50 { pt3dadd( 277.899, 47.7989, -63.7049, 0.96 ) }
    dend_50 { pt3dadd( 279.703, 47.6829, -64.0572, 0.52 ) }
    dend_50 { pt3dadd( 281.312, 47.6533, -64.3157, 0.52 ) }
    dend_50 { pt3dadd( 284.113, 47.6851, -64.5297, 2.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 99/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 94.7181, 29.2933, -26.209, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_49 { pt3dadd( 94.8844, 30.2943, -26.1338, 0.44 ) }
    dend_49 { pt3dadd( 95.0066, 31.4738, -26.0416, 0.44 ) }
    dend_49 { pt3dadd( 95.0379, 31.7762, -26.0179, 0.44 ) }
    dend_49 { pt3dadd( 95.1343, 32.7053, -25.9453, 0.44 ) }
    dend_49 { pt3dadd( 95.2391, 33.7169, -25.8662, 0.44 ) }
    dend_49 { pt3dadd( 95.2956, 34.2619, -25.8236, 0.96 ) }
    dend_49 { pt3dadd( 95.296, 34.5792, -25.7949, 1.33 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 179.31, 295.449, 39.5299, 0.81 ) }
    dend_25 { pt3dadd( 179.807, 298.066, 40.9886, 0.81 ) }
    dend_25 { pt3dadd( 180.028, 299.161, 41.5562, 0.81 ) }
    dend_25 { pt3dadd( 180.47, 301.236, 42.5344, 0.66 ) }
    dend_25 { pt3dadd( 180.698, 302.314, 42.9934, 0.66 ) }
    dend_25 { pt3dadd( 180.935, 303.613, 43.5292, 0.59 ) }
    dend_25 { pt3dadd( 181.061, 304.344, 43.8235, 0.96 ) }
    dend_25 { pt3dadd( 181.224, 305.081, 44.061, 0.96 ) }
    dend_25 { pt3dadd( 181.404, 306.053, 44.3617, 0.96 ) }
    dend_25 { pt3dadd( 181.561, 306.892, 44.5929, 0.59 ) }
    dend_25 { pt3dadd( 181.961, 308.73, 45.0856, 0.29 ) }
    dend_25 { pt3dadd( 182.055, 309.099, 45.1752, 0.52 ) }
    dend_25 { pt3dadd( 182.259, 309.858, 45.329, 0.52 ) }
    dend_25 { pt3dadd( 182.325, 310.083, 45.3693, 0.52 ) }
    dend_25 { pt3dadd( 182.59, 310.9, 45.444, 0.52 ) }
    dend_25 { pt3dadd( 182.938, 311.754, 45.4597, 1.47 ) }
    dend_25 { pt3dadd( 183.367, 312.624, 45.4197, 2.36 ) }
    dend_25 { pt3dadd( 183.775, 313.389, 45.3844, 2.06 ) }
    dend_25 { pt3dadd( 184.223, 314.234, 45.4245, 1.33 ) }
    dend_25 { pt3dadd( 184.962, 315.634, 45.6073, 0.52 ) }
    dend_25 { pt3dadd( 185.566, 316.764, 45.8365, 0.52 ) }
    dend_25 { pt3dadd( 185.977, 317.604, 46.0997, 0.52 ) }
    dend_25 { pt3dadd( 186.268, 318.313, 46.3795, 0.52 ) }
    dend_25 { pt3dadd( 186.906, 320.18, 47.2847, 1.4 ) }
    dend_25 { pt3dadd( 187.16, 321.145, 47.7065, 1.4 ) }
    dend_25 { pt3dadd( 187.17, 321.215, 47.7317, 1.4 ) }
    dend_25 { pt3dadd( 187.201, 322.446, 48.1042, 1.77 ) }
    dend_25 { pt3dadd( 187.148, 323.524, 48.3206, 1.77 ) }
    dend_25 { pt3dadd( 187.109, 324.147, 48.3197, 1.4 ) }
    dend_25 { pt3dadd( 187.11, 326.405, 47.5982, 0.44 ) }
    dend_25 { pt3dadd( 187.144, 327.018, 47.3083, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 38/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 179.31, 295.449, 39.5299, 0.29 ) }
    dend_24 { pt3dadd( 181.091, 294.919, 39.4316, 0.29 ) }
    dend_24 { pt3dadd( 182.607, 294.469, 39.3478, 0.29 ) }
    dend_24 { pt3dadd( 184.179, 294.001, 39.2611, 0.29 ) }
    // Section: dend_18, id: dend_18, parent: dend_12 (entry count 42/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 81.4223, 343.633, 44.5914, 1.62 ) }
    dend_18 { pt3dadd( 81.0333, 343.589, 44.9282, 1.62 ) }
    dend_18 { pt3dadd( 79.0658, 343.222, 46.6688, 0.44 ) }
    dend_18 { pt3dadd( 78.4822, 343.074, 47.2087, 0.44 ) }
    dend_18 { pt3dadd( 77.5827, 342.798, 48.0757, 0.44 ) }
    dend_18 { pt3dadd( 76.5733, 342.433, 49.0924, 0.44 ) }
    dend_18 { pt3dadd( 75.4378, 341.901, 50.3092, 0.81 ) }
    dend_18 { pt3dadd( 74.805, 341.463, 51.0559, 0.37 ) }
    dend_18 { pt3dadd( 74.5963, 341.178, 51.3575, 0.37 ) }
    dend_18 { pt3dadd( 74.5102, 341.024, 51.491, 0.88 ) }
    dend_18 { pt3dadd( 74.4013, 340.782, 51.6704, 0.88 ) }
    dend_18 { pt3dadd( 74.1085, 339.956, 52.1096, 0.37 ) }
    dend_18 { pt3dadd( 73.8776, 339.306, 52.3917, 0.37 ) }
    dend_18 { pt3dadd( 73.5943, 338.657, 52.675, 1.03 ) }
    dend_18 { pt3dadd( 73.4083, 338.287, 52.8246, 1.55 ) }
    dend_18 { pt3dadd( 72.6969, 336.977, 53.3496, 0.37 ) }
    dend_18 { pt3dadd( 72.4629, 336.58, 53.5061, 0.59 ) }
    dend_18 { pt3dadd( 72.2952, 336.315, 53.6066, 0.37 ) }
    dend_18 { pt3dadd( 71.9469, 335.758, 53.8149, 0.37 ) }
    dend_18 { pt3dadd( 71.7974, 335.495, 53.8882, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 62/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 81.4223, 343.633, 44.5914, 0.37 ) }
    dend_13 { pt3dadd( 79.7457, 345.008, 45.3255, 0.37 ) }
    dend_13 { pt3dadd( 78.9223, 345.683, 45.686, 0.22 ) }
    dend_13 { pt3dadd( 78.2711, 346.216, 45.9711, 0.22 ) }
    dend_13 { pt3dadd( 77.498, 346.85, 46.3096, 0.22 ) }
    dend_13 { pt3dadd( 76.6254, 347.566, 46.6916, 0.44 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 68/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -15.1191, 586.171, 2.01189, 0.22 ) }
    dend_10 { pt3dadd( -17.2071, 585.378, 10.9153, 0.22 ) }
    dend_10 { pt3dadd( -17.3934, 585.3, 11.6199, 0.22 ) }
    dend_10 { pt3dadd( -17.5094, 585.248, 12.0026, 0.52 ) }
    dend_10 { pt3dadd( -17.5678, 585.221, 12.1747, 0.52 ) }
    dend_10 { pt3dadd( -17.6899, 585.16, 12.485, 0.88 ) }
    dend_10 { pt3dadd( -18.1795, 584.916, 13.5571, 0.37 ) }
    dend_10 { pt3dadd( -18.4493, 584.755, 13.5692, 0.37 ) }
    dend_10 { pt3dadd( -18.9584, 584.434, 13.5928, 0.37 ) }
    dend_10 { pt3dadd( -19.1201, 584.322, 13.6002, 0.37 ) }
    dend_10 { pt3dadd( -19.7462, 583.879, 13.6282, 0.74 ) }
    dend_10 { pt3dadd( -20.0848, 583.648, 13.642, 0.81 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 80/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -15.1191, 586.171, 2.01189, 1.47 ) }
    dend_5 { pt3dadd( -15.0658, 586.276, 1.91794, 1.47 ) }
    dend_5 { pt3dadd( -14.5035, 587.562, 1.04171, 1.47 ) }
    dend_5 { pt3dadd( -14.0965, 588.659, 0.459271, 1.92 ) }
    dend_5 { pt3dadd( -13.6245, 590.033, -0.196301, 2.28 ) }
    dend_5 { pt3dadd( -13.4043, 590.753, -0.480454, 2.73 ) }
    dend_5 { pt3dadd( -12.9837, 592.361, -0.995547, 3.46 ) }
    dend_5 { pt3dadd( -12.6384, 594.01, -1.31957, 2.73 ) }
    dend_5 { pt3dadd( -12.4649, 595.195, -1.39465, 3.17 ) }
    dend_5 { pt3dadd( -12.4429, 595.468, -1.39003, 3.17 ) }
    dend_5 { pt3dadd( -12.3876, 597.389, -1.2586, 2.43 ) }
    dend_5 { pt3dadd( -12.3904, 599.019, -1.12498, 1.47 ) }
    dend_5 { pt3dadd( -12.4459, 601.543, -0.868156, 0.52 ) }
    dend_5 { pt3dadd( -12.4826, 602.762, -0.750378, 0.52 ) }
    dend_5 { pt3dadd( -12.5126, 604.221, -0.621308, 0.52 ) }
    dend_5 { pt3dadd( -12.5164, 605.329, -0.526992, 1.47 ) }
    dend_5 { pt3dadd( -12.5071, 606.441, -0.437468, 1.62 ) }
    dend_5 { pt3dadd( -12.4729, 607.74, -0.342513, 1.62 ) }
    dend_5 { pt3dadd( -12.4128, 609.027, -0.253637, 1.62 ) }
    dend_5 { pt3dadd( -12.3111, 610.212, -0.182405, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_5 { pt3dadd( -12.1012, 611.986, -0.0488688, 0.66 ) }
    dend_5 { pt3dadd( -11.9759, 613.11, 0.0415309, 0.66 ) }
    dend_5 { pt3dadd( -11.9655, 613.213, 0.0466181, 0.66 ) }
    dend_5 { pt3dadd( -11.8609, 614.459, 0.0637667, 0.96 ) }
    dend_5 { pt3dadd( -11.8059, 615.292, 0.056336, 1.69 ) }
    dend_5 { pt3dadd( -11.7434, 616.393, 0.0266732, 2.14 ) }
    dend_5 { pt3dadd( -11.7096, 617.205, -0.00875761, 2.65 ) }
    dend_5 { pt3dadd( -11.6483, 618.423, -0.06855, 2.65 ) }
    dend_5 { pt3dadd( -11.5919, 619.467, -0.154985, 2.06 ) }
    dend_5 { pt3dadd( -11.5016, 620.844, -0.314043, 0.96 ) }
    dend_5 { pt3dadd( -11.4149, 622.126, -0.46736, 0.52 ) }
    dend_5 { pt3dadd( -11.3819, 622.759, -0.573505, 0.52 ) }
    dend_5 { pt3dadd( -11.3426, 623.547, -0.723226, 0.52 ) }
    dend_5 { pt3dadd( -11.304, 624.606, -0.930478, 0.52 ) }
    dend_5 { pt3dadd( -11.2918, 625.14, -1.05312, 1.11 ) }
    dend_5 { pt3dadd( -11.2848, 626.487, -1.40273, 1.55 ) }
    dend_5 { pt3dadd( -11.3126, 628.15, -1.83578, 1.55 ) }
    dend_5 { pt3dadd( -11.3544, 629.116, -2.06239, 1.62 ) }
    dend_5 { pt3dadd( -11.4257, 629.988, -2.23479, 1.18 ) }
    dend_5 { pt3dadd( -11.5173, 630.753, -2.34322, 1.33 ) }
    dend_5 { pt3dadd( -11.5902, 631.149, -2.39016, 1.18 ) }
    dend_5 { pt3dadd( -11.7323, 631.774, -2.44128, 0.96 ) }
    dend_5 { pt3dadd( -12.0411, 632.949, -2.47489, 0.52 ) }
    dend_5 { pt3dadd( -12.2958, 633.759, -2.49594, 0.52 ) }
    dend_5 { pt3dadd( -12.6314, 634.789, -2.5156, 0.52 ) }
    dend_5 { pt3dadd( -12.9831, 635.903, -2.529, 0.52 ) }
    dend_5 { pt3dadd( -13.068, 636.185, -2.52994, 0.52 ) }
    dend_5 { pt3dadd( -13.0876, 636.26, -2.52929, 0.52 ) }
    dend_5 { pt3dadd( -13.3421, 637.46, -2.50525, 1.25 ) }
    dend_5 { pt3dadd( -13.4752, 638.38, -2.49618, 1.55 ) }
    dend_5 { pt3dadd( -13.5645, 639.39, -2.4948, 2.14 ) }
    dend_5 { pt3dadd( -13.6085, 640.419, -2.50321, 2.58 ) }
    dend_5 { pt3dadd( -13.6298, 641.132, -2.5174, 2.28 ) }
    dend_5 { pt3dadd( -13.6553, 642.219, -2.55644, 1.84 ) }
    dend_5 { pt3dadd( -13.6672, 643.267, -2.61388, 0.88 ) }
    dend_5 { pt3dadd( -13.6675, 643.71, -2.6384, 0.88 ) }
    dend_5 { pt3dadd( -13.6532, 645.22, -2.71431, 0.52 ) }
    dend_5 { pt3dadd( -13.661, 645.707, -2.73621, 0.52 ) }
    dend_5 { pt3dadd( -13.6914, 646.407, -2.76395, 0.88 ) }
    dend_5 { pt3dadd( -13.7293, 647.078, -2.76037, 1.33 ) }
    dend_5 { pt3dadd( -13.808, 647.982, -2.7172, 1.69 ) }
    dend_5 { pt3dadd( -13.9062, 649.165, -2.62877, 0.52 ) }
    dend_5 { pt3dadd( -14.0678, 650.762, -2.47126, 0.52 ) }
    dend_5 { pt3dadd( -14.0801, 650.865, -2.46622, 0.52 ) }
    dend_5 { pt3dadd( -14.1951, 651.731, -2.46417, 0.52 ) }
    dend_5 { pt3dadd( -14.3002, 652.423, -2.49484, 0.52 ) }
    dend_5 { pt3dadd( -14.3834, 652.899, -2.53872, 1.25 ) }
    dend_5 { pt3dadd( -14.5162, 653.696, -2.64497, 1.92 ) }
    dend_5 { pt3dadd( -14.7913, 655.414, -2.91497, 2.36 ) }
    dend_5 { pt3dadd( -14.9462, 656.388, -3.06611, 3.02 ) }
    dend_5 { pt3dadd( -15.0146, 656.867, -3.13603, 3.02 ) }
    dend_5 { pt3dadd( -15.0874, 657.493, -3.24492, 3.02 ) }
    dend_5 { pt3dadd( -15.1705, 658.318, -3.396, 2.73 ) }
    dend_5 { pt3dadd( -15.2928, 659.798, -3.64355, 1.25 ) }
    dend_5 { pt3dadd( -15.4004, 661.283, -3.84785, 0.59 ) }
    dend_5 { pt3dadd( -15.5197, 663.065, -4.12286, 0.59 ) }
    dend_5 { pt3dadd( -15.6112, 664.546, -4.37635, 0.74 ) }
    dend_5 { pt3dadd( -15.6521, 665.373, -4.53804, 1.11 ) }
    // Section: dend_122, id: dend_122, parent: dend_120 (entry count 58/100)
    dend_122 { pt3dclear() }
    dend_122 { pt3dadd( 108.099, -201.51, -186.259, 1.99 ) }
    dend_122 { pt3dadd( 107.892, -201.793, -187.349, 1.99 ) }
    dend_122 { pt3dadd( 106.864, -203.338, -192.754, 1.47 ) }
    dend_122 { pt3dadd( 106.725, -203.58, -193.549, 1.99 ) }
    dend_122 { pt3dadd( 106.64, -203.749, -194.04, 1.99 ) }
    dend_122 { pt3dadd( 106.596, -203.851, -194.304, 1.99 ) }
    dend_122 { pt3dadd( 105.92, -205.745, -198.694, 1.03 ) }
    dend_122 { pt3dadd( 105.834, -206.147, -199.48, 0.74 ) }
    dend_122 { pt3dadd( 105.826, -207.059, -200.748, 1.11 ) }
    dend_122 { pt3dadd( 105.949, -207.796, -201.654, 1.47 ) }
    dend_122 { pt3dadd( 106.105, -208.272, -202.132, 1.47 ) }
    dend_122 { pt3dadd( 106.387, -208.959, -202.684, 1.03 ) }
    dend_122 { pt3dadd( 106.888, -209.875, -203.035, 1.03 ) }
    dend_122 { pt3dadd( 107.632, -211.01, -203.411, 0.74 ) }
    dend_122 { pt3dadd( 108.308, -211.897, -203.622, 0.74 ) }
    dend_122 { pt3dadd( 108.896, -212.522, -203.804, 0.74 ) }
    // Section: dend_121, id: dend_121, parent: dend_120 (entry count 74/100)
    dend_121 { pt3dclear() }
    dend_121 { pt3dadd( 108.099, -201.51, -186.259, 1.25 ) }
    dend_121 { pt3dadd( 108.136, -201.305, -186.471, 1.25 ) }
    dend_121 { pt3dadd( 108.138, -201.24, -186.517, 1.25 ) }
    dend_121 { pt3dadd( 107.892, -199.294, -187.461, 0.52 ) }
    dend_121 { pt3dadd( 107.76, -198.738, -187.682, 0.52 ) }
    dend_121 { pt3dadd( 107.477, -197.925, -188.039, 0.52 ) }
    dend_121 { pt3dadd( 107.164, -197.17, -188.392, 0.52 ) }
    dend_121 { pt3dadd( 106.731, -196.345, -188.766, 0.52 ) }
    dend_121 { pt3dadd( 105.972, -195.217, -189.335, 0.52 ) }
    dend_121 { pt3dadd( 105.557, -194.701, -189.498, 0.52 ) }
    dend_121 { pt3dadd( 105.78, -195.766, -190.241, 0.52 ) }
    dend_121 { pt3dadd( 105.779, -195.814, -190.29, 0.52 ) }
    dend_121 { pt3dadd( 105.755, -196.462, -190.976, 0.52 ) }
    dend_121 { pt3dadd( 105.765, -198.469, -192.993, 0.44 ) }
    dend_121 { pt3dadd( 105.818, -199.065, -193.547, 0.44 ) }
    dend_121 { pt3dadd( 106.011, -200.025, -194.386, 0.44 ) }
    // Section: dend_119, id: dend_119, parent: dend_117 (entry count 90/100)
    dend_119 { pt3dclear() }
    dend_119 { pt3dadd( 100.587, -202.597, -185.662, 0.37 ) }
    dend_119 { pt3dadd( 99.5393, -203.67, -185.639, 0.37 ) }
    dend_119 { pt3dadd( 98.132, -205.19, -185.6, 0.44 ) }
    dend_119 { pt3dadd( 97.2943, -206.195, -185.585, 0.44 ) }
    dend_119 { pt3dadd( 96.7404, -206.893, -185.581, 0.44 ) }
    dend_119 { pt3dadd( 96.6493, -207.024, -185.58, 0.44 ) }
    dend_119 { pt3dadd( 95.8766, -208.235, -185.577, 0.37 ) }
    dend_119 { pt3dadd( 95.4267, -209.217, -185.563, 0.37 ) }
    dend_119 { pt3dadd( 95.0501, -210.518, -185.539, 0.37 ) }
    dend_119 { pt3dadd( 95.0399, -210.575, -185.537, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_119 { pt3dadd( 94.9239, -211.879, -185.502, 0.37 ) }
    dend_119 { pt3dadd( 94.9221, -211.949, -185.5, 0.37 ) }
    dend_119 { pt3dadd( 95.0289, -212.673, -185.465, 0.37 ) }
    dend_119 { pt3dadd( 95.2528, -213.285, -185.414, 0.88 ) }
    dend_119 { pt3dadd( 95.4047, -213.559, -185.365, 1.47 ) }
    // Section: dend_118, id: dend_118, parent: dend_117 (entry count 5/100)
    dend_118 { pt3dclear() }
    dend_118 { pt3dadd( 100.587, -202.597, -185.662, 0.52 ) }
    dend_118 { pt3dadd( 100.015, -202.127, -184.765, 0.52 ) }
    dend_118 { pt3dadd( 99.7075, -201.851, -184.208, 0.44 ) }
    dend_118 { pt3dadd( 99.4897, -201.613, -183.73, 0.44 ) }
    dend_118 { pt3dadd( 99.0117, -200.905, -182.354, 0.15 ) }
    dend_118 { pt3dadd( 98.8488, -200.516, -181.593, 0.15 ) }
    dend_118 { pt3dadd( 98.3069, -199.222, -179.062, 0.37 ) }
    dend_118 { pt3dadd( 98.2547, -199.05, -178.683, 0.37 ) }
    dend_118 { pt3dadd( 98.2225, -198.735, -177.915, 0.37 ) }
    dend_118 { pt3dadd( 98.2847, -198.405, -177.061, 0.37 ) }
    dend_118 { pt3dadd( 98.6589, -197.939, -175.975, 0.37 ) }
    // Section: dend_107, id: dend_107, parent: dend_105 (entry count 16/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 40.8089, -174.558, 23.5067, 0.37 ) }
    dend_107 { pt3dadd( 40.9008, -175.429, 23.7317, 0.37 ) }
    dend_107 { pt3dadd( 40.9653, -175.798, 23.792, 0.37 ) }
    dend_107 { pt3dadd( 41.0392, -176.221, 23.8609, 0.37 ) }
    dend_107 { pt3dadd( 41.0993, -176.565, 23.917, 0.37 ) }
    dend_107 { pt3dadd( 41.1695, -176.967, 23.9825, 0.96 ) }
    dend_107 { pt3dadd( 41.176, -177.004, 23.9886, 0.96 ) }
    dend_107 { pt3dadd( 41.2548, -177.418, 23.944, 1.92 ) }
    // Section: dend_106, id: dend_106, parent: dend_105 (entry count 24/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 40.8089, -174.558, 23.5067, 0.52 ) }
    dend_106 { pt3dadd( 38.9224, -175.61, 23.2385, 0.52 ) }
    dend_106 { pt3dadd( 37.8314, -176.217, 23.0834, 0.52 ) }
    dend_106 { pt3dadd( 37.1741, -176.584, 22.9899, 0.52 ) }
    // Section: dend_89, id: dend_89, parent: dend_87 (entry count 28/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -53.7711, -241.527, 6.52554, 1.11 ) }
    dend_89 { pt3dadd( -53.3207, -242.233, 7.27675, 1.11 ) }
    dend_89 { pt3dadd( -53.0211, -242.731, 7.8154, 1.33 ) }
    dend_89 { pt3dadd( -52.6907, -243.372, 8.55339, 1.4 ) }
    dend_89 { pt3dadd( -52.4902, -243.84, 9.14694, 1.92 ) }
    dend_89 { pt3dadd( -52.2554, -244.556, 10.0396, 1.47 ) }
    dend_89 { pt3dadd( -51.8329, -246.242, 12.1302, 1.33 ) }
    dend_89 { pt3dadd( -51.7502, -246.792, 12.8048, 1.18 ) }
    dend_89 { pt3dadd( -51.6918, -247.772, 14.0184, 1.18 ) }
    dend_89 { pt3dadd( -51.7212, -248.782, 15.2101, 1.18 ) }
    dend_89 { pt3dadd( -51.7905, -249.49, 15.9792, 1.18 ) }
    dend_89 { pt3dadd( -51.9078, -250.244, 16.6348, 0.88 ) }
    dend_89 { pt3dadd( -51.9921, -250.744, 16.9215, 0.81 ) }
    dend_89 { pt3dadd( -52.0392, -251.222, 17.131, 0.96 ) }
    dend_89 { pt3dadd( -52.0376, -251.967, 17.2897, 0.96 ) }
    dend_89 { pt3dadd( -51.9817, -252.499, 17.3262, 1.4 ) }
    dend_89 { pt3dadd( -51.8213, -253.305, 17.3352, 2.14 ) }
    dend_89 { pt3dadd( -51.6519, -254.056, 17.3018, 2.14 ) }
    dend_89 { pt3dadd( -51.5125, -254.635, 17.2722, 2.14 ) }
    dend_89 { pt3dadd( -51.3421, -255.342, 17.2355, 2.65 ) }
    dend_89 { pt3dadd( -51.2155, -255.865, 17.2066, 2.21 ) }
    dend_89 { pt3dadd( -51.028, -256.671, 17.1601, 1.25 ) }
    dend_89 { pt3dadd( -50.8159, -257.642, 17.1033, 1.25 ) }
    dend_89 { pt3dadd( -50.7539, -257.96, 17.086, 1.25 ) }
    dend_89 { pt3dadd( -50.6446, -258.762, 17.0551, 1.25 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 53/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -53.7711, -241.527, 6.52554, 0.52 ) }
    dend_88 { pt3dadd( -54.4193, -243.415, 6.82308, 0.52 ) }
    dend_88 { pt3dadd( -54.6151, -244.39, 7.07602, 0.52 ) }
    dend_88 { pt3dadd( -54.8, -245.521, 7.38247, 0.52 ) }
    dend_88 { pt3dadd( -54.9676, -246.55, 7.65435, 0.52 ) }
    dend_88 { pt3dadd( -55.2398, -248.106, 8.0372, 0.52 ) }
    dend_88 { pt3dadd( -55.3735, -248.84, 8.20991, 0.37 ) }
    dend_88 { pt3dadd( -55.4808, -250.108, 8.56398, 0.37 ) }
    dend_88 { pt3dadd( -55.482, -250.737, 8.74803, 0.37 ) }
    dend_88 { pt3dadd( -55.4549, -251.069, 8.87508, 0.66 ) }
    dend_88 { pt3dadd( -55.4171, -251.421, 9.02601, 0.66 ) }
    dend_88 { pt3dadd( -55.422, -251.494, 9.04647, 0.66 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 65/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -311.353, -99.2769, -22.6184, 0.52 ) }
    dend_75 { pt3dadd( -312.883, -99.4343, -22.5501, 0.52 ) }
    dend_75 { pt3dadd( -315.436, -99.5671, -22.3791, 0.52 ) }
    dend_75 { pt3dadd( -317.044, -99.6345, -22.4092, 0.74 ) }
    dend_75 { pt3dadd( -318.151, -99.6776, -22.4276, 0.96 ) }
    dend_75 { pt3dadd( -320.338, -99.789, -22.4635, 0.37 ) }
    dend_75 { pt3dadd( -322.111, -99.8847, -22.4993, 0.37 ) }
    dend_75 { pt3dadd( -324.585, -99.9946, -22.5895, 0.37 ) }
    dend_75 { pt3dadd( -326.962, -100.068, -22.7309, 0.66 ) }
    dend_75 { pt3dadd( -328.829, -100.129, -22.8909, 1.18 ) }
    dend_75 { pt3dadd( -329.981, -100.15, -22.9743, 1.18 ) }
    dend_75 { pt3dadd( -331.115, -100.15, -23.0367, 0.66 ) }
    dend_75 { pt3dadd( -333.304, -100.135, -23.1999, 0.37 ) }
    dend_75 { pt3dadd( -334.532, -100.121, -23.2837, 0.81 ) }
    dend_75 { pt3dadd( -335.655, -100.084, -23.3183, 0.29 ) }
    dend_75 { pt3dadd( -337.254, -99.99, -23.4505, 0.29 ) }
    dend_75 { pt3dadd( -337.821, -99.9386, -23.4991, 0.66 ) }
    dend_75 { pt3dadd( -338.222, -99.8979, -23.5338, 0.66 ) }
    dend_75 { pt3dadd( -338.927, -99.8177, -23.5962, 0.66 ) }
    dend_75 { pt3dadd( -340.132, -99.6838, -23.7047, 0.22 ) }
    dend_75 { pt3dadd( -341.546, -99.5272, -23.8351, 0.22 ) }
    dend_75 { pt3dadd( -342.355, -99.4591, -23.9115, 1.11 ) }
    dend_75 { pt3dadd( -343.18, -99.3693, -23.9928, 1.47 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 88/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -311.353, -99.2769, -22.6184, 0.22 ) }
    dend_74 { pt3dadd( -311.543, -98.7885, -22.5011, 0.22 ) }
    dend_74 { pt3dadd( -311.558, -98.7474, -22.4918, 0.22 ) }
    dend_74 { pt3dadd( -311.669, -98.4455, -22.4239, 0.22 ) }
    dend_74 { pt3dadd( -311.779, -98.1468, -22.3566, 0.22 ) }
    dend_74 { pt3dadd( -312.051, -97.4109, -22.191, 0.44 ) }
    dend_74 { pt3dadd( -312.235, -96.9123, -22.0788, 0.52 ) }
    dend_74 { pt3dadd( -312.311, -96.7002, -22.0079, 0.52 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 96/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 284.113, 47.6851, -64.5297, 2.28 ) }
    dend_52 { pt3dadd( 284.974, 47.0032, -65.3312, 2.28 ) }
    dend_52 { pt3dadd( 285.631, 46.5356, -65.9228, 0.29 ) }
    dend_52 { pt3dadd( 286.381, 46.002, -66.598, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_52 { pt3dadd( 286.427, 45.9692, -66.6394, 0.37 ) }
    dend_52 { pt3dadd( 287.072, 45.5105, -67.2199, 0.37 ) }
    dend_52 { pt3dadd( 287.977, 44.8663, -68.035, 1.18 ) }
    dend_52 { pt3dadd( 288.508, 44.4559, -68.5134, 1.62 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 4/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 284.113, 47.6851, -64.5297, 0.66 ) }
    dend_51 { pt3dadd( 284.185, 48.8384, -64.2833, 0.66 ) }
    dend_51 { pt3dadd( 284.311, 50.8762, -63.8479, 0.44 ) }
    dend_51 { pt3dadd( 284.377, 51.9554, -63.6173, 0.96 ) }
    dend_51 { pt3dadd( 284.547, 54.6931, -63.0324, 0.96 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 9/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 187.144, 327.018, 47.3083, 0.88 ) }
    dend_27 { pt3dadd( 187.272, 328.656, 47.0773, 0.88 ) }
    dend_27 { pt3dadd( 187.288, 328.869, 47.0472, 0.88 ) }
    dend_27 { pt3dadd( 187.34, 329.539, 46.9528, 0.88 ) }
    dend_27 { pt3dadd( 187.46, 331.072, 46.7365, 0.52 ) }
    dend_27 { pt3dadd( 187.503, 331.63, 46.6578, 1.33 ) }
    dend_27 { pt3dadd( 187.583, 332.649, 46.5142, 1.77 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 16/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 187.144, 327.018, 47.3083, 0.44 ) }
    dend_26 { pt3dadd( 188.211, 327.351, 46.5608, 0.44 ) }
    dend_26 { pt3dadd( 188.999, 327.731, 45.7711, 0.44 ) }
    dend_26 { pt3dadd( 189.303, 327.918, 45.4446, 0.44 ) }
    dend_26 { pt3dadd( 189.47, 328.03, 45.2695, 0.44 ) }
    dend_26 { pt3dadd( 189.903, 328.322, 44.8154, 0.44 ) }
    dend_26 { pt3dadd( 190.658, 328.829, 44.0235, 0.88 ) }
    dend_26 { pt3dadd( 191.342, 329.426, 43.1238, 0.44 ) }
    dend_26 { pt3dadd( 191.646, 329.69, 42.7357, 0.44 ) }
    dend_26 { pt3dadd( 191.876, 329.885, 42.4165, 0.74 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 26/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 76.6254, 347.566, 46.6916, 0.37 ) }
    dend_15 { pt3dadd( 75.3915, 351.261, 47.9397, 0.37 ) }
    dend_15 { pt3dadd( 75.2417, 351.88, 48.112, 0.37 ) }
    dend_15 { pt3dadd( 75.0067, 353.108, 48.4161, 0.37 ) }
    dend_15 { pt3dadd( 74.8898, 354.096, 48.5503, 0.66 ) }
    dend_15 { pt3dadd( 74.7737, 355.261, 48.6204, 0.37 ) }
    dend_15 { pt3dadd( 74.7169, 355.794, 48.6149, 0.81 ) }
    dend_15 { pt3dadd( 74.7236, 356.513, 48.4369, 1.33 ) }
    dend_15 { pt3dadd( 74.7266, 356.582, 48.4201, 1.33 ) }
    dend_15 { pt3dadd( 74.8362, 358.342, 47.9877, 0.37 ) }
    dend_15 { pt3dadd( 74.8821, 358.912, 47.8541, 0.37 ) }
    dend_15 { pt3dadd( 74.9514, 360.053, 47.5939, 0.29 ) }
    dend_15 { pt3dadd( 74.9999, 361.097, 47.3758, 0.29 ) }
    dend_15 { pt3dadd( 75.0886, 362.391, 47.1485, 0.29 ) }
    dend_15 { pt3dadd( 75.1106, 362.542, 47.1325, 0.29 ) }
    dend_15 { pt3dadd( 75.2107, 363.037, 47.1119, 0.29 ) }
    dend_15 { pt3dadd( 75.3343, 363.505, 47.104, 0.52 ) }
    dend_15 { pt3dadd( 75.5498, 364.169, 47.0761, 0.52 ) }
    dend_15 { pt3dadd( 76.3579, 366.475, 46.9262, 0.44 ) }
    dend_15 { pt3dadd( 77.0023, 368.285, 46.7937, 0.44 ) }
    dend_15 { pt3dadd( 77.5016, 369.652, 46.6903, 0.44 ) }
    dend_15 { pt3dadd( 77.9588, 370.853, 46.5959, 0.44 ) }
    dend_15 { pt3dadd( 78.5094, 372.192, 46.4912, 0.88 ) }
    dend_15 { pt3dadd( 78.7551, 372.735, 46.4476, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 76.6254, 347.566, 46.6916, 0.44 ) }
    dend_14 { pt3dadd( 76.2438, 346.536, 46.771, 0.44 ) }
    dend_14 { pt3dadd( 75.8779, 345.549, 46.8472, 0.44 ) }
    dend_14 { pt3dadd( 75.7144, 345.109, 46.8812, 0.96 ) }
    dend_14 { pt3dadd( 75.5985, 344.796, 46.9053, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 55/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -15.6521, 665.373, -4.53804, 0.37 ) }
    dend_7 { pt3dadd( -14.8313, 667.247, -4.44974, 0.37 ) }
    dend_7 { pt3dadd( -14.7419, 667.501, -4.43788, 0.52 ) }
    dend_7 { pt3dadd( -14.5784, 668.192, -4.41644, 0.81 ) }
    dend_7 { pt3dadd( -14.4788, 668.903, -4.40704, 0.81 ) }
    dend_7 { pt3dadd( -14.4484, 669.534, -4.38945, 0.74 ) }
    dend_7 { pt3dadd( -14.4884, 670.392, -4.30445, 0.59 ) }
    dend_7 { pt3dadd( -14.6789, 671.244, -4.20201, 0.52 ) }
    dend_7 { pt3dadd( -14.999, 672.294, -4.09192, 0.52 ) }
    dend_7 { pt3dadd( -15.2447, 672.951, -4.03323, 0.52 ) }
    dend_7 { pt3dadd( -15.549, 673.738, -4.02297, 0.96 ) }
    dend_7 { pt3dadd( -16.1122, 675.197, -4.09554, 1.77 ) }
    dend_7 { pt3dadd( -16.5698, 676.46, -4.22995, 2.14 ) }
    dend_7 { pt3dadd( -16.9585, 677.718, -4.45292, 2.14 ) }
    dend_7 { pt3dadd( -17.121, 678.456, -4.62211, 2.06 ) }
    dend_7 { pt3dadd( -17.3361, 679.98, -5.03413, 2.06 ) }
    dend_7 { pt3dadd( -17.376, 680.481, -5.19113, 1.69 ) }
    dend_7 { pt3dadd( -17.4045, 681.475, -5.53976, 0.88 ) }
    dend_7 { pt3dadd( -17.3932, 682.413, -5.78378, 0.52 ) }
    dend_7 { pt3dadd( -17.3449, 683.323, -5.94443, 0.52 ) }
    dend_7 { pt3dadd( -17.3111, 683.991, -5.98447, 0.52 ) }
    dend_7 { pt3dadd( -17.2914, 684.561, -5.94827, 0.96 ) }
    dend_7 { pt3dadd( -17.2875, 684.632, -5.94172, 0.96 ) }
    dend_7 { pt3dadd( -17.2096, 685.539, -5.84357, 1.03 ) }
    dend_7 { pt3dadd( -17.1616, 686.016, -5.76533, 1.11 ) }
    dend_7 { pt3dadd( -17.009, 687.554, -5.49342, 0.81 ) }
    dend_7 { pt3dadd( -16.8993, 688.487, -5.32332, 0.66 ) }
    dend_7 { pt3dadd( -16.8129, 689.093, -5.21362, 0.81 ) }
    dend_7 { pt3dadd( -16.7089, 689.749, -5.10057, 1.11 ) }
    dend_7 { pt3dadd( -16.5106, 690.91, -4.92724, 0.66 ) }
    dend_7 { pt3dadd( -16.4485, 691.248, -4.86561, 0.37 ) }
    dend_7 { pt3dadd( -16.3393, 691.766, -4.74199, 0.37 ) }
    dend_7 { pt3dadd( -16.269, 692.088, -4.66148, 0.37 ) }
    dend_7 { pt3dadd( -16.2346, 692.254, -4.62317, 0.37 ) }
    dend_7 { pt3dadd( -16.1305, 692.73, -4.53218, 0.37 ) }
    dend_7 { pt3dadd( -16.0439, 693.071, -4.49902, 0.37 ) }
    dend_7 { pt3dadd( -15.9534, 693.455, -4.46699, 0.59 ) }
    dend_7 { pt3dadd( -15.8716, 693.848, -4.43741, 0.74 ) }
    dend_7 { pt3dadd( -15.781, 694.364, -4.40344, 1.11 ) }
    dend_7 { pt3dadd( -15.6747, 695.068, -4.36213, 1.47 ) }
    dend_7 { pt3dadd( -15.6527, 695.221, -4.3535, 1.47 ) }
    dend_7 { pt3dadd( -15.5916, 695.774, -4.3276, 2.06 ) }
    dend_7 { pt3dadd( -15.5847, 695.865, -4.32428, 2.06 ) }
    dend_7 { pt3dadd( -15.5568, 696.523, -4.30653, 1.62 ) }
    dend_7 { pt3dadd( -15.5419, 696.977, -4.29557, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_7 { pt3dadd( -15.5292, 697.296, -4.28721, 1.62 ) }
    dend_7 { pt3dadd( -15.4958, 697.709, -4.27145, 0.88 ) }
    dend_7 { pt3dadd( -15.4345, 698.257, -4.24556, 0.59 ) }
    dend_7 { pt3dadd( -15.3475, 698.88, -4.21109, 0.44 ) }
    dend_7 { pt3dadd( -15.2609, 699.469, -4.17722, 0.44 ) }
    dend_7 { pt3dadd( -15.1474, 700.24, -4.13286, 0.44 ) }
    dend_7 { pt3dadd( -15.0691, 700.856, -4.09886, 0.44 ) }
    dend_7 { pt3dadd( -14.9914, 701.51, -4.06262, 0.44 ) }
    dend_7 { pt3dadd( -14.9188, 702.208, -4.02535, 0.44 ) }
    dend_7 { pt3dadd( -14.876, 702.878, -3.94428, 0.44 ) }
    dend_7 { pt3dadd( -14.8406, 703.76, -3.78164, 0.44 ) }
    dend_7 { pt3dadd( -14.8322, 704.239, -3.67205, 0.81 ) }
    dend_7 { pt3dadd( -14.8283, 704.489, -3.60974, 1.33 ) }
    dend_7 { pt3dadd( -14.8214, 704.893, -3.50868, 1.33 ) }
    dend_7 { pt3dadd( -14.7794, 706.267, -3.16744, 2.5 ) }
    dend_7 { pt3dadd( -14.7545, 707.094, -2.97837, 3.17 ) }
    dend_7 { pt3dadd( -14.7488, 708.117, -2.7905, 3.61 ) }
    dend_7 { pt3dadd( -14.7351, 709.246, -2.63068, 3.9 ) }
    dend_7 { pt3dadd( -14.7116, 710.415, -2.5411, 3.9 ) }
    dend_7 { pt3dadd( -14.6889, 710.966, -2.52668, 3.9 ) }
    dend_7 { pt3dadd( -14.6261, 712.008, -2.548, 3.9 ) }
    dend_7 { pt3dadd( -14.5316, 713.416, -2.58355, 2.36 ) }
    dend_7 { pt3dadd( -14.4082, 714.886, -2.6209, 1.55 ) }
    dend_7 { pt3dadd( -14.2371, 716.518, -2.6577, 1.03 ) }
    dend_7 { pt3dadd( -14.0545, 717.836, -2.69784, 0.88 ) }
    dend_7 { pt3dadd( -13.8835, 719.098, -2.70922, 0.88 ) }
    dend_7 { pt3dadd( -13.7107, 720.523, -2.69546, 0.66 ) }
    dend_7 { pt3dadd( -13.6494, 721.142, -2.68014, 0.66 ) }
    dend_7 { pt3dadd( -13.6006, 721.85, -2.62884, 1.18 ) }
    dend_7 { pt3dadd( -13.5399, 722.844, -2.54627, 1.77 ) }
    dend_7 { pt3dadd( -13.3932, 725.372, -2.36078, 0.88 ) }
    dend_7 { pt3dadd( -13.3249, 727.028, -2.2605, 0.88 ) }
    dend_7 { pt3dadd( -13.3241, 727.099, -2.2558, 0.88 ) }
    dend_7 { pt3dadd( -13.3469, 729.08, -2.13602, 0.52 ) }
    dend_7 { pt3dadd( -13.3842, 730.368, -2.0625, 1.33 ) }
    dend_7 { pt3dadd( -13.4099, 731.307, -2.02778, 1.47 ) }
    dend_7 { pt3dadd( -13.4027, 732.626, -2.07795, 1.33 ) }
    dend_7 { pt3dadd( -13.3572, 734.231, -2.2518, 1.03 ) }
    dend_7 { pt3dadd( -13.3526, 735.342, -2.43981, 1.03 ) }
    dend_7 { pt3dadd( -13.358, 735.432, -2.45279, 1.03 ) }
    dend_7 { pt3dadd( -13.5282, 737.153, -2.56232, 1.03 ) }
    dend_7 { pt3dadd( -13.6819, 738.473, -2.6128, 1.25 ) }
    dend_7 { pt3dadd( -13.8306, 739.745, -2.62968, 1.47 ) }
    dend_7 { pt3dadd( -13.9398, 740.581, -2.63005, 1.92 ) }
    dend_7 { pt3dadd( -14.3036, 743.147, -2.49598, 1.11 ) }
    dend_7 { pt3dadd( -14.4679, 744.312, -2.37639, 1.11 ) }
    dend_7 { pt3dadd( -14.5107, 744.588, -2.32615, 1.69 ) }
    dend_7 { pt3dadd( -14.5173, 744.654, -2.31138, 1.69 ) }
    dend_7 { pt3dadd( -14.5497, 745.731, -2.08668, 2.21 ) }
    dend_7 { pt3dadd( -14.4961, 746.343, -2.01595, 3.17 ) }
    dend_7 { pt3dadd( -14.3604, 747.04, -2.02109, 3.17 ) }
    dend_7 { pt3dadd( -14.1626, 747.859, -2.02095, 3.17 ) }
    dend_7 { pt3dadd( -13.8599, 748.999, -2.01178, 2.28 ) }
    dend_7 { pt3dadd( -13.74, 749.466, -1.96419, 0.59 ) }
    dend_7 { pt3dadd( -13.6178, 749.988, -1.86015, 0.66 ) }
    dend_7 { pt3dadd( -13.458, 750.883, -1.63673, 0.66 ) }
    dend_7 { pt3dadd( -13.3673, 751.506, -1.45209, 1.03 ) }
    dend_7 { pt3dadd( -13.3598, 751.58, -1.42878, 1.03 ) }
    dend_7 { pt3dadd( -13.2882, 753.283, -0.939403, 1.84 ) }
    dend_7 { pt3dadd( -13.3169, 754.191, -0.65413, 1.84 ) }
    dend_7 { pt3dadd( -13.3863, 755.089, -0.377273, 1.84 ) }
    dend_7 { pt3dadd( -13.4372, 755.529, -0.246187, 1.33 ) }
    dend_7 { pt3dadd( -13.5748, 756.664, 0.0674002, 0.96 ) }
    dend_7 { pt3dadd( -13.6753, 757.552, 0.258929, 0.96 ) }
    dend_7 { pt3dadd( -13.9226, 759.85, 0.601731, 0.81 ) }
    dend_7 { pt3dadd( -14.0089, 760.746, 0.685447, 1.33 ) }
    dend_7 { pt3dadd( -14.0279, 760.908, 0.714233, 1.33 ) }
    dend_7 { pt3dadd( -14.1221, 761.669, 0.908365, 1.77 ) }
    dend_7 { pt3dadd( -14.2507, 762.737, 1.27794, 2.21 ) }
    dend_7 { pt3dadd( -14.2721, 762.95, 1.37816, 2.21 ) }
    dend_7 { pt3dadd( -14.3942, 764.394, 2.24728, 2.21 ) }
    dend_7 { pt3dadd( -14.6616, 767.02, 4.20904, 1.69 ) }
    dend_7 { pt3dadd( -14.7346, 767.583, 4.66189, 1.18 ) }
    dend_7 { pt3dadd( -14.7431, 767.632, 4.70377, 1.18 ) }
    dend_7 { pt3dadd( -14.9673, 768.789, 5.72645, 0.74 ) }
    dend_7 { pt3dadd( -15.0964, 769.418, 6.22811, 0.59 ) }
    dend_7 { pt3dadd( -15.1301, 769.569, 6.32764, 0.59 ) }
    dend_7 { pt3dadd( -15.2645, 770.325, 6.47265, 0.59 ) }
    dend_7 { pt3dadd( -15.3955, 770.917, 6.53868, 1.11 ) }
    dend_7 { pt3dadd( -15.4591, 771.198, 6.52313, 1.62 ) }
    dend_7 { pt3dadd( -15.5964, 771.799, 6.20348, 1.92 ) }
    dend_7 { pt3dadd( -15.8594, 773.223, 5.107, 1.92 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 82/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -15.6521, 665.373, -4.53804, 0.29 ) }
    dend_6 { pt3dadd( -16.5517, 666.38, -5.04815, 0.29 ) }
    dend_6 { pt3dadd( -17.2211, 667.175, -5.42288, 0.29 ) }
    dend_6 { pt3dadd( -17.5252, 667.542, -5.58899, 0.96 ) }
    dend_6 { pt3dadd( -17.6627, 667.706, -5.66225, 0.74 ) }
    dend_6 { pt3dadd( -17.979, 668.069, -5.82865, 0.37 ) }
    dend_6 { pt3dadd( -18.4147, 668.52, -6.01159, 0.37 ) }
    dend_6 { pt3dadd( -18.4706, 668.574, -6.02958, 0.37 ) }
    dend_6 { pt3dadd( -19.3351, 669.289, -6.27495, 0.29 ) }
    dend_6 { pt3dadd( -20.3763, 670.055, -6.55574, 0.29 ) }
    dend_6 { pt3dadd( -20.8409, 670.365, -6.67604, 0.29 ) }
    dend_6 { pt3dadd( -21.8596, 670.976, -6.90582, 1.11 ) }
    dend_6 { pt3dadd( -22.351, 671.258, -7.0081, 1.69 ) }
    dend_6 { pt3dadd( -22.9635, 671.626, -7.1393, 1.99 ) }
    dend_6 { pt3dadd( -23.2094, 671.786, -7.19728, 2.21 ) }
    dend_6 { pt3dadd( -23.3641, 671.898, -7.24177, 2.21 ) }
    dend_6 { pt3dadd( -24.3833, 672.7, -7.5899, 0.81 ) }
    dend_6 { pt3dadd( -25.0503, 673.263, -7.88295, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_6 { pt3dadd( -26.0606, 674.145, -8.33148, 0.37 ) }
    dend_6 { pt3dadd( -27.0996, 675.081, -8.80255, 0.22 ) }
    dend_6 { pt3dadd( -28.1313, 676.03, -9.28818, 0.15 ) }
    dend_6 { pt3dadd( -28.582, 676.454, -9.51518, 0.15 ) }
    dend_6 { pt3dadd( -29.2089, 677.047, -9.88343, 0.74 ) }
    // Section: dend_126, id: dend_126, parent: dend_122 (entry count 5/100)
    dend_126 { pt3dclear() }
    dend_126 { pt3dadd( 108.896, -212.522, -203.804, 0.52 ) }
    dend_126 { pt3dadd( 108.321, -213.144, -203.305, 0.52 ) }
    // Section: dend_123, id: dend_123, parent: dend_122 (entry count 7/100)
    dend_123 { pt3dclear() }
    dend_123 { pt3dadd( 108.896, -212.522, -203.804, 0.29 ) }
    dend_123 { pt3dadd( 110.319, -213.798, -203.883, 0.29 ) }
    dend_123 { pt3dadd( 111.224, -214.587, -203.942, 0.29 ) }
    dend_123 { pt3dadd( 112.296, -215.525, -204.055, 0.29 ) }
    dend_123 { pt3dadd( 113.971, -216.879, -204.304, 0.29 ) }
    dend_123 { pt3dadd( 115.934, -218.41, -204.633, 0.44 ) }
    dend_123 { pt3dadd( 117.163, -219.368, -204.838, 0.66 ) }
    dend_123 { pt3dadd( 118.518, -220.384, -205.122, 0.88 ) }
    dend_123 { pt3dadd( 119.547, -221.12, -205.351, 1.03 ) }
    dend_123 { pt3dadd( 122.317, -222.964, -206.003, 0.66 ) }
    dend_123 { pt3dadd( 122.376, -223.003, -206.017, 0.66 ) }
    // Section: dend_109, id: dend_109, parent: dend_107 (entry count 18/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( 41.2548, -177.418, 23.944, 0.29 ) }
    dend_109 { pt3dadd( 45.1261, -177.04, 25.9826, 0.29 ) }
    dend_109 { pt3dadd( 46.3719, -176.919, 26.6386, 0.29 ) }
    dend_109 { pt3dadd( 47.5493, -176.804, 27.2586, 0.29 ) }
    dend_109 { pt3dadd( 48.0274, -176.757, 27.5104, 1.33 ) }
    dend_109 { pt3dadd( 48.8016, -176.681, 27.9181, 1.62 ) }
    dend_109 { pt3dadd( 48.9453, -176.667, 27.9938, 0.07 ) }
    // Section: dend_108, id: dend_108, parent: dend_107 (entry count 25/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 41.2548, -177.418, 23.944, 0.29 ) }
    dend_108 { pt3dadd( 42.5978, -178.979, 24.3023, 0.29 ) }
    dend_108 { pt3dadd( 43.0592, -179.631, 24.4016, 0.29 ) }
    dend_108 { pt3dadd( 43.2916, -179.955, 24.4401, 0.29 ) }
    dend_108 { pt3dadd( 43.6196, -180.413, 24.4873, 0.44 ) }
    dend_108 { pt3dadd( 44.1681, -181.191, 24.5582, 0.66 ) }
    dend_108 { pt3dadd( 44.9516, -182.317, 24.653, 0.37 ) }
    dend_108 { pt3dadd( 45.4304, -183.082, 24.6659, 0.37 ) }
    dend_108 { pt3dadd( 45.9264, -183.93, 24.6666, 0.37 ) }
    dend_108 { pt3dadd( 45.9663, -184.0, 24.6651, 0.37 ) }
    dend_108 { pt3dadd( 46.3359, -184.651, 24.6244, 0.74 ) }
    dend_108 { pt3dadd( 46.4674, -184.86, 24.6109, 0.74 ) }
    // Section: dend_100, id: dend_100, parent: dend_89 (entry count 37/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -50.6446, -258.762, 17.0551, 0.44 ) }
    dend_100 { pt3dadd( -51.8346, -261.698, 16.3063, 0.44 ) }
    dend_100 { pt3dadd( -52.5366, -263.428, 15.8844, 0.44 ) }
    dend_100 { pt3dadd( -53.3494, -265.527, 15.2034, 0.44 ) }
    dend_100 { pt3dadd( -53.8618, -266.97, 14.6617, 1.03 ) }
    dend_100 { pt3dadd( -53.9532, -267.304, 14.5369, 1.03 ) }
    dend_100 { pt3dadd( -54.2196, -268.617, 14.0515, 0.29 ) }
    dend_100 { pt3dadd( -54.3297, -269.243, 13.8244, 0.29 ) }
    dend_100 { pt3dadd( -54.241, -271.071, 13.037, 0.66 ) }
    dend_100 { pt3dadd( -54.0877, -271.519, 12.8243, 0.66 ) }
    dend_100 { pt3dadd( -53.3157, -272.982, 12.2125, 0.44 ) }
    dend_100 { pt3dadd( -52.9645, -273.519, 11.9782, 0.44 ) }
    dend_100 { pt3dadd( -52.7376, -273.782, 11.8629, 0.44 ) }
    dend_100 { pt3dadd( -52.5081, -274.045, 11.802, 0.44 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 51/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -50.6446, -258.762, 17.0551, 0.59 ) }
    dend_90 { pt3dadd( -51.3049, -259.411, 17.116, 0.59 ) }
    dend_90 { pt3dadd( -52.0374, -259.963, 17.2147, 0.59 ) }
    dend_90 { pt3dadd( -52.6528, -260.137, 17.3434, 0.59 ) }
    dend_90 { pt3dadd( -53.0237, -260.139, 17.503, 0.59 ) }
    dend_90 { pt3dadd( -53.2358, -260.146, 17.612, 0.59 ) }
    dend_90 { pt3dadd( -53.6817, -260.191, 17.86, 0.59 ) }
    dend_90 { pt3dadd( -54.2898, -260.162, 18.2535, 0.66 ) }
    dend_90 { pt3dadd( -55.3947, -259.969, 19.0216, 0.66 ) }
    dend_90 { pt3dadd( -56.3639, -259.732, 19.7514, 0.88 ) }
    dend_90 { pt3dadd( -57.0678, -259.551, 20.3224, 0.59 ) }
    dend_90 { pt3dadd( -57.5404, -259.449, 20.7385, 0.88 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 63/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -343.18, -99.3693, -23.9928, 0.44 ) }
    dend_77 { pt3dadd( -345.817, -99.3713, -23.2463, 0.44 ) }
    dend_77 { pt3dadd( -345.864, -99.3683, -23.2356, 0.44 ) }
    dend_77 { pt3dadd( -346.731, -99.2447, -23.0606, 0.44 ) }
    dend_77 { pt3dadd( -347.519, -99.0948, -22.9556, 0.44 ) }
    dend_77 { pt3dadd( -348.256, -98.929, -22.8872, 0.81 ) }
    dend_77 { pt3dadd( -348.749, -98.8032, -22.856, 0.44 ) }
    dend_77 { pt3dadd( -350.023, -98.361, -22.9281, 0.29 ) }
    dend_77 { pt3dadd( -350.961, -98.0245, -22.9189, 0.29 ) }
    dend_77 { pt3dadd( -351.794, -97.7199, -22.8638, 1.11 ) }
    dend_77 { pt3dadd( -352.127, -97.6071, -22.8269, 1.62 ) }
    dend_77 { pt3dadd( -352.999, -97.3335, -22.7016, 2.06 ) }
    dend_77 { pt3dadd( -353.066, -97.3146, -22.6907, 2.06 ) }
    dend_77 { pt3dadd( -355.228, -96.8649, -22.0399, 0.52 ) }
    dend_77 { pt3dadd( -356.11, -96.7445, -21.7135, 0.52 ) }
    dend_77 { pt3dadd( -357.07, -96.6968, -21.2705, 0.52 ) }
    dend_77 { pt3dadd( -358.076, -96.7111, -20.7587, 0.52 ) }
    dend_77 { pt3dadd( -358.874, -96.7786, -20.3214, 0.52 ) }
    dend_77 { pt3dadd( -361.376, -97.166, -18.8873, 0.52 ) }
    dend_77 { pt3dadd( -362.288, -97.4249, -18.3301, 0.52 ) }
    dend_77 { pt3dadd( -363.727, -98.0314, -17.3927, 0.52 ) }
    dend_77 { pt3dadd( -363.775, -98.0568, -17.3582, 0.52 ) }
    dend_77 { pt3dadd( -364.111, -98.2908, -17.097, 0.96 ) }
    dend_77 { pt3dadd( -364.347, -98.5043, -16.9156, 0.96 ) }
    dend_77 { pt3dadd( -364.746, -99.0367, -16.7487, 0.44 ) }
    dend_77 { pt3dadd( -365.159, -99.7429, -16.5922, 0.52 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 89/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -343.18, -99.3693, -23.9928, 0.44 ) }
    dend_76 { pt3dadd( -343.379, -97.681, -24.6289, 0.44 ) }
    dend_76 { pt3dadd( -343.451, -96.9118, -24.8755, 0.44 ) }
    dend_76 { pt3dadd( -343.458, -96.8273, -24.8994, 0.44 ) }
    dend_76 { pt3dadd( -343.525, -95.9205, -25.1246, 0.44 ) }
    dend_76 { pt3dadd( -343.564, -95.3535, -25.2538, 0.44 ) }
    dend_76 { pt3dadd( -343.613, -94.6444, -25.4153, 0.22 ) }
    dend_76 { pt3dadd( -343.637, -94.1864, -25.4717, 0.22 ) }
    dend_76 { pt3dadd( -343.654, -93.9138, -25.5037, 0.22 ) }
    dend_76 { pt3dadd( -343.67, -93.4596, -25.5372, 0.74 ) }
    dend_76 { pt3dadd( -343.669, -93.3838, -25.5324, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 0/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 288.508, 44.4559, -68.5134, 0.66 ) }
    dend_54 { pt3dadd( 291.305, 44.6155, -71.9627, 0.66 ) }
    dend_54 { pt3dadd( 292.159, 44.6896, -73.3321, 0.52 ) }
    dend_54 { pt3dadd( 292.697, 44.7142, -74.2002, 0.52 ) }
    dend_54 { pt3dadd( 294.353, 44.7726, -76.7157, 0.81 ) }
    dend_54 { pt3dadd( 294.802, 44.787, -77.3602, 1.47 ) }
    dend_54 { pt3dadd( 295.1, 44.7981, -77.7671, 1.77 ) }
    dend_54 { pt3dadd( 298.064, 44.8966, -81.5694, 0.37 ) }
    dend_54 { pt3dadd( 298.972, 44.9843, -82.7592, 0.37 ) }
    dend_54 { pt3dadd( 299.68, 45.1164, -83.6493, 0.44 ) }
    dend_54 { pt3dadd( 300.035, 45.2219, -84.0297, 0.44 ) }
    dend_54 { pt3dadd( 300.356, 45.3506, -84.345, 0.44 ) }
    dend_54 { pt3dadd( 300.798, 45.5501, -84.6724, 0.44 ) }
    dend_54 { pt3dadd( 302.005, 46.1468, -84.9373, 0.44 ) }
    dend_54 { pt3dadd( 302.667, 46.4689, -85.1249, 0.44 ) }
    dend_54 { pt3dadd( 303.039, 46.4833, -85.2345, 0.44 ) }
    dend_54 { pt3dadd( 303.801, 46.2194, -85.6896, 0.44 ) }
    dend_54 { pt3dadd( 304.253, 45.9607, -86.0496, 0.44 ) }
    dend_54 { pt3dadd( 304.884, 45.5305, -86.8947, 0.44 ) }
    dend_54 { pt3dadd( 305.467, 45.1138, -87.7777, 0.29 ) }
    dend_54 { pt3dadd( 305.908, 44.802, -88.486, 0.29 ) }
    dend_54 { pt3dadd( 307.11, 44.0064, -90.4799, 0.29 ) }
    dend_54 { pt3dadd( 307.23, 43.9286, -90.6973, 1.18 ) }
    dend_54 { pt3dadd( 308.743, 42.8738, -93.6206, 1.18 ) }
    dend_54 { pt3dadd( 308.971, 42.6982, -94.0802, 1.03 ) }
    dend_54 { pt3dadd( 309.176, 42.5097, -94.4788, 0.81 ) }
    dend_54 { pt3dadd( 309.367, 42.2853, -94.8208, 0.81 ) }
    dend_54 { pt3dadd( 310.198, 41.1317, -95.9598, 0.37 ) }
    dend_54 { pt3dadd( 310.803, 40.1958, -96.6484, 0.59 ) }
    dend_54 { pt3dadd( 311.31, 39.4366, -97.0712, 0.59 ) }
    dend_54 { pt3dadd( 311.843, 38.7479, -97.4593, 0.59 ) }
    dend_54 { pt3dadd( 312.829, 37.6979, -98.0168, 0.81 ) }
    dend_54 { pt3dadd( 313.371, 37.1981, -98.2908, 0.81 ) }
    dend_54 { pt3dadd( 314.119, 36.6111, -98.6188, 0.81 ) }
    dend_54 { pt3dadd( 315.948, 35.4041, -99.3647, 0.52 ) }
    dend_54 { pt3dadd( 317.092, 34.7414, -99.8027, 0.52 ) }
    dend_54 { pt3dadd( 319.207, 33.639, -100.554, 0.52 ) }
    dend_54 { pt3dadd( 320.778, 32.9162, -101.17, 1.47 ) }
    dend_54 { pt3dadd( 321.214, 32.7474, -101.375, 1.99 ) }
    dend_54 { pt3dadd( 322.259, 32.4476, -101.922, 2.43 ) }
    dend_54 { pt3dadd( 322.642, 32.3838, -102.15, 1.99 ) }
    dend_54 { pt3dadd( 323.046, 32.3622, -102.419, 1.62 ) }
    dend_54 { pt3dadd( 325.322, 32.4408, -104.033, 1.25 ) }
    dend_54 { pt3dadd( 326.869, 32.5119, -105.159, 0.52 ) }
    dend_54 { pt3dadd( 327.847, 32.5172, -105.948, 0.52 ) }
    dend_54 { pt3dadd( 328.763, 32.4494, -107.261, 0.52 ) }
    dend_54 { pt3dadd( 329.111, 32.3586, -108.043, 0.52 ) }
    dend_54 { pt3dadd( 329.253, 32.2747, -108.538, 0.52 ) }
    dend_54 { pt3dadd( 329.375, 32.0966, -109.36, 0.88 ) }
    dend_54 { pt3dadd( 329.453, 31.8808, -110.304, 0.88 ) }
    dend_54 { pt3dadd( 329.813, 30.543, -115.922, 0.59 ) }
    dend_54 { pt3dadd( 329.855, 30.412, -116.454, 0.52 ) }
    dend_54 { pt3dadd( 329.9, 30.3003, -116.913, 0.29 ) }
    dend_54 { pt3dadd( 329.973, 30.1769, -117.434, 0.29 ) }
    dend_54 { pt3dadd( 330.09, 30.0347, -118.475, 0.29 ) }
    dend_54 { pt3dadd( 330.133, 29.9959, -119.056, 0.29 ) }
    dend_54 { pt3dadd( 330.162, 29.9738, -120.295, 0.29 ) }
    dend_54 { pt3dadd( 330.164, 29.9682, -121.119, 0.29 ) }
    dend_54 { pt3dadd( 330.162, 29.9958, -121.877, 0.29 ) }
    dend_54 { pt3dadd( 330.202, 30.498, -129.215, 0.59 ) }
    dend_54 { pt3dadd( 330.213, 30.5443, -129.746, 0.74 ) }
    dend_54 { pt3dadd( 330.22, 30.5682, -129.943, 0.74 ) }
    dend_54 { pt3dadd( 330.249, 30.6435, -130.427, 0.74 ) }
    dend_54 { pt3dadd( 330.622, 30.9533, -132.046, 0.44 ) }
    dend_54 { pt3dadd( 331.376, 31.0936, -132.875, 0.44 ) }
    dend_54 { pt3dadd( 332.58, 31.0819, -133.097, 0.44 ) }
    dend_54 { pt3dadd( 332.667, 31.0768, -133.113, 0.44 ) }
    dend_54 { pt3dadd( 333.719, 30.9642, -133.336, 0.44 ) }
    dend_54 { pt3dadd( 335.416, 30.6532, -133.751, 0.44 ) }
    dend_54 { pt3dadd( 336.707, 30.1883, -134.134, 0.44 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 70/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 288.508, 44.4559, -68.5134, 0.29 ) }
    dend_53 { pt3dadd( 288.05, 43.1259, -69.6947, 0.29 ) }
    dend_53 { pt3dadd( 287.916, 42.7401, -70.0373, 0.29 ) }
    dend_53 { pt3dadd( 287.845, 42.5327, -70.2215, 0.29 ) }
    dend_53 { pt3dadd( 287.719, 42.1671, -70.5462, 0.29 ) }
    dend_53 { pt3dadd( 287.646, 41.9547, -70.7348, 0.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 76/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 187.583, 332.649, 46.5142, 0.66 ) }
    dend_29 { pt3dadd( 189.135, 336.117, 51.0195, 0.66 ) }
    dend_29 { pt3dadd( 189.535, 337.058, 52.118, 0.59 ) }
    dend_29 { pt3dadd( 189.806, 337.711, 52.7981, 0.96 ) }
    dend_29 { pt3dadd( 189.972, 338.12, 53.1814, 1.62 ) }
    dend_29 { pt3dadd( 190.182, 338.645, 53.6495, 1.62 ) }
    dend_29 { pt3dadd( 190.336, 339.056, 53.9153, 1.11 ) }
    dend_29 { pt3dadd( 190.354, 339.116, 53.8974, 1.11 ) }
    dend_29 { pt3dadd( 190.729, 340.451, 53.3903, 0.74 ) }
    dend_29 { pt3dadd( 190.755, 340.519, 53.3669, 0.74 ) }
    dend_29 { pt3dadd( 191.276, 341.548, 53.1569, 1.55 ) }
    dend_29 { pt3dadd( 192.49, 343.438, 53.0067, 0.66 ) }
    dend_29 { pt3dadd( 193.092, 344.326, 52.9857, 0.66 ) }
    dend_29 { pt3dadd( 193.134, 344.386, 52.9879, 0.66 ) }
    dend_29 { pt3dadd( 194.089, 345.709, 53.1559, 0.66 ) }
    dend_29 { pt3dadd( 194.801, 346.652, 53.2546, 1.25 ) }
    dend_29 { pt3dadd( 195.206, 347.141, 53.2894, 2.14 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 93/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 187.583, 332.649, 46.5142, 0.44 ) }
    dend_28 { pt3dadd( 187.322, 333.88, 46.7572, 0.44 ) }
    dend_28 { pt3dadd( 187.07, 334.787, 46.9116, 0.44 ) }
    dend_28 { pt3dadd( 186.75, 335.776, 47.0638, 0.44 ) }
    dend_28 { pt3dadd( 186.513, 336.508, 47.1765, 0.44 ) }
    dend_28 { pt3dadd( 186.344, 337.029, 47.2567, 0.52 ) }
    dend_28 { pt3dadd( 186.135, 337.676, 47.3563, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_28 { pt3dadd( 186.005, 337.969, 47.3659, 0.66 ) }
    dend_28 { pt3dadd( 185.936, 338.079, 47.3675, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 2/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 78.7551, 372.735, 46.4476, 0.37 ) }
    dend_17 { pt3dadd( 79.0222, 374.589, 45.2905, 0.37 ) }
    dend_17 { pt3dadd( 79.2947, 376.344, 44.2796, 1.03 ) }
    dend_17 { pt3dadd( 79.3596, 376.719, 44.0863, 1.62 ) }
    dend_17 { pt3dadd( 79.6829, 378.433, 43.2943, 0.44 ) }
    dend_17 { pt3dadd( 79.7828, 378.939, 43.0864, 0.44 ) }
    dend_17 { pt3dadd( 79.9315, 379.679, 42.833, 0.44 ) }
    dend_17 { pt3dadd( 79.978, 379.916, 42.7868, 0.44 ) }
    dend_17 { pt3dadd( 80.1254, 380.791, 42.6789, 0.44 ) }
    dend_17 { pt3dadd( 80.214, 381.4, 42.6038, 0.44 ) }
    dend_17 { pt3dadd( 80.2955, 382.097, 42.5246, 1.47 ) }
    dend_17 { pt3dadd( 80.496, 384.321, 42.2703, 0.37 ) }
    dend_17 { pt3dadd( 80.5693, 385.266, 42.1619, 1.11 ) }
    dend_17 { pt3dadd( 80.7587, 387.859, 41.8581, 0.29 ) }
    dend_17 { pt3dadd( 80.8109, 388.803, 41.7352, 0.29 ) }
    dend_17 { pt3dadd( 80.8325, 389.329, 41.6545, 0.29 ) }
    dend_17 { pt3dadd( 80.8693, 390.304, 41.4876, 0.29 ) }
    dend_17 { pt3dadd( 80.9061, 390.99, 41.3611, 1.25 ) }
    dend_17 { pt3dadd( 80.923, 391.13, 41.3337, 1.25 ) }
    dend_17 { pt3dadd( 81.0715, 391.766, 41.2169, 1.25 ) }
    dend_17 { pt3dadd( 81.4312, 392.922, 40.9543, 0.29 ) }
    dend_17 { pt3dadd( 81.8386, 393.995, 40.6836, 0.29 ) }
    dend_17 { pt3dadd( 82.1769, 394.825, 40.4637, 0.29 ) }
    dend_17 { pt3dadd( 82.5209, 395.631, 40.2531, 0.29 ) }
    dend_17 { pt3dadd( 82.9814, 396.623, 40.008, 0.29 ) }
    dend_17 { pt3dadd( 83.342, 397.279, 39.8644, 0.96 ) }
    dend_17 { pt3dadd( 83.5402, 397.57, 39.8013, 0.96 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 29/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 78.7551, 372.735, 46.4476, 0.29 ) }
    dend_16 { pt3dadd( 81.1578, 372.01, 45.5198, 0.29 ) }
    dend_16 { pt3dadd( 81.8524, 371.615, 45.3139, 0.29 ) }
    dend_16 { pt3dadd( 82.6396, 371.03, 45.0432, 0.52 ) }
    dend_16 { pt3dadd( 82.6854, 370.991, 45.0265, 0.52 ) }
    dend_16 { pt3dadd( 83.4714, 370.25, 44.728, 0.37 ) }
    dend_16 { pt3dadd( 84.6511, 369.137, 44.28, 0.37 ) }
    dend_16 { pt3dadd( 85.0967, 368.496, 44.1993, 0.37 ) }
    dend_16 { pt3dadd( 85.4902, 367.765, 44.1086, 0.81 ) }
    dend_16 { pt3dadd( 85.5376, 367.651, 44.0927, 0.81 ) }
    dend_16 { pt3dadd( 85.6603, 367.323, 44.0328, 0.81 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 40/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -15.8594, 773.223, 5.107, 1.84 ) }
    dend_9 { pt3dadd( -15.8572, 774.111, 5.08574, 1.84 ) }
    dend_9 { pt3dadd( -15.8693, 774.781, 5.0651, 1.69 ) }
    dend_9 { pt3dadd( -15.9005, 775.573, 5.03655, 1.25 ) }
    dend_9 { pt3dadd( -15.9168, 775.89, 5.02489, 1.03 ) }
    dend_9 { pt3dadd( -15.9344, 776.278, 5.01336, 1.03 ) }
    dend_9 { pt3dadd( -15.9513, 776.644, 5.00362, 1.03 ) }
    dend_9 { pt3dadd( -15.9614, 776.818, 5.00013, 0.74 ) }
    dend_9 { pt3dadd( -15.9602, 777.284, 4.98835, 0.74 ) }
    dend_9 { pt3dadd( -15.925, 777.774, 4.97758, 0.74 ) }
    dend_9 { pt3dadd( -15.8105, 778.542, 4.97235, 0.74 ) }
    dend_9 { pt3dadd( -15.7377, 778.873, 5.00579, 0.74 ) }
    dend_9 { pt3dadd( -15.5925, 779.384, 5.10488, 0.74 ) }
    dend_9 { pt3dadd( -15.4342, 779.918, 5.26055, 0.59 ) }
    dend_9 { pt3dadd( -15.2628, 780.49, 5.47111, 0.59 ) }
    dend_9 { pt3dadd( -15.181, 780.801, 5.59903, 0.59 ) }
    dend_9 { pt3dadd( -14.9852, 781.83, 5.99658, 0.37 ) }
    dend_9 { pt3dadd( -14.9327, 782.379, 6.18102, 0.37 ) }
    dend_9 { pt3dadd( -14.9445, 783.005, 6.34894, 1.33 ) }
    dend_9 { pt3dadd( -15.0349, 783.632, 6.46302, 1.69 ) }
    dend_9 { pt3dadd( -15.1513, 784.158, 6.50774, 1.69 ) }
    dend_9 { pt3dadd( -15.3757, 785.013, 6.50406, 2.36 ) }
    dend_9 { pt3dadd( -15.5107, 785.51, 6.45467, 2.36 ) }
    dend_9 { pt3dadd( -15.6569, 786.077, 6.38684, 2.14 ) }
    dend_9 { pt3dadd( -15.7747, 786.724, 6.31019, 1.4 ) }
    dend_9 { pt3dadd( -15.8208, 787.148, 6.26508, 1.4 ) }
    dend_9 { pt3dadd( -15.8365, 787.487, 6.23487, 1.18 ) }
    dend_9 { pt3dadd( -15.8387, 787.905, 6.20598, 0.96 ) }
    dend_9 { pt3dadd( -15.8292, 788.438, 6.16163, 0.81 ) }
    dend_9 { pt3dadd( -15.8185, 789.099, 6.09167, 0.81 ) }
    dend_9 { pt3dadd( -15.8062, 789.784, 6.00894, 0.37 ) }
    dend_9 { pt3dadd( -15.8189, 790.178, 5.95191, 0.37 ) }
    dend_9 { pt3dadd( -15.8539, 790.461, 5.90251, 0.37 ) }
    dend_9 { pt3dadd( -15.9156, 790.746, 5.81015, 0.37 ) }
    dend_9 { pt3dadd( -16.0041, 791.083, 5.66652, 0.44 ) }
    dend_9 { pt3dadd( -16.1036, 791.436, 5.49307, 0.44 ) }
    dend_9 { pt3dadd( -16.1686, 791.722, 5.36268, 0.44 ) }
    dend_9 { pt3dadd( -16.2218, 792.057, 5.21152, 0.44 ) }
    dend_9 { pt3dadd( -16.3463, 792.909, 4.86792, 0.88 ) }
    dend_9 { pt3dadd( -16.4249, 793.371, 4.71708, 0.88 ) }
    dend_9 { pt3dadd( -16.5056, 793.819, 4.61546, 1.25 ) }
    dend_9 { pt3dadd( -16.6107, 794.403, 4.539, 1.47 ) }
    dend_9 { pt3dadd( -16.6957, 794.928, 4.51483, 1.84 ) }
    dend_9 { pt3dadd( -16.7759, 795.499, 4.53053, 1.84 ) }
    dend_9 { pt3dadd( -16.849, 796.073, 4.58755, 1.62 ) }
    dend_9 { pt3dadd( -16.9562, 797.019, 4.69071, 0.88 ) }
    dend_9 { pt3dadd( -17.0188, 797.706, 4.77514, 0.81 ) }
    dend_9 { pt3dadd( -17.0703, 798.352, 4.87454, 0.81 ) }
    dend_9 { pt3dadd( -17.0775, 798.468, 4.89491, 0.81 ) }
    dend_9 { pt3dadd( -17.0978, 798.996, 4.98725, 0.88 ) }
    dend_9 { pt3dadd( -17.0933, 799.505, 5.04206, 0.96 ) }
    dend_9 { pt3dadd( -17.0805, 799.821, 5.06623, 0.96 ) }
    dend_9 { pt3dadd( -17.0639, 800.515, 5.16457, 0.96 ) }
    dend_9 { pt3dadd( -17.044, 801.098, 5.27517, 0.66 ) }
    dend_9 { pt3dadd( -17.0344, 801.446, 5.34801, 1.03 ) }
    dend_9 { pt3dadd( -16.991, 802.676, 5.62414, 1.47 ) }
    dend_9 { pt3dadd( -16.9631, 803.136, 5.72886, 2.95 ) }
    dend_9 { pt3dadd( -16.9803, 804.621, 6.34412, 2.87 ) }
    dend_9 { pt3dadd( -16.9954, 804.949, 6.50736, 3.54 ) }
    dend_9 { pt3dadd( -17.0362, 805.433, 6.77974, 3.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_9 { pt3dadd( -17.0929, 805.823, 7.0224, 3.54 ) }
    dend_9 { pt3dadd( -17.2507, 806.502, 7.46918, 2.43 ) }
    dend_9 { pt3dadd( -17.8789, 808.726, 8.80976, 2.06 ) }
    dend_9 { pt3dadd( -18.1021, 809.431, 9.18388, 1.92 ) }
    dend_9 { pt3dadd( -18.3696, 810.177, 9.55721, 1.11 ) }
    dend_9 { pt3dadd( -18.7968, 811.277, 10.0708, 0.74 ) }
    dend_9 { pt3dadd( -19.0943, 811.983, 10.342, 0.74 ) }
    dend_9 { pt3dadd( -19.27, 812.39, 10.439, 1.18 ) }
    dend_9 { pt3dadd( -19.3717, 812.643, 10.4542, 1.84 ) }
    dend_9 { pt3dadd( -19.3934, 812.689, 10.4596, 2.43 ) }
    dend_9 { pt3dadd( -19.5265, 812.955, 10.4885, 2.43 ) }
    dend_9 { pt3dadd( -19.7678, 813.429, 10.5183, 2.43 ) }
    dend_9 { pt3dadd( -20.0097, 813.862, 10.5841, 2.43 ) }
    dend_9 { pt3dadd( -20.5053, 814.675, 10.7884, 1.11 ) }
    dend_9 { pt3dadd( -20.8274, 815.198, 10.9473, 0.88 ) }
    dend_9 { pt3dadd( -21.0825, 815.609, 11.0866, 0.88 ) }
    dend_9 { pt3dadd( -21.48, 816.287, 11.3348, 0.81 ) }
    dend_9 { pt3dadd( -21.9023, 817.2, 11.671, 0.81 ) }
    dend_9 { pt3dadd( -22.1505, 817.984, 11.9467, 1.4 ) }
    dend_9 { pt3dadd( -22.226, 818.439, 12.0819, 1.84 ) }
    dend_9 { pt3dadd( -22.2292, 818.49, 12.096, 1.84 ) }
    dend_9 { pt3dadd( -22.2233, 819.29, 12.2755, 2.5 ) }
    dend_9 { pt3dadd( -22.1512, 820.546, 12.4829, 2.8 ) }
    dend_9 { pt3dadd( -22.1189, 821.234, 12.5753, 2.8 ) }
    dend_9 { pt3dadd( -22.1181, 822.137, 12.6869, 2.5 ) }
    dend_9 { pt3dadd( -22.1397, 822.562, 12.7451, 2.14 ) }
    dend_9 { pt3dadd( -22.242, 823.557, 12.8877, 2.14 ) }
    dend_9 { pt3dadd( -22.3285, 824.049, 12.9607, 0.37 ) }
    dend_9 { pt3dadd( -22.5857, 825.07, 13.1135, 0.59 ) }
    dend_9 { pt3dadd( -22.7814, 825.752, 13.2319, 0.59 ) }
    dend_9 { pt3dadd( -22.8893, 826.104, 13.3025, 0.88 ) }
    dend_9 { pt3dadd( -23.0651, 826.654, 13.4173, 0.88 ) }
    dend_9 { pt3dadd( -23.1446, 826.903, 13.4705, 1.03 ) }
    dend_9 { pt3dadd( -23.2552, 827.274, 13.5357, 0.66 ) }
    dend_9 { pt3dadd( -23.4702, 828.066, 13.6125, 0.29 ) }
    dend_9 { pt3dadd( -23.5289, 828.243, 13.6415, 0.37 ) }
    dend_9 { pt3dadd( -23.6313, 828.521, 13.698, 0.37 ) }
    dend_9 { pt3dadd( -23.6521, 828.574, 13.7096, 0.37 ) }
    dend_9 { pt3dadd( -23.8234, 829.015, 13.8689, 0.37 ) }
    dend_9 { pt3dadd( -23.8234, 829.015, 13.8689, 1.03 ) }
    dend_9 { pt3dadd( -23.9528, 829.632, 14.1641, 1.11 ) }
    dend_9 { pt3dadd( -24.0557, 830.312, 14.4904, 1.55 ) }
    dend_9 { pt3dadd( -24.1018, 830.729, 14.6781, 2.28 ) }
    dend_9 { pt3dadd( -24.1791, 832.058, 15.1744, 1.92 ) }
    dend_9 { pt3dadd( -24.1867, 832.504, 15.3118, 1.62 ) }
    dend_9 { pt3dadd( -24.1476, 833.571, 15.4172, 0.59 ) }
    dend_9 { pt3dadd( -24.122, 833.899, 15.3615, 0.59 ) }
    dend_9 { pt3dadd( -24.0907, 834.573, 14.9618, 0.59 ) }
    dend_9 { pt3dadd( -24.1388, 835.028, 14.3293, 1.18 ) }
    dend_9 { pt3dadd( -24.1806, 835.169, 13.9986, 1.55 ) }
    dend_9 { pt3dadd( -24.4321, 835.911, 11.7363, 0.22 ) }
    dend_9 { pt3dadd( -24.4963, 836.096, 11.0532, 0.37 ) }
    dend_9 { pt3dadd( -24.5737, 836.282, 10.2163, 0.37 ) }
    dend_9 { pt3dadd( -24.661, 836.428, 9.34691, 0.37 ) }
    dend_9 { pt3dadd( -24.7777, 836.568, 8.39324, 0.88 ) }
    dend_9 { pt3dadd( -24.9287, 836.789, 7.00526, 0.37 ) }
    dend_9 { pt3dadd( -24.9573, 836.951, 6.51726, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -15.8594, 773.223, 5.107, 0.29 ) }
    dend_8 { pt3dadd( -16.8131, 772.799, 4.00983, 0.29 ) }
    dend_8 { pt3dadd( -16.9581, 772.74, 3.85246, 0.37 ) }
    dend_8 { pt3dadd( -17.716, 772.457, 3.13439, 0.37 ) }
    dend_8 { pt3dadd( -18.6346, 772.177, 2.39249, 0.66 ) }
    dend_8 { pt3dadd( -19.0083, 772.067, 2.12781, 0.66 ) }
    dend_8 { pt3dadd( -19.3955, 771.953, 1.889, 0.66 ) }
    dend_8 { pt3dadd( -19.4688, 771.933, 1.85916, 0.66 ) }
    dend_8 { pt3dadd( -20.1048, 771.785, 1.66154, 0.37 ) }
    dend_8 { pt3dadd( -20.7069, 771.665, 1.52054, 0.59 ) }
    dend_8 { pt3dadd( -21.1957, 771.567, 1.45243, 0.44 ) }
    dend_8 { pt3dadd( -21.7967, 771.432, 1.36851, 0.44 ) }
    dend_8 { pt3dadd( -22.4467, 771.28, 1.27766, 0.44 ) }
    dend_8 { pt3dadd( -23.3681, 771.055, 1.14877, 1.11 ) }
    // Section: dend_128, id: dend_128, parent: dend_126 (entry count 71/100)
    dend_128 { pt3dclear() }
    dend_128 { pt3dadd( 108.321, -213.144, -203.305, 0.44 ) }
    dend_128 { pt3dadd( 108.664, -213.965, -203.182, 0.44 ) }
    dend_128 { pt3dadd( 108.689, -214.025, -203.173, 0.44 ) }
    dend_128 { pt3dadd( 109.081, -214.964, -203.032, 0.52 ) }
    dend_128 { pt3dadd( 109.241, -215.347, -202.975, 0.52 ) }
    dend_128 { pt3dadd( 109.366, -215.648, -202.93, 0.52 ) }
    // Section: dend_127, id: dend_127, parent: dend_126 (entry count 77/100)
    dend_127 { pt3dclear() }
    dend_127 { pt3dadd( 108.321, -213.144, -203.305, 0.88 ) }
    dend_127 { pt3dadd( 105.295, -211.322, -204.678, 0.88 ) }
    dend_127 { pt3dadd( 104.123, -210.517, -205.088, 0.88 ) }
    dend_127 { pt3dadd( 103.495, -210.044, -205.259, 0.52 ) }
    dend_127 { pt3dadd( 102.359, -209.155, -205.52, 0.44 ) }
    dend_127 { pt3dadd( 101.438, -208.477, -205.702, 0.44 ) }
    dend_127 { pt3dadd( 99.8405, -207.393, -205.99, 0.44 ) }
    dend_127 { pt3dadd( 98.5483, -206.585, -206.05, 0.44 ) }
    dend_127 { pt3dadd( 96.8006, -205.618, -206.135, 0.44 ) }
    dend_127 { pt3dadd( 95.9711, -205.208, -206.177, 0.44 ) }
    dend_127 { pt3dadd( 94.5423, -204.66, -206.256, 0.44 ) }
    dend_127 { pt3dadd( 93.623, -204.555, -206.369, 0.74 ) }
    dend_127 { pt3dadd( 93.5306, -204.574, -206.392, 0.74 ) }
    dend_127 { pt3dadd( 92.6711, -204.996, -206.691, 0.74 ) }
    dend_127 { pt3dadd( 92.4406, -205.148, -206.787, 0.37 ) }
    dend_127 { pt3dadd( 91.5037, -205.854, -207.239, 0.37 ) }
    dend_127 { pt3dadd( 89.8005, -207.248, -208.235, 0.44 ) }
    dend_127 { pt3dadd( 89.0529, -207.852, -208.721, 0.44 ) }
    dend_127 { pt3dadd( 88.0908, -208.643, -209.398, 0.44 ) }
    // Section: dend_125, id: dend_125, parent: dend_123 (entry count 96/100)
    dend_125 { pt3dclear() }
    dend_125 { pt3dadd( 122.376, -223.003, -206.017, 0.52 ) }
    dend_125 { pt3dadd( 122.748, -224.049, -206.123, 0.52 ) }
    dend_125 { pt3dadd( 123.051, -225.435, -206.03, 0.52 ) }
    dend_125 { pt3dadd( 123.174, -226.364, -205.901, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_125 { pt3dadd( 123.228, -227.298, -205.733, 1.4 ) }
    dend_125 { pt3dadd( 123.258, -228.328, -205.525, 0.96 ) }
    dend_125 { pt3dadd( 123.281, -230.34, -205.176, 0.52 ) }
    dend_125 { pt3dadd( 123.135, -231.194, -204.934, 0.52 ) }
    dend_125 { pt3dadd( 123.052, -231.498, -204.768, 0.52 ) }
    dend_125 { pt3dadd( 123.018, -231.815, -204.442, 0.52 ) }
    dend_125 { pt3dadd( 122.96, -231.49, -204.919, 0.52 ) }
    dend_125 { pt3dadd( 122.561, -230.386, -206.768, 0.52 ) }
    dend_125 { pt3dadd( 122.42, -230.117, -207.225, 0.52 ) }
    dend_125 { pt3dadd( 122.328, -229.885, -207.589, 0.52 ) }
    dend_125 { pt3dadd( 122.259, -229.635, -207.997, 0.52 ) }
    // Section: dend_124, id: dend_124, parent: dend_123 (entry count 11/100)
    dend_124 { pt3dclear() }
    dend_124 { pt3dadd( 122.376, -223.003, -206.017, 0.52 ) }
    dend_124 { pt3dadd( 122.695, -224.077, -206.534, 0.52 ) }
    dend_124 { pt3dadd( 122.826, -224.521, -206.747, 0.52 ) }
    dend_124 { pt3dadd( 122.945, -224.922, -206.94, 0.52 ) }
    dend_124 { pt3dadd( 122.995, -225.088, -207.02, 0.52 ) }
    dend_124 { pt3dadd( 123.159, -225.641, -207.286, 0.52 ) }
    // Section: dend_111, id: dend_111, parent: dend_109 (entry count 17/100)
    dend_111 { pt3dclear() }
    dend_111 { pt3dadd( 48.9453, -176.667, 27.9938, 0.52 ) }
    dend_111 { pt3dadd( 50.3199, -175.44, 27.6907, 0.52 ) }
    dend_111 { pt3dadd( 50.9973, -174.66, 27.5077, 0.52 ) }
    dend_111 { pt3dadd( 51.6685, -173.541, 27.2713, 0.29 ) }
    dend_111 { pt3dadd( 52.1123, -172.428, 27.063, 0.29 ) }
    dend_111 { pt3dadd( 52.4238, -171.647, 26.9169, 0.29 ) }
    dend_111 { pt3dadd( 52.7133, -170.92, 26.781, 0.44 ) }
    dend_111 { pt3dadd( 52.7523, -170.7, 26.717, 0.44 ) }
    dend_111 { pt3dadd( 52.7061, -169.935, 26.5658, 0.29 ) }
    dend_111 { pt3dadd( 52.4783, -169.081, 26.5143, 0.29 ) }
    // Section: dend_110, id: dend_110, parent: dend_109 (entry count 27/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( 48.9453, -176.667, 27.9938, 0.22 ) }
    dend_110 { pt3dadd( 48.7321, -175.518, 27.3147, 0.22 ) }
    dend_110 { pt3dadd( 48.6262, -174.947, 26.9772, 0.22 ) }
    dend_110 { pt3dadd( 48.5344, -174.453, 26.6848, 0.29 ) }
    dend_110 { pt3dadd( 48.4764, -174.14, 26.5001, 0.29 ) }
    dend_110 { pt3dadd( 48.3866, -173.656, 26.2141, 0.37 ) }
    dend_110 { pt3dadd( 48.3385, -173.397, 26.061, 0.37 ) }
    // Section: dend_95, id: dend_95, parent: dend_90 (entry count 34/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -57.5404, -259.449, 20.7385, 0.37 ) }
    dend_95 { pt3dadd( -57.7087, -260.886, 21.9598, 0.37 ) }
    dend_95 { pt3dadd( -57.7987, -261.655, 22.6131, 1.18 ) }
    dend_95 { pt3dadd( -57.8682, -262.248, 23.1178, 1.99 ) }
    // Section: dend_94, id: dend_94, parent: dend_90 (entry count 38/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -57.5404, -259.449, 20.7385, 1.4 ) }
    dend_94 { pt3dadd( -57.0081, -260.771, 20.1537, 1.4 ) }
    dend_94 { pt3dadd( -56.7527, -261.404, 19.8583, 1.4 ) }
    dend_94 { pt3dadd( -56.2277, -262.647, 19.3398, 0.29 ) }
    dend_94 { pt3dadd( -55.8933, -263.42, 19.0687, 0.29 ) }
    dend_94 { pt3dadd( -55.4562, -264.445, 18.7519, 0.37 ) }
    dend_94 { pt3dadd( -54.983, -265.666, 18.4007, 0.37 ) }
    dend_94 { pt3dadd( -54.9616, -265.729, 18.3893, 0.37 ) }
    dend_94 { pt3dadd( -54.654, -266.976, 18.1603, 0.37 ) }
    dend_94 { pt3dadd( -54.5662, -267.605, 18.0528, 0.74 ) }
    dend_94 { pt3dadd( -54.53, -267.84, 18.0252, 0.74 ) }
    dend_94 { pt3dadd( -55.4255, -267.958, 17.9163, 0.22 ) }
    dend_94 { pt3dadd( -55.9065, -267.997, 17.8603, 0.44 ) }
    dend_94 { pt3dadd( -57.5146, -268.026, 17.6222, 0.29 ) }
    dend_94 { pt3dadd( -57.9288, -268.015, 17.5511, 0.81 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 53/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -57.5404, -259.449, 20.7385, 0.37 ) }
    dend_91 { pt3dadd( -58.1632, -258.954, 21.6236, 0.37 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 55/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 336.707, 30.1883, -134.134, 0.22 ) }
    dend_58 { pt3dadd( 335.987, 27.3801, -134.386, 0.22 ) }
    dend_58 { pt3dadd( 335.682, 26.4326, -134.552, 0.22 ) }
    dend_58 { pt3dadd( 335.657, 26.3618, -134.57, 0.22 ) }
    dend_58 { pt3dadd( 335.25, 25.2049, -134.873, 0.22 ) }
    dend_58 { pt3dadd( 335.036, 24.5947, -135.033, 0.22 ) }
    dend_58 { pt3dadd( 334.93, 24.2928, -135.113, 0.81 ) }
    dend_58 { pt3dadd( 334.658, 23.7234, -135.49, 0.81 ) }
    dend_58 { pt3dadd( 334.351, 23.2446, -135.801, 0.81 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 64/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 336.707, 30.1883, -134.134, 0.37 ) }
    dend_55 { pt3dadd( 337.741, 30.2559, -134.335, 0.37 ) }
    dend_55 { pt3dadd( 338.45, 30.422, -134.415, 0.81 ) }
    dend_55 { pt3dadd( 338.971, 30.6379, -134.425, 0.96 ) }
    dend_55 { pt3dadd( 339.578, 30.9033, -134.353, 0.96 ) }
    dend_55 { pt3dadd( 340.861, 31.4373, -134.15, 0.96 ) }
    dend_55 { pt3dadd( 342.17, 32.0448, -134.11, 0.59 ) }
    dend_55 { pt3dadd( 343.301, 32.6221, -134.072, 0.52 ) }
    dend_55 { pt3dadd( 344.697, 33.4142, -134.095, 0.52 ) }
    dend_55 { pt3dadd( 346.457, 34.5053, -134.229, 0.52 ) }
    dend_55 { pt3dadd( 347.102, 34.9198, -134.323, 0.52 ) }
    dend_55 { pt3dadd( 349.961, 36.6948, -134.933, 0.59 ) }
    dend_55 { pt3dadd( 350.938, 37.248, -135.266, 0.74 ) }
    dend_55 { pt3dadd( 352.193, 37.8727, -135.901, 1.4 ) }
    dend_55 { pt3dadd( 352.752, 38.1074, -136.242, 2.5 ) }
    dend_55 { pt3dadd( 353.455, 38.4072, -136.704, 2.95 ) }
    dend_55 { pt3dadd( 354.074, 38.6491, -137.061, 2.95 ) }
    dend_55 { pt3dadd( 355.664, 39.115, -138.163, 1.77 ) }
    dend_55 { pt3dadd( 356.556, 39.3737, -139.029, 0.52 ) }
    dend_55 { pt3dadd( 357.426, 39.5783, -139.94, 0.52 ) }
    dend_55 { pt3dadd( 358.02, 39.703, -140.61, 1.33 ) }
    dend_55 { pt3dadd( 358.362, 39.7649, -141.009, 1.69 ) }
    dend_55 { pt3dadd( 361.22, 40.1246, -144.402, 0.81 ) }
    dend_55 { pt3dadd( 363.213, 40.1757, -146.757, 0.52 ) }
    dend_55 { pt3dadd( 364.082, 40.1552, -147.853, 0.52 ) }
    dend_55 { pt3dadd( 364.347, 40.1379, -148.196, 0.88 ) }
    dend_55 { pt3dadd( 364.814, 40.0839, -148.776, 0.88 ) }
    dend_55 { pt3dadd( 365.4, 39.9976, -149.417, 0.88 ) }
    dend_55 { pt3dadd( 366.099, 39.8772, -149.97, 1.11 ) }
    dend_55 { pt3dadd( 368.079, 39.4476, -151.505, 0.37 ) }
    dend_55 { pt3dadd( 368.58, 39.3607, -151.934, 0.44 ) }
    dend_55 { pt3dadd( 368.955, 39.3166, -152.265, 0.44 ) }
    dend_55 { pt3dadd( 369.891, 39.2695, -153.124, 0.74 ) }
    dend_55 { pt3dadd( 370.835, 39.3004, -153.988, 0.59 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 98/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 195.206, 347.141, 53.2894, 1.4 ) }
    dend_31 { pt3dadd( 195.621, 347.619, 54.0857, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_31 { pt3dadd( 196.055, 348.119, 54.9176, 0.96 ) }
    dend_31 { pt3dadd( 196.239, 348.331, 55.2713, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 2/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 195.206, 347.141, 53.2894, 0.44 ) }
    dend_30 { pt3dadd( 196.329, 345.411, 54.5835, 0.44 ) }
    dend_30 { pt3dadd( 197.142, 344.224, 55.455, 0.44 ) }
    dend_30 { pt3dadd( 197.651, 343.556, 55.9525, 0.44 ) }
    dend_30 { pt3dadd( 198.313, 342.688, 56.5992, 0.44 ) }
    dend_30 { pt3dadd( 198.899, 341.921, 57.1709, 0.44 ) }
    dend_30 { pt3dadd( 199.584, 341.023, 57.8404, 0.44 ) }
    dend_30 { pt3dadd( 199.627, 340.975, 57.8731, 0.44 ) }
    dend_30 { pt3dadd( 200.254, 340.278, 58.2694, 0.44 ) }
    // Section: dend_130, id: dend_130, parent: dend_128 (entry count 11/100)
    dend_130 { pt3dclear() }
    dend_130 { pt3dadd( 109.366, -215.648, -202.93, 0.66 ) }
    dend_130 { pt3dadd( 106.926, -219.052, -201.69, 0.66 ) }
    dend_130 { pt3dadd( 106.012, -220.504, -201.346, 0.66 ) }
    dend_130 { pt3dadd( 105.215, -222.026, -201.112, 0.74 ) }
    dend_130 { pt3dadd( 104.493, -223.546, -200.964, 0.59 ) }
    dend_130 { pt3dadd( 103.64, -225.342, -200.79, 0.59 ) }
    dend_130 { pt3dadd( 103.075, -226.532, -200.675, 0.59 ) }
    dend_130 { pt3dadd( 102.556, -227.774, -200.82, 0.59 ) }
    dend_130 { pt3dadd( 102.01, -229.287, -201.042, 0.59 ) }
    dend_130 { pt3dadd( 101.756, -230.264, -201.254, 0.59 ) }
    // Section: dend_129, id: dend_129, parent: dend_128 (entry count 21/100)
    dend_129 { pt3dclear() }
    dend_129 { pt3dadd( 109.366, -215.648, -202.93, 0.52 ) }
    dend_129 { pt3dadd( 108.898, -215.805, -203.036, 0.52 ) }
    dend_129 { pt3dadd( 108.274, -216.016, -203.177, 0.52 ) }
    dend_129 { pt3dadd( 107.661, -216.222, -203.316, 0.81 ) }
    // Section: dend_97, id: dend_97, parent: dend_95 (entry count 25/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -57.8682, -262.248, 23.1178, 0.44 ) }
    dend_97 { pt3dadd( -58.2474, -263.396, 23.5239, 0.44 ) }
    dend_97 { pt3dadd( -58.4645, -264.053, 23.7564, 0.44 ) }
    dend_97 { pt3dadd( -58.6063, -264.482, 23.9083, 0.96 ) }
    dend_97 { pt3dadd( -58.6178, -264.517, 23.9206, 0.96 ) }
    dend_97 { pt3dadd( -58.9037, -265.382, 24.2267, 0.37 ) }
    dend_97 { pt3dadd( -58.9998, -265.673, 24.3297, 1.11 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 32/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -57.8682, -262.248, 23.1178, 0.59 ) }
    dend_96 { pt3dadd( -56.9398, -263.23, 25.1094, 0.59 ) }
    dend_96 { pt3dadd( -56.2216, -263.99, 26.65, 0.59 ) }
    dend_96 { pt3dadd( -53.6709, -266.687, 32.1214, 0.52 ) }
    dend_96 { pt3dadd( -53.1286, -267.261, 33.2847, 0.52 ) }
    dend_96 { pt3dadd( -52.5395, -267.884, 34.5484, 0.52 ) }
    dend_96 { pt3dadd( -52.1566, -268.289, 35.3699, 0.52 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 39/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -58.1632, -258.954, 21.6236, 0.29 ) }
    dend_93 { pt3dadd( -58.5918, -259.062, 21.7246, 0.29 ) }
    dend_93 { pt3dadd( -59.2067, -259.242, 21.8651, 0.44 ) }
    dend_93 { pt3dadd( -59.9349, -259.494, 22.0431, 0.44 ) }
    dend_93 { pt3dadd( -61.5489, -260.051, 22.5235, 0.44 ) }
    dend_93 { pt3dadd( -62.1776, -260.261, 22.7413, 0.44 ) }
    dend_93 { pt3dadd( -62.5236, -260.377, 22.8612, 0.44 ) }
    dend_93 { pt3dadd( -62.5814, -260.396, 22.878, 0.44 ) }
    dend_93 { pt3dadd( -63.0425, -260.539, 22.9917, 0.44 ) }
    dend_93 { pt3dadd( -63.6613, -260.784, 23.147, 0.44 ) }
    dend_93 { pt3dadd( -63.8235, -260.913, 23.327, 0.88 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 50/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -58.1632, -258.954, 21.6236, 0.37 ) }
    dend_92 { pt3dadd( -58.3643, -258.698, 22.228, 0.37 ) }
    dend_92 { pt3dadd( -58.5297, -258.445, 22.7739, 0.37 ) }
    dend_92 { pt3dadd( -59.006, -257.716, 24.3458, 0.37 ) }
    dend_92 { pt3dadd( -59.2335, -257.368, 25.0967, 0.37 ) }
    dend_92 { pt3dadd( -59.3718, -257.157, 25.5531, 0.37 ) }
    dend_92 { pt3dadd( -59.5955, -256.814, 26.2914, 0.66 ) }
    dend_92 { pt3dadd( -59.6333, -256.754, 26.4391, 0.66 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 58/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 370.835, 39.3004, -153.988, 0.44 ) }
    dend_57 { pt3dadd( 371.895, 39.4268, -154.312, 0.44 ) }
    dend_57 { pt3dadd( 372.992, 39.4174, -154.646, 0.44 ) }
    dend_57 { pt3dadd( 374.295, 39.1631, -155.008, 0.44 ) }
    dend_57 { pt3dadd( 375.413, 38.8748, -155.293, 0.44 ) }
    dend_57 { pt3dadd( 376.294, 38.6327, -155.5, 0.44 ) }
    dend_57 { pt3dadd( 377.552, 38.3749, -156.02, 0.59 ) }
    dend_57 { pt3dadd( 378.035, 38.2799, -156.302, 1.18 ) }
    dend_57 { pt3dadd( 379.5, 38.0759, -157.32, 0.59 ) }
    dend_57 { pt3dadd( 379.858, 38.072, -157.596, 0.59 ) }
    dend_57 { pt3dadd( 380.202, 38.1362, -157.892, 1.11 ) }
    dend_57 { pt3dadd( 383.154, 39.079, -160.545, 1.11 ) }
    dend_57 { pt3dadd( 383.617, 39.2724, -161.013, 0.52 ) }
    dend_57 { pt3dadd( 384.229, 39.5763, -161.774, 0.52 ) }
    dend_57 { pt3dadd( 384.773, 39.8709, -162.534, 0.52 ) }
    dend_57 { pt3dadd( 385.405, 40.1575, -163.406, 0.52 ) }
    dend_57 { pt3dadd( 385.788, 40.291, -163.901, 0.52 ) }
    dend_57 { pt3dadd( 387.066, 40.514, -165.26, 0.66 ) }
    dend_57 { pt3dadd( 388.865, 40.6699, -167.212, 0.88 ) }
    dend_57 { pt3dadd( 389.15, 40.6717, -167.526, 0.88 ) }
    dend_57 { pt3dadd( 389.713, 40.6712, -168.138, 0.37 ) }
    dend_57 { pt3dadd( 390.022, 40.6638, -168.426, 0.66 ) }
    dend_57 { pt3dadd( 390.845, 40.6111, -168.977, 0.59 ) }
    dend_57 { pt3dadd( 391.55, 40.5757, -169.357, 0.59 ) }
    dend_57 { pt3dadd( 391.799, 40.5837, -169.503, 0.96 ) }
    dend_57 { pt3dadd( 392.762, 40.7805, -170.285, 0.81 ) }
    dend_57 { pt3dadd( 393.871, 41.1665, -171.365, 0.59 ) }
    dend_57 { pt3dadd( 394.707, 41.5554, -172.28, 0.59 ) }
    dend_57 { pt3dadd( 396.028, 42.2593, -173.811, 0.59 ) }
    dend_57 { pt3dadd( 396.973, 42.7611, -174.906, 0.96 ) }
    dend_57 { pt3dadd( 397.81, 43.1823, -175.866, 0.66 ) }
    dend_57 { pt3dadd( 398.192, 43.3563, -176.306, 0.66 ) }
    dend_57 { pt3dadd( 398.269, 43.3977, -176.404, 0.66 ) }
    dend_57 { pt3dadd( 398.986, 43.7199, -177.254, 0.66 ) }
    dend_57 { pt3dadd( 399.312, 43.9889, -178.03, 0.66 ) }
    dend_57 { pt3dadd( 399.343, 44.0119, -178.098, 0.66 ) }
    dend_57 { pt3dadd( 399.538, 44.1224, -178.436, 0.66 ) }
    dend_57 { pt3dadd( 399.538, 44.1224, -178.436, 1.11 ) }
    dend_57 { pt3dadd( 399.78, 44.2036, -178.738, 1.11 ) }
    dend_57 { pt3dadd( 404.137, 45.3041, -183.464, 0.59 ) }
    dend_57 { pt3dadd( 405.298, 45.481, -184.579, 0.59 ) }
    dend_57 { pt3dadd( 406.568, 45.5192, -185.703, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_57 { pt3dadd( 407.854, 45.3773, -186.765, 0.59 ) }
    dend_57 { pt3dadd( 408.788, 45.073, -187.483, 0.59 ) }
    dend_57 { pt3dadd( 409.59, 44.5175, -188.049, 0.59 ) }
    dend_57 { pt3dadd( 410.066, 43.8479, -188.361, 0.37 ) }
    dend_57 { pt3dadd( 410.631, 42.7079, -188.956, 0.37 ) }
    dend_57 { pt3dadd( 410.916, 41.7055, -189.492, 0.37 ) }
    dend_57 { pt3dadd( 411.047, 40.5478, -190.132, 0.37 ) }
    dend_57 { pt3dadd( 411.043, 39.4659, -190.759, 0.37 ) }
    dend_57 { pt3dadd( 410.99, 39.0112, -191.033, 0.37 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 9/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 370.835, 39.3004, -153.988, 0.29 ) }
    dend_56 { pt3dadd( 370.834, 37.9392, -154.955, 0.29 ) }
    dend_56 { pt3dadd( 370.857, 37.6918, -155.176, 0.29 ) }
    dend_56 { pt3dadd( 370.873, 37.6359, -155.235, 0.29 ) }
    dend_56 { pt3dadd( 371.136, 37.1665, -155.811, 0.29 ) }
    dend_56 { pt3dadd( 371.445, 36.743, -156.37, 0.59 ) }
    dend_56 { pt3dadd( 372.034, 35.8768, -157.442, 0.44 ) }
    dend_56 { pt3dadd( 372.277, 35.6437, -157.859, 0.44 ) }
    dend_56 { pt3dadd( 372.64, 35.3239, -158.391, 0.44 ) }
    dend_56 { pt3dadd( 372.949, 35.0705, -158.775, 0.44 ) }
    dend_56 { pt3dadd( 372.998, 35.0403, -158.826, 0.44 ) }
    dend_56 { pt3dadd( 373.542, 34.6289, -159.359, 0.44 ) }
    dend_56 { pt3dadd( 373.579, 34.5935, -159.417, 0.44 ) }
    dend_56 { pt3dadd( 373.776, 34.4033, -159.757, 0.44 ) }
    dend_56 { pt3dadd( 373.816, 34.3664, -159.829, 0.44 ) }
    dend_56 { pt3dadd( 374.758, 33.5485, -161.494, 0.44 ) }
    dend_56 { pt3dadd( 375.35, 33.014, -162.553, 0.44 ) }
    dend_56 { pt3dadd( 376.526, 31.9571, -164.681, 0.44 ) }
    dend_56 { pt3dadd( 376.926, 31.5943, -165.424, 0.44 ) }
    dend_56 { pt3dadd( 376.963, 31.5607, -165.495, 0.44 ) }
    dend_56 { pt3dadd( 377.184, 31.3366, -165.957, 0.44 ) }
    dend_56 { pt3dadd( 377.449, 30.9454, -166.69, 0.81 ) }
    dend_56 { pt3dadd( 377.486, 30.8799, -166.826, 0.81 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 196.239, 348.331, 55.2713, 0.59 ) }
    dend_33 { pt3dadd( 196.705, 349.682, 56.2723, 0.59 ) }
    dend_33 { pt3dadd( 196.847, 350.096, 56.5792, 0.59 ) }
    dend_33 { pt3dadd( 197.206, 351.138, 57.3506, 1.18 ) }
    dend_33 { pt3dadd( 197.236, 351.226, 57.4163, 1.18 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 196.239, 348.331, 55.2713, 0.22 ) }
    dend_32 { pt3dadd( 197.235, 349.173, 55.4578, 0.22 ) }
    dend_32 { pt3dadd( 197.971, 349.648, 55.5958, 0.22 ) }
    dend_32 { pt3dadd( 198.373, 349.873, 55.6716, 0.59 ) }
    dend_32 { pt3dadd( 198.925, 350.135, 55.7521, 0.59 ) }
    dend_32 { pt3dadd( 199.751, 350.477, 55.8353, 0.59 ) }
    dend_32 { pt3dadd( 200.898, 350.881, 55.8907, 0.44 ) }
    dend_32 { pt3dadd( 201.749, 351.011, 55.8579, 0.44 ) }
    dend_32 { pt3dadd( 201.736, 350.95, 55.808, 0.44 ) }
    dend_32 { pt3dadd( 201.505, 350.349, 55.2987, 0.81 ) }
    dend_32 { pt3dadd( 201.278, 349.884, 54.8527, 0.81 ) }
    dend_32 { pt3dadd( 200.875, 349.166, 54.1618, 0.37 ) }
    dend_32 { pt3dadd( 200.351, 348.411, 53.4198, 0.37 ) }
    dend_32 { pt3dadd( 199.879, 347.835, 52.8232, 0.37 ) }
    dend_32 { pt3dadd( 199.486, 347.407, 52.3769, 0.37 ) }
    dend_32 { pt3dadd( 198.946, 346.928, 51.8854, 0.81 ) }
    // Section: dend_99, id: dend_99, parent: dend_97 (entry count 53/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -58.9998, -265.673, 24.3297, 0.29 ) }
    dend_99 { pt3dadd( -60.2249, -266.291, 24.8424, 0.29 ) }
    dend_99 { pt3dadd( -61.3968, -266.883, 25.3329, 0.29 ) }
    dend_99 { pt3dadd( -62.1029, -267.239, 25.6284, 0.29 ) }
    dend_99 { pt3dadd( -62.778, -267.58, 25.9109, 0.29 ) }
    dend_99 { pt3dadd( -63.2862, -267.837, 26.1236, 0.29 ) }
    dend_99 { pt3dadd( -63.6434, -268.017, 26.2731, 0.81 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 60/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -58.9998, -265.673, 24.3297, 0.52 ) }
    dend_98 { pt3dadd( -58.9924, -266.962, 25.1699, 0.52 ) }
    dend_98 { pt3dadd( -59.025, -267.412, 25.462, 0.81 ) }
    dend_98 { pt3dadd( -59.316, -269.033, 26.6079, 0.29 ) }
    dend_98 { pt3dadd( -59.4037, -269.522, 26.9534, 0.59 ) }
    dend_98 { pt3dadd( -59.4739, -269.913, 27.2297, 0.66 ) }
    dend_98 { pt3dadd( -59.6287, -270.776, 27.8395, 0.22 ) }
    dend_98 { pt3dadd( -59.6677, -270.866, 27.9103, 0.22 ) }
    dend_98 { pt3dadd( -60.0668, -271.522, 28.4529, 0.59 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 69/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 197.236, 351.226, 57.4163, 0.37 ) }
    dend_35 { pt3dadd( 197.98, 353.482, 57.2576, 0.37 ) }
    dend_35 { pt3dadd( 198.564, 355.13, 57.3691, 0.37 ) }
    dend_35 { pt3dadd( 199.074, 356.338, 57.5267, 0.37 ) }
    dend_35 { pt3dadd( 199.413, 357.041, 57.6237, 0.81 ) }
    dend_35 { pt3dadd( 199.864, 357.819, 57.7095, 1.33 ) }
    dend_35 { pt3dadd( 200.32, 358.537, 57.7809, 1.33 ) }
    dend_35 { pt3dadd( 201.873, 360.577, 57.9777, 0.52 ) }
    dend_35 { pt3dadd( 202.671, 361.479, 58.0559, 0.52 ) }
    dend_35 { pt3dadd( 203.189, 362.015, 58.0864, 0.96 ) }
    dend_35 { pt3dadd( 204.571, 363.479, 58.2458, 0.44 ) }
    dend_35 { pt3dadd( 204.666, 363.585, 58.2583, 0.44 ) }
    dend_35 { pt3dadd( 205.344, 364.429, 58.265, 0.44 ) }
    dend_35 { pt3dadd( 205.725, 364.954, 58.2042, 0.74 ) }
    dend_35 { pt3dadd( 206.184, 365.696, 58.1206, 1.11 ) }
    dend_35 { pt3dadd( 207.132, 367.389, 57.7626, 0.59 ) }
    dend_35 { pt3dadd( 207.51, 368.061, 57.5378, 0.59 ) }
    dend_35 { pt3dadd( 208.369, 369.568, 56.8989, 0.96 ) }
    dend_35 { pt3dadd( 208.675, 370.109, 56.6418, 0.96 ) }
    dend_35 { pt3dadd( 209.501, 371.636, 55.8652, 0.59 ) }
    dend_35 { pt3dadd( 210.823, 374.133, 54.6256, 0.59 ) }
    dend_35 { pt3dadd( 211.763, 375.962, 53.7296, 0.52 ) }
    dend_35 { pt3dadd( 212.318, 377.094, 53.2671, 0.88 ) }
    dend_35 { pt3dadd( 212.59, 377.701, 53.0943, 0.88 ) }
    dend_35 { pt3dadd( 212.907, 378.585, 52.9074, 0.52 ) }
    dend_35 { pt3dadd( 213.285, 380.36, 52.7883, 0.52 ) }
    dend_35 { pt3dadd( 213.304, 380.586, 52.8316, 0.88 ) }
    dend_35 { pt3dadd( 213.282, 381.11, 53.0252, 1.25 ) }
    dend_35 { pt3dadd( 213.259, 381.424, 53.1683, 1.25 ) }
    dend_35 { pt3dadd( 213.115, 383.154, 53.8265, 0.52 ) }
    dend_35 { pt3dadd( 213.075, 383.482, 53.8773, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 0/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 197.236, 351.226, 57.4163, 0.37 ) }
    dend_34 { pt3dadd( 196.478, 351.572, 57.7987, 0.37 ) }
    dend_34 { pt3dadd( 196.122, 351.729, 57.9764, 0.37 ) }
    dend_34 { pt3dadd( 195.913, 351.818, 58.0803, 0.37 ) }
    dend_34 { pt3dadd( 195.516, 351.989, 58.2775, 0.37 ) }
    dend_34 { pt3dadd( 195.209, 352.121, 58.4299, 0.37 ) }
    dend_34 { pt3dadd( 194.787, 352.302, 58.6395, 0.37 ) }
    dend_34 { pt3dadd( 194.448, 352.452, 58.8091, 0.37 ) }
    dend_34 { pt3dadd( 194.392, 352.482, 58.8384, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 9/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 213.075, 383.482, 53.8773, 0.44 ) }
    dend_37 { pt3dadd( 213.107, 384.095, 53.5793, 0.44 ) }
    dend_37 { pt3dadd( 213.123, 384.404, 53.4293, 0.52 ) }
    dend_37 { pt3dadd( 213.141, 384.74, 53.2656, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 13/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 213.075, 383.482, 53.8773, 0.44 ) }
    dend_36 { pt3dadd( 212.483, 383.256, 53.9197, 0.44 ) }
    dend_36 { pt3dadd( 212.034, 383.073, 53.9551, 0.44 ) }
    dend_36 { pt3dadd( 211.65, 382.916, 53.9853, 0.37 ) }
    dend_36 { pt3dadd( 211.305, 382.776, 54.0125, 0.37 ) }
    dend_36 { pt3dadd( 210.837, 382.585, 54.0493, 0.37 ) }
    dend_36 { pt3dadd( 210.558, 382.472, 54.0712, 0.37 ) }
    dend_36 { pt3dadd( 210.426, 382.414, 54.0817, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 21/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 213.141, 384.74, 53.2656, 0.29 ) }
    dend_39 { pt3dadd( 213.812, 384.552, 53.3364, 0.29 ) }
    dend_39 { pt3dadd( 214.225, 384.436, 53.38, 0.29 ) }
    dend_39 { pt3dadd( 214.587, 384.334, 53.4182, 0.66 ) }
    dend_39 { pt3dadd( 215.083, 384.195, 53.4706, 0.52 ) }
    dend_39 { pt3dadd( 216.179, 383.887, 53.5863, 0.52 ) }
    dend_39 { pt3dadd( 216.779, 383.718, 53.6496, 0.52 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 28/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 213.141, 384.74, 53.2656, 0.52 ) }
    dend_38 { pt3dadd( 213.54, 385.459, 53.2608, 0.52 ) }
    dend_38 { pt3dadd( 213.82, 385.964, 53.2574, 0.52 ) }
    dend_38 { pt3dadd( 214.122, 386.508, 53.2537, 0.52 ) }
    dend_38 { pt3dadd( 214.161, 386.579, 53.2533, 0.52 ) }
    dend_38 { pt3dadd( 214.724, 387.594, 53.2464, 0.52 ) }
    dend_38 { pt3dadd( 214.998, 388.088, 53.2431, 0.52 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 35/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 216.779, 383.718, 53.6496, 0.44 ) }
    dend_41 { pt3dadd( 217.47, 384.44, 54.0653, 0.44 ) }
    dend_41 { pt3dadd( 217.867, 385.017, 54.3538, 0.44 ) }
    dend_41 { pt3dadd( 217.926, 385.123, 54.4021, 0.44 ) }
    dend_41 { pt3dadd( 218.055, 385.419, 54.5345, 0.88 ) }
    dend_41 { pt3dadd( 218.121, 385.594, 54.6279, 1.03 ) }
    dend_41 { pt3dadd( 218.454, 386.494, 55.1235, 0.37 ) }
    dend_41 { pt3dadd( 218.559, 386.817, 55.3032, 0.66 ) }
    dend_41 { pt3dadd( 218.663, 387.045, 55.4561, 1.25 ) }
    dend_41 { pt3dadd( 218.819, 387.376, 55.6885, 1.25 ) }
    dend_41 { pt3dadd( 219.373, 388.488, 56.5314, 0.66 ) }
    dend_41 { pt3dadd( 219.593, 388.876, 56.854, 0.66 ) }
    dend_41 { pt3dadd( 219.972, 389.377, 57.3374, 1.55 ) }
    dend_41 { pt3dadd( 220.618, 390.099, 58.079, 2.14 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 49/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 216.779, 383.718, 53.6496, 0.44 ) }
    dend_40 { pt3dadd( 216.795, 383.279, 53.3686, 0.44 ) }
    dend_40 { pt3dadd( 216.815, 382.74, 53.0234, 0.44 ) }
    dend_40 { pt3dadd( 216.826, 382.438, 52.8304, 0.44 ) }
    dend_40 { pt3dadd( 216.839, 382.076, 52.5989, 0.44 ) }
    dend_40 { pt3dadd( 216.854, 381.663, 52.3343, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_41 (entry count 55/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 220.618, 390.099, 58.079, 0.66 ) }
    dend_44 { pt3dadd( 219.625, 391.661, 57.8782, 0.66 ) }
    dend_44 { pt3dadd( 219.6, 391.702, 57.873, 0.66 ) }
    dend_44 { pt3dadd( 219.212, 392.312, 57.7946, 0.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 59/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 220.618, 390.099, 58.079, 0.96 ) }
    dend_43 { pt3dadd( 221.486, 391.027, 58.0373, 0.96 ) }
    dend_43 { pt3dadd( 221.958, 391.552, 57.979, 0.52 ) }
    dend_43 { pt3dadd( 222.444, 392.113, 57.9029, 0.52 ) }
    dend_43 { pt3dadd( 223.221, 393.169, 57.6703, 0.52 ) }
    dend_43 { pt3dadd( 224.031, 394.409, 57.3701, 0.59 ) }
    dend_43 { pt3dadd( 224.595, 395.369, 57.1193, 0.44 ) }
    dend_43 { pt3dadd( 224.984, 396.147, 56.8959, 1.11 ) }
    dend_43 { pt3dadd( 225.183, 396.61, 56.77, 1.47 ) }
    dend_43 { pt3dadd( 225.883, 398.469, 56.2721, 0.29 ) }
    dend_43 { pt3dadd( 226.111, 399.204, 56.0691, 0.29 ) }
    dend_43 { pt3dadd( 226.371, 400.334, 55.7739, 0.29 ) }
    dend_43 { pt3dadd( 226.498, 401.025, 55.6057, 0.37 ) }
    dend_43 { pt3dadd( 226.71, 402.072, 55.4157, 0.37 ) }
    dend_43 { pt3dadd( 226.739, 402.211, 55.3964, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 74/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 220.618, 390.099, 58.079, 0.66 ) }
    dend_42 { pt3dadd( 221.764, 389.856, 57.2648, 0.66 ) }
    dend_42 { pt3dadd( 222.457, 389.695, 56.7653, 0.52 ) }
    dend_42 { pt3dadd( 223.034, 389.56, 56.3493, 0.52 ) }
    dend_42 { pt3dadd( 223.652, 389.416, 55.9042, 0.52 ) }
    dend_42 { pt3dadd( 224.794, 389.149, 55.0808, 0.52 ) }
    dend_42 { pt3dadd( 225.344, 389.021, 54.6849, 0.52 ) }
    dend_42 { pt3dadd( 225.677, 388.926, 54.4578, 0.52 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 82/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 219.212, 392.312, 57.7946, 0.59 ) }
    dend_46 { pt3dadd( 219.751, 393.398, 58.3141, 0.59 ) }
    dend_46 { pt3dadd( 220.467, 395.093, 58.9186, 0.44 ) }
    dend_46 { pt3dadd( 221.005, 396.618, 59.3398, 0.44 ) }
    dend_46 { pt3dadd( 221.137, 397.031, 59.4364, 0.81 ) }
    dend_46 { pt3dadd( 221.318, 397.695, 59.5321, 0.81 ) }
    dend_46 { pt3dadd( 221.402, 398.051, 59.5649, 0.81 ) }
    dend_46 { pt3dadd( 221.591, 399.757, 59.4754, 0.44 ) }
    dend_46 { pt3dadd( 221.603, 400.649, 59.2938, 0.44 ) }
    dend_46 { pt3dadd( 221.601, 400.707, 59.2768, 0.44 ) }
    dend_46 { pt3dadd( 221.558, 401.933, 58.859, 0.44 ) }
    dend_46 { pt3dadd( 221.547, 402.23, 58.7441, 0.74 ) }
    dend_46 { pt3dadd( 221.544, 402.289, 58.7214, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 95/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 219.212, 392.312, 57.7946, 0.37 ) }
    dend_45 { pt3dadd( 218.644, 392.744, 60.1398, 0.37 ) }
    dend_45 { pt3dadd( 218.492, 392.86, 60.77, 0.37 ) }
    dend_45 { pt3dadd( 218.492, 392.86, 60.77, 0.66 ) }
    dend_45 { pt3dadd( 218.375, 392.949, 61.2545, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_45 { pt3dadd( 218.33, 392.983, 61.4393, 1.11 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_81, dend_60, dend_0, dend_112, dend_82, dend_68, dend_61, dend_20, dend_1, dend_114, dend_113, dend_101, dend_83, dend_78, dend_69, dend_65, dend_62, dend_47, dend_21, dend_11, dend_2, dend_116, dend_115, dend_103, dend_102, dend_85, dend_84, dend_80, dend_79, dend_71, dend_70, dend_67, dend_66, dend_64, dend_63, dend_59, dend_48, dend_23, dend_22, dend_19, dend_12, dend_4, dend_3, dend_120, dend_117, dend_105, dend_104, dend_87, dend_86, dend_73, dend_72, dend_50, dend_49, dend_25, dend_24, dend_18, dend_13, dend_10, dend_5, dend_122, dend_121, dend_119, dend_118, dend_107, dend_106, dend_89, dend_88, dend_75, dend_74, dend_52, dend_51, dend_27, dend_26, dend_15, dend_14, dend_7, dend_6, dend_126, dend_123, dend_109, dend_108, dend_100, dend_90, dend_77, dend_76, dend_54, dend_53, dend_29, dend_28, dend_17, dend_16, dend_9, dend_8, dend_128, dend_127, dend_125, dend_124, dend_111, dend_110, dend_95, dend_94, dend_91, dend_58, dend_55, dend_31, dend_30, dend_130, dend_129, dend_97, dend_96, dend_93, dend_92, dend_57, dend_56, dend_33, dend_32, dend_99, dend_98, dend_35, dend_34, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_44, dend_43, dend_42, dend_46, dend_45]}
    ModelViewParmSubset_2 = new SectionList()
    dend_81 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_112 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_114 ModelViewParmSubset_2.append()
    dend_113 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_116 ModelViewParmSubset_2.append()
    dend_115 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_120 ModelViewParmSubset_2.append()
    dend_117 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_122 ModelViewParmSubset_2.append()
    dend_121 ModelViewParmSubset_2.append()
    dend_119 ModelViewParmSubset_2.append()
    dend_118 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_126 ModelViewParmSubset_2.append()
    dend_123 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_128 ModelViewParmSubset_2.append()
    dend_127 ModelViewParmSubset_2.append()
    dend_125 ModelViewParmSubset_2.append()
    dend_124 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_111 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_130 ModelViewParmSubset_2.append()
    dend_129 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_81, dend_60, dend_0, dend_112, dend_82, dend_68, dend_61, dend_20, dend_1, dend_114, dend_113, dend_101, dend_83, dend_78, dend_69, dend_65, dend_62, dend_47, dend_21, dend_11, dend_2, dend_116, dend_115, dend_103, dend_102, dend_85, dend_84, dend_80, dend_79, dend_71, dend_70, dend_67, dend_66, dend_64, dend_63, dend_59, dend_48, dend_23, dend_22, dend_19, dend_12, dend_4, dend_3, dend_120, dend_117, dend_105, dend_104, dend_87, dend_86, dend_73, dend_72, dend_50, dend_49, dend_25, dend_24, dend_18, dend_13, dend_10, dend_5, dend_122, dend_121, dend_119, dend_118, dend_107, dend_106, dend_89, dend_88, dend_75, dend_74, dend_52, dend_51, dend_27, dend_26, dend_15, dend_14, dend_7, dend_6, dend_126, dend_123, dend_109, dend_108, dend_100, dend_90, dend_77, dend_76, dend_54, dend_53, dend_29, dend_28, dend_17, dend_16, dend_9, dend_8, dend_128, dend_127, dend_125, dend_124, dend_111, dend_110, dend_95, dend_94, dend_91, dend_58, dend_55, dend_31, dend_30, dend_130, dend_129, dend_97, dend_96, dend_93, dend_92, dend_57, dend_56, dend_33, dend_32, dend_99, dend_98, dend_35, dend_34, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_44, dend_43, dend_42, dend_46, dend_45]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_112 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_114 ModelViewParmSubset_4.append()
    dend_113 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_116 ModelViewParmSubset_4.append()
    dend_115 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_120 ModelViewParmSubset_4.append()
    dend_117 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_122 ModelViewParmSubset_4.append()
    dend_121 ModelViewParmSubset_4.append()
    dend_119 ModelViewParmSubset_4.append()
    dend_118 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_107 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_126 ModelViewParmSubset_4.append()
    dend_123 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_128 ModelViewParmSubset_4.append()
    dend_127 ModelViewParmSubset_4.append()
    dend_125 ModelViewParmSubset_4.append()
    dend_124 ModelViewParmSubset_4.append()
    dend_111 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_130 ModelViewParmSubset_4.append()
    dend_129 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_112]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_112 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_82 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_114]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_114 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_101 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_83 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_78 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_69 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_62 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_21 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_11 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_116]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_116 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_67 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_64 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_48 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_23 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_4 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_73 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_50 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_5 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_7 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_54 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_9 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_55 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_116 = new SectionList()
    dend_57 OneSecGrp_SectionRef_116.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_81 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_20 OneSecGrp_SectionRef_10.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_60 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_68 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_61 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_59 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_65 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_66 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_22 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_49 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_63 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_102 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_103 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_104 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_105 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_107 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_106 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_109 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_108 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_110 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_111]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_111 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_80 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_113]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_113 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_84 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_79 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_85 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_86 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_70 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_71 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_72 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_87 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_88 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_115]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_115 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_89 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_90 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_91 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_95 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_115 = new SectionList()
    dend_92 OneSecGrp_SectionRef_115.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_93 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_97 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_100 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_94 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_120 = new SectionList()
    dend_99 OneSecGrp_SectionRef_120.append()

    // Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_121 = new SectionList()
    dend_98 OneSecGrp_SectionRef_121.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_96 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_52 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_51 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_53 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_120]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_120 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_117]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_117 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_118]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_118 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_119]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_119 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_74 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_121]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_121 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_122]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_122 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_126]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_126 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_128]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_128 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_129]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_129 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_24 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_3 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_13 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_123]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_123 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_14 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_124]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_124 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_130]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_130 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_75 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_127]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_127 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_76 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_125]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_125 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_15 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_27 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_77 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_26 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_28 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_16 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_29 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_31 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_17 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_58 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_118 = new SectionList()
    dend_33 OneSecGrp_SectionRef_118.append()

    // Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_123 = new SectionList()
    dend_34 OneSecGrp_SectionRef_123.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_30 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_119 = new SectionList()
    dend_32 OneSecGrp_SectionRef_119.append()

    // Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_122 = new SectionList()
    dend_35 OneSecGrp_SectionRef_122.append()

    // Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_124 = new SectionList()
    dend_37 OneSecGrp_SectionRef_124.append()

    // Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_125 = new SectionList()
    dend_36 OneSecGrp_SectionRef_125.append()

    // Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_126 = new SectionList()
    dend_39 OneSecGrp_SectionRef_126.append()

    // Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_127 = new SectionList()
    dend_38 OneSecGrp_SectionRef_127.append()

    // Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_129 = new SectionList()
    dend_40 OneSecGrp_SectionRef_129.append()

    // Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_128 = new SectionList()
    dend_41 OneSecGrp_SectionRef_128.append()

    // Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_117 = new SectionList()
    dend_56 OneSecGrp_SectionRef_117.append()

    // Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_130 = new SectionList()
    dend_44 OneSecGrp_SectionRef_130.append()

    // Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_132 = new SectionList()
    dend_42 OneSecGrp_SectionRef_132.append()

    // Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_134 = new SectionList()
    dend_45 OneSecGrp_SectionRef_134.append()

    // Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_133 = new SectionList()
    dend_46 OneSecGrp_SectionRef_133.append()

    // Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_131 = new SectionList()
    dend_43 OneSecGrp_SectionRef_131.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_6 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_8 OneSecGrp_SectionRef_96.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()
    dend_111 basal.append()
    dend_112 basal.append()
    dend_113 basal.append()
    dend_114 basal.append()
    dend_115 basal.append()
    dend_116 basal.append()
    dend_117 basal.append()
    dend_118 basal.append()
    dend_119 basal.append()
    dend_120 basal.append()
    dend_121 basal.append()
    dend_122 basal.append()
    dend_123 basal.append()
    dend_124 basal.append()
    dend_125 basal.append()
    dend_126 basal.append()
    dend_127 basal.append()
    dend_128 basal.append()
    dend_129 basal.append()
    dend_130 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_113, dend_113, dend_113, dend_113, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_102, dend_102, dend_102, dend_102, dend_102, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_120, dend_120, dend_120, dend_117, dend_117, dend_117, dend_117, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_126, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_128, dend_128, dend_128, dend_128, dend_128, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_124, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_95, dend_95, dend_95, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_91, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_129, dend_129, dend_129, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_126 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_91 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_45 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_112 nseg = 11
    dend_82 nseg = 3
    dend_1 nseg = 3
    dend_114 nseg = 3
    dend_101 nseg = 5
    dend_83 nseg = 7
    dend_78 nseg = 9
    dend_69 nseg = 11
    dend_62 nseg = 3
    dend_21 nseg = 3
    dend_11 nseg = 11
    dend_2 nseg = 15
    dend_116 nseg = 3
    dend_67 nseg = 5
    dend_64 nseg = 3
    dend_48 nseg = 3
    dend_23 nseg = 13
    dend_19 nseg = 3
    dend_12 nseg = 3
    dend_4 nseg = 11
    dend_73 nseg = 5
    dend_50 nseg = 11
    dend_5 nseg = 5
    dend_7 nseg = 5
    dend_54 nseg = 5
    dend_9 nseg = 3
    dend_55 nseg = 3
    dend_57 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_BTC_8807af3a2b_0_0


